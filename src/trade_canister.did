type Trade = record {
    "id": text;
    "hostData": vec Item;
    "guestData": vec Item;
    "hostEscrow": vec Item;
    "guestEscrow": vec Item;
    "hostAccept": bool;
    "guestAccept": bool;
    "host": text;
    "guest": text;
    "fulfilled": bool;
};

type Item = record {
    "id": text;
    "canisterId": text;
    "collection": text;
    "name": text;
    "index": text;
    "url": text;
    "slot": nat32;
};

service: {
    "get_trade_by_id": (text) -> (Trade) query;
    "get_all_trades": () -> (vec Trade) query;
    "get_escrow_items": (text, text) -> (vec Item) query;
    "get_escrow_items_self": (text, text) -> (vec Item) query;
    "create_trade": (text) -> (Trade);
    "accept": (text, text) -> (Trade);
    "cancel": (text, text) -> (Trade);
    "delete_trade": (text) -> (Trade);
    "join_trade": (text, text) -> (Trade);
    "leave_trade": (text, text) -> (Trade);
    "add_item_to_trade": (text, text, Item) -> (Trade);
    "remove_item_from_trade": (text, text, text) -> (Trade);
    "add_item_to_escrow": (text, text, Item) -> (Trade);
    "remove_item_from_escrow": (text, text, text) -> (Trade);
    "withdraw_from_escrow": (text, text, text) -> (Item);
}
