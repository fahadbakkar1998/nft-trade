import * as React from "react";
import React__default, { useLayoutEffect, forwardRef, useContext, createContext, createElement, Fragment as Fragment$1, useRef, Children, isValidElement, cloneElement, memo, useEffect, useState, useCallback, useMemo, useDebugValue, Component } from "react";
var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function getDefaultExportFromCjs(Z) {
  return Z && Z.__esModule && Object.prototype.hasOwnProperty.call(Z, "default") ? Z.default : Z;
}
function getAugmentedNamespace(Z) {
  var ee = Z.default;
  if (typeof ee == "function") {
    var ne = function() {
      return ee.apply(this, arguments);
    };
    ne.prototype = ee.prototype;
  } else
    ne = {};
  return Object.defineProperty(ne, "__esModule", { value: !0 }), Object.keys(Z).forEach(function(ie) {
    var oe = Object.getOwnPropertyDescriptor(Z, ie);
    Object.defineProperty(ne, ie, oe.get ? oe : {
      enumerable: !0,
      get: function() {
        return Z[ie];
      }
    });
  }), ne;
}
var buffer$1 = {}, base64Js = {};
base64Js.byteLength = byteLength;
base64Js.toByteArray = toByteArray;
base64Js.fromByteArray = fromByteArray;
var lookup = [], revLookup = [], Arr = typeof Uint8Array < "u" ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var i$1 = 0, len = code.length; i$1 < len; ++i$1)
  lookup[i$1] = code[i$1], revLookup[code.charCodeAt(i$1)] = i$1;
revLookup["-".charCodeAt(0)] = 62;
revLookup["_".charCodeAt(0)] = 63;
function getLens(Z) {
  var ee = Z.length;
  if (ee % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var ne = Z.indexOf("=");
  ne === -1 && (ne = ee);
  var ie = ne === ee ? 0 : 4 - ne % 4;
  return [ne, ie];
}
function byteLength(Z) {
  var ee = getLens(Z), ne = ee[0], ie = ee[1];
  return (ne + ie) * 3 / 4 - ie;
}
function _byteLength(Z, ee, ne) {
  return (ee + ne) * 3 / 4 - ne;
}
function toByteArray(Z) {
  var ee, ne = getLens(Z), ie = ne[0], oe = ne[1], ce = new Arr(_byteLength(Z, ie, oe)), he = 0, fe = oe > 0 ? ie - 4 : ie, xe;
  for (xe = 0; xe < fe; xe += 4)
    ee = revLookup[Z.charCodeAt(xe)] << 18 | revLookup[Z.charCodeAt(xe + 1)] << 12 | revLookup[Z.charCodeAt(xe + 2)] << 6 | revLookup[Z.charCodeAt(xe + 3)], ce[he++] = ee >> 16 & 255, ce[he++] = ee >> 8 & 255, ce[he++] = ee & 255;
  return oe === 2 && (ee = revLookup[Z.charCodeAt(xe)] << 2 | revLookup[Z.charCodeAt(xe + 1)] >> 4, ce[he++] = ee & 255), oe === 1 && (ee = revLookup[Z.charCodeAt(xe)] << 10 | revLookup[Z.charCodeAt(xe + 1)] << 4 | revLookup[Z.charCodeAt(xe + 2)] >> 2, ce[he++] = ee >> 8 & 255, ce[he++] = ee & 255), ce;
}
function tripletToBase64(Z) {
  return lookup[Z >> 18 & 63] + lookup[Z >> 12 & 63] + lookup[Z >> 6 & 63] + lookup[Z & 63];
}
function encodeChunk(Z, ee, ne) {
  for (var ie, oe = [], ce = ee; ce < ne; ce += 3)
    ie = (Z[ce] << 16 & 16711680) + (Z[ce + 1] << 8 & 65280) + (Z[ce + 2] & 255), oe.push(tripletToBase64(ie));
  return oe.join("");
}
function fromByteArray(Z) {
  for (var ee, ne = Z.length, ie = ne % 3, oe = [], ce = 16383, he = 0, fe = ne - ie; he < fe; he += ce)
    oe.push(encodeChunk(Z, he, he + ce > fe ? fe : he + ce));
  return ie === 1 ? (ee = Z[ne - 1], oe.push(
    lookup[ee >> 2] + lookup[ee << 4 & 63] + "=="
  )) : ie === 2 && (ee = (Z[ne - 2] << 8) + Z[ne - 1], oe.push(
    lookup[ee >> 10] + lookup[ee >> 4 & 63] + lookup[ee << 2 & 63] + "="
  )), oe.join("");
}
var ieee754$1 = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
ieee754$1.read = function(Z, ee, ne, ie, oe) {
  var ce, he, fe = oe * 8 - ie - 1, xe = (1 << fe) - 1, Ae = xe >> 1, Ee = -7, ye = ne ? oe - 1 : 0, ge = ne ? -1 : 1, me = Z[ee + ye];
  for (ye += ge, ce = me & (1 << -Ee) - 1, me >>= -Ee, Ee += fe; Ee > 0; ce = ce * 256 + Z[ee + ye], ye += ge, Ee -= 8)
    ;
  for (he = ce & (1 << -Ee) - 1, ce >>= -Ee, Ee += ie; Ee > 0; he = he * 256 + Z[ee + ye], ye += ge, Ee -= 8)
    ;
  if (ce === 0)
    ce = 1 - Ae;
  else {
    if (ce === xe)
      return he ? NaN : (me ? -1 : 1) * (1 / 0);
    he = he + Math.pow(2, ie), ce = ce - Ae;
  }
  return (me ? -1 : 1) * he * Math.pow(2, ce - ie);
};
ieee754$1.write = function(Z, ee, ne, ie, oe, ce) {
  var he, fe, xe, Ae = ce * 8 - oe - 1, Ee = (1 << Ae) - 1, ye = Ee >> 1, ge = oe === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, me = ie ? 0 : ce - 1, Ce = ie ? 1 : -1, Ie = ee < 0 || ee === 0 && 1 / ee < 0 ? 1 : 0;
  for (ee = Math.abs(ee), isNaN(ee) || ee === 1 / 0 ? (fe = isNaN(ee) ? 1 : 0, he = Ee) : (he = Math.floor(Math.log(ee) / Math.LN2), ee * (xe = Math.pow(2, -he)) < 1 && (he--, xe *= 2), he + ye >= 1 ? ee += ge / xe : ee += ge * Math.pow(2, 1 - ye), ee * xe >= 2 && (he++, xe /= 2), he + ye >= Ee ? (fe = 0, he = Ee) : he + ye >= 1 ? (fe = (ee * xe - 1) * Math.pow(2, oe), he = he + ye) : (fe = ee * Math.pow(2, ye - 1) * Math.pow(2, oe), he = 0)); oe >= 8; Z[ne + me] = fe & 255, me += Ce, fe /= 256, oe -= 8)
    ;
  for (he = he << oe | fe, Ae += oe; Ae > 0; Z[ne + me] = he & 255, me += Ce, he /= 256, Ae -= 8)
    ;
  Z[ne + me - Ce] |= Ie * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(Z) {
  var ee = base64Js, ne = ieee754$1, ie = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  Z.Buffer = fe, Z.SlowBuffer = Ne, Z.INSPECT_MAX_BYTES = 50;
  var oe = 2147483647;
  Z.kMaxLength = oe, fe.TYPED_ARRAY_SUPPORT = ce(), !fe.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function ce() {
    try {
      var _e = new Uint8Array(1), Be = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(Be, Uint8Array.prototype), Object.setPrototypeOf(_e, Be), _e.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(fe.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (!!fe.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(fe.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (!!fe.isBuffer(this))
        return this.byteOffset;
    }
  });
  function he(_e) {
    if (_e > oe)
      throw new RangeError('The value "' + _e + '" is invalid for option "size"');
    var Be = new Uint8Array(_e);
    return Object.setPrototypeOf(Be, fe.prototype), Be;
  }
  function fe(_e, Be, be) {
    if (typeof _e == "number") {
      if (typeof Be == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return ye(_e);
    }
    return xe(_e, Be, be);
  }
  fe.poolSize = 8192;
  function xe(_e, Be, be) {
    if (typeof _e == "string")
      return ge(_e, Be);
    if (ArrayBuffer.isView(_e))
      return Ce(_e);
    if (_e == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _e
      );
    if (Et(_e, ArrayBuffer) || _e && Et(_e.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Et(_e, SharedArrayBuffer) || _e && Et(_e.buffer, SharedArrayBuffer)))
      return Ie(_e, Be, be);
    if (typeof _e == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    var ke = _e.valueOf && _e.valueOf();
    if (ke != null && ke !== _e)
      return fe.from(ke, Be, be);
    var Ve = Oe(_e);
    if (Ve)
      return Ve;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof _e[Symbol.toPrimitive] == "function")
      return fe.from(
        _e[Symbol.toPrimitive]("string"),
        Be,
        be
      );
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _e
    );
  }
  fe.from = function(_e, Be, be) {
    return xe(_e, Be, be);
  }, Object.setPrototypeOf(fe.prototype, Uint8Array.prototype), Object.setPrototypeOf(fe, Uint8Array);
  function Ae(_e) {
    if (typeof _e != "number")
      throw new TypeError('"size" argument must be of type number');
    if (_e < 0)
      throw new RangeError('The value "' + _e + '" is invalid for option "size"');
  }
  function Ee(_e, Be, be) {
    return Ae(_e), _e <= 0 ? he(_e) : Be !== void 0 ? typeof be == "string" ? he(_e).fill(Be, be) : he(_e).fill(Be) : he(_e);
  }
  fe.alloc = function(_e, Be, be) {
    return Ee(_e, Be, be);
  };
  function ye(_e) {
    return Ae(_e), he(_e < 0 ? 0 : He(_e) | 0);
  }
  fe.allocUnsafe = function(_e) {
    return ye(_e);
  }, fe.allocUnsafeSlow = function(_e) {
    return ye(_e);
  };
  function ge(_e, Be) {
    if ((typeof Be != "string" || Be === "") && (Be = "utf8"), !fe.isEncoding(Be))
      throw new TypeError("Unknown encoding: " + Be);
    var be = Pe(_e, Be) | 0, ke = he(be), Ve = ke.write(_e, Be);
    return Ve !== be && (ke = ke.slice(0, Ve)), ke;
  }
  function me(_e) {
    for (var Be = _e.length < 0 ? 0 : He(_e.length) | 0, be = he(Be), ke = 0; ke < Be; ke += 1)
      be[ke] = _e[ke] & 255;
    return be;
  }
  function Ce(_e) {
    if (Et(_e, Uint8Array)) {
      var Be = new Uint8Array(_e);
      return Ie(Be.buffer, Be.byteOffset, Be.byteLength);
    }
    return me(_e);
  }
  function Ie(_e, Be, be) {
    if (Be < 0 || _e.byteLength < Be)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (_e.byteLength < Be + (be || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    var ke;
    return Be === void 0 && be === void 0 ? ke = new Uint8Array(_e) : be === void 0 ? ke = new Uint8Array(_e, Be) : ke = new Uint8Array(_e, Be, be), Object.setPrototypeOf(ke, fe.prototype), ke;
  }
  function Oe(_e) {
    if (fe.isBuffer(_e)) {
      var Be = He(_e.length) | 0, be = he(Be);
      return be.length === 0 || _e.copy(be, 0, 0, Be), be;
    }
    if (_e.length !== void 0)
      return typeof _e.length != "number" || lt(_e.length) ? he(0) : me(_e);
    if (_e.type === "Buffer" && Array.isArray(_e.data))
      return me(_e.data);
  }
  function He(_e) {
    if (_e >= oe)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + oe.toString(16) + " bytes");
    return _e | 0;
  }
  function Ne(_e) {
    return +_e != _e && (_e = 0), fe.alloc(+_e);
  }
  fe.isBuffer = function(Be) {
    return Be != null && Be._isBuffer === !0 && Be !== fe.prototype;
  }, fe.compare = function(Be, be) {
    if (Et(Be, Uint8Array) && (Be = fe.from(Be, Be.offset, Be.byteLength)), Et(be, Uint8Array) && (be = fe.from(be, be.offset, be.byteLength)), !fe.isBuffer(Be) || !fe.isBuffer(be))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (Be === be)
      return 0;
    for (var ke = Be.length, Ve = be.length, Je = 0, at = Math.min(ke, Ve); Je < at; ++Je)
      if (Be[Je] !== be[Je]) {
        ke = Be[Je], Ve = be[Je];
        break;
      }
    return ke < Ve ? -1 : Ve < ke ? 1 : 0;
  }, fe.isEncoding = function(Be) {
    switch (String(Be).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, fe.concat = function(Be, be) {
    if (!Array.isArray(Be))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (Be.length === 0)
      return fe.alloc(0);
    var ke;
    if (be === void 0)
      for (be = 0, ke = 0; ke < Be.length; ++ke)
        be += Be[ke].length;
    var Ve = fe.allocUnsafe(be), Je = 0;
    for (ke = 0; ke < Be.length; ++ke) {
      var at = Be[ke];
      if (Et(at, Uint8Array))
        Je + at.length > Ve.length ? fe.from(at).copy(Ve, Je) : Uint8Array.prototype.set.call(
          Ve,
          at,
          Je
        );
      else if (fe.isBuffer(at))
        at.copy(Ve, Je);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Je += at.length;
    }
    return Ve;
  };
  function Pe(_e, Be) {
    if (fe.isBuffer(_e))
      return _e.length;
    if (ArrayBuffer.isView(_e) || Et(_e, ArrayBuffer))
      return _e.byteLength;
    if (typeof _e != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof _e
      );
    var be = _e.length, ke = arguments.length > 2 && arguments[2] === !0;
    if (!ke && be === 0)
      return 0;
    for (var Ve = !1; ; )
      switch (Be) {
        case "ascii":
        case "latin1":
        case "binary":
          return be;
        case "utf8":
        case "utf-8":
          return vt(_e).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return be * 2;
        case "hex":
          return be >>> 1;
        case "base64":
          return tt(_e).length;
        default:
          if (Ve)
            return ke ? -1 : vt(_e).length;
          Be = ("" + Be).toLowerCase(), Ve = !0;
      }
  }
  fe.byteLength = Pe;
  function Fe(_e, Be, be) {
    var ke = !1;
    if ((Be === void 0 || Be < 0) && (Be = 0), Be > this.length || ((be === void 0 || be > this.length) && (be = this.length), be <= 0) || (be >>>= 0, Be >>>= 0, be <= Be))
      return "";
    for (_e || (_e = "utf8"); ; )
      switch (_e) {
        case "hex":
          return Zt(this, Be, be);
        case "utf8":
        case "utf-8":
          return At(this, Be, be);
        case "ascii":
          return Xt(this, Be, be);
        case "latin1":
        case "binary":
          return Lt(this, Be, be);
        case "base64":
          return Ft(this, Be, be);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Gt(this, Be, be);
        default:
          if (ke)
            throw new TypeError("Unknown encoding: " + _e);
          _e = (_e + "").toLowerCase(), ke = !0;
      }
  }
  fe.prototype._isBuffer = !0;
  function Le(_e, Be, be) {
    var ke = _e[Be];
    _e[Be] = _e[be], _e[be] = ke;
  }
  fe.prototype.swap16 = function() {
    var Be = this.length;
    if (Be % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var be = 0; be < Be; be += 2)
      Le(this, be, be + 1);
    return this;
  }, fe.prototype.swap32 = function() {
    var Be = this.length;
    if (Be % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var be = 0; be < Be; be += 4)
      Le(this, be, be + 3), Le(this, be + 1, be + 2);
    return this;
  }, fe.prototype.swap64 = function() {
    var Be = this.length;
    if (Be % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var be = 0; be < Be; be += 8)
      Le(this, be, be + 7), Le(this, be + 1, be + 6), Le(this, be + 2, be + 5), Le(this, be + 3, be + 4);
    return this;
  }, fe.prototype.toString = function() {
    var Be = this.length;
    return Be === 0 ? "" : arguments.length === 0 ? At(this, 0, Be) : Fe.apply(this, arguments);
  }, fe.prototype.toLocaleString = fe.prototype.toString, fe.prototype.equals = function(Be) {
    if (!fe.isBuffer(Be))
      throw new TypeError("Argument must be a Buffer");
    return this === Be ? !0 : fe.compare(this, Be) === 0;
  }, fe.prototype.inspect = function() {
    var Be = "", be = Z.INSPECT_MAX_BYTES;
    return Be = this.toString("hex", 0, be).replace(/(.{2})/g, "$1 ").trim(), this.length > be && (Be += " ... "), "<Buffer " + Be + ">";
  }, ie && (fe.prototype[ie] = fe.prototype.inspect), fe.prototype.compare = function(Be, be, ke, Ve, Je) {
    if (Et(Be, Uint8Array) && (Be = fe.from(Be, Be.offset, Be.byteLength)), !fe.isBuffer(Be))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Be
      );
    if (be === void 0 && (be = 0), ke === void 0 && (ke = Be ? Be.length : 0), Ve === void 0 && (Ve = 0), Je === void 0 && (Je = this.length), be < 0 || ke > Be.length || Ve < 0 || Je > this.length)
      throw new RangeError("out of range index");
    if (Ve >= Je && be >= ke)
      return 0;
    if (Ve >= Je)
      return -1;
    if (be >= ke)
      return 1;
    if (be >>>= 0, ke >>>= 0, Ve >>>= 0, Je >>>= 0, this === Be)
      return 0;
    for (var at = Je - Ve, Tt = ke - be, Dt = Math.min(at, Tt), zt = this.slice(Ve, Je), Yt = Be.slice(be, ke), Ue = 0; Ue < Dt; ++Ue)
      if (zt[Ue] !== Yt[Ue]) {
        at = zt[Ue], Tt = Yt[Ue];
        break;
      }
    return at < Tt ? -1 : Tt < at ? 1 : 0;
  };
  function We(_e, Be, be, ke, Ve) {
    if (_e.length === 0)
      return -1;
    if (typeof be == "string" ? (ke = be, be = 0) : be > 2147483647 ? be = 2147483647 : be < -2147483648 && (be = -2147483648), be = +be, lt(be) && (be = Ve ? 0 : _e.length - 1), be < 0 && (be = _e.length + be), be >= _e.length) {
      if (Ve)
        return -1;
      be = _e.length - 1;
    } else if (be < 0)
      if (Ve)
        be = 0;
      else
        return -1;
    if (typeof Be == "string" && (Be = fe.from(Be, ke)), fe.isBuffer(Be))
      return Be.length === 0 ? -1 : rt(_e, Be, be, ke, Ve);
    if (typeof Be == "number")
      return Be = Be & 255, typeof Uint8Array.prototype.indexOf == "function" ? Ve ? Uint8Array.prototype.indexOf.call(_e, Be, be) : Uint8Array.prototype.lastIndexOf.call(_e, Be, be) : rt(_e, [Be], be, ke, Ve);
    throw new TypeError("val must be string, number or Buffer");
  }
  function rt(_e, Be, be, ke, Ve) {
    var Je = 1, at = _e.length, Tt = Be.length;
    if (ke !== void 0 && (ke = String(ke).toLowerCase(), ke === "ucs2" || ke === "ucs-2" || ke === "utf16le" || ke === "utf-16le")) {
      if (_e.length < 2 || Be.length < 2)
        return -1;
      Je = 2, at /= 2, Tt /= 2, be /= 2;
    }
    function Dt(Re, it) {
      return Je === 1 ? Re[it] : Re.readUInt16BE(it * Je);
    }
    var zt;
    if (Ve) {
      var Yt = -1;
      for (zt = be; zt < at; zt++)
        if (Dt(_e, zt) === Dt(Be, Yt === -1 ? 0 : zt - Yt)) {
          if (Yt === -1 && (Yt = zt), zt - Yt + 1 === Tt)
            return Yt * Je;
        } else
          Yt !== -1 && (zt -= zt - Yt), Yt = -1;
    } else
      for (be + Tt > at && (be = at - Tt), zt = be; zt >= 0; zt--) {
        for (var Ue = !0, Te = 0; Te < Tt; Te++)
          if (Dt(_e, zt + Te) !== Dt(Be, Te)) {
            Ue = !1;
            break;
          }
        if (Ue)
          return zt;
      }
    return -1;
  }
  fe.prototype.includes = function(Be, be, ke) {
    return this.indexOf(Be, be, ke) !== -1;
  }, fe.prototype.indexOf = function(Be, be, ke) {
    return We(this, Be, be, ke, !0);
  }, fe.prototype.lastIndexOf = function(Be, be, ke) {
    return We(this, Be, be, ke, !1);
  };
  function gt(_e, Be, be, ke) {
    be = Number(be) || 0;
    var Ve = _e.length - be;
    ke ? (ke = Number(ke), ke > Ve && (ke = Ve)) : ke = Ve;
    var Je = Be.length;
    ke > Je / 2 && (ke = Je / 2);
    for (var at = 0; at < ke; ++at) {
      var Tt = parseInt(Be.substr(at * 2, 2), 16);
      if (lt(Tt))
        return at;
      _e[be + at] = Tt;
    }
    return at;
  }
  function kt(_e, Be, be, ke) {
    return et(vt(Be, _e.length - be), _e, be, ke);
  }
  function Ke(_e, Be, be, ke) {
    return et(Ut(Be), _e, be, ke);
  }
  function ht(_e, Be, be, ke) {
    return et(tt(Be), _e, be, ke);
  }
  function Nt(_e, Be, be, ke) {
    return et(Xe(Be, _e.length - be), _e, be, ke);
  }
  fe.prototype.write = function(Be, be, ke, Ve) {
    if (be === void 0)
      Ve = "utf8", ke = this.length, be = 0;
    else if (ke === void 0 && typeof be == "string")
      Ve = be, ke = this.length, be = 0;
    else if (isFinite(be))
      be = be >>> 0, isFinite(ke) ? (ke = ke >>> 0, Ve === void 0 && (Ve = "utf8")) : (Ve = ke, ke = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    var Je = this.length - be;
    if ((ke === void 0 || ke > Je) && (ke = Je), Be.length > 0 && (ke < 0 || be < 0) || be > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    Ve || (Ve = "utf8");
    for (var at = !1; ; )
      switch (Ve) {
        case "hex":
          return gt(this, Be, be, ke);
        case "utf8":
        case "utf-8":
          return kt(this, Be, be, ke);
        case "ascii":
        case "latin1":
        case "binary":
          return Ke(this, Be, be, ke);
        case "base64":
          return ht(this, Be, be, ke);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Nt(this, Be, be, ke);
        default:
          if (at)
            throw new TypeError("Unknown encoding: " + Ve);
          Ve = ("" + Ve).toLowerCase(), at = !0;
      }
  }, fe.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function Ft(_e, Be, be) {
    return Be === 0 && be === _e.length ? ee.fromByteArray(_e) : ee.fromByteArray(_e.slice(Be, be));
  }
  function At(_e, Be, be) {
    be = Math.min(_e.length, be);
    for (var ke = [], Ve = Be; Ve < be; ) {
      var Je = _e[Ve], at = null, Tt = Je > 239 ? 4 : Je > 223 ? 3 : Je > 191 ? 2 : 1;
      if (Ve + Tt <= be) {
        var Dt, zt, Yt, Ue;
        switch (Tt) {
          case 1:
            Je < 128 && (at = Je);
            break;
          case 2:
            Dt = _e[Ve + 1], (Dt & 192) === 128 && (Ue = (Je & 31) << 6 | Dt & 63, Ue > 127 && (at = Ue));
            break;
          case 3:
            Dt = _e[Ve + 1], zt = _e[Ve + 2], (Dt & 192) === 128 && (zt & 192) === 128 && (Ue = (Je & 15) << 12 | (Dt & 63) << 6 | zt & 63, Ue > 2047 && (Ue < 55296 || Ue > 57343) && (at = Ue));
            break;
          case 4:
            Dt = _e[Ve + 1], zt = _e[Ve + 2], Yt = _e[Ve + 3], (Dt & 192) === 128 && (zt & 192) === 128 && (Yt & 192) === 128 && (Ue = (Je & 15) << 18 | (Dt & 63) << 12 | (zt & 63) << 6 | Yt & 63, Ue > 65535 && Ue < 1114112 && (at = Ue));
        }
      }
      at === null ? (at = 65533, Tt = 1) : at > 65535 && (at -= 65536, ke.push(at >>> 10 & 1023 | 55296), at = 56320 | at & 1023), ke.push(at), Ve += Tt;
    }
    return Vt(ke);
  }
  var St = 4096;
  function Vt(_e) {
    var Be = _e.length;
    if (Be <= St)
      return String.fromCharCode.apply(String, _e);
    for (var be = "", ke = 0; ke < Be; )
      be += String.fromCharCode.apply(
        String,
        _e.slice(ke, ke += St)
      );
    return be;
  }
  function Xt(_e, Be, be) {
    var ke = "";
    be = Math.min(_e.length, be);
    for (var Ve = Be; Ve < be; ++Ve)
      ke += String.fromCharCode(_e[Ve] & 127);
    return ke;
  }
  function Lt(_e, Be, be) {
    var ke = "";
    be = Math.min(_e.length, be);
    for (var Ve = Be; Ve < be; ++Ve)
      ke += String.fromCharCode(_e[Ve]);
    return ke;
  }
  function Zt(_e, Be, be) {
    var ke = _e.length;
    (!Be || Be < 0) && (Be = 0), (!be || be < 0 || be > ke) && (be = ke);
    for (var Ve = "", Je = Be; Je < be; ++Je)
      Ve += $e[_e[Je]];
    return Ve;
  }
  function Gt(_e, Be, be) {
    for (var ke = _e.slice(Be, be), Ve = "", Je = 0; Je < ke.length - 1; Je += 2)
      Ve += String.fromCharCode(ke[Je] + ke[Je + 1] * 256);
    return Ve;
  }
  fe.prototype.slice = function(Be, be) {
    var ke = this.length;
    Be = ~~Be, be = be === void 0 ? ke : ~~be, Be < 0 ? (Be += ke, Be < 0 && (Be = 0)) : Be > ke && (Be = ke), be < 0 ? (be += ke, be < 0 && (be = 0)) : be > ke && (be = ke), be < Be && (be = Be);
    var Ve = this.subarray(Be, be);
    return Object.setPrototypeOf(Ve, fe.prototype), Ve;
  };
  function pt(_e, Be, be) {
    if (_e % 1 !== 0 || _e < 0)
      throw new RangeError("offset is not uint");
    if (_e + Be > be)
      throw new RangeError("Trying to access beyond buffer length");
  }
  fe.prototype.readUintLE = fe.prototype.readUIntLE = function(Be, be, ke) {
    Be = Be >>> 0, be = be >>> 0, ke || pt(Be, be, this.length);
    for (var Ve = this[Be], Je = 1, at = 0; ++at < be && (Je *= 256); )
      Ve += this[Be + at] * Je;
    return Ve;
  }, fe.prototype.readUintBE = fe.prototype.readUIntBE = function(Be, be, ke) {
    Be = Be >>> 0, be = be >>> 0, ke || pt(Be, be, this.length);
    for (var Ve = this[Be + --be], Je = 1; be > 0 && (Je *= 256); )
      Ve += this[Be + --be] * Je;
    return Ve;
  }, fe.prototype.readUint8 = fe.prototype.readUInt8 = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 1, this.length), this[Be];
  }, fe.prototype.readUint16LE = fe.prototype.readUInt16LE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 2, this.length), this[Be] | this[Be + 1] << 8;
  }, fe.prototype.readUint16BE = fe.prototype.readUInt16BE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 2, this.length), this[Be] << 8 | this[Be + 1];
  }, fe.prototype.readUint32LE = fe.prototype.readUInt32LE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 4, this.length), (this[Be] | this[Be + 1] << 8 | this[Be + 2] << 16) + this[Be + 3] * 16777216;
  }, fe.prototype.readUint32BE = fe.prototype.readUInt32BE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 4, this.length), this[Be] * 16777216 + (this[Be + 1] << 16 | this[Be + 2] << 8 | this[Be + 3]);
  }, fe.prototype.readIntLE = function(Be, be, ke) {
    Be = Be >>> 0, be = be >>> 0, ke || pt(Be, be, this.length);
    for (var Ve = this[Be], Je = 1, at = 0; ++at < be && (Je *= 256); )
      Ve += this[Be + at] * Je;
    return Je *= 128, Ve >= Je && (Ve -= Math.pow(2, 8 * be)), Ve;
  }, fe.prototype.readIntBE = function(Be, be, ke) {
    Be = Be >>> 0, be = be >>> 0, ke || pt(Be, be, this.length);
    for (var Ve = be, Je = 1, at = this[Be + --Ve]; Ve > 0 && (Je *= 256); )
      at += this[Be + --Ve] * Je;
    return Je *= 128, at >= Je && (at -= Math.pow(2, 8 * be)), at;
  }, fe.prototype.readInt8 = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 1, this.length), this[Be] & 128 ? (255 - this[Be] + 1) * -1 : this[Be];
  }, fe.prototype.readInt16LE = function(Be, be) {
    Be = Be >>> 0, be || pt(Be, 2, this.length);
    var ke = this[Be] | this[Be + 1] << 8;
    return ke & 32768 ? ke | 4294901760 : ke;
  }, fe.prototype.readInt16BE = function(Be, be) {
    Be = Be >>> 0, be || pt(Be, 2, this.length);
    var ke = this[Be + 1] | this[Be] << 8;
    return ke & 32768 ? ke | 4294901760 : ke;
  }, fe.prototype.readInt32LE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 4, this.length), this[Be] | this[Be + 1] << 8 | this[Be + 2] << 16 | this[Be + 3] << 24;
  }, fe.prototype.readInt32BE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 4, this.length), this[Be] << 24 | this[Be + 1] << 16 | this[Be + 2] << 8 | this[Be + 3];
  }, fe.prototype.readFloatLE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 4, this.length), ne.read(this, Be, !0, 23, 4);
  }, fe.prototype.readFloatBE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 4, this.length), ne.read(this, Be, !1, 23, 4);
  }, fe.prototype.readDoubleLE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 8, this.length), ne.read(this, Be, !0, 52, 8);
  }, fe.prototype.readDoubleBE = function(Be, be) {
    return Be = Be >>> 0, be || pt(Be, 8, this.length), ne.read(this, Be, !1, 52, 8);
  };
  function It(_e, Be, be, ke, Ve, Je) {
    if (!fe.isBuffer(_e))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (Be > Ve || Be < Je)
      throw new RangeError('"value" argument is out of bounds');
    if (be + ke > _e.length)
      throw new RangeError("Index out of range");
  }
  fe.prototype.writeUintLE = fe.prototype.writeUIntLE = function(Be, be, ke, Ve) {
    if (Be = +Be, be = be >>> 0, ke = ke >>> 0, !Ve) {
      var Je = Math.pow(2, 8 * ke) - 1;
      It(this, Be, be, ke, Je, 0);
    }
    var at = 1, Tt = 0;
    for (this[be] = Be & 255; ++Tt < ke && (at *= 256); )
      this[be + Tt] = Be / at & 255;
    return be + ke;
  }, fe.prototype.writeUintBE = fe.prototype.writeUIntBE = function(Be, be, ke, Ve) {
    if (Be = +Be, be = be >>> 0, ke = ke >>> 0, !Ve) {
      var Je = Math.pow(2, 8 * ke) - 1;
      It(this, Be, be, ke, Je, 0);
    }
    var at = ke - 1, Tt = 1;
    for (this[be + at] = Be & 255; --at >= 0 && (Tt *= 256); )
      this[be + at] = Be / Tt & 255;
    return be + ke;
  }, fe.prototype.writeUint8 = fe.prototype.writeUInt8 = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 1, 255, 0), this[be] = Be & 255, be + 1;
  }, fe.prototype.writeUint16LE = fe.prototype.writeUInt16LE = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 2, 65535, 0), this[be] = Be & 255, this[be + 1] = Be >>> 8, be + 2;
  }, fe.prototype.writeUint16BE = fe.prototype.writeUInt16BE = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 2, 65535, 0), this[be] = Be >>> 8, this[be + 1] = Be & 255, be + 2;
  }, fe.prototype.writeUint32LE = fe.prototype.writeUInt32LE = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 4, 4294967295, 0), this[be + 3] = Be >>> 24, this[be + 2] = Be >>> 16, this[be + 1] = Be >>> 8, this[be] = Be & 255, be + 4;
  }, fe.prototype.writeUint32BE = fe.prototype.writeUInt32BE = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 4, 4294967295, 0), this[be] = Be >>> 24, this[be + 1] = Be >>> 16, this[be + 2] = Be >>> 8, this[be + 3] = Be & 255, be + 4;
  }, fe.prototype.writeIntLE = function(Be, be, ke, Ve) {
    if (Be = +Be, be = be >>> 0, !Ve) {
      var Je = Math.pow(2, 8 * ke - 1);
      It(this, Be, be, ke, Je - 1, -Je);
    }
    var at = 0, Tt = 1, Dt = 0;
    for (this[be] = Be & 255; ++at < ke && (Tt *= 256); )
      Be < 0 && Dt === 0 && this[be + at - 1] !== 0 && (Dt = 1), this[be + at] = (Be / Tt >> 0) - Dt & 255;
    return be + ke;
  }, fe.prototype.writeIntBE = function(Be, be, ke, Ve) {
    if (Be = +Be, be = be >>> 0, !Ve) {
      var Je = Math.pow(2, 8 * ke - 1);
      It(this, Be, be, ke, Je - 1, -Je);
    }
    var at = ke - 1, Tt = 1, Dt = 0;
    for (this[be + at] = Be & 255; --at >= 0 && (Tt *= 256); )
      Be < 0 && Dt === 0 && this[be + at + 1] !== 0 && (Dt = 1), this[be + at] = (Be / Tt >> 0) - Dt & 255;
    return be + ke;
  }, fe.prototype.writeInt8 = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 1, 127, -128), Be < 0 && (Be = 255 + Be + 1), this[be] = Be & 255, be + 1;
  }, fe.prototype.writeInt16LE = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 2, 32767, -32768), this[be] = Be & 255, this[be + 1] = Be >>> 8, be + 2;
  }, fe.prototype.writeInt16BE = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 2, 32767, -32768), this[be] = Be >>> 8, this[be + 1] = Be & 255, be + 2;
  }, fe.prototype.writeInt32LE = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 4, 2147483647, -2147483648), this[be] = Be & 255, this[be + 1] = Be >>> 8, this[be + 2] = Be >>> 16, this[be + 3] = Be >>> 24, be + 4;
  }, fe.prototype.writeInt32BE = function(Be, be, ke) {
    return Be = +Be, be = be >>> 0, ke || It(this, Be, be, 4, 2147483647, -2147483648), Be < 0 && (Be = 4294967295 + Be + 1), this[be] = Be >>> 24, this[be + 1] = Be >>> 16, this[be + 2] = Be >>> 8, this[be + 3] = Be & 255, be + 4;
  };
  function qt(_e, Be, be, ke, Ve, Je) {
    if (be + ke > _e.length)
      throw new RangeError("Index out of range");
    if (be < 0)
      throw new RangeError("Index out of range");
  }
  function De(_e, Be, be, ke, Ve) {
    return Be = +Be, be = be >>> 0, Ve || qt(_e, Be, be, 4), ne.write(_e, Be, be, ke, 23, 4), be + 4;
  }
  fe.prototype.writeFloatLE = function(Be, be, ke) {
    return De(this, Be, be, !0, ke);
  }, fe.prototype.writeFloatBE = function(Be, be, ke) {
    return De(this, Be, be, !1, ke);
  };
  function ar(_e, Be, be, ke, Ve) {
    return Be = +Be, be = be >>> 0, Ve || qt(_e, Be, be, 8), ne.write(_e, Be, be, ke, 52, 8), be + 8;
  }
  fe.prototype.writeDoubleLE = function(Be, be, ke) {
    return ar(this, Be, be, !0, ke);
  }, fe.prototype.writeDoubleBE = function(Be, be, ke) {
    return ar(this, Be, be, !1, ke);
  }, fe.prototype.copy = function(Be, be, ke, Ve) {
    if (!fe.isBuffer(Be))
      throw new TypeError("argument should be a Buffer");
    if (ke || (ke = 0), !Ve && Ve !== 0 && (Ve = this.length), be >= Be.length && (be = Be.length), be || (be = 0), Ve > 0 && Ve < ke && (Ve = ke), Ve === ke || Be.length === 0 || this.length === 0)
      return 0;
    if (be < 0)
      throw new RangeError("targetStart out of bounds");
    if (ke < 0 || ke >= this.length)
      throw new RangeError("Index out of range");
    if (Ve < 0)
      throw new RangeError("sourceEnd out of bounds");
    Ve > this.length && (Ve = this.length), Be.length - be < Ve - ke && (Ve = Be.length - be + ke);
    var Je = Ve - ke;
    return this === Be && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(be, ke, Ve) : Uint8Array.prototype.set.call(
      Be,
      this.subarray(ke, Ve),
      be
    ), Je;
  }, fe.prototype.fill = function(Be, be, ke, Ve) {
    if (typeof Be == "string") {
      if (typeof be == "string" ? (Ve = be, be = 0, ke = this.length) : typeof ke == "string" && (Ve = ke, ke = this.length), Ve !== void 0 && typeof Ve != "string")
        throw new TypeError("encoding must be a string");
      if (typeof Ve == "string" && !fe.isEncoding(Ve))
        throw new TypeError("Unknown encoding: " + Ve);
      if (Be.length === 1) {
        var Je = Be.charCodeAt(0);
        (Ve === "utf8" && Je < 128 || Ve === "latin1") && (Be = Je);
      }
    } else
      typeof Be == "number" ? Be = Be & 255 : typeof Be == "boolean" && (Be = Number(Be));
    if (be < 0 || this.length < be || this.length < ke)
      throw new RangeError("Out of range index");
    if (ke <= be)
      return this;
    be = be >>> 0, ke = ke === void 0 ? this.length : ke >>> 0, Be || (Be = 0);
    var at;
    if (typeof Be == "number")
      for (at = be; at < ke; ++at)
        this[at] = Be;
    else {
      var Tt = fe.isBuffer(Be) ? Be : fe.from(Be, Ve), Dt = Tt.length;
      if (Dt === 0)
        throw new TypeError('The value "' + Be + '" is invalid for argument "value"');
      for (at = 0; at < ke - be; ++at)
        this[at + be] = Tt[at % Dt];
    }
    return this;
  };
  var rr = /[^+/0-9A-Za-z-_]/g;
  function Ar(_e) {
    if (_e = _e.split("=")[0], _e = _e.trim().replace(rr, ""), _e.length < 2)
      return "";
    for (; _e.length % 4 !== 0; )
      _e = _e + "=";
    return _e;
  }
  function vt(_e, Be) {
    Be = Be || 1 / 0;
    for (var be, ke = _e.length, Ve = null, Je = [], at = 0; at < ke; ++at) {
      if (be = _e.charCodeAt(at), be > 55295 && be < 57344) {
        if (!Ve) {
          if (be > 56319) {
            (Be -= 3) > -1 && Je.push(239, 191, 189);
            continue;
          } else if (at + 1 === ke) {
            (Be -= 3) > -1 && Je.push(239, 191, 189);
            continue;
          }
          Ve = be;
          continue;
        }
        if (be < 56320) {
          (Be -= 3) > -1 && Je.push(239, 191, 189), Ve = be;
          continue;
        }
        be = (Ve - 55296 << 10 | be - 56320) + 65536;
      } else
        Ve && (Be -= 3) > -1 && Je.push(239, 191, 189);
      if (Ve = null, be < 128) {
        if ((Be -= 1) < 0)
          break;
        Je.push(be);
      } else if (be < 2048) {
        if ((Be -= 2) < 0)
          break;
        Je.push(
          be >> 6 | 192,
          be & 63 | 128
        );
      } else if (be < 65536) {
        if ((Be -= 3) < 0)
          break;
        Je.push(
          be >> 12 | 224,
          be >> 6 & 63 | 128,
          be & 63 | 128
        );
      } else if (be < 1114112) {
        if ((Be -= 4) < 0)
          break;
        Je.push(
          be >> 18 | 240,
          be >> 12 & 63 | 128,
          be >> 6 & 63 | 128,
          be & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Je;
  }
  function Ut(_e) {
    for (var Be = [], be = 0; be < _e.length; ++be)
      Be.push(_e.charCodeAt(be) & 255);
    return Be;
  }
  function Xe(_e, Be) {
    for (var be, ke, Ve, Je = [], at = 0; at < _e.length && !((Be -= 2) < 0); ++at)
      be = _e.charCodeAt(at), ke = be >> 8, Ve = be % 256, Je.push(Ve), Je.push(ke);
    return Je;
  }
  function tt(_e) {
    return ee.toByteArray(Ar(_e));
  }
  function et(_e, Be, be, ke) {
    for (var Ve = 0; Ve < ke && !(Ve + be >= Be.length || Ve >= _e.length); ++Ve)
      Be[Ve + be] = _e[Ve];
    return Ve;
  }
  function Et(_e, Be) {
    return _e instanceof Be || _e != null && _e.constructor != null && _e.constructor.name != null && _e.constructor.name === Be.name;
  }
  function lt(_e) {
    return _e !== _e;
  }
  var $e = function() {
    for (var _e = "0123456789abcdef", Be = new Array(256), be = 0; be < 16; ++be)
      for (var ke = be * 16, Ve = 0; Ve < 16; ++Ve)
        Be[ke + Ve] = _e[be] + _e[Ve];
    return Be;
  }();
})(buffer$1);
const common = {
  black: "#000",
  white: "#fff"
}, common$1 = common, red = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
}, red$1 = red, purple = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
}, purple$1 = purple, blue = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
}, blue$1 = blue, lightBlue = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
}, lightBlue$1 = lightBlue, green = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
}, green$1 = green, orange = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
}, orange$1 = orange, grey = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, grey$1 = grey;
function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function(Z) {
    for (var ee = 1; ee < arguments.length; ee++) {
      var ne = arguments[ee];
      for (var ie in ne)
        Object.prototype.hasOwnProperty.call(ne, ie) && (Z[ie] = ne[ie]);
    }
    return Z;
  }, _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(Z, ee) {
  if (Z == null)
    return {};
  var ne = {}, ie = Object.keys(Z), oe, ce;
  for (ce = 0; ce < ie.length; ce++)
    oe = ie[ce], !(ee.indexOf(oe) >= 0) && (ne[oe] = Z[oe]);
  return ne;
}
function memoize$3(Z) {
  var ee = /* @__PURE__ */ Object.create(null);
  return function(ne) {
    return ee[ne] === void 0 && (ee[ne] = Z(ne)), ee[ne];
  };
}
var reactPropsRegex$1 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, isPropValid = /* @__PURE__ */ memoize$3(
  function(Z) {
    return reactPropsRegex$1.test(Z) || Z.charCodeAt(0) === 111 && Z.charCodeAt(1) === 110 && Z.charCodeAt(2) < 91;
  }
);
function sheetForTag$1(Z) {
  if (Z.sheet)
    return Z.sheet;
  for (var ee = 0; ee < document.styleSheets.length; ee++)
    if (document.styleSheets[ee].ownerNode === Z)
      return document.styleSheets[ee];
}
function createStyleElement(Z) {
  var ee = document.createElement("style");
  return ee.setAttribute("data-emotion", Z.key), Z.nonce !== void 0 && ee.setAttribute("nonce", Z.nonce), ee.appendChild(document.createTextNode("")), ee.setAttribute("data-s", ""), ee;
}
var StyleSheet$1 = /* @__PURE__ */ function() {
  function Z(ne) {
    var ie = this;
    this._insertTag = function(oe) {
      var ce;
      ie.tags.length === 0 ? ie.insertionPoint ? ce = ie.insertionPoint.nextSibling : ie.prepend ? ce = ie.container.firstChild : ce = ie.before : ce = ie.tags[ie.tags.length - 1].nextSibling, ie.container.insertBefore(oe, ce), ie.tags.push(oe);
    }, this.isSpeedy = ne.speedy === void 0 ? process.env.NODE_ENV === "production" : ne.speedy, this.tags = [], this.ctr = 0, this.nonce = ne.nonce, this.key = ne.key, this.container = ne.container, this.prepend = ne.prepend, this.insertionPoint = ne.insertionPoint, this.before = null;
  }
  var ee = Z.prototype;
  return ee.hydrate = function(ie) {
    ie.forEach(this._insertTag);
  }, ee.insert = function(ie) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(createStyleElement(this));
    var oe = this.tags[this.tags.length - 1];
    if (process.env.NODE_ENV !== "production") {
      var ce = ie.charCodeAt(0) === 64 && ie.charCodeAt(1) === 105;
      ce && this._alreadyInsertedOrderInsensitiveRule && console.error(`You're attempting to insert the following rule:
` + ie + "\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules."), this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !ce;
    }
    if (this.isSpeedy) {
      var he = sheetForTag$1(oe);
      try {
        he.insertRule(ie, he.cssRules.length);
      } catch (fe) {
        process.env.NODE_ENV !== "production" && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(ie) && console.error('There was a problem inserting the following rule: "' + ie + '"', fe);
      }
    } else
      oe.appendChild(document.createTextNode(ie));
    this.ctr++;
  }, ee.flush = function() {
    this.tags.forEach(function(ie) {
      return ie.parentNode && ie.parentNode.removeChild(ie);
    }), this.tags = [], this.ctr = 0, process.env.NODE_ENV !== "production" && (this._alreadyInsertedOrderInsensitiveRule = !1);
  }, Z;
}(), MS = "-ms-", MOZ = "-moz-", WEBKIT = "-webkit-", COMMENT = "comm", RULESET = "rule", DECLARATION = "decl", IMPORT = "@import", KEYFRAMES = "@keyframes", abs = Math.abs, from = String.fromCharCode, assign = Object.assign;
function hash$1(Z, ee) {
  return charat(Z, 0) ^ 45 ? (((ee << 2 ^ charat(Z, 0)) << 2 ^ charat(Z, 1)) << 2 ^ charat(Z, 2)) << 2 ^ charat(Z, 3) : 0;
}
function trim$1(Z) {
  return Z.trim();
}
function match(Z, ee) {
  return (Z = ee.exec(Z)) ? Z[0] : Z;
}
function replace(Z, ee, ne) {
  return Z.replace(ee, ne);
}
function indexof(Z, ee) {
  return Z.indexOf(ee);
}
function charat(Z, ee) {
  return Z.charCodeAt(ee) | 0;
}
function substr(Z, ee, ne) {
  return Z.slice(ee, ne);
}
function strlen(Z) {
  return Z.length;
}
function sizeof(Z) {
  return Z.length;
}
function append(Z, ee) {
  return ee.push(Z), Z;
}
function combine(Z, ee) {
  return Z.map(ee).join("");
}
var line = 1, column = 1, length = 0, position$1 = 0, character = 0, characters = "";
function node(Z, ee, ne, ie, oe, ce, he) {
  return { value: Z, root: ee, parent: ne, type: ie, props: oe, children: ce, line, column, length: he, return: "" };
}
function copy(Z, ee) {
  return assign(node("", null, null, "", null, null, 0), Z, { length: -Z.length }, ee);
}
function char() {
  return character;
}
function prev() {
  return character = position$1 > 0 ? charat(characters, --position$1) : 0, column--, character === 10 && (column = 1, line--), character;
}
function next() {
  return character = position$1 < length ? charat(characters, position$1++) : 0, column++, character === 10 && (column = 1, line++), character;
}
function peek() {
  return charat(characters, position$1);
}
function caret() {
  return position$1;
}
function slice(Z, ee) {
  return substr(characters, Z, ee);
}
function token$1(Z) {
  switch (Z) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(Z) {
  return line = column = 1, length = strlen(characters = Z), position$1 = 0, [];
}
function dealloc(Z) {
  return characters = "", Z;
}
function delimit(Z) {
  return trim$1(slice(position$1 - 1, delimiter(Z === 91 ? Z + 2 : Z === 40 ? Z + 1 : Z)));
}
function whitespace(Z) {
  for (; (character = peek()) && character < 33; )
    next();
  return token$1(Z) > 2 || token$1(character) > 3 ? "" : " ";
}
function escaping(Z, ee) {
  for (; --ee && next() && !(character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97); )
    ;
  return slice(Z, caret() + (ee < 6 && peek() == 32 && next() == 32));
}
function delimiter(Z) {
  for (; next(); )
    switch (character) {
      case Z:
        return position$1;
      case 34:
      case 39:
        Z !== 34 && Z !== 39 && delimiter(character);
        break;
      case 40:
        Z === 41 && delimiter(Z);
        break;
      case 92:
        next();
        break;
    }
  return position$1;
}
function commenter(Z, ee) {
  for (; next() && Z + character !== 47 + 10; )
    if (Z + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(ee, position$1 - 1) + "*" + from(Z === 47 ? Z : next());
}
function identifier(Z) {
  for (; !token$1(peek()); )
    next();
  return slice(Z, position$1);
}
function compile(Z) {
  return dealloc(parse("", null, null, null, [""], Z = alloc(Z), 0, [0], Z));
}
function parse(Z, ee, ne, ie, oe, ce, he, fe, xe) {
  for (var Ae = 0, Ee = 0, ye = he, ge = 0, me = 0, Ce = 0, Ie = 1, Oe = 1, He = 1, Ne = 0, Pe = "", Fe = oe, Le = ce, We = ie, rt = Pe; Oe; )
    switch (Ce = Ne, Ne = next()) {
      case 40:
        if (Ce != 108 && charat(rt, ye - 1) == 58) {
          indexof(rt += replace(delimit(Ne), "&", "&\f"), "&\f") != -1 && (He = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        rt += delimit(Ne);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        rt += whitespace(Ce);
        break;
      case 92:
        rt += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), ee, ne), xe);
            break;
          default:
            rt += "/";
        }
        break;
      case 123 * Ie:
        fe[Ae++] = strlen(rt) * He;
      case 125 * Ie:
      case 59:
      case 0:
        switch (Ne) {
          case 0:
          case 125:
            Oe = 0;
          case 59 + Ee:
            me > 0 && strlen(rt) - ye && append(me > 32 ? declaration(rt + ";", ie, ne, ye - 1) : declaration(replace(rt, " ", "") + ";", ie, ne, ye - 2), xe);
            break;
          case 59:
            rt += ";";
          default:
            if (append(We = ruleset(rt, ee, ne, Ae, Ee, oe, fe, Pe, Fe = [], Le = [], ye), ce), Ne === 123)
              if (Ee === 0)
                parse(rt, ee, We, We, Fe, ce, ye, fe, Le);
              else
                switch (ge === 99 && charat(rt, 3) === 110 ? 100 : ge) {
                  case 100:
                  case 109:
                  case 115:
                    parse(Z, We, We, ie && append(ruleset(Z, We, We, 0, 0, oe, fe, Pe, oe, Fe = [], ye), Le), oe, Le, ye, fe, ie ? Fe : Le);
                    break;
                  default:
                    parse(rt, We, We, We, [""], Le, 0, fe, Le);
                }
        }
        Ae = Ee = me = 0, Ie = He = 1, Pe = rt = "", ye = he;
        break;
      case 58:
        ye = 1 + strlen(rt), me = Ce;
      default:
        if (Ie < 1) {
          if (Ne == 123)
            --Ie;
          else if (Ne == 125 && Ie++ == 0 && prev() == 125)
            continue;
        }
        switch (rt += from(Ne), Ne * Ie) {
          case 38:
            He = Ee > 0 ? 1 : (rt += "\f", -1);
            break;
          case 44:
            fe[Ae++] = (strlen(rt) - 1) * He, He = 1;
            break;
          case 64:
            peek() === 45 && (rt += delimit(next())), ge = peek(), Ee = ye = strlen(Pe = rt += identifier(caret())), Ne++;
            break;
          case 45:
            Ce === 45 && strlen(rt) == 2 && (Ie = 0);
        }
    }
  return ce;
}
function ruleset(Z, ee, ne, ie, oe, ce, he, fe, xe, Ae, Ee) {
  for (var ye = oe - 1, ge = oe === 0 ? ce : [""], me = sizeof(ge), Ce = 0, Ie = 0, Oe = 0; Ce < ie; ++Ce)
    for (var He = 0, Ne = substr(Z, ye + 1, ye = abs(Ie = he[Ce])), Pe = Z; He < me; ++He)
      (Pe = trim$1(Ie > 0 ? ge[He] + " " + Ne : replace(Ne, /&\f/g, ge[He]))) && (xe[Oe++] = Pe);
  return node(Z, ee, ne, oe === 0 ? RULESET : fe, xe, Ae, Ee);
}
function comment(Z, ee, ne) {
  return node(Z, ee, ne, COMMENT, from(char()), substr(Z, 2, -2), 0);
}
function declaration(Z, ee, ne, ie) {
  return node(Z, ee, ne, DECLARATION, substr(Z, 0, ie), substr(Z, ie + 1, -1), ie);
}
function serialize(Z, ee) {
  for (var ne = "", ie = sizeof(Z), oe = 0; oe < ie; oe++)
    ne += ee(Z[oe], oe, Z, ee) || "";
  return ne;
}
function stringify(Z, ee, ne, ie) {
  switch (Z.type) {
    case IMPORT:
    case DECLARATION:
      return Z.return = Z.return || Z.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return Z.return = Z.value + "{" + serialize(Z.children, ie) + "}";
    case RULESET:
      Z.value = Z.props.join(",");
  }
  return strlen(ne = serialize(Z.children, ie)) ? Z.return = Z.value + "{" + ne + "}" : "";
}
function middleware(Z) {
  var ee = sizeof(Z);
  return function(ne, ie, oe, ce) {
    for (var he = "", fe = 0; fe < ee; fe++)
      he += Z[fe](ne, ie, oe, ce) || "";
    return he;
  };
}
function rulesheet(Z) {
  return function(ee) {
    ee.root || (ee = ee.return) && Z(ee);
  };
}
var identifierWithPointTracking = function(ee, ne, ie) {
  for (var oe = 0, ce = 0; oe = ce, ce = peek(), oe === 38 && ce === 12 && (ne[ie] = 1), !token$1(ce); )
    next();
  return slice(ee, position$1);
}, toRules = function(ee, ne) {
  var ie = -1, oe = 44;
  do
    switch (token$1(oe)) {
      case 0:
        oe === 38 && peek() === 12 && (ne[ie] = 1), ee[ie] += identifierWithPointTracking(position$1 - 1, ne, ie);
        break;
      case 2:
        ee[ie] += delimit(oe);
        break;
      case 4:
        if (oe === 44) {
          ee[++ie] = peek() === 58 ? "&\f" : "", ne[ie] = ee[ie].length;
          break;
        }
      default:
        ee[ie] += from(oe);
    }
  while (oe = next());
  return ee;
}, getRules = function(ee, ne) {
  return dealloc(toRules(alloc(ee), ne));
}, fixedElements = /* @__PURE__ */ new WeakMap(), compat = function(ee) {
  if (!(ee.type !== "rule" || !ee.parent || ee.length < 1)) {
    for (var ne = ee.value, ie = ee.parent, oe = ee.column === ie.column && ee.line === ie.line; ie.type !== "rule"; )
      if (ie = ie.parent, !ie)
        return;
    if (!(ee.props.length === 1 && ne.charCodeAt(0) !== 58 && !fixedElements.get(ie)) && !oe) {
      fixedElements.set(ee, !0);
      for (var ce = [], he = getRules(ne, ce), fe = ie.props, xe = 0, Ae = 0; xe < he.length; xe++)
        for (var Ee = 0; Ee < fe.length; Ee++, Ae++)
          ee.props[Ae] = ce[xe] ? he[xe].replace(/&\f/g, fe[Ee]) : fe[Ee] + " " + he[xe];
    }
  }
}, removeLabel = function(ee) {
  if (ee.type === "decl") {
    var ne = ee.value;
    ne.charCodeAt(0) === 108 && ne.charCodeAt(2) === 98 && (ee.return = "", ee.value = "");
  }
}, ignoreFlag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason", isIgnoringComment = function(ee) {
  return ee.type === "comm" && ee.children.indexOf(ignoreFlag) > -1;
}, createUnsafeSelectorsAlarm = function(ee) {
  return function(ne, ie, oe) {
    if (!(ne.type !== "rule" || ee.compat)) {
      var ce = ne.value.match(/(:first|:nth|:nth-last)-child/g);
      if (ce) {
        for (var he = ne.parent === oe[0], fe = he ? oe[0].children : oe, xe = fe.length - 1; xe >= 0; xe--) {
          var Ae = fe[xe];
          if (Ae.line < ne.line)
            break;
          if (Ae.column < ne.column) {
            if (isIgnoringComment(Ae))
              return;
            break;
          }
        }
        ce.forEach(function(Ee) {
          console.error('The pseudo class "' + Ee + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + Ee.split("-child")[0] + '-of-type".');
        });
      }
    }
  };
}, isImportRule = function(ee) {
  return ee.type.charCodeAt(1) === 105 && ee.type.charCodeAt(0) === 64;
}, isPrependedWithRegularRules = function(ee, ne) {
  for (var ie = ee - 1; ie >= 0; ie--)
    if (!isImportRule(ne[ie]))
      return !0;
  return !1;
}, nullifyElement = function(ee) {
  ee.type = "", ee.value = "", ee.return = "", ee.children = "", ee.props = "";
}, incorrectImportAlarm = function(ee, ne, ie) {
  !isImportRule(ee) || (ee.parent ? (console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles."), nullifyElement(ee)) : isPrependedWithRegularRules(ne, ie) && (console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules."), nullifyElement(ee)));
};
function prefix(Z, ee) {
  switch (hash$1(Z, ee)) {
    case 5103:
      return WEBKIT + "print-" + Z + Z;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + Z + Z;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + Z + MOZ + Z + MS + Z + Z;
    case 6828:
    case 4268:
      return WEBKIT + Z + MS + Z + Z;
    case 6165:
      return WEBKIT + Z + MS + "flex-" + Z + Z;
    case 5187:
      return WEBKIT + Z + replace(Z, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + Z;
    case 5443:
      return WEBKIT + Z + MS + "flex-item-" + replace(Z, /flex-|-self/, "") + Z;
    case 4675:
      return WEBKIT + Z + MS + "flex-line-pack" + replace(Z, /align-content|flex-|-self/, "") + Z;
    case 5548:
      return WEBKIT + Z + MS + replace(Z, "shrink", "negative") + Z;
    case 5292:
      return WEBKIT + Z + MS + replace(Z, "basis", "preferred-size") + Z;
    case 6060:
      return WEBKIT + "box-" + replace(Z, "-grow", "") + WEBKIT + Z + MS + replace(Z, "grow", "positive") + Z;
    case 4554:
      return WEBKIT + replace(Z, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + Z;
    case 6187:
      return replace(replace(replace(Z, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), Z, "") + Z;
    case 5495:
    case 3959:
      return replace(Z, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(Z, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + Z + Z;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(Z, /(.+)-inline(.+)/, WEBKIT + "$1$2") + Z;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(Z) - 1 - ee > 6)
        switch (charat(Z, ee + 1)) {
          case 109:
            if (charat(Z, ee + 4) !== 45)
              break;
          case 102:
            return replace(Z, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(Z, ee + 3) == 108 ? "$3" : "$2-$3")) + Z;
          case 115:
            return ~indexof(Z, "stretch") ? prefix(replace(Z, "stretch", "fill-available"), ee) + Z : Z;
        }
      break;
    case 4949:
      if (charat(Z, ee + 1) !== 115)
        break;
    case 6444:
      switch (charat(Z, strlen(Z) - 3 - (~indexof(Z, "!important") && 10))) {
        case 107:
          return replace(Z, ":", ":" + WEBKIT) + Z;
        case 101:
          return replace(Z, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(Z, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + Z;
      }
      break;
    case 5936:
      switch (charat(Z, ee + 11)) {
        case 114:
          return WEBKIT + Z + MS + replace(Z, /[svh]\w+-[tblr]{2}/, "tb") + Z;
        case 108:
          return WEBKIT + Z + MS + replace(Z, /[svh]\w+-[tblr]{2}/, "tb-rl") + Z;
        case 45:
          return WEBKIT + Z + MS + replace(Z, /[svh]\w+-[tblr]{2}/, "lr") + Z;
      }
      return WEBKIT + Z + MS + Z + Z;
  }
  return Z;
}
var prefixer = function(ee, ne, ie, oe) {
  if (ee.length > -1 && !ee.return)
    switch (ee.type) {
      case DECLARATION:
        ee.return = prefix(ee.value, ee.length);
        break;
      case KEYFRAMES:
        return serialize([copy(ee, {
          value: replace(ee.value, "@", "@" + WEBKIT)
        })], oe);
      case RULESET:
        if (ee.length)
          return combine(ee.props, function(ce) {
            switch (match(ce, /(::plac\w+|:read-\w+)/)) {
              case ":read-only":
              case ":read-write":
                return serialize([copy(ee, {
                  props: [replace(ce, /:(read-\w+)/, ":" + MOZ + "$1")]
                })], oe);
              case "::placeholder":
                return serialize([copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, ":" + WEBKIT + "input-$1")]
                }), copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, ":" + MOZ + "$1")]
                }), copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, MS + "input-$1")]
                })], oe);
            }
            return "";
          });
    }
}, defaultStylisPlugins = [prefixer], createCache = function(ee) {
  var ne = ee.key;
  if (process.env.NODE_ENV !== "production" && !ne)
    throw new Error(`You have to configure \`key\` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.
If multiple caches share the same key they might "fight" for each other's style elements.`);
  if (ne === "css") {
    var ie = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(ie, function(Ie) {
      var Oe = Ie.getAttribute("data-emotion");
      Oe.indexOf(" ") !== -1 && (document.head.appendChild(Ie), Ie.setAttribute("data-s", ""));
    });
  }
  var oe = ee.stylisPlugins || defaultStylisPlugins;
  if (process.env.NODE_ENV !== "production" && /[^a-z-]/.test(ne))
    throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + ne + '" was passed');
  var ce = {}, he, fe = [];
  he = ee.container || document.head, Array.prototype.forEach.call(
    document.querySelectorAll('style[data-emotion^="' + ne + ' "]'),
    function(Ie) {
      for (var Oe = Ie.getAttribute("data-emotion").split(" "), He = 1; He < Oe.length; He++)
        ce[Oe[He]] = !0;
      fe.push(Ie);
    }
  );
  var xe, Ae = [compat, removeLabel];
  process.env.NODE_ENV !== "production" && Ae.push(createUnsafeSelectorsAlarm({
    get compat() {
      return Ce.compat;
    }
  }), incorrectImportAlarm);
  {
    var Ee, ye = [stringify, process.env.NODE_ENV !== "production" ? function(Ie) {
      Ie.root || (Ie.return ? Ee.insert(Ie.return) : Ie.value && Ie.type !== COMMENT && Ee.insert(Ie.value + "{}"));
    } : rulesheet(function(Ie) {
      Ee.insert(Ie);
    })], ge = middleware(Ae.concat(oe, ye)), me = function(Oe) {
      return serialize(compile(Oe), ge);
    };
    xe = function(Oe, He, Ne, Pe) {
      Ee = Ne, process.env.NODE_ENV !== "production" && He.map !== void 0 && (Ee = {
        insert: function(Le) {
          Ne.insert(Le + He.map);
        }
      }), me(Oe ? Oe + "{" + He.styles + "}" : He.styles), Pe && (Ce.inserted[He.name] = !0);
    };
  }
  var Ce = {
    key: ne,
    sheet: new StyleSheet$1({
      key: ne,
      container: he,
      nonce: ee.nonce,
      speedy: ee.speedy,
      prepend: ee.prepend,
      insertionPoint: ee.insertionPoint
    }),
    nonce: ee.nonce,
    inserted: ce,
    registered: {},
    insert: xe
  };
  return Ce.sheet.hydrate(fe), Ce;
}, reactIs$2 = { exports: {} }, reactIs_production_min$1 = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$1;
function requireReactIs_production_min$1() {
  if (hasRequiredReactIs_production_min$1)
    return reactIs_production_min$1;
  hasRequiredReactIs_production_min$1 = 1;
  var Z = typeof Symbol == "function" && Symbol.for, ee = Z ? Symbol.for("react.element") : 60103, ne = Z ? Symbol.for("react.portal") : 60106, ie = Z ? Symbol.for("react.fragment") : 60107, oe = Z ? Symbol.for("react.strict_mode") : 60108, ce = Z ? Symbol.for("react.profiler") : 60114, he = Z ? Symbol.for("react.provider") : 60109, fe = Z ? Symbol.for("react.context") : 60110, xe = Z ? Symbol.for("react.async_mode") : 60111, Ae = Z ? Symbol.for("react.concurrent_mode") : 60111, Ee = Z ? Symbol.for("react.forward_ref") : 60112, ye = Z ? Symbol.for("react.suspense") : 60113, ge = Z ? Symbol.for("react.suspense_list") : 60120, me = Z ? Symbol.for("react.memo") : 60115, Ce = Z ? Symbol.for("react.lazy") : 60116, Ie = Z ? Symbol.for("react.block") : 60121, Oe = Z ? Symbol.for("react.fundamental") : 60117, He = Z ? Symbol.for("react.responder") : 60118, Ne = Z ? Symbol.for("react.scope") : 60119;
  function Pe(Le) {
    if (typeof Le == "object" && Le !== null) {
      var We = Le.$$typeof;
      switch (We) {
        case ee:
          switch (Le = Le.type, Le) {
            case xe:
            case Ae:
            case ie:
            case ce:
            case oe:
            case ye:
              return Le;
            default:
              switch (Le = Le && Le.$$typeof, Le) {
                case fe:
                case Ee:
                case Ce:
                case me:
                case he:
                  return Le;
                default:
                  return We;
              }
          }
        case ne:
          return We;
      }
    }
  }
  function Fe(Le) {
    return Pe(Le) === Ae;
  }
  return reactIs_production_min$1.AsyncMode = xe, reactIs_production_min$1.ConcurrentMode = Ae, reactIs_production_min$1.ContextConsumer = fe, reactIs_production_min$1.ContextProvider = he, reactIs_production_min$1.Element = ee, reactIs_production_min$1.ForwardRef = Ee, reactIs_production_min$1.Fragment = ie, reactIs_production_min$1.Lazy = Ce, reactIs_production_min$1.Memo = me, reactIs_production_min$1.Portal = ne, reactIs_production_min$1.Profiler = ce, reactIs_production_min$1.StrictMode = oe, reactIs_production_min$1.Suspense = ye, reactIs_production_min$1.isAsyncMode = function(Le) {
    return Fe(Le) || Pe(Le) === xe;
  }, reactIs_production_min$1.isConcurrentMode = Fe, reactIs_production_min$1.isContextConsumer = function(Le) {
    return Pe(Le) === fe;
  }, reactIs_production_min$1.isContextProvider = function(Le) {
    return Pe(Le) === he;
  }, reactIs_production_min$1.isElement = function(Le) {
    return typeof Le == "object" && Le !== null && Le.$$typeof === ee;
  }, reactIs_production_min$1.isForwardRef = function(Le) {
    return Pe(Le) === Ee;
  }, reactIs_production_min$1.isFragment = function(Le) {
    return Pe(Le) === ie;
  }, reactIs_production_min$1.isLazy = function(Le) {
    return Pe(Le) === Ce;
  }, reactIs_production_min$1.isMemo = function(Le) {
    return Pe(Le) === me;
  }, reactIs_production_min$1.isPortal = function(Le) {
    return Pe(Le) === ne;
  }, reactIs_production_min$1.isProfiler = function(Le) {
    return Pe(Le) === ce;
  }, reactIs_production_min$1.isStrictMode = function(Le) {
    return Pe(Le) === oe;
  }, reactIs_production_min$1.isSuspense = function(Le) {
    return Pe(Le) === ye;
  }, reactIs_production_min$1.isValidElementType = function(Le) {
    return typeof Le == "string" || typeof Le == "function" || Le === ie || Le === Ae || Le === ce || Le === oe || Le === ye || Le === ge || typeof Le == "object" && Le !== null && (Le.$$typeof === Ce || Le.$$typeof === me || Le.$$typeof === he || Le.$$typeof === fe || Le.$$typeof === Ee || Le.$$typeof === Oe || Le.$$typeof === He || Le.$$typeof === Ne || Le.$$typeof === Ie);
  }, reactIs_production_min$1.typeOf = Pe, reactIs_production_min$1;
}
var reactIs_development$1 = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$1;
function requireReactIs_development$1() {
  return hasRequiredReactIs_development$1 || (hasRequiredReactIs_development$1 = 1, process.env.NODE_ENV !== "production" && function() {
    var Z = typeof Symbol == "function" && Symbol.for, ee = Z ? Symbol.for("react.element") : 60103, ne = Z ? Symbol.for("react.portal") : 60106, ie = Z ? Symbol.for("react.fragment") : 60107, oe = Z ? Symbol.for("react.strict_mode") : 60108, ce = Z ? Symbol.for("react.profiler") : 60114, he = Z ? Symbol.for("react.provider") : 60109, fe = Z ? Symbol.for("react.context") : 60110, xe = Z ? Symbol.for("react.async_mode") : 60111, Ae = Z ? Symbol.for("react.concurrent_mode") : 60111, Ee = Z ? Symbol.for("react.forward_ref") : 60112, ye = Z ? Symbol.for("react.suspense") : 60113, ge = Z ? Symbol.for("react.suspense_list") : 60120, me = Z ? Symbol.for("react.memo") : 60115, Ce = Z ? Symbol.for("react.lazy") : 60116, Ie = Z ? Symbol.for("react.block") : 60121, Oe = Z ? Symbol.for("react.fundamental") : 60117, He = Z ? Symbol.for("react.responder") : 60118, Ne = Z ? Symbol.for("react.scope") : 60119;
    function Pe(et) {
      return typeof et == "string" || typeof et == "function" || et === ie || et === Ae || et === ce || et === oe || et === ye || et === ge || typeof et == "object" && et !== null && (et.$$typeof === Ce || et.$$typeof === me || et.$$typeof === he || et.$$typeof === fe || et.$$typeof === Ee || et.$$typeof === Oe || et.$$typeof === He || et.$$typeof === Ne || et.$$typeof === Ie);
    }
    function Fe(et) {
      if (typeof et == "object" && et !== null) {
        var Et = et.$$typeof;
        switch (Et) {
          case ee:
            var lt = et.type;
            switch (lt) {
              case xe:
              case Ae:
              case ie:
              case ce:
              case oe:
              case ye:
                return lt;
              default:
                var $e = lt && lt.$$typeof;
                switch ($e) {
                  case fe:
                  case Ee:
                  case Ce:
                  case me:
                  case he:
                    return $e;
                  default:
                    return Et;
                }
            }
          case ne:
            return Et;
        }
      }
    }
    var Le = xe, We = Ae, rt = fe, gt = he, kt = ee, Ke = Ee, ht = ie, Nt = Ce, Ft = me, At = ne, St = ce, Vt = oe, Xt = ye, Lt = !1;
    function Zt(et) {
      return Lt || (Lt = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), Gt(et) || Fe(et) === xe;
    }
    function Gt(et) {
      return Fe(et) === Ae;
    }
    function pt(et) {
      return Fe(et) === fe;
    }
    function It(et) {
      return Fe(et) === he;
    }
    function qt(et) {
      return typeof et == "object" && et !== null && et.$$typeof === ee;
    }
    function De(et) {
      return Fe(et) === Ee;
    }
    function ar(et) {
      return Fe(et) === ie;
    }
    function rr(et) {
      return Fe(et) === Ce;
    }
    function Ar(et) {
      return Fe(et) === me;
    }
    function vt(et) {
      return Fe(et) === ne;
    }
    function Ut(et) {
      return Fe(et) === ce;
    }
    function Xe(et) {
      return Fe(et) === oe;
    }
    function tt(et) {
      return Fe(et) === ye;
    }
    reactIs_development$1.AsyncMode = Le, reactIs_development$1.ConcurrentMode = We, reactIs_development$1.ContextConsumer = rt, reactIs_development$1.ContextProvider = gt, reactIs_development$1.Element = kt, reactIs_development$1.ForwardRef = Ke, reactIs_development$1.Fragment = ht, reactIs_development$1.Lazy = Nt, reactIs_development$1.Memo = Ft, reactIs_development$1.Portal = At, reactIs_development$1.Profiler = St, reactIs_development$1.StrictMode = Vt, reactIs_development$1.Suspense = Xt, reactIs_development$1.isAsyncMode = Zt, reactIs_development$1.isConcurrentMode = Gt, reactIs_development$1.isContextConsumer = pt, reactIs_development$1.isContextProvider = It, reactIs_development$1.isElement = qt, reactIs_development$1.isForwardRef = De, reactIs_development$1.isFragment = ar, reactIs_development$1.isLazy = rr, reactIs_development$1.isMemo = Ar, reactIs_development$1.isPortal = vt, reactIs_development$1.isProfiler = Ut, reactIs_development$1.isStrictMode = Xe, reactIs_development$1.isSuspense = tt, reactIs_development$1.isValidElementType = Pe, reactIs_development$1.typeOf = Fe;
  }()), reactIs_development$1;
}
var hasRequiredReactIs;
function requireReactIs() {
  return hasRequiredReactIs || (hasRequiredReactIs = 1, function(Z) {
    process.env.NODE_ENV === "production" ? Z.exports = requireReactIs_production_min$1() : Z.exports = requireReactIs_development$1();
  }(reactIs$2)), reactIs$2.exports;
}
var reactIs$1 = requireReactIs(), FORWARD_REF_STATICS = {
  $$typeof: !0,
  render: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0
}, MEMO_STATICS = {
  $$typeof: !0,
  compare: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0,
  type: !0
}, TYPE_STATICS$1 = {};
TYPE_STATICS$1[reactIs$1.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS$1[reactIs$1.Memo] = MEMO_STATICS;
var isBrowser$1 = !0;
function getRegisteredStyles(Z, ee, ne) {
  var ie = "";
  return ne.split(" ").forEach(function(oe) {
    Z[oe] !== void 0 ? ee.push(Z[oe] + ";") : ie += oe + " ";
  }), ie;
}
var registerStyles = function(ee, ne, ie) {
  var oe = ee.key + "-" + ne.name;
  (ie === !1 || isBrowser$1 === !1) && ee.registered[oe] === void 0 && (ee.registered[oe] = ne.styles);
}, insertStyles = function(ee, ne, ie) {
  registerStyles(ee, ne, ie);
  var oe = ee.key + "-" + ne.name;
  if (ee.inserted[ne.name] === void 0) {
    var ce = ne;
    do
      ee.insert(ne === ce ? "." + oe : "", ce, ee.sheet, !0), ce = ce.next;
    while (ce !== void 0);
  }
};
function murmur2(Z) {
  for (var ee = 0, ne, ie = 0, oe = Z.length; oe >= 4; ++ie, oe -= 4)
    ne = Z.charCodeAt(ie) & 255 | (Z.charCodeAt(++ie) & 255) << 8 | (Z.charCodeAt(++ie) & 255) << 16 | (Z.charCodeAt(++ie) & 255) << 24, ne = (ne & 65535) * 1540483477 + ((ne >>> 16) * 59797 << 16), ne ^= ne >>> 24, ee = (ne & 65535) * 1540483477 + ((ne >>> 16) * 59797 << 16) ^ (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16);
  switch (oe) {
    case 3:
      ee ^= (Z.charCodeAt(ie + 2) & 255) << 16;
    case 2:
      ee ^= (Z.charCodeAt(ie + 1) & 255) << 8;
    case 1:
      ee ^= Z.charCodeAt(ie) & 255, ee = (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16);
  }
  return ee ^= ee >>> 13, ee = (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16), ((ee ^ ee >>> 15) >>> 0).toString(36);
}
var unitlessKeys$1 = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, ILLEGAL_ESCAPE_SEQUENCE_ERROR$1 = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`, UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).", hyphenateRegex = /[A-Z]|^ms/g, animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g, isCustomProperty = function(ee) {
  return ee.charCodeAt(1) === 45;
}, isProcessableValue = function(ee) {
  return ee != null && typeof ee != "boolean";
}, processStyleName = /* @__PURE__ */ memoize$3(function(Z) {
  return isCustomProperty(Z) ? Z : Z.replace(hyphenateRegex, "-$&").toLowerCase();
}), processStyleValue = function(ee, ne) {
  switch (ee) {
    case "animation":
    case "animationName":
      if (typeof ne == "string")
        return ne.replace(animationRegex, function(ie, oe, ce) {
          return cursor = {
            name: oe,
            styles: ce,
            next: cursor
          }, oe;
        });
  }
  return unitlessKeys$1[ee] !== 1 && !isCustomProperty(ee) && typeof ne == "number" && ne !== 0 ? ne + "px" : ne;
};
if (process.env.NODE_ENV !== "production") {
  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/, contentValues = ["normal", "none", "initial", "inherit", "unset"], oldProcessStyleValue = processStyleValue, msPattern$1 = /^-ms-/, hyphenPattern = /-(.)/g, hyphenatedCache = {};
  processStyleValue = function(ee, ne) {
    if (ee === "content" && (typeof ne != "string" || contentValues.indexOf(ne) === -1 && !contentValuePattern.test(ne) && (ne.charAt(0) !== ne.charAt(ne.length - 1) || ne.charAt(0) !== '"' && ne.charAt(0) !== "'")))
      throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + ne + "\"'`");
    var ie = oldProcessStyleValue(ee, ne);
    return ie !== "" && !isCustomProperty(ee) && ee.indexOf("-") !== -1 && hyphenatedCache[ee] === void 0 && (hyphenatedCache[ee] = !0, console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + ee.replace(msPattern$1, "ms-").replace(hyphenPattern, function(oe, ce) {
      return ce.toUpperCase();
    }) + "?")), ie;
  };
}
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(Z, ee, ne) {
  if (ne == null)
    return "";
  if (ne.__emotion_styles !== void 0) {
    if (process.env.NODE_ENV !== "production" && ne.toString() === "NO_COMPONENT_SELECTOR")
      throw new Error(noComponentSelectorMessage);
    return ne;
  }
  switch (typeof ne) {
    case "boolean":
      return "";
    case "object": {
      if (ne.anim === 1)
        return cursor = {
          name: ne.name,
          styles: ne.styles,
          next: cursor
        }, ne.name;
      if (ne.styles !== void 0) {
        var ie = ne.next;
        if (ie !== void 0)
          for (; ie !== void 0; )
            cursor = {
              name: ie.name,
              styles: ie.styles,
              next: cursor
            }, ie = ie.next;
        var oe = ne.styles + ";";
        return process.env.NODE_ENV !== "production" && ne.map !== void 0 && (oe += ne.map), oe;
      }
      return createStringFromObject(Z, ee, ne);
    }
    case "function": {
      if (Z !== void 0) {
        var ce = cursor, he = ne(Z);
        return cursor = ce, handleInterpolation(Z, ee, he);
      } else
        process.env.NODE_ENV !== "production" && console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
      break;
    }
    case "string":
      if (process.env.NODE_ENV !== "production") {
        var fe = [], xe = ne.replace(animationRegex, function(Ee, ye, ge) {
          var me = "animation" + fe.length;
          return fe.push("const " + me + " = keyframes`" + ge.replace(/^@keyframes animation-\w+/, "") + "`"), "${" + me + "}";
        });
        fe.length && console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(fe, ["`" + xe + "`"]).join(`
`) + `

You should wrap it with \`css\` like this:

` + ("css`" + xe + "`"));
      }
      break;
  }
  if (ee == null)
    return ne;
  var Ae = ee[ne];
  return Ae !== void 0 ? Ae : ne;
}
function createStringFromObject(Z, ee, ne) {
  var ie = "";
  if (Array.isArray(ne))
    for (var oe = 0; oe < ne.length; oe++)
      ie += handleInterpolation(Z, ee, ne[oe]) + ";";
  else
    for (var ce in ne) {
      var he = ne[ce];
      if (typeof he != "object")
        ee != null && ee[he] !== void 0 ? ie += ce + "{" + ee[he] + "}" : isProcessableValue(he) && (ie += processStyleName(ce) + ":" + processStyleValue(ce, he) + ";");
      else {
        if (ce === "NO_COMPONENT_SELECTOR" && process.env.NODE_ENV !== "production")
          throw new Error(noComponentSelectorMessage);
        if (Array.isArray(he) && typeof he[0] == "string" && (ee == null || ee[he[0]] === void 0))
          for (var fe = 0; fe < he.length; fe++)
            isProcessableValue(he[fe]) && (ie += processStyleName(ce) + ":" + processStyleValue(ce, he[fe]) + ";");
        else {
          var xe = handleInterpolation(Z, ee, he);
          switch (ce) {
            case "animation":
            case "animationName": {
              ie += processStyleName(ce) + ":" + xe + ";";
              break;
            }
            default:
              process.env.NODE_ENV !== "production" && ce === "undefined" && console.error(UNDEFINED_AS_OBJECT_KEY_ERROR), ie += ce + "{" + xe + "}";
          }
        }
      }
    }
  return ie;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g, sourceMapPattern;
process.env.NODE_ENV !== "production" && (sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g);
var cursor, serializeStyles = function(ee, ne, ie) {
  if (ee.length === 1 && typeof ee[0] == "object" && ee[0] !== null && ee[0].styles !== void 0)
    return ee[0];
  var oe = !0, ce = "";
  cursor = void 0;
  var he = ee[0];
  he == null || he.raw === void 0 ? (oe = !1, ce += handleInterpolation(ie, ne, he)) : (process.env.NODE_ENV !== "production" && he[0] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1), ce += he[0]);
  for (var fe = 1; fe < ee.length; fe++)
    ce += handleInterpolation(ie, ne, ee[fe]), oe && (process.env.NODE_ENV !== "production" && he[fe] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1), ce += he[fe]);
  var xe;
  process.env.NODE_ENV !== "production" && (ce = ce.replace(sourceMapPattern, function(ge) {
    return xe = ge, "";
  })), labelPattern.lastIndex = 0;
  for (var Ae = "", Ee; (Ee = labelPattern.exec(ce)) !== null; )
    Ae += "-" + Ee[1];
  var ye = murmur2(ce) + Ae;
  return process.env.NODE_ENV !== "production" ? {
    name: ye,
    styles: ce,
    map: xe,
    next: cursor,
    toString: function() {
      return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
    }
  } : {
    name: ye,
    styles: ce,
    next: cursor
  };
}, syncFallback = function(ee) {
  return ee();
}, useInsertionEffect = React["useInsertionEffect"] ? React["useInsertionEffect"] : !1, useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback, useInsertionEffectWithLayoutFallback = useInsertionEffect || useLayoutEffect, hasOwnProperty = {}.hasOwnProperty, EmotionCacheContext = /* @__PURE__ */ createContext(
  typeof HTMLElement < "u" ? /* @__PURE__ */ createCache({
    key: "css"
  }) : null
);
process.env.NODE_ENV !== "production" && (EmotionCacheContext.displayName = "EmotionCacheContext");
EmotionCacheContext.Provider;
var withEmotionCache = function(ee) {
  return /* @__PURE__ */ forwardRef(function(ne, ie) {
    var oe = useContext(EmotionCacheContext);
    return ee(ne, oe, ie);
  });
}, ThemeContext$3 = /* @__PURE__ */ createContext({});
process.env.NODE_ENV !== "production" && (ThemeContext$3.displayName = "EmotionThemeContext");
var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__", Insertion$2 = function(ee) {
  var ne = ee.cache, ie = ee.serialized, oe = ee.isStringTag;
  return registerStyles(ne, ie, oe), useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(ne, ie, oe);
  }), null;
}, Emotion = /* @__PURE__ */ withEmotionCache(function(Z, ee, ne) {
  var ie = Z.css;
  typeof ie == "string" && ee.registered[ie] !== void 0 && (ie = ee.registered[ie]);
  var oe = Z[typePropName], ce = [ie], he = "";
  typeof Z.className == "string" ? he = getRegisteredStyles(ee.registered, ce, Z.className) : Z.className != null && (he = Z.className + " ");
  var fe = serializeStyles(ce, void 0, useContext(ThemeContext$3));
  if (process.env.NODE_ENV !== "production" && fe.name.indexOf("-") === -1) {
    var xe = Z[labelPropName];
    xe && (fe = serializeStyles([fe, "label:" + xe + ";"]));
  }
  he += ee.key + "-" + fe.name;
  var Ae = {};
  for (var Ee in Z)
    hasOwnProperty.call(Z, Ee) && Ee !== "css" && Ee !== typePropName && (process.env.NODE_ENV === "production" || Ee !== labelPropName) && (Ae[Ee] = Z[Ee]);
  return Ae.ref = ne, Ae.className = he, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion$2, {
    cache: ee,
    serialized: fe,
    isStringTag: typeof oe == "string"
  }), /* @__PURE__ */ createElement(oe, Ae));
});
process.env.NODE_ENV !== "production" && (Emotion.displayName = "EmotionCssPropInternal");
var pkg = {
  name: "@emotion/react",
  version: "11.10.5",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  exports: {
    ".": {
      module: {
        worker: "./dist/emotion-react.worker.esm.js",
        browser: "./dist/emotion-react.browser.esm.js",
        default: "./dist/emotion-react.esm.js"
      },
      default: "./dist/emotion-react.cjs.js"
    },
    "./jsx-runtime": {
      module: {
        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
        default: "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
      },
      default: "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
    },
    "./_isolated-hnrs": {
      module: {
        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
        default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
      },
      default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
    },
    "./jsx-dev-runtime": {
      module: {
        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
        default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
      },
      default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
    },
    "./package.json": "./package.json",
    "./types/css-prop": "./types/css-prop.d.ts",
    "./macro": "./macro.js"
  },
  types: "types/index.d.ts",
  files: [
    "src",
    "dist",
    "jsx-runtime",
    "jsx-dev-runtime",
    "_isolated-hnrs",
    "types/*.d.ts",
    "macro.js",
    "macro.d.ts",
    "macro.js.flow"
  ],
  sideEffects: !1,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.18.3",
    "@emotion/babel-plugin": "^11.10.5",
    "@emotion/cache": "^11.10.5",
    "@emotion/serialize": "^1.1.1",
    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.0",
    "@emotion/utils": "^1.2.0",
    "@emotion/weak-memoize": "^0.3.0",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    "@babel/core": "^7.0.0",
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@babel/core": {
      optional: !0
    },
    "@types/react": {
      optional: !0
    }
  },
  devDependencies: {
    "@babel/core": "^7.18.5",
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.10.5",
    "@emotion/css-prettifier": "1.1.1",
    "@emotion/server": "11.10.0",
    "@emotion/styled": "11.10.5",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^4.5.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: [
      "./index.js",
      "./jsx-runtime.js",
      "./jsx-dev-runtime.js",
      "./_isolated-hnrs.js"
    ],
    umdName: "emotionReact",
    exports: {
      envConditions: [
        "browser",
        "worker"
      ],
      extra: {
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": "./macro.js"
      }
    }
  }
}, warnedAboutCssPropForGlobal = !1, Global = /* @__PURE__ */ withEmotionCache(function(Z, ee) {
  process.env.NODE_ENV !== "production" && !warnedAboutCssPropForGlobal && (Z.className || Z.css) && (console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?"), warnedAboutCssPropForGlobal = !0);
  var ne = Z.styles, ie = serializeStyles([ne], void 0, useContext(ThemeContext$3)), oe = useRef();
  return useInsertionEffectWithLayoutFallback(function() {
    var ce = ee.key + "-global", he = new ee.sheet.constructor({
      key: ce,
      nonce: ee.sheet.nonce,
      container: ee.sheet.container,
      speedy: ee.sheet.isSpeedy
    }), fe = !1, xe = document.querySelector('style[data-emotion="' + ce + " " + ie.name + '"]');
    return ee.sheet.tags.length && (he.before = ee.sheet.tags[0]), xe !== null && (fe = !0, xe.setAttribute("data-emotion", ce), he.hydrate([xe])), oe.current = [he, fe], function() {
      he.flush();
    };
  }, [ee]), useInsertionEffectWithLayoutFallback(function() {
    var ce = oe.current, he = ce[0], fe = ce[1];
    if (fe) {
      ce[1] = !1;
      return;
    }
    if (ie.next !== void 0 && insertStyles(ee, ie.next, !0), he.tags.length) {
      var xe = he.tags[he.tags.length - 1].nextElementSibling;
      he.before = xe, he.flush();
    }
    ee.insert("", ie, he, !1);
  }, [ee, ie.name]), null;
});
process.env.NODE_ENV !== "production" && (Global.displayName = "EmotionGlobal");
function css$1() {
  for (var Z = arguments.length, ee = new Array(Z), ne = 0; ne < Z; ne++)
    ee[ne] = arguments[ne];
  return serializeStyles(ee);
}
var keyframes = function() {
  var ee = css$1.apply(void 0, arguments), ne = "animation-" + ee.name;
  return {
    name: ne,
    styles: "@keyframes " + ne + "{" + ee.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}, classnames$2 = function Z(ee) {
  for (var ne = ee.length, ie = 0, oe = ""; ie < ne; ie++) {
    var ce = ee[ie];
    if (ce != null) {
      var he = void 0;
      switch (typeof ce) {
        case "boolean":
          break;
        case "object": {
          if (Array.isArray(ce))
            he = Z(ce);
          else {
            process.env.NODE_ENV !== "production" && ce.styles !== void 0 && ce.name !== void 0 && console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component."), he = "";
            for (var fe in ce)
              ce[fe] && fe && (he && (he += " "), he += fe);
          }
          break;
        }
        default:
          he = ce;
      }
      he && (oe && (oe += " "), oe += he);
    }
  }
  return oe;
};
function merge$3(Z, ee, ne) {
  var ie = [], oe = getRegisteredStyles(Z, ie, ne);
  return ie.length < 2 ? ne : oe + ee(ie);
}
var Insertion$1 = function(ee) {
  var ne = ee.cache, ie = ee.serializedArr;
  return useInsertionEffectAlwaysWithSyncFallback(function() {
    for (var oe = 0; oe < ie.length; oe++)
      insertStyles(ne, ie[oe], !1);
  }), null;
}, ClassNames = /* @__PURE__ */ withEmotionCache(function(Z, ee) {
  var ne = !1, ie = [], oe = function() {
    if (ne && process.env.NODE_ENV !== "production")
      throw new Error("css can only be used during render");
    for (var Ae = arguments.length, Ee = new Array(Ae), ye = 0; ye < Ae; ye++)
      Ee[ye] = arguments[ye];
    var ge = serializeStyles(Ee, ee.registered);
    return ie.push(ge), registerStyles(ee, ge, !1), ee.key + "-" + ge.name;
  }, ce = function() {
    if (ne && process.env.NODE_ENV !== "production")
      throw new Error("cx can only be used during render");
    for (var Ae = arguments.length, Ee = new Array(Ae), ye = 0; ye < Ae; ye++)
      Ee[ye] = arguments[ye];
    return merge$3(ee.registered, oe, classnames$2(Ee));
  }, he = {
    css: oe,
    cx: ce,
    theme: useContext(ThemeContext$3)
  }, fe = Z.children(he);
  return ne = !0, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion$1, {
    cache: ee,
    serializedArr: ie
  }), fe);
});
process.env.NODE_ENV !== "production" && (ClassNames.displayName = "EmotionClassNames");
if (process.env.NODE_ENV !== "production") {
  var isBrowser = !0, isTestEnv = typeof jest < "u" || typeof vi < "u";
  if (isBrowser && !isTestEnv) {
    var globalContext = typeof globalThis < "u" ? globalThis : isBrowser ? window : global, globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";
    globalContext[globalKey] && console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used."), globalContext[globalKey] = !0;
  }
}
var testOmitPropsOnStringTag = isPropValid, testOmitPropsOnComponent = function(ee) {
  return ee !== "theme";
}, getDefaultShouldForwardProp = function(ee) {
  return typeof ee == "string" && ee.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
}, composeShouldForwardProps = function(ee, ne, ie) {
  var oe;
  if (ne) {
    var ce = ne.shouldForwardProp;
    oe = ee.__emotion_forwardProp && ce ? function(he) {
      return ee.__emotion_forwardProp(he) && ce(he);
    } : ce;
  }
  return typeof oe != "function" && ie && (oe = ee.__emotion_forwardProp), oe;
}, ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`, Insertion = function(ee) {
  var ne = ee.cache, ie = ee.serialized, oe = ee.isStringTag;
  return registerStyles(ne, ie, oe), useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(ne, ie, oe);
  }), null;
}, createStyled$1 = function Z(ee, ne) {
  if (process.env.NODE_ENV !== "production" && ee === void 0)
    throw new Error(`You are trying to create a styled element with an undefined component.
You may have forgotten to import it.`);
  var ie = ee.__emotion_real === ee, oe = ie && ee.__emotion_base || ee, ce, he;
  ne !== void 0 && (ce = ne.label, he = ne.target);
  var fe = composeShouldForwardProps(ee, ne, ie), xe = fe || getDefaultShouldForwardProp(oe), Ae = !xe("as");
  return function() {
    var Ee = arguments, ye = ie && ee.__emotion_styles !== void 0 ? ee.__emotion_styles.slice(0) : [];
    if (ce !== void 0 && ye.push("label:" + ce + ";"), Ee[0] == null || Ee[0].raw === void 0)
      ye.push.apply(ye, Ee);
    else {
      process.env.NODE_ENV !== "production" && Ee[0][0] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR), ye.push(Ee[0][0]);
      for (var ge = Ee.length, me = 1; me < ge; me++)
        process.env.NODE_ENV !== "production" && Ee[0][me] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR), ye.push(Ee[me], Ee[0][me]);
    }
    var Ce = withEmotionCache(function(Ie, Oe, He) {
      var Ne = Ae && Ie.as || oe, Pe = "", Fe = [], Le = Ie;
      if (Ie.theme == null) {
        Le = {};
        for (var We in Ie)
          Le[We] = Ie[We];
        Le.theme = useContext(ThemeContext$3);
      }
      typeof Ie.className == "string" ? Pe = getRegisteredStyles(Oe.registered, Fe, Ie.className) : Ie.className != null && (Pe = Ie.className + " ");
      var rt = serializeStyles(ye.concat(Fe), Oe.registered, Le);
      Pe += Oe.key + "-" + rt.name, he !== void 0 && (Pe += " " + he);
      var gt = Ae && fe === void 0 ? getDefaultShouldForwardProp(Ne) : xe, kt = {};
      for (var Ke in Ie)
        Ae && Ke === "as" || gt(Ke) && (kt[Ke] = Ie[Ke]);
      return kt.className = Pe, kt.ref = He, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion, {
        cache: Oe,
        serialized: rt,
        isStringTag: typeof Ne == "string"
      }), /* @__PURE__ */ createElement(Ne, kt));
    });
    return Ce.displayName = ce !== void 0 ? ce : "Styled(" + (typeof oe == "string" ? oe : oe.displayName || oe.name || "Component") + ")", Ce.defaultProps = ee.defaultProps, Ce.__emotion_real = Ce, Ce.__emotion_base = oe, Ce.__emotion_styles = ye, Ce.__emotion_forwardProp = fe, Object.defineProperty(Ce, "toString", {
      value: function() {
        return he === void 0 && process.env.NODE_ENV !== "production" ? "NO_COMPONENT_SELECTOR" : "." + he;
      }
    }), Ce.withComponent = function(Ie, Oe) {
      return Z(Ie, _extends$1({}, ne, Oe, {
        shouldForwardProp: composeShouldForwardProps(Ce, Oe, !0)
      })).apply(void 0, ye);
    }, Ce;
  };
}, tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], newStyled = createStyled$1.bind();
tags.forEach(function(Z) {
  newStyled[Z] = newStyled(Z);
});
const emStyled = newStyled;
var propTypes = { exports: {} };
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var objectAssign, hasRequiredObjectAssign;
function requireObjectAssign() {
  if (hasRequiredObjectAssign)
    return objectAssign;
  hasRequiredObjectAssign = 1;
  var Z = Object.getOwnPropertySymbols, ee = Object.prototype.hasOwnProperty, ne = Object.prototype.propertyIsEnumerable;
  function ie(ce) {
    if (ce == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(ce);
  }
  function oe() {
    try {
      if (!Object.assign)
        return !1;
      var ce = new String("abc");
      if (ce[5] = "de", Object.getOwnPropertyNames(ce)[0] === "5")
        return !1;
      for (var he = {}, fe = 0; fe < 10; fe++)
        he["_" + String.fromCharCode(fe)] = fe;
      var xe = Object.getOwnPropertyNames(he).map(function(Ee) {
        return he[Ee];
      });
      if (xe.join("") !== "0123456789")
        return !1;
      var Ae = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(Ee) {
        Ae[Ee] = Ee;
      }), Object.keys(Object.assign({}, Ae)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return objectAssign = oe() ? Object.assign : function(ce, he) {
    for (var fe, xe = ie(ce), Ae, Ee = 1; Ee < arguments.length; Ee++) {
      fe = Object(arguments[Ee]);
      for (var ye in fe)
        ee.call(fe, ye) && (xe[ye] = fe[ye]);
      if (Z) {
        Ae = Z(fe);
        for (var ge = 0; ge < Ae.length; ge++)
          ne.call(fe, Ae[ge]) && (xe[Ae[ge]] = fe[Ae[ge]]);
      }
    }
    return xe;
  }, objectAssign;
}
var ReactPropTypesSecret_1, hasRequiredReactPropTypesSecret;
function requireReactPropTypesSecret() {
  if (hasRequiredReactPropTypesSecret)
    return ReactPropTypesSecret_1;
  hasRequiredReactPropTypesSecret = 1;
  var Z = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return ReactPropTypesSecret_1 = Z, ReactPropTypesSecret_1;
}
var has, hasRequiredHas;
function requireHas() {
  return hasRequiredHas || (hasRequiredHas = 1, has = Function.call.bind(Object.prototype.hasOwnProperty)), has;
}
var checkPropTypes_1, hasRequiredCheckPropTypes;
function requireCheckPropTypes() {
  if (hasRequiredCheckPropTypes)
    return checkPropTypes_1;
  hasRequiredCheckPropTypes = 1;
  var Z = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var ee = requireReactPropTypesSecret(), ne = {}, ie = requireHas();
    Z = function(ce) {
      var he = "Warning: " + ce;
      typeof console < "u" && console.error(he);
      try {
        throw new Error(he);
      } catch {
      }
    };
  }
  function oe(ce, he, fe, xe, Ae) {
    if (process.env.NODE_ENV !== "production") {
      for (var Ee in ce)
        if (ie(ce, Ee)) {
          var ye;
          try {
            if (typeof ce[Ee] != "function") {
              var ge = Error(
                (xe || "React class") + ": " + fe + " type `" + Ee + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ce[Ee] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw ge.name = "Invariant Violation", ge;
            }
            ye = ce[Ee](he, Ee, xe, fe, null, ee);
          } catch (Ce) {
            ye = Ce;
          }
          if (ye && !(ye instanceof Error) && Z(
            (xe || "React class") + ": type specification of " + fe + " `" + Ee + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof ye + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), ye instanceof Error && !(ye.message in ne)) {
            ne[ye.message] = !0;
            var me = Ae ? Ae() : "";
            Z(
              "Failed " + fe + " type: " + ye.message + (me != null ? me : "")
            );
          }
        }
    }
  }
  return oe.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (ne = {});
  }, checkPropTypes_1 = oe, checkPropTypes_1;
}
var factoryWithTypeCheckers, hasRequiredFactoryWithTypeCheckers;
function requireFactoryWithTypeCheckers() {
  if (hasRequiredFactoryWithTypeCheckers)
    return factoryWithTypeCheckers;
  hasRequiredFactoryWithTypeCheckers = 1;
  var Z = requireReactIs(), ee = requireObjectAssign(), ne = requireReactPropTypesSecret(), ie = requireHas(), oe = requireCheckPropTypes(), ce = function() {
  };
  process.env.NODE_ENV !== "production" && (ce = function(fe) {
    var xe = "Warning: " + fe;
    typeof console < "u" && console.error(xe);
    try {
      throw new Error(xe);
    } catch {
    }
  });
  function he() {
    return null;
  }
  return factoryWithTypeCheckers = function(fe, xe) {
    var Ae = typeof Symbol == "function" && Symbol.iterator, Ee = "@@iterator";
    function ye(Gt) {
      var pt = Gt && (Ae && Gt[Ae] || Gt[Ee]);
      if (typeof pt == "function")
        return pt;
    }
    var ge = "<<anonymous>>", me = {
      array: He("array"),
      bigint: He("bigint"),
      bool: He("boolean"),
      func: He("function"),
      number: He("number"),
      object: He("object"),
      string: He("string"),
      symbol: He("symbol"),
      any: Ne(),
      arrayOf: Pe,
      element: Fe(),
      elementType: Le(),
      instanceOf: We,
      node: Ke(),
      objectOf: gt,
      oneOf: rt,
      oneOfType: kt,
      shape: Nt,
      exact: Ft
    };
    function Ce(Gt, pt) {
      return Gt === pt ? Gt !== 0 || 1 / Gt === 1 / pt : Gt !== Gt && pt !== pt;
    }
    function Ie(Gt, pt) {
      this.message = Gt, this.data = pt && typeof pt == "object" ? pt : {}, this.stack = "";
    }
    Ie.prototype = Error.prototype;
    function Oe(Gt) {
      if (process.env.NODE_ENV !== "production")
        var pt = {}, It = 0;
      function qt(ar, rr, Ar, vt, Ut, Xe, tt) {
        if (vt = vt || ge, Xe = Xe || Ar, tt !== ne) {
          if (xe) {
            var et = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw et.name = "Invariant Violation", et;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var Et = vt + ":" + Ar;
            !pt[Et] && It < 3 && (ce(
              "You are manually calling a React.PropTypes validation function for the `" + Xe + "` prop on `" + vt + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), pt[Et] = !0, It++);
          }
        }
        return rr[Ar] == null ? ar ? rr[Ar] === null ? new Ie("The " + Ut + " `" + Xe + "` is marked as required " + ("in `" + vt + "`, but its value is `null`.")) : new Ie("The " + Ut + " `" + Xe + "` is marked as required in " + ("`" + vt + "`, but its value is `undefined`.")) : null : Gt(rr, Ar, vt, Ut, Xe);
      }
      var De = qt.bind(null, !1);
      return De.isRequired = qt.bind(null, !0), De;
    }
    function He(Gt) {
      function pt(It, qt, De, ar, rr, Ar) {
        var vt = It[qt], Ut = Vt(vt);
        if (Ut !== Gt) {
          var Xe = Xt(vt);
          return new Ie(
            "Invalid " + ar + " `" + rr + "` of type " + ("`" + Xe + "` supplied to `" + De + "`, expected ") + ("`" + Gt + "`."),
            { expectedType: Gt }
          );
        }
        return null;
      }
      return Oe(pt);
    }
    function Ne() {
      return Oe(he);
    }
    function Pe(Gt) {
      function pt(It, qt, De, ar, rr) {
        if (typeof Gt != "function")
          return new Ie("Property `" + rr + "` of component `" + De + "` has invalid PropType notation inside arrayOf.");
        var Ar = It[qt];
        if (!Array.isArray(Ar)) {
          var vt = Vt(Ar);
          return new Ie("Invalid " + ar + " `" + rr + "` of type " + ("`" + vt + "` supplied to `" + De + "`, expected an array."));
        }
        for (var Ut = 0; Ut < Ar.length; Ut++) {
          var Xe = Gt(Ar, Ut, De, ar, rr + "[" + Ut + "]", ne);
          if (Xe instanceof Error)
            return Xe;
        }
        return null;
      }
      return Oe(pt);
    }
    function Fe() {
      function Gt(pt, It, qt, De, ar) {
        var rr = pt[It];
        if (!fe(rr)) {
          var Ar = Vt(rr);
          return new Ie("Invalid " + De + " `" + ar + "` of type " + ("`" + Ar + "` supplied to `" + qt + "`, expected a single ReactElement."));
        }
        return null;
      }
      return Oe(Gt);
    }
    function Le() {
      function Gt(pt, It, qt, De, ar) {
        var rr = pt[It];
        if (!Z.isValidElementType(rr)) {
          var Ar = Vt(rr);
          return new Ie("Invalid " + De + " `" + ar + "` of type " + ("`" + Ar + "` supplied to `" + qt + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return Oe(Gt);
    }
    function We(Gt) {
      function pt(It, qt, De, ar, rr) {
        if (!(It[qt] instanceof Gt)) {
          var Ar = Gt.name || ge, vt = Zt(It[qt]);
          return new Ie("Invalid " + ar + " `" + rr + "` of type " + ("`" + vt + "` supplied to `" + De + "`, expected ") + ("instance of `" + Ar + "`."));
        }
        return null;
      }
      return Oe(pt);
    }
    function rt(Gt) {
      if (!Array.isArray(Gt))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? ce(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : ce("Invalid argument supplied to oneOf, expected an array.")), he;
      function pt(It, qt, De, ar, rr) {
        for (var Ar = It[qt], vt = 0; vt < Gt.length; vt++)
          if (Ce(Ar, Gt[vt]))
            return null;
        var Ut = JSON.stringify(Gt, function(tt, et) {
          var Et = Xt(et);
          return Et === "symbol" ? String(et) : et;
        });
        return new Ie("Invalid " + ar + " `" + rr + "` of value `" + String(Ar) + "` " + ("supplied to `" + De + "`, expected one of " + Ut + "."));
      }
      return Oe(pt);
    }
    function gt(Gt) {
      function pt(It, qt, De, ar, rr) {
        if (typeof Gt != "function")
          return new Ie("Property `" + rr + "` of component `" + De + "` has invalid PropType notation inside objectOf.");
        var Ar = It[qt], vt = Vt(Ar);
        if (vt !== "object")
          return new Ie("Invalid " + ar + " `" + rr + "` of type " + ("`" + vt + "` supplied to `" + De + "`, expected an object."));
        for (var Ut in Ar)
          if (ie(Ar, Ut)) {
            var Xe = Gt(Ar, Ut, De, ar, rr + "." + Ut, ne);
            if (Xe instanceof Error)
              return Xe;
          }
        return null;
      }
      return Oe(pt);
    }
    function kt(Gt) {
      if (!Array.isArray(Gt))
        return process.env.NODE_ENV !== "production" && ce("Invalid argument supplied to oneOfType, expected an instance of array."), he;
      for (var pt = 0; pt < Gt.length; pt++) {
        var It = Gt[pt];
        if (typeof It != "function")
          return ce(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + Lt(It) + " at index " + pt + "."
          ), he;
      }
      function qt(De, ar, rr, Ar, vt) {
        for (var Ut = [], Xe = 0; Xe < Gt.length; Xe++) {
          var tt = Gt[Xe], et = tt(De, ar, rr, Ar, vt, ne);
          if (et == null)
            return null;
          et.data && ie(et.data, "expectedType") && Ut.push(et.data.expectedType);
        }
        var Et = Ut.length > 0 ? ", expected one of type [" + Ut.join(", ") + "]" : "";
        return new Ie("Invalid " + Ar + " `" + vt + "` supplied to " + ("`" + rr + "`" + Et + "."));
      }
      return Oe(qt);
    }
    function Ke() {
      function Gt(pt, It, qt, De, ar) {
        return At(pt[It]) ? null : new Ie("Invalid " + De + " `" + ar + "` supplied to " + ("`" + qt + "`, expected a ReactNode."));
      }
      return Oe(Gt);
    }
    function ht(Gt, pt, It, qt, De) {
      return new Ie(
        (Gt || "React class") + ": " + pt + " type `" + It + "." + qt + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + De + "`."
      );
    }
    function Nt(Gt) {
      function pt(It, qt, De, ar, rr) {
        var Ar = It[qt], vt = Vt(Ar);
        if (vt !== "object")
          return new Ie("Invalid " + ar + " `" + rr + "` of type `" + vt + "` " + ("supplied to `" + De + "`, expected `object`."));
        for (var Ut in Gt) {
          var Xe = Gt[Ut];
          if (typeof Xe != "function")
            return ht(De, ar, rr, Ut, Xt(Xe));
          var tt = Xe(Ar, Ut, De, ar, rr + "." + Ut, ne);
          if (tt)
            return tt;
        }
        return null;
      }
      return Oe(pt);
    }
    function Ft(Gt) {
      function pt(It, qt, De, ar, rr) {
        var Ar = It[qt], vt = Vt(Ar);
        if (vt !== "object")
          return new Ie("Invalid " + ar + " `" + rr + "` of type `" + vt + "` " + ("supplied to `" + De + "`, expected `object`."));
        var Ut = ee({}, It[qt], Gt);
        for (var Xe in Ut) {
          var tt = Gt[Xe];
          if (ie(Gt, Xe) && typeof tt != "function")
            return ht(De, ar, rr, Xe, Xt(tt));
          if (!tt)
            return new Ie(
              "Invalid " + ar + " `" + rr + "` key `" + Xe + "` supplied to `" + De + "`.\nBad object: " + JSON.stringify(It[qt], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(Gt), null, "  ")
            );
          var et = tt(Ar, Xe, De, ar, rr + "." + Xe, ne);
          if (et)
            return et;
        }
        return null;
      }
      return Oe(pt);
    }
    function At(Gt) {
      switch (typeof Gt) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !Gt;
        case "object":
          if (Array.isArray(Gt))
            return Gt.every(At);
          if (Gt === null || fe(Gt))
            return !0;
          var pt = ye(Gt);
          if (pt) {
            var It = pt.call(Gt), qt;
            if (pt !== Gt.entries) {
              for (; !(qt = It.next()).done; )
                if (!At(qt.value))
                  return !1;
            } else
              for (; !(qt = It.next()).done; ) {
                var De = qt.value;
                if (De && !At(De[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function St(Gt, pt) {
      return Gt === "symbol" ? !0 : pt ? pt["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && pt instanceof Symbol : !1;
    }
    function Vt(Gt) {
      var pt = typeof Gt;
      return Array.isArray(Gt) ? "array" : Gt instanceof RegExp ? "object" : St(pt, Gt) ? "symbol" : pt;
    }
    function Xt(Gt) {
      if (typeof Gt > "u" || Gt === null)
        return "" + Gt;
      var pt = Vt(Gt);
      if (pt === "object") {
        if (Gt instanceof Date)
          return "date";
        if (Gt instanceof RegExp)
          return "regexp";
      }
      return pt;
    }
    function Lt(Gt) {
      var pt = Xt(Gt);
      switch (pt) {
        case "array":
        case "object":
          return "an " + pt;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + pt;
        default:
          return pt;
      }
    }
    function Zt(Gt) {
      return !Gt.constructor || !Gt.constructor.name ? ge : Gt.constructor.name;
    }
    return me.checkPropTypes = oe, me.resetWarningCache = oe.resetWarningCache, me.PropTypes = me, me;
  }, factoryWithTypeCheckers;
}
var factoryWithThrowingShims, hasRequiredFactoryWithThrowingShims;
function requireFactoryWithThrowingShims() {
  if (hasRequiredFactoryWithThrowingShims)
    return factoryWithThrowingShims;
  hasRequiredFactoryWithThrowingShims = 1;
  var Z = requireReactPropTypesSecret();
  function ee() {
  }
  function ne() {
  }
  return ne.resetWarningCache = ee, factoryWithThrowingShims = function() {
    function ie(he, fe, xe, Ae, Ee, ye) {
      if (ye !== Z) {
        var ge = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw ge.name = "Invariant Violation", ge;
      }
    }
    ie.isRequired = ie;
    function oe() {
      return ie;
    }
    var ce = {
      array: ie,
      bigint: ie,
      bool: ie,
      func: ie,
      number: ie,
      object: ie,
      string: ie,
      symbol: ie,
      any: ie,
      arrayOf: oe,
      element: ie,
      elementType: ie,
      instanceOf: oe,
      node: ie,
      objectOf: oe,
      oneOf: oe,
      oneOfType: oe,
      shape: oe,
      exact: oe,
      checkPropTypes: ne,
      resetWarningCache: ee
    };
    return ce.PropTypes = ce, ce;
  }, factoryWithThrowingShims;
}
if (process.env.NODE_ENV !== "production") {
  var ReactIs = requireReactIs(), throwOnDirectAccess = !0;
  propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
} else
  propTypes.exports = requireFactoryWithThrowingShims()();
var jsxRuntime = { exports: {} }, reactJsxRuntime_production_min = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_production_min;
function requireReactJsxRuntime_production_min() {
  if (hasRequiredReactJsxRuntime_production_min)
    return reactJsxRuntime_production_min;
  hasRequiredReactJsxRuntime_production_min = 1;
  var Z = React__default, ee = Symbol.for("react.element"), ne = Symbol.for("react.fragment"), ie = Object.prototype.hasOwnProperty, oe = Z.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, ce = { key: !0, ref: !0, __self: !0, __source: !0 };
  function he(fe, xe, Ae) {
    var Ee, ye = {}, ge = null, me = null;
    Ae !== void 0 && (ge = "" + Ae), xe.key !== void 0 && (ge = "" + xe.key), xe.ref !== void 0 && (me = xe.ref);
    for (Ee in xe)
      ie.call(xe, Ee) && !ce.hasOwnProperty(Ee) && (ye[Ee] = xe[Ee]);
    if (fe && fe.defaultProps)
      for (Ee in xe = fe.defaultProps, xe)
        ye[Ee] === void 0 && (ye[Ee] = xe[Ee]);
    return { $$typeof: ee, type: fe, key: ge, ref: me, props: ye, _owner: oe.current };
  }
  return reactJsxRuntime_production_min.Fragment = ne, reactJsxRuntime_production_min.jsx = he, reactJsxRuntime_production_min.jsxs = he, reactJsxRuntime_production_min;
}
var reactJsxRuntime_development = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_development;
function requireReactJsxRuntime_development() {
  return hasRequiredReactJsxRuntime_development || (hasRequiredReactJsxRuntime_development = 1, process.env.NODE_ENV !== "production" && function() {
    var Z = React__default, ee = Symbol.for("react.element"), ne = Symbol.for("react.portal"), ie = Symbol.for("react.fragment"), oe = Symbol.for("react.strict_mode"), ce = Symbol.for("react.profiler"), he = Symbol.for("react.provider"), fe = Symbol.for("react.context"), xe = Symbol.for("react.forward_ref"), Ae = Symbol.for("react.suspense"), Ee = Symbol.for("react.suspense_list"), ye = Symbol.for("react.memo"), ge = Symbol.for("react.lazy"), me = Symbol.for("react.offscreen"), Ce = Symbol.iterator, Ie = "@@iterator";
    function Oe(Rt) {
      if (Rt === null || typeof Rt != "object")
        return null;
      var tr = Ce && Rt[Ce] || Rt[Ie];
      return typeof tr == "function" ? tr : null;
    }
    var He = Z.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function Ne(Rt) {
      {
        for (var tr = arguments.length, Nr = new Array(tr > 1 ? tr - 1 : 0), on = 1; on < tr; on++)
          Nr[on - 1] = arguments[on];
        Pe("error", Rt, Nr);
      }
    }
    function Pe(Rt, tr, Nr) {
      {
        var on = He.ReactDebugCurrentFrame, xn = on.getStackAddendum();
        xn !== "" && (tr += "%s", Nr = Nr.concat([xn]));
        var Bn = Nr.map(function(En) {
          return String(En);
        });
        Bn.unshift("Warning: " + tr), Function.prototype.apply.call(console[Rt], console, Bn);
      }
    }
    var Fe = !1, Le = !1, We = !1, rt = !1, gt = !1, kt;
    kt = Symbol.for("react.module.reference");
    function Ke(Rt) {
      return !!(typeof Rt == "string" || typeof Rt == "function" || Rt === ie || Rt === ce || gt || Rt === oe || Rt === Ae || Rt === Ee || rt || Rt === me || Fe || Le || We || typeof Rt == "object" && Rt !== null && (Rt.$$typeof === ge || Rt.$$typeof === ye || Rt.$$typeof === he || Rt.$$typeof === fe || Rt.$$typeof === xe || Rt.$$typeof === kt || Rt.getModuleId !== void 0));
    }
    function ht(Rt, tr, Nr) {
      var on = Rt.displayName;
      if (on)
        return on;
      var xn = tr.displayName || tr.name || "";
      return xn !== "" ? Nr + "(" + xn + ")" : Nr;
    }
    function Nt(Rt) {
      return Rt.displayName || "Context";
    }
    function Ft(Rt) {
      if (Rt == null)
        return null;
      if (typeof Rt.tag == "number" && Ne("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof Rt == "function")
        return Rt.displayName || Rt.name || null;
      if (typeof Rt == "string")
        return Rt;
      switch (Rt) {
        case ie:
          return "Fragment";
        case ne:
          return "Portal";
        case ce:
          return "Profiler";
        case oe:
          return "StrictMode";
        case Ae:
          return "Suspense";
        case Ee:
          return "SuspenseList";
      }
      if (typeof Rt == "object")
        switch (Rt.$$typeof) {
          case fe:
            var tr = Rt;
            return Nt(tr) + ".Consumer";
          case he:
            var Nr = Rt;
            return Nt(Nr._context) + ".Provider";
          case xe:
            return ht(Rt, Rt.render, "ForwardRef");
          case ye:
            var on = Rt.displayName || null;
            return on !== null ? on : Ft(Rt.type) || "Memo";
          case ge: {
            var xn = Rt, Bn = xn._payload, En = xn._init;
            try {
              return Ft(En(Bn));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var At = Object.assign, St = 0, Vt, Xt, Lt, Zt, Gt, pt, It;
    function qt() {
    }
    qt.__reactDisabledLog = !0;
    function De() {
      {
        if (St === 0) {
          Vt = console.log, Xt = console.info, Lt = console.warn, Zt = console.error, Gt = console.group, pt = console.groupCollapsed, It = console.groupEnd;
          var Rt = {
            configurable: !0,
            enumerable: !0,
            value: qt,
            writable: !0
          };
          Object.defineProperties(console, {
            info: Rt,
            log: Rt,
            warn: Rt,
            error: Rt,
            group: Rt,
            groupCollapsed: Rt,
            groupEnd: Rt
          });
        }
        St++;
      }
    }
    function ar() {
      {
        if (St--, St === 0) {
          var Rt = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: At({}, Rt, {
              value: Vt
            }),
            info: At({}, Rt, {
              value: Xt
            }),
            warn: At({}, Rt, {
              value: Lt
            }),
            error: At({}, Rt, {
              value: Zt
            }),
            group: At({}, Rt, {
              value: Gt
            }),
            groupCollapsed: At({}, Rt, {
              value: pt
            }),
            groupEnd: At({}, Rt, {
              value: It
            })
          });
        }
        St < 0 && Ne("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var rr = He.ReactCurrentDispatcher, Ar;
    function vt(Rt, tr, Nr) {
      {
        if (Ar === void 0)
          try {
            throw Error();
          } catch (xn) {
            var on = xn.stack.trim().match(/\n( *(at )?)/);
            Ar = on && on[1] || "";
          }
        return `
` + Ar + Rt;
      }
    }
    var Ut = !1, Xe;
    {
      var tt = typeof WeakMap == "function" ? WeakMap : Map;
      Xe = new tt();
    }
    function et(Rt, tr) {
      if (!Rt || Ut)
        return "";
      {
        var Nr = Xe.get(Rt);
        if (Nr !== void 0)
          return Nr;
      }
      var on;
      Ut = !0;
      var xn = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var Bn;
      Bn = rr.current, rr.current = null, De();
      try {
        if (tr) {
          var En = function() {
            throw Error();
          };
          if (Object.defineProperty(En.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(En, []);
            } catch (Br) {
              on = Br;
            }
            Reflect.construct(Rt, [], En);
          } else {
            try {
              En.call();
            } catch (Br) {
              on = Br;
            }
            Rt.call(En.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Br) {
            on = Br;
          }
          Rt();
        }
      } catch (Br) {
        if (Br && on && typeof Br.stack == "string") {
          for (var pn = Br.stack.split(`
`), Sn = on.stack.split(`
`), Vn = pn.length - 1, Zr = Sn.length - 1; Vn >= 1 && Zr >= 0 && pn[Vn] !== Sn[Zr]; )
            Zr--;
          for (; Vn >= 1 && Zr >= 0; Vn--, Zr--)
            if (pn[Vn] !== Sn[Zr]) {
              if (Vn !== 1 || Zr !== 1)
                do
                  if (Vn--, Zr--, Zr < 0 || pn[Vn] !== Sn[Zr]) {
                    var Xr = `
` + pn[Vn].replace(" at new ", " at ");
                    return Rt.displayName && Xr.includes("<anonymous>") && (Xr = Xr.replace("<anonymous>", Rt.displayName)), typeof Rt == "function" && Xe.set(Rt, Xr), Xr;
                  }
                while (Vn >= 1 && Zr >= 0);
              break;
            }
        }
      } finally {
        Ut = !1, rr.current = Bn, ar(), Error.prepareStackTrace = xn;
      }
      var $r = Rt ? Rt.displayName || Rt.name : "", xt = $r ? vt($r) : "";
      return typeof Rt == "function" && Xe.set(Rt, xt), xt;
    }
    function Et(Rt, tr, Nr) {
      return et(Rt, !1);
    }
    function lt(Rt) {
      var tr = Rt.prototype;
      return !!(tr && tr.isReactComponent);
    }
    function $e(Rt, tr, Nr) {
      if (Rt == null)
        return "";
      if (typeof Rt == "function")
        return et(Rt, lt(Rt));
      if (typeof Rt == "string")
        return vt(Rt);
      switch (Rt) {
        case Ae:
          return vt("Suspense");
        case Ee:
          return vt("SuspenseList");
      }
      if (typeof Rt == "object")
        switch (Rt.$$typeof) {
          case xe:
            return Et(Rt.render);
          case ye:
            return $e(Rt.type, tr, Nr);
          case ge: {
            var on = Rt, xn = on._payload, Bn = on._init;
            try {
              return $e(Bn(xn), tr, Nr);
            } catch {
            }
          }
        }
      return "";
    }
    var _e = Object.prototype.hasOwnProperty, Be = {}, be = He.ReactDebugCurrentFrame;
    function ke(Rt) {
      if (Rt) {
        var tr = Rt._owner, Nr = $e(Rt.type, Rt._source, tr ? tr.type : null);
        be.setExtraStackFrame(Nr);
      } else
        be.setExtraStackFrame(null);
    }
    function Ve(Rt, tr, Nr, on, xn) {
      {
        var Bn = Function.call.bind(_e);
        for (var En in Rt)
          if (Bn(Rt, En)) {
            var pn = void 0;
            try {
              if (typeof Rt[En] != "function") {
                var Sn = Error((on || "React class") + ": " + Nr + " type `" + En + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof Rt[En] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Sn.name = "Invariant Violation", Sn;
              }
              pn = Rt[En](tr, En, on, Nr, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (Vn) {
              pn = Vn;
            }
            pn && !(pn instanceof Error) && (ke(xn), Ne("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", on || "React class", Nr, En, typeof pn), ke(null)), pn instanceof Error && !(pn.message in Be) && (Be[pn.message] = !0, ke(xn), Ne("Failed %s type: %s", Nr, pn.message), ke(null));
          }
      }
    }
    var Je = Array.isArray;
    function at(Rt) {
      return Je(Rt);
    }
    function Tt(Rt) {
      {
        var tr = typeof Symbol == "function" && Symbol.toStringTag, Nr = tr && Rt[Symbol.toStringTag] || Rt.constructor.name || "Object";
        return Nr;
      }
    }
    function Dt(Rt) {
      try {
        return zt(Rt), !1;
      } catch {
        return !0;
      }
    }
    function zt(Rt) {
      return "" + Rt;
    }
    function Yt(Rt) {
      if (Dt(Rt))
        return Ne("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Tt(Rt)), zt(Rt);
    }
    var Ue = He.ReactCurrentOwner, Te = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Re, it, bt;
    bt = {};
    function Qt(Rt) {
      if (_e.call(Rt, "ref")) {
        var tr = Object.getOwnPropertyDescriptor(Rt, "ref").get;
        if (tr && tr.isReactWarning)
          return !1;
      }
      return Rt.ref !== void 0;
    }
    function jt(Rt) {
      if (_e.call(Rt, "key")) {
        var tr = Object.getOwnPropertyDescriptor(Rt, "key").get;
        if (tr && tr.isReactWarning)
          return !1;
      }
      return Rt.key !== void 0;
    }
    function yr(Rt, tr) {
      if (typeof Rt.ref == "string" && Ue.current && tr && Ue.current.stateNode !== tr) {
        var Nr = Ft(Ue.current.type);
        bt[Nr] || (Ne('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', Ft(Ue.current.type), Rt.ref), bt[Nr] = !0);
      }
    }
    function gr(Rt, tr) {
      {
        var Nr = function() {
          Re || (Re = !0, Ne("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", tr));
        };
        Nr.isReactWarning = !0, Object.defineProperty(Rt, "key", {
          get: Nr,
          configurable: !0
        });
      }
    }
    function br(Rt, tr) {
      {
        var Nr = function() {
          it || (it = !0, Ne("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", tr));
        };
        Nr.isReactWarning = !0, Object.defineProperty(Rt, "ref", {
          get: Nr,
          configurable: !0
        });
      }
    }
    var mr = function(Rt, tr, Nr, on, xn, Bn, En) {
      var pn = {
        $$typeof: ee,
        type: Rt,
        key: tr,
        ref: Nr,
        props: En,
        _owner: Bn
      };
      return pn._store = {}, Object.defineProperty(pn._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(pn, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: on
      }), Object.defineProperty(pn, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: xn
      }), Object.freeze && (Object.freeze(pn.props), Object.freeze(pn)), pn;
    };
    function _r(Rt, tr, Nr, on, xn) {
      {
        var Bn, En = {}, pn = null, Sn = null;
        Nr !== void 0 && (Yt(Nr), pn = "" + Nr), jt(tr) && (Yt(tr.key), pn = "" + tr.key), Qt(tr) && (Sn = tr.ref, yr(tr, xn));
        for (Bn in tr)
          _e.call(tr, Bn) && !Te.hasOwnProperty(Bn) && (En[Bn] = tr[Bn]);
        if (Rt && Rt.defaultProps) {
          var Vn = Rt.defaultProps;
          for (Bn in Vn)
            En[Bn] === void 0 && (En[Bn] = Vn[Bn]);
        }
        if (pn || Sn) {
          var Zr = typeof Rt == "function" ? Rt.displayName || Rt.name || "Unknown" : Rt;
          pn && gr(En, Zr), Sn && br(En, Zr);
        }
        return mr(Rt, pn, Sn, xn, on, Ue.current, En);
      }
    }
    var en = He.ReactCurrentOwner, Jn = He.ReactDebugCurrentFrame;
    function an(Rt) {
      if (Rt) {
        var tr = Rt._owner, Nr = $e(Rt.type, Rt._source, tr ? tr.type : null);
        Jn.setExtraStackFrame(Nr);
      } else
        Jn.setExtraStackFrame(null);
    }
    var qn;
    qn = !1;
    function $n(Rt) {
      return typeof Rt == "object" && Rt !== null && Rt.$$typeof === ee;
    }
    function Gn() {
      {
        if (en.current) {
          var Rt = Ft(en.current.type);
          if (Rt)
            return `

Check the render method of \`` + Rt + "`.";
        }
        return "";
      }
    }
    function Un(Rt) {
      {
        if (Rt !== void 0) {
          var tr = Rt.fileName.replace(/^.*[\\\/]/, ""), Nr = Rt.lineNumber;
          return `

Check your code at ` + tr + ":" + Nr + ".";
        }
        return "";
      }
    }
    var oi = {};
    function Ai(Rt) {
      {
        var tr = Gn();
        if (!tr) {
          var Nr = typeof Rt == "string" ? Rt : Rt.displayName || Rt.name;
          Nr && (tr = `

Check the top-level render call using <` + Nr + ">.");
        }
        return tr;
      }
    }
    function Ji(Rt, tr) {
      {
        if (!Rt._store || Rt._store.validated || Rt.key != null)
          return;
        Rt._store.validated = !0;
        var Nr = Ai(tr);
        if (oi[Nr])
          return;
        oi[Nr] = !0;
        var on = "";
        Rt && Rt._owner && Rt._owner !== en.current && (on = " It was passed a child from " + Ft(Rt._owner.type) + "."), an(Rt), Ne('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', Nr, on), an(null);
      }
    }
    function Ri(Rt, tr) {
      {
        if (typeof Rt != "object")
          return;
        if (at(Rt))
          for (var Nr = 0; Nr < Rt.length; Nr++) {
            var on = Rt[Nr];
            $n(on) && Ji(on, tr);
          }
        else if ($n(Rt))
          Rt._store && (Rt._store.validated = !0);
        else if (Rt) {
          var xn = Oe(Rt);
          if (typeof xn == "function" && xn !== Rt.entries)
            for (var Bn = xn.call(Rt), En; !(En = Bn.next()).done; )
              $n(En.value) && Ji(En.value, tr);
        }
      }
    }
    function Hn(Rt) {
      {
        var tr = Rt.type;
        if (tr == null || typeof tr == "string")
          return;
        var Nr;
        if (typeof tr == "function")
          Nr = tr.propTypes;
        else if (typeof tr == "object" && (tr.$$typeof === xe || tr.$$typeof === ye))
          Nr = tr.propTypes;
        else
          return;
        if (Nr) {
          var on = Ft(tr);
          Ve(Nr, Rt.props, "prop", on, Rt);
        } else if (tr.PropTypes !== void 0 && !qn) {
          qn = !0;
          var xn = Ft(tr);
          Ne("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", xn || "Unknown");
        }
        typeof tr.getDefaultProps == "function" && !tr.getDefaultProps.isReactClassApproved && Ne("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Xn(Rt) {
      {
        for (var tr = Object.keys(Rt.props), Nr = 0; Nr < tr.length; Nr++) {
          var on = tr[Nr];
          if (on !== "children" && on !== "key") {
            an(Rt), Ne("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", on), an(null);
            break;
          }
        }
        Rt.ref !== null && (an(Rt), Ne("Invalid attribute `ref` supplied to `React.Fragment`."), an(null));
      }
    }
    function Ln(Rt, tr, Nr, on, xn, Bn) {
      {
        var En = Ke(Rt);
        if (!En) {
          var pn = "";
          (Rt === void 0 || typeof Rt == "object" && Rt !== null && Object.keys(Rt).length === 0) && (pn += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Sn = Un(xn);
          Sn ? pn += Sn : pn += Gn();
          var Vn;
          Rt === null ? Vn = "null" : at(Rt) ? Vn = "array" : Rt !== void 0 && Rt.$$typeof === ee ? (Vn = "<" + (Ft(Rt.type) || "Unknown") + " />", pn = " Did you accidentally export a JSX literal instead of a component?") : Vn = typeof Rt, Ne("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Vn, pn);
        }
        var Zr = _r(Rt, tr, Nr, xn, Bn);
        if (Zr == null)
          return Zr;
        if (En) {
          var Xr = tr.children;
          if (Xr !== void 0)
            if (on)
              if (at(Xr)) {
                for (var $r = 0; $r < Xr.length; $r++)
                  Ri(Xr[$r], Rt);
                Object.freeze && Object.freeze(Xr);
              } else
                Ne("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Ri(Xr, Rt);
        }
        return Rt === ie ? Xn(Zr) : Hn(Zr), Zr;
      }
    }
    function si(Rt, tr, Nr) {
      return Ln(Rt, tr, Nr, !0);
    }
    function gi(Rt, tr, Nr) {
      return Ln(Rt, tr, Nr, !1);
    }
    var mi = gi, yi = si;
    reactJsxRuntime_development.Fragment = ie, reactJsxRuntime_development.jsx = mi, reactJsxRuntime_development.jsxs = yi;
  }()), reactJsxRuntime_development;
}
(function(Z) {
  process.env.NODE_ENV === "production" ? Z.exports = requireReactJsxRuntime_production_min() : Z.exports = requireReactJsxRuntime_development();
})(jsxRuntime);
const Fragment = jsxRuntime.exports.Fragment, jsx = jsxRuntime.exports.jsx, jsxs = jsxRuntime.exports.jsxs;
/** @license MUI v5.10.8
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function styled$4(Z, ee) {
  const ne = emStyled(Z, ee);
  return process.env.NODE_ENV !== "production" ? (...ie) => {
    const oe = typeof Z == "string" ? `"${Z}"` : "component";
    return ie.length === 0 ? console.error([`MUI: Seems like you called \`styled(${oe})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : ie.some((ce) => ce === void 0) && console.error(`MUI: the styled(${oe})(...args) API requires all its args to be defined.`), ne(...ie);
  } : ne;
}
const internal_processStyles = (Z, ee) => {
  Array.isArray(Z.__emotion_styles) && (Z.__emotion_styles = ee(Z.__emotion_styles));
}, responsivePropType = process.env.NODE_ENV !== "production" ? propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string, propTypes.exports.object, propTypes.exports.array]) : {}, responsivePropType$1 = responsivePropType;
function chainPropTypes(Z, ee) {
  return process.env.NODE_ENV === "production" ? () => null : function(...ie) {
    return Z(...ie) || ee(...ie);
  };
}
function isPlainObject$4(Z) {
  return Z !== null && typeof Z == "object" && Z.constructor === Object;
}
function deepmerge(Z, ee, ne = {
  clone: !0
}) {
  const ie = ne.clone ? _extends$1({}, Z) : Z;
  return isPlainObject$4(Z) && isPlainObject$4(ee) && Object.keys(ee).forEach((oe) => {
    oe !== "__proto__" && (isPlainObject$4(ee[oe]) && oe in Z && isPlainObject$4(Z[oe]) ? ie[oe] = deepmerge(Z[oe], ee[oe], ne) : ie[oe] = ee[oe]);
  }), ie;
}
function isClassComponent(Z) {
  const {
    prototype: ee = {}
  } = Z;
  return Boolean(ee.isReactComponent);
}
function elementTypeAcceptingRef(Z, ee, ne, ie, oe) {
  const ce = Z[ee], he = oe || ee;
  if (ce == null || typeof window > "u")
    return null;
  let fe;
  return typeof ce == "function" && !isClassComponent(ce) && (fe = "Did you accidentally provide a plain function component instead?"), fe !== void 0 ? new Error(`Invalid ${ie} \`${he}\` supplied to \`${ne}\`. Expected an element type that can hold a ref. ${fe} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const elementTypeAcceptingRef$1 = chainPropTypes(propTypes.exports.elementType, elementTypeAcceptingRef);
function formatMuiErrorMessage(Z) {
  let ee = "https://mui.com/production-error/?code=" + Z;
  for (let ne = 1; ne < arguments.length; ne += 1)
    ee += "&args[]=" + encodeURIComponent(arguments[ne]);
  return "Minified MUI error #" + Z + "; visit " + ee + " for the full message.";
}
var reactIs = { exports: {} }, reactIs_production_min = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min;
function requireReactIs_production_min() {
  if (hasRequiredReactIs_production_min)
    return reactIs_production_min;
  hasRequiredReactIs_production_min = 1;
  var Z = Symbol.for("react.element"), ee = Symbol.for("react.portal"), ne = Symbol.for("react.fragment"), ie = Symbol.for("react.strict_mode"), oe = Symbol.for("react.profiler"), ce = Symbol.for("react.provider"), he = Symbol.for("react.context"), fe = Symbol.for("react.server_context"), xe = Symbol.for("react.forward_ref"), Ae = Symbol.for("react.suspense"), Ee = Symbol.for("react.suspense_list"), ye = Symbol.for("react.memo"), ge = Symbol.for("react.lazy"), me = Symbol.for("react.offscreen"), Ce;
  Ce = Symbol.for("react.module.reference");
  function Ie(Oe) {
    if (typeof Oe == "object" && Oe !== null) {
      var He = Oe.$$typeof;
      switch (He) {
        case Z:
          switch (Oe = Oe.type, Oe) {
            case ne:
            case oe:
            case ie:
            case Ae:
            case Ee:
              return Oe;
            default:
              switch (Oe = Oe && Oe.$$typeof, Oe) {
                case fe:
                case he:
                case xe:
                case ge:
                case ye:
                case ce:
                  return Oe;
                default:
                  return He;
              }
          }
        case ee:
          return He;
      }
    }
  }
  return reactIs_production_min.ContextConsumer = he, reactIs_production_min.ContextProvider = ce, reactIs_production_min.Element = Z, reactIs_production_min.ForwardRef = xe, reactIs_production_min.Fragment = ne, reactIs_production_min.Lazy = ge, reactIs_production_min.Memo = ye, reactIs_production_min.Portal = ee, reactIs_production_min.Profiler = oe, reactIs_production_min.StrictMode = ie, reactIs_production_min.Suspense = Ae, reactIs_production_min.SuspenseList = Ee, reactIs_production_min.isAsyncMode = function() {
    return !1;
  }, reactIs_production_min.isConcurrentMode = function() {
    return !1;
  }, reactIs_production_min.isContextConsumer = function(Oe) {
    return Ie(Oe) === he;
  }, reactIs_production_min.isContextProvider = function(Oe) {
    return Ie(Oe) === ce;
  }, reactIs_production_min.isElement = function(Oe) {
    return typeof Oe == "object" && Oe !== null && Oe.$$typeof === Z;
  }, reactIs_production_min.isForwardRef = function(Oe) {
    return Ie(Oe) === xe;
  }, reactIs_production_min.isFragment = function(Oe) {
    return Ie(Oe) === ne;
  }, reactIs_production_min.isLazy = function(Oe) {
    return Ie(Oe) === ge;
  }, reactIs_production_min.isMemo = function(Oe) {
    return Ie(Oe) === ye;
  }, reactIs_production_min.isPortal = function(Oe) {
    return Ie(Oe) === ee;
  }, reactIs_production_min.isProfiler = function(Oe) {
    return Ie(Oe) === oe;
  }, reactIs_production_min.isStrictMode = function(Oe) {
    return Ie(Oe) === ie;
  }, reactIs_production_min.isSuspense = function(Oe) {
    return Ie(Oe) === Ae;
  }, reactIs_production_min.isSuspenseList = function(Oe) {
    return Ie(Oe) === Ee;
  }, reactIs_production_min.isValidElementType = function(Oe) {
    return typeof Oe == "string" || typeof Oe == "function" || Oe === ne || Oe === oe || Oe === ie || Oe === Ae || Oe === Ee || Oe === me || typeof Oe == "object" && Oe !== null && (Oe.$$typeof === ge || Oe.$$typeof === ye || Oe.$$typeof === ce || Oe.$$typeof === he || Oe.$$typeof === xe || Oe.$$typeof === Ce || Oe.getModuleId !== void 0);
  }, reactIs_production_min.typeOf = Ie, reactIs_production_min;
}
var reactIs_development = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development;
function requireReactIs_development() {
  return hasRequiredReactIs_development || (hasRequiredReactIs_development = 1, process.env.NODE_ENV !== "production" && function() {
    var Z = Symbol.for("react.element"), ee = Symbol.for("react.portal"), ne = Symbol.for("react.fragment"), ie = Symbol.for("react.strict_mode"), oe = Symbol.for("react.profiler"), ce = Symbol.for("react.provider"), he = Symbol.for("react.context"), fe = Symbol.for("react.server_context"), xe = Symbol.for("react.forward_ref"), Ae = Symbol.for("react.suspense"), Ee = Symbol.for("react.suspense_list"), ye = Symbol.for("react.memo"), ge = Symbol.for("react.lazy"), me = Symbol.for("react.offscreen"), Ce = !1, Ie = !1, Oe = !1, He = !1, Ne = !1, Pe;
    Pe = Symbol.for("react.module.reference");
    function Fe(lt) {
      return !!(typeof lt == "string" || typeof lt == "function" || lt === ne || lt === oe || Ne || lt === ie || lt === Ae || lt === Ee || He || lt === me || Ce || Ie || Oe || typeof lt == "object" && lt !== null && (lt.$$typeof === ge || lt.$$typeof === ye || lt.$$typeof === ce || lt.$$typeof === he || lt.$$typeof === xe || lt.$$typeof === Pe || lt.getModuleId !== void 0));
    }
    function Le(lt) {
      if (typeof lt == "object" && lt !== null) {
        var $e = lt.$$typeof;
        switch ($e) {
          case Z:
            var _e = lt.type;
            switch (_e) {
              case ne:
              case oe:
              case ie:
              case Ae:
              case Ee:
                return _e;
              default:
                var Be = _e && _e.$$typeof;
                switch (Be) {
                  case fe:
                  case he:
                  case xe:
                  case ge:
                  case ye:
                  case ce:
                    return Be;
                  default:
                    return $e;
                }
            }
          case ee:
            return $e;
        }
      }
    }
    var We = he, rt = ce, gt = Z, kt = xe, Ke = ne, ht = ge, Nt = ye, Ft = ee, At = oe, St = ie, Vt = Ae, Xt = Ee, Lt = !1, Zt = !1;
    function Gt(lt) {
      return Lt || (Lt = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function pt(lt) {
      return Zt || (Zt = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function It(lt) {
      return Le(lt) === he;
    }
    function qt(lt) {
      return Le(lt) === ce;
    }
    function De(lt) {
      return typeof lt == "object" && lt !== null && lt.$$typeof === Z;
    }
    function ar(lt) {
      return Le(lt) === xe;
    }
    function rr(lt) {
      return Le(lt) === ne;
    }
    function Ar(lt) {
      return Le(lt) === ge;
    }
    function vt(lt) {
      return Le(lt) === ye;
    }
    function Ut(lt) {
      return Le(lt) === ee;
    }
    function Xe(lt) {
      return Le(lt) === oe;
    }
    function tt(lt) {
      return Le(lt) === ie;
    }
    function et(lt) {
      return Le(lt) === Ae;
    }
    function Et(lt) {
      return Le(lt) === Ee;
    }
    reactIs_development.ContextConsumer = We, reactIs_development.ContextProvider = rt, reactIs_development.Element = gt, reactIs_development.ForwardRef = kt, reactIs_development.Fragment = Ke, reactIs_development.Lazy = ht, reactIs_development.Memo = Nt, reactIs_development.Portal = Ft, reactIs_development.Profiler = At, reactIs_development.StrictMode = St, reactIs_development.Suspense = Vt, reactIs_development.SuspenseList = Xt, reactIs_development.isAsyncMode = Gt, reactIs_development.isConcurrentMode = pt, reactIs_development.isContextConsumer = It, reactIs_development.isContextProvider = qt, reactIs_development.isElement = De, reactIs_development.isForwardRef = ar, reactIs_development.isFragment = rr, reactIs_development.isLazy = Ar, reactIs_development.isMemo = vt, reactIs_development.isPortal = Ut, reactIs_development.isProfiler = Xe, reactIs_development.isStrictMode = tt, reactIs_development.isSuspense = et, reactIs_development.isSuspenseList = Et, reactIs_development.isValidElementType = Fe, reactIs_development.typeOf = Le;
  }()), reactIs_development;
}
(function(Z) {
  process.env.NODE_ENV === "production" ? Z.exports = requireReactIs_production_min() : Z.exports = requireReactIs_development();
})(reactIs);
const fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function getFunctionName(Z) {
  const ee = `${Z}`.match(fnNameMatchRegex);
  return ee && ee[1] || "";
}
function getFunctionComponentName(Z, ee = "") {
  return Z.displayName || Z.name || getFunctionName(Z) || ee;
}
function getWrappedName(Z, ee, ne) {
  const ie = getFunctionComponentName(ee);
  return Z.displayName || (ie !== "" ? `${ne}(${ie})` : ne);
}
function getDisplayName(Z) {
  if (Z != null) {
    if (typeof Z == "string")
      return Z;
    if (typeof Z == "function")
      return getFunctionComponentName(Z, "Component");
    if (typeof Z == "object")
      switch (Z.$$typeof) {
        case reactIs.exports.ForwardRef:
          return getWrappedName(Z, Z.render, "ForwardRef");
        case reactIs.exports.Memo:
          return getWrappedName(Z, Z.type, "memo");
        default:
          return;
      }
  }
}
const refType = propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object]), refType$1 = refType;
function capitalize(Z) {
  if (typeof Z != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : formatMuiErrorMessage(7));
  return Z.charAt(0).toUpperCase() + Z.slice(1);
}
function setRef$1(Z, ee) {
  typeof Z == "function" ? Z(ee) : Z && (Z.current = ee);
}
const useEnhancedEffect = typeof window < "u" ? React.useLayoutEffect : React.useEffect, useEnhancedEffect$1 = useEnhancedEffect;
function useEventCallback(Z) {
  const ee = React.useRef(Z);
  return useEnhancedEffect$1(() => {
    ee.current = Z;
  }), React.useCallback((...ne) => (0, ee.current)(...ne), []);
}
function useForkRef(...Z) {
  return React.useMemo(() => Z.every((ee) => ee == null) ? null : (ee) => {
    Z.forEach((ne) => {
      setRef$1(ne, ee);
    });
  }, Z);
}
let hadKeyboardEvent = !0, hadFocusVisibleRecently = !1, hadFocusVisibleRecentlyTimeout;
const inputTypesWhitelist = {
  text: !0,
  search: !0,
  url: !0,
  tel: !0,
  email: !0,
  password: !0,
  number: !0,
  date: !0,
  month: !0,
  week: !0,
  time: !0,
  datetime: !0,
  "datetime-local": !0
};
function focusTriggersKeyboardModality(Z) {
  const {
    type: ee,
    tagName: ne
  } = Z;
  return !!(ne === "INPUT" && inputTypesWhitelist[ee] && !Z.readOnly || ne === "TEXTAREA" && !Z.readOnly || Z.isContentEditable);
}
function handleKeyDown(Z) {
  Z.metaKey || Z.altKey || Z.ctrlKey || (hadKeyboardEvent = !0);
}
function handlePointerDown() {
  hadKeyboardEvent = !1;
}
function handleVisibilityChange() {
  this.visibilityState === "hidden" && hadFocusVisibleRecently && (hadKeyboardEvent = !0);
}
function prepare(Z) {
  Z.addEventListener("keydown", handleKeyDown, !0), Z.addEventListener("mousedown", handlePointerDown, !0), Z.addEventListener("pointerdown", handlePointerDown, !0), Z.addEventListener("touchstart", handlePointerDown, !0), Z.addEventListener("visibilitychange", handleVisibilityChange, !0);
}
function isFocusVisible(Z) {
  const {
    target: ee
  } = Z;
  try {
    return ee.matches(":focus-visible");
  } catch {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(ee);
}
function useIsFocusVisible() {
  const Z = React.useCallback((oe) => {
    oe != null && prepare(oe.ownerDocument);
  }, []), ee = React.useRef(!1);
  function ne() {
    return ee.current ? (hadFocusVisibleRecently = !0, window.clearTimeout(hadFocusVisibleRecentlyTimeout), hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
      hadFocusVisibleRecently = !1;
    }, 100), ee.current = !1, !0) : !1;
  }
  function ie(oe) {
    return isFocusVisible(oe) ? (ee.current = !0, !0) : !1;
  }
  return {
    isFocusVisibleRef: ee,
    onFocus: ie,
    onBlur: ne,
    ref: Z
  };
}
function resolveProps(Z, ee) {
  const ne = _extends$1({}, ee);
  return Object.keys(Z).forEach((ie) => {
    ne[ie] === void 0 && (ne[ie] = Z[ie]);
  }), ne;
}
function composeClasses(Z, ee, ne) {
  const ie = {};
  return Object.keys(Z).forEach(
    (oe) => {
      ie[oe] = Z[oe].reduce((ce, he) => (he && (ce.push(ee(he)), ne && ne[he] && ce.push(ne[he])), ce), []).join(" ");
    }
  ), ie;
}
const defaultGenerator = (Z) => Z, createClassNameGenerator = () => {
  let Z = defaultGenerator;
  return {
    configure(ee) {
      Z = ee;
    },
    generate(ee) {
      return Z(ee);
    },
    reset() {
      Z = defaultGenerator;
    }
  };
}, ClassNameGenerator = createClassNameGenerator(), ClassNameGenerator$1 = ClassNameGenerator, globalStateClassesMapping = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  required: "required",
  selected: "selected"
};
function generateUtilityClass(Z, ee, ne = "Mui") {
  const ie = globalStateClassesMapping[ee];
  return ie ? `${ne}-${ie}` : `${ClassNameGenerator$1.generate(Z)}-${ee}`;
}
function generateUtilityClasses(Z, ee, ne = "Mui") {
  const ie = {};
  return ee.forEach((oe) => {
    ie[oe] = generateUtilityClass(Z, oe, ne);
  }), ie;
}
function merge$2(Z, ee) {
  return ee ? deepmerge(Z, ee, {
    clone: !1
  }) : Z;
}
const values$1 = {
  xs: 0,
  sm: 600,
  md: 900,
  lg: 1200,
  xl: 1536
}, defaultBreakpoints = {
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (Z) => `@media (min-width:${values$1[Z]}px)`
};
function handleBreakpoints(Z, ee, ne) {
  const ie = Z.theme || {};
  if (Array.isArray(ee)) {
    const ce = ie.breakpoints || defaultBreakpoints;
    return ee.reduce((he, fe, xe) => (he[ce.up(ce.keys[xe])] = ne(ee[xe]), he), {});
  }
  if (typeof ee == "object") {
    const ce = ie.breakpoints || defaultBreakpoints;
    return Object.keys(ee).reduce((he, fe) => {
      if (Object.keys(ce.values || values$1).indexOf(fe) !== -1) {
        const xe = ce.up(fe);
        he[xe] = ne(ee[fe], fe);
      } else {
        const xe = fe;
        he[xe] = ee[xe];
      }
      return he;
    }, {});
  }
  return ne(ee);
}
function createEmptyBreakpointObject(Z = {}) {
  var ee;
  return ((ee = Z.keys) == null ? void 0 : ee.reduce((ie, oe) => {
    const ce = Z.up(oe);
    return ie[ce] = {}, ie;
  }, {})) || {};
}
function removeUnusedBreakpoints(Z, ee) {
  return Z.reduce((ne, ie) => {
    const oe = ne[ie];
    return (!oe || Object.keys(oe).length === 0) && delete ne[ie], ne;
  }, ee);
}
function getPath(Z, ee, ne = !0) {
  if (!ee || typeof ee != "string")
    return null;
  if (Z && Z.vars && ne) {
    const ie = `vars.${ee}`.split(".").reduce((oe, ce) => oe && oe[ce] ? oe[ce] : null, Z);
    if (ie != null)
      return ie;
  }
  return ee.split(".").reduce((ie, oe) => ie && ie[oe] != null ? ie[oe] : null, Z);
}
function getValue$1(Z, ee, ne, ie = ne) {
  let oe;
  return typeof Z == "function" ? oe = Z(ne) : Array.isArray(Z) ? oe = Z[ne] || ie : oe = getPath(Z, ne) || ie, ee && (oe = ee(oe, ie)), oe;
}
function style$1(Z) {
  const {
    prop: ee,
    cssProperty: ne = Z.prop,
    themeKey: ie,
    transform: oe
  } = Z, ce = (he) => {
    if (he[ee] == null)
      return null;
    const fe = he[ee], xe = he.theme, Ae = getPath(xe, ie) || {};
    return handleBreakpoints(he, fe, (ye) => {
      let ge = getValue$1(Ae, oe, ye);
      return ye === ge && typeof ye == "string" && (ge = getValue$1(Ae, oe, `${ee}${ye === "default" ? "" : capitalize(ye)}`, ye)), ne === !1 ? ge : {
        [ne]: ge
      };
    });
  };
  return ce.propTypes = process.env.NODE_ENV !== "production" ? {
    [ee]: responsivePropType$1
  } : {}, ce.filterProps = [ee], ce;
}
function compose(...Z) {
  const ee = Z.reduce((ie, oe) => (oe.filterProps.forEach((ce) => {
    ie[ce] = oe;
  }), ie), {}), ne = (ie) => Object.keys(ie).reduce((oe, ce) => ee[ce] ? merge$2(oe, ee[ce](ie)) : oe, {});
  return ne.propTypes = process.env.NODE_ENV !== "production" ? Z.reduce((ie, oe) => Object.assign(ie, oe.propTypes), {}) : {}, ne.filterProps = Z.reduce((ie, oe) => ie.concat(oe.filterProps), []), ne;
}
function memoize$2(Z) {
  const ee = {};
  return (ne) => (ee[ne] === void 0 && (ee[ne] = Z(ne)), ee[ne]);
}
const properties = {
  m: "margin",
  p: "padding"
}, directions = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, aliases = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, getCssProperties = memoize$2((Z) => {
  if (Z.length > 2)
    if (aliases[Z])
      Z = aliases[Z];
    else
      return [Z];
  const [ee, ne] = Z.split(""), ie = properties[ee], oe = directions[ne] || "";
  return Array.isArray(oe) ? oe.map((ce) => ie + ce) : [ie + oe];
}), marginKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], paddingKeys = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], spacingKeys = [...marginKeys, ...paddingKeys];
function createUnaryUnit(Z, ee, ne, ie) {
  var oe;
  const ce = (oe = getPath(Z, ee, !1)) != null ? oe : ne;
  return typeof ce == "number" ? (he) => typeof he == "string" ? he : (process.env.NODE_ENV !== "production" && typeof he != "number" && console.error(`MUI: Expected ${ie} argument to be a number or a string, got ${he}.`), ce * he) : Array.isArray(ce) ? (he) => typeof he == "string" ? he : (process.env.NODE_ENV !== "production" && (Number.isInteger(he) ? he > ce.length - 1 && console.error([`MUI: The value provided (${he}) overflows.`, `The supported values are: ${JSON.stringify(ce)}.`, `${he} > ${ce.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${ee}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${ee}\` as a number.`].join(`
`))), ce[he]) : typeof ce == "function" ? ce : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${ee}\` value (${ce}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function createUnarySpacing(Z) {
  return createUnaryUnit(Z, "spacing", 8, "spacing");
}
function getValue(Z, ee) {
  if (typeof ee == "string" || ee == null)
    return ee;
  const ne = Math.abs(ee), ie = Z(ne);
  return ee >= 0 ? ie : typeof ie == "number" ? -ie : `-${ie}`;
}
function getStyleFromPropValue(Z, ee) {
  return (ne) => Z.reduce((ie, oe) => (ie[oe] = getValue(ee, ne), ie), {});
}
function resolveCssProperty(Z, ee, ne, ie) {
  if (ee.indexOf(ne) === -1)
    return null;
  const oe = getCssProperties(ne), ce = getStyleFromPropValue(oe, ie), he = Z[ne];
  return handleBreakpoints(Z, he, ce);
}
function style(Z, ee) {
  const ne = createUnarySpacing(Z.theme);
  return Object.keys(Z).map((ie) => resolveCssProperty(Z, ee, ie, ne)).reduce(merge$2, {});
}
process.env.NODE_ENV !== "production" && marginKeys.reduce((Z, ee) => (Z[ee] = responsivePropType$1, Z), {});
process.env.NODE_ENV !== "production" && paddingKeys.reduce((Z, ee) => (Z[ee] = responsivePropType$1, Z), {});
function spacing(Z) {
  return style(Z, spacingKeys);
}
spacing.propTypes = process.env.NODE_ENV !== "production" ? spacingKeys.reduce((Z, ee) => (Z[ee] = responsivePropType$1, Z), {}) : {};
spacing.filterProps = spacingKeys;
function getBorder(Z) {
  return typeof Z != "number" ? Z : `${Z}px solid`;
}
const border = style$1({
  prop: "border",
  themeKey: "borders",
  transform: getBorder
}), borderTop = style$1({
  prop: "borderTop",
  themeKey: "borders",
  transform: getBorder
}), borderRight = style$1({
  prop: "borderRight",
  themeKey: "borders",
  transform: getBorder
}), borderBottom = style$1({
  prop: "borderBottom",
  themeKey: "borders",
  transform: getBorder
}), borderLeft = style$1({
  prop: "borderLeft",
  themeKey: "borders",
  transform: getBorder
}), borderColor = style$1({
  prop: "borderColor",
  themeKey: "palette"
}), borderTopColor = style$1({
  prop: "borderTopColor",
  themeKey: "palette"
}), borderRightColor = style$1({
  prop: "borderRightColor",
  themeKey: "palette"
}), borderBottomColor = style$1({
  prop: "borderBottomColor",
  themeKey: "palette"
}), borderLeftColor = style$1({
  prop: "borderLeftColor",
  themeKey: "palette"
}), borderRadius = (Z) => {
  if (Z.borderRadius !== void 0 && Z.borderRadius !== null) {
    const ee = createUnaryUnit(Z.theme, "shape.borderRadius", 4, "borderRadius"), ne = (ie) => ({
      borderRadius: getValue(ee, ie)
    });
    return handleBreakpoints(Z, Z.borderRadius, ne);
  }
  return null;
};
borderRadius.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: responsivePropType$1
} : {};
borderRadius.filterProps = ["borderRadius"];
const borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius), borders$1 = borders, displayPrint = style$1({
  prop: "displayPrint",
  cssProperty: !1,
  transform: (Z) => ({
    "@media print": {
      display: Z
    }
  })
}), displayRaw = style$1({
  prop: "display"
}), overflow = style$1({
  prop: "overflow"
}), textOverflow = style$1({
  prop: "textOverflow"
}), visibility = style$1({
  prop: "visibility"
}), whiteSpace = style$1({
  prop: "whiteSpace"
}), display = compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace), flexBasis = style$1({
  prop: "flexBasis"
}), flexDirection = style$1({
  prop: "flexDirection"
}), flexWrap = style$1({
  prop: "flexWrap"
}), justifyContent = style$1({
  prop: "justifyContent"
}), alignItems = style$1({
  prop: "alignItems"
}), alignContent = style$1({
  prop: "alignContent"
}), order = style$1({
  prop: "order"
}), flex = style$1({
  prop: "flex"
}), flexGrow = style$1({
  prop: "flexGrow"
}), flexShrink = style$1({
  prop: "flexShrink"
}), alignSelf = style$1({
  prop: "alignSelf"
}), justifyItems = style$1({
  prop: "justifyItems"
}), justifySelf = style$1({
  prop: "justifySelf"
}), flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf), flexbox$1 = flexbox, gap = (Z) => {
  if (Z.gap !== void 0 && Z.gap !== null) {
    const ee = createUnaryUnit(Z.theme, "spacing", 8, "gap"), ne = (ie) => ({
      gap: getValue(ee, ie)
    });
    return handleBreakpoints(Z, Z.gap, ne);
  }
  return null;
};
gap.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: responsivePropType$1
} : {};
gap.filterProps = ["gap"];
const columnGap = (Z) => {
  if (Z.columnGap !== void 0 && Z.columnGap !== null) {
    const ee = createUnaryUnit(Z.theme, "spacing", 8, "columnGap"), ne = (ie) => ({
      columnGap: getValue(ee, ie)
    });
    return handleBreakpoints(Z, Z.columnGap, ne);
  }
  return null;
};
columnGap.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: responsivePropType$1
} : {};
columnGap.filterProps = ["columnGap"];
const rowGap = (Z) => {
  if (Z.rowGap !== void 0 && Z.rowGap !== null) {
    const ee = createUnaryUnit(Z.theme, "spacing", 8, "rowGap"), ne = (ie) => ({
      rowGap: getValue(ee, ie)
    });
    return handleBreakpoints(Z, Z.rowGap, ne);
  }
  return null;
};
rowGap.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: responsivePropType$1
} : {};
rowGap.filterProps = ["rowGap"];
const gridColumn = style$1({
  prop: "gridColumn"
}), gridRow = style$1({
  prop: "gridRow"
}), gridAutoFlow = style$1({
  prop: "gridAutoFlow"
}), gridAutoColumns = style$1({
  prop: "gridAutoColumns"
}), gridAutoRows = style$1({
  prop: "gridAutoRows"
}), gridTemplateColumns = style$1({
  prop: "gridTemplateColumns"
}), gridTemplateRows = style$1({
  prop: "gridTemplateRows"
}), gridTemplateAreas = style$1({
  prop: "gridTemplateAreas"
}), gridArea = style$1({
  prop: "gridArea"
}), grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea), grid$1 = grid;
function transform$1(Z, ee) {
  return ee === "grey" ? ee : Z;
}
const color = style$1({
  prop: "color",
  themeKey: "palette",
  transform: transform$1
}), bgcolor = style$1({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: transform$1
}), backgroundColor = style$1({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: transform$1
}), palette = compose(color, bgcolor, backgroundColor), palette$1 = palette, position = style$1({
  prop: "position"
}), zIndex$2 = style$1({
  prop: "zIndex",
  themeKey: "zIndex"
}), top = style$1({
  prop: "top"
}), right = style$1({
  prop: "right"
}), bottom = style$1({
  prop: "bottom"
}), left = style$1({
  prop: "left"
}), positions = compose(position, zIndex$2, top, right, bottom, left), boxShadow = style$1({
  prop: "boxShadow",
  themeKey: "shadows"
}), shadows$2 = boxShadow;
function transform(Z) {
  return Z <= 1 && Z !== 0 ? `${Z * 100}%` : Z;
}
const width = style$1({
  prop: "width",
  transform
}), maxWidth = (Z) => {
  if (Z.maxWidth !== void 0 && Z.maxWidth !== null) {
    const ee = (ne) => {
      var ie, oe, ce;
      return {
        maxWidth: ((ie = Z.theme) == null || (oe = ie.breakpoints) == null || (ce = oe.values) == null ? void 0 : ce[ne]) || values$1[ne] || transform(ne)
      };
    };
    return handleBreakpoints(Z, Z.maxWidth, ee);
  }
  return null;
};
maxWidth.filterProps = ["maxWidth"];
const minWidth = style$1({
  prop: "minWidth",
  transform
}), height = style$1({
  prop: "height",
  transform
}), maxHeight = style$1({
  prop: "maxHeight",
  transform
}), minHeight = style$1({
  prop: "minHeight",
  transform
});
style$1({
  prop: "size",
  cssProperty: "width",
  transform
});
style$1({
  prop: "size",
  cssProperty: "height",
  transform
});
const boxSizing = style$1({
  prop: "boxSizing"
}), sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing), sizing$1 = sizing, fontFamily = style$1({
  prop: "fontFamily",
  themeKey: "typography"
}), fontSize = style$1({
  prop: "fontSize",
  themeKey: "typography"
}), fontStyle = style$1({
  prop: "fontStyle",
  themeKey: "typography"
}), fontWeight = style$1({
  prop: "fontWeight",
  themeKey: "typography"
}), letterSpacing = style$1({
  prop: "letterSpacing"
}), textTransform = style$1({
  prop: "textTransform"
}), lineHeight = style$1({
  prop: "lineHeight"
}), textAlign = style$1({
  prop: "textAlign"
}), typographyVariant = style$1({
  prop: "typography",
  cssProperty: !1,
  themeKey: "typography"
}), typography = compose(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign, textTransform), typography$1 = typography, filterPropsMapping = {
  borders: borders$1.filterProps,
  display: display.filterProps,
  flexbox: flexbox$1.filterProps,
  grid: grid$1.filterProps,
  positions: positions.filterProps,
  palette: palette$1.filterProps,
  shadows: shadows$2.filterProps,
  sizing: sizing$1.filterProps,
  spacing: spacing.filterProps,
  typography: typography$1.filterProps
}, styleFunctionMapping = {
  borders: borders$1,
  display,
  flexbox: flexbox$1,
  grid: grid$1,
  positions,
  palette: palette$1,
  shadows: shadows$2,
  sizing: sizing$1,
  spacing,
  typography: typography$1
};
Object.keys(filterPropsMapping).reduce((Z, ee) => (filterPropsMapping[ee].forEach((ne) => {
  Z[ne] = styleFunctionMapping[ee];
}), Z), {});
function objectsHaveSameKeys(...Z) {
  const ee = Z.reduce((ie, oe) => ie.concat(Object.keys(oe)), []), ne = new Set(ee);
  return Z.every((ie) => ne.size === Object.keys(ie).length);
}
function callIfFn(Z, ee) {
  return typeof Z == "function" ? Z(ee) : Z;
}
function unstable_createStyleFunctionSx(Z = styleFunctionMapping) {
  const ee = Object.keys(Z).reduce((oe, ce) => (Z[ce].filterProps.forEach((he) => {
    oe[he] = Z[ce];
  }), oe), {});
  function ne(oe, ce, he) {
    const fe = {
      [oe]: ce,
      theme: he
    }, xe = ee[oe];
    return xe ? xe(fe) : {
      [oe]: ce
    };
  }
  function ie(oe) {
    const {
      sx: ce,
      theme: he = {}
    } = oe || {};
    if (!ce)
      return null;
    function fe(xe) {
      let Ae = xe;
      if (typeof xe == "function")
        Ae = xe(he);
      else if (typeof xe != "object")
        return xe;
      if (!Ae)
        return null;
      const Ee = createEmptyBreakpointObject(he.breakpoints), ye = Object.keys(Ee);
      let ge = Ee;
      return Object.keys(Ae).forEach((me) => {
        const Ce = callIfFn(Ae[me], he);
        if (Ce != null)
          if (typeof Ce == "object")
            if (ee[me])
              ge = merge$2(ge, ne(me, Ce, he));
            else {
              const Ie = handleBreakpoints({
                theme: he
              }, Ce, (Oe) => ({
                [me]: Oe
              }));
              objectsHaveSameKeys(Ie, Ce) ? ge[me] = ie({
                sx: Ce,
                theme: he
              }) : ge = merge$2(ge, Ie);
            }
          else
            ge = merge$2(ge, ne(me, Ce, he));
      }), removeUnusedBreakpoints(ye, ge);
    }
    return Array.isArray(ce) ? ce.map(fe) : fe(ce);
  }
  return ie;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = ["sx"];
const defaultStyleFunctionSx = styleFunctionSx;
function r$1(Z) {
  var ee, ne, ie = "";
  if (typeof Z == "string" || typeof Z == "number")
    ie += Z;
  else if (typeof Z == "object")
    if (Array.isArray(Z))
      for (ee = 0; ee < Z.length; ee++)
        Z[ee] && (ne = r$1(Z[ee])) && (ie && (ie += " "), ie += ne);
    else
      for (ee in Z)
        Z[ee] && (ie && (ie += " "), ie += ee);
  return ie;
}
function clsx() {
  for (var Z, ee, ne = 0, ie = ""; ne < arguments.length; )
    (Z = arguments[ne++]) && (ee = r$1(Z)) && (ie && (ie += " "), ie += ee);
  return ie;
}
const _excluded$a = ["values", "unit", "step"], sortBreakpointsValues = (Z) => {
  const ee = Object.keys(Z).map((ne) => ({
    key: ne,
    val: Z[ne]
  })) || [];
  return ee.sort((ne, ie) => ne.val - ie.val), ee.reduce((ne, ie) => _extends$1({}, ne, {
    [ie.key]: ie.val
  }), {});
};
function createBreakpoints(Z) {
  const {
    values: ee = {
      xs: 0,
      sm: 600,
      md: 900,
      lg: 1200,
      xl: 1536
    },
    unit: ne = "px",
    step: ie = 5
  } = Z, oe = _objectWithoutPropertiesLoose$1(Z, _excluded$a), ce = sortBreakpointsValues(ee), he = Object.keys(ce);
  function fe(ge) {
    return `@media (min-width:${typeof ee[ge] == "number" ? ee[ge] : ge}${ne})`;
  }
  function xe(ge) {
    return `@media (max-width:${(typeof ee[ge] == "number" ? ee[ge] : ge) - ie / 100}${ne})`;
  }
  function Ae(ge, me) {
    const Ce = he.indexOf(me);
    return `@media (min-width:${typeof ee[ge] == "number" ? ee[ge] : ge}${ne}) and (max-width:${(Ce !== -1 && typeof ee[he[Ce]] == "number" ? ee[he[Ce]] : me) - ie / 100}${ne})`;
  }
  function Ee(ge) {
    return he.indexOf(ge) + 1 < he.length ? Ae(ge, he[he.indexOf(ge) + 1]) : fe(ge);
  }
  function ye(ge) {
    const me = he.indexOf(ge);
    return me === 0 ? fe(he[1]) : me === he.length - 1 ? xe(he[me]) : Ae(ge, he[he.indexOf(ge) + 1]).replace("@media", "@media not all and");
  }
  return _extends$1({
    keys: he,
    values: ce,
    up: fe,
    down: xe,
    between: Ae,
    only: Ee,
    not: ye,
    unit: ne
  }, oe);
}
const shape = {
  borderRadius: 4
}, shape$1 = shape;
function createSpacing(Z = 8) {
  if (Z.mui)
    return Z;
  const ee = createUnarySpacing({
    spacing: Z
  }), ne = (...ie) => (process.env.NODE_ENV !== "production" && (ie.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${ie.length}`)), (ie.length === 0 ? [1] : ie).map((ce) => {
    const he = ee(ce);
    return typeof he == "number" ? `${he}px` : he;
  }).join(" "));
  return ne.mui = !0, ne;
}
const _excluded$9 = ["breakpoints", "palette", "spacing", "shape"];
function createTheme$1(Z = {}, ...ee) {
  const {
    breakpoints: ne = {},
    palette: ie = {},
    spacing: oe,
    shape: ce = {}
  } = Z, he = _objectWithoutPropertiesLoose$1(Z, _excluded$9), fe = createBreakpoints(ne), xe = createSpacing(oe);
  let Ae = deepmerge({
    breakpoints: fe,
    direction: "ltr",
    components: {},
    palette: _extends$1({
      mode: "light"
    }, ie),
    spacing: xe,
    shape: _extends$1({}, shape$1, ce)
  }, he);
  return Ae = ee.reduce((Ee, ye) => deepmerge(Ee, ye), Ae), Ae;
}
const ThemeContext$1 = /* @__PURE__ */ React.createContext(null);
process.env.NODE_ENV !== "production" && (ThemeContext$1.displayName = "ThemeContext");
const ThemeContext$2 = ThemeContext$1;
function useTheme$2() {
  const Z = React.useContext(ThemeContext$2);
  return process.env.NODE_ENV !== "production" && React.useDebugValue(Z), Z;
}
function isObjectEmpty(Z) {
  return Object.keys(Z).length === 0;
}
function useTheme$1(Z = null) {
  const ee = useTheme$2();
  return !ee || isObjectEmpty(ee) ? Z : ee;
}
const systemDefaultTheme$1 = createTheme$1();
function useTheme(Z = systemDefaultTheme$1) {
  return useTheme$1(Z);
}
const _excluded$8 = ["variant"];
function isEmpty$1(Z) {
  return Z.length === 0;
}
function propsToClassKey(Z) {
  const {
    variant: ee
  } = Z, ne = _objectWithoutPropertiesLoose$1(Z, _excluded$8);
  let ie = ee || "";
  return Object.keys(ne).sort().forEach((oe) => {
    oe === "color" ? ie += isEmpty$1(ie) ? Z[oe] : capitalize(Z[oe]) : ie += `${isEmpty$1(ie) ? oe : capitalize(oe)}${capitalize(Z[oe].toString())}`;
  }), ie;
}
const _excluded$7 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"], _excluded2 = ["theme"], _excluded3 = ["theme"];
function isEmpty(Z) {
  return Object.keys(Z).length === 0;
}
function isStringTag(Z) {
  return typeof Z == "string" && Z.charCodeAt(0) > 96;
}
const getStyleOverrides = (Z, ee) => ee.components && ee.components[Z] && ee.components[Z].styleOverrides ? ee.components[Z].styleOverrides : null, getVariantStyles = (Z, ee) => {
  let ne = [];
  ee && ee.components && ee.components[Z] && ee.components[Z].variants && (ne = ee.components[Z].variants);
  const ie = {};
  return ne.forEach((oe) => {
    const ce = propsToClassKey(oe.props);
    ie[ce] = oe.style;
  }), ie;
}, variantsResolver = (Z, ee, ne, ie) => {
  var oe, ce;
  const {
    ownerState: he = {}
  } = Z, fe = [], xe = ne == null || (oe = ne.components) == null || (ce = oe[ie]) == null ? void 0 : ce.variants;
  return xe && xe.forEach((Ae) => {
    let Ee = !0;
    Object.keys(Ae.props).forEach((ye) => {
      he[ye] !== Ae.props[ye] && Z[ye] !== Ae.props[ye] && (Ee = !1);
    }), Ee && fe.push(ee[propsToClassKey(Ae.props)]);
  }), fe;
};
function shouldForwardProp(Z) {
  return Z !== "ownerState" && Z !== "theme" && Z !== "sx" && Z !== "as";
}
const systemDefaultTheme = createTheme$1(), lowercaseFirstLetter = (Z) => Z.charAt(0).toLowerCase() + Z.slice(1);
function createStyled(Z = {}) {
  const {
    defaultTheme: ee = systemDefaultTheme,
    rootShouldForwardProp: ne = shouldForwardProp,
    slotShouldForwardProp: ie = shouldForwardProp,
    styleFunctionSx: oe = defaultStyleFunctionSx
  } = Z, ce = (he) => {
    const fe = isEmpty(he.theme) ? ee : he.theme;
    return oe(_extends$1({}, he, {
      theme: fe
    }));
  };
  return ce.__mui_systemSx = !0, (he, fe = {}) => {
    internal_processStyles(he, (Fe) => Fe.filter((Le) => !(Le != null && Le.__mui_systemSx)));
    const {
      name: xe,
      slot: Ae,
      skipVariantsResolver: Ee,
      skipSx: ye,
      overridesResolver: ge
    } = fe, me = _objectWithoutPropertiesLoose$1(fe, _excluded$7), Ce = Ee !== void 0 ? Ee : Ae && Ae !== "Root" || !1, Ie = ye || !1;
    let Oe;
    process.env.NODE_ENV !== "production" && xe && (Oe = `${xe}-${lowercaseFirstLetter(Ae || "Root")}`);
    let He = shouldForwardProp;
    Ae === "Root" ? He = ne : Ae ? He = ie : isStringTag(he) && (He = void 0);
    const Ne = styled$4(he, _extends$1({
      shouldForwardProp: He,
      label: Oe
    }, me)), Pe = (Fe, ...Le) => {
      const We = Le ? Le.map((Ke) => typeof Ke == "function" && Ke.__emotion_real !== Ke ? (ht) => {
        let {
          theme: Nt
        } = ht, Ft = _objectWithoutPropertiesLoose$1(ht, _excluded2);
        return Ke(_extends$1({
          theme: isEmpty(Nt) ? ee : Nt
        }, Ft));
      } : Ke) : [];
      let rt = Fe;
      xe && ge && We.push((Ke) => {
        const ht = isEmpty(Ke.theme) ? ee : Ke.theme, Nt = getStyleOverrides(xe, ht);
        if (Nt) {
          const Ft = {};
          return Object.entries(Nt).forEach(([At, St]) => {
            Ft[At] = typeof St == "function" ? St(_extends$1({}, Ke, {
              theme: ht
            })) : St;
          }), ge(Ke, Ft);
        }
        return null;
      }), xe && !Ce && We.push((Ke) => {
        const ht = isEmpty(Ke.theme) ? ee : Ke.theme;
        return variantsResolver(Ke, getVariantStyles(xe, ht), ht, xe);
      }), Ie || We.push(ce);
      const gt = We.length - Le.length;
      if (Array.isArray(Fe) && gt > 0) {
        const Ke = new Array(gt).fill("");
        rt = [...Fe, ...Ke], rt.raw = [...Fe.raw, ...Ke];
      } else
        typeof Fe == "function" && Fe.__emotion_real !== Fe && (rt = (Ke) => {
          let {
            theme: ht
          } = Ke, Nt = _objectWithoutPropertiesLoose$1(Ke, _excluded3);
          return Fe(_extends$1({
            theme: isEmpty(ht) ? ee : ht
          }, Nt));
        });
      const kt = Ne(rt, ...We);
      if (process.env.NODE_ENV !== "production") {
        let Ke;
        xe && (Ke = `${xe}${Ae || ""}`), Ke === void 0 && (Ke = `Styled(${getDisplayName(he)})`), kt.displayName = Ke;
      }
      return kt;
    };
    return Ne.withConfig && (Pe.withConfig = Ne.withConfig), Pe;
  };
}
function getThemeProps(Z) {
  const {
    theme: ee,
    name: ne,
    props: ie
  } = Z;
  return !ee || !ee.components || !ee.components[ne] || !ee.components[ne].defaultProps ? ie : resolveProps(ee.components[ne].defaultProps, ie);
}
function useThemeProps$1({
  props: Z,
  name: ee,
  defaultTheme: ne
}) {
  const ie = useTheme(ne);
  return getThemeProps({
    theme: ie,
    name: ee,
    props: Z
  });
}
function clamp(Z, ee = 0, ne = 1) {
  return process.env.NODE_ENV !== "production" && (Z < ee || Z > ne) && console.error(`MUI: The value provided ${Z} is out of range [${ee}, ${ne}].`), Math.min(Math.max(ee, Z), ne);
}
function hexToRgb(Z) {
  Z = Z.slice(1);
  const ee = new RegExp(`.{1,${Z.length >= 6 ? 2 : 1}}`, "g");
  let ne = Z.match(ee);
  return ne && ne[0].length === 1 && (ne = ne.map((ie) => ie + ie)), ne ? `rgb${ne.length === 4 ? "a" : ""}(${ne.map((ie, oe) => oe < 3 ? parseInt(ie, 16) : Math.round(parseInt(ie, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function decomposeColor(Z) {
  if (Z.type)
    return Z;
  if (Z.charAt(0) === "#")
    return decomposeColor(hexToRgb(Z));
  const ee = Z.indexOf("("), ne = Z.substring(0, ee);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(ne) === -1)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${Z}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : formatMuiErrorMessage(9, Z));
  let ie = Z.substring(ee + 1, Z.length - 1), oe;
  if (ne === "color") {
    if (ie = ie.split(" "), oe = ie.shift(), ie.length === 4 && ie[3].charAt(0) === "/" && (ie[3] = ie[3].slice(1)), ["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(oe) === -1)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${oe}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : formatMuiErrorMessage(10, oe));
  } else
    ie = ie.split(",");
  return ie = ie.map((ce) => parseFloat(ce)), {
    type: ne,
    values: ie,
    colorSpace: oe
  };
}
function recomposeColor(Z) {
  const {
    type: ee,
    colorSpace: ne
  } = Z;
  let {
    values: ie
  } = Z;
  return ee.indexOf("rgb") !== -1 ? ie = ie.map((oe, ce) => ce < 3 ? parseInt(oe, 10) : oe) : ee.indexOf("hsl") !== -1 && (ie[1] = `${ie[1]}%`, ie[2] = `${ie[2]}%`), ee.indexOf("color") !== -1 ? ie = `${ne} ${ie.join(" ")}` : ie = `${ie.join(", ")}`, `${ee}(${ie})`;
}
function hslToRgb(Z) {
  Z = decomposeColor(Z);
  const {
    values: ee
  } = Z, ne = ee[0], ie = ee[1] / 100, oe = ee[2] / 100, ce = ie * Math.min(oe, 1 - oe), he = (Ae, Ee = (Ae + ne / 30) % 12) => oe - ce * Math.max(Math.min(Ee - 3, 9 - Ee, 1), -1);
  let fe = "rgb";
  const xe = [Math.round(he(0) * 255), Math.round(he(8) * 255), Math.round(he(4) * 255)];
  return Z.type === "hsla" && (fe += "a", xe.push(ee[3])), recomposeColor({
    type: fe,
    values: xe
  });
}
function getLuminance(Z) {
  Z = decomposeColor(Z);
  let ee = Z.type === "hsl" || Z.type === "hsla" ? decomposeColor(hslToRgb(Z)).values : Z.values;
  return ee = ee.map((ne) => (Z.type !== "color" && (ne /= 255), ne <= 0.03928 ? ne / 12.92 : ((ne + 0.055) / 1.055) ** 2.4)), Number((0.2126 * ee[0] + 0.7152 * ee[1] + 0.0722 * ee[2]).toFixed(3));
}
function getContrastRatio(Z, ee) {
  const ne = getLuminance(Z), ie = getLuminance(ee);
  return (Math.max(ne, ie) + 0.05) / (Math.min(ne, ie) + 0.05);
}
function alpha(Z, ee) {
  return Z = decomposeColor(Z), ee = clamp(ee), (Z.type === "rgb" || Z.type === "hsl") && (Z.type += "a"), Z.type === "color" ? Z.values[3] = `/${ee}` : Z.values[3] = ee, recomposeColor(Z);
}
function darken(Z, ee) {
  if (Z = decomposeColor(Z), ee = clamp(ee), Z.type.indexOf("hsl") !== -1)
    Z.values[2] *= 1 - ee;
  else if (Z.type.indexOf("rgb") !== -1 || Z.type.indexOf("color") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Z.values[ne] *= 1 - ee;
  return recomposeColor(Z);
}
function lighten(Z, ee) {
  if (Z = decomposeColor(Z), ee = clamp(ee), Z.type.indexOf("hsl") !== -1)
    Z.values[2] += (100 - Z.values[2]) * ee;
  else if (Z.type.indexOf("rgb") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Z.values[ne] += (255 - Z.values[ne]) * ee;
  else if (Z.type.indexOf("color") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Z.values[ne] += (1 - Z.values[ne]) * ee;
  return recomposeColor(Z);
}
function createMixins(Z, ee) {
  return _extends$1({
    toolbar: {
      minHeight: 56,
      [Z.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [Z.up("sm")]: {
        minHeight: 64
      }
    }
  }, ee);
}
const _excluded$6 = ["mode", "contrastThreshold", "tonalOffset"], light = {
  text: {
    primary: "rgba(0, 0, 0, 0.87)",
    secondary: "rgba(0, 0, 0, 0.6)",
    disabled: "rgba(0, 0, 0, 0.38)"
  },
  divider: "rgba(0, 0, 0, 0.12)",
  background: {
    paper: common$1.white,
    default: common$1.white
  },
  action: {
    active: "rgba(0, 0, 0, 0.54)",
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    disabled: "rgba(0, 0, 0, 0.26)",
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
}, dark = {
  text: {
    primary: common$1.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: "#121212",
    default: "#121212"
  },
  action: {
    active: common$1.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(Z, ee, ne, ie) {
  const oe = ie.light || ie, ce = ie.dark || ie * 1.5;
  Z[ee] || (Z.hasOwnProperty(ne) ? Z[ee] = Z[ne] : ee === "light" ? Z.light = lighten(Z.main, oe) : ee === "dark" && (Z.dark = darken(Z.main, ce)));
}
function getDefaultPrimary(Z = "light") {
  return Z === "dark" ? {
    main: blue$1[200],
    light: blue$1[50],
    dark: blue$1[400]
  } : {
    main: blue$1[700],
    light: blue$1[400],
    dark: blue$1[800]
  };
}
function getDefaultSecondary(Z = "light") {
  return Z === "dark" ? {
    main: purple$1[200],
    light: purple$1[50],
    dark: purple$1[400]
  } : {
    main: purple$1[500],
    light: purple$1[300],
    dark: purple$1[700]
  };
}
function getDefaultError(Z = "light") {
  return Z === "dark" ? {
    main: red$1[500],
    light: red$1[300],
    dark: red$1[700]
  } : {
    main: red$1[700],
    light: red$1[400],
    dark: red$1[800]
  };
}
function getDefaultInfo(Z = "light") {
  return Z === "dark" ? {
    main: lightBlue$1[400],
    light: lightBlue$1[300],
    dark: lightBlue$1[700]
  } : {
    main: lightBlue$1[700],
    light: lightBlue$1[500],
    dark: lightBlue$1[900]
  };
}
function getDefaultSuccess(Z = "light") {
  return Z === "dark" ? {
    main: green$1[400],
    light: green$1[300],
    dark: green$1[700]
  } : {
    main: green$1[800],
    light: green$1[500],
    dark: green$1[900]
  };
}
function getDefaultWarning(Z = "light") {
  return Z === "dark" ? {
    main: orange$1[400],
    light: orange$1[300],
    dark: orange$1[700]
  } : {
    main: "#ed6c02",
    light: orange$1[500],
    dark: orange$1[900]
  };
}
function createPalette(Z) {
  const {
    mode: ee = "light",
    contrastThreshold: ne = 3,
    tonalOffset: ie = 0.2
  } = Z, oe = _objectWithoutPropertiesLoose$1(Z, _excluded$6), ce = Z.primary || getDefaultPrimary(ee), he = Z.secondary || getDefaultSecondary(ee), fe = Z.error || getDefaultError(ee), xe = Z.info || getDefaultInfo(ee), Ae = Z.success || getDefaultSuccess(ee), Ee = Z.warning || getDefaultWarning(ee);
  function ye(Ie) {
    const Oe = getContrastRatio(Ie, dark.text.primary) >= ne ? dark.text.primary : light.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const He = getContrastRatio(Ie, Oe);
      He < 3 && console.error([`MUI: The contrast ratio of ${He}:1 for ${Oe} on ${Ie}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return Oe;
  }
  const ge = ({
    color: Ie,
    name: Oe,
    mainShade: He = 500,
    lightShade: Ne = 300,
    darkShade: Pe = 700
  }) => {
    if (Ie = _extends$1({}, Ie), !Ie.main && Ie[He] && (Ie.main = Ie[He]), !Ie.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${Oe ? ` (${Oe})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${He}\` property.` : formatMuiErrorMessage(11, Oe ? ` (${Oe})` : "", He));
    if (typeof Ie.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${Oe ? ` (${Oe})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(Ie.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : formatMuiErrorMessage(12, Oe ? ` (${Oe})` : "", JSON.stringify(Ie.main)));
    return addLightOrDark(Ie, "light", Ne, ie), addLightOrDark(Ie, "dark", Pe, ie), Ie.contrastText || (Ie.contrastText = ye(Ie.main)), Ie;
  }, me = {
    dark,
    light
  };
  return process.env.NODE_ENV !== "production" && (me[ee] || console.error(`MUI: The palette mode \`${ee}\` is not supported.`)), deepmerge(_extends$1({
    common: _extends$1({}, common$1),
    mode: ee,
    primary: ge({
      color: ce,
      name: "primary"
    }),
    secondary: ge({
      color: he,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    error: ge({
      color: fe,
      name: "error"
    }),
    warning: ge({
      color: Ee,
      name: "warning"
    }),
    info: ge({
      color: xe,
      name: "info"
    }),
    success: ge({
      color: Ae,
      name: "success"
    }),
    grey: grey$1,
    contrastThreshold: ne,
    getContrastText: ye,
    augmentColor: ge,
    tonalOffset: ie
  }, me[ee]), oe);
}
const _excluded$5 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
function round(Z) {
  return Math.round(Z * 1e5) / 1e5;
}
const caseAllCaps = {
  textTransform: "uppercase"
}, defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(Z, ee) {
  const ne = typeof ee == "function" ? ee(Z) : ee, {
    fontFamily: ie = defaultFontFamily,
    fontSize: oe = 14,
    fontWeightLight: ce = 300,
    fontWeightRegular: he = 400,
    fontWeightMedium: fe = 500,
    fontWeightBold: xe = 700,
    htmlFontSize: Ae = 16,
    allVariants: Ee,
    pxToRem: ye
  } = ne, ge = _objectWithoutPropertiesLoose$1(ne, _excluded$5);
  process.env.NODE_ENV !== "production" && (typeof oe != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof Ae != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const me = oe / 14, Ce = ye || ((He) => `${He / Ae * me}rem`), Ie = (He, Ne, Pe, Fe, Le) => _extends$1({
    fontFamily: ie,
    fontWeight: He,
    fontSize: Ce(Ne),
    lineHeight: Pe
  }, ie === defaultFontFamily ? {
    letterSpacing: `${round(Fe / Ne)}em`
  } : {}, Le, Ee), Oe = {
    h1: Ie(ce, 96, 1.167, -1.5),
    h2: Ie(ce, 60, 1.2, -0.5),
    h3: Ie(he, 48, 1.167, 0),
    h4: Ie(he, 34, 1.235, 0.25),
    h5: Ie(he, 24, 1.334, 0),
    h6: Ie(fe, 20, 1.6, 0.15),
    subtitle1: Ie(he, 16, 1.75, 0.15),
    subtitle2: Ie(fe, 14, 1.57, 0.1),
    body1: Ie(he, 16, 1.5, 0.15),
    body2: Ie(he, 14, 1.43, 0.15),
    button: Ie(fe, 14, 1.75, 0.4, caseAllCaps),
    caption: Ie(he, 12, 1.66, 0.4),
    overline: Ie(he, 12, 2.66, 1, caseAllCaps)
  };
  return deepmerge(_extends$1({
    htmlFontSize: Ae,
    pxToRem: Ce,
    fontFamily: ie,
    fontSize: oe,
    fontWeightLight: ce,
    fontWeightRegular: he,
    fontWeightMedium: fe,
    fontWeightBold: xe
  }, Oe), ge, {
    clone: !1
  });
}
const shadowKeyUmbraOpacity = 0.2, shadowKeyPenumbraOpacity = 0.14, shadowAmbientShadowOpacity = 0.12;
function createShadow(...Z) {
  return [`${Z[0]}px ${Z[1]}px ${Z[2]}px ${Z[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${Z[4]}px ${Z[5]}px ${Z[6]}px ${Z[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${Z[8]}px ${Z[9]}px ${Z[10]}px ${Z[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
}
const shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], shadows$1 = shadows, _excluded$4 = ["duration", "easing", "delay"], easing = {
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  standard: 300,
  complex: 375,
  enteringScreen: 225,
  leavingScreen: 195
};
function formatMs(Z) {
  return `${Math.round(Z)}ms`;
}
function getAutoHeightDuration(Z) {
  if (!Z)
    return 0;
  const ee = Z / 36;
  return Math.round((4 + 15 * ee ** 0.25 + ee / 5) * 10);
}
function createTransitions(Z) {
  const ee = _extends$1({}, easing, Z.easing), ne = _extends$1({}, duration, Z.duration);
  return _extends$1({
    getAutoHeightDuration,
    create: (oe = ["all"], ce = {}) => {
      const {
        duration: he = ne.standard,
        easing: fe = ee.easeInOut,
        delay: xe = 0
      } = ce, Ae = _objectWithoutPropertiesLoose$1(ce, _excluded$4);
      if (process.env.NODE_ENV !== "production") {
        const Ee = (ge) => typeof ge == "string", ye = (ge) => !isNaN(parseFloat(ge));
        !Ee(oe) && !Array.isArray(oe) && console.error('MUI: Argument "props" must be a string or Array.'), !ye(he) && !Ee(he) && console.error(`MUI: Argument "duration" must be a number or a string but found ${he}.`), Ee(fe) || console.error('MUI: Argument "easing" must be a string.'), !ye(xe) && !Ee(xe) && console.error('MUI: Argument "delay" must be a number or a string.'), Object.keys(Ae).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(Ae).join(",")}].`);
      }
      return (Array.isArray(oe) ? oe : [oe]).map((Ee) => `${Ee} ${typeof he == "string" ? he : formatMs(he)} ${fe} ${typeof xe == "string" ? xe : formatMs(xe)}`).join(",");
    }
  }, Z, {
    easing: ee,
    duration: ne
  });
}
const zIndex = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
}, zIndex$1 = zIndex, _excluded$3 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
function createTheme(Z = {}, ...ee) {
  const {
    mixins: ne = {},
    palette: ie = {},
    transitions: oe = {},
    typography: ce = {}
  } = Z, he = _objectWithoutPropertiesLoose$1(Z, _excluded$3);
  if (Z.vars)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name." : formatMuiErrorMessage(18));
  const fe = createPalette(ie), xe = createTheme$1(Z);
  let Ae = deepmerge(xe, {
    mixins: createMixins(xe.breakpoints, ne),
    palette: fe,
    shadows: shadows$1.slice(),
    typography: createTypography(fe, ce),
    transitions: createTransitions(oe),
    zIndex: _extends$1({}, zIndex$1)
  });
  if (Ae = deepmerge(Ae, he), Ae = ee.reduce((Ee, ye) => deepmerge(Ee, ye), Ae), process.env.NODE_ENV !== "production") {
    const Ee = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], ye = (ge, me) => {
      let Ce;
      for (Ce in ge) {
        const Ie = ge[Ce];
        if (Ee.indexOf(Ce) !== -1 && Object.keys(Ie).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const Oe = generateUtilityClass("", Ce);
            console.error([`MUI: The \`${me}\` component increases the CSS specificity of the \`${Ce}\` internal state.`, "You can not override it like this: ", JSON.stringify(ge, null, 2), "", `Instead, you need to use the '&.${Oe}' syntax:`, JSON.stringify({
              root: {
                [`&.${Oe}`]: Ie
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          ge[Ce] = {};
        }
      }
    };
    Object.keys(Ae.components).forEach((ge) => {
      const me = Ae.components[ge].styleOverrides;
      me && ge.indexOf("Mui") === 0 && ye(me, ge);
    });
  }
  return Ae;
}
const defaultTheme = createTheme(), defaultTheme$1 = defaultTheme;
function useThemeProps({
  props: Z,
  name: ee
}) {
  return useThemeProps$1({
    props: Z,
    name: ee,
    defaultTheme: defaultTheme$1
  });
}
const rootShouldForwardProp = (Z) => shouldForwardProp(Z) && Z !== "classes", styled$2 = createStyled({
  defaultTheme: defaultTheme$1,
  rootShouldForwardProp
}), styled$3 = styled$2;
function _setPrototypeOf(Z, ee) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(ie, oe) {
    return ie.__proto__ = oe, ie;
  }, _setPrototypeOf(Z, ee);
}
function _inheritsLoose(Z, ee) {
  Z.prototype = Object.create(ee.prototype), Z.prototype.constructor = Z, _setPrototypeOf(Z, ee);
}
const TransitionGroupContext = React__default.createContext(null);
function _assertThisInitialized(Z) {
  if (Z === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return Z;
}
function getChildMapping(Z, ee) {
  var ne = function(ce) {
    return ee && isValidElement(ce) ? ee(ce) : ce;
  }, ie = /* @__PURE__ */ Object.create(null);
  return Z && Children.map(Z, function(oe) {
    return oe;
  }).forEach(function(oe) {
    ie[oe.key] = ne(oe);
  }), ie;
}
function mergeChildMappings(Z, ee) {
  Z = Z || {}, ee = ee || {};
  function ne(Ee) {
    return Ee in ee ? ee[Ee] : Z[Ee];
  }
  var ie = /* @__PURE__ */ Object.create(null), oe = [];
  for (var ce in Z)
    ce in ee ? oe.length && (ie[ce] = oe, oe = []) : oe.push(ce);
  var he, fe = {};
  for (var xe in ee) {
    if (ie[xe])
      for (he = 0; he < ie[xe].length; he++) {
        var Ae = ie[xe][he];
        fe[ie[xe][he]] = ne(Ae);
      }
    fe[xe] = ne(xe);
  }
  for (he = 0; he < oe.length; he++)
    fe[oe[he]] = ne(oe[he]);
  return fe;
}
function getProp(Z, ee, ne) {
  return ne[ee] != null ? ne[ee] : Z.props[ee];
}
function getInitialChildMapping(Z, ee) {
  return getChildMapping(Z.children, function(ne) {
    return cloneElement(ne, {
      onExited: ee.bind(null, ne),
      in: !0,
      appear: getProp(ne, "appear", Z),
      enter: getProp(ne, "enter", Z),
      exit: getProp(ne, "exit", Z)
    });
  });
}
function getNextChildMapping(Z, ee, ne) {
  var ie = getChildMapping(Z.children), oe = mergeChildMappings(ee, ie);
  return Object.keys(oe).forEach(function(ce) {
    var he = oe[ce];
    if (!!isValidElement(he)) {
      var fe = ce in ee, xe = ce in ie, Ae = ee[ce], Ee = isValidElement(Ae) && !Ae.props.in;
      xe && (!fe || Ee) ? oe[ce] = cloneElement(he, {
        onExited: ne.bind(null, he),
        in: !0,
        exit: getProp(he, "exit", Z),
        enter: getProp(he, "enter", Z)
      }) : !xe && fe && !Ee ? oe[ce] = cloneElement(he, {
        in: !1
      }) : xe && fe && isValidElement(Ae) && (oe[ce] = cloneElement(he, {
        onExited: ne.bind(null, he),
        in: Ae.props.in,
        exit: getProp(he, "exit", Z),
        enter: getProp(he, "enter", Z)
      }));
    }
  }), oe;
}
var values = Object.values || function(Z) {
  return Object.keys(Z).map(function(ee) {
    return Z[ee];
  });
}, defaultProps = {
  component: "div",
  childFactory: function(ee) {
    return ee;
  }
}, TransitionGroup = /* @__PURE__ */ function(Z) {
  _inheritsLoose(ee, Z);
  function ee(ie, oe) {
    var ce;
    ce = Z.call(this, ie, oe) || this;
    var he = ce.handleExited.bind(_assertThisInitialized(ce));
    return ce.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: he,
      firstRender: !0
    }, ce;
  }
  var ne = ee.prototype;
  return ne.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, ne.componentWillUnmount = function() {
    this.mounted = !1;
  }, ee.getDerivedStateFromProps = function(oe, ce) {
    var he = ce.children, fe = ce.handleExited, xe = ce.firstRender;
    return {
      children: xe ? getInitialChildMapping(oe, fe) : getNextChildMapping(oe, he, fe),
      firstRender: !1
    };
  }, ne.handleExited = function(oe, ce) {
    var he = getChildMapping(this.props.children);
    oe.key in he || (oe.props.onExited && oe.props.onExited(ce), this.mounted && this.setState(function(fe) {
      var xe = _extends$1({}, fe.children);
      return delete xe[oe.key], {
        children: xe
      };
    }));
  }, ne.render = function() {
    var oe = this.props, ce = oe.component, he = oe.childFactory, fe = _objectWithoutPropertiesLoose$1(oe, ["component", "childFactory"]), xe = this.state.contextValue, Ae = values(this.state.children).map(he);
    return delete fe.appear, delete fe.enter, delete fe.exit, ce === null ? /* @__PURE__ */ jsx(TransitionGroupContext.Provider, {
      value: xe,
      children: Ae
    }) : /* @__PURE__ */ jsx(TransitionGroupContext.Provider, {
      value: xe,
      children: /* @__PURE__ */ jsx(ce, {
        ...fe,
        children: Ae
      })
    });
  }, ee;
}(React__default.Component);
TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  component: propTypes.exports.any,
  children: propTypes.exports.node,
  appear: propTypes.exports.bool,
  enter: propTypes.exports.bool,
  exit: propTypes.exports.bool,
  childFactory: propTypes.exports.func
} : {};
TransitionGroup.defaultProps = defaultProps;
const TransitionGroup$1 = TransitionGroup;
function Ripple(Z) {
  const {
    className: ee,
    classes: ne,
    pulsate: ie = !1,
    rippleX: oe,
    rippleY: ce,
    rippleSize: he,
    in: fe,
    onExited: xe,
    timeout: Ae
  } = Z, [Ee, ye] = React.useState(!1), ge = clsx(ee, ne.ripple, ne.rippleVisible, ie && ne.ripplePulsate), me = {
    width: he,
    height: he,
    top: -(he / 2) + ce,
    left: -(he / 2) + oe
  }, Ce = clsx(ne.child, Ee && ne.childLeaving, ie && ne.childPulsate);
  return !fe && !Ee && ye(!0), React.useEffect(() => {
    if (!fe && xe != null) {
      const Ie = setTimeout(xe, Ae);
      return () => {
        clearTimeout(Ie);
      };
    }
  }, [xe, fe, Ae]), /* @__PURE__ */ jsx("span", {
    className: ge,
    style: me,
    children: /* @__PURE__ */ jsx("span", {
      className: Ce
    })
  });
}
process.env.NODE_ENV !== "production" && (Ripple.propTypes = {
  classes: propTypes.exports.object.isRequired,
  className: propTypes.exports.string,
  in: propTypes.exports.bool,
  onExited: propTypes.exports.func,
  pulsate: propTypes.exports.bool,
  rippleSize: propTypes.exports.number,
  rippleX: propTypes.exports.number,
  rippleY: propTypes.exports.number,
  timeout: propTypes.exports.number.isRequired
});
const touchRippleClasses = generateUtilityClasses("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), touchRippleClasses$1 = touchRippleClasses, _excluded$2 = ["center", "classes", "className"];
let _ = (Z) => Z, _t, _t2, _t3, _t4;
const DURATION = 550, DELAY_RIPPLE = 80, enterKeyframe = keyframes(_t || (_t = _`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)), exitKeyframe = keyframes(_t2 || (_t2 = _`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)), pulsateKeyframe = keyframes(_t3 || (_t3 = _`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)), TouchRippleRoot = styled$3("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), TouchRippleRipple = styled$3(Ripple, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(_t4 || (_t4 = _`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses$1.rippleVisible, enterKeyframe, DURATION, ({
  theme: Z
}) => Z.transitions.easing.easeInOut, touchRippleClasses$1.ripplePulsate, ({
  theme: Z
}) => Z.transitions.duration.shorter, touchRippleClasses$1.child, touchRippleClasses$1.childLeaving, exitKeyframe, DURATION, ({
  theme: Z
}) => Z.transitions.easing.easeInOut, touchRippleClasses$1.childPulsate, pulsateKeyframe, ({
  theme: Z
}) => Z.transitions.easing.easeInOut), TouchRipple = /* @__PURE__ */ React.forwardRef(function(ee, ne) {
  const ie = useThemeProps({
    props: ee,
    name: "MuiTouchRipple"
  }), {
    center: oe = !1,
    classes: ce = {},
    className: he
  } = ie, fe = _objectWithoutPropertiesLoose$1(ie, _excluded$2), [xe, Ae] = React.useState([]), Ee = React.useRef(0), ye = React.useRef(null);
  React.useEffect(() => {
    ye.current && (ye.current(), ye.current = null);
  }, [xe]);
  const ge = React.useRef(!1), me = React.useRef(null), Ce = React.useRef(null), Ie = React.useRef(null);
  React.useEffect(() => () => {
    clearTimeout(me.current);
  }, []);
  const Oe = React.useCallback((Fe) => {
    const {
      pulsate: Le,
      rippleX: We,
      rippleY: rt,
      rippleSize: gt,
      cb: kt
    } = Fe;
    Ae((Ke) => [...Ke, /* @__PURE__ */ jsx(TouchRippleRipple, {
      classes: {
        ripple: clsx(ce.ripple, touchRippleClasses$1.ripple),
        rippleVisible: clsx(ce.rippleVisible, touchRippleClasses$1.rippleVisible),
        ripplePulsate: clsx(ce.ripplePulsate, touchRippleClasses$1.ripplePulsate),
        child: clsx(ce.child, touchRippleClasses$1.child),
        childLeaving: clsx(ce.childLeaving, touchRippleClasses$1.childLeaving),
        childPulsate: clsx(ce.childPulsate, touchRippleClasses$1.childPulsate)
      },
      timeout: DURATION,
      pulsate: Le,
      rippleX: We,
      rippleY: rt,
      rippleSize: gt
    }, Ee.current)]), Ee.current += 1, ye.current = kt;
  }, [ce]), He = React.useCallback((Fe = {}, Le = {}, We = () => {
  }) => {
    const {
      pulsate: rt = !1,
      center: gt = oe || Le.pulsate,
      fakeElement: kt = !1
    } = Le;
    if ((Fe == null ? void 0 : Fe.type) === "mousedown" && ge.current) {
      ge.current = !1;
      return;
    }
    (Fe == null ? void 0 : Fe.type) === "touchstart" && (ge.current = !0);
    const Ke = kt ? null : Ie.current, ht = Ke ? Ke.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let Nt, Ft, At;
    if (gt || Fe === void 0 || Fe.clientX === 0 && Fe.clientY === 0 || !Fe.clientX && !Fe.touches)
      Nt = Math.round(ht.width / 2), Ft = Math.round(ht.height / 2);
    else {
      const {
        clientX: St,
        clientY: Vt
      } = Fe.touches && Fe.touches.length > 0 ? Fe.touches[0] : Fe;
      Nt = Math.round(St - ht.left), Ft = Math.round(Vt - ht.top);
    }
    if (gt)
      At = Math.sqrt((2 * ht.width ** 2 + ht.height ** 2) / 3), At % 2 === 0 && (At += 1);
    else {
      const St = Math.max(Math.abs((Ke ? Ke.clientWidth : 0) - Nt), Nt) * 2 + 2, Vt = Math.max(Math.abs((Ke ? Ke.clientHeight : 0) - Ft), Ft) * 2 + 2;
      At = Math.sqrt(St ** 2 + Vt ** 2);
    }
    Fe != null && Fe.touches ? Ce.current === null && (Ce.current = () => {
      Oe({
        pulsate: rt,
        rippleX: Nt,
        rippleY: Ft,
        rippleSize: At,
        cb: We
      });
    }, me.current = setTimeout(() => {
      Ce.current && (Ce.current(), Ce.current = null);
    }, DELAY_RIPPLE)) : Oe({
      pulsate: rt,
      rippleX: Nt,
      rippleY: Ft,
      rippleSize: At,
      cb: We
    });
  }, [oe, Oe]), Ne = React.useCallback(() => {
    He({}, {
      pulsate: !0
    });
  }, [He]), Pe = React.useCallback((Fe, Le) => {
    if (clearTimeout(me.current), (Fe == null ? void 0 : Fe.type) === "touchend" && Ce.current) {
      Ce.current(), Ce.current = null, me.current = setTimeout(() => {
        Pe(Fe, Le);
      });
      return;
    }
    Ce.current = null, Ae((We) => We.length > 0 ? We.slice(1) : We), ye.current = Le;
  }, []);
  return React.useImperativeHandle(ne, () => ({
    pulsate: Ne,
    start: He,
    stop: Pe
  }), [Ne, He, Pe]), /* @__PURE__ */ jsx(TouchRippleRoot, _extends$1({
    className: clsx(touchRippleClasses$1.root, ce.root, he),
    ref: Ie
  }, fe, {
    children: /* @__PURE__ */ jsx(TransitionGroup$1, {
      component: null,
      exit: !0,
      children: xe
    })
  }));
});
process.env.NODE_ENV !== "production" && (TouchRipple.propTypes = {
  center: propTypes.exports.bool,
  classes: propTypes.exports.object,
  className: propTypes.exports.string
});
const TouchRipple$1 = TouchRipple;
function getButtonBaseUtilityClass(Z) {
  return generateUtilityClass("MuiButtonBase", Z);
}
const buttonBaseClasses = generateUtilityClasses("MuiButtonBase", ["root", "disabled", "focusVisible"]), buttonBaseClasses$1 = buttonBaseClasses, _excluded$1 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"], useUtilityClasses$1 = (Z) => {
  const {
    disabled: ee,
    focusVisible: ne,
    focusVisibleClassName: ie,
    classes: oe
  } = Z, he = composeClasses({
    root: ["root", ee && "disabled", ne && "focusVisible"]
  }, getButtonBaseUtilityClass, oe);
  return ne && ie && (he.root += ` ${ie}`), he;
}, ButtonBaseRoot = styled$3("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (Z, ee) => ee.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  outline: 0,
  border: 0,
  margin: 0,
  borderRadius: 0,
  padding: 0,
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  WebkitAppearance: "none",
  textDecoration: "none",
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
  },
  [`&.${buttonBaseClasses$1.disabled}`]: {
    pointerEvents: "none",
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), ButtonBase = /* @__PURE__ */ React.forwardRef(function(ee, ne) {
  const ie = useThemeProps({
    props: ee,
    name: "MuiButtonBase"
  }), {
    action: oe,
    centerRipple: ce = !1,
    children: he,
    className: fe,
    component: xe = "button",
    disabled: Ae = !1,
    disableRipple: Ee = !1,
    disableTouchRipple: ye = !1,
    focusRipple: ge = !1,
    LinkComponent: me = "a",
    onBlur: Ce,
    onClick: Ie,
    onContextMenu: Oe,
    onDragLeave: He,
    onFocus: Ne,
    onFocusVisible: Pe,
    onKeyDown: Fe,
    onKeyUp: Le,
    onMouseDown: We,
    onMouseLeave: rt,
    onMouseUp: gt,
    onTouchEnd: kt,
    onTouchMove: Ke,
    onTouchStart: ht,
    tabIndex: Nt = 0,
    TouchRippleProps: Ft,
    touchRippleRef: At,
    type: St
  } = ie, Vt = _objectWithoutPropertiesLoose$1(ie, _excluded$1), Xt = React.useRef(null), Lt = React.useRef(null), Zt = useForkRef(Lt, At), {
    isFocusVisibleRef: Gt,
    onFocus: pt,
    onBlur: It,
    ref: qt
  } = useIsFocusVisible(), [De, ar] = React.useState(!1);
  Ae && De && ar(!1), React.useImperativeHandle(oe, () => ({
    focusVisible: () => {
      ar(!0), Xt.current.focus();
    }
  }), []);
  const [rr, Ar] = React.useState(!1);
  React.useEffect(() => {
    Ar(!0);
  }, []);
  const vt = rr && !Ee && !Ae;
  React.useEffect(() => {
    De && ge && !Ee && rr && Lt.current.pulsate();
  }, [Ee, ge, De, rr]);
  function Ut(Re, it, bt = ye) {
    return useEventCallback((Qt) => (it && it(Qt), !bt && Lt.current && Lt.current[Re](Qt), !0));
  }
  const Xe = Ut("start", We), tt = Ut("stop", Oe), et = Ut("stop", He), Et = Ut("stop", gt), lt = Ut("stop", (Re) => {
    De && Re.preventDefault(), rt && rt(Re);
  }), $e = Ut("start", ht), _e = Ut("stop", kt), Be = Ut("stop", Ke), be = Ut("stop", (Re) => {
    It(Re), Gt.current === !1 && ar(!1), Ce && Ce(Re);
  }, !1), ke = useEventCallback((Re) => {
    Xt.current || (Xt.current = Re.currentTarget), pt(Re), Gt.current === !0 && (ar(!0), Pe && Pe(Re)), Ne && Ne(Re);
  }), Ve = () => {
    const Re = Xt.current;
    return xe && xe !== "button" && !(Re.tagName === "A" && Re.href);
  }, Je = React.useRef(!1), at = useEventCallback((Re) => {
    ge && !Je.current && De && Lt.current && Re.key === " " && (Je.current = !0, Lt.current.stop(Re, () => {
      Lt.current.start(Re);
    })), Re.target === Re.currentTarget && Ve() && Re.key === " " && Re.preventDefault(), Fe && Fe(Re), Re.target === Re.currentTarget && Ve() && Re.key === "Enter" && !Ae && (Re.preventDefault(), Ie && Ie(Re));
  }), Tt = useEventCallback((Re) => {
    ge && Re.key === " " && Lt.current && De && !Re.defaultPrevented && (Je.current = !1, Lt.current.stop(Re, () => {
      Lt.current.pulsate(Re);
    })), Le && Le(Re), Ie && Re.target === Re.currentTarget && Ve() && Re.key === " " && !Re.defaultPrevented && Ie(Re);
  });
  let Dt = xe;
  Dt === "button" && (Vt.href || Vt.to) && (Dt = me);
  const zt = {};
  Dt === "button" ? (zt.type = St === void 0 ? "button" : St, zt.disabled = Ae) : (!Vt.href && !Vt.to && (zt.role = "button"), Ae && (zt["aria-disabled"] = Ae));
  const Yt = useForkRef(ne, qt, Xt);
  process.env.NODE_ENV !== "production" && React.useEffect(() => {
    vt && !Lt.current && console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join(`
`));
  }, [vt]);
  const Ue = _extends$1({}, ie, {
    centerRipple: ce,
    component: xe,
    disabled: Ae,
    disableRipple: Ee,
    disableTouchRipple: ye,
    focusRipple: ge,
    tabIndex: Nt,
    focusVisible: De
  }), Te = useUtilityClasses$1(Ue);
  return /* @__PURE__ */ jsxs(ButtonBaseRoot, _extends$1({
    as: Dt,
    className: clsx(Te.root, fe),
    ownerState: Ue,
    onBlur: be,
    onClick: Ie,
    onContextMenu: tt,
    onFocus: ke,
    onKeyDown: at,
    onKeyUp: Tt,
    onMouseDown: Xe,
    onMouseLeave: lt,
    onMouseUp: Et,
    onDragLeave: et,
    onTouchEnd: _e,
    onTouchMove: Be,
    onTouchStart: $e,
    ref: Yt,
    tabIndex: Ae ? -1 : Nt,
    type: St
  }, zt, Vt, {
    children: [he, vt ? /* @__PURE__ */ jsx(TouchRipple$1, _extends$1({
      ref: Zt,
      center: ce
    }, Ft)) : null]
  }));
});
process.env.NODE_ENV !== "production" && (ButtonBase.propTypes = {
  action: refType$1,
  centerRipple: propTypes.exports.bool,
  children: propTypes.exports.node,
  classes: propTypes.exports.object,
  className: propTypes.exports.string,
  component: elementTypeAcceptingRef$1,
  disabled: propTypes.exports.bool,
  disableRipple: propTypes.exports.bool,
  disableTouchRipple: propTypes.exports.bool,
  focusRipple: propTypes.exports.bool,
  focusVisibleClassName: propTypes.exports.string,
  href: propTypes.exports.any,
  LinkComponent: propTypes.exports.elementType,
  onBlur: propTypes.exports.func,
  onClick: propTypes.exports.func,
  onContextMenu: propTypes.exports.func,
  onDragLeave: propTypes.exports.func,
  onFocus: propTypes.exports.func,
  onFocusVisible: propTypes.exports.func,
  onKeyDown: propTypes.exports.func,
  onKeyUp: propTypes.exports.func,
  onMouseDown: propTypes.exports.func,
  onMouseLeave: propTypes.exports.func,
  onMouseUp: propTypes.exports.func,
  onTouchEnd: propTypes.exports.func,
  onTouchMove: propTypes.exports.func,
  onTouchStart: propTypes.exports.func,
  sx: propTypes.exports.oneOfType([propTypes.exports.arrayOf(propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object, propTypes.exports.bool])), propTypes.exports.func, propTypes.exports.object]),
  tabIndex: propTypes.exports.number,
  TouchRippleProps: propTypes.exports.object,
  touchRippleRef: propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.shape({
    current: propTypes.exports.shape({
      pulsate: propTypes.exports.func.isRequired,
      start: propTypes.exports.func.isRequired,
      stop: propTypes.exports.func.isRequired
    })
  })]),
  type: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "reset", "submit"]), propTypes.exports.string])
});
const ButtonBase$1 = ButtonBase;
function getButtonUtilityClass(Z) {
  return generateUtilityClass("MuiButton", Z);
}
const buttonClasses = generateUtilityClasses("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]), buttonClasses$1 = buttonClasses, ButtonGroupContext = /* @__PURE__ */ React.createContext({});
process.env.NODE_ENV !== "production" && (ButtonGroupContext.displayName = "ButtonGroupContext");
const ButtonGroupContext$1 = ButtonGroupContext, _excluded = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"], useUtilityClasses = (Z) => {
  const {
    color: ee,
    disableElevation: ne,
    fullWidth: ie,
    size: oe,
    variant: ce,
    classes: he
  } = Z, fe = {
    root: ["root", ce, `${ce}${capitalize(ee)}`, `size${capitalize(oe)}`, `${ce}Size${capitalize(oe)}`, ee === "inherit" && "colorInherit", ne && "disableElevation", ie && "fullWidth"],
    label: ["label"],
    startIcon: ["startIcon", `iconSize${capitalize(oe)}`],
    endIcon: ["endIcon", `iconSize${capitalize(oe)}`]
  }, xe = composeClasses(fe, getButtonUtilityClass, he);
  return _extends$1({}, he, xe);
}, commonIconStyles = (Z) => _extends$1({}, Z.size === "small" && {
  "& > *:nth-of-type(1)": {
    fontSize: 18
  }
}, Z.size === "medium" && {
  "& > *:nth-of-type(1)": {
    fontSize: 20
  }
}, Z.size === "large" && {
  "& > *:nth-of-type(1)": {
    fontSize: 22
  }
}), ButtonRoot = styled$3(ButtonBase$1, {
  shouldForwardProp: (Z) => rootShouldForwardProp(Z) || Z === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (Z, ee) => {
    const {
      ownerState: ne
    } = Z;
    return [ee.root, ee[ne.variant], ee[`${ne.variant}${capitalize(ne.color)}`], ee[`size${capitalize(ne.size)}`], ee[`${ne.variant}Size${capitalize(ne.size)}`], ne.color === "inherit" && ee.colorInherit, ne.disableElevation && ee.disableElevation, ne.fullWidth && ee.fullWidth];
  }
})(({
  theme: Z,
  ownerState: ee
}) => {
  var ne, ie;
  return _extends$1({}, Z.typography.button, {
    minWidth: 64,
    padding: "6px 16px",
    borderRadius: (Z.vars || Z).shape.borderRadius,
    transition: Z.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: Z.transitions.duration.short
    }),
    "&:hover": _extends$1({
      textDecoration: "none",
      backgroundColor: Z.vars ? `rgba(${Z.vars.palette.text.primaryChannel} / ${Z.vars.palette.action.hoverOpacity})` : alpha(Z.palette.text.primary, Z.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "text" && ee.color !== "inherit" && {
      backgroundColor: Z.vars ? `rgba(${Z.vars.palette[ee.color].mainChannel} / ${Z.vars.palette.action.hoverOpacity})` : alpha(Z.palette[ee.color].main, Z.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "outlined" && ee.color !== "inherit" && {
      border: `1px solid ${(Z.vars || Z).palette[ee.color].main}`,
      backgroundColor: Z.vars ? `rgba(${Z.vars.palette[ee.color].mainChannel} / ${Z.vars.palette.action.hoverOpacity})` : alpha(Z.palette[ee.color].main, Z.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "contained" && {
      backgroundColor: (Z.vars || Z).palette.grey.A100,
      boxShadow: (Z.vars || Z).shadows[4],
      "@media (hover: none)": {
        boxShadow: (Z.vars || Z).shadows[2],
        backgroundColor: (Z.vars || Z).palette.grey[300]
      }
    }, ee.variant === "contained" && ee.color !== "inherit" && {
      backgroundColor: (Z.vars || Z).palette[ee.color].dark,
      "@media (hover: none)": {
        backgroundColor: (Z.vars || Z).palette[ee.color].main
      }
    }),
    "&:active": _extends$1({}, ee.variant === "contained" && {
      boxShadow: (Z.vars || Z).shadows[8]
    }),
    [`&.${buttonClasses$1.focusVisible}`]: _extends$1({}, ee.variant === "contained" && {
      boxShadow: (Z.vars || Z).shadows[6]
    }),
    [`&.${buttonClasses$1.disabled}`]: _extends$1({
      color: (Z.vars || Z).palette.action.disabled
    }, ee.variant === "outlined" && {
      border: `1px solid ${(Z.vars || Z).palette.action.disabledBackground}`
    }, ee.variant === "outlined" && ee.color === "secondary" && {
      border: `1px solid ${(Z.vars || Z).palette.action.disabled}`
    }, ee.variant === "contained" && {
      color: (Z.vars || Z).palette.action.disabled,
      boxShadow: (Z.vars || Z).shadows[0],
      backgroundColor: (Z.vars || Z).palette.action.disabledBackground
    })
  }, ee.variant === "text" && {
    padding: "6px 8px"
  }, ee.variant === "text" && ee.color !== "inherit" && {
    color: (Z.vars || Z).palette[ee.color].main
  }, ee.variant === "outlined" && {
    padding: "5px 15px",
    border: "1px solid currentColor"
  }, ee.variant === "outlined" && ee.color !== "inherit" && {
    color: (Z.vars || Z).palette[ee.color].main,
    border: Z.vars ? `1px solid rgba(${Z.vars.palette[ee.color].mainChannel} / 0.5)` : `1px solid ${alpha(Z.palette[ee.color].main, 0.5)}`
  }, ee.variant === "contained" && {
    color: Z.vars ? Z.vars.palette.text.primary : (ne = (ie = Z.palette).getContrastText) == null ? void 0 : ne.call(ie, Z.palette.grey[300]),
    backgroundColor: (Z.vars || Z).palette.grey[300],
    boxShadow: (Z.vars || Z).shadows[2]
  }, ee.variant === "contained" && ee.color !== "inherit" && {
    color: (Z.vars || Z).palette[ee.color].contrastText,
    backgroundColor: (Z.vars || Z).palette[ee.color].main
  }, ee.color === "inherit" && {
    color: "inherit",
    borderColor: "currentColor"
  }, ee.size === "small" && ee.variant === "text" && {
    padding: "4px 5px",
    fontSize: Z.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "text" && {
    padding: "8px 11px",
    fontSize: Z.typography.pxToRem(15)
  }, ee.size === "small" && ee.variant === "outlined" && {
    padding: "3px 9px",
    fontSize: Z.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "outlined" && {
    padding: "7px 21px",
    fontSize: Z.typography.pxToRem(15)
  }, ee.size === "small" && ee.variant === "contained" && {
    padding: "4px 10px",
    fontSize: Z.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "contained" && {
    padding: "8px 22px",
    fontSize: Z.typography.pxToRem(15)
  }, ee.fullWidth && {
    width: "100%"
  });
}, ({
  ownerState: Z
}) => Z.disableElevation && {
  boxShadow: "none",
  "&:hover": {
    boxShadow: "none"
  },
  [`&.${buttonClasses$1.focusVisible}`]: {
    boxShadow: "none"
  },
  "&:active": {
    boxShadow: "none"
  },
  [`&.${buttonClasses$1.disabled}`]: {
    boxShadow: "none"
  }
}), ButtonStartIcon = styled$3("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (Z, ee) => {
    const {
      ownerState: ne
    } = Z;
    return [ee.startIcon, ee[`iconSize${capitalize(ne.size)}`]];
  }
})(({
  ownerState: Z
}) => _extends$1({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4
}, Z.size === "small" && {
  marginLeft: -2
}, commonIconStyles(Z))), ButtonEndIcon = styled$3("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (Z, ee) => {
    const {
      ownerState: ne
    } = Z;
    return [ee.endIcon, ee[`iconSize${capitalize(ne.size)}`]];
  }
})(({
  ownerState: Z
}) => _extends$1({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8
}, Z.size === "small" && {
  marginRight: -2
}, commonIconStyles(Z))), Button = /* @__PURE__ */ React.forwardRef(function(ee, ne) {
  const ie = React.useContext(ButtonGroupContext$1), oe = resolveProps(ie, ee), ce = useThemeProps({
    props: oe,
    name: "MuiButton"
  }), {
    children: he,
    color: fe = "primary",
    component: xe = "button",
    className: Ae,
    disabled: Ee = !1,
    disableElevation: ye = !1,
    disableFocusRipple: ge = !1,
    endIcon: me,
    focusVisibleClassName: Ce,
    fullWidth: Ie = !1,
    size: Oe = "medium",
    startIcon: He,
    type: Ne,
    variant: Pe = "text"
  } = ce, Fe = _objectWithoutPropertiesLoose$1(ce, _excluded), Le = _extends$1({}, ce, {
    color: fe,
    component: xe,
    disabled: Ee,
    disableElevation: ye,
    disableFocusRipple: ge,
    fullWidth: Ie,
    size: Oe,
    type: Ne,
    variant: Pe
  }), We = useUtilityClasses(Le), rt = He && /* @__PURE__ */ jsx(ButtonStartIcon, {
    className: We.startIcon,
    ownerState: Le,
    children: He
  }), gt = me && /* @__PURE__ */ jsx(ButtonEndIcon, {
    className: We.endIcon,
    ownerState: Le,
    children: me
  });
  return /* @__PURE__ */ jsxs(ButtonRoot, _extends$1({
    ownerState: Le,
    className: clsx(ie.className, We.root, Ae),
    component: xe,
    disabled: Ee,
    focusRipple: !ge,
    focusVisibleClassName: clsx(We.focusVisible, Ce),
    ref: ne,
    type: Ne
  }, Fe, {
    classes: We,
    children: [rt, he, gt]
  }));
});
process.env.NODE_ENV !== "production" && (Button.propTypes = {
  children: propTypes.exports.node,
  classes: propTypes.exports.object,
  className: propTypes.exports.string,
  color: propTypes.exports.oneOfType([propTypes.exports.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), propTypes.exports.string]),
  component: propTypes.exports.elementType,
  disabled: propTypes.exports.bool,
  disableElevation: propTypes.exports.bool,
  disableFocusRipple: propTypes.exports.bool,
  disableRipple: propTypes.exports.bool,
  endIcon: propTypes.exports.node,
  focusVisibleClassName: propTypes.exports.string,
  fullWidth: propTypes.exports.bool,
  href: propTypes.exports.string,
  size: propTypes.exports.oneOfType([propTypes.exports.oneOf(["small", "medium", "large"]), propTypes.exports.string]),
  startIcon: propTypes.exports.node,
  sx: propTypes.exports.oneOfType([propTypes.exports.arrayOf(propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object, propTypes.exports.bool])), propTypes.exports.func, propTypes.exports.object]),
  type: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "reset", "submit"]), propTypes.exports.string]),
  variant: propTypes.exports.oneOfType([propTypes.exports.oneOf(["contained", "outlined", "text"]), propTypes.exports.string])
});
const Button$1 = Button, DndContext = createContext({
  dragDropManager: void 0
});
function formatProdErrorMessage(Z) {
  return "Minified Redux error #" + Z + "; visit https://redux.js.org/Errors?code=" + Z + " for the full message or use the non-minified dev environment for full errors. ";
}
var $$observable = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}(), randomString = function() {
  return Math.random().toString(36).substring(7).split("").join(".");
}, ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};
function isPlainObject$3(Z) {
  if (typeof Z != "object" || Z === null)
    return !1;
  for (var ee = Z; Object.getPrototypeOf(ee) !== null; )
    ee = Object.getPrototypeOf(ee);
  return Object.getPrototypeOf(Z) === ee;
}
function miniKindOf(Z) {
  if (Z === void 0)
    return "undefined";
  if (Z === null)
    return "null";
  var ee = typeof Z;
  switch (ee) {
    case "boolean":
    case "string":
    case "number":
    case "symbol":
    case "function":
      return ee;
  }
  if (Array.isArray(Z))
    return "array";
  if (isDate$1(Z))
    return "date";
  if (isError(Z))
    return "error";
  var ne = ctorName(Z);
  switch (ne) {
    case "Symbol":
    case "Promise":
    case "WeakMap":
    case "WeakSet":
    case "Map":
    case "Set":
      return ne;
  }
  return ee.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function ctorName(Z) {
  return typeof Z.constructor == "function" ? Z.constructor.name : null;
}
function isError(Z) {
  return Z instanceof Error || typeof Z.message == "string" && Z.constructor && typeof Z.constructor.stackTraceLimit == "number";
}
function isDate$1(Z) {
  return Z instanceof Date ? !0 : typeof Z.toDateString == "function" && typeof Z.getDate == "function" && typeof Z.setDate == "function";
}
function kindOf(Z) {
  var ee = typeof Z;
  return process.env.NODE_ENV !== "production" && (ee = miniKindOf(Z)), ee;
}
function createStore$1(Z, ee, ne) {
  var ie;
  if (typeof ee == "function" && typeof ne == "function" || typeof ne == "function" && typeof arguments[3] == "function")
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(0) : "It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
  if (typeof ee == "function" && typeof ne > "u" && (ne = ee, ee = void 0), typeof ne < "u") {
    if (typeof ne != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(1) : "Expected the enhancer to be a function. Instead, received: '" + kindOf(ne) + "'");
    return ne(createStore$1)(Z, ee);
  }
  if (typeof Z != "function")
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(2) : "Expected the root reducer to be a function. Instead, received: '" + kindOf(Z) + "'");
  var oe = Z, ce = ee, he = [], fe = he, xe = !1;
  function Ae() {
    fe === he && (fe = he.slice());
  }
  function Ee() {
    if (xe)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(3) : "You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
    return ce;
  }
  function ye(Ie) {
    if (typeof Ie != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(4) : "Expected the listener to be a function. Instead, received: '" + kindOf(Ie) + "'");
    if (xe)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(5) : "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
    var Oe = !0;
    return Ae(), fe.push(Ie), function() {
      if (!!Oe) {
        if (xe)
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(6) : "You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
        Oe = !1, Ae();
        var Ne = fe.indexOf(Ie);
        fe.splice(Ne, 1), he = null;
      }
    };
  }
  function ge(Ie) {
    if (!isPlainObject$3(Ie))
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(Ie) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    if (typeof Ie.type > "u")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    if (xe)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(9) : "Reducers may not dispatch actions.");
    try {
      xe = !0, ce = oe(ce, Ie);
    } finally {
      xe = !1;
    }
    for (var Oe = he = fe, He = 0; He < Oe.length; He++) {
      var Ne = Oe[He];
      Ne();
    }
    return Ie;
  }
  function me(Ie) {
    if (typeof Ie != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(10) : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(Ie));
    oe = Ie, ge({
      type: ActionTypes.REPLACE
    });
  }
  function Ce() {
    var Ie, Oe = ye;
    return Ie = {
      subscribe: function(Ne) {
        if (typeof Ne != "object" || Ne === null)
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(11) : "Expected the observer to be an object. Instead, received: '" + kindOf(Ne) + "'");
        function Pe() {
          Ne.next && Ne.next(Ee());
        }
        Pe();
        var Fe = Oe(Pe);
        return {
          unsubscribe: Fe
        };
      }
    }, Ie[$$observable] = function() {
      return this;
    }, Ie;
  }
  return ge({
    type: ActionTypes.INIT
  }), ie = {
    dispatch: ge,
    subscribe: ye,
    getState: Ee,
    replaceReducer: me
  }, ie[$$observable] = Ce, ie;
}
function warning(Z) {
  typeof console < "u" && typeof console.error == "function" && console.error(Z);
  try {
    throw new Error(Z);
  } catch {
  }
}
function isCrushed() {
}
process.env.NODE_ENV !== "production" && typeof isCrushed.name == "string" && isCrushed.name !== "isCrushed" && warning('You are currently using minified code outside of NODE_ENV === "production". This means that you are running a slower development build of Redux. You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) to ensure you have the correct code for your production build.');
function invariant(Z, ee, ...ne) {
  if (isProduction() && ee === void 0)
    throw new Error("invariant requires an error message argument");
  if (!Z) {
    let ie;
    if (ee === void 0)
      ie = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
    else {
      let oe = 0;
      ie = new Error(ee.replace(/%s/g, function() {
        return ne[oe++];
      })), ie.name = "Invariant Violation";
    }
    throw ie.framesToPop = 1, ie;
  }
}
function isProduction() {
  return typeof process < "u" && process.env.NODE_ENV === "production";
}
function get(Z, ee, ne) {
  return ee.split(".").reduce(
    (ie, oe) => ie && ie[oe] ? ie[oe] : ne || null,
    Z
  );
}
function without$1(Z, ee) {
  return Z.filter(
    (ne) => ne !== ee
  );
}
function isObject$1(Z) {
  return typeof Z == "object";
}
function xor(Z, ee) {
  const ne = /* @__PURE__ */ new Map(), ie = (ce) => {
    ne.set(ce, ne.has(ce) ? ne.get(ce) + 1 : 1);
  };
  Z.forEach(ie), ee.forEach(ie);
  const oe = [];
  return ne.forEach((ce, he) => {
    ce === 1 && oe.push(he);
  }), oe;
}
function intersection(Z, ee) {
  return Z.filter(
    (ne) => ee.indexOf(ne) > -1
  );
}
const INIT_COORDS = "dnd-core/INIT_COORDS", BEGIN_DRAG = "dnd-core/BEGIN_DRAG", PUBLISH_DRAG_SOURCE = "dnd-core/PUBLISH_DRAG_SOURCE", HOVER = "dnd-core/HOVER", DROP = "dnd-core/DROP", END_DRAG = "dnd-core/END_DRAG";
function setClientOffset(Z, ee) {
  return {
    type: INIT_COORDS,
    payload: {
      sourceClientOffset: ee || null,
      clientOffset: Z || null
    }
  };
}
const ResetCoordinatesAction = {
  type: INIT_COORDS,
  payload: {
    clientOffset: null,
    sourceClientOffset: null
  }
};
function createBeginDrag(Z) {
  return function(ne = [], ie = {
    publishSource: !0
  }) {
    const { publishSource: oe = !0, clientOffset: ce, getSourceClientOffset: he } = ie, fe = Z.getMonitor(), xe = Z.getRegistry();
    Z.dispatch(setClientOffset(ce)), verifyInvariants$1(ne, fe, xe);
    const Ae = getDraggableSource(ne, fe);
    if (Ae == null) {
      Z.dispatch(ResetCoordinatesAction);
      return;
    }
    let Ee = null;
    if (ce) {
      if (!he)
        throw new Error("getSourceClientOffset must be defined");
      verifyGetSourceClientOffsetIsFunction(he), Ee = he(Ae);
    }
    Z.dispatch(setClientOffset(ce, Ee));
    const ge = xe.getSource(Ae).beginDrag(fe, Ae);
    if (ge == null)
      return;
    verifyItemIsObject(ge), xe.pinSource(Ae);
    const me = xe.getSourceType(Ae);
    return {
      type: BEGIN_DRAG,
      payload: {
        itemType: me,
        item: ge,
        sourceId: Ae,
        clientOffset: ce || null,
        sourceClientOffset: Ee || null,
        isSourcePublic: !!oe
      }
    };
  };
}
function verifyInvariants$1(Z, ee, ne) {
  invariant(!ee.isDragging(), "Cannot call beginDrag while dragging."), Z.forEach(function(ie) {
    invariant(ne.getSource(ie), "Expected sourceIds to be registered.");
  });
}
function verifyGetSourceClientOffsetIsFunction(Z) {
  invariant(typeof Z == "function", "When clientOffset is provided, getSourceClientOffset must be a function.");
}
function verifyItemIsObject(Z) {
  invariant(isObject$1(Z), "Item must be an object.");
}
function getDraggableSource(Z, ee) {
  let ne = null;
  for (let ie = Z.length - 1; ie >= 0; ie--)
    if (ee.canDragSource(Z[ie])) {
      ne = Z[ie];
      break;
    }
  return ne;
}
function _defineProperty$4(Z, ee, ne) {
  return ee in Z ? Object.defineProperty(Z, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Z[ee] = ne, Z;
}
function _objectSpread$4(Z) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(oe) {
      return Object.getOwnPropertyDescriptor(ne, oe).enumerable;
    }))), ie.forEach(function(oe) {
      _defineProperty$4(Z, oe, ne[oe]);
    });
  }
  return Z;
}
function createDrop(Z) {
  return function(ne = {}) {
    const ie = Z.getMonitor(), oe = Z.getRegistry();
    verifyInvariants(ie), getDroppableTargets(ie).forEach((he, fe) => {
      const xe = determineDropResult(he, fe, oe, ie), Ae = {
        type: DROP,
        payload: {
          dropResult: _objectSpread$4({}, ne, xe)
        }
      };
      Z.dispatch(Ae);
    });
  };
}
function verifyInvariants(Z) {
  invariant(Z.isDragging(), "Cannot call drop while not dragging."), invariant(!Z.didDrop(), "Cannot call drop twice during one drag operation.");
}
function determineDropResult(Z, ee, ne, ie) {
  const oe = ne.getTarget(Z);
  let ce = oe ? oe.drop(ie, Z) : void 0;
  return verifyDropResultType(ce), typeof ce > "u" && (ce = ee === 0 ? {} : ie.getDropResult()), ce;
}
function verifyDropResultType(Z) {
  invariant(typeof Z > "u" || isObject$1(Z), "Drop result must either be an object or undefined.");
}
function getDroppableTargets(Z) {
  const ee = Z.getTargetIds().filter(Z.canDropOnTarget, Z);
  return ee.reverse(), ee;
}
function createEndDrag(Z) {
  return function() {
    const ne = Z.getMonitor(), ie = Z.getRegistry();
    verifyIsDragging(ne);
    const oe = ne.getSourceId();
    return oe != null && (ie.getSource(oe, !0).endDrag(ne, oe), ie.unpinSource()), {
      type: END_DRAG
    };
  };
}
function verifyIsDragging(Z) {
  invariant(Z.isDragging(), "Cannot call endDrag while not dragging.");
}
function matchesType(Z, ee) {
  return ee === null ? Z === null : Array.isArray(Z) ? Z.some(
    (ne) => ne === ee
  ) : Z === ee;
}
function createHover(Z) {
  return function(ne, { clientOffset: ie } = {}) {
    verifyTargetIdsIsArray(ne);
    const oe = ne.slice(0), ce = Z.getMonitor(), he = Z.getRegistry(), fe = ce.getItemType();
    return removeNonMatchingTargetIds(oe, he, fe), checkInvariants(oe, ce, he), hoverAllTargets(oe, ce, he), {
      type: HOVER,
      payload: {
        targetIds: oe,
        clientOffset: ie || null
      }
    };
  };
}
function verifyTargetIdsIsArray(Z) {
  invariant(Array.isArray(Z), "Expected targetIds to be an array.");
}
function checkInvariants(Z, ee, ne) {
  invariant(ee.isDragging(), "Cannot call hover while not dragging."), invariant(!ee.didDrop(), "Cannot call hover after drop.");
  for (let ie = 0; ie < Z.length; ie++) {
    const oe = Z[ie];
    invariant(Z.lastIndexOf(oe) === ie, "Expected targetIds to be unique in the passed array.");
    const ce = ne.getTarget(oe);
    invariant(ce, "Expected targetIds to be registered.");
  }
}
function removeNonMatchingTargetIds(Z, ee, ne) {
  for (let ie = Z.length - 1; ie >= 0; ie--) {
    const oe = Z[ie], ce = ee.getTargetType(oe);
    matchesType(ce, ne) || Z.splice(ie, 1);
  }
}
function hoverAllTargets(Z, ee, ne) {
  Z.forEach(function(ie) {
    ne.getTarget(ie).hover(ee, ie);
  });
}
function createPublishDragSource(Z) {
  return function() {
    if (Z.getMonitor().isDragging())
      return {
        type: PUBLISH_DRAG_SOURCE
      };
  };
}
function createDragDropActions(Z) {
  return {
    beginDrag: createBeginDrag(Z),
    publishDragSource: createPublishDragSource(Z),
    hover: createHover(Z),
    drop: createDrop(Z),
    endDrag: createEndDrag(Z)
  };
}
class DragDropManagerImpl {
  receiveBackend(ee) {
    this.backend = ee;
  }
  getMonitor() {
    return this.monitor;
  }
  getBackend() {
    return this.backend;
  }
  getRegistry() {
    return this.monitor.registry;
  }
  getActions() {
    const ee = this, { dispatch: ne } = this.store;
    function ie(ce) {
      return (...he) => {
        const fe = ce.apply(ee, he);
        typeof fe < "u" && ne(fe);
      };
    }
    const oe = createDragDropActions(this);
    return Object.keys(oe).reduce((ce, he) => {
      const fe = oe[he];
      return ce[he] = ie(fe), ce;
    }, {});
  }
  dispatch(ee) {
    this.store.dispatch(ee);
  }
  constructor(ee, ne) {
    this.isSetUp = !1, this.handleRefCountChange = () => {
      const ie = this.store.getState().refCount > 0;
      this.backend && (ie && !this.isSetUp ? (this.backend.setup(), this.isSetUp = !0) : !ie && this.isSetUp && (this.backend.teardown(), this.isSetUp = !1));
    }, this.store = ee, this.monitor = ne, ee.subscribe(this.handleRefCountChange);
  }
}
function add(Z, ee) {
  return {
    x: Z.x + ee.x,
    y: Z.y + ee.y
  };
}
function subtract(Z, ee) {
  return {
    x: Z.x - ee.x,
    y: Z.y - ee.y
  };
}
function getSourceClientOffset(Z) {
  const { clientOffset: ee, initialClientOffset: ne, initialSourceClientOffset: ie } = Z;
  return !ee || !ne || !ie ? null : subtract(add(ee, ie), ne);
}
function getDifferenceFromInitialOffset(Z) {
  const { clientOffset: ee, initialClientOffset: ne } = Z;
  return !ee || !ne ? null : subtract(ee, ne);
}
const NONE = [], ALL = [];
NONE.__IS_NONE__ = !0;
ALL.__IS_ALL__ = !0;
function areDirty(Z, ee) {
  return Z === NONE ? !1 : Z === ALL || typeof ee > "u" ? !0 : intersection(ee, Z).length > 0;
}
class DragDropMonitorImpl {
  subscribeToStateChange(ee, ne = {}) {
    const { handlerIds: ie } = ne;
    invariant(typeof ee == "function", "listener must be a function."), invariant(typeof ie > "u" || Array.isArray(ie), "handlerIds, when specified, must be an array of strings.");
    let oe = this.store.getState().stateId;
    const ce = () => {
      const he = this.store.getState(), fe = he.stateId;
      try {
        fe === oe || fe === oe + 1 && !areDirty(he.dirtyHandlerIds, ie) || ee();
      } finally {
        oe = fe;
      }
    };
    return this.store.subscribe(ce);
  }
  subscribeToOffsetChange(ee) {
    invariant(typeof ee == "function", "listener must be a function.");
    let ne = this.store.getState().dragOffset;
    const ie = () => {
      const oe = this.store.getState().dragOffset;
      oe !== ne && (ne = oe, ee());
    };
    return this.store.subscribe(ie);
  }
  canDragSource(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getSource(ee);
    return invariant(ne, `Expected to find a valid source. sourceId=${ee}`), this.isDragging() ? !1 : ne.canDrag(this, ee);
  }
  canDropOnTarget(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getTarget(ee);
    if (invariant(ne, `Expected to find a valid target. targetId=${ee}`), !this.isDragging() || this.didDrop())
      return !1;
    const ie = this.registry.getTargetType(ee), oe = this.getItemType();
    return matchesType(ie, oe) && ne.canDrop(this, ee);
  }
  isDragging() {
    return Boolean(this.getItemType());
  }
  isDraggingSource(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getSource(ee, !0);
    if (invariant(ne, `Expected to find a valid source. sourceId=${ee}`), !this.isDragging() || !this.isSourcePublic())
      return !1;
    const ie = this.registry.getSourceType(ee), oe = this.getItemType();
    return ie !== oe ? !1 : ne.isDragging(this, ee);
  }
  isOverTarget(ee, ne = {
    shallow: !1
  }) {
    if (!ee)
      return !1;
    const { shallow: ie } = ne;
    if (!this.isDragging())
      return !1;
    const oe = this.registry.getTargetType(ee), ce = this.getItemType();
    if (ce && !matchesType(oe, ce))
      return !1;
    const he = this.getTargetIds();
    if (!he.length)
      return !1;
    const fe = he.indexOf(ee);
    return ie ? fe === he.length - 1 : fe > -1;
  }
  getItemType() {
    return this.store.getState().dragOperation.itemType;
  }
  getItem() {
    return this.store.getState().dragOperation.item;
  }
  getSourceId() {
    return this.store.getState().dragOperation.sourceId;
  }
  getTargetIds() {
    return this.store.getState().dragOperation.targetIds;
  }
  getDropResult() {
    return this.store.getState().dragOperation.dropResult;
  }
  didDrop() {
    return this.store.getState().dragOperation.didDrop;
  }
  isSourcePublic() {
    return Boolean(this.store.getState().dragOperation.isSourcePublic);
  }
  getInitialClientOffset() {
    return this.store.getState().dragOffset.initialClientOffset;
  }
  getInitialSourceClientOffset() {
    return this.store.getState().dragOffset.initialSourceClientOffset;
  }
  getClientOffset() {
    return this.store.getState().dragOffset.clientOffset;
  }
  getSourceClientOffset() {
    return getSourceClientOffset(this.store.getState().dragOffset);
  }
  getDifferenceFromInitialOffset() {
    return getDifferenceFromInitialOffset(this.store.getState().dragOffset);
  }
  constructor(ee, ne) {
    this.store = ee, this.registry = ne;
  }
}
const scope = typeof global < "u" ? global : self, BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;
function makeRequestCallFromTimer(Z) {
  return function() {
    const ne = setTimeout(oe, 0), ie = setInterval(oe, 50);
    function oe() {
      clearTimeout(ne), clearInterval(ie), Z();
    }
  };
}
function makeRequestCallFromMutationObserver(Z) {
  let ee = 1;
  const ne = new BrowserMutationObserver(Z), ie = document.createTextNode("");
  return ne.observe(ie, {
    characterData: !0
  }), function() {
    ee = -ee, ie.data = ee;
  };
}
const makeRequestCall = typeof BrowserMutationObserver == "function" ? makeRequestCallFromMutationObserver : makeRequestCallFromTimer;
class AsapQueue {
  enqueueTask(ee) {
    const { queue: ne, requestFlush: ie } = this;
    ne.length || (ie(), this.flushing = !0), ne[ne.length] = ee;
  }
  constructor() {
    this.queue = [], this.pendingErrors = [], this.flushing = !1, this.index = 0, this.capacity = 1024, this.flush = () => {
      const { queue: ee } = this;
      for (; this.index < ee.length; ) {
        const ne = this.index;
        if (this.index++, ee[ne].call(), this.index > this.capacity) {
          for (let ie = 0, oe = ee.length - this.index; ie < oe; ie++)
            ee[ie] = ee[ie + this.index];
          ee.length -= this.index, this.index = 0;
        }
      }
      ee.length = 0, this.index = 0, this.flushing = !1;
    }, this.registerPendingError = (ee) => {
      this.pendingErrors.push(ee), this.requestErrorThrow();
    }, this.requestFlush = makeRequestCall(this.flush), this.requestErrorThrow = makeRequestCallFromTimer(() => {
      if (this.pendingErrors.length)
        throw this.pendingErrors.shift();
    });
  }
}
class RawTask {
  call() {
    try {
      this.task && this.task();
    } catch (ee) {
      this.onError(ee);
    } finally {
      this.task = null, this.release(this);
    }
  }
  constructor(ee, ne) {
    this.onError = ee, this.release = ne, this.task = null;
  }
}
class TaskFactory {
  create(ee) {
    const ne = this.freeTasks, ie = ne.length ? ne.pop() : new RawTask(
      this.onError,
      (oe) => ne[ne.length] = oe
    );
    return ie.task = ee, ie;
  }
  constructor(ee) {
    this.onError = ee, this.freeTasks = [];
  }
}
const asapQueue = new AsapQueue(), taskFactory = new TaskFactory(asapQueue.registerPendingError);
function asap(Z) {
  asapQueue.enqueueTask(taskFactory.create(Z));
}
const ADD_SOURCE = "dnd-core/ADD_SOURCE", ADD_TARGET = "dnd-core/ADD_TARGET", REMOVE_SOURCE = "dnd-core/REMOVE_SOURCE", REMOVE_TARGET = "dnd-core/REMOVE_TARGET";
function addSource(Z) {
  return {
    type: ADD_SOURCE,
    payload: {
      sourceId: Z
    }
  };
}
function addTarget(Z) {
  return {
    type: ADD_TARGET,
    payload: {
      targetId: Z
    }
  };
}
function removeSource(Z) {
  return {
    type: REMOVE_SOURCE,
    payload: {
      sourceId: Z
    }
  };
}
function removeTarget(Z) {
  return {
    type: REMOVE_TARGET,
    payload: {
      targetId: Z
    }
  };
}
function validateSourceContract(Z) {
  invariant(typeof Z.canDrag == "function", "Expected canDrag to be a function."), invariant(typeof Z.beginDrag == "function", "Expected beginDrag to be a function."), invariant(typeof Z.endDrag == "function", "Expected endDrag to be a function.");
}
function validateTargetContract(Z) {
  invariant(typeof Z.canDrop == "function", "Expected canDrop to be a function."), invariant(typeof Z.hover == "function", "Expected hover to be a function."), invariant(typeof Z.drop == "function", "Expected beginDrag to be a function.");
}
function validateType(Z, ee) {
  if (ee && Array.isArray(Z)) {
    Z.forEach(
      (ne) => validateType(ne, !1)
    );
    return;
  }
  invariant(typeof Z == "string" || typeof Z == "symbol", ee ? "Type can only be a string, a symbol, or an array of either." : "Type can only be a string or a symbol.");
}
var HandlerRole;
(function(Z) {
  Z.SOURCE = "SOURCE", Z.TARGET = "TARGET";
})(HandlerRole || (HandlerRole = {}));
let nextUniqueId = 0;
function getNextUniqueId() {
  return nextUniqueId++;
}
function getNextHandlerId(Z) {
  const ee = getNextUniqueId().toString();
  switch (Z) {
    case HandlerRole.SOURCE:
      return `S${ee}`;
    case HandlerRole.TARGET:
      return `T${ee}`;
    default:
      throw new Error(`Unknown Handler Role: ${Z}`);
  }
}
function parseRoleFromHandlerId(Z) {
  switch (Z[0]) {
    case "S":
      return HandlerRole.SOURCE;
    case "T":
      return HandlerRole.TARGET;
    default:
      throw new Error(`Cannot parse handler ID: ${Z}`);
  }
}
function mapContainsValue(Z, ee) {
  const ne = Z.entries();
  let ie = !1;
  do {
    const { done: oe, value: [, ce] } = ne.next();
    if (ce === ee)
      return !0;
    ie = !!oe;
  } while (!ie);
  return !1;
}
class HandlerRegistryImpl {
  addSource(ee, ne) {
    validateType(ee), validateSourceContract(ne);
    const ie = this.addHandler(HandlerRole.SOURCE, ee, ne);
    return this.store.dispatch(addSource(ie)), ie;
  }
  addTarget(ee, ne) {
    validateType(ee, !0), validateTargetContract(ne);
    const ie = this.addHandler(HandlerRole.TARGET, ee, ne);
    return this.store.dispatch(addTarget(ie)), ie;
  }
  containsHandler(ee) {
    return mapContainsValue(this.dragSources, ee) || mapContainsValue(this.dropTargets, ee);
  }
  getSource(ee, ne = !1) {
    return invariant(this.isSourceId(ee), "Expected a valid source ID."), ne && ee === this.pinnedSourceId ? this.pinnedSource : this.dragSources.get(ee);
  }
  getTarget(ee) {
    return invariant(this.isTargetId(ee), "Expected a valid target ID."), this.dropTargets.get(ee);
  }
  getSourceType(ee) {
    return invariant(this.isSourceId(ee), "Expected a valid source ID."), this.types.get(ee);
  }
  getTargetType(ee) {
    return invariant(this.isTargetId(ee), "Expected a valid target ID."), this.types.get(ee);
  }
  isSourceId(ee) {
    return parseRoleFromHandlerId(ee) === HandlerRole.SOURCE;
  }
  isTargetId(ee) {
    return parseRoleFromHandlerId(ee) === HandlerRole.TARGET;
  }
  removeSource(ee) {
    invariant(this.getSource(ee), "Expected an existing source."), this.store.dispatch(removeSource(ee)), asap(() => {
      this.dragSources.delete(ee), this.types.delete(ee);
    });
  }
  removeTarget(ee) {
    invariant(this.getTarget(ee), "Expected an existing target."), this.store.dispatch(removeTarget(ee)), this.dropTargets.delete(ee), this.types.delete(ee);
  }
  pinSource(ee) {
    const ne = this.getSource(ee);
    invariant(ne, "Expected an existing source."), this.pinnedSourceId = ee, this.pinnedSource = ne;
  }
  unpinSource() {
    invariant(this.pinnedSource, "No source is pinned at the time."), this.pinnedSourceId = null, this.pinnedSource = null;
  }
  addHandler(ee, ne, ie) {
    const oe = getNextHandlerId(ee);
    return this.types.set(oe, ne), ee === HandlerRole.SOURCE ? this.dragSources.set(oe, ie) : ee === HandlerRole.TARGET && this.dropTargets.set(oe, ie), oe;
  }
  constructor(ee) {
    this.types = /* @__PURE__ */ new Map(), this.dragSources = /* @__PURE__ */ new Map(), this.dropTargets = /* @__PURE__ */ new Map(), this.pinnedSourceId = null, this.pinnedSource = null, this.store = ee;
  }
}
const strictEquality = (Z, ee) => Z === ee;
function areCoordsEqual(Z, ee) {
  return !Z && !ee ? !0 : !Z || !ee ? !1 : Z.x === ee.x && Z.y === ee.y;
}
function areArraysEqual(Z, ee, ne = strictEquality) {
  if (Z.length !== ee.length)
    return !1;
  for (let ie = 0; ie < Z.length; ++ie)
    if (!ne(Z[ie], ee[ie]))
      return !1;
  return !0;
}
function reduce$5(Z = NONE, ee) {
  switch (ee.type) {
    case HOVER:
      break;
    case ADD_SOURCE:
    case ADD_TARGET:
    case REMOVE_TARGET:
    case REMOVE_SOURCE:
      return NONE;
    case BEGIN_DRAG:
    case PUBLISH_DRAG_SOURCE:
    case END_DRAG:
    case DROP:
    default:
      return ALL;
  }
  const { targetIds: ne = [], prevTargetIds: ie = [] } = ee.payload, oe = xor(ne, ie);
  if (!(oe.length > 0 || !areArraysEqual(ne, ie)))
    return NONE;
  const he = ie[ie.length - 1], fe = ne[ne.length - 1];
  return he !== fe && (he && oe.push(he), fe && oe.push(fe)), oe;
}
function _defineProperty$3(Z, ee, ne) {
  return ee in Z ? Object.defineProperty(Z, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Z[ee] = ne, Z;
}
function _objectSpread$3(Z) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(oe) {
      return Object.getOwnPropertyDescriptor(ne, oe).enumerable;
    }))), ie.forEach(function(oe) {
      _defineProperty$3(Z, oe, ne[oe]);
    });
  }
  return Z;
}
const initialState$1 = {
  initialSourceClientOffset: null,
  initialClientOffset: null,
  clientOffset: null
};
function reduce$4(Z = initialState$1, ee) {
  const { payload: ne } = ee;
  switch (ee.type) {
    case INIT_COORDS:
    case BEGIN_DRAG:
      return {
        initialSourceClientOffset: ne.sourceClientOffset,
        initialClientOffset: ne.clientOffset,
        clientOffset: ne.clientOffset
      };
    case HOVER:
      return areCoordsEqual(Z.clientOffset, ne.clientOffset) ? Z : _objectSpread$3({}, Z, {
        clientOffset: ne.clientOffset
      });
    case END_DRAG:
    case DROP:
      return initialState$1;
    default:
      return Z;
  }
}
function _defineProperty$2(Z, ee, ne) {
  return ee in Z ? Object.defineProperty(Z, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Z[ee] = ne, Z;
}
function _objectSpread$2(Z) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(oe) {
      return Object.getOwnPropertyDescriptor(ne, oe).enumerable;
    }))), ie.forEach(function(oe) {
      _defineProperty$2(Z, oe, ne[oe]);
    });
  }
  return Z;
}
const initialState = {
  itemType: null,
  item: null,
  sourceId: null,
  targetIds: [],
  dropResult: null,
  didDrop: !1,
  isSourcePublic: null
};
function reduce$3(Z = initialState, ee) {
  const { payload: ne } = ee;
  switch (ee.type) {
    case BEGIN_DRAG:
      return _objectSpread$2({}, Z, {
        itemType: ne.itemType,
        item: ne.item,
        sourceId: ne.sourceId,
        isSourcePublic: ne.isSourcePublic,
        dropResult: null,
        didDrop: !1
      });
    case PUBLISH_DRAG_SOURCE:
      return _objectSpread$2({}, Z, {
        isSourcePublic: !0
      });
    case HOVER:
      return _objectSpread$2({}, Z, {
        targetIds: ne.targetIds
      });
    case REMOVE_TARGET:
      return Z.targetIds.indexOf(ne.targetId) === -1 ? Z : _objectSpread$2({}, Z, {
        targetIds: without$1(Z.targetIds, ne.targetId)
      });
    case DROP:
      return _objectSpread$2({}, Z, {
        dropResult: ne.dropResult,
        didDrop: !0,
        targetIds: []
      });
    case END_DRAG:
      return _objectSpread$2({}, Z, {
        itemType: null,
        item: null,
        sourceId: null,
        dropResult: null,
        didDrop: !1,
        isSourcePublic: null,
        targetIds: []
      });
    default:
      return Z;
  }
}
function reduce$2(Z = 0, ee) {
  switch (ee.type) {
    case ADD_SOURCE:
    case ADD_TARGET:
      return Z + 1;
    case REMOVE_SOURCE:
    case REMOVE_TARGET:
      return Z - 1;
    default:
      return Z;
  }
}
function reduce$1(Z = 0) {
  return Z + 1;
}
function _defineProperty$1(Z, ee, ne) {
  return ee in Z ? Object.defineProperty(Z, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Z[ee] = ne, Z;
}
function _objectSpread$1(Z) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(oe) {
      return Object.getOwnPropertyDescriptor(ne, oe).enumerable;
    }))), ie.forEach(function(oe) {
      _defineProperty$1(Z, oe, ne[oe]);
    });
  }
  return Z;
}
function reduce(Z = {}, ee) {
  return {
    dirtyHandlerIds: reduce$5(Z.dirtyHandlerIds, {
      type: ee.type,
      payload: _objectSpread$1({}, ee.payload, {
        prevTargetIds: get(Z, "dragOperation.targetIds", [])
      })
    }),
    dragOffset: reduce$4(Z.dragOffset, ee),
    refCount: reduce$2(Z.refCount, ee),
    dragOperation: reduce$3(Z.dragOperation, ee),
    stateId: reduce$1(Z.stateId)
  };
}
function createDragDropManager(Z, ee = void 0, ne = {}, ie = !1) {
  const oe = makeStoreInstance(ie), ce = new DragDropMonitorImpl(oe, new HandlerRegistryImpl(oe)), he = new DragDropManagerImpl(oe, ce), fe = Z(he, ee, ne);
  return he.receiveBackend(fe), he;
}
function makeStoreInstance(Z) {
  const ee = typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION__;
  return createStore$1(reduce, Z && ee && ee({
    name: "dnd-core",
    instanceId: "dnd-core"
  }));
}
function _objectWithoutProperties(Z, ee) {
  if (Z == null)
    return {};
  var ne = _objectWithoutPropertiesLoose(Z, ee), ie, oe;
  if (Object.getOwnPropertySymbols) {
    var ce = Object.getOwnPropertySymbols(Z);
    for (oe = 0; oe < ce.length; oe++)
      ie = ce[oe], !(ee.indexOf(ie) >= 0) && (!Object.prototype.propertyIsEnumerable.call(Z, ie) || (ne[ie] = Z[ie]));
  }
  return ne;
}
function _objectWithoutPropertiesLoose(Z, ee) {
  if (Z == null)
    return {};
  var ne = {}, ie = Object.keys(Z), oe, ce;
  for (ce = 0; ce < ie.length; ce++)
    oe = ie[ce], !(ee.indexOf(oe) >= 0) && (ne[oe] = Z[oe]);
  return ne;
}
let refCount = 0;
const INSTANCE_SYM = Symbol.for("__REACT_DND_CONTEXT_INSTANCE__");
var DndProvider = /* @__PURE__ */ memo(function(ee) {
  var { children: ne } = ee, ie = _objectWithoutProperties(ee, [
    "children"
  ]);
  const [oe, ce] = getDndContextValue(ie);
  return useEffect(() => {
    if (ce) {
      const he = getGlobalContext();
      return ++refCount, () => {
        --refCount === 0 && (he[INSTANCE_SYM] = null);
      };
    }
  }, []), /* @__PURE__ */ jsx(DndContext.Provider, {
    value: oe,
    children: ne
  });
});
function getDndContextValue(Z) {
  if ("manager" in Z)
    return [
      {
        dragDropManager: Z.manager
      },
      !1
    ];
  const ee = createSingletonDndContext(Z.backend, Z.context, Z.options, Z.debugMode), ne = !Z.context;
  return [
    ee,
    ne
  ];
}
function createSingletonDndContext(Z, ee = getGlobalContext(), ne, ie) {
  const oe = ee;
  return oe[INSTANCE_SYM] || (oe[INSTANCE_SYM] = {
    dragDropManager: createDragDropManager(Z, ee, ne, ie)
  }), oe[INSTANCE_SYM];
}
function getGlobalContext() {
  return typeof global < "u" ? global : window;
}
var fastDeepEqual = function Z(ee, ne) {
  if (ee === ne)
    return !0;
  if (ee && ne && typeof ee == "object" && typeof ne == "object") {
    if (ee.constructor !== ne.constructor)
      return !1;
    var ie, oe, ce;
    if (Array.isArray(ee)) {
      if (ie = ee.length, ie != ne.length)
        return !1;
      for (oe = ie; oe-- !== 0; )
        if (!Z(ee[oe], ne[oe]))
          return !1;
      return !0;
    }
    if (ee.constructor === RegExp)
      return ee.source === ne.source && ee.flags === ne.flags;
    if (ee.valueOf !== Object.prototype.valueOf)
      return ee.valueOf() === ne.valueOf();
    if (ee.toString !== Object.prototype.toString)
      return ee.toString() === ne.toString();
    if (ce = Object.keys(ee), ie = ce.length, ie !== Object.keys(ne).length)
      return !1;
    for (oe = ie; oe-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(ne, ce[oe]))
        return !1;
    for (oe = ie; oe-- !== 0; ) {
      var he = ce[oe];
      if (!Z(ee[he], ne[he]))
        return !1;
    }
    return !0;
  }
  return ee !== ee && ne !== ne;
};
const useIsomorphicLayoutEffect = typeof window < "u" ? useLayoutEffect : useEffect;
function useCollector(Z, ee, ne) {
  const [ie, oe] = useState(
    () => ee(Z)
  ), ce = useCallback(() => {
    const he = ee(Z);
    fastDeepEqual(ie, he) || (oe(he), ne && ne());
  }, [
    ie,
    Z,
    ne
  ]);
  return useIsomorphicLayoutEffect(ce), [
    ie,
    ce
  ];
}
function useMonitorOutput(Z, ee, ne) {
  const [ie, oe] = useCollector(Z, ee, ne);
  return useIsomorphicLayoutEffect(function() {
    const he = Z.getHandlerId();
    if (he != null)
      return Z.subscribeToStateChange(oe, {
        handlerIds: [
          he
        ]
      });
  }, [
    Z,
    oe
  ]), ie;
}
function useCollectedProps(Z, ee, ne) {
  return useMonitorOutput(
    ee,
    Z || (() => ({})),
    () => ne.reconnect()
  );
}
function useOptionalFactory(Z, ee) {
  const ne = [
    ...ee || []
  ];
  return ee == null && typeof Z != "function" && ne.push(Z), useMemo(() => typeof Z == "function" ? Z() : Z, ne);
}
function useConnectDragSource(Z) {
  return useMemo(
    () => Z.hooks.dragSource(),
    [
      Z
    ]
  );
}
function useConnectDragPreview(Z) {
  return useMemo(
    () => Z.hooks.dragPreview(),
    [
      Z
    ]
  );
}
let isCallingCanDrag = !1, isCallingIsDragging = !1;
class DragSourceMonitorImpl {
  receiveHandlerId(ee) {
    this.sourceId = ee;
  }
  getHandlerId() {
    return this.sourceId;
  }
  canDrag() {
    invariant(!isCallingCanDrag, "You may not call monitor.canDrag() inside your canDrag() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");
    try {
      return isCallingCanDrag = !0, this.internalMonitor.canDragSource(this.sourceId);
    } finally {
      isCallingCanDrag = !1;
    }
  }
  isDragging() {
    if (!this.sourceId)
      return !1;
    invariant(!isCallingIsDragging, "You may not call monitor.isDragging() inside your isDragging() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");
    try {
      return isCallingIsDragging = !0, this.internalMonitor.isDraggingSource(this.sourceId);
    } finally {
      isCallingIsDragging = !1;
    }
  }
  subscribeToStateChange(ee, ne) {
    return this.internalMonitor.subscribeToStateChange(ee, ne);
  }
  isDraggingSource(ee) {
    return this.internalMonitor.isDraggingSource(ee);
  }
  isOverTarget(ee, ne) {
    return this.internalMonitor.isOverTarget(ee, ne);
  }
  getTargetIds() {
    return this.internalMonitor.getTargetIds();
  }
  isSourcePublic() {
    return this.internalMonitor.isSourcePublic();
  }
  getSourceId() {
    return this.internalMonitor.getSourceId();
  }
  subscribeToOffsetChange(ee) {
    return this.internalMonitor.subscribeToOffsetChange(ee);
  }
  canDragSource(ee) {
    return this.internalMonitor.canDragSource(ee);
  }
  canDropOnTarget(ee) {
    return this.internalMonitor.canDropOnTarget(ee);
  }
  getItemType() {
    return this.internalMonitor.getItemType();
  }
  getItem() {
    return this.internalMonitor.getItem();
  }
  getDropResult() {
    return this.internalMonitor.getDropResult();
  }
  didDrop() {
    return this.internalMonitor.didDrop();
  }
  getInitialClientOffset() {
    return this.internalMonitor.getInitialClientOffset();
  }
  getInitialSourceClientOffset() {
    return this.internalMonitor.getInitialSourceClientOffset();
  }
  getSourceClientOffset() {
    return this.internalMonitor.getSourceClientOffset();
  }
  getClientOffset() {
    return this.internalMonitor.getClientOffset();
  }
  getDifferenceFromInitialOffset() {
    return this.internalMonitor.getDifferenceFromInitialOffset();
  }
  constructor(ee) {
    this.sourceId = null, this.internalMonitor = ee.getMonitor();
  }
}
let isCallingCanDrop = !1;
class DropTargetMonitorImpl {
  receiveHandlerId(ee) {
    this.targetId = ee;
  }
  getHandlerId() {
    return this.targetId;
  }
  subscribeToStateChange(ee, ne) {
    return this.internalMonitor.subscribeToStateChange(ee, ne);
  }
  canDrop() {
    if (!this.targetId)
      return !1;
    invariant(!isCallingCanDrop, "You may not call monitor.canDrop() inside your canDrop() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor");
    try {
      return isCallingCanDrop = !0, this.internalMonitor.canDropOnTarget(this.targetId);
    } finally {
      isCallingCanDrop = !1;
    }
  }
  isOver(ee) {
    return this.targetId ? this.internalMonitor.isOverTarget(this.targetId, ee) : !1;
  }
  getItemType() {
    return this.internalMonitor.getItemType();
  }
  getItem() {
    return this.internalMonitor.getItem();
  }
  getDropResult() {
    return this.internalMonitor.getDropResult();
  }
  didDrop() {
    return this.internalMonitor.didDrop();
  }
  getInitialClientOffset() {
    return this.internalMonitor.getInitialClientOffset();
  }
  getInitialSourceClientOffset() {
    return this.internalMonitor.getInitialSourceClientOffset();
  }
  getSourceClientOffset() {
    return this.internalMonitor.getSourceClientOffset();
  }
  getClientOffset() {
    return this.internalMonitor.getClientOffset();
  }
  getDifferenceFromInitialOffset() {
    return this.internalMonitor.getDifferenceFromInitialOffset();
  }
  constructor(ee) {
    this.targetId = null, this.internalMonitor = ee.getMonitor();
  }
}
function registerTarget(Z, ee, ne) {
  const ie = ne.getRegistry(), oe = ie.addTarget(Z, ee);
  return [
    oe,
    () => ie.removeTarget(oe)
  ];
}
function registerSource(Z, ee, ne) {
  const ie = ne.getRegistry(), oe = ie.addSource(Z, ee);
  return [
    oe,
    () => ie.removeSource(oe)
  ];
}
function shallowEqual(Z, ee, ne, ie) {
  let oe = ne ? ne.call(ie, Z, ee) : void 0;
  if (oe !== void 0)
    return !!oe;
  if (Z === ee)
    return !0;
  if (typeof Z != "object" || !Z || typeof ee != "object" || !ee)
    return !1;
  const ce = Object.keys(Z), he = Object.keys(ee);
  if (ce.length !== he.length)
    return !1;
  const fe = Object.prototype.hasOwnProperty.bind(ee);
  for (let xe = 0; xe < ce.length; xe++) {
    const Ae = ce[xe];
    if (!fe(Ae))
      return !1;
    const Ee = Z[Ae], ye = ee[Ae];
    if (oe = ne ? ne.call(ie, Ee, ye, Ae) : void 0, oe === !1 || oe === void 0 && Ee !== ye)
      return !1;
  }
  return !0;
}
function isRef(Z) {
  return Z !== null && typeof Z == "object" && Object.prototype.hasOwnProperty.call(Z, "current");
}
function throwIfCompositeComponentElement(Z) {
  if (typeof Z.type == "string")
    return;
  const ee = Z.type.displayName || Z.type.name || "the component";
  throw new Error(`Only native element nodes can now be passed to React DnD connectors.You can either wrap ${ee} into a <div>, or turn it into a drag source or a drop target itself.`);
}
function wrapHookToRecognizeElement(Z) {
  return (ee = null, ne = null) => {
    if (!isValidElement(ee)) {
      const ce = ee;
      return Z(ce, ne), ce;
    }
    const ie = ee;
    return throwIfCompositeComponentElement(ie), cloneWithRef(ie, ne ? (ce) => Z(ce, ne) : Z);
  };
}
function wrapConnectorHooks(Z) {
  const ee = {};
  return Object.keys(Z).forEach((ne) => {
    const ie = Z[ne];
    if (ne.endsWith("Ref"))
      ee[ne] = Z[ne];
    else {
      const oe = wrapHookToRecognizeElement(ie);
      ee[ne] = () => oe;
    }
  }), ee;
}
function setRef(Z, ee) {
  typeof Z == "function" ? Z(ee) : Z.current = ee;
}
function cloneWithRef(Z, ee) {
  const ne = Z.ref;
  return invariant(typeof ne != "string", "Cannot connect React DnD to an element with an existing string ref. Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs"), ne ? cloneElement(Z, {
    ref: (ie) => {
      setRef(ne, ie), setRef(ee, ie);
    }
  }) : cloneElement(Z, {
    ref: ee
  });
}
class SourceConnector {
  receiveHandlerId(ee) {
    this.handlerId !== ee && (this.handlerId = ee, this.reconnect());
  }
  get connectTarget() {
    return this.dragSource;
  }
  get dragSourceOptions() {
    return this.dragSourceOptionsInternal;
  }
  set dragSourceOptions(ee) {
    this.dragSourceOptionsInternal = ee;
  }
  get dragPreviewOptions() {
    return this.dragPreviewOptionsInternal;
  }
  set dragPreviewOptions(ee) {
    this.dragPreviewOptionsInternal = ee;
  }
  reconnect() {
    const ee = this.reconnectDragSource();
    this.reconnectDragPreview(ee);
  }
  reconnectDragSource() {
    const ee = this.dragSource, ne = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();
    return ne && this.disconnectDragSource(), this.handlerId ? ee ? (ne && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDragSource = ee, this.lastConnectedDragSourceOptions = this.dragSourceOptions, this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, ee, this.dragSourceOptions)), ne) : (this.lastConnectedDragSource = ee, ne) : ne;
  }
  reconnectDragPreview(ee = !1) {
    const ne = this.dragPreview, ie = ee || this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();
    if (ie && this.disconnectDragPreview(), !!this.handlerId) {
      if (!ne) {
        this.lastConnectedDragPreview = ne;
        return;
      }
      ie && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDragPreview = ne, this.lastConnectedDragPreviewOptions = this.dragPreviewOptions, this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, ne, this.dragPreviewOptions));
    }
  }
  didHandlerIdChange() {
    return this.lastConnectedHandlerId !== this.handlerId;
  }
  didConnectedDragSourceChange() {
    return this.lastConnectedDragSource !== this.dragSource;
  }
  didConnectedDragPreviewChange() {
    return this.lastConnectedDragPreview !== this.dragPreview;
  }
  didDragSourceOptionsChange() {
    return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);
  }
  didDragPreviewOptionsChange() {
    return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);
  }
  disconnectDragSource() {
    this.dragSourceUnsubscribe && (this.dragSourceUnsubscribe(), this.dragSourceUnsubscribe = void 0);
  }
  disconnectDragPreview() {
    this.dragPreviewUnsubscribe && (this.dragPreviewUnsubscribe(), this.dragPreviewUnsubscribe = void 0, this.dragPreviewNode = null, this.dragPreviewRef = null);
  }
  get dragSource() {
    return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;
  }
  get dragPreview() {
    return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;
  }
  clearDragSource() {
    this.dragSourceNode = null, this.dragSourceRef = null;
  }
  clearDragPreview() {
    this.dragPreviewNode = null, this.dragPreviewRef = null;
  }
  constructor(ee) {
    this.hooks = wrapConnectorHooks({
      dragSource: (ne, ie) => {
        this.clearDragSource(), this.dragSourceOptions = ie || null, isRef(ne) ? this.dragSourceRef = ne : this.dragSourceNode = ne, this.reconnectDragSource();
      },
      dragPreview: (ne, ie) => {
        this.clearDragPreview(), this.dragPreviewOptions = ie || null, isRef(ne) ? this.dragPreviewRef = ne : this.dragPreviewNode = ne, this.reconnectDragPreview();
      }
    }), this.handlerId = null, this.dragSourceRef = null, this.dragSourceOptionsInternal = null, this.dragPreviewRef = null, this.dragPreviewOptionsInternal = null, this.lastConnectedHandlerId = null, this.lastConnectedDragSource = null, this.lastConnectedDragSourceOptions = null, this.lastConnectedDragPreview = null, this.lastConnectedDragPreviewOptions = null, this.backend = ee;
  }
}
class TargetConnector {
  get connectTarget() {
    return this.dropTarget;
  }
  reconnect() {
    const ee = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();
    ee && this.disconnectDropTarget();
    const ne = this.dropTarget;
    if (!!this.handlerId) {
      if (!ne) {
        this.lastConnectedDropTarget = ne;
        return;
      }
      ee && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDropTarget = ne, this.lastConnectedDropTargetOptions = this.dropTargetOptions, this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, ne, this.dropTargetOptions));
    }
  }
  receiveHandlerId(ee) {
    ee !== this.handlerId && (this.handlerId = ee, this.reconnect());
  }
  get dropTargetOptions() {
    return this.dropTargetOptionsInternal;
  }
  set dropTargetOptions(ee) {
    this.dropTargetOptionsInternal = ee;
  }
  didHandlerIdChange() {
    return this.lastConnectedHandlerId !== this.handlerId;
  }
  didDropTargetChange() {
    return this.lastConnectedDropTarget !== this.dropTarget;
  }
  didOptionsChange() {
    return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);
  }
  disconnectDropTarget() {
    this.unsubscribeDropTarget && (this.unsubscribeDropTarget(), this.unsubscribeDropTarget = void 0);
  }
  get dropTarget() {
    return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;
  }
  clearDropTarget() {
    this.dropTargetRef = null, this.dropTargetNode = null;
  }
  constructor(ee) {
    this.hooks = wrapConnectorHooks({
      dropTarget: (ne, ie) => {
        this.clearDropTarget(), this.dropTargetOptions = ie, isRef(ne) ? this.dropTargetRef = ne : this.dropTargetNode = ne, this.reconnect();
      }
    }), this.handlerId = null, this.dropTargetRef = null, this.dropTargetOptionsInternal = null, this.lastConnectedHandlerId = null, this.lastConnectedDropTarget = null, this.lastConnectedDropTargetOptions = null, this.backend = ee;
  }
}
function useDragDropManager() {
  const { dragDropManager: Z } = useContext(DndContext);
  return invariant(Z != null, "Expected drag drop context"), Z;
}
function useDragSourceConnector(Z, ee) {
  const ne = useDragDropManager(), ie = useMemo(
    () => new SourceConnector(ne.getBackend()),
    [
      ne
    ]
  );
  return useIsomorphicLayoutEffect(() => (ie.dragSourceOptions = Z || null, ie.reconnect(), () => ie.disconnectDragSource()), [
    ie,
    Z
  ]), useIsomorphicLayoutEffect(() => (ie.dragPreviewOptions = ee || null, ie.reconnect(), () => ie.disconnectDragPreview()), [
    ie,
    ee
  ]), ie;
}
function useDragSourceMonitor() {
  const Z = useDragDropManager();
  return useMemo(
    () => new DragSourceMonitorImpl(Z),
    [
      Z
    ]
  );
}
class DragSourceImpl {
  beginDrag() {
    const ee = this.spec, ne = this.monitor;
    let ie = null;
    return typeof ee.item == "object" ? ie = ee.item : typeof ee.item == "function" ? ie = ee.item(ne) : ie = {}, ie != null ? ie : null;
  }
  canDrag() {
    const ee = this.spec, ne = this.monitor;
    return typeof ee.canDrag == "boolean" ? ee.canDrag : typeof ee.canDrag == "function" ? ee.canDrag(ne) : !0;
  }
  isDragging(ee, ne) {
    const ie = this.spec, oe = this.monitor, { isDragging: ce } = ie;
    return ce ? ce(oe) : ne === ee.getSourceId();
  }
  endDrag() {
    const ee = this.spec, ne = this.monitor, ie = this.connector, { end: oe } = ee;
    oe && oe(ne.getItem(), ne), ie.reconnect();
  }
  constructor(ee, ne, ie) {
    this.spec = ee, this.monitor = ne, this.connector = ie;
  }
}
function useDragSource(Z, ee, ne) {
  const ie = useMemo(
    () => new DragSourceImpl(Z, ee, ne),
    [
      ee,
      ne
    ]
  );
  return useEffect(() => {
    ie.spec = Z;
  }, [
    Z
  ]), ie;
}
function useDragType(Z) {
  return useMemo(() => {
    const ee = Z.type;
    return invariant(ee != null, "spec.type must be defined"), ee;
  }, [
    Z
  ]);
}
function useRegisteredDragSource(Z, ee, ne) {
  const ie = useDragDropManager(), oe = useDragSource(Z, ee, ne), ce = useDragType(Z);
  useIsomorphicLayoutEffect(function() {
    if (ce != null) {
      const [fe, xe] = registerSource(ce, oe, ie);
      return ee.receiveHandlerId(fe), ne.receiveHandlerId(fe), xe;
    }
  }, [
    ie,
    ee,
    ne,
    oe,
    ce
  ]);
}
function useDrag(Z, ee) {
  const ne = useOptionalFactory(Z, ee);
  invariant(!ne.begin, "useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)");
  const ie = useDragSourceMonitor(), oe = useDragSourceConnector(ne.options, ne.previewOptions);
  return useRegisteredDragSource(ne, ie, oe), [
    useCollectedProps(ne.collect, ie, oe),
    useConnectDragSource(oe),
    useConnectDragPreview(oe)
  ];
}
function useConnectDropTarget(Z) {
  return useMemo(
    () => Z.hooks.dropTarget(),
    [
      Z
    ]
  );
}
function useDropTargetConnector(Z) {
  const ee = useDragDropManager(), ne = useMemo(
    () => new TargetConnector(ee.getBackend()),
    [
      ee
    ]
  );
  return useIsomorphicLayoutEffect(() => (ne.dropTargetOptions = Z || null, ne.reconnect(), () => ne.disconnectDropTarget()), [
    Z
  ]), ne;
}
function useDropTargetMonitor() {
  const Z = useDragDropManager();
  return useMemo(
    () => new DropTargetMonitorImpl(Z),
    [
      Z
    ]
  );
}
function useAccept(Z) {
  const { accept: ee } = Z;
  return useMemo(() => (invariant(Z.accept != null, "accept must be defined"), Array.isArray(ee) ? ee : [
    ee
  ]), [
    ee
  ]);
}
class DropTargetImpl {
  canDrop() {
    const ee = this.spec, ne = this.monitor;
    return ee.canDrop ? ee.canDrop(ne.getItem(), ne) : !0;
  }
  hover() {
    const ee = this.spec, ne = this.monitor;
    ee.hover && ee.hover(ne.getItem(), ne);
  }
  drop() {
    const ee = this.spec, ne = this.monitor;
    if (ee.drop)
      return ee.drop(ne.getItem(), ne);
  }
  constructor(ee, ne) {
    this.spec = ee, this.monitor = ne;
  }
}
function useDropTarget(Z, ee) {
  const ne = useMemo(
    () => new DropTargetImpl(Z, ee),
    [
      ee
    ]
  );
  return useEffect(() => {
    ne.spec = Z;
  }, [
    Z
  ]), ne;
}
function useRegisteredDropTarget(Z, ee, ne) {
  const ie = useDragDropManager(), oe = useDropTarget(Z, ee), ce = useAccept(Z);
  useIsomorphicLayoutEffect(function() {
    const [fe, xe] = registerTarget(ce, oe, ie);
    return ee.receiveHandlerId(fe), ne.receiveHandlerId(fe), xe;
  }, [
    ie,
    ee,
    oe,
    ne,
    ce.map(
      (he) => he.toString()
    ).join("|")
  ]);
}
function useDrop(Z, ee) {
  const ne = useOptionalFactory(Z, ee), ie = useDropTargetMonitor(), oe = useDropTargetConnector(ne.options);
  return useRegisteredDropTarget(ne, ie, oe), [
    useCollectedProps(ne.collect, ie, oe),
    useConnectDropTarget(oe)
  ];
}
function memoize$1(Z) {
  let ee = null;
  return () => (ee == null && (ee = Z()), ee);
}
function without(Z, ee) {
  return Z.filter(
    (ne) => ne !== ee
  );
}
function union(Z, ee) {
  const ne = /* @__PURE__ */ new Set(), ie = (ce) => ne.add(ce);
  Z.forEach(ie), ee.forEach(ie);
  const oe = [];
  return ne.forEach(
    (ce) => oe.push(ce)
  ), oe;
}
class EnterLeaveCounter {
  enter(ee) {
    const ne = this.entered.length, ie = (oe) => this.isNodeInDocument(oe) && (!oe.contains || oe.contains(ee));
    return this.entered = union(this.entered.filter(ie), [
      ee
    ]), ne === 0 && this.entered.length > 0;
  }
  leave(ee) {
    const ne = this.entered.length;
    return this.entered = without(this.entered.filter(this.isNodeInDocument), ee), ne > 0 && this.entered.length === 0;
  }
  reset() {
    this.entered = [];
  }
  constructor(ee) {
    this.entered = [], this.isNodeInDocument = ee;
  }
}
class NativeDragSource {
  initializeExposedProperties() {
    Object.keys(this.config.exposeProperties).forEach((ee) => {
      Object.defineProperty(this.item, ee, {
        configurable: !0,
        enumerable: !0,
        get() {
          return console.warn(`Browser doesn't allow reading "${ee}" until the drop event.`), null;
        }
      });
    });
  }
  loadDataTransfer(ee) {
    if (ee) {
      const ne = {};
      Object.keys(this.config.exposeProperties).forEach((ie) => {
        const oe = this.config.exposeProperties[ie];
        oe != null && (ne[ie] = {
          value: oe(ee, this.config.matchesTypes),
          configurable: !0,
          enumerable: !0
        });
      }), Object.defineProperties(this.item, ne);
    }
  }
  canDrag() {
    return !0;
  }
  beginDrag() {
    return this.item;
  }
  isDragging(ee, ne) {
    return ne === ee.getSourceId();
  }
  endDrag() {
  }
  constructor(ee) {
    this.config = ee, this.item = {}, this.initializeExposedProperties();
  }
}
const FILE = "__NATIVE_FILE__", URL$4 = "__NATIVE_URL__", TEXT = "__NATIVE_TEXT__", HTML = "__NATIVE_HTML__", NativeTypes = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  FILE,
  URL: URL$4,
  TEXT,
  HTML
}, Symbol.toStringTag, { value: "Module" }));
function getDataFromDataTransfer(Z, ee, ne) {
  const ie = ee.reduce(
    (oe, ce) => oe || Z.getData(ce),
    ""
  );
  return ie != null ? ie : ne;
}
const nativeTypesConfig = {
  [FILE]: {
    exposeProperties: {
      files: (Z) => Array.prototype.slice.call(Z.files),
      items: (Z) => Z.items,
      dataTransfer: (Z) => Z
    },
    matchesTypes: [
      "Files"
    ]
  },
  [HTML]: {
    exposeProperties: {
      html: (Z, ee) => getDataFromDataTransfer(Z, ee, ""),
      dataTransfer: (Z) => Z
    },
    matchesTypes: [
      "Html",
      "text/html"
    ]
  },
  [URL$4]: {
    exposeProperties: {
      urls: (Z, ee) => getDataFromDataTransfer(Z, ee, "").split(`
`),
      dataTransfer: (Z) => Z
    },
    matchesTypes: [
      "Url",
      "text/uri-list"
    ]
  },
  [TEXT]: {
    exposeProperties: {
      text: (Z, ee) => getDataFromDataTransfer(Z, ee, ""),
      dataTransfer: (Z) => Z
    },
    matchesTypes: [
      "Text",
      "text/plain"
    ]
  }
};
function createNativeDragSource(Z, ee) {
  const ne = nativeTypesConfig[Z];
  if (!ne)
    throw new Error(`native type ${Z} has no configuration`);
  const ie = new NativeDragSource(ne);
  return ie.loadDataTransfer(ee), ie;
}
function matchNativeItemType(Z) {
  if (!Z)
    return null;
  const ee = Array.prototype.slice.call(Z.types || []);
  return Object.keys(nativeTypesConfig).filter((ne) => {
    const ie = nativeTypesConfig[ne];
    return ie != null && ie.matchesTypes ? ie.matchesTypes.some(
      (oe) => ee.indexOf(oe) > -1
    ) : !1;
  })[0] || null;
}
const isFirefox = memoize$1(
  () => /firefox/i.test(navigator.userAgent)
), isSafari = memoize$1(
  () => Boolean(window.safari)
);
class MonotonicInterpolant {
  interpolate(ee) {
    const { xs: ne, ys: ie, c1s: oe, c2s: ce, c3s: he } = this;
    let fe = ne.length - 1;
    if (ee === ne[fe])
      return ie[fe];
    let xe = 0, Ae = he.length - 1, Ee;
    for (; xe <= Ae; ) {
      Ee = Math.floor(0.5 * (xe + Ae));
      const me = ne[Ee];
      if (me < ee)
        xe = Ee + 1;
      else if (me > ee)
        Ae = Ee - 1;
      else
        return ie[Ee];
    }
    fe = Math.max(0, Ae);
    const ye = ee - ne[fe], ge = ye * ye;
    return ie[fe] + oe[fe] * ye + ce[fe] * ge + he[fe] * ye * ge;
  }
  constructor(ee, ne) {
    const { length: ie } = ee, oe = [];
    for (let me = 0; me < ie; me++)
      oe.push(me);
    oe.sort(
      (me, Ce) => ee[me] < ee[Ce] ? -1 : 1
    );
    const ce = [], he = [];
    let fe, xe;
    for (let me = 0; me < ie - 1; me++)
      fe = ee[me + 1] - ee[me], xe = ne[me + 1] - ne[me], ce.push(fe), he.push(xe / fe);
    const Ae = [
      he[0]
    ];
    for (let me = 0; me < ce.length - 1; me++) {
      const Ce = he[me], Ie = he[me + 1];
      if (Ce * Ie <= 0)
        Ae.push(0);
      else {
        fe = ce[me];
        const Oe = ce[me + 1], He = fe + Oe;
        Ae.push(3 * He / ((He + Oe) / Ce + (He + fe) / Ie));
      }
    }
    Ae.push(he[he.length - 1]);
    const Ee = [], ye = [];
    let ge;
    for (let me = 0; me < Ae.length - 1; me++) {
      ge = he[me];
      const Ce = Ae[me], Ie = 1 / ce[me], Oe = Ce + Ae[me + 1] - ge - ge;
      Ee.push((ge - Ce - Oe) * Ie), ye.push(Oe * Ie * Ie);
    }
    this.xs = ee, this.ys = ne, this.c1s = Ae, this.c2s = Ee, this.c3s = ye;
  }
}
const ELEMENT_NODE = 1;
function getNodeClientOffset(Z) {
  const ee = Z.nodeType === ELEMENT_NODE ? Z : Z.parentElement;
  if (!ee)
    return null;
  const { top: ne, left: ie } = ee.getBoundingClientRect();
  return {
    x: ie,
    y: ne
  };
}
function getEventClientOffset(Z) {
  return {
    x: Z.clientX,
    y: Z.clientY
  };
}
function isImageNode(Z) {
  var ee;
  return Z.nodeName === "IMG" && (isFirefox() || !(!((ee = document.documentElement) === null || ee === void 0) && ee.contains(Z)));
}
function getDragPreviewSize(Z, ee, ne, ie) {
  let oe = Z ? ee.width : ne, ce = Z ? ee.height : ie;
  return isSafari() && Z && (ce /= window.devicePixelRatio, oe /= window.devicePixelRatio), {
    dragPreviewWidth: oe,
    dragPreviewHeight: ce
  };
}
function getDragPreviewOffset(Z, ee, ne, ie, oe) {
  const ce = isImageNode(ee), fe = getNodeClientOffset(ce ? Z : ee), xe = {
    x: ne.x - fe.x,
    y: ne.y - fe.y
  }, { offsetWidth: Ae, offsetHeight: Ee } = Z, { anchorX: ye, anchorY: ge } = ie, { dragPreviewWidth: me, dragPreviewHeight: Ce } = getDragPreviewSize(ce, ee, Ae, Ee), Ie = () => {
    let We = new MonotonicInterpolant([
      0,
      0.5,
      1
    ], [
      xe.y,
      xe.y / Ee * Ce,
      xe.y + Ce - Ee
    ]).interpolate(ge);
    return isSafari() && ce && (We += (window.devicePixelRatio - 1) * Ce), We;
  }, Oe = () => new MonotonicInterpolant([
    0,
    0.5,
    1
  ], [
    xe.x,
    xe.x / Ae * me,
    xe.x + me - Ae
  ]).interpolate(ye), { offsetX: He, offsetY: Ne } = oe, Pe = He === 0 || He, Fe = Ne === 0 || Ne;
  return {
    x: Pe ? He : Oe(),
    y: Fe ? Ne : Ie()
  };
}
class OptionsReader {
  get window() {
    if (this.globalContext)
      return this.globalContext;
    if (typeof window < "u")
      return window;
  }
  get document() {
    var ee;
    return !((ee = this.globalContext) === null || ee === void 0) && ee.document ? this.globalContext.document : this.window ? this.window.document : void 0;
  }
  get rootElement() {
    var ee;
    return ((ee = this.optionsArgs) === null || ee === void 0 ? void 0 : ee.rootElement) || this.window;
  }
  constructor(ee, ne) {
    this.ownerDocument = null, this.globalContext = ee, this.optionsArgs = ne;
  }
}
function _defineProperty(Z, ee, ne) {
  return ee in Z ? Object.defineProperty(Z, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Z[ee] = ne, Z;
}
function _objectSpread(Z) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(oe) {
      return Object.getOwnPropertyDescriptor(ne, oe).enumerable;
    }))), ie.forEach(function(oe) {
      _defineProperty(Z, oe, ne[oe]);
    });
  }
  return Z;
}
class HTML5BackendImpl {
  profile() {
    var ee, ne;
    return {
      sourcePreviewNodes: this.sourcePreviewNodes.size,
      sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,
      sourceNodeOptions: this.sourceNodeOptions.size,
      sourceNodes: this.sourceNodes.size,
      dragStartSourceIds: ((ee = this.dragStartSourceIds) === null || ee === void 0 ? void 0 : ee.length) || 0,
      dropTargetIds: this.dropTargetIds.length,
      dragEnterTargetIds: this.dragEnterTargetIds.length,
      dragOverTargetIds: ((ne = this.dragOverTargetIds) === null || ne === void 0 ? void 0 : ne.length) || 0
    };
  }
  get window() {
    return this.options.window;
  }
  get document() {
    return this.options.document;
  }
  get rootElement() {
    return this.options.rootElement;
  }
  setup() {
    const ee = this.rootElement;
    if (ee !== void 0) {
      if (ee.__isReactDndBackendSetUp)
        throw new Error("Cannot have two HTML5 backends at the same time.");
      ee.__isReactDndBackendSetUp = !0, this.addEventListeners(ee);
    }
  }
  teardown() {
    const ee = this.rootElement;
    if (ee !== void 0 && (ee.__isReactDndBackendSetUp = !1, this.removeEventListeners(this.rootElement), this.clearCurrentDragSourceNode(), this.asyncEndDragFrameId)) {
      var ne;
      (ne = this.window) === null || ne === void 0 || ne.cancelAnimationFrame(this.asyncEndDragFrameId);
    }
  }
  connectDragPreview(ee, ne, ie) {
    return this.sourcePreviewNodeOptions.set(ee, ie), this.sourcePreviewNodes.set(ee, ne), () => {
      this.sourcePreviewNodes.delete(ee), this.sourcePreviewNodeOptions.delete(ee);
    };
  }
  connectDragSource(ee, ne, ie) {
    this.sourceNodes.set(ee, ne), this.sourceNodeOptions.set(ee, ie);
    const oe = (he) => this.handleDragStart(he, ee), ce = (he) => this.handleSelectStart(he);
    return ne.setAttribute("draggable", "true"), ne.addEventListener("dragstart", oe), ne.addEventListener("selectstart", ce), () => {
      this.sourceNodes.delete(ee), this.sourceNodeOptions.delete(ee), ne.removeEventListener("dragstart", oe), ne.removeEventListener("selectstart", ce), ne.setAttribute("draggable", "false");
    };
  }
  connectDropTarget(ee, ne) {
    const ie = (he) => this.handleDragEnter(he, ee), oe = (he) => this.handleDragOver(he, ee), ce = (he) => this.handleDrop(he, ee);
    return ne.addEventListener("dragenter", ie), ne.addEventListener("dragover", oe), ne.addEventListener("drop", ce), () => {
      ne.removeEventListener("dragenter", ie), ne.removeEventListener("dragover", oe), ne.removeEventListener("drop", ce);
    };
  }
  addEventListeners(ee) {
    !ee.addEventListener || (ee.addEventListener("dragstart", this.handleTopDragStart), ee.addEventListener("dragstart", this.handleTopDragStartCapture, !0), ee.addEventListener("dragend", this.handleTopDragEndCapture, !0), ee.addEventListener("dragenter", this.handleTopDragEnter), ee.addEventListener("dragenter", this.handleTopDragEnterCapture, !0), ee.addEventListener("dragleave", this.handleTopDragLeaveCapture, !0), ee.addEventListener("dragover", this.handleTopDragOver), ee.addEventListener("dragover", this.handleTopDragOverCapture, !0), ee.addEventListener("drop", this.handleTopDrop), ee.addEventListener("drop", this.handleTopDropCapture, !0));
  }
  removeEventListeners(ee) {
    !ee.removeEventListener || (ee.removeEventListener("dragstart", this.handleTopDragStart), ee.removeEventListener("dragstart", this.handleTopDragStartCapture, !0), ee.removeEventListener("dragend", this.handleTopDragEndCapture, !0), ee.removeEventListener("dragenter", this.handleTopDragEnter), ee.removeEventListener("dragenter", this.handleTopDragEnterCapture, !0), ee.removeEventListener("dragleave", this.handleTopDragLeaveCapture, !0), ee.removeEventListener("dragover", this.handleTopDragOver), ee.removeEventListener("dragover", this.handleTopDragOverCapture, !0), ee.removeEventListener("drop", this.handleTopDrop), ee.removeEventListener("drop", this.handleTopDropCapture, !0));
  }
  getCurrentSourceNodeOptions() {
    const ee = this.monitor.getSourceId(), ne = this.sourceNodeOptions.get(ee);
    return _objectSpread({
      dropEffect: this.altKeyPressed ? "copy" : "move"
    }, ne || {});
  }
  getCurrentDropEffect() {
    return this.isDraggingNativeItem() ? "copy" : this.getCurrentSourceNodeOptions().dropEffect;
  }
  getCurrentSourcePreviewNodeOptions() {
    const ee = this.monitor.getSourceId(), ne = this.sourcePreviewNodeOptions.get(ee);
    return _objectSpread({
      anchorX: 0.5,
      anchorY: 0.5,
      captureDraggingState: !1
    }, ne || {});
  }
  isDraggingNativeItem() {
    const ee = this.monitor.getItemType();
    return Object.keys(NativeTypes).some(
      (ne) => NativeTypes[ne] === ee
    );
  }
  beginDragNativeItem(ee, ne) {
    this.clearCurrentDragSourceNode(), this.currentNativeSource = createNativeDragSource(ee, ne), this.currentNativeHandle = this.registry.addSource(ee, this.currentNativeSource), this.actions.beginDrag([
      this.currentNativeHandle
    ]);
  }
  setCurrentDragSourceNode(ee) {
    this.clearCurrentDragSourceNode(), this.currentDragSourceNode = ee;
    const ne = 1e3;
    this.mouseMoveTimeoutTimer = setTimeout(() => {
      var ie;
      return (ie = this.rootElement) === null || ie === void 0 ? void 0 : ie.addEventListener("mousemove", this.endDragIfSourceWasRemovedFromDOM, !0);
    }, ne);
  }
  clearCurrentDragSourceNode() {
    if (this.currentDragSourceNode) {
      if (this.currentDragSourceNode = null, this.rootElement) {
        var ee;
        (ee = this.window) === null || ee === void 0 || ee.clearTimeout(this.mouseMoveTimeoutTimer || void 0), this.rootElement.removeEventListener("mousemove", this.endDragIfSourceWasRemovedFromDOM, !0);
      }
      return this.mouseMoveTimeoutTimer = null, !0;
    }
    return !1;
  }
  handleDragStart(ee, ne) {
    ee.defaultPrevented || (this.dragStartSourceIds || (this.dragStartSourceIds = []), this.dragStartSourceIds.unshift(ne));
  }
  handleDragEnter(ee, ne) {
    this.dragEnterTargetIds.unshift(ne);
  }
  handleDragOver(ee, ne) {
    this.dragOverTargetIds === null && (this.dragOverTargetIds = []), this.dragOverTargetIds.unshift(ne);
  }
  handleDrop(ee, ne) {
    this.dropTargetIds.unshift(ne);
  }
  constructor(ee, ne, ie) {
    this.sourcePreviewNodes = /* @__PURE__ */ new Map(), this.sourcePreviewNodeOptions = /* @__PURE__ */ new Map(), this.sourceNodes = /* @__PURE__ */ new Map(), this.sourceNodeOptions = /* @__PURE__ */ new Map(), this.dragStartSourceIds = null, this.dropTargetIds = [], this.dragEnterTargetIds = [], this.currentNativeSource = null, this.currentNativeHandle = null, this.currentDragSourceNode = null, this.altKeyPressed = !1, this.mouseMoveTimeoutTimer = null, this.asyncEndDragFrameId = null, this.dragOverTargetIds = null, this.lastClientOffset = null, this.hoverRafId = null, this.getSourceClientOffset = (oe) => {
      const ce = this.sourceNodes.get(oe);
      return ce && getNodeClientOffset(ce) || null;
    }, this.endDragNativeItem = () => {
      !this.isDraggingNativeItem() || (this.actions.endDrag(), this.currentNativeHandle && this.registry.removeSource(this.currentNativeHandle), this.currentNativeHandle = null, this.currentNativeSource = null);
    }, this.isNodeInDocument = (oe) => Boolean(oe && this.document && this.document.body && this.document.body.contains(oe)), this.endDragIfSourceWasRemovedFromDOM = () => {
      const oe = this.currentDragSourceNode;
      oe == null || this.isNodeInDocument(oe) || (this.clearCurrentDragSourceNode() && this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover());
    }, this.scheduleHover = (oe) => {
      this.hoverRafId === null && typeof requestAnimationFrame < "u" && (this.hoverRafId = requestAnimationFrame(() => {
        this.monitor.isDragging() && this.actions.hover(oe || [], {
          clientOffset: this.lastClientOffset
        }), this.hoverRafId = null;
      }));
    }, this.cancelHover = () => {
      this.hoverRafId !== null && typeof cancelAnimationFrame < "u" && (cancelAnimationFrame(this.hoverRafId), this.hoverRafId = null);
    }, this.handleTopDragStartCapture = () => {
      this.clearCurrentDragSourceNode(), this.dragStartSourceIds = [];
    }, this.handleTopDragStart = (oe) => {
      if (oe.defaultPrevented)
        return;
      const { dragStartSourceIds: ce } = this;
      this.dragStartSourceIds = null;
      const he = getEventClientOffset(oe);
      this.monitor.isDragging() && (this.actions.endDrag(), this.cancelHover()), this.actions.beginDrag(ce || [], {
        publishSource: !1,
        getSourceClientOffset: this.getSourceClientOffset,
        clientOffset: he
      });
      const { dataTransfer: fe } = oe, xe = matchNativeItemType(fe);
      if (this.monitor.isDragging()) {
        if (fe && typeof fe.setDragImage == "function") {
          const Ee = this.monitor.getSourceId(), ye = this.sourceNodes.get(Ee), ge = this.sourcePreviewNodes.get(Ee) || ye;
          if (ge) {
            const { anchorX: me, anchorY: Ce, offsetX: Ie, offsetY: Oe } = this.getCurrentSourcePreviewNodeOptions(), Pe = getDragPreviewOffset(ye, ge, he, {
              anchorX: me,
              anchorY: Ce
            }, {
              offsetX: Ie,
              offsetY: Oe
            });
            fe.setDragImage(ge, Pe.x, Pe.y);
          }
        }
        try {
          fe == null || fe.setData("application/json", {});
        } catch {
        }
        this.setCurrentDragSourceNode(oe.target);
        const { captureDraggingState: Ae } = this.getCurrentSourcePreviewNodeOptions();
        Ae ? this.actions.publishDragSource() : setTimeout(
          () => this.actions.publishDragSource(),
          0
        );
      } else if (xe)
        this.beginDragNativeItem(xe);
      else {
        if (fe && !fe.types && (oe.target && !oe.target.hasAttribute || !oe.target.hasAttribute("draggable")))
          return;
        oe.preventDefault();
      }
    }, this.handleTopDragEndCapture = () => {
      this.clearCurrentDragSourceNode() && this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover();
    }, this.handleTopDragEnterCapture = (oe) => {
      if (this.dragEnterTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(oe.dataTransfer);
      }
      if (!this.enterLeaveCounter.enter(oe.target) || this.monitor.isDragging())
        return;
      const { dataTransfer: fe } = oe, xe = matchNativeItemType(fe);
      xe && this.beginDragNativeItem(xe, fe);
    }, this.handleTopDragEnter = (oe) => {
      const { dragEnterTargetIds: ce } = this;
      if (this.dragEnterTargetIds = [], !this.monitor.isDragging())
        return;
      this.altKeyPressed = oe.altKey, ce.length > 0 && this.actions.hover(ce, {
        clientOffset: getEventClientOffset(oe)
      }), ce.some(
        (fe) => this.monitor.canDropOnTarget(fe)
      ) && (oe.preventDefault(), oe.dataTransfer && (oe.dataTransfer.dropEffect = this.getCurrentDropEffect()));
    }, this.handleTopDragOverCapture = (oe) => {
      if (this.dragOverTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(oe.dataTransfer);
      }
    }, this.handleTopDragOver = (oe) => {
      const { dragOverTargetIds: ce } = this;
      if (this.dragOverTargetIds = [], !this.monitor.isDragging()) {
        oe.preventDefault(), oe.dataTransfer && (oe.dataTransfer.dropEffect = "none");
        return;
      }
      this.altKeyPressed = oe.altKey, this.lastClientOffset = getEventClientOffset(oe), this.scheduleHover(ce), (ce || []).some(
        (fe) => this.monitor.canDropOnTarget(fe)
      ) ? (oe.preventDefault(), oe.dataTransfer && (oe.dataTransfer.dropEffect = this.getCurrentDropEffect())) : this.isDraggingNativeItem() ? oe.preventDefault() : (oe.preventDefault(), oe.dataTransfer && (oe.dataTransfer.dropEffect = "none"));
    }, this.handleTopDragLeaveCapture = (oe) => {
      this.isDraggingNativeItem() && oe.preventDefault(), this.enterLeaveCounter.leave(oe.target) && (this.isDraggingNativeItem() && setTimeout(
        () => this.endDragNativeItem(),
        0
      ), this.cancelHover());
    }, this.handleTopDropCapture = (oe) => {
      if (this.dropTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        oe.preventDefault(), (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(oe.dataTransfer);
      } else
        matchNativeItemType(oe.dataTransfer) && oe.preventDefault();
      this.enterLeaveCounter.reset();
    }, this.handleTopDrop = (oe) => {
      const { dropTargetIds: ce } = this;
      this.dropTargetIds = [], this.actions.hover(ce, {
        clientOffset: getEventClientOffset(oe)
      }), this.actions.drop({
        dropEffect: this.getCurrentDropEffect()
      }), this.isDraggingNativeItem() ? this.endDragNativeItem() : this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover();
    }, this.handleSelectStart = (oe) => {
      const ce = oe.target;
      typeof ce.dragDrop == "function" && (ce.tagName === "INPUT" || ce.tagName === "SELECT" || ce.tagName === "TEXTAREA" || ce.isContentEditable || (oe.preventDefault(), ce.dragDrop()));
    }, this.options = new OptionsReader(ne, ie), this.actions = ee.getActions(), this.monitor = ee.getMonitor(), this.registry = ee.getRegistry(), this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);
  }
}
const HTML5Backend = function(ee, ne, ie) {
  return new HTML5BackendImpl(ee, ne, ie);
}, alphabet$1 = "abcdefghijklmnopqrstuvwxyz234567", lookupTable$1 = /* @__PURE__ */ Object.create(null);
for (let Z = 0; Z < alphabet$1.length; Z++)
  lookupTable$1[alphabet$1[Z]] = Z;
lookupTable$1[0] = lookupTable$1.o;
lookupTable$1[1] = lookupTable$1.i;
function encode$4(Z) {
  let ee = 0, ne = 0, ie = "";
  function oe(ce) {
    return ee < 0 ? ne |= ce >> -ee : ne = ce << ee & 248, ee > 3 ? (ee -= 8, 1) : (ee < 4 && (ie += alphabet$1[ne >> 3], ee += 5), 0);
  }
  for (let ce = 0; ce < Z.length; )
    ce += oe(Z[ce]);
  return ie + (ee < 0 ? alphabet$1[ne >> 3] : "");
}
function decode$4(Z) {
  let ee = 0, ne = 0;
  const ie = new Uint8Array(Z.length * 4 / 3 | 0);
  let oe = 0;
  function ce(he) {
    let fe = lookupTable$1[he.toLowerCase()];
    if (fe === void 0)
      throw new Error(`Invalid character: ${JSON.stringify(he)}`);
    fe <<= 3, ne |= fe >>> ee, ee += 5, ee >= 8 && (ie[oe++] = ne, ee -= 8, ee > 0 ? ne = fe << 5 - ee & 255 : ne = 0);
  }
  for (const he of Z)
    ce(he);
  return ie.slice(0, oe);
}
const lookUpTable$1 = new Uint32Array([
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
]);
function getCrc32$1(Z) {
  const ee = new Uint8Array(Z);
  let ne = -1;
  for (let ie = 0; ie < ee.length; ie++) {
    const ce = (ee[ie] ^ ne) & 255;
    ne = lookUpTable$1[ce] ^ ne >>> 8;
  }
  return (ne ^ -1) >>> 0;
}
var sha256$1 = { exports: {} };
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
(function(module) {
  (function() {
    var ERROR = "input is invalid type", WINDOW = typeof window == "object", root = WINDOW ? window : {};
    root.JS_SHA256_NO_WINDOW && (WINDOW = !1);
    var WEB_WORKER = !WINDOW && typeof self == "object", NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
    NODE_JS ? root = commonjsGlobal : WEB_WORKER && (root = self);
    var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && !0 && module.exports, ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", HEX_CHARS = "0123456789abcdef".split(""), EXTRA = [-2147483648, 8388608, 32768, 128], SHIFT = [24, 16, 8, 0], K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ], OUTPUT_TYPES = ["hex", "array", "digest", "arrayBuffer"], blocks = [];
    (root.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(Z) {
      return Object.prototype.toString.call(Z) === "[object Array]";
    }), ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(Z) {
      return typeof Z == "object" && Z.buffer && Z.buffer.constructor === ArrayBuffer;
    });
    var createOutputMethod = function(Z, ee) {
      return function(ne) {
        return new Sha256(ee, !0).update(ne)[Z]();
      };
    }, createMethod = function(Z) {
      var ee = createOutputMethod("hex", Z);
      NODE_JS && (ee = nodeWrap(ee, Z)), ee.create = function() {
        return new Sha256(Z);
      }, ee.update = function(oe) {
        return ee.create().update(oe);
      };
      for (var ne = 0; ne < OUTPUT_TYPES.length; ++ne) {
        var ie = OUTPUT_TYPES[ne];
        ee[ie] = createOutputMethod(ie, Z);
      }
      return ee;
    }, nodeWrap = function(method, is224) {
      var crypto = eval("require('crypto')"), Buffer = eval("require('buffer').Buffer"), algorithm = is224 ? "sha224" : "sha256", nodeMethod = function(Z) {
        if (typeof Z == "string")
          return crypto.createHash(algorithm).update(Z, "utf8").digest("hex");
        if (Z == null)
          throw new Error(ERROR);
        return Z.constructor === ArrayBuffer && (Z = new Uint8Array(Z)), Array.isArray(Z) || ArrayBuffer.isView(Z) || Z.constructor === Buffer ? crypto.createHash(algorithm).update(new Buffer(Z)).digest("hex") : method(Z);
      };
      return nodeMethod;
    }, createHmacOutputMethod = function(Z, ee) {
      return function(ne, ie) {
        return new HmacSha256(ne, ee, !0).update(ie)[Z]();
      };
    }, createHmacMethod = function(Z) {
      var ee = createHmacOutputMethod("hex", Z);
      ee.create = function(oe) {
        return new HmacSha256(oe, Z);
      }, ee.update = function(oe, ce) {
        return ee.create(oe).update(ce);
      };
      for (var ne = 0; ne < OUTPUT_TYPES.length; ++ne) {
        var ie = OUTPUT_TYPES[ne];
        ee[ie] = createHmacOutputMethod(ie, Z);
      }
      return ee;
    };
    function Sha256(Z, ee) {
      ee ? (blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], Z ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = Z;
    }
    Sha256.prototype.update = function(Z) {
      if (!this.finalized) {
        var ee, ne = typeof Z;
        if (ne !== "string") {
          if (ne === "object") {
            if (Z === null)
              throw new Error(ERROR);
            if (ARRAY_BUFFER && Z.constructor === ArrayBuffer)
              Z = new Uint8Array(Z);
            else if (!Array.isArray(Z) && (!ARRAY_BUFFER || !ArrayBuffer.isView(Z)))
              throw new Error(ERROR);
          } else
            throw new Error(ERROR);
          ee = !0;
        }
        for (var ie, oe = 0, ce, he = Z.length, fe = this.blocks; oe < he; ) {
          if (this.hashed && (this.hashed = !1, fe[0] = this.block, fe[16] = fe[1] = fe[2] = fe[3] = fe[4] = fe[5] = fe[6] = fe[7] = fe[8] = fe[9] = fe[10] = fe[11] = fe[12] = fe[13] = fe[14] = fe[15] = 0), ee)
            for (ce = this.start; oe < he && ce < 64; ++oe)
              fe[ce >> 2] |= Z[oe] << SHIFT[ce++ & 3];
          else
            for (ce = this.start; oe < he && ce < 64; ++oe)
              ie = Z.charCodeAt(oe), ie < 128 ? fe[ce >> 2] |= ie << SHIFT[ce++ & 3] : ie < 2048 ? (fe[ce >> 2] |= (192 | ie >> 6) << SHIFT[ce++ & 3], fe[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]) : ie < 55296 || ie >= 57344 ? (fe[ce >> 2] |= (224 | ie >> 12) << SHIFT[ce++ & 3], fe[ce >> 2] |= (128 | ie >> 6 & 63) << SHIFT[ce++ & 3], fe[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]) : (ie = 65536 + ((ie & 1023) << 10 | Z.charCodeAt(++oe) & 1023), fe[ce >> 2] |= (240 | ie >> 18) << SHIFT[ce++ & 3], fe[ce >> 2] |= (128 | ie >> 12 & 63) << SHIFT[ce++ & 3], fe[ce >> 2] |= (128 | ie >> 6 & 63) << SHIFT[ce++ & 3], fe[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]);
          this.lastByteIndex = ce, this.bytes += ce - this.start, ce >= 64 ? (this.block = fe[16], this.start = ce - 64, this.hash(), this.hashed = !0) : this.start = ce;
        }
        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
      }
    }, Sha256.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = !0;
        var Z = this.blocks, ee = this.lastByteIndex;
        Z[16] = this.block, Z[ee >> 2] |= EXTRA[ee & 3], this.block = Z[16], ee >= 56 && (this.hashed || this.hash(), Z[0] = this.block, Z[16] = Z[1] = Z[2] = Z[3] = Z[4] = Z[5] = Z[6] = Z[7] = Z[8] = Z[9] = Z[10] = Z[11] = Z[12] = Z[13] = Z[14] = Z[15] = 0), Z[14] = this.hBytes << 3 | this.bytes >>> 29, Z[15] = this.bytes << 3, this.hash();
      }
    }, Sha256.prototype.hash = function() {
      var Z = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, oe = this.h4, ce = this.h5, he = this.h6, fe = this.h7, xe = this.blocks, Ae, Ee, ye, ge, me, Ce, Ie, Oe, He, Ne, Pe;
      for (Ae = 16; Ae < 64; ++Ae)
        me = xe[Ae - 15], Ee = (me >>> 7 | me << 25) ^ (me >>> 18 | me << 14) ^ me >>> 3, me = xe[Ae - 2], ye = (me >>> 17 | me << 15) ^ (me >>> 19 | me << 13) ^ me >>> 10, xe[Ae] = xe[Ae - 16] + Ee + xe[Ae - 7] + ye << 0;
      for (Pe = ee & ne, Ae = 0; Ae < 64; Ae += 4)
        this.first ? (this.is224 ? (Oe = 300032, me = xe[0] - 1413257819, fe = me - 150054599 << 0, ie = me + 24177077 << 0) : (Oe = 704751109, me = xe[0] - 210244248, fe = me - 1521486534 << 0, ie = me + 143694565 << 0), this.first = !1) : (Ee = (Z >>> 2 | Z << 30) ^ (Z >>> 13 | Z << 19) ^ (Z >>> 22 | Z << 10), ye = (oe >>> 6 | oe << 26) ^ (oe >>> 11 | oe << 21) ^ (oe >>> 25 | oe << 7), Oe = Z & ee, ge = Oe ^ Z & ne ^ Pe, Ie = oe & ce ^ ~oe & he, me = fe + ye + Ie + K[Ae] + xe[Ae], Ce = Ee + ge, fe = ie + me << 0, ie = me + Ce << 0), Ee = (ie >>> 2 | ie << 30) ^ (ie >>> 13 | ie << 19) ^ (ie >>> 22 | ie << 10), ye = (fe >>> 6 | fe << 26) ^ (fe >>> 11 | fe << 21) ^ (fe >>> 25 | fe << 7), He = ie & Z, ge = He ^ ie & ee ^ Oe, Ie = fe & oe ^ ~fe & ce, me = he + ye + Ie + K[Ae + 1] + xe[Ae + 1], Ce = Ee + ge, he = ne + me << 0, ne = me + Ce << 0, Ee = (ne >>> 2 | ne << 30) ^ (ne >>> 13 | ne << 19) ^ (ne >>> 22 | ne << 10), ye = (he >>> 6 | he << 26) ^ (he >>> 11 | he << 21) ^ (he >>> 25 | he << 7), Ne = ne & ie, ge = Ne ^ ne & Z ^ He, Ie = he & fe ^ ~he & oe, me = ce + ye + Ie + K[Ae + 2] + xe[Ae + 2], Ce = Ee + ge, ce = ee + me << 0, ee = me + Ce << 0, Ee = (ee >>> 2 | ee << 30) ^ (ee >>> 13 | ee << 19) ^ (ee >>> 22 | ee << 10), ye = (ce >>> 6 | ce << 26) ^ (ce >>> 11 | ce << 21) ^ (ce >>> 25 | ce << 7), Pe = ee & ne, ge = Pe ^ ee & ie ^ Ne, Ie = ce & he ^ ~ce & fe, me = oe + ye + Ie + K[Ae + 3] + xe[Ae + 3], Ce = Ee + ge, oe = Z + me << 0, Z = me + Ce << 0;
      this.h0 = this.h0 + Z << 0, this.h1 = this.h1 + ee << 0, this.h2 = this.h2 + ne << 0, this.h3 = this.h3 + ie << 0, this.h4 = this.h4 + oe << 0, this.h5 = this.h5 + ce << 0, this.h6 = this.h6 + he << 0, this.h7 = this.h7 + fe << 0;
    }, Sha256.prototype.hex = function() {
      this.finalize();
      var Z = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, oe = this.h4, ce = this.h5, he = this.h6, fe = this.h7, xe = HEX_CHARS[Z >> 28 & 15] + HEX_CHARS[Z >> 24 & 15] + HEX_CHARS[Z >> 20 & 15] + HEX_CHARS[Z >> 16 & 15] + HEX_CHARS[Z >> 12 & 15] + HEX_CHARS[Z >> 8 & 15] + HEX_CHARS[Z >> 4 & 15] + HEX_CHARS[Z & 15] + HEX_CHARS[ee >> 28 & 15] + HEX_CHARS[ee >> 24 & 15] + HEX_CHARS[ee >> 20 & 15] + HEX_CHARS[ee >> 16 & 15] + HEX_CHARS[ee >> 12 & 15] + HEX_CHARS[ee >> 8 & 15] + HEX_CHARS[ee >> 4 & 15] + HEX_CHARS[ee & 15] + HEX_CHARS[ne >> 28 & 15] + HEX_CHARS[ne >> 24 & 15] + HEX_CHARS[ne >> 20 & 15] + HEX_CHARS[ne >> 16 & 15] + HEX_CHARS[ne >> 12 & 15] + HEX_CHARS[ne >> 8 & 15] + HEX_CHARS[ne >> 4 & 15] + HEX_CHARS[ne & 15] + HEX_CHARS[ie >> 28 & 15] + HEX_CHARS[ie >> 24 & 15] + HEX_CHARS[ie >> 20 & 15] + HEX_CHARS[ie >> 16 & 15] + HEX_CHARS[ie >> 12 & 15] + HEX_CHARS[ie >> 8 & 15] + HEX_CHARS[ie >> 4 & 15] + HEX_CHARS[ie & 15] + HEX_CHARS[oe >> 28 & 15] + HEX_CHARS[oe >> 24 & 15] + HEX_CHARS[oe >> 20 & 15] + HEX_CHARS[oe >> 16 & 15] + HEX_CHARS[oe >> 12 & 15] + HEX_CHARS[oe >> 8 & 15] + HEX_CHARS[oe >> 4 & 15] + HEX_CHARS[oe & 15] + HEX_CHARS[ce >> 28 & 15] + HEX_CHARS[ce >> 24 & 15] + HEX_CHARS[ce >> 20 & 15] + HEX_CHARS[ce >> 16 & 15] + HEX_CHARS[ce >> 12 & 15] + HEX_CHARS[ce >> 8 & 15] + HEX_CHARS[ce >> 4 & 15] + HEX_CHARS[ce & 15] + HEX_CHARS[he >> 28 & 15] + HEX_CHARS[he >> 24 & 15] + HEX_CHARS[he >> 20 & 15] + HEX_CHARS[he >> 16 & 15] + HEX_CHARS[he >> 12 & 15] + HEX_CHARS[he >> 8 & 15] + HEX_CHARS[he >> 4 & 15] + HEX_CHARS[he & 15];
      return this.is224 || (xe += HEX_CHARS[fe >> 28 & 15] + HEX_CHARS[fe >> 24 & 15] + HEX_CHARS[fe >> 20 & 15] + HEX_CHARS[fe >> 16 & 15] + HEX_CHARS[fe >> 12 & 15] + HEX_CHARS[fe >> 8 & 15] + HEX_CHARS[fe >> 4 & 15] + HEX_CHARS[fe & 15]), xe;
    }, Sha256.prototype.toString = Sha256.prototype.hex, Sha256.prototype.digest = function() {
      this.finalize();
      var Z = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, oe = this.h4, ce = this.h5, he = this.h6, fe = this.h7, xe = [
        Z >> 24 & 255,
        Z >> 16 & 255,
        Z >> 8 & 255,
        Z & 255,
        ee >> 24 & 255,
        ee >> 16 & 255,
        ee >> 8 & 255,
        ee & 255,
        ne >> 24 & 255,
        ne >> 16 & 255,
        ne >> 8 & 255,
        ne & 255,
        ie >> 24 & 255,
        ie >> 16 & 255,
        ie >> 8 & 255,
        ie & 255,
        oe >> 24 & 255,
        oe >> 16 & 255,
        oe >> 8 & 255,
        oe & 255,
        ce >> 24 & 255,
        ce >> 16 & 255,
        ce >> 8 & 255,
        ce & 255,
        he >> 24 & 255,
        he >> 16 & 255,
        he >> 8 & 255,
        he & 255
      ];
      return this.is224 || xe.push(fe >> 24 & 255, fe >> 16 & 255, fe >> 8 & 255, fe & 255), xe;
    }, Sha256.prototype.array = Sha256.prototype.digest, Sha256.prototype.arrayBuffer = function() {
      this.finalize();
      var Z = new ArrayBuffer(this.is224 ? 28 : 32), ee = new DataView(Z);
      return ee.setUint32(0, this.h0), ee.setUint32(4, this.h1), ee.setUint32(8, this.h2), ee.setUint32(12, this.h3), ee.setUint32(16, this.h4), ee.setUint32(20, this.h5), ee.setUint32(24, this.h6), this.is224 || ee.setUint32(28, this.h7), Z;
    };
    function HmacSha256(Z, ee, ne) {
      var ie, oe = typeof Z;
      if (oe === "string") {
        var ce = [], he = Z.length, fe = 0, xe;
        for (ie = 0; ie < he; ++ie)
          xe = Z.charCodeAt(ie), xe < 128 ? ce[fe++] = xe : xe < 2048 ? (ce[fe++] = 192 | xe >> 6, ce[fe++] = 128 | xe & 63) : xe < 55296 || xe >= 57344 ? (ce[fe++] = 224 | xe >> 12, ce[fe++] = 128 | xe >> 6 & 63, ce[fe++] = 128 | xe & 63) : (xe = 65536 + ((xe & 1023) << 10 | Z.charCodeAt(++ie) & 1023), ce[fe++] = 240 | xe >> 18, ce[fe++] = 128 | xe >> 12 & 63, ce[fe++] = 128 | xe >> 6 & 63, ce[fe++] = 128 | xe & 63);
        Z = ce;
      } else if (oe === "object") {
        if (Z === null)
          throw new Error(ERROR);
        if (ARRAY_BUFFER && Z.constructor === ArrayBuffer)
          Z = new Uint8Array(Z);
        else if (!Array.isArray(Z) && (!ARRAY_BUFFER || !ArrayBuffer.isView(Z)))
          throw new Error(ERROR);
      } else
        throw new Error(ERROR);
      Z.length > 64 && (Z = new Sha256(ee, !0).update(Z).array());
      var Ae = [], Ee = [];
      for (ie = 0; ie < 64; ++ie) {
        var ye = Z[ie] || 0;
        Ae[ie] = 92 ^ ye, Ee[ie] = 54 ^ ye;
      }
      Sha256.call(this, ee, ne), this.update(Ee), this.oKeyPad = Ae, this.inner = !0, this.sharedMemory = ne;
    }
    HmacSha256.prototype = new Sha256(), HmacSha256.prototype.finalize = function() {
      if (Sha256.prototype.finalize.call(this), this.inner) {
        this.inner = !1;
        var Z = this.array();
        Sha256.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(Z), Sha256.prototype.finalize.call(this);
      }
    };
    var exports = createMethod();
    exports.sha256 = exports, exports.sha224 = createMethod(!0), exports.sha256.hmac = createHmacMethod(), exports.sha224.hmac = createHmacMethod(!0), COMMON_JS ? module.exports = exports : (root.sha256 = exports.sha256, root.sha224 = exports.sha224);
  })();
})(sha256$1);
function sha224$2(Z) {
  const ee = sha256$1.exports.sha224.create();
  return ee.update(Z), new Uint8Array(ee.array());
}
const SELF_AUTHENTICATING_SUFFIX$1 = 2, ANONYMOUS_SUFFIX$1 = 4, MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = "aaaaa-aa", fromHexString$1 = (Z) => {
  var ee;
  return new Uint8Array(((ee = Z.match(/.{1,2}/g)) !== null && ee !== void 0 ? ee : []).map((ne) => parseInt(ne, 16)));
}, toHexString$1 = (Z) => Z.reduce((ee, ne) => ee + ne.toString(16).padStart(2, "0"), "");
class Principal$2 {
  constructor(ee) {
    this._arr = ee, this._isPrincipal = !0;
  }
  static anonymous() {
    return new this(new Uint8Array([ANONYMOUS_SUFFIX$1]));
  }
  static managementCanister() {
    return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);
  }
  static selfAuthenticating(ee) {
    const ne = sha224$2(ee);
    return new this(new Uint8Array([...ne, SELF_AUTHENTICATING_SUFFIX$1]));
  }
  static from(ee) {
    if (typeof ee == "string")
      return Principal$2.fromText(ee);
    if (typeof ee == "object" && ee !== null && ee._isPrincipal === !0)
      return new Principal$2(ee._arr);
    throw new Error(`Impossible to convert ${JSON.stringify(ee)} to Principal.`);
  }
  static fromHex(ee) {
    return new this(fromHexString$1(ee));
  }
  static fromText(ee) {
    const ne = ee.toLowerCase().replace(/-/g, "");
    let ie = decode$4(ne);
    ie = ie.slice(4, ie.length);
    const oe = new this(ie);
    if (oe.toText() !== ee)
      throw new Error(`Principal "${oe.toText()}" does not have a valid checksum (original value "${ee}" may not be a valid Principal ID).`);
    return oe;
  }
  static fromUint8Array(ee) {
    return new this(ee);
  }
  isAnonymous() {
    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX$1;
  }
  toUint8Array() {
    return this._arr;
  }
  toHex() {
    return toHexString$1(this._arr).toUpperCase();
  }
  toText() {
    const ee = new ArrayBuffer(4);
    new DataView(ee).setUint32(0, getCrc32$1(this._arr));
    const ie = new Uint8Array(ee), oe = Uint8Array.from(this._arr), ce = new Uint8Array([...ie, ...oe]), fe = encode$4(ce).match(/.{1,5}/g);
    if (!fe)
      throw new Error();
    return fe.join("-");
  }
  toString() {
    return this.toText();
  }
  compareTo(ee) {
    for (let ne = 0; ne < Math.min(this._arr.length, ee._arr.length); ne++) {
      if (this._arr[ne] < ee._arr[ne])
        return "lt";
      if (this._arr[ne] > ee._arr[ne])
        return "gt";
    }
    return this._arr.length < ee._arr.length ? "lt" : this._arr.length > ee._arr.length ? "gt" : "eq";
  }
  ltEq(ee) {
    const ne = this.compareTo(ee);
    return ne == "lt" || ne == "eq";
  }
  gtEq(ee) {
    const ne = this.compareTo(ee);
    return ne == "gt" || ne == "eq";
  }
}
var __awaiter$d = globalThis && globalThis.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __generator = globalThis && globalThis.__generator || function(Z, ee) {
  var ne = {
    label: 0,
    sent: function() {
      if (ce[0] & 1)
        throw ce[1];
      return ce[1];
    },
    trys: [],
    ops: []
  }, ie, oe, ce, he;
  return he = {
    next: fe(0),
    throw: fe(1),
    return: fe(2)
  }, typeof Symbol == "function" && (he[Symbol.iterator] = function() {
    return this;
  }), he;
  function fe(Ae) {
    return function(Ee) {
      return xe([Ae, Ee]);
    };
  }
  function xe(Ae) {
    if (ie)
      throw new TypeError("Generator is already executing.");
    for (; ne; )
      try {
        if (ie = 1, oe && (ce = Ae[0] & 2 ? oe.return : Ae[0] ? oe.throw || ((ce = oe.return) && ce.call(oe), 0) : oe.next) && !(ce = ce.call(oe, Ae[1])).done)
          return ce;
        switch (oe = 0, ce && (Ae = [Ae[0] & 2, ce.value]), Ae[0]) {
          case 0:
          case 1:
            ce = Ae;
            break;
          case 4:
            return ne.label++, {
              value: Ae[1],
              done: !1
            };
          case 5:
            ne.label++, oe = Ae[1], Ae = [0];
            continue;
          case 7:
            Ae = ne.ops.pop(), ne.trys.pop();
            continue;
          default:
            if (ce = ne.trys, !(ce = ce.length > 0 && ce[ce.length - 1]) && (Ae[0] === 6 || Ae[0] === 2)) {
              ne = 0;
              continue;
            }
            if (Ae[0] === 3 && (!ce || Ae[1] > ce[0] && Ae[1] < ce[3])) {
              ne.label = Ae[1];
              break;
            }
            if (Ae[0] === 6 && ne.label < ce[1]) {
              ne.label = ce[1], ce = Ae;
              break;
            }
            if (ce && ne.label < ce[2]) {
              ne.label = ce[2], ne.ops.push(Ae);
              break;
            }
            ce[2] && ne.ops.pop(), ne.trys.pop();
            continue;
        }
        Ae = ee.call(Z, ne);
      } catch (Ee) {
        Ae = [6, Ee], oe = 0;
      } finally {
        ie = ce = 0;
      }
    if (Ae[0] & 5)
      throw Ae[1];
    return {
      value: Ae[0] ? Ae[1] : void 0,
      done: !0
    };
  }
}, ic = window.ic, plug = ic == null ? void 0 : ic.plug, context = createContext({
  authenticated: !1,
  principal: null,
  agent: plug == null ? void 0 : plug.agent,
  login: function() {
  },
  logout: function() {
  },
  createActor: plug == null ? void 0 : plug.createActor,
  requestBalance: plug == null ? void 0 : plug.requestBalance,
  requestTransfer: plug == null ? void 0 : plug.requestTransfer,
  batchTransactions: plug == null ? void 0 : plug.batchTransactions,
  plug
}), Provider = context.Provider, PlugProvider = function(Z) {
  var ee = Z.children, ne = Z.LoggedOut, ie = Z.host, oe = ie === void 0 ? "https://mainnet.dfinity.network" : ie, ce = Z.whitelist, he = ce === void 0 ? [] : ce, fe = Z.timeout, xe = fe === void 0 ? 12e4 : fe, Ae = useState(!1), Ee = Ae[0], ye = Ae[1], ge = useState(null), me = ge[0], Ce = ge[1], Ie = useCallback(function() {
    return __awaiter$d(void 0, void 0, void 0, function() {
      var Ne, Pe;
      return __generator(this, function(Fe) {
        switch (Fe.label) {
          case 0:
            return Fe.trys.push([0, 4, , 5]), plug ? [4, plug.requestConnect({
              whitelist: he,
              host: oe,
              timeout: xe
            })] : [3, 3];
          case 1:
            return Ne = Fe.sent(), Ne ? [4, plug.agent.getPrincipal()] : [3, 3];
          case 2:
            Pe = Fe.sent(), Ce(Pe), ye(!0), Fe.label = 3;
          case 3:
            return [3, 5];
          case 4:
            return Fe.sent(), ye(!1), [3, 5];
          case 5:
            return [2];
        }
      });
    });
  }, [oe, he, xe]), Oe = useCallback(function() {
    window.location.reload();
  }, []), He = useMemo(function() {
    return {
      authenticated: Ee,
      agent: plug == null ? void 0 : plug.agent,
      login: Ie,
      logout: Oe,
      principal: me,
      createActor: function(Ne) {
        return plug == null ? void 0 : plug.createActor(Ne);
      },
      requestBalance: plug == null ? void 0 : plug.requestBalance,
      requestTransfer: plug == null ? void 0 : plug.requestTransfer,
      batchTransactions: plug == null ? void 0 : plug.batchTransactions,
      plug
    };
  }, [Ee, plug, Ie, Oe, me]);
  return !Ee && ne ? /* @__PURE__ */ jsx(Provider, {
    value: He,
    children: ne || null
  }) : /* @__PURE__ */ jsx(Provider, {
    value: He,
    children: ee
  });
}, usePlug = function() {
  var Z = useContext(context);
  return Z;
}, e = "colors", t = "sizes", r = "space", n = { gap: r, gridGap: r, columnGap: r, gridColumnGap: r, rowGap: r, gridRowGap: r, inset: r, insetBlock: r, insetBlockEnd: r, insetBlockStart: r, insetInline: r, insetInlineEnd: r, insetInlineStart: r, margin: r, marginTop: r, marginRight: r, marginBottom: r, marginLeft: r, marginBlock: r, marginBlockEnd: r, marginBlockStart: r, marginInline: r, marginInlineEnd: r, marginInlineStart: r, padding: r, paddingTop: r, paddingRight: r, paddingBottom: r, paddingLeft: r, paddingBlock: r, paddingBlockEnd: r, paddingBlockStart: r, paddingInline: r, paddingInlineEnd: r, paddingInlineStart: r, top: r, right: r, bottom: r, left: r, scrollMargin: r, scrollMarginTop: r, scrollMarginRight: r, scrollMarginBottom: r, scrollMarginLeft: r, scrollMarginX: r, scrollMarginY: r, scrollMarginBlock: r, scrollMarginBlockEnd: r, scrollMarginBlockStart: r, scrollMarginInline: r, scrollMarginInlineEnd: r, scrollMarginInlineStart: r, scrollPadding: r, scrollPaddingTop: r, scrollPaddingRight: r, scrollPaddingBottom: r, scrollPaddingLeft: r, scrollPaddingX: r, scrollPaddingY: r, scrollPaddingBlock: r, scrollPaddingBlockEnd: r, scrollPaddingBlockStart: r, scrollPaddingInline: r, scrollPaddingInlineEnd: r, scrollPaddingInlineStart: r, fontSize: "fontSizes", background: e, backgroundColor: e, backgroundImage: e, borderImage: e, border: e, borderBlock: e, borderBlockEnd: e, borderBlockStart: e, borderBottom: e, borderBottomColor: e, borderColor: e, borderInline: e, borderInlineEnd: e, borderInlineStart: e, borderLeft: e, borderLeftColor: e, borderRight: e, borderRightColor: e, borderTop: e, borderTopColor: e, caretColor: e, color: e, columnRuleColor: e, fill: e, outline: e, outlineColor: e, stroke: e, textDecorationColor: e, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t, minBlockSize: t, maxBlockSize: t, inlineSize: t, minInlineSize: t, maxInlineSize: t, width: t, minWidth: t, maxWidth: t, height: t, minHeight: t, maxHeight: t, flexBasis: t, gridTemplateColumns: t, gridTemplateRows: t, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" }, i = (Z, ee) => typeof ee == "function" ? { "()": Function.prototype.toString.call(ee) } : ee, o = () => {
  const Z = /* @__PURE__ */ Object.create(null);
  return (ee, ne, ...ie) => {
    const oe = ((ce) => JSON.stringify(ce, i))(ee);
    return oe in Z ? Z[oe] : Z[oe] = ne(ee, ...ie);
  };
}, l = Symbol.for("sxs.internal"), s = (Z, ee) => Object.defineProperties(Z, Object.getOwnPropertyDescriptors(ee)), a = (Z) => {
  for (const ee in Z)
    return !0;
  return !1;
}, { hasOwnProperty: c$1 } = Object.prototype, d = (Z) => Z.includes("-") ? Z : Z.replace(/[A-Z]/g, (ee) => "-" + ee.toLowerCase()), g = /\s+(?![^()]*\))/, p = (Z) => (ee) => Z(...typeof ee == "string" ? String(ee).split(g) : [ee]), u = { appearance: (Z) => ({ WebkitAppearance: Z, appearance: Z }), backfaceVisibility: (Z) => ({ WebkitBackfaceVisibility: Z, backfaceVisibility: Z }), backdropFilter: (Z) => ({ WebkitBackdropFilter: Z, backdropFilter: Z }), backgroundClip: (Z) => ({ WebkitBackgroundClip: Z, backgroundClip: Z }), boxDecorationBreak: (Z) => ({ WebkitBoxDecorationBreak: Z, boxDecorationBreak: Z }), clipPath: (Z) => ({ WebkitClipPath: Z, clipPath: Z }), content: (Z) => ({ content: Z.includes('"') || Z.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(Z) ? Z : `"${Z}"` }), hyphens: (Z) => ({ WebkitHyphens: Z, hyphens: Z }), maskImage: (Z) => ({ WebkitMaskImage: Z, maskImage: Z }), maskSize: (Z) => ({ WebkitMaskSize: Z, maskSize: Z }), tabSize: (Z) => ({ MozTabSize: Z, tabSize: Z }), textSizeAdjust: (Z) => ({ WebkitTextSizeAdjust: Z, textSizeAdjust: Z }), userSelect: (Z) => ({ WebkitUserSelect: Z, userSelect: Z }), marginBlock: p((Z, ee) => ({ marginBlockStart: Z, marginBlockEnd: ee || Z })), marginInline: p((Z, ee) => ({ marginInlineStart: Z, marginInlineEnd: ee || Z })), maxSize: p((Z, ee) => ({ maxBlockSize: Z, maxInlineSize: ee || Z })), minSize: p((Z, ee) => ({ minBlockSize: Z, minInlineSize: ee || Z })), paddingBlock: p((Z, ee) => ({ paddingBlockStart: Z, paddingBlockEnd: ee || Z })), paddingInline: p((Z, ee) => ({ paddingInlineStart: Z, paddingInlineEnd: ee || Z })) }, h = /([\d.]+)([^]*)/, f = (Z, ee) => Z.length ? Z.reduce((ne, ie) => (ne.push(...ee.map((oe) => oe.includes("&") ? oe.replace(/&/g, /[ +>|~]/.test(ie) && /&.*&/.test(oe) ? `:is(${ie})` : ie) : ie + " " + oe)), ne), []) : ee, m = (Z, ee) => Z in b && typeof ee == "string" ? ee.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (ne, ie, oe, ce) => ie + (oe === "stretch" ? `-moz-available${ce};${d(Z)}:${ie}-webkit-fill-available` : `-moz-fit-content${ce};${d(Z)}:${ie}fit-content`) + ce) : String(ee), b = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 }, S = (Z) => Z ? Z + "-" : "", k = (Z, ee, ne) => Z.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (ie, oe, ce, he, fe) => he == "$" == !!ce ? ie : (oe || he == "--" ? "calc(" : "") + "var(--" + (he === "$" ? S(ee) + (fe.includes("$") ? "" : S(ne)) + fe.replace(/\$/g, "-") : fe) + ")" + (oe || he == "--" ? "*" + (oe || "") + (ce || "1") + ")" : "")), y = /\s*,\s*(?![^()]*\))/, B = Object.prototype.toString, $ = (Z, ee, ne, ie, oe) => {
  let ce, he, fe;
  const xe = (Ae, Ee, ye) => {
    let ge, me;
    const Ce = (Ie) => {
      for (ge in Ie) {
        const Ne = ge.charCodeAt(0) === 64, Pe = Ne && Array.isArray(Ie[ge]) ? Ie[ge] : [Ie[ge]];
        for (me of Pe) {
          const Fe = /[A-Z]/.test(He = ge) ? He : He.replace(/-[^]/g, (We) => We[1].toUpperCase()), Le = typeof me == "object" && me && me.toString === B && (!ie.utils[Fe] || !Ee.length);
          if (Fe in ie.utils && !Le) {
            const We = ie.utils[Fe];
            if (We !== he) {
              he = We, Ce(We(me)), he = null;
              continue;
            }
          } else if (Fe in u) {
            const We = u[Fe];
            if (We !== fe) {
              fe = We, Ce(We(me)), fe = null;
              continue;
            }
          }
          if (Ne && (Oe = ge.slice(1) in ie.media ? "@media " + ie.media[ge.slice(1)] : ge, ge = Oe.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (We, rt, gt, kt, Ke, ht) => {
            const Nt = h.test(rt), Ft = 0.0625 * (Nt ? -1 : 1), [At, St] = Nt ? [kt, rt] : [rt, kt];
            return "(" + (gt[0] === "=" ? "" : gt[0] === ">" === Nt ? "max-" : "min-") + At + ":" + (gt[0] !== "=" && gt.length === 1 ? St.replace(h, (Vt, Xt, Lt) => Number(Xt) + Ft * (gt === ">" ? 1 : -1) + Lt) : St) + (Ke ? ") and (" + (Ke[0] === ">" ? "min-" : "max-") + At + ":" + (Ke.length === 1 ? ht.replace(h, (Vt, Xt, Lt) => Number(Xt) + Ft * (Ke === ">" ? -1 : 1) + Lt) : ht) : "") + ")";
          })), Le) {
            const We = Ne ? ye.concat(ge) : [...ye], rt = Ne ? [...Ee] : f(Ee, ge.split(y));
            ce !== void 0 && oe(x(...ce)), ce = void 0, xe(me, rt, We);
          } else
            ce === void 0 && (ce = [[], Ee, ye]), ge = Ne || ge.charCodeAt(0) !== 36 ? ge : `--${S(ie.prefix)}${ge.slice(1).replace(/\$/g, "-")}`, me = Le ? me : typeof me == "number" ? me && Fe in I ? String(me) + "px" : String(me) : k(m(Fe, me == null ? "" : me), ie.prefix, ie.themeMap[Fe]), ce[0].push(`${Ne ? `${ge} ` : `${d(ge)}:`}${me}`);
        }
      }
      var Oe, He;
    };
    Ce(Ae), ce !== void 0 && oe(x(...ce)), ce = void 0;
  };
  xe(Z, ee, ne);
}, x = (Z, ee, ne) => `${ne.map((ie) => `${ie}{`).join("")}${ee.length ? `${ee.join(",")}{` : ""}${Z.join(";")}${ee.length ? "}" : ""}${Array(ne.length ? ne.length + 1 : 0).join("}")}`, I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 }, R = (Z) => String.fromCharCode(Z + (Z > 25 ? 39 : 97)), z = (Z) => ((ee) => {
  let ne, ie = "";
  for (ne = Math.abs(ee); ne > 52; ne = ne / 52 | 0)
    ie = R(ne % 52) + ie;
  return R(ne % 52) + ie;
})(((ee, ne) => {
  let ie = ne.length;
  for (; ie; )
    ee = 33 * ee ^ ne.charCodeAt(--ie);
  return ee;
})(5381, JSON.stringify(Z)) >>> 0), W = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"], j = (Z) => {
  if (Z.href && !Z.href.startsWith(location.origin))
    return !1;
  try {
    return !!Z.cssRules;
  } catch {
    return !1;
  }
}, E = (Z) => {
  let ee;
  const ne = () => {
    const { cssRules: oe } = ee.sheet;
    return [].map.call(oe, (ce, he) => {
      const { cssText: fe } = ce;
      let xe = "";
      if (fe.startsWith("--sxs"))
        return "";
      if (oe[he - 1] && (xe = oe[he - 1].cssText).startsWith("--sxs")) {
        if (!ce.cssRules.length)
          return "";
        for (const Ae in ee.rules)
          if (ee.rules[Ae].group === ce)
            return `--sxs{--sxs:${[...ee.rules[Ae].cache].join(" ")}}${fe}`;
        return ce.cssRules.length ? `${xe}${fe}` : "";
      }
      return fe;
    }).join("");
  }, ie = () => {
    if (ee) {
      const { rules: fe, sheet: xe } = ee;
      if (!xe.deleteRule) {
        for (; Object(Object(xe.cssRules)[0]).type === 3; )
          xe.cssRules.splice(0, 1);
        xe.cssRules = [];
      }
      for (const Ae in fe)
        delete fe[Ae];
    }
    const oe = Object(Z).styleSheets || [];
    for (const fe of oe)
      if (j(fe)) {
        for (let xe = 0, Ae = fe.cssRules; Ae[xe]; ++xe) {
          const Ee = Object(Ae[xe]);
          if (Ee.type !== 1)
            continue;
          const ye = Object(Ae[xe + 1]);
          if (ye.type !== 4)
            continue;
          ++xe;
          const { cssText: ge } = Ee;
          if (!ge.startsWith("--sxs"))
            continue;
          const me = ge.slice(14, -3).trim().split(/\s+/), Ce = W[me[0]];
          Ce && (ee || (ee = { sheet: fe, reset: ie, rules: {}, toString: ne }), ee.rules[Ce] = { group: ye, index: xe, cache: new Set(me) });
        }
        if (ee)
          break;
      }
    if (!ee) {
      const fe = (xe, Ae) => ({ type: Ae, cssRules: [], insertRule(Ee, ye) {
        this.cssRules.splice(ye, 0, fe(Ee, { import: 3, undefined: 1 }[(Ee.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return xe === "@media{}" ? `@media{${[].map.call(this.cssRules, (Ee) => Ee.cssText).join("")}}` : xe;
      } });
      ee = { sheet: Z ? (Z.head || Z).appendChild(document.createElement("style")).sheet : fe("", "text/css"), rules: {}, reset: ie, toString: ne };
    }
    const { sheet: ce, rules: he } = ee;
    for (let fe = W.length - 1; fe >= 0; --fe) {
      const xe = W[fe];
      if (!he[xe]) {
        const Ae = W[fe + 1], Ee = he[Ae] ? he[Ae].index : ce.cssRules.length;
        ce.insertRule("@media{}", Ee), ce.insertRule(`--sxs{--sxs:${fe}}`, Ee), he[xe] = { group: ce.cssRules[Ee + 1], index: Ee, cache: /* @__PURE__ */ new Set([fe]) };
      }
      v(he[xe]);
    }
  };
  return ie(), ee;
}, v = (Z) => {
  const ee = Z.group;
  let ne = ee.cssRules.length;
  Z.apply = (ie) => {
    try {
      ee.insertRule(ie, ne), ++ne;
    } catch {
    }
  };
}, T = Symbol(), w = o(), M = (Z, ee) => w(Z, () => (...ne) => {
  let ie = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const oe of ne)
    if (oe != null)
      if (oe[l]) {
        ie.type == null && (ie.type = oe[l].type);
        for (const ce of oe[l].composers)
          ie.composers.add(ce);
      } else
        oe.constructor !== Object || oe.$$typeof ? ie.type == null && (ie.type = oe) : ie.composers.add(C(oe, Z));
  return ie.type == null && (ie.type = "span"), ie.composers.size || ie.composers.add(["PJLV", {}, [], [], {}, []]), P(Z, ie, ee);
}), C = ({ variants: Z, compoundVariants: ee, defaultVariants: ne, ...ie }, oe) => {
  const ce = `${S(oe.prefix)}c-${z(ie)}`, he = [], fe = [], xe = /* @__PURE__ */ Object.create(null), Ae = [];
  for (const ge in ne)
    xe[ge] = String(ne[ge]);
  if (typeof Z == "object" && Z)
    for (const ge in Z) {
      Ee = xe, ye = ge, c$1.call(Ee, ye) || (xe[ge] = "undefined");
      const me = Z[ge];
      for (const Ce in me) {
        const Ie = { [ge]: String(Ce) };
        String(Ce) === "undefined" && Ae.push(ge);
        const Oe = me[Ce], He = [Ie, Oe, !a(Oe)];
        he.push(He);
      }
    }
  var Ee, ye;
  if (typeof ee == "object" && ee)
    for (const ge of ee) {
      let { css: me, ...Ce } = ge;
      me = typeof me == "object" && me || {};
      for (const Oe in Ce)
        Ce[Oe] = String(Ce[Oe]);
      const Ie = [Ce, me, !a(me)];
      fe.push(Ie);
    }
  return [ce, ie, he, fe, xe, Ae];
}, P = (Z, ee, ne) => {
  const [ie, oe, ce, he] = L(ee.composers), fe = typeof ee.type == "function" || ee.type.$$typeof ? ((ye) => {
    function ge() {
      for (let me = 0; me < ge[T].length; me++) {
        const [Ce, Ie] = ge[T][me];
        ye.rules[Ce].apply(Ie);
      }
      return ge[T] = [], null;
    }
    return ge[T] = [], ge.rules = {}, W.forEach((me) => ge.rules[me] = { apply: (Ce) => ge[T].push([me, Ce]) }), ge;
  })(ne) : null, xe = (fe || ne).rules, Ae = `.${ie}${oe.length > 1 ? `:where(.${oe.slice(1).join(".")})` : ""}`, Ee = (ye) => {
    ye = typeof ye == "object" && ye || A;
    const { css: ge, ...me } = ye, Ce = {};
    for (const He in ce)
      if (delete me[He], He in ye) {
        let Ne = ye[He];
        typeof Ne == "object" && Ne ? Ce[He] = { "@initial": ce[He], ...Ne } : (Ne = String(Ne), Ce[He] = Ne !== "undefined" || he.has(He) ? Ne : ce[He]);
      } else
        Ce[He] = ce[He];
    const Ie = /* @__PURE__ */ new Set([...oe]);
    for (const [He, Ne, Pe, Fe] of ee.composers) {
      ne.rules.styled.cache.has(He) || (ne.rules.styled.cache.add(He), $(Ne, [`.${He}`], [], Z, (rt) => {
        xe.styled.apply(rt);
      }));
      const Le = O(Pe, Ce, Z.media), We = O(Fe, Ce, Z.media, !0);
      for (const rt of Le)
        if (rt !== void 0)
          for (const [gt, kt, Ke] of rt) {
            const ht = `${He}-${z(kt)}-${gt}`;
            Ie.add(ht);
            const Nt = (Ke ? ne.rules.resonevar : ne.rules.onevar).cache, Ft = Ke ? xe.resonevar : xe.onevar;
            Nt.has(ht) || (Nt.add(ht), $(kt, [`.${ht}`], [], Z, (At) => {
              Ft.apply(At);
            }));
          }
      for (const rt of We)
        if (rt !== void 0)
          for (const [gt, kt] of rt) {
            const Ke = `${He}-${z(kt)}-${gt}`;
            Ie.add(Ke), ne.rules.allvar.cache.has(Ke) || (ne.rules.allvar.cache.add(Ke), $(kt, [`.${Ke}`], [], Z, (ht) => {
              xe.allvar.apply(ht);
            }));
          }
    }
    if (typeof ge == "object" && ge) {
      const He = `${ie}-i${z(ge)}-css`;
      Ie.add(He), ne.rules.inline.cache.has(He) || (ne.rules.inline.cache.add(He), $(ge, [`.${He}`], [], Z, (Ne) => {
        xe.inline.apply(Ne);
      }));
    }
    for (const He of String(ye.className || "").trim().split(/\s+/))
      He && Ie.add(He);
    const Oe = me.className = [...Ie].join(" ");
    return { type: ee.type, className: Oe, selector: Ae, props: me, toString: () => Oe, deferredInjector: fe };
  };
  return s(Ee, { className: ie, selector: Ae, [l]: ee, toString: () => (ne.rules.styled.cache.has(ie) || Ee(), ie) });
}, L = (Z) => {
  let ee = "";
  const ne = [], ie = {}, oe = [];
  for (const [ce, , , , he, fe] of Z) {
    ee === "" && (ee = ce), ne.push(ce), oe.push(...fe);
    for (const xe in he) {
      const Ae = he[xe];
      (ie[xe] === void 0 || Ae !== "undefined" || fe.includes(Ae)) && (ie[xe] = Ae);
    }
  }
  return [ee, ne, ie, new Set(oe)];
}, O = (Z, ee, ne, ie) => {
  const oe = [];
  e:
    for (let [ce, he, fe] of Z) {
      if (fe)
        continue;
      let xe, Ae = 0, Ee = !1;
      for (xe in ce) {
        const ye = ce[xe];
        let ge = ee[xe];
        if (ge !== ye) {
          if (typeof ge != "object" || !ge)
            continue e;
          {
            let me, Ce, Ie = 0;
            for (const Oe in ge) {
              if (ye === String(ge[Oe])) {
                if (Oe !== "@initial") {
                  const He = Oe.slice(1);
                  (Ce = Ce || []).push(He in ne ? ne[He] : Oe.replace(/^@media ?/, "")), Ee = !0;
                }
                Ae += Ie, me = !0;
              }
              ++Ie;
            }
            if (Ce && Ce.length && (he = { ["@media " + Ce.join(", ")]: he }), !me)
              continue e;
          }
        }
      }
      (oe[Ae] = oe[Ae] || []).push([ie ? "cv" : `${xe}-${ce[xe]}`, he, Ee]);
    }
  return oe;
}, A = {}, N = o(), D = (Z, ee) => N(Z, () => (...ne) => {
  const ie = () => {
    for (let oe of ne) {
      oe = typeof oe == "object" && oe || {};
      let ce = z(oe);
      if (!ee.rules.global.cache.has(ce)) {
        if (ee.rules.global.cache.add(ce), "@import" in oe) {
          let he = [].indexOf.call(ee.sheet.cssRules, ee.rules.themed.group) - 1;
          for (let fe of [].concat(oe["@import"]))
            fe = fe.includes('"') || fe.includes("'") ? fe : `"${fe}"`, ee.sheet.insertRule(`@import ${fe};`, he++);
          delete oe["@import"];
        }
        $(oe, [], [], Z, (he) => {
          ee.rules.global.apply(he);
        });
      }
    }
    return "";
  };
  return s(ie, { toString: ie });
}), H = o(), V = (Z, ee) => H(Z, () => (ne) => {
  const ie = `${S(Z.prefix)}k-${z(ne)}`, oe = () => {
    if (!ee.rules.global.cache.has(ie)) {
      ee.rules.global.cache.add(ie);
      const ce = [];
      $(ne, [], [], Z, (fe) => ce.push(fe));
      const he = `@keyframes ${ie}{${ce.join("")}}`;
      ee.rules.global.apply(he);
    }
    return ie;
  };
  return s(oe, { get name() {
    return oe();
  }, toString: oe });
}), G = class {
  constructor(Z, ee, ne, ie) {
    this.token = Z == null ? "" : String(Z), this.value = ee == null ? "" : String(ee), this.scale = ne == null ? "" : String(ne), this.prefix = ie == null ? "" : String(ie);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
}, F = o(), J = (Z, ee) => F(Z, () => (ne, ie) => {
  ie = typeof ne == "object" && ne || Object(ie);
  const oe = `.${ne = (ne = typeof ne == "string" ? ne : "") || `${S(Z.prefix)}t-${z(ie)}`}`, ce = {}, he = [];
  for (const xe in ie) {
    ce[xe] = {};
    for (const Ae in ie[xe]) {
      const Ee = `--${S(Z.prefix)}${xe}-${Ae}`, ye = k(String(ie[xe][Ae]), Z.prefix, xe);
      ce[xe][Ae] = new G(Ae, ye, xe, Z.prefix), he.push(`${Ee}:${ye}`);
    }
  }
  const fe = () => {
    if (he.length && !ee.rules.themed.cache.has(ne)) {
      ee.rules.themed.cache.add(ne);
      const xe = `${ie === Z.theme ? ":root," : ""}.${ne}{${he.join(";")}}`;
      ee.rules.themed.apply(xe);
    }
    return ne;
  };
  return { ...ce, get className() {
    return fe();
  }, selector: oe, toString: fe };
}), U = o(), X, Y = o(), q = (Z) => {
  const ee = ((ne) => {
    let ie = !1;
    const oe = U(ne, (ce) => {
      ie = !0;
      const he = "prefix" in (ce = typeof ce == "object" && ce || {}) ? String(ce.prefix) : "", fe = typeof ce.media == "object" && ce.media || {}, xe = typeof ce.root == "object" ? ce.root || null : globalThis.document || null, Ae = typeof ce.theme == "object" && ce.theme || {}, Ee = { prefix: he, media: fe, theme: Ae, themeMap: typeof ce.themeMap == "object" && ce.themeMap || { ...n }, utils: typeof ce.utils == "object" && ce.utils || {} }, ye = E(xe), ge = { css: M(Ee, ye), globalCss: D(Ee, ye), keyframes: V(Ee, ye), createTheme: J(Ee, ye), reset() {
        ye.reset(), ge.theme.toString();
      }, theme: {}, sheet: ye, config: Ee, prefix: he, getCssText: ye.toString, toString: ye.toString };
      return String(ge.theme = ge.createTheme(Ae)), ge;
    });
    return ie || oe.reset(), oe;
  })(Z);
  return ee.styled = (({ config: ne, sheet: ie }) => Y(ne, () => {
    const oe = M(ne, ie);
    return (...ce) => {
      const he = oe(...ce), fe = he[l].type, xe = React__default.forwardRef((Ae, Ee) => {
        const ye = Ae && Ae.as || fe, { props: ge, deferredInjector: me } = he(Ae);
        return delete ge.as, ge.ref = Ee, me ? React__default.createElement(React__default.Fragment, null, React__default.createElement(ye, ge), React__default.createElement(me, null)) : React__default.createElement(ye, ge);
      });
      return xe.className = he.className, xe.displayName = `Styled.${fe.displayName || fe.name || fe}`, xe.selector = he.selector, xe.toString = () => he.selector, xe[l] = he[l], xe;
    };
  }))(ee), ee;
}, K = () => X || (X = q()), re = (...Z) => K().styled(...Z);
globalThis && globalThis.__awaiter;
globalThis && globalThis.__generator;
re("button", {
  border: "none",
  background: "linear-gradient(93.07deg, #FFD719 0.61%, #F754D4 33.98%, #1FD1EC 65.84%, #48FA6B 97.7%)",
  padding: "2px",
  borderRadius: "10px",
  cursor: "pointer",
  transition: "transform 0.3s",
  "&:hover": {
    transform: "scale(1.03)"
  },
  "& > div": {
    display: "flex",
    flexDirection: "row",
    alignItems: "center",
    background: "white",
    padding: "5px 12px",
    borderRadius: "10px",
    fontSize: "16px",
    fontWeight: 600
  },
  "& .dark": {
    background: "#111827",
    color: "white"
  },
  "& img": {
    marginRight: "9px"
  },
  variants: {
    dark: {
      true: {
        "& > div": {
          background: "#111827",
          color: "white"
        }
      }
    }
  }
});
globalThis && globalThis.__awaiter;
globalThis && globalThis.__generator;
const tradeBoxNum = 6, inventoryBoxNum = 45, pageBoxNum = 18, itemTypes = {
  LAYER1: "layer1"
};
var dist = {}, registries = {}, nfts_registry = {}, axios$2 = { exports: {} }, axios$1 = { exports: {} }, bind$2 = function Z(ee, ne) {
  return function() {
    for (var oe = new Array(arguments.length), ce = 0; ce < oe.length; ce++)
      oe[ce] = arguments[ce];
    return ee.apply(ne, oe);
  };
}, bind$1 = bind$2, toString = Object.prototype.toString;
function isArray$1(Z) {
  return toString.call(Z) === "[object Array]";
}
function isUndefined(Z) {
  return typeof Z > "u";
}
function isBuffer(Z) {
  return Z !== null && !isUndefined(Z) && Z.constructor !== null && !isUndefined(Z.constructor) && typeof Z.constructor.isBuffer == "function" && Z.constructor.isBuffer(Z);
}
function isArrayBuffer(Z) {
  return toString.call(Z) === "[object ArrayBuffer]";
}
function isFormData(Z) {
  return typeof FormData < "u" && Z instanceof FormData;
}
function isArrayBufferView(Z) {
  var ee;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ee = ArrayBuffer.isView(Z) : ee = Z && Z.buffer && Z.buffer instanceof ArrayBuffer, ee;
}
function isString(Z) {
  return typeof Z == "string";
}
function isNumber(Z) {
  return typeof Z == "number";
}
function isObject(Z) {
  return Z !== null && typeof Z == "object";
}
function isPlainObject$2(Z) {
  if (toString.call(Z) !== "[object Object]")
    return !1;
  var ee = Object.getPrototypeOf(Z);
  return ee === null || ee === Object.prototype;
}
function isDate(Z) {
  return toString.call(Z) === "[object Date]";
}
function isFile(Z) {
  return toString.call(Z) === "[object File]";
}
function isBlob(Z) {
  return toString.call(Z) === "[object Blob]";
}
function isFunction$1(Z) {
  return toString.call(Z) === "[object Function]";
}
function isStream(Z) {
  return isObject(Z) && isFunction$1(Z.pipe);
}
function isURLSearchParams(Z) {
  return typeof URLSearchParams < "u" && Z instanceof URLSearchParams;
}
function trim(Z) {
  return Z.trim ? Z.trim() : Z.replace(/^\s+|\s+$/g, "");
}
function isStandardBrowserEnv() {
  return typeof navigator < "u" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS") ? !1 : typeof window < "u" && typeof document < "u";
}
function forEach(Z, ee) {
  if (!(Z === null || typeof Z > "u"))
    if (typeof Z != "object" && (Z = [Z]), isArray$1(Z))
      for (var ne = 0, ie = Z.length; ne < ie; ne++)
        ee.call(null, Z[ne], ne, Z);
    else
      for (var oe in Z)
        Object.prototype.hasOwnProperty.call(Z, oe) && ee.call(null, Z[oe], oe, Z);
}
function merge$1() {
  var Z = {};
  function ee(oe, ce) {
    isPlainObject$2(Z[ce]) && isPlainObject$2(oe) ? Z[ce] = merge$1(Z[ce], oe) : isPlainObject$2(oe) ? Z[ce] = merge$1({}, oe) : isArray$1(oe) ? Z[ce] = oe.slice() : Z[ce] = oe;
  }
  for (var ne = 0, ie = arguments.length; ne < ie; ne++)
    forEach(arguments[ne], ee);
  return Z;
}
function extend(Z, ee, ne) {
  return forEach(ee, function(oe, ce) {
    ne && typeof oe == "function" ? Z[ce] = bind$1(oe, ne) : Z[ce] = oe;
  }), Z;
}
function stripBOM(Z) {
  return Z.charCodeAt(0) === 65279 && (Z = Z.slice(1)), Z;
}
var utils$c = {
  isArray: isArray$1,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isObject,
  isPlainObject: isPlainObject$2,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isFunction: isFunction$1,
  isStream,
  isURLSearchParams,
  isStandardBrowserEnv,
  forEach,
  merge: merge$1,
  extend,
  trim,
  stripBOM
}, utils$b = utils$c;
function encode$3(Z) {
  return encodeURIComponent(Z).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
var buildURL$1 = function Z(ee, ne, ie) {
  if (!ne)
    return ee;
  var oe;
  if (ie)
    oe = ie(ne);
  else if (utils$b.isURLSearchParams(ne))
    oe = ne.toString();
  else {
    var ce = [];
    utils$b.forEach(ne, function(xe, Ae) {
      xe === null || typeof xe > "u" || (utils$b.isArray(xe) ? Ae = Ae + "[]" : xe = [xe], utils$b.forEach(xe, function(ye) {
        utils$b.isDate(ye) ? ye = ye.toISOString() : utils$b.isObject(ye) && (ye = JSON.stringify(ye)), ce.push(encode$3(Ae) + "=" + encode$3(ye));
      }));
    }), oe = ce.join("&");
  }
  if (oe) {
    var he = ee.indexOf("#");
    he !== -1 && (ee = ee.slice(0, he)), ee += (ee.indexOf("?") === -1 ? "?" : "&") + oe;
  }
  return ee;
}, utils$a = utils$c;
function InterceptorManager$1() {
  this.handlers = [];
}
InterceptorManager$1.prototype.use = function Z(ee, ne, ie) {
  return this.handlers.push({
    fulfilled: ee,
    rejected: ne,
    synchronous: ie ? ie.synchronous : !1,
    runWhen: ie ? ie.runWhen : null
  }), this.handlers.length - 1;
};
InterceptorManager$1.prototype.eject = function Z(ee) {
  this.handlers[ee] && (this.handlers[ee] = null);
};
InterceptorManager$1.prototype.forEach = function Z(ee) {
  utils$a.forEach(this.handlers, function(ie) {
    ie !== null && ee(ie);
  });
};
var InterceptorManager_1 = InterceptorManager$1, utils$9 = utils$c, normalizeHeaderName = function Z(ee, ne) {
  utils$9.forEach(ee, function(oe, ce) {
    ce !== ne && ce.toUpperCase() === ne.toUpperCase() && (ee[ne] = oe, delete ee[ce]);
  });
}, enhanceError = function Z(ee, ne, ie, oe, ce) {
  return ee.config = ne, ie && (ee.code = ie), ee.request = oe, ee.response = ce, ee.isAxiosError = !0, ee.toJSON = function() {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }, ee;
}, createError, hasRequiredCreateError;
function requireCreateError() {
  if (hasRequiredCreateError)
    return createError;
  hasRequiredCreateError = 1;
  var Z = enhanceError;
  return createError = function(ne, ie, oe, ce, he) {
    var fe = new Error(ne);
    return Z(fe, ie, oe, ce, he);
  }, createError;
}
var settle, hasRequiredSettle;
function requireSettle() {
  if (hasRequiredSettle)
    return settle;
  hasRequiredSettle = 1;
  var Z = requireCreateError();
  return settle = function(ne, ie, oe) {
    var ce = oe.config.validateStatus;
    !oe.status || !ce || ce(oe.status) ? ne(oe) : ie(Z(
      "Request failed with status code " + oe.status,
      oe.config,
      null,
      oe.request,
      oe
    ));
  }, settle;
}
var cookies, hasRequiredCookies;
function requireCookies() {
  if (hasRequiredCookies)
    return cookies;
  hasRequiredCookies = 1;
  var Z = utils$c;
  return cookies = Z.isStandardBrowserEnv() ? function() {
    return {
      write: function(ie, oe, ce, he, fe, xe) {
        var Ae = [];
        Ae.push(ie + "=" + encodeURIComponent(oe)), Z.isNumber(ce) && Ae.push("expires=" + new Date(ce).toGMTString()), Z.isString(he) && Ae.push("path=" + he), Z.isString(fe) && Ae.push("domain=" + fe), xe === !0 && Ae.push("secure"), document.cookie = Ae.join("; ");
      },
      read: function(ie) {
        var oe = document.cookie.match(new RegExp("(^|;\\s*)(" + ie + ")=([^;]*)"));
        return oe ? decodeURIComponent(oe[3]) : null;
      },
      remove: function(ie) {
        this.write(ie, "", Date.now() - 864e5);
      }
    };
  }() : function() {
    return {
      write: function() {
      },
      read: function() {
        return null;
      },
      remove: function() {
      }
    };
  }(), cookies;
}
var isAbsoluteURL, hasRequiredIsAbsoluteURL;
function requireIsAbsoluteURL() {
  return hasRequiredIsAbsoluteURL || (hasRequiredIsAbsoluteURL = 1, isAbsoluteURL = function(ee) {
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(ee);
  }), isAbsoluteURL;
}
var combineURLs, hasRequiredCombineURLs;
function requireCombineURLs() {
  return hasRequiredCombineURLs || (hasRequiredCombineURLs = 1, combineURLs = function(ee, ne) {
    return ne ? ee.replace(/\/+$/, "") + "/" + ne.replace(/^\/+/, "") : ee;
  }), combineURLs;
}
var buildFullPath, hasRequiredBuildFullPath;
function requireBuildFullPath() {
  if (hasRequiredBuildFullPath)
    return buildFullPath;
  hasRequiredBuildFullPath = 1;
  var Z = requireIsAbsoluteURL(), ee = requireCombineURLs();
  return buildFullPath = function(ie, oe) {
    return ie && !Z(oe) ? ee(ie, oe) : oe;
  }, buildFullPath;
}
var parseHeaders, hasRequiredParseHeaders;
function requireParseHeaders() {
  if (hasRequiredParseHeaders)
    return parseHeaders;
  hasRequiredParseHeaders = 1;
  var Z = utils$c, ee = [
    "age",
    "authorization",
    "content-length",
    "content-type",
    "etag",
    "expires",
    "from",
    "host",
    "if-modified-since",
    "if-unmodified-since",
    "last-modified",
    "location",
    "max-forwards",
    "proxy-authorization",
    "referer",
    "retry-after",
    "user-agent"
  ];
  return parseHeaders = function(ie) {
    var oe = {}, ce, he, fe;
    return ie && Z.forEach(ie.split(`
`), function(Ae) {
      if (fe = Ae.indexOf(":"), ce = Z.trim(Ae.substr(0, fe)).toLowerCase(), he = Z.trim(Ae.substr(fe + 1)), ce) {
        if (oe[ce] && ee.indexOf(ce) >= 0)
          return;
        ce === "set-cookie" ? oe[ce] = (oe[ce] ? oe[ce] : []).concat([he]) : oe[ce] = oe[ce] ? oe[ce] + ", " + he : he;
      }
    }), oe;
  }, parseHeaders;
}
var isURLSameOrigin, hasRequiredIsURLSameOrigin;
function requireIsURLSameOrigin() {
  if (hasRequiredIsURLSameOrigin)
    return isURLSameOrigin;
  hasRequiredIsURLSameOrigin = 1;
  var Z = utils$c;
  return isURLSameOrigin = Z.isStandardBrowserEnv() ? function() {
    var ne = /(msie|trident)/i.test(navigator.userAgent), ie = document.createElement("a"), oe;
    function ce(he) {
      var fe = he;
      return ne && (ie.setAttribute("href", fe), fe = ie.href), ie.setAttribute("href", fe), {
        href: ie.href,
        protocol: ie.protocol ? ie.protocol.replace(/:$/, "") : "",
        host: ie.host,
        search: ie.search ? ie.search.replace(/^\?/, "") : "",
        hash: ie.hash ? ie.hash.replace(/^#/, "") : "",
        hostname: ie.hostname,
        port: ie.port,
        pathname: ie.pathname.charAt(0) === "/" ? ie.pathname : "/" + ie.pathname
      };
    }
    return oe = ce(window.location.href), function(fe) {
      var xe = Z.isString(fe) ? ce(fe) : fe;
      return xe.protocol === oe.protocol && xe.host === oe.host;
    };
  }() : function() {
    return function() {
      return !0;
    };
  }(), isURLSameOrigin;
}
var Cancel_1, hasRequiredCancel;
function requireCancel() {
  if (hasRequiredCancel)
    return Cancel_1;
  hasRequiredCancel = 1;
  function Z(ee) {
    this.message = ee;
  }
  return Z.prototype.toString = function() {
    return "Cancel" + (this.message ? ": " + this.message : "");
  }, Z.prototype.__CANCEL__ = !0, Cancel_1 = Z, Cancel_1;
}
var xhr, hasRequiredXhr;
function requireXhr() {
  if (hasRequiredXhr)
    return xhr;
  hasRequiredXhr = 1;
  var Z = utils$c, ee = requireSettle(), ne = requireCookies(), ie = buildURL$1, oe = requireBuildFullPath(), ce = requireParseHeaders(), he = requireIsURLSameOrigin(), fe = requireCreateError(), xe = requireDefaults(), Ae = requireCancel();
  return xhr = function(ye) {
    return new Promise(function(me, Ce) {
      var Ie = ye.data, Oe = ye.headers, He = ye.responseType, Ne;
      function Pe() {
        ye.cancelToken && ye.cancelToken.unsubscribe(Ne), ye.signal && ye.signal.removeEventListener("abort", Ne);
      }
      Z.isFormData(Ie) && delete Oe["Content-Type"];
      var Fe = new XMLHttpRequest();
      if (ye.auth) {
        var Le = ye.auth.username || "", We = ye.auth.password ? unescape(encodeURIComponent(ye.auth.password)) : "";
        Oe.Authorization = "Basic " + btoa(Le + ":" + We);
      }
      var rt = oe(ye.baseURL, ye.url);
      Fe.open(ye.method.toUpperCase(), ie(rt, ye.params, ye.paramsSerializer), !0), Fe.timeout = ye.timeout;
      function gt() {
        if (!!Fe) {
          var Ke = "getAllResponseHeaders" in Fe ? ce(Fe.getAllResponseHeaders()) : null, ht = !He || He === "text" || He === "json" ? Fe.responseText : Fe.response, Nt = {
            data: ht,
            status: Fe.status,
            statusText: Fe.statusText,
            headers: Ke,
            config: ye,
            request: Fe
          };
          ee(function(At) {
            me(At), Pe();
          }, function(At) {
            Ce(At), Pe();
          }, Nt), Fe = null;
        }
      }
      if ("onloadend" in Fe ? Fe.onloadend = gt : Fe.onreadystatechange = function() {
        !Fe || Fe.readyState !== 4 || Fe.status === 0 && !(Fe.responseURL && Fe.responseURL.indexOf("file:") === 0) || setTimeout(gt);
      }, Fe.onabort = function() {
        !Fe || (Ce(fe("Request aborted", ye, "ECONNABORTED", Fe)), Fe = null);
      }, Fe.onerror = function() {
        Ce(fe("Network Error", ye, null, Fe)), Fe = null;
      }, Fe.ontimeout = function() {
        var ht = ye.timeout ? "timeout of " + ye.timeout + "ms exceeded" : "timeout exceeded", Nt = ye.transitional || xe.transitional;
        ye.timeoutErrorMessage && (ht = ye.timeoutErrorMessage), Ce(fe(
          ht,
          ye,
          Nt.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED",
          Fe
        )), Fe = null;
      }, Z.isStandardBrowserEnv()) {
        var kt = (ye.withCredentials || he(rt)) && ye.xsrfCookieName ? ne.read(ye.xsrfCookieName) : void 0;
        kt && (Oe[ye.xsrfHeaderName] = kt);
      }
      "setRequestHeader" in Fe && Z.forEach(Oe, function(ht, Nt) {
        typeof Ie > "u" && Nt.toLowerCase() === "content-type" ? delete Oe[Nt] : Fe.setRequestHeader(Nt, ht);
      }), Z.isUndefined(ye.withCredentials) || (Fe.withCredentials = !!ye.withCredentials), He && He !== "json" && (Fe.responseType = ye.responseType), typeof ye.onDownloadProgress == "function" && Fe.addEventListener("progress", ye.onDownloadProgress), typeof ye.onUploadProgress == "function" && Fe.upload && Fe.upload.addEventListener("progress", ye.onUploadProgress), (ye.cancelToken || ye.signal) && (Ne = function(Ke) {
        !Fe || (Ce(!Ke || Ke && Ke.type ? new Ae("canceled") : Ke), Fe.abort(), Fe = null);
      }, ye.cancelToken && ye.cancelToken.subscribe(Ne), ye.signal && (ye.signal.aborted ? Ne() : ye.signal.addEventListener("abort", Ne))), Ie || (Ie = null), Fe.send(Ie);
    });
  }, xhr;
}
var defaults_1, hasRequiredDefaults;
function requireDefaults() {
  if (hasRequiredDefaults)
    return defaults_1;
  hasRequiredDefaults = 1;
  var Z = utils$c, ee = normalizeHeaderName, ne = enhanceError, ie = {
    "Content-Type": "application/x-www-form-urlencoded"
  };
  function oe(xe, Ae) {
    !Z.isUndefined(xe) && Z.isUndefined(xe["Content-Type"]) && (xe["Content-Type"] = Ae);
  }
  function ce() {
    var xe;
    return (typeof XMLHttpRequest < "u" || typeof process < "u" && Object.prototype.toString.call(process) === "[object process]") && (xe = requireXhr()), xe;
  }
  function he(xe, Ae, Ee) {
    if (Z.isString(xe))
      try {
        return (Ae || JSON.parse)(xe), Z.trim(xe);
      } catch (ye) {
        if (ye.name !== "SyntaxError")
          throw ye;
      }
    return (Ee || JSON.stringify)(xe);
  }
  var fe = {
    transitional: {
      silentJSONParsing: !0,
      forcedJSONParsing: !0,
      clarifyTimeoutError: !1
    },
    adapter: ce(),
    transformRequest: [function(Ae, Ee) {
      return ee(Ee, "Accept"), ee(Ee, "Content-Type"), Z.isFormData(Ae) || Z.isArrayBuffer(Ae) || Z.isBuffer(Ae) || Z.isStream(Ae) || Z.isFile(Ae) || Z.isBlob(Ae) ? Ae : Z.isArrayBufferView(Ae) ? Ae.buffer : Z.isURLSearchParams(Ae) ? (oe(Ee, "application/x-www-form-urlencoded;charset=utf-8"), Ae.toString()) : Z.isObject(Ae) || Ee && Ee["Content-Type"] === "application/json" ? (oe(Ee, "application/json"), he(Ae)) : Ae;
    }],
    transformResponse: [function(Ae) {
      var Ee = this.transitional || fe.transitional, ye = Ee && Ee.silentJSONParsing, ge = Ee && Ee.forcedJSONParsing, me = !ye && this.responseType === "json";
      if (me || ge && Z.isString(Ae) && Ae.length)
        try {
          return JSON.parse(Ae);
        } catch (Ce) {
          if (me)
            throw Ce.name === "SyntaxError" ? ne(Ce, this, "E_JSON_PARSE") : Ce;
        }
      return Ae;
    }],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: function(Ae) {
      return Ae >= 200 && Ae < 300;
    },
    headers: {
      common: {
        Accept: "application/json, text/plain, */*"
      }
    }
  };
  return Z.forEach(["delete", "get", "head"], function(Ae) {
    fe.headers[Ae] = {};
  }), Z.forEach(["post", "put", "patch"], function(Ae) {
    fe.headers[Ae] = Z.merge(ie);
  }), defaults_1 = fe, defaults_1;
}
var utils$8 = utils$c, defaults$2 = requireDefaults(), transformData$1 = function Z(ee, ne, ie) {
  var oe = this || defaults$2;
  return utils$8.forEach(ie, function(he) {
    ee = he.call(oe, ee, ne);
  }), ee;
}, isCancel$1, hasRequiredIsCancel;
function requireIsCancel() {
  return hasRequiredIsCancel || (hasRequiredIsCancel = 1, isCancel$1 = function(ee) {
    return !!(ee && ee.__CANCEL__);
  }), isCancel$1;
}
var utils$7 = utils$c, transformData = transformData$1, isCancel = requireIsCancel(), defaults$1 = requireDefaults(), Cancel = requireCancel();
function throwIfCancellationRequested(Z) {
  if (Z.cancelToken && Z.cancelToken.throwIfRequested(), Z.signal && Z.signal.aborted)
    throw new Cancel("canceled");
}
var dispatchRequest$1 = function Z(ee) {
  throwIfCancellationRequested(ee), ee.headers = ee.headers || {}, ee.data = transformData.call(
    ee,
    ee.data,
    ee.headers,
    ee.transformRequest
  ), ee.headers = utils$7.merge(
    ee.headers.common || {},
    ee.headers[ee.method] || {},
    ee.headers
  ), utils$7.forEach(
    ["delete", "get", "head", "post", "put", "patch", "common"],
    function(oe) {
      delete ee.headers[oe];
    }
  );
  var ne = ee.adapter || defaults$1.adapter;
  return ne(ee).then(function(oe) {
    return throwIfCancellationRequested(ee), oe.data = transformData.call(
      ee,
      oe.data,
      oe.headers,
      ee.transformResponse
    ), oe;
  }, function(oe) {
    return isCancel(oe) || (throwIfCancellationRequested(ee), oe && oe.response && (oe.response.data = transformData.call(
      ee,
      oe.response.data,
      oe.response.headers,
      ee.transformResponse
    ))), Promise.reject(oe);
  });
}, utils$6 = utils$c, mergeConfig$2 = function Z(ee, ne) {
  ne = ne || {};
  var ie = {};
  function oe(Ee, ye) {
    return utils$6.isPlainObject(Ee) && utils$6.isPlainObject(ye) ? utils$6.merge(Ee, ye) : utils$6.isPlainObject(ye) ? utils$6.merge({}, ye) : utils$6.isArray(ye) ? ye.slice() : ye;
  }
  function ce(Ee) {
    if (utils$6.isUndefined(ne[Ee])) {
      if (!utils$6.isUndefined(ee[Ee]))
        return oe(void 0, ee[Ee]);
    } else
      return oe(ee[Ee], ne[Ee]);
  }
  function he(Ee) {
    if (!utils$6.isUndefined(ne[Ee]))
      return oe(void 0, ne[Ee]);
  }
  function fe(Ee) {
    if (utils$6.isUndefined(ne[Ee])) {
      if (!utils$6.isUndefined(ee[Ee]))
        return oe(void 0, ee[Ee]);
    } else
      return oe(void 0, ne[Ee]);
  }
  function xe(Ee) {
    if (Ee in ne)
      return oe(ee[Ee], ne[Ee]);
    if (Ee in ee)
      return oe(void 0, ee[Ee]);
  }
  var Ae = {
    url: he,
    method: he,
    data: he,
    baseURL: fe,
    transformRequest: fe,
    transformResponse: fe,
    paramsSerializer: fe,
    timeout: fe,
    timeoutMessage: fe,
    withCredentials: fe,
    adapter: fe,
    responseType: fe,
    xsrfCookieName: fe,
    xsrfHeaderName: fe,
    onUploadProgress: fe,
    onDownloadProgress: fe,
    decompress: fe,
    maxContentLength: fe,
    maxBodyLength: fe,
    transport: fe,
    httpAgent: fe,
    httpsAgent: fe,
    cancelToken: fe,
    socketPath: fe,
    responseEncoding: fe,
    validateStatus: xe
  };
  return utils$6.forEach(Object.keys(ee).concat(Object.keys(ne)), function(ye) {
    var ge = Ae[ye] || ce, me = ge(ye);
    utils$6.isUndefined(me) && ge !== xe || (ie[ye] = me);
  }), ie;
}, data, hasRequiredData;
function requireData() {
  return hasRequiredData || (hasRequiredData = 1, data = {
    version: "0.24.0"
  }), data;
}
var VERSION = requireData().version, validators$1 = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach(function(Z, ee) {
  validators$1[Z] = function(ie) {
    return typeof ie === Z || "a" + (ee < 1 ? "n " : " ") + Z;
  };
});
var deprecatedWarnings = {};
validators$1.transitional = function Z(ee, ne, ie) {
  function oe(ce, he) {
    return "[Axios v" + VERSION + "] Transitional option '" + ce + "'" + he + (ie ? ". " + ie : "");
  }
  return function(ce, he, fe) {
    if (ee === !1)
      throw new Error(oe(he, " has been removed" + (ne ? " in " + ne : "")));
    return ne && !deprecatedWarnings[he] && (deprecatedWarnings[he] = !0, console.warn(
      oe(
        he,
        " has been deprecated since v" + ne + " and will be removed in the near future"
      )
    )), ee ? ee(ce, he, fe) : !0;
  };
};
function assertOptions(Z, ee, ne) {
  if (typeof Z != "object")
    throw new TypeError("options must be an object");
  for (var ie = Object.keys(Z), oe = ie.length; oe-- > 0; ) {
    var ce = ie[oe], he = ee[ce];
    if (he) {
      var fe = Z[ce], xe = fe === void 0 || he(fe, ce, Z);
      if (xe !== !0)
        throw new TypeError("option " + ce + " must be " + xe);
      continue;
    }
    if (ne !== !0)
      throw Error("Unknown option " + ce);
  }
}
var validator$1 = {
  assertOptions,
  validators: validators$1
}, utils$5 = utils$c, buildURL = buildURL$1, InterceptorManager = InterceptorManager_1, dispatchRequest = dispatchRequest$1, mergeConfig$1 = mergeConfig$2, validator = validator$1, validators = validator.validators;
function Axios$1(Z) {
  this.defaults = Z, this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}
Axios$1.prototype.request = function Z(ee) {
  typeof ee == "string" ? (ee = arguments[1] || {}, ee.url = arguments[0]) : ee = ee || {}, ee = mergeConfig$1(this.defaults, ee), ee.method ? ee.method = ee.method.toLowerCase() : this.defaults.method ? ee.method = this.defaults.method.toLowerCase() : ee.method = "get";
  var ne = ee.transitional;
  ne !== void 0 && validator.assertOptions(ne, {
    silentJSONParsing: validators.transitional(validators.boolean),
    forcedJSONParsing: validators.transitional(validators.boolean),
    clarifyTimeoutError: validators.transitional(validators.boolean)
  }, !1);
  var ie = [], oe = !0;
  this.interceptors.request.forEach(function(ge) {
    typeof ge.runWhen == "function" && ge.runWhen(ee) === !1 || (oe = oe && ge.synchronous, ie.unshift(ge.fulfilled, ge.rejected));
  });
  var ce = [];
  this.interceptors.response.forEach(function(ge) {
    ce.push(ge.fulfilled, ge.rejected);
  });
  var he;
  if (!oe) {
    var fe = [dispatchRequest, void 0];
    for (Array.prototype.unshift.apply(fe, ie), fe = fe.concat(ce), he = Promise.resolve(ee); fe.length; )
      he = he.then(fe.shift(), fe.shift());
    return he;
  }
  for (var xe = ee; ie.length; ) {
    var Ae = ie.shift(), Ee = ie.shift();
    try {
      xe = Ae(xe);
    } catch (ye) {
      Ee(ye);
      break;
    }
  }
  try {
    he = dispatchRequest(xe);
  } catch (ye) {
    return Promise.reject(ye);
  }
  for (; ce.length; )
    he = he.then(ce.shift(), ce.shift());
  return he;
};
Axios$1.prototype.getUri = function Z(ee) {
  return ee = mergeConfig$1(this.defaults, ee), buildURL(ee.url, ee.params, ee.paramsSerializer).replace(/^\?/, "");
};
utils$5.forEach(["delete", "get", "head", "options"], function Z(ee) {
  Axios$1.prototype[ee] = function(ne, ie) {
    return this.request(mergeConfig$1(ie || {}, {
      method: ee,
      url: ne,
      data: (ie || {}).data
    }));
  };
});
utils$5.forEach(["post", "put", "patch"], function Z(ee) {
  Axios$1.prototype[ee] = function(ne, ie, oe) {
    return this.request(mergeConfig$1(oe || {}, {
      method: ee,
      url: ne,
      data: ie
    }));
  };
});
var Axios_1 = Axios$1, CancelToken_1, hasRequiredCancelToken;
function requireCancelToken() {
  if (hasRequiredCancelToken)
    return CancelToken_1;
  hasRequiredCancelToken = 1;
  var Z = requireCancel();
  function ee(ne) {
    if (typeof ne != "function")
      throw new TypeError("executor must be a function.");
    var ie;
    this.promise = new Promise(function(he) {
      ie = he;
    });
    var oe = this;
    this.promise.then(function(ce) {
      if (!!oe._listeners) {
        var he, fe = oe._listeners.length;
        for (he = 0; he < fe; he++)
          oe._listeners[he](ce);
        oe._listeners = null;
      }
    }), this.promise.then = function(ce) {
      var he, fe = new Promise(function(xe) {
        oe.subscribe(xe), he = xe;
      }).then(ce);
      return fe.cancel = function() {
        oe.unsubscribe(he);
      }, fe;
    }, ne(function(he) {
      oe.reason || (oe.reason = new Z(he), ie(oe.reason));
    });
  }
  return ee.prototype.throwIfRequested = function() {
    if (this.reason)
      throw this.reason;
  }, ee.prototype.subscribe = function(ie) {
    if (this.reason) {
      ie(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(ie) : this._listeners = [ie];
  }, ee.prototype.unsubscribe = function(ie) {
    if (!!this._listeners) {
      var oe = this._listeners.indexOf(ie);
      oe !== -1 && this._listeners.splice(oe, 1);
    }
  }, ee.source = function() {
    var ie, oe = new ee(function(he) {
      ie = he;
    });
    return {
      token: oe,
      cancel: ie
    };
  }, CancelToken_1 = ee, CancelToken_1;
}
var spread, hasRequiredSpread;
function requireSpread() {
  return hasRequiredSpread || (hasRequiredSpread = 1, spread = function(ee) {
    return function(ie) {
      return ee.apply(null, ie);
    };
  }), spread;
}
var isAxiosError, hasRequiredIsAxiosError;
function requireIsAxiosError() {
  return hasRequiredIsAxiosError || (hasRequiredIsAxiosError = 1, isAxiosError = function(ee) {
    return typeof ee == "object" && ee.isAxiosError === !0;
  }), isAxiosError;
}
var utils$4 = utils$c, bind = bind$2, Axios = Axios_1, mergeConfig = mergeConfig$2, defaults = requireDefaults();
function createInstance(Z) {
  var ee = new Axios(Z), ne = bind(Axios.prototype.request, ee);
  return utils$4.extend(ne, Axios.prototype, ee), utils$4.extend(ne, ee), ne.create = function(oe) {
    return createInstance(mergeConfig(Z, oe));
  }, ne;
}
var axios = createInstance(defaults);
axios.Axios = Axios;
axios.Cancel = requireCancel();
axios.CancelToken = requireCancelToken();
axios.isCancel = requireIsCancel();
axios.VERSION = requireData().version;
axios.all = function Z(ee) {
  return Promise.all(ee);
};
axios.spread = requireSpread();
axios.isAxiosError = requireIsAxiosError();
axios$1.exports = axios;
axios$1.exports.default = axios;
(function(Z) {
  Z.exports = axios$1.exports;
})(axios$2);
var buffer = {};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(Z) {
  const ee = base64Js, ne = ieee754$1, ie = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  Z.Buffer = fe, Z.SlowBuffer = Ne, Z.INSPECT_MAX_BYTES = 50;
  const oe = 2147483647;
  Z.kMaxLength = oe, fe.TYPED_ARRAY_SUPPORT = ce(), !fe.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function ce() {
    try {
      const Ue = new Uint8Array(1), Te = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(Te, Uint8Array.prototype), Object.setPrototypeOf(Ue, Te), Ue.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(fe.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (!!fe.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(fe.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (!!fe.isBuffer(this))
        return this.byteOffset;
    }
  });
  function he(Ue) {
    if (Ue > oe)
      throw new RangeError('The value "' + Ue + '" is invalid for option "size"');
    const Te = new Uint8Array(Ue);
    return Object.setPrototypeOf(Te, fe.prototype), Te;
  }
  function fe(Ue, Te, Re) {
    if (typeof Ue == "number") {
      if (typeof Te == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return ye(Ue);
    }
    return xe(Ue, Te, Re);
  }
  fe.poolSize = 8192;
  function xe(Ue, Te, Re) {
    if (typeof Ue == "string")
      return ge(Ue, Te);
    if (ArrayBuffer.isView(Ue))
      return Ce(Ue);
    if (Ue == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof Ue
      );
    if (at(Ue, ArrayBuffer) || Ue && at(Ue.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (at(Ue, SharedArrayBuffer) || Ue && at(Ue.buffer, SharedArrayBuffer)))
      return Ie(Ue, Te, Re);
    if (typeof Ue == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    const it = Ue.valueOf && Ue.valueOf();
    if (it != null && it !== Ue)
      return fe.from(it, Te, Re);
    const bt = Oe(Ue);
    if (bt)
      return bt;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof Ue[Symbol.toPrimitive] == "function")
      return fe.from(Ue[Symbol.toPrimitive]("string"), Te, Re);
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof Ue
    );
  }
  fe.from = function(Ue, Te, Re) {
    return xe(Ue, Te, Re);
  }, Object.setPrototypeOf(fe.prototype, Uint8Array.prototype), Object.setPrototypeOf(fe, Uint8Array);
  function Ae(Ue) {
    if (typeof Ue != "number")
      throw new TypeError('"size" argument must be of type number');
    if (Ue < 0)
      throw new RangeError('The value "' + Ue + '" is invalid for option "size"');
  }
  function Ee(Ue, Te, Re) {
    return Ae(Ue), Ue <= 0 ? he(Ue) : Te !== void 0 ? typeof Re == "string" ? he(Ue).fill(Te, Re) : he(Ue).fill(Te) : he(Ue);
  }
  fe.alloc = function(Ue, Te, Re) {
    return Ee(Ue, Te, Re);
  };
  function ye(Ue) {
    return Ae(Ue), he(Ue < 0 ? 0 : He(Ue) | 0);
  }
  fe.allocUnsafe = function(Ue) {
    return ye(Ue);
  }, fe.allocUnsafeSlow = function(Ue) {
    return ye(Ue);
  };
  function ge(Ue, Te) {
    if ((typeof Te != "string" || Te === "") && (Te = "utf8"), !fe.isEncoding(Te))
      throw new TypeError("Unknown encoding: " + Te);
    const Re = Pe(Ue, Te) | 0;
    let it = he(Re);
    const bt = it.write(Ue, Te);
    return bt !== Re && (it = it.slice(0, bt)), it;
  }
  function me(Ue) {
    const Te = Ue.length < 0 ? 0 : He(Ue.length) | 0, Re = he(Te);
    for (let it = 0; it < Te; it += 1)
      Re[it] = Ue[it] & 255;
    return Re;
  }
  function Ce(Ue) {
    if (at(Ue, Uint8Array)) {
      const Te = new Uint8Array(Ue);
      return Ie(Te.buffer, Te.byteOffset, Te.byteLength);
    }
    return me(Ue);
  }
  function Ie(Ue, Te, Re) {
    if (Te < 0 || Ue.byteLength < Te)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (Ue.byteLength < Te + (Re || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let it;
    return Te === void 0 && Re === void 0 ? it = new Uint8Array(Ue) : Re === void 0 ? it = new Uint8Array(Ue, Te) : it = new Uint8Array(Ue, Te, Re), Object.setPrototypeOf(it, fe.prototype), it;
  }
  function Oe(Ue) {
    if (fe.isBuffer(Ue)) {
      const Te = He(Ue.length) | 0, Re = he(Te);
      return Re.length === 0 || Ue.copy(Re, 0, 0, Te), Re;
    }
    if (Ue.length !== void 0)
      return typeof Ue.length != "number" || Tt(Ue.length) ? he(0) : me(Ue);
    if (Ue.type === "Buffer" && Array.isArray(Ue.data))
      return me(Ue.data);
  }
  function He(Ue) {
    if (Ue >= oe)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + oe.toString(16) + " bytes");
    return Ue | 0;
  }
  function Ne(Ue) {
    return +Ue != Ue && (Ue = 0), fe.alloc(+Ue);
  }
  fe.isBuffer = function(Te) {
    return Te != null && Te._isBuffer === !0 && Te !== fe.prototype;
  }, fe.compare = function(Te, Re) {
    if (at(Te, Uint8Array) && (Te = fe.from(Te, Te.offset, Te.byteLength)), at(Re, Uint8Array) && (Re = fe.from(Re, Re.offset, Re.byteLength)), !fe.isBuffer(Te) || !fe.isBuffer(Re))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (Te === Re)
      return 0;
    let it = Te.length, bt = Re.length;
    for (let Qt = 0, jt = Math.min(it, bt); Qt < jt; ++Qt)
      if (Te[Qt] !== Re[Qt]) {
        it = Te[Qt], bt = Re[Qt];
        break;
      }
    return it < bt ? -1 : bt < it ? 1 : 0;
  }, fe.isEncoding = function(Te) {
    switch (String(Te).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, fe.concat = function(Te, Re) {
    if (!Array.isArray(Te))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (Te.length === 0)
      return fe.alloc(0);
    let it;
    if (Re === void 0)
      for (Re = 0, it = 0; it < Te.length; ++it)
        Re += Te[it].length;
    const bt = fe.allocUnsafe(Re);
    let Qt = 0;
    for (it = 0; it < Te.length; ++it) {
      let jt = Te[it];
      if (at(jt, Uint8Array))
        Qt + jt.length > bt.length ? (fe.isBuffer(jt) || (jt = fe.from(jt)), jt.copy(bt, Qt)) : Uint8Array.prototype.set.call(
          bt,
          jt,
          Qt
        );
      else if (fe.isBuffer(jt))
        jt.copy(bt, Qt);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Qt += jt.length;
    }
    return bt;
  };
  function Pe(Ue, Te) {
    if (fe.isBuffer(Ue))
      return Ue.length;
    if (ArrayBuffer.isView(Ue) || at(Ue, ArrayBuffer))
      return Ue.byteLength;
    if (typeof Ue != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof Ue
      );
    const Re = Ue.length, it = arguments.length > 2 && arguments[2] === !0;
    if (!it && Re === 0)
      return 0;
    let bt = !1;
    for (; ; )
      switch (Te) {
        case "ascii":
        case "latin1":
        case "binary":
          return Re;
        case "utf8":
        case "utf-8":
          return Be(Ue).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Re * 2;
        case "hex":
          return Re >>> 1;
        case "base64":
          return Ve(Ue).length;
        default:
          if (bt)
            return it ? -1 : Be(Ue).length;
          Te = ("" + Te).toLowerCase(), bt = !0;
      }
  }
  fe.byteLength = Pe;
  function Fe(Ue, Te, Re) {
    let it = !1;
    if ((Te === void 0 || Te < 0) && (Te = 0), Te > this.length || ((Re === void 0 || Re > this.length) && (Re = this.length), Re <= 0) || (Re >>>= 0, Te >>>= 0, Re <= Te))
      return "";
    for (Ue || (Ue = "utf8"); ; )
      switch (Ue) {
        case "hex":
          return Zt(this, Te, Re);
        case "utf8":
        case "utf-8":
          return At(this, Te, Re);
        case "ascii":
          return Xt(this, Te, Re);
        case "latin1":
        case "binary":
          return Lt(this, Te, Re);
        case "base64":
          return Ft(this, Te, Re);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Gt(this, Te, Re);
        default:
          if (it)
            throw new TypeError("Unknown encoding: " + Ue);
          Ue = (Ue + "").toLowerCase(), it = !0;
      }
  }
  fe.prototype._isBuffer = !0;
  function Le(Ue, Te, Re) {
    const it = Ue[Te];
    Ue[Te] = Ue[Re], Ue[Re] = it;
  }
  fe.prototype.swap16 = function() {
    const Te = this.length;
    if (Te % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let Re = 0; Re < Te; Re += 2)
      Le(this, Re, Re + 1);
    return this;
  }, fe.prototype.swap32 = function() {
    const Te = this.length;
    if (Te % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let Re = 0; Re < Te; Re += 4)
      Le(this, Re, Re + 3), Le(this, Re + 1, Re + 2);
    return this;
  }, fe.prototype.swap64 = function() {
    const Te = this.length;
    if (Te % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let Re = 0; Re < Te; Re += 8)
      Le(this, Re, Re + 7), Le(this, Re + 1, Re + 6), Le(this, Re + 2, Re + 5), Le(this, Re + 3, Re + 4);
    return this;
  }, fe.prototype.toString = function() {
    const Te = this.length;
    return Te === 0 ? "" : arguments.length === 0 ? At(this, 0, Te) : Fe.apply(this, arguments);
  }, fe.prototype.toLocaleString = fe.prototype.toString, fe.prototype.equals = function(Te) {
    if (!fe.isBuffer(Te))
      throw new TypeError("Argument must be a Buffer");
    return this === Te ? !0 : fe.compare(this, Te) === 0;
  }, fe.prototype.inspect = function() {
    let Te = "";
    const Re = Z.INSPECT_MAX_BYTES;
    return Te = this.toString("hex", 0, Re).replace(/(.{2})/g, "$1 ").trim(), this.length > Re && (Te += " ... "), "<Buffer " + Te + ">";
  }, ie && (fe.prototype[ie] = fe.prototype.inspect), fe.prototype.compare = function(Te, Re, it, bt, Qt) {
    if (at(Te, Uint8Array) && (Te = fe.from(Te, Te.offset, Te.byteLength)), !fe.isBuffer(Te))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Te
      );
    if (Re === void 0 && (Re = 0), it === void 0 && (it = Te ? Te.length : 0), bt === void 0 && (bt = 0), Qt === void 0 && (Qt = this.length), Re < 0 || it > Te.length || bt < 0 || Qt > this.length)
      throw new RangeError("out of range index");
    if (bt >= Qt && Re >= it)
      return 0;
    if (bt >= Qt)
      return -1;
    if (Re >= it)
      return 1;
    if (Re >>>= 0, it >>>= 0, bt >>>= 0, Qt >>>= 0, this === Te)
      return 0;
    let jt = Qt - bt, yr = it - Re;
    const gr = Math.min(jt, yr), br = this.slice(bt, Qt), mr = Te.slice(Re, it);
    for (let _r = 0; _r < gr; ++_r)
      if (br[_r] !== mr[_r]) {
        jt = br[_r], yr = mr[_r];
        break;
      }
    return jt < yr ? -1 : yr < jt ? 1 : 0;
  };
  function We(Ue, Te, Re, it, bt) {
    if (Ue.length === 0)
      return -1;
    if (typeof Re == "string" ? (it = Re, Re = 0) : Re > 2147483647 ? Re = 2147483647 : Re < -2147483648 && (Re = -2147483648), Re = +Re, Tt(Re) && (Re = bt ? 0 : Ue.length - 1), Re < 0 && (Re = Ue.length + Re), Re >= Ue.length) {
      if (bt)
        return -1;
      Re = Ue.length - 1;
    } else if (Re < 0)
      if (bt)
        Re = 0;
      else
        return -1;
    if (typeof Te == "string" && (Te = fe.from(Te, it)), fe.isBuffer(Te))
      return Te.length === 0 ? -1 : rt(Ue, Te, Re, it, bt);
    if (typeof Te == "number")
      return Te = Te & 255, typeof Uint8Array.prototype.indexOf == "function" ? bt ? Uint8Array.prototype.indexOf.call(Ue, Te, Re) : Uint8Array.prototype.lastIndexOf.call(Ue, Te, Re) : rt(Ue, [Te], Re, it, bt);
    throw new TypeError("val must be string, number or Buffer");
  }
  function rt(Ue, Te, Re, it, bt) {
    let Qt = 1, jt = Ue.length, yr = Te.length;
    if (it !== void 0 && (it = String(it).toLowerCase(), it === "ucs2" || it === "ucs-2" || it === "utf16le" || it === "utf-16le")) {
      if (Ue.length < 2 || Te.length < 2)
        return -1;
      Qt = 2, jt /= 2, yr /= 2, Re /= 2;
    }
    function gr(mr, _r) {
      return Qt === 1 ? mr[_r] : mr.readUInt16BE(_r * Qt);
    }
    let br;
    if (bt) {
      let mr = -1;
      for (br = Re; br < jt; br++)
        if (gr(Ue, br) === gr(Te, mr === -1 ? 0 : br - mr)) {
          if (mr === -1 && (mr = br), br - mr + 1 === yr)
            return mr * Qt;
        } else
          mr !== -1 && (br -= br - mr), mr = -1;
    } else
      for (Re + yr > jt && (Re = jt - yr), br = Re; br >= 0; br--) {
        let mr = !0;
        for (let _r = 0; _r < yr; _r++)
          if (gr(Ue, br + _r) !== gr(Te, _r)) {
            mr = !1;
            break;
          }
        if (mr)
          return br;
      }
    return -1;
  }
  fe.prototype.includes = function(Te, Re, it) {
    return this.indexOf(Te, Re, it) !== -1;
  }, fe.prototype.indexOf = function(Te, Re, it) {
    return We(this, Te, Re, it, !0);
  }, fe.prototype.lastIndexOf = function(Te, Re, it) {
    return We(this, Te, Re, it, !1);
  };
  function gt(Ue, Te, Re, it) {
    Re = Number(Re) || 0;
    const bt = Ue.length - Re;
    it ? (it = Number(it), it > bt && (it = bt)) : it = bt;
    const Qt = Te.length;
    it > Qt / 2 && (it = Qt / 2);
    let jt;
    for (jt = 0; jt < it; ++jt) {
      const yr = parseInt(Te.substr(jt * 2, 2), 16);
      if (Tt(yr))
        return jt;
      Ue[Re + jt] = yr;
    }
    return jt;
  }
  function kt(Ue, Te, Re, it) {
    return Je(Be(Te, Ue.length - Re), Ue, Re, it);
  }
  function Ke(Ue, Te, Re, it) {
    return Je(be(Te), Ue, Re, it);
  }
  function ht(Ue, Te, Re, it) {
    return Je(Ve(Te), Ue, Re, it);
  }
  function Nt(Ue, Te, Re, it) {
    return Je(ke(Te, Ue.length - Re), Ue, Re, it);
  }
  fe.prototype.write = function(Te, Re, it, bt) {
    if (Re === void 0)
      bt = "utf8", it = this.length, Re = 0;
    else if (it === void 0 && typeof Re == "string")
      bt = Re, it = this.length, Re = 0;
    else if (isFinite(Re))
      Re = Re >>> 0, isFinite(it) ? (it = it >>> 0, bt === void 0 && (bt = "utf8")) : (bt = it, it = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    const Qt = this.length - Re;
    if ((it === void 0 || it > Qt) && (it = Qt), Te.length > 0 && (it < 0 || Re < 0) || Re > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    bt || (bt = "utf8");
    let jt = !1;
    for (; ; )
      switch (bt) {
        case "hex":
          return gt(this, Te, Re, it);
        case "utf8":
        case "utf-8":
          return kt(this, Te, Re, it);
        case "ascii":
        case "latin1":
        case "binary":
          return Ke(this, Te, Re, it);
        case "base64":
          return ht(this, Te, Re, it);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Nt(this, Te, Re, it);
        default:
          if (jt)
            throw new TypeError("Unknown encoding: " + bt);
          bt = ("" + bt).toLowerCase(), jt = !0;
      }
  }, fe.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function Ft(Ue, Te, Re) {
    return Te === 0 && Re === Ue.length ? ee.fromByteArray(Ue) : ee.fromByteArray(Ue.slice(Te, Re));
  }
  function At(Ue, Te, Re) {
    Re = Math.min(Ue.length, Re);
    const it = [];
    let bt = Te;
    for (; bt < Re; ) {
      const Qt = Ue[bt];
      let jt = null, yr = Qt > 239 ? 4 : Qt > 223 ? 3 : Qt > 191 ? 2 : 1;
      if (bt + yr <= Re) {
        let gr, br, mr, _r;
        switch (yr) {
          case 1:
            Qt < 128 && (jt = Qt);
            break;
          case 2:
            gr = Ue[bt + 1], (gr & 192) === 128 && (_r = (Qt & 31) << 6 | gr & 63, _r > 127 && (jt = _r));
            break;
          case 3:
            gr = Ue[bt + 1], br = Ue[bt + 2], (gr & 192) === 128 && (br & 192) === 128 && (_r = (Qt & 15) << 12 | (gr & 63) << 6 | br & 63, _r > 2047 && (_r < 55296 || _r > 57343) && (jt = _r));
            break;
          case 4:
            gr = Ue[bt + 1], br = Ue[bt + 2], mr = Ue[bt + 3], (gr & 192) === 128 && (br & 192) === 128 && (mr & 192) === 128 && (_r = (Qt & 15) << 18 | (gr & 63) << 12 | (br & 63) << 6 | mr & 63, _r > 65535 && _r < 1114112 && (jt = _r));
        }
      }
      jt === null ? (jt = 65533, yr = 1) : jt > 65535 && (jt -= 65536, it.push(jt >>> 10 & 1023 | 55296), jt = 56320 | jt & 1023), it.push(jt), bt += yr;
    }
    return Vt(it);
  }
  const St = 4096;
  function Vt(Ue) {
    const Te = Ue.length;
    if (Te <= St)
      return String.fromCharCode.apply(String, Ue);
    let Re = "", it = 0;
    for (; it < Te; )
      Re += String.fromCharCode.apply(
        String,
        Ue.slice(it, it += St)
      );
    return Re;
  }
  function Xt(Ue, Te, Re) {
    let it = "";
    Re = Math.min(Ue.length, Re);
    for (let bt = Te; bt < Re; ++bt)
      it += String.fromCharCode(Ue[bt] & 127);
    return it;
  }
  function Lt(Ue, Te, Re) {
    let it = "";
    Re = Math.min(Ue.length, Re);
    for (let bt = Te; bt < Re; ++bt)
      it += String.fromCharCode(Ue[bt]);
    return it;
  }
  function Zt(Ue, Te, Re) {
    const it = Ue.length;
    (!Te || Te < 0) && (Te = 0), (!Re || Re < 0 || Re > it) && (Re = it);
    let bt = "";
    for (let Qt = Te; Qt < Re; ++Qt)
      bt += Dt[Ue[Qt]];
    return bt;
  }
  function Gt(Ue, Te, Re) {
    const it = Ue.slice(Te, Re);
    let bt = "";
    for (let Qt = 0; Qt < it.length - 1; Qt += 2)
      bt += String.fromCharCode(it[Qt] + it[Qt + 1] * 256);
    return bt;
  }
  fe.prototype.slice = function(Te, Re) {
    const it = this.length;
    Te = ~~Te, Re = Re === void 0 ? it : ~~Re, Te < 0 ? (Te += it, Te < 0 && (Te = 0)) : Te > it && (Te = it), Re < 0 ? (Re += it, Re < 0 && (Re = 0)) : Re > it && (Re = it), Re < Te && (Re = Te);
    const bt = this.subarray(Te, Re);
    return Object.setPrototypeOf(bt, fe.prototype), bt;
  };
  function pt(Ue, Te, Re) {
    if (Ue % 1 !== 0 || Ue < 0)
      throw new RangeError("offset is not uint");
    if (Ue + Te > Re)
      throw new RangeError("Trying to access beyond buffer length");
  }
  fe.prototype.readUintLE = fe.prototype.readUIntLE = function(Te, Re, it) {
    Te = Te >>> 0, Re = Re >>> 0, it || pt(Te, Re, this.length);
    let bt = this[Te], Qt = 1, jt = 0;
    for (; ++jt < Re && (Qt *= 256); )
      bt += this[Te + jt] * Qt;
    return bt;
  }, fe.prototype.readUintBE = fe.prototype.readUIntBE = function(Te, Re, it) {
    Te = Te >>> 0, Re = Re >>> 0, it || pt(Te, Re, this.length);
    let bt = this[Te + --Re], Qt = 1;
    for (; Re > 0 && (Qt *= 256); )
      bt += this[Te + --Re] * Qt;
    return bt;
  }, fe.prototype.readUint8 = fe.prototype.readUInt8 = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 1, this.length), this[Te];
  }, fe.prototype.readUint16LE = fe.prototype.readUInt16LE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 2, this.length), this[Te] | this[Te + 1] << 8;
  }, fe.prototype.readUint16BE = fe.prototype.readUInt16BE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 2, this.length), this[Te] << 8 | this[Te + 1];
  }, fe.prototype.readUint32LE = fe.prototype.readUInt32LE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 4, this.length), (this[Te] | this[Te + 1] << 8 | this[Te + 2] << 16) + this[Te + 3] * 16777216;
  }, fe.prototype.readUint32BE = fe.prototype.readUInt32BE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 4, this.length), this[Te] * 16777216 + (this[Te + 1] << 16 | this[Te + 2] << 8 | this[Te + 3]);
  }, fe.prototype.readBigUInt64LE = zt(function(Te) {
    Te = Te >>> 0, Et(Te, "offset");
    const Re = this[Te], it = this[Te + 7];
    (Re === void 0 || it === void 0) && lt(Te, this.length - 8);
    const bt = Re + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 24, Qt = this[++Te] + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + it * 2 ** 24;
    return BigInt(bt) + (BigInt(Qt) << BigInt(32));
  }), fe.prototype.readBigUInt64BE = zt(function(Te) {
    Te = Te >>> 0, Et(Te, "offset");
    const Re = this[Te], it = this[Te + 7];
    (Re === void 0 || it === void 0) && lt(Te, this.length - 8);
    const bt = Re * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + this[++Te], Qt = this[++Te] * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + it;
    return (BigInt(bt) << BigInt(32)) + BigInt(Qt);
  }), fe.prototype.readIntLE = function(Te, Re, it) {
    Te = Te >>> 0, Re = Re >>> 0, it || pt(Te, Re, this.length);
    let bt = this[Te], Qt = 1, jt = 0;
    for (; ++jt < Re && (Qt *= 256); )
      bt += this[Te + jt] * Qt;
    return Qt *= 128, bt >= Qt && (bt -= Math.pow(2, 8 * Re)), bt;
  }, fe.prototype.readIntBE = function(Te, Re, it) {
    Te = Te >>> 0, Re = Re >>> 0, it || pt(Te, Re, this.length);
    let bt = Re, Qt = 1, jt = this[Te + --bt];
    for (; bt > 0 && (Qt *= 256); )
      jt += this[Te + --bt] * Qt;
    return Qt *= 128, jt >= Qt && (jt -= Math.pow(2, 8 * Re)), jt;
  }, fe.prototype.readInt8 = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 1, this.length), this[Te] & 128 ? (255 - this[Te] + 1) * -1 : this[Te];
  }, fe.prototype.readInt16LE = function(Te, Re) {
    Te = Te >>> 0, Re || pt(Te, 2, this.length);
    const it = this[Te] | this[Te + 1] << 8;
    return it & 32768 ? it | 4294901760 : it;
  }, fe.prototype.readInt16BE = function(Te, Re) {
    Te = Te >>> 0, Re || pt(Te, 2, this.length);
    const it = this[Te + 1] | this[Te] << 8;
    return it & 32768 ? it | 4294901760 : it;
  }, fe.prototype.readInt32LE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 4, this.length), this[Te] | this[Te + 1] << 8 | this[Te + 2] << 16 | this[Te + 3] << 24;
  }, fe.prototype.readInt32BE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 4, this.length), this[Te] << 24 | this[Te + 1] << 16 | this[Te + 2] << 8 | this[Te + 3];
  }, fe.prototype.readBigInt64LE = zt(function(Te) {
    Te = Te >>> 0, Et(Te, "offset");
    const Re = this[Te], it = this[Te + 7];
    (Re === void 0 || it === void 0) && lt(Te, this.length - 8);
    const bt = this[Te + 4] + this[Te + 5] * 2 ** 8 + this[Te + 6] * 2 ** 16 + (it << 24);
    return (BigInt(bt) << BigInt(32)) + BigInt(Re + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 24);
  }), fe.prototype.readBigInt64BE = zt(function(Te) {
    Te = Te >>> 0, Et(Te, "offset");
    const Re = this[Te], it = this[Te + 7];
    (Re === void 0 || it === void 0) && lt(Te, this.length - 8);
    const bt = (Re << 24) + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + this[++Te];
    return (BigInt(bt) << BigInt(32)) + BigInt(this[++Te] * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + it);
  }), fe.prototype.readFloatLE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 4, this.length), ne.read(this, Te, !0, 23, 4);
  }, fe.prototype.readFloatBE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 4, this.length), ne.read(this, Te, !1, 23, 4);
  }, fe.prototype.readDoubleLE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 8, this.length), ne.read(this, Te, !0, 52, 8);
  }, fe.prototype.readDoubleBE = function(Te, Re) {
    return Te = Te >>> 0, Re || pt(Te, 8, this.length), ne.read(this, Te, !1, 52, 8);
  };
  function It(Ue, Te, Re, it, bt, Qt) {
    if (!fe.isBuffer(Ue))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (Te > bt || Te < Qt)
      throw new RangeError('"value" argument is out of bounds');
    if (Re + it > Ue.length)
      throw new RangeError("Index out of range");
  }
  fe.prototype.writeUintLE = fe.prototype.writeUIntLE = function(Te, Re, it, bt) {
    if (Te = +Te, Re = Re >>> 0, it = it >>> 0, !bt) {
      const yr = Math.pow(2, 8 * it) - 1;
      It(this, Te, Re, it, yr, 0);
    }
    let Qt = 1, jt = 0;
    for (this[Re] = Te & 255; ++jt < it && (Qt *= 256); )
      this[Re + jt] = Te / Qt & 255;
    return Re + it;
  }, fe.prototype.writeUintBE = fe.prototype.writeUIntBE = function(Te, Re, it, bt) {
    if (Te = +Te, Re = Re >>> 0, it = it >>> 0, !bt) {
      const yr = Math.pow(2, 8 * it) - 1;
      It(this, Te, Re, it, yr, 0);
    }
    let Qt = it - 1, jt = 1;
    for (this[Re + Qt] = Te & 255; --Qt >= 0 && (jt *= 256); )
      this[Re + Qt] = Te / jt & 255;
    return Re + it;
  }, fe.prototype.writeUint8 = fe.prototype.writeUInt8 = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 1, 255, 0), this[Re] = Te & 255, Re + 1;
  }, fe.prototype.writeUint16LE = fe.prototype.writeUInt16LE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 2, 65535, 0), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, Re + 2;
  }, fe.prototype.writeUint16BE = fe.prototype.writeUInt16BE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 2, 65535, 0), this[Re] = Te >>> 8, this[Re + 1] = Te & 255, Re + 2;
  }, fe.prototype.writeUint32LE = fe.prototype.writeUInt32LE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 4, 4294967295, 0), this[Re + 3] = Te >>> 24, this[Re + 2] = Te >>> 16, this[Re + 1] = Te >>> 8, this[Re] = Te & 255, Re + 4;
  }, fe.prototype.writeUint32BE = fe.prototype.writeUInt32BE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 4, 4294967295, 0), this[Re] = Te >>> 24, this[Re + 1] = Te >>> 16, this[Re + 2] = Te >>> 8, this[Re + 3] = Te & 255, Re + 4;
  };
  function qt(Ue, Te, Re, it, bt) {
    et(Te, it, bt, Ue, Re, 7);
    let Qt = Number(Te & BigInt(4294967295));
    Ue[Re++] = Qt, Qt = Qt >> 8, Ue[Re++] = Qt, Qt = Qt >> 8, Ue[Re++] = Qt, Qt = Qt >> 8, Ue[Re++] = Qt;
    let jt = Number(Te >> BigInt(32) & BigInt(4294967295));
    return Ue[Re++] = jt, jt = jt >> 8, Ue[Re++] = jt, jt = jt >> 8, Ue[Re++] = jt, jt = jt >> 8, Ue[Re++] = jt, Re;
  }
  function De(Ue, Te, Re, it, bt) {
    et(Te, it, bt, Ue, Re, 7);
    let Qt = Number(Te & BigInt(4294967295));
    Ue[Re + 7] = Qt, Qt = Qt >> 8, Ue[Re + 6] = Qt, Qt = Qt >> 8, Ue[Re + 5] = Qt, Qt = Qt >> 8, Ue[Re + 4] = Qt;
    let jt = Number(Te >> BigInt(32) & BigInt(4294967295));
    return Ue[Re + 3] = jt, jt = jt >> 8, Ue[Re + 2] = jt, jt = jt >> 8, Ue[Re + 1] = jt, jt = jt >> 8, Ue[Re] = jt, Re + 8;
  }
  fe.prototype.writeBigUInt64LE = zt(function(Te, Re = 0) {
    return qt(this, Te, Re, BigInt(0), BigInt("0xffffffffffffffff"));
  }), fe.prototype.writeBigUInt64BE = zt(function(Te, Re = 0) {
    return De(this, Te, Re, BigInt(0), BigInt("0xffffffffffffffff"));
  }), fe.prototype.writeIntLE = function(Te, Re, it, bt) {
    if (Te = +Te, Re = Re >>> 0, !bt) {
      const gr = Math.pow(2, 8 * it - 1);
      It(this, Te, Re, it, gr - 1, -gr);
    }
    let Qt = 0, jt = 1, yr = 0;
    for (this[Re] = Te & 255; ++Qt < it && (jt *= 256); )
      Te < 0 && yr === 0 && this[Re + Qt - 1] !== 0 && (yr = 1), this[Re + Qt] = (Te / jt >> 0) - yr & 255;
    return Re + it;
  }, fe.prototype.writeIntBE = function(Te, Re, it, bt) {
    if (Te = +Te, Re = Re >>> 0, !bt) {
      const gr = Math.pow(2, 8 * it - 1);
      It(this, Te, Re, it, gr - 1, -gr);
    }
    let Qt = it - 1, jt = 1, yr = 0;
    for (this[Re + Qt] = Te & 255; --Qt >= 0 && (jt *= 256); )
      Te < 0 && yr === 0 && this[Re + Qt + 1] !== 0 && (yr = 1), this[Re + Qt] = (Te / jt >> 0) - yr & 255;
    return Re + it;
  }, fe.prototype.writeInt8 = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 1, 127, -128), Te < 0 && (Te = 255 + Te + 1), this[Re] = Te & 255, Re + 1;
  }, fe.prototype.writeInt16LE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 2, 32767, -32768), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, Re + 2;
  }, fe.prototype.writeInt16BE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 2, 32767, -32768), this[Re] = Te >>> 8, this[Re + 1] = Te & 255, Re + 2;
  }, fe.prototype.writeInt32LE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 4, 2147483647, -2147483648), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, this[Re + 2] = Te >>> 16, this[Re + 3] = Te >>> 24, Re + 4;
  }, fe.prototype.writeInt32BE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || It(this, Te, Re, 4, 2147483647, -2147483648), Te < 0 && (Te = 4294967295 + Te + 1), this[Re] = Te >>> 24, this[Re + 1] = Te >>> 16, this[Re + 2] = Te >>> 8, this[Re + 3] = Te & 255, Re + 4;
  }, fe.prototype.writeBigInt64LE = zt(function(Te, Re = 0) {
    return qt(this, Te, Re, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), fe.prototype.writeBigInt64BE = zt(function(Te, Re = 0) {
    return De(this, Te, Re, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  function ar(Ue, Te, Re, it, bt, Qt) {
    if (Re + it > Ue.length)
      throw new RangeError("Index out of range");
    if (Re < 0)
      throw new RangeError("Index out of range");
  }
  function rr(Ue, Te, Re, it, bt) {
    return Te = +Te, Re = Re >>> 0, bt || ar(Ue, Te, Re, 4), ne.write(Ue, Te, Re, it, 23, 4), Re + 4;
  }
  fe.prototype.writeFloatLE = function(Te, Re, it) {
    return rr(this, Te, Re, !0, it);
  }, fe.prototype.writeFloatBE = function(Te, Re, it) {
    return rr(this, Te, Re, !1, it);
  };
  function Ar(Ue, Te, Re, it, bt) {
    return Te = +Te, Re = Re >>> 0, bt || ar(Ue, Te, Re, 8), ne.write(Ue, Te, Re, it, 52, 8), Re + 8;
  }
  fe.prototype.writeDoubleLE = function(Te, Re, it) {
    return Ar(this, Te, Re, !0, it);
  }, fe.prototype.writeDoubleBE = function(Te, Re, it) {
    return Ar(this, Te, Re, !1, it);
  }, fe.prototype.copy = function(Te, Re, it, bt) {
    if (!fe.isBuffer(Te))
      throw new TypeError("argument should be a Buffer");
    if (it || (it = 0), !bt && bt !== 0 && (bt = this.length), Re >= Te.length && (Re = Te.length), Re || (Re = 0), bt > 0 && bt < it && (bt = it), bt === it || Te.length === 0 || this.length === 0)
      return 0;
    if (Re < 0)
      throw new RangeError("targetStart out of bounds");
    if (it < 0 || it >= this.length)
      throw new RangeError("Index out of range");
    if (bt < 0)
      throw new RangeError("sourceEnd out of bounds");
    bt > this.length && (bt = this.length), Te.length - Re < bt - it && (bt = Te.length - Re + it);
    const Qt = bt - it;
    return this === Te && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(Re, it, bt) : Uint8Array.prototype.set.call(
      Te,
      this.subarray(it, bt),
      Re
    ), Qt;
  }, fe.prototype.fill = function(Te, Re, it, bt) {
    if (typeof Te == "string") {
      if (typeof Re == "string" ? (bt = Re, Re = 0, it = this.length) : typeof it == "string" && (bt = it, it = this.length), bt !== void 0 && typeof bt != "string")
        throw new TypeError("encoding must be a string");
      if (typeof bt == "string" && !fe.isEncoding(bt))
        throw new TypeError("Unknown encoding: " + bt);
      if (Te.length === 1) {
        const jt = Te.charCodeAt(0);
        (bt === "utf8" && jt < 128 || bt === "latin1") && (Te = jt);
      }
    } else
      typeof Te == "number" ? Te = Te & 255 : typeof Te == "boolean" && (Te = Number(Te));
    if (Re < 0 || this.length < Re || this.length < it)
      throw new RangeError("Out of range index");
    if (it <= Re)
      return this;
    Re = Re >>> 0, it = it === void 0 ? this.length : it >>> 0, Te || (Te = 0);
    let Qt;
    if (typeof Te == "number")
      for (Qt = Re; Qt < it; ++Qt)
        this[Qt] = Te;
    else {
      const jt = fe.isBuffer(Te) ? Te : fe.from(Te, bt), yr = jt.length;
      if (yr === 0)
        throw new TypeError('The value "' + Te + '" is invalid for argument "value"');
      for (Qt = 0; Qt < it - Re; ++Qt)
        this[Qt + Re] = jt[Qt % yr];
    }
    return this;
  };
  const vt = {};
  function Ut(Ue, Te, Re) {
    vt[Ue] = class extends Re {
      constructor() {
        super(), Object.defineProperty(this, "message", {
          value: Te.apply(this, arguments),
          writable: !0,
          configurable: !0
        }), this.name = `${this.name} [${Ue}]`, this.stack, delete this.name;
      }
      get code() {
        return Ue;
      }
      set code(bt) {
        Object.defineProperty(this, "code", {
          configurable: !0,
          enumerable: !0,
          value: bt,
          writable: !0
        });
      }
      toString() {
        return `${this.name} [${Ue}]: ${this.message}`;
      }
    };
  }
  Ut(
    "ERR_BUFFER_OUT_OF_BOUNDS",
    function(Ue) {
      return Ue ? `${Ue} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    },
    RangeError
  ), Ut(
    "ERR_INVALID_ARG_TYPE",
    function(Ue, Te) {
      return `The "${Ue}" argument must be of type number. Received type ${typeof Te}`;
    },
    TypeError
  ), Ut(
    "ERR_OUT_OF_RANGE",
    function(Ue, Te, Re) {
      let it = `The value of "${Ue}" is out of range.`, bt = Re;
      return Number.isInteger(Re) && Math.abs(Re) > 2 ** 32 ? bt = Xe(String(Re)) : typeof Re == "bigint" && (bt = String(Re), (Re > BigInt(2) ** BigInt(32) || Re < -(BigInt(2) ** BigInt(32))) && (bt = Xe(bt)), bt += "n"), it += ` It must be ${Te}. Received ${bt}`, it;
    },
    RangeError
  );
  function Xe(Ue) {
    let Te = "", Re = Ue.length;
    const it = Ue[0] === "-" ? 1 : 0;
    for (; Re >= it + 4; Re -= 3)
      Te = `_${Ue.slice(Re - 3, Re)}${Te}`;
    return `${Ue.slice(0, Re)}${Te}`;
  }
  function tt(Ue, Te, Re) {
    Et(Te, "offset"), (Ue[Te] === void 0 || Ue[Te + Re] === void 0) && lt(Te, Ue.length - (Re + 1));
  }
  function et(Ue, Te, Re, it, bt, Qt) {
    if (Ue > Re || Ue < Te) {
      const jt = typeof Te == "bigint" ? "n" : "";
      let yr;
      throw Qt > 3 ? Te === 0 || Te === BigInt(0) ? yr = `>= 0${jt} and < 2${jt} ** ${(Qt + 1) * 8}${jt}` : yr = `>= -(2${jt} ** ${(Qt + 1) * 8 - 1}${jt}) and < 2 ** ${(Qt + 1) * 8 - 1}${jt}` : yr = `>= ${Te}${jt} and <= ${Re}${jt}`, new vt.ERR_OUT_OF_RANGE("value", yr, Ue);
    }
    tt(it, bt, Qt);
  }
  function Et(Ue, Te) {
    if (typeof Ue != "number")
      throw new vt.ERR_INVALID_ARG_TYPE(Te, "number", Ue);
  }
  function lt(Ue, Te, Re) {
    throw Math.floor(Ue) !== Ue ? (Et(Ue, Re), new vt.ERR_OUT_OF_RANGE(Re || "offset", "an integer", Ue)) : Te < 0 ? new vt.ERR_BUFFER_OUT_OF_BOUNDS() : new vt.ERR_OUT_OF_RANGE(
      Re || "offset",
      `>= ${Re ? 1 : 0} and <= ${Te}`,
      Ue
    );
  }
  const $e = /[^+/0-9A-Za-z-_]/g;
  function _e(Ue) {
    if (Ue = Ue.split("=")[0], Ue = Ue.trim().replace($e, ""), Ue.length < 2)
      return "";
    for (; Ue.length % 4 !== 0; )
      Ue = Ue + "=";
    return Ue;
  }
  function Be(Ue, Te) {
    Te = Te || 1 / 0;
    let Re;
    const it = Ue.length;
    let bt = null;
    const Qt = [];
    for (let jt = 0; jt < it; ++jt) {
      if (Re = Ue.charCodeAt(jt), Re > 55295 && Re < 57344) {
        if (!bt) {
          if (Re > 56319) {
            (Te -= 3) > -1 && Qt.push(239, 191, 189);
            continue;
          } else if (jt + 1 === it) {
            (Te -= 3) > -1 && Qt.push(239, 191, 189);
            continue;
          }
          bt = Re;
          continue;
        }
        if (Re < 56320) {
          (Te -= 3) > -1 && Qt.push(239, 191, 189), bt = Re;
          continue;
        }
        Re = (bt - 55296 << 10 | Re - 56320) + 65536;
      } else
        bt && (Te -= 3) > -1 && Qt.push(239, 191, 189);
      if (bt = null, Re < 128) {
        if ((Te -= 1) < 0)
          break;
        Qt.push(Re);
      } else if (Re < 2048) {
        if ((Te -= 2) < 0)
          break;
        Qt.push(
          Re >> 6 | 192,
          Re & 63 | 128
        );
      } else if (Re < 65536) {
        if ((Te -= 3) < 0)
          break;
        Qt.push(
          Re >> 12 | 224,
          Re >> 6 & 63 | 128,
          Re & 63 | 128
        );
      } else if (Re < 1114112) {
        if ((Te -= 4) < 0)
          break;
        Qt.push(
          Re >> 18 | 240,
          Re >> 12 & 63 | 128,
          Re >> 6 & 63 | 128,
          Re & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Qt;
  }
  function be(Ue) {
    const Te = [];
    for (let Re = 0; Re < Ue.length; ++Re)
      Te.push(Ue.charCodeAt(Re) & 255);
    return Te;
  }
  function ke(Ue, Te) {
    let Re, it, bt;
    const Qt = [];
    for (let jt = 0; jt < Ue.length && !((Te -= 2) < 0); ++jt)
      Re = Ue.charCodeAt(jt), it = Re >> 8, bt = Re % 256, Qt.push(bt), Qt.push(it);
    return Qt;
  }
  function Ve(Ue) {
    return ee.toByteArray(_e(Ue));
  }
  function Je(Ue, Te, Re, it) {
    let bt;
    for (bt = 0; bt < it && !(bt + Re >= Te.length || bt >= Ue.length); ++bt)
      Te[bt + Re] = Ue[bt];
    return bt;
  }
  function at(Ue, Te) {
    return Ue instanceof Te || Ue != null && Ue.constructor != null && Ue.constructor.name != null && Ue.constructor.name === Te.name;
  }
  function Tt(Ue) {
    return Ue !== Ue;
  }
  const Dt = function() {
    const Ue = "0123456789abcdef", Te = new Array(256);
    for (let Re = 0; Re < 16; ++Re) {
      const it = Re * 16;
      for (let bt = 0; bt < 16; ++bt)
        Te[it + bt] = Ue[Re] + Ue[bt];
    }
    return Te;
  }();
  function zt(Ue) {
    return typeof BigInt > "u" ? Yt : Ue;
  }
  function Yt() {
    throw new Error("BigInt not supported");
  }
})(buffer);
var ReplicaRejectCode;
(function(Z) {
  Z[Z.SysFatal = 1] = "SysFatal", Z[Z.SysTransient = 2] = "SysTransient", Z[Z.DestinationInvalid = 3] = "DestinationInvalid", Z[Z.CanisterReject = 4] = "CanisterReject", Z[Z.CanisterError = 5] = "CanisterError";
})(ReplicaRejectCode || (ReplicaRejectCode = {}));
const alphabet = "abcdefghijklmnopqrstuvwxyz234567", lookupTable = /* @__PURE__ */ Object.create(null);
for (let Z = 0; Z < alphabet.length; Z++)
  lookupTable[alphabet[Z]] = Z;
lookupTable[0] = lookupTable.o;
lookupTable[1] = lookupTable.i;
function encode$2(Z) {
  let ee = 0, ne = 0, ie = "";
  function oe(ce) {
    return ee < 0 ? ne |= ce >> -ee : ne = ce << ee & 248, ee > 3 ? (ee -= 8, 1) : (ee < 4 && (ie += alphabet[ne >> 3], ee += 5), 0);
  }
  for (let ce = 0; ce < Z.length; )
    ce += oe(Z[ce]);
  return ie + (ee < 0 ? alphabet[ne >> 3] : "");
}
function decode$3(Z) {
  let ee = 0, ne = 0;
  const ie = new Uint8Array(Z.length * 4 / 3 | 0);
  let oe = 0;
  function ce(he) {
    let fe = lookupTable[he.toLowerCase()];
    if (fe === void 0)
      throw new Error(`Invalid character: ${JSON.stringify(he)}`);
    fe <<= 3, ne |= fe >>> ee, ee += 5, ee >= 8 && (ie[oe++] = ne, ee -= 8, ee > 0 ? ne = fe << 5 - ee & 255 : ne = 0);
  }
  for (const he of Z)
    ce(he);
  return ie.slice(0, oe);
}
const lookUpTable = new Uint32Array([
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
]);
function getCrc32(Z) {
  const ee = new Uint8Array(Z);
  let ne = -1;
  for (let ie = 0; ie < ee.length; ie++) {
    const ce = (ee[ie] ^ ne) & 255;
    ne = lookUpTable[ce] ^ ne >>> 8;
  }
  return (ne ^ -1) >>> 0;
}
function sha224$1(Z) {
  const ee = sha256$1.exports.sha224.create();
  return ee.update(Z), new Uint8Array(ee.array());
}
const SELF_AUTHENTICATING_SUFFIX = 2, ANONYMOUS_SUFFIX = 4, fromHexString = (Z) => {
  var ee;
  return new Uint8Array(((ee = Z.match(/.{1,2}/g)) !== null && ee !== void 0 ? ee : []).map((ne) => parseInt(ne, 16)));
}, toHexString = (Z) => Z.reduce((ee, ne) => ee + ne.toString(16).padStart(2, "0"), "");
class Principal$1 {
  constructor(ee) {
    this._arr = ee, this._isPrincipal = !0;
  }
  static anonymous() {
    return new this(new Uint8Array([ANONYMOUS_SUFFIX]));
  }
  static selfAuthenticating(ee) {
    const ne = sha224$1(ee);
    return new this(new Uint8Array([...ne, SELF_AUTHENTICATING_SUFFIX]));
  }
  static from(ee) {
    if (typeof ee == "string")
      return Principal$1.fromText(ee);
    if (typeof ee == "object" && ee !== null && ee._isPrincipal === !0)
      return new Principal$1(ee._arr);
    throw new Error(`Impossible to convert ${JSON.stringify(ee)} to Principal.`);
  }
  static fromHex(ee) {
    return new this(fromHexString(ee));
  }
  static fromText(ee) {
    const ne = ee.toLowerCase().replace(/-/g, "");
    let ie = decode$3(ne);
    ie = ie.slice(4, ie.length);
    const oe = new this(ie);
    if (oe.toText() !== ee)
      throw new Error(`Principal "${oe.toText()}" does not have a valid checksum.`);
    return oe;
  }
  static fromUint8Array(ee) {
    return new this(ee);
  }
  isAnonymous() {
    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;
  }
  toUint8Array() {
    return this._arr;
  }
  toHex() {
    return toHexString(this._arr).toUpperCase();
  }
  toText() {
    const ee = new ArrayBuffer(4);
    new DataView(ee).setUint32(0, getCrc32(this._arr));
    const ie = Uint8Array.from(Buffer.from(ee)), oe = Uint8Array.from(this._arr), ce = new Uint8Array([...ie, ...oe]), fe = encode$2(ce).match(/.{1,5}/g);
    if (!fe)
      throw new Error();
    return fe.join("-");
  }
  toString() {
    return this.toText();
  }
}
const esm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Principal: Principal$1
}, Symbol.toStringTag, { value: "Module" }));
var src$1 = {}, bignumber = { exports: {} };
(function(Z) {
  (function(ee) {
    var ne, ie = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, oe = Math.ceil, ce = Math.floor, he = "[BigNumber Error] ", fe = he + "Number primitive has more than 15 significant digits: ", xe = 1e14, Ae = 14, Ee = 9007199254740991, ye = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], ge = 1e7, me = 1e9;
    function Ce(We) {
      var rt, gt, kt, Ke = De.prototype = { constructor: De, toString: null, valueOf: null }, ht = new De(1), Nt = 20, Ft = 4, At = -7, St = 21, Vt = -1e7, Xt = 1e7, Lt = !1, Zt = 1, Gt = 0, pt = {
        prefix: "",
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ",",
        decimalSeparator: ".",
        fractionGroupSize: 0,
        fractionGroupSeparator: "\xA0",
        suffix: ""
      }, It = "0123456789abcdefghijklmnopqrstuvwxyz", qt = !0;
      function De(Xe, tt) {
        var et, Et, lt, $e, _e, Be, be, ke, Ve = this;
        if (!(Ve instanceof De))
          return new De(Xe, tt);
        if (tt == null) {
          if (Xe && Xe._isBigNumber === !0) {
            Ve.s = Xe.s, !Xe.c || Xe.e > Xt ? Ve.c = Ve.e = null : Xe.e < Vt ? Ve.c = [Ve.e = 0] : (Ve.e = Xe.e, Ve.c = Xe.c.slice());
            return;
          }
          if ((Be = typeof Xe == "number") && Xe * 0 == 0) {
            if (Ve.s = 1 / Xe < 0 ? (Xe = -Xe, -1) : 1, Xe === ~~Xe) {
              for ($e = 0, _e = Xe; _e >= 10; _e /= 10, $e++)
                ;
              $e > Xt ? Ve.c = Ve.e = null : (Ve.e = $e, Ve.c = [Xe]);
              return;
            }
            ke = String(Xe);
          } else {
            if (!ie.test(ke = String(Xe)))
              return kt(Ve, ke, Be);
            Ve.s = ke.charCodeAt(0) == 45 ? (ke = ke.slice(1), -1) : 1;
          }
          ($e = ke.indexOf(".")) > -1 && (ke = ke.replace(".", "")), (_e = ke.search(/e/i)) > 0 ? ($e < 0 && ($e = _e), $e += +ke.slice(_e + 1), ke = ke.substring(0, _e)) : $e < 0 && ($e = ke.length);
        } else {
          if (Ne(tt, 2, It.length, "Base"), tt == 10 && qt)
            return Ve = new De(Xe), vt(Ve, Nt + Ve.e + 1, Ft);
          if (ke = String(Xe), Be = typeof Xe == "number") {
            if (Xe * 0 != 0)
              return kt(Ve, ke, Be, tt);
            if (Ve.s = 1 / Xe < 0 ? (ke = ke.slice(1), -1) : 1, De.DEBUG && ke.replace(/^0\.0*|\./, "").length > 15)
              throw Error(fe + Xe);
          } else
            Ve.s = ke.charCodeAt(0) === 45 ? (ke = ke.slice(1), -1) : 1;
          for (et = It.slice(0, tt), $e = _e = 0, be = ke.length; _e < be; _e++)
            if (et.indexOf(Et = ke.charAt(_e)) < 0) {
              if (Et == ".") {
                if (_e > $e) {
                  $e = be;
                  continue;
                }
              } else if (!lt && (ke == ke.toUpperCase() && (ke = ke.toLowerCase()) || ke == ke.toLowerCase() && (ke = ke.toUpperCase()))) {
                lt = !0, _e = -1, $e = 0;
                continue;
              }
              return kt(Ve, String(Xe), Be, tt);
            }
          Be = !1, ke = gt(ke, tt, 10, Ve.s), ($e = ke.indexOf(".")) > -1 ? ke = ke.replace(".", "") : $e = ke.length;
        }
        for (_e = 0; ke.charCodeAt(_e) === 48; _e++)
          ;
        for (be = ke.length; ke.charCodeAt(--be) === 48; )
          ;
        if (ke = ke.slice(_e, ++be)) {
          if (be -= _e, Be && De.DEBUG && be > 15 && (Xe > Ee || Xe !== ce(Xe)))
            throw Error(fe + Ve.s * Xe);
          if (($e = $e - _e - 1) > Xt)
            Ve.c = Ve.e = null;
          else if ($e < Vt)
            Ve.c = [Ve.e = 0];
          else {
            if (Ve.e = $e, Ve.c = [], _e = ($e + 1) % Ae, $e < 0 && (_e += Ae), _e < be) {
              for (_e && Ve.c.push(+ke.slice(0, _e)), be -= Ae; _e < be; )
                Ve.c.push(+ke.slice(_e, _e += Ae));
              _e = Ae - (ke = ke.slice(_e)).length;
            } else
              _e -= be;
            for (; _e--; ke += "0")
              ;
            Ve.c.push(+ke);
          }
        } else
          Ve.c = [Ve.e = 0];
      }
      De.clone = Ce, De.ROUND_UP = 0, De.ROUND_DOWN = 1, De.ROUND_CEIL = 2, De.ROUND_FLOOR = 3, De.ROUND_HALF_UP = 4, De.ROUND_HALF_DOWN = 5, De.ROUND_HALF_EVEN = 6, De.ROUND_HALF_CEIL = 7, De.ROUND_HALF_FLOOR = 8, De.EUCLID = 9, De.config = De.set = function(Xe) {
        var tt, et;
        if (Xe != null)
          if (typeof Xe == "object") {
            if (Xe.hasOwnProperty(tt = "DECIMAL_PLACES") && (et = Xe[tt], Ne(et, 0, me, tt), Nt = et), Xe.hasOwnProperty(tt = "ROUNDING_MODE") && (et = Xe[tt], Ne(et, 0, 8, tt), Ft = et), Xe.hasOwnProperty(tt = "EXPONENTIAL_AT") && (et = Xe[tt], et && et.pop ? (Ne(et[0], -me, 0, tt), Ne(et[1], 0, me, tt), At = et[0], St = et[1]) : (Ne(et, -me, me, tt), At = -(St = et < 0 ? -et : et))), Xe.hasOwnProperty(tt = "RANGE"))
              if (et = Xe[tt], et && et.pop)
                Ne(et[0], -me, -1, tt), Ne(et[1], 1, me, tt), Vt = et[0], Xt = et[1];
              else if (Ne(et, -me, me, tt), et)
                Vt = -(Xt = et < 0 ? -et : et);
              else
                throw Error(he + tt + " cannot be zero: " + et);
            if (Xe.hasOwnProperty(tt = "CRYPTO"))
              if (et = Xe[tt], et === !!et)
                if (et)
                  if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes))
                    Lt = et;
                  else
                    throw Lt = !et, Error(he + "crypto unavailable");
                else
                  Lt = et;
              else
                throw Error(he + tt + " not true or false: " + et);
            if (Xe.hasOwnProperty(tt = "MODULO_MODE") && (et = Xe[tt], Ne(et, 0, 9, tt), Zt = et), Xe.hasOwnProperty(tt = "POW_PRECISION") && (et = Xe[tt], Ne(et, 0, me, tt), Gt = et), Xe.hasOwnProperty(tt = "FORMAT"))
              if (et = Xe[tt], typeof et == "object")
                pt = et;
              else
                throw Error(he + tt + " not an object: " + et);
            if (Xe.hasOwnProperty(tt = "ALPHABET"))
              if (et = Xe[tt], typeof et == "string" && !/^.?$|[+\-.\s]|(.).*\1/.test(et))
                qt = et.slice(0, 10) == "0123456789", It = et;
              else
                throw Error(he + tt + " invalid: " + et);
          } else
            throw Error(he + "Object expected: " + Xe);
        return {
          DECIMAL_PLACES: Nt,
          ROUNDING_MODE: Ft,
          EXPONENTIAL_AT: [At, St],
          RANGE: [Vt, Xt],
          CRYPTO: Lt,
          MODULO_MODE: Zt,
          POW_PRECISION: Gt,
          FORMAT: pt,
          ALPHABET: It
        };
      }, De.isBigNumber = function(Xe) {
        if (!Xe || Xe._isBigNumber !== !0)
          return !1;
        if (!De.DEBUG)
          return !0;
        var tt, et, Et = Xe.c, lt = Xe.e, $e = Xe.s;
        e:
          if ({}.toString.call(Et) == "[object Array]") {
            if (($e === 1 || $e === -1) && lt >= -me && lt <= me && lt === ce(lt)) {
              if (Et[0] === 0) {
                if (lt === 0 && Et.length === 1)
                  return !0;
                break e;
              }
              if (tt = (lt + 1) % Ae, tt < 1 && (tt += Ae), String(Et[0]).length == tt) {
                for (tt = 0; tt < Et.length; tt++)
                  if (et = Et[tt], et < 0 || et >= xe || et !== ce(et))
                    break e;
                if (et !== 0)
                  return !0;
              }
            }
          } else if (Et === null && lt === null && ($e === null || $e === 1 || $e === -1))
            return !0;
        throw Error(he + "Invalid BigNumber: " + Xe);
      }, De.maximum = De.max = function() {
        return rr(arguments, Ke.lt);
      }, De.minimum = De.min = function() {
        return rr(arguments, Ke.gt);
      }, De.random = function() {
        var Xe = 9007199254740992, tt = Math.random() * Xe & 2097151 ? function() {
          return ce(Math.random() * Xe);
        } : function() {
          return (Math.random() * 1073741824 | 0) * 8388608 + (Math.random() * 8388608 | 0);
        };
        return function(et) {
          var Et, lt, $e, _e, Be, be = 0, ke = [], Ve = new De(ht);
          if (et == null ? et = Nt : Ne(et, 0, me), _e = oe(et / Ae), Lt)
            if (crypto.getRandomValues) {
              for (Et = crypto.getRandomValues(new Uint32Array(_e *= 2)); be < _e; )
                Be = Et[be] * 131072 + (Et[be + 1] >>> 11), Be >= 9e15 ? (lt = crypto.getRandomValues(new Uint32Array(2)), Et[be] = lt[0], Et[be + 1] = lt[1]) : (ke.push(Be % 1e14), be += 2);
              be = _e / 2;
            } else if (crypto.randomBytes) {
              for (Et = crypto.randomBytes(_e *= 7); be < _e; )
                Be = (Et[be] & 31) * 281474976710656 + Et[be + 1] * 1099511627776 + Et[be + 2] * 4294967296 + Et[be + 3] * 16777216 + (Et[be + 4] << 16) + (Et[be + 5] << 8) + Et[be + 6], Be >= 9e15 ? crypto.randomBytes(7).copy(Et, be) : (ke.push(Be % 1e14), be += 7);
              be = _e / 7;
            } else
              throw Lt = !1, Error(he + "crypto unavailable");
          if (!Lt)
            for (; be < _e; )
              Be = tt(), Be < 9e15 && (ke[be++] = Be % 1e14);
          for (_e = ke[--be], et %= Ae, _e && et && (Be = ye[Ae - et], ke[be] = ce(_e / Be) * Be); ke[be] === 0; ke.pop(), be--)
            ;
          if (be < 0)
            ke = [$e = 0];
          else {
            for ($e = -1; ke[0] === 0; ke.splice(0, 1), $e -= Ae)
              ;
            for (be = 1, Be = ke[0]; Be >= 10; Be /= 10, be++)
              ;
            be < Ae && ($e -= Ae - be);
          }
          return Ve.e = $e, Ve.c = ke, Ve;
        };
      }(), De.sum = function() {
        for (var Xe = 1, tt = arguments, et = new De(tt[0]); Xe < tt.length; )
          et = et.plus(tt[Xe++]);
        return et;
      }, gt = function() {
        var Xe = "0123456789";
        function tt(et, Et, lt, $e) {
          for (var _e, Be = [0], be, ke = 0, Ve = et.length; ke < Ve; ) {
            for (be = Be.length; be--; Be[be] *= Et)
              ;
            for (Be[0] += $e.indexOf(et.charAt(ke++)), _e = 0; _e < Be.length; _e++)
              Be[_e] > lt - 1 && (Be[_e + 1] == null && (Be[_e + 1] = 0), Be[_e + 1] += Be[_e] / lt | 0, Be[_e] %= lt);
          }
          return Be.reverse();
        }
        return function(et, Et, lt, $e, _e) {
          var Be, be, ke, Ve, Je, at, Tt, Dt, zt = et.indexOf("."), Yt = Nt, Ue = Ft;
          for (zt >= 0 && (Ve = Gt, Gt = 0, et = et.replace(".", ""), Dt = new De(Et), at = Dt.pow(et.length - zt), Gt = Ve, Dt.c = tt(
            Le(Oe(at.c), at.e, "0"),
            10,
            lt,
            Xe
          ), Dt.e = Dt.c.length), Tt = tt(et, Et, lt, _e ? (Be = It, Xe) : (Be = Xe, It)), ke = Ve = Tt.length; Tt[--Ve] == 0; Tt.pop())
            ;
          if (!Tt[0])
            return Be.charAt(0);
          if (zt < 0 ? --ke : (at.c = Tt, at.e = ke, at.s = $e, at = rt(at, Dt, Yt, Ue, lt), Tt = at.c, Je = at.r, ke = at.e), be = ke + Yt + 1, zt = Tt[be], Ve = lt / 2, Je = Je || be < 0 || Tt[be + 1] != null, Je = Ue < 4 ? (zt != null || Je) && (Ue == 0 || Ue == (at.s < 0 ? 3 : 2)) : zt > Ve || zt == Ve && (Ue == 4 || Je || Ue == 6 && Tt[be - 1] & 1 || Ue == (at.s < 0 ? 8 : 7)), be < 1 || !Tt[0])
            et = Je ? Le(Be.charAt(1), -Yt, Be.charAt(0)) : Be.charAt(0);
          else {
            if (Tt.length = be, Je)
              for (--lt; ++Tt[--be] > lt; )
                Tt[be] = 0, be || (++ke, Tt = [1].concat(Tt));
            for (Ve = Tt.length; !Tt[--Ve]; )
              ;
            for (zt = 0, et = ""; zt <= Ve; et += Be.charAt(Tt[zt++]))
              ;
            et = Le(et, ke, Be.charAt(0));
          }
          return et;
        };
      }(), rt = function() {
        function Xe(Et, lt, $e) {
          var _e, Be, be, ke, Ve = 0, Je = Et.length, at = lt % ge, Tt = lt / ge | 0;
          for (Et = Et.slice(); Je--; )
            be = Et[Je] % ge, ke = Et[Je] / ge | 0, _e = Tt * be + ke * at, Be = at * be + _e % ge * ge + Ve, Ve = (Be / $e | 0) + (_e / ge | 0) + Tt * ke, Et[Je] = Be % $e;
          return Ve && (Et = [Ve].concat(Et)), Et;
        }
        function tt(Et, lt, $e, _e) {
          var Be, be;
          if ($e != _e)
            be = $e > _e ? 1 : -1;
          else
            for (Be = be = 0; Be < $e; Be++)
              if (Et[Be] != lt[Be]) {
                be = Et[Be] > lt[Be] ? 1 : -1;
                break;
              }
          return be;
        }
        function et(Et, lt, $e, _e) {
          for (var Be = 0; $e--; )
            Et[$e] -= Be, Be = Et[$e] < lt[$e] ? 1 : 0, Et[$e] = Be * _e + Et[$e] - lt[$e];
          for (; !Et[0] && Et.length > 1; Et.splice(0, 1))
            ;
        }
        return function(Et, lt, $e, _e, Be) {
          var be, ke, Ve, Je, at, Tt, Dt, zt, Yt, Ue, Te, Re, it, bt, Qt, jt, yr, gr = Et.s == lt.s ? 1 : -1, br = Et.c, mr = lt.c;
          if (!br || !br[0] || !mr || !mr[0])
            return new De(
              !Et.s || !lt.s || (br ? mr && br[0] == mr[0] : !mr) ? NaN : br && br[0] == 0 || !mr ? gr * 0 : gr / 0
            );
          for (zt = new De(gr), Yt = zt.c = [], ke = Et.e - lt.e, gr = $e + ke + 1, Be || (Be = xe, ke = Ie(Et.e / Ae) - Ie(lt.e / Ae), gr = gr / Ae | 0), Ve = 0; mr[Ve] == (br[Ve] || 0); Ve++)
            ;
          if (mr[Ve] > (br[Ve] || 0) && ke--, gr < 0)
            Yt.push(1), Je = !0;
          else {
            for (bt = br.length, jt = mr.length, Ve = 0, gr += 2, at = ce(Be / (mr[0] + 1)), at > 1 && (mr = Xe(mr, at, Be), br = Xe(br, at, Be), jt = mr.length, bt = br.length), it = jt, Ue = br.slice(0, jt), Te = Ue.length; Te < jt; Ue[Te++] = 0)
              ;
            yr = mr.slice(), yr = [0].concat(yr), Qt = mr[0], mr[1] >= Be / 2 && Qt++;
            do {
              if (at = 0, be = tt(mr, Ue, jt, Te), be < 0) {
                if (Re = Ue[0], jt != Te && (Re = Re * Be + (Ue[1] || 0)), at = ce(Re / Qt), at > 1)
                  for (at >= Be && (at = Be - 1), Tt = Xe(mr, at, Be), Dt = Tt.length, Te = Ue.length; tt(Tt, Ue, Dt, Te) == 1; )
                    at--, et(Tt, jt < Dt ? yr : mr, Dt, Be), Dt = Tt.length, be = 1;
                else
                  at == 0 && (be = at = 1), Tt = mr.slice(), Dt = Tt.length;
                if (Dt < Te && (Tt = [0].concat(Tt)), et(Ue, Tt, Te, Be), Te = Ue.length, be == -1)
                  for (; tt(mr, Ue, jt, Te) < 1; )
                    at++, et(Ue, jt < Te ? yr : mr, Te, Be), Te = Ue.length;
              } else
                be === 0 && (at++, Ue = [0]);
              Yt[Ve++] = at, Ue[0] ? Ue[Te++] = br[it] || 0 : (Ue = [br[it]], Te = 1);
            } while ((it++ < bt || Ue[0] != null) && gr--);
            Je = Ue[0] != null, Yt[0] || Yt.splice(0, 1);
          }
          if (Be == xe) {
            for (Ve = 1, gr = Yt[0]; gr >= 10; gr /= 10, Ve++)
              ;
            vt(zt, $e + (zt.e = Ve + ke * Ae - 1) + 1, _e, Je);
          } else
            zt.e = ke, zt.r = +Je;
          return zt;
        };
      }();
      function ar(Xe, tt, et, Et) {
        var lt, $e, _e, Be, be;
        if (et == null ? et = Ft : Ne(et, 0, 8), !Xe.c)
          return Xe.toString();
        if (lt = Xe.c[0], _e = Xe.e, tt == null)
          be = Oe(Xe.c), be = Et == 1 || Et == 2 && (_e <= At || _e >= St) ? Fe(be, _e) : Le(be, _e, "0");
        else if (Xe = vt(new De(Xe), tt, et), $e = Xe.e, be = Oe(Xe.c), Be = be.length, Et == 1 || Et == 2 && (tt <= $e || $e <= At)) {
          for (; Be < tt; be += "0", Be++)
            ;
          be = Fe(be, $e);
        } else if (tt -= _e, be = Le(be, $e, "0"), $e + 1 > Be) {
          if (--tt > 0)
            for (be += "."; tt--; be += "0")
              ;
        } else if (tt += $e - Be, tt > 0)
          for ($e + 1 == Be && (be += "."); tt--; be += "0")
            ;
        return Xe.s < 0 && lt ? "-" + be : be;
      }
      function rr(Xe, tt) {
        for (var et, Et = 1, lt = new De(Xe[0]); Et < Xe.length; Et++)
          if (et = new De(Xe[Et]), et.s)
            tt.call(lt, et) && (lt = et);
          else {
            lt = et;
            break;
          }
        return lt;
      }
      function Ar(Xe, tt, et) {
        for (var Et = 1, lt = tt.length; !tt[--lt]; tt.pop())
          ;
        for (lt = tt[0]; lt >= 10; lt /= 10, Et++)
          ;
        return (et = Et + et * Ae - 1) > Xt ? Xe.c = Xe.e = null : et < Vt ? Xe.c = [Xe.e = 0] : (Xe.e = et, Xe.c = tt), Xe;
      }
      kt = function() {
        var Xe = /^(-?)0([xbo])(?=\w[\w.]*$)/i, tt = /^([^.]+)\.$/, et = /^\.([^.]+)$/, Et = /^-?(Infinity|NaN)$/, lt = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function($e, _e, Be, be) {
          var ke, Ve = Be ? _e : _e.replace(lt, "");
          if (Et.test(Ve))
            $e.s = isNaN(Ve) ? null : Ve < 0 ? -1 : 1;
          else {
            if (!Be && (Ve = Ve.replace(Xe, function(Je, at, Tt) {
              return ke = (Tt = Tt.toLowerCase()) == "x" ? 16 : Tt == "b" ? 2 : 8, !be || be == ke ? at : Je;
            }), be && (ke = be, Ve = Ve.replace(tt, "$1").replace(et, "0.$1")), _e != Ve))
              return new De(Ve, ke);
            if (De.DEBUG)
              throw Error(he + "Not a" + (be ? " base " + be : "") + " number: " + _e);
            $e.s = null;
          }
          $e.c = $e.e = null;
        };
      }();
      function vt(Xe, tt, et, Et) {
        var lt, $e, _e, Be, be, ke, Ve, Je = Xe.c, at = ye;
        if (Je) {
          e: {
            for (lt = 1, Be = Je[0]; Be >= 10; Be /= 10, lt++)
              ;
            if ($e = tt - lt, $e < 0)
              $e += Ae, _e = tt, be = Je[ke = 0], Ve = be / at[lt - _e - 1] % 10 | 0;
            else if (ke = oe(($e + 1) / Ae), ke >= Je.length)
              if (Et) {
                for (; Je.length <= ke; Je.push(0))
                  ;
                be = Ve = 0, lt = 1, $e %= Ae, _e = $e - Ae + 1;
              } else
                break e;
            else {
              for (be = Be = Je[ke], lt = 1; Be >= 10; Be /= 10, lt++)
                ;
              $e %= Ae, _e = $e - Ae + lt, Ve = _e < 0 ? 0 : be / at[lt - _e - 1] % 10 | 0;
            }
            if (Et = Et || tt < 0 || Je[ke + 1] != null || (_e < 0 ? be : be % at[lt - _e - 1]), Et = et < 4 ? (Ve || Et) && (et == 0 || et == (Xe.s < 0 ? 3 : 2)) : Ve > 5 || Ve == 5 && (et == 4 || Et || et == 6 && ($e > 0 ? _e > 0 ? be / at[lt - _e] : 0 : Je[ke - 1]) % 10 & 1 || et == (Xe.s < 0 ? 8 : 7)), tt < 1 || !Je[0])
              return Je.length = 0, Et ? (tt -= Xe.e + 1, Je[0] = at[(Ae - tt % Ae) % Ae], Xe.e = -tt || 0) : Je[0] = Xe.e = 0, Xe;
            if ($e == 0 ? (Je.length = ke, Be = 1, ke--) : (Je.length = ke + 1, Be = at[Ae - $e], Je[ke] = _e > 0 ? ce(be / at[lt - _e] % at[_e]) * Be : 0), Et)
              for (; ; )
                if (ke == 0) {
                  for ($e = 1, _e = Je[0]; _e >= 10; _e /= 10, $e++)
                    ;
                  for (_e = Je[0] += Be, Be = 1; _e >= 10; _e /= 10, Be++)
                    ;
                  $e != Be && (Xe.e++, Je[0] == xe && (Je[0] = 1));
                  break;
                } else {
                  if (Je[ke] += Be, Je[ke] != xe)
                    break;
                  Je[ke--] = 0, Be = 1;
                }
            for ($e = Je.length; Je[--$e] === 0; Je.pop())
              ;
          }
          Xe.e > Xt ? Xe.c = Xe.e = null : Xe.e < Vt && (Xe.c = [Xe.e = 0]);
        }
        return Xe;
      }
      function Ut(Xe) {
        var tt, et = Xe.e;
        return et === null ? Xe.toString() : (tt = Oe(Xe.c), tt = et <= At || et >= St ? Fe(tt, et) : Le(tt, et, "0"), Xe.s < 0 ? "-" + tt : tt);
      }
      return Ke.absoluteValue = Ke.abs = function() {
        var Xe = new De(this);
        return Xe.s < 0 && (Xe.s = 1), Xe;
      }, Ke.comparedTo = function(Xe, tt) {
        return He(this, new De(Xe, tt));
      }, Ke.decimalPlaces = Ke.dp = function(Xe, tt) {
        var et, Et, lt, $e = this;
        if (Xe != null)
          return Ne(Xe, 0, me), tt == null ? tt = Ft : Ne(tt, 0, 8), vt(new De($e), Xe + $e.e + 1, tt);
        if (!(et = $e.c))
          return null;
        if (Et = ((lt = et.length - 1) - Ie(this.e / Ae)) * Ae, lt = et[lt])
          for (; lt % 10 == 0; lt /= 10, Et--)
            ;
        return Et < 0 && (Et = 0), Et;
      }, Ke.dividedBy = Ke.div = function(Xe, tt) {
        return rt(this, new De(Xe, tt), Nt, Ft);
      }, Ke.dividedToIntegerBy = Ke.idiv = function(Xe, tt) {
        return rt(this, new De(Xe, tt), 0, 1);
      }, Ke.exponentiatedBy = Ke.pow = function(Xe, tt) {
        var et, Et, lt, $e, _e, Be, be, ke, Ve, Je = this;
        if (Xe = new De(Xe), Xe.c && !Xe.isInteger())
          throw Error(he + "Exponent not an integer: " + Ut(Xe));
        if (tt != null && (tt = new De(tt)), Be = Xe.e > 14, !Je.c || !Je.c[0] || Je.c[0] == 1 && !Je.e && Je.c.length == 1 || !Xe.c || !Xe.c[0])
          return Ve = new De(Math.pow(+Ut(Je), Be ? 2 - Pe(Xe) : +Ut(Xe))), tt ? Ve.mod(tt) : Ve;
        if (be = Xe.s < 0, tt) {
          if (tt.c ? !tt.c[0] : !tt.s)
            return new De(NaN);
          Et = !be && Je.isInteger() && tt.isInteger(), Et && (Je = Je.mod(tt));
        } else {
          if (Xe.e > 9 && (Je.e > 0 || Je.e < -1 || (Je.e == 0 ? Je.c[0] > 1 || Be && Je.c[1] >= 24e7 : Je.c[0] < 8e13 || Be && Je.c[0] <= 9999975e7)))
            return $e = Je.s < 0 && Pe(Xe) ? -0 : 0, Je.e > -1 && ($e = 1 / $e), new De(be ? 1 / $e : $e);
          Gt && ($e = oe(Gt / Ae + 2));
        }
        for (Be ? (et = new De(0.5), be && (Xe.s = 1), ke = Pe(Xe)) : (lt = Math.abs(+Ut(Xe)), ke = lt % 2), Ve = new De(ht); ; ) {
          if (ke) {
            if (Ve = Ve.times(Je), !Ve.c)
              break;
            $e ? Ve.c.length > $e && (Ve.c.length = $e) : Et && (Ve = Ve.mod(tt));
          }
          if (lt) {
            if (lt = ce(lt / 2), lt === 0)
              break;
            ke = lt % 2;
          } else if (Xe = Xe.times(et), vt(Xe, Xe.e + 1, 1), Xe.e > 14)
            ke = Pe(Xe);
          else {
            if (lt = +Ut(Xe), lt === 0)
              break;
            ke = lt % 2;
          }
          Je = Je.times(Je), $e ? Je.c && Je.c.length > $e && (Je.c.length = $e) : Et && (Je = Je.mod(tt));
        }
        return Et ? Ve : (be && (Ve = ht.div(Ve)), tt ? Ve.mod(tt) : $e ? vt(Ve, Gt, Ft, _e) : Ve);
      }, Ke.integerValue = function(Xe) {
        var tt = new De(this);
        return Xe == null ? Xe = Ft : Ne(Xe, 0, 8), vt(tt, tt.e + 1, Xe);
      }, Ke.isEqualTo = Ke.eq = function(Xe, tt) {
        return He(this, new De(Xe, tt)) === 0;
      }, Ke.isFinite = function() {
        return !!this.c;
      }, Ke.isGreaterThan = Ke.gt = function(Xe, tt) {
        return He(this, new De(Xe, tt)) > 0;
      }, Ke.isGreaterThanOrEqualTo = Ke.gte = function(Xe, tt) {
        return (tt = He(this, new De(Xe, tt))) === 1 || tt === 0;
      }, Ke.isInteger = function() {
        return !!this.c && Ie(this.e / Ae) > this.c.length - 2;
      }, Ke.isLessThan = Ke.lt = function(Xe, tt) {
        return He(this, new De(Xe, tt)) < 0;
      }, Ke.isLessThanOrEqualTo = Ke.lte = function(Xe, tt) {
        return (tt = He(this, new De(Xe, tt))) === -1 || tt === 0;
      }, Ke.isNaN = function() {
        return !this.s;
      }, Ke.isNegative = function() {
        return this.s < 0;
      }, Ke.isPositive = function() {
        return this.s > 0;
      }, Ke.isZero = function() {
        return !!this.c && this.c[0] == 0;
      }, Ke.minus = function(Xe, tt) {
        var et, Et, lt, $e, _e = this, Be = _e.s;
        if (Xe = new De(Xe, tt), tt = Xe.s, !Be || !tt)
          return new De(NaN);
        if (Be != tt)
          return Xe.s = -tt, _e.plus(Xe);
        var be = _e.e / Ae, ke = Xe.e / Ae, Ve = _e.c, Je = Xe.c;
        if (!be || !ke) {
          if (!Ve || !Je)
            return Ve ? (Xe.s = -tt, Xe) : new De(Je ? _e : NaN);
          if (!Ve[0] || !Je[0])
            return Je[0] ? (Xe.s = -tt, Xe) : new De(Ve[0] ? _e : Ft == 3 ? -0 : 0);
        }
        if (be = Ie(be), ke = Ie(ke), Ve = Ve.slice(), Be = be - ke) {
          for (($e = Be < 0) ? (Be = -Be, lt = Ve) : (ke = be, lt = Je), lt.reverse(), tt = Be; tt--; lt.push(0))
            ;
          lt.reverse();
        } else
          for (Et = ($e = (Be = Ve.length) < (tt = Je.length)) ? Be : tt, Be = tt = 0; tt < Et; tt++)
            if (Ve[tt] != Je[tt]) {
              $e = Ve[tt] < Je[tt];
              break;
            }
        if ($e && (lt = Ve, Ve = Je, Je = lt, Xe.s = -Xe.s), tt = (Et = Je.length) - (et = Ve.length), tt > 0)
          for (; tt--; Ve[et++] = 0)
            ;
        for (tt = xe - 1; Et > Be; ) {
          if (Ve[--Et] < Je[Et]) {
            for (et = Et; et && !Ve[--et]; Ve[et] = tt)
              ;
            --Ve[et], Ve[Et] += xe;
          }
          Ve[Et] -= Je[Et];
        }
        for (; Ve[0] == 0; Ve.splice(0, 1), --ke)
          ;
        return Ve[0] ? Ar(Xe, Ve, ke) : (Xe.s = Ft == 3 ? -1 : 1, Xe.c = [Xe.e = 0], Xe);
      }, Ke.modulo = Ke.mod = function(Xe, tt) {
        var et, Et, lt = this;
        return Xe = new De(Xe, tt), !lt.c || !Xe.s || Xe.c && !Xe.c[0] ? new De(NaN) : !Xe.c || lt.c && !lt.c[0] ? new De(lt) : (Zt == 9 ? (Et = Xe.s, Xe.s = 1, et = rt(lt, Xe, 0, 3), Xe.s = Et, et.s *= Et) : et = rt(lt, Xe, 0, Zt), Xe = lt.minus(et.times(Xe)), !Xe.c[0] && Zt == 1 && (Xe.s = lt.s), Xe);
      }, Ke.multipliedBy = Ke.times = function(Xe, tt) {
        var et, Et, lt, $e, _e, Be, be, ke, Ve, Je, at, Tt, Dt, zt, Yt, Ue = this, Te = Ue.c, Re = (Xe = new De(Xe, tt)).c;
        if (!Te || !Re || !Te[0] || !Re[0])
          return !Ue.s || !Xe.s || Te && !Te[0] && !Re || Re && !Re[0] && !Te ? Xe.c = Xe.e = Xe.s = null : (Xe.s *= Ue.s, !Te || !Re ? Xe.c = Xe.e = null : (Xe.c = [0], Xe.e = 0)), Xe;
        for (Et = Ie(Ue.e / Ae) + Ie(Xe.e / Ae), Xe.s *= Ue.s, be = Te.length, Je = Re.length, be < Je && (Dt = Te, Te = Re, Re = Dt, lt = be, be = Je, Je = lt), lt = be + Je, Dt = []; lt--; Dt.push(0))
          ;
        for (zt = xe, Yt = ge, lt = Je; --lt >= 0; ) {
          for (et = 0, at = Re[lt] % Yt, Tt = Re[lt] / Yt | 0, _e = be, $e = lt + _e; $e > lt; )
            ke = Te[--_e] % Yt, Ve = Te[_e] / Yt | 0, Be = Tt * ke + Ve * at, ke = at * ke + Be % Yt * Yt + Dt[$e] + et, et = (ke / zt | 0) + (Be / Yt | 0) + Tt * Ve, Dt[$e--] = ke % zt;
          Dt[$e] = et;
        }
        return et ? ++Et : Dt.splice(0, 1), Ar(Xe, Dt, Et);
      }, Ke.negated = function() {
        var Xe = new De(this);
        return Xe.s = -Xe.s || null, Xe;
      }, Ke.plus = function(Xe, tt) {
        var et, Et = this, lt = Et.s;
        if (Xe = new De(Xe, tt), tt = Xe.s, !lt || !tt)
          return new De(NaN);
        if (lt != tt)
          return Xe.s = -tt, Et.minus(Xe);
        var $e = Et.e / Ae, _e = Xe.e / Ae, Be = Et.c, be = Xe.c;
        if (!$e || !_e) {
          if (!Be || !be)
            return new De(lt / 0);
          if (!Be[0] || !be[0])
            return be[0] ? Xe : new De(Be[0] ? Et : lt * 0);
        }
        if ($e = Ie($e), _e = Ie(_e), Be = Be.slice(), lt = $e - _e) {
          for (lt > 0 ? (_e = $e, et = be) : (lt = -lt, et = Be), et.reverse(); lt--; et.push(0))
            ;
          et.reverse();
        }
        for (lt = Be.length, tt = be.length, lt - tt < 0 && (et = be, be = Be, Be = et, tt = lt), lt = 0; tt; )
          lt = (Be[--tt] = Be[tt] + be[tt] + lt) / xe | 0, Be[tt] = xe === Be[tt] ? 0 : Be[tt] % xe;
        return lt && (Be = [lt].concat(Be), ++_e), Ar(Xe, Be, _e);
      }, Ke.precision = Ke.sd = function(Xe, tt) {
        var et, Et, lt, $e = this;
        if (Xe != null && Xe !== !!Xe)
          return Ne(Xe, 1, me), tt == null ? tt = Ft : Ne(tt, 0, 8), vt(new De($e), Xe, tt);
        if (!(et = $e.c))
          return null;
        if (lt = et.length - 1, Et = lt * Ae + 1, lt = et[lt]) {
          for (; lt % 10 == 0; lt /= 10, Et--)
            ;
          for (lt = et[0]; lt >= 10; lt /= 10, Et++)
            ;
        }
        return Xe && $e.e + 1 > Et && (Et = $e.e + 1), Et;
      }, Ke.shiftedBy = function(Xe) {
        return Ne(Xe, -Ee, Ee), this.times("1e" + Xe);
      }, Ke.squareRoot = Ke.sqrt = function() {
        var Xe, tt, et, Et, lt, $e = this, _e = $e.c, Be = $e.s, be = $e.e, ke = Nt + 4, Ve = new De("0.5");
        if (Be !== 1 || !_e || !_e[0])
          return new De(!Be || Be < 0 && (!_e || _e[0]) ? NaN : _e ? $e : 1 / 0);
        if (Be = Math.sqrt(+Ut($e)), Be == 0 || Be == 1 / 0 ? (tt = Oe(_e), (tt.length + be) % 2 == 0 && (tt += "0"), Be = Math.sqrt(+tt), be = Ie((be + 1) / 2) - (be < 0 || be % 2), Be == 1 / 0 ? tt = "5e" + be : (tt = Be.toExponential(), tt = tt.slice(0, tt.indexOf("e") + 1) + be), et = new De(tt)) : et = new De(Be + ""), et.c[0]) {
          for (be = et.e, Be = be + ke, Be < 3 && (Be = 0); ; )
            if (lt = et, et = Ve.times(lt.plus(rt($e, lt, ke, 1))), Oe(lt.c).slice(0, Be) === (tt = Oe(et.c)).slice(0, Be))
              if (et.e < be && --Be, tt = tt.slice(Be - 3, Be + 1), tt == "9999" || !Et && tt == "4999") {
                if (!Et && (vt(lt, lt.e + Nt + 2, 0), lt.times(lt).eq($e))) {
                  et = lt;
                  break;
                }
                ke += 4, Be += 4, Et = 1;
              } else {
                (!+tt || !+tt.slice(1) && tt.charAt(0) == "5") && (vt(et, et.e + Nt + 2, 1), Xe = !et.times(et).eq($e));
                break;
              }
        }
        return vt(et, et.e + Nt + 1, Ft, Xe);
      }, Ke.toExponential = function(Xe, tt) {
        return Xe != null && (Ne(Xe, 0, me), Xe++), ar(this, Xe, tt, 1);
      }, Ke.toFixed = function(Xe, tt) {
        return Xe != null && (Ne(Xe, 0, me), Xe = Xe + this.e + 1), ar(this, Xe, tt);
      }, Ke.toFormat = function(Xe, tt, et) {
        var Et, lt = this;
        if (et == null)
          Xe != null && tt && typeof tt == "object" ? (et = tt, tt = null) : Xe && typeof Xe == "object" ? (et = Xe, Xe = tt = null) : et = pt;
        else if (typeof et != "object")
          throw Error(he + "Argument not an object: " + et);
        if (Et = lt.toFixed(Xe, tt), lt.c) {
          var $e, _e = Et.split("."), Be = +et.groupSize, be = +et.secondaryGroupSize, ke = et.groupSeparator || "", Ve = _e[0], Je = _e[1], at = lt.s < 0, Tt = at ? Ve.slice(1) : Ve, Dt = Tt.length;
          if (be && ($e = Be, Be = be, be = $e, Dt -= $e), Be > 0 && Dt > 0) {
            for ($e = Dt % Be || Be, Ve = Tt.substr(0, $e); $e < Dt; $e += Be)
              Ve += ke + Tt.substr($e, Be);
            be > 0 && (Ve += ke + Tt.slice($e)), at && (Ve = "-" + Ve);
          }
          Et = Je ? Ve + (et.decimalSeparator || "") + ((be = +et.fractionGroupSize) ? Je.replace(
            new RegExp("\\d{" + be + "}\\B", "g"),
            "$&" + (et.fractionGroupSeparator || "")
          ) : Je) : Ve;
        }
        return (et.prefix || "") + Et + (et.suffix || "");
      }, Ke.toFraction = function(Xe) {
        var tt, et, Et, lt, $e, _e, Be, be, ke, Ve, Je, at, Tt = this, Dt = Tt.c;
        if (Xe != null && (Be = new De(Xe), !Be.isInteger() && (Be.c || Be.s !== 1) || Be.lt(ht)))
          throw Error(he + "Argument " + (Be.isInteger() ? "out of range: " : "not an integer: ") + Ut(Be));
        if (!Dt)
          return new De(Tt);
        for (tt = new De(ht), ke = et = new De(ht), Et = be = new De(ht), at = Oe(Dt), $e = tt.e = at.length - Tt.e - 1, tt.c[0] = ye[(_e = $e % Ae) < 0 ? Ae + _e : _e], Xe = !Xe || Be.comparedTo(tt) > 0 ? $e > 0 ? tt : ke : Be, _e = Xt, Xt = 1 / 0, Be = new De(at), be.c[0] = 0; Ve = rt(Be, tt, 0, 1), lt = et.plus(Ve.times(Et)), lt.comparedTo(Xe) != 1; )
          et = Et, Et = lt, ke = be.plus(Ve.times(lt = ke)), be = lt, tt = Be.minus(Ve.times(lt = tt)), Be = lt;
        return lt = rt(Xe.minus(et), Et, 0, 1), be = be.plus(lt.times(ke)), et = et.plus(lt.times(Et)), be.s = ke.s = Tt.s, $e = $e * 2, Je = rt(ke, Et, $e, Ft).minus(Tt).abs().comparedTo(
          rt(be, et, $e, Ft).minus(Tt).abs()
        ) < 1 ? [ke, Et] : [be, et], Xt = _e, Je;
      }, Ke.toNumber = function() {
        return +Ut(this);
      }, Ke.toPrecision = function(Xe, tt) {
        return Xe != null && Ne(Xe, 1, me), ar(this, Xe, tt, 2);
      }, Ke.toString = function(Xe) {
        var tt, et = this, Et = et.s, lt = et.e;
        return lt === null ? Et ? (tt = "Infinity", Et < 0 && (tt = "-" + tt)) : tt = "NaN" : (Xe == null ? tt = lt <= At || lt >= St ? Fe(Oe(et.c), lt) : Le(Oe(et.c), lt, "0") : Xe === 10 && qt ? (et = vt(new De(et), Nt + lt + 1, Ft), tt = Le(Oe(et.c), et.e, "0")) : (Ne(Xe, 2, It.length, "Base"), tt = gt(Le(Oe(et.c), lt, "0"), 10, Xe, Et, !0)), Et < 0 && et.c[0] && (tt = "-" + tt)), tt;
      }, Ke.valueOf = Ke.toJSON = function() {
        return Ut(this);
      }, Ke._isBigNumber = !0, We != null && De.set(We), De;
    }
    function Ie(We) {
      var rt = We | 0;
      return We > 0 || We === rt ? rt : rt - 1;
    }
    function Oe(We) {
      for (var rt, gt, kt = 1, Ke = We.length, ht = We[0] + ""; kt < Ke; ) {
        for (rt = We[kt++] + "", gt = Ae - rt.length; gt--; rt = "0" + rt)
          ;
        ht += rt;
      }
      for (Ke = ht.length; ht.charCodeAt(--Ke) === 48; )
        ;
      return ht.slice(0, Ke + 1 || 1);
    }
    function He(We, rt) {
      var gt, kt, Ke = We.c, ht = rt.c, Nt = We.s, Ft = rt.s, At = We.e, St = rt.e;
      if (!Nt || !Ft)
        return null;
      if (gt = Ke && !Ke[0], kt = ht && !ht[0], gt || kt)
        return gt ? kt ? 0 : -Ft : Nt;
      if (Nt != Ft)
        return Nt;
      if (gt = Nt < 0, kt = At == St, !Ke || !ht)
        return kt ? 0 : !Ke ^ gt ? 1 : -1;
      if (!kt)
        return At > St ^ gt ? 1 : -1;
      for (Ft = (At = Ke.length) < (St = ht.length) ? At : St, Nt = 0; Nt < Ft; Nt++)
        if (Ke[Nt] != ht[Nt])
          return Ke[Nt] > ht[Nt] ^ gt ? 1 : -1;
      return At == St ? 0 : At > St ^ gt ? 1 : -1;
    }
    function Ne(We, rt, gt, kt) {
      if (We < rt || We > gt || We !== ce(We))
        throw Error(he + (kt || "Argument") + (typeof We == "number" ? We < rt || We > gt ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(We));
    }
    function Pe(We) {
      var rt = We.c.length - 1;
      return Ie(We.e / Ae) == rt && We.c[rt] % 2 != 0;
    }
    function Fe(We, rt) {
      return (We.length > 1 ? We.charAt(0) + "." + We.slice(1) : We) + (rt < 0 ? "e" : "e+") + rt;
    }
    function Le(We, rt, gt) {
      var kt, Ke;
      if (rt < 0) {
        for (Ke = gt + "."; ++rt; Ke += gt)
          ;
        We = Ke + We;
      } else if (kt = We.length, ++rt > kt) {
        for (Ke = gt, rt -= kt; --rt; Ke += gt)
          ;
        We += Ke;
      } else
        rt < kt && (We = We.slice(0, rt) + "." + We.slice(rt));
      return We;
    }
    ne = Ce(), ne.default = ne.BigNumber = ne, Z.exports ? Z.exports = ne : (ee || (ee = typeof self < "u" && self ? self : window), ee.BigNumber = ne);
  })(commonjsGlobal);
})(bignumber);
var decoder_asm = function Z(ee, ne, ie) {
  var oe = new ee.Uint8Array(ie), ce = ne.pushInt, he = ne.pushInt32, fe = ne.pushInt32Neg, xe = ne.pushInt64, Ae = ne.pushInt64Neg, Ee = ne.pushFloat, ye = ne.pushFloatSingle, ge = ne.pushFloatDouble, me = ne.pushTrue, Ce = ne.pushFalse, Ie = ne.pushUndefined, Oe = ne.pushNull, He = ne.pushInfinity, Ne = ne.pushInfinityNeg, Pe = ne.pushNaN, Fe = ne.pushNaNNeg, Le = ne.pushArrayStart, We = ne.pushArrayStartFixed, rt = ne.pushArrayStartFixed32, gt = ne.pushArrayStartFixed64, kt = ne.pushObjectStart, Ke = ne.pushObjectStartFixed, ht = ne.pushObjectStartFixed32, Nt = ne.pushObjectStartFixed64, Ft = ne.pushByteString, At = ne.pushByteStringStart, St = ne.pushUtf8String, Vt = ne.pushUtf8StringStart, Xt = ne.pushSimpleUnassigned, Lt = ne.pushTagStart, Zt = ne.pushTagStart4, Gt = ne.pushTagStart8, pt = ne.pushTagUnassigned, It = ne.pushBreak, qt = ee.Math.pow, De = 0, ar = 0, rr = 0;
  function Ar(xt) {
    for (xt = xt | 0, De = 0, ar = xt; (De | 0) < (ar | 0) && (rr = $r[oe[De] & 255](oe[De] | 0) | 0, !((rr | 0) > 0)); )
      ;
    return rr | 0;
  }
  function vt(xt) {
    return xt = xt | 0, ((De | 0) + (xt | 0) | 0) < (ar | 0) ? 0 : 1;
  }
  function Ut(xt) {
    return xt = xt | 0, oe[xt | 0] << 8 | oe[xt + 1 | 0] | 0;
  }
  function Xe(xt) {
    return xt = xt | 0, oe[xt | 0] << 24 | oe[xt + 1 | 0] << 16 | oe[xt + 2 | 0] << 8 | oe[xt + 3 | 0] | 0;
  }
  function tt(xt) {
    return xt = xt | 0, ce(xt | 0), De = De + 1 | 0, 0;
  }
  function et(xt) {
    return xt = xt | 0, vt(1) | 0 ? 1 : (ce(oe[De + 1 | 0] | 0), De = De + 2 | 0, 0);
  }
  function Et(xt) {
    return xt = xt | 0, vt(2) | 0 ? 1 : (ce(
      Ut(De + 1 | 0) | 0
    ), De = De + 3 | 0, 0);
  }
  function lt(xt) {
    return xt = xt | 0, vt(4) | 0 ? 1 : (he(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0
    ), De = De + 5 | 0, 0);
  }
  function $e(xt) {
    return xt = xt | 0, vt(8) | 0 ? 1 : (xe(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0,
      Ut(De + 5 | 0) | 0,
      Ut(De + 7 | 0) | 0
    ), De = De + 9 | 0, 0);
  }
  function _e(xt) {
    return xt = xt | 0, ce(-1 - (xt - 32 | 0) | 0), De = De + 1 | 0, 0;
  }
  function Be(xt) {
    return xt = xt | 0, vt(1) | 0 ? 1 : (ce(
      -1 - (oe[De + 1 | 0] | 0) | 0
    ), De = De + 2 | 0, 0);
  }
  function be(xt) {
    xt = xt | 0;
    var Br = 0;
    return vt(2) | 0 ? 1 : (Br = Ut(De + 1 | 0) | 0, ce(-1 - (Br | 0) | 0), De = De + 3 | 0, 0);
  }
  function ke(xt) {
    return xt = xt | 0, vt(4) | 0 ? 1 : (fe(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0
    ), De = De + 5 | 0, 0);
  }
  function Ve(xt) {
    return xt = xt | 0, vt(8) | 0 ? 1 : (Ae(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0,
      Ut(De + 5 | 0) | 0,
      Ut(De + 7 | 0) | 0
    ), De = De + 9 | 0, 0);
  }
  function Je(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 0;
    return Hr = xt - 64 | 0, vt(Hr | 0) | 0 ? 1 : (Br = De + 1 | 0, Wt = (De + 1 | 0) + (Hr | 0) | 0, Ft(Br | 0, Wt | 0), De = Wt | 0, 0);
  }
  function at(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 0;
    return vt(1) | 0 || (Hr = oe[De + 1 | 0] | 0, Br = De + 2 | 0, Wt = (De + 2 | 0) + (Hr | 0) | 0, vt(Hr + 1 | 0) | 0) ? 1 : (Ft(Br | 0, Wt | 0), De = Wt | 0, 0);
  }
  function Tt(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 0;
    return vt(2) | 0 || (Hr = Ut(De + 1 | 0) | 0, Br = De + 3 | 0, Wt = (De + 3 | 0) + (Hr | 0) | 0, vt(Hr + 2 | 0) | 0) ? 1 : (Ft(Br | 0, Wt | 0), De = Wt | 0, 0);
  }
  function Dt(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 0;
    return vt(4) | 0 || (Hr = Xe(De + 1 | 0) | 0, Br = De + 5 | 0, Wt = (De + 5 | 0) + (Hr | 0) | 0, vt(Hr + 4 | 0) | 0) ? 1 : (Ft(Br | 0, Wt | 0), De = Wt | 0, 0);
  }
  function zt(xt) {
    return xt = xt | 0, 1;
  }
  function Yt(xt) {
    return xt = xt | 0, At(), De = De + 1 | 0, 0;
  }
  function Ue(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 0;
    return Hr = xt - 96 | 0, vt(Hr | 0) | 0 ? 1 : (Br = De + 1 | 0, Wt = (De + 1 | 0) + (Hr | 0) | 0, St(Br | 0, Wt | 0), De = Wt | 0, 0);
  }
  function Te(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 0;
    return vt(1) | 0 || (Hr = oe[De + 1 | 0] | 0, Br = De + 2 | 0, Wt = (De + 2 | 0) + (Hr | 0) | 0, vt(Hr + 1 | 0) | 0) ? 1 : (St(Br | 0, Wt | 0), De = Wt | 0, 0);
  }
  function Re(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 0;
    return vt(2) | 0 || (Hr = Ut(De + 1 | 0) | 0, Br = De + 3 | 0, Wt = (De + 3 | 0) + (Hr | 0) | 0, vt(Hr + 2 | 0) | 0) ? 1 : (St(Br | 0, Wt | 0), De = Wt | 0, 0);
  }
  function it(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 0;
    return vt(4) | 0 || (Hr = Xe(De + 1 | 0) | 0, Br = De + 5 | 0, Wt = (De + 5 | 0) + (Hr | 0) | 0, vt(Hr + 4 | 0) | 0) ? 1 : (St(Br | 0, Wt | 0), De = Wt | 0, 0);
  }
  function bt(xt) {
    return xt = xt | 0, 1;
  }
  function Qt(xt) {
    return xt = xt | 0, Vt(), De = De + 1 | 0, 0;
  }
  function jt(xt) {
    return xt = xt | 0, We(xt - 128 | 0), De = De + 1 | 0, 0;
  }
  function yr(xt) {
    return xt = xt | 0, vt(1) | 0 ? 1 : (We(oe[De + 1 | 0] | 0), De = De + 2 | 0, 0);
  }
  function gr(xt) {
    return xt = xt | 0, vt(2) | 0 ? 1 : (We(
      Ut(De + 1 | 0) | 0
    ), De = De + 3 | 0, 0);
  }
  function br(xt) {
    return xt = xt | 0, vt(4) | 0 ? 1 : (rt(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0
    ), De = De + 5 | 0, 0);
  }
  function mr(xt) {
    return xt = xt | 0, vt(8) | 0 ? 1 : (gt(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0,
      Ut(De + 5 | 0) | 0,
      Ut(De + 7 | 0) | 0
    ), De = De + 9 | 0, 0);
  }
  function _r(xt) {
    return xt = xt | 0, Le(), De = De + 1 | 0, 0;
  }
  function en(xt) {
    xt = xt | 0;
    var Br = 0;
    return Br = xt - 160 | 0, vt(Br | 0) | 0 ? 1 : (Ke(Br | 0), De = De + 1 | 0, 0);
  }
  function Jn(xt) {
    return xt = xt | 0, vt(1) | 0 ? 1 : (Ke(oe[De + 1 | 0] | 0), De = De + 2 | 0, 0);
  }
  function an(xt) {
    return xt = xt | 0, vt(2) | 0 ? 1 : (Ke(
      Ut(De + 1 | 0) | 0
    ), De = De + 3 | 0, 0);
  }
  function qn(xt) {
    return xt = xt | 0, vt(4) | 0 ? 1 : (ht(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0
    ), De = De + 5 | 0, 0);
  }
  function $n(xt) {
    return xt = xt | 0, vt(8) | 0 ? 1 : (Nt(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0,
      Ut(De + 5 | 0) | 0,
      Ut(De + 7 | 0) | 0
    ), De = De + 9 | 0, 0);
  }
  function Gn(xt) {
    return xt = xt | 0, kt(), De = De + 1 | 0, 0;
  }
  function Un(xt) {
    return xt = xt | 0, Lt(xt - 192 | 0 | 0), De = De + 1 | 0, 0;
  }
  function oi(xt) {
    return xt = xt | 0, Lt(xt | 0), De = De + 1 | 0, 0;
  }
  function Ai(xt) {
    return xt = xt | 0, Lt(xt | 0), De = De + 1 | 0, 0;
  }
  function Ji(xt) {
    return xt = xt | 0, Lt(xt | 0), De = De + 1 | 0, 0;
  }
  function Ri(xt) {
    return xt = xt | 0, Lt(xt | 0), De = De + 1 | 0, 0;
  }
  function Hn(xt) {
    return xt = xt | 0, Lt(xt - 192 | 0 | 0), De = De + 1 | 0, 0;
  }
  function Xn(xt) {
    return xt = xt | 0, Lt(xt | 0), De = De + 1 | 0, 0;
  }
  function Ln(xt) {
    return xt = xt | 0, Lt(xt | 0), De = De + 1 | 0, 0;
  }
  function si(xt) {
    return xt = xt | 0, Lt(xt | 0), De = De + 1 | 0, 0;
  }
  function gi(xt) {
    return xt = xt | 0, vt(1) | 0 ? 1 : (Lt(oe[De + 1 | 0] | 0), De = De + 2 | 0, 0);
  }
  function mi(xt) {
    return xt = xt | 0, vt(2) | 0 ? 1 : (Lt(
      Ut(De + 1 | 0) | 0
    ), De = De + 3 | 0, 0);
  }
  function yi(xt) {
    return xt = xt | 0, vt(4) | 0 ? 1 : (Zt(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0
    ), De = De + 5 | 0, 0);
  }
  function Rt(xt) {
    return xt = xt | 0, vt(8) | 0 ? 1 : (Gt(
      Ut(De + 1 | 0) | 0,
      Ut(De + 3 | 0) | 0,
      Ut(De + 5 | 0) | 0,
      Ut(De + 7 | 0) | 0
    ), De = De + 9 | 0, 0);
  }
  function tr(xt) {
    return xt = xt | 0, Xt((xt | 0) - 224 | 0), De = De + 1 | 0, 0;
  }
  function Nr(xt) {
    return xt = xt | 0, Ce(), De = De + 1 | 0, 0;
  }
  function on(xt) {
    return xt = xt | 0, me(), De = De + 1 | 0, 0;
  }
  function xn(xt) {
    return xt = xt | 0, Oe(), De = De + 1 | 0, 0;
  }
  function Bn(xt) {
    return xt = xt | 0, Ie(), De = De + 1 | 0, 0;
  }
  function En(xt) {
    return xt = xt | 0, vt(1) | 0 ? 1 : (Xt(oe[De + 1 | 0] | 0), De = De + 2 | 0, 0);
  }
  function pn(xt) {
    xt = xt | 0;
    var Br = 0, Wt = 0, Hr = 1, qe = 0, Ye = 0, ot = 0;
    return vt(2) | 0 ? 1 : (Br = oe[De + 1 | 0] | 0, Wt = oe[De + 2 | 0] | 0, (Br | 0) & 128 && (Hr = -1), qe = +(((Br | 0) & 124) >> 2), Ye = +(((Br | 0) & 3) << 8 | Wt), +qe == 0 ? Ee(+(+Hr * 5960464477539063e-23 * +Ye)) : +qe == 31 ? +Hr == 1 ? +Ye > 0 ? Pe() : He() : +Ye > 0 ? Fe() : Ne() : Ee(+(+Hr * qt(2, +(+qe - 25)) * +(1024 + Ye))), De = De + 3 | 0, 0);
  }
  function Sn(xt) {
    return xt = xt | 0, vt(4) | 0 ? 1 : (ye(
      oe[De + 1 | 0] | 0,
      oe[De + 2 | 0] | 0,
      oe[De + 3 | 0] | 0,
      oe[De + 4 | 0] | 0
    ), De = De + 5 | 0, 0);
  }
  function Vn(xt) {
    return xt = xt | 0, vt(8) | 0 ? 1 : (ge(
      oe[De + 1 | 0] | 0,
      oe[De + 2 | 0] | 0,
      oe[De + 3 | 0] | 0,
      oe[De + 4 | 0] | 0,
      oe[De + 5 | 0] | 0,
      oe[De + 6 | 0] | 0,
      oe[De + 7 | 0] | 0,
      oe[De + 8 | 0] | 0
    ), De = De + 9 | 0, 0);
  }
  function Zr(xt) {
    return xt = xt | 0, 1;
  }
  function Xr(xt) {
    return xt = xt | 0, It(), De = De + 1 | 0, 0;
  }
  var $r = [
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    tt,
    et,
    Et,
    lt,
    $e,
    Zr,
    Zr,
    Zr,
    Zr,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    Be,
    be,
    ke,
    Ve,
    Zr,
    Zr,
    Zr,
    Zr,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    Je,
    at,
    Tt,
    Dt,
    zt,
    Zr,
    Zr,
    Zr,
    Yt,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Ue,
    Te,
    Re,
    it,
    bt,
    Zr,
    Zr,
    Zr,
    Qt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    jt,
    yr,
    gr,
    br,
    mr,
    Zr,
    Zr,
    Zr,
    _r,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    Jn,
    an,
    qn,
    $n,
    Zr,
    Zr,
    Zr,
    Gn,
    Un,
    Un,
    Un,
    Un,
    Un,
    Un,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    gi,
    mi,
    yi,
    Rt,
    Zr,
    Zr,
    Zr,
    Zr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    tr,
    Nr,
    on,
    xn,
    Bn,
    En,
    pn,
    Sn,
    Vn,
    Zr,
    Zr,
    Zr,
    Xr
  ];
  return {
    parse: Ar
  };
}, utils$3 = {}, constants$3 = {};
const Bignumber$2 = bignumber.exports.BigNumber;
constants$3.MT = {
  POS_INT: 0,
  NEG_INT: 1,
  BYTE_STRING: 2,
  UTF8_STRING: 3,
  ARRAY: 4,
  MAP: 5,
  TAG: 6,
  SIMPLE_FLOAT: 7
};
constants$3.TAG = {
  DATE_STRING: 0,
  DATE_EPOCH: 1,
  POS_BIGINT: 2,
  NEG_BIGINT: 3,
  DECIMAL_FRAC: 4,
  BIGFLOAT: 5,
  BASE64URL_EXPECTED: 21,
  BASE64_EXPECTED: 22,
  BASE16_EXPECTED: 23,
  CBOR: 24,
  URI: 32,
  BASE64URL: 33,
  BASE64: 34,
  REGEXP: 35,
  MIME: 36
};
constants$3.NUMBYTES = {
  ZERO: 0,
  ONE: 24,
  TWO: 25,
  FOUR: 26,
  EIGHT: 27,
  INDEFINITE: 31
};
constants$3.SIMPLE = {
  FALSE: 20,
  TRUE: 21,
  NULL: 22,
  UNDEFINED: 23
};
constants$3.SYMS = {
  NULL: Symbol("null"),
  UNDEFINED: Symbol("undef"),
  PARENT: Symbol("parent"),
  BREAK: Symbol("break"),
  STREAM: Symbol("stream")
};
constants$3.SHIFT32 = Math.pow(2, 32);
constants$3.SHIFT16 = Math.pow(2, 16);
constants$3.MAX_SAFE_HIGH = 2097151;
constants$3.NEG_ONE = new Bignumber$2(-1);
constants$3.TEN = new Bignumber$2(10);
constants$3.TWO = new Bignumber$2(2);
constants$3.PARENT = {
  ARRAY: 0,
  OBJECT: 1,
  MAP: 2,
  TAG: 3,
  BYTE_STRING: 4,
  UTF8_STRING: 5
};
(function(Z) {
  const { Buffer: ee } = buffer$1, ne = bignumber.exports.BigNumber, ie = constants$3, oe = ie.SHIFT32, ce = ie.SHIFT16, he = 2097151;
  Z.parseHalf = function(Ae) {
    var Ee, ye, ge;
    return ge = Ae[0] & 128 ? -1 : 1, Ee = (Ae[0] & 124) >> 2, ye = (Ae[0] & 3) << 8 | Ae[1], Ee ? Ee === 31 ? ge * (ye ? 0 / 0 : 1 / 0) : ge * Math.pow(2, Ee - 25) * (1024 + ye) : ge * 5960464477539063e-23 * ye;
  };
  function fe(xe) {
    return xe < 16 ? "0" + xe.toString(16) : xe.toString(16);
  }
  Z.arrayBufferToBignumber = function(xe) {
    const Ae = xe.byteLength;
    let Ee = "";
    for (let ye = 0; ye < Ae; ye++)
      Ee += fe(xe[ye]);
    return new ne(Ee, 16);
  }, Z.buildMap = (xe) => {
    const Ae = /* @__PURE__ */ new Map(), Ee = Object.keys(xe), ye = Ee.length;
    for (let ge = 0; ge < ye; ge++)
      Ae.set(Ee[ge], xe[Ee[ge]]);
    return Ae;
  }, Z.buildInt32 = (xe, Ae) => xe * ce + Ae, Z.buildInt64 = (xe, Ae, Ee, ye) => {
    const ge = Z.buildInt32(xe, Ae), me = Z.buildInt32(Ee, ye);
    return ge > he ? new ne(ge).times(oe).plus(me) : ge * oe + me;
  }, Z.writeHalf = function(Ae, Ee) {
    const ye = ee.allocUnsafe(4);
    ye.writeFloatBE(Ee, 0);
    const ge = ye.readUInt32BE(0);
    if ((ge & 8191) !== 0)
      return !1;
    var me = ge >> 16 & 32768;
    const Ce = ge >> 23 & 255, Ie = ge & 8388607;
    if (Ce >= 113 && Ce <= 142)
      me += (Ce - 112 << 10) + (Ie >> 13);
    else if (Ce >= 103 && Ce < 113) {
      if (Ie & (1 << 126 - Ce) - 1)
        return !1;
      me += Ie + 8388608 >> 126 - Ce;
    } else
      return !1;
    return Ae.writeUInt16BE(me, 0), !0;
  }, Z.keySorter = function(xe, Ae) {
    var Ee = xe[0].byteLength, ye = Ae[0].byteLength;
    return Ee > ye ? 1 : ye > Ee ? -1 : xe[0].compare(Ae[0]);
  }, Z.isNegativeZero = (xe) => xe === 0 && 1 / xe < 0, Z.nextPowerOf2 = (xe) => {
    let Ae = 0;
    if (xe && !(xe & xe - 1))
      return xe;
    for (; xe !== 0; )
      xe >>= 1, Ae += 1;
    return 1 << Ae;
  };
})(utils$3);
const constants$2 = constants$3, MT$1 = constants$2.MT, SIMPLE = constants$2.SIMPLE, SYMS$1 = constants$2.SYMS;
class Simple$1 {
  constructor(ee) {
    if (typeof ee != "number")
      throw new Error("Invalid Simple type: " + typeof ee);
    if (ee < 0 || ee > 255 || (ee | 0) !== ee)
      throw new Error("value must be a small positive integer: " + ee);
    this.value = ee;
  }
  toString() {
    return "simple(" + this.value + ")";
  }
  inspect() {
    return "simple(" + this.value + ")";
  }
  encodeCBOR(ee) {
    return ee._pushInt(this.value, MT$1.SIMPLE_FLOAT);
  }
  static isSimple(ee) {
    return ee instanceof Simple$1;
  }
  static decode(ee, ne) {
    switch (ne == null && (ne = !0), ee) {
      case SIMPLE.FALSE:
        return !1;
      case SIMPLE.TRUE:
        return !0;
      case SIMPLE.NULL:
        return ne ? null : SYMS$1.NULL;
      case SIMPLE.UNDEFINED:
        return ne ? void 0 : SYMS$1.UNDEFINED;
      case -1:
        if (!ne)
          throw new Error("Invalid BREAK");
        return SYMS$1.BREAK;
      default:
        return new Simple$1(ee);
    }
  }
}
var simple = Simple$1;
class Tagged$1 {
  constructor(ee, ne, ie) {
    if (this.tag = ee, this.value = ne, this.err = ie, typeof this.tag != "number")
      throw new Error("Invalid tag type (" + typeof this.tag + ")");
    if (this.tag < 0 || (this.tag | 0) !== this.tag)
      throw new Error("Tag must be a positive integer: " + this.tag);
  }
  toString() {
    return `${this.tag}(${JSON.stringify(this.value)})`;
  }
  encodeCBOR(ee) {
    return ee._pushTag(this.tag), ee.pushAny(this.value);
  }
  convert(ee) {
    var ne, ie;
    if (ie = ee != null ? ee[this.tag] : void 0, typeof ie != "function" && (ie = Tagged$1["_tag" + this.tag], typeof ie != "function"))
      return this;
    try {
      return ie.call(Tagged$1, this.value);
    } catch (oe) {
      return ne = oe, this.err = ne, this;
    }
  }
}
var tagged$1 = Tagged$1;
const defaultBase$1 = self.location ? self.location.protocol + "//" + self.location.host : "", URL$3 = self.URL;
class URLWithLegacySupport$2 {
  constructor(ee = "", ne = defaultBase$1) {
    this.super = new URL$3(ee, ne), this.path = this.pathname + this.search, this.auth = this.username && this.password ? this.username + ":" + this.password : null, this.query = this.search && this.search.startsWith("?") ? this.search.slice(1) : null;
  }
  get hash() {
    return this.super.hash;
  }
  get host() {
    return this.super.host;
  }
  get hostname() {
    return this.super.hostname;
  }
  get href() {
    return this.super.href;
  }
  get origin() {
    return this.super.origin;
  }
  get password() {
    return this.super.password;
  }
  get pathname() {
    return this.super.pathname;
  }
  get port() {
    return this.super.port;
  }
  get protocol() {
    return this.super.protocol;
  }
  get search() {
    return this.super.search;
  }
  get searchParams() {
    return this.super.searchParams;
  }
  get username() {
    return this.super.username;
  }
  set hash(ee) {
    this.super.hash = ee;
  }
  set host(ee) {
    this.super.host = ee;
  }
  set hostname(ee) {
    this.super.hostname = ee;
  }
  set href(ee) {
    this.super.href = ee;
  }
  set origin(ee) {
    this.super.origin = ee;
  }
  set password(ee) {
    this.super.password = ee;
  }
  set pathname(ee) {
    this.super.pathname = ee;
  }
  set port(ee) {
    this.super.port = ee;
  }
  set protocol(ee) {
    this.super.protocol = ee;
  }
  set search(ee) {
    this.super.search = ee;
  }
  set searchParams(ee) {
    this.super.searchParams = ee;
  }
  set username(ee) {
    this.super.username = ee;
  }
  createObjectURL(ee) {
    return this.super.createObjectURL(ee);
  }
  revokeObjectURL(ee) {
    this.super.revokeObjectURL(ee);
  }
  toJSON() {
    return this.super.toJSON();
  }
  toString() {
    return this.super.toString();
  }
  format() {
    return this.toString();
  }
}
function format$3(Z) {
  if (typeof Z == "string")
    return new URL$3(Z).toString();
  if (!(Z instanceof URL$3)) {
    const ee = Z.username && Z.password ? `${Z.username}:${Z.password}@` : "", ne = Z.auth ? Z.auth + "@" : "", ie = Z.port ? ":" + Z.port : "", oe = Z.protocol ? Z.protocol + "//" : "", ce = Z.host || "", he = Z.hostname || "", fe = Z.search || (Z.query ? "?" + Z.query : ""), xe = Z.hash || "", Ae = Z.pathname || "", Ee = Z.path || Ae + fe;
    return `${oe}${ee || ne}${ce || he + ie}${Ee}${xe}`;
  }
}
var urlBrowser = {
  URLWithLegacySupport: URLWithLegacySupport$2,
  URLSearchParams: self.URLSearchParams,
  defaultBase: defaultBase$1,
  format: format$3
};
const { URLWithLegacySupport: URLWithLegacySupport$1, format: format$2 } = urlBrowser;
var relative$1 = (Z, ee = {}, ne = {}, ie) => {
  let oe = ee.protocol ? ee.protocol.replace(":", "") : "http";
  oe = (ne[oe] || ie || oe) + ":";
  let ce;
  try {
    ce = new URLWithLegacySupport$1(Z);
  } catch {
    ce = {};
  }
  const he = Object.assign({}, ee, {
    protocol: oe || ce.protocol,
    host: ee.host || ce.host
  });
  return new URLWithLegacySupport$1(Z, format$2(he)).toString();
};
const {
  URLWithLegacySupport,
  format: format$1,
  URLSearchParams: URLSearchParams$1,
  defaultBase
} = urlBrowser, relative = relative$1;
var isoUrl = {
  URL: URLWithLegacySupport,
  URLSearchParams: URLSearchParams$1,
  format: format$1,
  relative,
  defaultBase
};
const { Buffer: Buffer$5 } = buffer$1, ieee754 = ieee754$1, Bignumber$1 = bignumber.exports.BigNumber, parser = decoder_asm, utils$2 = utils$3, c = constants$3, Simple = simple, Tagged = tagged$1, { URL: URL$2 } = isoUrl;
class Decoder$1 {
  constructor(ee) {
    ee = ee || {}, !ee.size || ee.size < 65536 ? ee.size = 65536 : ee.size = utils$2.nextPowerOf2(ee.size), this._heap = new ArrayBuffer(ee.size), this._heap8 = new Uint8Array(this._heap), this._buffer = Buffer$5.from(this._heap), this._reset(), this._knownTags = Object.assign({
      0: (ne) => new Date(ne),
      1: (ne) => new Date(ne * 1e3),
      2: (ne) => utils$2.arrayBufferToBignumber(ne),
      3: (ne) => c.NEG_ONE.minus(utils$2.arrayBufferToBignumber(ne)),
      4: (ne) => c.TEN.pow(ne[0]).times(ne[1]),
      5: (ne) => c.TWO.pow(ne[0]).times(ne[1]),
      32: (ne) => new URL$2(ne),
      35: (ne) => new RegExp(ne)
    }, ee.tags), this.parser = parser(commonjsGlobal, {
      log: console.log.bind(console),
      pushInt: this.pushInt.bind(this),
      pushInt32: this.pushInt32.bind(this),
      pushInt32Neg: this.pushInt32Neg.bind(this),
      pushInt64: this.pushInt64.bind(this),
      pushInt64Neg: this.pushInt64Neg.bind(this),
      pushFloat: this.pushFloat.bind(this),
      pushFloatSingle: this.pushFloatSingle.bind(this),
      pushFloatDouble: this.pushFloatDouble.bind(this),
      pushTrue: this.pushTrue.bind(this),
      pushFalse: this.pushFalse.bind(this),
      pushUndefined: this.pushUndefined.bind(this),
      pushNull: this.pushNull.bind(this),
      pushInfinity: this.pushInfinity.bind(this),
      pushInfinityNeg: this.pushInfinityNeg.bind(this),
      pushNaN: this.pushNaN.bind(this),
      pushNaNNeg: this.pushNaNNeg.bind(this),
      pushArrayStart: this.pushArrayStart.bind(this),
      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),
      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),
      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),
      pushObjectStart: this.pushObjectStart.bind(this),
      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),
      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),
      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),
      pushByteString: this.pushByteString.bind(this),
      pushByteStringStart: this.pushByteStringStart.bind(this),
      pushUtf8String: this.pushUtf8String.bind(this),
      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),
      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),
      pushTagUnassigned: this.pushTagUnassigned.bind(this),
      pushTagStart: this.pushTagStart.bind(this),
      pushTagStart4: this.pushTagStart4.bind(this),
      pushTagStart8: this.pushTagStart8.bind(this),
      pushBreak: this.pushBreak.bind(this)
    }, this._heap);
  }
  get _depth() {
    return this._parents.length;
  }
  get _currentParent() {
    return this._parents[this._depth - 1];
  }
  get _ref() {
    return this._currentParent.ref;
  }
  _closeParent() {
    var ee = this._parents.pop();
    if (ee.length > 0)
      throw new Error(`Missing ${ee.length} elements`);
    switch (ee.type) {
      case c.PARENT.TAG:
        this._push(
          this.createTag(ee.ref[0], ee.ref[1])
        );
        break;
      case c.PARENT.BYTE_STRING:
        this._push(this.createByteString(ee.ref, ee.length));
        break;
      case c.PARENT.UTF8_STRING:
        this._push(this.createUtf8String(ee.ref, ee.length));
        break;
      case c.PARENT.MAP:
        if (ee.values % 2 > 0)
          throw new Error("Odd number of elements in the map");
        this._push(this.createMap(ee.ref, ee.length));
        break;
      case c.PARENT.OBJECT:
        if (ee.values % 2 > 0)
          throw new Error("Odd number of elements in the map");
        this._push(this.createObject(ee.ref, ee.length));
        break;
      case c.PARENT.ARRAY:
        this._push(this.createArray(ee.ref, ee.length));
        break;
    }
    this._currentParent && this._currentParent.type === c.PARENT.TAG && this._dec();
  }
  _dec() {
    const ee = this._currentParent;
    ee.length < 0 || (ee.length--, ee.length === 0 && this._closeParent());
  }
  _push(ee, ne) {
    const ie = this._currentParent;
    switch (ie.values++, ie.type) {
      case c.PARENT.ARRAY:
      case c.PARENT.BYTE_STRING:
      case c.PARENT.UTF8_STRING:
        ie.length > -1 ? this._ref[this._ref.length - ie.length] = ee : this._ref.push(ee), this._dec();
        break;
      case c.PARENT.OBJECT:
        ie.tmpKey != null ? (this._ref[ie.tmpKey] = ee, ie.tmpKey = null, this._dec()) : (ie.tmpKey = ee, typeof ie.tmpKey != "string" && (ie.type = c.PARENT.MAP, ie.ref = utils$2.buildMap(ie.ref)));
        break;
      case c.PARENT.MAP:
        ie.tmpKey != null ? (this._ref.set(ie.tmpKey, ee), ie.tmpKey = null, this._dec()) : ie.tmpKey = ee;
        break;
      case c.PARENT.TAG:
        this._ref.push(ee), ne || this._dec();
        break;
      default:
        throw new Error("Unknown parent type");
    }
  }
  _createParent(ee, ne, ie) {
    this._parents[this._depth] = {
      type: ne,
      length: ie,
      ref: ee,
      values: 0,
      tmpKey: null
    };
  }
  _reset() {
    this._res = [], this._parents = [{
      type: c.PARENT.ARRAY,
      length: -1,
      ref: this._res,
      values: 0,
      tmpKey: null
    }];
  }
  createTag(ee, ne) {
    const ie = this._knownTags[ee];
    return ie ? ie(ne) : new Tagged(ee, ne);
  }
  createMap(ee, ne) {
    return ee;
  }
  createObject(ee, ne) {
    return ee;
  }
  createArray(ee, ne) {
    return ee;
  }
  createByteString(ee, ne) {
    return Buffer$5.concat(ee);
  }
  createByteStringFromHeap(ee, ne) {
    return ee === ne ? Buffer$5.alloc(0) : Buffer$5.from(this._heap.slice(ee, ne));
  }
  createInt(ee) {
    return ee;
  }
  createInt32(ee, ne) {
    return utils$2.buildInt32(ee, ne);
  }
  createInt64(ee, ne, ie, oe) {
    return utils$2.buildInt64(ee, ne, ie, oe);
  }
  createFloat(ee) {
    return ee;
  }
  createFloatSingle(ee, ne, ie, oe) {
    return ieee754.read([ee, ne, ie, oe], 0, !1, 23, 4);
  }
  createFloatDouble(ee, ne, ie, oe, ce, he, fe, xe) {
    return ieee754.read([ee, ne, ie, oe, ce, he, fe, xe], 0, !1, 52, 8);
  }
  createInt32Neg(ee, ne) {
    return -1 - utils$2.buildInt32(ee, ne);
  }
  createInt64Neg(ee, ne, ie, oe) {
    const ce = utils$2.buildInt32(ee, ne), he = utils$2.buildInt32(ie, oe);
    return ce > c.MAX_SAFE_HIGH ? c.NEG_ONE.minus(new Bignumber$1(ce).times(c.SHIFT32).plus(he)) : -1 - (ce * c.SHIFT32 + he);
  }
  createTrue() {
    return !0;
  }
  createFalse() {
    return !1;
  }
  createNull() {
    return null;
  }
  createUndefined() {
  }
  createInfinity() {
    return 1 / 0;
  }
  createInfinityNeg() {
    return -1 / 0;
  }
  createNaN() {
    return NaN;
  }
  createNaNNeg() {
    return NaN;
  }
  createUtf8String(ee, ne) {
    return ee.join("");
  }
  createUtf8StringFromHeap(ee, ne) {
    return ee === ne ? "" : this._buffer.toString("utf8", ee, ne);
  }
  createSimpleUnassigned(ee) {
    return new Simple(ee);
  }
  pushInt(ee) {
    this._push(this.createInt(ee));
  }
  pushInt32(ee, ne) {
    this._push(this.createInt32(ee, ne));
  }
  pushInt64(ee, ne, ie, oe) {
    this._push(this.createInt64(ee, ne, ie, oe));
  }
  pushFloat(ee) {
    this._push(this.createFloat(ee));
  }
  pushFloatSingle(ee, ne, ie, oe) {
    this._push(this.createFloatSingle(ee, ne, ie, oe));
  }
  pushFloatDouble(ee, ne, ie, oe, ce, he, fe, xe) {
    this._push(this.createFloatDouble(ee, ne, ie, oe, ce, he, fe, xe));
  }
  pushInt32Neg(ee, ne) {
    this._push(this.createInt32Neg(ee, ne));
  }
  pushInt64Neg(ee, ne, ie, oe) {
    this._push(this.createInt64Neg(ee, ne, ie, oe));
  }
  pushTrue() {
    this._push(this.createTrue());
  }
  pushFalse() {
    this._push(this.createFalse());
  }
  pushNull() {
    this._push(this.createNull());
  }
  pushUndefined() {
    this._push(this.createUndefined());
  }
  pushInfinity() {
    this._push(this.createInfinity());
  }
  pushInfinityNeg() {
    this._push(this.createInfinityNeg());
  }
  pushNaN() {
    this._push(this.createNaN());
  }
  pushNaNNeg() {
    this._push(this.createNaNNeg());
  }
  pushArrayStart() {
    this._createParent([], c.PARENT.ARRAY, -1);
  }
  pushArrayStartFixed(ee) {
    this._createArrayStartFixed(ee);
  }
  pushArrayStartFixed32(ee, ne) {
    const ie = utils$2.buildInt32(ee, ne);
    this._createArrayStartFixed(ie);
  }
  pushArrayStartFixed64(ee, ne, ie, oe) {
    const ce = utils$2.buildInt64(ee, ne, ie, oe);
    this._createArrayStartFixed(ce);
  }
  pushObjectStart() {
    this._createObjectStartFixed(-1);
  }
  pushObjectStartFixed(ee) {
    this._createObjectStartFixed(ee);
  }
  pushObjectStartFixed32(ee, ne) {
    const ie = utils$2.buildInt32(ee, ne);
    this._createObjectStartFixed(ie);
  }
  pushObjectStartFixed64(ee, ne, ie, oe) {
    const ce = utils$2.buildInt64(ee, ne, ie, oe);
    this._createObjectStartFixed(ce);
  }
  pushByteStringStart() {
    this._parents[this._depth] = {
      type: c.PARENT.BYTE_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    };
  }
  pushByteString(ee, ne) {
    this._push(this.createByteStringFromHeap(ee, ne));
  }
  pushUtf8StringStart() {
    this._parents[this._depth] = {
      type: c.PARENT.UTF8_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    };
  }
  pushUtf8String(ee, ne) {
    this._push(this.createUtf8StringFromHeap(ee, ne));
  }
  pushSimpleUnassigned(ee) {
    this._push(this.createSimpleUnassigned(ee));
  }
  pushTagStart(ee) {
    this._parents[this._depth] = {
      type: c.PARENT.TAG,
      length: 1,
      ref: [ee]
    };
  }
  pushTagStart4(ee, ne) {
    this.pushTagStart(utils$2.buildInt32(ee, ne));
  }
  pushTagStart8(ee, ne, ie, oe) {
    this.pushTagStart(utils$2.buildInt64(ee, ne, ie, oe));
  }
  pushTagUnassigned(ee) {
    this._push(this.createTag(ee));
  }
  pushBreak() {
    if (this._currentParent.length > -1)
      throw new Error("Unexpected break");
    this._closeParent();
  }
  _createObjectStartFixed(ee) {
    if (ee === 0) {
      this._push(this.createObject({}));
      return;
    }
    this._createParent({}, c.PARENT.OBJECT, ee);
  }
  _createArrayStartFixed(ee) {
    if (ee === 0) {
      this._push(this.createArray([]));
      return;
    }
    this._createParent(new Array(ee), c.PARENT.ARRAY, ee);
  }
  _decode(ee) {
    if (ee.byteLength === 0)
      throw new Error("Input too short");
    this._reset(), this._heap8.set(ee);
    const ne = this.parser.parse(ee.byteLength);
    if (this._depth > 1) {
      for (; this._currentParent.length === 0; )
        this._closeParent();
      if (this._depth > 1)
        throw new Error("Undeterminated nesting");
    }
    if (ne > 0)
      throw new Error("Failed to parse");
    if (this._res.length === 0)
      throw new Error("No valid result");
  }
  decodeFirst(ee) {
    return this._decode(ee), this._res[0];
  }
  decodeAll(ee) {
    return this._decode(ee), this._res;
  }
  static decode(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$5.from(ee, ne || "hex")), new Decoder$1({ size: ee.length }).decodeFirst(ee);
  }
  static decodeAll(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$5.from(ee, ne || "hex")), new Decoder$1({ size: ee.length }).decodeAll(ee);
  }
}
Decoder$1.decodeFirst = Decoder$1.decode;
var decoder = Decoder$1;
const { Buffer: Buffer$4 } = buffer$1, Decoder = decoder, utils$1 = utils$3;
class Diagnose extends Decoder {
  createTag(ee, ne) {
    return `${ee}(${ne})`;
  }
  createInt(ee) {
    return super.createInt(ee).toString();
  }
  createInt32(ee, ne) {
    return super.createInt32(ee, ne).toString();
  }
  createInt64(ee, ne, ie, oe) {
    return super.createInt64(ee, ne, ie, oe).toString();
  }
  createInt32Neg(ee, ne) {
    return super.createInt32Neg(ee, ne).toString();
  }
  createInt64Neg(ee, ne, ie, oe) {
    return super.createInt64Neg(ee, ne, ie, oe).toString();
  }
  createTrue() {
    return "true";
  }
  createFalse() {
    return "false";
  }
  createFloat(ee) {
    const ne = super.createFloat(ee);
    return utils$1.isNegativeZero(ee) ? "-0_1" : `${ne}_1`;
  }
  createFloatSingle(ee, ne, ie, oe) {
    return `${super.createFloatSingle(ee, ne, ie, oe)}_2`;
  }
  createFloatDouble(ee, ne, ie, oe, ce, he, fe, xe) {
    return `${super.createFloatDouble(ee, ne, ie, oe, ce, he, fe, xe)}_3`;
  }
  createByteString(ee, ne) {
    const ie = ee.join(", ");
    return ne === -1 ? `(_ ${ie})` : `h'${ie}`;
  }
  createByteStringFromHeap(ee, ne) {
    return `h'${Buffer$4.from(
      super.createByteStringFromHeap(ee, ne)
    ).toString("hex")}'`;
  }
  createInfinity() {
    return "Infinity_1";
  }
  createInfinityNeg() {
    return "-Infinity_1";
  }
  createNaN() {
    return "NaN_1";
  }
  createNaNNeg() {
    return "-NaN_1";
  }
  createNull() {
    return "null";
  }
  createUndefined() {
    return "undefined";
  }
  createSimpleUnassigned(ee) {
    return `simple(${ee})`;
  }
  createArray(ee, ne) {
    const ie = super.createArray(ee, ne);
    return ne === -1 ? `[_ ${ie.join(", ")}]` : `[${ie.join(", ")}]`;
  }
  createMap(ee, ne) {
    const ie = super.createMap(ee), oe = Array.from(ie.keys()).reduce(collectObject(ie), "");
    return ne === -1 ? `{_ ${oe}}` : `{${oe}}`;
  }
  createObject(ee, ne) {
    const ie = super.createObject(ee), oe = Object.keys(ie).reduce(collectObject(ie), "");
    return ne === -1 ? `{_ ${oe}}` : `{${oe}}`;
  }
  createUtf8String(ee, ne) {
    const ie = ee.join(", ");
    return ne === -1 ? `(_ ${ie})` : `"${ie}"`;
  }
  createUtf8StringFromHeap(ee, ne) {
    return `"${Buffer$4.from(
      super.createUtf8StringFromHeap(ee, ne)
    ).toString("utf8")}"`;
  }
  static diagnose(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$4.from(ee, ne || "hex")), new Diagnose().decodeFirst(ee);
  }
}
var diagnose = Diagnose;
function collectObject(Z) {
  return (ee, ne) => ee ? `${ee}, ${ne}: ${Z[ne]}` : `${ne}: ${Z[ne]}`;
}
const { Buffer: Buffer$3 } = buffer$1, { URL: URL$1 } = isoUrl, Bignumber = bignumber.exports.BigNumber, utils = utils$3, constants$1 = constants$3, MT = constants$1.MT, NUMBYTES = constants$1.NUMBYTES, SHIFT32 = constants$1.SHIFT32, SYMS = constants$1.SYMS, TAG = constants$1.TAG, HALF = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.TWO, FLOAT = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.FOUR, DOUBLE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.EIGHT, TRUE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.TRUE, FALSE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.FALSE, UNDEFINED = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.UNDEFINED, NULL = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.NULL, MAXINT_BN = new Bignumber("0x20000000000000"), BUF_NAN = Buffer$3.from("f97e00", "hex"), BUF_INF_NEG = Buffer$3.from("f9fc00", "hex"), BUF_INF_POS = Buffer$3.from("f97c00", "hex");
function toType(Z) {
  return {}.toString.call(Z).slice(8, -1);
}
class Encoder {
  constructor(ee) {
    ee = ee || {}, this.streaming = typeof ee.stream == "function", this.onData = ee.stream, this.semanticTypes = [
      [URL$1, this._pushUrl],
      [Bignumber, this._pushBigNumber]
    ];
    const ne = ee.genTypes || [], ie = ne.length;
    for (let oe = 0; oe < ie; oe++)
      this.addSemanticType(
        ne[oe][0],
        ne[oe][1]
      );
    this._reset();
  }
  addSemanticType(ee, ne) {
    const ie = this.semanticTypes.length;
    for (let oe = 0; oe < ie; oe++)
      if (this.semanticTypes[oe][0] === ee) {
        const he = this.semanticTypes[oe][1];
        return this.semanticTypes[oe][1] = ne, he;
      }
    return this.semanticTypes.push([ee, ne]), null;
  }
  push(ee) {
    return ee && (this.result[this.offset] = ee, this.resultMethod[this.offset] = 0, this.resultLength[this.offset] = ee.length, this.offset++, this.streaming && this.onData(this.finalize())), !0;
  }
  pushWrite(ee, ne, ie) {
    return this.result[this.offset] = ee, this.resultMethod[this.offset] = ne, this.resultLength[this.offset] = ie, this.offset++, this.streaming && this.onData(this.finalize()), !0;
  }
  _pushUInt8(ee) {
    return this.pushWrite(ee, 1, 1);
  }
  _pushUInt16BE(ee) {
    return this.pushWrite(ee, 2, 2);
  }
  _pushUInt32BE(ee) {
    return this.pushWrite(ee, 3, 4);
  }
  _pushDoubleBE(ee) {
    return this.pushWrite(ee, 4, 8);
  }
  _pushNaN() {
    return this.push(BUF_NAN);
  }
  _pushInfinity(ee) {
    const ne = ee < 0 ? BUF_INF_NEG : BUF_INF_POS;
    return this.push(ne);
  }
  _pushFloat(ee) {
    const ne = Buffer$3.allocUnsafe(2);
    if (utils.writeHalf(ne, ee) && utils.parseHalf(ne) === ee)
      return this._pushUInt8(HALF) && this.push(ne);
    const ie = Buffer$3.allocUnsafe(4);
    return ie.writeFloatBE(ee, 0), ie.readFloatBE(0) === ee ? this._pushUInt8(FLOAT) && this.push(ie) : this._pushUInt8(DOUBLE) && this._pushDoubleBE(ee);
  }
  _pushInt(ee, ne, ie) {
    const oe = ne << 5;
    return ee < 24 ? this._pushUInt8(oe | ee) : ee <= 255 ? this._pushUInt8(oe | NUMBYTES.ONE) && this._pushUInt8(ee) : ee <= 65535 ? this._pushUInt8(oe | NUMBYTES.TWO) && this._pushUInt16BE(ee) : ee <= 4294967295 ? this._pushUInt8(oe | NUMBYTES.FOUR) && this._pushUInt32BE(ee) : ee <= Number.MAX_SAFE_INTEGER ? this._pushUInt8(oe | NUMBYTES.EIGHT) && this._pushUInt32BE(Math.floor(ee / SHIFT32)) && this._pushUInt32BE(ee % SHIFT32) : ne === MT.NEG_INT ? this._pushFloat(ie) : this._pushFloat(ee);
  }
  _pushIntNum(ee) {
    return ee < 0 ? this._pushInt(-ee - 1, MT.NEG_INT, ee) : this._pushInt(ee, MT.POS_INT);
  }
  _pushNumber(ee) {
    switch (!1) {
      case ee === ee:
        return this._pushNaN(ee);
      case isFinite(ee):
        return this._pushInfinity(ee);
      case ee % 1 !== 0:
        return this._pushIntNum(ee);
      default:
        return this._pushFloat(ee);
    }
  }
  _pushString(ee) {
    const ne = Buffer$3.byteLength(ee, "utf8");
    return this._pushInt(ne, MT.UTF8_STRING) && this.pushWrite(ee, 5, ne);
  }
  _pushBoolean(ee) {
    return this._pushUInt8(ee ? TRUE : FALSE);
  }
  _pushUndefined(ee) {
    return this._pushUInt8(UNDEFINED);
  }
  _pushArray(ee, ne) {
    const ie = ne.length;
    if (!ee._pushInt(ie, MT.ARRAY))
      return !1;
    for (let oe = 0; oe < ie; oe++)
      if (!ee.pushAny(ne[oe]))
        return !1;
    return !0;
  }
  _pushTag(ee) {
    return this._pushInt(ee, MT.TAG);
  }
  _pushDate(ee, ne) {
    return ee._pushTag(TAG.DATE_EPOCH) && ee.pushAny(Math.round(ne / 1e3));
  }
  _pushBuffer(ee, ne) {
    return ee._pushInt(ne.length, MT.BYTE_STRING) && ee.push(ne);
  }
  _pushNoFilter(ee, ne) {
    return ee._pushBuffer(ee, ne.slice());
  }
  _pushRegexp(ee, ne) {
    return ee._pushTag(TAG.REGEXP) && ee.pushAny(ne.source);
  }
  _pushSet(ee, ne) {
    if (!ee._pushInt(ne.size, MT.ARRAY))
      return !1;
    for (const ie of ne)
      if (!ee.pushAny(ie))
        return !1;
    return !0;
  }
  _pushUrl(ee, ne) {
    return ee._pushTag(TAG.URI) && ee.pushAny(ne.format());
  }
  _pushBigint(ee) {
    let ne = TAG.POS_BIGINT;
    ee.isNegative() && (ee = ee.negated().minus(1), ne = TAG.NEG_BIGINT);
    let ie = ee.toString(16);
    ie.length % 2 && (ie = "0" + ie);
    const oe = Buffer$3.from(ie, "hex");
    return this._pushTag(ne) && this._pushBuffer(this, oe);
  }
  _pushBigNumber(ee, ne) {
    if (ne.isNaN())
      return ee._pushNaN();
    if (!ne.isFinite())
      return ee._pushInfinity(ne.isNegative() ? -1 / 0 : 1 / 0);
    if (ne.isInteger())
      return ee._pushBigint(ne);
    if (!(ee._pushTag(TAG.DECIMAL_FRAC) && ee._pushInt(2, MT.ARRAY)))
      return !1;
    const ie = ne.decimalPlaces(), oe = ne.multipliedBy(new Bignumber(10).pow(ie));
    return ee._pushIntNum(-ie) ? oe.abs().isLessThan(MAXINT_BN) ? ee._pushIntNum(oe.toNumber()) : ee._pushBigint(oe) : !1;
  }
  _pushMap(ee, ne) {
    return ee._pushInt(ne.size, MT.MAP) ? this._pushRawMap(
      ne.size,
      Array.from(ne)
    ) : !1;
  }
  _pushObject(ee) {
    if (!ee)
      return this._pushUInt8(NULL);
    for (var ne = this.semanticTypes.length, ie = 0; ie < ne; ie++)
      if (ee instanceof this.semanticTypes[ie][0])
        return this.semanticTypes[ie][1].call(ee, this, ee);
    var oe = ee.encodeCBOR;
    if (typeof oe == "function")
      return oe.call(ee, this);
    var ce = Object.keys(ee), he = ce.length;
    return this._pushInt(he, MT.MAP) ? this._pushRawMap(
      he,
      ce.map((fe) => [fe, ee[fe]])
    ) : !1;
  }
  _pushRawMap(ee, ne) {
    ne = ne.map(function(oe) {
      return oe[0] = Encoder.encode(oe[0]), oe;
    }).sort(utils.keySorter);
    for (var ie = 0; ie < ee; ie++)
      if (!this.push(ne[ie][0]) || !this.pushAny(ne[ie][1]))
        return !1;
    return !0;
  }
  write(ee) {
    return this.pushAny(ee);
  }
  pushAny(ee) {
    var ne = toType(ee);
    switch (ne) {
      case "Number":
        return this._pushNumber(ee);
      case "String":
        return this._pushString(ee);
      case "Boolean":
        return this._pushBoolean(ee);
      case "Object":
        return this._pushObject(ee);
      case "Array":
        return this._pushArray(this, ee);
      case "Uint8Array":
        return this._pushBuffer(this, Buffer$3.isBuffer(ee) ? ee : Buffer$3.from(ee));
      case "Null":
        return this._pushUInt8(NULL);
      case "Undefined":
        return this._pushUndefined(ee);
      case "Map":
        return this._pushMap(this, ee);
      case "Set":
        return this._pushSet(this, ee);
      case "URL":
        return this._pushUrl(this, ee);
      case "BigNumber":
        return this._pushBigNumber(this, ee);
      case "Date":
        return this._pushDate(this, ee);
      case "RegExp":
        return this._pushRegexp(this, ee);
      case "Symbol":
        switch (ee) {
          case SYMS.NULL:
            return this._pushObject(null);
          case SYMS.UNDEFINED:
            return this._pushUndefined(void 0);
          default:
            throw new Error("Unknown symbol: " + ee.toString());
        }
      default:
        throw new Error("Unknown type: " + typeof ee + ", " + (ee ? ee.toString() : ""));
    }
  }
  finalize() {
    if (this.offset === 0)
      return null;
    for (var ee = this.result, ne = this.resultLength, ie = this.resultMethod, oe = this.offset, ce = 0, he = 0; he < oe; he++)
      ce += ne[he];
    var fe = Buffer$3.allocUnsafe(ce), xe = 0, Ae = 0;
    for (he = 0; he < oe; he++) {
      switch (Ae = ne[he], ie[he]) {
        case 0:
          ee[he].copy(fe, xe);
          break;
        case 1:
          fe.writeUInt8(ee[he], xe, !0);
          break;
        case 2:
          fe.writeUInt16BE(ee[he], xe, !0);
          break;
        case 3:
          fe.writeUInt32BE(ee[he], xe, !0);
          break;
        case 4:
          fe.writeDoubleBE(ee[he], xe, !0);
          break;
        case 5:
          fe.write(ee[he], xe, Ae, "utf8");
          break;
        default:
          throw new Error("unkown method");
      }
      xe += Ae;
    }
    var Ee = fe;
    return this._reset(), Ee;
  }
  _reset() {
    this.result = [], this.resultMethod = [], this.resultLength = [], this.offset = 0;
  }
  static encode(ee) {
    const ne = new Encoder();
    if (!ne.pushAny(ee))
      throw new Error("Failed to encode input");
    return ne.finalize();
  }
}
var encoder = Encoder;
(function(Z) {
  Z.Diagnose = diagnose, Z.Decoder = decoder, Z.Encoder = encoder, Z.Simple = simple, Z.Tagged = tagged$1, Z.decodeAll = Z.Decoder.decodeAll, Z.decodeFirst = Z.Decoder.decodeFirst, Z.diagnose = Z.Diagnose.diagnose, Z.encode = Z.Encoder.encode, Z.decode = Z.Decoder.decode, Z.leveldb = {
    decode: Z.Decoder.decodeAll,
    encode: Z.Encoder.encode,
    buffer: !0,
    name: "cbor"
  };
})(src$1);
var safeBuffer = { exports: {} };
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
(function(Z, ee) {
  var ne = buffer$1, ie = ne.Buffer;
  function oe(he, fe) {
    for (var xe in he)
      fe[xe] = he[xe];
  }
  ie.from && ie.alloc && ie.allocUnsafe && ie.allocUnsafeSlow ? Z.exports = ne : (oe(ne, ee), ee.Buffer = ce);
  function ce(he, fe, xe) {
    return ie(he, fe, xe);
  }
  ce.prototype = Object.create(ie.prototype), oe(ie, ce), ce.from = function(he, fe, xe) {
    if (typeof he == "number")
      throw new TypeError("Argument must not be a number");
    return ie(he, fe, xe);
  }, ce.alloc = function(he, fe, xe) {
    if (typeof he != "number")
      throw new TypeError("Argument must be a number");
    var Ae = ie(he);
    return fe !== void 0 ? typeof xe == "string" ? Ae.fill(fe, xe) : Ae.fill(fe) : Ae.fill(0), Ae;
  }, ce.allocUnsafe = function(he) {
    if (typeof he != "number")
      throw new TypeError("Argument must be a number");
    return ie(he);
  }, ce.allocUnsafeSlow = function(he) {
    if (typeof he != "number")
      throw new TypeError("Argument must be a number");
    return ne.SlowBuffer(he);
  };
})(safeBuffer, safeBuffer.exports);
const Buffer$2 = safeBuffer.exports.Buffer;
var bufferPipe = class {
  constructor(ee = Buffer$2.from([])) {
    this.buffer = ee, this._bytesRead = 0, this._bytesWrote = 0;
  }
  read(ee) {
    this._bytesRead += ee;
    const ne = this.buffer.slice(0, ee);
    return this.buffer = this.buffer.slice(ee), ne;
  }
  write(ee) {
    ee = Buffer$2.from(ee), this._bytesWrote += ee.length, this.buffer = Buffer$2.concat([this.buffer, ee]);
  }
  get end() {
    return !this.buffer.length;
  }
  get bytesRead() {
    return this._bytesRead;
  }
  get bytesWrote() {
    return this._bytesWrote;
  }
};
function safeRead(Z, ee) {
  if (Z.buffer.length < ee)
    throw new Error("unexpected end of buffer");
  return Z.read(ee);
}
function lebEncode(Z) {
  if (typeof Z == "number" && (Z = BigInt(Z)), Z < BigInt(0))
    throw new Error("Cannot leb encode negative values.");
  const ee = new bufferPipe();
  for (; ; ) {
    const ne = Number(Z & BigInt(127));
    if (Z /= BigInt(128), Z === BigInt(0)) {
      ee.write([ne]);
      break;
    } else
      ee.write([ne | 128]);
  }
  return new buffer.Buffer(ee.buffer);
}
function lebDecode(Z) {
  let ee = BigInt(1), ne = BigInt(0), ie;
  do
    ie = safeRead(Z, 1)[0], ne += BigInt(ie & 127).valueOf() * ee, ee *= BigInt(128);
  while (ie >= 128);
  return ne;
}
function slebEncode(Z) {
  typeof Z == "number" && (Z = BigInt(Z));
  const ee = Z < BigInt(0);
  ee && (Z = -Z - BigInt(1));
  const ne = new bufferPipe();
  for (; ; ) {
    const oe = ie(Z);
    if (Z /= BigInt(128), ee && Z === BigInt(0) && (oe & 64) !== 0 || !ee && Z === BigInt(0) && (oe & 64) === 0) {
      ne.write([oe]);
      break;
    } else
      ne.write([oe | 128]);
  }
  function ie(oe) {
    const ce = oe % BigInt(128);
    return Number(ee ? BigInt(128) - ce - BigInt(1) : ce);
  }
  return new buffer.Buffer(ne.buffer);
}
function slebDecode(Z) {
  const ee = new Uint8Array(Z.buffer);
  let ne = 0;
  for (; ne < ee.byteLength; ne++)
    if (ee[ne] < 128) {
      if ((ee[ne] & 64) === 0)
        return lebDecode(Z);
      break;
    }
  const ie = new Uint8Array(safeRead(Z, ne + 1));
  let oe = BigInt(0);
  for (let ce = ie.byteLength - 1; ce >= 0; ce--)
    oe = oe * BigInt(128) + BigInt(128 - (ie[ce] & 127) - 1);
  return -oe - BigInt(1);
}
function writeUIntLE(Z, ee) {
  if (BigInt(Z) < BigInt(0))
    throw new Error("Cannot write negative values.");
  return writeIntLE(Z, ee);
}
function writeIntLE(Z, ee) {
  Z = BigInt(Z);
  const ne = new bufferPipe();
  let ie = 0, oe = BigInt(256), ce = BigInt(0), he = Number(Z % oe);
  for (ne.write([he]); ++ie < ee; )
    Z < 0 && ce === BigInt(0) && he !== 0 && (ce = BigInt(1)), he = Number((Z / oe - ce) % BigInt(256)), ne.write([he]), oe *= BigInt(256);
  return new buffer.Buffer(ne.buffer);
}
function readUIntLE(Z, ee) {
  let ne = BigInt(safeRead(Z, 1)[0]), ie = BigInt(1), oe = 0;
  for (; ++oe < ee; ) {
    ie *= BigInt(256);
    const ce = BigInt(safeRead(Z, 1)[0]);
    ne = ne + ie * ce;
  }
  return ne;
}
function readIntLE(Z, ee) {
  let ne = readUIntLE(Z, ee);
  const ie = BigInt(2) ** (BigInt(8) * BigInt(ee - 1) + BigInt(7));
  return ne >= ie && (ne -= ie * BigInt(2)), ne;
}
function blobFromBuffer(Z) {
  return Z;
}
function blobFromUint8Array(Z) {
  return buffer.Buffer.from(Z);
}
function blobFromText(Z) {
  return buffer.Buffer.from(Z);
}
function blobFromHex(Z) {
  return buffer.Buffer.from(Z, "hex");
}
function blobToHex(Z) {
  return Z.toString("hex");
}
function blobToUint8Array(Z) {
  return new Uint8Array(Z.slice(0, Z.byteLength));
}
function makeNonce() {
  return lebEncode(BigInt(+Date.now()) * BigInt(1e5) + BigInt(Math.floor(Math.random() * 1e5)));
}
function idlHash(Z) {
  const ne = new TextEncoder().encode(Z);
  let ie = 0;
  for (const oe of ne)
    ie = (ie * 223 + oe) % 2 ** 32;
  return ie;
}
function idlLabelToId(Z) {
  if (/^_\d+_$/.test(Z) || /^_0x[0-9a-fA-F]+_$/.test(Z)) {
    const ee = +Z.slice(1, -1);
    if (Number.isSafeInteger(ee) && ee >= 0 && ee < 2 ** 32)
      return ee;
  }
  return idlHash(Z);
}
const magicNumber = "DIDL";
function zipWith(Z, ee, ne) {
  return Z.map((ie, oe) => ne(ie, ee[oe]));
}
class TypeTable {
  constructor() {
    this._typs = [], this._idx = /* @__PURE__ */ new Map();
  }
  has(ee) {
    return this._idx.has(ee.name);
  }
  add(ee, ne) {
    const ie = this._typs.length;
    this._idx.set(ee.name, ie), this._typs.push(ne);
  }
  merge(ee, ne) {
    const ie = this._idx.get(ee.name), oe = this._idx.get(ne);
    if (ie === void 0)
      throw new Error("Missing type index for " + ee);
    if (oe === void 0)
      throw new Error("Missing type index for " + ne);
    this._typs[ie] = this._typs[oe], this._typs.splice(oe, 1), this._idx.delete(ne);
  }
  encode() {
    const ee = lebEncode(this._typs.length), ne = buffer.Buffer.concat(this._typs);
    return buffer.Buffer.concat([ee, ne]);
  }
  indexOf(ee) {
    if (!this._idx.has(ee))
      throw new Error("Missing type index for " + ee);
    return slebEncode(this._idx.get(ee) || 0);
  }
}
class Visitor {
  visitType(ee, ne) {
    throw new Error("Not implemented");
  }
  visitPrimitive(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitEmpty(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitBool(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNull(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitReserved(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitText(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNumber(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFloat(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitFixedInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFixedNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitPrincipal(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitConstruct(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitVec(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitOpt(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRecord(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitTuple(ee, ne, ie) {
    const oe = ne.map((ce, he) => [`_${he}_`, ce]);
    return this.visitRecord(ee, oe, ie);
  }
  visitVariant(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRec(ee, ne, ie) {
    return this.visitConstruct(ne, ie);
  }
  visitFunc(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
  visitService(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
}
class Type {
  display() {
    return this.name;
  }
  valueToString(ee) {
    return toReadableString(ee);
  }
  buildTypeTable(ee) {
    ee.has(this) || this._buildTypeTableImpl(ee);
  }
}
class PrimitiveType extends Type {
  checkType(ee) {
    if (this.name !== ee.name)
      throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
    return ee;
  }
  _buildTypeTableImpl(ee) {
  }
}
class ConstructType extends Type {
  checkType(ee) {
    if (ee instanceof RecClass) {
      const ne = ee.getType();
      if (typeof ne > "u")
        throw new Error("type mismatch with uninitialized type");
      return ne;
    }
    throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
  }
  encodeType(ee) {
    return ee.indexOf(this.name);
  }
}
class EmptyClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitEmpty(this, ne);
  }
  covariant(ee) {
    return !1;
  }
  encodeValue() {
    throw new Error("Empty cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Empty cannot appear as a value");
  }
  encodeType() {
    return slebEncode(-17);
  }
  decodeValue() {
    throw new Error("Empty cannot appear as an output");
  }
  get name() {
    return "empty";
  }
}
class BoolClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitBool(this, ne);
  }
  covariant(ee) {
    return typeof ee == "boolean";
  }
  encodeValue(ee) {
    const ne = buffer.Buffer.alloc(1);
    return ne.writeInt8(ee ? 1 : 0, 0), ne;
  }
  encodeType() {
    return slebEncode(-2);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = safeRead(ee, 1).toString("hex");
    if (ie === "00")
      return !1;
    if (ie === "01")
      return !0;
    throw new Error("Boolean value out of range");
  }
  get name() {
    return "bool";
  }
}
class NullClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitNull(this, ne);
  }
  covariant(ee) {
    return ee === null;
  }
  encodeValue() {
    return buffer.Buffer.alloc(0);
  }
  encodeType() {
    return slebEncode(-1);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), null;
  }
  get name() {
    return "null";
  }
}
class ReservedClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitReserved(this, ne);
  }
  covariant(ee) {
    return !0;
  }
  encodeValue() {
    return buffer.Buffer.alloc(0);
  }
  encodeType() {
    return slebEncode(-16);
  }
  decodeValue(ee, ne) {
    return ne.name !== this.name && ne.decodeValue(ee, ne), null;
  }
  get name() {
    return "reserved";
  }
}
function isValidUTF8(Z) {
  return buffer.Buffer.compare(new buffer.Buffer(Z.toString(), "utf8"), Z) === 0;
}
class TextClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitText(this, ne);
  }
  covariant(ee) {
    return typeof ee == "string";
  }
  encodeValue(ee) {
    const ne = buffer.Buffer.from(ee, "utf8"), ie = lebEncode(ne.length);
    return buffer.Buffer.concat([ie, ne]);
  }
  encodeType() {
    return slebEncode(-15);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = lebDecode(ee), oe = safeRead(ee, Number(ie));
    if (!isValidUTF8(oe))
      throw new Error("Not valid UTF8 text");
    return oe.toString("utf8");
  }
  get name() {
    return "text";
  }
  valueToString(ee) {
    return '"' + ee + '"';
  }
}
class IntClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitInt(this, ne);
  }
  covariant(ee) {
    return typeof ee == "bigint" || Number.isInteger(ee);
  }
  encodeValue(ee) {
    return slebEncode(ee);
  }
  encodeType() {
    return slebEncode(-4);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), slebDecode(ee);
  }
  get name() {
    return "int";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class NatClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitNat(this, ne);
  }
  covariant(ee) {
    return typeof ee == "bigint" && ee >= BigInt(0) || Number.isInteger(ee) && ee >= 0;
  }
  encodeValue(ee) {
    return lebEncode(ee);
  }
  encodeType() {
    return slebEncode(-3);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), lebDecode(ee);
  }
  get name() {
    return "nat";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FloatClass extends PrimitiveType {
  constructor(ee) {
    if (super(), this._bits = ee, ee !== 32 && ee !== 64)
      throw new Error("not a valid float type");
  }
  accept(ee, ne) {
    return ee.visitFloat(this, ne);
  }
  covariant(ee) {
    return typeof ee == "number" || ee instanceof Number;
  }
  encodeValue(ee) {
    const ne = buffer.Buffer.allocUnsafe(this._bits / 8);
    return this._bits === 32 ? ne.writeFloatLE(ee, 0) : ne.writeDoubleLE(ee, 0), ne;
  }
  encodeType() {
    const ee = this._bits === 32 ? -13 : -14;
    return slebEncode(ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = safeRead(ee, this._bits / 8);
    return this._bits === 32 ? ie.readFloatLE(0) : ie.readDoubleLE(0);
  }
  get name() {
    return "float" + this._bits;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedIntClass extends PrimitiveType {
  constructor(ee) {
    super(), this._bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedInt(this, ne);
  }
  covariant(ee) {
    const ne = BigInt(2) ** BigInt(this._bits - 1) * BigInt(-1), ie = BigInt(2) ** BigInt(this._bits - 1) - BigInt(1);
    if (typeof ee == "bigint")
      return ee >= ne && ee <= ie;
    if (Number.isInteger(ee)) {
      const oe = BigInt(ee);
      return oe >= ne && oe <= ie;
    } else
      return !1;
  }
  encodeValue(ee) {
    return writeIntLE(ee, this._bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this._bits) - 3;
    return slebEncode(-9 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readIntLE(ee, this._bits / 8);
    return this._bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `int${this._bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedNatClass extends PrimitiveType {
  constructor(ee) {
    super(), this.bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedNat(this, ne);
  }
  covariant(ee) {
    const ne = BigInt(2) ** BigInt(this.bits);
    return typeof ee == "bigint" && ee >= BigInt(0) ? ee < ne : Number.isInteger(ee) && ee >= 0 ? BigInt(ee) < ne : !1;
  }
  encodeValue(ee) {
    return writeUIntLE(ee, this.bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this.bits) - 3;
    return slebEncode(-5 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readUIntLE(ee, this.bits / 8);
    return this.bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `nat${this.bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class VecClass extends ConstructType {
  constructor(ee) {
    super(), this._type = ee, this._blobOptimization = !1, ee instanceof FixedNatClass && ee.bits === 8 && (this._blobOptimization = !0);
  }
  accept(ee, ne) {
    return ee.visitVec(this, this._type, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.every((ne) => this._type.covariant(ne));
  }
  encodeValue(ee) {
    const ne = lebEncode(ee.length);
    return this._blobOptimization ? buffer.Buffer.concat([ne, buffer.Buffer.from(ee)]) : buffer.Buffer.concat([ne, ...ee.map((ie) => this._type.encodeValue(ie))]);
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode(-19), ie = this._type.encodeType(ee);
    ee.add(this, buffer.Buffer.concat([ne, ie]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VecClass))
      throw new Error("Not a vector type");
    const oe = Number(lebDecode(ee));
    if (this._blobOptimization)
      return [...new Uint8Array(ee.read(oe))];
    const ce = [];
    for (let he = 0; he < oe; he++)
      ce.push(this._type.decodeValue(ee, ie._type));
    return ce;
  }
  get name() {
    return `vec ${this._type.name}`;
  }
  display() {
    return `vec ${this._type.display()}`;
  }
  valueToString(ee) {
    return "vec {" + ee.map((ie) => this._type.valueToString(ie)).join("; ") + "}";
  }
}
class OptClass extends ConstructType {
  constructor(ee) {
    super(), this._type = ee;
  }
  accept(ee, ne) {
    return ee.visitOpt(this, this._type, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && (ee.length === 0 || ee.length === 1 && this._type.covariant(ee[0]));
  }
  encodeValue(ee) {
    return ee.length === 0 ? buffer.Buffer.from([0]) : buffer.Buffer.concat([buffer.Buffer.from([1]), this._type.encodeValue(ee[0])]);
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode(-18), ie = this._type.encodeType(ee);
    ee.add(this, buffer.Buffer.concat([ne, ie]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof OptClass))
      throw new Error("Not an option type");
    const oe = safeRead(ee, 1).toString("hex");
    if (oe === "00")
      return [];
    if (oe === "01")
      return [this._type.decodeValue(ee, ie._type)];
    throw new Error("Not an option value");
  }
  get name() {
    return `opt ${this._type.name}`;
  }
  display() {
    return `opt ${this._type.display()}`;
  }
  valueToString(ee) {
    return ee.length === 0 ? "null" : `opt ${this._type.valueToString(ee[0])}`;
  }
}
class RecordClass extends ConstructType {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitRecord(this, this._fields, ne);
  }
  tryAsTuple() {
    const ee = [];
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, oe] = this._fields[ne];
      if (ie !== `_${ne}_`)
        return null;
      ee.push(oe);
    }
    return ee;
  }
  covariant(ee) {
    return typeof ee == "object" && this._fields.every(([ne, ie]) => {
      if (!ee.hasOwnProperty(ne))
        throw new Error(`Record is missing key "${ne}".`);
      return ie.covariant(ee[ne]);
    });
  }
  encodeValue(ee) {
    const ne = this._fields.map(([oe]) => ee[oe]), ie = zipWith(this._fields, ne, ([, oe], ce) => oe.encodeValue(ce));
    return buffer.Buffer.concat(ie);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, he]) => he.buildTypeTable(ee));
    const ne = slebEncode(-20), ie = lebEncode(this._fields.length), oe = this._fields.map(([ce, he]) => buffer.Buffer.concat([lebEncode(idlLabelToId(ce)), he.encodeType(ee)]));
    ee.add(this, buffer.Buffer.concat([ne, ie, buffer.Buffer.concat(oe)]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof RecordClass))
      throw new Error("Not a record type");
    const oe = {};
    let ce = 0;
    for (const [he, fe] of ie._fields) {
      if (ce >= this._fields.length || idlLabelToId(this._fields[ce][0]) !== idlLabelToId(he)) {
        fe.decodeValue(ee, fe);
        continue;
      }
      const [xe, Ae] = this._fields[ce];
      oe[xe] = Ae.decodeValue(ee, fe), ce++;
    }
    if (ce < this._fields.length)
      throw new Error("Cannot find field " + this._fields[ce][0]);
    return oe;
  }
  get name() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.display()).join("; ")}}`;
  }
  valueToString(ee) {
    const ne = this._fields.map(([oe]) => ee[oe]);
    return `record {${zipWith(this._fields, ne, ([oe, ce], he) => oe + "=" + ce.valueToString(he)).join("; ")}}`;
  }
}
class TupleClass extends RecordClass {
  constructor(ee) {
    const ne = {};
    ee.forEach((ie, oe) => ne["_" + oe + "_"] = ie), super(ne), this._components = ee;
  }
  accept(ee, ne) {
    return ee.visitTuple(this, this._components, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.length >= this._fields.length && this._components.every((ne, ie) => ne.covariant(ee[ie]));
  }
  encodeValue(ee) {
    const ne = zipWith(this._components, ee, (ie, oe) => ie.encodeValue(oe));
    return buffer.Buffer.concat(ne);
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof TupleClass))
      throw new Error("not a tuple type");
    if (ie._components.length < this._components.length)
      throw new Error("tuple mismatch");
    const oe = [];
    for (const [ce, he] of ie._components.entries())
      ce >= this._components.length ? he.decodeValue(ee, he) : oe.push(this._components[ce].decodeValue(ee, he));
    return oe;
  }
  display() {
    return `record {${this._components.map((ne) => ne.display()).join("; ")}}`;
  }
  valueToString(ee) {
    return `record {${zipWith(this._components, ee, (ie, oe) => ie.valueToString(oe)).join("; ")}}`;
  }
}
class VariantClass extends ConstructType {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitVariant(this, this._fields, ne);
  }
  covariant(ee) {
    return typeof ee == "object" && Object.entries(ee).length === 1 && this._fields.every(([ne, ie]) => !ee.hasOwnProperty(ne) || ie.covariant(ee[ne]));
  }
  encodeValue(ee) {
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, oe] = this._fields[ne];
      if (ee.hasOwnProperty(ie)) {
        const ce = lebEncode(ne), he = oe.encodeValue(ee[ie]);
        return buffer.Buffer.concat([ce, he]);
      }
    }
    throw Error("Variant has no data: " + ee);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([, ce]) => {
      ce.buildTypeTable(ee);
    });
    const ne = slebEncode(-21), ie = lebEncode(this._fields.length), oe = this._fields.map(([ce, he]) => buffer.Buffer.concat([lebEncode(idlLabelToId(ce)), he.encodeType(ee)]));
    ee.add(this, buffer.Buffer.concat([ne, ie, ...oe]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VariantClass))
      throw new Error("Not a variant type");
    const oe = Number(lebDecode(ee));
    if (oe >= ie._fields.length)
      throw Error("Invalid variant index: " + oe);
    const [ce, he] = ie._fields[oe];
    for (const [fe, xe] of this._fields)
      if (idlLabelToId(ce) === idlLabelToId(fe)) {
        const Ae = xe.decodeValue(ee, he);
        return { [fe]: Ae };
      }
    throw new Error("Cannot find field hash " + ce);
  }
  get name() {
    return `variant {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `variant {${this._fields.map(([ne, ie]) => ne + (ie.name === "null" ? "" : `:${ie.display()}`)).join("; ")}}`;
  }
  valueToString(ee) {
    for (const [ne, ie] of this._fields)
      if (ee.hasOwnProperty(ne)) {
        const oe = ie.valueToString(ee[ne]);
        return oe === "null" ? `variant {${ne}}` : `variant {${ne}=${oe}}`;
      }
    throw new Error("Variant has no data: " + ee);
  }
}
class RecClass extends ConstructType {
  constructor() {
    super(...arguments), this._id = RecClass._counter++, this._type = void 0;
  }
  accept(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return ee.visitRec(this, this._type, ne);
  }
  fill(ee) {
    this._type = ee;
  }
  getType() {
    return this._type;
  }
  covariant(ee) {
    return this._type ? this._type.covariant(ee) : !1;
  }
  encodeValue(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.encodeValue(ee);
  }
  _buildTypeTableImpl(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    ee.add(this, buffer.Buffer.alloc(0)), this._type.buildTypeTable(ee), ee.merge(this, this._type.name);
  }
  decodeValue(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.decodeValue(ee, ne);
  }
  get name() {
    return `rec_${this._id}`;
  }
  display() {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return `\u03BC${this.name}.${this._type.name}`;
  }
  valueToString(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.valueToString(ee);
  }
}
RecClass._counter = 0;
function decodePrincipalId(Z) {
  if (safeRead(Z, 1).toString("hex") !== "01")
    throw new Error("Cannot decode principal");
  const ne = Number(lebDecode(Z)), ie = safeRead(Z, ne).toString("hex").toUpperCase();
  return Principal$1.fromHex(ie);
}
class PrincipalClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitPrincipal(this, ne);
  }
  covariant(ee) {
    return ee && ee._isPrincipal;
  }
  encodeValue(ee) {
    const ne = ee.toHex(), ie = buffer.Buffer.from(ne, "hex"), oe = lebEncode(ie.length);
    return buffer.Buffer.concat([buffer.Buffer.from([1]), oe, ie]);
  }
  encodeType() {
    return slebEncode(-24);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), decodePrincipalId(ee);
  }
  get name() {
    return "principal";
  }
  valueToString(ee) {
    return `${this.name} "${ee.toText()}"`;
  }
}
class FuncClass extends ConstructType {
  constructor(ee, ne, ie = []) {
    super(), this.argTypes = ee, this.retTypes = ne, this.annotations = ie;
  }
  static argsToString(ee, ne) {
    if (ee.length !== ne.length)
      throw new Error("arity mismatch");
    return "(" + ee.map((ie, oe) => ie.valueToString(ne[oe])).join(", ") + ")";
  }
  accept(ee, ne) {
    return ee.visitFunc(this, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.length === 2 && ee[0] && ee[0]._isPrincipal && typeof ee[1] == "string";
  }
  encodeValue(ee) {
    const ne = ee[0].toHex(), ie = buffer.Buffer.from(ne, "hex"), oe = lebEncode(ie.length), ce = buffer.Buffer.concat([buffer.Buffer.from([1]), oe, ie]), he = buffer.Buffer.from(ee[1], "utf8"), fe = lebEncode(he.length);
    return buffer.Buffer.concat([buffer.Buffer.from([1]), ce, fe, he]);
  }
  _buildTypeTableImpl(ee) {
    this.argTypes.forEach((Ae) => Ae.buildTypeTable(ee)), this.retTypes.forEach((Ae) => Ae.buildTypeTable(ee));
    const ne = slebEncode(-22), ie = lebEncode(this.argTypes.length), oe = buffer.Buffer.concat(this.argTypes.map((Ae) => Ae.encodeType(ee))), ce = lebEncode(this.retTypes.length), he = buffer.Buffer.concat(this.retTypes.map((Ae) => Ae.encodeType(ee))), fe = lebEncode(this.annotations.length), xe = buffer.Buffer.concat(this.annotations.map((Ae) => this.encodeAnnotation(Ae)));
    ee.add(this, buffer.Buffer.concat([ne, ie, oe, ce, he, fe, xe]));
  }
  decodeValue(ee) {
    if (safeRead(ee, 1).toString("hex") !== "01")
      throw new Error("Cannot decode function reference");
    const ie = decodePrincipalId(ee), oe = Number(lebDecode(ee)), ce = safeRead(ee, oe);
    if (!isValidUTF8(ce))
      throw new Error("Not valid UTF8 method name");
    const he = ce.toString("utf8");
    return [ie, he];
  }
  get name() {
    const ee = this.argTypes.map((oe) => oe.name).join(", "), ne = this.retTypes.map((oe) => oe.name).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) -> (${ne})${ie}`;
  }
  valueToString([ee, ne]) {
    return `func "${ee.toText()}".${ne}`;
  }
  display() {
    const ee = this.argTypes.map((oe) => oe.display()).join(", "), ne = this.retTypes.map((oe) => oe.display()).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) \u2192 (${ne})${ie}`;
  }
  encodeAnnotation(ee) {
    if (ee === "query")
      return buffer.Buffer.from([1]);
    if (ee === "oneway")
      return buffer.Buffer.from([2]);
    throw new Error("Illeagal function annotation");
  }
}
class ServiceClass extends ConstructType {
  constructor(ee) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitService(this, ne);
  }
  covariant(ee) {
    return ee && ee._isPrincipal;
  }
  encodeValue(ee) {
    const ne = ee.toHex(), ie = buffer.Buffer.from(ne, "hex"), oe = lebEncode(ie.length);
    return buffer.Buffer.concat([buffer.Buffer.from([1]), oe, ie]);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, he]) => he.buildTypeTable(ee));
    const ne = slebEncode(-23), ie = lebEncode(this._fields.length), oe = this._fields.map(([ce, he]) => {
      const fe = buffer.Buffer.from(ce, "utf8"), xe = lebEncode(fe.length);
      return buffer.Buffer.concat([xe, fe, he.encodeType(ee)]);
    });
    ee.add(this, buffer.Buffer.concat([ne, ie, buffer.Buffer.concat(oe)]));
  }
  decodeValue(ee) {
    return decodePrincipalId(ee);
  }
  get name() {
    return `service {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  valueToString(ee) {
    return `service "${ee.toText()}"`;
  }
}
function toReadableString(Z) {
  return JSON.stringify(Z, (ee, ne) => typeof ne == "bigint" ? `BigInt(${ne})` : ne);
}
function encode$1(Z, ee) {
  if (ee.length < Z.length)
    throw Error("Wrong number of message arguments");
  const ne = new TypeTable();
  Z.forEach((xe) => xe.buildTypeTable(ne));
  const ie = buffer.Buffer.from(magicNumber, "utf8"), oe = ne.encode(), ce = lebEncode(ee.length), he = buffer.Buffer.concat(Z.map((xe) => xe.encodeType(ne))), fe = buffer.Buffer.concat(zipWith(Z, ee, (xe, Ae) => {
    if (!xe.covariant(Ae))
      throw new Error(`Invalid ${xe.display()} argument: ${toReadableString(Ae)}`);
    return xe.encodeValue(Ae);
  }));
  return buffer.Buffer.concat([ie, oe, ce, he, fe]);
}
function decode$2(Z, ee) {
  const ne = new bufferPipe(ee);
  if (ee.byteLength < magicNumber.length)
    throw new Error("Message length smaller than magic number");
  const ie = safeRead(ne, magicNumber.length).toString();
  if (ie !== magicNumber)
    throw new Error("Wrong magic number: " + ie);
  function oe(ge) {
    const me = [], Ce = Number(lebDecode(ge));
    for (let He = 0; He < Ce; He++) {
      const Ne = Number(slebDecode(ge));
      switch (Ne) {
        case -18:
        case -19: {
          const Pe = Number(slebDecode(ge));
          me.push([Ne, Pe]);
          break;
        }
        case -20:
        case -21: {
          const Pe = [];
          let Fe = Number(lebDecode(ge)), Le;
          for (; Fe--; ) {
            const We = Number(lebDecode(ge));
            if (We >= Math.pow(2, 32))
              throw new Error("field id out of 32-bit range");
            if (typeof Le == "number" && Le >= We)
              throw new Error("field id collision or not sorted");
            Le = We;
            const rt = Number(slebDecode(ge));
            Pe.push([We, rt]);
          }
          me.push([Ne, Pe]);
          break;
        }
        case -22: {
          for (let Fe = 0; Fe < 2; Fe++) {
            let Le = Number(lebDecode(ge));
            for (; Le--; )
              slebDecode(ge);
          }
          const Pe = Number(lebDecode(ge));
          safeRead(ge, Pe), me.push([Ne, void 0]);
          break;
        }
        case -23: {
          let Pe = Number(lebDecode(ge));
          for (; Pe--; ) {
            const Fe = Number(lebDecode(ge));
            safeRead(ge, Fe), slebDecode(ge);
          }
          me.push([Ne, void 0]);
          break;
        }
        default:
          throw new Error("Illegal op_code: " + Ne);
      }
    }
    const Ie = [], Oe = Number(lebDecode(ge));
    for (let He = 0; He < Oe; He++)
      Ie.push(Number(slebDecode(ge)));
    return [me, Ie];
  }
  const [ce, he] = oe(ne);
  if (he.length < Z.length)
    throw new Error("Wrong number of return values");
  const fe = ce.map((ge) => Rec());
  function xe(ge) {
    if (ge < -24)
      throw new Error("future value not supported");
    if (ge < 0)
      switch (ge) {
        case -1:
          return Null;
        case -2:
          return Bool;
        case -3:
          return Nat;
        case -4:
          return Int;
        case -5:
          return Nat8;
        case -6:
          return Nat16;
        case -7:
          return Nat32;
        case -8:
          return Nat64;
        case -9:
          return Int8;
        case -10:
          return Int16;
        case -11:
          return Int32;
        case -12:
          return Int64;
        case -13:
          return Float32;
        case -14:
          return Float64;
        case -15:
          return Text;
        case -16:
          return Reserved;
        case -17:
          return Empty;
        case -24:
          return Principal;
        default:
          throw new Error("Illegal op_code: " + ge);
      }
    if (ge >= ce.length)
      throw new Error("type index out of range");
    return fe[ge];
  }
  function Ae(ge) {
    switch (ge[0]) {
      case -19: {
        const me = xe(ge[1]);
        return Vec(me);
      }
      case -18: {
        const me = xe(ge[1]);
        return Opt(me);
      }
      case -20: {
        const me = {};
        for (const [Oe, He] of ge[1]) {
          const Ne = `_${Oe}_`;
          me[Ne] = xe(He);
        }
        const Ce = Record(me), Ie = Ce.tryAsTuple();
        return Array.isArray(Ie) ? Tuple(...Ie) : Ce;
      }
      case -21: {
        const me = {};
        for (const [Ce, Ie] of ge[1]) {
          const Oe = `_${Ce}_`;
          me[Oe] = xe(Ie);
        }
        return Variant(me);
      }
      case -22:
        return Func([], [], []);
      case -23:
        return Service({});
      default:
        throw new Error("Illegal op_code: " + ge[0]);
    }
  }
  ce.forEach((ge, me) => {
    const Ce = Ae(ge);
    fe[me].fill(Ce);
  });
  const Ee = he.map((ge) => xe(ge)), ye = Z.map((ge, me) => ge.decodeValue(ne, Ee[me]));
  for (let ge = Z.length; ge < Ee.length; ge++)
    Ee[ge].decodeValue(ne, Ee[ge]);
  if (ne.buffer.length > 0)
    throw new Error("decode: Left-over bytes");
  return ye;
}
const Empty = new EmptyClass(), Reserved = new ReservedClass(), Bool = new BoolClass(), Null = new NullClass(), Text = new TextClass(), Int = new IntClass(), Nat = new NatClass(), Float32 = new FloatClass(32), Float64 = new FloatClass(64), Int8 = new FixedIntClass(8), Int16 = new FixedIntClass(16), Int32 = new FixedIntClass(32), Int64 = new FixedIntClass(64), Nat8 = new FixedNatClass(8), Nat16 = new FixedNatClass(16), Nat32 = new FixedNatClass(32), Nat64 = new FixedNatClass(64), Principal = new PrincipalClass();
function Tuple(...Z) {
  return new TupleClass(Z);
}
function Vec(Z) {
  return new VecClass(Z);
}
function Opt(Z) {
  return new OptClass(Z);
}
function Record(Z) {
  return new RecordClass(Z);
}
function Variant(Z) {
  return new VariantClass(Z);
}
function Rec() {
  return new RecClass();
}
function Func(Z, ee, ne = []) {
  return new FuncClass(Z, ee, ne);
}
function Service(Z) {
  return new ServiceClass(Z);
}
const IDL = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Visitor,
  Type,
  PrimitiveType,
  ConstructType,
  EmptyClass,
  BoolClass,
  NullClass,
  ReservedClass,
  TextClass,
  IntClass,
  NatClass,
  FloatClass,
  FixedIntClass,
  FixedNatClass,
  VecClass,
  OptClass,
  RecordClass,
  TupleClass,
  VariantClass,
  RecClass,
  PrincipalClass,
  FuncClass,
  ServiceClass,
  encode: encode$1,
  decode: decode$2,
  Empty,
  Reserved,
  Bool,
  Null,
  Text,
  Int,
  Nat,
  Float32,
  Float64,
  Int8,
  Int16,
  Int32,
  Int64,
  Nat8,
  Nat16,
  Nat32,
  Nat64,
  Principal,
  Tuple,
  Vec,
  Opt,
  Record,
  Variant,
  Rec,
  Func,
  Service
}, Symbol.toStringTag, { value: "Module" }));
function toHex(Z) {
  return blobToHex(Z);
}
function hash(Z) {
  const ee = sha256$1.exports.sha256.create().update(Z).arrayBuffer();
  return blobFromUint8Array(new Uint8Array(ee));
}
function hashValue(Z) {
  if (Z instanceof src$1.Tagged)
    return hashValue(Z.value);
  if (typeof Z == "string")
    return hashString(Z);
  if (typeof Z == "number")
    return hash(lebEncode(Z));
  if (buffer.Buffer.isBuffer(Z))
    return hash(blobFromUint8Array(new Uint8Array(Z)));
  if (Z instanceof Uint8Array || Z instanceof ArrayBuffer)
    return hash(blobFromUint8Array(new Uint8Array(Z)));
  if (Array.isArray(Z)) {
    const ee = Z.map(hashValue);
    return hash(buffer.Buffer.concat(ee));
  } else {
    if (Z instanceof Principal$1)
      return hash(blobFromUint8Array(Z.toUint8Array()));
    if (typeof Z == "object" && Z !== null && typeof Z.toHash == "function")
      return hashValue(Z.toHash());
    if (typeof Z == "bigint")
      return hash(lebEncode(Z));
  }
  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${Z}`), {
    value: Z
  });
}
const hashString = (Z) => {
  const ne = new TextEncoder().encode(Z);
  return hash(buffer.Buffer.from(ne));
};
function concat(Z) {
  return buffer.Buffer.concat(Z);
}
function requestIdOf(Z) {
  const ie = Object.entries(Z).filter(([, he]) => he !== void 0).map(([he, fe]) => {
    const xe = hashString(he), Ae = hashValue(fe);
    return [xe, Ae];
  }).sort(([he], [fe]) => buffer.Buffer.compare(buffer.Buffer.from(he), buffer.Buffer.from(fe))), oe = concat(ie.map(concat));
  return hash(oe);
}
var __rest = globalThis && globalThis.__rest || function(Z, ee) {
  var ne = {};
  for (var ie in Z)
    Object.prototype.hasOwnProperty.call(Z, ie) && ee.indexOf(ie) < 0 && (ne[ie] = Z[ie]);
  if (Z != null && typeof Object.getOwnPropertySymbols == "function")
    for (var oe = 0, ie = Object.getOwnPropertySymbols(Z); oe < ie.length; oe++)
      ee.indexOf(ie[oe]) < 0 && Object.prototype.propertyIsEnumerable.call(Z, ie[oe]) && (ne[ie[oe]] = Z[ie[oe]]);
  return ne;
};
const domainSeparator = buffer.Buffer.from(new TextEncoder().encode(`
ic-request`));
class SignIdentity {
  getPrincipal() {
    return this._principal || (this._principal = Principal$1.selfAuthenticating(this.getPublicKey().toDer())), this._principal;
  }
  async transformRequest(ee) {
    const { body: ne } = ee, ie = __rest(ee, ["body"]), oe = await requestIdOf(ne);
    return Object.assign(Object.assign({}, ie), { body: {
      content: ne,
      sender_pubkey: this.getPublicKey().toDer(),
      sender_sig: await this.sign(buffer.Buffer.concat([domainSeparator, oe]))
    } });
  }
}
class AnonymousIdentity {
  getPrincipal() {
    return Principal$1.anonymous();
  }
  async transformRequest(ee) {
    return Object.assign(Object.assign({}, ee), { body: { content: ee.body } });
  }
}
function createIdentityDescriptor(Z) {
  return "getPublicKey" in Z ? { type: "PublicKeyIdentity", publicKey: Z.getPublicKey().toDer().toString("hex") } : { type: "AnonymousIdentity" };
}
function isIdentityDescriptor(Z) {
  var ee, ne;
  switch ((ee = Z) === null || ee === void 0 ? void 0 : ee.type) {
    case "AnonymousIdentity":
      return !0;
    case "PublicKeyIdentity":
      return typeof ((ne = Z) === null || ne === void 0 ? void 0 : ne.publicKey) == "string";
  }
  return !1;
}
var src = {}, serializer$1 = {}, value = {};
Object.defineProperty(value, "__esModule", { value: !0 });
const MAX_U64_NUMBER = 9007199254740992;
function _concat(Z, ...ee) {
  const ne = new Uint8Array(Z.byteLength + ee.reduce((oe, ce) => oe + ce.byteLength, 0));
  ne.set(new Uint8Array(Z), 0);
  let ie = Z.byteLength;
  for (const oe of ee)
    ne.set(new Uint8Array(oe), ie), ie += oe.byteLength;
  return ne.buffer;
}
function _serializeValue(Z, ee, ne) {
  ne = ne.replace(/[^0-9a-fA-F]/g, "");
  const ie = 2 ** (ee - 24);
  ne = ne.slice(-ie * 2).padStart(ie * 2, "0");
  const oe = [(Z << 5) + ee].concat(ne.match(/../g).map((ce) => parseInt(ce, 16)));
  return new Uint8Array(oe).buffer;
}
function _serializeNumber(Z, ee) {
  if (ee < 24)
    return new Uint8Array([(Z << 5) + ee]).buffer;
  {
    const ne = ee <= 255 ? 24 : ee <= 65535 ? 25 : ee <= 4294967295 ? 26 : 27;
    return _serializeValue(Z, ne, ee.toString(16));
  }
}
function _serializeString(Z) {
  const ee = [];
  for (let ne = 0; ne < Z.length; ne++) {
    let ie = Z.charCodeAt(ne);
    ie < 128 ? ee.push(ie) : ie < 2048 ? ee.push(192 | ie >> 6, 128 | ie & 63) : ie < 55296 || ie >= 57344 ? ee.push(224 | ie >> 12, 128 | ie >> 6 & 63, 128 | ie & 63) : (ne++, ie = (ie & 1023) << 10 | Z.charCodeAt(ne) & 1023, ee.push(240 | ie >> 18, 128 | ie >> 12 & 63, 128 | ie >> 6 & 63, 128 | ie & 63));
  }
  return _concat(new Uint8Array(_serializeNumber(3, Z.length)), new Uint8Array(ee));
}
function tagged(Z, ee) {
  if (Z == 14277111)
    return _concat(new Uint8Array([217, 217, 247]), ee);
  if (Z < 24)
    return _concat(new Uint8Array([(6 << 5) + Z]), ee);
  {
    const ne = Z <= 255 ? 24 : Z <= 65535 ? 25 : Z <= 4294967295 ? 26 : 27, ie = 2 ** (ne - 24), oe = Z.toString(16).slice(-ie * 2).padStart(ie * 2, "0"), ce = [(6 << 5) + ne].concat(oe.match(/../g).map((he) => parseInt(he, 16)));
    return new Uint8Array(ce).buffer;
  }
}
value.tagged = tagged;
function raw(Z) {
  return new Uint8Array(Z).buffer;
}
value.raw = raw;
function uSmall(Z) {
  if (isNaN(Z))
    throw new RangeError("Invalid number.");
  Z = Math.min(Math.max(0, Z), 23);
  const ee = [(0 << 5) + Z];
  return new Uint8Array(ee).buffer;
}
value.uSmall = uSmall;
function u8(Z, ee) {
  if (Z = parseInt("" + Z, ee), isNaN(Z))
    throw new RangeError("Invalid number.");
  return Z = Math.min(Math.max(0, Z), 255), Z = Z.toString(16), _serializeValue(0, 24, Z);
}
value.u8 = u8;
function u16(Z, ee) {
  if (Z = parseInt("" + Z, ee), isNaN(Z))
    throw new RangeError("Invalid number.");
  return Z = Math.min(Math.max(0, Z), 65535), Z = Z.toString(16), _serializeValue(0, 25, Z);
}
value.u16 = u16;
function u32(Z, ee) {
  if (Z = parseInt("" + Z, ee), isNaN(Z))
    throw new RangeError("Invalid number.");
  return Z = Math.min(Math.max(0, Z), 4294967295), Z = Z.toString(16), _serializeValue(0, 26, Z);
}
value.u32 = u32;
function u64(Z, ee) {
  if (typeof Z == "string" && ee == 16) {
    if (Z.match(/[^0-9a-fA-F]/))
      throw new RangeError("Invalid number.");
    return _serializeValue(0, 27, Z);
  }
  if (Z = parseInt("" + Z, ee), isNaN(Z))
    throw new RangeError("Invalid number.");
  return Z = Math.min(Math.max(0, Z), MAX_U64_NUMBER), Z = Z.toString(16), _serializeValue(0, 27, Z);
}
value.u64 = u64;
function iSmall(Z) {
  if (isNaN(Z))
    throw new RangeError("Invalid number.");
  if (Z === 0)
    return uSmall(0);
  Z = Math.min(Math.max(0, -Z), 24) - 1;
  const ee = [(1 << 5) + Z];
  return new Uint8Array(ee).buffer;
}
value.iSmall = iSmall;
function i8(Z, ee) {
  if (Z = parseInt("" + Z, ee), isNaN(Z))
    throw new RangeError("Invalid number.");
  return Z = Math.min(Math.max(0, -Z - 1), 255), Z = Z.toString(16), _serializeValue(1, 24, Z);
}
value.i8 = i8;
function i16(Z, ee) {
  if (Z = parseInt("" + Z, ee), isNaN(Z))
    throw new RangeError("Invalid number.");
  return Z = Math.min(Math.max(0, -Z - 1), 65535), Z = Z.toString(16), _serializeValue(1, 25, Z);
}
value.i16 = i16;
function i32(Z, ee) {
  if (Z = parseInt("" + Z, ee), isNaN(Z))
    throw new RangeError("Invalid number.");
  return Z = Math.min(Math.max(0, -Z - 1), 4294967295), Z = Z.toString(16), _serializeValue(1, 26, Z);
}
value.i32 = i32;
function i64(Z, ee) {
  if (typeof Z == "string" && ee == 16) {
    if (Z.startsWith("-") ? Z = Z.slice(1) : Z = "0", Z.match(/[^0-9a-fA-F]/) || Z.length > 16)
      throw new RangeError("Invalid number.");
    let ne = !1, ie = Z.split("").reduceRight((oe, ce) => {
      if (ne)
        return ce + oe;
      let he = parseInt(ce, 16) - 1;
      return he >= 0 ? (ne = !0, he.toString(16) + oe) : "f" + oe;
    }, "");
    return ne ? _serializeValue(1, 27, ie) : u64(0);
  }
  if (Z = parseInt("" + Z, ee), isNaN(Z))
    throw new RangeError("Invalid number.");
  return Z = Math.min(Math.max(0, -Z - 1), 9007199254740992), Z = Z.toString(16), _serializeValue(1, 27, Z);
}
value.i64 = i64;
function number$1(Z) {
  return Z >= 0 ? Z < 24 ? uSmall(Z) : Z <= 255 ? u8(Z) : Z <= 65535 ? u16(Z) : Z <= 4294967295 ? u32(Z) : u64(Z) : Z >= -24 ? iSmall(Z) : Z >= -255 ? i8(Z) : Z >= -65535 ? i16(Z) : Z >= -4294967295 ? i32(Z) : i64(Z);
}
value.number = number$1;
function bytes(Z) {
  return _concat(_serializeNumber(2, Z.byteLength), Z);
}
value.bytes = bytes;
function string(Z) {
  return _serializeString(Z);
}
value.string = string;
function array(Z) {
  return _concat(_serializeNumber(4, Z.length), ...Z);
}
value.array = array;
function map(Z, ee = !1) {
  Z instanceof Map || (Z = new Map(Object.entries(Z)));
  let ne = Array.from(Z.entries());
  return ee && (ne = ne.sort(([ie], [oe]) => ie.localeCompare(oe))), _concat(_serializeNumber(5, Z.size), ...ne.map(([ie, oe]) => _concat(_serializeString(ie), oe)));
}
value.map = map;
function singleFloat(Z) {
  const ee = new Float32Array([Z]);
  return _concat(new Uint8Array([(7 << 5) + 26]), new Uint8Array(ee.buffer));
}
value.singleFloat = singleFloat;
function doubleFloat(Z) {
  const ee = new Float64Array([Z]);
  return _concat(new Uint8Array([(7 << 5) + 27]), new Uint8Array(ee.buffer));
}
value.doubleFloat = doubleFloat;
function bool(Z) {
  return Z ? true_() : false_();
}
value.bool = bool;
function true_() {
  return raw(new Uint8Array([(7 << 5) + 21]));
}
value.true_ = true_;
function false_() {
  return raw(new Uint8Array([(7 << 5) + 20]));
}
value.false_ = false_;
function null_() {
  return raw(new Uint8Array([(7 << 5) + 22]));
}
value.null_ = null_;
function undefined_() {
  return raw(new Uint8Array([(7 << 5) + 23]));
}
value.undefined_ = undefined_;
var __importStar = commonjsGlobal && commonjsGlobal.__importStar || function(Z) {
  if (Z && Z.__esModule)
    return Z;
  var ee = {};
  if (Z != null)
    for (var ne in Z)
      Object.hasOwnProperty.call(Z, ne) && (ee[ne] = Z[ne]);
  return ee.default = Z, ee;
};
Object.defineProperty(serializer$1, "__esModule", { value: !0 });
const cbor$1 = __importStar(value), BufferClasses = [
  ArrayBuffer,
  Uint8Array,
  Uint16Array,
  Uint32Array,
  Int8Array,
  Int16Array,
  Int32Array,
  Float32Array,
  Float64Array
];
class JsonDefaultCborEncoder {
  constructor(ee, ne = !1) {
    this._serializer = ee, this._stable = ne, this.name = "jsonDefault", this.priority = -100;
  }
  match(ee) {
    return ["undefined", "boolean", "number", "string", "object"].indexOf(typeof ee) != -1;
  }
  encode(ee) {
    switch (typeof ee) {
      case "undefined":
        return cbor$1.undefined_();
      case "boolean":
        return cbor$1.bool(ee);
      case "number":
        return Math.floor(ee) === ee ? cbor$1.number(ee) : cbor$1.doubleFloat(ee);
      case "string":
        return cbor$1.string(ee);
      case "object":
        if (ee === null)
          return cbor$1.null_();
        if (Array.isArray(ee))
          return cbor$1.array(ee.map((ne) => this._serializer.serializeValue(ne)));
        if (BufferClasses.find((ne) => ee instanceof ne))
          return cbor$1.bytes(ee.buffer);
        if (Object.getOwnPropertyNames(ee).indexOf("toJSON") !== -1)
          return this.encode(ee.toJSON());
        if (ee instanceof Map) {
          const ne = /* @__PURE__ */ new Map();
          for (const [ie, oe] of ee.entries())
            ne.set(ie, this._serializer.serializeValue(oe));
          return cbor$1.map(ne, this._stable);
        } else {
          const ne = /* @__PURE__ */ new Map();
          for (const [ie, oe] of Object.entries(ee))
            ne.set(ie, this._serializer.serializeValue(oe));
          return cbor$1.map(ne, this._stable);
        }
      default:
        throw new Error("Invalid value.");
    }
  }
}
serializer$1.JsonDefaultCborEncoder = JsonDefaultCborEncoder;
class ToCborEncoder {
  constructor() {
    this.name = "cborEncoder", this.priority = -90;
  }
  match(ee) {
    return typeof ee == "object" && typeof ee.toCBOR == "function";
  }
  encode(ee) {
    return ee.toCBOR();
  }
}
serializer$1.ToCborEncoder = ToCborEncoder;
class CborSerializer {
  constructor() {
    this._encoders = /* @__PURE__ */ new Set();
  }
  static withDefaultEncoders(ee = !1) {
    const ne = new this();
    return ne.addEncoder(new JsonDefaultCborEncoder(ne, ee)), ne.addEncoder(new ToCborEncoder()), ne;
  }
  removeEncoder(ee) {
    for (const ne of this._encoders.values())
      ne.name == ee && this._encoders.delete(ne);
  }
  addEncoder(ee) {
    this._encoders.add(ee);
  }
  getEncoderFor(ee) {
    let ne = null;
    for (const ie of this._encoders)
      (!ne || ie.priority > ne.priority) && ie.match(ee) && (ne = ie);
    if (ne === null)
      throw new Error("Could not find an encoder for value.");
    return ne;
  }
  serializeValue(ee) {
    return this.getEncoderFor(ee).encode(ee);
  }
  serialize(ee) {
    return this.serializeValue(ee);
  }
}
serializer$1.CborSerializer = CborSerializer;
class SelfDescribeCborSerializer extends CborSerializer {
  serialize(ee) {
    return cbor$1.raw(new Uint8Array([
      ...new Uint8Array([217, 217, 247]),
      ...new Uint8Array(super.serializeValue(ee))
    ]));
  }
}
serializer$1.SelfDescribeCborSerializer = SelfDescribeCborSerializer;
(function(Z) {
  function ee(oe) {
    for (var ce in oe)
      Z.hasOwnProperty(ce) || (Z[ce] = oe[ce]);
  }
  var ne = commonjsGlobal && commonjsGlobal.__importStar || function(oe) {
    if (oe && oe.__esModule)
      return oe;
    var ce = {};
    if (oe != null)
      for (var he in oe)
        Object.hasOwnProperty.call(oe, he) && (ce[he] = oe[he]);
    return ce.default = oe, ce;
  };
  Object.defineProperty(Z, "__esModule", { value: !0 }), ee(serializer$1);
  const ie = ne(value);
  Z.value = ie;
})(src);
class PrincipalEncoder {
  get name() {
    return "Principal";
  }
  get priority() {
    return 0;
  }
  match(ee) {
    return ee && ee._isPrincipal === !0;
  }
  encode(ee) {
    return src.value.bytes(ee.toUint8Array().buffer);
  }
}
class BufferEncoder {
  get name() {
    return "Buffer";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return buffer.Buffer.isBuffer(ee);
  }
  encode(ee) {
    return src.value.bytes(new Uint8Array(ee));
  }
}
class BigIntEncoder {
  get name() {
    return "BigInt";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return typeof ee == "bigint";
  }
  encode(ee) {
    return ee > BigInt(0) ? src.value.tagged(2, src.value.bytes(blobFromHex(ee.toString(16)))) : src.value.tagged(3, src.value.bytes(blobFromHex((BigInt("-1") * ee).toString(16))));
  }
}
const serializer = src.SelfDescribeCborSerializer.withDefaultEncoders(!0);
serializer.addEncoder(new PrincipalEncoder());
serializer.addEncoder(new BufferEncoder());
serializer.addEncoder(new BigIntEncoder());
var CborTag;
(function(Z) {
  Z[Z.Uint64LittleEndian = 71] = "Uint64LittleEndian", Z[Z.Semantic = 55799] = "Semantic";
})(CborTag || (CborTag = {}));
const encode = (Z) => buffer.Buffer.from(serializer.serialize(Z));
function decodePositiveBigInt(Z) {
  const ee = Z.byteLength;
  let ne = BigInt(0);
  for (let ie = 0; ie < ee; ie++)
    ne = ne * BigInt(256) + BigInt(Z[ie]);
  return ne;
}
function decode$1(Z) {
  return new src$1.Decoder({
    size: Z.byteLength,
    tags: {
      2: (ie) => decodePositiveBigInt(ie),
      3: (ie) => -decodePositiveBigInt(ie),
      [CborTag.Semantic]: (ie) => ie
    }
  }).decodeFirst(Z);
}
const cbor = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get CborTag() {
    return CborTag;
  },
  encode,
  decode: decode$1
}, Symbol.toStringTag, { value: "Module" })), NANOSECONDS_PER_MILLISECONDS = BigInt(1e6), REPLICA_PERMITTED_DRIFT_MILLISECONDS = BigInt(60 * 1e3);
class Expiry {
  constructor(ee) {
    this._value = (BigInt(Date.now()) + BigInt(ee) - REPLICA_PERMITTED_DRIFT_MILLISECONDS) * NANOSECONDS_PER_MILLISECONDS;
  }
  toCBOR() {
    return src.value.u64(this._value.toString(16), 16);
  }
  toHash() {
    return lebEncode(this._value);
  }
}
function makeNonceTransform(Z = makeNonce) {
  return async (ee) => {
    ee.endpoint === "call" && (ee.body.nonce = Z());
  };
}
function makeExpiryTransform(Z) {
  return async (ee) => {
    ee.body.ingress_expiry = new Expiry(Z);
  };
}
var SubmitRequestType;
(function(Z) {
  Z.Call = "call";
})(SubmitRequestType || (SubmitRequestType = {}));
var RequestStatusResponseStatus;
(function(Z) {
  Z.Received = "received", Z.Processing = "processing", Z.Replied = "replied", Z.Rejected = "rejected", Z.Unknown = "unknown", Z.Done = "done";
})(RequestStatusResponseStatus || (RequestStatusResponseStatus = {}));
const DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1e3, IC_ROOT_KEY = "308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d9685f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484b01291091c5f87b98883463f98091a0baaae";
function getDefaultFetch() {
  const Z = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.fetch.bind(self) : global.fetch.bind(global) : window.fetch.bind(window);
  if (!Z)
    throw new Error("Could not find default `fetch` implementation.");
  return Z;
}
class HttpAgent {
  constructor(ee = {}) {
    if (this._pipeline = [], this._rootKeyFetched = !1, this.rootKey = blobFromHex(IC_ROOT_KEY), ee.source) {
      if (!(ee.source instanceof HttpAgent))
        throw new Error("An Agent's source can only be another HttpAgent");
      this._pipeline = [...ee.source._pipeline], this._identity = ee.source._identity, this._fetch = ee.source._fetch, this._host = ee.source._host, this._credentials = ee.source._credentials;
    } else
      this._fetch = ee.fetch || getDefaultFetch() || fetch.bind(global);
    if (ee.host !== void 0)
      !ee.host.match(/^[a-z]+:/) && typeof window < "u" ? this._host = new URL(window.location.protocol + "//" + ee.host) : this._host = new URL(ee.host);
    else if (ee.source !== void 0)
      this._host = ee.source._host;
    else {
      const ne = typeof window < "u" ? window.location : void 0;
      if (!ne)
        throw new Error("Must specify a host to connect to.");
      this._host = new URL(ne + "");
    }
    if (ee.credentials) {
      const { name: ne, password: ie } = ee.credentials;
      this._credentials = `${ne}${ie ? ":" + ie : ""}`;
    }
    this._identity = Promise.resolve(ee.identity || new AnonymousIdentity());
  }
  addTransform(ee, ne = ee.priority || 0) {
    const ie = this._pipeline.findIndex((oe) => (oe.priority || 0) < ne);
    this._pipeline.splice(ie >= 0 ? ie : this._pipeline.length, 0, Object.assign(ee, { priority: ne }));
  }
  async getPrincipal() {
    return (await this._identity).getPrincipal();
  }
  async call(ee, ne, ie) {
    const oe = await (ie !== void 0 ? await ie : await this._identity), ce = Principal$1.from(ee), he = ne.effectiveCanisterId ? Principal$1.from(ne.effectiveCanisterId) : ce, fe = oe.getPrincipal() || Principal$1.anonymous(), xe = {
      request_type: SubmitRequestType.Call,
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: fe,
      ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
    };
    let Ae = await this._transform({
      request: {
        body: null,
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "call",
      body: xe
    });
    Ae = await oe.transformRequest(Ae);
    const Ee = encode(Ae.body), [ye, ge] = await Promise.all([
      this._fetch("" + new URL(`/api/v2/canister/${he.toText()}/call`, this._host), Object.assign(Object.assign({}, Ae.request), { body: Ee })),
      requestIdOf(xe)
    ]);
    if (!ye.ok)
      throw new Error(`Server returned an error:
  Code: ${ye.status} (${ye.statusText})
  Body: ${await ye.text()}
`);
    return {
      requestId: ge,
      response: {
        ok: ye.ok,
        status: ye.status,
        statusText: ye.statusText
      }
    };
  }
  async query(ee, ne, ie) {
    const oe = await (ie !== void 0 ? await ie : await this._identity), ce = typeof ee == "string" ? Principal$1.fromText(ee) : ee, he = (oe == null ? void 0 : oe.getPrincipal()) || Principal$1.anonymous(), fe = {
      request_type: "query",
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: he,
      ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
    };
    let xe = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read",
      body: fe
    });
    xe = await oe.transformRequest(xe);
    const Ae = encode(xe.body), Ee = await this._fetch("" + new URL(`/api/v2/canister/${ce.toText()}/query`, this._host), Object.assign(Object.assign({}, xe.request), { body: Ae }));
    if (!Ee.ok)
      throw new Error(`Server returned an error:
  Code: ${Ee.status} (${Ee.statusText})
  Body: ${await Ee.text()}
`);
    return decode$1(buffer.Buffer.from(await Ee.arrayBuffer()));
  }
  async readState(ee, ne, ie) {
    const oe = typeof ee == "string" ? Principal$1.fromText(ee) : ee, ce = await (ie !== void 0 ? await ie : await this._identity), he = (ce == null ? void 0 : ce.getPrincipal()) || Principal$1.anonymous();
    let fe = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read_state",
      body: {
        request_type: "read_state",
        paths: ne.paths,
        sender: he,
        ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
      }
    });
    fe = await ce.transformRequest(fe);
    const xe = encode(fe.body), Ae = await this._fetch("" + new URL(`/api/v2/canister/${oe}/read_state`, this._host), Object.assign(Object.assign({}, fe.request), { body: xe }));
    if (!Ae.ok)
      throw new Error(`Server returned an error:
  Code: ${Ae.status} (${Ae.statusText})
  Body: ${await Ae.text()}
`);
    return decode$1(buffer.Buffer.from(await Ae.arrayBuffer()));
  }
  async status() {
    const ee = this._credentials ? {
      Authorization: "Basic " + btoa(this._credentials)
    } : {}, ne = await this._fetch("" + new URL("/api/v2/status", this._host), { headers: ee });
    if (!ne.ok)
      throw new Error(`Server returned an error:
  Code: ${ne.status} (${ne.statusText})
  Body: ${await ne.text()}
`);
    const ie = await ne.arrayBuffer();
    return decode$1(new Uint8Array(ie));
  }
  async fetchRootKey() {
    return this._rootKeyFetched || (this.rootKey = blobFromUint8Array((await this.status()).root_key), this._rootKeyFetched = !0), this.rootKey;
  }
  _transform(ee) {
    let ne = Promise.resolve(ee);
    for (const ie of this._pipeline)
      ne = ne.then((oe) => ie(oe).then((ce) => ce || oe));
    return ne;
  }
}
var ProxyMessageKind;
(function(Z) {
  Z.Error = "err", Z.GetPrincipal = "gp", Z.GetPrincipalResponse = "gpr", Z.Query = "q", Z.QueryResponse = "qr", Z.Call = "c", Z.CallResponse = "cr", Z.ReadState = "rs", Z.ReadStateResponse = "rsr", Z.Status = "s", Z.StatusResponse = "sr";
})(ProxyMessageKind || (ProxyMessageKind = {}));
class ProxyStubAgent {
  constructor(ee, ne) {
    this._frontend = ee, this._agent = ne;
  }
  onmessage(ee) {
    switch (ee.type) {
      case ProxyMessageKind.GetPrincipal:
        this._agent.getPrincipal().then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind.GetPrincipalResponse,
            response: ne.toText()
          });
        });
        break;
      case ProxyMessageKind.Query:
        this._agent.query(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind.QueryResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind.Call:
        this._agent.call(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind.CallResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind.ReadState:
        this._agent.readState(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind.ReadStateResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind.Status:
        this._agent.status().then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind.StatusResponse,
            response: ne
          });
        });
        break;
      default:
        throw new Error(`Invalid message received: ${JSON.stringify(ee)}`);
    }
  }
}
class ProxyAgent {
  constructor(ee) {
    this._backend = ee, this._nextId = 0, this._pendingCalls = /* @__PURE__ */ new Map(), this.rootKey = null;
  }
  onmessage(ee) {
    const ne = ee.id, ie = this._pendingCalls.get(ne);
    if (!ie)
      throw new Error("A proxy get the same message twice...");
    this._pendingCalls.delete(ne);
    const [oe, ce] = ie;
    switch (ee.type) {
      case ProxyMessageKind.Error:
        return ce(ee.error);
      case ProxyMessageKind.GetPrincipalResponse:
      case ProxyMessageKind.CallResponse:
      case ProxyMessageKind.QueryResponse:
      case ProxyMessageKind.ReadStateResponse:
      case ProxyMessageKind.StatusResponse:
        return oe(ee.response);
      default:
        throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(ee)}`);
    }
  }
  async getPrincipal() {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind.GetPrincipal
    }).then((ee) => {
      if (typeof ee != "string")
        throw new Error("Invalid principal received.");
      return Principal$1.fromText(ee);
    });
  }
  readState(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind.ReadState,
      args: [ee.toString(), ne]
    });
  }
  call(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind.Call,
      args: [ee.toString(), ne]
    });
  }
  status() {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind.Status
    });
  }
  query(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind.Query,
      args: [ee.toString(), ne]
    });
  }
  async _sendAndWait(ee) {
    return new Promise((ne, ie) => {
      this._pendingCalls.set(ee.id, [ne, ie]), this._backend(ee);
    });
  }
  async fetchRootKey() {
    const ee = (await this.status()).root_key;
    return this.rootKey = ee, ee;
  }
}
function getDefaultAgent() {
  const Z = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.ic.agent : global.ic.agent : window.ic.agent;
  if (!Z)
    throw new Error("No Agent could be found.");
  return Z;
}
const managementCanisterIdl = ({ IDL: Z }) => {
  const ee = Z.Principal, ne = Z.Vec(Z.Nat8), ie = Z.Record({
    compute_allocation: Z.Opt(Z.Nat),
    memory_allocation: Z.Opt(Z.Nat)
  });
  return Z.Service({
    provisional_create_canister_with_cycles: Z.Func([Z.Record({ amount: Z.Opt(Z.Nat), settings: Z.Opt(ie) })], [Z.Record({ canister_id: ee })], []),
    create_canister: Z.Func([], [Z.Record({ canister_id: ee })], []),
    install_code: Z.Func([
      Z.Record({
        mode: Z.Variant({ install: Z.Null, reinstall: Z.Null, upgrade: Z.Null }),
        canister_id: ee,
        wasm_module: ne,
        arg: Z.Vec(Z.Nat8)
      })
    ], [], []),
    set_controller: Z.Func([Z.Record({ canister_id: ee, new_controller: Z.Principal })], [], [])
  });
};
function getManagementCanister(Z) {
  function ee(ne, ie, oe) {
    const ce = ie[0];
    let he = Principal$1.fromHex("");
    return ce && typeof ce == "object" && ce.canister_id && (he = Principal$1.from(ce.canister_id)), { effectiveCanisterId: he };
  }
  return Actor.createActor(managementCanisterIdl, Object.assign(Object.assign(Object.assign({}, Z), { canisterId: Principal$1.fromHex("") }), {
    callTransform: ee,
    queryTransform: ee
  }));
}
class AgentError extends Error {
}
var decode;
(function() {
  for (var Z = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", ee = new Uint8Array(256), ne = 0; ne < Z.length; ne++)
    ee[Z.charCodeAt(ne)] = ne;
  decode = function(ie) {
    var oe = ie.length * 0.75, ce = ie.length, he, fe = 0, xe, Ae, Ee, ye;
    ie[ie.length - 1] === "=" && (oe--, ie[ie.length - 2] === "=" && oe--);
    var ge = new ArrayBuffer(oe), me = new Uint8Array(ge);
    for (he = 0; he < ce; he += 4)
      xe = ee[ie.charCodeAt(he)], Ae = ee[ie.charCodeAt(he + 1)], Ee = ee[ie.charCodeAt(he + 2)], ye = ee[ie.charCodeAt(he + 3)], me[fe++] = xe << 2 | Ae >> 4, me[fe++] = (Ae & 15) << 4 | Ee >> 2, me[fe++] = (Ee & 3) << 6 | ye & 63;
    return ge;
  };
})();
let wasm;
const wasmBytesBase64 = `
    AGFzbQEAAAABXg9gAn9/AGABfwBgA39/fwBgAn9/AX9gAX8Bf2ADf39/AX9gBH9/f38AYAV/f39/fwBgBn9/f39/fwF/
    YAAAYAZ/f39/f38AYAV/fn5+fgBgAAF/YAF/AX5gAn9/AX4DvAG6AQgEAAEAAAABAgEDAAAMAAACAQEKAQAHBgEAAQEA
    AgcCAgABAgAGAAgOBAEBBAAAAQALAQkAAwMAAQQBAAICAAIBAQEBAQEGAQACAQEEAAECAQEABQMBAQMEAwQCAwAAAAEA
    AAAAAAEFAQEAAAACAQIAAQMAAQAGBAACAgMEAAAAAAAGAAQABAQEBAAAAwIAAgACAAEBAAAAAQEBAAEAAAAAAgAAAQAB
    AQEBAQEBAQEBAQIBAAAAAQ0AAQQFAXABBQUFAwEAEQYJAX8BQYCAwAALBzYEBm1lbW9yeQIACGJsc19pbml0AA0KYmxz
    X3ZlcmlmeQAnEV9fd2JpbmRnZW5fbWFsbG9jAHwJDQEAQQELBLgBCrkBtwEKiO8CugGXVQIQfwV+IwBB4OEAayIGJABB
    KxABIgkEQCAJQfSgwABBKxBnIQwDQCAHQStHBEAgByAMaiIJQV9BfyAJLQAAIglBn39qQf8BcUEaSRsgCXE6AAAgB0EB
    aiEHDAELC0EAIQcgBkGoA2pBOBByGiAGQQE2AuADIAZB6ANqQTgQciEPIAZBoARqQQE2AgAgBkGoBmpBoKfAABBfIAZB
    qAZqECkhCSAGQbgVakGAAhByGiAGQdjbAGpBgAEQchogBkGbI2pBgQIQciENIAZBsAxqQcAAEHIaIAZByM8AakHAABBy
    GiAGQdDVAGpBwAAQchogBkEAOgCaIyAGIAlB/wBqIhBBA3ZBAWoiCkEBdCILOgCZIyAGIApBB3Y6AJgjIAtBf2pBBXYi
    CEEBaiERA0AgB0ErRwRAIAcgDWogByAMai0AADoAACAHQQFqIQcMAQsLIAZBKzoAxiMgBkEgaiAGQZgjakEvQdinwAAQ
    ggEgBkGwDGpBwAAgAiADIAYoAiAgBigCJBATQQAhDUEAIAtrIRIgBkGZI2ohE0EBIQNBACEJA0ACQCANIAMgEUtyRQRA
    IAMgCEshDSADIAMgCE1qIQJBACEHA0AgB0EgRgRAIAYgAzoAmCNBACEHA0AgB0ErRwRAIAcgE2ogByAMai0AADoAACAH
    QQFqIQcMAQsLIAZBKzoAxCMgBkEYaiAGQZgjakEtQeinwAAQggFBACEHIAZByM8AakEAIAZB0NUAakEgIAYoAhggBigC
    HBATIAkgEmohAyAJIAlBgAIgCUGAAksbIg5rIRQgBkG4FWogCWohFQJAA0AgB0EgRg0FIAcgFGpFDQEgByAVaiAGQcjP
    AGogB2otAAA6AAAgAyAHQQFqIgdqDQALIAIhAyALIQkMBQsgDkGAAkH4p8AAEDwABSAGQcjPAGogB2oiDiAOLQAAIAZB
    sAxqIAdqLQAAcyIOOgAAIAZB0NUAaiAHaiAOOgAAIAdBAWohBwwBCwALAAsgEEGACEkhDUEAIQNBACEJA0ACQCAJQQJH
    BEAgCUEBaiELIAZBuBVqIANqIQJBACEHAkADQCAHIApGBEAgDQRAIAZByM8AakHwABByGiAGQdjbAGohCCAKIQcDQCAH
    BEAgBkHIzwBqQQgQLiAGIAYpA8hPIAgxAAB8NwPITyAHQX9qIQcgCEEBaiEIDAELCyAGQcjPAGoQRSAGQdDVAGogBkGo
    BmoQMCAGQZgjakHwABByGiAGQcjPAGogBkHQ1QBqEDZBAEgNBUEAIQIDQCAGQdDVAGpBARAuIAJBAWohAiAGQcjPAGog
    BkHQ1QBqEDZBf0oNAAsDQCACQQFIDQZBACEHA0AgB0HoAEYEQCAGIAYpA7hWQgGHNwO4VkEAIQcDQCAHQfAARwRAIAZB
    mCNqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQcMAQsLIAZBmCNqIAZB0NUAahBkIAZBmCNqEEUgBikDgCRCP4chF0EA
    IQcDQCAHQfAARwRAIAZByM8AaiAHaiIIIAZBmCNqIAdqKQMAIhYgCCkDAIUgF4MgFoU3AwAgB0EIaiEHDAELCyACQX9q
    IQIMAgUgBkHQ1QBqIAdqIgggCEEIaikDAEI5hkKAgICAgICAgAKDIAgpAwBCAYeENwMAIAdBCGohBwwBCwALAAsACyAK
    QYABQaChwAAQPQALIAMgB2oiCEH/AU0EQCAHQYABRg0CIAZB2NsAaiAHaiACIAdqLQAAOgAAIAdBAWohBwwBCwsgCEGA
    AkGwocAAEDwAC0GAAUGAAUHAocAAEDwACyAGQShqIAZBqANqEAIgBkG4EmogDxACIAZBKGogBkG4EmoQDCAGQegBakHo
    g8AAEF8CQAJAIAZB6AFqEFoNACAGQShqEIQBDQAgBkGIPWoQS0EAIQcgBkGIwwBqQTgQchogBkG4IWpBOBByGiAGQYjA
    AGoQSyAGQcjEAGoQSyAGQcjJAGoQSyAGQcjMAGoQSyAGQagGahBLIAZBsAxqEEsgBkHIzwBqEEsgBkHQ1QBqEEsgBkHY
    2wBqEEsgBkG4FWoQSyAGQZgjaiAGQcjJAGpBwAEQZxogBkHYJGogBkHIzABqQcABEGcaIAZBmCZqIAZBqAZqQcABEGca
    IAZB2CdqIAZBsAxqQcABEGcaIAZBmClqIAZByM8AakHAARBnGiAGQdgqaiAGQdDVAGpBwAEQZxogBkGYLGogBkHY2wBq
    QcABEGcaIAZB2C1qIAZBuBVqQcABEGcaIAZBuBVqQecAEHIaIAZBiMAAaiAGQShqEH8gBkGIwABqEBggBkGYI2ogBkEo
    ahB/A0AgB0HACkYEQCAGQbghaiAGQegBahBrIAYpA7ghIRcgBkG4IWpBARCdASAGQbghahBEIAYpA7ghIRYgBkGIwwBq
    IAZBuCFqEGsgBkGIwwBqQQEQnQEgBkGIwwBqEEQgBkG4IWogBkGIwwBqIBdCAoGnEE8gBkGIwABqIAZBKGogFkICgacQ
    bSAGQcjEAGogBkGIwABqEH8gBkG4IWoQKUEDaiIJQQJ2IgdBAWohAkEAIQgCQAJAAkADQAJAIAZBuCFqQQUQjAEhAyAC
    IAhGBEAgCUGYA0kNASACQecAQbCEwAAQPAALIAhB5wBGDQIgBkG4FWogCGogA0FwaiIDOgAAIAZBuCFqIANBGHRBGHUQ
    ngEgBkG4IWoQRCAGQbghakEEEDsgCEEBaiEIDAELCyAGQbgVaiACaiADOgAAIANBGHRBGHVBf2oiA0EBdiECIANBD0sN
    ASAGQYg9aiAGQZgjaiACQcABbGoQfwNAIAdBf0YEQCAGQYg9aiAGQcjEAGoQcyAGQZgjaiAGQYg9akHAARBnGgwICyAH
    QeYASw0DIAZBiMAAaiAGQZgjaiAGQbgVaiAHaiwAABAfIAdBf2ohByAGQYg9ahAYIAZBiD1qEBggBkGIPWoQGCAGQYg9
    ahAYIAZBiD1qIAZBiMAAahAMDAALAAtB5wBB5wBBoITAABA8AAsgAkEIQcCEwAAQPAALIAdB5wBB0ITAABA8AAUgBkHI
    xABqIAZBmCNqIAdqIgIQfyACQcABaiICIAZByMQAahB/IAIgBkGIwABqEAwgB0HAAWohBwwBCwALAAsgBkGYI2oQSwsgB
    kEoaiAGQZgjahB/IAZBKGoQRyAMEAlBACEHIAZBqAZqQTAQchogBkGwDGpBoKfAABBfAkACQAJAAkACQANAAkAgB0EwRg
    RAIAYgBi0AqAZBH3E6AKgGIAZByM8AaiAGQagGahBdIAENAUEAQQBB8ILAABA8AAsgASAHRg0CIAZBqAZqIAdqIAAgB2o
    tAAA6AAAgB0EBaiEHDAELC0EAIQcCQCAALAAAIgJBAE4EQCAAQTBqIQAgAUEwIAFBMEsbQVBqIQIDQCAHQTBGBEAgBkHY
    2wBqIAZBqAZqEF0gBkHoAWoQSyAGQegBaiAGQcjPAGoQtAEgBkGoAmoiACAGQdjbAGoQtAEgBkHoAmoQaSAGQegBahBEI
    AZBuBVqIAZB6AFqEE0gBkGYI2ogABCFASAGQZgjahADIAZBmCNqIAZBuBVqEFkNAyAGQegBahCUAQwDCyACIAdGDQQgBk
    GoBmogB2ogACAHai0AADoAACAHQQFqIQcMAAsACyAGQZgjahBLIAZB0NUAakE4EHIaIAZBATYCiFYgBkGYI2ogBkHIzwB
    qELQBIAZBmCNqEEQgBkGYJGoQaSAGQdjbAGogBkGYI2oQTQJAIAZB2NsAaiAGQdDVAGoQXEEBRwRAIAZBmCNqEJQBDAEL
    IAZBuBVqIAZB2NsAaiAGQdDVAGoQIyAGQbgVahBYBEAgBkG4FWoQQSAGQbgVahBECyAGQdgjaiAGQbgVahClAQsgAkEgc
    UEFdiAGQdgjahBMQQFGRwRAIAZBmCNqEKYBCyAGQegBaiAGQZgjakHAARBnGgsgBkHQPGpB8IHAABBfIAZB6AFqEIQBRQ
    0CDAMLIAEgAUHggsAAEDwACyAHQTBqIAFBgIPAABA8AAsgBkGoA2oQSyAGQagDaiAGQegBahB/IAZBuBJqEEsgBkG4Emo
    gBkHoAWoQfyAGQbgSahBHIAZByMcAakHwgcAAEF8gBkGYI2pBqILAABBfIAZBiMMAaiAGQZgjahCLAUEAIQAgBkG4IWpB
    OBByGiAGQfAhakE4EHIhCSAGQdjbAGpB8IHAABBfIAZBuBVqQYCAwAAQXyAGQZgjakE4EHIaIAZBkCNqIQsgBkGwFWohC
    gJAAkADQCAAQQdGDQIgAEEBaiEBIAZBuBVqIABBA3RqIQxCACEXQQAhAwNAIANBf2ohByAKIANBA3RqIQIgCyAAIANqQQ
    N0aiEIA0AgB0EGRgRAIAEhAAwDCyAIQQhqIQggAkEIaiECIAAgB0EBaiIHakEGSw0ACyAAQQZNBEAgB0EGSw0DIAdBAWo
    hAyAGQQhqIAIpAwAiFiAWQj+HIAwpAwAiFiAWQj+HEDEgCCAGKQMIIhkgF3wiFiAIKQMAIhp8IhhC//////////8DgzcD
    ACAYIBZUrSAWIBlUrSAGQRBqKQMAIBdCP4d8fCAaQj+HfHxCBoYgGEI6iIQhFwwBCwsLIABBB0G0ncAAEDwACyAHQQdBx
    J3AABA8AAsgBkG4IWogBkHQPGoQayAGQbghaiAGQZgjahAkIAkgBkHQPGoQayAJIAZBmCNqEBwgCSAGQdjbAGoQYyAGQb
    gSaiAGQYjDAGoQSCAGQbghahApIQAgBkGIyABqIAZBuCFqIAZByMcAahCNASAGQYjIAGoQKSAASQRAIAZBuCFqIAZBiMg
    AahBrIAZBqANqEKYBCyAJECkhACAGQYjIAGogCSAGQcjHAGoQjQEgBkGIyABqECkgAEkEQCAJIAZBiMgAahBrIAZBuBJq
    EKYBCyAGQbghahBEIAkQREEAIQcgBkHIyABqQTgQchogBkGIyQBqQTgQchogBkGYO2pBOBByGiAGQYg9ahBLIAZBiMAAa
    hBLIAZByMQAahBLIAZByMkAahBLIAZByMwAahBLIAZBqAZqEEsgBkGwDGoQSyAGQcjPAGoQSyAGQdDVAGoQSyAGQdjbAG
    oQSyAGQbgVahBLIAZBmCNqIAZByMkAakHAARBnGiAGQdgkaiAGQcjMAGpBwAEQZyEAIAZBmCZqIAZBqAZqQcABEGchASA
    GQdgnaiAGQbAMakHAARBnIQsgBkGYKWogBkHIzwBqQcABEGchCiAGQdgqaiAGQdDVAGpBwAEQZyECIAZBmCxqIAZB2NsA
    akHAARBnIQMgBkHYLWogBkG4FWpBwAEQZyEIIAZBuBVqQcwBEHIaIAZByMgAaiAGQbghahBrIAZBiMkAaiAJEGsgACAGQ
    agDahB/IAAgBkG4EmoQcyABIAZBqANqEH8gASAGQbgSahAMIAZBiD1qIAZBuBJqEH8gBkGIPWoQGCAGQcjEAGogABB/IA
    ZBmCNqIAZByMQAahB/IAZBmCNqIAZBiD1qEHMgBkHIxABqIAEQfyALIAZByMQAahB/IAsgBkGIPWoQDCAGQYjAAGogBkG
    oA2oQfyAGQYjAAGoQGCAGQcjEAGogABB/IAIgBkHIxABqEH8gAiAGQYjAAGoQDCAGQcjEAGogARB/IAMgBkHIxABqEH8g
    AyAGQYjAAGoQDCAGQcjEAGogAhB/IAogBkHIxABqEH8gCiAGQYg9ahBzIAZByMQAaiADEH8gCCAGQcjEAGoQfyAIIAZBi
    D1qEAwgBikDyEghFyAGQcjIAGpBARCdASAGQcjIAGoQRCAGKQPISCEWIAZBmDtqIAZByMgAahBrIAZBmDtqQQEQnQEgBk
    GYO2oQRCAGQcjIAGogBkGYO2ogF0ICgacQTyAGQYjAAGogBkGoA2ogFkICgacQbSAGQcjEAGogBkGIwABqEH8gBikDiEk
    hFyAGQYjJAGpBARCdASAGQYjJAGoQRCAGKQOISSEWIAZBmDtqIAZBiMkAahBrIAZBmDtqQQEQnQEgBkGYO2oQRCAGQYjJ
    AGogBkGYO2ogF0ICgacQTyAGQYg9aiAGQbgSaiAWQgKBpxBtIAZByMQAaiAGQYg9ahAMIAZBmDtqIAZByMgAahBrIAZBm
    DtqIAZBiMkAahBhIAZBmDtqEEQgBkGYO2oQKUEBaiICQQF2IghBAWohAAJAAkACQAJAA0ACQCAGQcjIAGpBAxCMASEBIA
    AgB0YEQCAGQYjJAGpBAxCMASEDIAJBlgNJDQEgAEHMAUG0g8AAEDwACyAGQcjIAGogAUF8aiIBEJ4BIAZByMgAahBEIAZ
    ByMgAakECEDsgBkGIyQBqIAZBiMkAakEDEIwBQXxqIgMQngEgBkGIyQBqEEQgBkGIyQBqQQIQOyAHQcwBRg0CIAZBuBVq
    IAdqIAMgAUECdGo6AAAgB0EBaiEHDAELCyAGQbgVaiAAaiADIAFBAnRqIgA6AAAgAEEYdEEYdUF/aiIBQQF2IQAgAUEPS
    w0BIAZBiD1qIAZBmCNqIABBwAFsahB/A0AgCEF/Rg0EIAhBywFLDQMgBkGIwABqIAZBmCNqIAZBuBVqIAhqLAAAEB8gCE
    F/aiEIIAZBiD1qEBggBkGIPWoQGCAGQYg9aiAGQYjAAGoQDAwACwALQcwBQcwBQaSDwAAQPAALIABBCEHEg8AAEDwACyA
    IQcwBQdSDwAAQPAALIAZBiD1qIAZByMQAahBzIAZBqANqIAZBiD1qQcABEGcaQX8hByAGQagDahCEAUUNASAGQegBahCm
    AUEAIQcgBkHIzwBqQeAAEHIaIAUEQANAIAdB4ABGBEAgBiAGLQDIT0EfcToAyE8gBkHQ1QBqIAZByM8AahAhAkACQAJAI
    AQsAAAiA0F/SgRAIARB4ABqIQAgBUHgACAFQeAASxtBoH9qIQFBACEHA0AgB0HgAEYEQCAGQZgjaiAGQcjPAGoQISAGQa
    gDaiAGQdDVAGogBkGYI2oQPwwDCyABIAdGDQMgBkHIzwBqIAdqIAAgB2otAAA6AAAgB0EBaiEHDAALAAsgBkGYI2oQKiA
    GQYjAAGpBOBByGiAGQQE2AsBAIAZBmCNqIAZB0NUAahCQASAGQZgkaiIBELABIAZBmCVqELABIAZBmCNqEKgBIAZB2NsA
    aiAGQZgjahAmIAZBuBVqIAZB2NsAahBeIAZBuBVqEKYBIAZBuBVqIAZB2NsAahAPIAZBsAxqIAZBuBVqQcAAEGcaAkAgB
    kGwDGogBkGIwABqEFxBAUcEQCAGQZgjahCYAQwBCyAGQdjbAGoQhwFFBEAgBkHIxABqIAZBmNwAaiIAEIUBIAZByMkAai
    AGQdjbAGoQhQEgBkHIzABqIAZB2NsAahCFASAGQagGakE4EHIaIAZBATYC4AYgBkGwDGpBOBByGiAGQQE2AugMIAZByMQ
    AahADIAZByMkAahADIAZByMQAaiAGQcjJAGoQeCAGQcjEAGoQRCAGQbgVaiAGQcjEAGogBkGIwABqECMgBkHIyQBqIAZB
    uBVqEKUBIAZByMQAaiAGQcjJAGoQpQEgBkHIyQBqIAZB2NsAahClASAGQcjJAGogBkHIxABqEHggBkHIyQBqEEQgBkHIy
    QBqEEIgBkHIxABqIAAQpQEgBkHIxABqEEIgBkHIyQBqIAZBsAxqEFwhAiAGQcjMAGogBkGwDGoQpQEgBkHIzABqEEEgBk
    HIzABqEEQgBkGoBmogBkHIyQBqEKUBIAZBqAZqEEEgBkGoBmoQRCAGQcjJAGogBkGoBmpBASACayICEHkgBkGwDGogBkH
    IzABqIAIQeSAGQbgVaiAGQcjJAGogBkGwDGoQIyAGQdjbAGogBkG4FWoQpQEgBkHIzABqIAZByMkAahClASAGQcjMAGog
    BkGwDGoQNCAGQcjMAGogBkHY2wBqEEggACAGQcjMAGoQpQEgACAGQcjEAGoQSCAGQagGaiAGQdjbAGoQpQEgBkHY2wBqI
    AAgAhB5IAAgBkGoBmogAhB5IAZB2NsAahCJASEAIAZBuBVqIAZB2NsAahBeIAZBuBVqEDogBkG4FWoQqAEgBkHY2wBqIA
    ZBuBVqIAAQjwELIAZB2NsAahCJAQRAIAZB2NsAahA6CyAGQdjbAGoQqwEgASAGQdjbAGoQkAELQQAhAgJAIAEQhwENACA
    GQdgkahBMIgINACABEEwhAgsgA0EgcUEFdiACQQFGRwRAIAZBmCNqEJwBCyAGQagDaiAGQZgjakGAAxBnGgsgBkHIyABq
    QfCBwAAQXyAGQagDahCIAQ0FIAZBuBJqECogBkG4FWoQKiAGQdDVAGoQKiAGQdjbAGoQKiAGQZgjahAqIAZBuBhqIAZB0
    NUAakGAAxBnIQ0gBkG4G2ogBkHY2wBqQYADEGchCSAGQbgeaiAGQZgjakGAAxBnIQAgBkHY2wBqQbiAwAAQXyAGQZgjak
    HwgMAAEF8gBkGIwwBqIAZB2NsAaiAGQZgjahBJIAZBiMkAakHwgcAAEF9BACEHIAZBuCFqQTgQchogBkHwIWpBqAEQciE
    DIAZBsAxqQfCBwAAQXyAGQcjPAGpBgIDAABBfIAZB4CJqIQEgBkGoImohDyAGQdDVAGogBkHIyABqEF8DQCAHQagBRg0C
    IAZBuCFqIAdqIgIgBkHQ1QBqEGsgAiAGQcjPAGoQJCAHQThqIQcgBkHQ1QBqIAZByM8AahAcDAALAAsgB0HgAGogBUGwp
    MAAEDwACyABIAZB0NUAahBrQQAhByAGQdjbAGpBOBByGiAGQZgjaiADIAZBsAxqEI0BIAZB2NsAaiAGQZgjahBrIAMgBk
    HY2wBqEGsgBkGYI2ogASAGQbAMahCNASAGQdjbAGogBkGYI2oQayABIAZB2NsAahBrIAZBiD1qECogBkGIwwBqEEAgBkG
    IwwBqEKgBIAZBmDtqQTgQchogBkG4FWogBkGoA2oQfgNAIAdBgAlGBEACQCAGQbgVaiECQQAhBwNAIAdB4AFHBEAgBkG4
    IWogB2oiBBApIQUgBkGYI2ogBCAGQYjJAGoQjQEgBkGYO2ogBkGYI2oQayAGQZg7ahApIAVJBEAgBCAGQZg7ahBrIAIQn
    AELIAQQRCAHQThqIQcgAkGAA2ohAgwBCwsgBkHIxABqECogBkGIwABqECogBkGYI2oQKiAGQcjJAGoQKiAGQcjMAGoQKi
    AGQagGahAqIAZBsAxqECogBkHIzwBqECogBkHQ1QBqECogBkHY2wBqECogBkGYJmogBkHIyQBqQYADEGchAiAGQZgpaiA
    GQcjMAGpBgAMQZyEEIAZBmCxqIAZBqAZqQYADEGchBSAGQZgvaiAGQbAMakGAAxBnIQsgBkGYMmogBkHIzwBqQYADEGch
    CiAGQZg1aiAGQdDVAGpBgAMQZyEIIAZBmDhqIAZB2NsAakGAAxBnIQxBACEHIAZBqAZqQTgQchogBkGwDGogBkG4IWoQX
    yAGQcjPAGogAxBfIAZB0NUAaiAPEF8gBkHY2wBqIAEQXyAGQegMaiAGQcjPAGpBOBBnGiAGQaANaiAGQdDVAGpBOBBnGi
    AGQdgNaiAGQdjbAGpBOBBnGiAGQdDVAGpBlwMQchogBkHY2wBqQZcDEHIaA0AgB0HgAUYEQAJAIAZBmCNqIAZBuBVqEH4
    gBkHIxABqIAZBmCNqEH4gAiAGQcjEAGoQfiACIA0QCyAEIAZByMQAahB+IAQgCRALIAZByMQAaiACEH4gBSAGQcjEAGoQ
    fiAFIAkQCyAGQcjEAGogBkGYI2oQfiALIAZByMQAahB+IAsgABALIAZByMQAaiACEH4gCiAGQcjEAGoQfiAKIAAQCyAGQ
    cjEAGogBBB+IAggBkHIxABqEH4gCCAAEAsgBkHIxABqIAUQfiAMIAZByMQAahB+IAwgABALIAZBsAxqQQEgBikDsAxCAo
    GnayIFEJ0BIAZBsAxqEEQgBkGoBmoQdEEAIQAgBkGwDGohAgJAAkACQAJAA38gAEEERgR/IAZBqAZqECkiA0GXA08NAiA
    DQQFqIQkgBkHY2wBqIANqQQE6AAAgBkHY2wBqIQggAwVBACEHA0AgB0E4RwRAIAZBqAZqIAdqIgEgASkDACACIAdqKQMA
    hDcDACAHQQhqIQcMAQsLIAJBOGohAiAAQQFqIQAMAQsLIQcDQCAHBEAgBkGwDGpBARA7IAggBikDsAxCAoGnQQF0QX9qO
    gAAIAdBf2ohByAIQQFqIQgMAQsLQQAhBwNAIAcgCUYEQCAGQYjAAGogBkGYI2ogBkHQ1QBqIANqLQAAQRl0QRh1QQFyEC
    AgA0F/aiEHA0AgB0F/Rg0GIAZBiMAAahAUIAdBlgNLDQUgBkHIxABqIAZBmCNqIAZB2NsAaiAHai0AACAGQdDVAGogB2o
    tAABBAXRqQRh0QRh1ECAgB0F/aiEHIAZBiMAAaiAGQcjEAGoQCwwACwALIAdBlwNGDQIgB0EBaiEBQQAhACAGQdDVAGog
    B2oiC0EAOgAAIAZB2NsAaiAHai0AACEKQQEhAkE4IQcDQCAHQeABRgRAIAEhBwwCBSAGQbAMaiAHaiIEKQMAIRcgBEEBE
    DsgBCAKIBdCAoGnbCIIQRh0QRl1EJ4BIAQQRCALIAAgAiAIbGoiADoAACAHQThqIQcgAkEBdCECDAELAAsACwALIANBlw
    NBkKXAABA8AAtBlwNBlwNBoKXAABA8AAsgB0GXA0GwpcAAEDwACyAGQcjEAGogBkGIwABqEH4gBkHIzwBqECogBkHIzwB
    qIAZBuBVqEH4gBkHIzwBqEJwBIAZByMQAaiAGQcjPAGoQCyAGQYjAAGogBkHIxABqIAUQbyAGQbgSaiAGQYjAAGoQfkF/
    IQcgBkG4EmoQiAFFDQogBkG4EmoQOCAGQbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZBmDtqIAZBuBVqIAZBmCNqEEkgB
    kGYPGpBOBByGiAGQdA8akE4EHIaIAZBiD1qECogBkHoAWoQhAFFBEAgBkEoahCEAQ0BIAZBiMAAahAqIAZBiMAAaiAGQb
    gSahB+IAZBiMAAahBKIAZBiMMAahBLIAZBiMMAaiAGQegBahB/IAZBiMMAahBHIAZByMQAahAqIAZByMQAaiAGQagDahB
    +IAZByMQAahBKIAZBuCFqEEsgBkG4IWogBkEoahB/IAZBuCFqEEcgBkGYI2ogBkGIwwBqEIUBIAZByMcAaiAGQZgjahCF
    ASAGQZgjaiAGQcjDAGoQhQEgBkGIyABqIAZBmCNqEIUBIAZBmCNqIAZBuCFqEIUBIAZByMgAaiAGQZgjahCFASAGQZgja
    iAGQfghahCFASAGQYjJAGogBkGYI2oQhQEgBkHIyQBqECogBkHIzABqECogBkHQ1QBqEGAgBkHIyQBqIAZBiMAAahB+IA
    ZByMwAaiAGQcjEAGoQfiAGQbAMahAqIAZBsAxqIAZBiMAAahB+IAZBsAxqEJwBIAZByM8AahAqIAZByM8AaiAGQcjEAGo
    QfiAGQcjPAGoQnAEgBkHQPGogBkGYPGoQVEF/aiEHA0AgB0EBTQRAIAZB0NUAahCTASAGQagGaiAGQdDVAGpBiAYQZxoM
    BgsgBkHQ1QBqEBsgBkHY2wBqIAZByMkAaiAGQcjHAGogBkGIyABqEBcgBkG4FWogBkHIzABqIAZByMgAaiAGQYjJAGoQF
    yAGQdjbAGogBkG4FWoQBiAGQdDVAGogBkHY2wBqEAQCQAJAIAZB0DxqIAdBf2oiBxBXIAZBmDxqIAcQV2tBAWoOAwECAA
    ILIAZB2NsAaiAGQcjJAGogBkGIwABqIAZByMcAaiAGQYjIAGoQFiAGQZgjaiAGQcjMAGogBkHIxABqIAZByMgAaiAGQYj
    JAGoQFiAGQdjbAGogBkGYI2oQBiAGQdDVAGogBkHY2wBqEAQMAQsgBkHY2wBqIAZByMkAaiAGQbAMaiAGQcjHAGogBkGI
    yABqEBYgBkGYI2ogBkHIzABqIAZByM8AaiAGQcjIAGogBkGIyQBqEBYgBkHY2wBqIAZBmCNqEAYgBkHQ1QBqIAZB2NsAa
    hAEDAALAAsgBkGoBmogBkGoA2ogBkEoahAQDAMLBSAGQbAMaiAHahBEIAdBOGohBwwBCwsgBkGoBmogBkG4EmogBkHoAW
    oQEAsFIAZBiD1qIAZBuBVqIAdqIgIQfiACQYADaiIEIAZBiD1qEH4gBkGYI2ogBkGIwwBqEF4gBkGYI2oQMiAEEKYBIAJ
    BgARqIgUQpgEgAkGABWoiAhCmASACEKsBIAQgBkGYI2oQDyAFIAZBmCNqEA8gBSAGQYjDAGoQDyAHQYADaiEHDAELCyAG
    QbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZByMQAaiAGQbgVaiAGQZgjahBJIAZBiMAAakGAgMAAEF8gBkGwDGogBkGoB
    moQaiAGQcjPAGogBkGwDGoQaiAGQdDVAGogBkHIzwBqEI4BIAZB2NsAaiAGQcjRAGoiARCOASAGQbgVaiAGQcjPAGoQjg
    EgBkGYI2oQLyAGQcjPAGoQmQEgBkHQ1QBqECIgBkHY2wBqIAZByNMAaiIAEBkgBkHY2wBqEGYgBkHQ1QBqIAZB2NsAahC
    BASAGQdDVAGoQrAEgBkHY2wBqIAAQkgEgBkHY2wBqECIgBkHY2wBqEGYgBkG4FWogARAZIAZB2NsAaiAGQbgVahCBASAG
    QdjbAGoQrAEgBkG4FWogARCSASAGQbgVahAiIAZBmCNqIAZByM8AahCSASAGQZgjaiAAEBkgBkG4FWogBkGYI2oQgQEgB
    kG4FWoQrAEgBkGYI2ogARCSASAGQZgjaiAGQbgVahAZIAZBmCNqEGYgBkHIzwBqIAZB0NUAahAZIAZBmCNqIAZByM8Aah
    CWASAAIAZB2NsAahAZIAAQZiAGQZgjaiAAEJYBIAZBmCNqEKwBIAZByMkAaiAGQZgjahBeIAZByMwAaiAGQZgkaiICEF4
    gBkHIyQBqEDIgBkHIzABqEDIgBkHIzABqEFUgBkHIzABqEKgBIAZByMkAaiAGQcjMAGoQfSAGQcjJAGoQQCAGQZgjaiAG
    QcjJAGoQDyAGQcjJAGoQOiAGQcjJAGoQqAEgAiAGQcjJAGoQDyAGQcjPAGogBkHQ1QBqEJIBIAZByM8AaiAGQZgjahAZI
    AEgBkHY2wBqEJIBIAEgBkGYI2oQGSAAIAZBuBVqEJIBIAAgBkGYI2oQGSAGQQU2AshVIAZBsAxqEJMBIAZBsAxqIAZByM
    8AahAOIAZByM8AaiAGQbAMahBsIAZBsAxqIAZByMQAahA3IAZBsAxqIAZByMQAahA3IAZBsAxqIAZByM8AahAOIAZB0NU
    AaiAGQbAMahBqIAZB0NUAahAaIAZB0NUAaiAGQbAMahAOIAZBmCNqIAZBsAxqIAZBiMAAahAdIAZB2NsAaiAGQZgjahBq
    IAZB2NsAahCTASAGQbgVaiAGQbAMahBqIAZBuBVqEJMBIAZBsAxqIAZB2NsAahBsIAZBsAxqIAZBuBVqEA4gBkGYI2ogB
    kGwDGogBkGIwABqEB0gBkHY2wBqIAZBmCNqEGwgBkHY2wBqEJMBIAZBuBVqIAZBsAxqEGwgBkG4FWoQkwEgBkGwDGogBk
    HY2wBqEGwgBkGwDGogBkG4FWoQDiAGQZgjaiAGQbAMaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQdjbAGoQkwEgBkG
    4FWogBkGwDGoQbCAGQbgVaiAGQcjEAGoQNyAGQbAMaiAGQdjbAGoQbCAGQbAMaiAGQbgVahAOIAZBmCNqIAZBsAxqIAZB
    iMAAahAdIAZB2NsAaiAGQZgjahBsIAZBmCNqIAZB2NsAaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQbgVaiAGQbAMa
    hBsIAZBuBVqIAZByMQAahA3IAZBuBVqIAZByMQAahA3IAZB2NsAaiAGQbgVahAOIAZBuBVqIAZBsAxqEGwgBkG4FWoQkw
    EgBkGwDGogBkHY2wBqEGwgBkGwDGogBkG4FWoQDiAGQbAMaiAGQdDVAGoQDiAGQbAMahCaASAGQagGaiAGQbAMakGIBhB
    nGiAGQZgjahBuIAZBqAZqIAZBmCNqEHtFDQMgBkGoB2ogAhB7RQ0DIAZBqAhqEIYBRQ0DQQAhByAGQagKahCGAUUNAwwE
    CyAFIAdHBEAgBkHIzwBqIAdqIAQgB2otAAA6AAAgB0EBaiEHDAELCyAFIAVBoKTAABA8AAtBAEEAQZCkwAAQPAALQX8hB
    wsgBkHg4QBqJAAgBw8LQQAhByAGQbAMakE4EHIaA0AgB0E4RwRAIAZBsAxqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQ
    cMAQsLIAZBmCNqIAZBsAxqEIsBIAZBqANqIAlBBnRqIAZBmCNqQcAAEGcaIAMgCmohAyALIQkMAAsACyAHIAlqIQkgAiE
    DDAALAAtBK0EBQaS5wQAoAgAiAEEBIAAbEQAAAAvBKgIIfwF+AkACQAJAAkAgAEH1AU8EQCAAQc3/e08NAiAAQQtqIgBB
    eHEhBkHYtcEAKAIAIgdFDQFBHyEIQQAgBmshBQJAAkAgBkH///8HTQRAIAZBBiAAQQh2ZyIAa0EfcXZBAXEgAEEBdGtBP
    mohCAsgCEECdEHkt8EAaigCACIABEAgBkEAQRkgCEEBdmtBH3EgCEEfRht0IQMDQAJAIABBBGooAgBBeHEiBCAGSQ0AIA
    QgBmsiBCAFTw0AIAAhAiAEIgUNAEEAIQUMAwsgAEEUaigCACIEIAEgBCAAIANBHXZBBHFqQRBqKAIAIgBHGyABIAQbIQE
    gA0EBdCEDIAANAAsgAQRAIAEhAAwCCyACDQILQQAhAkECIAhBH3F0IgBBACAAa3IgB3EiAEUNAyAAQQAgAGtxaEECdEHk
    t8EAaigCACIARQ0DCwNAIAAgAiAAQQRqKAIAQXhxIgEgBk8gASAGayIDIAVJcSIEGyECIAMgBSAEGyEFIAAoAhAiAQR/I
    AEFIABBFGooAgALIgANAAsgAkUNAgtB5LjBACgCACIAIAZPQQAgBSAAIAZrTxsNASACKAIYIQcCQAJAIAIgAigCDCIBRg
    RAIAJBFEEQIAJBFGoiAygCACIBG2ooAgAiAA0BQQAhAQwCCyACKAIIIgAgATYCDCABIAA2AggMAQsgAyACQRBqIAEbIQM
    DQCADIQQgACIBQRRqIgMoAgAiAEUEQCABQRBqIQMgASgCECEACyAADQALIARBADYCAAsCQCAHRQ0AAkAgAiACKAIcQQJ0
    QeS3wQBqIgAoAgBHBEAgB0EQQRQgBygCECACRhtqIAE2AgAgAUUNAgwBCyAAIAE2AgAgAQ0AQdi1wQBB2LXBACgCAEF+I
    AIoAhx3cTYCAAwBCyABIAc2AhggAigCECIABEAgASAANgIQIAAgATYCGAsgAkEUaigCACIARQ0AIAFBFGogADYCACAAIA
    E2AhgLAkAgBUEQTwRAIAIgBkEDcjYCBCACIAZqIgcgBUEBcjYCBCAFIAdqIAU2AgAgBUGAAk8EQEEfIQAgB0IANwIQIAV
    B////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIAcgADYCHCAAQQJ0QeS3wQBqIQQCQAJAAkACQEHY
    tcEAKAIAIgNBASAAQR9xdCIBcQRAIAQoAgAiA0EEaigCAEF4cSAFRw0BIAMhAAwCC0HYtcEAIAEgA3I2AgAgBCAHNgIAI
    AcgBDYCGAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAMgAUEddkEEcWpBEGoiBCgCACIARQ0CIAFBAXQhASAAIQ
    MgAEEEaigCAEF4cSAFRw0ACwsgACgCCCIBIAc2AgwgACAHNgIIIAdBADYCGCAHIAA2AgwgByABNgIIDAQLIAQgBzYCACA
    HIAM2AhgLIAcgBzYCDCAHIAc2AggMAgsgBUEDdiIBQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASABdCIBcQRAIAAoAggM
    AQtB1LXBACABIANyNgIAIAALIQUgACAHNgIIIAUgBzYCDCAHIAA2AgwgByAFNgIIDAELIAIgBSAGaiIAQQNyNgIEIAAgA
    moiACAAKAIEQQFyNgIECyACQQhqDwsCQAJAQdS1wQAoAgAiB0EQIABBC2pBeHEgAEELSRsiBkEDdiIBdiICQQNxRQRAIA
    ZB5LjBACgCAE0NAyACDQFB2LXBACgCACIARQ0DIABBACAAa3FoQQJ0QeS3wQBqKAIAIgFBBGooAgBBeHEgBmshBSABIQM
    DQCABKAIQIgBFBEAgAUEUaigCACIARQ0ECyAAQQRqKAIAQXhxIAZrIgIgBSACIAVJIgIbIQUgACADIAIbIQMgACEBDAAL
    AAsCQCACQX9zQQFxIAFqIgVBA3QiAEHktcEAaigCACIDQQhqIgIoAgAiASAAQdy1wQBqIgBHBEAgASAANgIMIAAgATYCC
    AwBC0HUtcEAIAdBfiAFd3E2AgALIAMgBUEDdCIAQQNyNgIEIAAgA2oiACAAKAIEQQFyNgIEIAIPCwJAQQIgAXQiAEEAIA
    BrciACIAF0cSIAQQAgAGtxaCIBQQN0IgBB5LXBAGooAgAiA0EIaiIEKAIAIgIgAEHctcEAaiIARwRAIAIgADYCDCAAIAI
    2AggMAQtB1LXBACAHQX4gAXdxNgIACyADIAZBA3I2AgQgAyAGaiIFIAFBA3QiACAGayIHQQFyNgIEIAAgA2ogBzYCAEHk
    uMEAKAIAIgAEQCAAQQN2IgJBA3RB3LXBAGohAEHsuMEAKAIAIQgCf0HUtcEAKAIAIgFBASACQR9xdCICcQRAIAAoAggMA
    QtB1LXBACABIAJyNgIAIAALIQMgACAINgIIIAMgCDYCDCAIIAA2AgwgCCADNgIIC0HsuMEAIAU2AgBB5LjBACAHNgIAIA
    QPCyADKAIYIQcCQAJAIAMgAygCDCIBRgRAIANBFEEQIANBFGoiASgCACICG2ooAgAiAA0BQQAhAQwCCyADKAIIIgAgATY
    CDCABIAA2AggMAQsgASADQRBqIAIbIQIDQCACIQQgACIBQRRqIgIoAgAiAEUEQCABQRBqIQIgASgCECEACyAADQALIARB
    ADYCAAsgB0UNAyADIAMoAhxBAnRB5LfBAGoiACgCAEcEQCAHQRBBFCAHKAIQIANGG2ogATYCACABRQ0EDAMLIAAgATYCA
    CABDQJB2LXBAEHYtcEAKAIAQX4gAygCHHdxNgIADAMLAkACQAJAAkACQEHkuMEAKAIAIgEgBkkEQEHouMEAKAIAIgAgBk
    sNA0EAIQUgBkGvgARqIgJBEHZAACIAQX9GDQYgAEEQdCIDRQ0GQfS4wQAgAkGAgHxxIgVB9LjBACgCAGoiAjYCAEH4uME
    AQfi4wQAoAgAiACACIAAgAksbNgIAQfC4wQAoAgAiBEUNAUH8uMEAIQADQCAAKAIAIgEgACgCBCICaiADRg0DIAAoAggi
    AA0ACwwEC0HsuMEAKAIAIQMCfyABIAZrIgJBD00EQEHsuMEAQQA2AgBB5LjBAEEANgIAIAMgAUEDcjYCBCABIANqIgJBB
    GohACACKAIEQQFyDAELQeS4wQAgAjYCAEHsuMEAIAMgBmoiADYCACAAIAJBAXI2AgQgASADaiACNgIAIANBBGohACAGQQ
    NyCyEGIAAgBjYCACADQQhqDwtBkLnBACgCACIAQQAgACADTRtFBEBBkLnBACADNgIAC0GUucEAQf8fNgIAQYC5wQAgBTY
    CAEH8uMEAIAM2AgBB6LXBAEHctcEANgIAQfC1wQBB5LXBADYCAEHktcEAQdy1wQA2AgBB+LXBAEHstcEANgIAQey1wQBB
    5LXBADYCAEGAtsEAQfS1wQA2AgBB9LXBAEHstcEANgIAQYi2wQBB/LXBADYCAEH8tcEAQfS1wQA2AgBBkLbBAEGEtsEAN
    gIAQYS2wQBB/LXBADYCAEGYtsEAQYy2wQA2AgBBjLbBAEGEtsEANgIAQaC2wQBBlLbBADYCAEGUtsEAQYy2wQA2AgBBiL
    nBAEEANgIAQai2wQBBnLbBADYCAEGctsEAQZS2wQA2AgBBpLbBAEGctsEANgIAQbC2wQBBpLbBADYCAEGstsEAQaS2wQA
    2AgBBuLbBAEGstsEANgIAQbS2wQBBrLbBADYCAEHAtsEAQbS2wQA2AgBBvLbBAEG0tsEANgIAQci2wQBBvLbBADYCAEHE
    tsEAQby2wQA2AgBB0LbBAEHEtsEANgIAQcy2wQBBxLbBADYCAEHYtsEAQcy2wQA2AgBB1LbBAEHMtsEANgIAQeC2wQBB1
    LbBADYCAEHctsEAQdS2wQA2AgBB6LbBAEHctsEANgIAQfC2wQBB5LbBADYCAEHktsEAQdy2wQA2AgBB+LbBAEHstsEANg
    IAQey2wQBB5LbBADYCAEGAt8EAQfS2wQA2AgBB9LbBAEHstsEANgIAQYi3wQBB/LbBADYCAEH8tsEAQfS2wQA2AgBBkLf
    BAEGEt8EANgIAQYS3wQBB/LbBADYCAEGYt8EAQYy3wQA2AgBBjLfBAEGEt8EANgIAQaC3wQBBlLfBADYCAEGUt8EAQYy3
    wQA2AgBBqLfBAEGct8EANgIAQZy3wQBBlLfBADYCAEGwt8EAQaS3wQA2AgBBpLfBAEGct8EANgIAQbi3wQBBrLfBADYCA
    EGst8EAQaS3wQA2AgBBwLfBAEG0t8EANgIAQbS3wQBBrLfBADYCAEHIt8EAQby3wQA2AgBBvLfBAEG0t8EANgIAQdC3wQ
    BBxLfBADYCAEHEt8EAQby3wQA2AgBB2LfBAEHMt8EANgIAQcy3wQBBxLfBADYCAEHgt8EAQdS3wQA2AgBB1LfBAEHMt8E
    ANgIAQfC4wQAgAzYCAEHct8EAQdS3wQA2AgBB6LjBACAFQVhqIgA2AgAgAyAAQQFyNgIEIAAgA2pBKDYCBEGMucEAQYCA
    gAE2AgAMAwsgAEEMaigCACADIARNciABIARLcg0BIAAgAiAFajYCBEHwuMEAQfC4wQAoAgAiA0EPakF4cSIBQXhqNgIAQ
    ei4wQBB6LjBACgCACAFaiICIAMgAWtqQQhqIgA2AgAgAUF8aiAAQQFyNgIAIAIgA2pBKDYCBEGMucEAQYCAgAE2AgAMAg
    tB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2AgQgASAGQQNyNgIEIAFBCGohBQwCC0G
    QucEAQZC5wQAoAgAiACADIAAgA0kbNgIAIAMgBWohAUH8uMEAIQACQANAIAEgACgCAEcEQCAAKAIIIgANAQwCCwsgAEEM
    aigCAA0AIAAgAzYCACAAIAAoAgQgBWo2AgQgAyAGQQNyNgIEIAMgBmohBCABIANrIAZrIQYCQAJAIAFB8LjBACgCAEcEQ
    EHsuMEAKAIAIAFGDQEgAUEEaigCACIAQQNxQQFGBEAgASAAQXhxIgAQFSAAIAZqIQYgACABaiEBCyABIAEoAgRBfnE2Ag
    QgBCAGQQFyNgIEIAQgBmogBjYCACAGQYACTwRAQR8hBSAEQgA3AhAgBkH///8HTQRAIAZBBiAGQQh2ZyIAa0EfcXZBAXE
    gAEEBdGtBPmohBQsgBCAFNgIcIAVBAnRB5LfBAGohAQJAAkACQAJAQdi1wQAoAgAiAkEBIAVBH3F0IgBxBEAgASgCACIC
    QQRqKAIAQXhxIAZHDQEgAiEFDAILQdi1wQAgACACcjYCACABIAQ2AgAgBCABNgIYDAMLIAZBAEEZIAVBAXZrQR9xIAVBH
    0YbdCEBA0AgAiABQR12QQRxakEQaiIAKAIAIgVFDQIgAUEBdCEBIAUiAkEEaigCAEF4cSAGRw0ACwsgBSgCCCIAIAQ2Ag
    wgBSAENgIIIARBADYCGCAEIAU2AgwgBCAANgIIDAULIAAgBDYCACAEIAI2AhgLIAQgBDYCDCAEIAQ2AggMAwsgBkEDdiI
    CQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQUgACAENgIIIAUg
    BDYCDCAEIAA2AgwgBCAFNgIIDAILQfC4wQAgBDYCAEHouMEAQei4wQAoAgAgBmoiADYCACAEIABBAXI2AgQMAQtB7LjBA
    CAENgIAQeS4wQBB5LjBACgCACAGaiIANgIAIAQgAEEBcjYCBCAAIARqIAA2AgALIANBCGoPC0H8uMEAIQADQAJAIAAoAg
    AiAiAETQRAIAIgACgCBGoiAiAESw0BCyAAKAIIIQAMAQsLQfC4wQAgAzYCAEHouMEAIAVBWGoiADYCACADIABBAXI2AgQ
    gACADakEoNgIEQYy5wQBBgICAATYCACAEIAJBYGpBeHFBeGoiACAAIARBEGpJGyIBQRs2AgRB/LjBACkCACEJIAFBEGpB
    hLnBACkCADcCACABIAk3AghBgLnBACAFNgIAQfy4wQAgAzYCAEGEucEAIAFBCGo2AgBBiLnBAEEANgIAIAFBHGohAANAI
    ABBBzYCACACIABBBGoiAEsNAAsgASAERg0AIAEgASgCBEF+cTYCBCAEIAEgBGsiBUEBcjYCBCABIAU2AgAgBUGAAk8EQE
    EfIQAgBEIANwIQIAVB////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIARBHGogADYCACAAQQJ0QeS
    3wQBqIQMCQAJAAkACQEHYtcEAKAIAIgFBASAAQR9xdCICcQRAIAMoAgAiAkEEaigCAEF4cSAFRw0BIAIhAAwCC0HYtcEA
    IAEgAnI2AgAgAyAENgIAIARBGGogAzYCAAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAIgAUEddkEEcWpBEGoiA
    ygCACIARQ0CIAFBAXQhASAAIQIgAEEEaigCAEF4cSAFRw0ACwsgACgCCCICIAQ2AgwgACAENgIIIARBGGpBADYCACAEIA
    A2AgwgBCACNgIIDAMLIAMgBDYCACAEQRhqIAI2AgALIAQgBDYCDCAEIAQ2AggMAQsgBUEDdiICQQN0Qdy1wQBqIQACf0H
    UtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQEgACAENgIIIAEgBDYCDCAEIAA2AgwgBCAB
    NgIIC0EAIQVB6LjBACgCACIAIAZNDQBB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2A
    gQgASAGQQNyNgIEIAFBCGoPCyAFDwsgASAHNgIYIAMoAhAiAARAIAEgADYCECAAIAE2AhgLIANBFGooAgAiAEUNACABQR
    RqIAA2AgAgACABNgIYCwJAIAVBEE8EQCADIAZBA3I2AgQgAyAGaiIEIAVBAXI2AgQgBCAFaiAFNgIAQeS4wQAoAgAiAAR
    AIABBA3YiAkEDdEHctcEAaiEAQey4wQAoAgAhBwJ/QdS1wQAoAgAiAUEBIAJBH3F0IgJxBEAgACgCCAwBC0HUtcEAIAEg
    AnI2AgAgAAshAiAAIAc2AgggAiAHNgIMIAcgADYCDCAHIAI2AggLQey4wQAgBDYCAEHkuMEAIAU2AgAMAQsgAyAFIAZqI
    gBBA3I2AgQgACADaiIAIAAoAgRBAXI2AgQLIANBCGoLtA8BA38jAEGAC2siAiQAIAJBCGoQSyACQcgBakE4EHIaIAJBAT
    YCgAIgAkGIAmpBOBByGiACQQE2AsACIAJByAJqQTgQchogAkEBNgKAAyACQYgDakE4EHIaIAJBATYCwAMgAkHIA2pBOBB
    yGiACQQE2AoAEIAJBiARqQQEQigEgAkHIBGpBOBByGiACQQE2AoAFIAJBiAVqQTgQchogAkEBNgLABSACQcgFaiABEIUB
    IAJBiAZqQTgQchogAkEBNgLABiACQcgGakE4EHIaIAJBATYCgAcgAkGIB2pBOBByGiACQQE2AsAHIAJByAdqQTgQchogA
    kEBNgKACCACQcgFahBYIQMgAkHICWpB4ITAABBfIAJBiApqIAJByAlqEIsBIAJByAFqIAJBiApqEKUBIAJByAlqQZiFwA
    AQXyACQYgKaiACQcgJahCLASACQYgCaiACQYgKahClASACQcgFahADIAJByAVqQQsQUiACQYgGaiACQcgFahClASACQYg
    GaiACQYgEahB4IAJBiAZqEEQgAkGIBmogAkHIBWoQSCACQYgFaiACQcgBahClASACQYgFaiACQYgGahBIIAJBiAZqIAJB
    iARqEHggAkGIBmoQRCACQYgGaiACQYgCahBIIAJBiAZqEEEgAkGIBmoQRCACQYgDaiACQYgGahClASACQcgDaiACQcgFa
    hClASACQcgDaiACQYgDahBIIAJByAdqIAJBiANqEKUBIAJByAdqEAMgAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgGai
    ACQcgBahClASACQYgGaiACQcgGahBIIAJByAdqIAJBiAZqEHggAkHIB2oQRCACQcgHaiACQYgDahBIIAJByAZqIAJBiAV
    qEEggAkGIBmogAkGIAmoQpQEgAkGIBmogAkHIBmoQSCACQcgHaiACQYgGahB4IAJByAdqEEQgAkGIBmogAkHIB2oQpQEg
    AkGIBmogAkGIBWoQSCACQYgGaiACQYgHahBcIQQgAkGIBWogAkGIBmoQpQEgAkGIBWogAkGIB2oQNCACQYgFaiACQcgHa
    hBIIAJBiANqIAJBiAVqEEggAkHIA2ogAkGIBWoQSCACQcgFaiABEEggAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgFai
    ACQcgGahClASACQYgFaiACQcgFahBIIAJByAVqIAJBiAZqEKUBIAJByAVqQQsQUiACQcgJakHQhcAAEF8gAkGICmogAkH
    ICWoQiwEgAkHIAmogAkGICmoQpQEgAkHIAmogAkGIB2oQSCACQYgDaiACQcgDakEBIARrIgEQeSACQcgGaiACQYgFaiAB
    EHkgAkGIBmogAkHIBWogARB5IAJBiAdqIAJByAJqIAEQeSACQYgKaiACQYgGaiACQYgHahAjIAJByARqIAJBiApqEKUBI
    AJByARqIAJByAZqEEggAkHIBGoQWCEBIAJBiAZqIAJByARqEKUBIAJBiAZqEEEgAkGIBmoQRCACQcgEaiACQYgGaiABIA
    NzEHkgAkGICmpBiIbAABBfIAJBiAhqIAJBiApqEIsBQTghAQNAIAFBoAVGRQRAIAJBiAhqIAJBiANqEEggAkHICWogAUG
    IhsAAahBfIAFBOGohASACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQYgIaiACQYgGahB4IAJBiAhqEEQMAQsL
    IAJByAhqIAJBiANqEIUBIAJByAlqQaiLwAAQXyACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQcgIaiACQYgGa
    hB4IAJByAhqEERBACEBA0AgAUH4A0ZFBEAgAkHICGogAkGIA2oQSCACQcgJaiABQeCLwABqEF8gAUE4aiEBIAJBiApqIA
    JByAlqEIsBIAJBiAZqIAJBiApqEKUBIAJByAhqIAJBiAZqEHggAkHICGoQRAwBCwsgAkGICmpB2I/AABBfIAJBiAlqIAJ
    BiApqEIsBQQAhAQNAIAFByAZGBEACQCACQcgJaiACQYgDahCFASACQcgKakHYlsAAEF8gAkGICmogAkHICmoQiwEgAkGI
    BmogAkGICmoQpQEgAkHICWogAkGIBmoQeCACQcgJahBEQQAhAQNAIAFBkAZGDQEgAkHICWogAkGIA2oQSCACQcgKaiABQ
    ZCXwABqEF8gAUE4aiEBIAJBiApqIAJByApqEIsBIAJBiAZqIAJBiApqEKUBIAJByAlqIAJBiAZqEHggAkHICWoQRAwACw
    ALBSACQYgJaiACQYgDahBIIAJByAlqIAFBkJDAAGoQXyABQThqIQEgAkGICmogAkHICWoQiwEgAkGIBmogAkGICmoQpQE
    gAkGICWogAkGIBmoQeCACQYgJahBEDAELCyACQYgJaiACQcgEahBIIAJBiAZqIAJBiAhqEKUBIAJBiAZqIAJByAlqEEgg
    AkEIaiACQYgGahClASACQYgGaiACQYgJahClASACQYgGaiACQcgIahBIIAJByABqIAJBiAZqEKUBIAJBiAZqIAJByAhqE
    KUBIAJBiAZqIAJByAlqEEggAkGIAWogAkGIBmoQpQEgACACQQhqQcABEGcaIAJBgAtqJAALzQ0CE38IfiMAQYADayIBJA
    AgADQCOCIUIBR+QoCAgBBaBEAgABASCyABQeABakHoABByGiABQcgBaiAAKQMAIhggGEI/hyIZIBggGRAxIAEgASkDyAE
    iFEL//////////wODNwPYASABQdABaikDACIXQgaGIBRCOoiEIRUgF0I6iCEaIABBCGoiCyEFIAAhBkEBIQcDQCAHQQZP
    BEAgAEEYaiEMIABBKGohCyAAQRBqIQcgACkDMCEYQQQhBkEAIQkgAUGgAWohDUEDIQpBAiEIQQchBQJAAkADQCAFQQpLD
    QIgBiAIIAYgCEsbIQ4gBiAKIAYgCksbQQN0QWhqIQ8gAUGYAWogBUEDdCIQIABqQVBqKQMAIhQgFEI/hyAYIBhCP4ciGR
    AxIAVBAWoiEUEBdiESIA0pAwAhFyABKQOYASEUIAshAyAHIQQgBUF7aiITIQICQANAIAIgDkcEQCACQQdGDQIgAUGIAWo
    gBCkDACIWIBZCP4cgAykDACIWIBZCP4cQMSABKQOIASIWIBR8IhQgFlStIAFBkAFqKQMAIBd8fCEXIANBeGohAyAEQQhq
    IQQgAkEBaiECDAELCyABQdgBaiAQaiAUQgGGIhYgFXwiFUL//////////wODNwMAIAFB+ABqIAAgE0EDdGopAwAiGyAbQ
    j+HIBggGRAxIBUgFlStIBdCAYYgFEI/iIQgGnx8IhRCOochGiAUQgaGIBVCOoiEIRkgBUECaiEFIAFBgAFqKQMAIRcgAS
    kDeCEUIAshAyAJIQIDQCACIA9GBEAgAUHYAGogACASQQN0aikDACIVIBVCP4ciFiAVIBYQMSABQdgBaiARQQN0aiAUQgG
    GIhYgGXwiFSABKQNYfCIZQv//////////A4M3AwAgGSAVVK0gAUHgAGopAwAgFSAWVK0gF0IBhiAUQj+IhCAafHx8fCIU
    QjqHIRogFEIGhiAZQjqIhCEVIApBAmohCiAJQRBqIQkgCEECaiEIIAZBAWohBiAHQRBqIQcMAwsgAkEgRg0DIAFB6ABqI
    AIgDGopAwAiFSAVQj+HIAMpAwAiFSAVQj+HEDEgASkDaCIVIBR8IhQgFVStIAFB8ABqKQMAIBd8fCEXIANBeGohAyACQQ
    hqIQIMAAsACwtBB0EHQbSewAAQPAALQQdBB0HEnsAAEDwACyABQagBaiAAKQMoIhQgFEI/hyAYIBhCP4ciFBAxIAEgFSA
    BKQOoASIVQgGGIhl8IhdC//////////8DgzcDsAIgAUG4AWogGCAUIBggFBAxIAEgFyAZVK0gAUGwAWopAwBCAYYgFUI/
    iIQgGnx8IhhCBoYgF0I6iIQiFyABKQO4AXwiFEL//////////wODNwO4AiABIBQgF1StIAFBwAFqKQMAIBhCOod8fEIGh
    iAUQjqIhDcDwAIgAUHIAmogAUHYAWoQBSAAIAFByAJqEGsgAEECNgI4IAFBgANqJAAPCyABQcgAaiAAIAdBA3QiDGopAw
    AiFCAUQj+HIBggGRAxIAdBAWoiDUEBdiEOIAFB0ABqKQMAIRcgASkDSCEUIAghAiAGIQMgCiEEIAshCQNAIAJFBEAgAUH
    YAWogDGogFEIBhiIWIBV8IhVC//////////8DgzcDACABQShqIAAgDUEDdCIMaikDACIbIBtCP4cgGCAZEDEgFSAWVK0g
    F0IBhiAUQj+IhCAafHwiFEI6hyEaIBRCBoYgFUI6iIQhFiAHQQJqIQkgAUEwaikDACEXQQAhAiABKQMoIRQgBSEDIAshB
    ANAIAIgCGpFBEAgAUEIaiAAIA5BA3RqKQMAIhUgFUI/hyIbIBUgGxAxIAFB2AFqIAxqIBRCAYYiGyAWfCIVIAEpAwh8Ih
    ZC//////////8DgzcDACAWIBVUrSABQRBqKQMAIBUgG1StIBdCAYYgFEI/iIQgGnx8fHwiFEI6hyEaIBRCBoYgFkI6iIQ
    hFSAFQRBqIQUgCEEBaiEIIAZBEGohBiAKQQJqIQogCSEHDAQLIAIgB2oiDUEGTQRAIAFBGGogBCkDACIVIBVCP4cgAykD
    ACIVIBVCP4cQMSABKQMYIhUgFHwiFCAVVK0gAUEgaikDACAXfHwhFyADQXhqIQMgAkF/aiECIARBCGohBAwBCwsgDUEHQ
    aSewAAQPAALIARBBk0EQCABQThqIAkpAwAiFiAWQj+HIAMpAwAiFiAWQj+HEDEgASkDOCIWIBR8IhQgFlStIAFBQGspAw
    AgF3x8IRcgAkF/aiECIANBeGohAyAEQX9qIQQgCUEIaiEJDAELCwsgBEEHQZSewAAQPAAL7wwBBH8jAEHADWsiAiQAAkA
    gACgCgAYiA0EBRwRAIAEoAoAGIgRBAUYNAQJAAkACQAJAIARBA00EQCADQX5xQQJGDQEgAiAAEI4BIAJBgAJqEC8gAkGA
    BGoQLyACQYAGahAvIAJBgAhqIAAQjgEgAkGACmoQLyACIAEQGSACQYAIaiAAQYACaiIFEJYBIAJBgAhqEKwBIAJBgAJqI
    AJBgAhqEJIBIAJBgAJqIAEQGSACQYAIaiAFEJIBIAJBgAhqIABBgARqIgMQlgEgAkGACGoQrAEgAkGABmogAkGACGoQkg
    EgBEECRg0CIAJBwAxqIAFBgAVqEF4gAkGABmogAkHADGoQogEMAwsgAiAAEI4BIAJBgAJqEC8gAkGABGoQLyACQYAGahA
    vIAIgARAZAkACQCAEQQRGIgQNACAAKAKABkEERg0AIAJBgARqIABBgAJqEJIBIAJBgARqIAFBgAJqEBkMAQsgAkHADGpB
    OBByGiACQQE2AvgMIAJBgA1qQTgQchogAkG4DWpBATYCACACQYAIakE4EHIaIAJBATYCuAggAkHACGpBOBByGiACQfgIa
    kEBNgIAIAJBgApqIABBgANqIgMQXiACQYAIaiACQYAKahCQASACQYAKaiABQYADaiIFEF4gAkGACGogAkGACmoQDyACQc
    AMahCpASAERQRAIAJBgApqIAMQXiACQcAMaiACQYAKahCQASACQYAKaiABQYACahBeIAJBwAxqIAJBgApqEA8LIAAoAoA
    GQQRHBEAgAkGACmogAEGAAmoQXiACQcAMaiACQYAKahCQASACQYAKaiAFEF4gAkHADGogAkGACmoQDwsgAkGABGogAkHA
    DGogAkGACGoQoQEgAkGABGoQZgsgAkGACGogABCOASACQYAKaiABEI4BIAJBgAhqIABBgAJqIgQQlgEgAkGACGoQrAEgA
    kGACmogAUGAAmoiBRCWASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAQQkgEgAkGACG
    ogAEGABGoiAxCWASACQYAIahCsASACQYAKaiAFEJIBIAJBgApqIAFBgARqIgUQlgEgAkGACmoQrAEgAkGABmogAkGACGo
    QkgEgAkGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAI
    ahCWASAEIAJBgAJqEJIBIAQgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQ
    YAIaiADEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBRCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIA
    JBgAhqEJYBIAJBgAhqIAMQkgEgAkGACGogBRAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgAyACQYAEahCSASADIAJBgAp
    qEJYBIAJBgAZqIAJBgApqEJYBIAJBgAhqEGYgBCACQYAIahCWAQwDCyAAIAEQBgwECyACQcAMaiABQYAFahBeIAJBgAxq
    IAJBwAxqQcAAEGcaIAJBgAZqIAJBgAxqEKMBCyACQYAGahBmIAJBgAhqIAIQkgEgAkGACGoQKyACQYACaiACQYAIahCWA
    SAFIAJBgAJqEJIBIAJBgARqIAJBgAhqEJIBIAJBgAhqIAAQkgEgAkGACGogAxCWASACQYAIahCsASACQYAKaiABEJIBIA
    JBgApqIAFBgARqEJYBIAJBgApqEKwBIAJBgAhqIAJBgApqEBkgAkGABGogAkGACGoQlgEgAkGACGogAxCSAQJAIARBAkc
    EQCACQcAMaiABQYAFahBeIAJBgAhqIAJBwAxqEKIBDAELIAJBwAxqIAFBgAVqEF4gAkGADGogAkHADGpBwAAQZxogAkGA
    CGogAkGADGoQowELIAJBgAhqEGYgAkGACmogAkGACGoQkgEgAkGACmoQKyADIAJBgARqEJIBIAMgAkGACmoQlgEgAkGAB
    mogAkGACmoQlgEgAkGACGoQZiAFIAJBgAhqEJYBCyACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIABBBT
    YCgAYgABCZAQwBCyAAIAEQbAsgAkHADWokAAuaCQIPfwt+IwBBwAJrIgIkACACQeAAakGgp8AAEF8gAEE4EHIhDCACQZg
    BakHwABByGiACQZACakEwEHIaIAwQdCACIAEpAwAiFEL9//P/z///+QF+Qv//////////A4MiETcDiAIgAkHQAGogEUIA
    IAIpA2AiGCAYQj+HIhoQMSAUIAIpA1AiEXwiFiARVK0gAkHYAGopAwAgFEI/h3x8IhRCOocgASkDCCIRQj+HfCARIBRCB
    oYgFkI6iIQiEXwiEiARVK18IRNBASEDAkADQAJAIANBB0YEQCACQZACaiEJIAJB6ABqIQpBByEEIAJB4ABqIQ0gAkGIAm
    ohDkEGIQ8MAQsgA0EBdiIAQQFqIQUgCiAAayEGIAkgAEEDdCIHayEAIAdBCGohCCACQUBrIANBA3QiBCACQeAAamopAwA
    iFiAWQj+HIhQgAikDiAIiESARQj+HEDEgAkHIAGopAwAgEiAVfCIRIBJUrSATIBd8fHwgESACKQNAfCITIBFUrXwhEiAD
    QQFqIQcDQCADIAVNBEAgAkGIAmogBGogE0L9//P/z///+QF+Qv//////////A4MiETcDACACQTBqIBFCACAYIBoQMSACQ
    SBqIBFCACAWIBQQMSACQZgBaiADQQR0aiIAIAJBKGopAwAiGzcDCCAAIAIpAyAiGTcDACACKQMwIhEgE3wiFiARVK0gAk
    E4aikDACASfHwiFEI6hyABIAdBA3RqKQMAIhFCP4d8IBEgFEIGhiAWQjqIhCIRfCISIBFUrXwhEyAVIBl8IhUgGVStIBc
    gG3x8IRcgCUEIaiEJIApBAWohCiAHIQMMAwsgBkEGSw0DIAJBEGogAkHgAGogCGopAwAgAkHgAGogAGopAwB9IhEgEUI/
    hyACQYgCaiAAaikDACACQYgCaiAIaikDAH0iESARQj+HEDEgAikDECIRIBN8IhMgEVStIAJBGGopAwAgEnx8IRIgBUEBa
    iEFIABBeGohACAGQX9qIQYgCEEIaiEIDAALAAsLA0ACQCAEQQ1HBEAgDyAEQQF2IgBrIQUgDiAAQQN0IgtrIRAgDSALay
    EIIBMgF3wgEiAVfCITIBJUrXwhEiAEQQFqIQdBMCEAIAkhBiAKIQMDQCAAIAtGDQIgBUEGTQRAIAIgAyALaikDACAAIAh
    qKQMAfSIRIBFCP4cgACAQaikDACAGIAtqKQMAfSIRIBFCP4cQMSACKQMAIhEgE3wiEyARVK0gAkEIaikDACASfHwhEiAF
    QX9qIQUgBkEIaiEGIANBCGohAyAAQXhqIQAMAQsLIAVBB0HknsAAEDwACyAMIBJC//////////8DgzcDMCACQcACaiQAD
    wsgBEEDdCAMakFIaiATQv//////////A4M3AwAgEkI6hyABIAdBA3RqKQMAIhFCP4d8IBEgEkIGhiATQjqIhCIRfCISIB
    FUrXwhEyAXIARBBHQgAmpBOGoiAEEIaikDAH0gFSAAKQMAIhFUrX0hFyAOQQhqIQ4gDUEIaiENIA9BAWohDyAVIBF9IRU
    gByEEDAALAAsgBkEHQdSewAAQPAAL+QkBBH8jAEGACWsiAiQAIAJBgAhqIAAQXiACIAJBgAhqEF4gAkGACGogAEGAAWoi
    BBBeIAJBgAFqIAJBgAhqEF4gAkGACGogARBeIAIgAkGACGoQDyACQYAIaiABQYABaiIFEF4gAkGAAWogAkGACGoQDyAAK
    AKABiEDAkACQCABKAKABkECRwRAIANBAkYNASACQYAIaiAAQYAFahBeIAJBgAJqIAJBgAhqEF4gAkGACGogAUGABWoQXi
    ACQYACaiACQYAIahAPDAILIANBAkYEQCACQYAIaiAAQYAFahBeIAJBgAdqIAJBgAhqQcAAEGcaIAJBgAZqIAJBgAdqEIU
    BIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGABmogAkGAB2oQSCACQYAIakE4EHIaIAJBATYCuAggAkHA
    CGpBOBByIAJB+AhqQQE2AgAgAkGACGogAkGABmoQpQEQsgEgAkGAAmogAkGACGpBgAEQZxoMAgsgAkGACGogAEGABWoQX
    iACQYACaiACQYAIahBeIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAEMAQsgAkGACG
    ogAUGABWoQXiACQYACaiACQYAIahBeIAJBgAhqIABBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAE
    LIAJBgAhqIAAQXiACQYADaiACQYAIahBeIAJBgAhqIAEQXiACQYAEaiACQYAIahBeIAJBgAhqIAQQXiACQYADaiACQYAI
    ahCVASACQYADahCoASACQYAIaiAFEF4gAkGABGogAkGACGoQlQEgAkGABGoQqAEgAkGABWogAkGAA2oQXiACQYAFaiACQ
    YAEahAPIAJBgAZqIAIQXiACQYAGaiACQYABahCVASACQYAGahA6IAJBgAVqIAJBgAZqEJUBIAJBgAhqIAAQXiACQYADai
    ACQYAIahCQASACQYAIaiAAQYAFaiIDEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogARBeIAJBgARqIAJBgAh
    qEJABIAJBgAhqIAFBgAVqIgEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAHaiACQYADahBeIAJBgAdqIAJBgARq
    EA8gAkGABmogAhCQASACQYAGaiACQYACahCVASACQYAGahA6IAJBgAdqIAJBgAZqEJUBIAJBgAhqIAQQXiACQYADaiACQ
    YAIahCQASACQYAIaiADEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogBRBeIAJBgARqIAJBgAhqEJABIAJBgA
    hqIAEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAIaiACQYADahBeIAJBgAhqIAJBgARqEA8gAkGABmogAkGAAWo
    QkAEgAkGABmogAkGAAmoQlQEgAkGABmoQOiACQYAIaiACQYAGahCVASACQYABahBVIAIgAkGAAWoQlQEgACACIAJBgAVq
    EKEBIAJBgAJqEFUgAkGAAmoQqAEgAEGAA2ogAkGAAmoQkAEgAEGAAmoQqQEgAkGACGoQqAEgAkGACGoQVSAAQYAEaiIBI
    AJBgAhqIAJBgAdqEKEBIAAQrAEgARCsASAAQQQ2AoAGIAJBgAlqJAALnwgBB38jAEGgC2siASQAIAFBCGpBoKfAABBfIA
    FBCGpBARCeAQNAIAJBMEYEQCABIAEpAzhCAYc3AzggAUEIakEBEJ4BIAFBCGpBARA7QQAhAiABQYABakE4EHIaIAFB4Ap
    qQTgQchogAUGACWpBOBByGiABQQE2ArgBIAFBwAFqQTgQciEEIAFB+AFqQQE2AgAgAUGAAmpBOBByGiABQbgCakEBNgIA
    IAFBwAJqQTgQchogAUH4AmpBATYCACABQYADakE4EHIaIAFBuANqQQE2AgAgAUHAA2pBOBByGiABQfgDakEBNgIAIAFBg
    ARqQTgQchogAUG4BGpBATYCACABQcAEakE4EHIaIAFB+ARqQQE2AgAgAUGABWpBOBByGiABQbgFakEBNgIAIAFBwAVqQT
    gQchogAUH4BWpBATYCACABQYAGakE4EHIaIAFBuAZqQQE2AgAgAUHABmpBOBByGiABQfgGakEBNgIAIAFBgAdqQTgQcho
    gAUG4B2pBATYCACABQcAHakE4EHIaIAFB+AdqQQE2AgAgAUGACGogAUHgCmpBOBBnGiABQbgIakEBNgIAIAFBwAhqIAFB
    gAlqQTgQZxogAUH4CGpBATYCACABQYAJakHnABByGiABQegJaiAAEIUBIAFB6AlqEEQgAUGoCmogAUEIahBfIAFBqApqE
    EQgAUGoCmoQKUEDaiIFQQJ2IgNBAWohBgJAAkACQAJAAkACQANAAkAgAiAGRgRAIAFBgAFqEGkgBCABQegJahClASABQe
    AKakE4EHIaIAFBATYCmAtBgHkhAgwBCyABQagKaiABQagKakEEEIwBIgcQngEgAUGoCmoQRCACQecARg0CIAFBgAlqIAJ
    qIAc6AAAgAUGoCmpBBBA7IAJBAWohAgwBCwsDQCACBEAgAUHgCmogAUGAAWogAmoiBEHAB2oQpQEgBEGACGoiBCABQeAK
    ahClASAEIAFB6AlqEEggAkFAayECDAELCyAFQZwDTw0BIAFBgAlqIANqLAAAIgJBD0sNAiABQUBrIAFBgAFqIAJBBnRqE
    IUBIANBf2ohAgNAIAJBf0YNBiABQUBrEAMgAUFAaxADIAFBQGsQAyABQUBrEAMgAkHmAEsNBCABQYAJaiACai0AACIDQQ
    9LDQUgAUFAayABQYABaiADQQZ0ahBIIAJBf2ohAgwACwALQecAQecAQYSjwAAQPAALIANB5wBBlKPAABA8AAsgAkEQQaS
    jwAAQPAALIAJB5wBBtKPAABA8AAsgA0EYdEEYdUEQQcSjwAAQPAALIAFBQGsQEiAAIAFBQGsQpQEgAUGgC2okAAUgAUEI
    aiACaiIDIANBCGopAwBCOYZCgICAgICAgIACgyADKQMAQgGHhDcDACACQQhqIQIMAQsLC8EHAhJ/BX4jAEGQAmsiBCQAI
    ABB8AAQciEPIARBMGpB4AEQchogBEEwaiEAAkADQCADQThGBEACQCAPIAQpAzAiGEL//////////wODNwMAIAFBCGohCS
    ACQQhqIQogAiEMIAEhDUF4IRBBASEGIBghFSAEQThqKQMAIhkhFwNAAkAgF0IGhiAVQjqIhCEWIBdCOochFyAGQQdGBEA
    gAUEIaiEMIAJBCGohDUEHIQBBBiEKDAELIAsgBkEBdiIFayEAIAwgBUEDdCIIayERIA0gCGshEiAEQTBqIAZBBHRqIgVB
    CGopAwAgGXwgBSkDACIVIBh8IhggFVStfCIZIBd8IBYgGHwiFSAYVK18IRcgCEFQaiETIAggEGohFCAGQQFqIQ5BACEDI
    AkhByAKIQUDQCADIBRGBEAgDyAGQQN0aiAVQv//////////A4M3AwAgDEEIaiEMIA1BCGohDSALQQFqIQsgEEF4aiEQIA
    4hBgwDCyADIBNGDQYgAEEGSw0DIARBEGogAyARaikDACAFIAhqKQMAfSIWIBZCP4cgByAIaikDACADIBJqKQMAfSIWIBZ
    CP4cQMSAEKQMQIhYgFXwiFSAWVK0gBEEYaikDACAXfHwhFyAAQX9qIQAgB0EIaiEHIAVBCGohBSADQXhqIQMMAAsACwsD
    QAJAIABBDUcEQCAKIABBAXYiBWshByACIAVBA3QiCWshCCABIAlrIQsgGSAAQQR0IARqQUBqIgVBCGopAwB9IBggBSkDA
    CIVVK19IhkgF3wgGCAVfSIYIBZ8IhcgGFStfCEVIABBAWohBkEwIQMgDCEFIA0hDgNAIAMgCUYNAiAHQQZNBEAgBCADIA
    hqKQMAIAkgDmopAwB9IhYgFkI/hyAFIAlqKQMAIAMgC2opAwB9IhYgFkI/hxAxIAQpAwAiFiAXfCIXIBZUrSAEQQhqKQM
    AIBV8fCEVIAdBf2ohByAFQQhqIQUgDkEIaiEOIANBeGohAwwBCwsgB0EHQYSewAAQPAALIA8gFjcDaCAEQZACaiQADwsg
    DyAAQQN0aiAXQv//////////A4M3AwAgFUIGhiAXQjqIhCEWIAJBCGohAiABQQhqIQEgCkEBaiEKIBVCOochFyAGIQAMA
    AsACwUgBEEgaiACIANqKQMAIhUgFUI/hyABIANqKQMAIhUgFUI/hxAxIAAgBEEoaikDADcDCCAAIAQpAyA3AwAgAEEQai
    EAIANBCGohAwwBCwsgAEEHQfSdwAAQPAALQQdBB0HkncAAEDwAC8sIAQV/IABBeGoiASAAQXxqKAIAIgNBeHEiAGohAgJ
    AAkAgA0EBcQ0AIANBA3FFDQEgASgCACIDIABqIQAgASADayIBQey4wQAoAgBGBEAgAigCBEEDcUEDRw0BQeS4wQAgADYC
    ACACIAIoAgRBfnE2AgQgASAAQQFyNgIEIAAgAWogADYCAA8LIAEgAxAVCwJAIAJBBGoiBCgCACIDQQJxBEAgBCADQX5xN
    gIAIAEgAEEBcjYCBCAAIAFqIAA2AgAMAQsCQCACQfC4wQAoAgBHBEBB7LjBACgCACACRg0BIAIgA0F4cSICEBUgASAAIA
    JqIgBBAXI2AgQgACABaiAANgIAIAFB7LjBACgCAEcNAkHkuMEAIAA2AgAPC0HwuMEAIAE2AgBB6LjBAEHouMEAKAIAIAB
    qIgA2AgAgASAAQQFyNgIEQey4wQAoAgAgAUYEQEHkuMEAQQA2AgBB7LjBAEEANgIAC0GMucEAKAIAIgIgAE8NAkHwuMEA
    KAIAIgBFDQICQEHouMEAKAIAIgNBKUkNAEH8uMEAIQEDQCABKAIAIgQgAE0EQCAEIAEoAgRqIABLDQILIAEoAggiAQ0AC
    wtBlLnBAAJ/Qf8fQYS5wQAoAgAiAEUNABpBACEBA0AgAUEBaiEBIAAoAggiAA0ACyABQf8fIAFB/x9LGws2AgAgAyACTQ
    0CQYy5wQBBfzYCAA8LQey4wQAgATYCAEHkuMEAQeS4wQAoAgAgAGoiADYCACABIABBAXI2AgQgACABaiAANgIADwtBlLn
    BAAJ/AkAgAEGAAk8EQEEfIQIgAUIANwIQIABB////B00EQCAAQQYgAEEIdmciAmtBH3F2QQFxIAJBAXRrQT5qIQILIAFB
    HGogAjYCACACQQJ0QeS3wQBqIQMCQAJAAkACQAJAQdi1wQAoAgAiBEEBIAJBH3F0IgVxBEAgAygCACIDQQRqKAIAQXhxI
    ABHDQEgAyECDAILQdi1wQAgBCAFcjYCACADIAE2AgAMAwsgAEEAQRkgAkEBdmtBH3EgAkEfRht0IQQDQCADIARBHXZBBH
    FqQRBqIgUoAgAiAkUNAiAEQQF0IQQgAiEDIAJBBGooAgBBeHEgAEcNAAsLIAIoAggiACABNgIMIAIgATYCCCABQRhqQQA
    2AgAgASACNgIMIAEgADYCCAwCCyAFIAE2AgALIAFBGGogAzYCACABIAE2AgwgASABNgIIC0GUucEAQZS5wQAoAgBBf2oi
    ADYCACAADQNBhLnBACgCACIADQFB/x8MAgsgAEEDdiICQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASACdCICcQRAIAAoA
    ggMAQtB1LXBACACIANyNgIAIAALIQIgACABNgIIIAIgATYCDCABIAA2AgwgASACNgIIDwtBACEBA0AgAUEBaiEBIAAoAg
    giAA0ACyABQf8fIAFB/x9LGws2AgALC9AHAgp/An4jAEEwayIIJABBJyECAkAgADUCACIMQpDOAFQEQCAMIQ0MAQsDQCA
    IQQlqIAJqIgBBfGogDEKQzgCAIg1C8LF/fiAMfKciA0H//wNxQeQAbiIEQQF0QeaowABqLwAAOwAAIABBfmogBEGcf2wg
    A2pB//8DcUEBdEHmqMAAai8AADsAACACQXxqIQIgDEL/wdcvViANIQwNAAsLIA2nIgBB4wBKBEAgAkF+aiICIAhBCWpqI
    A2nIgNB//8DcUHkAG4iAEGcf2wgA2pB//8DcUEBdEHmqMAAai8AADsAAAsCQCAAQQpOBEAgAkF+aiIFIAhBCWpqIABBAX
    RB5qjAAGovAAA7AAAMAQsgAkF/aiIFIAhBCWpqIABBMGo6AAALQScgBWshA0EBIQJBK0GAgMQAIAEoAgAiAEEBcSIGGyE
    EIABBHXRBH3VB9KrAAHEhByAIQQlqIAVqIQUCQCABKAIIQQFHBEAgASAEIAcQUw0BIAEoAhggBSADIAFBHGooAgAoAgwR
    BQAhAgwBCyABQQxqKAIAIgkgAyAGaiIGTQRAIAEgBCAHEFMNASABKAIYIAUgAyABQRxqKAIAKAIMEQUAIQIMAQsCQAJAA
    kACQCAAQQhxBEAgASgCBCEKIAFBMDYCBCABLQAgIQsgAUEBOgAgIAEgBCAHEFMNBUEAIQIgCSAGayIAIQRBASABLQAgIg
    cgB0EDRhtBA3FBAWsOAwIBAgMLQQAhAiAJIAZrIgAhCQJAAkACQEEBIAEtACAiBiAGQQNGG0EDcUEBaw4DAQABAgsgAEE
    BdiECIABBAWpBAXYhCQwBC0EAIQkgACECCyACQQFqIQIDQCACQX9qIgJFDQQgASgCGCABKAIEIAEoAhwoAhARAwBFDQAL
    QQEhAgwECyAAQQF2IQIgAEEBakEBdiEEDAELQQAhBCAAIQILIAJBAWohAgJAA0AgAkF/aiICRQ0BIAEoAhggASgCBCABK
    AIcKAIQEQMARQ0AC0EBIQIMAgsgASgCBCEHQQEhAiABKAIYIAUgAyABKAIcKAIMEQUADQEgBEEBaiEAIAEoAhwhAyABKA
    IYIQQDQCAAQX9qIgAEQCAEIAcgAygCEBEDAEUNAQwDCwsgASALOgAgIAEgCjYCBEEAIQIMAQsgASgCBCEGQQEhAiABIAQ
    gBxBTDQAgASgCGCAFIAMgASgCHCgCDBEFAA0AIAlBAWohACABKAIcIQMgASgCGCEBA0AgAEF/aiIARQRAQQAhAgwCCyAB
    IAYgAygCEBEDAEUNAAsLIAhBMGokACACC7gGAQV/IwBBgAhrIgIkACACIAAQXiACIAEQDyACQYABaiAAQYABaiIDEF4gA
    kGAAWogAUGAAWoiBRAPIAJBgAJqIABBgAJqIgQQXiACQYACaiABQYACaiIGEA8gAkGAA2ogABBeIAJBgANqIAMQlQEgAk
    GAA2oQqAEgAkGABGogARBeIAJBgARqIAUQlQEgAkGABGoQqAEgAkGAA2ogAkGABGoQDyACQYAEaiACEJABIAJBgARqIAJ
    BgAFqEJUBIAJBgANqIAJBgARqEH0gAkGAA2oQqAEgAkGABGogAxCQASACQYAEaiAEEJUBIAJBgARqEKgBIAJBgAVqIAUQ
    XiACQYAFaiAGEJUBIAJBgAVqEKgBIAJBgARqIAJBgAVqEA8gAkGABWogAkGAAWoQkAEgAkGABWogAkGAAmoQlQEgAkGAB
    GogAkGABWoQfSACQYAEahCoASACQYAFaiAAEJABIAJBgAVqIAQQlQEgAkGABWoQqAEgAkGABmogARBeIAJBgAZqIAYQlQ
    EgAkGABmoQqAEgAkGABWogAkGABmoQDyACQYAGaiACEJABIAJBgAZqIAJBgAJqEJUBIAJBgAZqIAJBgAVqELUBIAJBgAZ
    qEKgBIAJBgAVqIAIQkAEgAkGABWogAhCVASACIAJBgAVqEJUBIAIQqAEgAkGAAmpBDBCfASACQYACahBVIAJBgAJqEKgB
    IAJBgAdqIAJBgAFqEF4gAkGAB2ogAkGAAmoQlQEgAkGAB2oQqAEgAkGAAWogAkGAAmoQfSACQYABahCoASACQYAGakEME
    J8BIAJBgAZqEFUgAkGABmoQqAEgAkGABWogAkGABmoQkAEgAkGABWogAkGABGoQDyACQYACaiACQYADahCQASACQYACai
    ACQYABahAPIAJBgAVqIAJBgAJqELUBIAJBgAZqIAIQDyACQYABaiACQYAHahAPIAJBgAZqIAJBgAFqEJUBIAIgAkGAA2o
    QDyACQYAHaiACQYAEahAPIAJBgAdqIAIQlQEgACACQYAFahCQASAAEKgBIAMgAkGABmoQkAEgAxCoASAEIAJBgAdqEJAB
    IAQQqAEgAkGACGokAAv2BQEFfyMAQYAEayICJAAgAiAAEIUBIAIgARBIIAJBQGsgAEFAayIDEIUBIAJBQGsgAUFAayIFE
    EggAkGAAWogAEGAAWoiBBCFASACQYABaiABQYABaiIGEEggAkHAAWogABCFASACQcABaiADEHggAkHAAWoQRCACQYACai
    ABEIUBIAJBgAJqIAUQeCACQYACahBEIAJBwAFqIAJBgAJqEEggAkGAAmogAhClASACQYACaiACQUBrEHggAkHAAWogAkG
    AAmoQgAEgAkHAAWoQRCACQYACaiADEKUBIAJBgAJqIAQQeCACQYACahBEIAJBwAJqIAUQhQEgAkHAAmogBhB4IAJBwAJq
    EEQgAkGAAmogAkHAAmoQSCACQcACaiACQUBrEKUBIAJBwAJqIAJBgAFqEHggAkGAAmogAkHAAmoQgAEgAkGAAmoQRCACQ
    cACaiAAEKUBIAJBwAJqIAQQeCACQcACahBEIAJBgANqIAEQhQEgAkGAA2ogBhB4IAJBgANqEEQgAkHAAmogAkGAA2oQSC
    ACQYADaiACEKUBIAJBgANqIAJBgAFqEHggAkGAA2ogAkHAAmoQswEgAkGAA2oQRCACQcACaiACEKUBIAJBwAJqIAIQeCA
    CIAJBwAJqEHggAhBEIAJBgAFqQQwQUiACQcADaiACQUBrEIUBIAJBwANqIAJBgAFqEHggAkHAA2oQRCACQUBrIAJBgAFq
    EIABIAJBQGsQRCACQYADakEMEFIgAkHAAmogAkGAA2oQpQEgAkHAAmogAkGAAmoQSCACQYABaiACQcABahClASACQYABa
    iACQUBrEEggAkHAAmogAkGAAWoQswEgAkGAA2ogAhBIIAJBQGsgAkHAA2oQSCACQYADaiACQUBrEHggAiACQcABahBIIA
    JBwANqIAJBgAJqEEggAkHAA2ogAhB4IAAgAkHAAmoQpQEgABBEIAMgAkGAA2oQpQEgAxBEIAQgAkHAA2oQpQEgBBBEIAJ
    BgARqJAALxQUBBH8jAEHwEmsiACQAIAAQOEF/IQEgABCIAUUEQCAAQYADakE4EHIaIABBuANqQTgQchogAEG4A2ogAEGA
    A2oQVCAAQfAKakG4gMAAEF8gAEHwDWpB8IDAABBfIABB8ANqIABB8ApqIABB8A1qEEkgAEHwBGpBOBByGiAAQQE2AqgFI
    ABBsAVqQTgQchogAEHoBWpBATYCACAAQfAFakE4EHIaIABBATYCqAYgAEGwBmpBOBByGiAAQegGakEBNgIAIABB8AZqQT
    gQchogAEEBNgKoByAAQbAHakE4EHIaIABB6AdqQQE2AgBBf2ohAyAAQfAHahAqIABB8AdqIAAQfiAAQfAKahAqIABB8Ap
    qIABB8AdqEH4gAEHwDWoQKiAAQfANaiAAQfAHahB+IABB8A1qEJwBAkACQAJAA0AgAiEBIANBAkkNAyAAQfAKaiAAQfAE
    aiAAQfAFaiAAQfAGahAlIAFBxABNBEAgAEHwEGogAEHwBGogAEHwBWogAEHwBmoQRiABQQh0QdCrwABqIABB8BBqEJIBI
    AFBAWohAgJAAkAgAEG4A2ogA0F/aiIDEFcgAEGAA2ogAxBXa0EBag4DAQMAAwsgAEHwCmogAEHwB2ogAEHwBGogAEHwBW
    ogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYgAkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQI
    MAgsgAEHwCmogAEHwDWogAEHwBGogAEHwBWogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYg
    AkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQIMAQsLIAFBxQBBvIHAABA8AAtBxQBBxQBBzIHAABA8AAtBxQBBxQBB3IHAA
    BA8AAtBACEBCyAAQfASaiQAIAEL8gQBBH8jAEGADGsiAiQAIAIgABCOASACQYACahAvIAJBgARqIABBgAJqIgMQjgEgAk
    GABmoQLyACQYAIaiAAEI4BIAJBgApqIAEQjgEgAiABEBkgAkGABGogAUGAAmoiBBAZIAJBgAhqIAMQlgEgAkGACmogBBC
    WASACQYAIahCsASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAMQkgEgAkGACGogAEGA
    BGoiBRCWASACQYAKaiAEEJIBIAJBgApqIAFBgARqIgQQlgEgAkGACGoQrAEgAkGACmoQrAEgAkGABmogAkGACGoQkgEgA
    kGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAIahCWAS
    ADIAJBgAJqEJIBIAMgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQYAIaiA
    FEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBBCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIAJBgAhq
    EJYBIAJBgAhqIAUQkgEgAkGACGogBBAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgBSACQYAEahCSASAFIAJBgApqEJYBI
    AJBgAZqIAJBgApqEJYBIAJBgAhqEGYgAyACQYAIahCWASACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIA
    BBBTYCgAYgABCZASACQYAMaiQAC68EAQV/IwBBkAZrIgIkACAAQUBrIQQCQCABQfgAaigCACABKAI4aqwgAEH4AGooAgA
    iAyAAKAI4IgVqrH5CgICAEFMNACAFQQJOBH8gABASIAAoAngFIAMLQQJIDQAgBBASCyACQaCnwAAQX0EAIQMgAkE4akHw
    ABByGiABQUBrIQUDQCADQThGBEAgAkHwAGohBkEAIQMDQCADQThGRQRAIAMgBmogAiADaikDADcDACADQQhqIQMMAQsLI
    AJBqAFqIAAQXyACQeABaiABEF8gAkGYAmogACABEAggAkGIA2ogBCAFEAggAkGoAWogBBBhIAJBqAFqEEQgAkHgAWogBR
    BhIAJB4AFqEEQgAkH4A2ogAkGoAWogAkHgAWoQCEEAIQMgAkHoBGpB8AAQchoDQCADQfAARkUEQCACQegEaiADaiACQZg
    CaiADaikDADcDACADQQhqIQMMAQsLIAJB6ARqIAJBiANqEGVBACEDA0AgA0HwAEZFBEAgAkGIA2ogA2oiASACQThqIANq
    KQMAIAEpAwB9NwMAIANBCGohAwwBCwsgAkGYAmogAkGIA2oQZSACQZgCahBFIAJB+ANqIAJB6ARqEGQgAkH4A2oQRSACQ
    dgFaiACQZgCahAFIAAgAkHYBWoQayAAQQM2AjggAkHYBWogAkH4A2oQBSAEIAJB2AVqEGsgAEECNgJ4IAJBkAZqJAAFIA
    JBOGogA2pCADcDACADQQhqIQMMAQsLC5QEAQF/IwBB0CJrIgMkACADQcAWakG4gMAAEF8gA0HIHGpB8IDAABBfIANBCGo
    gA0HAFmogA0HIHGoQSSADQYgBakE4EHIaIANBwAFqQTgQchogA0H4AWoQKgJAIAIQhAFFBEAgA0H4BGoQKiADQfgEaiAB
    EH4gA0H4BGoQSiADQfgHahBLIANB+AdqIAIQfyADQfgHahBHIANByBxqIANB+AdqEIUBIANBuAlqIANByBxqEIUBIANBy
    BxqIANBuAhqEIUBIANB+AlqIANByBxqEIUBIANBuApqECogA0G4DWoQYCADQbgKaiADQfgEahB+IANBwBNqECogA0HAE2
    ogA0H4BGoQfiADQcATahCcASADQcABaiADQYgBahBUQX9qIQIDQCACQQFNBEAgA0G4DWoQkwEgACADQbgNakGIBhBnGgw
    DBSADQbgNahAbIANBwBZqIANBuApqIANBuAlqIANB+AlqEBcCQAJAAkAgA0HAAWogAkF/aiICEFcgA0GIAWogAhBXa0EB
    ag4DAQIAAgsgA0HIHGogA0G4CmogA0H4BGogA0G4CWogA0H4CWoQFiADQcAWaiADQcgcahAGDAELIANByBxqIANBuApqI
    ANBwBNqIANBuAlqIANB+AlqEBYgA0HAFmogA0HIHGoQBgsgA0G4DWogA0HAFmoQBAwBCwALAAsgABBgCyADQdAiaiQAC8
    MDARV/A0AgAUHAAUYEQAJAIABBKGohCyAAQRRqKAIAIgwhCCAAQRBqKAIAIg0hAyAAQQxqKAIAIg4hAiAAKAIIIg8hASA
    AQRhqKAIAIhAhCiAAQRxqKAIAIhEhBCAAQSBqKAIAIhIhByAAQSRqKAIAIhMhBgNAIAchCSAEIQcgCiEEIAVBgAJGDQEg
    AiADcSEUIAIgA3MhFSAFIAtqKAIAIAVB9J7AAGooAgAgBEEadyAEQRV3cyAEQQd3cyAGaiAJIARBf3NxIAQgB3FyampqI
    gYgCGohCiAFQQRqIQUgAyEIIAIhAyABIQIgAUEedyABQRN3cyABQQp3cyAUIAEgFXFzaiAGaiEBIAkhBgwACwALBSAAIA
    FqIgNB6ABqIANBzABqKAIAIANBKGooAgAgA0EsaigCACICQRl3IAJBDndzIAJBA3ZzIANB4ABqKAIAIgJBD3cgAkENd3M
    gAkEKdnNqamo2AgAgAUEEaiEBDAELCyAAIAYgE2o2AiQgACAJIBJqNgIgIAAgByARajYCHCAAIAQgEGo2AhggACAIIAxq
    NgIUIAAgAyANajYCECAAIAIgDmo2AgwgACABIA9qNgIIC9YDAgZ/An4jAEHwAGsiASQAIAFBoKfAABBfIAFBOGogARBfI
    AAQRAJAAkACQCABAn8gACgCOCICQRBMBEAgAkF/ahA5DAELIAEpAzAiCEIBfCIHIAhUDQEgACkDMCIIQoCAgICAgICAgH
    9RQQAgB0J/URsNAiABQThqIAggB3+nECghByABIAEpA2ggB0I6hnw3A2ggACABQThqEGIgABBEQQILIgMQLSAAQQhqIQQ
    DQCADRQ0DIAEgASkDCEI5hkKAgICAgICAgAKDIAEpAwBCAYeEIgc3AwAgASAAKQMAIAd9IgdC//////////8DgzcDOEEA
    IQIDQCAHQjqHIQcgAkEoRkUEQCABIAJqIgVBCGoiBiAFQRBqKQMAQjmGQoCAgICAgICAAoMgBikDAEIBh4QiCDcDACABI
    AJqQUBrIAIgBGopAwAgCH0gB3wiB0L//////////wODNwMAIAJBCGohAgwBCwsgASABKQMwQgGHIgg3AzAgASAAKQMwIA
    h9IAd8Igc3A2ggACABQThqIAdCP4enQQFqEE8gA0F/aiEDDAALAAtBoKLAAEEZQbyiwAAQWwALQdCiwABBH0G8osAAEFs
    ACyAAQQE2AjggAUHwAGokAAuhAwEBfyMAQZADayIGJAAgBkEIakHAABByGiAGQcgAakGoAhByGiAGQcgAahBDA0AgAQRA
    IAZByABqQQAQPiABQX9qIQEMAQUCQCACBEAgBkHIAGogAiADEHoLIAQEQCAGQcgAaiAEIAUQegsgBkGIA2pCADcDACAGQ
    YADakIANwMAIAZB+AJqQgA3AwAgBkIANwPwAiAGKAJIIQEgBigCTCECIAZByABqQYABED4DQCAGKAJIQf8DcUHAA0ZFBE
    AgBkHIAGpBABA+DAELCyAGQawBaiABNgIAIAZBqAFqIAI2AgAgBkHIAGoQEUEAIQJBACEBA0AgAUEgRkUEQCAGQfACaiA
    BaiABQXxxIAZqQdAAaigCACACQX9zQRhxdjoAACACQQhqIQIgAUEBaiEBDAELCyAGQcgAahBDQQAhAQNAIAFBIEZFBEAg
    BkEIaiABaiAGQfACaiABai0AADoAACABQQFqIQEMAQsLQQAhAQNAIAFBIEYNASAAIAFqIAZBCGogAWotAAA6AAAgAUEBa
    iEBDAALAAsLCyAGQZADaiQAC6EDAQN/IwBBgAZrIgEkACABIABBgAFqIgMQXiABQYABaiADEF4gAUGAAWoQMiABQYACai
    ABEF4gAUGAAmogAEGAAmoiAhAPIAFBgANqIAIQXiABQYADahAyIAIgAUGAAWoQkAEgAiABQYABahCVASACEKgBIAIQpwE
    gAhCnASACEKgBIAFBgANqQQwQnwEgAUGAA2oQVSABQYADahCoASABQYAEaiABQYADahBeIAFBgARqIAIQDyABQYAFaiAB
    QYABahBeIAFBgAVqIAFBgANqEJUBIAFBgAVqEKgBIAIgAUGAAmoQDyABQYACaiABQYADahCQASABQYACaiABQYADahCVA
    SABQYADaiABQYACahCVASABQYADahCoASABQYABaiABQYADahB9IAFBgAFqEKgBIAFBgAVqIAFBgAFqEA8gAUGABWogAU
    GABGoQlQEgAUGAAmogABCQASABQYACaiABEA8gACABQYABahCQASAAEKgBIAAgAUGAAmoQDyAAEKcBIAAQqAEgAyABQYA
    FahCQASADEKgBIAFBgAZqJAALhQMBBH8CQAJAIAFBgAJPBEAgAEEYaigCACEEAkACQCAAIAAoAgwiAkYEQCAAQRRBECAA
    QRRqIgIoAgAiAxtqKAIAIgENAUEAIQIMAgsgACgCCCIBIAI2AgwgAiABNgIIDAELIAIgAEEQaiADGyEDA0AgAyEFIAEiA
    kEUaiIDKAIAIgFFBEAgAkEQaiEDIAIoAhAhAQsgAQ0ACyAFQQA2AgALIARFDQIgACAAQRxqKAIAQQJ0QeS3wQBqIgEoAg
    BHBEAgBEEQQRQgBCgCECAARhtqIAI2AgAgAkUNAwwCCyABIAI2AgAgAg0BQdi1wQBB2LXBACgCAEF+IAAoAhx3cTYCAA8
    LIABBDGooAgAiAiAAQQhqKAIAIgBHBEAgACACNgIMIAIgADYCCA8LQdS1wQBB1LXBACgCAEF+IAFBA3Z3cTYCAAwBCyAC
    IAQ2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgAEEUaigCACIARQ0AIAJBFGogADYCACAAIAI2AhgLC7MCAQF/IwBBg
    AtrIgUkACAFEC8gBUGAAmoQLyAFQYAEahAvIAVBgAZqQTgQchogBUEBNgK4BiAFQcAGakE4EHIaIAVB+AZqQQE2AgAgBU
    GAB2pBOBByGiAFQQE2ArgHIAVBwAdqQTgQchogBUH4B2pBATYCACAFQYAIakE4EHIaIAVBATYCuAggBUHACGpBOBByGiA
    FQfgIakEBNgIAIAEgAiAFQYAGaiAFQYAHaiAFQYAIahAeIAVBgAhqIAMQoAEgBUGABmogBBCgASAFQYAJaiAFQYAGaiAF
    QYAHahCRASAFIAVBgAlqEJIBIAVBgAlqIAVBgAhqEJsBIAVBgARqIAVBgAlqEJIBIAVBgARqEGYgACAFIAVBgAJqIAVBg
    ARqEHYgAEEDNgKABiAFQYALaiQAC7ECAQF/IwBBgAtrIgQkACAEEC8gBEGAAmoQLyAEQYAEahAvIARBgAZqQTgQchogBE
    EBNgK4BiAEQcAGakE4EHIaIARB+AZqQQE2AgAgBEGAB2pBOBByGiAEQQE2ArgHIARBwAdqQTgQchogBEH4B2pBATYCACA
    EQYAIakE4EHIaIARBATYCuAggBEHACGpBOBByGiAEQfgIakEBNgIAIAEgBEGABmogBEGAB2ogBEGACGoQJSAEQYAIaiAC
    EKABIARBgAZqIAMQoAEgBEGACWogBEGABmogBEGAB2oQkQEgBCAEQYAJahCSASAEQYAJaiAEQYAIahCbASAEQYAEaiAEQ
    YAJahCSASAEQYAEahBmIAAgBCAEQYACaiAEQYAEahB2IABBAzYCgAYgBEGAC2okAAvJAgEDfyMAQcACayIBJAAgASAAQU
    BrIgMQhQEgARADIAFBQGsgAxCFASABQUBrIABBgAFqIgIQSCABQYABaiACEIUBIAFBgAFqEAMgAiABEKUBIAIgARB4IAI
    QRCACEE4gAhBOIAIQRCABQYABakEMEFIgAUHAAWogAUGAAWoQhQEgAUHAAWogAhBIIAFBgAJqIAEQhQEgAUGAAmogAUGA
    AWoQeCABQYACahBEIAIgAUFAaxBIIAFBQGsgAUGAAWoQpQEgAUFAayABQYABahB4IAFBgAFqIAFBQGsQeCABIAFBgAFqE
    IABIAEQRCABQYACaiABEEggAUGAAmogAUHAAWoQeCABQUBrIAAQpQEgAUFAayADEEggACABEKUBIAAQRCAAIAFBQGsQSC
    AAEE4gABBEIAMgAUGAAmoQpQEgAxBEIAFBwAJqJAALrQIBA38jAEGABGsiAiQAIAIgABBeIAJBgAFqIABBgAFqIgMQXiA
    CQYACakE4EHIaIAJBATYCuAIgAkHAAmpBOBByGiACQfgCakEBNgIAIAJBgANqIAMQXiACIAEQDyACQYABaiABQYABaiIE
    EA8gAkGAAmogBBCQASACQYACaiABEJUBIAJBgANqIAAQlQEgAkGAAmoQqAEgAkGAA2oQqAEgAkGAA2ogAkGAAmoQDyACQ
    YACaiACEJABIAJBgAJqEDogAkGAA2ogAkGAAmoQlQEgAkGAA2oQqAEgAkGAAmogAkGAAWoQkAEgAkGAAmoQOiADIAJBgA
    NqEJABIAMgAkGAAmoQlQEgAkGAAWoQVSAAIAJBgAFqEJABIAAgAhCVASAAEKwBIAJBgARqJAALvQIBA38jAEGACGsiASQ
    AIAEgABCOASABQYACaiAAQYAEaiICEI4BIAFBgARqIABBgAJqIgMQjgEgAUGABmoQLyAAECIgAUGABmogABCSASABQYAG
    aiAAEJYBIAAgAUGABmoQlgEgABCsASABELYBIAEQrwEgACABEJYBIAFBgAJqECIgAUGAAmoQZiABQYAGaiABQYACahCSA
    SABQYAGaiABQYACahCWASABQYACaiABQYAGahCWASABQYACahCsASABQYAEahAiIAFBgAZqIAFBgARqEJIBIAFBgAZqIA
    FBgARqEJYBIAFBgARqIAFBgAZqEJYBIAFBgARqEKwBIAMQrgEgAxCvASACELYBIAIQrwEgAyABQYACahCWASACIAFBgAR
    qEJYBIABBBTYCgAYgABCaASABQYAIaiQAC7ICAQN/IwBBgAhrIgEkACAAKAKABkEBRwRAIAEgABCOASABQYACaiAAQYAC
    aiIDEI4BIAFBgARqIABBgARqIgIQjgEgAUGABmogABCOASABECIgAUGAAmogAhAZIAFBgAJqEK8BIAFBgAJqEKwBIAFBg
    ARqECIgAUGABmogAxAZIAFBgAZqEK8BIAIgABCWASACIAMQlgEgAhCsASACECIgACABEJIBIAEgAUGAAmoQlgEgARCsAS
    ABIAFBgARqEJYBIAEgAUGABmoQlgEgARCsASABECsgAUGAAmoQZiABQYAEahBmIAAgAUGAAmoQlgEgAyABQYAEahCSASA
    DIAFBgAZqEJYBIAIgARCWASAAQQRBBSAAKAKABkF+cUECRhs2AoAGIAAQmQELIAFBgAhqJAALigIBAn8jAEHgAWsiAiQA
    IAAQRCACQQhqQTAQchogAkIBNwMAIAJBOGogABBfIAJB8ABqIAEQXyACQagBakE4EHIaIAAQdANAIAJBOGogAkHwAGoQN
    UF/TARAA0ACQCADQQBMDQAgAkHwAGpBARA7IAJBARA7IAJBqAFqIAJBOGoQayACQagBaiACQfAAahBiIAJBqAFqEEQgAk
    E4aiACQagBaiACKQPYAUI/h6dBAWoiARBPIAJBqAFqIAAQayACQagBaiACEGEgAkGoAWoQRCAAIAJBqAFqIAEQTyADQX9
    qIQMMAQsLBSACQQEQLSACQfAAakEBEC0gA0EBaiEDDAELCyACQeABaiQAC54CAQF/IwBBgA1rIgMkACADIAEQaiADEJkB
    IANBiAZqIAIQXyADQYgGahBEIANBwAZqIANBiAZqEF8gA0HABmpBAxAoGiADQcAGahBEIANB+AZqIAMQagJAIANBwAZqE
    FpFBEAgA0HABmoQKUF/aiECA0AgAkEBTQRAIANB+AZqEJoBDAMLIANB+AZqEBoCQAJAIANBwAZqIAJBf2oiAhBXIANBiA
    ZqIAIQV2tBAWoOAwECAAILIANB+AZqIAMQDgwBCyADEJMBIANB+AZqIAMQDiADEJMBDAALAAsgA0H4BmoQsAEgA0H4B2o
    QqQEgA0H4CGoQrQEgA0H4CmoQrQEgA0EBNgL4DAsgACADQfgGakGIBhBnGiADQYANaiQAC5ACAQJ/IwBBgAJrIgUkACAF
    QYABaiAAEF4gAiAFQYABahCQASAFQYABaiAAQYABahBeIAQgBUGAAWoQkAEgBUGAAWogAEGAAmoiBhBeIAUgBUGAAWoQX
    iAFQYABaiAGEF4gAyAFQYABahCQASAFQYABaiABQYABaiIGEF4gBSAFQYABahAPIAVBgAFqIAEQXiADIAVBgAFqEA8gAi
    ADEH0gAhCoASAEIAUQfSAEEKgBIAUgAhCQASACEFUgAhCoASAFQYABaiAGEF4gBSAFQYABahAPIAMgBBCQASAFQYABaiA
    BEF4gAyAFQYABahAPIAMgBRB9IAMQqAEgBBA6IAQQqAEgACABEAsgBUGAAmokAAvkAQECfyMAQcABayIDJAAgAxBLIAAg
    ASACQR91IgQgAnMgBEF/c2pBAm0iAkF/akEfdhBtIAAgAUHAAWogAkEBc0F/akEfdhBtIAAgAUGAA2ogAkECc0F/akEfd
    hBtIAAgAUHABGogAkEDc0F/akEfdhBtIAAgAUGABmogAkEEc0F/akEfdhBtIAAgAUHAB2ogAkEFc0F/akEfdhBtIAAgAU
    GACWogAkEGc0F/akEfdhBtIAAgAUHACmogAkEHc0F/akEfdhBtIAMgABB/IAMQpgEgACADIARBAXEQbSADQcABaiQAC+Q
    BAQJ/IwBBgANrIgMkACADECogACABIAJBH3UiBCACcyAEQX9zakECbSICQX9qQR92EG8gACABQYADaiACQQFzQX9qQR92
    EG8gACABQYAGaiACQQJzQX9qQR92EG8gACABQYAJaiACQQNzQX9qQR92EG8gACABQYAMaiACQQRzQX9qQR92EG8gACABQ
    YAPaiACQQVzQX9qQR92EG8gACABQYASaiACQQZzQX9qQR92EG8gACABQYAVaiACQQdzQX9qQR92EG8gAyAAEH4gAxCcAS
    AAIAMgBEEBcRBvIANBgANqJAALvAEBAn8jAEGwAWsiAiQAIAJBMBByIQIDQCADQTBGBEACQCABQTBqIQEgAkEwaiACEHV
    BACEDA0AgA0EwRg0BIAIgA2ogASADai0AADoAACADQQFqIQMMAAsACwUgAiADaiABIANqLQAAOgAAIANBAWohAwwBCwsg
    AkHwAGogAhB1IABBOBByIgBBATYCOCAAQUBrQTgQciAAQfgAakEBNgIAIAAgAkHwAGoQpQEgAkEwahClASACQbABaiQAC
    9QBAQJ/IwBBgANrIgEkACABIAAQXiABQYABaiAAQYABaiICEF4gAUGAAmogABBeIAFBgAJqIAIQDyABIAIQlQEgAUGAAW
    oQVSABQYABaiAAEJUBIAEQqAEgAUGAAWoQqAEgACABEJABIAAgAUGAAWoQDyABQYABaiABQYACahCQASABQYABahBVIAF
    BgAFqIAFBgAJqEJUBIAFBgAFqEKgBIAFBgAFqEDogACABQYABahCVASABQYACahCnASACIAFBgAJqEJABIAAQrAEgAUGA
    A2okAAvEAQEBfyMAQYADayIDJAAgA0EIaiABEIUBAkAgAkUEQCADQQhqEAcMAQsgA0EIaiACEKUBCyADQcgAakHYo8AAE
    F8gA0GAAWogA0HIAGoQiwEgA0HAAWogA0EIahCFASADQcABahADIANBwAFqIAEQSCAAIAEQhQEgACADQQhqEEggA0GAAm
    ogA0HAAWoQhQEgABBYIQEgA0HAAmogABCFASADQcACahBBIANBwAJqEEQgACADQcACaiABEHkgA0GAA2okAAufAQEBfyM
    AQfAAayICJAAgAiABEF9BACEBIAJBOGpBOBByGiAAEEQCQCAAIAIQNUEASA0AA0AgAkEBEC0gAUEBaiEBIAAgAhA1QX9K
    DQALA0AgAUEATA0BIAJBARA7IAJBOGogABBrIAJBOGogAhBiIAJBOGoQRCAAIAJBOGogAikDaEI/h6dBAWoQTyABQX9qI
    QEMAAsACyACQfAAaiQAC7IBAQF/IwBBgAJrIgQkACAEQYABaiAAEF4gAyAEQYABahCQASAEQYABaiAAQYABahBeIAQgBE
    GAAWoQXiAEQYABaiAAQYACahBeIAIgBEGAAWoQkAEgASAEEJABIAEgAhAPIAMQMiAEEDIgAhAyIAEQpwEgARA6IAEQqAE
    gARBVIAEQqAEgAkEMEJ8BIANBAxCfASACEFUgAhCoASACIAQQfSACEKgBIAAQFCAEQYACaiQAC58BAQJ/IwBBgAJrIgIk
    ACAAIAEQXiAAEDIgAkGIAWpB2KTAABBfIAJBCGpBOBByGiACQQE2AkAgAkHIAGpBOBByIAJBgAFqQQE2AgAgAkHAAWogA
    kGIAWoQiwEgAkEIaiACQcABahClARCyASACQQhqEKgBIAJBCGoQVSACQQhqEKgBIAAgARAPIAAgAkEIahCVASAAEKsBIA
    JBgAJqJAALowEBAX8jAEEwayIGJAAgBkEQaiAAIAEQsQEgBiAGKAIUIgA2AhwgBiAGKAIQIgE2AhggBkEIaiACIAMQsQE
    gBiAGKAIMIgI2AiQgBiAGKAIIIgM2AiAgBiAEIAUQsQEgBiAGKAIEIgQ2AiwgBiAGKAIAIgU2AiggASAAIAMgAiAFIAQQ
    ACAGQShqEKQBIAZBIGoQpAEgBkEYahCkASAGQTBqJAALiAECA38DfiMAQRBrIgIkAAN+IANBOEYEfiACQRBqJAAgBgUgA
    iAAIANqIgQpAwAiBSAFQj+HIAGsIgUgBUI/hxAxIAQgAikDACIHIAZ8IgVC//////////8DgzcDACAFIAdUrSACQQhqKQ
    MAIAZCP4d8fEIGhiAFQjqIhCEGIANBCGohAwwBCwsLhAECA38BfiMAQUBqIgEkACABQQhqIAAQXyABQQhqEEQgAUE4aiE
    CQQYhA0HcAiEAAn8DQEEAIANBAEgNARogAikDACIEUARAIAJBeGohAiAAQUZqIQAgA0F/aiEDDAELCwN/IARQBH8gAAUg
    AEEBaiEAIARCAn8hBAwBCwsLIAFBQGskAAuHAQEBfyMAQcABayIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAa
    kEBNgIAIAEQUCABQYgBakE4EHIaIABBgAFqIAFBgAEQZxogAEGAAmpBOBByGiAAQbgCakEBNgIAIABBvAJqIAFBhAFqQT
    wQZxogAEH4AmpBATYCACABQcABaiQAC48BAQJ/IwBBgAJrIgEkACAAEKwBIAEgABBeIAFBgAFqQTgQchogAUEBNgK4ASA
    BQcABakE4EHIaIAFB+AFqQQE2AgAgASAAQYABaiICEJUBIAEQOiABQYABaiABEJABIAFBgAFqIAIQlQEgAiABEJABIAIg
    ABCVASAAIAFBgAFqEJABIAAQrAEgAUGAAmokAAt9AgF/An4jAEGAAWsiASQAIAFBCGogABCFASABQQhqEBIgAUHIAGogA
    UEIahCDAUEIIQADQCAAQThGRQRAIAFByABqIABqKQMAIAKEIQIgAEEIaiEADAELCyABKQNIIQMgAUGAAWokACACQn98IA
    NCAYVCf3yDQjqIp0EBcQuJAQIBfwJ+IAAgACkDMCABQT9xrSIDhiAAKQMoQTogAWtBP3GtIgSHhDcDMCAAQShqIQFBBiE
    CA0AgAkEBTQRAIAAgACkDACADhkL//////////wODNwMABSABIAEpAwAgA4ZC//////////8DgyABQXhqIgEpAwAgBIeE
    NwMAIAJBf2ohAgwBCwsLiQECAX8CfiAAIAApA2BBOiABQTpwIgFrrSIEhyAAKQNoIAGtIgOGhDcDaCAAQeAAaiEBQQ0hA
    gNAIAJBAU0EQCAAIAApAwAgA4ZC//////////8DgzcDAAUgASABKQMAIAOGQv//////////A4MgAUF4aiIBKQMAIASHhD
    cDACACQX9qIQIMAQsLC3EBAX8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAakEBNgIAIAFBCGpBOBB
    yGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAEG8AWogAUEEakE8EGcaIABB+AFqQQE2AgAgAUFAayQAC4EBAgF/AX4gAEHw
    ABByIQADQCACQThGBEACQCAAIAEpAzAiA0I6hzcDOCAAIANC//////////8DgzcDMCAAQUBrIQBBACECA0AgAkEwRg0BI
    AAgAmpCADcDACACQQhqIQIMAAsACwUgACACaiABIAJqKQMANwMAIAJBCGohAgwBCwsLdQECfiAAIANCIIgiBSABQiCIIg
    Z+IAIgA358IAEgBH58IANC/////w+DIgIgAUL/////D4MiAX4iA0IgiCACIAZ+fCICQiCIfCABIAV+IAJC/////w+DfCI
    BQiCIfDcDCCAAIANC/////w+DIAFCIIaENwMAC3YBAn8jAEHAAWsiASQAIAEgABCFASABQUBrIAAQhQEgAUGAAWogAEFA
    ayICEIUBIAEgAhB4IAFBQGsgABB4IAFBQGsQRCACIAFBQGsQSCABQYABahBBIAAgAUGAAWoQeCABEEQgABBEIAAgARBII
    AFBwAFqJAALkwEBAn9B0LXBAEHQtcEAKAIAQQFqNgIAAkACQEGYucEAKAIAQQFGBEBBnLnBAEGcucEAKAIAQQFqIgA2Ag
    AgAEECSw0CQaC5wQAoAgAiAUF/Sg0BDAILQZi5wQBCgYCAgBA3AwBBoLnBACgCACIAQQBIDQFBoLnBACAANgIAAAtBoLn
    BACABNgIAIABBAUsNAAALAAtnAQJ/IwBBQGoiAiQAIAAQRCACIAAQhQECQCABRQRAIAAQBwwBCyAAIAEQpQELQQAhAQNA
    IAFBAUsgA3JFBEAgABADIAFBAEchAyABIAFFaiEBDAELCyAAIAIQSCAAEBIgAkFAayQAC18CAX8EfkIBIQNBMCECA38gA
    kF4RgR/IARCAYYgA3ynQX9qBSABIAJqKQMAIgUgACACaikDACIGfUI6hyADgyAEhCEEIAJBeGohAiAFIAaFQn98QjqHIA
    ODIQMMAQsLC2ACAX8EfkIBIQNB6AAhAgN/IAJBeEYEfyAEQgGGIAN8p0F/agUgASACaikDACIFIAAgAmopAwAiBn1COoc
    gA4MgBIQhBCACQXhqIQIgBSAGhUJ/fEI6hyADgyEDDAELCwt3AQN/IwBBgAJrIgIkACACIAEQXiACQYABaiABEF4gAhAy
    IAJBgAFqIAIQDyAAIAJBgAFqEJcBIABBgAJqIgMgAkGAAWoQlwEgAEGABGoiBCACQYABahCXASADIAEQogEgBCACEKIBI
    ABBBTYCgAYgAkGAAmokAAt6AQF/IwBB4ANrIgEkACABQYABakHApcAAEF8gAUG4AWpB+KXAABBfIAEgAUGAAWogAUG4AW
    oQSSABQfACakGwpsAAEF8gAUGoA2pB6KbAABBfIAFB8AFqIAFB8AJqIAFBqANqEEkgACABIAFB8AFqED8gAUHgA2okAAt
    nACAAQQF2IAByIgBBAnYgAHIiAEEEdiAAciIAQQh2IAByIgBBEHYgAHIiACAAQQF2QdWq1aoFcWsiAEECdkGz5syZA3Eg
    AEGz5syZA3FqIgBBBHYgAGpBj568+ABxQYGChAhsQRh2C2cBAn8jAEGAAWsiASQAIAEgABCFASABQUBrQTgQchogAUEBN
    gJ4IAEgAEFAayICEHggARBBIAFBQGsgARClASABQUBrIAIQeCACIAEQpQEgAiAAEHggACABQUBrEKUBIAFBgAFqJAALaA
    IBfwJ+IAFBP3GtIQNBOiABa0E/ca0hBEEAIQEDQCABQTBGBEAgACAAKQMwIAOHNwMwBSAAIAFqIgIgAkEIaikDACAEhkL
    //////////wODIAIpAwAgA4eENwMAIAFBCGohAQwBCwsLbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYC
    ACADQSxqQQI2AgAgA0ICNwIMIANBlKjAADYCCCADQQI2AiQgAyADQSBqNgIYIAMgAzYCKCADIANBBGo2AiAgA0EIaiACE
    HAAC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakECNgIAIANCAjcCDCADQbCqwAA2AgggA0
    ECNgIkIAMgA0EgajYCGCADIANBBGo2AiggAyADNgIgIANBCGogAhBwAAtlAQJ/IAAgACgCACICQQhqIgM2AgAgACACQQN
    2QTxxakEoaiICIAFB/wFxIAIoAgBBCHRyNgIAAkACQCADRQRAIABBADYCACAAIAAoAgRBAWo2AgQMAQsgA0H/A3ENAQsg
    ABARCwtnAQF/IwBBgAJrIgMkACAAECogACABEJABIABBgAFqIgEgAhCQASAAQYACahCwASAAEKgBIAMgABAmIANBgAFqI
    AEQXiADQYABahAyIANBgAFqIAMQe0UEQCAAEJgBCyADQYACaiQAC18BAn8jAEGAAWsiASQAIAAQqAEgASAAEIUBIAFBQG
    sgAEFAayICEIUBIAEQAyABQUBrEAMgASABQUBrEHggAUEAEDQgACABEEggARBBIAEQRCACIAEQSCABQYABaiQAC10BAn8
    jAEFAaiIBJAAgAUEIakGgp8AAEF8gAUEIaiAAKAI4QX9qEDkiAhAtIAAgAUEIahBjIABBASACQQFqQR9xdCICNgI4IAJB
    gICAEE4EQCAAEBILIAFBQGskAAtfAgF/AX4jAEHwAGsiASQAIAFBoKfAABBfIAApAwAhAiABQThqIAAQXyAAQQEQOyABQ
    ThqIAEQYSABQThqEEQgAUE4akEBEDsgACABQThqIAJCAoGnEE8gAUHwAGokAAt7AQJ/IABBKGohAgNAIAFBgAJGBEAgAE
    LnzKfQ1tDrs7t/NwIIIABCADcCACAAQSBqQquzj/yRo7Pw2wA3AgAgAEEYakL/pLmIxZHagpt/NwIAIABBEGpC8ua746O
    n/aelfzcCAAUgASACakEANgIAIAFBBGohAQwBCwsLaQICfwF+IAAgACkDACIDQv//////////A4M3AwBBCCEBA0AgA0I6
    hyEDIAFBMEYEQCAAIAApAzAgA3w3AzAFIAAgAWoiAiACKQMAIAN8IgNC//////////8DgzcDACABQQhqIQEMAQsLC2oCA
    n8BfiAAIAApAwAiA0L//////////wODNwMAQQghAQNAIANCOochAyABQegARgRAIAAgACkDaCADfDcDaAUgACABaiICIA
    IpAwAgA3wiA0L//////////wODNwMAIAFBCGohAQwBCwsLWQEBfyMAQYADayIEJAAgBCADEF4gBBBAIARBgAFqIAEQXiA
    EQYACaiACEF4gBEGAAWogBBAPIARBgAJqIAQQDyAAIARBgAFqIARBgAJqEJEBIARBgANqJAALWQECfyMAQUBqIgEkAAJA
    IAAQhAENACABQQEQigEgAEGAAWoiAiABEFkNACACQQAQNCAAIAIQSCAAEBIgAEFAayIAIAIQSCAAEBIgAiABEKUBCyABQ
    UBrJAALVwEBfyMAQbABayICJAAgATQCOCAANAI4fkKAgIAQWQRAIAAQEgsgAkEIaiAAIAEQCCACQfgAaiACQQhqEAUgAC
    ACQfgAahBrIABBAjYCOCACQbABaiQAC08BAn8jAEFAaiIDJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgA
    gAyABEIsBIAAgAxClASADIAIQiwEgAxClASADQUBrJAALWQECfyMAQYABayIBJAACQCAAEIgBDQAgARBQIABBgAJqIgIg
    ARB7DQAgAhBAIAAgAhAPIAAQqwEgAEGAAWoiACACEA8gABCrASACIAEQkAELIAFBgAFqJAALSwEBfyMAQUBqIgEkACAAQ
    TgQciIAQQE2AjggAUEBEIoBIABBQGsgAUHAABBnGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAUFAayQAC0sBAn8jAEHwAG
    siASQAIAAQd0UEQCABQaCnwAAQXyABQThqIAAQgwEgASABQThqEGIgARBEIAFBOGogARA1IQILIAFB8ABqJAAgAgtPAQF
    /IwBBgAFrIgIkACAAIAEQhQEgABADIAJByABqQdikwAAQXyACQQhqIAJByABqEIsBIAAgARBIIAAgAkEIahB4IAAQEiAC
    QYABaiQAC0kBAn8DQCABQThGRQRAIAAgAWoiAiACKQMAQgGGNwMAIAFBCGohAQwBCwsgACAAKAI4QQF0IgE2AjggAUGAg
    IAQTgRAIAAQEgsLQgIBfwJ+QQAgAmusIQQDQCADQThHBEAgACADaiICIAIpAwAiBSABIANqKQMAhSAEgyAFhTcDACADQQ
    hqIQMMAQsLC0YBAn8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgAgAUEBEIoBIAAgARClARC
    yASABQUBrJAALTgEBfyMAQYAEayIBJAAgABAvIAEQLyABQYACahAvIABBgAJqIAFBgAIQZxogAEGABGogAUGAAmpBgAIQ
    ZxogAEEANgKABiABQYAEaiQAC0sBAX8jAEFAaiICJAACQCAAKAI4IAFsQYCAgBBOBEAgAiABEIoBIAAgAhBIDAELIAAgA
    RAoGiAAIAAoAjggAWw2AjgLIAJBQGskAAtKAAJ/IAFBgIDEAEcEQEEBIAAoAhggASAAQRxqKAIAKAIQEQMADQEaCyACRQ
    RAQQAPCyAAKAIYIAJBACAAQRxqKAIAKAIMEQUACwtCAQF/IwBBQGoiAiQAIAJBCGpBgIDAABBfIAEgAkEIahBrIAEQRCA
    AIAEQayAAQQMQKBogABBEIAAQKSACQUBrJAALSQECfyMAQcABayIBJAAgASAAEF4gAUGAAWogABCFASAAIABBQGsiAhCl
    ASAAEEEgAiABQYABahClASAAIAEQlQEgAUHAAWokAAtIAQF/IwBB4AFrIgEkACABQeihwAAQXyABQThqIAAgARAIIAFBq
    AFqIAFBOGoQBSAAIAFBqAFqEGsgAEECNgI4IAFB4AFqJAALPgEBfyABQTpuIQIgAUGVA00EQCAAIAJBA3RqKQMAQgEgAU
    H//wNxQTpwrYaDQgBVDwsgAkEHQdSdwAAQPAALQAIBfwF+IwBBgAFrIgEkACABQQhqIAAQhQEgAUEIahASIAFByABqIAF
    BCGoQgwEgASkDSCABQYABaiQAQgKBpws8AQF/IwBBgAFrIgIkACACIAAQhQEgAkFAayABEIUBIAIQEiACQUBrEBIgAiAC
    QUBrEDUgAkGAAWokAEULPAIBfwF+A38gAUE4RgR/IAJCf3xCgICAgICAgIAEg0I6iKcFIAAgAWopAwAgAoQhAiABQQhqI
    QEMAQsLC0cBAX8jAEEgayIDJAAgA0EUakEANgIAIANB9KrAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2Ag
    AgAyACEHAACzkBAX8jAEFAaiICJAAgAiAAEIUBIAIQByABBEAgASACEKUBCyACEAMgAiAAEEggAhAsIAJBQGskAAs6AQF
    /IABBOBByIQADQCACQTBGRQRAIABBCBAtIAAgACkDACABIAJqMQAAfDcDACACQQFqIQIMAQsLCzQBAX8gAEE4EHIiAEEB
    NgI4IABBQGtBOBByIABB+ABqQQE2AgAgACABEKUBIAFBQGsQpQELMAEBfyAAQTgQciEAA0AgAkE4RwRAIAAgAmogASACa
    ikDADcDACACQQhqIQIMAQsLCz8BAX8jAEGAAmsiASQAIAAQUSABEG4gACABEJIBIABBgAJqEK0BIABBgARqEK0BIABBAT
    YCgAYgAUGAAmokAAswAQJ/A0AgAkE4RwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLMAECfwNAIAJ
    BOEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLCzABAn8DQCACQThHBEAgACACaiIDIAEgAmopAwAg
    AykDAH03AwAgAkEIaiECDAELCwsxAQJ/A0AgAkHwAEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLC
    zEBAn8DQCACQfAARwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLOQECfyMAQYABayIBJAAgASAAQY
    ABaiICEF4gAiAAEJABIAEQVSAAIAEQkAEgABCsASABQYABaiQACzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACABQQFqIQE
    gA0EBaiEDIAJBf2oiAg0ACwsgAAtIAQN/IwBBEGsiASQAIAAoAgwhAyAAKAIIIgJFBEBB9KrAAEErQaCrwAAQWwALIAEg
    AzYCCCABIAA2AgQgASACNgIAIAEQcQALMgEBfyAAQgE3AwBBCCEBA0AgAUE4RkUEQCAAIAFqQgA3AwAgAUEIaiEBDAELC
    yAAEFYLNwAgABBRIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahCSASAAIAEoAoAGNgKABgsoAQF/A0AgAk
    E4RwRAIAAgAmogASACaikDADcDACACQQhqIQIMAQsLCzMAIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahC
    SASAAIAEoAoAGNgKABgsoACAAIAEgAhB5IABBQGsgAUFAayACEHkgAEGAAWogAUGAAWogAhB5Cy4BAX8jAEGAAWsiASQA
    IAAQLyABEFAgACABEJABIABBgAFqEKkBIAFBgAFqJAALLQAgACABIAIQjwEgAEGAAWogAUGAAWogAhCPASAAQYACaiABQ
    YACaiACEI8BCzQBAX8jAEEQayICJAAgAiABNgIMIAIgADYCCCACQaSowAA2AgQgAkH0qsAANgIAIAIQaAALPgEBfyMAQR
    BrIgEkACABQQhqIABBCGooAgA2AgAgASAAKQIANwMAIAEoAgAiAEEUaigCABogACgCBBoQMwALKQEBfyABBEAgACECA0A
    gAkEAOgAAIAJBAWohAiABQX9qIgENAAsLIAALKwEBfyMAQcABayICJAAgAhBLIAIgARB/IAIQpgEgACACEAwgAkHAAWok
    AAsiAQF/A0AgAUE4RwRAIAAgAWpCADcDACABQQhqIQEMAQsLCycBAX8jAEFAaiICJAAgAkEIaiABEF0gACACQQhqEIsBI
    AJBQGskAAsrACAAEFEgACABEJIBIABBgAJqIAIQkgEgAEGABGogAxCSASAAQQU2AoAGCyMBAX8jAEFAaiIBJAAgASAAEI
    UBIAEQEiABEFogAUFAayQACykAIAAgARBhIAAgACgCOCABKAI4aiIBNgI4IAFBgICAEE4EQCAAEBILCyUAIAAgASACEE8
    gAEEAIAJrIAAoAjgiACABKAI4c3EgAHM2AjgLIwADQCACBEAgACABLQAAED4gAkF/aiECIAFBAWohAQwBCwsLIgACQCAA
    IAEQWUUNACAAQUBrIAFBQGsQWUUNAEEBDwtBAAskAAJAIABBfE0EQCAARQRAQQQhAAwCCyAAEAEiAA0BCwALIAALJwEBf
    yMAQYABayICJAAgAiABEF4gAhA6IAAgAhCVASACQYABaiQACycAIAAgARCQASAAQYABaiABQYABahCQASAAQYACaiABQY
    ACahCQAQslACAAIAEQpQEgAEFAayABQUBrEKUBIABBgAFqIAFBgAFqEKUBCyUBAX8jAEFAaiICJAAgAiABEIUBIAIQQSA
    AIAIQeCACQUBrJAALKAEBfyMAQYACayICJAAgAiABEI4BIAIQKyAAIAIQlgEgAkGAAmokAAsjAEGEAiACSQRAIAJBhAIg
    AxA9AAsgACACNgIEIAAgATYCAAsiAQF/IwBB8ABrIgIkACACIAEQMCAAIAIQBSACQfAAaiQACxwAAkAgABB3RQ0AIABBg
    AFqEHdFDQBBAQ8LQQALHwAgAEE4EHIiAEEBNgI4IAAgARBrIAAgASgCODYCOAseAAJAIAAQhwFFDQAgAEGAAWoQhwFFDQ
    BBAQ8LQQALGwACQCAAEHdFDQAgAEFAaxB3RQ0AQQEPC0EACx4AAkAgABCHAUUNACAAQYACahCHAUUNAEEBDwtBAAsaAQF
    /IAAQWCIBIABBQGsQWCABcyAAEHdxcwsaACAAQTgQciIAQQE2AjggACABEJ0BIAAQVgsZACAAQTgQciIAQQE2AjggACAB
    EGsgABBWCxcAIAAQRCAAKAIAQX8gAUEfcXRBf3NxCxoAIAAgARBfIAAgAhAkIAAgAhBjIAAgAhAkCxwAIAAQLyAAIAEQk
    AEgAEGAAWogAUGAAWoQkAELGAAgACABIAIQeSAAQUBrIAFBQGsgAhB5CxYAIAAgARClASAAQUBrIAFBQGsQpQELGAAgAB
    AvIAAgARCQASAAQYABaiACEJABCxgAIAAgARCQASAAQYABaiABQYABahCQAQsZACAAEK4BIABBgAJqELYBIABBgARqEK4
    BCxcAIAAQsgEgAEFAaxBpIABBgAFqELIBCxQAIAAgARB4IABBQGsgAUFAaxB4CxgAIAAgARCVASAAQYABaiABQYABahCV
    AQsYACAAEKYBIABBgAFqIgAQpgEgACABEA8LGQAgABCpASAAQYABahCwASAAQYACahCpAQsZACAAEKwBIABBgAJqEKwBI
    ABBgARqEKwBCxkAIAAQqgEgAEGAAmoQqgEgAEGABGoQqgELFgAgABAvIAAgARCQASAAQYABahCpAQsWACAAQYABaiIAEK
    gBIAAQOiAAEKgBCxQAIAAQRCAAIAApAwAgAax8NwMACxQAIAAQRCAAIAApAwAgAax9NwMACxEAIAAgARBSIABBQGsgARB
    SCxEAIAAgARBIIABBQGsgARBICxQAIAAgARCQASAAQYABaiACEJABCxIAIAAgARAPIABBgAFqIAEQDwsUACAAIAEQoAEg
    AEGAAWogARCgAQsRACAAKAIEBEAgACgCABAJCwsSACAAIAEQayAAIAEoAjg2AjgLDwAgAEFAayIAEEEgABBECw0AIAAQT
    iAAQUBrEE4LDQAgABBEIABBQGsQRAsPACAAELIBIABBQGsQsgELEAAgABCrASAAQYABahCrAQsNACAAEBIgAEFAaxASCx
    AAIAAQqAEgAEGAAWoQqAELEAAgABCpASAAQYABahCpAQsPACAAQYABahA6IAAQrAELEAAgABCnASAAQYABahCnAQsOACA
    AEGkgAEFAaxCyAQsQACAAIAI2AgQgACABNgIACw0AIAAQdCAAQQE2AjgLDAAgABBBIAAgARB4CwwAIAAgARBrIAAQVgsN
    ACAAEDogACABEJUBCwsAIAAQOiAAEKwBCwwAQunQotvMouq7RgsDAAELAwABCwv+PZoCAEGCgMAACwcBAAAAAQI0AEG4g
    MAAC9sBuF8jku11BwFjT+D5WE+pA2dPnKtLeD0Akew9ffXy9AMD1g8fDSwgAK1vjPCZwa4A8DtNkAEAAADzStxtEor3AI
    uwH1tTsFYDgvLFYx+X7AAysL/NHtseAkehVLifHyMCQHo6ogw4sQGz4sMPAAAAAHNyYy9ibHMxMjM4MS9wYWlyLnJzqAA
    QABQAAAAHAQAACQAAAKgAEAAUAAAADAEAAA0AAACoABAAFAAAABEBAAANAAAAAAAAAAEAAAD///8Dv/+W/78AaQM7VYAd
    moCAAefMIPV1pkwBp+1zAEGogsAACyz+//7///8BAosAgILYBPYB4Y1oiW++kwLOdqvfPagdAMZpulHOdt8Dy1nGFwBB4
    ILAAAuRAZABEAATAAAA0AEAABgAAACQARAAEwAAANQBAAARAAAAkAEQABMAAADWAQAAHAAAAHNyYy9ibHMxMjM4MS9lY3
    AucnMAkAEQABMAAAAZBQAADQAAAJABEAATAAAAGwUAAAkAAACQARAAEwAAABwFAAARAAAAkAEQABMAAAAfBQAAHAAAAAA
    AAAABAAEAAAABAjQAQaCEwAALuSCQARAAEwAAAGcEAAARAAAAkAEQABMAAABsBAAADQAAAJABEAATAAAAbgQAABUAAACQ
    ARAAEwAAAHAEAAAgAAAAHUxYLQgo9ADXXz44aOPbAInJGoj9roEBomOjmrkPTgGY6rCCSW3JAoBOWs9QOu4AimlEAQAAA
    ADgKxeO6UjMAXSpOluMVsgAolXvNe/8FADngsIBPcnDA8EWIDvuPnUAusRiAAwgWgDRCCkuAQAAALgh6L1iEMUA3/4Vlz
    tIpQGLCDH8A9S9AbsR/Cc0UtIDHfAS2hvXowEqPc423S/bAshidB8AAAAAKdKiiy66yAHqR06TLeDGAiSMtsYkvPEDAo/
    w3iCL+AGd1zE97u2BA4ilRy+cg4kDSMIIbgAAAAB7+wUWP99nAjJ7Fwrjx90CaW+GFDsANgMrVFv+4Zl3A8x9+g1bVtIB
    Aju2nPiBcwIH2iEDAQAAAJ4MOb5nECQDX97JALfLQgIx+rexS69LAYydZXIx6AACyy7dIo8TXQHUDYML8enzAuH4sWkBA
    AAAF+OXhGqYcQFbpdOtpXylAPrkHV2MkmwBFovSVX2eswF1O8QNmb5jAc0s5B7x42kCH8/TgAAAAACOyPDjGFbLAOdrHT
    0yPvIBmzNTJw/vYgALmsY2bZ2sAuVtNVN+EdEAIQ4duvj2agBw54F7AQAAAITtOaEl8tcBt7JLQTBKlADaqLKGnI8hAiN
    AhjM+PJkAhhWxv1LmigOwyY1aShP5A1Nl7dYAAAAAgyllb8bBEwFzRs+5ckvDAQgK+Wh+CbkCTntu5kll9wGxPNu1Sqf3
    AwZIdMD/xFwDUDIMYwEAAADZlYis6UwVARTxnQfMG4oChYnB+oJZtgK7IfzsX0loAZnbmVSOEeQDLK2Q2RB9ZgCjJpfpA
    AAAAGFomx1kiLMB8WQcxDiXuAEzNQgzG58oA8zGl/w2qpUB5PXXElTlBwN0goHTbRvzA2ZxjncBAAAAsNyerJ2fFwD4p1
    yCSo8PA1jJJY7GHlAC46GVD2alzAEkA84bmgrRATESRAc7nl0C2wVA1QAAAAC7g8uz8e40ALrVMMa8qTwCg7SGHg3HMwK
    X1V8Qqr1sAecXfByoRyECrC5iwcvqUAI+7ZRyAQAAALdJRnNiFqwCq1uLuXy1MABhhSxO22y1A4nJfwFciyICPjBrhRWY
    2QEHRAIu0MygA7HyBRoBAAAACt3saNGEYwELQBne0pLTATFZwTGPlzMBfdvdQN9bugO0gvaAZqWzAo9b2xG1SnoCqxP8l
    QAAAABB1qF5Oux2AxHckO6qpJkAOFCDmPNn2gBA0K3ZhMV1AI1/4Myjx68Bz4Kkl+BTaQNqzw6hAAAAAF5azL2b2fcBxL
    R4RCdSbgH6gMUimN8cAltmoKIpbwgDY39umQHPdABs/SyMLCpZA6nCekoBAAAAOkrobkl0JQA7G3jD49TsAKfO6e0qBnM
    AuDglhk69ZgJXD1chZ1ngAxiDz0OGTVoAz6osdwAAAAClBGOfovktAHDEowjxkjQAQPeCiUvyzgMOKTS1cjqnAzVXOenG
    BgUD30NOVe6ZOQGOXzXnAAAAAB6iMjVbOZ0DVAdezQfqpgC9qW0wO4NOAK017oqBhGYBx9//faDnQwNXx5sCKkWKACAWj
    joBAAAA2CzGjZPoDQMEcT27D0m1AZcE/dYovIoCMlNFlcVa/AAkCFtU60B8A/urDrK/uGIBGlglNAAAAAAZPrhcujnCAD
    +3PyWfJfQAas3qrBEL4ACZ8kczxmm9AUGJbx+Z8r8BivlNoJfI6AHlL5ayAAAAAP87K8huJ8gBeboJLBshqgI9cfWLxIg
    lAJsEMADCMygD6EFwNjblmAJEHC3SEGfVAt6lYSUBAAAAHBvSQPr5PAEmfg+Nb6A1AlUrxor8F4YAVnLqIm2NLgHv1QFv
    +tNLA4u5LIZrxj8DSNWojAAAAAAEtshpvla0AMEdB7C/n0ABZisb8FqpTwG3XuVoWRI+Ah0Yy7Uu30IDzkKpk/PAQwLp5
    GteAQAAAEsidVRxHmsC4e1rXtkmQQC6Rs6nltP1AKxmo5WhXwcCPWde/KPESAN9VqhAxDORA0WWElwAAAAAMwGY2/XT2Q
    IQmcoIRyvkA2zMWQbE0zICmU8AVjA1IAA7e3XcFeN7AisAv9ymskcDSjlaJAAAAAD4HpcL8ARMAYN8hGRkcBQCbPAzRnu
    ADgGcADvCmtCoALGnekQ/9QQAWEJVdObkBgDByoKxAAAAAI5NB9CkyAcCs4E10QZ9cwKdJEP2EfnnA6+5GAnDq+ICWTVS
    zO3S/gNQMEaut73NAwipRosBAAAAMsER0BpxEwA6v+6PM5fOAxsDYZ44FuQDYET/JL2yLQPLL82T+0MdA+NCf4NvNN8Ae
    eQTlwEAAAAwHHPK66qvA8qbrlN3FdwDs7lDTR7t5wFhGvjba0WeAgwqxCNKoa0Dea+OSG2vYQChp7vhAAAAAIel23tXDj
    cA2OiB4XGAlAGd5qsM8qHmAi16sAl3nlkAvTqPu6FNHgKIJyP6EpplA4sBxJ8AAAAAKftwGKNMXgFoTfq3P1SRAS9kQsg
    mbNoADvR/YPeO/wIFChd0xqYsAa9Jpvcbrs4AU418mAAAAADy1ulfhfhhAbJX0IORsB4CenTzNNbEEwDFSC0Thq8oA7hb
    5zxreScA9F2yLO8G6wO8ubBKAAAAAPClMzaxOrIBphygVrLJ2AMD4kRVrdPDAUHZ9d62vlID0Kd0oKbwuAFHeISI2tIYA
    KT8A2YBAAAA2/7o8uzatgEQKhBkAjf+Ae7CrVETIv0DDObhQjmP7wM2VRnEKRWiAvjTK9fEP/gD3j/AjAAAAADL9OWwd1
    w1Ail7h7GnrhYA5J3PUTLAPgKSJ3DkrTvkAqcq1FdndNgCRh0mXggHJgJuN4YfAAAAAPbhLcdA4t8A7kgBLIqFVAMmfdo
    AFLnkAxINi3OMYlkD4lIllEk7agAy4Si9mZulArqGxwwAAAAAlsZBLlrnlwD4L+qLZcRZAWxN03q2PjQCQT704DyVsAHp
    IxKDRvt2A7UNRHUEljsBEGqZNAEAAAAzuweXcUWYAq/w6M6mux4D0Dw9VFbJ9gJKrUiloSI5AhOtEfrcgEkBwkdnCbiT6
    AKBfNmQAAAAAI9LYx06RxUAEeAlTTxcvQDKBaLKVmPNAzvJTOHOiZcBD8RxwRl4DQJXCcmaD3C3AYEd+uAAAAAA9wbtJh
    Pc+gE0IDPFYe9FASDkgCSUJ98A0i0Hn6ScUwJbVr/yds1TAUP3otjOk8sCDkBgJgAAAADMRTNXOLGZAkewQu742AEAMGm
    42QCa7wJz9ZkIfCtmA0YzVJYUX7QAUUzY8PifHQMUlWutAAAAAJIQVuIptYQCpfqu3xsmWgJvURN56oyoAT4wSgs5vysC
    /5R/RwzFSAIHS2H9z0AHAnS2y6wAAAAAqGqPupy0+AAAgcHg06dwARqHXGpjbrMBZDmkmIbt5gDQbZwdkdIaACgEPFJvA
    akDniUvTQAAAABVP5G4i/RuAI3XbEr1qBcCc7xPfernkgEhTO0e9oSPAfcWMpCEStkDZYGgOoebwgHaXKVnAQAAAEpdU1
    WdPSMD2iCS5O69+AMshbQ5v8RQAxWvgmS9GpMDDPv5xEzX0QNT+YbGSBjbANOObIYBAAAA2S6BFVpB7gAYuXcAAmw9AJI
    rE1djIP0AzfpfP33oewE3pOVu/6a7An4374D6qY8Di/A+agEAAABcd2oSmRMaAU/ux2JpAKcCXx0FoADEWwJNd73jMzTq
    A/3sXkuC6awAzaHu8Mt2pgIIfABmAQAAAKy3+ap/R8YCgDhz6ndu4wCfRKb18LaHAbMXB2JDVRkDUgG3gjF4rAK6mexny
    7ZhAJdSno0AAAAAHQClESMUOQJ2e7v0A3fFAiBqkeyd/KABu1DB7qY9fAKc0cbcjSL4AkQyAyz50BcBlQcOvgAAAAAWVF
    9EmG3SAGrrpaCwPNkAJxf0anKeSAL2SDhM83ZvA8UV0dG07YkD70iDfOWUYwKHKH1rAQAAAPJnvz21OCUCR+Jbvo01XwF
    nyi7NedJdAtYwxPy5RlUBhcR4V7GObgGfq+rbiTaQAQYz31gAAAAAPaBJLiwQ9gJMjafU2IEJAYr3AT5FbzUAhJJyVhPH
    3ANPyIW4SMNDAFsvg4YHSOAAwnUtlgEAAADBYzawU5JHAUAbCIO9I9oAf6Dncr61MgIMu5svYOKVA20aYOnq0PoAUASGl
    CwmpwLDxBJhAQAAAHNyYy9ibHMxMjM4MS9iaWcucnMAoA4QABMAAADMAQAALQAAAKAOEAATAAAAzAEAADUAAACgDhAAEw
    AAABkCAAANAAAAoA4QABMAAAA4AwAAGAAAAKAOEAATAAAAOAMAACEAAACgDhAAEwAAAEIDAAAhAAAAoA4QABMAAABbAwA
    AFwAAAKAOEAATAAAAZAMAABcAAACgDhAAEwAAAHIDAAAwAAAAoA4QABMAAAB7AwAAMAAAAKAOEAATAAAApwMAABgAAACg
    DhAAEwAAALUDAAAYAAAAmC+KQpFEN3HP+8C1pdu16VvCVjnxEfFZpII/ktVeHKuYqgfYAVuDEr6FMSTDfQxVdF2+cv6x3
    oCnBtybdPGbwcFpm+SGR77vxp3BD8yhDCRvLOktqoR0StypsFzaiPl2UlE+mG3GMajIJwOwx39Zv/ML4MZHkafVUWPKBm
    cpKRSFCrcnOCEbLvxtLE0TDThTVHMKZbsKanYuycKBhSxykqHov6JLZhqocItLwqNRbMcZ6JLRJAaZ1oU1DvRwoGoQFsG
    kGQhsNx5Md0gntbywNLMMHDlKqthOT8qcW/NvLmjugo90b2OleBR4yIQIAseM+v++kOtsUKT3o/m+8nhxxkJMU19TSUdf
    QkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF8A0BAQABMAAAA/AAAALgAAANAQEAATAAAAPQAAABUAAADQE
    BAAEwAAAD0AAAANAAAAc3JjL2JsczEyMzgxL2Jscy5ycwAAAAAArve+1aE5BgLok91iZEwkAdIsbk61CS0C2+VwMbbEEQ
    GZYzb76G2KA7ycH+3PFk8AK2qmngEAAABhdHRlbXB0IHRvIGRpdmlkZSBieSB6ZXJvAAAAbxEQABIAAAB8AQAAFAAAAAA
    AAABhdHRlbXB0IHRvIGRpdmlkZSB3aXRoIG92ZXJmbG93c3JjL2JsczEyMzgxL2ZwLnJzAAAAbxEQABIAAAASAgAADQAA
    AG8REAASAAAAHgIAACYAAABvERAAEgAAAB4CAAAjAAAAbxEQABIAAAAkAgAAFwAAAG8REAASAAAAJAIAABQAAAAAAAAAq
    qr//////gHu//9UrP//AupBYg9rDyoBw5z9ShTOEwJLd2TXrEtDAu3pxpKm+V8Cox4RoAEAAABAEhAAFAAAABUBAAATAA
    AAQBIQABQAAAAeAQAAGAAAAEASEAAUAAAAJAEAABwAAABzcmMvYmxzMTIzODEvZWNwMi5ycwAAAAAEAEGQpcAAC7wGQBI
    QABQAAADmAgAACQAAAEASEAAUAAAA7gIAAA0AAABAEhAAFAAAAP4CAAAhAAAAuL0hwchWgAD1+24BqskAA7pwFz2uR7YA
    RNEK7ADpUwN65MZREMUtA0kBgkmkwiMALyuqJAAAAAB+KwRdBX2sAflVF+WERDwDNJME9ce9GwJp12rYgmRCA9BrWWVPJ
    4gA6DRrH9hnnAAFtgI+AQAAAAEouAiGVJMBeKIo6w5zsgIjyRINFpWmAQq1nU73MqoCm/2tGjUu2gJxczJjhFufAHdSXc
    4AAAAAvnlf8F8HqQJqaAc710nDAfOzmulytSoB0pm8jp0W+gEoPsuZi8IrAKw0qwwzzakDAkpsYAAAAACrqv/////+Ae7
    //1Ss//8C6kFiD2sPKgHDnP1KFM4TAkt3ZNesS0MC7enGkqb5XwKjHhGgAQAAAAgUEAALAAAAjwEAAA8AAAAIFBAACwAA
    AKcBAAATAAAACBQQAAsAAACqAQAADQAAAHNyYy9obWFjLnJzADQUEAAgAAAAVBQQABIAAAADAAAAAAAAAAEAAAAEAAAAa
    W5kZXggb3V0IG9mIGJvdW5kczogdGhlIGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAwMDAxMDIwMzA0MDUwNjA3MDgwOT
    EwMTExMjEzMTQxNTE2MTcxODE5MjAyMTIyMjMyNDI1MjYyNzI4MjkzMDMxMzIzMzM0MzUzNjM3MzgzOTQwNDE0MjQzNDQ
    0NTQ2NDc0ODQ5NTA1MTUyNTM1NDU1NTY1NzU4NTk2MDYxNjI2MzY0NjU2NjY3Njg2OTcwNzE3MjczNzQ3NTc2Nzc3ODc5
    ODA4MTgyODM4NDg1ODY4Nzg4ODk5MDkxOTI5Mzk0OTU5Njk3OTg5OQAAQBUQABAAAABQFRAAIgAAAHJhbmdlIGVuZCBpb
    mRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAABjYWxsZWQgYE9wdGlvbjo6dW53cmFwKClgIG9uIG
    EgYE5vbmVgIHZhbHVlALAVEAAcAAAA7gEAAB4AAABsaWJyYXJ5L3N0ZC9zcmMvcGFuaWNraW5nLnJzAEGIrMAACwEBAEH
    IrMAACwEBAEGIrcAACwEBAEHIrcAACwEBAEGIrsAACwEBAEHIrsAACwEBAEGIr8AACwEBAEHIr8AACwEBAEGIsMAACwEB
    AEHIsMAACwEBAEGIscAACwEBAEHIscAACwEBAEGIssAACwEBAEHIssAACwEBAEGIs8AACwEBAEHIs8AACwEBAEGItMAAC
    wEBAEHItMAACwEBAEGItcAACwEBAEHItcAACwEBAEGItsAACwEBAEHItsAACwEBAEGIt8AACwEBAEHIt8AACwEBAEGIuM
    AACwEBAEHIuMAACwEBAEGIucAACwEBAEHIucAACwEBAEGIusAACwEBAEHIusAACwEBAEGIu8AACwEBAEHIu8AACwEBAEG
    IvMAACwEBAEHIvMAACwEBAEGIvcAACwEBAEHIvcAACwEBAEGIvsAACwEBAEHIvsAACwEBAEGIv8AACwEBAEHIv8AACwEB
    AEGIwMAACwEBAEHIwMAACwEBAEGIwcAACwEBAEHIwcAACwEBAEGIwsAACwEBAEHIwsAACwEBAEGIw8AACwEBAEHIw8AAC
    wEBAEGIxMAACwEBAEHIxMAACwEBAEGIxcAACwEBAEHIxcAACwEBAEGIxsAACwEBAEHIxsAACwEBAEGIx8AACwEBAEHIx8
    AACwEBAEGIyMAACwEBAEHIyMAACwEBAEGIycAACwEBAEHIycAACwEBAEGIysAACwEBAEHIysAACwEBAEGIy8AACwEBAEH
    Iy8AACwEBAEGIzMAACwEBAEHIzMAACwEBAEGIzcAACwEBAEHIzcAACwEBAEGIzsAACwEBAEHIzsAACwEBAEGIz8AACwEB
    AEHIz8AACwEBAEGI0MAACwEBAEHI0MAACwEBAEGI0cAACwEBAEHI0cAACwEBAEGI0sAACwEBAEHI0sAACwEBAEGI08AAC
    wEBAEHI08AACwEBAEGI1MAACwEBAEHI1MAACwEBAEGI1cAACwEBAEHI1cAACwEBAEGI1sAACwEBAEHI1sAACwEBAEGI18
    AACwEBAEHI18AACwEBAEGI2MAACwEBAEHI2MAACwEBAEGI2cAACwEBAEHI2cAACwEBAEGI2sAACwEBAEHI2sAACwEBAEG
    I28AACwEBAEHI28AACwEBAEGI3MAACwEBAEHI3MAACwEBAEGI3cAACwEBAEHI3cAACwEBAEGI3sAACwEBAEHI3sAACwEB
    AEGI38AACwEBAEHI38AACwEBAEGI4MAACwEBAEHI4MAACwEBAEGI4cAACwEBAEHI4cAACwEBAEGI4sAACwEBAEHI4sAAC
    wEBAEGI48AACwEBAEHI48AACwEBAEGI5MAACwEBAEHI5MAACwEBAEGI5cAACwEBAEHI5cAACwEBAEGI5sAACwEBAEHI5s
    AACwEBAEGI58AACwEBAEHI58AACwEBAEGI6MAACwEBAEHI6MAACwEBAEGI6cAACwEBAEHI6cAACwEBAEGI6sAACwEBAEH
    I6sAACwEBAEGI68AACwEBAEHI68AACwEBAEGI7MAACwEBAEHI7MAACwEBAEGI7cAACwEBAEHI7cAACwEBAEGI7sAACwEB
    AEHI7sAACwEBAEGI78AACwEBAEHI78AACwEBAEGI8MAACwEBAEHI8MAACwEBAEGI8cAACwEBAEHI8cAACwEBAEGI8sAAC
    wEBAEHI8sAACwEBAEGI88AACwEBAEHI88AACwEBAEGI9MAACwEBAEHI9MAACwEBAEGI9cAACwEBAEHI9cAACwEBAEGI9s
    AACwEBAEHI9sAACwEBAEGI98AACwEBAEHI98AACwEBAEGI+MAACwEBAEHI+MAACwEBAEGI+cAACwEBAEHI+cAACwEBAEG
    I+sAACwEBAEHI+sAACwEBAEGI+8AACwEBAEHI+8AACwEBAEGI/MAACwEBAEHI/MAACwEBAEGI/cAACwEBAEHI/cAACwEB
    AEGI/sAACwEBAEHI/sAACwEBAEGI/8AACwEBAEHI/8AACwEBAEGIgMEACwEBAEHIgMEACwEBAEGIgcEACwEBAEHIgcEAC
    wEBAEGIgsEACwEBAEHIgsEACwEBAEGIg8EACwEBAEHIg8EACwEBAEGIhMEACwEBAEHIhMEACwEBAEGIhcEACwEBAEHIhc
    EACwEBAEGIhsEACwEBAEHIhsEACwEBAEGIh8EACwEBAEHIh8EACwEBAEGIiMEACwEBAEHIiMEACwEBAEGIicEACwEBAEH
    IicEACwEBAEGIisEACwEBAEHIisEACwEBAEGIi8EACwEBAEHIi8EACwEBAEGIjMEACwEBAEHIjMEACwEBAEGIjcEACwEB
    AEHIjcEACwEBAEGIjsEACwEBAEHIjsEACwEBAEGIj8EACwEBAEHIj8EACwEBAEGIkMEACwEBAEHIkMEACwEBAEGIkcEAC
    wEBAEHIkcEACwEBAEGIksEACwEBAEHIksEACwEBAEGIk8EACwEBAEHIk8EACwEBAEGIlMEACwEBAEHIlMEACwEBAEGIlc
    EACwEBAEHIlcEACwEBAEGIlsEACwEBAEHIlsEACwEBAEGIl8EACwEBAEHIl8EACwEBAEGImMEACwEBAEHImMEACwEBAEG
    ImcEACwEBAEHImcEACwEBAEGImsEACwEBAEHImsEACwEBAEGIm8EACwEBAEHIm8EACwEBAEGInMEACwEBAEHInMEACwEB
    AEGIncEACwEBAEHIncEACwEBAEGInsEACwEBAEHInsEACwEBAEGIn8EACwEBAEHIn8EACwEBAEGIoMEACwEBAEHIoMEAC
    wEBAEGIocEACwEBAEHIocEACwEBAEGIosEACwEBAEHIosEACwEBAEGIo8EACwEBAEHIo8EACwEBAEGIpMEACwEBAEHIpM
    EACwEBAEGIpcEACwEBAEHIpcEACwEBAEGIpsEACwEBAEHIpsEACwEBAEGIp8EACwEBAEHIp8EACwEBAEGIqMEACwEBAEH
    IqMEACwEBAEGIqcEACwEBAEHIqcEACwEBAEGIqsEACwEBAEHIqsEACwEBAEGIq8EACwEBAEHIq8EACwEBAEGIrMEACwEB
    AEHIrMEACwEBAEGIrcEACwEBAEHIrcEACwEBAEGIrsEACwEBAEHIrsEACwEBAEGIr8EACwEBAEHIr8EACwEBAEGIsMEAC
    wEBAEHIsMEACwEBAEGIscEACwEBAEHIscEACwEBAEGIssEACwEBAEHIssEACwEBAEGIs8EACwEBAEHIs8EACwEBAEGItM
    EACwEBAEHItMEACwEBAEGItcEACwEBAEHItcEACwEBAHsJcHJvZHVjZXJzAghsYW5ndWFnZQEEUnVzdAAMcHJvY2Vzc2V
    kLWJ5AwVydXN0Yx0xLjQ5LjAgKGUxODg0YThlMyAyMDIwLTEyLTI5KQZ3YWxydXMGMC4xOC4wDHdhc20tYmluZGdlbhIw
    LjIuNzAgKGI2MzU1YzI3MCk=
`.replace(/[^0-9a-zA-Z/+]/g, ""), wasmBytes = decode(wasmBytesBase64);
function bls_init() {
  return wasm.bls_init();
}
let cachegetUint8Memory0 = null;
function getUint8Memory0() {
  return (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) && (cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer)), cachegetUint8Memory0;
}
function passArray8ToWasm0(Z, ee) {
  const ne = ee(Z.length * 1);
  return getUint8Memory0().set(Z, ne / 1), [ne, Z.length];
}
function bls_verify(Z, ee, ne) {
  const [ie, oe] = passArray8ToWasm0(Z, wasm.__wbindgen_malloc), [ce, he] = passArray8ToWasm0(ee, wasm.__wbindgen_malloc), [fe, xe] = passArray8ToWasm0(ne, wasm.__wbindgen_malloc);
  return wasm.bls_verify(ie, oe, ce, he, fe, xe);
}
async function load(Z, ee) {
  if (typeof Response == "function" && Z instanceof Response) {
    const ne = await Z.arrayBuffer();
    return await WebAssembly.instantiate(ne, ee);
  } else {
    const ne = await WebAssembly.instantiate(Z, ee);
    return ne instanceof WebAssembly.Instance ? { instance: ne, module: Z } : ne;
  }
}
async function init$d() {
  const Z = {}, { instance: ee, module: ne } = await load(wasmBytes, Z);
  return wasm = ee.exports, init$d.__wbindgen_wasm_module = ne, wasm;
}
let verify;
async function blsVerify(Z, ee, ne) {
  if (!verify) {
    if (await init$d(), bls_init() !== 0)
      throw new Error("Cannot initialize BLS");
    verify = (ie, oe, ce) => bls_verify(oe, ce, ie) === 0;
  }
  return verify(Z, ee, ne);
}
class UnverifiedCertificateError extends AgentError {
  constructor() {
    super("Cannot lookup unverified certificate. Call 'verify()' first.");
  }
}
function hashTreeToString(Z) {
  const ee = (ie) => ie.split(`
`).map((oe) => "  " + oe).join(`
`);
  function ne(ie) {
    const oe = new TextDecoder(void 0, { fatal: !0 });
    try {
      return JSON.stringify(oe.decode(ie));
    } catch {
      return `data(...${ie.byteLength} bytes)`;
    }
  }
  switch (Z[0]) {
    case 0:
      return "()";
    case 1: {
      const ie = hashTreeToString(Z[1]), oe = hashTreeToString(Z[2]);
      return `sub(
 left:
${ee(ie)}
---
 right:
${ee(oe)}
)`;
    }
    case 2: {
      const ie = ne(Z[1]), oe = hashTreeToString(Z[2]);
      return `label(
 label:
${ee(ie)}
 sub:
${ee(oe)}
)`;
    }
    case 3:
      return `leaf(...${Z[1].byteLength} bytes)`;
    case 4:
      return `pruned(${blobToHex(blobFromUint8Array(new Uint8Array(Z[1])))}`;
    default:
      return `unknown(${JSON.stringify(Z[0])})`;
  }
}
function isBufferEqual(Z, ee) {
  if (Z.length !== ee.length)
    return !1;
  for (let ne = 0; ne < Z.length; ne++)
    if (Z[ne] !== ee[ne])
      return !1;
  return !0;
}
class Certificate {
  constructor(ee, ne = getDefaultAgent()) {
    this._agent = ne, this.verified = !1, this._rootKey = null, this.cert = decode$1(ee.certificate);
  }
  lookupEx(ee) {
    return this.checkState(), lookupPathEx(ee, this.cert.tree);
  }
  lookup(ee) {
    return this.checkState(), lookup_path(ee, this.cert.tree);
  }
  async verify() {
    const ee = await reconstruct(this.cert.tree), ne = await this._checkDelegation(this.cert.delegation), ie = this.cert.signature, oe = extractDER(ne), ce = buffer.Buffer.concat([domain_sep("ic-state-root"), ee]), he = await blsVerify(oe, ie, ce);
    return this.verified = he, he;
  }
  checkState() {
    if (!this.verified)
      throw new UnverifiedCertificateError();
  }
  async _checkDelegation(ee) {
    if (!ee) {
      if (!this._rootKey) {
        if (this._agent.rootKey)
          return this._rootKey = this._agent.rootKey, this._rootKey;
        throw new Error("Agent does not have a rootKey. Do you need to call 'fetchRootKey'?");
      }
      return this._rootKey;
    }
    const ne = new Certificate(ee, this._agent);
    if (!await ne.verify())
      throw new Error("fail to verify delegation certificate");
    const ie = ne.lookupEx(["subnet", ee.subnet_id, "public_key"]);
    if (!ie)
      throw new Error(`Could not find subnet key for subnet 0x${ee.subnet_id.toString("hex")}`);
    return buffer.Buffer.from(ie);
  }
}
const DER_PREFIX = buffer.Buffer.from("308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100", "hex"), KEY_LENGTH = 96;
function extractDER(Z) {
  const ee = DER_PREFIX.length + KEY_LENGTH;
  if (Z.length !== ee)
    throw new TypeError(`BLS DER-encoded public key must be ${ee} bytes long`);
  const ne = Z.slice(0, DER_PREFIX.length);
  if (!isBufferEqual(ne, DER_PREFIX))
    throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${ne}`);
  return Z.slice(DER_PREFIX.length);
}
async function reconstruct(Z) {
  switch (Z[0]) {
    case 0:
      return hash(domain_sep("ic-hashtree-empty"));
    case 4:
      return buffer.Buffer.from(Z[1]);
    case 3:
      return hash(buffer.Buffer.concat([
        domain_sep("ic-hashtree-leaf"),
        buffer.Buffer.from(Z[1])
      ]));
    case 2:
      return hash(buffer.Buffer.concat([
        domain_sep("ic-hashtree-labeled"),
        buffer.Buffer.from(Z[1]),
        buffer.Buffer.from(await reconstruct(Z[2]))
      ]));
    case 1:
      return hash(buffer.Buffer.concat([
        domain_sep("ic-hashtree-fork"),
        buffer.Buffer.from(await reconstruct(Z[1])),
        buffer.Buffer.from(await reconstruct(Z[2]))
      ]));
    default:
      throw new Error("unreachable");
  }
}
function domain_sep(Z) {
  const ee = buffer.Buffer.alloc(1);
  return ee.writeUInt8(Z.length, 0), buffer.Buffer.concat([ee, buffer.Buffer.from(Z)]);
}
function lookupPathEx(Z, ee) {
  const ne = lookup_path(Z.map((ie) => typeof ie == "string" ? blobFromText(ie) : blobFromUint8Array(new Uint8Array(ie))), ee);
  return ne && blobToUint8Array(ne);
}
function lookup_path(Z, ee) {
  if (Z.length === 0)
    switch (ee[0]) {
      case 3:
        return buffer.Buffer.from(ee[1]);
      default:
        return;
    }
  const ne = find_label(Z[0], flatten_forks(ee));
  if (ne)
    return lookup_path(Z.slice(1), ne);
}
function flatten_forks(Z) {
  switch (Z[0]) {
    case 0:
      return [];
    case 1:
      return flatten_forks(Z[1]).concat(flatten_forks(Z[2]));
    default:
      return [Z];
  }
}
function find_label(Z, ee) {
  if (ee.length !== 0) {
    for (const ne of ee)
      if (ne[0] === 2) {
        const ie = buffer.Buffer.from(ne[1]);
        if (isBufferEqual(Z, ie))
          return ne[2];
      }
  }
}
const FIVE_MINUTES_IN_MSEC = 5 * 60 * 1e3;
function defaultStrategy() {
  return chain(conditionalDelay(once$1(), 1e3), backoff(1e3, 1.2), timeout(FIVE_MINUTES_IN_MSEC));
}
function once$1() {
  let Z = !0;
  return async () => Z ? (Z = !1, !0) : !1;
}
function conditionalDelay(Z, ee) {
  return async (ne, ie, oe) => {
    if (await Z(ne, ie, oe))
      return new Promise((ce) => setTimeout(ce, ee));
  };
}
function maxAttempts(Z) {
  let ee = Z;
  return async (ne, ie, oe) => {
    if (--ee <= 0)
      throw new Error(`Failed to retrieve a reply for request after ${Z} attempts:
  Request ID: ${toHex(ie)}
  Request status: ${oe}
`);
  };
}
function throttle(Z) {
  return () => new Promise((ee) => setTimeout(ee, Z));
}
function timeout(Z) {
  const ee = Date.now() + Z;
  return async (ne, ie, oe) => {
    if (Date.now() > ee)
      throw new Error(`Request timed out after ${Z} msec:
  Request ID: ${toHex(ie)}
  Request status: ${oe}
`);
  };
}
function backoff(Z, ee) {
  let ne = Z;
  return () => new Promise((ie) => setTimeout(() => {
    ne *= ee, ie();
  }, ne));
}
function chain(...Z) {
  return async (ee, ne, ie) => {
    for (const oe of Z)
      await oe(ee, ne, ie);
  };
}
const strategy = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  defaultStrategy,
  once: once$1,
  conditionalDelay,
  maxAttempts,
  throttle,
  timeout,
  backoff,
  chain
}, Symbol.toStringTag, { value: "Module" }));
async function pollForResponse(Z, ee, ne, ie) {
  const oe = [blobFromText("request_status"), ne], ce = await Z.readState(ee, { paths: [oe] }), he = new Certificate(ce, Z);
  if (!await he.verify())
    throw new Error("Fail to verify certificate");
  const xe = he.lookup([...oe, blobFromText("status")]);
  let Ae;
  switch (typeof xe > "u" ? Ae = RequestStatusResponseStatus.Unknown : Ae = xe.toString(), Ae) {
    case RequestStatusResponseStatus.Replied:
      return he.lookup([...oe, blobFromText("reply")]);
    case RequestStatusResponseStatus.Received:
    case RequestStatusResponseStatus.Unknown:
    case RequestStatusResponseStatus.Processing:
      return await ie(ee, ne, Ae), pollForResponse(Z, ee, ne, ie);
    case RequestStatusResponseStatus.Rejected: {
      const Ee = he.lookup([...oe, blobFromText("reject_code")]).toString(), ye = he.lookup([...oe, blobFromText("reject_message")]).toString();
      throw new Error(`Call was rejected:
  Request ID: ${toHex(ne)}
  Reject code: ${Ee}
  Reject text: ${ye}
`);
    }
    case RequestStatusResponseStatus.Done:
      throw new Error(`Call was marked as done but we never saw the reply:
  Request ID: ${toHex(ne)}
`);
  }
  throw new Error("unreachable");
}
const index$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  pollForResponse,
  strategy,
  defaultStrategy
}, Symbol.toStringTag, { value: "Module" }));
class ActorCallError extends AgentError {
  constructor(ee, ne, ie, oe) {
    super([
      "Call failed:",
      `  Canister: ${ee.toText()}`,
      `  Method: ${ne} (${ie})`,
      ...Object.getOwnPropertyNames(oe).map((ce) => `  "${ce}": ${JSON.stringify(oe[ce])}`)
    ].join(`
`)), this.canisterId = ee, this.methodName = ne, this.type = ie, this.props = oe;
  }
}
class QueryCallRejectedError extends ActorCallError {
  constructor(ee, ne, ie) {
    var oe;
    super(ee, ne, "query", {
      Status: ie.status,
      Code: (oe = ReplicaRejectCode[ie.reject_code]) !== null && oe !== void 0 ? oe : `Unknown Code "${ie.reject_code}"`,
      Message: ie.reject_message
    }), this.result = ie;
  }
}
class UpdateCallRejectedError extends ActorCallError {
  constructor(ee, ne, ie, oe) {
    super(ee, ne, "update", {
      "Request ID": toHex(ie),
      "HTTP status code": oe.status.toString(),
      "HTTP status text": oe.statusText
    }), this.requestId = ie, this.response = oe;
  }
}
var CanisterInstallMode;
(function(Z) {
  Z.Install = "install", Z.Reinstall = "reinstall", Z.Upgrade = "upgrade";
})(CanisterInstallMode || (CanisterInstallMode = {}));
const metadataSymbol = Symbol.for("ic-agent-metadata");
class Actor {
  constructor(ee) {
    this[metadataSymbol] = Object.freeze(ee);
  }
  static agentOf(ee) {
    return ee[metadataSymbol].config.agent;
  }
  static interfaceOf(ee) {
    return ee[metadataSymbol].service;
  }
  static canisterIdOf(ee) {
    return Principal$1.from(ee[metadataSymbol].config.canisterId);
  }
  static async install(ee, ne) {
    const ie = ee.mode === void 0 ? CanisterInstallMode.Install : ee.mode, oe = ee.arg ? [...ee.arg] : [], ce = [...ee.module], he = typeof ne.canisterId == "string" ? Principal$1.fromText(ne.canisterId) : ne.canisterId;
    await getManagementCanister(ne).install_code({
      mode: { [ie]: null },
      arg: oe,
      wasm_module: ce,
      canister_id: he
    });
  }
  static async createCanister(ee) {
    const { canister_id: ne } = await getManagementCanister(ee || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
    return ne;
  }
  static async createAndInstallCanister(ee, ne, ie) {
    const oe = await this.createCanister(ie);
    return await this.install(Object.assign({}, ne), Object.assign(Object.assign({}, ie), { canisterId: oe })), this.createActor(ee, Object.assign(Object.assign({}, ie), { canisterId: oe }));
  }
  static createActorClass(ee) {
    const ne = ee({ IDL });
    class ie extends Actor {
      constructor(ce) {
        const he = typeof ce.canisterId == "string" ? Principal$1.fromText(ce.canisterId) : ce.canisterId;
        super({
          config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), ce), { canisterId: he }),
          service: ne
        });
        for (const [fe, xe] of ne._fields)
          this[fe] = _createActorMethod(this, fe, xe);
      }
    }
    return ie;
  }
  static createActor(ee, ne) {
    return new (this.createActorClass(ee))(ne);
  }
}
function decodeReturnValue(Z, ee) {
  const ne = decode$2(Z, buffer.Buffer.from(ee));
  switch (ne.length) {
    case 0:
      return;
    case 1:
      return ne[0];
    default:
      return ne;
  }
}
const DEFAULT_ACTOR_CONFIG = {
  pollingStrategyFactory: defaultStrategy
};
function _createActorMethod(Z, ee, ne) {
  let ie;
  ne.annotations.includes("query") ? ie = async (ce, ...he) => {
    var fe, xe;
    ce = Object.assign(Object.assign({}, ce), (xe = (fe = Z[metadataSymbol].config).queryTransform) === null || xe === void 0 ? void 0 : xe.call(fe, ee, he, Object.assign(Object.assign({}, Z[metadataSymbol].config), ce)));
    const Ae = ce.agent || Z[metadataSymbol].config.agent || getDefaultAgent(), Ee = Principal$1.from(ce.canisterId || Z[metadataSymbol].config.canisterId), ye = encode$1(ne.argTypes, he), ge = await Ae.query(Ee, { methodName: ee, arg: ye });
    switch (ge.status) {
      case "rejected":
        throw new QueryCallRejectedError(Ee, ee, ge);
      case "replied":
        return decodeReturnValue(ne.retTypes, ge.reply.arg);
    }
  } : ie = async (ce, ...he) => {
    var fe, xe;
    ce = Object.assign(Object.assign({}, ce), (xe = (fe = Z[metadataSymbol].config).callTransform) === null || xe === void 0 ? void 0 : xe.call(fe, ee, he, Object.assign(Object.assign({}, Z[metadataSymbol].config), ce)));
    const Ae = ce.agent || Z[metadataSymbol].config.agent || getDefaultAgent(), { canisterId: Ee, effectiveCanisterId: ye, pollingStrategyFactory: ge } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), Z[metadataSymbol].config), ce), me = Principal$1.from(Ee), Ce = ye !== void 0 ? Principal$1.from(ye) : me, Ie = encode$1(ne.argTypes, he), { requestId: Oe, response: He } = await Ae.call(me, {
      methodName: ee,
      arg: Ie,
      effectiveCanisterId: Ce
    });
    if (!He.ok)
      throw new UpdateCallRejectedError(me, ee, Oe, He);
    const Ne = ge(), Pe = await pollForResponse(Ae, Ce, Oe, Ne);
    if (Pe !== void 0)
      return decodeReturnValue(ne.retTypes, Pe);
    if (ne.retTypes.length === 0)
      return;
    throw new Error(`Call was returned undefined, but type [${ne.retTypes.join(",")}].`);
  };
  const oe = (...ce) => ie({}, ...ce);
  return oe.withOptions = (ce) => (...he) => ie(ce, ...he), oe;
}
const assetCanister = ({ IDL: Z }) => Z.Service({
  retrieve: Z.Func([Z.Text], [Z.Vec(Z.Nat8)], ["query"]),
  store: Z.Func([Z.Text, Z.Vec(Z.Nat8)], [], [])
});
function createAssetCanisterActor(Z) {
  return Actor.createActor(assetCanister, Z);
}
const esm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  polling: index$1,
  Cbor: cbor,
  ActorCallError,
  QueryCallRejectedError,
  UpdateCallRejectedError,
  get CanisterInstallMode() {
    return CanisterInstallMode;
  },
  Actor,
  get ReplicaRejectCode() {
    return ReplicaRejectCode;
  },
  Expiry,
  makeNonceTransform,
  makeExpiryTransform,
  get RequestStatusResponseStatus() {
    return RequestStatusResponseStatus;
  },
  HttpAgent,
  get ProxyMessageKind() {
    return ProxyMessageKind;
  },
  ProxyStubAgent,
  ProxyAgent,
  getDefaultAgent,
  SignIdentity,
  AnonymousIdentity,
  createIdentityDescriptor,
  isIdentityDescriptor,
  UnverifiedCertificateError,
  hashTreeToString,
  Certificate,
  reconstruct,
  lookupPathEx,
  lookup_path,
  get SubmitRequestType() {
    return SubmitRequestType;
  },
  createAssetCanisterActor,
  getManagementCanister,
  toHex,
  hash,
  requestIdOf,
  get verify() {
    return verify;
  },
  blsVerify
}, Symbol.toStringTag, { value: "Module" })), require$$0$2 = /* @__PURE__ */ getAugmentedNamespace(esm), require$$0$1 = /* @__PURE__ */ getAugmentedNamespace(esm$1);
var browserPonyfill = { exports: {} };
(function(Z, ee) {
  var ne = typeof self < "u" ? self : commonjsGlobal, ie = function() {
    function ce() {
      this.fetch = !1, this.DOMException = ne.DOMException;
    }
    return ce.prototype = ne, new ce();
  }();
  (function(ce) {
    (function(he) {
      var fe = {
        searchParams: "URLSearchParams" in ce,
        iterable: "Symbol" in ce && "iterator" in Symbol,
        blob: "FileReader" in ce && "Blob" in ce && function() {
          try {
            return new Blob(), !0;
          } catch {
            return !1;
          }
        }(),
        formData: "FormData" in ce,
        arrayBuffer: "ArrayBuffer" in ce
      };
      function xe(At) {
        return At && DataView.prototype.isPrototypeOf(At);
      }
      if (fe.arrayBuffer)
        var Ae = [
          "[object Int8Array]",
          "[object Uint8Array]",
          "[object Uint8ClampedArray]",
          "[object Int16Array]",
          "[object Uint16Array]",
          "[object Int32Array]",
          "[object Uint32Array]",
          "[object Float32Array]",
          "[object Float64Array]"
        ], Ee = ArrayBuffer.isView || function(At) {
          return At && Ae.indexOf(Object.prototype.toString.call(At)) > -1;
        };
      function ye(At) {
        if (typeof At != "string" && (At = String(At)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(At))
          throw new TypeError("Invalid character in header field name");
        return At.toLowerCase();
      }
      function ge(At) {
        return typeof At != "string" && (At = String(At)), At;
      }
      function me(At) {
        var St = {
          next: function() {
            var Vt = At.shift();
            return { done: Vt === void 0, value: Vt };
          }
        };
        return fe.iterable && (St[Symbol.iterator] = function() {
          return St;
        }), St;
      }
      function Ce(At) {
        this.map = {}, At instanceof Ce ? At.forEach(function(St, Vt) {
          this.append(Vt, St);
        }, this) : Array.isArray(At) ? At.forEach(function(St) {
          this.append(St[0], St[1]);
        }, this) : At && Object.getOwnPropertyNames(At).forEach(function(St) {
          this.append(St, At[St]);
        }, this);
      }
      Ce.prototype.append = function(At, St) {
        At = ye(At), St = ge(St);
        var Vt = this.map[At];
        this.map[At] = Vt ? Vt + ", " + St : St;
      }, Ce.prototype.delete = function(At) {
        delete this.map[ye(At)];
      }, Ce.prototype.get = function(At) {
        return At = ye(At), this.has(At) ? this.map[At] : null;
      }, Ce.prototype.has = function(At) {
        return this.map.hasOwnProperty(ye(At));
      }, Ce.prototype.set = function(At, St) {
        this.map[ye(At)] = ge(St);
      }, Ce.prototype.forEach = function(At, St) {
        for (var Vt in this.map)
          this.map.hasOwnProperty(Vt) && At.call(St, this.map[Vt], Vt, this);
      }, Ce.prototype.keys = function() {
        var At = [];
        return this.forEach(function(St, Vt) {
          At.push(Vt);
        }), me(At);
      }, Ce.prototype.values = function() {
        var At = [];
        return this.forEach(function(St) {
          At.push(St);
        }), me(At);
      }, Ce.prototype.entries = function() {
        var At = [];
        return this.forEach(function(St, Vt) {
          At.push([Vt, St]);
        }), me(At);
      }, fe.iterable && (Ce.prototype[Symbol.iterator] = Ce.prototype.entries);
      function Ie(At) {
        if (At.bodyUsed)
          return Promise.reject(new TypeError("Already read"));
        At.bodyUsed = !0;
      }
      function Oe(At) {
        return new Promise(function(St, Vt) {
          At.onload = function() {
            St(At.result);
          }, At.onerror = function() {
            Vt(At.error);
          };
        });
      }
      function He(At) {
        var St = new FileReader(), Vt = Oe(St);
        return St.readAsArrayBuffer(At), Vt;
      }
      function Ne(At) {
        var St = new FileReader(), Vt = Oe(St);
        return St.readAsText(At), Vt;
      }
      function Pe(At) {
        for (var St = new Uint8Array(At), Vt = new Array(St.length), Xt = 0; Xt < St.length; Xt++)
          Vt[Xt] = String.fromCharCode(St[Xt]);
        return Vt.join("");
      }
      function Fe(At) {
        if (At.slice)
          return At.slice(0);
        var St = new Uint8Array(At.byteLength);
        return St.set(new Uint8Array(At)), St.buffer;
      }
      function Le() {
        return this.bodyUsed = !1, this._initBody = function(At) {
          this._bodyInit = At, At ? typeof At == "string" ? this._bodyText = At : fe.blob && Blob.prototype.isPrototypeOf(At) ? this._bodyBlob = At : fe.formData && FormData.prototype.isPrototypeOf(At) ? this._bodyFormData = At : fe.searchParams && URLSearchParams.prototype.isPrototypeOf(At) ? this._bodyText = At.toString() : fe.arrayBuffer && fe.blob && xe(At) ? (this._bodyArrayBuffer = Fe(At.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : fe.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(At) || Ee(At)) ? this._bodyArrayBuffer = Fe(At) : this._bodyText = At = Object.prototype.toString.call(At) : this._bodyText = "", this.headers.get("content-type") || (typeof At == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : fe.searchParams && URLSearchParams.prototype.isPrototypeOf(At) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
        }, fe.blob && (this.blob = function() {
          var At = Ie(this);
          if (At)
            return At;
          if (this._bodyBlob)
            return Promise.resolve(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as blob");
          return Promise.resolve(new Blob([this._bodyText]));
        }, this.arrayBuffer = function() {
          return this._bodyArrayBuffer ? Ie(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(He);
        }), this.text = function() {
          var At = Ie(this);
          if (At)
            return At;
          if (this._bodyBlob)
            return Ne(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(Pe(this._bodyArrayBuffer));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as text");
          return Promise.resolve(this._bodyText);
        }, fe.formData && (this.formData = function() {
          return this.text().then(kt);
        }), this.json = function() {
          return this.text().then(JSON.parse);
        }, this;
      }
      var We = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
      function rt(At) {
        var St = At.toUpperCase();
        return We.indexOf(St) > -1 ? St : At;
      }
      function gt(At, St) {
        St = St || {};
        var Vt = St.body;
        if (At instanceof gt) {
          if (At.bodyUsed)
            throw new TypeError("Already read");
          this.url = At.url, this.credentials = At.credentials, St.headers || (this.headers = new Ce(At.headers)), this.method = At.method, this.mode = At.mode, this.signal = At.signal, !Vt && At._bodyInit != null && (Vt = At._bodyInit, At.bodyUsed = !0);
        } else
          this.url = String(At);
        if (this.credentials = St.credentials || this.credentials || "same-origin", (St.headers || !this.headers) && (this.headers = new Ce(St.headers)), this.method = rt(St.method || this.method || "GET"), this.mode = St.mode || this.mode || null, this.signal = St.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && Vt)
          throw new TypeError("Body not allowed for GET or HEAD requests");
        this._initBody(Vt);
      }
      gt.prototype.clone = function() {
        return new gt(this, { body: this._bodyInit });
      };
      function kt(At) {
        var St = new FormData();
        return At.trim().split("&").forEach(function(Vt) {
          if (Vt) {
            var Xt = Vt.split("="), Lt = Xt.shift().replace(/\+/g, " "), Zt = Xt.join("=").replace(/\+/g, " ");
            St.append(decodeURIComponent(Lt), decodeURIComponent(Zt));
          }
        }), St;
      }
      function Ke(At) {
        var St = new Ce(), Vt = At.replace(/\r?\n[\t ]+/g, " ");
        return Vt.split(/\r?\n/).forEach(function(Xt) {
          var Lt = Xt.split(":"), Zt = Lt.shift().trim();
          if (Zt) {
            var Gt = Lt.join(":").trim();
            St.append(Zt, Gt);
          }
        }), St;
      }
      Le.call(gt.prototype);
      function ht(At, St) {
        St || (St = {}), this.type = "default", this.status = St.status === void 0 ? 200 : St.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in St ? St.statusText : "OK", this.headers = new Ce(St.headers), this.url = St.url || "", this._initBody(At);
      }
      Le.call(ht.prototype), ht.prototype.clone = function() {
        return new ht(this._bodyInit, {
          status: this.status,
          statusText: this.statusText,
          headers: new Ce(this.headers),
          url: this.url
        });
      }, ht.error = function() {
        var At = new ht(null, { status: 0, statusText: "" });
        return At.type = "error", At;
      };
      var Nt = [301, 302, 303, 307, 308];
      ht.redirect = function(At, St) {
        if (Nt.indexOf(St) === -1)
          throw new RangeError("Invalid status code");
        return new ht(null, { status: St, headers: { location: At } });
      }, he.DOMException = ce.DOMException;
      try {
        new he.DOMException();
      } catch {
        he.DOMException = function(St, Vt) {
          this.message = St, this.name = Vt;
          var Xt = Error(St);
          this.stack = Xt.stack;
        }, he.DOMException.prototype = Object.create(Error.prototype), he.DOMException.prototype.constructor = he.DOMException;
      }
      function Ft(At, St) {
        return new Promise(function(Vt, Xt) {
          var Lt = new gt(At, St);
          if (Lt.signal && Lt.signal.aborted)
            return Xt(new he.DOMException("Aborted", "AbortError"));
          var Zt = new XMLHttpRequest();
          function Gt() {
            Zt.abort();
          }
          Zt.onload = function() {
            var pt = {
              status: Zt.status,
              statusText: Zt.statusText,
              headers: Ke(Zt.getAllResponseHeaders() || "")
            };
            pt.url = "responseURL" in Zt ? Zt.responseURL : pt.headers.get("X-Request-URL");
            var It = "response" in Zt ? Zt.response : Zt.responseText;
            Vt(new ht(It, pt));
          }, Zt.onerror = function() {
            Xt(new TypeError("Network request failed"));
          }, Zt.ontimeout = function() {
            Xt(new TypeError("Network request failed"));
          }, Zt.onabort = function() {
            Xt(new he.DOMException("Aborted", "AbortError"));
          }, Zt.open(Lt.method, Lt.url, !0), Lt.credentials === "include" ? Zt.withCredentials = !0 : Lt.credentials === "omit" && (Zt.withCredentials = !1), "responseType" in Zt && fe.blob && (Zt.responseType = "blob"), Lt.headers.forEach(function(pt, It) {
            Zt.setRequestHeader(It, pt);
          }), Lt.signal && (Lt.signal.addEventListener("abort", Gt), Zt.onreadystatechange = function() {
            Zt.readyState === 4 && Lt.signal.removeEventListener("abort", Gt);
          }), Zt.send(typeof Lt._bodyInit > "u" ? null : Lt._bodyInit);
        });
      }
      return Ft.polyfill = !0, ce.fetch || (ce.fetch = Ft, ce.Headers = Ce, ce.Request = gt, ce.Response = ht), he.Headers = Ce, he.Request = gt, he.Response = ht, he.fetch = Ft, Object.defineProperty(he, "__esModule", { value: !0 }), he;
    })({});
  })(ie), ie.fetch.ponyfill = !0, delete ie.fetch.polyfill;
  var oe = ie;
  ee = oe.fetch, ee.default = oe.fetch, ee.fetch = oe.fetch, ee.Headers = oe.Headers, ee.Request = oe.Request, ee.Response = oe.Response, Z.exports = ee;
})(browserPonyfill, browserPonyfill.exports);
var ext = {}, ext_did = {};
Object.defineProperty(ext_did, "__esModule", { value: !0 });
ext_did.init = void 0;
ext_did.default = ({ IDL: Z }) => {
  const ee = Z.Nat32, ne = Z.Text, ie = Z.Text, oe = Z.Nat, ce = Z.Int, he = Z.Vec(Z.Nat8), fe = Z.Vec(Z.Nat8), xe = Z.Record({
    locked: Z.Opt(ce),
    seller: Z.Principal,
    price: Z.Nat64
  }), Ae = Z.Variant({
    principal: Z.Principal,
    address: ne
  }), Ee = Z.Variant({
    InvalidToken: ie,
    Other: Z.Text
  }), ye = Z.Record({
    token: ie,
    user: Ae
  }), ge = Z.Variant({ ok: oe, err: Ee }), me = Z.Variant({
    ok: Z.Tuple(ne, Z.Opt(xe)),
    err: Ee
  }), Ce = Z.Variant({
    ok: Z.Vec(ee),
    err: Ee
  }), Ie = Z.Variant({
    ok: Z.Vec(Z.Tuple(ee, Z.Opt(xe), Z.Opt(Z.Vec(Z.Nat8)))),
    err: Ee
  }), Oe = Z.Record({
    to: Ae,
    token: ie,
    notify: Z.Bool,
    from: Ae,
    memo: fe,
    subaccount: Z.Opt(he),
    amount: oe,
    fee: Z.Nat
  }), He = Z.Variant({
    ok: oe,
    err: Z.Variant({
      CannotNotify: ne,
      InsufficientBalance: Z.Null,
      InvalidToken: ie,
      Rejected: Z.Null,
      Unauthorized: ne,
      Other: Z.Text
    })
  }), Ne = Z.Variant({
    fungible: Z.Record({
      decimals: Z.Nat8,
      metadata: Z.Opt(Z.Vec(Z.Nat8)),
      name: Z.Text,
      symbol: Z.Text
    }),
    nonfungible: Z.Record({ metadata: Z.Opt(Z.Vec(Z.Nat8)) })
  }), Pe = Z.Variant({ ok: Ne, err: Ee }), Fe = Z.Variant({ ok: oe, err: Ee });
  return Z.Service({
    extensions: Z.Func([], [Z.Vec(Z.Text)], ["query"]),
    balance: Z.Func([ye], [ge], ["query"]),
    details: Z.Func([ie], [me], ["query"]),
    tokens: Z.Func([ne], [Ce], ["query"]),
    tokens_ext: Z.Func([ne], [Ie], ["query"]),
    transfer: Z.Func([Oe], [He], []),
    metadata: Z.Func([ie], [Pe], ["query"]),
    supply: Z.Func([ie], [Fe], ["query"])
  });
};
const init$c = () => [];
ext_did.init = init$c;
var _default = {};
Object.defineProperty(_default, "__esModule", { value: !0 });
class NFT {
  constructor(ee, ne) {
    this.agent = ne, this.canisterId = ee;
  }
}
_default.default = NFT;
var account = {}, cryptoJs = { exports: {} };
function commonjsRequire(Z) {
  throw new Error('Could not dynamically require "' + Z + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var core = { exports: {} };
const __viteBrowserExternal = {}, __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: __viteBrowserExternal
}, Symbol.toStringTag, { value: "Module" })), require$$0 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);
var hasRequiredCore;
function requireCore() {
  return hasRequiredCore || (hasRequiredCore = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie();
    })(commonjsGlobal, function() {
      var ne = ne || function(ie, oe) {
        var ce;
        if (typeof window < "u" && window.crypto && (ce = window.crypto), typeof self < "u" && self.crypto && (ce = self.crypto), typeof globalThis < "u" && globalThis.crypto && (ce = globalThis.crypto), !ce && typeof window < "u" && window.msCrypto && (ce = window.msCrypto), !ce && typeof commonjsGlobal < "u" && commonjsGlobal.crypto && (ce = commonjsGlobal.crypto), !ce && typeof commonjsRequire == "function")
          try {
            ce = require$$0;
          } catch {
          }
        var he = function() {
          if (ce) {
            if (typeof ce.getRandomValues == "function")
              try {
                return ce.getRandomValues(new Uint32Array(1))[0];
              } catch {
              }
            if (typeof ce.randomBytes == "function")
              try {
                return ce.randomBytes(4).readInt32LE();
              } catch {
              }
          }
          throw new Error("Native crypto module could not be used to get secure random number.");
        }, fe = Object.create || function() {
          function Ne() {
          }
          return function(Pe) {
            var Fe;
            return Ne.prototype = Pe, Fe = new Ne(), Ne.prototype = null, Fe;
          };
        }(), xe = {}, Ae = xe.lib = {}, Ee = Ae.Base = function() {
          return {
            extend: function(Ne) {
              var Pe = fe(this);
              return Ne && Pe.mixIn(Ne), (!Pe.hasOwnProperty("init") || this.init === Pe.init) && (Pe.init = function() {
                Pe.$super.init.apply(this, arguments);
              }), Pe.init.prototype = Pe, Pe.$super = this, Pe;
            },
            create: function() {
              var Ne = this.extend();
              return Ne.init.apply(Ne, arguments), Ne;
            },
            init: function() {
            },
            mixIn: function(Ne) {
              for (var Pe in Ne)
                Ne.hasOwnProperty(Pe) && (this[Pe] = Ne[Pe]);
              Ne.hasOwnProperty("toString") && (this.toString = Ne.toString);
            },
            clone: function() {
              return this.init.prototype.extend(this);
            }
          };
        }(), ye = Ae.WordArray = Ee.extend({
          init: function(Ne, Pe) {
            Ne = this.words = Ne || [], Pe != oe ? this.sigBytes = Pe : this.sigBytes = Ne.length * 4;
          },
          toString: function(Ne) {
            return (Ne || me).stringify(this);
          },
          concat: function(Ne) {
            var Pe = this.words, Fe = Ne.words, Le = this.sigBytes, We = Ne.sigBytes;
            if (this.clamp(), Le % 4)
              for (var rt = 0; rt < We; rt++) {
                var gt = Fe[rt >>> 2] >>> 24 - rt % 4 * 8 & 255;
                Pe[Le + rt >>> 2] |= gt << 24 - (Le + rt) % 4 * 8;
              }
            else
              for (var kt = 0; kt < We; kt += 4)
                Pe[Le + kt >>> 2] = Fe[kt >>> 2];
            return this.sigBytes += We, this;
          },
          clamp: function() {
            var Ne = this.words, Pe = this.sigBytes;
            Ne[Pe >>> 2] &= 4294967295 << 32 - Pe % 4 * 8, Ne.length = ie.ceil(Pe / 4);
          },
          clone: function() {
            var Ne = Ee.clone.call(this);
            return Ne.words = this.words.slice(0), Ne;
          },
          random: function(Ne) {
            for (var Pe = [], Fe = 0; Fe < Ne; Fe += 4)
              Pe.push(he());
            return new ye.init(Pe, Ne);
          }
        }), ge = xe.enc = {}, me = ge.Hex = {
          stringify: function(Ne) {
            for (var Pe = Ne.words, Fe = Ne.sigBytes, Le = [], We = 0; We < Fe; We++) {
              var rt = Pe[We >>> 2] >>> 24 - We % 4 * 8 & 255;
              Le.push((rt >>> 4).toString(16)), Le.push((rt & 15).toString(16));
            }
            return Le.join("");
          },
          parse: function(Ne) {
            for (var Pe = Ne.length, Fe = [], Le = 0; Le < Pe; Le += 2)
              Fe[Le >>> 3] |= parseInt(Ne.substr(Le, 2), 16) << 24 - Le % 8 * 4;
            return new ye.init(Fe, Pe / 2);
          }
        }, Ce = ge.Latin1 = {
          stringify: function(Ne) {
            for (var Pe = Ne.words, Fe = Ne.sigBytes, Le = [], We = 0; We < Fe; We++) {
              var rt = Pe[We >>> 2] >>> 24 - We % 4 * 8 & 255;
              Le.push(String.fromCharCode(rt));
            }
            return Le.join("");
          },
          parse: function(Ne) {
            for (var Pe = Ne.length, Fe = [], Le = 0; Le < Pe; Le++)
              Fe[Le >>> 2] |= (Ne.charCodeAt(Le) & 255) << 24 - Le % 4 * 8;
            return new ye.init(Fe, Pe);
          }
        }, Ie = ge.Utf8 = {
          stringify: function(Ne) {
            try {
              return decodeURIComponent(escape(Ce.stringify(Ne)));
            } catch {
              throw new Error("Malformed UTF-8 data");
            }
          },
          parse: function(Ne) {
            return Ce.parse(unescape(encodeURIComponent(Ne)));
          }
        }, Oe = Ae.BufferedBlockAlgorithm = Ee.extend({
          reset: function() {
            this._data = new ye.init(), this._nDataBytes = 0;
          },
          _append: function(Ne) {
            typeof Ne == "string" && (Ne = Ie.parse(Ne)), this._data.concat(Ne), this._nDataBytes += Ne.sigBytes;
          },
          _process: function(Ne) {
            var Pe, Fe = this._data, Le = Fe.words, We = Fe.sigBytes, rt = this.blockSize, gt = rt * 4, kt = We / gt;
            Ne ? kt = ie.ceil(kt) : kt = ie.max((kt | 0) - this._minBufferSize, 0);
            var Ke = kt * rt, ht = ie.min(Ke * 4, We);
            if (Ke) {
              for (var Nt = 0; Nt < Ke; Nt += rt)
                this._doProcessBlock(Le, Nt);
              Pe = Le.splice(0, Ke), Fe.sigBytes -= ht;
            }
            return new ye.init(Pe, ht);
          },
          clone: function() {
            var Ne = Ee.clone.call(this);
            return Ne._data = this._data.clone(), Ne;
          },
          _minBufferSize: 0
        });
        Ae.Hasher = Oe.extend({
          cfg: Ee.extend(),
          init: function(Ne) {
            this.cfg = this.cfg.extend(Ne), this.reset();
          },
          reset: function() {
            Oe.reset.call(this), this._doReset();
          },
          update: function(Ne) {
            return this._append(Ne), this._process(), this;
          },
          finalize: function(Ne) {
            Ne && this._append(Ne);
            var Pe = this._doFinalize();
            return Pe;
          },
          blockSize: 16,
          _createHelper: function(Ne) {
            return function(Pe, Fe) {
              return new Ne.init(Fe).finalize(Pe);
            };
          },
          _createHmacHelper: function(Ne) {
            return function(Pe, Fe) {
              return new He.HMAC.init(Ne, Fe).finalize(Pe);
            };
          }
        });
        var He = xe.algo = {};
        return xe;
      }(Math);
      return ne;
    });
  }(core)), core.exports;
}
var x64Core = { exports: {} }, hasRequiredX64Core;
function requireX64Core() {
  return hasRequiredX64Core || (hasRequiredX64Core = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var oe = ne, ce = oe.lib, he = ce.Base, fe = ce.WordArray, xe = oe.x64 = {};
        xe.Word = he.extend({
          init: function(Ae, Ee) {
            this.high = Ae, this.low = Ee;
          }
        }), xe.WordArray = he.extend({
          init: function(Ae, Ee) {
            Ae = this.words = Ae || [], Ee != ie ? this.sigBytes = Ee : this.sigBytes = Ae.length * 8;
          },
          toX32: function() {
            for (var Ae = this.words, Ee = Ae.length, ye = [], ge = 0; ge < Ee; ge++) {
              var me = Ae[ge];
              ye.push(me.high), ye.push(me.low);
            }
            return fe.create(ye, this.sigBytes);
          },
          clone: function() {
            for (var Ae = he.clone.call(this), Ee = Ae.words = this.words.slice(0), ye = Ee.length, ge = 0; ge < ye; ge++)
              Ee[ge] = Ee[ge].clone();
            return Ae;
          }
        });
      }(), ne;
    });
  }(x64Core)), x64Core.exports;
}
var libTypedarrays = { exports: {} }, hasRequiredLibTypedarrays;
function requireLibTypedarrays() {
  return hasRequiredLibTypedarrays || (hasRequiredLibTypedarrays = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        if (typeof ArrayBuffer == "function") {
          var ie = ne, oe = ie.lib, ce = oe.WordArray, he = ce.init, fe = ce.init = function(xe) {
            if (xe instanceof ArrayBuffer && (xe = new Uint8Array(xe)), (xe instanceof Int8Array || typeof Uint8ClampedArray < "u" && xe instanceof Uint8ClampedArray || xe instanceof Int16Array || xe instanceof Uint16Array || xe instanceof Int32Array || xe instanceof Uint32Array || xe instanceof Float32Array || xe instanceof Float64Array) && (xe = new Uint8Array(xe.buffer, xe.byteOffset, xe.byteLength)), xe instanceof Uint8Array) {
              for (var Ae = xe.byteLength, Ee = [], ye = 0; ye < Ae; ye++)
                Ee[ye >>> 2] |= xe[ye] << 24 - ye % 4 * 8;
              he.call(this, Ee, Ae);
            } else
              he.apply(this, arguments);
          };
          fe.prototype = ce;
        }
      }(), ne.lib.WordArray;
    });
  }(libTypedarrays)), libTypedarrays.exports;
}
var encUtf16 = { exports: {} }, hasRequiredEncUtf16;
function requireEncUtf16() {
  return hasRequiredEncUtf16 || (hasRequiredEncUtf16 = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.WordArray, he = ie.enc;
        he.Utf16 = he.Utf16BE = {
          stringify: function(xe) {
            for (var Ae = xe.words, Ee = xe.sigBytes, ye = [], ge = 0; ge < Ee; ge += 2) {
              var me = Ae[ge >>> 2] >>> 16 - ge % 4 * 8 & 65535;
              ye.push(String.fromCharCode(me));
            }
            return ye.join("");
          },
          parse: function(xe) {
            for (var Ae = xe.length, Ee = [], ye = 0; ye < Ae; ye++)
              Ee[ye >>> 1] |= xe.charCodeAt(ye) << 16 - ye % 2 * 16;
            return ce.create(Ee, Ae * 2);
          }
        }, he.Utf16LE = {
          stringify: function(xe) {
            for (var Ae = xe.words, Ee = xe.sigBytes, ye = [], ge = 0; ge < Ee; ge += 2) {
              var me = fe(Ae[ge >>> 2] >>> 16 - ge % 4 * 8 & 65535);
              ye.push(String.fromCharCode(me));
            }
            return ye.join("");
          },
          parse: function(xe) {
            for (var Ae = xe.length, Ee = [], ye = 0; ye < Ae; ye++)
              Ee[ye >>> 1] |= fe(xe.charCodeAt(ye) << 16 - ye % 2 * 16);
            return ce.create(Ee, Ae * 2);
          }
        };
        function fe(xe) {
          return xe << 8 & 4278255360 | xe >>> 8 & 16711935;
        }
      }(), ne.enc.Utf16;
    });
  }(encUtf16)), encUtf16.exports;
}
var encBase64 = { exports: {} }, hasRequiredEncBase64;
function requireEncBase64() {
  return hasRequiredEncBase64 || (hasRequiredEncBase64 = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.WordArray, he = ie.enc;
        he.Base64 = {
          stringify: function(xe) {
            var Ae = xe.words, Ee = xe.sigBytes, ye = this._map;
            xe.clamp();
            for (var ge = [], me = 0; me < Ee; me += 3)
              for (var Ce = Ae[me >>> 2] >>> 24 - me % 4 * 8 & 255, Ie = Ae[me + 1 >>> 2] >>> 24 - (me + 1) % 4 * 8 & 255, Oe = Ae[me + 2 >>> 2] >>> 24 - (me + 2) % 4 * 8 & 255, He = Ce << 16 | Ie << 8 | Oe, Ne = 0; Ne < 4 && me + Ne * 0.75 < Ee; Ne++)
                ge.push(ye.charAt(He >>> 6 * (3 - Ne) & 63));
            var Pe = ye.charAt(64);
            if (Pe)
              for (; ge.length % 4; )
                ge.push(Pe);
            return ge.join("");
          },
          parse: function(xe) {
            var Ae = xe.length, Ee = this._map, ye = this._reverseMap;
            if (!ye) {
              ye = this._reverseMap = [];
              for (var ge = 0; ge < Ee.length; ge++)
                ye[Ee.charCodeAt(ge)] = ge;
            }
            var me = Ee.charAt(64);
            if (me) {
              var Ce = xe.indexOf(me);
              Ce !== -1 && (Ae = Ce);
            }
            return fe(xe, Ae, ye);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
        };
        function fe(xe, Ae, Ee) {
          for (var ye = [], ge = 0, me = 0; me < Ae; me++)
            if (me % 4) {
              var Ce = Ee[xe.charCodeAt(me - 1)] << me % 4 * 2, Ie = Ee[xe.charCodeAt(me)] >>> 6 - me % 4 * 2, Oe = Ce | Ie;
              ye[ge >>> 2] |= Oe << 24 - ge % 4 * 8, ge++;
            }
          return ce.create(ye, ge);
        }
      }(), ne.enc.Base64;
    });
  }(encBase64)), encBase64.exports;
}
var encBase64url = { exports: {} }, hasRequiredEncBase64url;
function requireEncBase64url() {
  return hasRequiredEncBase64url || (hasRequiredEncBase64url = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.WordArray, he = ie.enc;
        he.Base64url = {
          stringify: function(xe, Ae = !0) {
            var Ee = xe.words, ye = xe.sigBytes, ge = Ae ? this._safe_map : this._map;
            xe.clamp();
            for (var me = [], Ce = 0; Ce < ye; Ce += 3)
              for (var Ie = Ee[Ce >>> 2] >>> 24 - Ce % 4 * 8 & 255, Oe = Ee[Ce + 1 >>> 2] >>> 24 - (Ce + 1) % 4 * 8 & 255, He = Ee[Ce + 2 >>> 2] >>> 24 - (Ce + 2) % 4 * 8 & 255, Ne = Ie << 16 | Oe << 8 | He, Pe = 0; Pe < 4 && Ce + Pe * 0.75 < ye; Pe++)
                me.push(ge.charAt(Ne >>> 6 * (3 - Pe) & 63));
            var Fe = ge.charAt(64);
            if (Fe)
              for (; me.length % 4; )
                me.push(Fe);
            return me.join("");
          },
          parse: function(xe, Ae = !0) {
            var Ee = xe.length, ye = Ae ? this._safe_map : this._map, ge = this._reverseMap;
            if (!ge) {
              ge = this._reverseMap = [];
              for (var me = 0; me < ye.length; me++)
                ge[ye.charCodeAt(me)] = me;
            }
            var Ce = ye.charAt(64);
            if (Ce) {
              var Ie = xe.indexOf(Ce);
              Ie !== -1 && (Ee = Ie);
            }
            return fe(xe, Ee, ge);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
          _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
        };
        function fe(xe, Ae, Ee) {
          for (var ye = [], ge = 0, me = 0; me < Ae; me++)
            if (me % 4) {
              var Ce = Ee[xe.charCodeAt(me - 1)] << me % 4 * 2, Ie = Ee[xe.charCodeAt(me)] >>> 6 - me % 4 * 2, Oe = Ce | Ie;
              ye[ge >>> 2] |= Oe << 24 - ge % 4 * 8, ge++;
            }
          return ce.create(ye, ge);
        }
      }(), ne.enc.Base64url;
    });
  }(encBase64url)), encBase64url.exports;
}
var md5 = { exports: {} }, hasRequiredMd5;
function requireMd5() {
  return hasRequiredMd5 || (hasRequiredMd5 = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var oe = ne, ce = oe.lib, he = ce.WordArray, fe = ce.Hasher, xe = oe.algo, Ae = [];
        (function() {
          for (var Ie = 0; Ie < 64; Ie++)
            Ae[Ie] = ie.abs(ie.sin(Ie + 1)) * 4294967296 | 0;
        })();
        var Ee = xe.MD5 = fe.extend({
          _doReset: function() {
            this._hash = new he.init([
              1732584193,
              4023233417,
              2562383102,
              271733878
            ]);
          },
          _doProcessBlock: function(Ie, Oe) {
            for (var He = 0; He < 16; He++) {
              var Ne = Oe + He, Pe = Ie[Ne];
              Ie[Ne] = (Pe << 8 | Pe >>> 24) & 16711935 | (Pe << 24 | Pe >>> 8) & 4278255360;
            }
            var Fe = this._hash.words, Le = Ie[Oe + 0], We = Ie[Oe + 1], rt = Ie[Oe + 2], gt = Ie[Oe + 3], kt = Ie[Oe + 4], Ke = Ie[Oe + 5], ht = Ie[Oe + 6], Nt = Ie[Oe + 7], Ft = Ie[Oe + 8], At = Ie[Oe + 9], St = Ie[Oe + 10], Vt = Ie[Oe + 11], Xt = Ie[Oe + 12], Lt = Ie[Oe + 13], Zt = Ie[Oe + 14], Gt = Ie[Oe + 15], pt = Fe[0], It = Fe[1], qt = Fe[2], De = Fe[3];
            pt = ye(pt, It, qt, De, Le, 7, Ae[0]), De = ye(De, pt, It, qt, We, 12, Ae[1]), qt = ye(qt, De, pt, It, rt, 17, Ae[2]), It = ye(It, qt, De, pt, gt, 22, Ae[3]), pt = ye(pt, It, qt, De, kt, 7, Ae[4]), De = ye(De, pt, It, qt, Ke, 12, Ae[5]), qt = ye(qt, De, pt, It, ht, 17, Ae[6]), It = ye(It, qt, De, pt, Nt, 22, Ae[7]), pt = ye(pt, It, qt, De, Ft, 7, Ae[8]), De = ye(De, pt, It, qt, At, 12, Ae[9]), qt = ye(qt, De, pt, It, St, 17, Ae[10]), It = ye(It, qt, De, pt, Vt, 22, Ae[11]), pt = ye(pt, It, qt, De, Xt, 7, Ae[12]), De = ye(De, pt, It, qt, Lt, 12, Ae[13]), qt = ye(qt, De, pt, It, Zt, 17, Ae[14]), It = ye(It, qt, De, pt, Gt, 22, Ae[15]), pt = ge(pt, It, qt, De, We, 5, Ae[16]), De = ge(De, pt, It, qt, ht, 9, Ae[17]), qt = ge(qt, De, pt, It, Vt, 14, Ae[18]), It = ge(It, qt, De, pt, Le, 20, Ae[19]), pt = ge(pt, It, qt, De, Ke, 5, Ae[20]), De = ge(De, pt, It, qt, St, 9, Ae[21]), qt = ge(qt, De, pt, It, Gt, 14, Ae[22]), It = ge(It, qt, De, pt, kt, 20, Ae[23]), pt = ge(pt, It, qt, De, At, 5, Ae[24]), De = ge(De, pt, It, qt, Zt, 9, Ae[25]), qt = ge(qt, De, pt, It, gt, 14, Ae[26]), It = ge(It, qt, De, pt, Ft, 20, Ae[27]), pt = ge(pt, It, qt, De, Lt, 5, Ae[28]), De = ge(De, pt, It, qt, rt, 9, Ae[29]), qt = ge(qt, De, pt, It, Nt, 14, Ae[30]), It = ge(It, qt, De, pt, Xt, 20, Ae[31]), pt = me(pt, It, qt, De, Ke, 4, Ae[32]), De = me(De, pt, It, qt, Ft, 11, Ae[33]), qt = me(qt, De, pt, It, Vt, 16, Ae[34]), It = me(It, qt, De, pt, Zt, 23, Ae[35]), pt = me(pt, It, qt, De, We, 4, Ae[36]), De = me(De, pt, It, qt, kt, 11, Ae[37]), qt = me(qt, De, pt, It, Nt, 16, Ae[38]), It = me(It, qt, De, pt, St, 23, Ae[39]), pt = me(pt, It, qt, De, Lt, 4, Ae[40]), De = me(De, pt, It, qt, Le, 11, Ae[41]), qt = me(qt, De, pt, It, gt, 16, Ae[42]), It = me(It, qt, De, pt, ht, 23, Ae[43]), pt = me(pt, It, qt, De, At, 4, Ae[44]), De = me(De, pt, It, qt, Xt, 11, Ae[45]), qt = me(qt, De, pt, It, Gt, 16, Ae[46]), It = me(It, qt, De, pt, rt, 23, Ae[47]), pt = Ce(pt, It, qt, De, Le, 6, Ae[48]), De = Ce(De, pt, It, qt, Nt, 10, Ae[49]), qt = Ce(qt, De, pt, It, Zt, 15, Ae[50]), It = Ce(It, qt, De, pt, Ke, 21, Ae[51]), pt = Ce(pt, It, qt, De, Xt, 6, Ae[52]), De = Ce(De, pt, It, qt, gt, 10, Ae[53]), qt = Ce(qt, De, pt, It, St, 15, Ae[54]), It = Ce(It, qt, De, pt, We, 21, Ae[55]), pt = Ce(pt, It, qt, De, Ft, 6, Ae[56]), De = Ce(De, pt, It, qt, Gt, 10, Ae[57]), qt = Ce(qt, De, pt, It, ht, 15, Ae[58]), It = Ce(It, qt, De, pt, Lt, 21, Ae[59]), pt = Ce(pt, It, qt, De, kt, 6, Ae[60]), De = Ce(De, pt, It, qt, Vt, 10, Ae[61]), qt = Ce(qt, De, pt, It, rt, 15, Ae[62]), It = Ce(It, qt, De, pt, At, 21, Ae[63]), Fe[0] = Fe[0] + pt | 0, Fe[1] = Fe[1] + It | 0, Fe[2] = Fe[2] + qt | 0, Fe[3] = Fe[3] + De | 0;
          },
          _doFinalize: function() {
            var Ie = this._data, Oe = Ie.words, He = this._nDataBytes * 8, Ne = Ie.sigBytes * 8;
            Oe[Ne >>> 5] |= 128 << 24 - Ne % 32;
            var Pe = ie.floor(He / 4294967296), Fe = He;
            Oe[(Ne + 64 >>> 9 << 4) + 15] = (Pe << 8 | Pe >>> 24) & 16711935 | (Pe << 24 | Pe >>> 8) & 4278255360, Oe[(Ne + 64 >>> 9 << 4) + 14] = (Fe << 8 | Fe >>> 24) & 16711935 | (Fe << 24 | Fe >>> 8) & 4278255360, Ie.sigBytes = (Oe.length + 1) * 4, this._process();
            for (var Le = this._hash, We = Le.words, rt = 0; rt < 4; rt++) {
              var gt = We[rt];
              We[rt] = (gt << 8 | gt >>> 24) & 16711935 | (gt << 24 | gt >>> 8) & 4278255360;
            }
            return Le;
          },
          clone: function() {
            var Ie = fe.clone.call(this);
            return Ie._hash = this._hash.clone(), Ie;
          }
        });
        function ye(Ie, Oe, He, Ne, Pe, Fe, Le) {
          var We = Ie + (Oe & He | ~Oe & Ne) + Pe + Le;
          return (We << Fe | We >>> 32 - Fe) + Oe;
        }
        function ge(Ie, Oe, He, Ne, Pe, Fe, Le) {
          var We = Ie + (Oe & Ne | He & ~Ne) + Pe + Le;
          return (We << Fe | We >>> 32 - Fe) + Oe;
        }
        function me(Ie, Oe, He, Ne, Pe, Fe, Le) {
          var We = Ie + (Oe ^ He ^ Ne) + Pe + Le;
          return (We << Fe | We >>> 32 - Fe) + Oe;
        }
        function Ce(Ie, Oe, He, Ne, Pe, Fe, Le) {
          var We = Ie + (He ^ (Oe | ~Ne)) + Pe + Le;
          return (We << Fe | We >>> 32 - Fe) + Oe;
        }
        oe.MD5 = fe._createHelper(Ee), oe.HmacMD5 = fe._createHmacHelper(Ee);
      }(Math), ne.MD5;
    });
  }(md5)), md5.exports;
}
var sha1 = { exports: {} }, hasRequiredSha1;
function requireSha1() {
  return hasRequiredSha1 || (hasRequiredSha1 = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.WordArray, he = oe.Hasher, fe = ie.algo, xe = [], Ae = fe.SHA1 = he.extend({
          _doReset: function() {
            this._hash = new ce.init([
              1732584193,
              4023233417,
              2562383102,
              271733878,
              3285377520
            ]);
          },
          _doProcessBlock: function(Ee, ye) {
            for (var ge = this._hash.words, me = ge[0], Ce = ge[1], Ie = ge[2], Oe = ge[3], He = ge[4], Ne = 0; Ne < 80; Ne++) {
              if (Ne < 16)
                xe[Ne] = Ee[ye + Ne] | 0;
              else {
                var Pe = xe[Ne - 3] ^ xe[Ne - 8] ^ xe[Ne - 14] ^ xe[Ne - 16];
                xe[Ne] = Pe << 1 | Pe >>> 31;
              }
              var Fe = (me << 5 | me >>> 27) + He + xe[Ne];
              Ne < 20 ? Fe += (Ce & Ie | ~Ce & Oe) + 1518500249 : Ne < 40 ? Fe += (Ce ^ Ie ^ Oe) + 1859775393 : Ne < 60 ? Fe += (Ce & Ie | Ce & Oe | Ie & Oe) - 1894007588 : Fe += (Ce ^ Ie ^ Oe) - 899497514, He = Oe, Oe = Ie, Ie = Ce << 30 | Ce >>> 2, Ce = me, me = Fe;
            }
            ge[0] = ge[0] + me | 0, ge[1] = ge[1] + Ce | 0, ge[2] = ge[2] + Ie | 0, ge[3] = ge[3] + Oe | 0, ge[4] = ge[4] + He | 0;
          },
          _doFinalize: function() {
            var Ee = this._data, ye = Ee.words, ge = this._nDataBytes * 8, me = Ee.sigBytes * 8;
            return ye[me >>> 5] |= 128 << 24 - me % 32, ye[(me + 64 >>> 9 << 4) + 14] = Math.floor(ge / 4294967296), ye[(me + 64 >>> 9 << 4) + 15] = ge, Ee.sigBytes = ye.length * 4, this._process(), this._hash;
          },
          clone: function() {
            var Ee = he.clone.call(this);
            return Ee._hash = this._hash.clone(), Ee;
          }
        });
        ie.SHA1 = he._createHelper(Ae), ie.HmacSHA1 = he._createHmacHelper(Ae);
      }(), ne.SHA1;
    });
  }(sha1)), sha1.exports;
}
var sha256 = { exports: {} }, hasRequiredSha256;
function requireSha256() {
  return hasRequiredSha256 || (hasRequiredSha256 = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var oe = ne, ce = oe.lib, he = ce.WordArray, fe = ce.Hasher, xe = oe.algo, Ae = [], Ee = [];
        (function() {
          function me(He) {
            for (var Ne = ie.sqrt(He), Pe = 2; Pe <= Ne; Pe++)
              if (!(He % Pe))
                return !1;
            return !0;
          }
          function Ce(He) {
            return (He - (He | 0)) * 4294967296 | 0;
          }
          for (var Ie = 2, Oe = 0; Oe < 64; )
            me(Ie) && (Oe < 8 && (Ae[Oe] = Ce(ie.pow(Ie, 1 / 2))), Ee[Oe] = Ce(ie.pow(Ie, 1 / 3)), Oe++), Ie++;
        })();
        var ye = [], ge = xe.SHA256 = fe.extend({
          _doReset: function() {
            this._hash = new he.init(Ae.slice(0));
          },
          _doProcessBlock: function(me, Ce) {
            for (var Ie = this._hash.words, Oe = Ie[0], He = Ie[1], Ne = Ie[2], Pe = Ie[3], Fe = Ie[4], Le = Ie[5], We = Ie[6], rt = Ie[7], gt = 0; gt < 64; gt++) {
              if (gt < 16)
                ye[gt] = me[Ce + gt] | 0;
              else {
                var kt = ye[gt - 15], Ke = (kt << 25 | kt >>> 7) ^ (kt << 14 | kt >>> 18) ^ kt >>> 3, ht = ye[gt - 2], Nt = (ht << 15 | ht >>> 17) ^ (ht << 13 | ht >>> 19) ^ ht >>> 10;
                ye[gt] = Ke + ye[gt - 7] + Nt + ye[gt - 16];
              }
              var Ft = Fe & Le ^ ~Fe & We, At = Oe & He ^ Oe & Ne ^ He & Ne, St = (Oe << 30 | Oe >>> 2) ^ (Oe << 19 | Oe >>> 13) ^ (Oe << 10 | Oe >>> 22), Vt = (Fe << 26 | Fe >>> 6) ^ (Fe << 21 | Fe >>> 11) ^ (Fe << 7 | Fe >>> 25), Xt = rt + Vt + Ft + Ee[gt] + ye[gt], Lt = St + At;
              rt = We, We = Le, Le = Fe, Fe = Pe + Xt | 0, Pe = Ne, Ne = He, He = Oe, Oe = Xt + Lt | 0;
            }
            Ie[0] = Ie[0] + Oe | 0, Ie[1] = Ie[1] + He | 0, Ie[2] = Ie[2] + Ne | 0, Ie[3] = Ie[3] + Pe | 0, Ie[4] = Ie[4] + Fe | 0, Ie[5] = Ie[5] + Le | 0, Ie[6] = Ie[6] + We | 0, Ie[7] = Ie[7] + rt | 0;
          },
          _doFinalize: function() {
            var me = this._data, Ce = me.words, Ie = this._nDataBytes * 8, Oe = me.sigBytes * 8;
            return Ce[Oe >>> 5] |= 128 << 24 - Oe % 32, Ce[(Oe + 64 >>> 9 << 4) + 14] = ie.floor(Ie / 4294967296), Ce[(Oe + 64 >>> 9 << 4) + 15] = Ie, me.sigBytes = Ce.length * 4, this._process(), this._hash;
          },
          clone: function() {
            var me = fe.clone.call(this);
            return me._hash = this._hash.clone(), me;
          }
        });
        oe.SHA256 = fe._createHelper(ge), oe.HmacSHA256 = fe._createHmacHelper(ge);
      }(Math), ne.SHA256;
    });
  }(sha256)), sha256.exports;
}
var sha224 = { exports: {} }, hasRequiredSha224;
function requireSha224() {
  return hasRequiredSha224 || (hasRequiredSha224 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireSha256());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.WordArray, he = ie.algo, fe = he.SHA256, xe = he.SHA224 = fe.extend({
          _doReset: function() {
            this._hash = new ce.init([
              3238371032,
              914150663,
              812702999,
              4144912697,
              4290775857,
              1750603025,
              1694076839,
              3204075428
            ]);
          },
          _doFinalize: function() {
            var Ae = fe._doFinalize.call(this);
            return Ae.sigBytes -= 4, Ae;
          }
        });
        ie.SHA224 = fe._createHelper(xe), ie.HmacSHA224 = fe._createHmacHelper(xe);
      }(), ne.SHA224;
    });
  }(sha224)), sha224.exports;
}
var sha512 = { exports: {} }, hasRequiredSha512;
function requireSha512() {
  return hasRequiredSha512 || (hasRequiredSha512 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireX64Core());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.Hasher, he = ie.x64, fe = he.Word, xe = he.WordArray, Ae = ie.algo;
        function Ee() {
          return fe.create.apply(fe, arguments);
        }
        var ye = [
          Ee(1116352408, 3609767458),
          Ee(1899447441, 602891725),
          Ee(3049323471, 3964484399),
          Ee(3921009573, 2173295548),
          Ee(961987163, 4081628472),
          Ee(1508970993, 3053834265),
          Ee(2453635748, 2937671579),
          Ee(2870763221, 3664609560),
          Ee(3624381080, 2734883394),
          Ee(310598401, 1164996542),
          Ee(607225278, 1323610764),
          Ee(1426881987, 3590304994),
          Ee(1925078388, 4068182383),
          Ee(2162078206, 991336113),
          Ee(2614888103, 633803317),
          Ee(3248222580, 3479774868),
          Ee(3835390401, 2666613458),
          Ee(4022224774, 944711139),
          Ee(264347078, 2341262773),
          Ee(604807628, 2007800933),
          Ee(770255983, 1495990901),
          Ee(1249150122, 1856431235),
          Ee(1555081692, 3175218132),
          Ee(1996064986, 2198950837),
          Ee(2554220882, 3999719339),
          Ee(2821834349, 766784016),
          Ee(2952996808, 2566594879),
          Ee(3210313671, 3203337956),
          Ee(3336571891, 1034457026),
          Ee(3584528711, 2466948901),
          Ee(113926993, 3758326383),
          Ee(338241895, 168717936),
          Ee(666307205, 1188179964),
          Ee(773529912, 1546045734),
          Ee(1294757372, 1522805485),
          Ee(1396182291, 2643833823),
          Ee(1695183700, 2343527390),
          Ee(1986661051, 1014477480),
          Ee(2177026350, 1206759142),
          Ee(2456956037, 344077627),
          Ee(2730485921, 1290863460),
          Ee(2820302411, 3158454273),
          Ee(3259730800, 3505952657),
          Ee(3345764771, 106217008),
          Ee(3516065817, 3606008344),
          Ee(3600352804, 1432725776),
          Ee(4094571909, 1467031594),
          Ee(275423344, 851169720),
          Ee(430227734, 3100823752),
          Ee(506948616, 1363258195),
          Ee(659060556, 3750685593),
          Ee(883997877, 3785050280),
          Ee(958139571, 3318307427),
          Ee(1322822218, 3812723403),
          Ee(1537002063, 2003034995),
          Ee(1747873779, 3602036899),
          Ee(1955562222, 1575990012),
          Ee(2024104815, 1125592928),
          Ee(2227730452, 2716904306),
          Ee(2361852424, 442776044),
          Ee(2428436474, 593698344),
          Ee(2756734187, 3733110249),
          Ee(3204031479, 2999351573),
          Ee(3329325298, 3815920427),
          Ee(3391569614, 3928383900),
          Ee(3515267271, 566280711),
          Ee(3940187606, 3454069534),
          Ee(4118630271, 4000239992),
          Ee(116418474, 1914138554),
          Ee(174292421, 2731055270),
          Ee(289380356, 3203993006),
          Ee(460393269, 320620315),
          Ee(685471733, 587496836),
          Ee(852142971, 1086792851),
          Ee(1017036298, 365543100),
          Ee(1126000580, 2618297676),
          Ee(1288033470, 3409855158),
          Ee(1501505948, 4234509866),
          Ee(1607167915, 987167468),
          Ee(1816402316, 1246189591)
        ], ge = [];
        (function() {
          for (var Ce = 0; Ce < 80; Ce++)
            ge[Ce] = Ee();
        })();
        var me = Ae.SHA512 = ce.extend({
          _doReset: function() {
            this._hash = new xe.init([
              new fe.init(1779033703, 4089235720),
              new fe.init(3144134277, 2227873595),
              new fe.init(1013904242, 4271175723),
              new fe.init(2773480762, 1595750129),
              new fe.init(1359893119, 2917565137),
              new fe.init(2600822924, 725511199),
              new fe.init(528734635, 4215389547),
              new fe.init(1541459225, 327033209)
            ]);
          },
          _doProcessBlock: function(Ce, Ie) {
            for (var Oe = this._hash.words, He = Oe[0], Ne = Oe[1], Pe = Oe[2], Fe = Oe[3], Le = Oe[4], We = Oe[5], rt = Oe[6], gt = Oe[7], kt = He.high, Ke = He.low, ht = Ne.high, Nt = Ne.low, Ft = Pe.high, At = Pe.low, St = Fe.high, Vt = Fe.low, Xt = Le.high, Lt = Le.low, Zt = We.high, Gt = We.low, pt = rt.high, It = rt.low, qt = gt.high, De = gt.low, ar = kt, rr = Ke, Ar = ht, vt = Nt, Ut = Ft, Xe = At, tt = St, et = Vt, Et = Xt, lt = Lt, $e = Zt, _e = Gt, Be = pt, be = It, ke = qt, Ve = De, Je = 0; Je < 80; Je++) {
              var at, Tt, Dt = ge[Je];
              if (Je < 16)
                Tt = Dt.high = Ce[Ie + Je * 2] | 0, at = Dt.low = Ce[Ie + Je * 2 + 1] | 0;
              else {
                var zt = ge[Je - 15], Yt = zt.high, Ue = zt.low, Te = (Yt >>> 1 | Ue << 31) ^ (Yt >>> 8 | Ue << 24) ^ Yt >>> 7, Re = (Ue >>> 1 | Yt << 31) ^ (Ue >>> 8 | Yt << 24) ^ (Ue >>> 7 | Yt << 25), it = ge[Je - 2], bt = it.high, Qt = it.low, jt = (bt >>> 19 | Qt << 13) ^ (bt << 3 | Qt >>> 29) ^ bt >>> 6, yr = (Qt >>> 19 | bt << 13) ^ (Qt << 3 | bt >>> 29) ^ (Qt >>> 6 | bt << 26), gr = ge[Je - 7], br = gr.high, mr = gr.low, _r = ge[Je - 16], en = _r.high, Jn = _r.low;
                at = Re + mr, Tt = Te + br + (at >>> 0 < Re >>> 0 ? 1 : 0), at = at + yr, Tt = Tt + jt + (at >>> 0 < yr >>> 0 ? 1 : 0), at = at + Jn, Tt = Tt + en + (at >>> 0 < Jn >>> 0 ? 1 : 0), Dt.high = Tt, Dt.low = at;
              }
              var an = Et & $e ^ ~Et & Be, qn = lt & _e ^ ~lt & be, $n = ar & Ar ^ ar & Ut ^ Ar & Ut, Gn = rr & vt ^ rr & Xe ^ vt & Xe, Un = (ar >>> 28 | rr << 4) ^ (ar << 30 | rr >>> 2) ^ (ar << 25 | rr >>> 7), oi = (rr >>> 28 | ar << 4) ^ (rr << 30 | ar >>> 2) ^ (rr << 25 | ar >>> 7), Ai = (Et >>> 14 | lt << 18) ^ (Et >>> 18 | lt << 14) ^ (Et << 23 | lt >>> 9), Ji = (lt >>> 14 | Et << 18) ^ (lt >>> 18 | Et << 14) ^ (lt << 23 | Et >>> 9), Ri = ye[Je], Hn = Ri.high, Xn = Ri.low, Ln = Ve + Ji, si = ke + Ai + (Ln >>> 0 < Ve >>> 0 ? 1 : 0), Ln = Ln + qn, si = si + an + (Ln >>> 0 < qn >>> 0 ? 1 : 0), Ln = Ln + Xn, si = si + Hn + (Ln >>> 0 < Xn >>> 0 ? 1 : 0), Ln = Ln + at, si = si + Tt + (Ln >>> 0 < at >>> 0 ? 1 : 0), gi = oi + Gn, mi = Un + $n + (gi >>> 0 < oi >>> 0 ? 1 : 0);
              ke = Be, Ve = be, Be = $e, be = _e, $e = Et, _e = lt, lt = et + Ln | 0, Et = tt + si + (lt >>> 0 < et >>> 0 ? 1 : 0) | 0, tt = Ut, et = Xe, Ut = Ar, Xe = vt, Ar = ar, vt = rr, rr = Ln + gi | 0, ar = si + mi + (rr >>> 0 < Ln >>> 0 ? 1 : 0) | 0;
            }
            Ke = He.low = Ke + rr, He.high = kt + ar + (Ke >>> 0 < rr >>> 0 ? 1 : 0), Nt = Ne.low = Nt + vt, Ne.high = ht + Ar + (Nt >>> 0 < vt >>> 0 ? 1 : 0), At = Pe.low = At + Xe, Pe.high = Ft + Ut + (At >>> 0 < Xe >>> 0 ? 1 : 0), Vt = Fe.low = Vt + et, Fe.high = St + tt + (Vt >>> 0 < et >>> 0 ? 1 : 0), Lt = Le.low = Lt + lt, Le.high = Xt + Et + (Lt >>> 0 < lt >>> 0 ? 1 : 0), Gt = We.low = Gt + _e, We.high = Zt + $e + (Gt >>> 0 < _e >>> 0 ? 1 : 0), It = rt.low = It + be, rt.high = pt + Be + (It >>> 0 < be >>> 0 ? 1 : 0), De = gt.low = De + Ve, gt.high = qt + ke + (De >>> 0 < Ve >>> 0 ? 1 : 0);
          },
          _doFinalize: function() {
            var Ce = this._data, Ie = Ce.words, Oe = this._nDataBytes * 8, He = Ce.sigBytes * 8;
            Ie[He >>> 5] |= 128 << 24 - He % 32, Ie[(He + 128 >>> 10 << 5) + 30] = Math.floor(Oe / 4294967296), Ie[(He + 128 >>> 10 << 5) + 31] = Oe, Ce.sigBytes = Ie.length * 4, this._process();
            var Ne = this._hash.toX32();
            return Ne;
          },
          clone: function() {
            var Ce = ce.clone.call(this);
            return Ce._hash = this._hash.clone(), Ce;
          },
          blockSize: 1024 / 32
        });
        ie.SHA512 = ce._createHelper(me), ie.HmacSHA512 = ce._createHmacHelper(me);
      }(), ne.SHA512;
    });
  }(sha512)), sha512.exports;
}
var sha384 = { exports: {} }, hasRequiredSha384;
function requireSha384() {
  return hasRequiredSha384 || (hasRequiredSha384 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireX64Core(), requireSha512());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.x64, ce = oe.Word, he = oe.WordArray, fe = ie.algo, xe = fe.SHA512, Ae = fe.SHA384 = xe.extend({
          _doReset: function() {
            this._hash = new he.init([
              new ce.init(3418070365, 3238371032),
              new ce.init(1654270250, 914150663),
              new ce.init(2438529370, 812702999),
              new ce.init(355462360, 4144912697),
              new ce.init(1731405415, 4290775857),
              new ce.init(2394180231, 1750603025),
              new ce.init(3675008525, 1694076839),
              new ce.init(1203062813, 3204075428)
            ]);
          },
          _doFinalize: function() {
            var Ee = xe._doFinalize.call(this);
            return Ee.sigBytes -= 16, Ee;
          }
        });
        ie.SHA384 = xe._createHelper(Ae), ie.HmacSHA384 = xe._createHmacHelper(Ae);
      }(), ne.SHA384;
    });
  }(sha384)), sha384.exports;
}
var sha3 = { exports: {} }, hasRequiredSha3;
function requireSha3() {
  return hasRequiredSha3 || (hasRequiredSha3 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireX64Core());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var oe = ne, ce = oe.lib, he = ce.WordArray, fe = ce.Hasher, xe = oe.x64, Ae = xe.Word, Ee = oe.algo, ye = [], ge = [], me = [];
        (function() {
          for (var Oe = 1, He = 0, Ne = 0; Ne < 24; Ne++) {
            ye[Oe + 5 * He] = (Ne + 1) * (Ne + 2) / 2 % 64;
            var Pe = He % 5, Fe = (2 * Oe + 3 * He) % 5;
            Oe = Pe, He = Fe;
          }
          for (var Oe = 0; Oe < 5; Oe++)
            for (var He = 0; He < 5; He++)
              ge[Oe + 5 * He] = He + (2 * Oe + 3 * He) % 5 * 5;
          for (var Le = 1, We = 0; We < 24; We++) {
            for (var rt = 0, gt = 0, kt = 0; kt < 7; kt++) {
              if (Le & 1) {
                var Ke = (1 << kt) - 1;
                Ke < 32 ? gt ^= 1 << Ke : rt ^= 1 << Ke - 32;
              }
              Le & 128 ? Le = Le << 1 ^ 113 : Le <<= 1;
            }
            me[We] = Ae.create(rt, gt);
          }
        })();
        var Ce = [];
        (function() {
          for (var Oe = 0; Oe < 25; Oe++)
            Ce[Oe] = Ae.create();
        })();
        var Ie = Ee.SHA3 = fe.extend({
          cfg: fe.cfg.extend({
            outputLength: 512
          }),
          _doReset: function() {
            for (var Oe = this._state = [], He = 0; He < 25; He++)
              Oe[He] = new Ae.init();
            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
          },
          _doProcessBlock: function(Oe, He) {
            for (var Ne = this._state, Pe = this.blockSize / 2, Fe = 0; Fe < Pe; Fe++) {
              var Le = Oe[He + 2 * Fe], We = Oe[He + 2 * Fe + 1];
              Le = (Le << 8 | Le >>> 24) & 16711935 | (Le << 24 | Le >>> 8) & 4278255360, We = (We << 8 | We >>> 24) & 16711935 | (We << 24 | We >>> 8) & 4278255360;
              var rt = Ne[Fe];
              rt.high ^= We, rt.low ^= Le;
            }
            for (var gt = 0; gt < 24; gt++) {
              for (var kt = 0; kt < 5; kt++) {
                for (var Ke = 0, ht = 0, Nt = 0; Nt < 5; Nt++) {
                  var rt = Ne[kt + 5 * Nt];
                  Ke ^= rt.high, ht ^= rt.low;
                }
                var Ft = Ce[kt];
                Ft.high = Ke, Ft.low = ht;
              }
              for (var kt = 0; kt < 5; kt++)
                for (var At = Ce[(kt + 4) % 5], St = Ce[(kt + 1) % 5], Vt = St.high, Xt = St.low, Ke = At.high ^ (Vt << 1 | Xt >>> 31), ht = At.low ^ (Xt << 1 | Vt >>> 31), Nt = 0; Nt < 5; Nt++) {
                  var rt = Ne[kt + 5 * Nt];
                  rt.high ^= Ke, rt.low ^= ht;
                }
              for (var Lt = 1; Lt < 25; Lt++) {
                var Ke, ht, rt = Ne[Lt], Zt = rt.high, Gt = rt.low, pt = ye[Lt];
                pt < 32 ? (Ke = Zt << pt | Gt >>> 32 - pt, ht = Gt << pt | Zt >>> 32 - pt) : (Ke = Gt << pt - 32 | Zt >>> 64 - pt, ht = Zt << pt - 32 | Gt >>> 64 - pt);
                var It = Ce[ge[Lt]];
                It.high = Ke, It.low = ht;
              }
              var qt = Ce[0], De = Ne[0];
              qt.high = De.high, qt.low = De.low;
              for (var kt = 0; kt < 5; kt++)
                for (var Nt = 0; Nt < 5; Nt++) {
                  var Lt = kt + 5 * Nt, rt = Ne[Lt], ar = Ce[Lt], rr = Ce[(kt + 1) % 5 + 5 * Nt], Ar = Ce[(kt + 2) % 5 + 5 * Nt];
                  rt.high = ar.high ^ ~rr.high & Ar.high, rt.low = ar.low ^ ~rr.low & Ar.low;
                }
              var rt = Ne[0], vt = me[gt];
              rt.high ^= vt.high, rt.low ^= vt.low;
            }
          },
          _doFinalize: function() {
            var Oe = this._data, He = Oe.words;
            this._nDataBytes * 8;
            var Ne = Oe.sigBytes * 8, Pe = this.blockSize * 32;
            He[Ne >>> 5] |= 1 << 24 - Ne % 32, He[(ie.ceil((Ne + 1) / Pe) * Pe >>> 5) - 1] |= 128, Oe.sigBytes = He.length * 4, this._process();
            for (var Fe = this._state, Le = this.cfg.outputLength / 8, We = Le / 8, rt = [], gt = 0; gt < We; gt++) {
              var kt = Fe[gt], Ke = kt.high, ht = kt.low;
              Ke = (Ke << 8 | Ke >>> 24) & 16711935 | (Ke << 24 | Ke >>> 8) & 4278255360, ht = (ht << 8 | ht >>> 24) & 16711935 | (ht << 24 | ht >>> 8) & 4278255360, rt.push(ht), rt.push(Ke);
            }
            return new he.init(rt, Le);
          },
          clone: function() {
            for (var Oe = fe.clone.call(this), He = Oe._state = this._state.slice(0), Ne = 0; Ne < 25; Ne++)
              He[Ne] = He[Ne].clone();
            return Oe;
          }
        });
        oe.SHA3 = fe._createHelper(Ie), oe.HmacSHA3 = fe._createHmacHelper(Ie);
      }(Math), ne.SHA3;
    });
  }(sha3)), sha3.exports;
}
var ripemd160 = { exports: {} }, hasRequiredRipemd160;
function requireRipemd160() {
  return hasRequiredRipemd160 || (hasRequiredRipemd160 = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      /** @preserve
      			(c) 2012 by Cédric Mesnil. All rights reserved.
      
      			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
      
      			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      
      			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      			*/
      return function(ie) {
        var oe = ne, ce = oe.lib, he = ce.WordArray, fe = ce.Hasher, xe = oe.algo, Ae = he.create([
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13
        ]), Ee = he.create([
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11
        ]), ye = he.create([
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6
        ]), ge = he.create([
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11
        ]), me = he.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), Ce = he.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), Ie = xe.RIPEMD160 = fe.extend({
          _doReset: function() {
            this._hash = he.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          },
          _doProcessBlock: function(We, rt) {
            for (var gt = 0; gt < 16; gt++) {
              var kt = rt + gt, Ke = We[kt];
              We[kt] = (Ke << 8 | Ke >>> 24) & 16711935 | (Ke << 24 | Ke >>> 8) & 4278255360;
            }
            var ht = this._hash.words, Nt = me.words, Ft = Ce.words, At = Ae.words, St = Ee.words, Vt = ye.words, Xt = ge.words, Lt, Zt, Gt, pt, It, qt, De, ar, rr, Ar;
            qt = Lt = ht[0], De = Zt = ht[1], ar = Gt = ht[2], rr = pt = ht[3], Ar = It = ht[4];
            for (var vt, gt = 0; gt < 80; gt += 1)
              vt = Lt + We[rt + At[gt]] | 0, gt < 16 ? vt += Oe(Zt, Gt, pt) + Nt[0] : gt < 32 ? vt += He(Zt, Gt, pt) + Nt[1] : gt < 48 ? vt += Ne(Zt, Gt, pt) + Nt[2] : gt < 64 ? vt += Pe(Zt, Gt, pt) + Nt[3] : vt += Fe(Zt, Gt, pt) + Nt[4], vt = vt | 0, vt = Le(vt, Vt[gt]), vt = vt + It | 0, Lt = It, It = pt, pt = Le(Gt, 10), Gt = Zt, Zt = vt, vt = qt + We[rt + St[gt]] | 0, gt < 16 ? vt += Fe(De, ar, rr) + Ft[0] : gt < 32 ? vt += Pe(De, ar, rr) + Ft[1] : gt < 48 ? vt += Ne(De, ar, rr) + Ft[2] : gt < 64 ? vt += He(De, ar, rr) + Ft[3] : vt += Oe(De, ar, rr) + Ft[4], vt = vt | 0, vt = Le(vt, Xt[gt]), vt = vt + Ar | 0, qt = Ar, Ar = rr, rr = Le(ar, 10), ar = De, De = vt;
            vt = ht[1] + Gt + rr | 0, ht[1] = ht[2] + pt + Ar | 0, ht[2] = ht[3] + It + qt | 0, ht[3] = ht[4] + Lt + De | 0, ht[4] = ht[0] + Zt + ar | 0, ht[0] = vt;
          },
          _doFinalize: function() {
            var We = this._data, rt = We.words, gt = this._nDataBytes * 8, kt = We.sigBytes * 8;
            rt[kt >>> 5] |= 128 << 24 - kt % 32, rt[(kt + 64 >>> 9 << 4) + 14] = (gt << 8 | gt >>> 24) & 16711935 | (gt << 24 | gt >>> 8) & 4278255360, We.sigBytes = (rt.length + 1) * 4, this._process();
            for (var Ke = this._hash, ht = Ke.words, Nt = 0; Nt < 5; Nt++) {
              var Ft = ht[Nt];
              ht[Nt] = (Ft << 8 | Ft >>> 24) & 16711935 | (Ft << 24 | Ft >>> 8) & 4278255360;
            }
            return Ke;
          },
          clone: function() {
            var We = fe.clone.call(this);
            return We._hash = this._hash.clone(), We;
          }
        });
        function Oe(We, rt, gt) {
          return We ^ rt ^ gt;
        }
        function He(We, rt, gt) {
          return We & rt | ~We & gt;
        }
        function Ne(We, rt, gt) {
          return (We | ~rt) ^ gt;
        }
        function Pe(We, rt, gt) {
          return We & gt | rt & ~gt;
        }
        function Fe(We, rt, gt) {
          return We ^ (rt | ~gt);
        }
        function Le(We, rt) {
          return We << rt | We >>> 32 - rt;
        }
        oe.RIPEMD160 = fe._createHelper(Ie), oe.HmacRIPEMD160 = fe._createHmacHelper(Ie);
      }(), ne.RIPEMD160;
    });
  }(ripemd160)), ripemd160.exports;
}
var hmac = { exports: {} }, hasRequiredHmac;
function requireHmac() {
  return hasRequiredHmac || (hasRequiredHmac = 1, function(Z, ee) {
    (function(ne, ie) {
      Z.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      (function() {
        var ie = ne, oe = ie.lib, ce = oe.Base, he = ie.enc, fe = he.Utf8, xe = ie.algo;
        xe.HMAC = ce.extend({
          init: function(Ae, Ee) {
            Ae = this._hasher = new Ae.init(), typeof Ee == "string" && (Ee = fe.parse(Ee));
            var ye = Ae.blockSize, ge = ye * 4;
            Ee.sigBytes > ge && (Ee = Ae.finalize(Ee)), Ee.clamp();
            for (var me = this._oKey = Ee.clone(), Ce = this._iKey = Ee.clone(), Ie = me.words, Oe = Ce.words, He = 0; He < ye; He++)
              Ie[He] ^= 1549556828, Oe[He] ^= 909522486;
            me.sigBytes = Ce.sigBytes = ge, this.reset();
          },
          reset: function() {
            var Ae = this._hasher;
            Ae.reset(), Ae.update(this._iKey);
          },
          update: function(Ae) {
            return this._hasher.update(Ae), this;
          },
          finalize: function(Ae) {
            var Ee = this._hasher, ye = Ee.finalize(Ae);
            Ee.reset();
            var ge = Ee.finalize(this._oKey.clone().concat(ye));
            return ge;
          }
        });
      })();
    });
  }(hmac)), hmac.exports;
}
var pbkdf2 = { exports: {} }, hasRequiredPbkdf2;
function requirePbkdf2() {
  return hasRequiredPbkdf2 || (hasRequiredPbkdf2 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireSha1(), requireHmac());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.Base, he = oe.WordArray, fe = ie.algo, xe = fe.SHA1, Ae = fe.HMAC, Ee = fe.PBKDF2 = ce.extend({
          cfg: ce.extend({
            keySize: 128 / 32,
            hasher: xe,
            iterations: 1
          }),
          init: function(ye) {
            this.cfg = this.cfg.extend(ye);
          },
          compute: function(ye, ge) {
            for (var me = this.cfg, Ce = Ae.create(me.hasher, ye), Ie = he.create(), Oe = he.create([1]), He = Ie.words, Ne = Oe.words, Pe = me.keySize, Fe = me.iterations; He.length < Pe; ) {
              var Le = Ce.update(ge).finalize(Oe);
              Ce.reset();
              for (var We = Le.words, rt = We.length, gt = Le, kt = 1; kt < Fe; kt++) {
                gt = Ce.finalize(gt), Ce.reset();
                for (var Ke = gt.words, ht = 0; ht < rt; ht++)
                  We[ht] ^= Ke[ht];
              }
              Ie.concat(Le), Ne[0]++;
            }
            return Ie.sigBytes = Pe * 4, Ie;
          }
        });
        ie.PBKDF2 = function(ye, ge, me) {
          return Ee.create(me).compute(ye, ge);
        };
      }(), ne.PBKDF2;
    });
  }(pbkdf2)), pbkdf2.exports;
}
var evpkdf = { exports: {} }, hasRequiredEvpkdf;
function requireEvpkdf() {
  return hasRequiredEvpkdf || (hasRequiredEvpkdf = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireSha1(), requireHmac());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.Base, he = oe.WordArray, fe = ie.algo, xe = fe.MD5, Ae = fe.EvpKDF = ce.extend({
          cfg: ce.extend({
            keySize: 128 / 32,
            hasher: xe,
            iterations: 1
          }),
          init: function(Ee) {
            this.cfg = this.cfg.extend(Ee);
          },
          compute: function(Ee, ye) {
            for (var ge, me = this.cfg, Ce = me.hasher.create(), Ie = he.create(), Oe = Ie.words, He = me.keySize, Ne = me.iterations; Oe.length < He; ) {
              ge && Ce.update(ge), ge = Ce.update(Ee).finalize(ye), Ce.reset();
              for (var Pe = 1; Pe < Ne; Pe++)
                ge = Ce.finalize(ge), Ce.reset();
              Ie.concat(ge);
            }
            return Ie.sigBytes = He * 4, Ie;
          }
        });
        ie.EvpKDF = function(Ee, ye, ge) {
          return Ae.create(ge).compute(Ee, ye);
        };
      }(), ne.EvpKDF;
    });
  }(evpkdf)), evpkdf.exports;
}
var cipherCore = { exports: {} }, hasRequiredCipherCore;
function requireCipherCore() {
  return hasRequiredCipherCore || (hasRequiredCipherCore = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireEvpkdf());
    })(commonjsGlobal, function(ne) {
      ne.lib.Cipher || function(ie) {
        var oe = ne, ce = oe.lib, he = ce.Base, fe = ce.WordArray, xe = ce.BufferedBlockAlgorithm, Ae = oe.enc;
        Ae.Utf8;
        var Ee = Ae.Base64, ye = oe.algo, ge = ye.EvpKDF, me = ce.Cipher = xe.extend({
          cfg: he.extend(),
          createEncryptor: function(Ke, ht) {
            return this.create(this._ENC_XFORM_MODE, Ke, ht);
          },
          createDecryptor: function(Ke, ht) {
            return this.create(this._DEC_XFORM_MODE, Ke, ht);
          },
          init: function(Ke, ht, Nt) {
            this.cfg = this.cfg.extend(Nt), this._xformMode = Ke, this._key = ht, this.reset();
          },
          reset: function() {
            xe.reset.call(this), this._doReset();
          },
          process: function(Ke) {
            return this._append(Ke), this._process();
          },
          finalize: function(Ke) {
            Ke && this._append(Ke);
            var ht = this._doFinalize();
            return ht;
          },
          keySize: 128 / 32,
          ivSize: 128 / 32,
          _ENC_XFORM_MODE: 1,
          _DEC_XFORM_MODE: 2,
          _createHelper: function() {
            function Ke(ht) {
              return typeof ht == "string" ? kt : We;
            }
            return function(ht) {
              return {
                encrypt: function(Nt, Ft, At) {
                  return Ke(Ft).encrypt(ht, Nt, Ft, At);
                },
                decrypt: function(Nt, Ft, At) {
                  return Ke(Ft).decrypt(ht, Nt, Ft, At);
                }
              };
            };
          }()
        });
        ce.StreamCipher = me.extend({
          _doFinalize: function() {
            var Ke = this._process(!0);
            return Ke;
          },
          blockSize: 1
        });
        var Ce = oe.mode = {}, Ie = ce.BlockCipherMode = he.extend({
          createEncryptor: function(Ke, ht) {
            return this.Encryptor.create(Ke, ht);
          },
          createDecryptor: function(Ke, ht) {
            return this.Decryptor.create(Ke, ht);
          },
          init: function(Ke, ht) {
            this._cipher = Ke, this._iv = ht;
          }
        }), Oe = Ce.CBC = function() {
          var Ke = Ie.extend();
          Ke.Encryptor = Ke.extend({
            processBlock: function(Nt, Ft) {
              var At = this._cipher, St = At.blockSize;
              ht.call(this, Nt, Ft, St), At.encryptBlock(Nt, Ft), this._prevBlock = Nt.slice(Ft, Ft + St);
            }
          }), Ke.Decryptor = Ke.extend({
            processBlock: function(Nt, Ft) {
              var At = this._cipher, St = At.blockSize, Vt = Nt.slice(Ft, Ft + St);
              At.decryptBlock(Nt, Ft), ht.call(this, Nt, Ft, St), this._prevBlock = Vt;
            }
          });
          function ht(Nt, Ft, At) {
            var St, Vt = this._iv;
            Vt ? (St = Vt, this._iv = ie) : St = this._prevBlock;
            for (var Xt = 0; Xt < At; Xt++)
              Nt[Ft + Xt] ^= St[Xt];
          }
          return Ke;
        }(), He = oe.pad = {}, Ne = He.Pkcs7 = {
          pad: function(Ke, ht) {
            for (var Nt = ht * 4, Ft = Nt - Ke.sigBytes % Nt, At = Ft << 24 | Ft << 16 | Ft << 8 | Ft, St = [], Vt = 0; Vt < Ft; Vt += 4)
              St.push(At);
            var Xt = fe.create(St, Ft);
            Ke.concat(Xt);
          },
          unpad: function(Ke) {
            var ht = Ke.words[Ke.sigBytes - 1 >>> 2] & 255;
            Ke.sigBytes -= ht;
          }
        };
        ce.BlockCipher = me.extend({
          cfg: me.cfg.extend({
            mode: Oe,
            padding: Ne
          }),
          reset: function() {
            var Ke;
            me.reset.call(this);
            var ht = this.cfg, Nt = ht.iv, Ft = ht.mode;
            this._xformMode == this._ENC_XFORM_MODE ? Ke = Ft.createEncryptor : (Ke = Ft.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == Ke ? this._mode.init(this, Nt && Nt.words) : (this._mode = Ke.call(Ft, this, Nt && Nt.words), this._mode.__creator = Ke);
          },
          _doProcessBlock: function(Ke, ht) {
            this._mode.processBlock(Ke, ht);
          },
          _doFinalize: function() {
            var Ke, ht = this.cfg.padding;
            return this._xformMode == this._ENC_XFORM_MODE ? (ht.pad(this._data, this.blockSize), Ke = this._process(!0)) : (Ke = this._process(!0), ht.unpad(Ke)), Ke;
          },
          blockSize: 128 / 32
        });
        var Pe = ce.CipherParams = he.extend({
          init: function(Ke) {
            this.mixIn(Ke);
          },
          toString: function(Ke) {
            return (Ke || this.formatter).stringify(this);
          }
        }), Fe = oe.format = {}, Le = Fe.OpenSSL = {
          stringify: function(Ke) {
            var ht, Nt = Ke.ciphertext, Ft = Ke.salt;
            return Ft ? ht = fe.create([1398893684, 1701076831]).concat(Ft).concat(Nt) : ht = Nt, ht.toString(Ee);
          },
          parse: function(Ke) {
            var ht, Nt = Ee.parse(Ke), Ft = Nt.words;
            return Ft[0] == 1398893684 && Ft[1] == 1701076831 && (ht = fe.create(Ft.slice(2, 4)), Ft.splice(0, 4), Nt.sigBytes -= 16), Pe.create({ ciphertext: Nt, salt: ht });
          }
        }, We = ce.SerializableCipher = he.extend({
          cfg: he.extend({
            format: Le
          }),
          encrypt: function(Ke, ht, Nt, Ft) {
            Ft = this.cfg.extend(Ft);
            var At = Ke.createEncryptor(Nt, Ft), St = At.finalize(ht), Vt = At.cfg;
            return Pe.create({
              ciphertext: St,
              key: Nt,
              iv: Vt.iv,
              algorithm: Ke,
              mode: Vt.mode,
              padding: Vt.padding,
              blockSize: Ke.blockSize,
              formatter: Ft.format
            });
          },
          decrypt: function(Ke, ht, Nt, Ft) {
            Ft = this.cfg.extend(Ft), ht = this._parse(ht, Ft.format);
            var At = Ke.createDecryptor(Nt, Ft).finalize(ht.ciphertext);
            return At;
          },
          _parse: function(Ke, ht) {
            return typeof Ke == "string" ? ht.parse(Ke, this) : Ke;
          }
        }), rt = oe.kdf = {}, gt = rt.OpenSSL = {
          execute: function(Ke, ht, Nt, Ft) {
            Ft || (Ft = fe.random(64 / 8));
            var At = ge.create({ keySize: ht + Nt }).compute(Ke, Ft), St = fe.create(At.words.slice(ht), Nt * 4);
            return At.sigBytes = ht * 4, Pe.create({ key: At, iv: St, salt: Ft });
          }
        }, kt = ce.PasswordBasedCipher = We.extend({
          cfg: We.cfg.extend({
            kdf: gt
          }),
          encrypt: function(Ke, ht, Nt, Ft) {
            Ft = this.cfg.extend(Ft);
            var At = Ft.kdf.execute(Nt, Ke.keySize, Ke.ivSize);
            Ft.iv = At.iv;
            var St = We.encrypt.call(this, Ke, ht, At.key, Ft);
            return St.mixIn(At), St;
          },
          decrypt: function(Ke, ht, Nt, Ft) {
            Ft = this.cfg.extend(Ft), ht = this._parse(ht, Ft.format);
            var At = Ft.kdf.execute(Nt, Ke.keySize, Ke.ivSize, ht.salt);
            Ft.iv = At.iv;
            var St = We.decrypt.call(this, Ke, ht, At.key, Ft);
            return St;
          }
        });
      }();
    });
  }(cipherCore)), cipherCore.exports;
}
var modeCfb = { exports: {} }, hasRequiredModeCfb;
function requireModeCfb() {
  return hasRequiredModeCfb || (hasRequiredModeCfb = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.CFB = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        ie.Encryptor = ie.extend({
          processBlock: function(ce, he) {
            var fe = this._cipher, xe = fe.blockSize;
            oe.call(this, ce, he, xe, fe), this._prevBlock = ce.slice(he, he + xe);
          }
        }), ie.Decryptor = ie.extend({
          processBlock: function(ce, he) {
            var fe = this._cipher, xe = fe.blockSize, Ae = ce.slice(he, he + xe);
            oe.call(this, ce, he, xe, fe), this._prevBlock = Ae;
          }
        });
        function oe(ce, he, fe, xe) {
          var Ae, Ee = this._iv;
          Ee ? (Ae = Ee.slice(0), this._iv = void 0) : Ae = this._prevBlock, xe.encryptBlock(Ae, 0);
          for (var ye = 0; ye < fe; ye++)
            ce[he + ye] ^= Ae[ye];
        }
        return ie;
      }(), ne.mode.CFB;
    });
  }(modeCfb)), modeCfb.exports;
}
var modeCtr = { exports: {} }, hasRequiredModeCtr;
function requireModeCtr() {
  return hasRequiredModeCtr || (hasRequiredModeCtr = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.CTR = function() {
        var ie = ne.lib.BlockCipherMode.extend(), oe = ie.Encryptor = ie.extend({
          processBlock: function(ce, he) {
            var fe = this._cipher, xe = fe.blockSize, Ae = this._iv, Ee = this._counter;
            Ae && (Ee = this._counter = Ae.slice(0), this._iv = void 0);
            var ye = Ee.slice(0);
            fe.encryptBlock(ye, 0), Ee[xe - 1] = Ee[xe - 1] + 1 | 0;
            for (var ge = 0; ge < xe; ge++)
              ce[he + ge] ^= ye[ge];
          }
        });
        return ie.Decryptor = oe, ie;
      }(), ne.mode.CTR;
    });
  }(modeCtr)), modeCtr.exports;
}
var modeCtrGladman = { exports: {} }, hasRequiredModeCtrGladman;
function requireModeCtrGladman() {
  return hasRequiredModeCtrGladman || (hasRequiredModeCtrGladman = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      /** @preserve
       * Counter block mode compatible with  Dr Brian Gladman fileenc.c
       * derived from CryptoJS.mode.CTR
       * Jan Hruby jhruby.web@gmail.com
       */
      return ne.mode.CTRGladman = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        function oe(fe) {
          if ((fe >> 24 & 255) === 255) {
            var xe = fe >> 16 & 255, Ae = fe >> 8 & 255, Ee = fe & 255;
            xe === 255 ? (xe = 0, Ae === 255 ? (Ae = 0, Ee === 255 ? Ee = 0 : ++Ee) : ++Ae) : ++xe, fe = 0, fe += xe << 16, fe += Ae << 8, fe += Ee;
          } else
            fe += 1 << 24;
          return fe;
        }
        function ce(fe) {
          return (fe[0] = oe(fe[0])) === 0 && (fe[1] = oe(fe[1])), fe;
        }
        var he = ie.Encryptor = ie.extend({
          processBlock: function(fe, xe) {
            var Ae = this._cipher, Ee = Ae.blockSize, ye = this._iv, ge = this._counter;
            ye && (ge = this._counter = ye.slice(0), this._iv = void 0), ce(ge);
            var me = ge.slice(0);
            Ae.encryptBlock(me, 0);
            for (var Ce = 0; Ce < Ee; Ce++)
              fe[xe + Ce] ^= me[Ce];
          }
        });
        return ie.Decryptor = he, ie;
      }(), ne.mode.CTRGladman;
    });
  }(modeCtrGladman)), modeCtrGladman.exports;
}
var modeOfb = { exports: {} }, hasRequiredModeOfb;
function requireModeOfb() {
  return hasRequiredModeOfb || (hasRequiredModeOfb = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.OFB = function() {
        var ie = ne.lib.BlockCipherMode.extend(), oe = ie.Encryptor = ie.extend({
          processBlock: function(ce, he) {
            var fe = this._cipher, xe = fe.blockSize, Ae = this._iv, Ee = this._keystream;
            Ae && (Ee = this._keystream = Ae.slice(0), this._iv = void 0), fe.encryptBlock(Ee, 0);
            for (var ye = 0; ye < xe; ye++)
              ce[he + ye] ^= Ee[ye];
          }
        });
        return ie.Decryptor = oe, ie;
      }(), ne.mode.OFB;
    });
  }(modeOfb)), modeOfb.exports;
}
var modeEcb = { exports: {} }, hasRequiredModeEcb;
function requireModeEcb() {
  return hasRequiredModeEcb || (hasRequiredModeEcb = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.ECB = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        return ie.Encryptor = ie.extend({
          processBlock: function(oe, ce) {
            this._cipher.encryptBlock(oe, ce);
          }
        }), ie.Decryptor = ie.extend({
          processBlock: function(oe, ce) {
            this._cipher.decryptBlock(oe, ce);
          }
        }), ie;
      }(), ne.mode.ECB;
    });
  }(modeEcb)), modeEcb.exports;
}
var padAnsix923 = { exports: {} }, hasRequiredPadAnsix923;
function requirePadAnsix923() {
  return hasRequiredPadAnsix923 || (hasRequiredPadAnsix923 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.AnsiX923 = {
        pad: function(ie, oe) {
          var ce = ie.sigBytes, he = oe * 4, fe = he - ce % he, xe = ce + fe - 1;
          ie.clamp(), ie.words[xe >>> 2] |= fe << 24 - xe % 4 * 8, ie.sigBytes += fe;
        },
        unpad: function(ie) {
          var oe = ie.words[ie.sigBytes - 1 >>> 2] & 255;
          ie.sigBytes -= oe;
        }
      }, ne.pad.Ansix923;
    });
  }(padAnsix923)), padAnsix923.exports;
}
var padIso10126 = { exports: {} }, hasRequiredPadIso10126;
function requirePadIso10126() {
  return hasRequiredPadIso10126 || (hasRequiredPadIso10126 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.Iso10126 = {
        pad: function(ie, oe) {
          var ce = oe * 4, he = ce - ie.sigBytes % ce;
          ie.concat(ne.lib.WordArray.random(he - 1)).concat(ne.lib.WordArray.create([he << 24], 1));
        },
        unpad: function(ie) {
          var oe = ie.words[ie.sigBytes - 1 >>> 2] & 255;
          ie.sigBytes -= oe;
        }
      }, ne.pad.Iso10126;
    });
  }(padIso10126)), padIso10126.exports;
}
var padIso97971 = { exports: {} }, hasRequiredPadIso97971;
function requirePadIso97971() {
  return hasRequiredPadIso97971 || (hasRequiredPadIso97971 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.Iso97971 = {
        pad: function(ie, oe) {
          ie.concat(ne.lib.WordArray.create([2147483648], 1)), ne.pad.ZeroPadding.pad(ie, oe);
        },
        unpad: function(ie) {
          ne.pad.ZeroPadding.unpad(ie), ie.sigBytes--;
        }
      }, ne.pad.Iso97971;
    });
  }(padIso97971)), padIso97971.exports;
}
var padZeropadding = { exports: {} }, hasRequiredPadZeropadding;
function requirePadZeropadding() {
  return hasRequiredPadZeropadding || (hasRequiredPadZeropadding = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.ZeroPadding = {
        pad: function(ie, oe) {
          var ce = oe * 4;
          ie.clamp(), ie.sigBytes += ce - (ie.sigBytes % ce || ce);
        },
        unpad: function(ie) {
          for (var oe = ie.words, ce = ie.sigBytes - 1, ce = ie.sigBytes - 1; ce >= 0; ce--)
            if (oe[ce >>> 2] >>> 24 - ce % 4 * 8 & 255) {
              ie.sigBytes = ce + 1;
              break;
            }
        }
      }, ne.pad.ZeroPadding;
    });
  }(padZeropadding)), padZeropadding.exports;
}
var padNopadding = { exports: {} }, hasRequiredPadNopadding;
function requirePadNopadding() {
  return hasRequiredPadNopadding || (hasRequiredPadNopadding = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.NoPadding = {
        pad: function() {
        },
        unpad: function() {
        }
      }, ne.pad.NoPadding;
    });
  }(padNopadding)), padNopadding.exports;
}
var formatHex = { exports: {} }, hasRequiredFormatHex;
function requireFormatHex() {
  return hasRequiredFormatHex || (hasRequiredFormatHex = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var oe = ne, ce = oe.lib, he = ce.CipherParams, fe = oe.enc, xe = fe.Hex, Ae = oe.format;
        Ae.Hex = {
          stringify: function(Ee) {
            return Ee.ciphertext.toString(xe);
          },
          parse: function(Ee) {
            var ye = xe.parse(Ee);
            return he.create({ ciphertext: ye });
          }
        };
      }(), ne.format.Hex;
    });
  }(formatHex)), formatHex.exports;
}
var aes = { exports: {} }, hasRequiredAes;
function requireAes() {
  return hasRequiredAes || (hasRequiredAes = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.BlockCipher, he = ie.algo, fe = [], xe = [], Ae = [], Ee = [], ye = [], ge = [], me = [], Ce = [], Ie = [], Oe = [];
        (function() {
          for (var Pe = [], Fe = 0; Fe < 256; Fe++)
            Fe < 128 ? Pe[Fe] = Fe << 1 : Pe[Fe] = Fe << 1 ^ 283;
          for (var Le = 0, We = 0, Fe = 0; Fe < 256; Fe++) {
            var rt = We ^ We << 1 ^ We << 2 ^ We << 3 ^ We << 4;
            rt = rt >>> 8 ^ rt & 255 ^ 99, fe[Le] = rt, xe[rt] = Le;
            var gt = Pe[Le], kt = Pe[gt], Ke = Pe[kt], ht = Pe[rt] * 257 ^ rt * 16843008;
            Ae[Le] = ht << 24 | ht >>> 8, Ee[Le] = ht << 16 | ht >>> 16, ye[Le] = ht << 8 | ht >>> 24, ge[Le] = ht;
            var ht = Ke * 16843009 ^ kt * 65537 ^ gt * 257 ^ Le * 16843008;
            me[rt] = ht << 24 | ht >>> 8, Ce[rt] = ht << 16 | ht >>> 16, Ie[rt] = ht << 8 | ht >>> 24, Oe[rt] = ht, Le ? (Le = gt ^ Pe[Pe[Pe[Ke ^ gt]]], We ^= Pe[Pe[We]]) : Le = We = 1;
          }
        })();
        var He = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], Ne = he.AES = ce.extend({
          _doReset: function() {
            var Pe;
            if (!(this._nRounds && this._keyPriorReset === this._key)) {
              for (var Fe = this._keyPriorReset = this._key, Le = Fe.words, We = Fe.sigBytes / 4, rt = this._nRounds = We + 6, gt = (rt + 1) * 4, kt = this._keySchedule = [], Ke = 0; Ke < gt; Ke++)
                Ke < We ? kt[Ke] = Le[Ke] : (Pe = kt[Ke - 1], Ke % We ? We > 6 && Ke % We == 4 && (Pe = fe[Pe >>> 24] << 24 | fe[Pe >>> 16 & 255] << 16 | fe[Pe >>> 8 & 255] << 8 | fe[Pe & 255]) : (Pe = Pe << 8 | Pe >>> 24, Pe = fe[Pe >>> 24] << 24 | fe[Pe >>> 16 & 255] << 16 | fe[Pe >>> 8 & 255] << 8 | fe[Pe & 255], Pe ^= He[Ke / We | 0] << 24), kt[Ke] = kt[Ke - We] ^ Pe);
              for (var ht = this._invKeySchedule = [], Nt = 0; Nt < gt; Nt++) {
                var Ke = gt - Nt;
                if (Nt % 4)
                  var Pe = kt[Ke];
                else
                  var Pe = kt[Ke - 4];
                Nt < 4 || Ke <= 4 ? ht[Nt] = Pe : ht[Nt] = me[fe[Pe >>> 24]] ^ Ce[fe[Pe >>> 16 & 255]] ^ Ie[fe[Pe >>> 8 & 255]] ^ Oe[fe[Pe & 255]];
              }
            }
          },
          encryptBlock: function(Pe, Fe) {
            this._doCryptBlock(Pe, Fe, this._keySchedule, Ae, Ee, ye, ge, fe);
          },
          decryptBlock: function(Pe, Fe) {
            var Le = Pe[Fe + 1];
            Pe[Fe + 1] = Pe[Fe + 3], Pe[Fe + 3] = Le, this._doCryptBlock(Pe, Fe, this._invKeySchedule, me, Ce, Ie, Oe, xe);
            var Le = Pe[Fe + 1];
            Pe[Fe + 1] = Pe[Fe + 3], Pe[Fe + 3] = Le;
          },
          _doCryptBlock: function(Pe, Fe, Le, We, rt, gt, kt, Ke) {
            for (var ht = this._nRounds, Nt = Pe[Fe] ^ Le[0], Ft = Pe[Fe + 1] ^ Le[1], At = Pe[Fe + 2] ^ Le[2], St = Pe[Fe + 3] ^ Le[3], Vt = 4, Xt = 1; Xt < ht; Xt++) {
              var Lt = We[Nt >>> 24] ^ rt[Ft >>> 16 & 255] ^ gt[At >>> 8 & 255] ^ kt[St & 255] ^ Le[Vt++], Zt = We[Ft >>> 24] ^ rt[At >>> 16 & 255] ^ gt[St >>> 8 & 255] ^ kt[Nt & 255] ^ Le[Vt++], Gt = We[At >>> 24] ^ rt[St >>> 16 & 255] ^ gt[Nt >>> 8 & 255] ^ kt[Ft & 255] ^ Le[Vt++], pt = We[St >>> 24] ^ rt[Nt >>> 16 & 255] ^ gt[Ft >>> 8 & 255] ^ kt[At & 255] ^ Le[Vt++];
              Nt = Lt, Ft = Zt, At = Gt, St = pt;
            }
            var Lt = (Ke[Nt >>> 24] << 24 | Ke[Ft >>> 16 & 255] << 16 | Ke[At >>> 8 & 255] << 8 | Ke[St & 255]) ^ Le[Vt++], Zt = (Ke[Ft >>> 24] << 24 | Ke[At >>> 16 & 255] << 16 | Ke[St >>> 8 & 255] << 8 | Ke[Nt & 255]) ^ Le[Vt++], Gt = (Ke[At >>> 24] << 24 | Ke[St >>> 16 & 255] << 16 | Ke[Nt >>> 8 & 255] << 8 | Ke[Ft & 255]) ^ Le[Vt++], pt = (Ke[St >>> 24] << 24 | Ke[Nt >>> 16 & 255] << 16 | Ke[Ft >>> 8 & 255] << 8 | Ke[At & 255]) ^ Le[Vt++];
            Pe[Fe] = Lt, Pe[Fe + 1] = Zt, Pe[Fe + 2] = Gt, Pe[Fe + 3] = pt;
          },
          keySize: 256 / 32
        });
        ie.AES = ce._createHelper(Ne);
      }(), ne.AES;
    });
  }(aes)), aes.exports;
}
var tripledes = { exports: {} }, hasRequiredTripledes;
function requireTripledes() {
  return hasRequiredTripledes || (hasRequiredTripledes = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.WordArray, he = oe.BlockCipher, fe = ie.algo, xe = [
          57,
          49,
          41,
          33,
          25,
          17,
          9,
          1,
          58,
          50,
          42,
          34,
          26,
          18,
          10,
          2,
          59,
          51,
          43,
          35,
          27,
          19,
          11,
          3,
          60,
          52,
          44,
          36,
          63,
          55,
          47,
          39,
          31,
          23,
          15,
          7,
          62,
          54,
          46,
          38,
          30,
          22,
          14,
          6,
          61,
          53,
          45,
          37,
          29,
          21,
          13,
          5,
          28,
          20,
          12,
          4
        ], Ae = [
          14,
          17,
          11,
          24,
          1,
          5,
          3,
          28,
          15,
          6,
          21,
          10,
          23,
          19,
          12,
          4,
          26,
          8,
          16,
          7,
          27,
          20,
          13,
          2,
          41,
          52,
          31,
          37,
          47,
          55,
          30,
          40,
          51,
          45,
          33,
          48,
          44,
          49,
          39,
          56,
          34,
          53,
          46,
          42,
          50,
          36,
          29,
          32
        ], Ee = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], ye = [
          {
            0: 8421888,
            268435456: 32768,
            536870912: 8421378,
            805306368: 2,
            1073741824: 512,
            1342177280: 8421890,
            1610612736: 8389122,
            1879048192: 8388608,
            2147483648: 514,
            2415919104: 8389120,
            2684354560: 33280,
            2952790016: 8421376,
            3221225472: 32770,
            3489660928: 8388610,
            3758096384: 0,
            4026531840: 33282,
            134217728: 0,
            402653184: 8421890,
            671088640: 33282,
            939524096: 32768,
            1207959552: 8421888,
            1476395008: 512,
            1744830464: 8421378,
            2013265920: 2,
            2281701376: 8389120,
            2550136832: 33280,
            2818572288: 8421376,
            3087007744: 8389122,
            3355443200: 8388610,
            3623878656: 32770,
            3892314112: 514,
            4160749568: 8388608,
            1: 32768,
            268435457: 2,
            536870913: 8421888,
            805306369: 8388608,
            1073741825: 8421378,
            1342177281: 33280,
            1610612737: 512,
            1879048193: 8389122,
            2147483649: 8421890,
            2415919105: 8421376,
            2684354561: 8388610,
            2952790017: 33282,
            3221225473: 514,
            3489660929: 8389120,
            3758096385: 32770,
            4026531841: 0,
            134217729: 8421890,
            402653185: 8421376,
            671088641: 8388608,
            939524097: 512,
            1207959553: 32768,
            1476395009: 8388610,
            1744830465: 2,
            2013265921: 33282,
            2281701377: 32770,
            2550136833: 8389122,
            2818572289: 514,
            3087007745: 8421888,
            3355443201: 8389120,
            3623878657: 0,
            3892314113: 33280,
            4160749569: 8421378
          },
          {
            0: 1074282512,
            16777216: 16384,
            33554432: 524288,
            50331648: 1074266128,
            67108864: 1073741840,
            83886080: 1074282496,
            100663296: 1073758208,
            117440512: 16,
            134217728: 540672,
            150994944: 1073758224,
            167772160: 1073741824,
            184549376: 540688,
            201326592: 524304,
            218103808: 0,
            234881024: 16400,
            251658240: 1074266112,
            8388608: 1073758208,
            25165824: 540688,
            41943040: 16,
            58720256: 1073758224,
            75497472: 1074282512,
            92274688: 1073741824,
            109051904: 524288,
            125829120: 1074266128,
            142606336: 524304,
            159383552: 0,
            176160768: 16384,
            192937984: 1074266112,
            209715200: 1073741840,
            226492416: 540672,
            243269632: 1074282496,
            260046848: 16400,
            268435456: 0,
            285212672: 1074266128,
            301989888: 1073758224,
            318767104: 1074282496,
            335544320: 1074266112,
            352321536: 16,
            369098752: 540688,
            385875968: 16384,
            402653184: 16400,
            419430400: 524288,
            436207616: 524304,
            452984832: 1073741840,
            469762048: 540672,
            486539264: 1073758208,
            503316480: 1073741824,
            520093696: 1074282512,
            276824064: 540688,
            293601280: 524288,
            310378496: 1074266112,
            327155712: 16384,
            343932928: 1073758208,
            360710144: 1074282512,
            377487360: 16,
            394264576: 1073741824,
            411041792: 1074282496,
            427819008: 1073741840,
            444596224: 1073758224,
            461373440: 524304,
            478150656: 0,
            494927872: 16400,
            511705088: 1074266128,
            528482304: 540672
          },
          {
            0: 260,
            1048576: 0,
            2097152: 67109120,
            3145728: 65796,
            4194304: 65540,
            5242880: 67108868,
            6291456: 67174660,
            7340032: 67174400,
            8388608: 67108864,
            9437184: 67174656,
            10485760: 65792,
            11534336: 67174404,
            12582912: 67109124,
            13631488: 65536,
            14680064: 4,
            15728640: 256,
            524288: 67174656,
            1572864: 67174404,
            2621440: 0,
            3670016: 67109120,
            4718592: 67108868,
            5767168: 65536,
            6815744: 65540,
            7864320: 260,
            8912896: 4,
            9961472: 256,
            11010048: 67174400,
            12058624: 65796,
            13107200: 65792,
            14155776: 67109124,
            15204352: 67174660,
            16252928: 67108864,
            16777216: 67174656,
            17825792: 65540,
            18874368: 65536,
            19922944: 67109120,
            20971520: 256,
            22020096: 67174660,
            23068672: 67108868,
            24117248: 0,
            25165824: 67109124,
            26214400: 67108864,
            27262976: 4,
            28311552: 65792,
            29360128: 67174400,
            30408704: 260,
            31457280: 65796,
            32505856: 67174404,
            17301504: 67108864,
            18350080: 260,
            19398656: 67174656,
            20447232: 0,
            21495808: 65540,
            22544384: 67109120,
            23592960: 256,
            24641536: 67174404,
            25690112: 65536,
            26738688: 67174660,
            27787264: 65796,
            28835840: 67108868,
            29884416: 67109124,
            30932992: 67174400,
            31981568: 4,
            33030144: 65792
          },
          {
            0: 2151682048,
            65536: 2147487808,
            131072: 4198464,
            196608: 2151677952,
            262144: 0,
            327680: 4198400,
            393216: 2147483712,
            458752: 4194368,
            524288: 2147483648,
            589824: 4194304,
            655360: 64,
            720896: 2147487744,
            786432: 2151678016,
            851968: 4160,
            917504: 4096,
            983040: 2151682112,
            32768: 2147487808,
            98304: 64,
            163840: 2151678016,
            229376: 2147487744,
            294912: 4198400,
            360448: 2151682112,
            425984: 0,
            491520: 2151677952,
            557056: 4096,
            622592: 2151682048,
            688128: 4194304,
            753664: 4160,
            819200: 2147483648,
            884736: 4194368,
            950272: 4198464,
            1015808: 2147483712,
            1048576: 4194368,
            1114112: 4198400,
            1179648: 2147483712,
            1245184: 0,
            1310720: 4160,
            1376256: 2151678016,
            1441792: 2151682048,
            1507328: 2147487808,
            1572864: 2151682112,
            1638400: 2147483648,
            1703936: 2151677952,
            1769472: 4198464,
            1835008: 2147487744,
            1900544: 4194304,
            1966080: 64,
            2031616: 4096,
            1081344: 2151677952,
            1146880: 2151682112,
            1212416: 0,
            1277952: 4198400,
            1343488: 4194368,
            1409024: 2147483648,
            1474560: 2147487808,
            1540096: 64,
            1605632: 2147483712,
            1671168: 4096,
            1736704: 2147487744,
            1802240: 2151678016,
            1867776: 4160,
            1933312: 2151682048,
            1998848: 4194304,
            2064384: 4198464
          },
          {
            0: 128,
            4096: 17039360,
            8192: 262144,
            12288: 536870912,
            16384: 537133184,
            20480: 16777344,
            24576: 553648256,
            28672: 262272,
            32768: 16777216,
            36864: 537133056,
            40960: 536871040,
            45056: 553910400,
            49152: 553910272,
            53248: 0,
            57344: 17039488,
            61440: 553648128,
            2048: 17039488,
            6144: 553648256,
            10240: 128,
            14336: 17039360,
            18432: 262144,
            22528: 537133184,
            26624: 553910272,
            30720: 536870912,
            34816: 537133056,
            38912: 0,
            43008: 553910400,
            47104: 16777344,
            51200: 536871040,
            55296: 553648128,
            59392: 16777216,
            63488: 262272,
            65536: 262144,
            69632: 128,
            73728: 536870912,
            77824: 553648256,
            81920: 16777344,
            86016: 553910272,
            90112: 537133184,
            94208: 16777216,
            98304: 553910400,
            102400: 553648128,
            106496: 17039360,
            110592: 537133056,
            114688: 262272,
            118784: 536871040,
            122880: 0,
            126976: 17039488,
            67584: 553648256,
            71680: 16777216,
            75776: 17039360,
            79872: 537133184,
            83968: 536870912,
            88064: 17039488,
            92160: 128,
            96256: 553910272,
            100352: 262272,
            104448: 553910400,
            108544: 0,
            112640: 553648128,
            116736: 16777344,
            120832: 262144,
            124928: 537133056,
            129024: 536871040
          },
          {
            0: 268435464,
            256: 8192,
            512: 270532608,
            768: 270540808,
            1024: 268443648,
            1280: 2097152,
            1536: 2097160,
            1792: 268435456,
            2048: 0,
            2304: 268443656,
            2560: 2105344,
            2816: 8,
            3072: 270532616,
            3328: 2105352,
            3584: 8200,
            3840: 270540800,
            128: 270532608,
            384: 270540808,
            640: 8,
            896: 2097152,
            1152: 2105352,
            1408: 268435464,
            1664: 268443648,
            1920: 8200,
            2176: 2097160,
            2432: 8192,
            2688: 268443656,
            2944: 270532616,
            3200: 0,
            3456: 270540800,
            3712: 2105344,
            3968: 268435456,
            4096: 268443648,
            4352: 270532616,
            4608: 270540808,
            4864: 8200,
            5120: 2097152,
            5376: 268435456,
            5632: 268435464,
            5888: 2105344,
            6144: 2105352,
            6400: 0,
            6656: 8,
            6912: 270532608,
            7168: 8192,
            7424: 268443656,
            7680: 270540800,
            7936: 2097160,
            4224: 8,
            4480: 2105344,
            4736: 2097152,
            4992: 268435464,
            5248: 268443648,
            5504: 8200,
            5760: 270540808,
            6016: 270532608,
            6272: 270540800,
            6528: 270532616,
            6784: 8192,
            7040: 2105352,
            7296: 2097160,
            7552: 0,
            7808: 268435456,
            8064: 268443656
          },
          {
            0: 1048576,
            16: 33555457,
            32: 1024,
            48: 1049601,
            64: 34604033,
            80: 0,
            96: 1,
            112: 34603009,
            128: 33555456,
            144: 1048577,
            160: 33554433,
            176: 34604032,
            192: 34603008,
            208: 1025,
            224: 1049600,
            240: 33554432,
            8: 34603009,
            24: 0,
            40: 33555457,
            56: 34604032,
            72: 1048576,
            88: 33554433,
            104: 33554432,
            120: 1025,
            136: 1049601,
            152: 33555456,
            168: 34603008,
            184: 1048577,
            200: 1024,
            216: 34604033,
            232: 1,
            248: 1049600,
            256: 33554432,
            272: 1048576,
            288: 33555457,
            304: 34603009,
            320: 1048577,
            336: 33555456,
            352: 34604032,
            368: 1049601,
            384: 1025,
            400: 34604033,
            416: 1049600,
            432: 1,
            448: 0,
            464: 34603008,
            480: 33554433,
            496: 1024,
            264: 1049600,
            280: 33555457,
            296: 34603009,
            312: 1,
            328: 33554432,
            344: 1048576,
            360: 1025,
            376: 34604032,
            392: 33554433,
            408: 34603008,
            424: 0,
            440: 34604033,
            456: 1049601,
            472: 1024,
            488: 33555456,
            504: 1048577
          },
          {
            0: 134219808,
            1: 131072,
            2: 134217728,
            3: 32,
            4: 131104,
            5: 134350880,
            6: 134350848,
            7: 2048,
            8: 134348800,
            9: 134219776,
            10: 133120,
            11: 134348832,
            12: 2080,
            13: 0,
            14: 134217760,
            15: 133152,
            2147483648: 2048,
            2147483649: 134350880,
            2147483650: 134219808,
            2147483651: 134217728,
            2147483652: 134348800,
            2147483653: 133120,
            2147483654: 133152,
            2147483655: 32,
            2147483656: 134217760,
            2147483657: 2080,
            2147483658: 131104,
            2147483659: 134350848,
            2147483660: 0,
            2147483661: 134348832,
            2147483662: 134219776,
            2147483663: 131072,
            16: 133152,
            17: 134350848,
            18: 32,
            19: 2048,
            20: 134219776,
            21: 134217760,
            22: 134348832,
            23: 131072,
            24: 0,
            25: 131104,
            26: 134348800,
            27: 134219808,
            28: 134350880,
            29: 133120,
            30: 2080,
            31: 134217728,
            2147483664: 131072,
            2147483665: 2048,
            2147483666: 134348832,
            2147483667: 133152,
            2147483668: 32,
            2147483669: 134348800,
            2147483670: 134217728,
            2147483671: 134219808,
            2147483672: 134350880,
            2147483673: 134217760,
            2147483674: 134219776,
            2147483675: 0,
            2147483676: 133120,
            2147483677: 2080,
            2147483678: 131104,
            2147483679: 134350848
          }
        ], ge = [
          4160749569,
          528482304,
          33030144,
          2064384,
          129024,
          8064,
          504,
          2147483679
        ], me = fe.DES = he.extend({
          _doReset: function() {
            for (var He = this._key, Ne = He.words, Pe = [], Fe = 0; Fe < 56; Fe++) {
              var Le = xe[Fe] - 1;
              Pe[Fe] = Ne[Le >>> 5] >>> 31 - Le % 32 & 1;
            }
            for (var We = this._subKeys = [], rt = 0; rt < 16; rt++) {
              for (var gt = We[rt] = [], kt = Ee[rt], Fe = 0; Fe < 24; Fe++)
                gt[Fe / 6 | 0] |= Pe[(Ae[Fe] - 1 + kt) % 28] << 31 - Fe % 6, gt[4 + (Fe / 6 | 0)] |= Pe[28 + (Ae[Fe + 24] - 1 + kt) % 28] << 31 - Fe % 6;
              gt[0] = gt[0] << 1 | gt[0] >>> 31;
              for (var Fe = 1; Fe < 7; Fe++)
                gt[Fe] = gt[Fe] >>> (Fe - 1) * 4 + 3;
              gt[7] = gt[7] << 5 | gt[7] >>> 27;
            }
            for (var Ke = this._invSubKeys = [], Fe = 0; Fe < 16; Fe++)
              Ke[Fe] = We[15 - Fe];
          },
          encryptBlock: function(He, Ne) {
            this._doCryptBlock(He, Ne, this._subKeys);
          },
          decryptBlock: function(He, Ne) {
            this._doCryptBlock(He, Ne, this._invSubKeys);
          },
          _doCryptBlock: function(He, Ne, Pe) {
            this._lBlock = He[Ne], this._rBlock = He[Ne + 1], Ce.call(this, 4, 252645135), Ce.call(this, 16, 65535), Ie.call(this, 2, 858993459), Ie.call(this, 8, 16711935), Ce.call(this, 1, 1431655765);
            for (var Fe = 0; Fe < 16; Fe++) {
              for (var Le = Pe[Fe], We = this._lBlock, rt = this._rBlock, gt = 0, kt = 0; kt < 8; kt++)
                gt |= ye[kt][((rt ^ Le[kt]) & ge[kt]) >>> 0];
              this._lBlock = rt, this._rBlock = We ^ gt;
            }
            var Ke = this._lBlock;
            this._lBlock = this._rBlock, this._rBlock = Ke, Ce.call(this, 1, 1431655765), Ie.call(this, 8, 16711935), Ie.call(this, 2, 858993459), Ce.call(this, 16, 65535), Ce.call(this, 4, 252645135), He[Ne] = this._lBlock, He[Ne + 1] = this._rBlock;
          },
          keySize: 64 / 32,
          ivSize: 64 / 32,
          blockSize: 64 / 32
        });
        function Ce(He, Ne) {
          var Pe = (this._lBlock >>> He ^ this._rBlock) & Ne;
          this._rBlock ^= Pe, this._lBlock ^= Pe << He;
        }
        function Ie(He, Ne) {
          var Pe = (this._rBlock >>> He ^ this._lBlock) & Ne;
          this._lBlock ^= Pe, this._rBlock ^= Pe << He;
        }
        ie.DES = he._createHelper(me);
        var Oe = fe.TripleDES = he.extend({
          _doReset: function() {
            var He = this._key, Ne = He.words;
            if (Ne.length !== 2 && Ne.length !== 4 && Ne.length < 6)
              throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
            var Pe = Ne.slice(0, 2), Fe = Ne.length < 4 ? Ne.slice(0, 2) : Ne.slice(2, 4), Le = Ne.length < 6 ? Ne.slice(0, 2) : Ne.slice(4, 6);
            this._des1 = me.createEncryptor(ce.create(Pe)), this._des2 = me.createEncryptor(ce.create(Fe)), this._des3 = me.createEncryptor(ce.create(Le));
          },
          encryptBlock: function(He, Ne) {
            this._des1.encryptBlock(He, Ne), this._des2.decryptBlock(He, Ne), this._des3.encryptBlock(He, Ne);
          },
          decryptBlock: function(He, Ne) {
            this._des3.decryptBlock(He, Ne), this._des2.encryptBlock(He, Ne), this._des1.decryptBlock(He, Ne);
          },
          keySize: 192 / 32,
          ivSize: 64 / 32,
          blockSize: 64 / 32
        });
        ie.TripleDES = he._createHelper(Oe);
      }(), ne.TripleDES;
    });
  }(tripledes)), tripledes.exports;
}
var rc4 = { exports: {} }, hasRequiredRc4;
function requireRc4() {
  return hasRequiredRc4 || (hasRequiredRc4 = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.StreamCipher, he = ie.algo, fe = he.RC4 = ce.extend({
          _doReset: function() {
            for (var Ee = this._key, ye = Ee.words, ge = Ee.sigBytes, me = this._S = [], Ce = 0; Ce < 256; Ce++)
              me[Ce] = Ce;
            for (var Ce = 0, Ie = 0; Ce < 256; Ce++) {
              var Oe = Ce % ge, He = ye[Oe >>> 2] >>> 24 - Oe % 4 * 8 & 255;
              Ie = (Ie + me[Ce] + He) % 256;
              var Ne = me[Ce];
              me[Ce] = me[Ie], me[Ie] = Ne;
            }
            this._i = this._j = 0;
          },
          _doProcessBlock: function(Ee, ye) {
            Ee[ye] ^= xe.call(this);
          },
          keySize: 256 / 32,
          ivSize: 0
        });
        function xe() {
          for (var Ee = this._S, ye = this._i, ge = this._j, me = 0, Ce = 0; Ce < 4; Ce++) {
            ye = (ye + 1) % 256, ge = (ge + Ee[ye]) % 256;
            var Ie = Ee[ye];
            Ee[ye] = Ee[ge], Ee[ge] = Ie, me |= Ee[(Ee[ye] + Ee[ge]) % 256] << 24 - Ce * 8;
          }
          return this._i = ye, this._j = ge, me;
        }
        ie.RC4 = ce._createHelper(fe);
        var Ae = he.RC4Drop = fe.extend({
          cfg: fe.cfg.extend({
            drop: 192
          }),
          _doReset: function() {
            fe._doReset.call(this);
            for (var Ee = this.cfg.drop; Ee > 0; Ee--)
              xe.call(this);
          }
        });
        ie.RC4Drop = ce._createHelper(Ae);
      }(), ne.RC4;
    });
  }(rc4)), rc4.exports;
}
var rabbit = { exports: {} }, hasRequiredRabbit;
function requireRabbit() {
  return hasRequiredRabbit || (hasRequiredRabbit = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.StreamCipher, he = ie.algo, fe = [], xe = [], Ae = [], Ee = he.Rabbit = ce.extend({
          _doReset: function() {
            for (var ge = this._key.words, me = this.cfg.iv, Ce = 0; Ce < 4; Ce++)
              ge[Ce] = (ge[Ce] << 8 | ge[Ce] >>> 24) & 16711935 | (ge[Ce] << 24 | ge[Ce] >>> 8) & 4278255360;
            var Ie = this._X = [
              ge[0],
              ge[3] << 16 | ge[2] >>> 16,
              ge[1],
              ge[0] << 16 | ge[3] >>> 16,
              ge[2],
              ge[1] << 16 | ge[0] >>> 16,
              ge[3],
              ge[2] << 16 | ge[1] >>> 16
            ], Oe = this._C = [
              ge[2] << 16 | ge[2] >>> 16,
              ge[0] & 4294901760 | ge[1] & 65535,
              ge[3] << 16 | ge[3] >>> 16,
              ge[1] & 4294901760 | ge[2] & 65535,
              ge[0] << 16 | ge[0] >>> 16,
              ge[2] & 4294901760 | ge[3] & 65535,
              ge[1] << 16 | ge[1] >>> 16,
              ge[3] & 4294901760 | ge[0] & 65535
            ];
            this._b = 0;
            for (var Ce = 0; Ce < 4; Ce++)
              ye.call(this);
            for (var Ce = 0; Ce < 8; Ce++)
              Oe[Ce] ^= Ie[Ce + 4 & 7];
            if (me) {
              var He = me.words, Ne = He[0], Pe = He[1], Fe = (Ne << 8 | Ne >>> 24) & 16711935 | (Ne << 24 | Ne >>> 8) & 4278255360, Le = (Pe << 8 | Pe >>> 24) & 16711935 | (Pe << 24 | Pe >>> 8) & 4278255360, We = Fe >>> 16 | Le & 4294901760, rt = Le << 16 | Fe & 65535;
              Oe[0] ^= Fe, Oe[1] ^= We, Oe[2] ^= Le, Oe[3] ^= rt, Oe[4] ^= Fe, Oe[5] ^= We, Oe[6] ^= Le, Oe[7] ^= rt;
              for (var Ce = 0; Ce < 4; Ce++)
                ye.call(this);
            }
          },
          _doProcessBlock: function(ge, me) {
            var Ce = this._X;
            ye.call(this), fe[0] = Ce[0] ^ Ce[5] >>> 16 ^ Ce[3] << 16, fe[1] = Ce[2] ^ Ce[7] >>> 16 ^ Ce[5] << 16, fe[2] = Ce[4] ^ Ce[1] >>> 16 ^ Ce[7] << 16, fe[3] = Ce[6] ^ Ce[3] >>> 16 ^ Ce[1] << 16;
            for (var Ie = 0; Ie < 4; Ie++)
              fe[Ie] = (fe[Ie] << 8 | fe[Ie] >>> 24) & 16711935 | (fe[Ie] << 24 | fe[Ie] >>> 8) & 4278255360, ge[me + Ie] ^= fe[Ie];
          },
          blockSize: 128 / 32,
          ivSize: 64 / 32
        });
        function ye() {
          for (var ge = this._X, me = this._C, Ce = 0; Ce < 8; Ce++)
            xe[Ce] = me[Ce];
          me[0] = me[0] + 1295307597 + this._b | 0, me[1] = me[1] + 3545052371 + (me[0] >>> 0 < xe[0] >>> 0 ? 1 : 0) | 0, me[2] = me[2] + 886263092 + (me[1] >>> 0 < xe[1] >>> 0 ? 1 : 0) | 0, me[3] = me[3] + 1295307597 + (me[2] >>> 0 < xe[2] >>> 0 ? 1 : 0) | 0, me[4] = me[4] + 3545052371 + (me[3] >>> 0 < xe[3] >>> 0 ? 1 : 0) | 0, me[5] = me[5] + 886263092 + (me[4] >>> 0 < xe[4] >>> 0 ? 1 : 0) | 0, me[6] = me[6] + 1295307597 + (me[5] >>> 0 < xe[5] >>> 0 ? 1 : 0) | 0, me[7] = me[7] + 3545052371 + (me[6] >>> 0 < xe[6] >>> 0 ? 1 : 0) | 0, this._b = me[7] >>> 0 < xe[7] >>> 0 ? 1 : 0;
          for (var Ce = 0; Ce < 8; Ce++) {
            var Ie = ge[Ce] + me[Ce], Oe = Ie & 65535, He = Ie >>> 16, Ne = ((Oe * Oe >>> 17) + Oe * He >>> 15) + He * He, Pe = ((Ie & 4294901760) * Ie | 0) + ((Ie & 65535) * Ie | 0);
            Ae[Ce] = Ne ^ Pe;
          }
          ge[0] = Ae[0] + (Ae[7] << 16 | Ae[7] >>> 16) + (Ae[6] << 16 | Ae[6] >>> 16) | 0, ge[1] = Ae[1] + (Ae[0] << 8 | Ae[0] >>> 24) + Ae[7] | 0, ge[2] = Ae[2] + (Ae[1] << 16 | Ae[1] >>> 16) + (Ae[0] << 16 | Ae[0] >>> 16) | 0, ge[3] = Ae[3] + (Ae[2] << 8 | Ae[2] >>> 24) + Ae[1] | 0, ge[4] = Ae[4] + (Ae[3] << 16 | Ae[3] >>> 16) + (Ae[2] << 16 | Ae[2] >>> 16) | 0, ge[5] = Ae[5] + (Ae[4] << 8 | Ae[4] >>> 24) + Ae[3] | 0, ge[6] = Ae[6] + (Ae[5] << 16 | Ae[5] >>> 16) + (Ae[4] << 16 | Ae[4] >>> 16) | 0, ge[7] = Ae[7] + (Ae[6] << 8 | Ae[6] >>> 24) + Ae[5] | 0;
        }
        ie.Rabbit = ce._createHelper(Ee);
      }(), ne.Rabbit;
    });
  }(rabbit)), rabbit.exports;
}
var rabbitLegacy = { exports: {} }, hasRequiredRabbitLegacy;
function requireRabbitLegacy() {
  return hasRequiredRabbitLegacy || (hasRequiredRabbitLegacy = 1, function(Z, ee) {
    (function(ne, ie, oe) {
      Z.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, oe = ie.lib, ce = oe.StreamCipher, he = ie.algo, fe = [], xe = [], Ae = [], Ee = he.RabbitLegacy = ce.extend({
          _doReset: function() {
            var ge = this._key.words, me = this.cfg.iv, Ce = this._X = [
              ge[0],
              ge[3] << 16 | ge[2] >>> 16,
              ge[1],
              ge[0] << 16 | ge[3] >>> 16,
              ge[2],
              ge[1] << 16 | ge[0] >>> 16,
              ge[3],
              ge[2] << 16 | ge[1] >>> 16
            ], Ie = this._C = [
              ge[2] << 16 | ge[2] >>> 16,
              ge[0] & 4294901760 | ge[1] & 65535,
              ge[3] << 16 | ge[3] >>> 16,
              ge[1] & 4294901760 | ge[2] & 65535,
              ge[0] << 16 | ge[0] >>> 16,
              ge[2] & 4294901760 | ge[3] & 65535,
              ge[1] << 16 | ge[1] >>> 16,
              ge[3] & 4294901760 | ge[0] & 65535
            ];
            this._b = 0;
            for (var Oe = 0; Oe < 4; Oe++)
              ye.call(this);
            for (var Oe = 0; Oe < 8; Oe++)
              Ie[Oe] ^= Ce[Oe + 4 & 7];
            if (me) {
              var He = me.words, Ne = He[0], Pe = He[1], Fe = (Ne << 8 | Ne >>> 24) & 16711935 | (Ne << 24 | Ne >>> 8) & 4278255360, Le = (Pe << 8 | Pe >>> 24) & 16711935 | (Pe << 24 | Pe >>> 8) & 4278255360, We = Fe >>> 16 | Le & 4294901760, rt = Le << 16 | Fe & 65535;
              Ie[0] ^= Fe, Ie[1] ^= We, Ie[2] ^= Le, Ie[3] ^= rt, Ie[4] ^= Fe, Ie[5] ^= We, Ie[6] ^= Le, Ie[7] ^= rt;
              for (var Oe = 0; Oe < 4; Oe++)
                ye.call(this);
            }
          },
          _doProcessBlock: function(ge, me) {
            var Ce = this._X;
            ye.call(this), fe[0] = Ce[0] ^ Ce[5] >>> 16 ^ Ce[3] << 16, fe[1] = Ce[2] ^ Ce[7] >>> 16 ^ Ce[5] << 16, fe[2] = Ce[4] ^ Ce[1] >>> 16 ^ Ce[7] << 16, fe[3] = Ce[6] ^ Ce[3] >>> 16 ^ Ce[1] << 16;
            for (var Ie = 0; Ie < 4; Ie++)
              fe[Ie] = (fe[Ie] << 8 | fe[Ie] >>> 24) & 16711935 | (fe[Ie] << 24 | fe[Ie] >>> 8) & 4278255360, ge[me + Ie] ^= fe[Ie];
          },
          blockSize: 128 / 32,
          ivSize: 64 / 32
        });
        function ye() {
          for (var ge = this._X, me = this._C, Ce = 0; Ce < 8; Ce++)
            xe[Ce] = me[Ce];
          me[0] = me[0] + 1295307597 + this._b | 0, me[1] = me[1] + 3545052371 + (me[0] >>> 0 < xe[0] >>> 0 ? 1 : 0) | 0, me[2] = me[2] + 886263092 + (me[1] >>> 0 < xe[1] >>> 0 ? 1 : 0) | 0, me[3] = me[3] + 1295307597 + (me[2] >>> 0 < xe[2] >>> 0 ? 1 : 0) | 0, me[4] = me[4] + 3545052371 + (me[3] >>> 0 < xe[3] >>> 0 ? 1 : 0) | 0, me[5] = me[5] + 886263092 + (me[4] >>> 0 < xe[4] >>> 0 ? 1 : 0) | 0, me[6] = me[6] + 1295307597 + (me[5] >>> 0 < xe[5] >>> 0 ? 1 : 0) | 0, me[7] = me[7] + 3545052371 + (me[6] >>> 0 < xe[6] >>> 0 ? 1 : 0) | 0, this._b = me[7] >>> 0 < xe[7] >>> 0 ? 1 : 0;
          for (var Ce = 0; Ce < 8; Ce++) {
            var Ie = ge[Ce] + me[Ce], Oe = Ie & 65535, He = Ie >>> 16, Ne = ((Oe * Oe >>> 17) + Oe * He >>> 15) + He * He, Pe = ((Ie & 4294901760) * Ie | 0) + ((Ie & 65535) * Ie | 0);
            Ae[Ce] = Ne ^ Pe;
          }
          ge[0] = Ae[0] + (Ae[7] << 16 | Ae[7] >>> 16) + (Ae[6] << 16 | Ae[6] >>> 16) | 0, ge[1] = Ae[1] + (Ae[0] << 8 | Ae[0] >>> 24) + Ae[7] | 0, ge[2] = Ae[2] + (Ae[1] << 16 | Ae[1] >>> 16) + (Ae[0] << 16 | Ae[0] >>> 16) | 0, ge[3] = Ae[3] + (Ae[2] << 8 | Ae[2] >>> 24) + Ae[1] | 0, ge[4] = Ae[4] + (Ae[3] << 16 | Ae[3] >>> 16) + (Ae[2] << 16 | Ae[2] >>> 16) | 0, ge[5] = Ae[5] + (Ae[4] << 8 | Ae[4] >>> 24) + Ae[3] | 0, ge[6] = Ae[6] + (Ae[5] << 16 | Ae[5] >>> 16) + (Ae[4] << 16 | Ae[4] >>> 16) | 0, ge[7] = Ae[7] + (Ae[6] << 8 | Ae[6] >>> 24) + Ae[5] | 0;
        }
        ie.RabbitLegacy = ce._createHelper(Ee);
      }(), ne.RabbitLegacy;
    });
  }(rabbitLegacy)), rabbitLegacy.exports;
}
(function(Z, ee) {
  (function(ne, ie, oe) {
    Z.exports = ie(requireCore(), requireX64Core(), requireLibTypedarrays(), requireEncUtf16(), requireEncBase64(), requireEncBase64url(), requireMd5(), requireSha1(), requireSha256(), requireSha224(), requireSha512(), requireSha384(), requireSha3(), requireRipemd160(), requireHmac(), requirePbkdf2(), requireEvpkdf(), requireCipherCore(), requireModeCfb(), requireModeCtr(), requireModeCtrGladman(), requireModeOfb(), requireModeEcb(), requirePadAnsix923(), requirePadIso10126(), requirePadIso97971(), requirePadZeropadding(), requirePadNopadding(), requireFormatHex(), requireAes(), requireTripledes(), requireRc4(), requireRabbit(), requireRabbitLegacy());
  })(commonjsGlobal, function(ne) {
    return ne;
  });
})(cryptoJs);
var Buffer$1 = buffer$1.Buffer, CRC_TABLE = [
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
];
typeof Int32Array < "u" && (CRC_TABLE = new Int32Array(CRC_TABLE));
function ensureBuffer(Z) {
  if (Buffer$1.isBuffer(Z))
    return Z;
  var ee = typeof Buffer$1.alloc == "function" && typeof Buffer$1.from == "function";
  if (typeof Z == "number")
    return ee ? Buffer$1.alloc(Z) : new Buffer$1(Z);
  if (typeof Z == "string")
    return ee ? Buffer$1.from(Z) : new Buffer$1(Z);
  throw new Error("input must be buffer, number, or string, received " + typeof Z);
}
function bufferizeInt(Z) {
  var ee = ensureBuffer(4);
  return ee.writeInt32BE(Z, 0), ee;
}
function _crc32(Z, ee) {
  Z = ensureBuffer(Z), Buffer$1.isBuffer(ee) && (ee = ee.readUInt32BE(0));
  for (var ne = ~~ee ^ -1, ie = 0; ie < Z.length; ie++)
    ne = CRC_TABLE[(ne ^ Z[ie]) & 255] ^ ne >>> 8;
  return ne ^ -1;
}
function crc32() {
  return bufferizeInt(_crc32.apply(null, arguments));
}
crc32.signed = function() {
  return _crc32.apply(null, arguments);
};
crc32.unsigned = function() {
  return _crc32.apply(null, arguments) >>> 0;
};
var bufferCrc32 = crc32, __importDefault$8 = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(account, "__esModule", { value: !0 });
account.getAccountId = void 0;
const crypto_js_1 = __importDefault$8(cryptoJs.exports), buffer_crc32_1 = __importDefault$8(bufferCrc32), ACCOUNT_DOMAIN_SEPERATOR = `
account-id`, SUB_ACCOUNT_ZERO = Buffer.alloc(32), byteArrayToWordArray = (Z) => {
  const ee = [];
  let ne;
  for (ne = 0; ne < Z.length; ne += 1)
    ee[ne / 4 | 0] |= Z[ne] << 24 - 8 * ne;
  return crypto_js_1.default.lib.WordArray.create(ee, Z.length);
}, wordToByteArray = (Z, ee) => {
  const ne = [];
  return ee > 0 && ne.push(Z >>> 24), ee > 1 && ne.push(Z >>> 16 & 255), ee > 2 && ne.push(Z >>> 8 & 255), ee > 3 && ne.push(Z & 255), ne;
}, wordArrayToByteArray = (Z, ee) => {
  Z.hasOwnProperty("sigBytes") && Z.hasOwnProperty("words") && (ee = Z.sigBytes, Z = Z.words);
  let ne = [], ie, oe = 0;
  for (; ee > 0; )
    ie = wordToByteArray(Z[oe], Math.min(4, ee)), ee -= ie.length, ne = [...ne, ie], oe++;
  return [].concat.apply([], ne);
}, intToHex = (Z) => Z < 0 ? (Number(Z) >>> 0).toString(16) : Number(Z).toString(16), generateChecksum = (Z) => {
  const ee = buffer_crc32_1.default.unsigned(Buffer.from(Z));
  return intToHex(ee).padStart(8, "0");
}, getAccountId = (Z, ee) => {
  const ne = crypto_js_1.default.algo.SHA224.create();
  ne.update(ACCOUNT_DOMAIN_SEPERATOR), ne.update(byteArrayToWordArray(Z.toUint8Array()));
  const ie = Buffer.from(SUB_ACCOUNT_ZERO);
  ee && ie.writeUInt32BE(ee), ne.update(byteArrayToWordArray(ie));
  const oe = ne.finalize(), ce = wordArrayToByteArray(oe, 28);
  return generateChecksum(ce) + oe.toString();
};
account.getAccountId = getAccountId;
account.default = {};
var number = {};
Object.defineProperty(number, "__esModule", { value: !0 });
number.from32bits = number.to32bits = void 0;
const to32bits = (Z) => {
  const ee = new ArrayBuffer(4);
  return new DataView(ee).setUint32(0, Z), Array.from(new Uint8Array(ee));
};
number.to32bits = to32bits;
const from32bits = (Z) => {
  let ee;
  for (let ne = 0; ne < 4; ne += 1)
    ee = ee << 8 | Z[ne];
  return ee;
};
number.from32bits = from32bits;
var canisters = {};
Object.defineProperty(canisters, "__esModule", { value: !0 });
canisters.NFT_CANISTERS = void 0;
canisters.NFT_CANISTERS = {
  WRAPPED_PUNKS: "bxdf4-baaaa-aaaah-qaruq-cai",
  WRAPPED_DRIP: "3db6u-aiaaa-aaaah-qbjbq-cai",
  IC_PUNKS: "qcg3w-tyaaa-aaaah-qakea-cai",
  IC_DRIP: "d3ttm-qaaaa-aaaai-qam4a-cai",
  ICP_BUNNY_MAIN: "xkbqi-2qaaa-aaaah-qbpqq-cai",
  ICP_BUNNY_STORAGE: [
    "efqhu-yqaaa-aaaaf-qaeda-cai",
    "ecrba-viaaa-aaaaf-qaedq-cai",
    "fp7fo-2aaaa-aaaaf-qaeea-cai",
    "fi6d2-xyaaa-aaaaf-qaeeq-cai",
    "fb5ig-bqaaa-aaaaf-qaefa-cai",
    "fg4os-miaaa-aaaaf-qaefq-cai",
    "ft377-naaaa-aaaaf-qaega-cai",
    "fu2zl-ayaaa-aaaaf-qaegq-cai",
    "f5zsx-wqaaa-aaaaf-qaeha-cai",
    "f2yud-3iaaa-aaaaf-qaehq-cai"
  ]
};
var standards = {};
(function(Z) {
  Object.defineProperty(Z, "__esModule", { value: !0 }), Z.NFT = Z.TOKEN = void 0, Z.TOKEN = {
    dip20: "DIP20",
    xtc: "XTC",
    wicp: "WICP",
    ext: "EXT",
    icp: "ICP",
    rosetta: "ROSETTA"
  }, Z.NFT = {
    ext: "EXT",
    icpunks: "ICPunks",
    departuresLabs: "DepartureLabs",
    erc721: "ERC721",
    dip721: "DIP721",
    c3: "C3",
    nftOrigyn: "nftOrigyn"
  }, Z.default = {
    TOKEN: Z.TOKEN,
    NFT: Z.NFT
  };
})(standards);
var __awaiter$c = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __importDefault$7 = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(ext, "__esModule", { value: !0 });
const agent_1$7 = require$$0$2, principal_1$6 = require$$0$1, ext_did_1 = __importDefault$7(ext_did), default_1$5 = __importDefault$7(_default), account_1$1 = account, number_1 = number, canisters_1$1 = canisters, standards_1$5 = standards, getTokenIdentifier = (Z, ee) => {
  const ne = Buffer.from(`
tid`), ie = new Uint8Array([
    ...ne,
    ...principal_1$6.Principal.fromText(Z).toUint8Array(),
    ...(0, number_1.to32bits)(ee)
  ]);
  return principal_1$6.Principal.fromUint8Array(ie).toText();
}, extImageUrl = (Z, ee, ne) => ({
  [canisters_1$1.NFT_CANISTERS.WRAPPED_PUNKS]: `https://${canisters_1$1.NFT_CANISTERS.IC_PUNKS}.raw.ic0.app/Token/${ee}`,
  [canisters_1$1.NFT_CANISTERS.WRAPPED_DRIP]: `https://${canisters_1$1.NFT_CANISTERS.IC_DRIP}.raw.ic0.app?tokenId=${ee}`
})[Z] || `https://${Z}.raw.ic0.app/?type=thumbnail&tokenid=${ne}`;
class EXT extends default_1$5.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$5.NFT.ext, this.actor = agent_1$7.Actor.createActor(ext_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getUserTokens(ee) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ne = (0, account_1$1.getAccountId)(ee), ie = yield this.actor.tokens_ext(ne);
      if ("err" in ie)
        throw new Error(`${Object.keys(ie.err)[0]}: ${Object.values(ie.err)[0]}`);
      return (ie.ok || []).map((ce) => {
        const he = ce[2], fe = ce[0];
        return this.serializeTokenData(he, getTokenIdentifier(this.canisterId, fe), fe);
      });
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  transfer(ee, ne) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ie = getTokenIdentifier(this.canisterId, ne), oe = yield this.agent.getPrincipal(), ce = new Array(32).fill(0), he = yield this.actor.transfer({
        to: { principal: ee },
        from: { principal: oe },
        token: ie,
        amount: BigInt(1),
        memo: ce,
        notify: !1,
        subaccount: [],
        fee: BigInt(0)
      });
      if ("err" in he)
        throw new Error(`${Object.keys(he.err)[0]}: ${Object.values(he.err)[0]}`);
    });
  }
  details(ee) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ne = getTokenIdentifier(this.canisterId, ee), ie = yield this.actor.metadata(ne);
      if ("err" in ie)
        throw new Error(`${Object.keys(ie.err)[0]}: ${Object.values(ie.err)[0]}`);
      const { metadata: oe = {} } = "nonfungible" in ie.ok ? ie.ok.nonfungible : {};
      return this.serializeTokenData(oe, ne, ee);
    });
  }
  serializeTokenData(ee, ne, ie) {
    return {
      id: ne,
      index: BigInt(ie),
      canister: this.canisterId,
      metadata: ee.length ? ee[0] : void 0,
      url: extImageUrl(this.canisterId, ie, ne),
      standard: this.standard
    };
  }
}
ext.default = EXT;
var ic_punks = {}, icpunks_did = {};
Object.defineProperty(icpunks_did, "__esModule", { value: !0 });
icpunks_did.init = void 0;
icpunks_did.default = ({ IDL: Z }) => {
  const ee = Z.Record({ value: Z.Text, name: Z.Text }), ne = Z.Record({
    id: Z.Nat,
    url: Z.Text,
    owner: Z.Principal,
    desc: Z.Text,
    name: Z.Text,
    properties: Z.Vec(ee)
  }), ie = Z.Nat;
  return Z.Service({
    data_of: Z.Func([ie], [ne], []),
    transfer_to: Z.Func([Z.Principal, ie], [Z.Bool], []),
    user_tokens: Z.Func([Z.Principal], [Z.Vec(Z.Nat)], [])
  });
};
const init$b = ({ IDL: Z }) => [Z.Text, Z.Text, Z.Nat, Z.Principal];
icpunks_did.init = init$b;
var __awaiter$b = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __importDefault$6 = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(ic_punks, "__esModule", { value: !0 });
const agent_1$6 = require$$0$2, icpunks_did_1 = __importDefault$6(icpunks_did), default_1$4 = __importDefault$6(_default), canisters_1 = canisters, standards_1$4 = standards, getICPBunnyCanisterId = (Z) => canisters_1.NFT_CANISTERS.ICP_BUNNY_STORAGE[Z % 10], imageUrl = (Z, ee, ne) => ({
  [canisters_1.NFT_CANISTERS.ICP_BUNNY_MAIN]: `https://${getICPBunnyCanisterId(ee)}.raw.ic0.app/Token/${ee}`
})[Z] || `https://${Z}.raw.ic0.app${ne}`;
class ICPUNKS extends default_1$4.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$4.NFT.icpunks, this.serializeTokenData = (ie) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: imageUrl(this.canisterId, Number.parseInt(ie.id.toString(), 10), ie.url),
      name: ie.name,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$6.Actor.createActor(icpunks_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$b(this, void 0, void 0, function* () {
      const ne = yield this.actor.user_tokens(ee);
      return (yield Promise.all(ne.map((oe) => this.actor.data_of(oe)))).map((oe) => this.serializeTokenData(oe));
    });
  }
  transfer(ee, ne) {
    return __awaiter$b(this, void 0, void 0, function* () {
      if (!(yield this.actor.transfer_to(ee, BigInt(ne))))
        throw new Error("Error transfering token");
    });
  }
  details(ee) {
    return __awaiter$b(this, void 0, void 0, function* () {
      const ne = yield this.actor.data_of(BigInt(ee));
      return this.serializeTokenData(ne);
    });
  }
}
ic_punks.default = ICPUNKS;
var nft_origyn = {}, nft_origyn_did = {};
Object.defineProperty(nft_origyn_did, "__esModule", { value: !0 });
nft_origyn_did.init = void 0;
nft_origyn_did.default = ({ IDL: Z }) => {
  const ee = Z.Rec(), ne = Z.Rec(), ie = Z.Principal;
  Z.Record({
    owner: ie,
    storage_space: Z.Opt(Z.Nat)
  });
  const oe = Z.Text, ce = Z.Text, he = Z.Variant({
    principal: Z.Principal,
    address: ce
  }), fe = Z.Record({
    token: oe,
    user: he
  }), xe = Z.Nat, Ae = Z.Variant({
    InvalidToken: oe,
    Other: Z.Text
  }), Ee = Z.Variant({
    ok: xe,
    err: Ae
  }), ye = Z.Record({
    value: ee,
    name: Z.Text,
    immutable: Z.Bool
  });
  ee.fill(Z.Variant({
    Int: Z.Int,
    Nat: Z.Nat,
    Empty: Z.Null,
    Nat16: Z.Nat16,
    Nat32: Z.Nat32,
    Nat64: Z.Nat64,
    Blob: Z.Vec(Z.Nat8),
    Bool: Z.Bool,
    Int8: Z.Int8,
    Nat8: Z.Nat8,
    Nats: Z.Variant({
      thawed: Z.Vec(Z.Nat),
      frozen: Z.Vec(Z.Nat)
    }),
    Text: Z.Text,
    Bytes: Z.Variant({
      thawed: Z.Vec(Z.Nat8),
      frozen: Z.Vec(Z.Nat8)
    }),
    Int16: Z.Int16,
    Int32: Z.Int32,
    Int64: Z.Int64,
    Option: Z.Opt(ee),
    Floats: Z.Variant({
      thawed: Z.Vec(Z.Float64),
      frozen: Z.Vec(Z.Float64)
    }),
    Float: Z.Float64,
    Principal: Z.Principal,
    Array: Z.Variant({
      thawed: Z.Vec(ee),
      frozen: Z.Vec(ee)
    }),
    Class: Z.Vec(ye)
  }));
  const ge = Z.Variant({
    account_id: Z.Text,
    principal: Z.Principal,
    extensible: ee
  }), me = Z.Record({
    fee: Z.Nat,
    decimals: Z.Nat,
    canister: Z.Principal,
    standard: Z.Variant({
      EXTFungible: Z.Null,
      DIP20: Z.Null,
      Ledger: Z.Null
    }),
    symbol: Z.Text
  }), Ce = Z.Variant({
    ic: me,
    extensible: ee
  }), Ie = Z.Record({
    token: Ce,
    token_id: Z.Text,
    seller: ge,
    lock_to_date: Z.Opt(Z.Int),
    buyer: ge,
    amount: Z.Nat,
    sale_id: Z.Opt(Z.Text)
  }), Oe = Z.Record({
    staker: ge,
    token_id: Z.Text,
    amount: Z.Nat
  }), He = Z.Record({
    nfts: Z.Vec(Z.Text),
    sales: Z.Vec(Ie),
    stake: Z.Vec(Oe),
    multi_canister: Z.Opt(Z.Vec(Z.Principal)),
    escrow: Z.Vec(Ie)
  }), Ne = Z.Variant({
    nyi: Z.Null,
    storage_configuration_error: Z.Null,
    escrow_withdraw_payment_failed: Z.Null,
    token_not_found: Z.Null,
    owner_not_found: Z.Null,
    content_not_found: Z.Null,
    auction_ended: Z.Null,
    out_of_range: Z.Null,
    sale_id_does_not_match: Z.Null,
    sale_not_found: Z.Null,
    item_not_owned: Z.Null,
    property_not_found: Z.Null,
    validate_trx_wrong_host: Z.Null,
    withdraw_too_large: Z.Null,
    content_not_deserializable: Z.Null,
    bid_too_low: Z.Null,
    validate_deposit_wrong_amount: Z.Null,
    existing_sale_found: Z.Null,
    asset_mismatch: Z.Null,
    escrow_cannot_be_removed: Z.Null,
    deposit_burned: Z.Null,
    cannot_restage_minted_token: Z.Null,
    cannot_find_status_in_metadata: Z.Null,
    receipt_data_mismatch: Z.Null,
    validate_deposit_failed: Z.Null,
    unauthorized_access: Z.Null,
    item_already_minted: Z.Null,
    no_escrow_found: Z.Null,
    escrow_owner_not_the_owner: Z.Null,
    improper_interface: Z.Null,
    app_id_not_found: Z.Null,
    token_non_transferable: Z.Null,
    sale_not_over: Z.Null,
    update_class_error: Z.Null,
    malformed_metadata: Z.Null,
    token_id_mismatch: Z.Null,
    id_not_found_in_metadata: Z.Null,
    auction_not_started: Z.Null,
    library_not_found: Z.Null,
    attempt_to_stage_system_data: Z.Null,
    validate_deposit_wrong_buyer: Z.Null,
    not_enough_storage: Z.Null,
    sales_withdraw_payment_failed: Z.Null
  }), Pe = Z.Record({
    text: Z.Text,
    error: Ne,
    number: Z.Nat32,
    flag_point: Z.Text
  }), Fe = Z.Variant({
    ok: He,
    err: Pe
  }), Le = Z.Variant({
    ok: ce,
    err: Ae
  }), We = Z.Variant({ ok: ge, err: Pe }), rt = Z.Record({
    token: Ce,
    token_id: Z.Text,
    seller: ge,
    buyer: ge,
    amount: Z.Nat
  }), gt = Z.Record({
    escrow_receipt: rt,
    sale_id: Z.Text
  }), kt = Z.Variant({
    nat: Z.Nat,
    text: Z.Text,
    extensible: ee
  }), Ke = Z.Record({
    start_price: Z.Nat,
    token: Ce,
    reserve: Z.Opt(Z.Nat),
    start_date: Z.Int,
    min_increase: Z.Variant({
      amount: Z.Nat,
      percentage: Z.Float64
    }),
    allow_list: Z.Opt(Z.Vec(Z.Principal)),
    buy_now: Z.Opt(Z.Nat),
    ending: Z.Variant({
      waitForQuiet: Z.Record({
        max: Z.Nat,
        date: Z.Int,
        fade: Z.Float64,
        extention: Z.Nat64
      }),
      date: Z.Int
    })
  }), ht = Z.Variant({
    flat: Z.Record({ token: Ce, amount: Z.Nat }),
    extensible: Z.Variant({ candyClass: Z.Null }),
    instant: Z.Null,
    auction: Ke,
    dutch: Z.Record({
      start_price: Z.Nat,
      reserve: Z.Opt(Z.Nat),
      decay_per_hour: Z.Float64
    })
  }), Nt = Z.Record({
    token_id: Z.Text,
    txn_type: Z.Variant({
      escrow_deposit: Z.Record({
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_network_updated: Z.Record({
        network: Z.Principal,
        extensible: ee
      }),
      escrow_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_managers_updated: Z.Record({
        managers: Z.Vec(Z.Principal),
        extensible: ee
      }),
      auction_bid: Z.Record({
        token: Ce,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Text
      }),
      burn: Z.Null,
      data: Z.Null,
      sale_ended: Z.Record({
        token: Ce,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Opt(Z.Text)
      }),
      mint: Z.Record({
        to: ge,
        from: ge,
        sale: Z.Opt(Z.Record({ token: Ce, amount: Z.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Z.Record({
        to: ge,
        from: ge,
        extensible: ee
      }),
      sale_opened: Z.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Z.Text
      }),
      canister_owner_updated: Z.Record({
        owner: Z.Principal,
        extensible: ee
      }),
      sale_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      })
    }),
    timestamp: Z.Int,
    index: Z.Nat
  }), Ft = Z.Variant({ ok: Nt, err: Pe }), At = Z.Principal, St = Z.Record({
    freezing_threshold: Z.Nat,
    controllers: Z.Opt(Z.Vec(Z.Principal)),
    memory_allocation: Z.Nat,
    compute_allocation: Z.Nat
  }), Vt = Z.Record({
    status: Z.Variant({
      stopped: Z.Null,
      stopping: Z.Null,
      running: Z.Null
    }),
    memory_size: Z.Nat,
    cycles: Z.Nat,
    settings: St,
    module_hash: Z.Opt(Z.Vec(Z.Nat8))
  }), Xt = Z.Record({
    token_id: Z.Text,
    chunk: Z.Opt(Z.Nat),
    library_id: Z.Text
  }), Lt = Z.Record({
    allocated_space: Z.Nat,
    token_id: Z.Text,
    available_space: Z.Nat,
    canister: Z.Principal,
    chunks: Z.Vec(Z.Nat),
    library_id: Z.Text
  }), Zt = Z.Variant({
    remote: Z.Record({
      args: Xt,
      canister: Z.Principal
    }),
    chunk: Z.Record({
      total_chunks: Z.Nat,
      content: Z.Vec(Z.Nat8),
      storage_allocation: Lt,
      current_chunk: Z.Opt(Z.Nat)
    })
  }), Gt = Z.Variant({ ok: Zt, err: Pe }), pt = Z.Record({
    multi_canister_count: Z.Opt(Z.Nat),
    managers: Z.Opt(Z.Vec(Z.Principal)),
    owner: Z.Opt(Z.Principal),
    metadata: Z.Opt(ee),
    logo: Z.Opt(Z.Text),
    name: Z.Opt(Z.Text),
    network: Z.Opt(Z.Principal),
    fields: Z.Opt(Z.Vec(Z.Tuple(Z.Text, Z.Opt(Z.Nat), Z.Opt(Z.Nat)))),
    token_ids_count: Z.Opt(Z.Nat),
    available_space: Z.Opt(Z.Nat),
    multi_canister: Z.Opt(Z.Vec(Z.Principal)),
    token_ids: Z.Opt(Z.Vec(Z.Text)),
    total_supply: Z.Opt(Z.Nat),
    symbol: Z.Opt(Z.Text),
    allocated_storage: Z.Opt(Z.Nat)
  }), It = Z.Variant({ ok: pt, err: Pe }), qt = Z.Variant({
    metadata: Z.Opt(ee),
    logo: Z.Opt(Z.Text),
    name: Z.Opt(Z.Text),
    symbol: Z.Opt(Z.Text)
  }), De = Z.Vec(qt), ar = Z.Variant({ ok: Z.Bool, err: Pe }), rr = Z.Record({
    data: ee,
    event: Z.Text,
    timestamp: Z.Int,
    caller: Z.Opt(Z.Principal)
  }), Ar = Z.Record({
    token_id: Z.Text,
    txn_type: Z.Variant({
      escrow_deposit: Z.Record({
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_network_updated: Z.Record({
        network: Z.Principal,
        extensible: ee
      }),
      escrow_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_managers_updated: Z.Record({
        managers: Z.Vec(Z.Principal),
        extensible: ee
      }),
      auction_bid: Z.Record({
        token: Ce,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Text
      }),
      burn: Z.Null,
      data: Z.Null,
      sale_ended: Z.Record({
        token: Ce,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Opt(Z.Text)
      }),
      mint: Z.Record({
        to: ge,
        from: ge,
        sale: Z.Opt(Z.Record({ token: Ce, amount: Z.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Z.Record({
        to: ge,
        from: ge,
        extensible: ee
      }),
      sale_opened: Z.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Z.Text
      }),
      canister_owner_updated: Z.Record({
        owner: Z.Principal,
        extensible: ee
      }),
      sale_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      })
    }),
    timestamp: Z.Int,
    index: Z.Nat
  }), vt = Z.Variant({
    ok: Ar,
    err: Pe
  }), Ut = Z.Record({
    token: Ce,
    trx_id: kt,
    seller: ge,
    buyer: ge,
    amount: Z.Nat,
    sale_id: Z.Opt(Z.Text)
  }), Xe = Z.Record({
    token_id: Z.Text,
    deposit: Ut,
    lock_to_date: Z.Opt(Z.Int)
  }), tt = Z.Record({
    token_id: Z.Text,
    txn_type: Z.Variant({
      escrow_deposit: Z.Record({
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_network_updated: Z.Record({
        network: Z.Principal,
        extensible: ee
      }),
      escrow_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_managers_updated: Z.Record({
        managers: Z.Vec(Z.Principal),
        extensible: ee
      }),
      auction_bid: Z.Record({
        token: Ce,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Text
      }),
      burn: Z.Null,
      data: Z.Null,
      sale_ended: Z.Record({
        token: Ce,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Opt(Z.Text)
      }),
      mint: Z.Record({
        to: ge,
        from: ge,
        sale: Z.Opt(Z.Record({ token: Ce, amount: Z.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Z.Record({
        to: ge,
        from: ge,
        extensible: ee
      }),
      sale_opened: Z.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Z.Text
      }),
      canister_owner_updated: Z.Record({
        owner: Z.Principal,
        extensible: ee
      }),
      sale_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      })
    }),
    timestamp: Z.Int,
    index: Z.Nat
  }), et = Z.Record({
    balance: Z.Nat,
    receipt: rt,
    transaction: tt
  }), Et = Z.Variant({ ok: et, err: Pe }), lt = Z.Variant({ ok: Z.Text, err: Pe }), $e = Z.Record({
    available_space: Z.Nat,
    allocated_storage: Z.Nat
  }), _e = Z.Variant({ ok: $e, err: Pe }), Be = Z.Variant({
    ok: Z.Vec(tt),
    err: Pe
  }), be = Z.Tuple(Z.Text, Z.Text), ke = Z.Record({
    url: Z.Text,
    method: Z.Text,
    body: Z.Vec(Z.Nat8),
    headers: Z.Vec(be)
  }), Ve = Z.Tuple(Z.Text, Z.Text), Je = Z.Record({
    key: Z.Text,
    index: Z.Nat,
    content_encoding: Z.Text
  }), at = Z.Variant({
    Callback: Z.Record({
      token: Je,
      callback: Z.Func([], [], [])
    })
  }), Tt = Z.Record({
    body: Z.Vec(Z.Nat8),
    headers: Z.Vec(Ve),
    streaming_strategy: Z.Opt(at),
    status_code: Z.Nat16
  }), Dt = Z.Record({
    token: Z.Opt(Je),
    body: Z.Vec(Z.Nat8)
  }), zt = Z.Variant({
    UpdateOwner: Z.Principal,
    UpdateManagers: Z.Vec(Z.Principal),
    UpdateNetwork: Z.Opt(Z.Principal)
  }), Yt = Z.Variant({
    add_storage_canisters: Z.Vec(Z.Tuple(Z.Principal, Z.Nat, Z.Tuple(Z.Nat, Z.Nat, Z.Nat)))
  }), Ue = Z.Variant({
    add_storage_canisters: Z.Tuple(Z.Nat, Z.Nat)
  }), Te = Z.Variant({
    ok: Ue,
    err: Pe
  }), Re = Z.Record({
    pricing: ht,
    escrow_receipt: Z.Opt(rt)
  }), it = Z.Record({
    token_id: Z.Text,
    sales_config: Re
  }), bt = Z.Record({
    token_id: Z.Text,
    txn_type: Z.Variant({
      escrow_deposit: Z.Record({
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_network_updated: Z.Record({
        network: Z.Principal,
        extensible: ee
      }),
      escrow_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_managers_updated: Z.Record({
        managers: Z.Vec(Z.Principal),
        extensible: ee
      }),
      auction_bid: Z.Record({
        token: Ce,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Text
      }),
      burn: Z.Null,
      data: Z.Null,
      sale_ended: Z.Record({
        token: Ce,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Opt(Z.Text)
      }),
      mint: Z.Record({
        to: ge,
        from: ge,
        sale: Z.Opt(Z.Record({ token: Ce, amount: Z.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Z.Record({
        to: ge,
        from: ge,
        extensible: ee
      }),
      sale_opened: Z.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Z.Text
      }),
      canister_owner_updated: Z.Record({
        owner: Z.Principal,
        extensible: ee
      }),
      sale_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      })
    }),
    timestamp: Z.Int,
    index: Z.Nat
  }), Qt = Z.Variant({
    ok: bt,
    err: Pe
  }), jt = Z.Variant({
    fungible: Z.Record({
      decimals: Z.Nat8,
      metadata: Z.Opt(Z.Vec(Z.Nat8)),
      name: Z.Text,
      symbol: Z.Text
    }),
    nonfungible: Z.Record({ metadata: Z.Opt(Z.Vec(Z.Nat8)) })
  }), yr = Z.Variant({ ok: jt, err: Ae }), gr = Z.Record({
    status: Z.Variant({
      closed: Z.Null,
      open: Z.Null,
      not_started: Z.Null
    }),
    participants: Z.Vec(Z.Tuple(Z.Principal, Z.Int)),
    current_bid_amount: Z.Nat,
    winner: Z.Opt(ge),
    end_date: Z.Int,
    wait_for_quiet_count: Z.Opt(Z.Nat),
    current_escrow: Z.Opt(rt),
    allow_list: Z.Opt(Z.Vec(Z.Tuple(Z.Principal, Z.Bool))),
    min_next_bid: Z.Nat,
    config: ht
  }), br = Z.Record({
    token_id: Z.Text,
    sale_type: Z.Variant({ auction: gr }),
    sale_id: Z.Text
  }), mr = Z.Record({
    metadata: ee,
    current_sale: Z.Opt(br)
  }), _r = Z.Variant({ ok: mr, err: Pe }), en = Z.Variant({
    UnauthorizedOperator: Z.Null,
    SelfTransfer: Z.Null,
    TokenNotFound: Z.Null,
    UnauthorizedOwner: Z.Null,
    TxNotFound: Z.Null,
    SelfApprove: Z.Null,
    OperatorNotFound: Z.Null,
    ExistedNFT: Z.Null,
    OwnerNotFound: Z.Null,
    Other: Z.Text
  }), Jn = Z.Variant({
    Ok: Z.Opt(Z.Principal),
    Err: en
  }), an = Z.Record({
    to: ge,
    token_id: Z.Text,
    from: ge
  }), qn = Z.Record({
    transaction: tt,
    assets: Z.Vec(ee)
  }), $n = Z.Variant({
    ok: qn,
    err: Pe
  }), Gn = Z.Record({
    content: Z.Vec(Z.Nat8),
    token_id: Z.Text,
    chunk: Z.Nat,
    filedata: ee,
    library_id: Z.Text
  }), Un = Z.Record({ canister: Z.Principal }), oi = Z.Variant({
    ok: Un,
    err: Pe
  }), Ai = Z.Vec(Z.Nat8), Ji = Z.Vec(Z.Nat8), Ri = Z.Record({
    to: he,
    token: oe,
    notify: Z.Bool,
    from: he,
    memo: Ai,
    subaccount: Z.Opt(Ji),
    amount: xe
  }), Hn = Z.Variant({
    ok: xe,
    err: Z.Variant({
      CannotNotify: ce,
      InsufficientBalance: Z.Null,
      InvalidToken: oe,
      Rejected: Z.Null,
      Unauthorized: ce,
      Other: Z.Text
    })
  }), Xn = Z.Variant({ Ok: Z.Nat, Err: en }), Ln = Z.Variant({
    Set: ee,
    Lock: ee,
    Next: Z.Vec(ne)
  });
  ne.fill(Z.Record({ mode: Ln, name: Z.Text }));
  const si = Z.Record({
    id: Z.Text,
    update: Z.Vec(ne)
  }), gi = Z.Variant({
    update: Z.Record({
      token_id: Z.Text,
      update: si,
      app_id: Z.Text
    }),
    replace: Z.Record({ token_id: Z.Text, data: ee })
  }), mi = Z.Bool, yi = Z.Variant({
    ok: mi,
    err: Pe
  }), Rt = Z.Record({
    token: Ce,
    token_id: Z.Text,
    seller: ge,
    withdraw_to: ge,
    buyer: ge,
    amount: Z.Nat
  }), tr = Z.Variant({
    sale: Rt,
    escrow: Rt
  }), Nr = Z.Record({
    token_id: Z.Text,
    txn_type: Z.Variant({
      escrow_deposit: Z.Record({
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_network_updated: Z.Record({
        network: Z.Principal,
        extensible: ee
      }),
      escrow_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      }),
      canister_managers_updated: Z.Record({
        managers: Z.Vec(Z.Principal),
        extensible: ee
      }),
      auction_bid: Z.Record({
        token: Ce,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Text
      }),
      burn: Z.Null,
      data: Z.Null,
      sale_ended: Z.Record({
        token: Ce,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat,
        sale_id: Z.Opt(Z.Text)
      }),
      mint: Z.Record({
        to: ge,
        from: ge,
        sale: Z.Opt(Z.Record({ token: Ce, amount: Z.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Z.Record({
        to: ge,
        from: ge,
        extensible: ee
      }),
      sale_opened: Z.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Z.Text
      }),
      canister_owner_updated: Z.Record({
        owner: Z.Principal,
        extensible: ee
      }),
      sale_withdraw: Z.Record({
        fee: Z.Nat,
        token: Ce,
        token_id: Z.Text,
        trx_id: kt,
        seller: ge,
        extensible: ee,
        buyer: ge,
        amount: Z.Nat
      })
    }),
    timestamp: Z.Int,
    index: Z.Nat
  }), on = Z.Variant({ ok: Nr, err: Pe });
  return Z.Service({
    __advance_time: Z.Func([Z.Int], [Z.Int], []),
    __set_time_mode: Z.Func([Z.Variant({ test: Z.Null, standard: Z.Null })], [Z.Bool], []),
    balance: Z.Func([fe], [Ee], ["query"]),
    balanceEXT: Z.Func([fe], [Ee], ["query"]),
    balanceOfDip721: Z.Func([Z.Principal], [Z.Nat], ["query"]),
    balance_of_nft_origyn: Z.Func([ge], [Fe], ["query"]),
    bearer: Z.Func([oe], [Le], ["query"]),
    bearerEXT: Z.Func([oe], [Le], ["query"]),
    bearer_batch_nft_origyn: Z.Func([Z.Vec(Z.Text)], [Z.Vec(We)], ["query"]),
    bearer_nft_origyn: Z.Func([Z.Text], [We], ["query"]),
    bid_nft_origyn: Z.Func([gt], [Ft], []),
    canister_status: Z.Func([Z.Record({ canister_id: At })], [Vt], []),
    chunk_nft_origyn: Z.Func([Xt], [Gt], ["query"]),
    collection_nft_origyn: Z.Func([
      Z.Opt(Z.Vec(Z.Tuple(Z.Text, Z.Opt(Z.Nat), Z.Opt(Z.Nat))))
    ], [It], ["query"]),
    collection_update_origyn: Z.Func([De], [ar], []),
    current_log: Z.Func([], [Z.Vec(rr)], ["query"]),
    cycles: Z.Func([], [Z.Nat], ["query"]),
    end_sale_nft_origyn: Z.Func([Z.Text], [vt], []),
    escrow_nft_origyn: Z.Func([Xe], [Et], []),
    getEXTTokenIdentifier: Z.Func([Z.Text], [Z.Text], ["query"]),
    get_access_key: Z.Func([], [lt], ["query"]),
    get_canister_managers_nft_origyn: Z.Func([], [Z.Vec(ie)], ["query"]),
    get_canister_network_nft_origyn: Z.Func([], [Z.Opt(ie)], ["query"]),
    get_canister_owner_nft_origyn: Z.Func([], [ie], ["query"]),
    get_nat_as_token_id_origyn: Z.Func([Z.Nat], [Z.Text], ["query"]),
    get_owner_soulbound: Z.Func([ee], [Z.Bool], []),
    get_storage_metrics: Z.Func([], [_e], ["query"]),
    get_token_id_as_nat_origyn: Z.Func([Z.Text], [Z.Nat], ["query"]),
    harvest_log: Z.Func([Z.Nat], [Z.Vec(Z.Vec(rr))], []),
    history_nft_origyn: Z.Func([Z.Text, Z.Opt(Z.Nat), Z.Opt(Z.Nat)], [Be], ["query"]),
    http_access_key: Z.Func([], [lt], []),
    http_request: Z.Func([ke], [Tt], ["query"]),
    http_request_streaming_callback: Z.Func([Je], [Dt], ["query"]),
    log_history_page: Z.Func([Z.Nat], [Z.Vec(rr)], ["query"]),
    log_history_page_chunk: Z.Func([Z.Nat, Z.Nat, Z.Nat], [Z.Vec(rr)], ["query"]),
    log_history_size: Z.Func([], [Z.Nat], ["query"]),
    manage_nft_origyn: Z.Func([zt], [ar], []),
    manage_storage_nft_origyn: Z.Func([Yt], [Te], []),
    market_transfer_batch_nft_origyn: Z.Func([Z.Vec(it)], [Z.Vec(Qt)], []),
    market_transfer_nft_origyn: Z.Func([it], [Qt], []),
    metadata: Z.Func([oe], [yr], ["query"]),
    mint__batch_nft_origyn: Z.Func([Z.Vec(Z.Tuple(Z.Text, ge))], [Z.Vec(lt)], []),
    mint_nft_origyn: Z.Func([Z.Text, ge], [lt], []),
    nftStreamingCallback: Z.Func([Je], [Dt], ["query"]),
    nft_batch_origyn: Z.Func([Z.Vec(Z.Text)], [Z.Vec(_r)], ["query"]),
    nft_origyn: Z.Func([Z.Text], [_r], ["query"]),
    nuke_log: Z.Func([], [], []),
    ownerOf: Z.Func([Z.Nat], [Jn], ["query"]),
    ownerOfDIP721: Z.Func([Z.Nat], [Jn], ["query"]),
    owner_transfer_nft_origyn: Z.Func([an], [$n], []),
    set_log_harvester_id: Z.Func([Z.Principal], [], []),
    stage_batch_nft_origyn: Z.Func([Z.Vec(Z.Record({ metadata: ee }))], [Z.Vec(lt)], []),
    stage_library_nft_origyn: Z.Func([Gn], [oi], []),
    stage_nft_origyn: Z.Func([Z.Record({ metadata: ee })], [lt], []),
    transfer: Z.Func([Ri], [Hn], []),
    transferEXT: Z.Func([Ri], [Hn], []),
    transferFrom: Z.Func([Z.Principal, Z.Principal, Z.Nat], [Xn], []),
    transferFromDip721: Z.Func([Z.Principal, Z.Principal, Z.Nat], [Xn], []),
    update_app_nft_origyn: Z.Func([gi], [yi], []),
    whoami: Z.Func([], [Z.Principal], ["query"]),
    withdraw_nft_origyn: Z.Func([tr], [on], [])
  });
};
const init$a = ({ IDL: Z }) => {
  const ee = Z.Principal;
  return [Z.Record({
    owner: ee,
    storage_space: Z.Opt(Z.Nat)
  })];
};
nft_origyn_did.init = init$a;
var __awaiter$a = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __importDefault$5 = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(nft_origyn, "__esModule", { value: !0 });
const agent_1$5 = require$$0$2, nft_origyn_did_1 = __importDefault$5(nft_origyn_did), default_1$3 = __importDefault$5(_default), standards_1$3 = standards;
class NFTOrigyn extends default_1$3.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$3.NFT.nftOrigyn, this.serializeTokenData = (ie) => {
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
      const oe = ie.ok.metadata, ce = oe.Class.find(({ name: he }) => he === "id").value.Text;
      return {
        index: ce,
        canister: this.canisterId,
        url: `https://${this.canisterId}.raw.ic0.app/-/${ce}`,
        name: ce,
        metadata: oe,
        standard: this.standard
      };
    }, this.actor = agent_1$5.Actor.createActor(nft_origyn_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getUserTokens(ee) {
    return __awaiter$a(this, void 0, void 0, function* () {
      const ne = yield this.actor.balance_of_nft_origyn({ principal: ee });
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      return (yield Promise.all(ne.ok.nfts.map((oe) => __awaiter$a(this, void 0, void 0, function* () {
        const ce = yield this.actor.nft_origyn(oe);
        if ("err" in ce)
          throw new Error(Object.keys(ce.err)[0]);
        return { detail: ce, principal: ee };
      })))).map((oe) => this.serializeTokenData(oe.detail));
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  transfer(ee, ne) {
    return __awaiter$a(this, void 0, void 0, function* () {
      yield this.agent.getPrincipal();
      const ie = yield this.actor.balance_of_nft_origyn({ principal: ee });
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
      const oe = ie.ok.escrow.find(({ token_id: he }) => he === ne);
      if (!oe)
        throw new Error("No pending escrows for transfer.");
      const ce = yield this.actor.market_transfer_nft_origyn({
        token_id: ne,
        sales_config: {
          pricing: { instant: null },
          escrow_receipt: [oe]
        }
      });
      if ("err" in ce)
        throw new Error(Object.keys(ce.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$a(this, void 0, void 0, function* () {
      const ne = yield this.actor.nft_origyn(ee);
      return this.serializeTokenData(ne);
    });
  }
}
nft_origyn.default = NFTOrigyn;
var departure_labs = {}, departure_labs_did = {};
Object.defineProperty(departure_labs_did, "__esModule", { value: !0 });
departure_labs_did.init = void 0;
departure_labs_did.default = ({ IDL: Z }) => {
  const ee = Z.Rec(), ne = Z.Rec(), ie = Z.Rec(), oe = Z.Func([], [], []), ce = Z.Variant({
    Init: Z.Record({ size: Z.Nat, callback: Z.Opt(oe) }),
    Chunk: Z.Record({
      chunk: Z.Vec(Z.Nat8),
      callback: Z.Opt(oe)
    })
  }), he = Z.Variant({
    Put: Z.Record({
      key: Z.Text,
      contentType: Z.Text,
      callback: Z.Opt(oe),
      payload: Z.Variant({
        StagedData: Z.Null,
        Payload: Z.Vec(Z.Nat8)
      })
    }),
    Remove: Z.Record({ key: Z.Text, callback: Z.Opt(oe) }),
    StagedWrite: ce
  }), fe = Z.Record({
    p: Z.Principal,
    id: Z.Text,
    isAuthorized: Z.Bool
  }), xe = Z.Variant({
    Immutable: Z.Null,
    NotFound: Z.Null,
    Unauthorized: Z.Null,
    InvalidRequest: Z.Null,
    AuthorizedPrincipalLimitReached: Z.Nat
  }), Ae = Z.Variant({ ok: Z.Null, err: xe }), Ee = Z.Record({
    nft_payload_size: Z.Nat,
    memory_size: Z.Nat,
    max_live_size: Z.Nat,
    cycles: Z.Nat,
    total_minted: Z.Nat,
    heap_size: Z.Nat,
    authorized_users: Z.Vec(Z.Principal)
  }), ye = Z.Func([], [], []), ge = Z.Variant({
    ContractAuthorize: Z.Record({
      isAuthorized: Z.Bool,
      user: Z.Principal
    }),
    Mint: Z.Record({ id: Z.Text, owner: Z.Principal })
  }), me = Z.Variant({
    Authorize: Z.Record({
      id: Z.Text,
      isAuthorized: Z.Bool,
      user: Z.Principal
    }),
    Transfer: Z.Record({
      id: Z.Text,
      to: Z.Principal,
      from: Z.Principal
    })
  }), Ce = Z.Record({
    topupCallback: ye,
    createdAt: Z.Int,
    topupAmount: Z.Nat,
    event: Z.Variant({ ContractEvent: ge, TokenEvent: me })
  }), Ie = Z.Func([Ce], [], []), Oe = Z.Record({
    failedCalls: Z.Nat,
    failedCallsLimit: Z.Nat,
    callback: Z.Opt(Ie),
    noTopupCallLimit: Z.Nat,
    callsSinceLastTopup: Z.Nat
  }), He = Z.Record({
    name: Z.Text,
    symbol: Z.Text
  }), Ne = Z.Tuple(Z.Text, Z.Text), Pe = Z.Record({
    url: Z.Text,
    method: Z.Text,
    body: Z.Vec(Z.Nat8),
    headers: Z.Vec(Ne)
  }), Fe = Z.Record({
    key: Z.Text,
    index: Z.Nat,
    content_encoding: Z.Text
  }), Le = Z.Record({
    token: Z.Opt(Fe),
    body: Z.Vec(Z.Nat8)
  }), We = Z.Func([Fe], [Le], ["query"]), rt = Z.Variant({
    Callback: Z.Record({
      token: Fe,
      callback: We
    })
  }), gt = Z.Record({
    body: Z.Vec(Z.Nat8),
    headers: Z.Vec(Ne),
    streaming_strategy: Z.Opt(rt),
    status_code: Z.Nat16
  }), kt = Z.Variant({
    Int: Z.Int,
    Nat: Z.Nat,
    Empty: Z.Null,
    Bool: Z.Bool,
    Text: Z.Text,
    Float: Z.Float64,
    Principal: Z.Principal,
    Class: Z.Vec(ee)
  });
  ee.fill(Z.Record({ value: kt, name: Z.Text, immutable: Z.Bool }));
  const Ke = Z.Vec(ee), ht = Z.Record({
    contentType: Z.Text,
    owner: Z.Opt(Z.Principal),
    properties: Ke,
    isPrivate: Z.Bool,
    payload: Z.Variant({
      StagedData: Z.Null,
      Payload: Z.Vec(Z.Nat8)
    })
  }), Nt = Z.Variant({ ok: Z.Principal, err: xe });
  ne.fill(Z.Record({ name: Z.Text, next: Z.Vec(ne) }));
  const Ft = Z.Variant({ All: Z.Null, Some: Z.Vec(ne) }), At = Z.Record({ id: Z.Text, mode: Ft }), St = Z.Variant({ ok: Ke, err: xe }), Vt = Z.Record({
    data: Z.Vec(Z.Nat8),
    totalPages: Z.Nat,
    nextPage: Z.Opt(Z.Nat)
  }), Xt = Z.Variant({
    Complete: Z.Vec(Z.Nat8),
    Chunk: Vt
  }), Lt = Z.Record({
    id: Z.Text,
    contentType: Z.Text,
    owner: Z.Principal,
    createdAt: Z.Int,
    properties: Ke,
    payload: Xt
  }), Zt = Z.Variant({ ok: Lt, err: xe }), Gt = Z.Variant({ ok: Vt, err: xe }), pt = Z.Record({
    id: Z.Text,
    contentType: Z.Text,
    owner: Z.Principal,
    createdAt: Z.Int,
    properties: Ke
  }), It = Z.Variant({ ok: pt, err: xe }), qt = Z.Variant({
    Set: Ie,
    Remove: Z.Null
  }), De = Z.Variant({ Set: kt, Next: Z.Vec(ie) });
  ie.fill(Z.Record({ mode: De, name: Z.Text }));
  const ar = Z.Record({
    id: Z.Text,
    update: Z.Vec(ie)
  });
  return Z.Service({
    assetRequest: Z.Func([he], [], []),
    authorize: Z.Func([fe], [Ae], []),
    balanceOf: Z.Func([Z.Principal], [Z.Vec(Z.Text)], []),
    getAuthorized: Z.Func([Z.Text], [Z.Vec(Z.Principal)], ["query"]),
    getContractInfo: Z.Func([], [Ee], []),
    getEventCallbackStatus: Z.Func([], [Oe], []),
    getMetadata: Z.Func([], [He], ["query"]),
    getTotalMinted: Z.Func([], [Z.Nat], ["query"]),
    http_request: Z.Func([Pe], [gt], ["query"]),
    http_request_streaming_callback: Z.Func([Fe], [Le], ["query"]),
    init: Z.Func([Z.Vec(Z.Principal), He], [], []),
    isAuthorized: Z.Func([Z.Text, Z.Principal], [Z.Bool], ["query"]),
    listAssets: Z.Func([], [Z.Vec(Z.Tuple(Z.Text, Z.Text, Z.Nat))], ["query"]),
    mint: Z.Func([ht], [Z.Text], []),
    nftStreamingCallback: Z.Func([Fe], [Le], ["query"]),
    ownerOf: Z.Func([Z.Text], [Nt], ["query"]),
    queryProperties: Z.Func([At], [St], ["query"]),
    staticStreamingCallback: Z.Func([Fe], [Le], ["query"]),
    tokenByIndex: Z.Func([Z.Text], [Zt], []),
    tokenChunkByIndex: Z.Func([Z.Text, Z.Nat], [Gt], []),
    tokenMetadataByIndex: Z.Func([Z.Text], [It], []),
    transfer: Z.Func([Z.Principal, Z.Text], [Ae], []),
    updateContractOwners: Z.Func([Z.Principal, Z.Bool], [Ae], []),
    updateEventCallback: Z.Func([qt], [], []),
    updateProperties: Z.Func([ar], [St], []),
    wallet_receive: Z.Func([], [], []),
    writeStaged: Z.Func([ce], [], [])
  });
};
const init$9 = ({}) => [];
departure_labs_did.init = init$9;
var __awaiter$9 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __importDefault$4 = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(departure_labs, "__esModule", { value: !0 });
const agent_1$4 = require$$0$2, departure_labs_did_1 = __importDefault$4(departure_labs_did), default_1$2 = __importDefault$4(_default), standards_1$2 = standards;
class DepartureLabs extends default_1$2.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$2.NFT.departuresLabs, this.serializeTokenData = (ie) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: `https://${this.canisterId}.raw.ic0.app/nft/${ie.id}`,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$4.Actor.createActor(departure_labs_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ne = yield this.actor.balanceOf(ee);
      return (yield Promise.all(ne.map((oe) => __awaiter$9(this, void 0, void 0, function* () {
        const ce = yield this.actor.tokenMetadataByIndex(oe);
        if ("err" in ce)
          throw new Error(Object.keys(ce.err)[0]);
        return ce.ok;
      })))).map((oe) => this.serializeTokenData(oe));
    });
  }
  transfer(ee, ne) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ie = yield this.actor.transfer(ee, ne.toString(10));
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ne = yield this.actor.tokenMetadataByIndex(ee.toString(10));
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      return this.serializeTokenData(ne.ok);
    });
  }
}
departure_labs.default = DepartureLabs;
var dip_721 = {}, dip_721_did = {};
Object.defineProperty(dip_721_did, "__esModule", { value: !0 });
dip_721_did.default = ({ IDL: Z }) => {
  const ee = Z.Rec();
  Z.Record({
    cap: Z.Opt(Z.Principal),
    logo: Z.Opt(Z.Text),
    name: Z.Opt(Z.Text),
    custodians: Z.Opt(Z.Vec(Z.Principal)),
    symbol: Z.Opt(Z.Text)
  });
  const ne = Z.Variant({
    UnauthorizedOperator: Z.Null,
    SelfTransfer: Z.Null,
    TokenNotFound: Z.Null,
    UnauthorizedOwner: Z.Null,
    SelfApprove: Z.Null,
    OperatorNotFound: Z.Null,
    ExistedNFT: Z.Null,
    OwnerNotFound: Z.Null
  }), ie = Z.Variant({ Ok: Z.Nat, Err: ne }), oe = Z.Variant({ Ok: Z.Bool, Err: ne }), ce = Z.Record({
    logo: Z.Opt(Z.Text),
    name: Z.Opt(Z.Text),
    created_at: Z.Nat64,
    upgraded_at: Z.Nat64,
    custodians: Z.Vec(Z.Principal),
    symbol: Z.Opt(Z.Text)
  });
  ee.fill(Z.Vec(Z.Tuple(Z.Text, Z.Variant({
    Nat64Content: Z.Nat64,
    Nat32Content: Z.Nat32,
    BoolContent: Z.Bool,
    Nat8Content: Z.Nat8,
    Int64Content: Z.Int64,
    IntContent: Z.Int,
    NatContent: Z.Nat,
    Nat16Content: Z.Nat16,
    Int32Content: Z.Int32,
    Int8Content: Z.Int8,
    FloatContent: Z.Float64,
    Int16Content: Z.Int16,
    BlobContent: Z.Vec(Z.Nat8),
    NestedContent: ee,
    Principal: Z.Principal,
    TextContent: Z.Text
  }))));
  const he = Z.Variant({
    Nat64Content: Z.Nat64,
    Nat32Content: Z.Nat32,
    BoolContent: Z.Bool,
    Nat8Content: Z.Nat8,
    Int64Content: Z.Int64,
    IntContent: Z.Int,
    NatContent: Z.Nat,
    Nat16Content: Z.Nat16,
    Int32Content: Z.Int32,
    Int8Content: Z.Int8,
    FloatContent: Z.Float64,
    Int16Content: Z.Int16,
    BlobContent: Z.Vec(Z.Nat8),
    NestedContent: ee,
    Principal: Z.Principal,
    TextContent: Z.Text
  }), fe = Z.Variant({
    Ok: Z.Opt(Z.Principal),
    Err: ne
  }), xe = Z.Variant({
    Ok: Z.Vec(Z.Nat),
    Err: ne
  }), Ae = Z.Record({
    transferred_at: Z.Opt(Z.Nat64),
    transferred_by: Z.Opt(Z.Principal),
    owner: Z.Opt(Z.Principal),
    operator: Z.Opt(Z.Principal),
    approved_at: Z.Opt(Z.Nat64),
    approved_by: Z.Opt(Z.Principal),
    properties: Z.Vec(Z.Tuple(Z.Text, he)),
    is_burned: Z.Bool,
    token_identifier: Z.Nat,
    burned_at: Z.Opt(Z.Nat64),
    burned_by: Z.Opt(Z.Principal),
    minted_at: Z.Nat64,
    minted_by: Z.Principal
  }), Ee = Z.Variant({
    Ok: Z.Vec(Ae),
    Err: ne
  }), ye = Z.Record({
    cycles: Z.Nat,
    total_transactions: Z.Nat,
    total_unique_holders: Z.Nat,
    total_supply: Z.Nat
  }), ge = Z.Variant({
    Burn: Z.Null,
    Mint: Z.Null,
    Approval: Z.Null
  }), me = Z.Variant({ Ok: Ae, Err: ne });
  return Z.Service({
    approve: Z.Func([Z.Principal, Z.Nat], [ie], []),
    balanceOf: Z.Func([Z.Principal], [ie], ["query"]),
    burn: Z.Func([Z.Nat], [ie], []),
    custodians: Z.Func([], [Z.Vec(Z.Principal)], ["query"]),
    cycles: Z.Func([], [Z.Nat], ["query"]),
    dfx_info: Z.Func([], [Z.Text], ["query"]),
    dip721_approve: Z.Func([Z.Principal, Z.Nat], [ie], []),
    dip721_balance_of: Z.Func([Z.Principal], [ie], ["query"]),
    dip721_burn: Z.Func([Z.Nat], [ie], []),
    dip721_custodians: Z.Func([], [Z.Vec(Z.Principal)], ["query"]),
    dip721_cycles: Z.Func([], [Z.Nat], ["query"]),
    dip721_is_approved_for_all: Z.Func([Z.Principal, Z.Principal], [oe], ["query"]),
    dip721_logo: Z.Func([], [Z.Opt(Z.Text)], ["query"]),
    dip721_metadata: Z.Func([], [ce], ["query"]),
    dip721_mint: Z.Func([Z.Principal, Z.Nat, Z.Vec(Z.Tuple(Z.Text, he))], [ie], []),
    dip721_name: Z.Func([], [Z.Opt(Z.Text)], ["query"]),
    dip721_operator_of: Z.Func([Z.Nat], [fe], ["query"]),
    dip721_operator_token_identifiers: Z.Func([Z.Principal], [xe], ["query"]),
    dip721_operator_token_metadata: Z.Func([Z.Principal], [Ee], ["query"]),
    dip721_owner_of: Z.Func([Z.Nat], [fe], ["query"]),
    dip721_owner_token_identifiers: Z.Func([Z.Principal], [xe], ["query"]),
    dip721_owner_token_metadata: Z.Func([Z.Principal], [Ee], ["query"]),
    dip721_set_approval_for_all: Z.Func([Z.Principal, Z.Bool], [ie], []),
    dip721_set_custodians: Z.Func([Z.Vec(Z.Principal)], [], []),
    dip721_set_logo: Z.Func([Z.Text], [], []),
    dip721_set_name: Z.Func([Z.Text], [], []),
    dip721_set_symbol: Z.Func([Z.Text], [], []),
    dip721_stats: Z.Func([], [ye], ["query"]),
    dip721_supported_interfaces: Z.Func([], [Z.Vec(ge)], ["query"]),
    dip721_symbol: Z.Func([], [Z.Opt(Z.Text)], ["query"]),
    dip721_token_metadata: Z.Func([Z.Nat], [me], ["query"]),
    dip721_total_supply: Z.Func([], [Z.Nat], ["query"]),
    dip721_total_transactions: Z.Func([], [Z.Nat], ["query"]),
    dip721_total_unique_holders: Z.Func([], [Z.Nat], ["query"]),
    dip721_transfer: Z.Func([Z.Principal, Z.Nat], [ie], []),
    dip721_transfer_from: Z.Func([Z.Principal, Z.Principal, Z.Nat], [ie], []),
    git_commit_hash: Z.Func([], [Z.Text], ["query"]),
    isApprovedForAll: Z.Func([Z.Principal, Z.Principal], [oe], ["query"]),
    logo: Z.Func([], [Z.Opt(Z.Text)], ["query"]),
    metadata: Z.Func([], [ce], ["query"]),
    mint: Z.Func([Z.Principal, Z.Nat, Z.Vec(Z.Tuple(Z.Text, he))], [ie], []),
    name: Z.Func([], [Z.Opt(Z.Text)], ["query"]),
    operatorOf: Z.Func([Z.Nat], [fe], ["query"]),
    operatorTokenIdentifiers: Z.Func([Z.Principal], [xe], ["query"]),
    operatorTokenMetadata: Z.Func([Z.Principal], [Ee], ["query"]),
    ownerOf: Z.Func([Z.Nat], [fe], ["query"]),
    ownerTokenIdentifiers: Z.Func([Z.Principal], [xe], ["query"]),
    ownerTokenMetadata: Z.Func([Z.Principal], [Ee], ["query"]),
    rust_toolchain_info: Z.Func([], [Z.Text], ["query"]),
    setApprovalForAll: Z.Func([Z.Principal, Z.Bool], [ie], []),
    setCustodians: Z.Func([Z.Vec(Z.Principal)], [], []),
    setLogo: Z.Func([Z.Text], [], []),
    setName: Z.Func([Z.Text], [], []),
    setSymbol: Z.Func([Z.Text], [], []),
    stats: Z.Func([], [ye], ["query"]),
    supportedInterfaces: Z.Func([], [Z.Vec(ge)], ["query"]),
    symbol: Z.Func([], [Z.Opt(Z.Text)], ["query"]),
    tokenMetadata: Z.Func([Z.Nat], [me], ["query"]),
    totalSupply: Z.Func([], [Z.Nat], ["query"]),
    totalTransactions: Z.Func([], [Z.Nat], ["query"]),
    totalUniqueHolders: Z.Func([], [Z.Nat], ["query"]),
    transfer: Z.Func([Z.Principal, Z.Nat], [ie], []),
    transferFrom: Z.Func([Z.Principal, Z.Principal, Z.Nat], [ie], [])
  });
};
var __awaiter$8 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __importDefault$3 = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(dip_721, "__esModule", { value: !0 });
const agent_1$3 = require$$0$2, dip_721_did_1 = __importDefault$3(dip_721_did), default_1$1 = __importDefault$3(_default), standards_1$1 = standards, extractMetadataValue = (Z) => {
  const ee = Object.keys(Z)[0], ne = Z[ee];
  return typeof ne == "object" ? JSON.stringify(ne) : ne;
};
class ERC721 extends default_1$1.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$1.NFT.dip721, this.actor = agent_1$3.Actor.createActor(dip_721_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  backwardsCompatibleGuard(ee, ne) {
    return (ie = []) => __awaiter$8(this, void 0, void 0, function* () {
      let oe;
      try {
        oe = yield this.actor[ne](...ie);
      } catch {
        oe = yield this.actor[ee](...ie);
      }
      return oe;
    });
  }
  getUserTokens(ee) {
    return __awaiter$8(this, void 0, void 0, function* () {
      const oe = (yield this.backwardsCompatibleGuard("ownerTokenMetadata", "dip721_owner_token_metadata")([ee])).Ok || [];
      return oe.length ? oe.map((he) => {
        var fe, xe;
        const Ae = he.token_identifier, Ee = this.formatMetadata(he);
        if (!Ee)
          return;
        const ye = (xe = (fe = he.operator) === null || fe === void 0 ? void 0 : fe[0]) === null || xe === void 0 ? void 0 : xe.toText();
        return this.serializeTokenData(Ee, Ae, ee.toText(), ye);
      }).filter((he) => he) : [];
    });
  }
  transfer(ee, ne) {
    return __awaiter$8(this, void 0, void 0, function* () {
      const oe = yield this.backwardsCompatibleGuard("transfer", "dip721_transfer")([ee, BigInt(ne)]);
      if ("Err" in oe)
        throw new Error(`${Object.keys(oe.Err)[0]}: ${Object.values(oe.Err)[0]}`);
    });
  }
  details(ee) {
    var ne, ie, oe, ce, he, fe;
    return __awaiter$8(this, void 0, void 0, function* () {
      const Ae = yield this.backwardsCompatibleGuard("tokenMetadata", "dip721_token_metadata")([BigInt(ee)]);
      if ("Err" in Ae)
        throw new Error(`${Object.keys(Ae.Err)[0]}: ${Object.values(Ae.Err)[0]}`);
      const Ee = Ae == null ? void 0 : Ae.Ok, ye = this.formatMetadata(Ee), ge = (oe = (ie = (ne = Ee == null ? void 0 : Ee.owner) === null || ne === void 0 ? void 0 : ne[0]) === null || ie === void 0 ? void 0 : ie.toText) === null || oe === void 0 ? void 0 : oe.call(ie), me = (fe = (he = (ce = Ee == null ? void 0 : Ee.operator) === null || ce === void 0 ? void 0 : ce[0]) === null || he === void 0 ? void 0 : he.toText) === null || fe === void 0 ? void 0 : fe.call(he);
      return this.serializeTokenData(ye, ee, ge, me);
    });
  }
  getMetadata() {
    var ee;
    return __awaiter$8(this, void 0, void 0, function* () {
      const ie = yield this.backwardsCompatibleGuard("metadata", "dip721_get_metadata")();
      return {
        icon: ie == null ? void 0 : ie.logo[0],
        name: ((ee = ie == null ? void 0 : ie.name) === null || ee === void 0 ? void 0 : ee[0]) || "",
        standard: this.standard,
        canisterId: this.canisterId,
        tokens: [],
        description: ""
      };
    });
  }
  serializeTokenData(ee, ne, ie, oe) {
    var ce, he;
    return {
      index: BigInt(ne),
      canister: this.canisterId,
      metadata: ee,
      owner: ie,
      url: ((he = (ce = ee == null ? void 0 : ee.location) === null || ce === void 0 ? void 0 : ce.value) === null || he === void 0 ? void 0 : he.TextContent) || "",
      standard: this.standard,
      operator: oe
    };
  }
  formatMetadata(ee) {
    const ne = { properties: new Array() };
    if (!(ee != null && ee.properties) || !Array.isArray(ee.properties)) {
      console.warn(`Oops! Failed to format the metadata properties for token, field is missing or invalid. See ${JSON.stringify(ee)}`), console.log(ee);
      return;
    }
    return ee.properties.forEach((ie) => {
      const oe = ie[0];
      ne[oe] = { value: ie[1] };
      const ce = (() => {
        try {
          return extractMetadataValue(ie[1]);
        } catch (he) {
          console.warn(`Oops! Failed to extract metadata value for property ${oe}, is that a valid key value pair?`), console.error(he);
        }
      })();
      ne.properties = [
        ...ne.properties,
        { name: ie[0], value: ce }
      ];
    }), ne.properties = ne.properties.filter(({ name: ie }) => !["location", "thumbnail", "contentHash", "contentType"].includes(ie)), ne;
  }
}
dip_721.default = ERC721;
var constants = {};
Object.defineProperty(constants, "__esModule", { value: !0 });
constants.KYASSHU_URL = constants.IC_HOST = void 0;
constants.IC_HOST = "https://ic0.app/";
constants.KYASSHU_URL = "https://kyasshu.fleek.co";
var nft_registry_did = {};
Object.defineProperty(nft_registry_did, "__esModule", { value: !0 });
nft_registry_did.init = void 0;
nft_registry_did.default = ({ IDL: Z }) => {
  const ee = Z.Rec();
  ee.fill(Z.Variant({
    I64: Z.Int64,
    U64: Z.Nat64,
    Vec: Z.Vec(ee),
    Slice: Z.Vec(Z.Nat8),
    Text: Z.Text,
    True: Z.Null,
    False: Z.Null,
    Float: Z.Float64,
    Principal: Z.Principal
  }));
  const ne = Z.Record({
    thumbnail: Z.Text,
    name: Z.Text,
    frontend: Z.Opt(Z.Text),
    description: Z.Text,
    details: Z.Vec(Z.Tuple(Z.Text, ee)),
    principal_id: Z.Principal
  }), ie = Z.Variant({
    NotAuthorized: Z.Null,
    BadParameters: Z.Null,
    Unknown: Z.Text,
    NonExistentItem: Z.Null
  }), oe = Z.Variant({
    Ok: Z.Opt(Z.Text),
    Err: ie
  });
  return Z.Service({
    add: Z.Func([ne], [oe], []),
    get: Z.Func([Z.Principal], [Z.Opt(ne)], ["query"]),
    get_all: Z.Func([], [Z.Vec(ne)], ["query"]),
    name: Z.Func([], [Z.Text], ["query"]),
    remove: Z.Func([Z.Principal], [oe], []),
    set_controller: Z.Func([Z.Principal], [oe], [])
  });
};
const init$8 = () => [];
nft_registry_did.init = init$8;
var standard_registry = {}, registry_standard_did = {};
Object.defineProperty(registry_standard_did, "__esModule", { value: !0 });
registry_standard_did.init = void 0;
registry_standard_did.default = ({ IDL: Z }) => {
  const ee = Z.Rec();
  ee.fill(Z.Variant({
    I64: Z.Int64,
    U64: Z.Nat64,
    Vec: Z.Vec(ee),
    Slice: Z.Vec(Z.Nat8),
    Text: Z.Text,
    True: Z.Null,
    False: Z.Null,
    Float: Z.Float64,
    Principal: Z.Principal
  }));
  const ne = Z.Record({
    thumbnail: Z.Text,
    name: Z.Text,
    frontend: Z.Opt(Z.Text),
    description: Z.Text,
    principal_id: Z.Principal,
    details: Z.Vec(Z.Tuple(Z.Text, ee))
  }), ie = Z.Variant({
    NotAuthorized: Z.Null,
    BadParameters: Z.Null,
    Unknown: Z.Text,
    NonExistantCanister: Z.Null
  }), oe = Z.Variant({ Ok: Z.Opt(Z.Text), Err: ie });
  return Z.Service({
    add: Z.Func([ne], [oe], []),
    get: Z.Func([Z.Principal], [Z.Opt(ne)], ["query"]),
    name: Z.Func([], [Z.Text], ["query"]),
    remove: Z.Func([Z.Principal], [oe], [])
  });
};
const init$7 = () => [];
registry_standard_did.init = init$7;
var registry = {};
(function(Z) {
  Object.defineProperty(Z, "__esModule", { value: !0 }), Z.formatMetadata = Z.formatRegistryDetails = Z.parseDetailValue = void 0;
  const ee = ["True", "False"], ne = (ce) => {
    const he = Object.keys(ce)[0], fe = ee.includes(he) ? Boolean(he) : Object.values(ce)[0];
    return Array.isArray(fe) ? fe.map((xe) => typeof fe == "number" ? xe : (0, Z.parseDetailValue)(xe)) : fe;
  };
  Z.parseDetailValue = ne;
  const ie = (ce) => {
    const he = {};
    for (const [fe, xe] of ce)
      he[fe] = (0, Z.parseDetailValue)(xe);
    return he;
  };
  Z.formatRegistryDetails = ie;
  const oe = (ce) => Object.assign(Object.assign({}, ce), { details: (0, Z.formatRegistryDetails)(ce.details) });
  Z.formatMetadata = oe;
})(registry);
var __awaiter$7 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __importDefault$2 = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(standard_registry, "__esModule", { value: !0 });
const agent_1$2 = require$$0$2, principal_1$5 = require$$0$1, constants_1 = constants, registry_standard_did_1 = __importDefault$2(registry_standard_did), registry_1 = registry, cross_fetch_1$1 = __importDefault$2(browserPonyfill.exports), DEFAULT_AGENT = new agent_1$2.HttpAgent({ fetch: cross_fetch_1$1.default, host: constants_1.IC_HOST });
class Registry {
  constructor(ee, ne = DEFAULT_AGENT) {
    this.name = () => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.name();
    }), this.add = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.add(ie != null ? ie : []);
    }), this.get = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      const oe = yield this.actor.get(principal_1$5.Principal.fromText(ie));
      if (oe.length !== 0)
        return (0, registry_1.formatMetadata)(oe[0]);
    }), this.remove = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.remove(principal_1$5.Principal.fromText(ie));
    }), this.actor = agent_1$2.Actor.createActor(registry_standard_did_1.default, {
      agent: ne,
      canisterId: ee
    }), this.canisterId = ee;
  }
}
standard_registry.default = Registry;
var actorFactory = {};
(function(Z) {
  Object.defineProperty(Z, "__esModule", { value: !0 }), Z.generateActor = Z.createExtendedActorClass = void 0;
  const ee = require$$0$2, ne = require$$0$1, ie = (ce, he, fe, xe) => {
    class Ae extends ee.Actor.createActorClass(xe) {
      constructor() {
        const ye = typeof fe == "string" ? ne.Principal.fromText(fe) : fe;
        super({ agent: ce, canisterId: ye }), Object.keys(this).forEach((ge) => {
          this[`_${ge}`] = this[ge];
        }), Object.keys(he).forEach((ge) => {
          this[ge] = (...me) => he[ge](this, ...me);
        });
      }
    }
    return Ae;
  };
  Z.createExtendedActorClass = ie;
  function oe({ agent: ce, canisterId: he, IDL: fe }) {
    return ee.Actor.createActor(fe, {
      agent: ce,
      canisterId: ne.Principal.fromText(he)
    });
  }
  Z.generateActor = oe, Z.default = { createExtendedActorClass: Z.createExtendedActorClass, generateActor: oe };
})(actorFactory);
var ccc = {}, c3_did = {};
Object.defineProperty(c3_did, "__esModule", { value: !0 });
c3_did.init = void 0;
c3_did.default = ({ IDL: Z }) => {
  const ee = Z.Nat, ne = Z.Nat, ie = Z.Variant({
    ok: ne,
    err: Z.Variant({
      ListOnMarketPlace: Z.Null,
      NotAllowTransferToSelf: Z.Null,
      NotOwnerOrNotApprove: Z.Null,
      Other: Z.Null
    })
  }), oe = Z.Record({
    id: Z.Nat,
    rarityScore: Z.Float64
  }), ce = Z.Variant({
    ok: oe,
    err: Z.Variant({ NotFoundIndex: Z.Null })
  });
  return Z.Service({
    getAllNFT: Z.Func([Z.Principal], [Z.Vec(Z.Tuple(ee, Z.Principal))], ["query"]),
    getNftStoreCIDByIndex: Z.Func([ee], [Z.Principal], ["query"]),
    getTokenById: Z.Func([Z.Nat], [ce], ["query"]),
    transferFrom: Z.Func([Z.Principal, Z.Principal, ee], [ie], [])
  });
};
const init$6 = ({ IDL: Z }) => [Z.Principal, Z.Principal, Z.Principal];
c3_did.init = init$6;
var __awaiter$6 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __importDefault$1 = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(ccc, "__esModule", { value: !0 });
const agent_1$1 = require$$0$2, c3_did_1 = __importDefault$1(c3_did), default_1 = __importDefault$1(_default), standards_1 = standards;
class CCC extends default_1.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1.NFT.c3, this.serializeTokenData = (ie, oe) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: `https://${oe.toText()}.raw.ic0.app/token/${ie.id}`,
      name: `${ie.id}`,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$1.Actor.createActor(c3_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ne = yield this.actor.getAllNFT(ee);
      return (yield Promise.all(ne.map((oe) => __awaiter$6(this, void 0, void 0, function* () {
        const ce = oe[0], he = oe[1], fe = yield this.actor.getTokenById(ce);
        if ("err" in fe)
          throw new Error(Object.keys(fe.err)[0]);
        return { detail: fe.ok, principal: he };
      })))).map((oe) => this.serializeTokenData(oe.detail, oe.principal));
    });
  }
  transfer(ee, ne) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ie = yield this.agent.getPrincipal(), oe = yield this.actor.transferFrom(ie, ee, BigInt(ne));
      if ("err" in oe)
        throw new Error(Object.keys(oe.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ne = yield this.actor.getTokenById(BigInt(ee));
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      const ie = yield this.actor.getNftStoreCIDByIndex(BigInt(ee));
      if (!ie)
        throw new Error("Error tokenIndex");
      return this.serializeTokenData(ne.ok, ie);
    });
  }
}
ccc.default = CCC;
(function(Z) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Vt, Xt, Lt, Zt) {
    function Gt(pt) {
      return pt instanceof Lt ? pt : new Lt(function(It) {
        It(pt);
      });
    }
    return new (Lt || (Lt = Promise))(function(pt, It) {
      function qt(rr) {
        try {
          ar(Zt.next(rr));
        } catch (Ar) {
          It(Ar);
        }
      }
      function De(rr) {
        try {
          ar(Zt.throw(rr));
        } catch (Ar) {
          It(Ar);
        }
      }
      function ar(rr) {
        rr.done ? pt(rr.value) : Gt(rr.value).then(qt, De);
      }
      ar((Zt = Zt.apply(Vt, Xt || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Vt) {
    return Vt && Vt.__esModule ? Vt : { default: Vt };
  };
  Object.defineProperty(Z, "__esModule", { value: !0 }), Z.getCachedUserNFTs = Z.getBatchedNFTs = Z.getAllUserNFTs = Z.getAllNFTS = Z.getNFTInfo = Z.getNFTActor = Z.getUserCollectionTokens = Z.NFTRegistry = void 0;
  const ie = ne(axios$2.exports), oe = require$$0$2, ce = require$$0$1, he = ne(browserPonyfill.exports), fe = ne(ext), xe = ne(ic_punks), Ae = ne(nft_origyn), Ee = ne(departure_labs), ye = ne(dip_721), ge = standards, me = constants, Ce = ne(nft_registry_did), Ie = ne(standard_registry), Oe = actorFactory, He = registry, Ne = ne(ccc), Pe = "ctqxp-yyaaa-aaaah-abbda-cai", Fe = 5, Le = {
    [ge.NFT.ext]: fe.default,
    [ge.NFT.icpunks]: xe.default,
    [ge.NFT.nftOrigyn]: Ae.default,
    [ge.NFT.departuresLabs]: Ee.default,
    [ge.NFT.erc721]: ye.default,
    [ge.NFT.dip721]: ye.default,
    [ge.NFT.c3]: Ne.default
  }, We = new oe.HttpAgent({ fetch: he.default, host: me.IC_HOST });
  class rt extends Ie.default {
    constructor(Xt) {
      super(Pe, Xt), this.getAll = () => ee(this, void 0, void 0, function* () {
        return (yield this.actor.get_all()).map(He.formatMetadata);
      }), this.actor = (0, Oe.generateActor)({ agent: Xt || We, canisterId: Pe, IDL: Ce.default });
    }
  }
  Z.NFTRegistry = rt;
  const gt = (Vt, Xt, Lt = We, Zt = () => {
  }) => ee(void 0, void 0, void 0, function* () {
    try {
      const pt = yield (0, Z.getNFTActor)({
        canisterId: Vt.principal_id.toString(),
        agent: Lt,
        standard: Vt.standard
      }).getUserTokens(Xt), It = {
        name: Vt.name,
        canisterId: Vt.principal_id.toString(),
        standard: Vt.standard,
        description: Vt.description,
        icon: Vt.icon,
        tokens: pt.map((qt) => Object.assign(Object.assign({}, qt), { collection: Vt.name }))
      };
      return Zt && (yield Zt == null ? void 0 : Zt(It)), It;
    } catch (Gt) {
      return console.error(Gt), {
        name: Vt.name,
        canisterId: Vt.principal_id.toString(),
        standard: Vt.standard,
        tokens: []
      };
    }
  });
  Z.getUserCollectionTokens = gt;
  const kt = ({ standard: Vt }) => {
    const Xt = Vt.toUpperCase(), Lt = ge.NFT.dip721.toUpperCase(), Zt = Xt.startsWith(Lt), Gt = Xt.split(Lt).filter((It) => It).length > 0;
    return Zt && Gt ? (console.warn(`Warning! Use the term DIP721, not ${Vt}, suffixed and others are being deprecated and support will be dropped soon!`), ge.NFT.dip721) : Xt;
  }, Ke = ({ canisterId: Vt, agent: Xt, standard: Lt }) => {
    const Zt = kt({
      standard: Lt
    });
    if (!(Zt in Le))
      throw console.error(`Standard ${Zt} is not implemented`), new Error(`standard is not supported: ${Zt}`);
    return new Le[Zt](Vt, Xt);
  };
  Z.getNFTActor = Ke;
  const ht = ({ nftCanisterId: Vt, agent: Xt = We }) => ee(void 0, void 0, void 0, function* () {
    const Zt = yield new rt(Xt).get(Vt);
    return Zt && Object.assign(Object.assign({}, Zt), { icon: Zt.thumbnail, standard: Zt.details.standard });
  });
  Z.getNFTInfo = ht;
  const Nt = ({ agent: Vt = We } = {}) => ee(void 0, void 0, void 0, function* () {
    return (yield new rt(Vt).getAll()).map((Zt) => Object.assign(Object.assign({}, Zt), { icon: Zt.thumbnail, standard: Zt.details.standard }));
  });
  Z.getAllNFTS = Nt;
  const Ft = ({ user: Vt, agent: Xt = We }) => ee(void 0, void 0, void 0, function* () {
    const Lt = yield (0, Z.getAllNFTS)({ agent: Xt }), Zt = Vt instanceof ce.Principal ? Vt : ce.Principal.fromText(Vt);
    return (yield Promise.all(Lt.map((pt) => (0, Z.getUserCollectionTokens)(pt, Zt, Xt)))).filter((pt) => pt.tokens.length);
  });
  Z.getAllUserNFTs = Ft;
  const At = ({ principal: Vt, callback: Xt, batchSize: Lt = Fe, onFinish: Zt, agent: Gt = We }) => ee(void 0, void 0, void 0, function* () {
    const pt = yield (0, Z.getAllNFTS)({ agent: Gt });
    let It = [];
    for (let qt = 0; qt < pt.length; qt += Lt) {
      const De = pt.slice(qt, qt + Lt), ar = yield Promise.all(De.map((rr) => (0, Z.getUserCollectionTokens)(rr, Vt, Gt, Xt)));
      It = [...It, ...ar];
    }
    return Zt && (yield Zt == null ? void 0 : Zt(It)), It.filter((qt) => {
      var De;
      return (De = qt == null ? void 0 : qt.tokens) === null || De === void 0 ? void 0 : De.length;
    });
  });
  Z.getBatchedNFTs = At;
  const St = ({ userPID: Vt, refresh: Xt }) => ee(void 0, void 0, void 0, function* () {
    const Lt = `${me.KYASSHU_URL}/dab/user/nfts/${Vt}`;
    return (yield ie.default.get(Lt, { params: { refresh: Xt } })).data;
  });
  Z.getCachedUserNFTs = St, Z.default = {
    getBatchedNFTs: Z.getBatchedNFTs,
    getNFTActor: Z.getNFTActor,
    getNFTInfo: Z.getNFTInfo,
    getAllNFTS: Z.getAllNFTS,
    getAllUserNFTs: Z.getAllUserNFTs,
    getCachedUserNFTs: Z.getCachedUserNFTs
  };
})(nfts_registry);
var canister_registry = {}, canister_registry_did = {};
Object.defineProperty(canister_registry_did, "__esModule", { value: !0 });
canister_registry_did.init = void 0;
canister_registry_did.default = ({ IDL: Z }) => {
  const ee = Z.Rec();
  ee.fill(Z.Variant({
    I64: Z.Int64,
    U64: Z.Nat64,
    Vec: Z.Vec(ee),
    Slice: Z.Vec(Z.Nat8),
    Text: Z.Text,
    True: Z.Null,
    False: Z.Null,
    Float: Z.Float64,
    Principal: Z.Principal
  }));
  const ne = Z.Record({
    thumbnail: Z.Text,
    name: Z.Text,
    frontend: Z.Opt(Z.Text),
    description: Z.Text,
    principal_id: Z.Principal,
    details: Z.Vec(Z.Tuple(Z.Text, ee))
  }), ie = Z.Variant({
    NotAuthorized: Z.Null,
    BadParameters: Z.Null,
    Unknown: Z.Text,
    NonExistentItem: Z.Null
  }), oe = Z.Variant({
    Ok: Z.Opt(Z.Text),
    Err: ie
  });
  return Z.Service({
    add: Z.Func([ne], [oe], []),
    get: Z.Func([Z.Principal], [Z.Opt(ne)], ["query"]),
    get_all: Z.Func([], [Z.Vec(ne)], ["query"]),
    name: Z.Func([], [Z.Text], ["query"]),
    remove: Z.Func([Z.Principal], [oe], [])
  });
};
const init$5 = () => [];
canister_registry_did.init = init$5;
(function(Z) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Ne, Pe, Fe, Le) {
    function We(rt) {
      return rt instanceof Fe ? rt : new Fe(function(gt) {
        gt(rt);
      });
    }
    return new (Fe || (Fe = Promise))(function(rt, gt) {
      function kt(Nt) {
        try {
          ht(Le.next(Nt));
        } catch (Ft) {
          gt(Ft);
        }
      }
      function Ke(Nt) {
        try {
          ht(Le.throw(Nt));
        } catch (Ft) {
          gt(Ft);
        }
      }
      function ht(Nt) {
        Nt.done ? rt(Nt.value) : We(Nt.value).then(kt, Ke);
      }
      ht((Le = Le.apply(Ne, Pe || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Ne) {
    return Ne && Ne.__esModule ? Ne : { default: Ne };
  };
  Object.defineProperty(Z, "__esModule", { value: !0 }), Z.getAll = Z.getMultipleCanisterInfo = Z.getCanisterInfo = Z.CanisterRegistry = void 0;
  const ie = require$$0$2, oe = ne(browserPonyfill.exports), ce = ne(canister_registry_did), he = constants, fe = ne(standard_registry), xe = actorFactory, Ae = registry, Ee = require$$0$1, ye = "curr3-vaaaa-aaaah-abbdq-cai", ge = new ie.HttpAgent({ fetch: oe.default, host: he.IC_HOST }), me = (Ne) => {
    if (!Ne)
      return Ne;
    const { thumbnail: Pe, name: Fe, description: Le, frontend: We, details: rt } = Ne;
    return { url: (We == null ? void 0 : We[0]) || "", name: Fe, description: Le, version: Number(rt.version), logo_url: Pe };
  };
  class Ce extends fe.default {
    constructor(Pe) {
      super(ye, Pe), this.getAll = () => ee(this, void 0, void 0, function* () {
        return (yield this.actor.get_all()).map(Ae.formatMetadata);
      }), this.actor = (0, xe.generateActor)({ agent: Pe || ge, canisterId: ye, IDL: ce.default });
    }
  }
  Z.CanisterRegistry = Ce;
  const Ie = ({ canisterId: Ne, agent: Pe = ge }) => ee(void 0, void 0, void 0, function* () {
    const Le = yield new Ce(Pe).get(Ee.Principal.from(Ne).toString()), We = me(Le);
    return We && Object.assign(Object.assign({}, We), { canisterId: Ne.toString() });
  });
  Z.getCanisterInfo = Ie;
  const Oe = ({ canisterIds: Ne, agent: Pe = ge }) => ee(void 0, void 0, void 0, function* () {
    const Fe = yield Promise.all(Ne.map((Le) => (0, Z.getCanisterInfo)({ canisterId: Le, agent: Pe })));
    return Fe.length === 0 ? [] : Fe.filter((Le) => !!Le);
  });
  Z.getMultipleCanisterInfo = Oe;
  const He = (Ne) => ee(void 0, void 0, void 0, function* () {
    return (yield new Ce(Ne).getAll()).map(me);
  });
  Z.getAll = He, Z.default = {
    getCanisterInfo: Z.getCanisterInfo,
    getMultipleCanisterInfo: Z.getMultipleCanisterInfo,
    getAll: (Ne) => new Ce(Ne).getAll
  };
})(canister_registry);
var token_registry = {}, token_registry_did = {};
Object.defineProperty(token_registry_did, "__esModule", { value: !0 });
token_registry_did.init = void 0;
token_registry_did.default = ({ IDL: Z }) => {
  const ee = Z.Rec();
  ee.fill(Z.Variant({
    I64: Z.Int64,
    U64: Z.Nat64,
    Vec: Z.Vec(ee),
    Slice: Z.Vec(Z.Nat8),
    Text: Z.Text,
    True: Z.Null,
    False: Z.Null,
    Float: Z.Float64,
    Principal: Z.Principal
  }));
  const ne = Z.Record({
    thumbnail: Z.Text,
    name: Z.Text,
    frontend: Z.Opt(Z.Text),
    description: Z.Text,
    principal_id: Z.Principal,
    details: Z.Vec(Z.Tuple(Z.Text, ee))
  }), ie = Z.Variant({
    NotAuthorized: Z.Null,
    BadParameters: Z.Null,
    Unknown: Z.Text,
    NonExistentItem: Z.Null
  }), oe = Z.Variant({
    Ok: Z.Opt(Z.Text),
    Err: ie
  });
  return Z.Service({
    add: Z.Func([ne], [oe], []),
    get: Z.Func([Z.Principal], [Z.Opt(ne)], ["query"]),
    get_all: Z.Func([], [Z.Vec(ne)], ["query"]),
    name: Z.Func([], [Z.Text], ["query"]),
    remove: Z.Func([Z.Principal], [oe], []),
    set_controller: Z.Func([Z.Principal], [oe], [])
  });
};
const init$4 = () => [];
token_registry_did.init = init$4;
var token_standards = {}, methods = {}, __awaiter$5 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
};
Object.defineProperty(methods, "__esModule", { value: !0 });
methods.parseAmountToSend = methods.getDecimalsFromMetadata = void 0;
const send$5 = (Z, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getMetadata$5 = (Z) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getBalance$5 = (Z, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), burnXTC$5 = (Z, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getDecimals$5 = (Z) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getDecimalsFromMetadata = (Z) => "fungible" in Z ? Z.fungible.decimals : 0;
methods.getDecimalsFromMetadata = getDecimalsFromMetadata;
const parseAmountToSend = (Z, ee) => BigInt(parseFloat(Z) * Math.pow(10, ee));
methods.parseAmountToSend = parseAmountToSend;
methods.default = {
  send: send$5,
  getMetadata: getMetadata$5,
  getBalance: getBalance$5,
  burnXTC: burnXTC$5,
  getDecimals: getDecimals$5
};
var xtcMethods = {}, __awaiter$4 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
};
Object.defineProperty(xtcMethods, "__esModule", { value: !0 });
const principal_1$4 = require$$0$1, methods_1$4 = methods, getMetadata$4 = (Z) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ee = yield Z._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$4 = (Z, { to: ee, amount: ne }) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ie = yield Z._transferErc20(principal_1$4.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$4 = (Z, ee) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$4(Z);
  return { value: (yield Z._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$4 = (Z, { to: ee, amount: ne }) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ie = yield getDecimals$4(Z), oe = (0, methods_1$4.parseAmountToSend)(ne, ie);
  return Z._burn({ canister_id: ee, amount: oe });
}), getDecimals$4 = (Z) => __awaiter$4(void 0, void 0, void 0, function* () {
  return (0, methods_1$4.getDecimalsFromMetadata)(yield getMetadata$4(Z));
});
xtcMethods.default = {
  send: send$4,
  getMetadata: getMetadata$4,
  getBalance: getBalance$4,
  burnXTC: burnXTC$4,
  getDecimals: getDecimals$4
};
var extMethods = {}, __awaiter$3 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
};
Object.defineProperty(extMethods, "__esModule", { value: !0 });
const agent_1 = require$$0$2, principal_1$3 = require$$0$1, methods_1$3 = methods, getMetadata$3 = (Z) => __awaiter$3(void 0, void 0, void 0, function* () {
  Z._balance;
  const ee = agent_1.Actor.canisterIdOf(Z).toText();
  if (!(yield Z._extensions()).includes("@ext/common"))
    throw new Error("The provided canister does not implement commont extension");
  const ie = yield Z._metadata(ee);
  if ("ok" in ie)
    return ie.ok;
  throw new Error(Object.keys(ie.err)[0]);
}), send$3 = (Z, { to: ee, from: ne, amount: ie }) => __awaiter$3(void 0, void 0, void 0, function* () {
  const oe = new Array(32).fill(0), ce = agent_1.Actor.canisterIdOf(Z).toText(), he = {
    to: { principal: principal_1$3.Principal.fromText(ee) },
    from: { principal: principal_1$3.Principal.from(ne) },
    amount: ie,
    token: ce,
    memo: oe,
    notify: !1,
    subaccount: [],
    fee: BigInt(0)
  }, fe = yield Z._transfer(he);
  if ("ok" in fe)
    return { amount: fe.ok.toString() };
  throw new Error(Object.keys(fe.err)[0]);
}), getBalance$3 = (Z, ee) => __awaiter$3(void 0, void 0, void 0, function* () {
  const ne = agent_1.Actor.canisterIdOf(Z).toText(), ie = yield Z._balance({
    token: ne,
    user: { principal: ee }
  }), oe = yield getDecimals$3(Z);
  if ("ok" in ie)
    return { value: ie.ok.toString(), decimals: oe };
  throw new Error(Object.keys(ie.err)[0]);
}), burnXTC$3 = (Z, ee) => __awaiter$3(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$3 = (Z) => __awaiter$3(void 0, void 0, void 0, function* () {
  return (0, methods_1$3.getDecimalsFromMetadata)(yield getMetadata$3(Z));
});
extMethods.default = {
  send: send$3,
  getMetadata: getMetadata$3,
  getBalance: getBalance$3,
  burnXTC: burnXTC$3,
  getDecimals: getDecimals$3
};
var dip20Methods = {}, __awaiter$2 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
};
Object.defineProperty(dip20Methods, "__esModule", { value: !0 });
const principal_1$2 = require$$0$1, methods_1$2 = methods, getMetadata$2 = (Z) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ee = yield Z._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$2 = (Z, { to: ee, amount: ne }) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ie = yield Z._transfer(principal_1$2.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$2 = (Z, ee) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$2(Z);
  return { value: (yield Z._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$2 = (Z, ee) => __awaiter$2(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$2 = (Z) => __awaiter$2(void 0, void 0, void 0, function* () {
  return (0, methods_1$2.getDecimalsFromMetadata)(yield getMetadata$2(Z));
});
dip20Methods.default = {
  send: send$2,
  getMetadata: getMetadata$2,
  getBalance: getBalance$2,
  burnXTC: burnXTC$2,
  getDecimals: getDecimals$2
};
var xtc_did = {};
Object.defineProperty(xtc_did, "__esModule", { value: !0 });
xtc_did.init = void 0;
xtc_did.default = ({ IDL: Z }) => {
  const ee = Z.Variant({
    InsufficientAllowance: Z.Null,
    InsufficientBalance: Z.Null,
    ErrorOperationStyle: Z.Null,
    Unauthorized: Z.Null,
    LedgerTrap: Z.Null,
    ErrorTo: Z.Null,
    Other: Z.Null,
    BlockUsed: Z.Null,
    AmountTooSmall: Z.Null
  }), ne = Z.Variant({ Ok: Z.Nat, Err: ee }), ie = Z.Nat64, oe = Z.Variant({
    InsufficientBalance: Z.Null,
    InvalidTokenContract: Z.Null,
    NotSufficientLiquidity: Z.Null
  }), ce = Z.Variant({ Ok: ie, Err: oe }), he = Z.Variant({
    FAILED: Z.Null,
    SUCCEEDED: Z.Null
  }), fe = Z.Variant({
    Approve: Z.Record({ to: Z.Principal, from: Z.Principal }),
    Burn: Z.Record({ to: Z.Principal, from: Z.Principal }),
    Mint: Z.Record({ to: Z.Principal }),
    CanisterCreated: Z.Record({
      from: Z.Principal,
      canister: Z.Principal
    }),
    CanisterCalled: Z.Record({
      from: Z.Principal,
      method_name: Z.Text,
      canister: Z.Principal
    }),
    Transfer: Z.Record({ to: Z.Principal, from: Z.Principal }),
    TransferFrom: Z.Record({
      to: Z.Principal,
      from: Z.Principal,
      caller: Z.Principal
    })
  }), xe = Z.Record({
    fee: Z.Nat64,
    status: he,
    kind: fe,
    cycles: Z.Nat64,
    timestamp: Z.Nat64
  }), Ae = Z.Record({
    data: Z.Vec(xe),
    next_offset: ie,
    next_canister_id: Z.Opt(Z.Principal)
  }), Ee = Z.Record({
    fee: Z.Nat,
    decimals: Z.Nat8,
    owner: Z.Principal,
    logo: Z.Text,
    name: Z.Text,
    totalSupply: Z.Nat,
    symbol: Z.Text
  }), ye = Z.Variant({
    transferFrom: Z.Null,
    burn: Z.Null,
    mint: Z.Null,
    approve: Z.Null,
    canisterCalled: Z.Null,
    transfer: Z.Null,
    canisterCreated: Z.Null
  }), ge = Z.Int, me = Z.Record({
    op: ye,
    to: Z.Principal,
    fee: Z.Nat,
    status: he,
    from: Z.Principal,
    timestamp: ge,
    caller: Z.Opt(Z.Principal),
    index: Z.Nat,
    amount: Z.Nat
  }), Ce = Z.Variant({ NotSufficientLiquidity: Z.Null }), Ie = Z.Variant({ Ok: ie, Err: Ce }), Oe = Z.Record({
    fee: Z.Nat,
    transfers_count: Z.Nat64,
    balance: Z.Nat64,
    mints_count: Z.Nat64,
    transfers_from_count: Z.Nat64,
    canisters_created_count: Z.Nat64,
    supply: Z.Nat,
    burns_count: Z.Nat64,
    approvals_count: Z.Nat64,
    proxy_calls_count: Z.Nat64,
    history_events: Z.Nat64
  }), He = Z.Variant({
    Ok: Z.Record({ return: Z.Vec(Z.Nat8) }),
    Err: Z.Text
  }), Ne = Z.Variant({
    Ok: Z.Record({ canister_id: Z.Principal }),
    Err: Z.Text
  }), Pe = Z.Variant({ Ok: Z.Null, Err: Z.Text });
  return Z.Service({
    allowance: Z.Func([Z.Principal, Z.Principal], [Z.Nat], ["query"]),
    approve: Z.Func([Z.Principal, Z.Nat], [ne], []),
    balance: Z.Func([Z.Opt(Z.Principal)], [Z.Nat64], []),
    balanceOf: Z.Func([Z.Principal], [Z.Nat], ["query"]),
    burn: Z.Func([Z.Record({ canister_id: Z.Principal, amount: Z.Nat64 })], [ce], []),
    decimals: Z.Func([], [Z.Nat8], ["query"]),
    events: Z.Func([Z.Record({ offset: Z.Opt(Z.Nat64), limit: Z.Nat16 })], [Ae], ["query"]),
    getMetadata: Z.Func([], [Ee], ["query"]),
    getTransaction: Z.Func([Z.Nat], [me], []),
    getTransactions: Z.Func([Z.Nat, Z.Nat], [Z.Vec(me)], []),
    get_transaction: Z.Func([ie], [Z.Opt(xe)], []),
    halt: Z.Func([], [], []),
    historySize: Z.Func([], [Z.Nat], ["query"]),
    logo: Z.Func([], [Z.Text], ["query"]),
    mint: Z.Func([Z.Principal, Z.Nat], [Ie], []),
    name: Z.Func([], [Z.Text], ["query"]),
    nameErc20: Z.Func([], [Z.Text], ["query"]),
    stats: Z.Func([], [Oe], ["query"]),
    symbol: Z.Func([], [Z.Text], ["query"]),
    totalSupply: Z.Func([], [Z.Nat], ["query"]),
    transfer: Z.Func([Z.Principal, Z.Nat], [ne], []),
    transferErc20: Z.Func([Z.Principal, Z.Nat], [ne], []),
    transferFrom: Z.Func([Z.Principal, Z.Principal, Z.Nat], [ne], []),
    wallet_balance: Z.Func([], [Z.Record({ amount: Z.Nat64 })], ["query"]),
    wallet_call: Z.Func([
      Z.Record({
        args: Z.Vec(Z.Nat8),
        cycles: Z.Nat64,
        method_name: Z.Text,
        canister: Z.Principal
      })
    ], [He], []),
    wallet_create_canister: Z.Func([
      Z.Record({
        controller: Z.Opt(Z.Principal),
        cycles: Z.Nat64
      })
    ], [Ne], []),
    wallet_create_wallet: Z.Func([
      Z.Record({
        controller: Z.Opt(Z.Principal),
        cycles: Z.Nat64
      })
    ], [Ne], []),
    wallet_send: Z.Func([Z.Record({ canister: Z.Principal, amount: Z.Nat64 })], [Pe], [])
  });
};
const init$3 = () => [];
xtc_did.init = init$3;
var dip_20_did = {};
Object.defineProperty(dip_20_did, "__esModule", { value: !0 });
dip_20_did.init = void 0;
dip_20_did.default = ({ IDL: Z }) => {
  const ee = Z.Variant({
    InsufficientAllowance: Z.Null,
    InsufficientBalance: Z.Null,
    ErrorOperationStyle: Z.Null,
    Unauthorized: Z.Null,
    LedgerTrap: Z.Null,
    ErrorTo: Z.Null,
    Other: Z.Null,
    BlockUsed: Z.Null,
    AmountTooSmall: Z.Null
  }), ne = Z.Variant({ Ok: Z.Nat, Err: ee }), ie = Z.Record({
    fee: Z.Nat,
    decimals: Z.Nat8,
    owner: Z.Principal,
    logo: Z.Text,
    name: Z.Text,
    totalSupply: Z.Nat,
    symbol: Z.Text
  }), oe = Z.Record({
    holderNumber: Z.Nat64,
    deployTime: Z.Nat64,
    metadata: ie,
    historySize: Z.Nat64,
    cycles: Z.Nat64,
    feeTo: Z.Principal
  });
  return Z.Service({
    allowance: Z.Func([Z.Principal, Z.Principal], [Z.Nat], ["query"]),
    approve: Z.Func([Z.Principal, Z.Nat], [ne], []),
    balanceOf: Z.Func([Z.Principal], [Z.Nat], ["query"]),
    decimals: Z.Func([], [Z.Nat8], ["query"]),
    getAllowanceSize: Z.Func([], [Z.Nat64], ["query"]),
    getBlockUsed: Z.Func([], [Z.Vec(Z.Nat64)], ["query"]),
    getHolders: Z.Func([Z.Nat64, Z.Nat64], [Z.Vec(Z.Tuple(Z.Principal, Z.Nat))], ["query"]),
    getMetadata: Z.Func([], [ie], ["query"]),
    getTokenInfo: Z.Func([], [oe], ["query"]),
    getUserApprovals: Z.Func([Z.Principal], [Z.Vec(Z.Tuple(Z.Principal, Z.Nat))], ["query"]),
    historySize: Z.Func([], [Z.Nat64], ["query"]),
    isBlockUsed: Z.Func([Z.Nat64], [Z.Bool], ["query"]),
    logo: Z.Func([], [Z.Text], ["query"]),
    mint: Z.Func([Z.Opt(Z.Vec(Z.Nat8)), Z.Nat64], [ne], []),
    mintFor: Z.Func([Z.Opt(Z.Vec(Z.Nat8)), Z.Nat64, Z.Principal], [ne], []),
    name: Z.Func([], [Z.Text], ["query"]),
    owner: Z.Func([], [Z.Principal], ["query"]),
    setFee: Z.Func([Z.Nat], [], []),
    setFeeTo: Z.Func([Z.Principal], [], []),
    setGenesis: Z.Func([], [ne], []),
    setLogo: Z.Func([Z.Text], [], []),
    setName: Z.Func([Z.Text], [], []),
    setOwner: Z.Func([Z.Principal], [], []),
    symbol: Z.Func([], [Z.Text], ["query"]),
    totalSupply: Z.Func([], [Z.Nat], ["query"]),
    transfer: Z.Func([Z.Principal, Z.Nat], [ne], []),
    transferFrom: Z.Func([Z.Principal, Z.Principal, Z.Nat], [ne], []),
    withdraw: Z.Func([Z.Nat64, Z.Text], [ne], [])
  });
};
const init$2 = ({ IDL: Z }) => [
  Z.Text,
  Z.Text,
  Z.Text,
  Z.Nat8,
  Z.Nat,
  Z.Principal,
  Z.Nat,
  Z.Principal,
  Z.Principal
];
dip_20_did.init = init$2;
var ledger_did = {};
Object.defineProperty(ledger_did, "__esModule", { value: !0 });
ledger_did.init = void 0;
ledger_did.default = ({ IDL: Z }) => {
  const ee = Z.Text, ne = Z.Record({ secs: Z.Nat64, nanos: Z.Nat32 }), ie = Z.Record({
    max_message_size_bytes: Z.Opt(Z.Nat32),
    node_max_memory_size_bytes: Z.Opt(Z.Nat32),
    controller_id: Z.Principal
  }), oe = Z.Record({ e8s: Z.Nat64 });
  Z.Record({
    send_whitelist: Z.Vec(Z.Tuple(Z.Principal)),
    minting_account: ee,
    transaction_window: Z.Opt(ne),
    max_message_size_bytes: Z.Opt(Z.Nat32),
    archive_options: Z.Opt(ie),
    initial_values: Z.Vec(Z.Tuple(ee, oe))
  });
  const ce = Z.Record({ account: ee }), he = Z.Vec(Z.Nat8), fe = Z.Nat64, xe = Z.Record({
    to_subaccount: Z.Opt(he),
    from_subaccount: Z.Opt(he),
    to_canister: Z.Principal,
    max_fee: oe,
    block_height: fe
  }), Ae = Z.Nat64, Ee = Z.Record({ timestamp_nanos: Z.Nat64 }), ye = Z.Record({
    to: ee,
    fee: oe,
    memo: Ae,
    from_subaccount: Z.Opt(he),
    created_at_time: Z.Opt(Ee),
    amount: oe
  });
  return Z.Service({
    account_balance_dfx: Z.Func([ce], [oe], ["query"]),
    notify_dfx: Z.Func([xe], [], []),
    send_dfx: Z.Func([ye], [fe], [])
  });
};
const init$1 = ({ IDL: Z }) => {
  const ee = Z.Text, ne = Z.Record({ secs: Z.Nat64, nanos: Z.Nat32 }), ie = Z.Record({
    max_message_size_bytes: Z.Opt(Z.Nat32),
    node_max_memory_size_bytes: Z.Opt(Z.Nat32),
    controller_id: Z.Principal
  }), oe = Z.Record({ e8s: Z.Nat64 });
  return [Z.Record({
    send_whitelist: Z.Vec(Z.Tuple(Z.Principal)),
    minting_account: ee,
    transaction_window: Z.Opt(ne),
    max_message_size_bytes: Z.Opt(Z.Nat32),
    archive_options: Z.Opt(ie),
    initial_values: Z.Vec(Z.Tuple(ee, oe))
  })];
};
ledger_did.init = init$1;
var wicp_did = {};
Object.defineProperty(wicp_did, "__esModule", { value: !0 });
wicp_did.init = void 0;
wicp_did.default = ({ IDL: Z }) => {
  const ee = Z.Variant({
    InsufficientAllowance: Z.Null,
    InsufficientBalance: Z.Null,
    ErrorOperationStyle: Z.Null,
    Unauthorized: Z.Null,
    LedgerTrap: Z.Null,
    ErrorTo: Z.Null,
    Other: Z.Null,
    BlockUsed: Z.Null,
    AmountTooSmall: Z.Null
  }), ne = Z.Variant({ Ok: Z.Nat, Err: ee }), ie = Z.Record({
    fee: Z.Nat,
    decimals: Z.Nat8,
    owner: Z.Principal,
    logo: Z.Text,
    name: Z.Text,
    totalSupply: Z.Nat,
    symbol: Z.Text
  }), oe = Z.Record({
    holderNumber: Z.Nat64,
    deployTime: Z.Nat64,
    metadata: ie,
    historySize: Z.Nat64,
    cycles: Z.Nat64,
    feeTo: Z.Principal
  });
  return Z.Service({
    allowance: Z.Func([Z.Principal, Z.Principal], [Z.Nat], ["query"]),
    approve: Z.Func([Z.Principal, Z.Nat], [ne], []),
    balanceOf: Z.Func([Z.Principal], [Z.Nat], ["query"]),
    decimals: Z.Func([], [Z.Nat8], ["query"]),
    getAllowanceSize: Z.Func([], [Z.Nat64], ["query"]),
    getHolders: Z.Func([Z.Nat64, Z.Nat64], [Z.Vec(Z.Tuple(Z.Principal, Z.Nat))], ["query"]),
    getLogo: Z.Func([], [Z.Text], ["query"]),
    getMetadata: Z.Func([], [ie], ["query"]),
    getTokenInfo: Z.Func([], [oe], ["query"]),
    getUserApprovals: Z.Func([Z.Principal], [Z.Vec(Z.Tuple(Z.Principal, Z.Nat))], ["query"]),
    historySize: Z.Func([], [Z.Nat64], ["query"]),
    mint: Z.Func([Z.Opt(Z.Vec(Z.Nat8)), Z.Nat64], [ne], []),
    name: Z.Func([], [Z.Text], ["query"]),
    owner: Z.Func([], [Z.Principal], ["query"]),
    setFee: Z.Func([Z.Nat], [], []),
    setFeeTo: Z.Func([Z.Principal], [], []),
    setLogo: Z.Func([Z.Text], [], []),
    setName: Z.Func([Z.Text], [], []),
    setOwner: Z.Func([Z.Principal], [], []),
    symbol: Z.Func([], [Z.Text], ["query"]),
    totalSupply: Z.Func([], [Z.Nat], ["query"]),
    transfer: Z.Func([Z.Principal, Z.Nat], [ne], []),
    transferFrom: Z.Func([Z.Principal, Z.Principal, Z.Nat], [ne], []),
    withdraw: Z.Func([Z.Nat64, Z.Text], [ne], [])
  });
};
const init = ({ IDL: Z }) => [
  Z.Text,
  Z.Text,
  Z.Text,
  Z.Nat8,
  Z.Nat,
  Z.Principal,
  Z.Nat,
  Z.Principal,
  Z.Principal
];
wicp_did.init = init;
var wicpMethods = {}, __awaiter$1 = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
};
Object.defineProperty(wicpMethods, "__esModule", { value: !0 });
const principal_1$1 = require$$0$1, methods_1$1 = methods, getMetadata$1 = (Z) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ee = yield Z._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$1 = (Z, { to: ee, amount: ne }) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ie = yield Z._transfer(principal_1$1.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$1 = (Z, ee) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$1(Z);
  return { value: (yield Z._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$1 = (Z, ee) => __awaiter$1(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$1 = (Z) => __awaiter$1(void 0, void 0, void 0, function* () {
  return (0, methods_1$1.getDecimalsFromMetadata)(yield getMetadata$1(Z));
});
wicpMethods.default = {
  send: send$1,
  getMetadata: getMetadata$1,
  getBalance: getBalance$1,
  burnXTC: burnXTC$1,
  getDecimals: getDecimals$1
};
var rosettaMethods = {}, validations = {};
(function(Z) {
  Object.defineProperty(Z, "__esModule", { value: !0 }), Z.validateToken = Z.validateCanisterId = Z.validateAccountId = Z.validatePrincipalId = Z.isValidPrincipal = Z.ALPHANUM_REGEX = Z.PRINCIPAL_REGEX = Z.CANISTER_MAX_LENGTH = void 0;
  const ee = require$$0$1;
  Z.CANISTER_MAX_LENGTH = 27, Z.PRINCIPAL_REGEX = /(\w{5}-){10}\w{3}/, Z.ALPHANUM_REGEX = /^[a-zA-Z0-9]+$/;
  const ne = (fe) => ee.Principal.fromText(fe).toText() === fe;
  Z.isValidPrincipal = ne;
  const ie = (fe) => {
    try {
      return Boolean(Z.PRINCIPAL_REGEX.test(fe) && (0, Z.isValidPrincipal)(fe));
    } catch {
      return !1;
    }
  };
  Z.validatePrincipalId = ie;
  const oe = (fe) => fe.length === 64 && Z.ALPHANUM_REGEX.test(fe);
  Z.validateAccountId = oe;
  const ce = (fe) => {
    try {
      return Boolean(fe.length <= Z.CANISTER_MAX_LENGTH && (0, Z.isValidPrincipal)(fe));
    } catch {
      return !1;
    }
  };
  Z.validateCanisterId = ce;
  const he = (fe) => Boolean(!!fe.decimal && !!fe.name && !!fe.symbol);
  Z.validateToken = he;
})(validations);
var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(Z, ee, ne, ie) {
  function oe(ce) {
    return ce instanceof ne ? ce : new ne(function(he) {
      he(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, he) {
    function fe(Ee) {
      try {
        Ae(ie.next(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function xe(Ee) {
      try {
        Ae(ie.throw(Ee));
      } catch (ye) {
        he(ye);
      }
    }
    function Ae(Ee) {
      Ee.done ? ce(Ee.value) : oe(Ee.value).then(fe, xe);
    }
    Ae((ie = ie.apply(Z, ee || [])).next());
  });
}, __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function(Z) {
  return Z && Z.__esModule ? Z : { default: Z };
};
Object.defineProperty(rosettaMethods, "__esModule", { value: !0 });
const principal_1 = require$$0$1, cross_fetch_1 = __importDefault(browserPonyfill.exports), methods_1 = methods, account_1 = account, validations_1 = validations, DECIMALS = 8, NET_ID = {
  blockchain: "Internet Computer",
  network: "00000000000000020101"
}, ROSETTA_URL = "https://rosetta-api.internetcomputer.org", getMetadata = (Z) => __awaiter(void 0, void 0, void 0, function* () {
  return {
    fungible: {
      symbol: "ICP",
      decimals: DECIMALS,
      name: "ICP",
      fee: 1e4
    }
  };
}), send = (Z, { to: ee, amount: ne, opts: ie }) => __awaiter(void 0, void 0, void 0, function* () {
  const oe = {
    fee: BigInt(1e4),
    memo: BigInt(0)
  };
  return { height: yield (yield Z._send_dfx({
    to: (0, validations_1.validatePrincipalId)(ee) ? (0, account_1.getAccountId)(principal_1.Principal.fromText(ee)) : ee,
    fee: { e8s: (ie == null ? void 0 : ie.fee) || oe.fee },
    amount: { e8s: ne },
    memo: ie != null && ie.memo ? BigInt(ie.memo) : oe.memo,
    from_subaccount: [],
    created_at_time: []
  })).toString() };
}), getBalance = (Z, ee) => __awaiter(void 0, void 0, void 0, function* () {
  const ne = (0, account_1.getAccountId)(ee), ie = yield getDecimals(), oe = yield (0, cross_fetch_1.default)(`${ROSETTA_URL}/account/balance`, {
    method: "POST",
    body: JSON.stringify({
      network_identifier: NET_ID,
      account_identifier: {
        address: ne
      }
    }),
    headers: {
      "Content-Type": "application/json",
      Accept: "*/*"
    }
  });
  if (!oe.ok)
    return { value: "Error", decimals: ie, error: oe.statusText };
  const { balances: ce } = yield oe.json(), [{ value: he, currency: fe }] = ce;
  return { value: he, decimals: fe.decimals };
}), burnXTC = (Z, ee) => __awaiter(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals = (Z) => __awaiter(void 0, void 0, void 0, function* () {
  return (0, methods_1.getDecimalsFromMetadata)(yield getMetadata());
});
rosettaMethods.default = {
  send,
  getMetadata,
  getBalance,
  burnXTC,
  getDecimals
};
var icpStandardMethods = {}, hasRequiredIcpStandardMethods;
function requireIcpStandardMethods() {
  if (hasRequiredIcpStandardMethods)
    return icpStandardMethods;
  hasRequiredIcpStandardMethods = 1;
  var Z = commonjsGlobal && commonjsGlobal.__awaiter || function(ge, me, Ce, Ie) {
    function Oe(He) {
      return He instanceof Ce ? He : new Ce(function(Ne) {
        Ne(He);
      });
    }
    return new (Ce || (Ce = Promise))(function(He, Ne) {
      function Pe(We) {
        try {
          Le(Ie.next(We));
        } catch (rt) {
          Ne(rt);
        }
      }
      function Fe(We) {
        try {
          Le(Ie.throw(We));
        } catch (rt) {
          Ne(rt);
        }
      }
      function Le(We) {
        We.done ? He(We.value) : Oe(We.value).then(Pe, Fe);
      }
      Le((Ie = Ie.apply(ge, me || [])).next());
    });
  };
  Object.defineProperty(icpStandardMethods, "__esModule", { value: !0 });
  const ee = require$$0$1, ne = require$$0$2, ie = methods, oe = account, ce = validations, he = requireRegistries(), fe = (ge) => Z(void 0, void 0, void 0, function* () {
    var me, Ce, Ie;
    const Oe = ne.Actor.agentOf(ge);
    try {
      const Ne = yield new he.TokenRegistry(Oe).get(ne.Actor.canisterIdOf(ge).toString()), { fee: Pe = 2e-3, decimals: Fe = 8 } = (Ne == null ? void 0 : Ne.details) || {}, Le = Number((me = Pe == null ? void 0 : Pe.toString) === null || me === void 0 ? void 0 : me.call(Pe)), We = Number((Ce = Fe == null ? void 0 : Fe.toString) === null || Ce === void 0 ? void 0 : Ce.call(Fe)), rt = Le * Math.pow(10, We);
      return {
        fungible: {
          symbol: ((Ie = Ne == null ? void 0 : Ne.details) === null || Ie === void 0 ? void 0 : Ie.symbol) || "ICP",
          name: (Ne == null ? void 0 : Ne.name) || "ICP",
          decimals: We,
          fee: rt
        }
      };
    } catch (He) {
      return console.error("Error while fetching token metadata, falling back to default values", He), {
        fungible: {
          symbol: "ICP",
          name: "ICP",
          decimals: 8,
          fee: 1e4
        }
      };
    }
  }), xe = (ge, { to: me, amount: Ce, opts: Ie }) => Z(void 0, void 0, void 0, function* () {
    const Oe = yield fe(ge), { fee: He = 2e-3, decimals: Ne = BigInt(8) } = (Oe == null ? void 0 : Oe.fungible) || {}, Pe = {
      fee: BigInt(He * Math.pow(10, parseInt(Ne.toString(), 10))),
      memo: BigInt(0)
    };
    return { height: yield (yield ge._send_dfx({
      to: (0, ce.validatePrincipalId)(me) ? (0, oe.getAccountId)(ee.Principal.fromText(me)) : me,
      fee: { e8s: (Ie == null ? void 0 : Ie.fee) || Pe.fee },
      amount: { e8s: Ce },
      memo: Ie != null && Ie.memo ? BigInt(Ie.memo) : Pe.memo,
      from_subaccount: [],
      created_at_time: []
    })).toString() };
  }), Ae = (ge, me) => Z(void 0, void 0, void 0, function* () {
    try {
      const Ce = (0, oe.getAccountId)(me);
      return { value: (yield ge._account_balance_dfx({ account: Ce })).e8s.toString(), decimals: 8 };
    } catch {
      return {
        value: "Error",
        decimals: 8,
        error: "Error while fetching your balance"
      };
    }
  }), Ee = (ge, me) => Z(void 0, void 0, void 0, function* () {
    throw new Error("BURN NOT SUPPORTED");
  }), ye = (ge) => Z(void 0, void 0, void 0, function* () {
    return (0, ie.getDecimalsFromMetadata)(yield fe(ge));
  });
  return icpStandardMethods.default = {
    send: xe,
    getMetadata: fe,
    getBalance: Ae,
    burnXTC: Ee,
    getDecimals: ye
  }, icpStandardMethods;
}
var hasRequiredToken_standards;
function requireToken_standards() {
  if (hasRequiredToken_standards)
    return token_standards;
  hasRequiredToken_standards = 1;
  var Z = commonjsGlobal && commonjsGlobal.__awaiter || function(Fe, Le, We, rt) {
    function gt(kt) {
      return kt instanceof We ? kt : new We(function(Ke) {
        Ke(kt);
      });
    }
    return new (We || (We = Promise))(function(kt, Ke) {
      function ht(At) {
        try {
          Ft(rt.next(At));
        } catch (St) {
          Ke(St);
        }
      }
      function Nt(At) {
        try {
          Ft(rt.throw(At));
        } catch (St) {
          Ke(St);
        }
      }
      function Ft(At) {
        At.done ? kt(At.value) : gt(At.value).then(ht, Nt);
      }
      Ft((rt = rt.apply(Fe, Le || [])).next());
    });
  }, ee = commonjsGlobal && commonjsGlobal.__importDefault || function(Fe) {
    return Fe && Fe.__esModule ? Fe : { default: Fe };
  };
  Object.defineProperty(token_standards, "__esModule", { value: !0 }), token_standards.parseBalance = token_standards.createTokenActor = void 0;
  const ne = actorFactory, ie = ee(methods), oe = ee(xtcMethods), ce = ee(extMethods), he = ee(dip20Methods), fe = ee(ext_did), xe = ee(xtc_did), Ae = ee(dip_20_did), Ee = ee(ledger_did), ye = standards, ge = ee(wicp_did), me = ee(wicpMethods), Ce = ee(rosettaMethods), Ie = ee(requireIcpStandardMethods()), Oe = (Fe) => ({
    [ye.TOKEN.xtc]: oe.default,
    [ye.TOKEN.ext]: ce.default,
    [ye.TOKEN.dip20]: he.default,
    [ye.TOKEN.wicp]: me.default,
    [ye.TOKEN.rosetta]: Ce.default,
    [ye.TOKEN.icp]: Ie.default
  })[Fe] || ie.default, He = (Fe) => {
    const Le = {
      [ye.TOKEN.xtc]: xe.default,
      [ye.TOKEN.ext]: fe.default,
      [ye.TOKEN.dip20]: Ae.default,
      [ye.TOKEN.wicp]: ge.default,
      [ye.TOKEN.rosetta]: Ee.default,
      [ye.TOKEN.icp]: Ee.default
    }[Fe];
    if (!Le)
      throw new Error(`Standard ${Fe} Not Implemented`);
    return Le;
  }, Ne = (Fe, Le, We) => Z(void 0, void 0, void 0, function* () {
    const rt = He(We);
    return new ((0, ne.createExtendedActorClass)(Le, Oe(We), Fe, rt))();
  });
  token_standards.createTokenActor = Ne;
  const Pe = (Fe) => (parseInt(Fe.value, 10) / Math.pow(10, Fe.decimals)).toString();
  return token_standards.parseBalance = Pe, token_standards.default = {}, token_standards;
}
var hasRequiredToken_registry;
function requireToken_registry() {
  return hasRequiredToken_registry || (hasRequiredToken_registry = 1, function(Z) {
    var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(He, Ne, Pe, Fe) {
      function Le(We) {
        return We instanceof Pe ? We : new Pe(function(rt) {
          rt(We);
        });
      }
      return new (Pe || (Pe = Promise))(function(We, rt) {
        function gt(ht) {
          try {
            Ke(Fe.next(ht));
          } catch (Nt) {
            rt(Nt);
          }
        }
        function kt(ht) {
          try {
            Ke(Fe.throw(ht));
          } catch (Nt) {
            rt(Nt);
          }
        }
        function Ke(ht) {
          ht.done ? We(ht.value) : Le(ht.value).then(gt, kt);
        }
        Ke((Fe = Fe.apply(He, Ne || [])).next());
      });
    }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(He) {
      return He && He.__esModule ? He : { default: He };
    };
    Object.defineProperty(Z, "__esModule", { value: !0 }), Z.getTokens = Z.TokenRegistry = Z.getTokenActor = Z.TOKEN_STANDARDS = void 0;
    const ie = require$$0$2, oe = ne(browserPonyfill.exports), ce = ne(token_registry_did), he = ne(standard_registry), fe = actorFactory, xe = registry, Ae = constants, Ee = requireToken_standards(), ye = standards, ge = "b7hhy-tyaaa-aaaah-abbja-cai", me = new ie.HttpAgent({ fetch: oe.default, host: Ae.IC_HOST });
    Z.TOKEN_STANDARDS = Object.values(ye.TOKEN);
    const Ce = ({ canisterId: He, agent: Ne, standard: Pe }) => {
      if (!Z.TOKEN_STANDARDS.includes(Pe))
        throw console.error(`Standard ${Pe} is not implemented`), new Error(`standard is not supported: ${Pe}`);
      return (0, Ee.createTokenActor)(He, Ne, Pe);
    };
    Z.getTokenActor = Ce;
    class Ie extends he.default {
      constructor(Ne) {
        super(ge, Ne), this.getAll = () => ee(this, void 0, void 0, function* () {
          return (yield this.actor.get_all()).map(xe.formatMetadata);
        }), this.actor = (0, fe.generateActor)({
          agent: Ne || me,
          canisterId: ge,
          IDL: ce.default
        });
      }
    }
    Z.TokenRegistry = Ie;
    const Oe = ({ agent: He = me } = {}) => ee(void 0, void 0, void 0, function* () {
      return (yield new Ie(He).getAll()).map((Fe) => Object.assign(Object.assign({}, Fe), { logo: Fe.thumbnail, name: Fe.name, description: Fe.description, website: Fe.frontend.length ? Fe.frontend[0] : "", principal_id: Fe.principal_id, standard: Fe.details.standard, total_supply: [Fe.details.total_supply], symbol: Fe.details.symbol }));
    });
    Z.getTokens = Oe, Z.default = {
      getTokenActor: Z.getTokenActor,
      getTokens: Z.getTokens,
      addToken: ({ agent: He, tokenInfo: Ne }) => ee(void 0, void 0, void 0, function* () {
        return new Ie(He).add(Ne);
      }),
      removeToken: ({ agent: He, canisterId: Ne }) => ee(void 0, void 0, void 0, function* () {
        return new Ie(He).remove(Ne);
      })
    };
  }(token_registry)), token_registry;
}
var address_book = {}, address_book_did = {};
Object.defineProperty(address_book_did, "__esModule", { value: !0 });
const addressBookIDL = ({ IDL: Z }) => {
  const ee = Z.Variant({
    PrincipalId: Z.Principal,
    AccountId: Z.Text,
    Icns: Z.Text
  }), ne = Z.Record({
    name: Z.Text,
    description: Z.Opt(Z.Text),
    emoji: Z.Opt(Z.Text),
    value: ee
  }), ie = Z.Variant({
    NotAuthorized: Z.Null,
    BadParameters: Z.Null,
    Unknown: Z.Text,
    NonExistentItem: Z.Null
  }), oe = Z.Variant({
    Ok: Z.Null,
    Err: ie
  });
  return Z.Service({
    add: Z.Func([ne], [oe], []),
    get_all: Z.Func([], [Z.Vec(ne)], []),
    name: Z.Func([], [Z.Text], ["query"]),
    remove: Z.Func([Z.Text], [oe], [])
  });
};
address_book_did.default = addressBookIDL;
(function(Z) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Ee, ye, ge, me) {
    function Ce(Ie) {
      return Ie instanceof ge ? Ie : new ge(function(Oe) {
        Oe(Ie);
      });
    }
    return new (ge || (ge = Promise))(function(Ie, Oe) {
      function He(Fe) {
        try {
          Pe(me.next(Fe));
        } catch (Le) {
          Oe(Le);
        }
      }
      function Ne(Fe) {
        try {
          Pe(me.throw(Fe));
        } catch (Le) {
          Oe(Le);
        }
      }
      function Pe(Fe) {
        Fe.done ? Ie(Fe.value) : Ce(Fe.value).then(He, Ne);
      }
      Pe((me = me.apply(Ee, ye || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Ee) {
    return Ee && Ee.__esModule ? Ee : { default: Ee };
  };
  Object.defineProperty(Z, "__esModule", { value: !0 }), Z.removeAddress = Z.addAddress = Z.getAddresses = Z.getAddressBookActor = void 0;
  const ie = require$$0$2, oe = ne(address_book_did), ce = "i73cm-daaaa-aaaah-abhea-cai", he = (Ee) => ie.Actor.createActor(oe.default, { agent: Ee, canisterId: ce });
  Z.getAddressBookActor = he;
  const fe = (Ee) => ee(void 0, void 0, void 0, function* () {
    return (yield (0, Z.getAddressBookActor)(Ee).get_all()).map((me) => ({
      name: me.name,
      description: me.description,
      emoji: me.emoji,
      value: me.value
    }));
  });
  Z.getAddresses = fe;
  const xe = (Ee, ye) => ee(void 0, void 0, void 0, function* () {
    return yield (0, Z.getAddressBookActor)(Ee).add({
      name: ye.name,
      description: ye.description,
      emoji: ye.emoji,
      value: ye.value
    });
  });
  Z.addAddress = xe;
  const Ae = (Ee, ye) => ee(void 0, void 0, void 0, function* () {
    return yield (0, Z.getAddressBookActor)(Ee).remove(ye);
  });
  Z.removeAddress = Ae, Z.default = {
    getAddressBookActor: Z.getAddressBookActor,
    getAddresses: Z.getAddresses,
    addAddress: Z.addAddress,
    removeAddress: Z.removeAddress
  };
})(address_book);
var hasRequiredRegistries;
function requireRegistries() {
  return hasRequiredRegistries || (hasRequiredRegistries = 1, function(Z) {
    var ee = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(ie, oe, ce, he) {
      he === void 0 && (he = ce);
      var fe = Object.getOwnPropertyDescriptor(oe, ce);
      (!fe || ("get" in fe ? !oe.__esModule : fe.writable || fe.configurable)) && (fe = { enumerable: !0, get: function() {
        return oe[ce];
      } }), Object.defineProperty(ie, he, fe);
    } : function(ie, oe, ce, he) {
      he === void 0 && (he = ce), ie[he] = oe[ce];
    }), ne = commonjsGlobal && commonjsGlobal.__exportStar || function(ie, oe) {
      for (var ce in ie)
        ce !== "default" && !Object.prototype.hasOwnProperty.call(oe, ce) && ee(oe, ie, ce);
    };
    Object.defineProperty(Z, "__esModule", { value: !0 }), ne(nfts_registry, Z), ne(canister_registry, Z), ne(requireToken_registry(), Z), ne(address_book, Z);
  }(registries)), registries;
}
var nft = {};
Object.defineProperty(nft, "__esModule", { value: !0 });
var token = {};
Object.defineProperty(token, "__esModule", { value: !0 });
(function(Z) {
  var ee = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(fe, xe, Ae, Ee) {
    Ee === void 0 && (Ee = Ae);
    var ye = Object.getOwnPropertyDescriptor(xe, Ae);
    (!ye || ("get" in ye ? !xe.__esModule : ye.writable || ye.configurable)) && (ye = { enumerable: !0, get: function() {
      return xe[Ae];
    } }), Object.defineProperty(fe, Ee, ye);
  } : function(fe, xe, Ae, Ee) {
    Ee === void 0 && (Ee = Ae), fe[Ee] = xe[Ae];
  }), ne = commonjsGlobal && commonjsGlobal.__setModuleDefault || (Object.create ? function(fe, xe) {
    Object.defineProperty(fe, "default", { enumerable: !0, value: xe });
  } : function(fe, xe) {
    fe.default = xe;
  }), ie = commonjsGlobal && commonjsGlobal.__exportStar || function(fe, xe) {
    for (var Ae in fe)
      Ae !== "default" && !Object.prototype.hasOwnProperty.call(xe, Ae) && ee(xe, fe, Ae);
  }, oe = commonjsGlobal && commonjsGlobal.__importStar || function(fe) {
    if (fe && fe.__esModule)
      return fe;
    var xe = {};
    if (fe != null)
      for (var Ae in fe)
        Ae !== "default" && Object.prototype.hasOwnProperty.call(fe, Ae) && ee(xe, fe, Ae);
    return ne(xe, fe), xe;
  }, ce = commonjsGlobal && commonjsGlobal.__importDefault || function(fe) {
    return fe && fe.__esModule ? fe : { default: fe };
  };
  Object.defineProperty(Z, "__esModule", { value: !0 }), Z.standards = Z.TokenInterfaces = Z.NFTInterfaces = void 0, ie(requireRegistries(), Z), ie(nft, Z), ie(token, Z), Z.NFTInterfaces = oe(nft), Z.TokenInterfaces = oe(token);
  var he = standards;
  Object.defineProperty(Z, "standards", { enumerable: !0, get: function() {
    return ce(he).default;
  } });
})(dist);
const clone = (Z) => structuredClone(Z), getInventoryBoxes = (Z) => [...Array(inventoryBoxNum).keys()].map((ne) => {
  var ie;
  return {
    id: ne,
    type: "all",
    item: (ie = Z[ne]) != null ? ie : null
  };
}), getUserTokens = async ({
  agent: Z,
  user: ee
}) => {
  const ne = await dist.getAllUserNFTs({
    agent: Z,
    user: ee
  });
  console.log("collections: ", ne);
  const ie = {};
  let oe = 0;
  return ne.forEach((ce) => {
    ce.name.toLowerCase().includes("cipher") || ce.tokens.forEach((he) => {
      var xe, Ae;
      const fe = (Ae = (xe = he.metadata) == null ? void 0 : xe.json) == null ? void 0 : Ae.value.TextContent;
      if (fe) {
        const Ee = JSON.parse(fe);
        he.metadata = Ee;
      } else
        he.metadata = {
          name: he.collection,
          image: he.url
        };
      ie[oe] = {
        ...he,
        id: oe
      }, oe++;
    });
  }), console.log("newTokens: ", ie), ie;
}, getExtension = (Z) => Z.split(".").pop().toLowerCase(), isImage = (Z) => {
  if (!Z)
    return !1;
  const ee = ["apng", "avif", "gif", "jpg", "jpeg", "jfif", "pjpeg", "pjp", "png", "svg", "webp", "bmp", "ico", "cur", "tif", "tiff"], ne = getExtension(Z);
  return ee.indexOf(ne) >= 0;
}, isMedia = (Z) => {
  if (!Z)
    return !1;
  const ee = ["mp4", "mov", "wav", "mp3", "ogg", "webm", "avi"], ne = getExtension(Z);
  return ee.indexOf(ne) >= 0;
}, createStoreImpl = (Z) => {
  let ee;
  const ne = /* @__PURE__ */ new Set(), ie = (xe, Ae) => {
    const Ee = typeof xe == "function" ? xe(ee) : xe;
    if (!Object.is(Ee, ee)) {
      const ye = ee;
      ee = (Ae != null ? Ae : typeof Ee != "object") ? Ee : Object.assign({}, ee, Ee), ne.forEach((ge) => ge(ee, ye));
    }
  }, oe = () => ee, fe = { setState: ie, getState: oe, subscribe: (xe) => (ne.add(xe), () => ne.delete(xe)), destroy: () => ne.clear() };
  return ee = Z(ie, oe, fe), fe;
}, createStore = (Z) => Z ? createStoreImpl(Z) : createStoreImpl;
var withSelector = { exports: {} }, withSelector_production_min = {}, shim = { exports: {} }, useSyncExternalStoreShim_production_min = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_production_min;
function requireUseSyncExternalStoreShim_production_min() {
  if (hasRequiredUseSyncExternalStoreShim_production_min)
    return useSyncExternalStoreShim_production_min;
  hasRequiredUseSyncExternalStoreShim_production_min = 1;
  var Z = React__default;
  function ee(ye, ge) {
    return ye === ge && (ye !== 0 || 1 / ye === 1 / ge) || ye !== ye && ge !== ge;
  }
  var ne = typeof Object.is == "function" ? Object.is : ee, ie = Z.useState, oe = Z.useEffect, ce = Z.useLayoutEffect, he = Z.useDebugValue;
  function fe(ye, ge) {
    var me = ge(), Ce = ie({ inst: { value: me, getSnapshot: ge } }), Ie = Ce[0].inst, Oe = Ce[1];
    return ce(function() {
      Ie.value = me, Ie.getSnapshot = ge, xe(Ie) && Oe({ inst: Ie });
    }, [ye, me, ge]), oe(function() {
      return xe(Ie) && Oe({ inst: Ie }), ye(function() {
        xe(Ie) && Oe({ inst: Ie });
      });
    }, [ye]), he(me), me;
  }
  function xe(ye) {
    var ge = ye.getSnapshot;
    ye = ye.value;
    try {
      var me = ge();
      return !ne(ye, me);
    } catch {
      return !0;
    }
  }
  function Ae(ye, ge) {
    return ge();
  }
  var Ee = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? Ae : fe;
  return useSyncExternalStoreShim_production_min.useSyncExternalStore = Z.useSyncExternalStore !== void 0 ? Z.useSyncExternalStore : Ee, useSyncExternalStoreShim_production_min;
}
var useSyncExternalStoreShim_development = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_development;
function requireUseSyncExternalStoreShim_development() {
  return hasRequiredUseSyncExternalStoreShim_development || (hasRequiredUseSyncExternalStoreShim_development = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var Z = React__default, ee = Z.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function ne(Pe) {
      {
        for (var Fe = arguments.length, Le = new Array(Fe > 1 ? Fe - 1 : 0), We = 1; We < Fe; We++)
          Le[We - 1] = arguments[We];
        ie("error", Pe, Le);
      }
    }
    function ie(Pe, Fe, Le) {
      {
        var We = ee.ReactDebugCurrentFrame, rt = We.getStackAddendum();
        rt !== "" && (Fe += "%s", Le = Le.concat([rt]));
        var gt = Le.map(function(kt) {
          return String(kt);
        });
        gt.unshift("Warning: " + Fe), Function.prototype.apply.call(console[Pe], console, gt);
      }
    }
    function oe(Pe, Fe) {
      return Pe === Fe && (Pe !== 0 || 1 / Pe === 1 / Fe) || Pe !== Pe && Fe !== Fe;
    }
    var ce = typeof Object.is == "function" ? Object.is : oe, he = Z.useState, fe = Z.useEffect, xe = Z.useLayoutEffect, Ae = Z.useDebugValue, Ee = !1, ye = !1;
    function ge(Pe, Fe, Le) {
      Ee || Z.startTransition !== void 0 && (Ee = !0, ne("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var We = Fe();
      if (!ye) {
        var rt = Fe();
        ce(We, rt) || (ne("The result of getSnapshot should be cached to avoid an infinite loop"), ye = !0);
      }
      var gt = he({
        inst: {
          value: We,
          getSnapshot: Fe
        }
      }), kt = gt[0].inst, Ke = gt[1];
      return xe(function() {
        kt.value = We, kt.getSnapshot = Fe, me(kt) && Ke({
          inst: kt
        });
      }, [Pe, We, Fe]), fe(function() {
        me(kt) && Ke({
          inst: kt
        });
        var ht = function() {
          me(kt) && Ke({
            inst: kt
          });
        };
        return Pe(ht);
      }, [Pe]), Ae(We), We;
    }
    function me(Pe) {
      var Fe = Pe.getSnapshot, Le = Pe.value;
      try {
        var We = Fe();
        return !ce(Le, We);
      } catch {
        return !0;
      }
    }
    function Ce(Pe, Fe, Le) {
      return Fe();
    }
    var Ie = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", Oe = !Ie, He = Oe ? Ce : ge, Ne = Z.useSyncExternalStore !== void 0 ? Z.useSyncExternalStore : He;
    useSyncExternalStoreShim_development.useSyncExternalStore = Ne, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), useSyncExternalStoreShim_development;
}
var hasRequiredShim;
function requireShim() {
  return hasRequiredShim || (hasRequiredShim = 1, function(Z) {
    process.env.NODE_ENV === "production" ? Z.exports = requireUseSyncExternalStoreShim_production_min() : Z.exports = requireUseSyncExternalStoreShim_development();
  }(shim)), shim.exports;
}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredWithSelector_production_min;
function requireWithSelector_production_min() {
  if (hasRequiredWithSelector_production_min)
    return withSelector_production_min;
  hasRequiredWithSelector_production_min = 1;
  var Z = React__default, ee = requireShim();
  function ne(Ae, Ee) {
    return Ae === Ee && (Ae !== 0 || 1 / Ae === 1 / Ee) || Ae !== Ae && Ee !== Ee;
  }
  var ie = typeof Object.is == "function" ? Object.is : ne, oe = ee.useSyncExternalStore, ce = Z.useRef, he = Z.useEffect, fe = Z.useMemo, xe = Z.useDebugValue;
  return withSelector_production_min.useSyncExternalStoreWithSelector = function(Ae, Ee, ye, ge, me) {
    var Ce = ce(null);
    if (Ce.current === null) {
      var Ie = { hasValue: !1, value: null };
      Ce.current = Ie;
    } else
      Ie = Ce.current;
    Ce = fe(function() {
      function He(We) {
        if (!Ne) {
          if (Ne = !0, Pe = We, We = ge(We), me !== void 0 && Ie.hasValue) {
            var rt = Ie.value;
            if (me(rt, We))
              return Fe = rt;
          }
          return Fe = We;
        }
        if (rt = Fe, ie(Pe, We))
          return rt;
        var gt = ge(We);
        return me !== void 0 && me(rt, gt) ? rt : (Pe = We, Fe = gt);
      }
      var Ne = !1, Pe, Fe, Le = ye === void 0 ? null : ye;
      return [function() {
        return He(Ee());
      }, Le === null ? void 0 : function() {
        return He(Le());
      }];
    }, [Ee, ye, ge, me]);
    var Oe = oe(Ae, Ce[0], Ce[1]);
    return he(function() {
      Ie.hasValue = !0, Ie.value = Oe;
    }, [Oe]), xe(Oe), Oe;
  }, withSelector_production_min;
}
var withSelector_development = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredWithSelector_development;
function requireWithSelector_development() {
  return hasRequiredWithSelector_development || (hasRequiredWithSelector_development = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var Z = React__default, ee = requireShim();
    function ne(Ee, ye) {
      return Ee === ye && (Ee !== 0 || 1 / Ee === 1 / ye) || Ee !== Ee && ye !== ye;
    }
    var ie = typeof Object.is == "function" ? Object.is : ne, oe = ee.useSyncExternalStore, ce = Z.useRef, he = Z.useEffect, fe = Z.useMemo, xe = Z.useDebugValue;
    function Ae(Ee, ye, ge, me, Ce) {
      var Ie = ce(null), Oe;
      Ie.current === null ? (Oe = {
        hasValue: !1,
        value: null
      }, Ie.current = Oe) : Oe = Ie.current;
      var He = fe(function() {
        var Le = !1, We, rt, gt = function(Nt) {
          if (!Le) {
            Le = !0, We = Nt;
            var Ft = me(Nt);
            if (Ce !== void 0 && Oe.hasValue) {
              var At = Oe.value;
              if (Ce(At, Ft))
                return rt = At, At;
            }
            return rt = Ft, Ft;
          }
          var St = We, Vt = rt;
          if (ie(St, Nt))
            return Vt;
          var Xt = me(Nt);
          return Ce !== void 0 && Ce(Vt, Xt) ? Vt : (We = Nt, rt = Xt, Xt);
        }, kt = ge === void 0 ? null : ge, Ke = function() {
          return gt(ye());
        }, ht = kt === null ? void 0 : function() {
          return gt(kt());
        };
        return [Ke, ht];
      }, [ye, ge, me, Ce]), Ne = He[0], Pe = He[1], Fe = oe(Ee, Ne, Pe);
      return he(function() {
        Oe.hasValue = !0, Oe.value = Fe;
      }, [Fe]), xe(Fe), Fe;
    }
    withSelector_development.useSyncExternalStoreWithSelector = Ae, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), withSelector_development;
}
(function(Z) {
  process.env.NODE_ENV === "production" ? Z.exports = requireWithSelector_production_min() : Z.exports = requireWithSelector_development();
})(withSelector);
const useSyncExternalStoreExports = /* @__PURE__ */ getDefaultExportFromCjs(withSelector.exports), { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;
function useStore$1(Z, ee = Z.getState, ne) {
  const ie = useSyncExternalStoreWithSelector(
    Z.subscribe,
    Z.getState,
    Z.getServerState || Z.getState,
    ee,
    ne
  );
  return useDebugValue(ie), ie;
}
const createImpl = (Z) => {
  const ee = typeof Z == "function" ? createStore(Z) : Z, ne = (ie, oe) => useStore$1(ee, ie, oe);
  return Object.assign(ne, ee), ne;
}, create = (Z) => Z ? createImpl(Z) : createImpl, initRemoteBoxes = [...Array(tradeBoxNum).keys()].map((Z) => ({
  id: Z,
  item: null
})), initLocalBoxes = [...Array(tradeBoxNum).keys()].map((Z) => ({
  id: Z,
  item: null
})), initInventoryBoxes = [...Array(inventoryBoxNum).keys()].map((Z) => ({
  id: Z,
  type: "all",
  item: null
})), useStore = create((Z) => ({
  isCreator: !1,
  updateIsCreator: (ee) => Z((ne) => ({
    isCreator: ee
  })),
  tradeData: null,
  updateTradeData: (ee) => Z((ne) => ({
    tradeData: ee
  })),
  existTrade: !1,
  updateExistTrade: (ee) => Z((ne) => ({
    existTrade: ee
  })),
  remoteBoxes: clone(initRemoteBoxes),
  updateRemoteBoxes: (ee) => Z((ne) => ({
    remoteBoxes: ee
  })),
  localBoxes: clone(initLocalBoxes),
  updateLocalBoxes: (ee) => Z((ne) => ({
    localBoxes: ee
  })),
  inventoryBoxes: initInventoryBoxes,
  updateInventoryBoxes: (ee) => Z((ne) => ({
    inventoryBoxes: ee
  })),
  partner: null,
  updatePartner: (ee) => Z((ne) => ({
    partner: ee
  })),
  plugActor: null,
  updatePlugActor: (ee) => Z((ne) => ({
    plugActor: ee
  })),
  accepted: !1,
  updateAccepted: (ee) => Z((ne) => ({
    accepted: ee
  })),
  boxNumPerPage: pageBoxNum,
  updateBoxNumPerPage: (ee) => Z((ne) => ({
    boxNumPerPage: ee
  })),
  curPage: 1,
  updateCurPage: (ee) => Z((ne) => ({
    curPage: ee
  })),
  selItem: null,
  updateSelItem: (ee) => Z((ne) => ({
    selItem: ee
  })),
  loading: !1,
  updateLoading: (ee) => Z((ne) => ({
    loading: ee
  })),
  localUser: null,
  updateLocalUser: (ee) => Z((ne) => ({
    localUser: ee
  }))
})), idlFactory = ({ IDL: Z }) => {
  const ee = Z.Record({
    tokenId: Z.Int,
    name: Z.Text,
    canisterId: Z.Principal
  }), ne = Z.Record({
    id: Z.Text,
    hostEscrow: Z.Vec(ee),
    hostData: Z.Vec(ee),
    fulfilled: Z.Bool,
    host: Z.Principal,
    guestData: Z.Vec(ee),
    hostAccept: Z.Bool,
    guestEscrow: Z.Vec(ee),
    guest: Z.Principal,
    guestAccept: Z.Bool
  });
  return Z.Service({
    accept: Z.Func([Z.Text], [ne], []),
    add_item_to_escrow: Z.Func([Z.Text, ee], [ne], []),
    add_item_to_trade: Z.Func([Z.Text, ee], [ne], []),
    cancel: Z.Func([Z.Text], [ne], []),
    create_trade: Z.Func([], [ne], []),
    delete_trade: Z.Func([Z.Text], [ne], []),
    get_all_trades: Z.Func([], [Z.Vec(ne)], ["query"]),
    get_escrow_items: Z.Func([Z.Text], [Z.Vec(ee)], ["query"]),
    get_escrow_items_self: Z.Func([Z.Text], [Z.Vec(ee)], ["query"]),
    get_trade_by_id: Z.Func([Z.Text], [Z.Opt(ne)], ["query"]),
    join_trade: Z.Func([Z.Text], [ne], []),
    leave_trade: Z.Func([Z.Text], [ne], []),
    remove_item_from_escrow: Z.Func([Z.Text, ee], [ne], []),
    remove_item_from_trade: Z.Func([Z.Text, ee], [ne], []),
    withdraw_from_escrow: Z.Func([Z.Text, ee], [ee], [])
  });
};
var stylis_min = { exports: {} };
(function(Z, ee) {
  (function(ne) {
    Z.exports = ne(null);
  })(function ne(ie) {
    var oe = /^\0+/g, ce = /[\0\r\f]/g, he = /: */g, fe = /zoo|gra/, xe = /([,: ])(transform)/g, Ae = /,+\s*(?![^(]*[)])/g, Ee = / +\s*(?![^(]*[)])/g, ye = / *[\0] */g, ge = /,\r+?/g, me = /([\t\r\n ])*\f?&/g, Ce = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g, Ie = /\W+/g, Oe = /@(k\w+)\s*(\S*)\s*/, He = /::(place)/g, Ne = /:(read-only)/g, Pe = /\s+(?=[{\];=:>])/g, Fe = /([[}=:>])\s+/g, Le = /(\{[^{]+?);(?=\})/g, We = /\s{2,}/g, rt = /([^\(])(:+) */g, gt = /[svh]\w+-[tblr]{2}/, kt = /\(\s*(.*)\s*\)/g, Ke = /([\s\S]*?);/g, ht = /-self|flex-/g, Nt = /[^]*?(:[rp][el]a[\w-]+)[^]*/, Ft = /stretch|:\s*\w+\-(?:conte|avail)/, At = /([^-])(image-set\()/, St = "-webkit-", Vt = "-moz-", Xt = "-ms-", Lt = 59, Zt = 125, Gt = 123, pt = 40, It = 41, qt = 91, De = 93, ar = 10, rr = 13, Ar = 9, vt = 64, Ut = 32, Xe = 38, tt = 45, et = 95, Et = 42, lt = 44, $e = 58, _e = 39, Be = 34, be = 47, ke = 62, Ve = 43, Je = 126, at = 0, Tt = 12, Dt = 11, zt = 107, Yt = 109, Ue = 115, Te = 112, Re = 111, it = 105, bt = 99, Qt = 100, jt = 112, yr = 1, gr = 1, br = 0, mr = 1, _r = 1, en = 1, Jn = 0, an = 0, qn = 0, $n = [], Gn = [], Un = 0, oi = null, Ai = -2, Ji = -1, Ri = 0, Hn = 1, Xn = 2, Ln = 3, si = 0, gi = 1, mi = "", yi = "", Rt = "";
    function tr(Xr, $r, xt, Br, Wt) {
      for (var Hr, qe, Ye = 0, ot = 0, ft = 0, ut = 0, Jt = 0, cr = 0, or = 0, Tr = 0, Vr = 0, Rr = 0, Lr = 0, wn = 0, Rn = 0, Qn = 0, Fr = 0, qr = 0, _n = 0, fn = 0, Kr = 0, Mn = xt.length, Yn = Mn - 1, bn = "", Dr = "", gn = "", Dn = "", bi = "", na = ""; Fr < Mn; ) {
        if (or = xt.charCodeAt(Fr), Fr === Yn && ot + ut + ft + Ye !== 0 && (ot !== 0 && (or = ot === be ? ar : be), ut = ft = Ye = 0, Mn++, Yn++), ot + ut + ft + Ye === 0) {
          if (Fr === Yn && (qr > 0 && (Dr = Dr.replace(ce, "")), Dr.trim().length > 0)) {
            switch (or) {
              case Ut:
              case Ar:
              case Lt:
              case rr:
              case ar:
                break;
              default:
                Dr += xt.charAt(Fr);
            }
            or = Lt;
          }
          if (_n === 1)
            switch (or) {
              case Gt:
              case Zt:
              case Lt:
              case Be:
              case _e:
              case pt:
              case It:
              case lt:
                _n = 0;
              case Ar:
              case rr:
              case ar:
              case Ut:
                break;
              default:
                for (_n = 0, Kr = Fr, Jt = or, Fr--, or = Lt; Kr < Mn; )
                  switch (xt.charCodeAt(Kr++)) {
                    case ar:
                    case rr:
                    case Lt:
                      ++Fr, or = Jt, Kr = Mn;
                      break;
                    case $e:
                      qr > 0 && (++Fr, or = Jt);
                    case Gt:
                      Kr = Mn;
                  }
            }
          switch (or) {
            case Gt:
              for (Jt = (Dr = Dr.trim()).charCodeAt(0), Lr = 1, Kr = ++Fr; Fr < Mn; ) {
                switch (or = xt.charCodeAt(Fr)) {
                  case Gt:
                    Lr++;
                    break;
                  case Zt:
                    Lr--;
                    break;
                  case be:
                    switch (cr = xt.charCodeAt(Fr + 1)) {
                      case Et:
                      case be:
                        Fr = Sn(cr, Fr, Yn, xt);
                    }
                    break;
                  case qt:
                    or++;
                  case pt:
                    or++;
                  case Be:
                  case _e:
                    for (; Fr++ < Yn && xt.charCodeAt(Fr) !== or; )
                      ;
                }
                if (Lr === 0)
                  break;
                Fr++;
              }
              switch (gn = xt.substring(Kr, Fr), Jt === at && (Jt = (Dr = Dr.replace(oe, "").trim()).charCodeAt(0)), Jt) {
                case vt:
                  switch (qr > 0 && (Dr = Dr.replace(ce, "")), cr = Dr.charCodeAt(1)) {
                    case Qt:
                    case Yt:
                    case Ue:
                    case tt:
                      Hr = $r;
                      break;
                    default:
                      Hr = $n;
                  }
                  if (Kr = (gn = tr($r, Hr, gn, cr, Wt + 1)).length, qn > 0 && Kr === 0 && (Kr = Dr.length), Un > 0 && (Hr = Nr($n, Dr, fn), qe = pn(Ln, gn, Hr, $r, gr, yr, Kr, cr, Wt, Br), Dr = Hr.join(""), qe !== void 0 && (Kr = (gn = qe.trim()).length) === 0 && (cr = 0, gn = "")), Kr > 0)
                    switch (cr) {
                      case Ue:
                        Dr = Dr.replace(kt, En);
                      case Qt:
                      case Yt:
                      case tt:
                        gn = Dr + "{" + gn + "}";
                        break;
                      case zt:
                        gn = (Dr = Dr.replace(Oe, "$1 $2" + (gi > 0 ? mi : ""))) + "{" + gn + "}", _r === 1 || _r === 2 && Bn("@" + gn, 3) ? gn = "@" + St + gn + "@" + gn : gn = "@" + gn;
                        break;
                      default:
                        gn = Dr + gn, Br === jt && (Dn += gn, gn = "");
                    }
                  else
                    gn = "";
                  break;
                default:
                  gn = tr($r, Nr($r, Dr, fn), gn, Br, Wt + 1);
              }
              bi += gn, wn = 0, _n = 0, Qn = 0, qr = 0, fn = 0, Rn = 0, Dr = "", gn = "", or = xt.charCodeAt(++Fr);
              break;
            case Zt:
            case Lt:
              if ((Kr = (Dr = (qr > 0 ? Dr.replace(ce, "") : Dr).trim()).length) > 1)
                switch (Qn === 0 && ((Jt = Dr.charCodeAt(0)) === tt || Jt > 96 && Jt < 123) && (Kr = (Dr = Dr.replace(" ", ":")).length), Un > 0 && (qe = pn(Hn, Dr, $r, Xr, gr, yr, Dn.length, Br, Wt, Br)) !== void 0 && (Kr = (Dr = qe.trim()).length) === 0 && (Dr = "\0\0"), Jt = Dr.charCodeAt(0), cr = Dr.charCodeAt(1), Jt) {
                  case at:
                    break;
                  case vt:
                    if (cr === it || cr === bt) {
                      na += Dr + xt.charAt(Fr);
                      break;
                    }
                  default:
                    if (Dr.charCodeAt(Kr - 1) === $e)
                      break;
                    Dn += xn(Dr, Jt, cr, Dr.charCodeAt(2));
                }
              wn = 0, _n = 0, Qn = 0, qr = 0, fn = 0, Dr = "", or = xt.charCodeAt(++Fr);
          }
        }
        switch (or) {
          case rr:
          case ar:
            if (ot + ut + ft + Ye + an === 0)
              switch (Rr) {
                case It:
                case _e:
                case Be:
                case vt:
                case Je:
                case ke:
                case Et:
                case Ve:
                case be:
                case tt:
                case $e:
                case lt:
                case Lt:
                case Gt:
                case Zt:
                  break;
                default:
                  Qn > 0 && (_n = 1);
              }
            ot === be ? ot = 0 : mr + wn === 0 && Br !== zt && Dr.length > 0 && (qr = 1, Dr += "\0"), Un * si > 0 && pn(Ri, Dr, $r, Xr, gr, yr, Dn.length, Br, Wt, Br), yr = 1, gr++;
            break;
          case Lt:
          case Zt:
            if (ot + ut + ft + Ye === 0) {
              yr++;
              break;
            }
          default:
            switch (yr++, bn = xt.charAt(Fr), or) {
              case Ar:
              case Ut:
                if (ut + Ye + ot === 0)
                  switch (Tr) {
                    case lt:
                    case $e:
                    case Ar:
                    case Ut:
                      bn = "";
                      break;
                    default:
                      or !== Ut && (bn = " ");
                  }
                break;
              case at:
                bn = "\\0";
                break;
              case Tt:
                bn = "\\f";
                break;
              case Dt:
                bn = "\\v";
                break;
              case Xe:
                ut + ot + Ye === 0 && mr > 0 && (fn = 1, qr = 1, bn = "\f" + bn);
                break;
              case 108:
                if (ut + ot + Ye + br === 0 && Qn > 0)
                  switch (Fr - Qn) {
                    case 2:
                      Tr === Te && xt.charCodeAt(Fr - 3) === $e && (br = Tr);
                    case 8:
                      Vr === Re && (br = Vr);
                  }
                break;
              case $e:
                ut + ot + Ye === 0 && (Qn = Fr);
                break;
              case lt:
                ot + ft + ut + Ye === 0 && (qr = 1, bn += "\r");
                break;
              case Be:
              case _e:
                ot === 0 && (ut = ut === or ? 0 : ut === 0 ? or : ut);
                break;
              case qt:
                ut + ot + ft === 0 && Ye++;
                break;
              case De:
                ut + ot + ft === 0 && Ye--;
                break;
              case It:
                ut + ot + Ye === 0 && ft--;
                break;
              case pt:
                if (ut + ot + Ye === 0) {
                  if (wn === 0)
                    switch (2 * Tr + 3 * Vr) {
                      case 533:
                        break;
                      default:
                        Lr = 0, wn = 1;
                    }
                  ft++;
                }
                break;
              case vt:
                ot + ft + ut + Ye + Qn + Rn === 0 && (Rn = 1);
                break;
              case Et:
              case be:
                if (ut + Ye + ft > 0)
                  break;
                switch (ot) {
                  case 0:
                    switch (2 * or + 3 * xt.charCodeAt(Fr + 1)) {
                      case 235:
                        ot = be;
                        break;
                      case 220:
                        Kr = Fr, ot = Et;
                    }
                    break;
                  case Et:
                    or === be && Tr === Et && Kr + 2 !== Fr && (xt.charCodeAt(Kr + 2) === 33 && (Dn += xt.substring(Kr, Fr + 1)), bn = "", ot = 0);
                }
            }
            if (ot === 0) {
              if (mr + ut + Ye + Rn === 0 && Br !== zt && or !== Lt)
                switch (or) {
                  case lt:
                  case Je:
                  case ke:
                  case Ve:
                  case It:
                  case pt:
                    if (wn === 0) {
                      switch (Tr) {
                        case Ar:
                        case Ut:
                        case ar:
                        case rr:
                          bn += "\0";
                          break;
                        default:
                          bn = "\0" + bn + (or === lt ? "" : "\0");
                      }
                      qr = 1;
                    } else
                      switch (or) {
                        case pt:
                          Qn + 7 === Fr && Tr === 108 && (Qn = 0), wn = ++Lr;
                          break;
                        case It:
                          (wn = --Lr) == 0 && (qr = 1, bn += "\0");
                      }
                    break;
                  case Ar:
                  case Ut:
                    switch (Tr) {
                      case at:
                      case Gt:
                      case Zt:
                      case Lt:
                      case lt:
                      case Tt:
                      case Ar:
                      case Ut:
                      case ar:
                      case rr:
                        break;
                      default:
                        wn === 0 && (qr = 1, bn += "\0");
                    }
                }
              Dr += bn, or !== Ut && or !== Ar && (Rr = or);
            }
        }
        Vr = Tr, Tr = or, Fr++;
      }
      if (Kr = Dn.length, qn > 0 && Kr === 0 && bi.length === 0 && $r[0].length !== 0 && (Br !== Yt || $r.length === 1 && (mr > 0 ? yi : Rt) === $r[0]) && (Kr = $r.join(",").length + 2), Kr > 0) {
        if (Hr = mr === 0 && Br !== zt ? function(Fa) {
          for (var pa, xi, ro = 0, bs = Fa.length, Bs = Array(bs); ro < bs; ++ro) {
            for (var Po = Fa[ro].split(ye), Ga = "", Ua = 0, Cn = 0, wr = 0, An = 0, ci = Po.length; Ua < ci; ++Ua)
              if (!((Cn = (xi = Po[Ua]).length) === 0 && ci > 1)) {
                if (wr = Ga.charCodeAt(Ga.length - 1), An = xi.charCodeAt(0), pa = "", Ua !== 0)
                  switch (wr) {
                    case Et:
                    case Je:
                    case ke:
                    case Ve:
                    case Ut:
                    case pt:
                      break;
                    default:
                      pa = " ";
                  }
                switch (An) {
                  case Xe:
                    xi = pa + yi;
                  case Je:
                  case ke:
                  case Ve:
                  case Ut:
                  case It:
                  case pt:
                    break;
                  case qt:
                    xi = pa + xi + yi;
                    break;
                  case $e:
                    switch (2 * xi.charCodeAt(1) + 3 * xi.charCodeAt(2)) {
                      case 530:
                        if (en > 0) {
                          xi = pa + xi.substring(8, Cn - 1);
                          break;
                        }
                      default:
                        (Ua < 1 || Po[Ua - 1].length < 1) && (xi = pa + yi + xi);
                    }
                    break;
                  case lt:
                    pa = "";
                  default:
                    Cn > 1 && xi.indexOf(":") > 0 ? xi = pa + xi.replace(rt, "$1" + yi + "$2") : xi = pa + xi + yi;
                }
                Ga += xi;
              }
            Bs[ro] = Ga.replace(ce, "").trim();
          }
          return Bs;
        }($r) : $r, Un > 0 && (qe = pn(Xn, Dn, Hr, Xr, gr, yr, Kr, Br, Wt, Br)) !== void 0 && (Dn = qe).length === 0)
          return na + Dn + bi;
        if (Dn = Hr.join(",") + "{" + Dn + "}", _r * br != 0) {
          switch (_r === 2 && !Bn(Dn, 2) && (br = 0), br) {
            case Re:
              Dn = Dn.replace(Ne, ":" + Vt + "$1") + Dn;
              break;
            case Te:
              Dn = Dn.replace(He, "::" + St + "input-$1") + Dn.replace(He, "::" + Vt + "$1") + Dn.replace(He, ":" + Xt + "input-$1") + Dn;
          }
          br = 0;
        }
      }
      return na + Dn + bi;
    }
    function Nr(Xr, $r, xt) {
      var Br = $r.trim().split(ge), Wt = Br, Hr = Br.length, qe = Xr.length;
      switch (qe) {
        case 0:
        case 1:
          for (var Ye = 0, ot = qe === 0 ? "" : Xr[0] + " "; Ye < Hr; ++Ye)
            Wt[Ye] = on(ot, Wt[Ye], xt, qe).trim();
          break;
        default:
          Ye = 0;
          var ft = 0;
          for (Wt = []; Ye < Hr; ++Ye)
            for (var ut = 0; ut < qe; ++ut)
              Wt[ft++] = on(Xr[ut] + " ", Br[Ye], xt, qe).trim();
      }
      return Wt;
    }
    function on(Xr, $r, xt, Br) {
      var Wt = $r, Hr = Wt.charCodeAt(0);
      switch (Hr < 33 && (Hr = (Wt = Wt.trim()).charCodeAt(0)), Hr) {
        case Xe:
          switch (mr + Br) {
            case 0:
            case 1:
              if (Xr.trim().length === 0)
                break;
            default:
              return Wt.replace(me, "$1" + Xr.trim());
          }
          break;
        case $e:
          switch (Wt.charCodeAt(1)) {
            case 103:
              if (en > 0 && mr > 0)
                return Wt.replace(Ce, "$1").replace(me, "$1" + Rt);
              break;
            default:
              return Xr.trim() + Wt.replace(me, "$1" + Xr.trim());
          }
        default:
          if (xt * mr > 0 && Wt.indexOf("\f") > 0)
            return Wt.replace(me, (Xr.charCodeAt(0) === $e ? "" : "$1") + Xr.trim());
      }
      return Xr + Wt;
    }
    function xn(Xr, $r, xt, Br) {
      var Wt, Hr = 0, qe = Xr + ";", Ye = 2 * $r + 3 * xt + 4 * Br;
      if (Ye === 944)
        return function(ot) {
          var ft = ot.length, ut = ot.indexOf(":", 9) + 1, Jt = ot.substring(0, ut).trim(), cr = ot.substring(ut, ft - 1).trim();
          switch (ot.charCodeAt(9) * gi) {
            case 0:
              break;
            case tt:
              if (ot.charCodeAt(10) !== 110)
                break;
            default:
              for (var or = cr.split((cr = "", Ae)), Tr = 0, ut = 0, ft = or.length; Tr < ft; ut = 0, ++Tr) {
                for (var Vr = or[Tr], Rr = Vr.split(Ee); Vr = Rr[ut]; ) {
                  var Lr = Vr.charCodeAt(0);
                  if (gi === 1 && (Lr > vt && Lr < 90 || Lr > 96 && Lr < 123 || Lr === et || Lr === tt && Vr.charCodeAt(1) !== tt))
                    switch (isNaN(parseFloat(Vr)) + (Vr.indexOf("(") !== -1)) {
                      case 1:
                        switch (Vr) {
                          case "infinite":
                          case "alternate":
                          case "backwards":
                          case "running":
                          case "normal":
                          case "forwards":
                          case "both":
                          case "none":
                          case "linear":
                          case "ease":
                          case "ease-in":
                          case "ease-out":
                          case "ease-in-out":
                          case "paused":
                          case "reverse":
                          case "alternate-reverse":
                          case "inherit":
                          case "initial":
                          case "unset":
                          case "step-start":
                          case "step-end":
                            break;
                          default:
                            Vr += mi;
                        }
                    }
                  Rr[ut++] = Vr;
                }
                cr += (Tr === 0 ? "" : ",") + Rr.join(" ");
              }
          }
          return cr = Jt + cr + ";", _r === 1 || _r === 2 && Bn(cr, 1) ? St + cr + cr : cr;
        }(qe);
      if (_r === 0 || _r === 2 && !Bn(qe, 1))
        return qe;
      switch (Ye) {
        case 1015:
          return qe.charCodeAt(10) === 97 ? St + qe + qe : qe;
        case 951:
          return qe.charCodeAt(3) === 116 ? St + qe + qe : qe;
        case 963:
          return qe.charCodeAt(5) === 110 ? St + qe + qe : qe;
        case 1009:
          if (qe.charCodeAt(4) !== 100)
            break;
        case 969:
        case 942:
          return St + qe + qe;
        case 978:
          return St + qe + Vt + qe + qe;
        case 1019:
        case 983:
          return St + qe + Vt + qe + Xt + qe + qe;
        case 883:
          return qe.charCodeAt(8) === tt ? St + qe + qe : qe.indexOf("image-set(", 11) > 0 ? qe.replace(At, "$1" + St + "$2") + qe : qe;
        case 932:
          if (qe.charCodeAt(4) === tt)
            switch (qe.charCodeAt(5)) {
              case 103:
                return St + "box-" + qe.replace("-grow", "") + St + qe + Xt + qe.replace("grow", "positive") + qe;
              case 115:
                return St + qe + Xt + qe.replace("shrink", "negative") + qe;
              case 98:
                return St + qe + Xt + qe.replace("basis", "preferred-size") + qe;
            }
          return St + qe + Xt + qe + qe;
        case 964:
          return St + qe + Xt + "flex-" + qe + qe;
        case 1023:
          if (qe.charCodeAt(8) !== 99)
            break;
          return Wt = qe.substring(qe.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify"), St + "box-pack" + Wt + St + qe + Xt + "flex-pack" + Wt + qe;
        case 1005:
          return fe.test(qe) ? qe.replace(he, ":" + St) + qe.replace(he, ":" + Vt) + qe : qe;
        case 1e3:
          switch (Hr = (Wt = qe.substring(13).trim()).indexOf("-") + 1, Wt.charCodeAt(0) + Wt.charCodeAt(Hr)) {
            case 226:
              Wt = qe.replace(gt, "tb");
              break;
            case 232:
              Wt = qe.replace(gt, "tb-rl");
              break;
            case 220:
              Wt = qe.replace(gt, "lr");
              break;
            default:
              return qe;
          }
          return St + qe + Xt + Wt + qe;
        case 1017:
          if (qe.indexOf("sticky", 9) === -1)
            return qe;
        case 975:
          switch (Hr = (qe = Xr).length - 10, Ye = (Wt = (qe.charCodeAt(Hr) === 33 ? qe.substring(0, Hr) : qe).substring(Xr.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | Wt.charCodeAt(7))) {
            case 203:
              if (Wt.charCodeAt(8) < 111)
                break;
            case 115:
              qe = qe.replace(Wt, St + Wt) + ";" + qe;
              break;
            case 207:
            case 102:
              qe = qe.replace(Wt, St + (Ye > 102 ? "inline-" : "") + "box") + ";" + qe.replace(Wt, St + Wt) + ";" + qe.replace(Wt, Xt + Wt + "box") + ";" + qe;
          }
          return qe + ";";
        case 938:
          if (qe.charCodeAt(5) === tt)
            switch (qe.charCodeAt(6)) {
              case 105:
                return Wt = qe.replace("-items", ""), St + qe + St + "box-" + Wt + Xt + "flex-" + Wt + qe;
              case 115:
                return St + qe + Xt + "flex-item-" + qe.replace(ht, "") + qe;
              default:
                return St + qe + Xt + "flex-line-pack" + qe.replace("align-content", "").replace(ht, "") + qe;
            }
          break;
        case 973:
        case 989:
          if (qe.charCodeAt(3) !== tt || qe.charCodeAt(4) === 122)
            break;
        case 931:
        case 953:
          if (Ft.test(Xr) === !0)
            return (Wt = Xr.substring(Xr.indexOf(":") + 1)).charCodeAt(0) === 115 ? xn(Xr.replace("stretch", "fill-available"), $r, xt, Br).replace(":fill-available", ":stretch") : qe.replace(Wt, St + Wt) + qe.replace(Wt, Vt + Wt.replace("fill-", "")) + qe;
          break;
        case 962:
          if (qe = St + qe + (qe.charCodeAt(5) === 102 ? Xt + qe : "") + qe, xt + Br === 211 && qe.charCodeAt(13) === 105 && qe.indexOf("transform", 10) > 0)
            return qe.substring(0, qe.indexOf(";", 27) + 1).replace(xe, "$1" + St + "$2") + qe;
      }
      return qe;
    }
    function Bn(Xr, $r) {
      var xt = Xr.indexOf($r === 1 ? ":" : "{"), Br = Xr.substring(0, $r !== 3 ? xt : 10), Wt = Xr.substring(xt + 1, Xr.length - 1);
      return oi($r !== 2 ? Br : Br.replace(Nt, "$1"), Wt, $r);
    }
    function En(Xr, $r) {
      var xt = xn($r, $r.charCodeAt(0), $r.charCodeAt(1), $r.charCodeAt(2));
      return xt !== $r + ";" ? xt.replace(Ke, " or ($1)").substring(4) : "(" + $r + ")";
    }
    function pn(Xr, $r, xt, Br, Wt, Hr, qe, Ye, ot, ft) {
      for (var ut, Jt = 0, cr = $r; Jt < Un; ++Jt)
        switch (ut = Gn[Jt].call(Zr, Xr, cr, xt, Br, Wt, Hr, qe, Ye, ot, ft)) {
          case void 0:
          case !1:
          case !0:
          case null:
            break;
          default:
            cr = ut;
        }
      if (cr !== $r)
        return cr;
    }
    function Sn(Xr, $r, xt, Br) {
      for (var Wt = $r + 1; Wt < xt; ++Wt)
        switch (Br.charCodeAt(Wt)) {
          case be:
            if (Xr === Et && Br.charCodeAt(Wt - 1) === Et && $r + 2 !== Wt)
              return Wt + 1;
            break;
          case ar:
            if (Xr === be)
              return Wt + 1;
        }
      return Wt;
    }
    function Vn(Xr) {
      for (var $r in Xr) {
        var xt = Xr[$r];
        switch ($r) {
          case "keyframe":
            gi = 0 | xt;
            break;
          case "global":
            en = 0 | xt;
            break;
          case "cascade":
            mr = 0 | xt;
            break;
          case "compress":
            Jn = 0 | xt;
            break;
          case "semicolon":
            an = 0 | xt;
            break;
          case "preserve":
            qn = 0 | xt;
            break;
          case "prefix":
            oi = null, xt ? typeof xt != "function" ? _r = 1 : (_r = 2, oi = xt) : _r = 0;
        }
      }
      return Vn;
    }
    function Zr(Xr, $r) {
      if (this !== void 0 && this.constructor === Zr)
        return ne(Xr);
      var xt = Xr, Br = xt.charCodeAt(0);
      Br < 33 && (Br = (xt = xt.trim()).charCodeAt(0)), gi > 0 && (mi = xt.replace(Ie, Br === qt ? "" : "-")), Br = 1, mr === 1 ? Rt = xt : yi = xt;
      var Wt, Hr = [Rt];
      Un > 0 && (Wt = pn(Ji, $r, Hr, Hr, gr, yr, 0, 0, 0, 0)) !== void 0 && typeof Wt == "string" && ($r = Wt);
      var qe = tr($n, Hr, $r, 0, 0);
      return Un > 0 && (Wt = pn(Ai, qe, Hr, Hr, gr, yr, qe.length, 0, 0, 0)) !== void 0 && typeof (qe = Wt) != "string" && (Br = 0), mi = "", Rt = "", yi = "", br = 0, gr = 1, yr = 1, Jn * Br == 0 ? qe : qe.replace(ce, "").replace(Pe, "").replace(Fe, "$1").replace(Le, "$1").replace(We, " ");
    }
    return Zr.use = function Xr($r) {
      switch ($r) {
        case void 0:
        case null:
          Un = Gn.length = 0;
          break;
        default:
          if (typeof $r == "function")
            Gn[Un++] = $r;
          else if (typeof $r == "object")
            for (var xt = 0, Br = $r.length; xt < Br; ++xt)
              Xr($r[xt]);
          else
            si = 0 | !!$r;
      }
      return Xr;
    }, Zr.set = Vn, ie !== void 0 && Vn(ie), Zr;
  });
})(stylis_min);
const Stylis = stylis_min.exports;
var stylisRuleSheet = { exports: {} };
(function(Z, ee) {
  (function(ne) {
    Z.exports = ne();
  })(function() {
    return function(ne) {
      var ie = "/*|*/", oe = ie + "}";
      function ce(he) {
        if (he)
          try {
            ne(he + "}");
          } catch {
          }
      }
      return function(fe, xe, Ae, Ee, ye, ge, me, Ce, Ie, Oe) {
        switch (fe) {
          case 1:
            if (Ie === 0 && xe.charCodeAt(0) === 64)
              return ne(xe + ";"), "";
            break;
          case 2:
            if (Ce === 0)
              return xe + ie;
            break;
          case 3:
            switch (Ce) {
              case 102:
              case 112:
                return ne(Ae[0] + xe), "";
              default:
                return xe + (Oe === 0 ? ie : "");
            }
          case -2:
            xe.split(oe).forEach(ce);
        }
      };
    };
  });
})(stylisRuleSheet);
const _insertRulePlugin = stylisRuleSheet.exports;
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, reactIsExports = requireReactIs(), safeIsNaN = Number.isNaN || function Z(ee) {
  return typeof ee == "number" && ee !== ee;
};
function isEqual(Z, ee) {
  return !!(Z === ee || safeIsNaN(Z) && safeIsNaN(ee));
}
function areInputsEqual(Z, ee) {
  if (Z.length !== ee.length)
    return !1;
  for (var ne = 0; ne < Z.length; ne++)
    if (!isEqual(Z[ne], ee[ne]))
      return !1;
  return !0;
}
function memoizeOne(Z, ee) {
  ee === void 0 && (ee = areInputsEqual);
  var ne, ie = [], oe, ce = !1;
  function he() {
    for (var fe = [], xe = 0; xe < arguments.length; xe++)
      fe[xe] = arguments[xe];
    return ce && ne === this && ee(fe, ie) || (oe = Z.apply(this, fe), ce = !0, ne = this, ie = fe), oe;
  }
  return he;
}
function memoize(Z) {
  var ee = {};
  return function(ne) {
    return ee[ne] === void 0 && (ee[ne] = Z(ne)), ee[ne];
  };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, index = memoize(
  function(Z) {
    return reactPropsRegex.test(Z) || Z.charCodeAt(0) === 111 && Z.charCodeAt(1) === 110 && Z.charCodeAt(2) < 91;
  }
);
function getType(Z) {
  return Object.prototype.toString.call(Z).slice(8, -1);
}
function isPlainObject$1(Z) {
  return getType(Z) !== "Object" ? !1 : Z.constructor === Object && Object.getPrototypeOf(Z) === Object.prototype;
}
function isArray(Z) {
  return getType(Z) === "Array";
}
function isSymbol(Z) {
  return getType(Z) === "Symbol";
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __spreadArrays() {
  for (var Z = 0, ee = 0, ne = arguments.length; ee < ne; ee++)
    Z += arguments[ee].length;
  for (var ie = Array(Z), oe = 0, ee = 0; ee < ne; ee++)
    for (var ce = arguments[ee], he = 0, fe = ce.length; he < fe; he++, oe++)
      ie[oe] = ce[he];
  return ie;
}
function assignProp(Z, ee, ne, ie) {
  var oe = ie.propertyIsEnumerable(ee) ? "enumerable" : "nonenumerable";
  oe === "enumerable" && (Z[ee] = ne), oe === "nonenumerable" && Object.defineProperty(Z, ee, {
    value: ne,
    enumerable: !1,
    writable: !0,
    configurable: !0
  });
}
function mergeRecursively(Z, ee, ne) {
  if (!isPlainObject$1(ee))
    return ne && isArray(ne) && ne.forEach(function(Ae) {
      ee = Ae(Z, ee);
    }), ee;
  var ie = {};
  if (isPlainObject$1(Z)) {
    var oe = Object.getOwnPropertyNames(Z), ce = Object.getOwnPropertySymbols(Z);
    ie = __spreadArrays(oe, ce).reduce(function(Ae, Ee) {
      var ye = Z[Ee];
      return (!isSymbol(Ee) && !Object.getOwnPropertyNames(ee).includes(Ee) || isSymbol(Ee) && !Object.getOwnPropertySymbols(ee).includes(Ee)) && assignProp(Ae, Ee, ye, Z), Ae;
    }, {});
  }
  var he = Object.getOwnPropertyNames(ee), fe = Object.getOwnPropertySymbols(ee), xe = __spreadArrays(he, fe).reduce(function(Ae, Ee) {
    var ye = ee[Ee], ge = isPlainObject$1(Z) ? Z[Ee] : void 0;
    return ne && isArray(ne) && ne.forEach(function(me) {
      ye = me(ge, ye);
    }), ge !== void 0 && isPlainObject$1(ye) && (ye = mergeRecursively(ge, ye, ne)), assignProp(Ae, Ee, ye, ee), Ae;
  }, ie);
  return xe;
}
function merge(Z) {
  for (var ee = [], ne = 1; ne < arguments.length; ne++)
    ee[ne - 1] = arguments[ne];
  var ie = null, oe = Z;
  return isPlainObject$1(Z) && Z.extensions && Object.keys(Z).length === 1 && (oe = {}, ie = Z.extensions), ee.reduce(function(ce, he) {
    return mergeRecursively(ce, he, ie);
  }, oe);
}
var interleave = function(Z, ee) {
  for (var ne = [Z[0]], ie = 0, oe = ee.length; ie < oe; ie += 1)
    ne.push(ee[ie], Z[ie + 1]);
  return ne;
}, _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Z) {
  return typeof Z;
} : function(Z) {
  return Z && typeof Symbol == "function" && Z.constructor === Symbol && Z !== Symbol.prototype ? "symbol" : typeof Z;
}, classCallCheck = function(Z, ee) {
  if (!(Z instanceof ee))
    throw new TypeError("Cannot call a class as a function");
}, createClass = function() {
  function Z(ee, ne) {
    for (var ie = 0; ie < ne.length; ie++) {
      var oe = ne[ie];
      oe.enumerable = oe.enumerable || !1, oe.configurable = !0, "value" in oe && (oe.writable = !0), Object.defineProperty(ee, oe.key, oe);
    }
  }
  return function(ee, ne, ie) {
    return ne && Z(ee.prototype, ne), ie && Z(ee, ie), ee;
  };
}(), _extends = Object.assign || function(Z) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee];
    for (var ie in ne)
      Object.prototype.hasOwnProperty.call(ne, ie) && (Z[ie] = ne[ie]);
  }
  return Z;
}, inherits = function(Z, ee) {
  if (typeof ee != "function" && ee !== null)
    throw new TypeError("Super expression must either be null or a function, not " + typeof ee);
  Z.prototype = Object.create(ee && ee.prototype, {
    constructor: {
      value: Z,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  }), ee && (Object.setPrototypeOf ? Object.setPrototypeOf(Z, ee) : Z.__proto__ = ee);
}, objectWithoutProperties = function(Z, ee) {
  var ne = {};
  for (var ie in Z)
    ee.indexOf(ie) >= 0 || !Object.prototype.hasOwnProperty.call(Z, ie) || (ne[ie] = Z[ie]);
  return ne;
}, possibleConstructorReturn = function(Z, ee) {
  if (!Z)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return ee && (typeof ee == "object" || typeof ee == "function") ? ee : Z;
}, isPlainObject = function(Z) {
  return (typeof Z > "u" ? "undefined" : _typeof(Z)) === "object" && Z.constructor === Object;
}, EMPTY_ARRAY = Object.freeze([]), EMPTY_OBJECT = Object.freeze({});
function isFunction(Z) {
  return typeof Z == "function";
}
function getComponentName(Z) {
  return (process.env.NODE_ENV !== "production" ? typeof Z == "string" && Z : !1) || Z.displayName || Z.name || "Component";
}
function isStatelessFunction(Z) {
  return typeof Z == "function" && !(Z.prototype && Z.prototype.isReactComponent);
}
function isStyledComponent(Z) {
  return Z && typeof Z.styledComponentId == "string";
}
var SC_ATTR = typeof process < "u" && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled", SC_VERSION_ATTR = "data-styled-version", SC_STREAM_ATTR = "data-styled-streamed", IS_BROWSER = typeof window < "u" && "HTMLElement" in window, DISABLE_SPEEDY = typeof SC_DISABLE_SPEEDY == "boolean" && SC_DISABLE_SPEEDY || typeof process < "u" && (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY) || process.env.NODE_ENV !== "production", ERRORS = process.env.NODE_ENV !== "production" ? {
  1: `Cannot create styled-component for component: %s.

`,
  2: `Can't collect styles once you've consumed a \`ServerStyleSheet\`'s styles! \`ServerStyleSheet\` is a one off instance for each server-side render cycle.

- Are you trying to reuse it across renders?
- Are you accidentally calling collectStyles twice?

`,
  3: `Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.

`,
  4: `The \`StyleSheetManager\` expects a valid target or sheet prop!

- Does this error occur on the client and is your target falsy?
- Does this error occur on the server and is the sheet falsy?

`,
  5: `The clone method cannot be used on the client!

- Are you running in a client-like environment on the server?
- Are you trying to run SSR on the client?

`,
  6: `Trying to insert a new style tag, but the given Node is unmounted!

- Are you using a custom target that isn't mounted?
- Does your document not have a valid head element?
- Have you accidentally removed a style tag manually?

`,
  7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',
  8: `ThemeProvider: Please make your "theme" prop an object.

`,
  9: "Missing document `<head>`\n\n",
  10: `Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021

`,
  11: `_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.

`,
  12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",
  13: `%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.
`
} : {};
function format() {
  for (var Z = arguments.length <= 0 ? void 0 : arguments[0], ee = [], ne = 1, ie = arguments.length; ne < ie; ne += 1)
    ee.push(arguments.length <= ne ? void 0 : arguments[ne]);
  return ee.forEach(function(oe) {
    Z = Z.replace(/%[a-z]/, oe);
  }), Z;
}
var StyledComponentsError = function(Z) {
  inherits(ee, Z);
  function ee(ne) {
    classCallCheck(this, ee);
    for (var ie = arguments.length, oe = Array(ie > 1 ? ie - 1 : 0), ce = 1; ce < ie; ce++)
      oe[ce - 1] = arguments[ce];
    if (process.env.NODE_ENV === "production")
      var he = possibleConstructorReturn(this, Z.call(this, "An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#" + ne + " for more information." + (oe.length > 0 ? " Additional arguments: " + oe.join(", ") : "")));
    else
      var he = possibleConstructorReturn(this, Z.call(this, format.apply(void 0, [ERRORS[ne]].concat(oe)).trim()));
    return possibleConstructorReturn(he);
  }
  return ee;
}(Error), SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm, extractComps = function(Z) {
  var ee = "" + (Z || ""), ne = [];
  return ee.replace(SC_COMPONENT_ID, function(ie, oe, ce) {
    return ne.push({
      componentId: oe,
      matchIndex: ce
    }), ie;
  }), ne.map(function(ie, oe) {
    var ce = ie.componentId, he = ie.matchIndex, fe = ne[oe + 1], xe = fe ? ee.slice(he, fe.matchIndex) : ee.slice(he);
    return {
      componentId: ce,
      cssFromDOM: xe
    };
  });
}, COMMENT_REGEX = /^\s*\/\/.*$/gm, stylisSplitter = new Stylis({
  global: !1,
  cascade: !0,
  keyframe: !1,
  prefix: !1,
  compress: !1,
  semicolon: !0
}), stylis = new Stylis({
  global: !1,
  cascade: !0,
  keyframe: !1,
  prefix: !0,
  compress: !1,
  semicolon: !1
}), parsingRules = [], returnRulesPlugin = function Z(ee) {
  if (ee === -2) {
    var ne = parsingRules;
    return parsingRules = [], ne;
  }
}, parseRulesPlugin = _insertRulePlugin(function(Z) {
  parsingRules.push(Z);
}), _componentId = void 0, _selector = void 0, _selectorRegexp = void 0, selfReferenceReplacer = function Z(ee, ne, ie) {
  return ne > 0 && ie.slice(0, ne).indexOf(_selector) !== -1 && ie.slice(ne - _selector.length, ne) !== _selector ? "." + _componentId : ee;
}, selfReferenceReplacementPlugin = function Z(ee, ne, ie) {
  ee === 2 && ie.length && ie[0].lastIndexOf(_selector) > 0 && (ie[0] = ie[0].replace(_selectorRegexp, selfReferenceReplacer));
};
stylis.use([selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);
stylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);
var splitByRules = function Z(ee) {
  return stylisSplitter("", ee);
};
function stringifyRules(Z, ee, ne) {
  var ie = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "&", oe = Z.join("").replace(COMMENT_REGEX, ""), ce = ee && ne ? ne + " " + ee + " { " + oe + " }" : oe;
  return _componentId = ie, _selector = ee, _selectorRegexp = new RegExp("\\" + _selector + "\\b", "g"), stylis(ne || !ee ? "" : ee, ce);
}
var getNonce = function() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : null;
}, addNameForId = function Z(ee, ne, ie) {
  if (ie) {
    var oe = ee[ne] || (ee[ne] = /* @__PURE__ */ Object.create(null));
    oe[ie] = !0;
  }
}, resetIdNames = function Z(ee, ne) {
  ee[ne] = /* @__PURE__ */ Object.create(null);
}, hasNameForId = function Z(ee) {
  return function(ne, ie) {
    return ee[ne] !== void 0 && ee[ne][ie];
  };
}, stringifyNames = function Z(ee) {
  var ne = "";
  for (var ie in ee)
    ne += Object.keys(ee[ie]).join(" ") + " ";
  return ne.trim();
}, cloneNames = function Z(ee) {
  var ne = /* @__PURE__ */ Object.create(null);
  for (var ie in ee)
    ne[ie] = _extends({}, ee[ie]);
  return ne;
}, sheetForTag = function Z(ee) {
  if (ee.sheet)
    return ee.sheet;
  for (var ne = ee.ownerDocument.styleSheets.length, ie = 0; ie < ne; ie += 1) {
    var oe = ee.ownerDocument.styleSheets[ie];
    if (oe.ownerNode === ee)
      return oe;
  }
  throw new StyledComponentsError(10);
}, safeInsertRule = function Z(ee, ne, ie) {
  if (!ne)
    return !1;
  var oe = ee.cssRules.length;
  try {
    ee.insertRule(ne, ie <= oe ? ie : oe);
  } catch {
    return !1;
  }
  return !0;
}, deleteRules = function Z(ee, ne, ie) {
  for (var oe = ne - ie, ce = ne; ce > oe; ce -= 1)
    ee.deleteRule(ce);
}, makeTextMarker = function Z(ee) {
  return `
/* sc-component-id: ` + ee + ` */
`;
}, addUpUntilIndex = function Z(ee, ne) {
  for (var ie = 0, oe = 0; oe <= ne; oe += 1)
    ie += ee[oe];
  return ie;
}, makeStyleTag = function Z(ee, ne, ie) {
  var oe = document;
  ee ? oe = ee.ownerDocument : ne && (oe = ne.ownerDocument);
  var ce = oe.createElement("style");
  ce.setAttribute(SC_ATTR, ""), ce.setAttribute(SC_VERSION_ATTR, "4.4.1");
  var he = getNonce();
  if (he && ce.setAttribute("nonce", he), ce.appendChild(oe.createTextNode("")), ee && !ne)
    ee.appendChild(ce);
  else {
    if (!ne || !ee || !ne.parentNode)
      throw new StyledComponentsError(6);
    ne.parentNode.insertBefore(ce, ie ? ne : ne.nextSibling);
  }
  return ce;
}, wrapAsHtmlTag = function Z(ee, ne) {
  return function(ie) {
    var oe = getNonce(), ce = [oe && 'nonce="' + oe + '"', SC_ATTR + '="' + stringifyNames(ne) + '"', SC_VERSION_ATTR + '="4.4.1"', ie], he = ce.filter(Boolean).join(" ");
    return "<style " + he + ">" + ee() + "</style>";
  };
}, wrapAsElement = function Z(ee, ne) {
  return function() {
    var ie, oe = (ie = {}, ie[SC_ATTR] = stringifyNames(ne), ie[SC_VERSION_ATTR] = "4.4.1", ie), ce = getNonce();
    return ce && (oe.nonce = ce), /* @__PURE__ */ jsx("style", {
      ...oe,
      dangerouslySetInnerHTML: {
        __html: ee()
      }
    });
  };
}, getIdsFromMarkersFactory = function Z(ee) {
  return function() {
    return Object.keys(ee);
  };
}, makeSpeedyTag = function Z(ee, ne) {
  var ie = /* @__PURE__ */ Object.create(null), oe = /* @__PURE__ */ Object.create(null), ce = [], he = ne !== void 0, fe = !1, xe = function(me) {
    var Ce = oe[me];
    return Ce !== void 0 ? Ce : (oe[me] = ce.length, ce.push(0), resetIdNames(ie, me), oe[me]);
  }, Ae = function(me, Ce, Ie) {
    for (var Oe = xe(me), He = sheetForTag(ee), Ne = addUpUntilIndex(ce, Oe), Pe = 0, Fe = [], Le = Ce.length, We = 0; We < Le; We += 1) {
      var rt = Ce[We], gt = he;
      gt && rt.indexOf("@import") !== -1 ? Fe.push(rt) : safeInsertRule(He, rt, Ne + Pe) && (gt = !1, Pe += 1);
    }
    he && Fe.length > 0 && (fe = !0, ne().insertRules(me + "-import", Fe)), ce[Oe] += Pe, addNameForId(ie, me, Ie);
  }, Ee = function(me) {
    var Ce = oe[me];
    if (Ce !== void 0 && ee.isConnected !== !1) {
      var Ie = ce[Ce], Oe = sheetForTag(ee), He = addUpUntilIndex(ce, Ce) - 1;
      deleteRules(Oe, He, Ie), ce[Ce] = 0, resetIdNames(ie, me), he && fe && ne().removeRules(me + "-import");
    }
  }, ye = function() {
    var me = sheetForTag(ee), Ce = me.cssRules, Ie = "";
    for (var Oe in oe) {
      Ie += makeTextMarker(Oe);
      for (var He = oe[Oe], Ne = addUpUntilIndex(ce, He), Pe = ce[He], Fe = Ne - Pe; Fe < Ne; Fe += 1) {
        var Le = Ce[Fe];
        Le !== void 0 && (Ie += Le.cssText);
      }
    }
    return Ie;
  };
  return {
    clone: function() {
      throw new StyledComponentsError(5);
    },
    css: ye,
    getIds: getIdsFromMarkersFactory(oe),
    hasNameForId: hasNameForId(ie),
    insertMarker: xe,
    insertRules: Ae,
    removeRules: Ee,
    sealed: !1,
    styleTag: ee,
    toElement: wrapAsElement(ye, ie),
    toHTML: wrapAsHtmlTag(ye, ie)
  };
}, makeTextNode = function Z(ee, ne) {
  return ee.createTextNode(makeTextMarker(ne));
}, makeBrowserTag = function Z(ee, ne) {
  var ie = /* @__PURE__ */ Object.create(null), oe = /* @__PURE__ */ Object.create(null), ce = ne !== void 0, he = !1, fe = function(ge) {
    var me = oe[ge];
    return me !== void 0 ? me : (oe[ge] = makeTextNode(ee.ownerDocument, ge), ee.appendChild(oe[ge]), ie[ge] = /* @__PURE__ */ Object.create(null), oe[ge]);
  }, xe = function(ge, me, Ce) {
    for (var Ie = fe(ge), Oe = [], He = me.length, Ne = 0; Ne < He; Ne += 1) {
      var Pe = me[Ne], Fe = ce;
      if (Fe && Pe.indexOf("@import") !== -1)
        Oe.push(Pe);
      else {
        Fe = !1;
        var Le = Ne === He - 1 ? "" : " ";
        Ie.appendData("" + Pe + Le);
      }
    }
    addNameForId(ie, ge, Ce), ce && Oe.length > 0 && (he = !0, ne().insertRules(ge + "-import", Oe));
  }, Ae = function(ge) {
    var me = oe[ge];
    if (me !== void 0) {
      var Ce = makeTextNode(ee.ownerDocument, ge);
      ee.replaceChild(Ce, me), oe[ge] = Ce, resetIdNames(ie, ge), ce && he && ne().removeRules(ge + "-import");
    }
  }, Ee = function() {
    var ge = "";
    for (var me in oe)
      ge += oe[me].data;
    return ge;
  };
  return {
    clone: function() {
      throw new StyledComponentsError(5);
    },
    css: Ee,
    getIds: getIdsFromMarkersFactory(oe),
    hasNameForId: hasNameForId(ie),
    insertMarker: fe,
    insertRules: xe,
    removeRules: Ae,
    sealed: !1,
    styleTag: ee,
    toElement: wrapAsElement(Ee, ie),
    toHTML: wrapAsHtmlTag(Ee, ie)
  };
}, makeServerTag = function Z(ee, ne) {
  var ie = ee === void 0 ? /* @__PURE__ */ Object.create(null) : ee, oe = ne === void 0 ? /* @__PURE__ */ Object.create(null) : ne, ce = function(ge) {
    var me = oe[ge];
    return me !== void 0 ? me : oe[ge] = [""];
  }, he = function(ge, me, Ce) {
    var Ie = ce(ge);
    Ie[0] += me.join(" "), addNameForId(ie, ge, Ce);
  }, fe = function(ge) {
    var me = oe[ge];
    me !== void 0 && (me[0] = "", resetIdNames(ie, ge));
  }, xe = function() {
    var ge = "";
    for (var me in oe) {
      var Ce = oe[me][0];
      Ce && (ge += makeTextMarker(me) + Ce);
    }
    return ge;
  }, Ae = function() {
    var ge = cloneNames(ie), me = /* @__PURE__ */ Object.create(null);
    for (var Ce in oe)
      me[Ce] = [oe[Ce][0]];
    return Z(ge, me);
  }, Ee = {
    clone: Ae,
    css: xe,
    getIds: getIdsFromMarkersFactory(oe),
    hasNameForId: hasNameForId(ie),
    insertMarker: ce,
    insertRules: he,
    removeRules: fe,
    sealed: !1,
    styleTag: null,
    toElement: wrapAsElement(xe, ie),
    toHTML: wrapAsHtmlTag(xe, ie)
  };
  return Ee;
}, makeTag = function Z(ee, ne, ie, oe, ce) {
  if (IS_BROWSER && !ie) {
    var he = makeStyleTag(ee, ne, oe);
    return DISABLE_SPEEDY ? makeBrowserTag(he, ce) : makeSpeedyTag(he, ce);
  }
  return makeServerTag();
}, rehydrate = function Z(ee, ne, ie) {
  for (var oe = 0, ce = ie.length; oe < ce; oe += 1) {
    var he = ie[oe], fe = he.componentId, xe = he.cssFromDOM, Ae = splitByRules(xe);
    ee.insertRules(fe, Ae);
  }
  for (var Ee = 0, ye = ne.length; Ee < ye; Ee += 1) {
    var ge = ne[Ee];
    ge.parentNode && ge.parentNode.removeChild(ge);
  }
}, SPLIT_REGEX = /\s+/, MAX_SIZE = void 0;
IS_BROWSER ? MAX_SIZE = DISABLE_SPEEDY ? 40 : 1e3 : MAX_SIZE = -1;
var sheetRunningId = 0, master = void 0, StyleSheet = function() {
  function Z() {
    var ee = this, ne = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : IS_BROWSER ? document.head : null, ie = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    classCallCheck(this, Z), this.getImportRuleTag = function() {
      var oe = ee.importRuleTag;
      if (oe !== void 0)
        return oe;
      var ce = ee.tags[0], he = !0;
      return ee.importRuleTag = makeTag(ee.target, ce ? ce.styleTag : null, ee.forceServer, he);
    }, sheetRunningId += 1, this.id = sheetRunningId, this.forceServer = ie, this.target = ie ? null : ne, this.tagMap = {}, this.deferred = {}, this.rehydratedNames = {}, this.ignoreRehydratedNames = {}, this.tags = [], this.capacity = 1, this.clones = [];
  }
  return Z.prototype.rehydrate = function() {
    if (!IS_BROWSER || this.forceServer)
      return this;
    var ne = [], ie = [], oe = !1, ce = document.querySelectorAll("style[" + SC_ATTR + "][" + SC_VERSION_ATTR + '="4.4.1"]'), he = ce.length;
    if (!he)
      return this;
    for (var fe = 0; fe < he; fe += 1) {
      var xe = ce[fe];
      oe || (oe = !!xe.getAttribute(SC_STREAM_ATTR));
      for (var Ae = (xe.getAttribute(SC_ATTR) || "").trim().split(SPLIT_REGEX), Ee = Ae.length, ye = 0, ge; ye < Ee; ye += 1)
        ge = Ae[ye], this.rehydratedNames[ge] = !0;
      ie.push.apply(ie, extractComps(xe.textContent)), ne.push(xe);
    }
    var me = ie.length;
    if (!me)
      return this;
    var Ce = this.makeTag(null);
    rehydrate(Ce, ne, ie), this.capacity = Math.max(1, MAX_SIZE - me), this.tags.push(Ce);
    for (var Ie = 0; Ie < me; Ie += 1)
      this.tagMap[ie[Ie].componentId] = Ce;
    return this;
  }, Z.reset = function() {
    var ne = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    master = new Z(void 0, ne).rehydrate();
  }, Z.prototype.clone = function() {
    var ne = new Z(this.target, this.forceServer);
    return this.clones.push(ne), ne.tags = this.tags.map(function(ie) {
      for (var oe = ie.getIds(), ce = ie.clone(), he = 0; he < oe.length; he += 1)
        ne.tagMap[oe[he]] = ce;
      return ce;
    }), ne.rehydratedNames = _extends({}, this.rehydratedNames), ne.deferred = _extends({}, this.deferred), ne;
  }, Z.prototype.sealAllTags = function() {
    this.capacity = 1, this.tags.forEach(function(ne) {
      ne.sealed = !0;
    });
  }, Z.prototype.makeTag = function(ne) {
    var ie = ne ? ne.styleTag : null, oe = !1;
    return makeTag(this.target, ie, this.forceServer, oe, this.getImportRuleTag);
  }, Z.prototype.getTagForId = function(ne) {
    var ie = this.tagMap[ne];
    if (ie !== void 0 && !ie.sealed)
      return ie;
    var oe = this.tags[this.tags.length - 1];
    return this.capacity -= 1, this.capacity === 0 && (this.capacity = MAX_SIZE, oe = this.makeTag(oe), this.tags.push(oe)), this.tagMap[ne] = oe;
  }, Z.prototype.hasId = function(ne) {
    return this.tagMap[ne] !== void 0;
  }, Z.prototype.hasNameForId = function(ne, ie) {
    if (this.ignoreRehydratedNames[ne] === void 0 && this.rehydratedNames[ie])
      return !0;
    var oe = this.tagMap[ne];
    return oe !== void 0 && oe.hasNameForId(ne, ie);
  }, Z.prototype.deferredInject = function(ne, ie) {
    if (this.tagMap[ne] === void 0) {
      for (var oe = this.clones, ce = 0; ce < oe.length; ce += 1)
        oe[ce].deferredInject(ne, ie);
      this.getTagForId(ne).insertMarker(ne), this.deferred[ne] = ie;
    }
  }, Z.prototype.inject = function(ne, ie, oe) {
    for (var ce = this.clones, he = 0; he < ce.length; he += 1)
      ce[he].inject(ne, ie, oe);
    var fe = this.getTagForId(ne);
    if (this.deferred[ne] !== void 0) {
      var xe = this.deferred[ne].concat(ie);
      fe.insertRules(ne, xe, oe), this.deferred[ne] = void 0;
    } else
      fe.insertRules(ne, ie, oe);
  }, Z.prototype.remove = function(ne) {
    var ie = this.tagMap[ne];
    if (ie !== void 0) {
      for (var oe = this.clones, ce = 0; ce < oe.length; ce += 1)
        oe[ce].remove(ne);
      ie.removeRules(ne), this.ignoreRehydratedNames[ne] = !0, this.deferred[ne] = void 0;
    }
  }, Z.prototype.toHTML = function() {
    return this.tags.map(function(ne) {
      return ne.toHTML();
    }).join("");
  }, Z.prototype.toReactElements = function() {
    var ne = this.id;
    return this.tags.map(function(ie, oe) {
      var ce = "sc-" + ne + "-" + oe;
      return cloneElement(ie.toElement(), {
        key: ce
      });
    });
  }, createClass(Z, null, [{
    key: "master",
    get: function() {
      return master || (master = new Z().rehydrate());
    }
  }, {
    key: "instance",
    get: function() {
      return Z.master;
    }
  }]), Z;
}(), Keyframes = function() {
  function Z(ee, ne) {
    var ie = this;
    classCallCheck(this, Z), this.inject = function(oe) {
      oe.hasNameForId(ie.id, ie.name) || oe.inject(ie.id, ie.rules, ie.name);
    }, this.toString = function() {
      throw new StyledComponentsError(12, String(ie.name));
    }, this.name = ee, this.rules = ne, this.id = "sc-keyframes-" + ee;
  }
  return Z.prototype.getName = function() {
    return this.name;
  }, Z;
}(), uppercasePattern = /([A-Z])/g, msPattern = /^ms-/;
function hyphenateStyleName(Z) {
  return Z.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
}
function addUnitIfNeeded(Z, ee) {
  return ee == null || typeof ee == "boolean" || ee === "" ? "" : typeof ee == "number" && ee !== 0 && !(Z in unitlessKeys) ? ee + "px" : String(ee).trim();
}
var isFalsish = function Z(ee) {
  return ee == null || ee === !1 || ee === "";
}, objToCssArray = function Z(ee, ne) {
  var ie = [], oe = Object.keys(ee);
  return oe.forEach(function(ce) {
    if (!isFalsish(ee[ce])) {
      if (isPlainObject(ee[ce]))
        return ie.push.apply(ie, Z(ee[ce], ce)), ie;
      if (isFunction(ee[ce]))
        return ie.push(hyphenateStyleName(ce) + ":", ee[ce], ";"), ie;
      ie.push(hyphenateStyleName(ce) + ": " + addUnitIfNeeded(ce, ee[ce]) + ";");
    }
    return ie;
  }), ne ? [ne + " {"].concat(ie, ["}"]) : ie;
};
function flatten(Z, ee, ne) {
  if (Array.isArray(Z)) {
    for (var ie = [], oe = 0, ce = Z.length, he; oe < ce; oe += 1)
      he = flatten(Z[oe], ee, ne), he !== null && (Array.isArray(he) ? ie.push.apply(ie, he) : ie.push(he));
    return ie;
  }
  if (isFalsish(Z))
    return null;
  if (isStyledComponent(Z))
    return "." + Z.styledComponentId;
  if (isFunction(Z))
    if (isStatelessFunction(Z) && ee) {
      var fe = Z(ee);
      return process.env.NODE_ENV !== "production" && reactIsExports.isElement(fe) && console.warn(getComponentName(Z) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), flatten(fe, ee, ne);
    } else
      return Z;
  return Z instanceof Keyframes ? ne ? (Z.inject(ne), Z.getName()) : Z : isPlainObject(Z) ? objToCssArray(Z) : Z.toString();
}
function css(Z) {
  for (var ee = arguments.length, ne = Array(ee > 1 ? ee - 1 : 0), ie = 1; ie < ee; ie++)
    ne[ie - 1] = arguments[ie];
  return isFunction(Z) || isPlainObject(Z) ? flatten(interleave(EMPTY_ARRAY, [Z].concat(ne))) : flatten(interleave(Z, ne));
}
function constructWithOptions(Z, ee) {
  var ne = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT;
  if (!reactIsExports.isValidElementType(ee))
    throw new StyledComponentsError(1, String(ee));
  var ie = function() {
    return Z(ee, ne, css.apply(void 0, arguments));
  };
  return ie.withConfig = function(oe) {
    return constructWithOptions(Z, ee, _extends({}, ne, oe));
  }, ie.attrs = function(oe) {
    return constructWithOptions(Z, ee, _extends({}, ne, {
      attrs: Array.prototype.concat(ne.attrs, oe).filter(Boolean)
    }));
  }, ie;
}
function murmurhash(Z) {
  for (var ee = Z.length | 0, ne = ee | 0, ie = 0, oe; ee >= 4; )
    oe = Z.charCodeAt(ie) & 255 | (Z.charCodeAt(++ie) & 255) << 8 | (Z.charCodeAt(++ie) & 255) << 16 | (Z.charCodeAt(++ie) & 255) << 24, oe = 1540483477 * (oe & 65535) + ((1540483477 * (oe >>> 16) & 65535) << 16), oe ^= oe >>> 24, oe = 1540483477 * (oe & 65535) + ((1540483477 * (oe >>> 16) & 65535) << 16), ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16) ^ oe, ee -= 4, ++ie;
  switch (ee) {
    case 3:
      ne ^= (Z.charCodeAt(ie + 2) & 255) << 16;
    case 2:
      ne ^= (Z.charCodeAt(ie + 1) & 255) << 8;
    case 1:
      ne ^= Z.charCodeAt(ie) & 255, ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16);
  }
  return ne ^= ne >>> 13, ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16), (ne ^ ne >>> 15) >>> 0;
}
var charsLength = 52, getAlphabeticChar = function Z(ee) {
  return String.fromCharCode(ee + (ee > 25 ? 39 : 97));
};
function generateAlphabeticName(Z) {
  var ee = "", ne = void 0;
  for (ne = Z; ne > charsLength; ne = Math.floor(ne / charsLength))
    ee = getAlphabeticChar(ne % charsLength) + ee;
  return getAlphabeticChar(ne % charsLength) + ee;
}
function hasFunctionObjectKey(Z) {
  for (var ee in Z)
    if (isFunction(Z[ee]))
      return !0;
  return !1;
}
function isStaticRules(Z, ee) {
  for (var ne = 0; ne < Z.length; ne += 1) {
    var ie = Z[ne];
    if (Array.isArray(ie) && !isStaticRules(ie, ee))
      return !1;
    if (isFunction(ie) && !isStyledComponent(ie))
      return !1;
  }
  return !ee.some(function(oe) {
    return isFunction(oe) || hasFunctionObjectKey(oe);
  });
}
var hasher = function Z(ee) {
  return generateAlphabeticName(murmurhash(ee));
}, ComponentStyle = function() {
  function Z(ee, ne, ie) {
    classCallCheck(this, Z), this.rules = ee, this.isStatic = process.env.NODE_ENV === "production" && isStaticRules(ee, ne), this.componentId = ie, StyleSheet.master.hasId(ie) || StyleSheet.master.deferredInject(ie, []);
  }
  return Z.prototype.generateAndInjectStyles = function(ne, ie) {
    var oe = this.isStatic, ce = this.componentId, he = this.lastClassName;
    if (IS_BROWSER && oe && typeof he == "string" && ie.hasNameForId(ce, he))
      return he;
    var fe = flatten(this.rules, ne, ie), xe = hasher(this.componentId + fe.join(""));
    return ie.hasNameForId(ce, xe) || ie.inject(this.componentId, stringifyRules(fe, "." + xe, void 0, ce), xe), this.lastClassName = xe, xe;
  }, Z.generateName = function(ne) {
    return hasher(ne);
  }, Z;
}(), LIMIT = 200, createWarnTooManyClasses = function(Z) {
  var ee = {}, ne = !1;
  return function(ie) {
    ne || (ee[ie] = !0, Object.keys(ee).length >= LIMIT && (console.warn("Over " + LIMIT + " classes were generated for component " + Z + `. 
Consider using the attrs method, together with a style object for frequently changed styles.
Example:
  const Component = styled.div.attrs(props => ({
    style: {
      background: props.background,
    },
  }))\`width: 100%;\`

  <Component />`), ne = !0, ee = {}));
  };
}, determineTheme = function(Z, ee) {
  var ne = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT, ie = ne ? Z.theme === ne.theme : !1, oe = Z.theme && !ie ? Z.theme : ee || ne.theme;
  return oe;
}, escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g, dashesAtEnds = /(^-|-$)/g;
function escape$1(Z) {
  return Z.replace(escapeRegex, "-").replace(dashesAtEnds, "");
}
function isTag(Z) {
  return typeof Z == "string" && (process.env.NODE_ENV !== "production" ? Z.charAt(0) === Z.charAt(0).toLowerCase() : !0);
}
function generateDisplayName(Z) {
  return isTag(Z) ? "styled." + Z : "Styled(" + getComponentName(Z) + ")";
}
var _TYPE_STATICS, REACT_STATICS = {
  childContextTypes: !0,
  contextTypes: !0,
  defaultProps: !0,
  displayName: !0,
  getDerivedStateFromProps: !0,
  propTypes: !0,
  type: !0
}, KNOWN_STATICS = {
  name: !0,
  length: !0,
  prototype: !0,
  caller: !0,
  callee: !0,
  arguments: !0,
  arity: !0
}, TYPE_STATICS = (_TYPE_STATICS = {}, _TYPE_STATICS[reactIsExports.ForwardRef] = {
  $$typeof: !0,
  render: !0
}, _TYPE_STATICS), defineProperty$1 = Object.defineProperty, getOwnPropertyNames = Object.getOwnPropertyNames, _Object$getOwnPropert = Object.getOwnPropertySymbols, getOwnPropertySymbols = _Object$getOwnPropert === void 0 ? function() {
  return [];
} : _Object$getOwnPropert, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, getPrototypeOf = Object.getPrototypeOf, objectPrototype = Object.prototype, arrayPrototype = Array.prototype;
function hoistNonReactStatics(Z, ee, ne) {
  if (typeof ee != "string") {
    var ie = getPrototypeOf(ee);
    ie && ie !== objectPrototype && hoistNonReactStatics(Z, ie, ne);
    for (var oe = arrayPrototype.concat(
      getOwnPropertyNames(ee),
      getOwnPropertySymbols(ee)
    ), ce = TYPE_STATICS[Z.$$typeof] || REACT_STATICS, he = TYPE_STATICS[ee.$$typeof] || REACT_STATICS, fe = oe.length, xe = void 0, Ae = void 0; fe--; )
      if (Ae = oe[fe], !KNOWN_STATICS[Ae] && !(ne && ne[Ae]) && !(he && he[Ae]) && !(ce && ce[Ae]) && (xe = getOwnPropertyDescriptor(ee, Ae), xe))
        try {
          defineProperty$1(Z, Ae, xe);
        } catch {
        }
    return Z;
  }
  return Z;
}
function isDerivedReactComponent(Z) {
  return !!(Z && Z.prototype && Z.prototype.isReactComponent);
}
var once = function(Z) {
  var ee = !1;
  return function() {
    ee || (ee = !0, Z.apply(void 0, arguments));
  };
}, ThemeContext = createContext(), ThemeConsumer = ThemeContext.Consumer;
(function(Z) {
  inherits(ee, Z);
  function ee(ne) {
    classCallCheck(this, ee);
    var ie = possibleConstructorReturn(this, Z.call(this, ne));
    return ie.getContext = memoizeOne(ie.getContext.bind(ie)), ie.renderInner = ie.renderInner.bind(ie), ie;
  }
  return ee.prototype.render = function() {
    return this.props.children ? /* @__PURE__ */ jsx(ThemeContext.Consumer, {
      children: this.renderInner
    }) : null;
  }, ee.prototype.renderInner = function(ie) {
    var oe = this.getContext(this.props.theme, ie);
    return /* @__PURE__ */ jsx(ThemeContext.Provider, {
      value: oe,
      children: this.props.children
    });
  }, ee.prototype.getTheme = function(ie, oe) {
    if (isFunction(ie)) {
      var ce = ie(oe);
      if (process.env.NODE_ENV !== "production" && (ce === null || Array.isArray(ce) || (typeof ce > "u" ? "undefined" : _typeof(ce)) !== "object"))
        throw new StyledComponentsError(7);
      return ce;
    }
    if (ie === null || Array.isArray(ie) || (typeof ie > "u" ? "undefined" : _typeof(ie)) !== "object")
      throw new StyledComponentsError(8);
    return _extends({}, oe, ie);
  }, ee.prototype.getContext = function(ie, oe) {
    return this.getTheme(ie, oe);
  }, ee;
})(Component);
var ServerStyleSheet = function() {
  function Z() {
    classCallCheck(this, Z), this.masterSheet = StyleSheet.master, this.instance = this.masterSheet.clone(), this.sealed = !1;
  }
  return Z.prototype.seal = function() {
    if (!this.sealed) {
      var ne = this.masterSheet.clones.indexOf(this.instance);
      this.masterSheet.clones.splice(ne, 1), this.sealed = !0;
    }
  }, Z.prototype.collectStyles = function(ne) {
    if (this.sealed)
      throw new StyledComponentsError(2);
    return /* @__PURE__ */ jsx(StyleSheetManager, {
      sheet: this.instance,
      children: ne
    });
  }, Z.prototype.getStyleTags = function() {
    return this.seal(), this.instance.toHTML();
  }, Z.prototype.getStyleElement = function() {
    return this.seal(), this.instance.toReactElements();
  }, Z.prototype.interleaveWithNodeStream = function(ne) {
    throw new StyledComponentsError(3);
  }, Z;
}(), StyleSheetContext = createContext(), StyleSheetConsumer = StyleSheetContext.Consumer, StyleSheetManager = function(Z) {
  inherits(ee, Z);
  function ee(ne) {
    classCallCheck(this, ee);
    var ie = possibleConstructorReturn(this, Z.call(this, ne));
    return ie.getContext = memoizeOne(ie.getContext), ie;
  }
  return ee.prototype.getContext = function(ie, oe) {
    if (ie)
      return ie;
    if (oe)
      return new StyleSheet(oe);
    throw new StyledComponentsError(4);
  }, ee.prototype.render = function() {
    var ie = this.props, oe = ie.children, ce = ie.sheet, he = ie.target;
    return /* @__PURE__ */ jsx(StyleSheetContext.Provider, {
      value: this.getContext(ce, he),
      children: process.env.NODE_ENV !== "production" ? React__default.Children.only(oe) : oe
    });
  }, ee;
}(Component);
process.env.NODE_ENV !== "production" && (StyleSheetManager.propTypes = {
  sheet: propTypes.exports.oneOfType([propTypes.exports.instanceOf(StyleSheet), propTypes.exports.instanceOf(ServerStyleSheet)]),
  target: propTypes.exports.shape({
    appendChild: propTypes.exports.func.isRequired
  })
});
var identifiers = {};
function generateId(Z, ee, ne) {
  var ie = typeof ee != "string" ? "sc" : escape$1(ee), oe = (identifiers[ie] || 0) + 1;
  identifiers[ie] = oe;
  var ce = ie + "-" + Z.generateName(ie + oe);
  return ne ? ne + "-" + ce : ce;
}
var StyledComponent = function(Z) {
  inherits(ee, Z);
  function ee() {
    classCallCheck(this, ee);
    var ne = possibleConstructorReturn(this, Z.call(this));
    return ne.attrs = {}, ne.renderOuter = ne.renderOuter.bind(ne), ne.renderInner = ne.renderInner.bind(ne), process.env.NODE_ENV !== "production" && (ne.warnInnerRef = once(function(ie) {
      return console.warn('The "innerRef" API has been removed in styled-components v4 in favor of React 16 ref forwarding, use "ref" instead like a typical component. "innerRef" was detected on component "' + ie + '".');
    }), ne.warnAttrsFnObjectKeyDeprecated = once(function(ie, oe) {
      return console.warn('Functions as object-form attrs({}) keys are now deprecated and will be removed in a future version of styled-components. Switch to the new attrs(props => ({})) syntax instead for easier and more powerful composition. The attrs key in question is "' + ie + '" on component "' + oe + '".', `
 ` + new Error().stack);
    }), ne.warnNonStyledComponentAttrsObjectKey = once(function(ie, oe) {
      return console.warn(`It looks like you've used a non styled-component as the value for the "` + ie + '" prop in an object-form attrs constructor of "' + oe + `".
You should use the new function-form attrs constructor which avoids this issue: attrs(props => ({ yourStuff }))
To continue using the deprecated object syntax, you'll need to wrap your component prop in a function to make it available inside the styled component (you'll still get the deprecation warning though.)
` + ("For example, { " + ie + ": () => InnerComponent } instead of { " + ie + ": InnerComponent }"));
    })), ne;
  }
  return ee.prototype.render = function() {
    return /* @__PURE__ */ jsx(StyleSheetConsumer, {
      children: this.renderOuter
    });
  }, ee.prototype.renderOuter = function() {
    var ie = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : StyleSheet.master;
    return this.styleSheet = ie, this.props.forwardedComponent.componentStyle.isStatic ? this.renderInner() : /* @__PURE__ */ jsx(ThemeConsumer, {
      children: this.renderInner
    });
  }, ee.prototype.renderInner = function(ie) {
    var oe = this.props.forwardedComponent, ce = oe.componentStyle, he = oe.defaultProps, fe = oe.displayName, xe = oe.foldedComponentIds, Ae = oe.styledComponentId, Ee = oe.target, ye = void 0;
    ce.isStatic ? ye = this.generateAndInjectStyles(EMPTY_OBJECT, this.props) : ye = this.generateAndInjectStyles(determineTheme(this.props, ie, he) || EMPTY_OBJECT, this.props);
    var ge = this.props.as || this.attrs.as || Ee, me = isTag(ge), Ce = {}, Ie = _extends({}, this.props, this.attrs), Oe = void 0;
    for (Oe in Ie)
      process.env.NODE_ENV !== "production" && Oe === "innerRef" && me && this.warnInnerRef(fe), !(Oe === "forwardedComponent" || Oe === "as") && (Oe === "forwardedRef" ? Ce.ref = Ie[Oe] : Oe === "forwardedAs" ? Ce.as = Ie[Oe] : (!me || index(Oe)) && (Ce[Oe] = Ie[Oe]));
    return this.props.style && this.attrs.style && (Ce.style = _extends({}, this.attrs.style, this.props.style)), Ce.className = Array.prototype.concat(xe, Ae, ye !== Ae ? ye : null, this.props.className, this.attrs.className).filter(Boolean).join(" "), createElement(ge, Ce);
  }, ee.prototype.buildExecutionContext = function(ie, oe, ce) {
    var he = this, fe = _extends({}, oe, {
      theme: ie
    });
    return ce.length && (this.attrs = {}, ce.forEach(function(xe) {
      var Ae = xe, Ee = !1, ye = void 0, ge = void 0;
      isFunction(Ae) && (Ae = Ae(fe), Ee = !0);
      for (ge in Ae)
        ye = Ae[ge], Ee || isFunction(ye) && !isDerivedReactComponent(ye) && !isStyledComponent(ye) && (process.env.NODE_ENV !== "production" && he.warnAttrsFnObjectKeyDeprecated(ge, oe.forwardedComponent.displayName), ye = ye(fe), process.env.NODE_ENV !== "production" && React__default.isValidElement(ye) && he.warnNonStyledComponentAttrsObjectKey(ge, oe.forwardedComponent.displayName)), he.attrs[ge] = ye, fe[ge] = ye;
    })), fe;
  }, ee.prototype.generateAndInjectStyles = function(ie, oe) {
    var ce = oe.forwardedComponent, he = ce.attrs, fe = ce.componentStyle, xe = ce.warnTooManyClasses;
    if (fe.isStatic && !he.length)
      return fe.generateAndInjectStyles(EMPTY_OBJECT, this.styleSheet);
    var Ae = fe.generateAndInjectStyles(this.buildExecutionContext(ie, oe, he), this.styleSheet);
    return process.env.NODE_ENV !== "production" && xe && xe(Ae), Ae;
  }, ee;
}(Component);
function createStyledComponent(Z, ee, ne) {
  var ie = isStyledComponent(Z), oe = !isTag(Z), ce = ee.displayName, he = ce === void 0 ? generateDisplayName(Z) : ce, fe = ee.componentId, xe = fe === void 0 ? generateId(ComponentStyle, ee.displayName, ee.parentComponentId) : fe, Ae = ee.ParentComponent, Ee = Ae === void 0 ? StyledComponent : Ae, ye = ee.attrs, ge = ye === void 0 ? EMPTY_ARRAY : ye, me = ee.displayName && ee.componentId ? escape$1(ee.displayName) + "-" + ee.componentId : ee.componentId || xe, Ce = ie && Z.attrs ? Array.prototype.concat(Z.attrs, ge).filter(Boolean) : ge, Ie = new ComponentStyle(ie ? Z.componentStyle.rules.concat(ne) : ne, Ce, me), Oe = void 0, He = function(Pe, Fe) {
    return /* @__PURE__ */ jsx(Ee, {
      ...Pe,
      forwardedComponent: Oe,
      forwardedRef: Fe
    });
  };
  return He.displayName = he, Oe = React__default.forwardRef(He), Oe.displayName = he, Oe.attrs = Ce, Oe.componentStyle = Ie, Oe.foldedComponentIds = ie ? Array.prototype.concat(Z.foldedComponentIds, Z.styledComponentId) : EMPTY_ARRAY, Oe.styledComponentId = me, Oe.target = ie ? Z.target : Z, Oe.withComponent = function(Pe) {
    var Fe = ee.componentId, Le = objectWithoutProperties(ee, ["componentId"]), We = Fe && Fe + "-" + (isTag(Pe) ? Pe : escape$1(getComponentName(Pe))), rt = _extends({}, Le, {
      attrs: Ce,
      componentId: We,
      ParentComponent: Ee
    });
    return createStyledComponent(Pe, rt, ne);
  }, Object.defineProperty(Oe, "defaultProps", {
    get: function() {
      return this._foldedDefaultProps;
    },
    set: function(Pe) {
      this._foldedDefaultProps = ie ? merge(Z.defaultProps, Pe) : Pe;
    }
  }), process.env.NODE_ENV !== "production" && (Oe.warnTooManyClasses = createWarnTooManyClasses(he)), Oe.toString = function() {
    return "." + Oe.styledComponentId;
  }, oe && hoistNonReactStatics(Oe, Z, {
    attrs: !0,
    componentStyle: !0,
    displayName: !0,
    foldedComponentIds: !0,
    styledComponentId: !0,
    target: !0,
    withComponent: !0
  }), Oe;
}
var domElements = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "marker",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], styled = function Z(ee) {
  return constructWithOptions(createStyledComponent, ee);
};
domElements.forEach(function(Z) {
  styled[Z] = styled(Z);
});
IS_BROWSER && (window.scCGSHMRCache = {});
process.env.NODE_ENV !== "production" && typeof navigator < "u" && navigator.product === "ReactNative" && console.warn(`It looks like you've imported 'styled-components' on React Native.
Perhaps you're looking to import 'styled-components/native'?
Read more about this at https://www.styled-components.com/docs/basics#react-native`);
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && typeof window < "u" && typeof navigator < "u" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Node.js") === -1 && navigator.userAgent.indexOf("jsdom") === -1 && (window["__styled-components-init__"] = window["__styled-components-init__"] || 0, window["__styled-components-init__"] === 1 && console.warn(`It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles not rendering properly, errors happening during rehydration process and makes your application bigger without a good reason.

See https://s-c.sh/2BAXzed for more info.`), window["__styled-components-init__"] += 1);
const styled$1 = styled, StyledFrame = styled$1.div`
  align-self: flex-end;
  display: flex;
  background-image: url("frame/left-top-corner.png"),
    url("frame/right-top-corner.png"), url("frame/left-bottom-corner.png"),
    url("frame/right-bottom-corner.png"), url("frame/top-horizontal-bar.png"),
    url("frame/bottom-horizontal-bar.png"), url("frame/left-vertical-bar.png"),
    url("frame/right-vertical-bar.png"), url("frame/bg2.jpg");
  background-position: left top, right top, left 1px bottom, right 1px bottom,
    left 1px, left 1px bottom, left 1px bottom, right 1px top, center top;
  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat, repeat-x,
    repeat-x, repeat-y, repeat-y, no-repeat;
  background-color: #1d2123;
  position: relative;
  padding: 8px;
`;
StyledFrame.displayName = "StyledFrame";
const Frame = ({
  className: Z,
  children: ee
}) => /* @__PURE__ */ jsx(StyledFrame, {
  className: Z,
  children: /* @__PURE__ */ jsx("div", {
    className: "w-full h-full p-3 rounded shadow-inner bg-[url('/frame/bg.jpg')] bg-center bg-cover",
    children: ee
  })
}), StyledBagBox = styled$1.div`
  ${(Z) => {
  const {
    canDrop: ee,
    isOver: ne
  } = Z;
  return css`
      position: relative;
      border: ${ee ? `1px solid ${ne ? "green" : "gold"}` : "1px solid #0c1e20"};
      position: relative;
      width: 6em;
      display: flex;
      height: 6em;
      align-items: center;
      justify-content: center;
      background-image: radial-gradient(#0c1e20 0%, #101010 66%);
      border-radius: 2px;
      box-shadow: 0px 0px 0px 2px #2f3639;
    `;
}}
`;
StyledBagBox.displayName = "StyledBagBox";
const RemoteBox = ({
  className: Z,
  children: ee
}) => /* @__PURE__ */ jsx(StyledBagBox, {
  className: Z,
  isOver: !1,
  canDrop: !1,
  children: ee
}), RemoteBox$1 = memo(RemoteBox), BagBox = ({
  className: Z,
  children: ee,
  isOver: ne,
  canDrop: ie
}) => /* @__PURE__ */ jsx(StyledBagBox, {
  className: Z,
  isOver: ne,
  canDrop: ie,
  children: ee
}), BagBox$1 = memo(BagBox);
var classnames$1 = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(Z) {
  (function() {
    var ee = {}.hasOwnProperty;
    function ne() {
      for (var ie = [], oe = 0; oe < arguments.length; oe++) {
        var ce = arguments[oe];
        if (!!ce) {
          var he = typeof ce;
          if (he === "string" || he === "number")
            ie.push(ce);
          else if (Array.isArray(ce)) {
            if (ce.length) {
              var fe = ne.apply(null, ce);
              fe && ie.push(fe);
            }
          } else if (he === "object") {
            if (ce.toString !== Object.prototype.toString && !ce.toString.toString().includes("[native code]")) {
              ie.push(ce.toString());
              continue;
            }
            for (var xe in ce)
              ee.call(ce, xe) && ce[xe] && ie.push(xe);
          }
        }
      }
      return ie.join(" ");
    }
    Z.exports ? (ne.default = ne, Z.exports = ne) : window.classNames = ne;
  })();
})(classnames$1);
const classnames = classnames$1.exports;
var react3dViewer = { exports: {} };
/*!
 *  react-3d-viewer v1.0.12
 *  By https://github.com/dwqdaiwenqi 
 *  Github: https://github.com/dwqdaiwenqi/react-3d-viewer
 *  MIT Licensed.
 */
(function(Z, ee) {
  (function(ne, ie) {
    Z.exports = ie();
  })(window, function() {
    return function(ne) {
      var ie = {};
      function oe(ce) {
        if (ie[ce])
          return ie[ce].exports;
        var he = ie[ce] = { i: ce, l: !1, exports: {} };
        return ne[ce].call(he.exports, he, he.exports, oe), he.l = !0, he.exports;
      }
      return oe.m = ne, oe.c = ie, oe.d = function(ce, he, fe) {
        oe.o(ce, he) || Object.defineProperty(ce, he, { enumerable: !0, get: fe });
      }, oe.r = function(ce) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(ce, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(ce, "__esModule", { value: !0 });
      }, oe.t = function(ce, he) {
        if (1 & he && (ce = oe(ce)), 8 & he || 4 & he && typeof ce == "object" && ce && ce.__esModule)
          return ce;
        var fe = /* @__PURE__ */ Object.create(null);
        if (oe.r(fe), Object.defineProperty(fe, "default", { enumerable: !0, value: ce }), 2 & he && typeof ce != "string")
          for (var xe in ce)
            oe.d(fe, xe, function(Ae) {
              return ce[Ae];
            }.bind(null, xe));
        return fe;
      }, oe.n = function(ce) {
        var he = ce && ce.__esModule ? function() {
          return ce.default;
        } : function() {
          return ce;
        };
        return oe.d(he, "a", he), he;
      }, oe.o = function(ce, he) {
        return Object.prototype.hasOwnProperty.call(ce, he);
      }, oe.p = "", oe(oe.s = 13);
    }([function(ne, ie, oe) {
      function ce() {
      }
      oe.r(ie), oe.d(ie, "WebGLRenderTargetCube", function() {
        return Fo;
      }), oe.d(ie, "WebGLRenderTarget", function() {
        return no;
      }), oe.d(ie, "WebGLRenderer", function() {
        return iu;
      }), oe.d(ie, "ShaderLib", function() {
        return ao;
      }), oe.d(ie, "UniformsLib", function() {
        return cn;
      }), oe.d(ie, "UniformsUtils", function() {
        return Li;
      }), oe.d(ie, "ShaderChunk", function() {
        return zn;
      }), oe.d(ie, "FogExp2", function() {
        return $o;
      }), oe.d(ie, "Fog", function() {
        return Vo;
      }), oe.d(ie, "Scene", function() {
        return Sc;
      }), oe.d(ie, "Sprite", function() {
        return ks;
      }), oe.d(ie, "LOD", function() {
        return Os;
      }), oe.d(ie, "SkinnedMesh", function() {
        return Tc;
      }), oe.d(ie, "Skeleton", function() {
        return Ps;
      }), oe.d(ie, "Bone", function() {
        return Ic;
      }), oe.d(ie, "Mesh", function() {
        return Xi;
      }), oe.d(ie, "LineSegments", function() {
        return ri;
      }), oe.d(ie, "LineLoop", function() {
        return Rc;
      }), oe.d(ie, "Line", function() {
        return Zi;
      }), oe.d(ie, "Points", function() {
        return Do;
      }), oe.d(ie, "Group", function() {
        return jo;
      }), oe.d(ie, "VideoTexture", function() {
        return au;
      }), oe.d(ie, "DataTexture", function() {
        return io;
      }), oe.d(ie, "CompressedTexture", function() {
        return zo;
      }), oe.d(ie, "CubeTexture", function() {
        return ja;
      }), oe.d(ie, "CanvasTexture", function() {
        return Fs;
      }), oe.d(ie, "DepthTexture", function() {
        return Gs;
      }), oe.d(ie, "Texture", function() {
        return ii;
      }), oe.d(ie, "CompressedTextureLoader", function() {
        return gl;
      }), oe.d(ie, "DataTextureLoader", function() {
        return uu;
      }), oe.d(ie, "CubeTextureLoader", function() {
        return lu;
      }), oe.d(ie, "TextureLoader", function() {
        return Nc;
      }), oe.d(ie, "ObjectLoader", function() {
        return xl;
      }), oe.d(ie, "MaterialLoader", function() {
        return Yc;
      }), oe.d(ie, "BufferGeometryLoader", function() {
        return Au;
      }), oe.d(ie, "DefaultLoadingManager", function() {
        return ta;
      }), oe.d(ie, "LoadingManager", function() {
        return cu;
      }), oe.d(ie, "JSONLoader", function() {
        return mu;
      }), oe.d(ie, "ImageLoader", function() {
        return oc;
      }), oe.d(ie, "ImageBitmapLoader", function() {
        return yu;
      }), oe.d(ie, "FontLoader", function() {
        return Bl;
      }), oe.d(ie, "FileLoader", function() {
        return ya;
      }), oe.d(ie, "Loader", function() {
        return ls;
      }), oe.d(ie, "LoaderUtils", function() {
        return gu;
      }), oe.d(ie, "Cache", function() {
        return So;
      }), oe.d(ie, "AudioLoader", function() {
        return bu;
      }), oe.d(ie, "SpotLightShadow", function() {
        return Oc;
      }), oe.d(ie, "SpotLight", function() {
        return Pc;
      }), oe.d(ie, "PointLight", function() {
        return Fc;
      }), oe.d(ie, "RectAreaLight", function() {
        return qc;
      }), oe.d(ie, "HemisphereLight", function() {
        return kc;
      }), oe.d(ie, "DirectionalLightShadow", function() {
        return Gc;
      }), oe.d(ie, "DirectionalLight", function() {
        return Uc;
      }), oe.d(ie, "AmbientLight", function() {
        return Hc;
      }), oe.d(ie, "LightShadow", function() {
        return Io;
      }), oe.d(ie, "Light", function() {
        return li;
      }), oe.d(ie, "StereoCamera", function() {
        return wl;
      }), oe.d(ie, "PerspectiveCamera", function() {
        return fi;
      }), oe.d(ie, "OrthographicCamera", function() {
        return Go;
      }), oe.d(ie, "CubeCamera", function() {
        return dc;
      }), oe.d(ie, "ArrayCamera", function() {
        return Ns;
      }), oe.d(ie, "Camera", function() {
        return Sa;
      }), oe.d(ie, "AudioListener", function() {
        return Bu;
      }), oe.d(ie, "PositionalAudio", function() {
        return wu;
      }), oe.d(ie, "AudioContext", function() {
        return Eu;
      }), oe.d(ie, "AudioAnalyser", function() {
        return _u;
      }), oe.d(ie, "Audio", function() {
        return ds;
      }), oe.d(ie, "VectorKeyframeTrack", function() {
        return us;
      }), oe.d(ie, "StringKeyframeTrack", function() {
        return Lc;
      }), oe.d(ie, "QuaternionKeyframeTrack", function() {
        return lc;
      }), oe.d(ie, "NumberKeyframeTrack", function() {
        return cs;
      }), oe.d(ie, "ColorKeyframeTrack", function() {
        return Dc;
      }), oe.d(ie, "BooleanKeyframeTrack", function() {
        return Vc;
      }), oe.d(ie, "PropertyMixer", function() {
        return Cu;
      }), oe.d(ie, "PropertyBinding", function() {
        return qi;
      }), oe.d(ie, "KeyframeTrack", function() {
        return Ni;
      }), oe.d(ie, "AnimationUtils", function() {
        return Hi;
      }), oe.d(ie, "AnimationObjectGroup", function() {
        return Sl;
      }), oe.d(ie, "AnimationMixer", function() {
        return Iu;
      }), oe.d(ie, "AnimationClip", function() {
        return da;
      }), oe.d(ie, "Uniform", function() {
        return Jc;
      }), oe.d(ie, "InstancedBufferGeometry", function() {
        return Tu;
      }), oe.d(ie, "BufferGeometry", function() {
        return Jr;
      }), oe.d(ie, "Geometry", function() {
        return mn;
      }), oe.d(ie, "InterleavedBufferAttribute", function() {
        return Qs;
      }), oe.d(ie, "InstancedInterleavedBuffer", function() {
        return Ru;
      }), oe.d(ie, "InterleavedBuffer", function() {
        return ho;
      }), oe.d(ie, "InstancedBufferAttribute", function() {
        return Mu;
      }), oe.d(ie, "Face3", function() {
        return qa;
      }), oe.d(ie, "Object3D", function() {
        return jr;
      }), oe.d(ie, "Raycaster", function() {
        return Tl;
      }), oe.d(ie, "Layers", function() {
        return eu;
      }), oe.d(ie, "EventDispatcher", function() {
        return ce;
      }), oe.d(ie, "Clock", function() {
        return Ml;
      }), oe.d(ie, "QuaternionLinearInterpolant", function() {
        return zc;
      }), oe.d(ie, "LinearInterpolant", function() {
        return uc;
      }), oe.d(ie, "DiscreteInterpolant", function() {
        return $c;
      }), oe.d(ie, "CubicInterpolant", function() {
        return jc;
      }), oe.d(ie, "Interpolant", function() {
        return sa;
      }), oe.d(ie, "Triangle", function() {
        return aa;
      }), oe.d(ie, "Math", function() {
        return Cn;
      }), oe.d(ie, "Spherical", function() {
        return Nl;
      }), oe.d(ie, "Cylindrical", function() {
        return Ql;
      }), oe.d(ie, "Plane", function() {
        return Ca;
      }), oe.d(ie, "Frustum", function() {
        return Cc;
      }), oe.d(ie, "Sphere", function() {
        return Aa;
      }), oe.d(ie, "Ray", function() {
        return fo;
      }), oe.d(ie, "Matrix4", function() {
        return An;
      }), oe.d(ie, "Matrix3", function() {
        return zi;
      }), oe.d(ie, "Box3", function() {
        return Ha;
      }), oe.d(ie, "Box2", function() {
        return Qu;
      }), oe.d(ie, "Line3", function() {
        return ku;
      }), oe.d(ie, "Euler", function() {
        return oo;
      }), oe.d(ie, "Vector4", function() {
        return Zn;
      }), oe.d(ie, "Vector3", function() {
        return mt;
      }), oe.d(ie, "Vector2", function() {
        return wr;
      }), oe.d(ie, "Quaternion", function() {
        return ci;
      }), oe.d(ie, "Color", function() {
        return sn;
      }), oe.d(ie, "ImmediateRenderObject", function() {
        return fc;
      }), oe.d(ie, "VertexNormalsHelper", function() {
        return hc;
      }), oe.d(ie, "SpotLightHelper", function() {
        return fs;
      }), oe.d(ie, "SkeletonHelper", function() {
        return hs;
      }), oe.d(ie, "PointLightHelper", function() {
        return ps;
      }), oe.d(ie, "RectAreaLightHelper", function() {
        return As;
      }), oe.d(ie, "HemisphereLightHelper", function() {
        return gs;
      }), oe.d(ie, "GridHelper", function() {
        return pc;
      }), oe.d(ie, "PolarGridHelper", function() {
        return Xc;
      }), oe.d(ie, "FaceNormalsHelper", function() {
        return Ac;
      }), oe.d(ie, "DirectionalLightHelper", function() {
        return ms;
      }), oe.d(ie, "CameraHelper", function() {
        return gc;
      }), oe.d(ie, "BoxHelper", function() {
        return To;
      }), oe.d(ie, "Box3Helper", function() {
        return mc;
      }), oe.d(ie, "PlaneHelper", function() {
        return yc;
      }), oe.d(ie, "ArrowHelper", function() {
        return Ro;
      }), oe.d(ie, "AxesHelper", function() {
        return vc;
      }), oe.d(ie, "Shape", function() {
        return Ka;
      }), oe.d(ie, "Path", function() {
        return Ba;
      }), oe.d(ie, "ShapePath", function() {
        return vu;
      }), oe.d(ie, "Font", function() {
        return xu;
      }), oe.d(ie, "CurvePath", function() {
        return za;
      }), oe.d(ie, "Curve", function() {
        return dn;
      }), oe.d(ie, "ImageUtils", function() {
        return Ya;
      }), oe.d(ie, "ShapeUtils", function() {
        return $a;
      }), oe.d(ie, "WebGLUtils", function() {
        return ol;
      }), oe.d(ie, "WireframeGeometry", function() {
        return Lo;
      }), oe.d(ie, "ParametricGeometry", function() {
        return Us;
      }), oe.d(ie, "ParametricBufferGeometry", function() {
        return Yo;
      }), oe.d(ie, "TetrahedronGeometry", function() {
        return qs;
      }), oe.d(ie, "TetrahedronBufferGeometry", function() {
        return Wo;
      }), oe.d(ie, "OctahedronGeometry", function() {
        return js;
      }), oe.d(ie, "OctahedronBufferGeometry", function() {
        return po;
      }), oe.d(ie, "IcosahedronGeometry", function() {
        return $s;
      }), oe.d(ie, "IcosahedronBufferGeometry", function() {
        return Jo;
      }), oe.d(ie, "DodecahedronGeometry", function() {
        return Vs;
      }), oe.d(ie, "DodecahedronBufferGeometry", function() {
        return Xo;
      }), oe.d(ie, "PolyhedronGeometry", function() {
        return Hs;
      }), oe.d(ie, "PolyhedronBufferGeometry", function() {
        return Ki;
      }), oe.d(ie, "TubeGeometry", function() {
        return Ds;
      }), oe.d(ie, "TubeBufferGeometry", function() {
        return Zo;
      }), oe.d(ie, "TorusKnotGeometry", function() {
        return zs;
      }), oe.d(ie, "TorusKnotBufferGeometry", function() {
        return Ko;
      }), oe.d(ie, "TorusGeometry", function() {
        return Ls;
      }), oe.d(ie, "TorusBufferGeometry", function() {
        return es;
      }), oe.d(ie, "TextGeometry", function() {
        return Zs;
      }), oe.d(ie, "TextBufferGeometry", function() {
        return ts;
      }), oe.d(ie, "SphereGeometry", function() {
        return Ks;
      }), oe.d(ie, "SphereBufferGeometry", function() {
        return mo;
      }), oe.d(ie, "RingGeometry", function() {
        return ec;
      }), oe.d(ie, "RingBufferGeometry", function() {
        return rs;
      }), oe.d(ie, "PlaneGeometry", function() {
        return Rs;
      }), oe.d(ie, "PlaneBufferGeometry", function() {
        return lo;
      }), oe.d(ie, "LatheGeometry", function() {
        return tc;
      }), oe.d(ie, "LatheBufferGeometry", function() {
        return ns;
      }), oe.d(ie, "ShapeGeometry", function() {
        return yo;
      }), oe.d(ie, "ShapeBufferGeometry", function() {
        return vo;
      }), oe.d(ie, "ExtrudeGeometry", function() {
        return go;
      }), oe.d(ie, "ExtrudeBufferGeometry", function() {
        return Ia;
      }), oe.d(ie, "EdgesGeometry", function() {
        return is;
      }), oe.d(ie, "ConeGeometry", function() {
        return rc;
      }), oe.d(ie, "ConeBufferGeometry", function() {
        return nc;
      }), oe.d(ie, "CylinderGeometry", function() {
        return xo;
      }), oe.d(ie, "CylinderBufferGeometry", function() {
        return Va;
      }), oe.d(ie, "CircleGeometry", function() {
        return ac;
      }), oe.d(ie, "CircleBufferGeometry", function() {
        return as;
      }), oe.d(ie, "BoxGeometry", function() {
        return Uo;
      }), oe.d(ie, "BoxBufferGeometry", function() {
        return uo;
      }), oe.d(ie, "ShadowMaterial", function() {
        return Eo;
      }), oe.d(ie, "SpriteMaterial", function() {
        return Za;
      }), oe.d(ie, "RawShaderMaterial", function() {
        return os;
      }), oe.d(ie, "ShaderMaterial", function() {
        return la;
      }), oe.d(ie, "PointsMaterial", function() {
        return ga;
      }), oe.d(ie, "MeshPhysicalMaterial", function() {
        return bo;
      }), oe.d(ie, "MeshStandardMaterial", function() {
        return Ta;
      }), oe.d(ie, "MeshPhongMaterial", function() {
        return ma;
      }), oe.d(ie, "MeshToonMaterial", function() {
        return Bo;
      }), oe.d(ie, "MeshNormalMaterial", function() {
        return wo;
      }), oe.d(ie, "MeshLambertMaterial", function() {
        return _o;
      }), oe.d(ie, "MeshDepthMaterial", function() {
        return Ja;
      }), oe.d(ie, "MeshDistanceMaterial", function() {
        return Xa;
      }), oe.d(ie, "MeshBasicMaterial", function() {
        return ia;
      }), oe.d(ie, "LineDashedMaterial", function() {
        return Co;
      }), oe.d(ie, "LineBasicMaterial", function() {
        return ei;
      }), oe.d(ie, "Material", function() {
        return In;
      }), oe.d(ie, "Float64BufferAttribute", function() {
        return Ts;
      }), oe.d(ie, "Float32BufferAttribute", function() {
        return Gr;
      }), oe.d(ie, "Uint32BufferAttribute", function() {
        return co;
      }), oe.d(ie, "Int32BufferAttribute", function() {
        return Is;
      }), oe.d(ie, "Uint16BufferAttribute", function() {
        return so;
      }), oe.d(ie, "Int16BufferAttribute", function() {
        return Ss;
      }), oe.d(ie, "Uint8ClampedBufferAttribute", function() {
        return Cs;
      }), oe.d(ie, "Uint8BufferAttribute", function() {
        return _s;
      }), oe.d(ie, "Int8BufferAttribute", function() {
        return ws;
      }), oe.d(ie, "BufferAttribute", function() {
        return Nn;
      }), oe.d(ie, "ArcCurve", function() {
        return ss;
      }), oe.d(ie, "CatmullRomCurve3", function() {
        return Ui;
      }), oe.d(ie, "CubicBezierCurve", function() {
        return va;
      }), oe.d(ie, "CubicBezierCurve3", function() {
        return Ra;
      }), oe.d(ie, "EllipseCurve", function() {
        return oa;
      }), oe.d(ie, "LineCurve", function() {
        return ra;
      }), oe.d(ie, "LineCurve3", function() {
        return xa;
      }), oe.d(ie, "QuadraticBezierCurve", function() {
        return Ea;
      }), oe.d(ie, "QuadraticBezierCurve3", function() {
        return Ma;
      }), oe.d(ie, "SplineCurve", function() {
        return ba;
      }), oe.d(ie, "REVISION", function() {
        return he;
      }), oe.d(ie, "MOUSE", function() {
        return fe;
      }), oe.d(ie, "CullFaceNone", function() {
        return xe;
      }), oe.d(ie, "CullFaceBack", function() {
        return Ae;
      }), oe.d(ie, "CullFaceFront", function() {
        return Ee;
      }), oe.d(ie, "CullFaceFrontBack", function() {
        return ye;
      }), oe.d(ie, "FrontFaceDirectionCW", function() {
        return ge;
      }), oe.d(ie, "FrontFaceDirectionCCW", function() {
        return me;
      }), oe.d(ie, "BasicShadowMap", function() {
        return Ce;
      }), oe.d(ie, "PCFShadowMap", function() {
        return Ie;
      }), oe.d(ie, "PCFSoftShadowMap", function() {
        return Oe;
      }), oe.d(ie, "FrontSide", function() {
        return He;
      }), oe.d(ie, "BackSide", function() {
        return Ne;
      }), oe.d(ie, "DoubleSide", function() {
        return Pe;
      }), oe.d(ie, "FlatShading", function() {
        return Fe;
      }), oe.d(ie, "SmoothShading", function() {
        return Le;
      }), oe.d(ie, "NoColors", function() {
        return We;
      }), oe.d(ie, "FaceColors", function() {
        return rt;
      }), oe.d(ie, "VertexColors", function() {
        return gt;
      }), oe.d(ie, "NoBlending", function() {
        return kt;
      }), oe.d(ie, "NormalBlending", function() {
        return Ke;
      }), oe.d(ie, "AdditiveBlending", function() {
        return ht;
      }), oe.d(ie, "SubtractiveBlending", function() {
        return Nt;
      }), oe.d(ie, "MultiplyBlending", function() {
        return Ft;
      }), oe.d(ie, "CustomBlending", function() {
        return At;
      }), oe.d(ie, "AddEquation", function() {
        return St;
      }), oe.d(ie, "SubtractEquation", function() {
        return Vt;
      }), oe.d(ie, "ReverseSubtractEquation", function() {
        return Xt;
      }), oe.d(ie, "MinEquation", function() {
        return Lt;
      }), oe.d(ie, "MaxEquation", function() {
        return Zt;
      }), oe.d(ie, "ZeroFactor", function() {
        return Gt;
      }), oe.d(ie, "OneFactor", function() {
        return pt;
      }), oe.d(ie, "SrcColorFactor", function() {
        return It;
      }), oe.d(ie, "OneMinusSrcColorFactor", function() {
        return qt;
      }), oe.d(ie, "SrcAlphaFactor", function() {
        return De;
      }), oe.d(ie, "OneMinusSrcAlphaFactor", function() {
        return ar;
      }), oe.d(ie, "DstAlphaFactor", function() {
        return rr;
      }), oe.d(ie, "OneMinusDstAlphaFactor", function() {
        return Ar;
      }), oe.d(ie, "DstColorFactor", function() {
        return vt;
      }), oe.d(ie, "OneMinusDstColorFactor", function() {
        return Ut;
      }), oe.d(ie, "SrcAlphaSaturateFactor", function() {
        return Xe;
      }), oe.d(ie, "NeverDepth", function() {
        return tt;
      }), oe.d(ie, "AlwaysDepth", function() {
        return et;
      }), oe.d(ie, "LessDepth", function() {
        return Et;
      }), oe.d(ie, "LessEqualDepth", function() {
        return lt;
      }), oe.d(ie, "EqualDepth", function() {
        return $e;
      }), oe.d(ie, "GreaterEqualDepth", function() {
        return _e;
      }), oe.d(ie, "GreaterDepth", function() {
        return Be;
      }), oe.d(ie, "NotEqualDepth", function() {
        return be;
      }), oe.d(ie, "MultiplyOperation", function() {
        return ke;
      }), oe.d(ie, "MixOperation", function() {
        return Ve;
      }), oe.d(ie, "AddOperation", function() {
        return Je;
      }), oe.d(ie, "NoToneMapping", function() {
        return at;
      }), oe.d(ie, "LinearToneMapping", function() {
        return Tt;
      }), oe.d(ie, "ReinhardToneMapping", function() {
        return Dt;
      }), oe.d(ie, "Uncharted2ToneMapping", function() {
        return zt;
      }), oe.d(ie, "CineonToneMapping", function() {
        return Yt;
      }), oe.d(ie, "UVMapping", function() {
        return Ue;
      }), oe.d(ie, "CubeReflectionMapping", function() {
        return Te;
      }), oe.d(ie, "CubeRefractionMapping", function() {
        return Re;
      }), oe.d(ie, "EquirectangularReflectionMapping", function() {
        return it;
      }), oe.d(ie, "EquirectangularRefractionMapping", function() {
        return bt;
      }), oe.d(ie, "SphericalReflectionMapping", function() {
        return Qt;
      }), oe.d(ie, "CubeUVReflectionMapping", function() {
        return jt;
      }), oe.d(ie, "CubeUVRefractionMapping", function() {
        return yr;
      }), oe.d(ie, "RepeatWrapping", function() {
        return gr;
      }), oe.d(ie, "ClampToEdgeWrapping", function() {
        return br;
      }), oe.d(ie, "MirroredRepeatWrapping", function() {
        return mr;
      }), oe.d(ie, "NearestFilter", function() {
        return _r;
      }), oe.d(ie, "NearestMipMapNearestFilter", function() {
        return en;
      }), oe.d(ie, "NearestMipMapLinearFilter", function() {
        return Jn;
      }), oe.d(ie, "LinearFilter", function() {
        return an;
      }), oe.d(ie, "LinearMipMapNearestFilter", function() {
        return qn;
      }), oe.d(ie, "LinearMipMapLinearFilter", function() {
        return $n;
      }), oe.d(ie, "UnsignedByteType", function() {
        return Gn;
      }), oe.d(ie, "ByteType", function() {
        return Un;
      }), oe.d(ie, "ShortType", function() {
        return oi;
      }), oe.d(ie, "UnsignedShortType", function() {
        return Ai;
      }), oe.d(ie, "IntType", function() {
        return Ji;
      }), oe.d(ie, "UnsignedIntType", function() {
        return Ri;
      }), oe.d(ie, "FloatType", function() {
        return Hn;
      }), oe.d(ie, "HalfFloatType", function() {
        return Xn;
      }), oe.d(ie, "UnsignedShort4444Type", function() {
        return Ln;
      }), oe.d(ie, "UnsignedShort5551Type", function() {
        return si;
      }), oe.d(ie, "UnsignedShort565Type", function() {
        return gi;
      }), oe.d(ie, "UnsignedInt248Type", function() {
        return mi;
      }), oe.d(ie, "AlphaFormat", function() {
        return yi;
      }), oe.d(ie, "RGBFormat", function() {
        return Rt;
      }), oe.d(ie, "RGBAFormat", function() {
        return tr;
      }), oe.d(ie, "LuminanceFormat", function() {
        return Nr;
      }), oe.d(ie, "LuminanceAlphaFormat", function() {
        return on;
      }), oe.d(ie, "RGBEFormat", function() {
        return xn;
      }), oe.d(ie, "DepthFormat", function() {
        return Bn;
      }), oe.d(ie, "DepthStencilFormat", function() {
        return En;
      }), oe.d(ie, "RGB_S3TC_DXT1_Format", function() {
        return pn;
      }), oe.d(ie, "RGBA_S3TC_DXT1_Format", function() {
        return Sn;
      }), oe.d(ie, "RGBA_S3TC_DXT3_Format", function() {
        return Vn;
      }), oe.d(ie, "RGBA_S3TC_DXT5_Format", function() {
        return Zr;
      }), oe.d(ie, "RGB_PVRTC_4BPPV1_Format", function() {
        return Xr;
      }), oe.d(ie, "RGB_PVRTC_2BPPV1_Format", function() {
        return $r;
      }), oe.d(ie, "RGBA_PVRTC_4BPPV1_Format", function() {
        return xt;
      }), oe.d(ie, "RGBA_PVRTC_2BPPV1_Format", function() {
        return Br;
      }), oe.d(ie, "RGB_ETC1_Format", function() {
        return Wt;
      }), oe.d(ie, "RGBA_ASTC_4x4_Format", function() {
        return Hr;
      }), oe.d(ie, "RGBA_ASTC_5x4_Format", function() {
        return qe;
      }), oe.d(ie, "RGBA_ASTC_5x5_Format", function() {
        return Ye;
      }), oe.d(ie, "RGBA_ASTC_6x5_Format", function() {
        return ot;
      }), oe.d(ie, "RGBA_ASTC_6x6_Format", function() {
        return ft;
      }), oe.d(ie, "RGBA_ASTC_8x5_Format", function() {
        return ut;
      }), oe.d(ie, "RGBA_ASTC_8x6_Format", function() {
        return Jt;
      }), oe.d(ie, "RGBA_ASTC_8x8_Format", function() {
        return cr;
      }), oe.d(ie, "RGBA_ASTC_10x5_Format", function() {
        return or;
      }), oe.d(ie, "RGBA_ASTC_10x6_Format", function() {
        return Tr;
      }), oe.d(ie, "RGBA_ASTC_10x8_Format", function() {
        return Vr;
      }), oe.d(ie, "RGBA_ASTC_10x10_Format", function() {
        return Rr;
      }), oe.d(ie, "RGBA_ASTC_12x10_Format", function() {
        return Lr;
      }), oe.d(ie, "RGBA_ASTC_12x12_Format", function() {
        return wn;
      }), oe.d(ie, "LoopOnce", function() {
        return Rn;
      }), oe.d(ie, "LoopRepeat", function() {
        return Qn;
      }), oe.d(ie, "LoopPingPong", function() {
        return Fr;
      }), oe.d(ie, "InterpolateDiscrete", function() {
        return qr;
      }), oe.d(ie, "InterpolateLinear", function() {
        return _n;
      }), oe.d(ie, "InterpolateSmooth", function() {
        return fn;
      }), oe.d(ie, "ZeroCurvatureEnding", function() {
        return Kr;
      }), oe.d(ie, "ZeroSlopeEnding", function() {
        return Mn;
      }), oe.d(ie, "WrapAroundEnding", function() {
        return Yn;
      }), oe.d(ie, "TrianglesDrawMode", function() {
        return bn;
      }), oe.d(ie, "TriangleStripDrawMode", function() {
        return Dr;
      }), oe.d(ie, "TriangleFanDrawMode", function() {
        return gn;
      }), oe.d(ie, "LinearEncoding", function() {
        return Dn;
      }), oe.d(ie, "sRGBEncoding", function() {
        return bi;
      }), oe.d(ie, "GammaEncoding", function() {
        return na;
      }), oe.d(ie, "RGBEEncoding", function() {
        return Fa;
      }), oe.d(ie, "LogLuvEncoding", function() {
        return pa;
      }), oe.d(ie, "RGBM7Encoding", function() {
        return xi;
      }), oe.d(ie, "RGBM16Encoding", function() {
        return ro;
      }), oe.d(ie, "RGBDEncoding", function() {
        return bs;
      }), oe.d(ie, "BasicDepthPacking", function() {
        return Bs;
      }), oe.d(ie, "RGBADepthPacking", function() {
        return Po;
      }), oe.d(ie, "TangentSpaceNormalMap", function() {
        return Ga;
      }), oe.d(ie, "ObjectSpaceNormalMap", function() {
        return Ua;
      }), oe.d(ie, "CubeGeometry", function() {
        return Uo;
      }), oe.d(ie, "Face4", function() {
        return Gd;
      }), oe.d(ie, "LineStrip", function() {
        return Ud;
      }), oe.d(ie, "LinePieces", function() {
        return Hd;
      }), oe.d(ie, "MeshFaceMaterial", function() {
        return qd;
      }), oe.d(ie, "MultiMaterial", function() {
        return jd;
      }), oe.d(ie, "PointCloud", function() {
        return $d;
      }), oe.d(ie, "Particle", function() {
        return Vd;
      }), oe.d(ie, "ParticleSystem", function() {
        return Dd;
      }), oe.d(ie, "PointCloudMaterial", function() {
        return zd;
      }), oe.d(ie, "ParticleBasicMaterial", function() {
        return Ld;
      }), oe.d(ie, "ParticleSystemMaterial", function() {
        return Yd;
      }), oe.d(ie, "Vertex", function() {
        return Wd;
      }), oe.d(ie, "DynamicBufferAttribute", function() {
        return Jd;
      }), oe.d(ie, "Int8Attribute", function() {
        return Xd;
      }), oe.d(ie, "Uint8Attribute", function() {
        return Zd;
      }), oe.d(ie, "Uint8ClampedAttribute", function() {
        return Kd;
      }), oe.d(ie, "Int16Attribute", function() {
        return ef;
      }), oe.d(ie, "Uint16Attribute", function() {
        return tf;
      }), oe.d(ie, "Int32Attribute", function() {
        return rf;
      }), oe.d(ie, "Uint32Attribute", function() {
        return nf;
      }), oe.d(ie, "Float32Attribute", function() {
        return af;
      }), oe.d(ie, "Float64Attribute", function() {
        return of;
      }), oe.d(ie, "ClosedSplineCurve3", function() {
        return kl;
      }), oe.d(ie, "SplineCurve3", function() {
        return Ol;
      }), oe.d(ie, "Spline", function() {
        return Ou;
      }), oe.d(ie, "AxisHelper", function() {
        return sf;
      }), oe.d(ie, "BoundingBoxHelper", function() {
        return cf;
      }), oe.d(ie, "EdgesHelper", function() {
        return uf;
      }), oe.d(ie, "WireframeHelper", function() {
        return lf;
      }), oe.d(ie, "XHRLoader", function() {
        return df;
      }), oe.d(ie, "BinaryTextureLoader", function() {
        return ff;
      }), oe.d(ie, "GeometryUtils", function() {
        return hf;
      }), oe.d(ie, "Projector", function() {
        return pf;
      }), oe.d(ie, "CanvasRenderer", function() {
        return Af;
      }), oe.d(ie, "SceneUtils", function() {
        return gf;
      }), oe.d(ie, "LensFlare", function() {
        return mf;
      }), Number.EPSILON === void 0 && (Number.EPSILON = Math.pow(2, -52)), Number.isInteger === void 0 && (Number.isInteger = function(Q) {
        return typeof Q == "number" && isFinite(Q) && Math.floor(Q) === Q;
      }), Math.sign === void 0 && (Math.sign = function(Q) {
        return Q < 0 ? -1 : Q > 0 ? 1 : +Q;
      }), !("name" in Function.prototype) && Object.defineProperty(Function.prototype, "name", { get: function() {
        return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
      } }), Object.assign === void 0 && (Object.assign = function(Q) {
        if (Q == null)
          throw new TypeError("Cannot convert undefined or null to object");
        for (var te = Object(Q), ae = 1; ae < arguments.length; ae++) {
          var se = arguments[ae];
          if (se != null)
            for (var ue in se)
              Object.prototype.hasOwnProperty.call(se, ue) && (te[ue] = se[ue]);
        }
        return te;
      }), Object.assign(ce.prototype, { addEventListener: function(Q, te) {
        this._listeners === void 0 && (this._listeners = {});
        var ae = this._listeners;
        ae[Q] === void 0 && (ae[Q] = []), ae[Q].indexOf(te) === -1 && ae[Q].push(te);
      }, hasEventListener: function(Q, te) {
        if (this._listeners === void 0)
          return !1;
        var ae = this._listeners;
        return ae[Q] !== void 0 && ae[Q].indexOf(te) !== -1;
      }, removeEventListener: function(Q, te) {
        if (this._listeners !== void 0) {
          var ae = this._listeners[Q];
          if (ae !== void 0) {
            var se = ae.indexOf(te);
            se !== -1 && ae.splice(se, 1);
          }
        }
      }, dispatchEvent: function(Q) {
        if (this._listeners !== void 0) {
          var te = this._listeners[Q.type];
          if (te !== void 0) {
            Q.target = this;
            for (var ae = te.slice(0), se = 0, ue = ae.length; se < ue; se++)
              ae[se].call(this, Q);
          }
        }
      } });
      var he = "95", fe = { LEFT: 0, MIDDLE: 1, RIGHT: 2 }, xe = 0, Ae = 1, Ee = 2, ye = 3, ge = 0, me = 1, Ce = 0, Ie = 1, Oe = 2, He = 0, Ne = 1, Pe = 2, Fe = 1, Le = 2, We = 0, rt = 1, gt = 2, kt = 0, Ke = 1, ht = 2, Nt = 3, Ft = 4, At = 5, St = 100, Vt = 101, Xt = 102, Lt = 103, Zt = 104, Gt = 200, pt = 201, It = 202, qt = 203, De = 204, ar = 205, rr = 206, Ar = 207, vt = 208, Ut = 209, Xe = 210, tt = 0, et = 1, Et = 2, lt = 3, $e = 4, _e = 5, Be = 6, be = 7, ke = 0, Ve = 1, Je = 2, at = 0, Tt = 1, Dt = 2, zt = 3, Yt = 4, Ue = 300, Te = 301, Re = 302, it = 303, bt = 304, Qt = 305, jt = 306, yr = 307, gr = 1e3, br = 1001, mr = 1002, _r = 1003, en = 1004, Jn = 1005, an = 1006, qn = 1007, $n = 1008, Gn = 1009, Un = 1010, oi = 1011, Ai = 1012, Ji = 1013, Ri = 1014, Hn = 1015, Xn = 1016, Ln = 1017, si = 1018, gi = 1019, mi = 1020, yi = 1021, Rt = 1022, tr = 1023, Nr = 1024, on = 1025, xn = tr, Bn = 1026, En = 1027, pn = 33776, Sn = 33777, Vn = 33778, Zr = 33779, Xr = 35840, $r = 35841, xt = 35842, Br = 35843, Wt = 36196, Hr = 37808, qe = 37809, Ye = 37810, ot = 37811, ft = 37812, ut = 37813, Jt = 37814, cr = 37815, or = 37816, Tr = 37817, Vr = 37818, Rr = 37819, Lr = 37820, wn = 37821, Rn = 2200, Qn = 2201, Fr = 2202, qr = 2300, _n = 2301, fn = 2302, Kr = 2400, Mn = 2401, Yn = 2402, bn = 0, Dr = 1, gn = 2, Dn = 3e3, bi = 3001, na = 3007, Fa = 3002, pa = 3003, xi = 3004, ro = 3005, bs = 3006, Bs = 3200, Po = 3201, Ga = 0, Ua = 1, Cn = { DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: function() {
        for (var Q = [], te = 0; te < 256; te++)
          Q[te] = (te < 16 ? "0" : "") + te.toString(16);
        return function() {
          var ae = 4294967295 * Math.random() | 0, se = 4294967295 * Math.random() | 0, ue = 4294967295 * Math.random() | 0, le = 4294967295 * Math.random() | 0;
          return (Q[255 & ae] + Q[ae >> 8 & 255] + Q[ae >> 16 & 255] + Q[ae >> 24 & 255] + "-" + Q[255 & se] + Q[se >> 8 & 255] + "-" + Q[se >> 16 & 15 | 64] + Q[se >> 24 & 255] + "-" + Q[63 & ue | 128] + Q[ue >> 8 & 255] + "-" + Q[ue >> 16 & 255] + Q[ue >> 24 & 255] + Q[255 & le] + Q[le >> 8 & 255] + Q[le >> 16 & 255] + Q[le >> 24 & 255]).toUpperCase();
        };
      }(), clamp: function(Q, te, ae) {
        return Math.max(te, Math.min(ae, Q));
      }, euclideanModulo: function(Q, te) {
        return (Q % te + te) % te;
      }, mapLinear: function(Q, te, ae, se, ue) {
        return se + (Q - te) * (ue - se) / (ae - te);
      }, lerp: function(Q, te, ae) {
        return (1 - ae) * Q + ae * te;
      }, smoothstep: function(Q, te, ae) {
        return Q <= te ? 0 : Q >= ae ? 1 : (Q = (Q - te) / (ae - te)) * Q * (3 - 2 * Q);
      }, smootherstep: function(Q, te, ae) {
        return Q <= te ? 0 : Q >= ae ? 1 : (Q = (Q - te) / (ae - te)) * Q * Q * (Q * (6 * Q - 15) + 10);
      }, randInt: function(Q, te) {
        return Q + Math.floor(Math.random() * (te - Q + 1));
      }, randFloat: function(Q, te) {
        return Q + Math.random() * (te - Q);
      }, randFloatSpread: function(Q) {
        return Q * (0.5 - Math.random());
      }, degToRad: function(Q) {
        return Q * Cn.DEG2RAD;
      }, radToDeg: function(Q) {
        return Q * Cn.RAD2DEG;
      }, isPowerOfTwo: function(Q) {
        return (Q & Q - 1) == 0 && Q !== 0;
      }, ceilPowerOfTwo: function(Q) {
        return Math.pow(2, Math.ceil(Math.log(Q) / Math.LN2));
      }, floorPowerOfTwo: function(Q) {
        return Math.pow(2, Math.floor(Math.log(Q) / Math.LN2));
      } };
      function wr(Q, te) {
        this.x = Q || 0, this.y = te || 0;
      }
      function An() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
      }
      function ci(Q, te, ae, se) {
        this._x = Q || 0, this._y = te || 0, this._z = ae || 0, this._w = se !== void 0 ? se : 1;
      }
      function mt(Q, te, ae) {
        this.x = Q || 0, this.y = te || 0, this.z = ae || 0;
      }
      function zi() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
      }
      Object.defineProperties(wr.prototype, { width: { get: function() {
        return this.x;
      }, set: function(Q) {
        this.x = Q;
      } }, height: { get: function() {
        return this.y;
      }, set: function(Q) {
        this.y = Q;
      } } }), Object.assign(wr.prototype, { isVector2: !0, set: function(Q, te) {
        return this.x = Q, this.y = te, this;
      }, setScalar: function(Q) {
        return this.x = Q, this.y = Q, this;
      }, setX: function(Q) {
        return this.x = Q, this;
      }, setY: function(Q) {
        return this.y = Q, this;
      }, setComponent: function(Q, te) {
        switch (Q) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          default:
            throw new Error("index is out of range: " + Q);
        }
        return this;
      }, getComponent: function(Q) {
        switch (Q) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          default:
            throw new Error("index is out of range: " + Q);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y);
      }, copy: function(Q) {
        return this.x = Q.x, this.y = Q.y, this;
      }, add: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Q, te)) : (this.x += Q.x, this.y += Q.y, this);
      }, addScalar: function(Q) {
        return this.x += Q, this.y += Q, this;
      }, addVectors: function(Q, te) {
        return this.x = Q.x + te.x, this.y = Q.y + te.y, this;
      }, addScaledVector: function(Q, te) {
        return this.x += Q.x * te, this.y += Q.y * te, this;
      }, sub: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Q, te)) : (this.x -= Q.x, this.y -= Q.y, this);
      }, subScalar: function(Q) {
        return this.x -= Q, this.y -= Q, this;
      }, subVectors: function(Q, te) {
        return this.x = Q.x - te.x, this.y = Q.y - te.y, this;
      }, multiply: function(Q) {
        return this.x *= Q.x, this.y *= Q.y, this;
      }, multiplyScalar: function(Q) {
        return this.x *= Q, this.y *= Q, this;
      }, divide: function(Q) {
        return this.x /= Q.x, this.y /= Q.y, this;
      }, divideScalar: function(Q) {
        return this.multiplyScalar(1 / Q);
      }, applyMatrix3: function(Q) {
        var te = this.x, ae = this.y, se = Q.elements;
        return this.x = se[0] * te + se[3] * ae + se[6], this.y = se[1] * te + se[4] * ae + se[7], this;
      }, min: function(Q) {
        return this.x = Math.min(this.x, Q.x), this.y = Math.min(this.y, Q.y), this;
      }, max: function(Q) {
        return this.x = Math.max(this.x, Q.x), this.y = Math.max(this.y, Q.y), this;
      }, clamp: function(Q, te) {
        return this.x = Math.max(Q.x, Math.min(te.x, this.x)), this.y = Math.max(Q.y, Math.min(te.y, this.y)), this;
      }, clampScalar: function() {
        var Q = new wr(), te = new wr();
        return function(ae, se) {
          return Q.set(ae, ae), te.set(se, se), this.clamp(Q, te);
        };
      }(), clampLength: function(Q, te) {
        var ae = this.length();
        return this.divideScalar(ae || 1).multiplyScalar(Math.max(Q, Math.min(te, ae)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this;
      }, dot: function(Q) {
        return this.x * Q.x + this.y * Q.y;
      }, cross: function(Q) {
        return this.x * Q.y - this.y * Q.x;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, angle: function() {
        var Q = Math.atan2(this.y, this.x);
        return Q < 0 && (Q += 2 * Math.PI), Q;
      }, distanceTo: function(Q) {
        return Math.sqrt(this.distanceToSquared(Q));
      }, distanceToSquared: function(Q) {
        var te = this.x - Q.x, ae = this.y - Q.y;
        return te * te + ae * ae;
      }, manhattanDistanceTo: function(Q) {
        return Math.abs(this.x - Q.x) + Math.abs(this.y - Q.y);
      }, setLength: function(Q) {
        return this.normalize().multiplyScalar(Q);
      }, lerp: function(Q, te) {
        return this.x += (Q.x - this.x) * te, this.y += (Q.y - this.y) * te, this;
      }, lerpVectors: function(Q, te, ae) {
        return this.subVectors(te, Q).multiplyScalar(ae).add(Q);
      }, equals: function(Q) {
        return Q.x === this.x && Q.y === this.y;
      }, fromArray: function(Q, te) {
        return te === void 0 && (te = 0), this.x = Q[te], this.y = Q[te + 1], this;
      }, toArray: function(Q, te) {
        return Q === void 0 && (Q = []), te === void 0 && (te = 0), Q[te] = this.x, Q[te + 1] = this.y, Q;
      }, fromBufferAttribute: function(Q, te, ae) {
        return ae !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = Q.getX(te), this.y = Q.getY(te), this;
      }, rotateAround: function(Q, te) {
        var ae = Math.cos(te), se = Math.sin(te), ue = this.x - Q.x, le = this.y - Q.y;
        return this.x = ue * ae - le * se + Q.x, this.y = ue * se + le * ae + Q.y, this;
      } }), Object.assign(An.prototype, { isMatrix4: !0, set: function(Q, te, ae, se, ue, le, de, pe, ve, we, Me, Qe, Se, Ge, ze, Ze) {
        var nt = this.elements;
        return nt[0] = Q, nt[4] = te, nt[8] = ae, nt[12] = se, nt[1] = ue, nt[5] = le, nt[9] = de, nt[13] = pe, nt[2] = ve, nt[6] = we, nt[10] = Me, nt[14] = Qe, nt[3] = Se, nt[7] = Ge, nt[11] = ze, nt[15] = Ze, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, clone: function() {
        return new An().fromArray(this.elements);
      }, copy: function(Q) {
        var te = this.elements, ae = Q.elements;
        return te[0] = ae[0], te[1] = ae[1], te[2] = ae[2], te[3] = ae[3], te[4] = ae[4], te[5] = ae[5], te[6] = ae[6], te[7] = ae[7], te[8] = ae[8], te[9] = ae[9], te[10] = ae[10], te[11] = ae[11], te[12] = ae[12], te[13] = ae[13], te[14] = ae[14], te[15] = ae[15], this;
      }, copyPosition: function(Q) {
        var te = this.elements, ae = Q.elements;
        return te[12] = ae[12], te[13] = ae[13], te[14] = ae[14], this;
      }, extractBasis: function(Q, te, ae) {
        return Q.setFromMatrixColumn(this, 0), te.setFromMatrixColumn(this, 1), ae.setFromMatrixColumn(this, 2), this;
      }, makeBasis: function(Q, te, ae) {
        return this.set(Q.x, te.x, ae.x, 0, Q.y, te.y, ae.y, 0, Q.z, te.z, ae.z, 0, 0, 0, 0, 1), this;
      }, extractRotation: function() {
        var Q = new mt();
        return function(te) {
          var ae = this.elements, se = te.elements, ue = 1 / Q.setFromMatrixColumn(te, 0).length(), le = 1 / Q.setFromMatrixColumn(te, 1).length(), de = 1 / Q.setFromMatrixColumn(te, 2).length();
          return ae[0] = se[0] * ue, ae[1] = se[1] * ue, ae[2] = se[2] * ue, ae[3] = 0, ae[4] = se[4] * le, ae[5] = se[5] * le, ae[6] = se[6] * le, ae[7] = 0, ae[8] = se[8] * de, ae[9] = se[9] * de, ae[10] = se[10] * de, ae[11] = 0, ae[12] = 0, ae[13] = 0, ae[14] = 0, ae[15] = 1, this;
        };
      }(), makeRotationFromEuler: function(Q) {
        Q && Q.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var te = this.elements, ae = Q.x, se = Q.y, ue = Q.z, le = Math.cos(ae), de = Math.sin(ae), pe = Math.cos(se), ve = Math.sin(se), we = Math.cos(ue), Me = Math.sin(ue);
        if (Q.order === "XYZ") {
          var Qe = le * we, Se = le * Me, Ge = de * we, ze = de * Me;
          te[0] = pe * we, te[4] = -pe * Me, te[8] = ve, te[1] = Se + Ge * ve, te[5] = Qe - ze * ve, te[9] = -de * pe, te[2] = ze - Qe * ve, te[6] = Ge + Se * ve, te[10] = le * pe;
        } else if (Q.order === "YXZ") {
          var Ze = pe * we, nt = pe * Me, ct = ve * we, yt = ve * Me;
          te[0] = Ze + yt * de, te[4] = ct * de - nt, te[8] = le * ve, te[1] = le * Me, te[5] = le * we, te[9] = -de, te[2] = nt * de - ct, te[6] = yt + Ze * de, te[10] = le * pe;
        } else if (Q.order === "ZXY")
          Ze = pe * we, nt = pe * Me, ct = ve * we, yt = ve * Me, te[0] = Ze - yt * de, te[4] = -le * Me, te[8] = ct + nt * de, te[1] = nt + ct * de, te[5] = le * we, te[9] = yt - Ze * de, te[2] = -le * ve, te[6] = de, te[10] = le * pe;
        else if (Q.order === "ZYX")
          Qe = le * we, Se = le * Me, Ge = de * we, ze = de * Me, te[0] = pe * we, te[4] = Ge * ve - Se, te[8] = Qe * ve + ze, te[1] = pe * Me, te[5] = ze * ve + Qe, te[9] = Se * ve - Ge, te[2] = -ve, te[6] = de * pe, te[10] = le * pe;
        else if (Q.order === "YZX") {
          var st = le * pe, Mt = le * ve, Ot = de * pe, dt = de * ve;
          te[0] = pe * we, te[4] = dt - st * Me, te[8] = Ot * Me + Mt, te[1] = Me, te[5] = le * we, te[9] = -de * we, te[2] = -ve * we, te[6] = Mt * Me + Ot, te[10] = st - dt * Me;
        } else
          Q.order === "XZY" && (st = le * pe, Mt = le * ve, Ot = de * pe, dt = de * ve, te[0] = pe * we, te[4] = -Me, te[8] = ve * we, te[1] = st * Me + dt, te[5] = le * we, te[9] = Mt * Me - Ot, te[2] = Ot * Me - Mt, te[6] = de * we, te[10] = dt * Me + st);
        return te[3] = 0, te[7] = 0, te[11] = 0, te[12] = 0, te[13] = 0, te[14] = 0, te[15] = 1, this;
      }, makeRotationFromQuaternion: function() {
        var Q = new mt(0, 0, 0), te = new mt(1, 1, 1);
        return function(ae) {
          return this.compose(Q, ae, te);
        };
      }(), lookAt: function() {
        var Q = new mt(), te = new mt(), ae = new mt();
        return function(se, ue, le) {
          var de = this.elements;
          return ae.subVectors(se, ue), ae.lengthSq() === 0 && (ae.z = 1), ae.normalize(), Q.crossVectors(le, ae), Q.lengthSq() === 0 && (Math.abs(le.z) === 1 ? ae.x += 1e-4 : ae.z += 1e-4, ae.normalize(), Q.crossVectors(le, ae)), Q.normalize(), te.crossVectors(ae, Q), de[0] = Q.x, de[4] = te.x, de[8] = ae.x, de[1] = Q.y, de[5] = te.y, de[9] = ae.y, de[2] = Q.z, de[6] = te.z, de[10] = ae.z, this;
        };
      }(), multiply: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(Q, te)) : this.multiplyMatrices(this, Q);
      }, premultiply: function(Q) {
        return this.multiplyMatrices(Q, this);
      }, multiplyMatrices: function(Q, te) {
        var ae = Q.elements, se = te.elements, ue = this.elements, le = ae[0], de = ae[4], pe = ae[8], ve = ae[12], we = ae[1], Me = ae[5], Qe = ae[9], Se = ae[13], Ge = ae[2], ze = ae[6], Ze = ae[10], nt = ae[14], ct = ae[3], yt = ae[7], st = ae[11], Mt = ae[15], Ot = se[0], dt = se[4], wt = se[8], $t = se[12], Pt = se[1], er = se[5], Ht = se[9], ir = se[13], dr = se[2], vr = se[6], pr = se[10], Or = se[14], Mr = se[3], hr = se[7], Cr = se[11], lr = se[15];
        return ue[0] = le * Ot + de * Pt + pe * dr + ve * Mr, ue[4] = le * dt + de * er + pe * vr + ve * hr, ue[8] = le * wt + de * Ht + pe * pr + ve * Cr, ue[12] = le * $t + de * ir + pe * Or + ve * lr, ue[1] = we * Ot + Me * Pt + Qe * dr + Se * Mr, ue[5] = we * dt + Me * er + Qe * vr + Se * hr, ue[9] = we * wt + Me * Ht + Qe * pr + Se * Cr, ue[13] = we * $t + Me * ir + Qe * Or + Se * lr, ue[2] = Ge * Ot + ze * Pt + Ze * dr + nt * Mr, ue[6] = Ge * dt + ze * er + Ze * vr + nt * hr, ue[10] = Ge * wt + ze * Ht + Ze * pr + nt * Cr, ue[14] = Ge * $t + ze * ir + Ze * Or + nt * lr, ue[3] = ct * Ot + yt * Pt + st * dr + Mt * Mr, ue[7] = ct * dt + yt * er + st * vr + Mt * hr, ue[11] = ct * wt + yt * Ht + st * pr + Mt * Cr, ue[15] = ct * $t + yt * ir + st * Or + Mt * lr, this;
      }, multiplyScalar: function(Q) {
        var te = this.elements;
        return te[0] *= Q, te[4] *= Q, te[8] *= Q, te[12] *= Q, te[1] *= Q, te[5] *= Q, te[9] *= Q, te[13] *= Q, te[2] *= Q, te[6] *= Q, te[10] *= Q, te[14] *= Q, te[3] *= Q, te[7] *= Q, te[11] *= Q, te[15] *= Q, this;
      }, applyToBufferAttribute: function() {
        var Q = new mt();
        return function(te) {
          for (var ae = 0, se = te.count; ae < se; ae++)
            Q.x = te.getX(ae), Q.y = te.getY(ae), Q.z = te.getZ(ae), Q.applyMatrix4(this), te.setXYZ(ae, Q.x, Q.y, Q.z);
          return te;
        };
      }(), determinant: function() {
        var Q = this.elements, te = Q[0], ae = Q[4], se = Q[8], ue = Q[12], le = Q[1], de = Q[5], pe = Q[9], ve = Q[13], we = Q[2], Me = Q[6], Qe = Q[10], Se = Q[14];
        return Q[3] * (+ue * pe * Me - se * ve * Me - ue * de * Qe + ae * ve * Qe + se * de * Se - ae * pe * Se) + Q[7] * (+te * pe * Se - te * ve * Qe + ue * le * Qe - se * le * Se + se * ve * we - ue * pe * we) + Q[11] * (+te * ve * Me - te * de * Se - ue * le * Me + ae * le * Se + ue * de * we - ae * ve * we) + Q[15] * (-se * de * we - te * pe * Me + te * de * Qe + se * le * Me - ae * le * Qe + ae * pe * we);
      }, transpose: function() {
        var Q, te = this.elements;
        return Q = te[1], te[1] = te[4], te[4] = Q, Q = te[2], te[2] = te[8], te[8] = Q, Q = te[6], te[6] = te[9], te[9] = Q, Q = te[3], te[3] = te[12], te[12] = Q, Q = te[7], te[7] = te[13], te[13] = Q, Q = te[11], te[11] = te[14], te[14] = Q, this;
      }, setPosition: function(Q) {
        var te = this.elements;
        return te[12] = Q.x, te[13] = Q.y, te[14] = Q.z, this;
      }, getInverse: function(Q, te) {
        var ae = this.elements, se = Q.elements, ue = se[0], le = se[1], de = se[2], pe = se[3], ve = se[4], we = se[5], Me = se[6], Qe = se[7], Se = se[8], Ge = se[9], ze = se[10], Ze = se[11], nt = se[12], ct = se[13], yt = se[14], st = se[15], Mt = Ge * yt * Qe - ct * ze * Qe + ct * Me * Ze - we * yt * Ze - Ge * Me * st + we * ze * st, Ot = nt * ze * Qe - Se * yt * Qe - nt * Me * Ze + ve * yt * Ze + Se * Me * st - ve * ze * st, dt = Se * ct * Qe - nt * Ge * Qe + nt * we * Ze - ve * ct * Ze - Se * we * st + ve * Ge * st, wt = nt * Ge * Me - Se * ct * Me - nt * we * ze + ve * ct * ze + Se * we * yt - ve * Ge * yt, $t = ue * Mt + le * Ot + de * dt + pe * wt;
        if ($t === 0) {
          var Pt = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
          if (te === !0)
            throw new Error(Pt);
          return console.warn(Pt), this.identity();
        }
        var er = 1 / $t;
        return ae[0] = Mt * er, ae[1] = (ct * ze * pe - Ge * yt * pe - ct * de * Ze + le * yt * Ze + Ge * de * st - le * ze * st) * er, ae[2] = (we * yt * pe - ct * Me * pe + ct * de * Qe - le * yt * Qe - we * de * st + le * Me * st) * er, ae[3] = (Ge * Me * pe - we * ze * pe - Ge * de * Qe + le * ze * Qe + we * de * Ze - le * Me * Ze) * er, ae[4] = Ot * er, ae[5] = (Se * yt * pe - nt * ze * pe + nt * de * Ze - ue * yt * Ze - Se * de * st + ue * ze * st) * er, ae[6] = (nt * Me * pe - ve * yt * pe - nt * de * Qe + ue * yt * Qe + ve * de * st - ue * Me * st) * er, ae[7] = (ve * ze * pe - Se * Me * pe + Se * de * Qe - ue * ze * Qe - ve * de * Ze + ue * Me * Ze) * er, ae[8] = dt * er, ae[9] = (nt * Ge * pe - Se * ct * pe - nt * le * Ze + ue * ct * Ze + Se * le * st - ue * Ge * st) * er, ae[10] = (ve * ct * pe - nt * we * pe + nt * le * Qe - ue * ct * Qe - ve * le * st + ue * we * st) * er, ae[11] = (Se * we * pe - ve * Ge * pe - Se * le * Qe + ue * Ge * Qe + ve * le * Ze - ue * we * Ze) * er, ae[12] = wt * er, ae[13] = (Se * ct * de - nt * Ge * de + nt * le * ze - ue * ct * ze - Se * le * yt + ue * Ge * yt) * er, ae[14] = (nt * we * de - ve * ct * de - nt * le * Me + ue * ct * Me + ve * le * yt - ue * we * yt) * er, ae[15] = (ve * Ge * de - Se * we * de + Se * le * Me - ue * Ge * Me - ve * le * ze + ue * we * ze) * er, this;
      }, scale: function(Q) {
        var te = this.elements, ae = Q.x, se = Q.y, ue = Q.z;
        return te[0] *= ae, te[4] *= se, te[8] *= ue, te[1] *= ae, te[5] *= se, te[9] *= ue, te[2] *= ae, te[6] *= se, te[10] *= ue, te[3] *= ae, te[7] *= se, te[11] *= ue, this;
      }, getMaxScaleOnAxis: function() {
        var Q = this.elements, te = Q[0] * Q[0] + Q[1] * Q[1] + Q[2] * Q[2], ae = Q[4] * Q[4] + Q[5] * Q[5] + Q[6] * Q[6], se = Q[8] * Q[8] + Q[9] * Q[9] + Q[10] * Q[10];
        return Math.sqrt(Math.max(te, ae, se));
      }, makeTranslation: function(Q, te, ae) {
        return this.set(1, 0, 0, Q, 0, 1, 0, te, 0, 0, 1, ae, 0, 0, 0, 1), this;
      }, makeRotationX: function(Q) {
        var te = Math.cos(Q), ae = Math.sin(Q);
        return this.set(1, 0, 0, 0, 0, te, -ae, 0, 0, ae, te, 0, 0, 0, 0, 1), this;
      }, makeRotationY: function(Q) {
        var te = Math.cos(Q), ae = Math.sin(Q);
        return this.set(te, 0, ae, 0, 0, 1, 0, 0, -ae, 0, te, 0, 0, 0, 0, 1), this;
      }, makeRotationZ: function(Q) {
        var te = Math.cos(Q), ae = Math.sin(Q);
        return this.set(te, -ae, 0, 0, ae, te, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, makeRotationAxis: function(Q, te) {
        var ae = Math.cos(te), se = Math.sin(te), ue = 1 - ae, le = Q.x, de = Q.y, pe = Q.z, ve = ue * le, we = ue * de;
        return this.set(ve * le + ae, ve * de - se * pe, ve * pe + se * de, 0, ve * de + se * pe, we * de + ae, we * pe - se * le, 0, ve * pe - se * de, we * pe + se * le, ue * pe * pe + ae, 0, 0, 0, 0, 1), this;
      }, makeScale: function(Q, te, ae) {
        return this.set(Q, 0, 0, 0, 0, te, 0, 0, 0, 0, ae, 0, 0, 0, 0, 1), this;
      }, makeShear: function(Q, te, ae) {
        return this.set(1, te, ae, 0, Q, 1, ae, 0, Q, te, 1, 0, 0, 0, 0, 1), this;
      }, compose: function(Q, te, ae) {
        var se = this.elements, ue = te._x, le = te._y, de = te._z, pe = te._w, ve = ue + ue, we = le + le, Me = de + de, Qe = ue * ve, Se = ue * we, Ge = ue * Me, ze = le * we, Ze = le * Me, nt = de * Me, ct = pe * ve, yt = pe * we, st = pe * Me, Mt = ae.x, Ot = ae.y, dt = ae.z;
        return se[0] = (1 - (ze + nt)) * Mt, se[1] = (Se + st) * Mt, se[2] = (Ge - yt) * Mt, se[3] = 0, se[4] = (Se - st) * Ot, se[5] = (1 - (Qe + nt)) * Ot, se[6] = (Ze + ct) * Ot, se[7] = 0, se[8] = (Ge + yt) * dt, se[9] = (Ze - ct) * dt, se[10] = (1 - (Qe + ze)) * dt, se[11] = 0, se[12] = Q.x, se[13] = Q.y, se[14] = Q.z, se[15] = 1, this;
      }, decompose: function() {
        var Q = new mt(), te = new An();
        return function(ae, se, ue) {
          var le = this.elements, de = Q.set(le[0], le[1], le[2]).length(), pe = Q.set(le[4], le[5], le[6]).length(), ve = Q.set(le[8], le[9], le[10]).length();
          this.determinant() < 0 && (de = -de), ae.x = le[12], ae.y = le[13], ae.z = le[14], te.copy(this);
          var we = 1 / de, Me = 1 / pe, Qe = 1 / ve;
          return te.elements[0] *= we, te.elements[1] *= we, te.elements[2] *= we, te.elements[4] *= Me, te.elements[5] *= Me, te.elements[6] *= Me, te.elements[8] *= Qe, te.elements[9] *= Qe, te.elements[10] *= Qe, se.setFromRotationMatrix(te), ue.x = de, ue.y = pe, ue.z = ve, this;
        };
      }(), makePerspective: function(Q, te, ae, se, ue, le) {
        le === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        var de = this.elements, pe = 2 * ue / (te - Q), ve = 2 * ue / (ae - se), we = (te + Q) / (te - Q), Me = (ae + se) / (ae - se), Qe = -(le + ue) / (le - ue), Se = -2 * le * ue / (le - ue);
        return de[0] = pe, de[4] = 0, de[8] = we, de[12] = 0, de[1] = 0, de[5] = ve, de[9] = Me, de[13] = 0, de[2] = 0, de[6] = 0, de[10] = Qe, de[14] = Se, de[3] = 0, de[7] = 0, de[11] = -1, de[15] = 0, this;
      }, makeOrthographic: function(Q, te, ae, se, ue, le) {
        var de = this.elements, pe = 1 / (te - Q), ve = 1 / (ae - se), we = 1 / (le - ue), Me = (te + Q) * pe, Qe = (ae + se) * ve, Se = (le + ue) * we;
        return de[0] = 2 * pe, de[4] = 0, de[8] = 0, de[12] = -Me, de[1] = 0, de[5] = 2 * ve, de[9] = 0, de[13] = -Qe, de[2] = 0, de[6] = 0, de[10] = -2 * we, de[14] = -Se, de[3] = 0, de[7] = 0, de[11] = 0, de[15] = 1, this;
      }, equals: function(Q) {
        for (var te = this.elements, ae = Q.elements, se = 0; se < 16; se++)
          if (te[se] !== ae[se])
            return !1;
        return !0;
      }, fromArray: function(Q, te) {
        te === void 0 && (te = 0);
        for (var ae = 0; ae < 16; ae++)
          this.elements[ae] = Q[ae + te];
        return this;
      }, toArray: function(Q, te) {
        Q === void 0 && (Q = []), te === void 0 && (te = 0);
        var ae = this.elements;
        return Q[te] = ae[0], Q[te + 1] = ae[1], Q[te + 2] = ae[2], Q[te + 3] = ae[3], Q[te + 4] = ae[4], Q[te + 5] = ae[5], Q[te + 6] = ae[6], Q[te + 7] = ae[7], Q[te + 8] = ae[8], Q[te + 9] = ae[9], Q[te + 10] = ae[10], Q[te + 11] = ae[11], Q[te + 12] = ae[12], Q[te + 13] = ae[13], Q[te + 14] = ae[14], Q[te + 15] = ae[15], Q;
      } }), Object.assign(ci, { slerp: function(Q, te, ae, se) {
        return ae.copy(Q).slerp(te, se);
      }, slerpFlat: function(Q, te, ae, se, ue, le, de) {
        var pe = ae[se + 0], ve = ae[se + 1], we = ae[se + 2], Me = ae[se + 3], Qe = ue[le + 0], Se = ue[le + 1], Ge = ue[le + 2], ze = ue[le + 3];
        if (Me !== ze || pe !== Qe || ve !== Se || we !== Ge) {
          var Ze = 1 - de, nt = pe * Qe + ve * Se + we * Ge + Me * ze, ct = nt >= 0 ? 1 : -1, yt = 1 - nt * nt;
          if (yt > Number.EPSILON) {
            var st = Math.sqrt(yt), Mt = Math.atan2(st, nt * ct);
            Ze = Math.sin(Ze * Mt) / st, de = Math.sin(de * Mt) / st;
          }
          var Ot = de * ct;
          if (pe = pe * Ze + Qe * Ot, ve = ve * Ze + Se * Ot, we = we * Ze + Ge * Ot, Me = Me * Ze + ze * Ot, Ze === 1 - de) {
            var dt = 1 / Math.sqrt(pe * pe + ve * ve + we * we + Me * Me);
            pe *= dt, ve *= dt, we *= dt, Me *= dt;
          }
        }
        Q[te] = pe, Q[te + 1] = ve, Q[te + 2] = we, Q[te + 3] = Me;
      } }), Object.defineProperties(ci.prototype, { x: { get: function() {
        return this._x;
      }, set: function(Q) {
        this._x = Q, this.onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(Q) {
        this._y = Q, this.onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(Q) {
        this._z = Q, this.onChangeCallback();
      } }, w: { get: function() {
        return this._w;
      }, set: function(Q) {
        this._w = Q, this.onChangeCallback();
      } } }), Object.assign(ci.prototype, { set: function(Q, te, ae, se) {
        return this._x = Q, this._y = te, this._z = ae, this._w = se, this.onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._w);
      }, copy: function(Q) {
        return this._x = Q.x, this._y = Q.y, this._z = Q.z, this._w = Q.w, this.onChangeCallback(), this;
      }, setFromEuler: function(Q, te) {
        if (!Q || !Q.isEuler)
          throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        var ae = Q._x, se = Q._y, ue = Q._z, le = Q.order, de = Math.cos, pe = Math.sin, ve = de(ae / 2), we = de(se / 2), Me = de(ue / 2), Qe = pe(ae / 2), Se = pe(se / 2), Ge = pe(ue / 2);
        return le === "XYZ" ? (this._x = Qe * we * Me + ve * Se * Ge, this._y = ve * Se * Me - Qe * we * Ge, this._z = ve * we * Ge + Qe * Se * Me, this._w = ve * we * Me - Qe * Se * Ge) : le === "YXZ" ? (this._x = Qe * we * Me + ve * Se * Ge, this._y = ve * Se * Me - Qe * we * Ge, this._z = ve * we * Ge - Qe * Se * Me, this._w = ve * we * Me + Qe * Se * Ge) : le === "ZXY" ? (this._x = Qe * we * Me - ve * Se * Ge, this._y = ve * Se * Me + Qe * we * Ge, this._z = ve * we * Ge + Qe * Se * Me, this._w = ve * we * Me - Qe * Se * Ge) : le === "ZYX" ? (this._x = Qe * we * Me - ve * Se * Ge, this._y = ve * Se * Me + Qe * we * Ge, this._z = ve * we * Ge - Qe * Se * Me, this._w = ve * we * Me + Qe * Se * Ge) : le === "YZX" ? (this._x = Qe * we * Me + ve * Se * Ge, this._y = ve * Se * Me + Qe * we * Ge, this._z = ve * we * Ge - Qe * Se * Me, this._w = ve * we * Me - Qe * Se * Ge) : le === "XZY" && (this._x = Qe * we * Me - ve * Se * Ge, this._y = ve * Se * Me - Qe * we * Ge, this._z = ve * we * Ge + Qe * Se * Me, this._w = ve * we * Me + Qe * Se * Ge), te !== !1 && this.onChangeCallback(), this;
      }, setFromAxisAngle: function(Q, te) {
        var ae = te / 2, se = Math.sin(ae);
        return this._x = Q.x * se, this._y = Q.y * se, this._z = Q.z * se, this._w = Math.cos(ae), this.onChangeCallback(), this;
      }, setFromRotationMatrix: function(Q) {
        var te, ae = Q.elements, se = ae[0], ue = ae[4], le = ae[8], de = ae[1], pe = ae[5], ve = ae[9], we = ae[2], Me = ae[6], Qe = ae[10], Se = se + pe + Qe;
        return Se > 0 ? (te = 0.5 / Math.sqrt(Se + 1), this._w = 0.25 / te, this._x = (Me - ve) * te, this._y = (le - we) * te, this._z = (de - ue) * te) : se > pe && se > Qe ? (te = 2 * Math.sqrt(1 + se - pe - Qe), this._w = (Me - ve) / te, this._x = 0.25 * te, this._y = (ue + de) / te, this._z = (le + we) / te) : pe > Qe ? (te = 2 * Math.sqrt(1 + pe - se - Qe), this._w = (le - we) / te, this._x = (ue + de) / te, this._y = 0.25 * te, this._z = (ve + Me) / te) : (te = 2 * Math.sqrt(1 + Qe - se - pe), this._w = (de - ue) / te, this._x = (le + we) / te, this._y = (ve + Me) / te, this._z = 0.25 * te), this.onChangeCallback(), this;
      }, setFromUnitVectors: function() {
        var Q, te = new mt();
        return function(ae, se) {
          return te === void 0 && (te = new mt()), (Q = ae.dot(se) + 1) < 1e-6 ? (Q = 0, Math.abs(ae.x) > Math.abs(ae.z) ? te.set(-ae.y, ae.x, 0) : te.set(0, -ae.z, ae.y)) : te.crossVectors(ae, se), this._x = te.x, this._y = te.y, this._z = te.z, this._w = Q, this.normalize();
        };
      }(), angleTo: function(Q) {
        return 2 * Math.acos(Math.abs(Cn.clamp(this.dot(Q), -1, 1)));
      }, rotateTowards: function(Q, te) {
        var ae = this.angleTo(Q);
        if (ae === 0)
          return this;
        var se = Math.min(1, te / ae);
        return this.slerp(Q, se), this;
      }, inverse: function() {
        return this.conjugate();
      }, conjugate: function() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this;
      }, dot: function(Q) {
        return this._x * Q._x + this._y * Q._y + this._z * Q._z + this._w * Q._w;
      }, lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
      }, length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
      }, normalize: function() {
        var Q = this.length();
        return Q === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (Q = 1 / Q, this._x = this._x * Q, this._y = this._y * Q, this._z = this._z * Q, this._w = this._w * Q), this.onChangeCallback(), this;
      }, multiply: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(Q, te)) : this.multiplyQuaternions(this, Q);
      }, premultiply: function(Q) {
        return this.multiplyQuaternions(Q, this);
      }, multiplyQuaternions: function(Q, te) {
        var ae = Q._x, se = Q._y, ue = Q._z, le = Q._w, de = te._x, pe = te._y, ve = te._z, we = te._w;
        return this._x = ae * we + le * de + se * ve - ue * pe, this._y = se * we + le * pe + ue * de - ae * ve, this._z = ue * we + le * ve + ae * pe - se * de, this._w = le * we - ae * de - se * pe - ue * ve, this.onChangeCallback(), this;
      }, slerp: function(Q, te) {
        if (te === 0)
          return this;
        if (te === 1)
          return this.copy(Q);
        var ae = this._x, se = this._y, ue = this._z, le = this._w, de = le * Q._w + ae * Q._x + se * Q._y + ue * Q._z;
        if (de < 0 ? (this._w = -Q._w, this._x = -Q._x, this._y = -Q._y, this._z = -Q._z, de = -de) : this.copy(Q), de >= 1)
          return this._w = le, this._x = ae, this._y = se, this._z = ue, this;
        var pe = 1 - de * de;
        if (pe <= Number.EPSILON) {
          var ve = 1 - te;
          return this._w = ve * le + te * this._w, this._x = ve * ae + te * this._x, this._y = ve * se + te * this._y, this._z = ve * ue + te * this._z, this.normalize();
        }
        var we = Math.sqrt(pe), Me = Math.atan2(we, de), Qe = Math.sin((1 - te) * Me) / we, Se = Math.sin(te * Me) / we;
        return this._w = le * Qe + this._w * Se, this._x = ae * Qe + this._x * Se, this._y = se * Qe + this._y * Se, this._z = ue * Qe + this._z * Se, this.onChangeCallback(), this;
      }, equals: function(Q) {
        return Q._x === this._x && Q._y === this._y && Q._z === this._z && Q._w === this._w;
      }, fromArray: function(Q, te) {
        return te === void 0 && (te = 0), this._x = Q[te], this._y = Q[te + 1], this._z = Q[te + 2], this._w = Q[te + 3], this.onChangeCallback(), this;
      }, toArray: function(Q, te) {
        return Q === void 0 && (Q = []), te === void 0 && (te = 0), Q[te] = this._x, Q[te + 1] = this._y, Q[te + 2] = this._z, Q[te + 3] = this._w, Q;
      }, onChange: function(Q) {
        return this.onChangeCallback = Q, this;
      }, onChangeCallback: function() {
      } }), Object.assign(mt.prototype, { isVector3: !0, set: function(Q, te, ae) {
        return this.x = Q, this.y = te, this.z = ae, this;
      }, setScalar: function(Q) {
        return this.x = Q, this.y = Q, this.z = Q, this;
      }, setX: function(Q) {
        return this.x = Q, this;
      }, setY: function(Q) {
        return this.y = Q, this;
      }, setZ: function(Q) {
        return this.z = Q, this;
      }, setComponent: function(Q, te) {
        switch (Q) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          case 2:
            this.z = te;
            break;
          default:
            throw new Error("index is out of range: " + Q);
        }
        return this;
      }, getComponent: function(Q) {
        switch (Q) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          default:
            throw new Error("index is out of range: " + Q);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z);
      }, copy: function(Q) {
        return this.x = Q.x, this.y = Q.y, this.z = Q.z, this;
      }, add: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Q, te)) : (this.x += Q.x, this.y += Q.y, this.z += Q.z, this);
      }, addScalar: function(Q) {
        return this.x += Q, this.y += Q, this.z += Q, this;
      }, addVectors: function(Q, te) {
        return this.x = Q.x + te.x, this.y = Q.y + te.y, this.z = Q.z + te.z, this;
      }, addScaledVector: function(Q, te) {
        return this.x += Q.x * te, this.y += Q.y * te, this.z += Q.z * te, this;
      }, sub: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Q, te)) : (this.x -= Q.x, this.y -= Q.y, this.z -= Q.z, this);
      }, subScalar: function(Q) {
        return this.x -= Q, this.y -= Q, this.z -= Q, this;
      }, subVectors: function(Q, te) {
        return this.x = Q.x - te.x, this.y = Q.y - te.y, this.z = Q.z - te.z, this;
      }, multiply: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(Q, te)) : (this.x *= Q.x, this.y *= Q.y, this.z *= Q.z, this);
      }, multiplyScalar: function(Q) {
        return this.x *= Q, this.y *= Q, this.z *= Q, this;
      }, multiplyVectors: function(Q, te) {
        return this.x = Q.x * te.x, this.y = Q.y * te.y, this.z = Q.z * te.z, this;
      }, applyEuler: function() {
        var Q = new ci();
        return function(te) {
          return te && te.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(Q.setFromEuler(te));
        };
      }(), applyAxisAngle: function() {
        var Q = new ci();
        return function(te, ae) {
          return this.applyQuaternion(Q.setFromAxisAngle(te, ae));
        };
      }(), applyMatrix3: function(Q) {
        var te = this.x, ae = this.y, se = this.z, ue = Q.elements;
        return this.x = ue[0] * te + ue[3] * ae + ue[6] * se, this.y = ue[1] * te + ue[4] * ae + ue[7] * se, this.z = ue[2] * te + ue[5] * ae + ue[8] * se, this;
      }, applyMatrix4: function(Q) {
        var te = this.x, ae = this.y, se = this.z, ue = Q.elements, le = 1 / (ue[3] * te + ue[7] * ae + ue[11] * se + ue[15]);
        return this.x = (ue[0] * te + ue[4] * ae + ue[8] * se + ue[12]) * le, this.y = (ue[1] * te + ue[5] * ae + ue[9] * se + ue[13]) * le, this.z = (ue[2] * te + ue[6] * ae + ue[10] * se + ue[14]) * le, this;
      }, applyQuaternion: function(Q) {
        var te = this.x, ae = this.y, se = this.z, ue = Q.x, le = Q.y, de = Q.z, pe = Q.w, ve = pe * te + le * se - de * ae, we = pe * ae + de * te - ue * se, Me = pe * se + ue * ae - le * te, Qe = -ue * te - le * ae - de * se;
        return this.x = ve * pe + Qe * -ue + we * -de - Me * -le, this.y = we * pe + Qe * -le + Me * -ue - ve * -de, this.z = Me * pe + Qe * -de + ve * -le - we * -ue, this;
      }, project: function() {
        var Q = new An();
        return function(te) {
          return Q.multiplyMatrices(te.projectionMatrix, Q.getInverse(te.matrixWorld)), this.applyMatrix4(Q);
        };
      }(), unproject: function() {
        var Q = new An();
        return function(te) {
          return Q.multiplyMatrices(te.matrixWorld, Q.getInverse(te.projectionMatrix)), this.applyMatrix4(Q);
        };
      }(), transformDirection: function(Q) {
        var te = this.x, ae = this.y, se = this.z, ue = Q.elements;
        return this.x = ue[0] * te + ue[4] * ae + ue[8] * se, this.y = ue[1] * te + ue[5] * ae + ue[9] * se, this.z = ue[2] * te + ue[6] * ae + ue[10] * se, this.normalize();
      }, divide: function(Q) {
        return this.x /= Q.x, this.y /= Q.y, this.z /= Q.z, this;
      }, divideScalar: function(Q) {
        return this.multiplyScalar(1 / Q);
      }, min: function(Q) {
        return this.x = Math.min(this.x, Q.x), this.y = Math.min(this.y, Q.y), this.z = Math.min(this.z, Q.z), this;
      }, max: function(Q) {
        return this.x = Math.max(this.x, Q.x), this.y = Math.max(this.y, Q.y), this.z = Math.max(this.z, Q.z), this;
      }, clamp: function(Q, te) {
        return this.x = Math.max(Q.x, Math.min(te.x, this.x)), this.y = Math.max(Q.y, Math.min(te.y, this.y)), this.z = Math.max(Q.z, Math.min(te.z, this.z)), this;
      }, clampScalar: function() {
        var Q = new mt(), te = new mt();
        return function(ae, se) {
          return Q.set(ae, ae, ae), te.set(se, se, se), this.clamp(Q, te);
        };
      }(), clampLength: function(Q, te) {
        var ae = this.length();
        return this.divideScalar(ae || 1).multiplyScalar(Math.max(Q, Math.min(te, ae)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
      }, dot: function(Q) {
        return this.x * Q.x + this.y * Q.y + this.z * Q.z;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(Q) {
        return this.normalize().multiplyScalar(Q);
      }, lerp: function(Q, te) {
        return this.x += (Q.x - this.x) * te, this.y += (Q.y - this.y) * te, this.z += (Q.z - this.z) * te, this;
      }, lerpVectors: function(Q, te, ae) {
        return this.subVectors(te, Q).multiplyScalar(ae).add(Q);
      }, cross: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(Q, te)) : this.crossVectors(this, Q);
      }, crossVectors: function(Q, te) {
        var ae = Q.x, se = Q.y, ue = Q.z, le = te.x, de = te.y, pe = te.z;
        return this.x = se * pe - ue * de, this.y = ue * le - ae * pe, this.z = ae * de - se * le, this;
      }, projectOnVector: function(Q) {
        var te = Q.dot(this) / Q.lengthSq();
        return this.copy(Q).multiplyScalar(te);
      }, projectOnPlane: function() {
        var Q = new mt();
        return function(te) {
          return Q.copy(this).projectOnVector(te), this.sub(Q);
        };
      }(), reflect: function() {
        var Q = new mt();
        return function(te) {
          return this.sub(Q.copy(te).multiplyScalar(2 * this.dot(te)));
        };
      }(), angleTo: function(Q) {
        var te = this.dot(Q) / Math.sqrt(this.lengthSq() * Q.lengthSq());
        return Math.acos(Cn.clamp(te, -1, 1));
      }, distanceTo: function(Q) {
        return Math.sqrt(this.distanceToSquared(Q));
      }, distanceToSquared: function(Q) {
        var te = this.x - Q.x, ae = this.y - Q.y, se = this.z - Q.z;
        return te * te + ae * ae + se * se;
      }, manhattanDistanceTo: function(Q) {
        return Math.abs(this.x - Q.x) + Math.abs(this.y - Q.y) + Math.abs(this.z - Q.z);
      }, setFromSpherical: function(Q) {
        var te = Math.sin(Q.phi) * Q.radius;
        return this.x = te * Math.sin(Q.theta), this.y = Math.cos(Q.phi) * Q.radius, this.z = te * Math.cos(Q.theta), this;
      }, setFromCylindrical: function(Q) {
        return this.x = Q.radius * Math.sin(Q.theta), this.y = Q.y, this.z = Q.radius * Math.cos(Q.theta), this;
      }, setFromMatrixPosition: function(Q) {
        var te = Q.elements;
        return this.x = te[12], this.y = te[13], this.z = te[14], this;
      }, setFromMatrixScale: function(Q) {
        var te = this.setFromMatrixColumn(Q, 0).length(), ae = this.setFromMatrixColumn(Q, 1).length(), se = this.setFromMatrixColumn(Q, 2).length();
        return this.x = te, this.y = ae, this.z = se, this;
      }, setFromMatrixColumn: function(Q, te) {
        return this.fromArray(Q.elements, 4 * te);
      }, equals: function(Q) {
        return Q.x === this.x && Q.y === this.y && Q.z === this.z;
      }, fromArray: function(Q, te) {
        return te === void 0 && (te = 0), this.x = Q[te], this.y = Q[te + 1], this.z = Q[te + 2], this;
      }, toArray: function(Q, te) {
        return Q === void 0 && (Q = []), te === void 0 && (te = 0), Q[te] = this.x, Q[te + 1] = this.y, Q[te + 2] = this.z, Q;
      }, fromBufferAttribute: function(Q, te, ae) {
        return ae !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = Q.getX(te), this.y = Q.getY(te), this.z = Q.getZ(te), this;
      } }), Object.assign(zi.prototype, { isMatrix3: !0, set: function(Q, te, ae, se, ue, le, de, pe, ve) {
        var we = this.elements;
        return we[0] = Q, we[1] = se, we[2] = de, we[3] = te, we[4] = ue, we[5] = pe, we[6] = ae, we[7] = le, we[8] = ve, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
      }, clone: function() {
        return new this.constructor().fromArray(this.elements);
      }, copy: function(Q) {
        var te = this.elements, ae = Q.elements;
        return te[0] = ae[0], te[1] = ae[1], te[2] = ae[2], te[3] = ae[3], te[4] = ae[4], te[5] = ae[5], te[6] = ae[6], te[7] = ae[7], te[8] = ae[8], this;
      }, setFromMatrix4: function(Q) {
        var te = Q.elements;
        return this.set(te[0], te[4], te[8], te[1], te[5], te[9], te[2], te[6], te[10]), this;
      }, applyToBufferAttribute: function() {
        var Q = new mt();
        return function(te) {
          for (var ae = 0, se = te.count; ae < se; ae++)
            Q.x = te.getX(ae), Q.y = te.getY(ae), Q.z = te.getZ(ae), Q.applyMatrix3(this), te.setXYZ(ae, Q.x, Q.y, Q.z);
          return te;
        };
      }(), multiply: function(Q) {
        return this.multiplyMatrices(this, Q);
      }, premultiply: function(Q) {
        return this.multiplyMatrices(Q, this);
      }, multiplyMatrices: function(Q, te) {
        var ae = Q.elements, se = te.elements, ue = this.elements, le = ae[0], de = ae[3], pe = ae[6], ve = ae[1], we = ae[4], Me = ae[7], Qe = ae[2], Se = ae[5], Ge = ae[8], ze = se[0], Ze = se[3], nt = se[6], ct = se[1], yt = se[4], st = se[7], Mt = se[2], Ot = se[5], dt = se[8];
        return ue[0] = le * ze + de * ct + pe * Mt, ue[3] = le * Ze + de * yt + pe * Ot, ue[6] = le * nt + de * st + pe * dt, ue[1] = ve * ze + we * ct + Me * Mt, ue[4] = ve * Ze + we * yt + Me * Ot, ue[7] = ve * nt + we * st + Me * dt, ue[2] = Qe * ze + Se * ct + Ge * Mt, ue[5] = Qe * Ze + Se * yt + Ge * Ot, ue[8] = Qe * nt + Se * st + Ge * dt, this;
      }, multiplyScalar: function(Q) {
        var te = this.elements;
        return te[0] *= Q, te[3] *= Q, te[6] *= Q, te[1] *= Q, te[4] *= Q, te[7] *= Q, te[2] *= Q, te[5] *= Q, te[8] *= Q, this;
      }, determinant: function() {
        var Q = this.elements, te = Q[0], ae = Q[1], se = Q[2], ue = Q[3], le = Q[4], de = Q[5], pe = Q[6], ve = Q[7], we = Q[8];
        return te * le * we - te * de * ve - ae * ue * we + ae * de * pe + se * ue * ve - se * le * pe;
      }, getInverse: function(Q, te) {
        Q && Q.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
        var ae = Q.elements, se = this.elements, ue = ae[0], le = ae[1], de = ae[2], pe = ae[3], ve = ae[4], we = ae[5], Me = ae[6], Qe = ae[7], Se = ae[8], Ge = Se * ve - we * Qe, ze = we * Me - Se * pe, Ze = Qe * pe - ve * Me, nt = ue * Ge + le * ze + de * Ze;
        if (nt === 0) {
          var ct = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
          if (te === !0)
            throw new Error(ct);
          return console.warn(ct), this.identity();
        }
        var yt = 1 / nt;
        return se[0] = Ge * yt, se[1] = (de * Qe - Se * le) * yt, se[2] = (we * le - de * ve) * yt, se[3] = ze * yt, se[4] = (Se * ue - de * Me) * yt, se[5] = (de * pe - we * ue) * yt, se[6] = Ze * yt, se[7] = (le * Me - Qe * ue) * yt, se[8] = (ve * ue - le * pe) * yt, this;
      }, transpose: function() {
        var Q, te = this.elements;
        return Q = te[1], te[1] = te[3], te[3] = Q, Q = te[2], te[2] = te[6], te[6] = Q, Q = te[5], te[5] = te[7], te[7] = Q, this;
      }, getNormalMatrix: function(Q) {
        return this.setFromMatrix4(Q).getInverse(this).transpose();
      }, transposeIntoArray: function(Q) {
        var te = this.elements;
        return Q[0] = te[0], Q[1] = te[3], Q[2] = te[6], Q[3] = te[1], Q[4] = te[4], Q[5] = te[7], Q[6] = te[2], Q[7] = te[5], Q[8] = te[8], this;
      }, setUvTransform: function(Q, te, ae, se, ue, le, de) {
        var pe = Math.cos(ue), ve = Math.sin(ue);
        this.set(ae * pe, ae * ve, -ae * (pe * le + ve * de) + le + Q, -se * ve, se * pe, -se * (-ve * le + pe * de) + de + te, 0, 0, 1);
      }, scale: function(Q, te) {
        var ae = this.elements;
        return ae[0] *= Q, ae[3] *= Q, ae[6] *= Q, ae[1] *= te, ae[4] *= te, ae[7] *= te, this;
      }, rotate: function(Q) {
        var te = Math.cos(Q), ae = Math.sin(Q), se = this.elements, ue = se[0], le = se[3], de = se[6], pe = se[1], ve = se[4], we = se[7];
        return se[0] = te * ue + ae * pe, se[3] = te * le + ae * ve, se[6] = te * de + ae * we, se[1] = -ae * ue + te * pe, se[4] = -ae * le + te * ve, se[7] = -ae * de + te * we, this;
      }, translate: function(Q, te) {
        var ae = this.elements;
        return ae[0] += Q * ae[2], ae[3] += Q * ae[5], ae[6] += Q * ae[8], ae[1] += te * ae[2], ae[4] += te * ae[5], ae[7] += te * ae[8], this;
      }, equals: function(Q) {
        for (var te = this.elements, ae = Q.elements, se = 0; se < 9; se++)
          if (te[se] !== ae[se])
            return !1;
        return !0;
      }, fromArray: function(Q, te) {
        te === void 0 && (te = 0);
        for (var ae = 0; ae < 9; ae++)
          this.elements[ae] = Q[ae + te];
        return this;
      }, toArray: function(Q, te) {
        Q === void 0 && (Q = []), te === void 0 && (te = 0);
        var ae = this.elements;
        return Q[te] = ae[0], Q[te + 1] = ae[1], Q[te + 2] = ae[2], Q[te + 3] = ae[3], Q[te + 4] = ae[4], Q[te + 5] = ae[5], Q[te + 6] = ae[6], Q[te + 7] = ae[7], Q[te + 8] = ae[8], Q;
      } });
      var Ya = { getDataURL: function(Q) {
        var te;
        if (Q instanceof HTMLCanvasElement)
          te = Q;
        else {
          typeof OffscreenCanvas < "u" ? te = new OffscreenCanvas(Q.width, Q.height) : ((te = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")).width = Q.width, te.height = Q.height);
          var ae = te.getContext("2d");
          Q instanceof ImageData ? ae.putImageData(Q, 0, 0) : ae.drawImage(Q, 0, 0, Q.width, Q.height);
        }
        return te.width > 2048 || te.height > 2048 ? te.toDataURL("image/jpeg", 0.6) : te.toDataURL("image/png");
      } }, Ul = 0;
      function ii(Q, te, ae, se, ue, le, de, pe, ve, we) {
        Object.defineProperty(this, "id", { value: Ul++ }), this.uuid = Cn.generateUUID(), this.name = "", this.image = Q !== void 0 ? Q : ii.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = te !== void 0 ? te : ii.DEFAULT_MAPPING, this.wrapS = ae !== void 0 ? ae : br, this.wrapT = se !== void 0 ? se : br, this.magFilter = ue !== void 0 ? ue : an, this.minFilter = le !== void 0 ? le : $n, this.anisotropy = ve !== void 0 ? ve : 1, this.format = de !== void 0 ? de : tr, this.type = pe !== void 0 ? pe : Gn, this.offset = new wr(0, 0), this.repeat = new wr(1, 1), this.center = new wr(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new zi(), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = we !== void 0 ? we : Dn, this.version = 0, this.onUpdate = null;
      }
      function Zn(Q, te, ae, se) {
        this.x = Q || 0, this.y = te || 0, this.z = ae || 0, this.w = se !== void 0 ? se : 1;
      }
      function no(Q, te, ae) {
        this.width = Q, this.height = te, this.scissor = new Zn(0, 0, Q, te), this.scissorTest = !1, this.viewport = new Zn(0, 0, Q, te), (ae = ae || {}).minFilter === void 0 && (ae.minFilter = an), this.texture = new ii(void 0, void 0, ae.wrapS, ae.wrapT, ae.magFilter, ae.minFilter, ae.format, ae.type, ae.anisotropy, ae.encoding), this.texture.generateMipmaps = ae.generateMipmaps === void 0 || ae.generateMipmaps, this.depthBuffer = ae.depthBuffer === void 0 || ae.depthBuffer, this.stencilBuffer = ae.stencilBuffer === void 0 || ae.stencilBuffer, this.depthTexture = ae.depthTexture !== void 0 ? ae.depthTexture : null;
      }
      function Fo(Q, te, ae) {
        no.call(this, Q, te, ae), this.activeCubeFace = 0, this.activeMipMapLevel = 0;
      }
      function io(Q, te, ae, se, ue, le, de, pe, ve, we, Me, Qe) {
        ii.call(this, null, le, de, pe, ve, we, se, ue, Me, Qe), this.image = { data: Q, width: te, height: ae }, this.magFilter = ve !== void 0 ? ve : _r, this.minFilter = we !== void 0 ? we : _r, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
      }
      function Ha(Q, te) {
        this.min = Q !== void 0 ? Q : new mt(1 / 0, 1 / 0, 1 / 0), this.max = te !== void 0 ? te : new mt(-1 / 0, -1 / 0, -1 / 0);
      }
      function Aa(Q, te) {
        this.center = Q !== void 0 ? Q : new mt(), this.radius = te !== void 0 ? te : 0;
      }
      function Ca(Q, te) {
        this.normal = Q !== void 0 ? Q : new mt(1, 0, 0), this.constant = te !== void 0 ? te : 0;
      }
      function Cc(Q, te, ae, se, ue, le) {
        this.planes = [Q !== void 0 ? Q : new Ca(), te !== void 0 ? te : new Ca(), ae !== void 0 ? ae : new Ca(), se !== void 0 ? se : new Ca(), ue !== void 0 ? ue : new Ca(), le !== void 0 ? le : new Ca()];
      }
      ii.DEFAULT_IMAGE = void 0, ii.DEFAULT_MAPPING = Ue, ii.prototype = Object.assign(Object.create(ce.prototype), { constructor: ii, isTexture: !0, updateMatrix: function() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.name = Q.name, this.image = Q.image, this.mipmaps = Q.mipmaps.slice(0), this.mapping = Q.mapping, this.wrapS = Q.wrapS, this.wrapT = Q.wrapT, this.magFilter = Q.magFilter, this.minFilter = Q.minFilter, this.anisotropy = Q.anisotropy, this.format = Q.format, this.type = Q.type, this.offset.copy(Q.offset), this.repeat.copy(Q.repeat), this.center.copy(Q.center), this.rotation = Q.rotation, this.matrixAutoUpdate = Q.matrixAutoUpdate, this.matrix.copy(Q.matrix), this.generateMipmaps = Q.generateMipmaps, this.premultiplyAlpha = Q.premultiplyAlpha, this.flipY = Q.flipY, this.unpackAlignment = Q.unpackAlignment, this.encoding = Q.encoding, this;
      }, toJSON: function(Q) {
        var te = Q === void 0 || typeof Q == "string";
        if (!te && Q.textures[this.uuid] !== void 0)
          return Q.textures[this.uuid];
        var ae = { metadata: { version: 4.5, type: "Texture", generator: "Texture.toJSON" }, uuid: this.uuid, name: this.name, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY };
        if (this.image !== void 0) {
          var se = this.image;
          if (se.uuid === void 0 && (se.uuid = Cn.generateUUID()), !te && Q.images[se.uuid] === void 0) {
            var ue;
            if (Array.isArray(se)) {
              ue = [];
              for (var le = 0, de = se.length; le < de; le++)
                ue.push(Ya.getDataURL(se[le]));
            } else
              ue = Ya.getDataURL(se);
            Q.images[se.uuid] = { uuid: se.uuid, url: ue };
          }
          ae.image = se.uuid;
        }
        return te || (Q.textures[this.uuid] = ae), ae;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      }, transformUv: function(Q) {
        if (this.mapping === Ue) {
          if (Q.applyMatrix3(this.matrix), Q.x < 0 || Q.x > 1)
            switch (this.wrapS) {
              case gr:
                Q.x = Q.x - Math.floor(Q.x);
                break;
              case br:
                Q.x = Q.x < 0 ? 0 : 1;
                break;
              case mr:
                Math.abs(Math.floor(Q.x) % 2) === 1 ? Q.x = Math.ceil(Q.x) - Q.x : Q.x = Q.x - Math.floor(Q.x);
            }
          if (Q.y < 0 || Q.y > 1)
            switch (this.wrapT) {
              case gr:
                Q.y = Q.y - Math.floor(Q.y);
                break;
              case br:
                Q.y = Q.y < 0 ? 0 : 1;
                break;
              case mr:
                Math.abs(Math.floor(Q.y) % 2) === 1 ? Q.y = Math.ceil(Q.y) - Q.y : Q.y = Q.y - Math.floor(Q.y);
            }
          this.flipY && (Q.y = 1 - Q.y);
        }
      } }), Object.defineProperty(ii.prototype, "needsUpdate", { set: function(Q) {
        Q === !0 && this.version++;
      } }), Object.assign(Zn.prototype, { isVector4: !0, set: function(Q, te, ae, se) {
        return this.x = Q, this.y = te, this.z = ae, this.w = se, this;
      }, setScalar: function(Q) {
        return this.x = Q, this.y = Q, this.z = Q, this.w = Q, this;
      }, setX: function(Q) {
        return this.x = Q, this;
      }, setY: function(Q) {
        return this.y = Q, this;
      }, setZ: function(Q) {
        return this.z = Q, this;
      }, setW: function(Q) {
        return this.w = Q, this;
      }, setComponent: function(Q, te) {
        switch (Q) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          case 2:
            this.z = te;
            break;
          case 3:
            this.w = te;
            break;
          default:
            throw new Error("index is out of range: " + Q);
        }
        return this;
      }, getComponent: function(Q) {
        switch (Q) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          case 3:
            return this.w;
          default:
            throw new Error("index is out of range: " + Q);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z, this.w);
      }, copy: function(Q) {
        return this.x = Q.x, this.y = Q.y, this.z = Q.z, this.w = Q.w !== void 0 ? Q.w : 1, this;
      }, add: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Q, te)) : (this.x += Q.x, this.y += Q.y, this.z += Q.z, this.w += Q.w, this);
      }, addScalar: function(Q) {
        return this.x += Q, this.y += Q, this.z += Q, this.w += Q, this;
      }, addVectors: function(Q, te) {
        return this.x = Q.x + te.x, this.y = Q.y + te.y, this.z = Q.z + te.z, this.w = Q.w + te.w, this;
      }, addScaledVector: function(Q, te) {
        return this.x += Q.x * te, this.y += Q.y * te, this.z += Q.z * te, this.w += Q.w * te, this;
      }, sub: function(Q, te) {
        return te !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Q, te)) : (this.x -= Q.x, this.y -= Q.y, this.z -= Q.z, this.w -= Q.w, this);
      }, subScalar: function(Q) {
        return this.x -= Q, this.y -= Q, this.z -= Q, this.w -= Q, this;
      }, subVectors: function(Q, te) {
        return this.x = Q.x - te.x, this.y = Q.y - te.y, this.z = Q.z - te.z, this.w = Q.w - te.w, this;
      }, multiplyScalar: function(Q) {
        return this.x *= Q, this.y *= Q, this.z *= Q, this.w *= Q, this;
      }, applyMatrix4: function(Q) {
        var te = this.x, ae = this.y, se = this.z, ue = this.w, le = Q.elements;
        return this.x = le[0] * te + le[4] * ae + le[8] * se + le[12] * ue, this.y = le[1] * te + le[5] * ae + le[9] * se + le[13] * ue, this.z = le[2] * te + le[6] * ae + le[10] * se + le[14] * ue, this.w = le[3] * te + le[7] * ae + le[11] * se + le[15] * ue, this;
      }, divideScalar: function(Q) {
        return this.multiplyScalar(1 / Q);
      }, setAxisAngleFromQuaternion: function(Q) {
        this.w = 2 * Math.acos(Q.w);
        var te = Math.sqrt(1 - Q.w * Q.w);
        return te < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = Q.x / te, this.y = Q.y / te, this.z = Q.z / te), this;
      }, setAxisAngleFromRotationMatrix: function(Q) {
        var te, ae, se, ue, le = Q.elements, de = le[0], pe = le[4], ve = le[8], we = le[1], Me = le[5], Qe = le[9], Se = le[2], Ge = le[6], ze = le[10];
        if (Math.abs(pe - we) < 0.01 && Math.abs(ve - Se) < 0.01 && Math.abs(Qe - Ge) < 0.01) {
          if (Math.abs(pe + we) < 0.1 && Math.abs(ve + Se) < 0.1 && Math.abs(Qe + Ge) < 0.1 && Math.abs(de + Me + ze - 3) < 0.1)
            return this.set(1, 0, 0, 0), this;
          te = Math.PI;
          var Ze = (de + 1) / 2, nt = (Me + 1) / 2, ct = (ze + 1) / 2, yt = (pe + we) / 4, st = (ve + Se) / 4, Mt = (Qe + Ge) / 4;
          return Ze > nt && Ze > ct ? Ze < 0.01 ? (ae = 0, se = 0.707106781, ue = 0.707106781) : (se = yt / (ae = Math.sqrt(Ze)), ue = st / ae) : nt > ct ? nt < 0.01 ? (ae = 0.707106781, se = 0, ue = 0.707106781) : (ae = yt / (se = Math.sqrt(nt)), ue = Mt / se) : ct < 0.01 ? (ae = 0.707106781, se = 0.707106781, ue = 0) : (ae = st / (ue = Math.sqrt(ct)), se = Mt / ue), this.set(ae, se, ue, te), this;
        }
        var Ot = Math.sqrt((Ge - Qe) * (Ge - Qe) + (ve - Se) * (ve - Se) + (we - pe) * (we - pe));
        return Math.abs(Ot) < 1e-3 && (Ot = 1), this.x = (Ge - Qe) / Ot, this.y = (ve - Se) / Ot, this.z = (we - pe) / Ot, this.w = Math.acos((de + Me + ze - 1) / 2), this;
      }, min: function(Q) {
        return this.x = Math.min(this.x, Q.x), this.y = Math.min(this.y, Q.y), this.z = Math.min(this.z, Q.z), this.w = Math.min(this.w, Q.w), this;
      }, max: function(Q) {
        return this.x = Math.max(this.x, Q.x), this.y = Math.max(this.y, Q.y), this.z = Math.max(this.z, Q.z), this.w = Math.max(this.w, Q.w), this;
      }, clamp: function(Q, te) {
        return this.x = Math.max(Q.x, Math.min(te.x, this.x)), this.y = Math.max(Q.y, Math.min(te.y, this.y)), this.z = Math.max(Q.z, Math.min(te.z, this.z)), this.w = Math.max(Q.w, Math.min(te.w, this.w)), this;
      }, clampScalar: function() {
        var Q, te;
        return function(ae, se) {
          return Q === void 0 && (Q = new Zn(), te = new Zn()), Q.set(ae, ae, ae, ae), te.set(se, se, se, se), this.clamp(Q, te);
        };
      }(), clampLength: function(Q, te) {
        var ae = this.length();
        return this.divideScalar(ae || 1).multiplyScalar(Math.max(Q, Math.min(te, ae)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
      }, dot: function(Q) {
        return this.x * Q.x + this.y * Q.y + this.z * Q.z + this.w * Q.w;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(Q) {
        return this.normalize().multiplyScalar(Q);
      }, lerp: function(Q, te) {
        return this.x += (Q.x - this.x) * te, this.y += (Q.y - this.y) * te, this.z += (Q.z - this.z) * te, this.w += (Q.w - this.w) * te, this;
      }, lerpVectors: function(Q, te, ae) {
        return this.subVectors(te, Q).multiplyScalar(ae).add(Q);
      }, equals: function(Q) {
        return Q.x === this.x && Q.y === this.y && Q.z === this.z && Q.w === this.w;
      }, fromArray: function(Q, te) {
        return te === void 0 && (te = 0), this.x = Q[te], this.y = Q[te + 1], this.z = Q[te + 2], this.w = Q[te + 3], this;
      }, toArray: function(Q, te) {
        return Q === void 0 && (Q = []), te === void 0 && (te = 0), Q[te] = this.x, Q[te + 1] = this.y, Q[te + 2] = this.z, Q[te + 3] = this.w, Q;
      }, fromBufferAttribute: function(Q, te, ae) {
        return ae !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = Q.getX(te), this.y = Q.getY(te), this.z = Q.getZ(te), this.w = Q.getW(te), this;
      } }), no.prototype = Object.assign(Object.create(ce.prototype), { constructor: no, isWebGLRenderTarget: !0, setSize: function(Q, te) {
        this.width === Q && this.height === te || (this.width = Q, this.height = te, this.dispose()), this.viewport.set(0, 0, Q, te), this.scissor.set(0, 0, Q, te);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.width = Q.width, this.height = Q.height, this.viewport.copy(Q.viewport), this.texture = Q.texture.clone(), this.depthBuffer = Q.depthBuffer, this.stencilBuffer = Q.stencilBuffer, this.depthTexture = Q.depthTexture, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Fo.prototype = Object.create(no.prototype), Fo.prototype.constructor = Fo, Fo.prototype.isWebGLRenderTargetCube = !0, io.prototype = Object.create(ii.prototype), io.prototype.constructor = io, io.prototype.isDataTexture = !0, Object.assign(Ha.prototype, { isBox3: !0, set: function(Q, te) {
        return this.min.copy(Q), this.max.copy(te), this;
      }, setFromArray: function(Q) {
        for (var te = 1 / 0, ae = 1 / 0, se = 1 / 0, ue = -1 / 0, le = -1 / 0, de = -1 / 0, pe = 0, ve = Q.length; pe < ve; pe += 3) {
          var we = Q[pe], Me = Q[pe + 1], Qe = Q[pe + 2];
          we < te && (te = we), Me < ae && (ae = Me), Qe < se && (se = Qe), we > ue && (ue = we), Me > le && (le = Me), Qe > de && (de = Qe);
        }
        return this.min.set(te, ae, se), this.max.set(ue, le, de), this;
      }, setFromBufferAttribute: function(Q) {
        for (var te = 1 / 0, ae = 1 / 0, se = 1 / 0, ue = -1 / 0, le = -1 / 0, de = -1 / 0, pe = 0, ve = Q.count; pe < ve; pe++) {
          var we = Q.getX(pe), Me = Q.getY(pe), Qe = Q.getZ(pe);
          we < te && (te = we), Me < ae && (ae = Me), Qe < se && (se = Qe), we > ue && (ue = we), Me > le && (le = Me), Qe > de && (de = Qe);
        }
        return this.min.set(te, ae, se), this.max.set(ue, le, de), this;
      }, setFromPoints: function(Q) {
        this.makeEmpty();
        for (var te = 0, ae = Q.length; te < ae; te++)
          this.expandByPoint(Q[te]);
        return this;
      }, setFromCenterAndSize: function() {
        var Q = new mt();
        return function(te, ae) {
          var se = Q.copy(ae).multiplyScalar(0.5);
          return this.min.copy(te).sub(se), this.max.copy(te).add(se), this;
        };
      }(), setFromObject: function(Q) {
        return this.makeEmpty(), this.expandByObject(Q);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.min.copy(Q.min), this.max.copy(Q.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
      }, getCenter: function(Q) {
        return Q === void 0 && (console.warn("THREE.Box3: .getCenter() target is now required"), Q = new mt()), this.isEmpty() ? Q.set(0, 0, 0) : Q.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(Q) {
        return Q === void 0 && (console.warn("THREE.Box3: .getSize() target is now required"), Q = new mt()), this.isEmpty() ? Q.set(0, 0, 0) : Q.subVectors(this.max, this.min);
      }, expandByPoint: function(Q) {
        return this.min.min(Q), this.max.max(Q), this;
      }, expandByVector: function(Q) {
        return this.min.sub(Q), this.max.add(Q), this;
      }, expandByScalar: function(Q) {
        return this.min.addScalar(-Q), this.max.addScalar(Q), this;
      }, expandByObject: function() {
        var Q, te, ae, se = new mt();
        function ue(le) {
          var de = le.geometry;
          if (de !== void 0) {
            if (de.isGeometry) {
              var pe = de.vertices;
              for (te = 0, ae = pe.length; te < ae; te++)
                se.copy(pe[te]), se.applyMatrix4(le.matrixWorld), Q.expandByPoint(se);
            } else if (de.isBufferGeometry) {
              var ve = de.attributes.position;
              if (ve !== void 0)
                for (te = 0, ae = ve.count; te < ae; te++)
                  se.fromBufferAttribute(ve, te).applyMatrix4(le.matrixWorld), Q.expandByPoint(se);
            }
          }
        }
        return function(le) {
          return Q = this, le.updateMatrixWorld(!0), le.traverse(ue), this;
        };
      }(), containsPoint: function(Q) {
        return !(Q.x < this.min.x || Q.x > this.max.x || Q.y < this.min.y || Q.y > this.max.y || Q.z < this.min.z || Q.z > this.max.z);
      }, containsBox: function(Q) {
        return this.min.x <= Q.min.x && Q.max.x <= this.max.x && this.min.y <= Q.min.y && Q.max.y <= this.max.y && this.min.z <= Q.min.z && Q.max.z <= this.max.z;
      }, getParameter: function(Q, te) {
        return te === void 0 && (console.warn("THREE.Box3: .getParameter() target is now required"), te = new mt()), te.set((Q.x - this.min.x) / (this.max.x - this.min.x), (Q.y - this.min.y) / (this.max.y - this.min.y), (Q.z - this.min.z) / (this.max.z - this.min.z));
      }, intersectsBox: function(Q) {
        return !(Q.max.x < this.min.x || Q.min.x > this.max.x || Q.max.y < this.min.y || Q.min.y > this.max.y || Q.max.z < this.min.z || Q.min.z > this.max.z);
      }, intersectsSphere: function() {
        var Q = new mt();
        return function(te) {
          return this.clampPoint(te.center, Q), Q.distanceToSquared(te.center) <= te.radius * te.radius;
        };
      }(), intersectsPlane: function(Q) {
        var te, ae;
        return Q.normal.x > 0 ? (te = Q.normal.x * this.min.x, ae = Q.normal.x * this.max.x) : (te = Q.normal.x * this.max.x, ae = Q.normal.x * this.min.x), Q.normal.y > 0 ? (te += Q.normal.y * this.min.y, ae += Q.normal.y * this.max.y) : (te += Q.normal.y * this.max.y, ae += Q.normal.y * this.min.y), Q.normal.z > 0 ? (te += Q.normal.z * this.min.z, ae += Q.normal.z * this.max.z) : (te += Q.normal.z * this.max.z, ae += Q.normal.z * this.min.z), te <= Q.constant && ae >= Q.constant;
      }, intersectsTriangle: function() {
        var Q = new mt(), te = new mt(), ae = new mt(), se = new mt(), ue = new mt(), le = new mt(), de = new mt(), pe = new mt(), ve = new mt(), we = new mt();
        function Me(Qe) {
          var Se, Ge;
          for (Se = 0, Ge = Qe.length - 3; Se <= Ge; Se += 3) {
            de.fromArray(Qe, Se);
            var ze = ve.x * Math.abs(de.x) + ve.y * Math.abs(de.y) + ve.z * Math.abs(de.z), Ze = Q.dot(de), nt = te.dot(de), ct = ae.dot(de);
            if (Math.max(-Math.max(Ze, nt, ct), Math.min(Ze, nt, ct)) > ze)
              return !1;
          }
          return !0;
        }
        return function(Qe) {
          if (this.isEmpty())
            return !1;
          this.getCenter(pe), ve.subVectors(this.max, pe), Q.subVectors(Qe.a, pe), te.subVectors(Qe.b, pe), ae.subVectors(Qe.c, pe), se.subVectors(te, Q), ue.subVectors(ae, te), le.subVectors(Q, ae);
          var Se = [0, -se.z, se.y, 0, -ue.z, ue.y, 0, -le.z, le.y, se.z, 0, -se.x, ue.z, 0, -ue.x, le.z, 0, -le.x, -se.y, se.x, 0, -ue.y, ue.x, 0, -le.y, le.x, 0];
          return !!Me(Se) && !!Me(Se = [1, 0, 0, 0, 1, 0, 0, 0, 1]) && (we.crossVectors(se, ue), Me(Se = [we.x, we.y, we.z]));
        };
      }(), clampPoint: function(Q, te) {
        return te === void 0 && (console.warn("THREE.Box3: .clampPoint() target is now required"), te = new mt()), te.copy(Q).clamp(this.min, this.max);
      }, distanceToPoint: function() {
        var Q = new mt();
        return function(te) {
          return Q.copy(te).clamp(this.min, this.max).sub(te).length();
        };
      }(), getBoundingSphere: function() {
        var Q = new mt();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Box3: .getBoundingSphere() target is now required"), te = new Aa()), this.getCenter(te.center), te.radius = 0.5 * this.getSize(Q).length(), te;
        };
      }(), intersect: function(Q) {
        return this.min.max(Q.min), this.max.min(Q.max), this.isEmpty() && this.makeEmpty(), this;
      }, union: function(Q) {
        return this.min.min(Q.min), this.max.max(Q.max), this;
      }, applyMatrix4: function(Q) {
        if (this.isEmpty())
          return this;
        var te = Q.elements, ae = te[0] * this.min.x, se = te[1] * this.min.x, ue = te[2] * this.min.x, le = te[0] * this.max.x, de = te[1] * this.max.x, pe = te[2] * this.max.x, ve = te[4] * this.min.y, we = te[5] * this.min.y, Me = te[6] * this.min.y, Qe = te[4] * this.max.y, Se = te[5] * this.max.y, Ge = te[6] * this.max.y, ze = te[8] * this.min.z, Ze = te[9] * this.min.z, nt = te[10] * this.min.z, ct = te[8] * this.max.z, yt = te[9] * this.max.z, st = te[10] * this.max.z;
        return this.min.x = Math.min(ae, le) + Math.min(ve, Qe) + Math.min(ze, ct) + te[12], this.min.y = Math.min(se, de) + Math.min(we, Se) + Math.min(Ze, yt) + te[13], this.min.z = Math.min(ue, pe) + Math.min(Me, Ge) + Math.min(nt, st) + te[14], this.max.x = Math.max(ae, le) + Math.max(ve, Qe) + Math.max(ze, ct) + te[12], this.max.y = Math.max(se, de) + Math.max(we, Se) + Math.max(Ze, yt) + te[13], this.max.z = Math.max(ue, pe) + Math.max(Me, Ge) + Math.max(nt, st) + te[14], this;
      }, translate: function(Q) {
        return this.min.add(Q), this.max.add(Q), this;
      }, equals: function(Q) {
        return Q.min.equals(this.min) && Q.max.equals(this.max);
      } }), Object.assign(Aa.prototype, { set: function(Q, te) {
        return this.center.copy(Q), this.radius = te, this;
      }, setFromPoints: function() {
        var Q = new Ha();
        return function(te, ae) {
          var se = this.center;
          ae !== void 0 ? se.copy(ae) : Q.setFromPoints(te).getCenter(se);
          for (var ue = 0, le = 0, de = te.length; le < de; le++)
            ue = Math.max(ue, se.distanceToSquared(te[le]));
          return this.radius = Math.sqrt(ue), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.center.copy(Q.center), this.radius = Q.radius, this;
      }, empty: function() {
        return this.radius <= 0;
      }, containsPoint: function(Q) {
        return Q.distanceToSquared(this.center) <= this.radius * this.radius;
      }, distanceToPoint: function(Q) {
        return Q.distanceTo(this.center) - this.radius;
      }, intersectsSphere: function(Q) {
        var te = this.radius + Q.radius;
        return Q.center.distanceToSquared(this.center) <= te * te;
      }, intersectsBox: function(Q) {
        return Q.intersectsSphere(this);
      }, intersectsPlane: function(Q) {
        return Math.abs(Q.distanceToPoint(this.center)) <= this.radius;
      }, clampPoint: function(Q, te) {
        var ae = this.center.distanceToSquared(Q);
        return te === void 0 && (console.warn("THREE.Sphere: .clampPoint() target is now required"), te = new mt()), te.copy(Q), ae > this.radius * this.radius && (te.sub(this.center).normalize(), te.multiplyScalar(this.radius).add(this.center)), te;
      }, getBoundingBox: function(Q) {
        return Q === void 0 && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), Q = new Ha()), Q.set(this.center, this.center), Q.expandByScalar(this.radius), Q;
      }, applyMatrix4: function(Q) {
        return this.center.applyMatrix4(Q), this.radius = this.radius * Q.getMaxScaleOnAxis(), this;
      }, translate: function(Q) {
        return this.center.add(Q), this;
      }, equals: function(Q) {
        return Q.center.equals(this.center) && Q.radius === this.radius;
      } }), Object.assign(Ca.prototype, { set: function(Q, te) {
        return this.normal.copy(Q), this.constant = te, this;
      }, setComponents: function(Q, te, ae, se) {
        return this.normal.set(Q, te, ae), this.constant = se, this;
      }, setFromNormalAndCoplanarPoint: function(Q, te) {
        return this.normal.copy(Q), this.constant = -te.dot(this.normal), this;
      }, setFromCoplanarPoints: function() {
        var Q = new mt(), te = new mt();
        return function(ae, se, ue) {
          var le = Q.subVectors(ue, se).cross(te.subVectors(ae, se)).normalize();
          return this.setFromNormalAndCoplanarPoint(le, ae), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.normal.copy(Q.normal), this.constant = Q.constant, this;
      }, normalize: function() {
        var Q = 1 / this.normal.length();
        return this.normal.multiplyScalar(Q), this.constant *= Q, this;
      }, negate: function() {
        return this.constant *= -1, this.normal.negate(), this;
      }, distanceToPoint: function(Q) {
        return this.normal.dot(Q) + this.constant;
      }, distanceToSphere: function(Q) {
        return this.distanceToPoint(Q.center) - Q.radius;
      }, projectPoint: function(Q, te) {
        return te === void 0 && (console.warn("THREE.Plane: .projectPoint() target is now required"), te = new mt()), te.copy(this.normal).multiplyScalar(-this.distanceToPoint(Q)).add(Q);
      }, intersectLine: function() {
        var Q = new mt();
        return function(te, ae) {
          ae === void 0 && (console.warn("THREE.Plane: .intersectLine() target is now required"), ae = new mt());
          var se = te.delta(Q), ue = this.normal.dot(se);
          if (ue === 0)
            return this.distanceToPoint(te.start) === 0 ? ae.copy(te.start) : void 0;
          var le = -(te.start.dot(this.normal) + this.constant) / ue;
          return le < 0 || le > 1 ? void 0 : ae.copy(se).multiplyScalar(le).add(te.start);
        };
      }(), intersectsLine: function(Q) {
        var te = this.distanceToPoint(Q.start), ae = this.distanceToPoint(Q.end);
        return te < 0 && ae > 0 || ae < 0 && te > 0;
      }, intersectsBox: function(Q) {
        return Q.intersectsPlane(this);
      }, intersectsSphere: function(Q) {
        return Q.intersectsPlane(this);
      }, coplanarPoint: function(Q) {
        return Q === void 0 && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), Q = new mt()), Q.copy(this.normal).multiplyScalar(-this.constant);
      }, applyMatrix4: function() {
        var Q = new mt(), te = new zi();
        return function(ae, se) {
          var ue = se || te.getNormalMatrix(ae), le = this.coplanarPoint(Q).applyMatrix4(ae), de = this.normal.applyMatrix3(ue).normalize();
          return this.constant = -le.dot(de), this;
        };
      }(), translate: function(Q) {
        return this.constant -= Q.dot(this.normal), this;
      }, equals: function(Q) {
        return Q.normal.equals(this.normal) && Q.constant === this.constant;
      } }), Object.assign(Cc.prototype, { set: function(Q, te, ae, se, ue, le) {
        var de = this.planes;
        return de[0].copy(Q), de[1].copy(te), de[2].copy(ae), de[3].copy(se), de[4].copy(ue), de[5].copy(le), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        for (var te = this.planes, ae = 0; ae < 6; ae++)
          te[ae].copy(Q.planes[ae]);
        return this;
      }, setFromMatrix: function(Q) {
        var te = this.planes, ae = Q.elements, se = ae[0], ue = ae[1], le = ae[2], de = ae[3], pe = ae[4], ve = ae[5], we = ae[6], Me = ae[7], Qe = ae[8], Se = ae[9], Ge = ae[10], ze = ae[11], Ze = ae[12], nt = ae[13], ct = ae[14], yt = ae[15];
        return te[0].setComponents(de - se, Me - pe, ze - Qe, yt - Ze).normalize(), te[1].setComponents(de + se, Me + pe, ze + Qe, yt + Ze).normalize(), te[2].setComponents(de + ue, Me + ve, ze + Se, yt + nt).normalize(), te[3].setComponents(de - ue, Me - ve, ze - Se, yt - nt).normalize(), te[4].setComponents(de - le, Me - we, ze - Ge, yt - ct).normalize(), te[5].setComponents(de + le, Me + we, ze + Ge, yt + ct).normalize(), this;
      }, intersectsObject: function() {
        var Q = new Aa();
        return function(te) {
          var ae = te.geometry;
          return ae.boundingSphere === null && ae.computeBoundingSphere(), Q.copy(ae.boundingSphere).applyMatrix4(te.matrixWorld), this.intersectsSphere(Q);
        };
      }(), intersectsSprite: function() {
        var Q = new Aa();
        return function(te) {
          return Q.center.set(0, 0, 0), Q.radius = 0.7071067811865476, Q.applyMatrix4(te.matrixWorld), this.intersectsSphere(Q);
        };
      }(), intersectsSphere: function(Q) {
        for (var te = this.planes, ae = Q.center, se = -Q.radius, ue = 0; ue < 6; ue++)
          if (te[ue].distanceToPoint(ae) < se)
            return !1;
        return !0;
      }, intersectsBox: function() {
        var Q = new mt();
        return function(te) {
          for (var ae = this.planes, se = 0; se < 6; se++) {
            var ue = ae[se];
            if (Q.x = ue.normal.x > 0 ? te.max.x : te.min.x, Q.y = ue.normal.y > 0 ? te.max.y : te.min.y, Q.z = ue.normal.z > 0 ? te.max.z : te.min.z, ue.distanceToPoint(Q) < 0)
              return !1;
          }
          return !0;
        };
      }(), containsPoint: function(Q) {
        for (var te = this.planes, ae = 0; ae < 6; ae++)
          if (te[ae].distanceToPoint(Q) < 0)
            return !1;
        return !0;
      } });
      var zn = { alphamap_fragment: `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif
`, alphamap_pars_fragment: `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif
`, alphatest_fragment: `#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif
`, aomap_fragment: `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( PHYSICAL )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif
`, aomap_pars_fragment: `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, begin_vertex: `
vec3 transformed = vec3( position );
`, beginnormal_vertex: `
vec3 objectNormal = vec3( normal );
`, bsdfs: `float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	if( decayExponent > 0.0 ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		return distanceFalloff * maxDistanceCutoffFactor;
#else
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
#endif
	}
	return 1.0;
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;
	return specularColor * AB.x + AB.y;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
`, bumpmap_pars_fragment: `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif
`, clipping_planes_fragment: `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	#endif
#endif
`, clipping_planes_pars_fragment: `#if NUM_CLIPPING_PLANES > 0
	#if ! defined( PHYSICAL ) && ! defined( PHONG )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif
`, clipping_planes_pars_vertex: `#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	varying vec3 vViewPosition;
#endif
`, clipping_planes_vertex: `#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	vViewPosition = - mvPosition.xyz;
#endif
`, color_fragment: `#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`, color_pars_fragment: `#ifdef USE_COLOR
	varying vec3 vColor;
#endif
`, color_pars_vertex: `#ifdef USE_COLOR
	varying vec3 vColor;
#endif`, color_vertex: `#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`, common: `#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#define saturate(a) clamp( a, 0.0, 1.0 )
#define whiteCompliment(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
`, cube_uv_reflection_fragment: `#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_textureSize (1024.0)
int getFaceFromDirection(vec3 direction) {
	vec3 absDirection = abs(direction);
	int face = -1;
	if( absDirection.x > absDirection.z ) {
		if(absDirection.x > absDirection.y )
			face = direction.x > 0.0 ? 0 : 3;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	else {
		if(absDirection.z > absDirection.y )
			face = direction.z > 0.0 ? 2 : 5;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	return face;
}
#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)
#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))
vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {
	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);
	float dxRoughness = dFdx(roughness);
	float dyRoughness = dFdy(roughness);
	vec3 dx = dFdx( vec * scale * dxRoughness );
	vec3 dy = dFdy( vec * scale * dyRoughness );
	float d = max( dot( dx, dx ), dot( dy, dy ) );
	d = clamp(d, 1.0, cubeUV_rangeClamp);
	float mipLevel = 0.5 * log2(d);
	return vec2(floor(mipLevel), fract(mipLevel));
}
#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)
#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)
vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {
	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;
	float a = 16.0 * cubeUV_rcpTextureSize;
	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );
	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;
	float powScale = exp2_packed.x * exp2_packed.y;
	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;
	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;
	bool bRes = mipLevel == 0.0;
	scale =  bRes && (scale < a) ? a : scale;
	vec3 r;
	vec2 offset;
	int face = getFaceFromDirection(direction);
	float rcpPowScale = 1.0 / powScale;
	if( face == 0) {
		r = vec3(direction.x, -direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 1) {
		r = vec3(direction.y, direction.x, direction.z);
		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 2) {
		r = vec3(direction.z, direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 3) {
		r = vec3(direction.x, direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else if( face == 4) {
		r = vec3(direction.y, direction.x, -direction.z);
		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else {
		r = vec3(direction.z, -direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	r = normalize(r);
	float texelOffset = 0.5 * cubeUV_rcpTextureSize;
	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;
	vec2 base = offset + vec2( texelOffset );
	return base + s * ( scale - 2.0 * texelOffset );
}
#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)
vec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {
	float roughnessVal = roughness* cubeUV_maxLods3;
	float r1 = floor(roughnessVal);
	float r2 = r1 + 1.0;
	float t = fract(roughnessVal);
	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);
	float s = mipInfo.y;
	float level0 = mipInfo.x;
	float level1 = level0 + 1.0;
	level1 = level1 > 5.0 ? 5.0 : level1;
	level0 += min( floor( s + 0.5 ), 5.0 );
	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);
	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));
	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);
	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));
	vec4 result = mix(color10, color20, t);
	return vec4(result.rgb, 1.0);
}
#endif
`, defaultnormal_vertex: `vec3 transformedNormal = normalMatrix * objectNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
`, displacementmap_pars_vertex: `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif
`, displacementmap_vertex: `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );
#endif
`, emissivemap_fragment: `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif
`, emissivemap_pars_fragment: `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif
`, encodings_fragment: `  gl_FragColor = linearToOutputTexel( gl_FragColor );
`, encodings_pars_fragment: `
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.xyz * value.w * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M            = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float D      = max( maxRange / maxRGB, 1.0 );
	D            = min( floor( D ) / 255.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;
	Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract(Le);
	vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;
	return vec4( max(vRGB, 0.0), 1.0 );
}
`, envmap_fragment: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToVertex, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	envColor = envMapTexelToLinear( envColor );
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif
`, envmap_pars_fragment: `#if defined( USE_ENVMAP ) || defined( PHYSICAL )
	uniform float reflectivity;
	uniform float envMapIntensity;
#endif
#ifdef USE_ENVMAP
	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )
		varying vec3 vWorldPosition;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif
`, envmap_pars_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif
`, envmap_physical_pars_fragment: `#if defined( USE_ENVMAP ) && defined( PHYSICAL )
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );
		#else
			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif
`, envmap_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif
`, fog_vertex: `
#ifdef USE_FOG
fogDepth = -mvPosition.z;
#endif`, fog_pars_vertex: `#ifdef USE_FOG
  varying float fogDepth;
#endif
`, fog_fragment: `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif
`, fog_pars_fragment: `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif
`, gradientmap_pars_fragment: `#ifdef TOON
	uniform sampler2D gradientMap;
	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
		float dotNL = dot( normal, lightDirection );
		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
		#ifdef USE_GRADIENTMAP
			return texture2D( gradientMap, coord ).rgb;
		#else
			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
		#endif
	}
#endif
`, lightmap_fragment: `#ifdef USE_LIGHTMAP
	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
#endif
`, lightmap_pars_fragment: `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, lights_lambert_vertex: `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif
`, lights_pars_begin: `uniform vec3 ambientLightColor;
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
		float shadowCameraNear;
		float shadowCameraFar;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif
`, lights_phong_fragment: `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`, lights_phong_pars_fragment: `varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	#ifdef TOON
		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#else
		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
		vec3 irradiance = dotNL * directLight.color;
	#endif
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)
`, lights_physical_fragment: `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );
#ifdef STANDARD
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );
#endif
`, lights_physical_pars_fragment: `struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
	#ifndef STANDARD
		float clearCoat;
		float clearCoatRoughness;
	#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearCoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos - halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos + halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos + halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos - halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifndef STANDARD
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );
	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	#ifndef STANDARD
		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	#ifndef STANDARD
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		float dotNL = dotNV;
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );
	#ifndef STANDARD
		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )
#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}
`, lights_fragment_begin: `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = normalize( vViewPosition );
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearCoatRadiance = vec3( 0.0 );
#endif
`, lights_fragment_maps: `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )
		irradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );
	#ifndef STANDARD
		clearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );
	#endif
#endif
`, lights_fragment_end: `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );
#endif
`, logdepthbuf_fragment: `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, logdepthbuf_pars_fragment: `#ifdef USE_LOGDEPTHBUF
	uniform float logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
#endif
`, logdepthbuf_pars_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
	uniform float logDepthBufFC;
#endif`, logdepthbuf_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
	#else
		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
		gl_Position.z *= gl_Position.w;
	#endif
#endif
`, map_fragment: `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif
`, map_pars_fragment: `#ifdef USE_MAP
	uniform sampler2D map;
#endif
`, map_particle_fragment: `#ifdef USE_MAP
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
`, map_particle_pars_fragment: `#ifdef USE_MAP
	uniform mat3 uvTransform;
	uniform sampler2D map;
#endif
`, metalnessmap_fragment: `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif
`, metalnessmap_pars_fragment: `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, morphnormal_vertex: `#ifdef USE_MORPHNORMALS
	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];
	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];
	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];
	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];
#endif
`, morphtarget_pars_vertex: `#ifdef USE_MORPHTARGETS
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`, morphtarget_vertex: `#ifdef USE_MORPHTARGETS
	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];
	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];
	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];
	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];
	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];
	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];
	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];
	#endif
#endif
`, normal_fragment_begin: `#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
#endif
`, normal_fragment_maps: `#ifdef USE_NORMALMAP
	#ifdef OBJECTSPACE_NORMALMAP
		normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
		#ifdef FLIP_SIDED
			normal = - normal;
		#endif
		#ifdef DOUBLE_SIDED
			normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		normal = normalize( normalMatrix * normal );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif
`, normalmap_pars_fragment: `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
	#ifdef OBJECTSPACE_NORMALMAP
		uniform mat3 normalMatrix;
	#else
		vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {
			vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
			vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
			vec2 st0 = dFdx( vUv.st );
			vec2 st1 = dFdy( vUv.st );
			float scale = sign( st1.t * st0.s - st0.t * st1.s );
			vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
			vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
			vec3 N = normalize( surf_norm );
			mat3 tsn = mat3( S, T, N );
			vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
			mapN.xy *= normalScale;
			mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			return normalize( tsn * mapN );
		}
	#endif
#endif
`, packing: `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}
`, premultiplied_alpha_fragment: `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif
`, project_vertex: `vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
gl_Position = projectionMatrix * mvPosition;
`, dithering_fragment: `#if defined( DITHERING )
  gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif
`, dithering_pars_fragment: `#if defined( DITHERING )
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif
`, roughnessmap_fragment: `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif
`, roughnessmap_pars_fragment: `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, shadowmap_pars_fragment: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = floor( uv * size + 0.5 ) / size;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif
`, shadowmap_pars_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
#endif
`, shadowmap_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif
`, shadowmask_pars_fragment: `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}
`, skinbase_vertex: `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, skinning_pars_vertex: `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif
`, skinning_vertex: `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif
`, skinnormal_vertex: `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
#endif
`, specularmap_fragment: `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, specularmap_pars_fragment: `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, tonemapping_fragment: `#if defined( TONE_MAPPING )
  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif
`, tonemapping_pars_fragment: `#ifndef saturate
	#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
`, uv_pars_fragment: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
#endif`, uv_pars_vertex: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
`, uv_vertex: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, uv2_pars_fragment: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, uv2_pars_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
#endif`, uv2_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = uv2;
#endif`, worldpos_vertex: `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
#endif
`, cube_frag: `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldPosition;
void main() {
	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );
	gl_FragColor.a *= opacity;
}
`, cube_vert: `varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}
`, depth_frag: `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}
`, depth_vert: `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`, distanceRGBA_frag: `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}
`, distanceRGBA_vert: `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}
`, equirect_frag: `uniform sampler2D tEquirect;
varying vec3 vWorldPosition;
#include <common>
void main() {
	vec3 direction = normalize( vWorldPosition );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	gl_FragColor = texture2D( tEquirect, sampleUV );
}
`, equirect_vert: `varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}
`, linedashed_frag: `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, linedashed_vert: `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
`, meshbasic_frag: `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, meshbasic_vert: `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}
`, meshlambert_frag: `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshlambert_vert: `#define LAMBERT
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, meshphong_frag: `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshphong_vert: `#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, meshphysical_frag: `#define PHYSICAL
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifndef STANDARD
	uniform float clearCoat;
	uniform float clearCoatRoughness;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshphysical_vert: `#define PHYSICAL
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, normal_frag: `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}
`, normal_vert: `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	vViewPosition = - mvPosition.xyz;
#endif
}
`, points_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, points_vert: `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#ifdef USE_SIZEATTENUATION
		gl_PointSize = size * ( scale / - mvPosition.z );
	#else
		gl_PointSize = size;
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}
`, shadow_frag: `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <fog_fragment>
}
`, shadow_vert: `#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, sprite_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, sprite_vert: `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	vec4 mvPosition;
	mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
` }, Li = { merge: function(Q) {
        for (var te = {}, ae = 0; ae < Q.length; ae++) {
          var se = this.clone(Q[ae]);
          for (var ue in se)
            te[ue] = se[ue];
        }
        return te;
      }, clone: function(Q) {
        var te = {};
        for (var ae in Q)
          for (var se in te[ae] = {}, Q[ae]) {
            var ue = Q[ae][se];
            ue && (ue.isColor || ue.isMatrix3 || ue.isMatrix4 || ue.isVector2 || ue.isVector3 || ue.isVector4 || ue.isTexture) ? te[ae][se] = ue.clone() : Array.isArray(ue) ? te[ae][se] = ue.slice() : te[ae][se] = ue;
          }
        return te;
      } }, Hl = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 };
      function sn(Q, te, ae) {
        return te === void 0 && ae === void 0 ? this.set(Q) : this.setRGB(Q, te, ae);
      }
      Object.assign(sn.prototype, { isColor: !0, r: 1, g: 1, b: 1, set: function(Q) {
        return Q && Q.isColor ? this.copy(Q) : typeof Q == "number" ? this.setHex(Q) : typeof Q == "string" && this.setStyle(Q), this;
      }, setScalar: function(Q) {
        return this.r = Q, this.g = Q, this.b = Q, this;
      }, setHex: function(Q) {
        return Q = Math.floor(Q), this.r = (Q >> 16 & 255) / 255, this.g = (Q >> 8 & 255) / 255, this.b = (255 & Q) / 255, this;
      }, setRGB: function(Q, te, ae) {
        return this.r = Q, this.g = te, this.b = ae, this;
      }, setHSL: function() {
        function Q(te, ae, se) {
          return se < 0 && (se += 1), se > 1 && (se -= 1), se < 1 / 6 ? te + 6 * (ae - te) * se : se < 0.5 ? ae : se < 2 / 3 ? te + 6 * (ae - te) * (2 / 3 - se) : te;
        }
        return function(te, ae, se) {
          if (te = Cn.euclideanModulo(te, 1), ae = Cn.clamp(ae, 0, 1), se = Cn.clamp(se, 0, 1), ae === 0)
            this.r = this.g = this.b = se;
          else {
            var ue = se <= 0.5 ? se * (1 + ae) : se + ae - se * ae, le = 2 * se - ue;
            this.r = Q(le, ue, te + 1 / 3), this.g = Q(le, ue, te), this.b = Q(le, ue, te - 1 / 3);
          }
          return this;
        };
      }(), setStyle: function(Q) {
        function te(Qe) {
          Qe !== void 0 && parseFloat(Qe) < 1 && console.warn("THREE.Color: Alpha component of " + Q + " will be ignored.");
        }
        var ae;
        if (ae = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(Q)) {
          var se, ue = ae[1], le = ae[2];
          switch (ue) {
            case "rgb":
            case "rgba":
              if (se = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(le))
                return this.r = Math.min(255, parseInt(se[1], 10)) / 255, this.g = Math.min(255, parseInt(se[2], 10)) / 255, this.b = Math.min(255, parseInt(se[3], 10)) / 255, te(se[5]), this;
              if (se = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(le))
                return this.r = Math.min(100, parseInt(se[1], 10)) / 100, this.g = Math.min(100, parseInt(se[2], 10)) / 100, this.b = Math.min(100, parseInt(se[3], 10)) / 100, te(se[5]), this;
              break;
            case "hsl":
            case "hsla":
              if (se = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(le)) {
                var de = parseFloat(se[1]) / 360, pe = parseInt(se[2], 10) / 100, ve = parseInt(se[3], 10) / 100;
                return te(se[5]), this.setHSL(de, pe, ve);
              }
          }
        } else if (ae = /^\#([A-Fa-f0-9]+)$/.exec(Q)) {
          var we, Me = (we = ae[1]).length;
          if (Me === 3)
            return this.r = parseInt(we.charAt(0) + we.charAt(0), 16) / 255, this.g = parseInt(we.charAt(1) + we.charAt(1), 16) / 255, this.b = parseInt(we.charAt(2) + we.charAt(2), 16) / 255, this;
          if (Me === 6)
            return this.r = parseInt(we.charAt(0) + we.charAt(1), 16) / 255, this.g = parseInt(we.charAt(2) + we.charAt(3), 16) / 255, this.b = parseInt(we.charAt(4) + we.charAt(5), 16) / 255, this;
        }
        return Q && Q.length > 0 && ((we = Hl[Q]) !== void 0 ? this.setHex(we) : console.warn("THREE.Color: Unknown color " + Q)), this;
      }, clone: function() {
        return new this.constructor(this.r, this.g, this.b);
      }, copy: function(Q) {
        return this.r = Q.r, this.g = Q.g, this.b = Q.b, this;
      }, copyGammaToLinear: function(Q, te) {
        return te === void 0 && (te = 2), this.r = Math.pow(Q.r, te), this.g = Math.pow(Q.g, te), this.b = Math.pow(Q.b, te), this;
      }, copyLinearToGamma: function(Q, te) {
        te === void 0 && (te = 2);
        var ae = te > 0 ? 1 / te : 1;
        return this.r = Math.pow(Q.r, ae), this.g = Math.pow(Q.g, ae), this.b = Math.pow(Q.b, ae), this;
      }, convertGammaToLinear: function(Q) {
        return this.copyGammaToLinear(this, Q), this;
      }, convertLinearToGamma: function(Q) {
        return this.copyLinearToGamma(this, Q), this;
      }, copySRGBToLinear: function() {
        function Q(te) {
          return te < 0.04045 ? 0.0773993808 * te : Math.pow(0.9478672986 * te + 0.0521327014, 2.4);
        }
        return function(te) {
          return this.r = Q(te.r), this.g = Q(te.g), this.b = Q(te.b), this;
        };
      }(), copyLinearToSRGB: function() {
        function Q(te) {
          return te < 31308e-7 ? 12.92 * te : 1.055 * Math.pow(te, 0.41666) - 0.055;
        }
        return function(te) {
          return this.r = Q(te.r), this.g = Q(te.g), this.b = Q(te.b), this;
        };
      }(), convertSRGBToLinear: function() {
        return this.copySRGBToLinear(this), this;
      }, convertLinearToSRGB: function() {
        return this.copyLinearToSRGB(this), this;
      }, getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;
      }, getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
      }, getHSL: function(Q) {
        Q === void 0 && (console.warn("THREE.Color: .getHSL() target is now required"), Q = { h: 0, s: 0, l: 0 });
        var te, ae, se = this.r, ue = this.g, le = this.b, de = Math.max(se, ue, le), pe = Math.min(se, ue, le), ve = (pe + de) / 2;
        if (pe === de)
          te = 0, ae = 0;
        else {
          var we = de - pe;
          switch (ae = ve <= 0.5 ? we / (de + pe) : we / (2 - de - pe), de) {
            case se:
              te = (ue - le) / we + (ue < le ? 6 : 0);
              break;
            case ue:
              te = (le - se) / we + 2;
              break;
            case le:
              te = (se - ue) / we + 4;
          }
          te /= 6;
        }
        return Q.h = te, Q.s = ae, Q.l = ve, Q;
      }, getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")";
      }, offsetHSL: function() {
        var Q = {};
        return function(te, ae, se) {
          return this.getHSL(Q), Q.h += te, Q.s += ae, Q.l += se, this.setHSL(Q.h, Q.s, Q.l), this;
        };
      }(), add: function(Q) {
        return this.r += Q.r, this.g += Q.g, this.b += Q.b, this;
      }, addColors: function(Q, te) {
        return this.r = Q.r + te.r, this.g = Q.g + te.g, this.b = Q.b + te.b, this;
      }, addScalar: function(Q) {
        return this.r += Q, this.g += Q, this.b += Q, this;
      }, sub: function(Q) {
        return this.r = Math.max(0, this.r - Q.r), this.g = Math.max(0, this.g - Q.g), this.b = Math.max(0, this.b - Q.b), this;
      }, multiply: function(Q) {
        return this.r *= Q.r, this.g *= Q.g, this.b *= Q.b, this;
      }, multiplyScalar: function(Q) {
        return this.r *= Q, this.g *= Q, this.b *= Q, this;
      }, lerp: function(Q, te) {
        return this.r += (Q.r - this.r) * te, this.g += (Q.g - this.g) * te, this.b += (Q.b - this.b) * te, this;
      }, equals: function(Q) {
        return Q.r === this.r && Q.g === this.g && Q.b === this.b;
      }, fromArray: function(Q, te) {
        return te === void 0 && (te = 0), this.r = Q[te], this.g = Q[te + 1], this.b = Q[te + 2], this;
      }, toArray: function(Q, te) {
        return Q === void 0 && (Q = []), te === void 0 && (te = 0), Q[te] = this.r, Q[te + 1] = this.g, Q[te + 2] = this.b, Q;
      }, toJSON: function() {
        return this.getHex();
      } });
      var cn = { common: { diffuse: { value: new sn(15658734) }, opacity: { value: 1 }, map: { value: null }, uvTransform: { value: new zi() }, alphaMap: { value: null } }, specularmap: { specularMap: { value: null } }, envmap: { envMap: { value: null }, flipEnvMap: { value: -1 }, reflectivity: { value: 1 }, refractionRatio: { value: 0.98 }, maxMipLevel: { value: 0 } }, aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } }, lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } }, emissivemap: { emissiveMap: { value: null } }, bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } }, normalmap: { normalMap: { value: null }, normalScale: { value: new wr(1, 1) } }, displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } }, roughnessmap: { roughnessMap: { value: null } }, metalnessmap: { metalnessMap: { value: null } }, gradientmap: { gradientMap: { value: null } }, fog: { fogDensity: { value: 25e-5 }, fogNear: { value: 1 }, fogFar: { value: 2e3 }, fogColor: { value: new sn(16777215) } }, lights: { ambientLightColor: { value: [] }, directionalLights: { value: [], properties: { direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, directionalShadowMap: { value: [] }, directionalShadowMatrix: { value: [] }, spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, spotShadowMap: { value: [] }, spotShadowMatrix: { value: [] }, pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {} } }, pointShadowMap: { value: [] }, pointShadowMatrix: { value: [] }, hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } }, rectAreaLights: { value: [], properties: { color: {}, position: {}, width: {}, height: {} } } }, points: { diffuse: { value: new sn(15658734) }, opacity: { value: 1 }, size: { value: 1 }, scale: { value: 1 }, map: { value: null }, uvTransform: { value: new zi() } }, sprite: { diffuse: { value: new sn(15658734) }, opacity: { value: 1 }, center: { value: new wr(0.5, 0.5) }, rotation: { value: 0 }, map: { value: null }, uvTransform: { value: new zi() } } }, ao = { basic: { uniforms: Li.merge([cn.common, cn.specularmap, cn.envmap, cn.aomap, cn.lightmap, cn.fog]), vertexShader: zn.meshbasic_vert, fragmentShader: zn.meshbasic_frag }, lambert: { uniforms: Li.merge([cn.common, cn.specularmap, cn.envmap, cn.aomap, cn.lightmap, cn.emissivemap, cn.fog, cn.lights, { emissive: { value: new sn(0) } }]), vertexShader: zn.meshlambert_vert, fragmentShader: zn.meshlambert_frag }, phong: { uniforms: Li.merge([cn.common, cn.specularmap, cn.envmap, cn.aomap, cn.lightmap, cn.emissivemap, cn.bumpmap, cn.normalmap, cn.displacementmap, cn.gradientmap, cn.fog, cn.lights, { emissive: { value: new sn(0) }, specular: { value: new sn(1118481) }, shininess: { value: 30 } }]), vertexShader: zn.meshphong_vert, fragmentShader: zn.meshphong_frag }, standard: { uniforms: Li.merge([cn.common, cn.envmap, cn.aomap, cn.lightmap, cn.emissivemap, cn.bumpmap, cn.normalmap, cn.displacementmap, cn.roughnessmap, cn.metalnessmap, cn.fog, cn.lights, { emissive: { value: new sn(0) }, roughness: { value: 0.5 }, metalness: { value: 0.5 }, envMapIntensity: { value: 1 } }]), vertexShader: zn.meshphysical_vert, fragmentShader: zn.meshphysical_frag }, points: { uniforms: Li.merge([cn.points, cn.fog]), vertexShader: zn.points_vert, fragmentShader: zn.points_frag }, dashed: { uniforms: Li.merge([cn.common, cn.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } }]), vertexShader: zn.linedashed_vert, fragmentShader: zn.linedashed_frag }, depth: { uniforms: Li.merge([cn.common, cn.displacementmap]), vertexShader: zn.depth_vert, fragmentShader: zn.depth_frag }, normal: { uniforms: Li.merge([cn.common, cn.bumpmap, cn.normalmap, cn.displacementmap, { opacity: { value: 1 } }]), vertexShader: zn.normal_vert, fragmentShader: zn.normal_frag }, sprite: { uniforms: Li.merge([cn.sprite, cn.fog]), vertexShader: zn.sprite_vert, fragmentShader: zn.sprite_frag }, cube: { uniforms: { tCube: { value: null }, tFlip: { value: -1 }, opacity: { value: 1 } }, vertexShader: zn.cube_vert, fragmentShader: zn.cube_frag }, equirect: { uniforms: { tEquirect: { value: null } }, vertexShader: zn.equirect_vert, fragmentShader: zn.equirect_frag }, distanceRGBA: { uniforms: Li.merge([cn.common, cn.displacementmap, { referencePosition: { value: new mt() }, nearDistance: { value: 1 }, farDistance: { value: 1e3 } }]), vertexShader: zn.distanceRGBA_vert, fragmentShader: zn.distanceRGBA_frag }, shadow: { uniforms: Li.merge([cn.lights, cn.fog, { color: { value: new sn(0) }, opacity: { value: 1 } }]), vertexShader: zn.shadow_vert, fragmentShader: zn.shadow_frag } };
      function Kc() {
        var Q = null, te = !1, ae = null;
        function se(ue, le) {
          te !== !1 && (ae(ue, le), Q.requestAnimationFrame(se));
        }
        return { start: function() {
          te !== !0 && ae !== null && (Q.requestAnimationFrame(se), te = !0);
        }, stop: function() {
          te = !1;
        }, setAnimationLoop: function(ue) {
          ae = ue;
        }, setContext: function(ue) {
          Q = ue;
        } };
      }
      function ql(Q) {
        var te = /* @__PURE__ */ new WeakMap();
        return { get: function(ae) {
          return ae.isInterleavedBufferAttribute && (ae = ae.data), te.get(ae);
        }, remove: function(ae) {
          ae.isInterleavedBufferAttribute && (ae = ae.data);
          var se = te.get(ae);
          se && (Q.deleteBuffer(se.buffer), te.delete(ae));
        }, update: function(ae, se) {
          ae.isInterleavedBufferAttribute && (ae = ae.data);
          var ue = te.get(ae);
          ue === void 0 ? te.set(ae, function(le, de) {
            var pe = le.array, ve = le.dynamic ? Q.DYNAMIC_DRAW : Q.STATIC_DRAW, we = Q.createBuffer();
            Q.bindBuffer(de, we), Q.bufferData(de, pe, ve), le.onUploadCallback();
            var Me = Q.FLOAT;
            return pe instanceof Float32Array ? Me = Q.FLOAT : pe instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : pe instanceof Uint16Array ? Me = Q.UNSIGNED_SHORT : pe instanceof Int16Array ? Me = Q.SHORT : pe instanceof Uint32Array ? Me = Q.UNSIGNED_INT : pe instanceof Int32Array ? Me = Q.INT : pe instanceof Int8Array ? Me = Q.BYTE : pe instanceof Uint8Array && (Me = Q.UNSIGNED_BYTE), { buffer: we, type: Me, bytesPerElement: pe.BYTES_PER_ELEMENT, version: le.version };
          }(ae, se)) : ue.version < ae.version && (function(le, de, pe) {
            var ve = de.array, we = de.updateRange;
            Q.bindBuffer(pe, le), de.dynamic === !1 ? Q.bufferData(pe, ve, Q.STATIC_DRAW) : we.count === -1 ? Q.bufferSubData(pe, 0, ve) : we.count === 0 ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (Q.bufferSubData(pe, we.offset * ve.BYTES_PER_ELEMENT, ve.subarray(we.offset, we.offset + we.count)), we.count = -1);
          }(ue.buffer, ae, se), ue.version = ae.version);
        } };
      }
      function oo(Q, te, ae, se) {
        this._x = Q || 0, this._y = te || 0, this._z = ae || 0, this._order = se || oo.DefaultOrder;
      }
      function eu() {
        this.mask = 1;
      }
      ao.physical = { uniforms: Li.merge([ao.standard.uniforms, { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } }]), vertexShader: zn.meshphysical_vert, fragmentShader: zn.meshphysical_frag }, oo.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], oo.DefaultOrder = "XYZ", Object.defineProperties(oo.prototype, { x: { get: function() {
        return this._x;
      }, set: function(Q) {
        this._x = Q, this.onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(Q) {
        this._y = Q, this.onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(Q) {
        this._z = Q, this.onChangeCallback();
      } }, order: { get: function() {
        return this._order;
      }, set: function(Q) {
        this._order = Q, this.onChangeCallback();
      } } }), Object.assign(oo.prototype, { isEuler: !0, set: function(Q, te, ae, se) {
        return this._x = Q, this._y = te, this._z = ae, this._order = se || this._order, this.onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._order);
      }, copy: function(Q) {
        return this._x = Q._x, this._y = Q._y, this._z = Q._z, this._order = Q._order, this.onChangeCallback(), this;
      }, setFromRotationMatrix: function(Q, te, ae) {
        var se = Cn.clamp, ue = Q.elements, le = ue[0], de = ue[4], pe = ue[8], ve = ue[1], we = ue[5], Me = ue[9], Qe = ue[2], Se = ue[6], Ge = ue[10];
        return (te = te || this._order) === "XYZ" ? (this._y = Math.asin(se(pe, -1, 1)), Math.abs(pe) < 0.99999 ? (this._x = Math.atan2(-Me, Ge), this._z = Math.atan2(-de, le)) : (this._x = Math.atan2(Se, we), this._z = 0)) : te === "YXZ" ? (this._x = Math.asin(-se(Me, -1, 1)), Math.abs(Me) < 0.99999 ? (this._y = Math.atan2(pe, Ge), this._z = Math.atan2(ve, we)) : (this._y = Math.atan2(-Qe, le), this._z = 0)) : te === "ZXY" ? (this._x = Math.asin(se(Se, -1, 1)), Math.abs(Se) < 0.99999 ? (this._y = Math.atan2(-Qe, Ge), this._z = Math.atan2(-de, we)) : (this._y = 0, this._z = Math.atan2(ve, le))) : te === "ZYX" ? (this._y = Math.asin(-se(Qe, -1, 1)), Math.abs(Qe) < 0.99999 ? (this._x = Math.atan2(Se, Ge), this._z = Math.atan2(ve, le)) : (this._x = 0, this._z = Math.atan2(-de, we))) : te === "YZX" ? (this._z = Math.asin(se(ve, -1, 1)), Math.abs(ve) < 0.99999 ? (this._x = Math.atan2(-Me, we), this._y = Math.atan2(-Qe, le)) : (this._x = 0, this._y = Math.atan2(pe, Ge))) : te === "XZY" ? (this._z = Math.asin(-se(de, -1, 1)), Math.abs(de) < 0.99999 ? (this._x = Math.atan2(Se, we), this._y = Math.atan2(pe, le)) : (this._x = Math.atan2(-Me, Ge), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + te), this._order = te, ae !== !1 && this.onChangeCallback(), this;
      }, setFromQuaternion: function() {
        var Q = new An();
        return function(te, ae, se) {
          return Q.makeRotationFromQuaternion(te), this.setFromRotationMatrix(Q, ae, se);
        };
      }(), setFromVector3: function(Q, te) {
        return this.set(Q.x, Q.y, Q.z, te || this._order);
      }, reorder: function() {
        var Q = new ci();
        return function(te) {
          return Q.setFromEuler(this), this.setFromQuaternion(Q, te);
        };
      }(), equals: function(Q) {
        return Q._x === this._x && Q._y === this._y && Q._z === this._z && Q._order === this._order;
      }, fromArray: function(Q) {
        return this._x = Q[0], this._y = Q[1], this._z = Q[2], Q[3] !== void 0 && (this._order = Q[3]), this.onChangeCallback(), this;
      }, toArray: function(Q, te) {
        return Q === void 0 && (Q = []), te === void 0 && (te = 0), Q[te] = this._x, Q[te + 1] = this._y, Q[te + 2] = this._z, Q[te + 3] = this._order, Q;
      }, toVector3: function(Q) {
        return Q ? Q.set(this._x, this._y, this._z) : new mt(this._x, this._y, this._z);
      }, onChange: function(Q) {
        return this.onChangeCallback = Q, this;
      }, onChangeCallback: function() {
      } }), Object.assign(eu.prototype, { set: function(Q) {
        this.mask = 1 << Q | 0;
      }, enable: function(Q) {
        this.mask |= 1 << Q | 0;
      }, toggle: function(Q) {
        this.mask ^= 1 << Q | 0;
      }, disable: function(Q) {
        this.mask &= ~(1 << Q | 0);
      }, test: function(Q) {
        return (this.mask & Q.mask) != 0;
      } });
      var jl = 0;
      function jr() {
        Object.defineProperty(this, "id", { value: jl++ }), this.uuid = Cn.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = jr.DefaultUp.clone();
        var Q = new mt(), te = new oo(), ae = new ci(), se = new mt(1, 1, 1);
        te.onChange(function() {
          ae.setFromEuler(te, !1);
        }), ae.onChange(function() {
          te.setFromQuaternion(ae, void 0, !1);
        }), Object.defineProperties(this, { position: { enumerable: !0, value: Q }, rotation: { enumerable: !0, value: te }, quaternion: { enumerable: !0, value: ae }, scale: { enumerable: !0, value: se }, modelViewMatrix: { value: new An() }, normalMatrix: { value: new zi() } }), this.matrix = new An(), this.matrixWorld = new An(), this.matrixAutoUpdate = jr.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new eu(), this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {};
      }
      function Sa() {
        jr.call(this), this.type = "Camera", this.matrixWorldInverse = new An(), this.projectionMatrix = new An();
      }
      function Go(Q, te, ae, se, ue, le) {
        Sa.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = Q, this.right = te, this.top = ae, this.bottom = se, this.near = ue !== void 0 ? ue : 0.1, this.far = le !== void 0 ? le : 2e3, this.updateProjectionMatrix();
      }
      function qa(Q, te, ae, se, ue, le) {
        this.a = Q, this.b = te, this.c = ae, this.normal = se && se.isVector3 ? se : new mt(), this.vertexNormals = Array.isArray(se) ? se : [], this.color = ue && ue.isColor ? ue : new sn(), this.vertexColors = Array.isArray(ue) ? ue : [], this.materialIndex = le !== void 0 ? le : 0;
      }
      jr.DefaultUp = new mt(0, 1, 0), jr.DefaultMatrixAutoUpdate = !0, jr.prototype = Object.assign(Object.create(ce.prototype), { constructor: jr, isObject3D: !0, onBeforeRender: function() {
      }, onAfterRender: function() {
      }, applyMatrix: function(Q) {
        this.matrix.multiplyMatrices(Q, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale);
      }, applyQuaternion: function(Q) {
        return this.quaternion.premultiply(Q), this;
      }, setRotationFromAxisAngle: function(Q, te) {
        this.quaternion.setFromAxisAngle(Q, te);
      }, setRotationFromEuler: function(Q) {
        this.quaternion.setFromEuler(Q, !0);
      }, setRotationFromMatrix: function(Q) {
        this.quaternion.setFromRotationMatrix(Q);
      }, setRotationFromQuaternion: function(Q) {
        this.quaternion.copy(Q);
      }, rotateOnAxis: function() {
        var Q = new ci();
        return function(te, ae) {
          return Q.setFromAxisAngle(te, ae), this.quaternion.multiply(Q), this;
        };
      }(), rotateOnWorldAxis: function() {
        var Q = new ci();
        return function(te, ae) {
          return Q.setFromAxisAngle(te, ae), this.quaternion.premultiply(Q), this;
        };
      }(), rotateX: function() {
        var Q = new mt(1, 0, 0);
        return function(te) {
          return this.rotateOnAxis(Q, te);
        };
      }(), rotateY: function() {
        var Q = new mt(0, 1, 0);
        return function(te) {
          return this.rotateOnAxis(Q, te);
        };
      }(), rotateZ: function() {
        var Q = new mt(0, 0, 1);
        return function(te) {
          return this.rotateOnAxis(Q, te);
        };
      }(), translateOnAxis: function() {
        var Q = new mt();
        return function(te, ae) {
          return Q.copy(te).applyQuaternion(this.quaternion), this.position.add(Q.multiplyScalar(ae)), this;
        };
      }(), translateX: function() {
        var Q = new mt(1, 0, 0);
        return function(te) {
          return this.translateOnAxis(Q, te);
        };
      }(), translateY: function() {
        var Q = new mt(0, 1, 0);
        return function(te) {
          return this.translateOnAxis(Q, te);
        };
      }(), translateZ: function() {
        var Q = new mt(0, 0, 1);
        return function(te) {
          return this.translateOnAxis(Q, te);
        };
      }(), localToWorld: function(Q) {
        return Q.applyMatrix4(this.matrixWorld);
      }, worldToLocal: function() {
        var Q = new An();
        return function(te) {
          return te.applyMatrix4(Q.getInverse(this.matrixWorld));
        };
      }(), lookAt: function() {
        var Q = new An(), te = new mt();
        return function(ae, se, ue) {
          ae.isVector3 ? te.copy(ae) : te.set(ae, se, ue), this.isCamera ? Q.lookAt(this.position, te, this.up) : Q.lookAt(te, this.position, this.up), this.quaternion.setFromRotationMatrix(Q);
        };
      }(), add: function(Q) {
        if (arguments.length > 1) {
          for (var te = 0; te < arguments.length; te++)
            this.add(arguments[te]);
          return this;
        }
        return Q === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", Q), this) : (Q && Q.isObject3D ? (Q.parent !== null && Q.parent.remove(Q), Q.parent = this, Q.dispatchEvent({ type: "added" }), this.children.push(Q)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", Q), this);
      }, remove: function(Q) {
        if (arguments.length > 1) {
          for (var te = 0; te < arguments.length; te++)
            this.remove(arguments[te]);
          return this;
        }
        var ae = this.children.indexOf(Q);
        return ae !== -1 && (Q.parent = null, Q.dispatchEvent({ type: "removed" }), this.children.splice(ae, 1)), this;
      }, getObjectById: function(Q) {
        return this.getObjectByProperty("id", Q);
      }, getObjectByName: function(Q) {
        return this.getObjectByProperty("name", Q);
      }, getObjectByProperty: function(Q, te) {
        if (this[Q] === te)
          return this;
        for (var ae = 0, se = this.children.length; ae < se; ae++) {
          var ue = this.children[ae].getObjectByProperty(Q, te);
          if (ue !== void 0)
            return ue;
        }
      }, getWorldPosition: function(Q) {
        return Q === void 0 && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), Q = new mt()), this.updateMatrixWorld(!0), Q.setFromMatrixPosition(this.matrixWorld);
      }, getWorldQuaternion: function() {
        var Q = new mt(), te = new mt();
        return function(ae) {
          return ae === void 0 && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), ae = new ci()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Q, ae, te), ae;
        };
      }(), getWorldScale: function() {
        var Q = new mt(), te = new ci();
        return function(ae) {
          return ae === void 0 && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), ae = new mt()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Q, te, ae), ae;
        };
      }(), getWorldDirection: function() {
        var Q = new ci();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), te = new mt()), this.getWorldQuaternion(Q), te.set(0, 0, 1).applyQuaternion(Q);
        };
      }(), raycast: function() {
      }, traverse: function(Q) {
        Q(this);
        for (var te = this.children, ae = 0, se = te.length; ae < se; ae++)
          te[ae].traverse(Q);
      }, traverseVisible: function(Q) {
        if (this.visible !== !1) {
          Q(this);
          for (var te = this.children, ae = 0, se = te.length; ae < se; ae++)
            te[ae].traverseVisible(Q);
        }
      }, traverseAncestors: function(Q) {
        var te = this.parent;
        te !== null && (Q(te), te.traverseAncestors(Q));
      }, updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
      }, updateMatrixWorld: function(Q) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || Q) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, Q = !0);
        for (var te = this.children, ae = 0, se = te.length; ae < se; ae++)
          te[ae].updateMatrixWorld(Q);
      }, toJSON: function(Q) {
        var te = Q === void 0 || typeof Q == "string", ae = {};
        te && (Q = { geometries: {}, materials: {}, textures: {}, images: {}, shapes: {} }, ae.metadata = { version: 4.5, type: "Object", generator: "Object3D.toJSON" });
        var se = {};
        function ue(nt, ct) {
          return nt[ct.uuid] === void 0 && (nt[ct.uuid] = ct.toJSON(Q)), ct.uuid;
        }
        if (se.uuid = this.uuid, se.type = this.type, this.name !== "" && (se.name = this.name), this.castShadow === !0 && (se.castShadow = !0), this.receiveShadow === !0 && (se.receiveShadow = !0), this.visible === !1 && (se.visible = !1), this.frustumCulled === !1 && (se.frustumCulled = !1), this.renderOrder !== 0 && (se.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (se.userData = this.userData), se.layers = this.layers.mask, se.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (se.matrixAutoUpdate = !1), this.isMesh || this.isLine || this.isPoints) {
          se.geometry = ue(Q.geometries, this.geometry);
          var le = this.geometry.parameters;
          if (le !== void 0 && le.shapes !== void 0) {
            var de = le.shapes;
            if (Array.isArray(de))
              for (var pe = 0, ve = de.length; pe < ve; pe++) {
                var we = de[pe];
                ue(Q.shapes, we);
              }
            else
              ue(Q.shapes, de);
          }
        }
        if (this.material !== void 0)
          if (Array.isArray(this.material)) {
            var Me = [];
            for (pe = 0, ve = this.material.length; pe < ve; pe++)
              Me.push(ue(Q.materials, this.material[pe]));
            se.material = Me;
          } else
            se.material = ue(Q.materials, this.material);
        if (this.children.length > 0)
          for (se.children = [], pe = 0; pe < this.children.length; pe++)
            se.children.push(this.children[pe].toJSON(Q).object);
        if (te) {
          var Qe = Ze(Q.geometries), Se = Ze(Q.materials), Ge = Ze(Q.textures), ze = Ze(Q.images);
          de = Ze(Q.shapes), Qe.length > 0 && (ae.geometries = Qe), Se.length > 0 && (ae.materials = Se), Ge.length > 0 && (ae.textures = Ge), ze.length > 0 && (ae.images = ze), de.length > 0 && (ae.shapes = de);
        }
        return ae.object = se, ae;
        function Ze(nt) {
          var ct = [];
          for (var yt in nt) {
            var st = nt[yt];
            delete st.metadata, ct.push(st);
          }
          return ct;
        }
      }, clone: function(Q) {
        return new this.constructor().copy(this, Q);
      }, copy: function(Q, te) {
        if (te === void 0 && (te = !0), this.name = Q.name, this.up.copy(Q.up), this.position.copy(Q.position), this.quaternion.copy(Q.quaternion), this.scale.copy(Q.scale), this.matrix.copy(Q.matrix), this.matrixWorld.copy(Q.matrixWorld), this.matrixAutoUpdate = Q.matrixAutoUpdate, this.matrixWorldNeedsUpdate = Q.matrixWorldNeedsUpdate, this.layers.mask = Q.layers.mask, this.visible = Q.visible, this.castShadow = Q.castShadow, this.receiveShadow = Q.receiveShadow, this.frustumCulled = Q.frustumCulled, this.renderOrder = Q.renderOrder, this.userData = JSON.parse(JSON.stringify(Q.userData)), te === !0)
          for (var ae = 0; ae < Q.children.length; ae++) {
            var se = Q.children[ae];
            this.add(se.clone());
          }
        return this;
      } }), Sa.prototype = Object.assign(Object.create(jr.prototype), { constructor: Sa, isCamera: !0, copy: function(Q, te) {
        return jr.prototype.copy.call(this, Q, te), this.matrixWorldInverse.copy(Q.matrixWorldInverse), this.projectionMatrix.copy(Q.projectionMatrix), this;
      }, getWorldDirection: function() {
        var Q = new ci();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), te = new mt()), this.getWorldQuaternion(Q), te.set(0, 0, -1).applyQuaternion(Q);
        };
      }(), updateMatrixWorld: function(Q) {
        jr.prototype.updateMatrixWorld.call(this, Q), this.matrixWorldInverse.getInverse(this.matrixWorld);
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), Go.prototype = Object.assign(Object.create(Sa.prototype), { constructor: Go, isOrthographicCamera: !0, copy: function(Q, te) {
        return Sa.prototype.copy.call(this, Q, te), this.left = Q.left, this.right = Q.right, this.top = Q.top, this.bottom = Q.bottom, this.near = Q.near, this.far = Q.far, this.zoom = Q.zoom, this.view = Q.view === null ? null : Object.assign({}, Q.view), this;
      }, setViewOffset: function(Q, te, ae, se, ue, le) {
        this.view === null && (this.view = { enabled: !0, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = !0, this.view.fullWidth = Q, this.view.fullHeight = te, this.view.offsetX = ae, this.view.offsetY = se, this.view.width = ue, this.view.height = le, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var Q = (this.right - this.left) / (2 * this.zoom), te = (this.top - this.bottom) / (2 * this.zoom), ae = (this.right + this.left) / 2, se = (this.top + this.bottom) / 2, ue = ae - Q, le = ae + Q, de = se + te, pe = se - te;
        if (this.view !== null && this.view.enabled) {
          var ve = this.zoom / (this.view.width / this.view.fullWidth), we = this.zoom / (this.view.height / this.view.fullHeight), Me = (this.right - this.left) / this.view.width, Qe = (this.top - this.bottom) / this.view.height;
          le = (ue += Me * (this.view.offsetX / ve)) + Me * (this.view.width / ve), pe = (de -= Qe * (this.view.offsetY / we)) - Qe * (this.view.height / we);
        }
        this.projectionMatrix.makeOrthographic(ue, le, de, pe, this.near, this.far);
      }, toJSON: function(Q) {
        var te = jr.prototype.toJSON.call(this, Q);
        return te.object.zoom = this.zoom, te.object.left = this.left, te.object.right = this.right, te.object.top = this.top, te.object.bottom = this.bottom, te.object.near = this.near, te.object.far = this.far, this.view !== null && (te.object.view = Object.assign({}, this.view)), te;
      } }), Object.assign(qa.prototype, { clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        this.a = Q.a, this.b = Q.b, this.c = Q.c, this.normal.copy(Q.normal), this.color.copy(Q.color), this.materialIndex = Q.materialIndex;
        for (var te = 0, ae = Q.vertexNormals.length; te < ae; te++)
          this.vertexNormals[te] = Q.vertexNormals[te].clone();
        for (te = 0, ae = Q.vertexColors.length; te < ae; te++)
          this.vertexColors[te] = Q.vertexColors[te].clone();
        return this;
      } });
      var $l = 0;
      function mn() {
        Object.defineProperty(this, "id", { value: $l += 2 }), this.uuid = Cn.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = !1, this.verticesNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1;
      }
      function Nn(Q, te, ae) {
        if (Array.isArray(Q))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = Q, this.itemSize = te, this.count = Q !== void 0 ? Q.length / te : 0, this.normalized = ae === !0, this.dynamic = !1, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function ws(Q, te, ae) {
        Nn.call(this, new Int8Array(Q), te, ae);
      }
      function _s(Q, te, ae) {
        Nn.call(this, new Uint8Array(Q), te, ae);
      }
      function Cs(Q, te, ae) {
        Nn.call(this, new Uint8ClampedArray(Q), te, ae);
      }
      function Ss(Q, te, ae) {
        Nn.call(this, new Int16Array(Q), te, ae);
      }
      function so(Q, te, ae) {
        Nn.call(this, new Uint16Array(Q), te, ae);
      }
      function Is(Q, te, ae) {
        Nn.call(this, new Int32Array(Q), te, ae);
      }
      function co(Q, te, ae) {
        Nn.call(this, new Uint32Array(Q), te, ae);
      }
      function Gr(Q, te, ae) {
        Nn.call(this, new Float32Array(Q), te, ae);
      }
      function Ts(Q, te, ae) {
        Nn.call(this, new Float64Array(Q), te, ae);
      }
      function Pu() {
        this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1;
      }
      function Fu(Q) {
        if (Q.length === 0)
          return -1 / 0;
        for (var te = Q[0], ae = 1, se = Q.length; ae < se; ++ae)
          Q[ae] > te && (te = Q[ae]);
        return te;
      }
      mn.prototype = Object.assign(Object.create(ce.prototype), { constructor: mn, isGeometry: !0, applyMatrix: function(Q) {
        for (var te = new zi().getNormalMatrix(Q), ae = 0, se = this.vertices.length; ae < se; ae++)
          this.vertices[ae].applyMatrix4(Q);
        for (ae = 0, se = this.faces.length; ae < se; ae++) {
          var ue = this.faces[ae];
          ue.normal.applyMatrix3(te).normalize();
          for (var le = 0, de = ue.vertexNormals.length; le < de; le++)
            ue.vertexNormals[le].applyMatrix3(te).normalize();
        }
        return this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this;
      }, rotateX: function() {
        var Q = new An();
        return function(te) {
          return Q.makeRotationX(te), this.applyMatrix(Q), this;
        };
      }(), rotateY: function() {
        var Q = new An();
        return function(te) {
          return Q.makeRotationY(te), this.applyMatrix(Q), this;
        };
      }(), rotateZ: function() {
        var Q = new An();
        return function(te) {
          return Q.makeRotationZ(te), this.applyMatrix(Q), this;
        };
      }(), translate: function() {
        var Q = new An();
        return function(te, ae, se) {
          return Q.makeTranslation(te, ae, se), this.applyMatrix(Q), this;
        };
      }(), scale: function() {
        var Q = new An();
        return function(te, ae, se) {
          return Q.makeScale(te, ae, se), this.applyMatrix(Q), this;
        };
      }(), lookAt: function() {
        var Q = new jr();
        return function(te) {
          Q.lookAt(te), Q.updateMatrix(), this.applyMatrix(Q.matrix);
        };
      }(), fromBufferGeometry: function(Q) {
        var te = this, ae = Q.index !== null ? Q.index.array : void 0, se = Q.attributes, ue = se.position.array, le = se.normal !== void 0 ? se.normal.array : void 0, de = se.color !== void 0 ? se.color.array : void 0, pe = se.uv !== void 0 ? se.uv.array : void 0, ve = se.uv2 !== void 0 ? se.uv2.array : void 0;
        ve !== void 0 && (this.faceVertexUvs[1] = []);
        for (var we = [], Me = [], Qe = [], Se = 0, Ge = 0; Se < ue.length; Se += 3, Ge += 2)
          te.vertices.push(new mt(ue[Se], ue[Se + 1], ue[Se + 2])), le !== void 0 && we.push(new mt(le[Se], le[Se + 1], le[Se + 2])), de !== void 0 && te.colors.push(new sn(de[Se], de[Se + 1], de[Se + 2])), pe !== void 0 && Me.push(new wr(pe[Ge], pe[Ge + 1])), ve !== void 0 && Qe.push(new wr(ve[Ge], ve[Ge + 1]));
        function ze(st, Mt, Ot, dt) {
          var wt = new qa(st, Mt, Ot, le !== void 0 ? [we[st].clone(), we[Mt].clone(), we[Ot].clone()] : [], de !== void 0 ? [te.colors[st].clone(), te.colors[Mt].clone(), te.colors[Ot].clone()] : [], dt);
          te.faces.push(wt), pe !== void 0 && te.faceVertexUvs[0].push([Me[st].clone(), Me[Mt].clone(), Me[Ot].clone()]), ve !== void 0 && te.faceVertexUvs[1].push([Qe[st].clone(), Qe[Mt].clone(), Qe[Ot].clone()]);
        }
        var Ze = Q.groups;
        if (Ze.length > 0)
          for (Se = 0; Se < Ze.length; Se++)
            for (var nt = Ze[Se], ct = nt.start, yt = (Ge = ct, ct + nt.count); Ge < yt; Ge += 3)
              ae !== void 0 ? ze(ae[Ge], ae[Ge + 1], ae[Ge + 2], nt.materialIndex) : ze(Ge, Ge + 1, Ge + 2, nt.materialIndex);
        else if (ae !== void 0)
          for (Se = 0; Se < ae.length; Se += 3)
            ze(ae[Se], ae[Se + 1], ae[Se + 2]);
        else
          for (Se = 0; Se < ue.length / 3; Se += 3)
            ze(Se, Se + 1, Se + 2);
        return this.computeFaceNormals(), Q.boundingBox !== null && (this.boundingBox = Q.boundingBox.clone()), Q.boundingSphere !== null && (this.boundingSphere = Q.boundingSphere.clone()), this;
      }, center: function() {
        var Q = new mt();
        return function() {
          return this.computeBoundingBox(), this.boundingBox.getCenter(Q).negate(), this.translate(Q.x, Q.y, Q.z), this;
        };
      }(), normalize: function() {
        this.computeBoundingSphere();
        var Q = this.boundingSphere.center, te = this.boundingSphere.radius, ae = te === 0 ? 1 : 1 / te, se = new An();
        return se.set(ae, 0, 0, -ae * Q.x, 0, ae, 0, -ae * Q.y, 0, 0, ae, -ae * Q.z, 0, 0, 0, 1), this.applyMatrix(se), this;
      }, computeFaceNormals: function() {
        for (var Q = new mt(), te = new mt(), ae = 0, se = this.faces.length; ae < se; ae++) {
          var ue = this.faces[ae], le = this.vertices[ue.a], de = this.vertices[ue.b], pe = this.vertices[ue.c];
          Q.subVectors(pe, de), te.subVectors(le, de), Q.cross(te), Q.normalize(), ue.normal.copy(Q);
        }
      }, computeVertexNormals: function(Q) {
        var te, ae, se, ue, le, de;
        for (Q === void 0 && (Q = !0), de = new Array(this.vertices.length), te = 0, ae = this.vertices.length; te < ae; te++)
          de[te] = new mt();
        if (Q) {
          var pe, ve, we, Me = new mt(), Qe = new mt();
          for (se = 0, ue = this.faces.length; se < ue; se++)
            le = this.faces[se], pe = this.vertices[le.a], ve = this.vertices[le.b], we = this.vertices[le.c], Me.subVectors(we, ve), Qe.subVectors(pe, ve), Me.cross(Qe), de[le.a].add(Me), de[le.b].add(Me), de[le.c].add(Me);
        } else
          for (this.computeFaceNormals(), se = 0, ue = this.faces.length; se < ue; se++)
            de[(le = this.faces[se]).a].add(le.normal), de[le.b].add(le.normal), de[le.c].add(le.normal);
        for (te = 0, ae = this.vertices.length; te < ae; te++)
          de[te].normalize();
        for (se = 0, ue = this.faces.length; se < ue; se++) {
          var Se = (le = this.faces[se]).vertexNormals;
          Se.length === 3 ? (Se[0].copy(de[le.a]), Se[1].copy(de[le.b]), Se[2].copy(de[le.c])) : (Se[0] = de[le.a].clone(), Se[1] = de[le.b].clone(), Se[2] = de[le.c].clone());
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      }, computeFlatVertexNormals: function() {
        var Q, te, ae;
        for (this.computeFaceNormals(), Q = 0, te = this.faces.length; Q < te; Q++) {
          var se = (ae = this.faces[Q]).vertexNormals;
          se.length === 3 ? (se[0].copy(ae.normal), se[1].copy(ae.normal), se[2].copy(ae.normal)) : (se[0] = ae.normal.clone(), se[1] = ae.normal.clone(), se[2] = ae.normal.clone());
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      }, computeMorphNormals: function() {
        var Q, te, ae, se, ue;
        for (ae = 0, se = this.faces.length; ae < se; ae++)
          for ((ue = this.faces[ae]).__originalFaceNormal ? ue.__originalFaceNormal.copy(ue.normal) : ue.__originalFaceNormal = ue.normal.clone(), ue.__originalVertexNormals || (ue.__originalVertexNormals = []), Q = 0, te = ue.vertexNormals.length; Q < te; Q++)
            ue.__originalVertexNormals[Q] ? ue.__originalVertexNormals[Q].copy(ue.vertexNormals[Q]) : ue.__originalVertexNormals[Q] = ue.vertexNormals[Q].clone();
        var le = new mn();
        for (le.faces = this.faces, Q = 0, te = this.morphTargets.length; Q < te; Q++) {
          if (!this.morphNormals[Q]) {
            this.morphNormals[Q] = {}, this.morphNormals[Q].faceNormals = [], this.morphNormals[Q].vertexNormals = [];
            var de = this.morphNormals[Q].faceNormals, pe = this.morphNormals[Q].vertexNormals;
            for (ae = 0, se = this.faces.length; ae < se; ae++)
              ve = new mt(), we = { a: new mt(), b: new mt(), c: new mt() }, de.push(ve), pe.push(we);
          }
          var ve, we, Me = this.morphNormals[Q];
          for (le.vertices = this.morphTargets[Q].vertices, le.computeFaceNormals(), le.computeVertexNormals(), ae = 0, se = this.faces.length; ae < se; ae++)
            ue = this.faces[ae], ve = Me.faceNormals[ae], we = Me.vertexNormals[ae], ve.copy(ue.normal), we.a.copy(ue.vertexNormals[0]), we.b.copy(ue.vertexNormals[1]), we.c.copy(ue.vertexNormals[2]);
        }
        for (ae = 0, se = this.faces.length; ae < se; ae++)
          (ue = this.faces[ae]).normal = ue.__originalFaceNormal, ue.vertexNormals = ue.__originalVertexNormals;
      }, computeBoundingBox: function() {
        this.boundingBox === null && (this.boundingBox = new Ha()), this.boundingBox.setFromPoints(this.vertices);
      }, computeBoundingSphere: function() {
        this.boundingSphere === null && (this.boundingSphere = new Aa()), this.boundingSphere.setFromPoints(this.vertices);
      }, merge: function(Q, te, ae) {
        if (Q && Q.isGeometry) {
          var se, ue = this.vertices.length, le = this.vertices, de = Q.vertices, pe = this.faces, ve = Q.faces, we = this.faceVertexUvs[0], Me = Q.faceVertexUvs[0], Qe = this.colors, Se = Q.colors;
          ae === void 0 && (ae = 0), te !== void 0 && (se = new zi().getNormalMatrix(te));
          for (var Ge = 0, ze = de.length; Ge < ze; Ge++) {
            var Ze = de[Ge].clone();
            te !== void 0 && Ze.applyMatrix4(te), le.push(Ze);
          }
          for (Ge = 0, ze = Se.length; Ge < ze; Ge++)
            Qe.push(Se[Ge].clone());
          for (Ge = 0, ze = ve.length; Ge < ze; Ge++) {
            var nt, ct, yt, st = ve[Ge], Mt = st.vertexNormals, Ot = st.vertexColors;
            (nt = new qa(st.a + ue, st.b + ue, st.c + ue)).normal.copy(st.normal), se !== void 0 && nt.normal.applyMatrix3(se).normalize();
            for (var dt = 0, wt = Mt.length; dt < wt; dt++)
              ct = Mt[dt].clone(), se !== void 0 && ct.applyMatrix3(se).normalize(), nt.vertexNormals.push(ct);
            for (nt.color.copy(st.color), dt = 0, wt = Ot.length; dt < wt; dt++)
              yt = Ot[dt], nt.vertexColors.push(yt.clone());
            nt.materialIndex = st.materialIndex + ae, pe.push(nt);
          }
          for (Ge = 0, ze = Me.length; Ge < ze; Ge++) {
            var $t = Me[Ge], Pt = [];
            if ($t !== void 0) {
              for (dt = 0, wt = $t.length; dt < wt; dt++)
                Pt.push($t[dt].clone());
              we.push(Pt);
            }
          }
        } else
          console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", Q);
      }, mergeMesh: function(Q) {
        Q && Q.isMesh ? (Q.matrixAutoUpdate && Q.updateMatrix(), this.merge(Q.geometry, Q.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", Q);
      }, mergeVertices: function() {
        var Q, te, ae, se, ue, le, de, pe, ve = {}, we = [], Me = [], Qe = Math.pow(10, 4);
        for (ae = 0, se = this.vertices.length; ae < se; ae++)
          Q = this.vertices[ae], ve[te = Math.round(Q.x * Qe) + "_" + Math.round(Q.y * Qe) + "_" + Math.round(Q.z * Qe)] === void 0 ? (ve[te] = ae, we.push(this.vertices[ae]), Me[ae] = we.length - 1) : Me[ae] = Me[ve[te]];
        var Se = [];
        for (ae = 0, se = this.faces.length; ae < se; ae++) {
          (ue = this.faces[ae]).a = Me[ue.a], ue.b = Me[ue.b], ue.c = Me[ue.c], le = [ue.a, ue.b, ue.c];
          for (var Ge = 0; Ge < 3; Ge++)
            if (le[Ge] === le[(Ge + 1) % 3]) {
              Se.push(ae);
              break;
            }
        }
        for (ae = Se.length - 1; ae >= 0; ae--) {
          var ze = Se[ae];
          for (this.faces.splice(ze, 1), de = 0, pe = this.faceVertexUvs.length; de < pe; de++)
            this.faceVertexUvs[de].splice(ze, 1);
        }
        var Ze = this.vertices.length - we.length;
        return this.vertices = we, Ze;
      }, setFromPoints: function(Q) {
        this.vertices = [];
        for (var te = 0, ae = Q.length; te < ae; te++) {
          var se = Q[te];
          this.vertices.push(new mt(se.x, se.y, se.z || 0));
        }
        return this;
      }, sortFacesByMaterialIndex: function() {
        for (var Q = this.faces, te = Q.length, ae = 0; ae < te; ae++)
          Q[ae]._id = ae;
        Q.sort(function(ve, we) {
          return ve.materialIndex - we.materialIndex;
        });
        var se, ue, le = this.faceVertexUvs[0], de = this.faceVertexUvs[1];
        for (le && le.length === te && (se = []), de && de.length === te && (ue = []), ae = 0; ae < te; ae++) {
          var pe = Q[ae]._id;
          se && se.push(le[pe]), ue && ue.push(de[pe]);
        }
        se && (this.faceVertexUvs[0] = se), ue && (this.faceVertexUvs[1] = ue);
      }, toJSON: function() {
        var Q = { metadata: { version: 4.5, type: "Geometry", generator: "Geometry.toJSON" } };
        if (Q.uuid = this.uuid, Q.type = this.type, this.name !== "" && (Q.name = this.name), this.parameters !== void 0) {
          var te = this.parameters;
          for (var ae in te)
            te[ae] !== void 0 && (Q[ae] = te[ae]);
          return Q;
        }
        for (var se = [], ue = 0; ue < this.vertices.length; ue++) {
          var le = this.vertices[ue];
          se.push(le.x, le.y, le.z);
        }
        var de = [], pe = [], ve = {}, we = [], Me = {}, Qe = [], Se = {};
        for (ue = 0; ue < this.faces.length; ue++) {
          var Ge = this.faces[ue], ze = this.faceVertexUvs[0][ue] !== void 0, Ze = Ge.normal.length() > 0, nt = Ge.vertexNormals.length > 0, ct = Ge.color.r !== 1 || Ge.color.g !== 1 || Ge.color.b !== 1, yt = Ge.vertexColors.length > 0, st = 0;
          if (st = wt(st = wt(st = wt(st = wt(st = wt(st = wt(st = wt(st = wt(st, 0, 0), 1, !0), 2, !1), 3, ze), 4, Ze), 5, nt), 6, ct), 7, yt), de.push(st), de.push(Ge.a, Ge.b, Ge.c), de.push(Ge.materialIndex), ze) {
            var Mt = this.faceVertexUvs[0][ue];
            de.push(er(Mt[0]), er(Mt[1]), er(Mt[2]));
          }
          if (Ze && de.push($t(Ge.normal)), nt) {
            var Ot = Ge.vertexNormals;
            de.push($t(Ot[0]), $t(Ot[1]), $t(Ot[2]));
          }
          if (ct && de.push(Pt(Ge.color)), yt) {
            var dt = Ge.vertexColors;
            de.push(Pt(dt[0]), Pt(dt[1]), Pt(dt[2]));
          }
        }
        function wt(Ht, ir, dr) {
          return dr ? Ht | 1 << ir : Ht & ~(1 << ir);
        }
        function $t(Ht) {
          var ir = Ht.x.toString() + Ht.y.toString() + Ht.z.toString();
          return ve[ir] !== void 0 || (ve[ir] = pe.length / 3, pe.push(Ht.x, Ht.y, Ht.z)), ve[ir];
        }
        function Pt(Ht) {
          var ir = Ht.r.toString() + Ht.g.toString() + Ht.b.toString();
          return Me[ir] !== void 0 || (Me[ir] = we.length, we.push(Ht.getHex())), Me[ir];
        }
        function er(Ht) {
          var ir = Ht.x.toString() + Ht.y.toString();
          return Se[ir] !== void 0 || (Se[ir] = Qe.length / 2, Qe.push(Ht.x, Ht.y)), Se[ir];
        }
        return Q.data = {}, Q.data.vertices = se, Q.data.normals = pe, we.length > 0 && (Q.data.colors = we), Qe.length > 0 && (Q.data.uvs = [Qe]), Q.data.faces = de, Q;
      }, clone: function() {
        return new mn().copy(this);
      }, copy: function(Q) {
        var te, ae, se, ue, le, de;
        this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = Q.name;
        var pe = Q.vertices;
        for (te = 0, ae = pe.length; te < ae; te++)
          this.vertices.push(pe[te].clone());
        var ve = Q.colors;
        for (te = 0, ae = ve.length; te < ae; te++)
          this.colors.push(ve[te].clone());
        var we = Q.faces;
        for (te = 0, ae = we.length; te < ae; te++)
          this.faces.push(we[te].clone());
        for (te = 0, ae = Q.faceVertexUvs.length; te < ae; te++) {
          var Me = Q.faceVertexUvs[te];
          for (this.faceVertexUvs[te] === void 0 && (this.faceVertexUvs[te] = []), se = 0, ue = Me.length; se < ue; se++) {
            var Qe = Me[se], Se = [];
            for (le = 0, de = Qe.length; le < de; le++) {
              var Ge = Qe[le];
              Se.push(Ge.clone());
            }
            this.faceVertexUvs[te].push(Se);
          }
        }
        var ze = Q.morphTargets;
        for (te = 0, ae = ze.length; te < ae; te++) {
          var Ze = {};
          if (Ze.name = ze[te].name, ze[te].vertices !== void 0)
            for (Ze.vertices = [], se = 0, ue = ze[te].vertices.length; se < ue; se++)
              Ze.vertices.push(ze[te].vertices[se].clone());
          if (ze[te].normals !== void 0)
            for (Ze.normals = [], se = 0, ue = ze[te].normals.length; se < ue; se++)
              Ze.normals.push(ze[te].normals[se].clone());
          this.morphTargets.push(Ze);
        }
        var nt = Q.morphNormals;
        for (te = 0, ae = nt.length; te < ae; te++) {
          var ct = {};
          if (nt[te].vertexNormals !== void 0)
            for (ct.vertexNormals = [], se = 0, ue = nt[te].vertexNormals.length; se < ue; se++) {
              var yt = nt[te].vertexNormals[se], st = {};
              st.a = yt.a.clone(), st.b = yt.b.clone(), st.c = yt.c.clone(), ct.vertexNormals.push(st);
            }
          if (nt[te].faceNormals !== void 0)
            for (ct.faceNormals = [], se = 0, ue = nt[te].faceNormals.length; se < ue; se++)
              ct.faceNormals.push(nt[te].faceNormals[se].clone());
          this.morphNormals.push(ct);
        }
        var Mt = Q.skinWeights;
        for (te = 0, ae = Mt.length; te < ae; te++)
          this.skinWeights.push(Mt[te].clone());
        var Ot = Q.skinIndices;
        for (te = 0, ae = Ot.length; te < ae; te++)
          this.skinIndices.push(Ot[te].clone());
        var dt = Q.lineDistances;
        for (te = 0, ae = dt.length; te < ae; te++)
          this.lineDistances.push(dt[te]);
        var wt = Q.boundingBox;
        wt !== null && (this.boundingBox = wt.clone());
        var $t = Q.boundingSphere;
        return $t !== null && (this.boundingSphere = $t.clone()), this.elementsNeedUpdate = Q.elementsNeedUpdate, this.verticesNeedUpdate = Q.verticesNeedUpdate, this.uvsNeedUpdate = Q.uvsNeedUpdate, this.normalsNeedUpdate = Q.normalsNeedUpdate, this.colorsNeedUpdate = Q.colorsNeedUpdate, this.lineDistancesNeedUpdate = Q.lineDistancesNeedUpdate, this.groupsNeedUpdate = Q.groupsNeedUpdate, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Object.defineProperty(Nn.prototype, "needsUpdate", { set: function(Q) {
        Q === !0 && this.version++;
      } }), Object.assign(Nn.prototype, { isBufferAttribute: !0, onUploadCallback: function() {
      }, setArray: function(Q) {
        if (Array.isArray(Q))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        return this.count = Q !== void 0 ? Q.length / this.itemSize : 0, this.array = Q, this;
      }, setDynamic: function(Q) {
        return this.dynamic = Q, this;
      }, copy: function(Q) {
        return this.name = Q.name, this.array = new Q.array.constructor(Q.array), this.itemSize = Q.itemSize, this.count = Q.count, this.normalized = Q.normalized, this.dynamic = Q.dynamic, this;
      }, copyAt: function(Q, te, ae) {
        Q *= this.itemSize, ae *= te.itemSize;
        for (var se = 0, ue = this.itemSize; se < ue; se++)
          this.array[Q + se] = te.array[ae + se];
        return this;
      }, copyArray: function(Q) {
        return this.array.set(Q), this;
      }, copyColorsArray: function(Q) {
        for (var te = this.array, ae = 0, se = 0, ue = Q.length; se < ue; se++) {
          var le = Q[se];
          le === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", se), le = new sn()), te[ae++] = le.r, te[ae++] = le.g, te[ae++] = le.b;
        }
        return this;
      }, copyVector2sArray: function(Q) {
        for (var te = this.array, ae = 0, se = 0, ue = Q.length; se < ue; se++) {
          var le = Q[se];
          le === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", se), le = new wr()), te[ae++] = le.x, te[ae++] = le.y;
        }
        return this;
      }, copyVector3sArray: function(Q) {
        for (var te = this.array, ae = 0, se = 0, ue = Q.length; se < ue; se++) {
          var le = Q[se];
          le === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", se), le = new mt()), te[ae++] = le.x, te[ae++] = le.y, te[ae++] = le.z;
        }
        return this;
      }, copyVector4sArray: function(Q) {
        for (var te = this.array, ae = 0, se = 0, ue = Q.length; se < ue; se++) {
          var le = Q[se];
          le === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", se), le = new Zn()), te[ae++] = le.x, te[ae++] = le.y, te[ae++] = le.z, te[ae++] = le.w;
        }
        return this;
      }, set: function(Q, te) {
        return te === void 0 && (te = 0), this.array.set(Q, te), this;
      }, getX: function(Q) {
        return this.array[Q * this.itemSize];
      }, setX: function(Q, te) {
        return this.array[Q * this.itemSize] = te, this;
      }, getY: function(Q) {
        return this.array[Q * this.itemSize + 1];
      }, setY: function(Q, te) {
        return this.array[Q * this.itemSize + 1] = te, this;
      }, getZ: function(Q) {
        return this.array[Q * this.itemSize + 2];
      }, setZ: function(Q, te) {
        return this.array[Q * this.itemSize + 2] = te, this;
      }, getW: function(Q) {
        return this.array[Q * this.itemSize + 3];
      }, setW: function(Q, te) {
        return this.array[Q * this.itemSize + 3] = te, this;
      }, setXY: function(Q, te, ae) {
        return Q *= this.itemSize, this.array[Q + 0] = te, this.array[Q + 1] = ae, this;
      }, setXYZ: function(Q, te, ae, se) {
        return Q *= this.itemSize, this.array[Q + 0] = te, this.array[Q + 1] = ae, this.array[Q + 2] = se, this;
      }, setXYZW: function(Q, te, ae, se, ue) {
        return Q *= this.itemSize, this.array[Q + 0] = te, this.array[Q + 1] = ae, this.array[Q + 2] = se, this.array[Q + 3] = ue, this;
      }, onUpload: function(Q) {
        return this.onUploadCallback = Q, this;
      }, clone: function() {
        return new this.constructor(this.array, this.itemSize).copy(this);
      } }), ws.prototype = Object.create(Nn.prototype), ws.prototype.constructor = ws, _s.prototype = Object.create(Nn.prototype), _s.prototype.constructor = _s, Cs.prototype = Object.create(Nn.prototype), Cs.prototype.constructor = Cs, Ss.prototype = Object.create(Nn.prototype), Ss.prototype.constructor = Ss, so.prototype = Object.create(Nn.prototype), so.prototype.constructor = so, Is.prototype = Object.create(Nn.prototype), Is.prototype.constructor = Is, co.prototype = Object.create(Nn.prototype), co.prototype.constructor = co, Gr.prototype = Object.create(Nn.prototype), Gr.prototype.constructor = Gr, Ts.prototype = Object.create(Nn.prototype), Ts.prototype.constructor = Ts, Object.assign(Pu.prototype, { computeGroups: function(Q) {
        for (var te, ae = [], se = void 0, ue = Q.faces, le = 0; le < ue.length; le++) {
          var de = ue[le];
          de.materialIndex !== se && (se = de.materialIndex, te !== void 0 && (te.count = 3 * le - te.start, ae.push(te)), te = { start: 3 * le, materialIndex: se });
        }
        te !== void 0 && (te.count = 3 * le - te.start, ae.push(te)), this.groups = ae;
      }, fromGeometry: function(Q) {
        var te, ae = Q.faces, se = Q.vertices, ue = Q.faceVertexUvs, le = ue[0] && ue[0].length > 0, de = ue[1] && ue[1].length > 0, pe = Q.morphTargets, ve = pe.length;
        if (ve > 0) {
          te = [];
          for (var we = 0; we < ve; we++)
            te[we] = [];
          this.morphTargets.position = te;
        }
        var Me, Qe = Q.morphNormals, Se = Qe.length;
        if (Se > 0) {
          for (Me = [], we = 0; we < Se; we++)
            Me[we] = [];
          this.morphTargets.normal = Me;
        }
        var Ge = Q.skinIndices, ze = Q.skinWeights, Ze = Ge.length === se.length, nt = ze.length === se.length;
        for (se.length > 0 && ae.length === 0 && console.error("THREE.DirectGeometry: Faceless geometries are not supported."), we = 0; we < ae.length; we++) {
          var ct = ae[we];
          this.vertices.push(se[ct.a], se[ct.b], se[ct.c]);
          var yt = ct.vertexNormals;
          if (yt.length === 3)
            this.normals.push(yt[0], yt[1], yt[2]);
          else {
            var st = ct.normal;
            this.normals.push(st, st, st);
          }
          var Mt, Ot = ct.vertexColors;
          if (Ot.length === 3)
            this.colors.push(Ot[0], Ot[1], Ot[2]);
          else {
            var dt = ct.color;
            this.colors.push(dt, dt, dt);
          }
          le === !0 && ((Mt = ue[0][we]) !== void 0 ? this.uvs.push(Mt[0], Mt[1], Mt[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", we), this.uvs.push(new wr(), new wr(), new wr()))), de === !0 && ((Mt = ue[1][we]) !== void 0 ? this.uvs2.push(Mt[0], Mt[1], Mt[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", we), this.uvs2.push(new wr(), new wr(), new wr())));
          for (var wt = 0; wt < ve; wt++) {
            var $t = pe[wt].vertices;
            te[wt].push($t[ct.a], $t[ct.b], $t[ct.c]);
          }
          for (wt = 0; wt < Se; wt++) {
            var Pt = Qe[wt].vertexNormals[we];
            Me[wt].push(Pt.a, Pt.b, Pt.c);
          }
          Ze && this.skinIndices.push(Ge[ct.a], Ge[ct.b], Ge[ct.c]), nt && this.skinWeights.push(ze[ct.a], ze[ct.b], ze[ct.c]);
        }
        return this.computeGroups(Q), this.verticesNeedUpdate = Q.verticesNeedUpdate, this.normalsNeedUpdate = Q.normalsNeedUpdate, this.colorsNeedUpdate = Q.colorsNeedUpdate, this.uvsNeedUpdate = Q.uvsNeedUpdate, this.groupsNeedUpdate = Q.groupsNeedUpdate, this;
      } });
      var Vl = 1;
      function Jr() {
        Object.defineProperty(this, "id", { value: Vl += 2 }), this.uuid = Cn.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = { start: 0, count: 1 / 0 }, this.userData = {};
      }
      function Uo(Q, te, ae, se, ue, le) {
        mn.call(this), this.type = "BoxGeometry", this.parameters = { width: Q, height: te, depth: ae, widthSegments: se, heightSegments: ue, depthSegments: le }, this.fromBufferGeometry(new uo(Q, te, ae, se, ue, le)), this.mergeVertices();
      }
      function uo(Q, te, ae, se, ue, le) {
        Jr.call(this), this.type = "BoxBufferGeometry", this.parameters = { width: Q, height: te, depth: ae, widthSegments: se, heightSegments: ue, depthSegments: le };
        var de = this;
        Q = Q || 1, te = te || 1, ae = ae || 1, se = Math.floor(se) || 1, ue = Math.floor(ue) || 1;
        var pe = [], ve = [], we = [], Me = [], Qe = 0, Se = 0;
        function Ge(ze, Ze, nt, ct, yt, st, Mt, Ot, dt, wt, $t) {
          var Pt, er, Ht = st / dt, ir = Mt / wt, dr = st / 2, vr = Mt / 2, pr = Ot / 2, Or = dt + 1, Mr = wt + 1, hr = 0, Cr = 0, lr = new mt();
          for (er = 0; er < Mr; er++) {
            var Yr = er * ir - vr;
            for (Pt = 0; Pt < Or; Pt++) {
              var Qr = Pt * Ht - dr;
              lr[ze] = Qr * ct, lr[Ze] = Yr * yt, lr[nt] = pr, ve.push(lr.x, lr.y, lr.z), lr[ze] = 0, lr[Ze] = 0, lr[nt] = Ot > 0 ? 1 : -1, we.push(lr.x, lr.y, lr.z), Me.push(Pt / dt), Me.push(1 - er / wt), hr += 1;
            }
          }
          for (er = 0; er < wt; er++)
            for (Pt = 0; Pt < dt; Pt++) {
              var un = Qe + Pt + Or * er, yn = Qe + Pt + Or * (er + 1), ni = Qe + (Pt + 1) + Or * (er + 1), Bi = Qe + (Pt + 1) + Or * er;
              pe.push(un, yn, Bi), pe.push(yn, ni, Bi), Cr += 6;
            }
          de.addGroup(Se, Cr, $t), Se += Cr, Qe += hr;
        }
        Ge("z", "y", "x", -1, -1, ae, te, Q, le = Math.floor(le) || 1, ue, 0), Ge("z", "y", "x", 1, -1, ae, te, -Q, le, ue, 1), Ge("x", "z", "y", 1, 1, Q, ae, te, se, le, 2), Ge("x", "z", "y", 1, -1, Q, ae, -te, se, le, 3), Ge("x", "y", "z", 1, -1, Q, te, ae, se, ue, 4), Ge("x", "y", "z", -1, -1, Q, te, -ae, se, ue, 5), this.setIndex(pe), this.addAttribute("position", new Gr(ve, 3)), this.addAttribute("normal", new Gr(we, 3)), this.addAttribute("uv", new Gr(Me, 2));
      }
      function Rs(Q, te, ae, se) {
        mn.call(this), this.type = "PlaneGeometry", this.parameters = { width: Q, height: te, widthSegments: ae, heightSegments: se }, this.fromBufferGeometry(new lo(Q, te, ae, se)), this.mergeVertices();
      }
      function lo(Q, te, ae, se) {
        Jr.call(this), this.type = "PlaneBufferGeometry", this.parameters = { width: Q, height: te, widthSegments: ae, heightSegments: se };
        var ue, le, de = (Q = Q || 1) / 2, pe = (te = te || 1) / 2, ve = Math.floor(ae) || 1, we = Math.floor(se) || 1, Me = ve + 1, Qe = we + 1, Se = Q / ve, Ge = te / we, ze = [], Ze = [], nt = [], ct = [];
        for (le = 0; le < Qe; le++) {
          var yt = le * Ge - pe;
          for (ue = 0; ue < Me; ue++) {
            var st = ue * Se - de;
            Ze.push(st, -yt, 0), nt.push(0, 0, 1), ct.push(ue / ve), ct.push(1 - le / we);
          }
        }
        for (le = 0; le < we; le++)
          for (ue = 0; ue < ve; ue++) {
            var Mt = ue + Me * le, Ot = ue + Me * (le + 1), dt = ue + 1 + Me * (le + 1), wt = ue + 1 + Me * le;
            ze.push(Mt, Ot, wt), ze.push(Ot, dt, wt);
          }
        this.setIndex(ze), this.addAttribute("position", new Gr(Ze, 3)), this.addAttribute("normal", new Gr(nt, 3)), this.addAttribute("uv", new Gr(ct, 2));
      }
      Jr.prototype = Object.assign(Object.create(ce.prototype), { constructor: Jr, isBufferGeometry: !0, getIndex: function() {
        return this.index;
      }, setIndex: function(Q) {
        Array.isArray(Q) ? this.index = new (Fu(Q) > 65535 ? co : so)(Q, 1) : this.index = Q;
      }, addAttribute: function(Q, te) {
        return te && te.isBufferAttribute || te && te.isInterleavedBufferAttribute ? Q === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(te), this) : (this.attributes[Q] = te, this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.addAttribute(Q, new Nn(arguments[1], arguments[2])));
      }, getAttribute: function(Q) {
        return this.attributes[Q];
      }, removeAttribute: function(Q) {
        return delete this.attributes[Q], this;
      }, addGroup: function(Q, te, ae) {
        this.groups.push({ start: Q, count: te, materialIndex: ae !== void 0 ? ae : 0 });
      }, clearGroups: function() {
        this.groups = [];
      }, setDrawRange: function(Q, te) {
        this.drawRange.start = Q, this.drawRange.count = te;
      }, applyMatrix: function(Q) {
        var te = this.attributes.position;
        te !== void 0 && (Q.applyToBufferAttribute(te), te.needsUpdate = !0);
        var ae = this.attributes.normal;
        return ae !== void 0 && (new zi().getNormalMatrix(Q).applyToBufferAttribute(ae), ae.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
      }, rotateX: function() {
        var Q = new An();
        return function(te) {
          return Q.makeRotationX(te), this.applyMatrix(Q), this;
        };
      }(), rotateY: function() {
        var Q = new An();
        return function(te) {
          return Q.makeRotationY(te), this.applyMatrix(Q), this;
        };
      }(), rotateZ: function() {
        var Q = new An();
        return function(te) {
          return Q.makeRotationZ(te), this.applyMatrix(Q), this;
        };
      }(), translate: function() {
        var Q = new An();
        return function(te, ae, se) {
          return Q.makeTranslation(te, ae, se), this.applyMatrix(Q), this;
        };
      }(), scale: function() {
        var Q = new An();
        return function(te, ae, se) {
          return Q.makeScale(te, ae, se), this.applyMatrix(Q), this;
        };
      }(), lookAt: function() {
        var Q = new jr();
        return function(te) {
          Q.lookAt(te), Q.updateMatrix(), this.applyMatrix(Q.matrix);
        };
      }(), center: function() {
        var Q = new mt();
        return function() {
          return this.computeBoundingBox(), this.boundingBox.getCenter(Q).negate(), this.translate(Q.x, Q.y, Q.z), this;
        };
      }(), setFromObject: function(Q) {
        var te = Q.geometry;
        if (Q.isPoints || Q.isLine) {
          var ae = new Gr(3 * te.vertices.length, 3), se = new Gr(3 * te.colors.length, 3);
          if (this.addAttribute("position", ae.copyVector3sArray(te.vertices)), this.addAttribute("color", se.copyColorsArray(te.colors)), te.lineDistances && te.lineDistances.length === te.vertices.length) {
            var ue = new Gr(te.lineDistances.length, 1);
            this.addAttribute("lineDistance", ue.copyArray(te.lineDistances));
          }
          te.boundingSphere !== null && (this.boundingSphere = te.boundingSphere.clone()), te.boundingBox !== null && (this.boundingBox = te.boundingBox.clone());
        } else
          Q.isMesh && te && te.isGeometry && this.fromGeometry(te);
        return this;
      }, setFromPoints: function(Q) {
        for (var te = [], ae = 0, se = Q.length; ae < se; ae++) {
          var ue = Q[ae];
          te.push(ue.x, ue.y, ue.z || 0);
        }
        return this.addAttribute("position", new Gr(te, 3)), this;
      }, updateFromObject: function(Q) {
        var te, ae = Q.geometry;
        if (Q.isMesh) {
          var se = ae.__directGeometry;
          if (ae.elementsNeedUpdate === !0 && (se = void 0, ae.elementsNeedUpdate = !1), se === void 0)
            return this.fromGeometry(ae);
          se.verticesNeedUpdate = ae.verticesNeedUpdate, se.normalsNeedUpdate = ae.normalsNeedUpdate, se.colorsNeedUpdate = ae.colorsNeedUpdate, se.uvsNeedUpdate = ae.uvsNeedUpdate, se.groupsNeedUpdate = ae.groupsNeedUpdate, ae.verticesNeedUpdate = !1, ae.normalsNeedUpdate = !1, ae.colorsNeedUpdate = !1, ae.uvsNeedUpdate = !1, ae.groupsNeedUpdate = !1, ae = se;
        }
        return ae.verticesNeedUpdate === !0 && ((te = this.attributes.position) !== void 0 && (te.copyVector3sArray(ae.vertices), te.needsUpdate = !0), ae.verticesNeedUpdate = !1), ae.normalsNeedUpdate === !0 && ((te = this.attributes.normal) !== void 0 && (te.copyVector3sArray(ae.normals), te.needsUpdate = !0), ae.normalsNeedUpdate = !1), ae.colorsNeedUpdate === !0 && ((te = this.attributes.color) !== void 0 && (te.copyColorsArray(ae.colors), te.needsUpdate = !0), ae.colorsNeedUpdate = !1), ae.uvsNeedUpdate && ((te = this.attributes.uv) !== void 0 && (te.copyVector2sArray(ae.uvs), te.needsUpdate = !0), ae.uvsNeedUpdate = !1), ae.lineDistancesNeedUpdate && ((te = this.attributes.lineDistance) !== void 0 && (te.copyArray(ae.lineDistances), te.needsUpdate = !0), ae.lineDistancesNeedUpdate = !1), ae.groupsNeedUpdate && (ae.computeGroups(Q.geometry), this.groups = ae.groups, ae.groupsNeedUpdate = !1), this;
      }, fromGeometry: function(Q) {
        return Q.__directGeometry = new Pu().fromGeometry(Q), this.fromDirectGeometry(Q.__directGeometry);
      }, fromDirectGeometry: function(Q) {
        var te = new Float32Array(3 * Q.vertices.length);
        if (this.addAttribute("position", new Nn(te, 3).copyVector3sArray(Q.vertices)), Q.normals.length > 0) {
          var ae = new Float32Array(3 * Q.normals.length);
          this.addAttribute("normal", new Nn(ae, 3).copyVector3sArray(Q.normals));
        }
        if (Q.colors.length > 0) {
          var se = new Float32Array(3 * Q.colors.length);
          this.addAttribute("color", new Nn(se, 3).copyColorsArray(Q.colors));
        }
        if (Q.uvs.length > 0) {
          var ue = new Float32Array(2 * Q.uvs.length);
          this.addAttribute("uv", new Nn(ue, 2).copyVector2sArray(Q.uvs));
        }
        if (Q.uvs2.length > 0) {
          var le = new Float32Array(2 * Q.uvs2.length);
          this.addAttribute("uv2", new Nn(le, 2).copyVector2sArray(Q.uvs2));
        }
        for (var de in this.groups = Q.groups, Q.morphTargets) {
          for (var pe = [], ve = Q.morphTargets[de], we = 0, Me = ve.length; we < Me; we++) {
            var Qe = ve[we], Se = new Gr(3 * Qe.length, 3);
            pe.push(Se.copyVector3sArray(Qe));
          }
          this.morphAttributes[de] = pe;
        }
        if (Q.skinIndices.length > 0) {
          var Ge = new Gr(4 * Q.skinIndices.length, 4);
          this.addAttribute("skinIndex", Ge.copyVector4sArray(Q.skinIndices));
        }
        if (Q.skinWeights.length > 0) {
          var ze = new Gr(4 * Q.skinWeights.length, 4);
          this.addAttribute("skinWeight", ze.copyVector4sArray(Q.skinWeights));
        }
        return Q.boundingSphere !== null && (this.boundingSphere = Q.boundingSphere.clone()), Q.boundingBox !== null && (this.boundingBox = Q.boundingBox.clone()), this;
      }, computeBoundingBox: function() {
        this.boundingBox === null && (this.boundingBox = new Ha());
        var Q = this.attributes.position;
        Q !== void 0 ? this.boundingBox.setFromBufferAttribute(Q) : this.boundingBox.makeEmpty(), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
      }, computeBoundingSphere: function() {
        var Q = new Ha(), te = new mt();
        return function() {
          this.boundingSphere === null && (this.boundingSphere = new Aa());
          var ae = this.attributes.position;
          if (ae) {
            var se = this.boundingSphere.center;
            Q.setFromBufferAttribute(ae), Q.getCenter(se);
            for (var ue = 0, le = 0, de = ae.count; le < de; le++)
              te.x = ae.getX(le), te.y = ae.getY(le), te.z = ae.getZ(le), ue = Math.max(ue, se.distanceToSquared(te));
            this.boundingSphere.radius = Math.sqrt(ue), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
          }
        };
      }(), computeFaceNormals: function() {
      }, computeVertexNormals: function() {
        var Q = this.index, te = this.attributes, ae = this.groups;
        if (te.position) {
          var se = te.position.array;
          if (te.normal === void 0)
            this.addAttribute("normal", new Nn(new Float32Array(se.length), 3));
          else
            for (var ue = te.normal.array, le = 0, de = ue.length; le < de; le++)
              ue[le] = 0;
          var pe, ve, we, Me = te.normal.array, Qe = new mt(), Se = new mt(), Ge = new mt(), ze = new mt(), Ze = new mt();
          if (Q) {
            var nt = Q.array;
            ae.length === 0 && this.addGroup(0, nt.length);
            for (var ct = 0, yt = ae.length; ct < yt; ++ct) {
              var st = ae[ct], Mt = st.start;
              for (le = Mt, de = Mt + st.count; le < de; le += 3)
                pe = 3 * nt[le + 0], ve = 3 * nt[le + 1], we = 3 * nt[le + 2], Qe.fromArray(se, pe), Se.fromArray(se, ve), Ge.fromArray(se, we), ze.subVectors(Ge, Se), Ze.subVectors(Qe, Se), ze.cross(Ze), Me[pe] += ze.x, Me[pe + 1] += ze.y, Me[pe + 2] += ze.z, Me[ve] += ze.x, Me[ve + 1] += ze.y, Me[ve + 2] += ze.z, Me[we] += ze.x, Me[we + 1] += ze.y, Me[we + 2] += ze.z;
            }
          } else
            for (le = 0, de = se.length; le < de; le += 9)
              Qe.fromArray(se, le), Se.fromArray(se, le + 3), Ge.fromArray(se, le + 6), ze.subVectors(Ge, Se), Ze.subVectors(Qe, Se), ze.cross(Ze), Me[le] = ze.x, Me[le + 1] = ze.y, Me[le + 2] = ze.z, Me[le + 3] = ze.x, Me[le + 4] = ze.y, Me[le + 5] = ze.z, Me[le + 6] = ze.x, Me[le + 7] = ze.y, Me[le + 8] = ze.z;
          this.normalizeNormals(), te.normal.needsUpdate = !0;
        }
      }, merge: function(Q, te) {
        if (Q && Q.isBufferGeometry) {
          te === void 0 && (te = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
          var ae = this.attributes;
          for (var se in ae)
            if (Q.attributes[se] !== void 0)
              for (var ue = ae[se].array, le = Q.attributes[se], de = le.array, pe = 0, ve = le.itemSize * te; pe < de.length; pe++, ve++)
                ue[ve] = de[pe];
          return this;
        }
        console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", Q);
      }, normalizeNormals: function() {
        var Q = new mt();
        return function() {
          for (var te = this.attributes.normal, ae = 0, se = te.count; ae < se; ae++)
            Q.x = te.getX(ae), Q.y = te.getY(ae), Q.z = te.getZ(ae), Q.normalize(), te.setXYZ(ae, Q.x, Q.y, Q.z);
        };
      }(), toNonIndexed: function() {
        if (this.index === null)
          return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
        var Q = new Jr(), te = this.index.array, ae = this.attributes;
        for (var se in ae) {
          for (var ue = ae[se], le = ue.array, de = ue.itemSize, pe = new le.constructor(te.length * de), ve = 0, we = 0, Me = 0, Qe = te.length; Me < Qe; Me++) {
            ve = te[Me] * de;
            for (var Se = 0; Se < de; Se++)
              pe[we++] = le[ve++];
          }
          Q.addAttribute(se, new Nn(pe, de));
        }
        var Ge = this.groups;
        for (Me = 0, Qe = Ge.length; Me < Qe; Me++) {
          var ze = Ge[Me];
          Q.addGroup(ze.start, ze.count, ze.materialIndex);
        }
        return Q;
      }, toJSON: function() {
        var Q = { metadata: { version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON" } };
        if (Q.uuid = this.uuid, Q.type = this.type, this.name !== "" && (Q.name = this.name), Object.keys(this.userData).length > 0 && (Q.userData = this.userData), this.parameters !== void 0) {
          var te = this.parameters;
          for (var ae in te)
            te[ae] !== void 0 && (Q[ae] = te[ae]);
          return Q;
        }
        Q.data = { attributes: {} };
        var se = this.index;
        if (se !== null) {
          var ue = Array.prototype.slice.call(se.array);
          Q.data.index = { type: se.array.constructor.name, array: ue };
        }
        var le = this.attributes;
        for (var ae in le) {
          var de = le[ae];
          ue = Array.prototype.slice.call(de.array), Q.data.attributes[ae] = { itemSize: de.itemSize, type: de.array.constructor.name, array: ue, normalized: de.normalized };
        }
        var pe = this.groups;
        pe.length > 0 && (Q.data.groups = JSON.parse(JSON.stringify(pe)));
        var ve = this.boundingSphere;
        return ve !== null && (Q.data.boundingSphere = { center: ve.center.toArray(), radius: ve.radius }), Q;
      }, clone: function() {
        return new Jr().copy(this);
      }, copy: function(Q) {
        var te, ae, se;
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = Q.name;
        var ue = Q.index;
        ue !== null && this.setIndex(ue.clone());
        var le = Q.attributes;
        for (te in le) {
          var de = le[te];
          this.addAttribute(te, de.clone());
        }
        var pe = Q.morphAttributes;
        for (te in pe) {
          var ve = [], we = pe[te];
          for (ae = 0, se = we.length; ae < se; ae++)
            ve.push(we[ae].clone());
          this.morphAttributes[te] = ve;
        }
        var Me = Q.groups;
        for (ae = 0, se = Me.length; ae < se; ae++) {
          var Qe = Me[ae];
          this.addGroup(Qe.start, Qe.count, Qe.materialIndex);
        }
        var Se = Q.boundingBox;
        Se !== null && (this.boundingBox = Se.clone());
        var Ge = Q.boundingSphere;
        return Ge !== null && (this.boundingSphere = Ge.clone()), this.drawRange.start = Q.drawRange.start, this.drawRange.count = Q.drawRange.count, this.userData = Q.userData, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Uo.prototype = Object.create(mn.prototype), Uo.prototype.constructor = Uo, uo.prototype = Object.create(Jr.prototype), uo.prototype.constructor = uo, Rs.prototype = Object.create(mn.prototype), Rs.prototype.constructor = Rs, lo.prototype = Object.create(Jr.prototype), lo.prototype.constructor = lo;
      var Dl = 0;
      function In() {
        Object.defineProperty(this, "id", { value: Dl++ }), this.uuid = Cn.generateUUID(), this.name = "", this.type = "Material", this.fog = !0, this.lights = !0, this.blending = Ke, this.side = He, this.flatShading = !1, this.vertexColors = We, this.opacity = 1, this.transparent = !1, this.blendSrc = De, this.blendDst = ar, this.blendEquation = St, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = lt, this.depthTest = !0, this.depthWrite = !0, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaTest = 0, this.premultipliedAlpha = !1, this.overdraw = 0, this.visible = !0, this.userData = {}, this.needsUpdate = !0;
      }
      function ia(Q) {
        In.call(this), this.type = "MeshBasicMaterial", this.color = new sn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.lights = !1, this.setValues(Q);
      }
      function la(Q) {
        In.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, this.fragmentShader = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = { derivatives: !1, fragDepth: !1, drawBuffers: !1, shaderTextureLOD: !1 }, this.defaultAttributeValues = { color: [1, 1, 1], uv: [0, 0], uv2: [0, 0] }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, Q !== void 0 && (Q.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(Q));
      }
      function fo(Q, te) {
        this.origin = Q !== void 0 ? Q : new mt(), this.direction = te !== void 0 ? te : new mt();
      }
      function aa(Q, te, ae) {
        this.a = Q !== void 0 ? Q : new mt(), this.b = te !== void 0 ? te : new mt(), this.c = ae !== void 0 ? ae : new mt();
      }
      function Xi(Q, te) {
        jr.call(this), this.type = "Mesh", this.geometry = Q !== void 0 ? Q : new Jr(), this.material = te !== void 0 ? te : new ia({ color: 16777215 * Math.random() }), this.drawMode = bn, this.updateMorphTargets();
      }
      function zl(Q, te) {
        return Math.abs(te[1]) - Math.abs(Q[1]);
      }
      function ja(Q, te, ae, se, ue, le, de, pe, ve, we) {
        Q = Q !== void 0 ? Q : [], te = te !== void 0 ? te : Te, ii.call(this, Q, te, ae, se, ue, le, de, pe, ve, we), this.flipY = !1;
      }
      In.prototype = Object.assign(Object.create(ce.prototype), { constructor: In, isMaterial: !0, onBeforeCompile: function() {
      }, setValues: function(Q) {
        if (Q !== void 0)
          for (var te in Q) {
            var ae = Q[te];
            if (ae !== void 0)
              if (te !== "shading") {
                var se = this[te];
                se !== void 0 ? se && se.isColor ? se.set(ae) : se && se.isVector3 && ae && ae.isVector3 ? se.copy(ae) : this[te] = te === "overdraw" ? Number(ae) : ae : console.warn("THREE." + this.type + ": '" + te + "' is not a property of this material.");
              } else
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = ae === Fe;
            else
              console.warn("THREE.Material: '" + te + "' parameter is undefined.");
          }
      }, toJSON: function(Q) {
        var te = Q === void 0 || typeof Q == "string";
        te && (Q = { textures: {}, images: {} });
        var ae = { metadata: { version: 4.5, type: "Material", generator: "Material.toJSON" } };
        function se(de) {
          var pe = [];
          for (var ve in de) {
            var we = de[ve];
            delete we.metadata, pe.push(we);
          }
          return pe;
        }
        if (ae.uuid = this.uuid, ae.type = this.type, this.name !== "" && (ae.name = this.name), this.color && this.color.isColor && (ae.color = this.color.getHex()), this.roughness !== void 0 && (ae.roughness = this.roughness), this.metalness !== void 0 && (ae.metalness = this.metalness), this.emissive && this.emissive.isColor && (ae.emissive = this.emissive.getHex()), this.emissiveIntensity !== 1 && (ae.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (ae.specular = this.specular.getHex()), this.shininess !== void 0 && (ae.shininess = this.shininess), this.clearCoat !== void 0 && (ae.clearCoat = this.clearCoat), this.clearCoatRoughness !== void 0 && (ae.clearCoatRoughness = this.clearCoatRoughness), this.map && this.map.isTexture && (ae.map = this.map.toJSON(Q).uuid), this.alphaMap && this.alphaMap.isTexture && (ae.alphaMap = this.alphaMap.toJSON(Q).uuid), this.lightMap && this.lightMap.isTexture && (ae.lightMap = this.lightMap.toJSON(Q).uuid), this.aoMap && this.aoMap.isTexture && (ae.aoMap = this.aoMap.toJSON(Q).uuid, ae.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (ae.bumpMap = this.bumpMap.toJSON(Q).uuid, ae.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (ae.normalMap = this.normalMap.toJSON(Q).uuid, ae.normalMapType = this.normalMapType, ae.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (ae.displacementMap = this.displacementMap.toJSON(Q).uuid, ae.displacementScale = this.displacementScale, ae.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (ae.roughnessMap = this.roughnessMap.toJSON(Q).uuid), this.metalnessMap && this.metalnessMap.isTexture && (ae.metalnessMap = this.metalnessMap.toJSON(Q).uuid), this.emissiveMap && this.emissiveMap.isTexture && (ae.emissiveMap = this.emissiveMap.toJSON(Q).uuid), this.specularMap && this.specularMap.isTexture && (ae.specularMap = this.specularMap.toJSON(Q).uuid), this.envMap && this.envMap.isTexture && (ae.envMap = this.envMap.toJSON(Q).uuid, ae.reflectivity = this.reflectivity), this.gradientMap && this.gradientMap.isTexture && (ae.gradientMap = this.gradientMap.toJSON(Q).uuid), this.size !== void 0 && (ae.size = this.size), this.sizeAttenuation !== void 0 && (ae.sizeAttenuation = this.sizeAttenuation), this.blending !== Ke && (ae.blending = this.blending), this.flatShading === !0 && (ae.flatShading = this.flatShading), this.side !== He && (ae.side = this.side), this.vertexColors !== We && (ae.vertexColors = this.vertexColors), this.opacity < 1 && (ae.opacity = this.opacity), this.transparent === !0 && (ae.transparent = this.transparent), ae.depthFunc = this.depthFunc, ae.depthTest = this.depthTest, ae.depthWrite = this.depthWrite, this.rotation !== 0 && (ae.rotation = this.rotation), this.linewidth !== 1 && (ae.linewidth = this.linewidth), this.dashSize !== void 0 && (ae.dashSize = this.dashSize), this.gapSize !== void 0 && (ae.gapSize = this.gapSize), this.scale !== void 0 && (ae.scale = this.scale), this.dithering === !0 && (ae.dithering = !0), this.alphaTest > 0 && (ae.alphaTest = this.alphaTest), this.premultipliedAlpha === !0 && (ae.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (ae.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (ae.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (ae.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (ae.wireframeLinejoin = this.wireframeLinejoin), this.morphTargets === !0 && (ae.morphTargets = !0), this.skinning === !0 && (ae.skinning = !0), this.visible === !1 && (ae.visible = !1), JSON.stringify(this.userData) !== "{}" && (ae.userData = this.userData), te) {
          var ue = se(Q.textures), le = se(Q.images);
          ue.length > 0 && (ae.textures = ue), le.length > 0 && (ae.images = le);
        }
        return ae;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        this.name = Q.name, this.fog = Q.fog, this.lights = Q.lights, this.blending = Q.blending, this.side = Q.side, this.flatShading = Q.flatShading, this.vertexColors = Q.vertexColors, this.opacity = Q.opacity, this.transparent = Q.transparent, this.blendSrc = Q.blendSrc, this.blendDst = Q.blendDst, this.blendEquation = Q.blendEquation, this.blendSrcAlpha = Q.blendSrcAlpha, this.blendDstAlpha = Q.blendDstAlpha, this.blendEquationAlpha = Q.blendEquationAlpha, this.depthFunc = Q.depthFunc, this.depthTest = Q.depthTest, this.depthWrite = Q.depthWrite, this.colorWrite = Q.colorWrite, this.precision = Q.precision, this.polygonOffset = Q.polygonOffset, this.polygonOffsetFactor = Q.polygonOffsetFactor, this.polygonOffsetUnits = Q.polygonOffsetUnits, this.dithering = Q.dithering, this.alphaTest = Q.alphaTest, this.premultipliedAlpha = Q.premultipliedAlpha, this.overdraw = Q.overdraw, this.visible = Q.visible, this.userData = JSON.parse(JSON.stringify(Q.userData)), this.clipShadows = Q.clipShadows, this.clipIntersection = Q.clipIntersection;
        var te = Q.clippingPlanes, ae = null;
        if (te !== null) {
          var se = te.length;
          ae = new Array(se);
          for (var ue = 0; ue !== se; ++ue)
            ae[ue] = te[ue].clone();
        }
        return this.clippingPlanes = ae, this.shadowSide = Q.shadowSide, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), ia.prototype = Object.create(In.prototype), ia.prototype.constructor = ia, ia.prototype.isMeshBasicMaterial = !0, ia.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.color.copy(Q.color), this.map = Q.map, this.lightMap = Q.lightMap, this.lightMapIntensity = Q.lightMapIntensity, this.aoMap = Q.aoMap, this.aoMapIntensity = Q.aoMapIntensity, this.specularMap = Q.specularMap, this.alphaMap = Q.alphaMap, this.envMap = Q.envMap, this.combine = Q.combine, this.reflectivity = Q.reflectivity, this.refractionRatio = Q.refractionRatio, this.wireframe = Q.wireframe, this.wireframeLinewidth = Q.wireframeLinewidth, this.wireframeLinecap = Q.wireframeLinecap, this.wireframeLinejoin = Q.wireframeLinejoin, this.skinning = Q.skinning, this.morphTargets = Q.morphTargets, this;
      }, la.prototype = Object.create(In.prototype), la.prototype.constructor = la, la.prototype.isShaderMaterial = !0, la.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.fragmentShader = Q.fragmentShader, this.vertexShader = Q.vertexShader, this.uniforms = Li.clone(Q.uniforms), this.defines = Object.assign({}, Q.defines), this.wireframe = Q.wireframe, this.wireframeLinewidth = Q.wireframeLinewidth, this.lights = Q.lights, this.clipping = Q.clipping, this.skinning = Q.skinning, this.morphTargets = Q.morphTargets, this.morphNormals = Q.morphNormals, this.extensions = Q.extensions, this;
      }, la.prototype.toJSON = function(Q) {
        var te = In.prototype.toJSON.call(this, Q);
        return te.uniforms = this.uniforms, te.vertexShader = this.vertexShader, te.fragmentShader = this.fragmentShader, te;
      }, Object.assign(fo.prototype, { set: function(Q, te) {
        return this.origin.copy(Q), this.direction.copy(te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.origin.copy(Q.origin), this.direction.copy(Q.direction), this;
      }, at: function(Q, te) {
        return te === void 0 && (console.warn("THREE.Ray: .at() target is now required"), te = new mt()), te.copy(this.direction).multiplyScalar(Q).add(this.origin);
      }, lookAt: function(Q) {
        return this.direction.copy(Q).sub(this.origin).normalize(), this;
      }, recast: function() {
        var Q = new mt();
        return function(te) {
          return this.origin.copy(this.at(te, Q)), this;
        };
      }(), closestPointToPoint: function(Q, te) {
        te === void 0 && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), te = new mt()), te.subVectors(Q, this.origin);
        var ae = te.dot(this.direction);
        return ae < 0 ? te.copy(this.origin) : te.copy(this.direction).multiplyScalar(ae).add(this.origin);
      }, distanceToPoint: function(Q) {
        return Math.sqrt(this.distanceSqToPoint(Q));
      }, distanceSqToPoint: function() {
        var Q = new mt();
        return function(te) {
          var ae = Q.subVectors(te, this.origin).dot(this.direction);
          return ae < 0 ? this.origin.distanceToSquared(te) : (Q.copy(this.direction).multiplyScalar(ae).add(this.origin), Q.distanceToSquared(te));
        };
      }(), distanceSqToSegment: function() {
        var Q = new mt(), te = new mt(), ae = new mt();
        return function(se, ue, le, de) {
          Q.copy(se).add(ue).multiplyScalar(0.5), te.copy(ue).sub(se).normalize(), ae.copy(this.origin).sub(Q);
          var pe, ve, we, Me, Qe = 0.5 * se.distanceTo(ue), Se = -this.direction.dot(te), Ge = ae.dot(this.direction), ze = -ae.dot(te), Ze = ae.lengthSq(), nt = Math.abs(1 - Se * Se);
          if (nt > 0)
            if (ve = Se * Ge - ze, Me = Qe * nt, (pe = Se * ze - Ge) >= 0)
              if (ve >= -Me)
                if (ve <= Me) {
                  var ct = 1 / nt;
                  we = (pe *= ct) * (pe + Se * (ve *= ct) + 2 * Ge) + ve * (Se * pe + ve + 2 * ze) + Ze;
                } else
                  ve = Qe, we = -(pe = Math.max(0, -(Se * ve + Ge))) * pe + ve * (ve + 2 * ze) + Ze;
              else
                ve = -Qe, we = -(pe = Math.max(0, -(Se * ve + Ge))) * pe + ve * (ve + 2 * ze) + Ze;
            else
              ve <= -Me ? we = -(pe = Math.max(0, -(-Se * Qe + Ge))) * pe + (ve = pe > 0 ? -Qe : Math.min(Math.max(-Qe, -ze), Qe)) * (ve + 2 * ze) + Ze : ve <= Me ? (pe = 0, we = (ve = Math.min(Math.max(-Qe, -ze), Qe)) * (ve + 2 * ze) + Ze) : we = -(pe = Math.max(0, -(Se * Qe + Ge))) * pe + (ve = pe > 0 ? Qe : Math.min(Math.max(-Qe, -ze), Qe)) * (ve + 2 * ze) + Ze;
          else
            ve = Se > 0 ? -Qe : Qe, we = -(pe = Math.max(0, -(Se * ve + Ge))) * pe + ve * (ve + 2 * ze) + Ze;
          return le && le.copy(this.direction).multiplyScalar(pe).add(this.origin), de && de.copy(te).multiplyScalar(ve).add(Q), we;
        };
      }(), intersectSphere: function() {
        var Q = new mt();
        return function(te, ae) {
          Q.subVectors(te.center, this.origin);
          var se = Q.dot(this.direction), ue = Q.dot(Q) - se * se, le = te.radius * te.radius;
          if (ue > le)
            return null;
          var de = Math.sqrt(le - ue), pe = se - de, ve = se + de;
          return pe < 0 && ve < 0 ? null : pe < 0 ? this.at(ve, ae) : this.at(pe, ae);
        };
      }(), intersectsSphere: function(Q) {
        return this.distanceToPoint(Q.center) <= Q.radius;
      }, distanceToPlane: function(Q) {
        var te = Q.normal.dot(this.direction);
        if (te === 0)
          return Q.distanceToPoint(this.origin) === 0 ? 0 : null;
        var ae = -(this.origin.dot(Q.normal) + Q.constant) / te;
        return ae >= 0 ? ae : null;
      }, intersectPlane: function(Q, te) {
        var ae = this.distanceToPlane(Q);
        return ae === null ? null : this.at(ae, te);
      }, intersectsPlane: function(Q) {
        var te = Q.distanceToPoint(this.origin);
        return te === 0 || Q.normal.dot(this.direction) * te < 0;
      }, intersectBox: function(Q, te) {
        var ae, se, ue, le, de, pe, ve = 1 / this.direction.x, we = 1 / this.direction.y, Me = 1 / this.direction.z, Qe = this.origin;
        return ve >= 0 ? (ae = (Q.min.x - Qe.x) * ve, se = (Q.max.x - Qe.x) * ve) : (ae = (Q.max.x - Qe.x) * ve, se = (Q.min.x - Qe.x) * ve), we >= 0 ? (ue = (Q.min.y - Qe.y) * we, le = (Q.max.y - Qe.y) * we) : (ue = (Q.max.y - Qe.y) * we, le = (Q.min.y - Qe.y) * we), ae > le || ue > se ? null : ((ue > ae || ae != ae) && (ae = ue), (le < se || se != se) && (se = le), Me >= 0 ? (de = (Q.min.z - Qe.z) * Me, pe = (Q.max.z - Qe.z) * Me) : (de = (Q.max.z - Qe.z) * Me, pe = (Q.min.z - Qe.z) * Me), ae > pe || de > se ? null : ((de > ae || ae != ae) && (ae = de), (pe < se || se != se) && (se = pe), se < 0 ? null : this.at(ae >= 0 ? ae : se, te)));
      }, intersectsBox: function() {
        var Q = new mt();
        return function(te) {
          return this.intersectBox(te, Q) !== null;
        };
      }(), intersectTriangle: function() {
        var Q = new mt(), te = new mt(), ae = new mt(), se = new mt();
        return function(ue, le, de, pe, ve) {
          te.subVectors(le, ue), ae.subVectors(de, ue), se.crossVectors(te, ae);
          var we, Me = this.direction.dot(se);
          if (Me > 0) {
            if (pe)
              return null;
            we = 1;
          } else {
            if (!(Me < 0))
              return null;
            we = -1, Me = -Me;
          }
          Q.subVectors(this.origin, ue);
          var Qe = we * this.direction.dot(ae.crossVectors(Q, ae));
          if (Qe < 0)
            return null;
          var Se = we * this.direction.dot(te.cross(Q));
          if (Se < 0 || Qe + Se > Me)
            return null;
          var Ge = -we * Q.dot(se);
          return Ge < 0 ? null : this.at(Ge / Me, ve);
        };
      }(), applyMatrix4: function(Q) {
        return this.origin.applyMatrix4(Q), this.direction.transformDirection(Q), this;
      }, equals: function(Q) {
        return Q.origin.equals(this.origin) && Q.direction.equals(this.direction);
      } }), Object.assign(aa, { getNormal: function() {
        var Q = new mt();
        return function(te, ae, se, ue) {
          ue === void 0 && (console.warn("THREE.Triangle: .getNormal() target is now required"), ue = new mt()), ue.subVectors(se, ae), Q.subVectors(te, ae), ue.cross(Q);
          var le = ue.lengthSq();
          return le > 0 ? ue.multiplyScalar(1 / Math.sqrt(le)) : ue.set(0, 0, 0);
        };
      }(), getBarycoord: function() {
        var Q = new mt(), te = new mt(), ae = new mt();
        return function(se, ue, le, de, pe) {
          Q.subVectors(de, ue), te.subVectors(le, ue), ae.subVectors(se, ue);
          var ve = Q.dot(Q), we = Q.dot(te), Me = Q.dot(ae), Qe = te.dot(te), Se = te.dot(ae), Ge = ve * Qe - we * we;
          if (pe === void 0 && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), pe = new mt()), Ge === 0)
            return pe.set(-2, -1, -1);
          var ze = 1 / Ge, Ze = (Qe * Me - we * Se) * ze, nt = (ve * Se - we * Me) * ze;
          return pe.set(1 - Ze - nt, nt, Ze);
        };
      }(), containsPoint: function() {
        var Q = new mt();
        return function(te, ae, se, ue) {
          return aa.getBarycoord(te, ae, se, ue, Q), Q.x >= 0 && Q.y >= 0 && Q.x + Q.y <= 1;
        };
      }() }), Object.assign(aa.prototype, { set: function(Q, te, ae) {
        return this.a.copy(Q), this.b.copy(te), this.c.copy(ae), this;
      }, setFromPointsAndIndices: function(Q, te, ae, se) {
        return this.a.copy(Q[te]), this.b.copy(Q[ae]), this.c.copy(Q[se]), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.a.copy(Q.a), this.b.copy(Q.b), this.c.copy(Q.c), this;
      }, getArea: function() {
        var Q = new mt(), te = new mt();
        return function() {
          return Q.subVectors(this.c, this.b), te.subVectors(this.a, this.b), 0.5 * Q.cross(te).length();
        };
      }(), getMidpoint: function(Q) {
        return Q === void 0 && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), Q = new mt()), Q.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
      }, getNormal: function(Q) {
        return aa.getNormal(this.a, this.b, this.c, Q);
      }, getPlane: function(Q) {
        return Q === void 0 && (console.warn("THREE.Triangle: .getPlane() target is now required"), Q = new mt()), Q.setFromCoplanarPoints(this.a, this.b, this.c);
      }, getBarycoord: function(Q, te) {
        return aa.getBarycoord(Q, this.a, this.b, this.c, te);
      }, containsPoint: function(Q) {
        return aa.containsPoint(Q, this.a, this.b, this.c);
      }, intersectsBox: function(Q) {
        return Q.intersectsTriangle(this);
      }, closestPointToPoint: function() {
        var Q = new mt(), te = new mt(), ae = new mt(), se = new mt(), ue = new mt(), le = new mt();
        return function(de, pe) {
          pe === void 0 && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), pe = new mt());
          var ve, we, Me = this.a, Qe = this.b, Se = this.c;
          Q.subVectors(Qe, Me), te.subVectors(Se, Me), se.subVectors(de, Me);
          var Ge = Q.dot(se), ze = te.dot(se);
          if (Ge <= 0 && ze <= 0)
            return pe.copy(Me);
          ue.subVectors(de, Qe);
          var Ze = Q.dot(ue), nt = te.dot(ue);
          if (Ze >= 0 && nt <= Ze)
            return pe.copy(Qe);
          var ct = Ge * nt - Ze * ze;
          if (ct <= 0 && Ge >= 0 && Ze <= 0)
            return ve = Ge / (Ge - Ze), pe.copy(Me).addScaledVector(Q, ve);
          le.subVectors(de, Se);
          var yt = Q.dot(le), st = te.dot(le);
          if (st >= 0 && yt <= st)
            return pe.copy(Se);
          var Mt = yt * ze - Ge * st;
          if (Mt <= 0 && ze >= 0 && st <= 0)
            return we = ze / (ze - st), pe.copy(Me).addScaledVector(te, we);
          var Ot = Ze * st - yt * nt;
          if (Ot <= 0 && nt - Ze >= 0 && yt - st >= 0)
            return ae.subVectors(Se, Qe), we = (nt - Ze) / (nt - Ze + (yt - st)), pe.copy(Qe).addScaledVector(ae, we);
          var dt = 1 / (Ot + Mt + ct);
          return ve = Mt * dt, we = ct * dt, pe.copy(Me).addScaledVector(Q, ve).addScaledVector(te, we);
        };
      }(), equals: function(Q) {
        return Q.a.equals(this.a) && Q.b.equals(this.b) && Q.c.equals(this.c);
      } }), Xi.prototype = Object.assign(Object.create(jr.prototype), { constructor: Xi, isMesh: !0, setDrawMode: function(Q) {
        this.drawMode = Q;
      }, copy: function(Q) {
        return jr.prototype.copy.call(this, Q), this.drawMode = Q.drawMode, Q.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = Q.morphTargetInfluences.slice()), Q.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, Q.morphTargetDictionary)), this;
      }, updateMorphTargets: function() {
        var Q, te, ae, se = this.geometry;
        if (se.isBufferGeometry) {
          var ue = se.morphAttributes, le = Object.keys(ue);
          if (le.length > 0) {
            var de = ue[le[0]];
            if (de !== void 0)
              for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, Q = 0, te = de.length; Q < te; Q++)
                ae = de[Q].name || String(Q), this.morphTargetInfluences.push(0), this.morphTargetDictionary[ae] = Q;
          }
        } else {
          var pe = se.morphTargets;
          if (pe !== void 0 && pe.length > 0)
            for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, Q = 0, te = pe.length; Q < te; Q++)
              ae = pe[Q].name || String(Q), this.morphTargetInfluences.push(0), this.morphTargetDictionary[ae] = Q;
        }
      }, raycast: function() {
        var Q = new An(), te = new fo(), ae = new Aa(), se = new mt(), ue = new mt(), le = new mt(), de = new mt(), pe = new mt(), ve = new mt(), we = new wr(), Me = new wr(), Qe = new wr(), Se = new mt(), Ge = new mt(), ze = new mt();
        function Ze(yt, st, Mt, Ot, dt, wt, $t) {
          return aa.getBarycoord(yt, st, Mt, Ot, Se), dt.multiplyScalar(Se.x), wt.multiplyScalar(Se.y), $t.multiplyScalar(Se.z), dt.add(wt).add($t), dt.clone();
        }
        function nt(yt, st, Mt, Ot, dt, wt, $t, Pt) {
          if ((st.side === Ne ? Ot.intersectTriangle($t, wt, dt, !0, Pt) : Ot.intersectTriangle(dt, wt, $t, st.side !== Pe, Pt)) === null)
            return null;
          ze.copy(Pt), ze.applyMatrix4(yt.matrixWorld);
          var er = Mt.ray.origin.distanceTo(ze);
          return er < Mt.near || er > Mt.far ? null : { distance: er, point: ze.clone(), object: yt };
        }
        function ct(yt, st, Mt, Ot, dt, wt, $t, Pt, er) {
          se.fromBufferAttribute(dt, $t), ue.fromBufferAttribute(dt, Pt), le.fromBufferAttribute(dt, er);
          var Ht = nt(yt, st, Mt, Ot, se, ue, le, Ge);
          if (Ht) {
            wt && (we.fromBufferAttribute(wt, $t), Me.fromBufferAttribute(wt, Pt), Qe.fromBufferAttribute(wt, er), Ht.uv = Ze(Ge, se, ue, le, we, Me, Qe));
            var ir = new qa($t, Pt, er);
            aa.getNormal(se, ue, le, ir.normal), Ht.face = ir;
          }
          return Ht;
        }
        return function(yt, st) {
          var Mt, Ot = this.geometry, dt = this.material, wt = this.matrixWorld;
          if (dt !== void 0 && (Ot.boundingSphere === null && Ot.computeBoundingSphere(), ae.copy(Ot.boundingSphere), ae.applyMatrix4(wt), yt.ray.intersectsSphere(ae) !== !1 && (Q.getInverse(wt), te.copy(yt.ray).applyMatrix4(Q), Ot.boundingBox === null || te.intersectsBox(Ot.boundingBox) !== !1))) {
            if (Ot.isBufferGeometry) {
              var $t, Pt, er, Ht, ir, dr, vr, pr, Or, Mr = Ot.index, hr = Ot.attributes.position, Cr = Ot.attributes.uv, lr = Ot.groups, Yr = Ot.drawRange;
              if (Mr !== null)
                if (Array.isArray(dt))
                  for (Ht = 0, dr = lr.length; Ht < dr; Ht++)
                    for (Or = dt[(pr = lr[Ht]).materialIndex], ir = Math.max(pr.start, Yr.start), vr = Math.min(pr.start + pr.count, Yr.start + Yr.count); ir < vr; ir += 3)
                      $t = Mr.getX(ir), Pt = Mr.getX(ir + 1), er = Mr.getX(ir + 2), (Mt = ct(this, Or, yt, te, hr, Cr, $t, Pt, er)) && (Mt.faceIndex = Math.floor(ir / 3), st.push(Mt));
                else
                  for (Ht = Math.max(0, Yr.start), dr = Math.min(Mr.count, Yr.start + Yr.count); Ht < dr; Ht += 3)
                    $t = Mr.getX(Ht), Pt = Mr.getX(Ht + 1), er = Mr.getX(Ht + 2), (Mt = ct(this, dt, yt, te, hr, Cr, $t, Pt, er)) && (Mt.faceIndex = Math.floor(Ht / 3), st.push(Mt));
              else if (hr !== void 0)
                if (Array.isArray(dt))
                  for (Ht = 0, dr = lr.length; Ht < dr; Ht++)
                    for (Or = dt[(pr = lr[Ht]).materialIndex], ir = Math.max(pr.start, Yr.start), vr = Math.min(pr.start + pr.count, Yr.start + Yr.count); ir < vr; ir += 3)
                      (Mt = ct(this, Or, yt, te, hr, Cr, $t = ir, Pt = ir + 1, er = ir + 2)) && (Mt.faceIndex = Math.floor(ir / 3), st.push(Mt));
                else
                  for (Ht = Math.max(0, Yr.start), dr = Math.min(hr.count, Yr.start + Yr.count); Ht < dr; Ht += 3)
                    (Mt = ct(this, dt, yt, te, hr, Cr, $t = Ht, Pt = Ht + 1, er = Ht + 2)) && (Mt.faceIndex = Math.floor(Ht / 3), st.push(Mt));
            } else if (Ot.isGeometry) {
              var Qr, un, yn, ni, Bi = Array.isArray(dt), Kn = Ot.vertices, kr = Ot.faces, Fn = Ot.faceVertexUvs[0];
              Fn.length > 0 && (ni = Fn);
              for (var hi = 0, ji = kr.length; hi < ji; hi++) {
                var Ei = kr[hi], Wi = Bi ? dt[Ei.materialIndex] : dt;
                if (Wi !== void 0) {
                  if (Qr = Kn[Ei.a], un = Kn[Ei.b], yn = Kn[Ei.c], Wi.morphTargets === !0) {
                    var _i = Ot.morphTargets, wa = this.morphTargetInfluences;
                    se.set(0, 0, 0), ue.set(0, 0, 0), le.set(0, 0, 0);
                    for (var _a = 0, Qi = _i.length; _a < Qi; _a++) {
                      var Ci = wa[_a];
                      if (Ci !== 0) {
                        var eo = _i[_a].vertices;
                        se.addScaledVector(de.subVectors(eo[Ei.a], Qr), Ci), ue.addScaledVector(pe.subVectors(eo[Ei.b], un), Ci), le.addScaledVector(ve.subVectors(eo[Ei.c], yn), Ci);
                      }
                    }
                    se.add(Qr), ue.add(un), le.add(yn), Qr = se, un = ue, yn = le;
                  }
                  if (Mt = nt(this, Wi, yt, te, Qr, un, yn, Ge)) {
                    if (ni && ni[hi]) {
                      var $i = ni[hi];
                      we.copy($i[0]), Me.copy($i[1]), Qe.copy($i[2]), Mt.uv = Ze(Ge, Qr, un, yn, we, Me, Qe);
                    }
                    Mt.face = Ei, Mt.faceIndex = hi, st.push(Mt);
                  }
                }
              }
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), ja.prototype = Object.create(ii.prototype), ja.prototype.constructor = ja, ja.prototype.isCubeTexture = !0, Object.defineProperty(ja.prototype, "images", { get: function() {
        return this.image;
      }, set: function(Q) {
        this.image = Q;
      } });
      var Gu = new ii(), Uu = new ja();
      function Hu() {
        this.seq = [], this.map = {};
      }
      var qu = [], ju = [], $u = new Float32Array(16), Vu = new Float32Array(9), Du = new Float32Array(4);
      function Ho(Q, te, ae) {
        var se = Q[0];
        if (se <= 0 || se > 0)
          return Q;
        var ue = te * ae, le = qu[ue];
        if (le === void 0 && (le = new Float32Array(ue), qu[ue] = le), te !== 0) {
          se.toArray(le, 0);
          for (var de = 1, pe = 0; de !== te; ++de)
            pe += ae, Q[de].toArray(le, pe);
        }
        return le;
      }
      function ui(Q, te) {
        if (Q.length !== te.length)
          return !1;
        for (var ae = 0, se = Q.length; ae < se; ae++)
          if (Q[ae] !== te[ae])
            return !1;
        return !0;
      }
      function Mi(Q, te) {
        for (var ae = 0, se = te.length; ae < se; ae++)
          Q[ae] = te[ae];
      }
      function zu(Q, te) {
        var ae = ju[te];
        ae === void 0 && (ae = new Int32Array(te), ju[te] = ae);
        for (var se = 0; se !== te; ++se)
          ae[se] = Q.allocTextureUnit();
        return ae;
      }
      function Ll(Q, te) {
        var ae = this.cache;
        ae[0] !== te && (Q.uniform1f(this.addr, te), ae[0] = te);
      }
      function Yl(Q, te) {
        var ae = this.cache;
        ae[0] !== te && (Q.uniform1i(this.addr, te), ae[0] = te);
      }
      function Wl(Q, te) {
        var ae = this.cache;
        if (te.x !== void 0)
          ae[0] === te.x && ae[1] === te.y || (Q.uniform2f(this.addr, te.x, te.y), ae[0] = te.x, ae[1] = te.y);
        else {
          if (ui(ae, te))
            return;
          Q.uniform2fv(this.addr, te), Mi(ae, te);
        }
      }
      function Jl(Q, te) {
        var ae = this.cache;
        if (te.x !== void 0)
          ae[0] === te.x && ae[1] === te.y && ae[2] === te.z || (Q.uniform3f(this.addr, te.x, te.y, te.z), ae[0] = te.x, ae[1] = te.y, ae[2] = te.z);
        else if (te.r !== void 0)
          ae[0] === te.r && ae[1] === te.g && ae[2] === te.b || (Q.uniform3f(this.addr, te.r, te.g, te.b), ae[0] = te.r, ae[1] = te.g, ae[2] = te.b);
        else {
          if (ui(ae, te))
            return;
          Q.uniform3fv(this.addr, te), Mi(ae, te);
        }
      }
      function Xl(Q, te) {
        var ae = this.cache;
        if (te.x !== void 0)
          ae[0] === te.x && ae[1] === te.y && ae[2] === te.z && ae[3] === te.w || (Q.uniform4f(this.addr, te.x, te.y, te.z, te.w), ae[0] = te.x, ae[1] = te.y, ae[2] = te.z, ae[3] = te.w);
        else {
          if (ui(ae, te))
            return;
          Q.uniform4fv(this.addr, te), Mi(ae, te);
        }
      }
      function Zl(Q, te) {
        var ae = this.cache, se = te.elements;
        if (se === void 0) {
          if (ui(ae, te))
            return;
          Q.uniformMatrix2fv(this.addr, !1, te), Mi(ae, te);
        } else {
          if (ui(ae, se))
            return;
          Du.set(se), Q.uniformMatrix2fv(this.addr, !1, Du), Mi(ae, se);
        }
      }
      function Kl(Q, te) {
        var ae = this.cache, se = te.elements;
        if (se === void 0) {
          if (ui(ae, te))
            return;
          Q.uniformMatrix3fv(this.addr, !1, te), Mi(ae, te);
        } else {
          if (ui(ae, se))
            return;
          Vu.set(se), Q.uniformMatrix3fv(this.addr, !1, Vu), Mi(ae, se);
        }
      }
      function ed(Q, te) {
        var ae = this.cache, se = te.elements;
        if (se === void 0) {
          if (ui(ae, te))
            return;
          Q.uniformMatrix4fv(this.addr, !1, te), Mi(ae, te);
        } else {
          if (ui(ae, se))
            return;
          $u.set(se), Q.uniformMatrix4fv(this.addr, !1, $u), Mi(ae, se);
        }
      }
      function td(Q, te, ae) {
        var se = this.cache, ue = ae.allocTextureUnit();
        se[0] !== ue && (Q.uniform1i(this.addr, ue), se[0] = ue), ae.setTexture2D(te || Gu, ue);
      }
      function rd(Q, te, ae) {
        var se = this.cache, ue = ae.allocTextureUnit();
        se[0] !== ue && (Q.uniform1i(this.addr, ue), se[0] = ue), ae.setTextureCube(te || Uu, ue);
      }
      function Lu(Q, te) {
        var ae = this.cache;
        ui(ae, te) || (Q.uniform2iv(this.addr, te), Mi(ae, te));
      }
      function Yu(Q, te) {
        var ae = this.cache;
        ui(ae, te) || (Q.uniform3iv(this.addr, te), Mi(ae, te));
      }
      function Wu(Q, te) {
        var ae = this.cache;
        ui(ae, te) || (Q.uniform4iv(this.addr, te), Mi(ae, te));
      }
      function nd(Q, te) {
        var ae = this.cache;
        ui(ae, te) || (Q.uniform1fv(this.addr, te), Mi(ae, te));
      }
      function id(Q, te) {
        var ae = this.cache;
        ui(ae, te) || (Q.uniform1iv(this.addr, te), Mi(ae, te));
      }
      function ad(Q, te) {
        var ae = this.cache, se = Ho(te, this.size, 2);
        ui(ae, se) || (Q.uniform2fv(this.addr, se), this.updateCache(se));
      }
      function od(Q, te) {
        var ae = this.cache, se = Ho(te, this.size, 3);
        ui(ae, se) || (Q.uniform3fv(this.addr, se), this.updateCache(se));
      }
      function sd(Q, te) {
        var ae = this.cache, se = Ho(te, this.size, 4);
        ui(ae, se) || (Q.uniform4fv(this.addr, se), this.updateCache(se));
      }
      function cd(Q, te) {
        var ae = this.cache, se = Ho(te, this.size, 4);
        ui(ae, se) || (Q.uniformMatrix2fv(this.addr, !1, se), this.updateCache(se));
      }
      function ud(Q, te) {
        var ae = this.cache, se = Ho(te, this.size, 9);
        ui(ae, se) || (Q.uniformMatrix3fv(this.addr, !1, se), this.updateCache(se));
      }
      function ld(Q, te) {
        var ae = this.cache, se = Ho(te, this.size, 16);
        ui(ae, se) || (Q.uniformMatrix4fv(this.addr, !1, se), this.updateCache(se));
      }
      function dd(Q, te, ae) {
        var se = this.cache, ue = te.length, le = zu(ae, ue);
        ui(se, le) === !1 && (Q.uniform1iv(this.addr, le), Mi(se, le));
        for (var de = 0; de !== ue; ++de)
          ae.setTexture2D(te[de] || Gu, le[de]);
      }
      function fd(Q, te, ae) {
        var se = this.cache, ue = te.length, le = zu(ae, ue);
        ui(se, le) === !1 && (Q.uniform1iv(this.addr, le), Mi(se, le));
        for (var de = 0; de !== ue; ++de)
          ae.setTextureCube(te[de] || Uu, le[de]);
      }
      function hd(Q, te, ae) {
        this.id = Q, this.addr = ae, this.cache = [], this.setValue = function(se) {
          switch (se) {
            case 5126:
              return Ll;
            case 35664:
              return Wl;
            case 35665:
              return Jl;
            case 35666:
              return Xl;
            case 35674:
              return Zl;
            case 35675:
              return Kl;
            case 35676:
              return ed;
            case 35678:
            case 36198:
              return td;
            case 35680:
              return rd;
            case 5124:
            case 35670:
              return Yl;
            case 35667:
            case 35671:
              return Lu;
            case 35668:
            case 35672:
              return Yu;
            case 35669:
            case 35673:
              return Wu;
          }
        }(te.type);
      }
      function Ju(Q, te, ae) {
        this.id = Q, this.addr = ae, this.cache = [], this.size = te.size, this.setValue = function(se) {
          switch (se) {
            case 5126:
              return nd;
            case 35664:
              return ad;
            case 35665:
              return od;
            case 35666:
              return sd;
            case 35674:
              return cd;
            case 35675:
              return ud;
            case 35676:
              return ld;
            case 35678:
              return dd;
            case 35680:
              return fd;
            case 5124:
            case 35670:
              return id;
            case 35667:
            case 35671:
              return Lu;
            case 35668:
            case 35672:
              return Yu;
            case 35669:
            case 35673:
              return Wu;
          }
        }(te.type);
      }
      function Xu(Q) {
        this.id = Q, Hu.call(this);
      }
      Ju.prototype.updateCache = function(Q) {
        var te = this.cache;
        Q instanceof Float32Array && te.length !== Q.length && (this.cache = new Float32Array(Q.length)), Mi(te, Q);
      }, Xu.prototype.setValue = function(Q, te, ae) {
        for (var se = this.seq, ue = 0, le = se.length; ue !== le; ++ue) {
          var de = se[ue];
          de.setValue(Q, te[de.id], ae);
        }
      };
      var tu = /([\w\d_]+)(\])?(\[|\.)?/g;
      function Zu(Q, te) {
        Q.seq.push(te), Q.map[te.id] = te;
      }
      function pd(Q, te, ae) {
        var se = Q.name, ue = se.length;
        for (tu.lastIndex = 0; ; ) {
          var le = tu.exec(se), de = tu.lastIndex, pe = le[1], ve = le[2] === "]", we = le[3];
          if (ve && (pe |= 0), we === void 0 || we === "[" && de + 2 === ue) {
            Zu(ae, we === void 0 ? new hd(pe, Q, te) : new Ju(pe, Q, te));
            break;
          }
          var Me = ae.map[pe];
          Me === void 0 && Zu(ae, Me = new Xu(pe)), ae = Me;
        }
      }
      function Wa(Q, te, ae) {
        Hu.call(this), this.renderer = ae;
        for (var se = Q.getProgramParameter(te, Q.ACTIVE_UNIFORMS), ue = 0; ue < se; ++ue) {
          var le = Q.getActiveUniform(te, ue);
          pd(le, Q.getUniformLocation(te, le.name), this);
        }
      }
      function Ku(Q, te, ae) {
        var se = Q.createShader(te);
        return Q.shaderSource(se, ae), Q.compileShader(se), Q.getShaderParameter(se, Q.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."), Q.getShaderInfoLog(se) !== "" && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", te === Q.VERTEX_SHADER ? "vertex" : "fragment", Q.getShaderInfoLog(se), function(ue) {
          for (var le = ue.split(`
`), de = 0; de < le.length; de++)
            le[de] = de + 1 + ": " + le[de];
          return le.join(`
`);
        }(ae)), se;
      }
      Wa.prototype.setValue = function(Q, te, ae) {
        var se = this.map[te];
        se !== void 0 && se.setValue(Q, ae, this.renderer);
      }, Wa.prototype.setOptional = function(Q, te, ae) {
        var se = te[ae];
        se !== void 0 && this.setValue(Q, ae, se);
      }, Wa.upload = function(Q, te, ae, se) {
        for (var ue = 0, le = te.length; ue !== le; ++ue) {
          var de = te[ue], pe = ae[de.id];
          pe.needsUpdate !== !1 && de.setValue(Q, pe.value, se);
        }
      }, Wa.seqWithValue = function(Q, te) {
        for (var ae = [], se = 0, ue = Q.length; se !== ue; ++se) {
          var le = Q[se];
          le.id in te && ae.push(le);
        }
        return ae;
      };
      var Ad = 0;
      function el(Q) {
        switch (Q) {
          case Dn:
            return ["Linear", "( value )"];
          case bi:
            return ["sRGB", "( value )"];
          case Fa:
            return ["RGBE", "( value )"];
          case xi:
            return ["RGBM", "( value, 7.0 )"];
          case ro:
            return ["RGBM", "( value, 16.0 )"];
          case bs:
            return ["RGBD", "( value, 256.0 )"];
          case na:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
          default:
            throw new Error("unsupported encoding: " + Q);
        }
      }
      function ru(Q, te) {
        var ae = el(te);
        return "vec4 " + Q + "( vec4 value ) { return " + ae[0] + "ToLinear" + ae[1] + "; }";
      }
      function Ms(Q) {
        return Q !== "";
      }
      function tl(Q, te) {
        return Q.replace(/NUM_DIR_LIGHTS/g, te.numDirLights).replace(/NUM_SPOT_LIGHTS/g, te.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, te.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, te.numPointLights).replace(/NUM_HEMI_LIGHTS/g, te.numHemiLights);
      }
      function rl(Q, te) {
        return Q.replace(/NUM_CLIPPING_PLANES/g, te.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, te.numClippingPlanes - te.numClipIntersection);
      }
      function nu(Q) {
        return Q.replace(/^[ \t]*#include +<([\w\d./]+)>/gm, function(te, ae) {
          var se = zn[ae];
          if (se === void 0)
            throw new Error("Can not resolve #include <" + ae + ">");
          return nu(se);
        });
      }
      function nl(Q) {
        return Q.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(te, ae, se, ue) {
          for (var le = "", de = parseInt(ae); de < parseInt(se); de++)
            le += ue.replace(/\[ i \]/g, "[ " + de + " ]");
          return le;
        });
      }
      function gd(Q, te, ae, se, ue, le, de) {
        var pe = Q.context, ve = se.defines, we = ue.vertexShader, Me = ue.fragmentShader, Qe = "SHADOWMAP_TYPE_BASIC";
        le.shadowMapType === Ie ? Qe = "SHADOWMAP_TYPE_PCF" : le.shadowMapType === Oe && (Qe = "SHADOWMAP_TYPE_PCF_SOFT");
        var Se = "ENVMAP_TYPE_CUBE", Ge = "ENVMAP_MODE_REFLECTION", ze = "ENVMAP_BLENDING_MULTIPLY";
        if (le.envMap) {
          switch (se.envMap.mapping) {
            case Te:
            case Re:
              Se = "ENVMAP_TYPE_CUBE";
              break;
            case jt:
            case yr:
              Se = "ENVMAP_TYPE_CUBE_UV";
              break;
            case it:
            case bt:
              Se = "ENVMAP_TYPE_EQUIREC";
              break;
            case Qt:
              Se = "ENVMAP_TYPE_SPHERE";
          }
          switch (se.envMap.mapping) {
            case Re:
            case bt:
              Ge = "ENVMAP_MODE_REFRACTION";
          }
          switch (se.combine) {
            case ke:
              ze = "ENVMAP_BLENDING_MULTIPLY";
              break;
            case Ve:
              ze = "ENVMAP_BLENDING_MIX";
              break;
            case Je:
              ze = "ENVMAP_BLENDING_ADD";
          }
        }
        var Ze, nt, ct = Q.gammaFactor > 0 ? Q.gammaFactor : 1, yt = de.isWebGL2 ? "" : function(hr, Cr, lr) {
          return [(hr = hr || {}).derivatives || Cr.envMapCubeUV || Cr.bumpMap || Cr.normalMap && !Cr.objectSpaceNormalMap || Cr.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (hr.fragDepth || Cr.logarithmicDepthBuffer) && lr.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", hr.drawBuffers && lr.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (hr.shaderTextureLOD || Cr.envMap) && lr.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Ms).join(`
`);
        }(se.extensions, le, te), st = function(hr) {
          var Cr = [];
          for (var lr in hr) {
            var Yr = hr[lr];
            Yr !== !1 && Cr.push("#define " + lr + " " + Yr);
          }
          return Cr.join(`
`);
        }(ve), Mt = pe.createProgram();
        if (se.isRawShaderMaterial ? ((Ze = [st].filter(Ms).join(`
`)).length > 0 && (Ze += `
`), (nt = [yt, st].filter(Ms).join(`
`)).length > 0 && (nt += `
`)) : (Ze = ["precision " + le.precision + " float;", "precision " + le.precision + " int;", "#define SHADER_NAME " + ue.name, st, le.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + ct, "#define MAX_BONES " + le.maxBones, le.useFog && le.fog ? "#define USE_FOG" : "", le.useFog && le.fogExp ? "#define FOG_EXP2" : "", le.map ? "#define USE_MAP" : "", le.envMap ? "#define USE_ENVMAP" : "", le.envMap ? "#define " + Ge : "", le.lightMap ? "#define USE_LIGHTMAP" : "", le.aoMap ? "#define USE_AOMAP" : "", le.emissiveMap ? "#define USE_EMISSIVEMAP" : "", le.bumpMap ? "#define USE_BUMPMAP" : "", le.normalMap ? "#define USE_NORMALMAP" : "", le.normalMap && le.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", le.displacementMap && le.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", le.specularMap ? "#define USE_SPECULARMAP" : "", le.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", le.metalnessMap ? "#define USE_METALNESSMAP" : "", le.alphaMap ? "#define USE_ALPHAMAP" : "", le.vertexColors ? "#define USE_COLOR" : "", le.flatShading ? "#define FLAT_SHADED" : "", le.skinning ? "#define USE_SKINNING" : "", le.useVertexTexture ? "#define BONE_TEXTURE" : "", le.morphTargets ? "#define USE_MORPHTARGETS" : "", le.morphNormals && le.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", le.doubleSided ? "#define DOUBLE_SIDED" : "", le.flipSided ? "#define FLIP_SIDED" : "", le.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", le.shadowMapEnabled ? "#define " + Qe : "", le.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", le.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", le.logarithmicDepthBuffer && (de.isWebGL2 || te.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", `
`].filter(Ms).join(`
`), nt = [yt, "precision " + le.precision + " float;", "precision " + le.precision + " int;", "#define SHADER_NAME " + ue.name, st, le.alphaTest ? "#define ALPHATEST " + le.alphaTest + (le.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + ct, le.useFog && le.fog ? "#define USE_FOG" : "", le.useFog && le.fogExp ? "#define FOG_EXP2" : "", le.map ? "#define USE_MAP" : "", le.envMap ? "#define USE_ENVMAP" : "", le.envMap ? "#define " + Se : "", le.envMap ? "#define " + Ge : "", le.envMap ? "#define " + ze : "", le.lightMap ? "#define USE_LIGHTMAP" : "", le.aoMap ? "#define USE_AOMAP" : "", le.emissiveMap ? "#define USE_EMISSIVEMAP" : "", le.bumpMap ? "#define USE_BUMPMAP" : "", le.normalMap ? "#define USE_NORMALMAP" : "", le.normalMap && le.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", le.specularMap ? "#define USE_SPECULARMAP" : "", le.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", le.metalnessMap ? "#define USE_METALNESSMAP" : "", le.alphaMap ? "#define USE_ALPHAMAP" : "", le.vertexColors ? "#define USE_COLOR" : "", le.gradientMap ? "#define USE_GRADIENTMAP" : "", le.flatShading ? "#define FLAT_SHADED" : "", le.doubleSided ? "#define DOUBLE_SIDED" : "", le.flipSided ? "#define FLIP_SIDED" : "", le.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", le.shadowMapEnabled ? "#define " + Qe : "", le.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", le.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", le.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", le.logarithmicDepthBuffer && (de.isWebGL2 || te.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", le.envMap && (de.isWebGL2 || te.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", le.toneMapping !== at ? "#define TONE_MAPPING" : "", le.toneMapping !== at ? zn.tonemapping_pars_fragment : "", le.toneMapping !== at ? function(hr, Cr) {
          var lr;
          switch (Cr) {
            case Tt:
              lr = "Linear";
              break;
            case Dt:
              lr = "Reinhard";
              break;
            case zt:
              lr = "Uncharted2";
              break;
            case Yt:
              lr = "OptimizedCineon";
              break;
            default:
              throw new Error("unsupported toneMapping: " + Cr);
          }
          return "vec3 " + hr + "( vec3 color ) { return " + lr + "ToneMapping( color ); }";
        }("toneMapping", le.toneMapping) : "", le.dithering ? "#define DITHERING" : "", le.outputEncoding || le.mapEncoding || le.envMapEncoding || le.emissiveMapEncoding ? zn.encodings_pars_fragment : "", le.mapEncoding ? ru("mapTexelToLinear", le.mapEncoding) : "", le.envMapEncoding ? ru("envMapTexelToLinear", le.envMapEncoding) : "", le.emissiveMapEncoding ? ru("emissiveMapTexelToLinear", le.emissiveMapEncoding) : "", le.outputEncoding ? function(hr, Cr) {
          var lr = el(Cr);
          return "vec4 " + hr + "( vec4 value ) { return LinearTo" + lr[0] + lr[1] + "; }";
        }("linearToOutputTexel", le.outputEncoding) : "", le.depthPacking ? "#define DEPTH_PACKING " + se.depthPacking : "", `
`].filter(Ms).join(`
`)), we = rl(we = tl(we = nu(we), le), le), Me = rl(Me = tl(Me = nu(Me), le), le), we = nl(we), Me = nl(Me), de.isWebGL2 && !se.isRawShaderMaterial) {
          var Ot = !1, dt = /^\s*#version\s+300\s+es\s*\n/;
          se.isShaderMaterial && we.match(dt) !== null && Me.match(dt) !== null && (Ot = !0, we = we.replace(dt, ""), Me = Me.replace(dt, "")), Ze = [`#version 300 es
`, "#define attribute in", "#define varying out", "#define texture2D texture"].join(`
`) + `
` + Ze, nt = [`#version 300 es
`, "#define varying in", Ot ? "" : "out highp vec4 pc_fragColor;", Ot ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join(`
`) + `
` + nt;
        }
        var wt = Ze + we, $t = nt + Me, Pt = Ku(pe, pe.VERTEX_SHADER, wt), er = Ku(pe, pe.FRAGMENT_SHADER, $t);
        pe.attachShader(Mt, Pt), pe.attachShader(Mt, er), se.index0AttributeName !== void 0 ? pe.bindAttribLocation(Mt, 0, se.index0AttributeName) : le.morphTargets === !0 && pe.bindAttribLocation(Mt, 0, "position"), pe.linkProgram(Mt);
        var Ht, ir, dr = pe.getProgramInfoLog(Mt).trim(), vr = pe.getShaderInfoLog(Pt).trim(), pr = pe.getShaderInfoLog(er).trim(), Or = !0, Mr = !0;
        return pe.getProgramParameter(Mt, pe.LINK_STATUS) === !1 ? (Or = !1, console.error("THREE.WebGLProgram: shader error: ", pe.getError(), "gl.VALIDATE_STATUS", pe.getProgramParameter(Mt, pe.VALIDATE_STATUS), "gl.getProgramInfoLog", dr, vr, pr)) : dr !== "" ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", dr) : vr !== "" && pr !== "" || (Mr = !1), Mr && (this.diagnostics = { runnable: Or, material: se, programLog: dr, vertexShader: { log: vr, prefix: Ze }, fragmentShader: { log: pr, prefix: nt } }), pe.deleteShader(Pt), pe.deleteShader(er), this.getUniforms = function() {
          return Ht === void 0 && (Ht = new Wa(pe, Mt, Q)), Ht;
        }, this.getAttributes = function() {
          return ir === void 0 && (ir = function(hr, Cr) {
            for (var lr = {}, Yr = hr.getProgramParameter(Cr, hr.ACTIVE_ATTRIBUTES), Qr = 0; Qr < Yr; Qr++) {
              var un = hr.getActiveAttrib(Cr, Qr).name;
              lr[un] = hr.getAttribLocation(Cr, un);
            }
            return lr;
          }(pe, Mt)), ir;
        }, this.destroy = function() {
          pe.deleteProgram(Mt), this.program = void 0;
        }, Object.defineProperties(this, { uniforms: { get: function() {
          return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."), this.getUniforms();
        } }, attributes: { get: function() {
          return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."), this.getAttributes();
        } } }), this.name = ue.name, this.id = Ad++, this.code = ae, this.usedTimes = 1, this.program = Mt, this.vertexShader = Pt, this.fragmentShader = er, this;
      }
      function md(Q, te, ae) {
        var se = [], ue = { MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "phong", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite" }, le = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
        function de(pe, ve) {
          var we;
          return pe ? pe.isTexture ? we = pe.encoding : pe.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), we = pe.texture.encoding) : we = Dn, we === Dn && ve && (we = na), we;
        }
        this.getParameters = function(pe, ve, we, Me, Qe, Se, Ge) {
          var ze = ue[pe.type], Ze = Ge.isSkinnedMesh ? function(yt) {
            var st = yt.skeleton.bones;
            if (ae.floatVertexTextures)
              return 1024;
            var Mt = ae.maxVertexUniforms, Ot = Math.floor((Mt - 20) / 4), dt = Math.min(Ot, st.length);
            return dt < st.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + st.length + " bones. This GPU supports " + dt + "."), 0) : dt;
          }(Ge) : 0, nt = ae.precision;
          pe.precision !== null && (nt = ae.getMaxPrecision(pe.precision)) !== pe.precision && console.warn("THREE.WebGLProgram.getParameters:", pe.precision, "not supported, using", nt, "instead.");
          var ct = Q.getRenderTarget();
          return { shaderID: ze, precision: nt, supportsVertexTextures: ae.vertexTextures, outputEncoding: de(ct ? ct.texture : null, Q.gammaOutput), map: !!pe.map, mapEncoding: de(pe.map, Q.gammaInput), envMap: !!pe.envMap, envMapMode: pe.envMap && pe.envMap.mapping, envMapEncoding: de(pe.envMap, Q.gammaInput), envMapCubeUV: !!pe.envMap && (pe.envMap.mapping === jt || pe.envMap.mapping === yr), lightMap: !!pe.lightMap, aoMap: !!pe.aoMap, emissiveMap: !!pe.emissiveMap, emissiveMapEncoding: de(pe.emissiveMap, Q.gammaInput), bumpMap: !!pe.bumpMap, normalMap: !!pe.normalMap, objectSpaceNormalMap: pe.normalMapType === Ua, displacementMap: !!pe.displacementMap, roughnessMap: !!pe.roughnessMap, metalnessMap: !!pe.metalnessMap, specularMap: !!pe.specularMap, alphaMap: !!pe.alphaMap, gradientMap: !!pe.gradientMap, combine: pe.combine, vertexColors: pe.vertexColors, fog: !!Me, useFog: pe.fog, fogExp: Me && Me.isFogExp2, flatShading: pe.flatShading, sizeAttenuation: pe.sizeAttenuation, logarithmicDepthBuffer: ae.logarithmicDepthBuffer, skinning: pe.skinning && Ze > 0, maxBones: Ze, useVertexTexture: ae.floatVertexTextures, morphTargets: pe.morphTargets, morphNormals: pe.morphNormals, maxMorphTargets: Q.maxMorphTargets, maxMorphNormals: Q.maxMorphNormals, numDirLights: ve.directional.length, numPointLights: ve.point.length, numSpotLights: ve.spot.length, numRectAreaLights: ve.rectArea.length, numHemiLights: ve.hemi.length, numClippingPlanes: Qe, numClipIntersection: Se, dithering: pe.dithering, shadowMapEnabled: Q.shadowMap.enabled && Ge.receiveShadow && we.length > 0, shadowMapType: Q.shadowMap.type, toneMapping: Q.toneMapping, physicallyCorrectLights: Q.physicallyCorrectLights, premultipliedAlpha: pe.premultipliedAlpha, alphaTest: pe.alphaTest, doubleSided: pe.side === Pe, flipSided: pe.side === Ne, depthPacking: pe.depthPacking !== void 0 && pe.depthPacking };
        }, this.getProgramCode = function(pe, ve) {
          var we = [];
          if (ve.shaderID ? we.push(ve.shaderID) : (we.push(pe.fragmentShader), we.push(pe.vertexShader)), pe.defines !== void 0)
            for (var Me in pe.defines)
              we.push(Me), we.push(pe.defines[Me]);
          for (var Qe = 0; Qe < le.length; Qe++)
            we.push(ve[le[Qe]]);
          return we.push(pe.onBeforeCompile.toString()), we.push(Q.gammaOutput), we.join();
        }, this.acquireProgram = function(pe, ve, we, Me) {
          for (var Qe, Se = 0, Ge = se.length; Se < Ge; Se++) {
            var ze = se[Se];
            if (ze.code === Me) {
              ++(Qe = ze).usedTimes;
              break;
            }
          }
          return Qe === void 0 && (Qe = new gd(Q, te, Me, pe, ve, we, ae), se.push(Qe)), Qe;
        }, this.releaseProgram = function(pe) {
          if (--pe.usedTimes == 0) {
            var ve = se.indexOf(pe);
            se[ve] = se[se.length - 1], se.pop(), pe.destroy();
          }
        }, this.programs = se;
      }
      function yd(Q, te) {
        return Q.renderOrder !== te.renderOrder ? Q.renderOrder - te.renderOrder : Q.program && te.program && Q.program !== te.program ? Q.program.id - te.program.id : Q.material.id !== te.material.id ? Q.material.id - te.material.id : Q.z !== te.z ? Q.z - te.z : Q.id - te.id;
      }
      function vd(Q, te) {
        return Q.renderOrder !== te.renderOrder ? Q.renderOrder - te.renderOrder : Q.z !== te.z ? te.z - Q.z : Q.id - te.id;
      }
      function xd() {
        var Q = {};
        return { get: function(te, ae) {
          var se = te.id + "," + ae.id, ue = Q[se];
          return ue === void 0 && (ue = new function() {
            var le = [], de = 0, pe = [], ve = [];
            return { opaque: pe, transparent: ve, init: function() {
              de = 0, pe.length = 0, ve.length = 0;
            }, push: function(we, Me, Qe, Se, Ge) {
              var ze = le[de];
              ze === void 0 ? (ze = { id: we.id, object: we, geometry: Me, material: Qe, program: Qe.program, renderOrder: we.renderOrder, z: Se, group: Ge }, le[de] = ze) : (ze.id = we.id, ze.object = we, ze.geometry = Me, ze.material = Qe, ze.program = Qe.program, ze.renderOrder = we.renderOrder, ze.z = Se, ze.group = Ge), (Qe.transparent === !0 ? ve : pe).push(ze), de++;
            }, sort: function() {
              pe.length > 1 && pe.sort(yd), ve.length > 1 && ve.sort(vd);
            } };
          }(), Q[se] = ue), ue;
        }, dispose: function() {
          Q = {};
        } };
      }
      var qo, Ed = 0;
      function bd() {
        var Q = new function() {
          var le = {};
          return { get: function(de) {
            if (le[de.id] !== void 0)
              return le[de.id];
            var pe;
            switch (de.type) {
              case "DirectionalLight":
                pe = { direction: new mt(), color: new sn(), shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new wr() };
                break;
              case "SpotLight":
                pe = { position: new mt(), direction: new mt(), color: new sn(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new wr() };
                break;
              case "PointLight":
                pe = { position: new mt(), color: new sn(), distance: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new wr(), shadowCameraNear: 1, shadowCameraFar: 1e3 };
                break;
              case "HemisphereLight":
                pe = { direction: new mt(), skyColor: new sn(), groundColor: new sn() };
                break;
              case "RectAreaLight":
                pe = { color: new sn(), position: new mt(), halfWidth: new mt(), halfHeight: new mt() };
            }
            return le[de.id] = pe, pe;
          } };
        }(), te = { id: Ed++, hash: { stateID: -1, directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, shadowsLength: -1 }, ambient: [0, 0, 0], directional: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], point: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [] }, ae = new mt(), se = new An(), ue = new An();
        return { setup: function(le, de, pe) {
          for (var ve = 0, we = 0, Me = 0, Qe = 0, Se = 0, Ge = 0, ze = 0, Ze = 0, nt = pe.matrixWorldInverse, ct = 0, yt = le.length; ct < yt; ct++) {
            var st = le[ct], Mt = st.color, Ot = st.intensity, dt = st.distance, wt = st.shadow && st.shadow.map ? st.shadow.map.texture : null;
            if (st.isAmbientLight)
              ve += Mt.r * Ot, we += Mt.g * Ot, Me += Mt.b * Ot;
            else if (st.isDirectionalLight) {
              if ((Pt = Q.get(st)).color.copy(st.color).multiplyScalar(st.intensity), Pt.direction.setFromMatrixPosition(st.matrixWorld), ae.setFromMatrixPosition(st.target.matrixWorld), Pt.direction.sub(ae), Pt.direction.transformDirection(nt), Pt.shadow = st.castShadow, st.castShadow) {
                var $t = st.shadow;
                Pt.shadowBias = $t.bias, Pt.shadowRadius = $t.radius, Pt.shadowMapSize = $t.mapSize;
              }
              te.directionalShadowMap[Qe] = wt, te.directionalShadowMatrix[Qe] = st.shadow.matrix, te.directional[Qe] = Pt, Qe++;
            } else if (st.isSpotLight)
              (Pt = Q.get(st)).position.setFromMatrixPosition(st.matrixWorld), Pt.position.applyMatrix4(nt), Pt.color.copy(Mt).multiplyScalar(Ot), Pt.distance = dt, Pt.direction.setFromMatrixPosition(st.matrixWorld), ae.setFromMatrixPosition(st.target.matrixWorld), Pt.direction.sub(ae), Pt.direction.transformDirection(nt), Pt.coneCos = Math.cos(st.angle), Pt.penumbraCos = Math.cos(st.angle * (1 - st.penumbra)), Pt.decay = st.distance === 0 ? 0 : st.decay, Pt.shadow = st.castShadow, st.castShadow && ($t = st.shadow, Pt.shadowBias = $t.bias, Pt.shadowRadius = $t.radius, Pt.shadowMapSize = $t.mapSize), te.spotShadowMap[Ge] = wt, te.spotShadowMatrix[Ge] = st.shadow.matrix, te.spot[Ge] = Pt, Ge++;
            else if (st.isRectAreaLight)
              (Pt = Q.get(st)).color.copy(Mt).multiplyScalar(Ot), Pt.position.setFromMatrixPosition(st.matrixWorld), Pt.position.applyMatrix4(nt), ue.identity(), se.copy(st.matrixWorld), se.premultiply(nt), ue.extractRotation(se), Pt.halfWidth.set(0.5 * st.width, 0, 0), Pt.halfHeight.set(0, 0.5 * st.height, 0), Pt.halfWidth.applyMatrix4(ue), Pt.halfHeight.applyMatrix4(ue), te.rectArea[ze] = Pt, ze++;
            else if (st.isPointLight)
              (Pt = Q.get(st)).position.setFromMatrixPosition(st.matrixWorld), Pt.position.applyMatrix4(nt), Pt.color.copy(st.color).multiplyScalar(st.intensity), Pt.distance = st.distance, Pt.decay = st.distance === 0 ? 0 : st.decay, Pt.shadow = st.castShadow, st.castShadow && ($t = st.shadow, Pt.shadowBias = $t.bias, Pt.shadowRadius = $t.radius, Pt.shadowMapSize = $t.mapSize, Pt.shadowCameraNear = $t.camera.near, Pt.shadowCameraFar = $t.camera.far), te.pointShadowMap[Se] = wt, te.pointShadowMatrix[Se] = st.shadow.matrix, te.point[Se] = Pt, Se++;
            else if (st.isHemisphereLight) {
              var Pt;
              (Pt = Q.get(st)).direction.setFromMatrixPosition(st.matrixWorld), Pt.direction.transformDirection(nt), Pt.direction.normalize(), Pt.skyColor.copy(st.color).multiplyScalar(Ot), Pt.groundColor.copy(st.groundColor).multiplyScalar(Ot), te.hemi[Ze] = Pt, Ze++;
            }
          }
          te.ambient[0] = ve, te.ambient[1] = we, te.ambient[2] = Me, te.directional.length = Qe, te.spot.length = Ge, te.rectArea.length = ze, te.point.length = Se, te.hemi.length = Ze, te.hash.stateID = te.id, te.hash.directionalLength = Qe, te.hash.pointLength = Se, te.hash.spotLength = Ge, te.hash.rectAreaLength = ze, te.hash.hemiLength = Ze, te.hash.shadowsLength = de.length;
        }, state: te };
      }
      function il() {
        var Q = new bd(), te = [], ae = [];
        return { init: function() {
          te.length = 0, ae.length = 0;
        }, state: { lightsArray: te, shadowsArray: ae, lights: Q }, setupLights: function(se) {
          Q.setup(te, ae, se);
        }, pushLight: function(se) {
          te.push(se);
        }, pushShadow: function(se) {
          ae.push(se);
        } };
      }
      function Ja(Q) {
        In.call(this), this.type = "MeshDepthMaterial", this.depthPacking = Bs, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.setValues(Q);
      }
      function Xa(Q) {
        In.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new mt(), this.nearDistance = 1, this.farDistance = 1e3, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.lights = !1, this.setValues(Q);
      }
      function al(Q, te, ae) {
        for (var se = new Cc(), ue = new An(), le = new wr(), de = new wr(ae, ae), pe = new mt(), ve = new mt(), we = 1, Me = 2, Qe = 1 + (we | Me), Se = new Array(Qe), Ge = new Array(Qe), ze = {}, Ze = { 0: Ne, 1: He, 2: Pe }, nt = [new mt(1, 0, 0), new mt(-1, 0, 0), new mt(0, 0, 1), new mt(0, 0, -1), new mt(0, 1, 0), new mt(0, -1, 0)], ct = [new mt(0, 1, 0), new mt(0, 1, 0), new mt(0, 1, 0), new mt(0, 1, 0), new mt(0, 0, 1), new mt(0, 0, -1)], yt = [new Zn(), new Zn(), new Zn(), new Zn(), new Zn(), new Zn()], st = 0; st !== Qe; ++st) {
          var Mt = (st & we) != 0, Ot = (st & Me) != 0, dt = new Ja({ depthPacking: Po, morphTargets: Mt, skinning: Ot });
          Se[st] = dt;
          var wt = new Xa({ morphTargets: Mt, skinning: Ot });
          Ge[st] = wt;
        }
        var $t = this;
        function Pt(Ht, ir, dr, vr, pr, Or) {
          var Mr = Ht.geometry, hr = null, Cr = Se, lr = Ht.customDepthMaterial;
          if (dr && (Cr = Ge, lr = Ht.customDistanceMaterial), lr)
            hr = lr;
          else {
            var Yr = !1;
            ir.morphTargets && (Mr && Mr.isBufferGeometry ? Yr = Mr.morphAttributes && Mr.morphAttributes.position && Mr.morphAttributes.position.length > 0 : Mr && Mr.isGeometry && (Yr = Mr.morphTargets && Mr.morphTargets.length > 0)), Ht.isSkinnedMesh && ir.skinning === !1 && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", Ht);
            var Qr = Ht.isSkinnedMesh && ir.skinning, un = 0;
            Yr && (un |= we), Qr && (un |= Me), hr = Cr[un];
          }
          if (Q.localClippingEnabled && ir.clipShadows === !0 && ir.clippingPlanes.length !== 0) {
            var yn = hr.uuid, ni = ir.uuid, Bi = ze[yn];
            Bi === void 0 && (Bi = {}, ze[yn] = Bi);
            var Kn = Bi[ni];
            Kn === void 0 && (Kn = hr.clone(), Bi[ni] = Kn), hr = Kn;
          }
          return hr.visible = ir.visible, hr.wireframe = ir.wireframe, hr.side = ir.shadowSide != null ? ir.shadowSide : Ze[ir.side], hr.clipShadows = ir.clipShadows, hr.clippingPlanes = ir.clippingPlanes, hr.clipIntersection = ir.clipIntersection, hr.wireframeLinewidth = ir.wireframeLinewidth, hr.linewidth = ir.linewidth, dr && hr.isMeshDistanceMaterial && (hr.referencePosition.copy(vr), hr.nearDistance = pr, hr.farDistance = Or), hr;
        }
        function er(Ht, ir, dr, vr) {
          if (Ht.visible !== !1) {
            if (Ht.layers.test(ir.layers) && (Ht.isMesh || Ht.isLine || Ht.isPoints) && Ht.castShadow && (!Ht.frustumCulled || se.intersectsObject(Ht))) {
              Ht.modelViewMatrix.multiplyMatrices(dr.matrixWorldInverse, Ht.matrixWorld);
              var pr = te.update(Ht), Or = Ht.material;
              if (Array.isArray(Or))
                for (var Mr = pr.groups, hr = 0, Cr = Mr.length; hr < Cr; hr++) {
                  var lr = Mr[hr], Yr = Or[lr.materialIndex];
                  if (Yr && Yr.visible) {
                    var Qr = Pt(Ht, Yr, vr, ve, dr.near, dr.far);
                    Q.renderBufferDirect(dr, null, pr, Qr, Ht, lr);
                  }
                }
              else
                Or.visible && (Qr = Pt(Ht, Or, vr, ve, dr.near, dr.far), Q.renderBufferDirect(dr, null, pr, Qr, Ht, null));
            }
            for (var un = Ht.children, yn = 0, ni = un.length; yn < ni; yn++)
              er(un[yn], ir, dr, vr);
          }
        }
        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = Ie, this.render = function(Ht, ir, dr) {
          if ($t.enabled !== !1 && ($t.autoUpdate !== !1 || $t.needsUpdate !== !1) && Ht.length !== 0) {
            var vr, pr = Q.context, Or = Q.state;
            Or.disable(pr.BLEND), Or.buffers.color.setClear(1, 1, 1, 1), Or.buffers.depth.setTest(!0), Or.setScissorTest(!1);
            for (var Mr = 0, hr = Ht.length; Mr < hr; Mr++) {
              var Cr = Ht[Mr], lr = Cr.shadow, Yr = Cr && Cr.isPointLight;
              if (lr !== void 0) {
                var Qr = lr.camera;
                if (le.copy(lr.mapSize), le.min(de), Yr) {
                  var un = le.x, yn = le.y;
                  yt[0].set(2 * un, yn, un, yn), yt[1].set(0, yn, un, yn), yt[2].set(3 * un, yn, un, yn), yt[3].set(un, yn, un, yn), yt[4].set(3 * un, 0, un, yn), yt[5].set(un, 0, un, yn), le.x *= 4, le.y *= 2;
                }
                if (lr.map === null) {
                  var ni = { minFilter: _r, magFilter: _r, format: tr };
                  lr.map = new no(le.x, le.y, ni), lr.map.texture.name = Cr.name + ".shadowMap", Qr.updateProjectionMatrix();
                }
                lr.isSpotLightShadow && lr.update(Cr);
                var Bi = lr.map, Kn = lr.matrix;
                ve.setFromMatrixPosition(Cr.matrixWorld), Qr.position.copy(ve), Yr ? (vr = 6, Kn.makeTranslation(-ve.x, -ve.y, -ve.z)) : (vr = 1, pe.setFromMatrixPosition(Cr.target.matrixWorld), Qr.lookAt(pe), Qr.updateMatrixWorld(), Kn.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), Kn.multiply(Qr.projectionMatrix), Kn.multiply(Qr.matrixWorldInverse)), Q.setRenderTarget(Bi), Q.clear();
                for (var kr = 0; kr < vr; kr++) {
                  if (Yr) {
                    pe.copy(Qr.position), pe.add(nt[kr]), Qr.up.copy(ct[kr]), Qr.lookAt(pe), Qr.updateMatrixWorld();
                    var Fn = yt[kr];
                    Or.viewport(Fn);
                  }
                  ue.multiplyMatrices(Qr.projectionMatrix, Qr.matrixWorldInverse), se.setFromMatrix(ue), er(ir, dr, Qr, Yr);
                }
              } else
                console.warn("THREE.WebGLShadowMap:", Cr, "has no shadow.");
            }
            $t.needsUpdate = !1;
          }
        };
      }
      function Bd(Q, te, ae, se, ue, le, de) {
        var pe, ve = {};
        function we(dt, wt) {
          if (dt.width > wt || dt.height > wt) {
            if ("data" in dt)
              return void console.warn("THREE.WebGLRenderer: image in DataTexture is too big (" + dt.width + "x" + dt.height + ").");
            var $t = wt / Math.max(dt.width, dt.height), Pt = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            return Pt.width = Math.floor(dt.width * $t), Pt.height = Math.floor(dt.height * $t), Pt.getContext("2d").drawImage(dt, 0, 0, dt.width, dt.height, 0, 0, Pt.width, Pt.height), console.warn("THREE.WebGLRenderer: image is too big (" + dt.width + "x" + dt.height + "). Resized to " + Pt.width + "x" + Pt.height), Pt;
          }
          return dt;
        }
        function Me(dt) {
          return Cn.isPowerOfTwo(dt.width) && Cn.isPowerOfTwo(dt.height);
        }
        function Qe(dt, wt) {
          return dt.generateMipmaps && wt && dt.minFilter !== _r && dt.minFilter !== an;
        }
        function Se(dt, wt, $t, Pt) {
          Q.generateMipmap(dt), se.get(wt).__maxMipLevel = Math.log(Math.max($t, Pt)) * Math.LOG2E;
        }
        function Ge(dt, wt) {
          if (!ue.isWebGL2)
            return dt;
          if (dt === Q.RGB) {
            if (wt === Q.FLOAT)
              return Q.RGB32F;
            if (wt === Q.HALF_FLOAT)
              return Q.RGB16F;
            if (wt === Q.UNSIGNED_BYTE)
              return Q.RGB8;
          }
          if (dt === Q.RGBA) {
            if (wt === Q.FLOAT)
              return Q.RGBA32F;
            if (wt === Q.HALF_FLOAT)
              return Q.RGBA16F;
            if (wt === Q.UNSIGNED_BYTE)
              return Q.RGBA8;
          }
          return dt;
        }
        function ze(dt) {
          return dt === _r || dt === en || dt === Jn ? Q.NEAREST : Q.LINEAR;
        }
        function Ze(dt) {
          var wt = dt.target;
          wt.removeEventListener("dispose", Ze), function($t) {
            var Pt = se.get($t);
            if ($t.image && Pt.__image__webglTextureCube)
              Q.deleteTexture(Pt.__image__webglTextureCube);
            else {
              if (Pt.__webglInit === void 0)
                return;
              Q.deleteTexture(Pt.__webglTexture);
            }
            se.remove($t);
          }(wt), wt.isVideoTexture && delete ve[wt.id], de.memory.textures--;
        }
        function nt(dt) {
          var wt = dt.target;
          wt.removeEventListener("dispose", nt), function($t) {
            var Pt = se.get($t), er = se.get($t.texture);
            if (!!$t) {
              if (er.__webglTexture !== void 0 && Q.deleteTexture(er.__webglTexture), $t.depthTexture && $t.depthTexture.dispose(), $t.isWebGLRenderTargetCube)
                for (var Ht = 0; Ht < 6; Ht++)
                  Q.deleteFramebuffer(Pt.__webglFramebuffer[Ht]), Pt.__webglDepthbuffer && Q.deleteRenderbuffer(Pt.__webglDepthbuffer[Ht]);
              else
                Q.deleteFramebuffer(Pt.__webglFramebuffer), Pt.__webglDepthbuffer && Q.deleteRenderbuffer(Pt.__webglDepthbuffer);
              se.remove($t.texture), se.remove($t);
            }
          }(wt), de.memory.textures--;
        }
        function ct(dt, wt) {
          var $t = se.get(dt);
          if (dt.isVideoTexture && function(er) {
            var Ht = er.id, ir = de.render.frame;
            ve[Ht] !== ir && (ve[Ht] = ir, er.update());
          }(dt), dt.version > 0 && $t.__version !== dt.version) {
            var Pt = dt.image;
            if (Pt === void 0)
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else {
              if (Pt.complete !== !1)
                return void function(er, Ht, ir) {
                  er.__webglInit === void 0 && (er.__webglInit = !0, Ht.addEventListener("dispose", Ze), er.__webglTexture = Q.createTexture(), de.memory.textures++), ae.activeTexture(Q.TEXTURE0 + ir), ae.bindTexture(Q.TEXTURE_2D, er.__webglTexture), Q.pixelStorei(Q.UNPACK_FLIP_Y_WEBGL, Ht.flipY), Q.pixelStorei(Q.UNPACK_PREMULTIPLY_ALPHA_WEBGL, Ht.premultiplyAlpha), Q.pixelStorei(Q.UNPACK_ALIGNMENT, Ht.unpackAlignment);
                  var dr = we(Ht.image, ue.maxTextureSize);
                  (function(Qr) {
                    return !ue.isWebGL2 && (Qr.wrapS !== br || Qr.wrapT !== br || Qr.minFilter !== _r && Qr.minFilter !== an);
                  })(Ht) && Me(dr) === !1 && (dr = function(Qr) {
                    return Qr instanceof HTMLImageElement || Qr instanceof HTMLCanvasElement || Qr instanceof ImageBitmap ? (pe === void 0 && (pe = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), pe.width = Cn.floorPowerOfTwo(Qr.width), pe.height = Cn.floorPowerOfTwo(Qr.height), pe.getContext("2d").drawImage(Qr, 0, 0, pe.width, pe.height), console.warn("THREE.WebGLRenderer: image is not power of two (" + Qr.width + "x" + Qr.height + "). Resized to " + pe.width + "x" + pe.height), pe) : Qr;
                  }(dr));
                  var vr = Me(dr), pr = le.convert(Ht.format), Or = le.convert(Ht.type), Mr = Ge(pr, Or);
                  yt(Q.TEXTURE_2D, Ht, vr);
                  var hr, Cr = Ht.mipmaps;
                  if (Ht.isDepthTexture) {
                    if (Mr = Q.DEPTH_COMPONENT, Ht.type === Hn) {
                      if (!ue.isWebGL2)
                        throw new Error("Float Depth Texture only supported in WebGL2.0");
                      Mr = Q.DEPTH_COMPONENT32F;
                    } else
                      ue.isWebGL2 && (Mr = Q.DEPTH_COMPONENT16);
                    Ht.format === Bn && Mr === Q.DEPTH_COMPONENT && Ht.type !== Ai && Ht.type !== Ri && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), Ht.type = Ai, Or = le.convert(Ht.type)), Ht.format === En && (Mr = Q.DEPTH_STENCIL, Ht.type !== mi && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), Ht.type = mi, Or = le.convert(Ht.type))), ae.texImage2D(Q.TEXTURE_2D, 0, Mr, dr.width, dr.height, 0, pr, Or, null);
                  } else if (Ht.isDataTexture)
                    if (Cr.length > 0 && vr) {
                      for (var lr = 0, Yr = Cr.length; lr < Yr; lr++)
                        hr = Cr[lr], ae.texImage2D(Q.TEXTURE_2D, lr, Mr, hr.width, hr.height, 0, pr, Or, hr.data);
                      Ht.generateMipmaps = !1, er.__maxMipLevel = Cr.length - 1;
                    } else
                      ae.texImage2D(Q.TEXTURE_2D, 0, Mr, dr.width, dr.height, 0, pr, Or, dr.data), er.__maxMipLevel = 0;
                  else if (Ht.isCompressedTexture) {
                    for (var lr = 0, Yr = Cr.length; lr < Yr; lr++)
                      hr = Cr[lr], Ht.format !== tr && Ht.format !== Rt ? ae.getCompressedTextureFormats().indexOf(pr) > -1 ? ae.compressedTexImage2D(Q.TEXTURE_2D, lr, Mr, hr.width, hr.height, 0, hr.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : ae.texImage2D(Q.TEXTURE_2D, lr, Mr, hr.width, hr.height, 0, pr, Or, hr.data);
                    er.__maxMipLevel = Cr.length - 1;
                  } else if (Cr.length > 0 && vr) {
                    for (var lr = 0, Yr = Cr.length; lr < Yr; lr++)
                      hr = Cr[lr], ae.texImage2D(Q.TEXTURE_2D, lr, Mr, pr, Or, hr);
                    Ht.generateMipmaps = !1, er.__maxMipLevel = Cr.length - 1;
                  } else
                    ae.texImage2D(Q.TEXTURE_2D, 0, Mr, pr, Or, dr), er.__maxMipLevel = 0;
                  Qe(Ht, vr) && Se(Q.TEXTURE_2D, Ht, dr.width, dr.height), er.__version = Ht.version, Ht.onUpdate && Ht.onUpdate(Ht);
                }($t, dt, wt);
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            }
          }
          ae.activeTexture(Q.TEXTURE0 + wt), ae.bindTexture(Q.TEXTURE_2D, $t.__webglTexture);
        }
        function yt(dt, wt, $t) {
          var Pt;
          if ($t ? (Q.texParameteri(dt, Q.TEXTURE_WRAP_S, le.convert(wt.wrapS)), Q.texParameteri(dt, Q.TEXTURE_WRAP_T, le.convert(wt.wrapT)), Q.texParameteri(dt, Q.TEXTURE_MAG_FILTER, le.convert(wt.magFilter)), Q.texParameteri(dt, Q.TEXTURE_MIN_FILTER, le.convert(wt.minFilter))) : (Q.texParameteri(dt, Q.TEXTURE_WRAP_S, Q.CLAMP_TO_EDGE), Q.texParameteri(dt, Q.TEXTURE_WRAP_T, Q.CLAMP_TO_EDGE), wt.wrapS === br && wt.wrapT === br || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), Q.texParameteri(dt, Q.TEXTURE_MAG_FILTER, ze(wt.magFilter)), Q.texParameteri(dt, Q.TEXTURE_MIN_FILTER, ze(wt.minFilter)), wt.minFilter !== _r && wt.minFilter !== an && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), Pt = te.get("EXT_texture_filter_anisotropic")) {
            if (wt.type === Hn && te.get("OES_texture_float_linear") === null || wt.type === Xn && (ue.isWebGL2 || te.get("OES_texture_half_float_linear")) === null)
              return;
            (wt.anisotropy > 1 || se.get(wt).__currentAnisotropy) && (Q.texParameterf(dt, Pt.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(wt.anisotropy, ue.getMaxAnisotropy())), se.get(wt).__currentAnisotropy = wt.anisotropy);
          }
        }
        function st(dt, wt, $t, Pt) {
          var er = le.convert(wt.texture.format), Ht = le.convert(wt.texture.type), ir = Ge(er, Ht);
          ae.texImage2D(Pt, 0, ir, wt.width, wt.height, 0, er, Ht, null), Q.bindFramebuffer(Q.FRAMEBUFFER, dt), Q.framebufferTexture2D(Q.FRAMEBUFFER, $t, Pt, se.get(wt.texture).__webglTexture, 0), Q.bindFramebuffer(Q.FRAMEBUFFER, null);
        }
        function Mt(dt, wt) {
          Q.bindRenderbuffer(Q.RENDERBUFFER, dt), wt.depthBuffer && !wt.stencilBuffer ? (Q.renderbufferStorage(Q.RENDERBUFFER, Q.DEPTH_COMPONENT16, wt.width, wt.height), Q.framebufferRenderbuffer(Q.FRAMEBUFFER, Q.DEPTH_ATTACHMENT, Q.RENDERBUFFER, dt)) : wt.depthBuffer && wt.stencilBuffer ? (Q.renderbufferStorage(Q.RENDERBUFFER, Q.DEPTH_STENCIL, wt.width, wt.height), Q.framebufferRenderbuffer(Q.FRAMEBUFFER, Q.DEPTH_STENCIL_ATTACHMENT, Q.RENDERBUFFER, dt)) : Q.renderbufferStorage(Q.RENDERBUFFER, Q.RGBA4, wt.width, wt.height), Q.bindRenderbuffer(Q.RENDERBUFFER, null);
        }
        function Ot(dt) {
          var wt = se.get(dt), $t = dt.isWebGLRenderTargetCube === !0;
          if (dt.depthTexture) {
            if ($t)
              throw new Error("target.depthTexture not supported in Cube render targets");
            (function(er, Ht) {
              if (Ht && Ht.isWebGLRenderTargetCube)
                throw new Error("Depth Texture with cube render targets is not supported");
              if (Q.bindFramebuffer(Q.FRAMEBUFFER, er), !Ht.depthTexture || !Ht.depthTexture.isDepthTexture)
                throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
              se.get(Ht.depthTexture).__webglTexture && Ht.depthTexture.image.width === Ht.width && Ht.depthTexture.image.height === Ht.height || (Ht.depthTexture.image.width = Ht.width, Ht.depthTexture.image.height = Ht.height, Ht.depthTexture.needsUpdate = !0), ct(Ht.depthTexture, 0);
              var ir = se.get(Ht.depthTexture).__webglTexture;
              if (Ht.depthTexture.format === Bn)
                Q.framebufferTexture2D(Q.FRAMEBUFFER, Q.DEPTH_ATTACHMENT, Q.TEXTURE_2D, ir, 0);
              else {
                if (Ht.depthTexture.format !== En)
                  throw new Error("Unknown depthTexture format");
                Q.framebufferTexture2D(Q.FRAMEBUFFER, Q.DEPTH_STENCIL_ATTACHMENT, Q.TEXTURE_2D, ir, 0);
              }
            })(wt.__webglFramebuffer, dt);
          } else if ($t) {
            wt.__webglDepthbuffer = [];
            for (var Pt = 0; Pt < 6; Pt++)
              Q.bindFramebuffer(Q.FRAMEBUFFER, wt.__webglFramebuffer[Pt]), wt.__webglDepthbuffer[Pt] = Q.createRenderbuffer(), Mt(wt.__webglDepthbuffer[Pt], dt);
          } else
            Q.bindFramebuffer(Q.FRAMEBUFFER, wt.__webglFramebuffer), wt.__webglDepthbuffer = Q.createRenderbuffer(), Mt(wt.__webglDepthbuffer, dt);
          Q.bindFramebuffer(Q.FRAMEBUFFER, null);
        }
        this.setTexture2D = ct, this.setTextureCube = function(dt, wt) {
          var $t = se.get(dt);
          if (dt.image.length === 6)
            if (dt.version > 0 && $t.__version !== dt.version) {
              $t.__image__webglTextureCube || (dt.addEventListener("dispose", Ze), $t.__image__webglTextureCube = Q.createTexture(), de.memory.textures++), ae.activeTexture(Q.TEXTURE0 + wt), ae.bindTexture(Q.TEXTURE_CUBE_MAP, $t.__image__webglTextureCube), Q.pixelStorei(Q.UNPACK_FLIP_Y_WEBGL, dt.flipY);
              for (var Pt = dt && dt.isCompressedTexture, er = dt.image[0] && dt.image[0].isDataTexture, Ht = [], ir = 0; ir < 6; ir++)
                Ht[ir] = Pt || er ? er ? dt.image[ir].image : dt.image[ir] : we(dt.image[ir], ue.maxCubemapSize);
              var dr = Ht[0], vr = Me(dr), pr = le.convert(dt.format), Or = le.convert(dt.type), Mr = Ge(pr, Or);
              for (yt(Q.TEXTURE_CUBE_MAP, dt, vr), ir = 0; ir < 6; ir++)
                if (Pt)
                  for (var hr, Cr = Ht[ir].mipmaps, lr = 0, Yr = Cr.length; lr < Yr; lr++)
                    hr = Cr[lr], dt.format !== tr && dt.format !== Rt ? ae.getCompressedTextureFormats().indexOf(pr) > -1 ? ae.compressedTexImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X + ir, lr, Mr, hr.width, hr.height, 0, hr.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : ae.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X + ir, lr, Mr, hr.width, hr.height, 0, pr, Or, hr.data);
                else
                  er ? ae.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X + ir, 0, Mr, Ht[ir].width, Ht[ir].height, 0, pr, Or, Ht[ir].data) : ae.texImage2D(Q.TEXTURE_CUBE_MAP_POSITIVE_X + ir, 0, Mr, pr, Or, Ht[ir]);
              $t.__maxMipLevel = Pt ? Cr.length - 1 : 0, Qe(dt, vr) && Se(Q.TEXTURE_CUBE_MAP, dt, dr.width, dr.height), $t.__version = dt.version, dt.onUpdate && dt.onUpdate(dt);
            } else
              ae.activeTexture(Q.TEXTURE0 + wt), ae.bindTexture(Q.TEXTURE_CUBE_MAP, $t.__image__webglTextureCube);
        }, this.setTextureCubeDynamic = function(dt, wt) {
          ae.activeTexture(Q.TEXTURE0 + wt), ae.bindTexture(Q.TEXTURE_CUBE_MAP, se.get(dt).__webglTexture);
        }, this.setupRenderTarget = function(dt) {
          var wt = se.get(dt), $t = se.get(dt.texture);
          dt.addEventListener("dispose", nt), $t.__webglTexture = Q.createTexture(), de.memory.textures++;
          var Pt = dt.isWebGLRenderTargetCube === !0, er = Me(dt);
          if (Pt) {
            wt.__webglFramebuffer = [];
            for (var Ht = 0; Ht < 6; Ht++)
              wt.__webglFramebuffer[Ht] = Q.createFramebuffer();
          } else
            wt.__webglFramebuffer = Q.createFramebuffer();
          if (Pt) {
            for (ae.bindTexture(Q.TEXTURE_CUBE_MAP, $t.__webglTexture), yt(Q.TEXTURE_CUBE_MAP, dt.texture, er), Ht = 0; Ht < 6; Ht++)
              st(wt.__webglFramebuffer[Ht], dt, Q.COLOR_ATTACHMENT0, Q.TEXTURE_CUBE_MAP_POSITIVE_X + Ht);
            Qe(dt.texture, er) && Se(Q.TEXTURE_CUBE_MAP, dt.texture, dt.width, dt.height), ae.bindTexture(Q.TEXTURE_CUBE_MAP, null);
          } else
            ae.bindTexture(Q.TEXTURE_2D, $t.__webglTexture), yt(Q.TEXTURE_2D, dt.texture, er), st(wt.__webglFramebuffer, dt, Q.COLOR_ATTACHMENT0, Q.TEXTURE_2D), Qe(dt.texture, er) && Se(Q.TEXTURE_2D, dt.texture, dt.width, dt.height), ae.bindTexture(Q.TEXTURE_2D, null);
          dt.depthBuffer && Ot(dt);
        }, this.updateRenderTargetMipmap = function(dt) {
          var wt = dt.texture;
          if (Qe(wt, Me(dt))) {
            var $t = dt.isWebGLRenderTargetCube ? Q.TEXTURE_CUBE_MAP : Q.TEXTURE_2D, Pt = se.get(wt).__webglTexture;
            ae.bindTexture($t, Pt), Se($t, wt, dt.width, dt.height), ae.bindTexture($t, null);
          }
        };
      }
      function ol(Q, te, ae) {
        return { convert: function(se) {
          var ue;
          if (se === gr)
            return Q.REPEAT;
          if (se === br)
            return Q.CLAMP_TO_EDGE;
          if (se === mr)
            return Q.MIRRORED_REPEAT;
          if (se === _r)
            return Q.NEAREST;
          if (se === en)
            return Q.NEAREST_MIPMAP_NEAREST;
          if (se === Jn)
            return Q.NEAREST_MIPMAP_LINEAR;
          if (se === an)
            return Q.LINEAR;
          if (se === qn)
            return Q.LINEAR_MIPMAP_NEAREST;
          if (se === $n)
            return Q.LINEAR_MIPMAP_LINEAR;
          if (se === Gn)
            return Q.UNSIGNED_BYTE;
          if (se === Ln)
            return Q.UNSIGNED_SHORT_4_4_4_4;
          if (se === si)
            return Q.UNSIGNED_SHORT_5_5_5_1;
          if (se === gi)
            return Q.UNSIGNED_SHORT_5_6_5;
          if (se === Un)
            return Q.BYTE;
          if (se === oi)
            return Q.SHORT;
          if (se === Ai)
            return Q.UNSIGNED_SHORT;
          if (se === Ji)
            return Q.INT;
          if (se === Ri)
            return Q.UNSIGNED_INT;
          if (se === Hn)
            return Q.FLOAT;
          if (se === Xn) {
            if (ae.isWebGL2)
              return Q.HALF_FLOAT;
            if ((ue = te.get("OES_texture_half_float")) !== null)
              return ue.HALF_FLOAT_OES;
          }
          if (se === yi)
            return Q.ALPHA;
          if (se === Rt)
            return Q.RGB;
          if (se === tr)
            return Q.RGBA;
          if (se === Nr)
            return Q.LUMINANCE;
          if (se === on)
            return Q.LUMINANCE_ALPHA;
          if (se === Bn)
            return Q.DEPTH_COMPONENT;
          if (se === En)
            return Q.DEPTH_STENCIL;
          if (se === St)
            return Q.FUNC_ADD;
          if (se === Vt)
            return Q.FUNC_SUBTRACT;
          if (se === Xt)
            return Q.FUNC_REVERSE_SUBTRACT;
          if (se === Gt)
            return Q.ZERO;
          if (se === pt)
            return Q.ONE;
          if (se === It)
            return Q.SRC_COLOR;
          if (se === qt)
            return Q.ONE_MINUS_SRC_COLOR;
          if (se === De)
            return Q.SRC_ALPHA;
          if (se === ar)
            return Q.ONE_MINUS_SRC_ALPHA;
          if (se === rr)
            return Q.DST_ALPHA;
          if (se === Ar)
            return Q.ONE_MINUS_DST_ALPHA;
          if (se === vt)
            return Q.DST_COLOR;
          if (se === Ut)
            return Q.ONE_MINUS_DST_COLOR;
          if (se === Xe)
            return Q.SRC_ALPHA_SATURATE;
          if ((se === pn || se === Sn || se === Vn || se === Zr) && (ue = te.get("WEBGL_compressed_texture_s3tc")) !== null) {
            if (se === pn)
              return ue.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (se === Sn)
              return ue.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (se === Vn)
              return ue.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (se === Zr)
              return ue.COMPRESSED_RGBA_S3TC_DXT5_EXT;
          }
          if ((se === Xr || se === $r || se === xt || se === Br) && (ue = te.get("WEBGL_compressed_texture_pvrtc")) !== null) {
            if (se === Xr)
              return ue.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (se === $r)
              return ue.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (se === xt)
              return ue.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (se === Br)
              return ue.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
          }
          if (se === Wt && (ue = te.get("WEBGL_compressed_texture_etc1")) !== null)
            return ue.COMPRESSED_RGB_ETC1_WEBGL;
          if ((se === Hr || se === qe || se === Ye || se === ot || se === ft || se === ut || se === Jt || se === cr || se === or || se === Tr || se === Vr || se === Rr || se === Lr || se === wn) && (ue = te.get("WEBGL_compressed_texture_astc")) !== null)
            return se;
          if (se === Lt || se === Zt) {
            if (ae.isWebGL2) {
              if (se === Lt)
                return Q.MIN;
              if (se === Zt)
                return Q.MAX;
            }
            if ((ue = te.get("EXT_blend_minmax")) !== null) {
              if (se === Lt)
                return ue.MIN_EXT;
              if (se === Zt)
                return ue.MAX_EXT;
            }
          }
          if (se === mi) {
            if (ae.isWebGL2)
              return Q.UNSIGNED_INT_24_8;
            if ((ue = te.get("WEBGL_depth_texture")) !== null)
              return ue.UNSIGNED_INT_24_8_WEBGL;
          }
          return 0;
        } };
      }
      function jo() {
        jr.call(this), this.type = "Group";
      }
      function fi(Q, te, ae, se) {
        Sa.call(this), this.type = "PerspectiveCamera", this.fov = Q !== void 0 ? Q : 50, this.zoom = 1, this.near = ae !== void 0 ? ae : 0.1, this.far = se !== void 0 ? se : 2e3, this.focus = 10, this.aspect = te !== void 0 ? te : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
      }
      function Ns(Q) {
        fi.call(this), this.cameras = Q || [];
      }
      function sl(Q) {
        var te = this, ae = null, se = null, ue = null, le = [], de = new An(), pe = new An();
        typeof window < "u" && "VRFrameData" in window && (se = new window.VRFrameData(), window.addEventListener("vrdisplaypresentchange", ct, !1));
        var ve = new An(), we = new ci(), Me = new mt(), Qe = new fi();
        Qe.bounds = new Zn(0, 0, 0.5, 1), Qe.layers.enable(1);
        var Se = new fi();
        Se.bounds = new Zn(0.5, 0, 0.5, 1), Se.layers.enable(2);
        var Ge, ze, Ze = new Ns([Qe, Se]);
        function nt() {
          return ae !== null && ae.isPresenting === !0;
        }
        function ct() {
          if (nt()) {
            var Ot = ae.getEyeParameters("left"), dt = Ot.renderWidth, wt = Ot.renderHeight;
            ze = Q.getPixelRatio(), Ge = Q.getSize(), Q.setDrawingBufferSize(2 * dt, wt, 1), Mt.start();
          } else
            te.enabled && (Q.setDrawingBufferSize(Ge.width, Ge.height, ze), Mt.stop());
        }
        Ze.layers.enable(1), Ze.layers.enable(2);
        var yt = [];
        function st(Ot) {
          for (var dt = navigator.getGamepads && navigator.getGamepads(), wt = 0, $t = 0, Pt = dt.length; wt < Pt; wt++) {
            var er = dt[wt];
            if (er && (er.id === "Daydream Controller" || er.id === "Gear VR Controller" || er.id === "Oculus Go Controller" || er.id === "OpenVR Gamepad" || er.id.startsWith("Oculus Touch") || er.id.startsWith("Spatial Controller"))) {
              if ($t === Ot)
                return er;
              $t++;
            }
          }
        }
        this.enabled = !1, this.userHeight = 1.6, this.getController = function(Ot) {
          var dt = le[Ot];
          return dt === void 0 && ((dt = new jo()).matrixAutoUpdate = !1, dt.visible = !1, le[Ot] = dt), dt;
        }, this.getDevice = function() {
          return ae;
        }, this.setDevice = function(Ot) {
          Ot !== void 0 && (ae = Ot), Mt.setContext(Ot);
        }, this.setPoseTarget = function(Ot) {
          Ot !== void 0 && (ue = Ot);
        }, this.getCamera = function(Ot) {
          if (ae === null)
            return Ot.position.set(0, te.userHeight, 0), Ot;
          ae.depthNear = Ot.near, ae.depthFar = Ot.far, ae.getFrameData(se);
          var dt = ae.stageParameters;
          dt ? de.fromArray(dt.sittingToStandingTransform) : de.makeTranslation(0, te.userHeight, 0);
          var wt = se.pose, $t = ue !== null ? ue : Ot;
          if ($t.matrix.copy(de), $t.matrix.decompose($t.position, $t.quaternion, $t.scale), wt.orientation !== null && (we.fromArray(wt.orientation), $t.quaternion.multiply(we)), wt.position !== null && (we.setFromRotationMatrix(de), Me.fromArray(wt.position), Me.applyQuaternion(we), $t.position.add(Me)), $t.updateMatrixWorld(), ae.isPresenting === !1)
            return Ot;
          Qe.near = Ot.near, Se.near = Ot.near, Qe.far = Ot.far, Se.far = Ot.far, Ze.matrixWorld.copy(Ot.matrixWorld), Ze.matrixWorldInverse.copy(Ot.matrixWorldInverse), Qe.matrixWorldInverse.fromArray(se.leftViewMatrix), Se.matrixWorldInverse.fromArray(se.rightViewMatrix), pe.getInverse(de), Qe.matrixWorldInverse.multiply(pe), Se.matrixWorldInverse.multiply(pe);
          var Pt = $t.parent;
          Pt !== null && (ve.getInverse(Pt.matrixWorld), Qe.matrixWorldInverse.multiply(ve), Se.matrixWorldInverse.multiply(ve)), Qe.matrixWorld.getInverse(Qe.matrixWorldInverse), Se.matrixWorld.getInverse(Se.matrixWorldInverse), Qe.projectionMatrix.fromArray(se.leftProjectionMatrix), Se.projectionMatrix.fromArray(se.rightProjectionMatrix), Ze.projectionMatrix.copy(Qe.projectionMatrix);
          var er = ae.getLayers();
          if (er.length) {
            var Ht = er[0];
            Ht.leftBounds !== null && Ht.leftBounds.length === 4 && Qe.bounds.fromArray(Ht.leftBounds), Ht.rightBounds !== null && Ht.rightBounds.length === 4 && Se.bounds.fromArray(Ht.rightBounds);
          }
          return function() {
            for (var ir = 0; ir < le.length; ir++) {
              var dr = le[ir], vr = st(ir);
              if (vr !== void 0 && vr.pose !== void 0) {
                if (vr.pose === null)
                  return;
                var pr = vr.pose;
                pr.hasPosition === !1 && dr.position.set(0.2, -0.6, -0.05), pr.position !== null && dr.position.fromArray(pr.position), pr.orientation !== null && dr.quaternion.fromArray(pr.orientation), dr.matrix.compose(dr.position, dr.quaternion, dr.scale), dr.matrix.premultiply(de), dr.matrix.decompose(dr.position, dr.quaternion, dr.scale), dr.matrixWorldNeedsUpdate = !0, dr.visible = !0;
                var Or = vr.id === "Daydream Controller" ? 0 : 1;
                yt[ir] !== vr.buttons[Or].pressed && (yt[ir] = vr.buttons[Or].pressed, yt[ir] === !0 ? dr.dispatchEvent({ type: "selectstart" }) : (dr.dispatchEvent({ type: "selectend" }), dr.dispatchEvent({ type: "select" })));
              } else
                dr.visible = !1;
            }
          }(), Ze;
        }, this.getStandingMatrix = function() {
          return de;
        }, this.isPresenting = nt;
        var Mt = new Kc();
        this.setAnimationLoop = function(Ot) {
          Mt.setAnimationLoop(Ot);
        }, this.submitFrame = function() {
          nt() && ae.submitFrame();
        }, this.dispose = function() {
          typeof window < "u" && window.removeEventListener("vrdisplaypresentchange", ct);
        };
      }
      function iu(Q) {
        console.log("THREE.WebGLRenderer", he);
        var te = (Q = Q || {}).canvas !== void 0 ? Q.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), ae = Q.context !== void 0 ? Q.context : null, se = Q.alpha !== void 0 && Q.alpha, ue = Q.depth === void 0 || Q.depth, le = Q.stencil === void 0 || Q.stencil, de = Q.antialias !== void 0 && Q.antialias, pe = Q.premultipliedAlpha === void 0 || Q.premultipliedAlpha, ve = Q.preserveDrawingBuffer !== void 0 && Q.preserveDrawingBuffer, we = Q.powerPreference !== void 0 ? Q.powerPreference : "default", Me = null, Qe = null;
        this.domElement = te, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.physicallyCorrectLights = !1, this.toneMapping = Tt, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
        var Se, Ge, ze, Ze, nt, ct, yt, st, Mt, Ot, dt, wt, $t, Pt, er, Ht, ir, dr, vr = this, pr = !1, Or = null, Mr = null, hr = null, Cr = -1, lr = { geometry: null, program: null, wireframe: !1 }, Yr = null, Qr = null, un = new Zn(), yn = new Zn(), ni = null, Bi = 0, Kn = te.width, kr = te.height, Fn = 1, hi = new Zn(0, 0, Kn, kr), ji = new Zn(0, 0, Kn, kr), Ei = !1, Wi = new Cc(), _i = new function() {
          var je = this, Bt = null, Ct = 0, Kt = !1, sr = !1, zr = new Ca(), fr = new zi(), ur = { value: null, needsUpdate: !1 };
          function Ur() {
            ur.value !== Bt && (ur.value = Bt, ur.needsUpdate = Ct > 0), je.numPlanes = Ct, je.numIntersection = 0;
          }
          function Er(xr, rn, nn, Wr) {
            var Sr = xr !== null ? xr.length : 0, tn = null;
            if (Sr !== 0) {
              if (tn = ur.value, Wr !== !0 || tn === null) {
                var vn = nn + 4 * Sr, ln = rn.matrixWorldInverse;
                fr.getNormalMatrix(ln), (tn === null || tn.length < vn) && (tn = new Float32Array(vn));
                for (var hn = 0, On = nn; hn !== Sr; ++hn, On += 4)
                  zr.copy(xr[hn]).applyMatrix4(ln, fr), zr.normal.toArray(tn, On), tn[On + 3] = zr.constant;
              }
              ur.value = tn, ur.needsUpdate = !0;
            }
            return je.numPlanes = Sr, tn;
          }
          this.uniform = ur, this.numPlanes = 0, this.numIntersection = 0, this.init = function(xr, rn, nn) {
            var Wr = xr.length !== 0 || rn || Ct !== 0 || Kt;
            return Kt = rn, Bt = Er(xr, nn, 0), Ct = xr.length, Wr;
          }, this.beginShadows = function() {
            sr = !0, Er(null);
          }, this.endShadows = function() {
            sr = !1, Ur();
          }, this.setState = function(xr, rn, nn, Wr, Sr, tn) {
            if (!Kt || xr === null || xr.length === 0 || sr && !nn)
              sr ? Er(null) : Ur();
            else {
              var vn = sr ? 0 : Ct, ln = 4 * vn, hn = Sr.clippingState || null;
              ur.value = hn, hn = Er(xr, Wr, ln, tn);
              for (var On = 0; On !== ln; ++On)
                hn[On] = Bt[On];
              Sr.clippingState = hn, this.numIntersection = rn ? this.numPlanes : 0, this.numPlanes += vn;
            }
          };
        }(), wa = !1, _a = !1, Qi = new An(), Ci = new mt();
        function eo() {
          return Mr === null ? Fn : 1;
        }
        try {
          var $i = { alpha: se, depth: ue, stencil: le, antialias: de, premultipliedAlpha: pe, preserveDrawingBuffer: ve, powerPreference: we };
          if (te.addEventListener("webglcontextlost", ti, !1), te.addEventListener("webglcontextrestored", pi, !1), (Se = ae || te.getContext("webgl", $i) || te.getContext("experimental-webgl", $i)) === null)
            throw te.getContext("webgl") !== null ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
          Se.getShaderPrecisionFormat === void 0 && (Se.getShaderPrecisionFormat = function() {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
        } catch (je) {
          console.error("THREE.WebGLRenderer: " + je.message);
        }
        function fa() {
          Ge = new function(je) {
            var Bt = {};
            return { get: function(Ct) {
              if (Bt[Ct] !== void 0)
                return Bt[Ct];
              var Kt;
              switch (Ct) {
                case "WEBGL_depth_texture":
                  Kt = je.getExtension("WEBGL_depth_texture") || je.getExtension("MOZ_WEBGL_depth_texture") || je.getExtension("WEBKIT_WEBGL_depth_texture");
                  break;
                case "EXT_texture_filter_anisotropic":
                  Kt = je.getExtension("EXT_texture_filter_anisotropic") || je.getExtension("MOZ_EXT_texture_filter_anisotropic") || je.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                  break;
                case "WEBGL_compressed_texture_s3tc":
                  Kt = je.getExtension("WEBGL_compressed_texture_s3tc") || je.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || je.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                  break;
                case "WEBGL_compressed_texture_pvrtc":
                  Kt = je.getExtension("WEBGL_compressed_texture_pvrtc") || je.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                  break;
                default:
                  Kt = je.getExtension(Ct);
              }
              return Kt === null && console.warn("THREE.WebGLRenderer: " + Ct + " extension not supported."), Bt[Ct] = Kt, Kt;
            } };
          }(Se), (ze = new function(je, Bt, Ct) {
            var Kt;
            function sr(On) {
              if (On === "highp") {
                if (je.getShaderPrecisionFormat(je.VERTEX_SHADER, je.HIGH_FLOAT).precision > 0 && je.getShaderPrecisionFormat(je.FRAGMENT_SHADER, je.HIGH_FLOAT).precision > 0)
                  return "highp";
                On = "mediump";
              }
              return On === "mediump" && je.getShaderPrecisionFormat(je.VERTEX_SHADER, je.MEDIUM_FLOAT).precision > 0 && je.getShaderPrecisionFormat(je.FRAGMENT_SHADER, je.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
            }
            var zr = typeof WebGL2RenderingContext < "u" && je instanceof WebGL2RenderingContext, fr = Ct.precision !== void 0 ? Ct.precision : "highp", ur = sr(fr);
            ur !== fr && (console.warn("THREE.WebGLRenderer:", fr, "not supported, using", ur, "instead."), fr = ur);
            var Ur = Ct.logarithmicDepthBuffer === !0, Er = je.getParameter(je.MAX_TEXTURE_IMAGE_UNITS), xr = je.getParameter(je.MAX_VERTEX_TEXTURE_IMAGE_UNITS), rn = je.getParameter(je.MAX_TEXTURE_SIZE), nn = je.getParameter(je.MAX_CUBE_MAP_TEXTURE_SIZE), Wr = je.getParameter(je.MAX_VERTEX_ATTRIBS), Sr = je.getParameter(je.MAX_VERTEX_UNIFORM_VECTORS), tn = je.getParameter(je.MAX_VARYING_VECTORS), vn = je.getParameter(je.MAX_FRAGMENT_UNIFORM_VECTORS), ln = xr > 0, hn = zr || !!Bt.get("OES_texture_float");
            return { isWebGL2: zr, getMaxAnisotropy: function() {
              if (Kt !== void 0)
                return Kt;
              var On = Bt.get("EXT_texture_filter_anisotropic");
              return Kt = On !== null ? je.getParameter(On.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;
            }, getMaxPrecision: sr, precision: fr, logarithmicDepthBuffer: Ur, maxTextures: Er, maxVertexTextures: xr, maxTextureSize: rn, maxCubemapSize: nn, maxAttributes: Wr, maxVertexUniforms: Sr, maxVaryings: tn, maxFragmentUniforms: vn, vertexTextures: ln, floatFragmentTextures: hn, floatVertexTextures: ln && hn };
          }(Se, Ge, Q)).isWebGL2 || (Ge.get("WEBGL_depth_texture"), Ge.get("OES_texture_float"), Ge.get("OES_texture_half_float"), Ge.get("OES_texture_half_float_linear"), Ge.get("OES_standard_derivatives"), Ge.get("OES_element_index_uint"), Ge.get("ANGLE_instanced_arrays")), Ge.get("OES_texture_float_linear"), dr = new ol(Se, Ge, ze), (Ze = new function(je, Bt, Ct, Kt) {
            var sr = new function() {
              var nr = !1, Pn = new Zn(), jn = null, Ti = new Zn(0, 0, 0, 0);
              return { setMask: function(Tn) {
                jn === Tn || nr || (je.colorMask(Tn, Tn, Tn, Tn), jn = Tn);
              }, setLocked: function(Tn) {
                nr = Tn;
              }, setClear: function(Tn, Gi, ua, Di, _c) {
                _c === !0 && (Tn *= Di, Gi *= Di, ua *= Di), Pn.set(Tn, Gi, ua, Di), Ti.equals(Pn) === !1 && (je.clearColor(Tn, Gi, ua, Di), Ti.copy(Pn));
              }, reset: function() {
                nr = !1, jn = null, Ti.set(-1, 0, 0, 0);
              } };
            }(), zr = new function() {
              var nr = !1, Pn = null, jn = null, Ti = null;
              return { setTest: function(Tn) {
                Tn ? Ii(je.DEPTH_TEST) : Oa(je.DEPTH_TEST);
              }, setMask: function(Tn) {
                Pn === Tn || nr || (je.depthMask(Tn), Pn = Tn);
              }, setFunc: function(Tn) {
                if (jn !== Tn) {
                  if (Tn)
                    switch (Tn) {
                      case tt:
                        je.depthFunc(je.NEVER);
                        break;
                      case et:
                        je.depthFunc(je.ALWAYS);
                        break;
                      case Et:
                        je.depthFunc(je.LESS);
                        break;
                      case lt:
                        je.depthFunc(je.LEQUAL);
                        break;
                      case $e:
                        je.depthFunc(je.EQUAL);
                        break;
                      case _e:
                        je.depthFunc(je.GEQUAL);
                        break;
                      case Be:
                        je.depthFunc(je.GREATER);
                        break;
                      case be:
                        je.depthFunc(je.NOTEQUAL);
                        break;
                      default:
                        je.depthFunc(je.LEQUAL);
                    }
                  else
                    je.depthFunc(je.LEQUAL);
                  jn = Tn;
                }
              }, setLocked: function(Tn) {
                nr = Tn;
              }, setClear: function(Tn) {
                Ti !== Tn && (je.clearDepth(Tn), Ti = Tn);
              }, reset: function() {
                nr = !1, Pn = null, jn = null, Ti = null;
              } };
            }(), fr = new function() {
              var nr = !1, Pn = null, jn = null, Ti = null, Tn = null, Gi = null, ua = null, Di = null, _c = null;
              return { setTest: function(wi) {
                wi ? Ii(je.STENCIL_TEST) : Oa(je.STENCIL_TEST);
              }, setMask: function(wi) {
                Pn === wi || nr || (je.stencilMask(wi), Pn = wi);
              }, setFunc: function(wi, ko, Oo) {
                jn === wi && Ti === ko && Tn === Oo || (je.stencilFunc(wi, ko, Oo), jn = wi, Ti = ko, Tn = Oo);
              }, setOp: function(wi, ko, Oo) {
                Gi === wi && ua === ko && Di === Oo || (je.stencilOp(wi, ko, Oo), Gi = wi, ua = ko, Di = Oo);
              }, setLocked: function(wi) {
                nr = wi;
              }, setClear: function(wi) {
                _c !== wi && (je.clearStencil(wi), _c = wi);
              }, reset: function() {
                nr = !1, Pn = null, jn = null, Ti = null, Tn = null, Gi = null, ua = null, Di = null, _c = null;
              } };
            }(), ur = je.getParameter(je.MAX_VERTEX_ATTRIBS), Ur = new Uint8Array(ur), Er = new Uint8Array(ur), xr = new Uint8Array(ur), rn = {}, nn = null, Wr = null, Sr = null, tn = null, vn = null, ln = null, hn = null, On = null, di = null, Pr = !1, Ir = null, ka = null, ys = null, Fi = null, ha = null, No = je.getParameter(je.MAX_COMBINED_TEXTURE_IMAGE_UNITS), La = !1, to = 0, Vi = je.getParameter(je.VERSION);
            Vi.indexOf("WebGL") !== -1 ? (to = parseFloat(/^WebGL\ ([0-9])/.exec(Vi)[1]), La = to >= 1) : Vi.indexOf("OpenGL ES") !== -1 && (to = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(Vi)[1]), La = to >= 2);
            var Si = null, vs = {}, bc = new Zn(), Qo = new Zn();
            function Bc(nr, Pn, jn) {
              var Ti = new Uint8Array(4), Tn = je.createTexture();
              je.bindTexture(nr, Tn), je.texParameteri(nr, je.TEXTURE_MIN_FILTER, je.NEAREST), je.texParameteri(nr, je.TEXTURE_MAG_FILTER, je.NEAREST);
              for (var Gi = 0; Gi < jn; Gi++)
                je.texImage2D(Pn + Gi, 0, je.RGBA, 1, 1, 0, je.RGBA, je.UNSIGNED_BYTE, Ti);
              return Tn;
            }
            var xs = {};
            function wc(nr, Pn) {
              Ur[nr] = 1, Er[nr] === 0 && (je.enableVertexAttribArray(nr), Er[nr] = 1), xr[nr] !== Pn && ((Kt.isWebGL2 ? je : Bt.get("ANGLE_instanced_arrays"))[Kt.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](nr, Pn), xr[nr] = Pn);
            }
            function Ii(nr) {
              rn[nr] !== !0 && (je.enable(nr), rn[nr] = !0);
            }
            function Oa(nr) {
              rn[nr] !== !1 && (je.disable(nr), rn[nr] = !1);
            }
            function Es(nr, Pn, jn, Ti, Tn, Gi, ua, Di) {
              if (nr !== kt ? Ii(je.BLEND) : Oa(je.BLEND), nr !== At) {
                if (nr !== Sr || Di !== Pr)
                  switch (nr) {
                    case ht:
                      Di ? (je.blendEquationSeparate(je.FUNC_ADD, je.FUNC_ADD), je.blendFuncSeparate(je.ONE, je.ONE, je.ONE, je.ONE)) : (je.blendEquation(je.FUNC_ADD), je.blendFunc(je.SRC_ALPHA, je.ONE));
                      break;
                    case Nt:
                      Di ? (je.blendEquationSeparate(je.FUNC_ADD, je.FUNC_ADD), je.blendFuncSeparate(je.ZERO, je.ZERO, je.ONE_MINUS_SRC_COLOR, je.ONE_MINUS_SRC_ALPHA)) : (je.blendEquation(je.FUNC_ADD), je.blendFunc(je.ZERO, je.ONE_MINUS_SRC_COLOR));
                      break;
                    case Ft:
                      Di ? (je.blendEquationSeparate(je.FUNC_ADD, je.FUNC_ADD), je.blendFuncSeparate(je.ZERO, je.SRC_COLOR, je.ZERO, je.SRC_ALPHA)) : (je.blendEquation(je.FUNC_ADD), je.blendFunc(je.ZERO, je.SRC_COLOR));
                      break;
                    default:
                      Di ? (je.blendEquationSeparate(je.FUNC_ADD, je.FUNC_ADD), je.blendFuncSeparate(je.ONE, je.ONE_MINUS_SRC_ALPHA, je.ONE, je.ONE_MINUS_SRC_ALPHA)) : (je.blendEquationSeparate(je.FUNC_ADD, je.FUNC_ADD), je.blendFuncSeparate(je.SRC_ALPHA, je.ONE_MINUS_SRC_ALPHA, je.ONE, je.ONE_MINUS_SRC_ALPHA));
                  }
                tn = null, vn = null, ln = null, hn = null, On = null, di = null;
              } else
                Tn = Tn || Pn, Gi = Gi || jn, ua = ua || Ti, Pn === tn && Tn === hn || (je.blendEquationSeparate(Ct.convert(Pn), Ct.convert(Tn)), tn = Pn, hn = Tn), jn === vn && Ti === ln && Gi === On && ua === di || (je.blendFuncSeparate(Ct.convert(jn), Ct.convert(Ti), Ct.convert(Gi), Ct.convert(ua)), vn = jn, ln = Ti, On = Gi, di = ua);
              Sr = nr, Pr = Di;
            }
            function Pa(nr) {
              Ir !== nr && (nr ? je.frontFace(je.CW) : je.frontFace(je.CCW), Ir = nr);
            }
            function Pl(nr) {
              nr !== xe ? (Ii(je.CULL_FACE), nr !== ka && (nr === Ae ? je.cullFace(je.BACK) : nr === Ee ? je.cullFace(je.FRONT) : je.cullFace(je.FRONT_AND_BACK))) : Oa(je.CULL_FACE), ka = nr;
            }
            function Fl(nr, Pn, jn) {
              nr ? (Ii(je.POLYGON_OFFSET_FILL), Fi === Pn && ha === jn || (je.polygonOffset(Pn, jn), Fi = Pn, ha = jn)) : Oa(je.POLYGON_OFFSET_FILL);
            }
            function Gl(nr) {
              nr === void 0 && (nr = je.TEXTURE0 + No - 1), Si !== nr && (je.activeTexture(nr), Si = nr);
            }
            return xs[je.TEXTURE_2D] = Bc(je.TEXTURE_2D, je.TEXTURE_2D, 1), xs[je.TEXTURE_CUBE_MAP] = Bc(je.TEXTURE_CUBE_MAP, je.TEXTURE_CUBE_MAP_POSITIVE_X, 6), sr.setClear(0, 0, 0, 1), zr.setClear(1), fr.setClear(0), Ii(je.DEPTH_TEST), zr.setFunc(lt), Pa(!1), Pl(Ae), Ii(je.CULL_FACE), Ii(je.BLEND), Es(Ke), { buffers: { color: sr, depth: zr, stencil: fr }, initAttributes: function() {
              for (var nr = 0, Pn = Ur.length; nr < Pn; nr++)
                Ur[nr] = 0;
            }, enableAttribute: function(nr) {
              wc(nr, 0);
            }, enableAttributeAndDivisor: wc, disableUnusedAttributes: function() {
              for (var nr = 0, Pn = Er.length; nr !== Pn; ++nr)
                Er[nr] !== Ur[nr] && (je.disableVertexAttribArray(nr), Er[nr] = 0);
            }, enable: Ii, disable: Oa, getCompressedTextureFormats: function() {
              if (nn === null && (nn = [], Bt.get("WEBGL_compressed_texture_pvrtc") || Bt.get("WEBGL_compressed_texture_s3tc") || Bt.get("WEBGL_compressed_texture_etc1") || Bt.get("WEBGL_compressed_texture_astc")))
                for (var nr = je.getParameter(je.COMPRESSED_TEXTURE_FORMATS), Pn = 0; Pn < nr.length; Pn++)
                  nn.push(nr[Pn]);
              return nn;
            }, useProgram: function(nr) {
              return Wr !== nr && (je.useProgram(nr), Wr = nr, !0);
            }, setBlending: Es, setMaterial: function(nr, Pn) {
              nr.side === Pe ? Oa(je.CULL_FACE) : Ii(je.CULL_FACE);
              var jn = nr.side === Ne;
              Pn && (jn = !jn), Pa(jn), nr.blending === Ke && nr.transparent === !1 ? Es(kt) : Es(nr.blending, nr.blendEquation, nr.blendSrc, nr.blendDst, nr.blendEquationAlpha, nr.blendSrcAlpha, nr.blendDstAlpha, nr.premultipliedAlpha), zr.setFunc(nr.depthFunc), zr.setTest(nr.depthTest), zr.setMask(nr.depthWrite), sr.setMask(nr.colorWrite), Fl(nr.polygonOffset, nr.polygonOffsetFactor, nr.polygonOffsetUnits);
            }, setFlipSided: Pa, setCullFace: Pl, setLineWidth: function(nr) {
              nr !== ys && (La && je.lineWidth(nr), ys = nr);
            }, setPolygonOffset: Fl, setScissorTest: function(nr) {
              nr ? Ii(je.SCISSOR_TEST) : Oa(je.SCISSOR_TEST);
            }, activeTexture: Gl, bindTexture: function(nr, Pn) {
              Si === null && Gl();
              var jn = vs[Si];
              jn === void 0 && (jn = { type: void 0, texture: void 0 }, vs[Si] = jn), jn.type === nr && jn.texture === Pn || (je.bindTexture(nr, Pn || xs[nr]), jn.type = nr, jn.texture = Pn);
            }, compressedTexImage2D: function() {
              try {
                je.compressedTexImage2D.apply(je, arguments);
              } catch (nr) {
                console.error("THREE.WebGLState:", nr);
              }
            }, texImage2D: function() {
              try {
                je.texImage2D.apply(je, arguments);
              } catch (nr) {
                console.error("THREE.WebGLState:", nr);
              }
            }, scissor: function(nr) {
              bc.equals(nr) === !1 && (je.scissor(nr.x, nr.y, nr.z, nr.w), bc.copy(nr));
            }, viewport: function(nr) {
              Qo.equals(nr) === !1 && (je.viewport(nr.x, nr.y, nr.z, nr.w), Qo.copy(nr));
            }, reset: function() {
              for (var nr = 0; nr < Er.length; nr++)
                Er[nr] === 1 && (je.disableVertexAttribArray(nr), Er[nr] = 0);
              rn = {}, nn = null, Si = null, vs = {}, Wr = null, Sr = null, Ir = null, ka = null, sr.reset(), zr.reset(), fr.reset();
            } };
          }(Se, Ge, dr, ze)).scissor(yn.copy(ji).multiplyScalar(Fn)), Ze.viewport(un.copy(hi).multiplyScalar(Fn)), nt = new function(je) {
            var Bt = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
            return { memory: { geometries: 0, textures: 0 }, render: Bt, programs: null, autoReset: !0, reset: function() {
              Bt.frame++, Bt.calls = 0, Bt.triangles = 0, Bt.points = 0, Bt.lines = 0;
            }, update: function(Ct, Kt, sr) {
              switch (sr = sr || 1, Bt.calls++, Kt) {
                case je.TRIANGLES:
                  Bt.triangles += sr * (Ct / 3);
                  break;
                case je.TRIANGLE_STRIP:
                case je.TRIANGLE_FAN:
                  Bt.triangles += sr * (Ct - 2);
                  break;
                case je.LINES:
                  Bt.lines += sr * (Ct / 2);
                  break;
                case je.LINE_STRIP:
                  Bt.lines += sr * (Ct - 1);
                  break;
                case je.LINE_LOOP:
                  Bt.lines += sr * Ct;
                  break;
                case je.POINTS:
                  Bt.points += sr * Ct;
                  break;
                default:
                  console.error("THREE.WebGLInfo: Unknown draw mode:", Kt);
              }
            } };
          }(Se), ct = new function() {
            var je = /* @__PURE__ */ new WeakMap();
            return { get: function(Bt) {
              var Ct = je.get(Bt);
              return Ct === void 0 && (Ct = {}, je.set(Bt, Ct)), Ct;
            }, remove: function(Bt) {
              je.delete(Bt);
            }, update: function(Bt, Ct, Kt) {
              je.get(Bt)[Ct] = Kt;
            }, dispose: function() {
              je = /* @__PURE__ */ new WeakMap();
            } };
          }(), yt = new Bd(Se, Ge, Ze, ct, ze, dr, nt), st = new ql(Se), Mt = new function(je, Bt, Ct) {
            var Kt = {}, sr = {};
            function zr(fr) {
              var ur = fr.target, Ur = Kt[ur.id];
              for (var Er in Ur.index !== null && Bt.remove(Ur.index), Ur.attributes)
                Bt.remove(Ur.attributes[Er]);
              ur.removeEventListener("dispose", zr), delete Kt[ur.id];
              var xr = sr[Ur.id];
              xr && (Bt.remove(xr), delete sr[Ur.id]), Ct.memory.geometries--;
            }
            return { get: function(fr, ur) {
              var Ur = Kt[ur.id];
              return Ur || (ur.addEventListener("dispose", zr), ur.isBufferGeometry ? Ur = ur : ur.isGeometry && (ur._bufferGeometry === void 0 && (ur._bufferGeometry = new Jr().setFromObject(fr)), Ur = ur._bufferGeometry), Kt[ur.id] = Ur, Ct.memory.geometries++, Ur);
            }, update: function(fr) {
              var ur = fr.index, Ur = fr.attributes;
              for (var Er in ur !== null && Bt.update(ur, je.ELEMENT_ARRAY_BUFFER), Ur)
                Bt.update(Ur[Er], je.ARRAY_BUFFER);
              var xr = fr.morphAttributes;
              for (var Er in xr)
                for (var rn = xr[Er], nn = 0, Wr = rn.length; nn < Wr; nn++)
                  Bt.update(rn[nn], je.ARRAY_BUFFER);
            }, getWireframeAttribute: function(fr) {
              var ur = sr[fr.id];
              if (ur)
                return ur;
              var Ur, Er = [], xr = fr.index, rn = fr.attributes;
              if (xr !== null)
                for (var nn = 0, Wr = (Ur = xr.array).length; nn < Wr; nn += 3) {
                  var Sr = Ur[nn + 0], tn = Ur[nn + 1], vn = Ur[nn + 2];
                  Er.push(Sr, tn, tn, vn, vn, Sr);
                }
              else
                for (nn = 0, Wr = (Ur = rn.position.array).length / 3 - 1; nn < Wr; nn += 3)
                  Sr = nn + 0, tn = nn + 1, vn = nn + 2, Er.push(Sr, tn, tn, vn, vn, Sr);
              return ur = new (Fu(Er) > 65535 ? co : so)(Er, 1), Bt.update(ur, je.ELEMENT_ARRAY_BUFFER), sr[fr.id] = ur, ur;
            } };
          }(Se, st, nt), Ot = new function(je, Bt) {
            var Ct = {};
            return { update: function(Kt) {
              var sr = Bt.render.frame, zr = Kt.geometry, fr = je.get(Kt, zr);
              return Ct[fr.id] !== sr && (zr.isGeometry && fr.updateFromObject(Kt), je.update(fr), Ct[fr.id] = sr), fr;
            }, dispose: function() {
              Ct = {};
            } };
          }(Mt, nt), er = new function(je) {
            var Bt = {}, Ct = new Float32Array(8);
            return { update: function(Kt, sr, zr, fr) {
              var ur = Kt.morphTargetInfluences, Ur = ur.length, Er = Bt[sr.id];
              if (Er === void 0) {
                Er = [];
                for (var xr = 0; xr < Ur; xr++)
                  Er[xr] = [xr, 0];
                Bt[sr.id] = Er;
              }
              var rn = zr.morphTargets && sr.morphAttributes.position, nn = zr.morphNormals && sr.morphAttributes.normal;
              for (xr = 0; xr < Ur; xr++)
                (Wr = Er[xr])[1] !== 0 && (rn && sr.removeAttribute("morphTarget" + xr), nn && sr.removeAttribute("morphNormal" + xr));
              for (xr = 0; xr < Ur; xr++)
                (Wr = Er[xr])[0] = xr, Wr[1] = ur[xr];
              for (Er.sort(zl), xr = 0; xr < 8; xr++) {
                var Wr;
                if (Wr = Er[xr]) {
                  var Sr = Wr[0], tn = Wr[1];
                  if (tn) {
                    rn && sr.addAttribute("morphTarget" + xr, rn[Sr]), nn && sr.addAttribute("morphNormal" + xr, nn[Sr]), Ct[xr] = tn;
                    continue;
                  }
                }
                Ct[xr] = 0;
              }
              fr.getUniforms().setValue(je, "morphTargetInfluences", Ct);
            } };
          }(Se), dt = new md(vr, Ge, ze), wt = new xd(), $t = new function() {
            var je = {};
            return { get: function(Bt, Ct) {
              var Kt;
              return je[Bt.id] === void 0 ? (Kt = new il(), je[Bt.id] = {}, je[Bt.id][Ct.id] = Kt) : je[Bt.id][Ct.id] === void 0 ? (Kt = new il(), je[Bt.id][Ct.id] = Kt) : Kt = je[Bt.id][Ct.id], Kt;
            }, dispose: function() {
              je = {};
            } };
          }(), Pt = new function(je, Bt, Ct, Kt) {
            var sr, zr, fr, ur = new sn(0), Ur = 0;
            function Er(xr, rn) {
              Bt.buffers.color.setClear(xr.r, xr.g, xr.b, rn, Kt);
            }
            return { getClearColor: function() {
              return ur;
            }, setClearColor: function(xr, rn) {
              ur.set(xr), Er(ur, Ur = rn !== void 0 ? rn : 1);
            }, getClearAlpha: function() {
              return Ur;
            }, setClearAlpha: function(xr) {
              Er(ur, Ur = xr);
            }, render: function(xr, rn, nn, Wr) {
              var Sr = rn.background;
              Sr === null ? Er(ur, Ur) : Sr && Sr.isColor && (Er(Sr, 1), Wr = !0), (je.autoClear || Wr) && je.clear(je.autoClearColor, je.autoClearDepth, je.autoClearStencil), Sr && Sr.isCubeTexture ? (fr === void 0 && ((fr = new Xi(new uo(1, 1, 1), new la({ uniforms: ao.cube.uniforms, vertexShader: ao.cube.vertexShader, fragmentShader: ao.cube.fragmentShader, side: Ne, depthTest: !0, depthWrite: !1, fog: !1 }))).geometry.removeAttribute("normal"), fr.geometry.removeAttribute("uv"), fr.onBeforeRender = function(tn, vn, ln) {
                this.matrixWorld.copyPosition(ln.matrixWorld);
              }, Ct.update(fr)), fr.material.uniforms.tCube.value = Sr, xr.push(fr, fr.geometry, fr.material, 0, null)) : Sr && Sr.isTexture && (sr === void 0 && (sr = new Go(-1, 1, 1, -1, 0, 1), zr = new Xi(new lo(2, 2), new ia({ depthTest: !1, depthWrite: !1, fog: !1 })), Ct.update(zr)), zr.material.map = Sr, je.renderBufferDirect(sr, null, zr.geometry, zr.material, zr, null));
            } };
          }(vr, Ze, Ot, pe), Ht = new function(je, Bt, Ct, Kt) {
            var sr;
            this.setMode = function(zr) {
              sr = zr;
            }, this.render = function(zr, fr) {
              je.drawArrays(sr, zr, fr), Ct.update(fr, sr);
            }, this.renderInstances = function(zr, fr, ur) {
              var Ur;
              if (Kt.isWebGL2)
                Ur = je;
              else if ((Ur = Bt.get("ANGLE_instanced_arrays")) === null)
                return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
              Ur[Kt.isWebGL2 ? "drawArraysInstanced" : "drawArraysInstancedANGLE"](sr, fr, ur, zr.maxInstancedCount), Ct.update(ur, sr, zr.maxInstancedCount);
            };
          }(Se, Ge, nt, ze), ir = new function(je, Bt, Ct, Kt) {
            var sr, zr, fr;
            this.setMode = function(ur) {
              sr = ur;
            }, this.setIndex = function(ur) {
              zr = ur.type, fr = ur.bytesPerElement;
            }, this.render = function(ur, Ur) {
              je.drawElements(sr, Ur, zr, ur * fr), Ct.update(Ur, sr);
            }, this.renderInstances = function(ur, Ur, Er) {
              var xr;
              if (Kt.isWebGL2)
                xr = je;
              else if ((xr = Bt.get("ANGLE_instanced_arrays")) === null)
                return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
              xr[Kt.isWebGL2 ? "drawElementsInstanced" : "drawElementsInstancedANGLE"](sr, Er, zr, Ur * fr, ur.maxInstancedCount), Ct.update(Er, sr, ur.maxInstancedCount);
            };
          }(Se, Ge, nt, ze), nt.programs = dt.programs, vr.context = Se, vr.capabilities = ze, vr.extensions = Ge, vr.properties = ct, vr.renderLists = wt, vr.state = Ze, vr.info = nt;
        }
        fa();
        var kn = "xr" in navigator ? new function(je) {
          var Bt = je.context, Ct = null, Kt = null, sr = null, zr = null, fr = [], ur = [];
          function Ur() {
            return Kt !== null && sr !== null;
          }
          var Er = new fi();
          Er.layers.enable(1), Er.viewport = new Zn();
          var xr = new fi();
          xr.layers.enable(2), xr.viewport = new Zn();
          var rn = new Ns([Er, xr]);
          function nn(ln) {
            var hn = fr[ur.indexOf(ln.inputSource)];
            hn && hn.dispatchEvent({ type: ln.type });
          }
          function Wr() {
            je.setFramebuffer(null), vn.stop();
          }
          function Sr(ln, hn) {
            hn === null ? ln.matrixWorld.copy(ln.matrix) : ln.matrixWorld.multiplyMatrices(hn.matrixWorld, ln.matrix), ln.matrixWorldInverse.getInverse(ln.matrixWorld);
          }
          rn.layers.enable(1), rn.layers.enable(2), this.enabled = !1, this.getController = function(ln) {
            var hn = fr[ln];
            return hn === void 0 && ((hn = new jo()).matrixAutoUpdate = !1, hn.visible = !1, fr[ln] = hn), hn;
          }, this.getDevice = function() {
            return Ct;
          }, this.setDevice = function(ln) {
            ln !== void 0 && (Ct = ln), ln instanceof XRDevice && Bt.setCompatibleXRDevice(ln);
          }, this.setSession = function(ln, hn) {
            (Kt = ln) !== null && (Kt.addEventListener("select", nn), Kt.addEventListener("selectstart", nn), Kt.addEventListener("selectend", nn), Kt.addEventListener("end", Wr), Kt.baseLayer = new XRWebGLLayer(Kt, Bt), Kt.requestFrameOfReference(hn.frameOfReferenceType).then(function(On) {
              sr = On, je.setFramebuffer(Kt.baseLayer.framebuffer), vn.setContext(Kt), vn.start();
            }), ur = Kt.getInputSources(), Kt.addEventListener("inputsourceschange", function() {
              ur = Kt.getInputSources(), console.log(ur);
            }));
          }, this.getCamera = function(ln) {
            if (Ur()) {
              var hn = ln.parent, On = rn.cameras;
              Sr(rn, hn);
              for (var di = 0; di < On.length; di++)
                Sr(On[di], hn);
              ln.matrixWorld.copy(rn.matrixWorld);
              for (var Pr = ln.children, Ir = (di = 0, Pr.length); di < Ir; di++)
                Pr[di].updateMatrixWorld(!0);
              return rn;
            }
            return ln;
          }, this.isPresenting = Ur;
          var tn = null, vn = new Kc();
          vn.setAnimationLoop(function(ln, hn) {
            if ((zr = hn.getDevicePose(sr)) !== null)
              for (var On = Kt.baseLayer, di = hn.views, Pr = 0; Pr < di.length; Pr++) {
                var Ir = di[Pr], ka = On.getViewport(Ir), ys = zr.getViewMatrix(Ir), Fi = rn.cameras[Pr];
                Fi.matrix.fromArray(ys).getInverse(Fi.matrix), Fi.projectionMatrix.fromArray(Ir.projectionMatrix), Fi.viewport.set(ka.x, ka.y, ka.width, ka.height), Pr === 0 && (rn.matrix.copy(Fi.matrix), rn.projectionMatrix.copy(Fi.projectionMatrix));
              }
            for (Pr = 0; Pr < fr.length; Pr++) {
              var ha = fr[Pr], No = ur[Pr];
              if (No) {
                var La = hn.getInputPose(No, sr);
                if (La !== null) {
                  ha.matrix.elements = La.pointerMatrix, ha.matrix.decompose(ha.position, ha.rotation, ha.scale), ha.visible = !0;
                  continue;
                }
              }
              ha.visible = !1;
            }
            tn && tn(ln);
          }), this.setAnimationLoop = function(ln) {
            tn = ln;
          }, this.dispose = function() {
          }, this.getStandingMatrix = function() {
            return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."), new THREE.Matrix4();
          }, this.submitFrame = function() {
          };
        }(vr) : new sl(vr);
        this.vr = kn;
        var Wn = new al(vr, Ot, ze.maxTextureSize);
        function ti(je) {
          je.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), pr = !0;
        }
        function pi() {
          console.log("THREE.WebGLRenderer: Context Restored."), pr = !1, fa();
        }
        function ai(je) {
          var Bt = je.target;
          Bt.removeEventListener("dispose", ai), function(Ct) {
            ki(Ct), ct.remove(Ct);
          }(Bt);
        }
        function ki(je) {
          var Bt = ct.get(je).program;
          je.program = void 0, Bt !== void 0 && dt.releaseProgram(Bt);
        }
        this.shadowMap = Wn, this.getContext = function() {
          return Se;
        }, this.getContextAttributes = function() {
          return Se.getContextAttributes();
        }, this.forceContextLoss = function() {
          var je = Ge.get("WEBGL_lose_context");
          je && je.loseContext();
        }, this.forceContextRestore = function() {
          var je = Ge.get("WEBGL_lose_context");
          je && je.restoreContext();
        }, this.getPixelRatio = function() {
          return Fn;
        }, this.setPixelRatio = function(je) {
          je !== void 0 && (Fn = je, this.setSize(Kn, kr, !1));
        }, this.getSize = function() {
          return { width: Kn, height: kr };
        }, this.setSize = function(je, Bt, Ct) {
          kn.isPresenting() ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (Kn = je, kr = Bt, te.width = je * Fn, te.height = Bt * Fn, Ct !== !1 && (te.style.width = je + "px", te.style.height = Bt + "px"), this.setViewport(0, 0, je, Bt));
        }, this.getDrawingBufferSize = function() {
          return { width: Kn * Fn, height: kr * Fn };
        }, this.setDrawingBufferSize = function(je, Bt, Ct) {
          Kn = je, kr = Bt, Fn = Ct, te.width = je * Ct, te.height = Bt * Ct, this.setViewport(0, 0, je, Bt);
        }, this.getCurrentViewport = function() {
          return un;
        }, this.setViewport = function(je, Bt, Ct, Kt) {
          hi.set(je, kr - Bt - Kt, Ct, Kt), Ze.viewport(un.copy(hi).multiplyScalar(Fn));
        }, this.setScissor = function(je, Bt, Ct, Kt) {
          ji.set(je, kr - Bt - Kt, Ct, Kt), Ze.scissor(yn.copy(ji).multiplyScalar(Fn));
        }, this.setScissorTest = function(je) {
          Ze.setScissorTest(Ei = je);
        }, this.getClearColor = function() {
          return Pt.getClearColor();
        }, this.setClearColor = function() {
          Pt.setClearColor.apply(Pt, arguments);
        }, this.getClearAlpha = function() {
          return Pt.getClearAlpha();
        }, this.setClearAlpha = function() {
          Pt.setClearAlpha.apply(Pt, arguments);
        }, this.clear = function(je, Bt, Ct) {
          var Kt = 0;
          (je === void 0 || je) && (Kt |= Se.COLOR_BUFFER_BIT), (Bt === void 0 || Bt) && (Kt |= Se.DEPTH_BUFFER_BIT), (Ct === void 0 || Ct) && (Kt |= Se.STENCIL_BUFFER_BIT), Se.clear(Kt);
        }, this.clearColor = function() {
          this.clear(!0, !1, !1);
        }, this.clearDepth = function() {
          this.clear(!1, !0, !1);
        }, this.clearStencil = function() {
          this.clear(!1, !1, !0);
        }, this.clearTarget = function(je, Bt, Ct, Kt) {
          this.setRenderTarget(je), this.clear(Bt, Ct, Kt);
        }, this.dispose = function() {
          te.removeEventListener("webglcontextlost", ti, !1), te.removeEventListener("webglcontextrestored", pi, !1), wt.dispose(), $t.dispose(), ct.dispose(), Ot.dispose(), kn.dispose(), Pi.stop();
        }, this.renderBufferImmediate = function(je, Bt) {
          Ze.initAttributes();
          var Ct = ct.get(je);
          je.hasPositions && !Ct.position && (Ct.position = Se.createBuffer()), je.hasNormals && !Ct.normal && (Ct.normal = Se.createBuffer()), je.hasUvs && !Ct.uv && (Ct.uv = Se.createBuffer()), je.hasColors && !Ct.color && (Ct.color = Se.createBuffer());
          var Kt = Bt.getAttributes();
          je.hasPositions && (Se.bindBuffer(Se.ARRAY_BUFFER, Ct.position), Se.bufferData(Se.ARRAY_BUFFER, je.positionArray, Se.DYNAMIC_DRAW), Ze.enableAttribute(Kt.position), Se.vertexAttribPointer(Kt.position, 3, Se.FLOAT, !1, 0, 0)), je.hasNormals && (Se.bindBuffer(Se.ARRAY_BUFFER, Ct.normal), Se.bufferData(Se.ARRAY_BUFFER, je.normalArray, Se.DYNAMIC_DRAW), Ze.enableAttribute(Kt.normal), Se.vertexAttribPointer(Kt.normal, 3, Se.FLOAT, !1, 0, 0)), je.hasUvs && (Se.bindBuffer(Se.ARRAY_BUFFER, Ct.uv), Se.bufferData(Se.ARRAY_BUFFER, je.uvArray, Se.DYNAMIC_DRAW), Ze.enableAttribute(Kt.uv), Se.vertexAttribPointer(Kt.uv, 2, Se.FLOAT, !1, 0, 0)), je.hasColors && (Se.bindBuffer(Se.ARRAY_BUFFER, Ct.color), Se.bufferData(Se.ARRAY_BUFFER, je.colorArray, Se.DYNAMIC_DRAW), Ze.enableAttribute(Kt.color), Se.vertexAttribPointer(Kt.color, 3, Se.FLOAT, !1, 0, 0)), Ze.disableUnusedAttributes(), Se.drawArrays(Se.TRIANGLES, 0, je.count), je.count = 0;
        }, this.renderBufferDirect = function(je, Bt, Ct, Kt, sr, zr) {
          var fr = sr.isMesh && sr.normalMatrix.determinant() < 0;
          Ze.setMaterial(Kt, fr);
          var ur = Zc(je, Bt, Kt, sr), Ur = !1;
          lr.geometry === Ct.id && lr.program === ur.id && lr.wireframe === (Kt.wireframe === !0) || (lr.geometry = Ct.id, lr.program = ur.id, lr.wireframe = Kt.wireframe === !0, Ur = !0), sr.morphTargetInfluences && (er.update(sr, Ct, Kt, ur), Ur = !0);
          var Er, xr = Ct.index, rn = Ct.attributes.position, nn = 1;
          Kt.wireframe === !0 && (xr = Mt.getWireframeAttribute(Ct), nn = 2);
          var Wr = Ht;
          xr !== null && (Er = st.get(xr), (Wr = ir).setIndex(Er)), Ur && (function(ka, ys, Fi) {
            if (Fi && Fi.isInstancedBufferGeometry & !ze.isWebGL2 && Ge.get("ANGLE_instanced_arrays") === null)
              return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            Ze.initAttributes();
            var ha = Fi.attributes, No = ys.getAttributes(), La = ka.defaultAttributeValues;
            for (var to in No) {
              var Vi = No[to];
              if (Vi >= 0) {
                var Si = ha[to];
                if (Si !== void 0) {
                  var vs = Si.normalized, bc = Si.itemSize, Qo = st.get(Si);
                  if (Qo === void 0)
                    continue;
                  var Bc = Qo.buffer, xs = Qo.type, wc = Qo.bytesPerElement;
                  if (Si.isInterleavedBufferAttribute) {
                    var Ii = Si.data, Oa = Ii.stride, Es = Si.offset;
                    Ii && Ii.isInstancedInterleavedBuffer ? (Ze.enableAttributeAndDivisor(Vi, Ii.meshPerAttribute), Fi.maxInstancedCount === void 0 && (Fi.maxInstancedCount = Ii.meshPerAttribute * Ii.count)) : Ze.enableAttribute(Vi), Se.bindBuffer(Se.ARRAY_BUFFER, Bc), Se.vertexAttribPointer(Vi, bc, xs, vs, Oa * wc, Es * wc);
                  } else
                    Si.isInstancedBufferAttribute ? (Ze.enableAttributeAndDivisor(Vi, Si.meshPerAttribute), Fi.maxInstancedCount === void 0 && (Fi.maxInstancedCount = Si.meshPerAttribute * Si.count)) : Ze.enableAttribute(Vi), Se.bindBuffer(Se.ARRAY_BUFFER, Bc), Se.vertexAttribPointer(Vi, bc, xs, vs, 0, 0);
                } else if (La !== void 0) {
                  var Pa = La[to];
                  if (Pa !== void 0)
                    switch (Pa.length) {
                      case 2:
                        Se.vertexAttrib2fv(Vi, Pa);
                        break;
                      case 3:
                        Se.vertexAttrib3fv(Vi, Pa);
                        break;
                      case 4:
                        Se.vertexAttrib4fv(Vi, Pa);
                        break;
                      default:
                        Se.vertexAttrib1fv(Vi, Pa);
                    }
                }
              }
            }
            Ze.disableUnusedAttributes();
          }(Kt, ur, Ct), xr !== null && Se.bindBuffer(Se.ELEMENT_ARRAY_BUFFER, Er.buffer));
          var Sr = 1 / 0;
          xr !== null ? Sr = xr.count : rn !== void 0 && (Sr = rn.count);
          var tn = Ct.drawRange.start * nn, vn = Ct.drawRange.count * nn, ln = zr !== null ? zr.start * nn : 0, hn = zr !== null ? zr.count * nn : 1 / 0, On = Math.max(tn, ln), di = Math.min(Sr, tn + vn, ln + hn) - 1, Pr = Math.max(0, di - On + 1);
          if (Pr !== 0) {
            if (sr.isMesh)
              if (Kt.wireframe === !0)
                Ze.setLineWidth(Kt.wireframeLinewidth * eo()), Wr.setMode(Se.LINES);
              else
                switch (sr.drawMode) {
                  case bn:
                    Wr.setMode(Se.TRIANGLES);
                    break;
                  case Dr:
                    Wr.setMode(Se.TRIANGLE_STRIP);
                    break;
                  case gn:
                    Wr.setMode(Se.TRIANGLE_FAN);
                }
            else if (sr.isLine) {
              var Ir = Kt.linewidth;
              Ir === void 0 && (Ir = 1), Ze.setLineWidth(Ir * eo()), sr.isLineSegments ? Wr.setMode(Se.LINES) : sr.isLineLoop ? Wr.setMode(Se.LINE_LOOP) : Wr.setMode(Se.LINE_STRIP);
            } else
              sr.isPoints ? Wr.setMode(Se.POINTS) : sr.isSprite && Wr.setMode(Se.TRIANGLES);
            Ct && Ct.isInstancedBufferGeometry ? Ct.maxInstancedCount > 0 && Wr.renderInstances(Ct, On, Pr) : Wr.render(On, Pr);
          }
        }, this.compile = function(je, Bt) {
          (Qe = $t.get(je, Bt)).init(), je.traverse(function(Ct) {
            Ct.isLight && (Qe.pushLight(Ct), Ct.castShadow && Qe.pushShadow(Ct));
          }), Qe.setupLights(Bt), je.traverse(function(Ct) {
            if (Ct.material)
              if (Array.isArray(Ct.material))
                for (var Kt = 0; Kt < Ct.material.length; Kt++)
                  Mo(Ct.material[Kt], je.fog, Ct);
              else
                Mo(Ct.material, je.fog, Ct);
          });
        };
        var Oi = null, Pi = new Kc();
        function ca(je, Bt, Ct, Kt) {
          for (var sr = 0, zr = je.length; sr < zr; sr++) {
            var fr = je[sr], ur = fr.object, Ur = fr.geometry, Er = Kt === void 0 ? fr.material : Kt, xr = fr.group;
            if (Ct.isArrayCamera) {
              Qr = Ct;
              for (var rn = Ct.cameras, nn = 0, Wr = rn.length; nn < Wr; nn++) {
                var Sr = rn[nn];
                if (ur.layers.test(Sr.layers)) {
                  if ("viewport" in Sr)
                    Ze.viewport(un.copy(Sr.viewport));
                  else {
                    var tn = Sr.bounds, vn = tn.x * Kn, ln = tn.y * kr, hn = tn.z * Kn, On = tn.w * kr;
                    Ze.viewport(un.set(vn, ln, hn, On).multiplyScalar(Fn));
                  }
                  Na(ur, Bt, Sr, Ur, Er, xr);
                }
              }
            } else
              Qr = null, Na(ur, Bt, Ct, Ur, Er, xr);
          }
        }
        function Na(je, Bt, Ct, Kt, sr, zr) {
          if (je.onBeforeRender(vr, Bt, Ct, Kt, sr, zr), Qe = $t.get(Bt, Qr || Ct), je.modelViewMatrix.multiplyMatrices(Ct.matrixWorldInverse, je.matrixWorld), je.normalMatrix.getNormalMatrix(je.modelViewMatrix), je.isImmediateRenderObject) {
            Ze.setMaterial(sr);
            var fr = Zc(Ct, Bt.fog, sr, je);
            lr.geometry = null, lr.program = null, lr.wireframe = !1, function(ur, Ur) {
              ur.render(function(Er) {
                vr.renderBufferImmediate(Er, Ur);
              });
            }(je, fr);
          } else
            vr.renderBufferDirect(Ct, Bt.fog, Kt, sr, je, zr);
          je.onAfterRender(vr, Bt, Ct, Kt, sr, zr), Qe = $t.get(Bt, Qr || Ct);
        }
        function Mo(je, Bt, Ct) {
          var Kt = ct.get(je), sr = Qe.state.lights, zr = Qe.state.shadowsArray, fr = Kt.lightsHash, ur = sr.state.hash, Ur = dt.getParameters(je, sr.state, zr, Bt, _i.numPlanes, _i.numIntersection, Ct), Er = dt.getProgramCode(je, Ur), xr = Kt.program, rn = !0;
          if (xr === void 0)
            je.addEventListener("dispose", ai);
          else if (xr.code !== Er)
            ki(je);
          else if (fr.stateID !== ur.stateID || fr.directionalLength !== ur.directionalLength || fr.pointLength !== ur.pointLength || fr.spotLength !== ur.spotLength || fr.rectAreaLength !== ur.rectAreaLength || fr.hemiLength !== ur.hemiLength || fr.shadowsLength !== ur.shadowsLength)
            fr.stateID = ur.stateID, fr.directionalLength = ur.directionalLength, fr.pointLength = ur.pointLength, fr.spotLength = ur.spotLength, fr.rectAreaLength = ur.rectAreaLength, fr.hemiLength = ur.hemiLength, fr.shadowsLength = ur.shadowsLength, rn = !1;
          else {
            if (Ur.shaderID !== void 0)
              return;
            rn = !1;
          }
          if (rn) {
            if (Ur.shaderID) {
              var nn = ao[Ur.shaderID];
              Kt.shader = { name: je.type, uniforms: Li.clone(nn.uniforms), vertexShader: nn.vertexShader, fragmentShader: nn.fragmentShader };
            } else
              Kt.shader = { name: je.type, uniforms: je.uniforms, vertexShader: je.vertexShader, fragmentShader: je.fragmentShader };
            je.onBeforeCompile(Kt.shader, vr), Er = dt.getProgramCode(je, Ur), xr = dt.acquireProgram(je, Kt.shader, Ur, Er), Kt.program = xr, je.program = xr;
          }
          var Wr = xr.getAttributes();
          if (je.morphTargets) {
            je.numSupportedMorphTargets = 0;
            for (var Sr = 0; Sr < vr.maxMorphTargets; Sr++)
              Wr["morphTarget" + Sr] >= 0 && je.numSupportedMorphTargets++;
          }
          if (je.morphNormals)
            for (je.numSupportedMorphNormals = 0, Sr = 0; Sr < vr.maxMorphNormals; Sr++)
              Wr["morphNormal" + Sr] >= 0 && je.numSupportedMorphNormals++;
          var tn = Kt.shader.uniforms;
          (je.isShaderMaterial || je.isRawShaderMaterial) && je.clipping !== !0 || (Kt.numClippingPlanes = _i.numPlanes, Kt.numIntersection = _i.numIntersection, tn.clippingPlanes = _i.uniform), Kt.fog = Bt, fr === void 0 && (Kt.lightsHash = fr = {}), fr.stateID = ur.stateID, fr.directionalLength = ur.directionalLength, fr.pointLength = ur.pointLength, fr.spotLength = ur.spotLength, fr.rectAreaLength = ur.rectAreaLength, fr.hemiLength = ur.hemiLength, fr.shadowsLength = ur.shadowsLength, je.lights && (tn.ambientLightColor.value = sr.state.ambient, tn.directionalLights.value = sr.state.directional, tn.spotLights.value = sr.state.spot, tn.rectAreaLights.value = sr.state.rectArea, tn.pointLights.value = sr.state.point, tn.hemisphereLights.value = sr.state.hemi, tn.directionalShadowMap.value = sr.state.directionalShadowMap, tn.directionalShadowMatrix.value = sr.state.directionalShadowMatrix, tn.spotShadowMap.value = sr.state.spotShadowMap, tn.spotShadowMatrix.value = sr.state.spotShadowMatrix, tn.pointShadowMap.value = sr.state.pointShadowMap, tn.pointShadowMatrix.value = sr.state.pointShadowMatrix);
          var vn = Kt.program.getUniforms(), ln = Wa.seqWithValue(vn.seq, tn);
          Kt.uniformsList = ln;
        }
        function Zc(je, Bt, Ct, Kt) {
          Bi = 0;
          var sr = ct.get(Ct), zr = Qe.state.lights, fr = sr.lightsHash, ur = zr.state.hash;
          if (wa && (_a || je !== Yr)) {
            var Ur = je === Yr && Ct.id === Cr;
            _i.setState(Ct.clippingPlanes, Ct.clipIntersection, Ct.clipShadows, je, sr, Ur);
          }
          Ct.needsUpdate === !1 && (sr.program === void 0 || Ct.fog && sr.fog !== Bt ? Ct.needsUpdate = !0 : (!Ct.lights || fr.stateID === ur.stateID && fr.directionalLength === ur.directionalLength && fr.pointLength === ur.pointLength && fr.spotLength === ur.spotLength && fr.rectAreaLength === ur.rectAreaLength && fr.hemiLength === ur.hemiLength && fr.shadowsLength === ur.shadowsLength) && (sr.numClippingPlanes === void 0 || sr.numClippingPlanes === _i.numPlanes && sr.numIntersection === _i.numIntersection) || (Ct.needsUpdate = !0)), Ct.needsUpdate && (Mo(Ct, Bt, Kt), Ct.needsUpdate = !1);
          var Er = !1, xr = !1, rn = !1, nn = sr.program, Wr = nn.getUniforms(), Sr = sr.shader.uniforms;
          if (Ze.useProgram(nn.program) && (Er = !0, xr = !0, rn = !0), Ct.id !== Cr && (Cr = Ct.id, xr = !0), Er || je !== Yr) {
            if (Wr.setValue(Se, "projectionMatrix", je.projectionMatrix), ze.logarithmicDepthBuffer && Wr.setValue(Se, "logDepthBufFC", 2 / (Math.log(je.far + 1) / Math.LN2)), Yr !== (Qr || je) && (Yr = Qr || je, xr = !0, rn = !0), Ct.isShaderMaterial || Ct.isMeshPhongMaterial || Ct.isMeshStandardMaterial || Ct.envMap) {
              var tn = Wr.map.cameraPosition;
              tn !== void 0 && tn.setValue(Se, Ci.setFromMatrixPosition(je.matrixWorld));
            }
            (Ct.isMeshPhongMaterial || Ct.isMeshLambertMaterial || Ct.isMeshBasicMaterial || Ct.isMeshStandardMaterial || Ct.isShaderMaterial || Ct.skinning) && Wr.setValue(Se, "viewMatrix", je.matrixWorldInverse);
          }
          if (Ct.skinning) {
            Wr.setOptional(Se, Kt, "bindMatrix"), Wr.setOptional(Se, Kt, "bindMatrixInverse");
            var vn = Kt.skeleton;
            if (vn) {
              var ln = vn.bones;
              if (ze.floatVertexTextures) {
                if (vn.boneTexture === void 0) {
                  var hn = Math.sqrt(4 * ln.length);
                  hn = Cn.ceilPowerOfTwo(hn), hn = Math.max(hn, 4);
                  var On = new Float32Array(hn * hn * 4);
                  On.set(vn.boneMatrices);
                  var di = new io(On, hn, hn, tr, Hn);
                  di.needsUpdate = !0, vn.boneMatrices = On, vn.boneTexture = di, vn.boneTextureSize = hn;
                }
                Wr.setValue(Se, "boneTexture", vn.boneTexture), Wr.setValue(Se, "boneTextureSize", vn.boneTextureSize);
              } else
                Wr.setOptional(Se, vn, "boneMatrices");
            }
          }
          return xr && (Wr.setValue(Se, "toneMappingExposure", vr.toneMappingExposure), Wr.setValue(Se, "toneMappingWhitePoint", vr.toneMappingWhitePoint), Ct.lights && function(Pr, Ir) {
            Pr.ambientLightColor.needsUpdate = Ir, Pr.directionalLights.needsUpdate = Ir, Pr.pointLights.needsUpdate = Ir, Pr.spotLights.needsUpdate = Ir, Pr.rectAreaLights.needsUpdate = Ir, Pr.hemisphereLights.needsUpdate = Ir;
          }(Sr, rn), Bt && Ct.fog && function(Pr, Ir) {
            Pr.fogColor.value = Ir.color, Ir.isFog ? (Pr.fogNear.value = Ir.near, Pr.fogFar.value = Ir.far) : Ir.isFogExp2 && (Pr.fogDensity.value = Ir.density);
          }(Sr, Bt), Ct.isMeshBasicMaterial ? Qa(Sr, Ct) : Ct.isMeshLambertMaterial ? (Qa(Sr, Ct), function(Pr, Ir) {
            Ir.emissiveMap && (Pr.emissiveMap.value = Ir.emissiveMap);
          }(Sr, Ct)) : Ct.isMeshPhongMaterial ? (Qa(Sr, Ct), Ct.isMeshToonMaterial ? function(Pr, Ir) {
            xc(Pr, Ir), Ir.gradientMap && (Pr.gradientMap.value = Ir.gradientMap);
          }(Sr, Ct) : xc(Sr, Ct)) : Ct.isMeshStandardMaterial ? (Qa(Sr, Ct), Ct.isMeshPhysicalMaterial ? function(Pr, Ir) {
            Ec(Pr, Ir), Pr.reflectivity.value = Ir.reflectivity, Pr.clearCoat.value = Ir.clearCoat, Pr.clearCoatRoughness.value = Ir.clearCoatRoughness;
          }(Sr, Ct) : Ec(Sr, Ct)) : Ct.isMeshDepthMaterial ? (Qa(Sr, Ct), function(Pr, Ir) {
            Ir.displacementMap && (Pr.displacementMap.value = Ir.displacementMap, Pr.displacementScale.value = Ir.displacementScale, Pr.displacementBias.value = Ir.displacementBias);
          }(Sr, Ct)) : Ct.isMeshDistanceMaterial ? (Qa(Sr, Ct), function(Pr, Ir) {
            Ir.displacementMap && (Pr.displacementMap.value = Ir.displacementMap, Pr.displacementScale.value = Ir.displacementScale, Pr.displacementBias.value = Ir.displacementBias), Pr.referencePosition.value.copy(Ir.referencePosition), Pr.nearDistance.value = Ir.nearDistance, Pr.farDistance.value = Ir.farDistance;
          }(Sr, Ct)) : Ct.isMeshNormalMaterial ? (Qa(Sr, Ct), function(Pr, Ir) {
            Ir.bumpMap && (Pr.bumpMap.value = Ir.bumpMap, Pr.bumpScale.value = Ir.bumpScale, Ir.side === Ne && (Pr.bumpScale.value *= -1)), Ir.normalMap && (Pr.normalMap.value = Ir.normalMap, Pr.normalScale.value.copy(Ir.normalScale), Ir.side === Ne && Pr.normalScale.value.negate()), Ir.displacementMap && (Pr.displacementMap.value = Ir.displacementMap, Pr.displacementScale.value = Ir.displacementScale, Pr.displacementBias.value = Ir.displacementBias);
          }(Sr, Ct)) : Ct.isLineBasicMaterial ? (function(Pr, Ir) {
            Pr.diffuse.value = Ir.color, Pr.opacity.value = Ir.opacity;
          }(Sr, Ct), Ct.isLineDashedMaterial && function(Pr, Ir) {
            Pr.dashSize.value = Ir.dashSize, Pr.totalSize.value = Ir.dashSize + Ir.gapSize, Pr.scale.value = Ir.scale;
          }(Sr, Ct)) : Ct.isPointsMaterial ? function(Pr, Ir) {
            Pr.diffuse.value = Ir.color, Pr.opacity.value = Ir.opacity, Pr.size.value = Ir.size * Fn, Pr.scale.value = 0.5 * kr, Pr.map.value = Ir.map, Ir.map !== null && (Ir.map.matrixAutoUpdate === !0 && Ir.map.updateMatrix(), Pr.uvTransform.value.copy(Ir.map.matrix));
          }(Sr, Ct) : Ct.isSpriteMaterial ? function(Pr, Ir) {
            Pr.diffuse.value = Ir.color, Pr.opacity.value = Ir.opacity, Pr.rotation.value = Ir.rotation, Pr.map.value = Ir.map, Ir.map !== null && (Ir.map.matrixAutoUpdate === !0 && Ir.map.updateMatrix(), Pr.uvTransform.value.copy(Ir.map.matrix));
          }(Sr, Ct) : Ct.isShadowMaterial && (Sr.color.value = Ct.color, Sr.opacity.value = Ct.opacity), Sr.ltc_1 !== void 0 && (Sr.ltc_1.value = cn.LTC_1), Sr.ltc_2 !== void 0 && (Sr.ltc_2.value = cn.LTC_2), Wa.upload(Se, sr.uniformsList, Sr, vr)), Ct.isShaderMaterial && Ct.uniformsNeedUpdate === !0 && (Wa.upload(Se, sr.uniformsList, Sr, vr), Ct.uniformsNeedUpdate = !1), Ct.isSpriteMaterial && Wr.setValue(Se, "center", Kt.center), Wr.setValue(Se, "modelViewMatrix", Kt.modelViewMatrix), Wr.setValue(Se, "normalMatrix", Kt.normalMatrix), Wr.setValue(Se, "modelMatrix", Kt.matrixWorld), nn;
        }
        function Qa(je, Bt) {
          var Ct;
          je.opacity.value = Bt.opacity, Bt.color && (je.diffuse.value = Bt.color), Bt.emissive && je.emissive.value.copy(Bt.emissive).multiplyScalar(Bt.emissiveIntensity), Bt.map && (je.map.value = Bt.map), Bt.alphaMap && (je.alphaMap.value = Bt.alphaMap), Bt.specularMap && (je.specularMap.value = Bt.specularMap), Bt.envMap && (je.envMap.value = Bt.envMap, je.flipEnvMap.value = Bt.envMap && Bt.envMap.isCubeTexture ? -1 : 1, je.reflectivity.value = Bt.reflectivity, je.refractionRatio.value = Bt.refractionRatio, je.maxMipLevel.value = ct.get(Bt.envMap).__maxMipLevel), Bt.lightMap && (je.lightMap.value = Bt.lightMap, je.lightMapIntensity.value = Bt.lightMapIntensity), Bt.aoMap && (je.aoMap.value = Bt.aoMap, je.aoMapIntensity.value = Bt.aoMapIntensity), Bt.map ? Ct = Bt.map : Bt.specularMap ? Ct = Bt.specularMap : Bt.displacementMap ? Ct = Bt.displacementMap : Bt.normalMap ? Ct = Bt.normalMap : Bt.bumpMap ? Ct = Bt.bumpMap : Bt.roughnessMap ? Ct = Bt.roughnessMap : Bt.metalnessMap ? Ct = Bt.metalnessMap : Bt.alphaMap ? Ct = Bt.alphaMap : Bt.emissiveMap && (Ct = Bt.emissiveMap), Ct !== void 0 && (Ct.isWebGLRenderTarget && (Ct = Ct.texture), Ct.matrixAutoUpdate === !0 && Ct.updateMatrix(), je.uvTransform.value.copy(Ct.matrix));
        }
        function xc(je, Bt) {
          je.specular.value = Bt.specular, je.shininess.value = Math.max(Bt.shininess, 1e-4), Bt.emissiveMap && (je.emissiveMap.value = Bt.emissiveMap), Bt.bumpMap && (je.bumpMap.value = Bt.bumpMap, je.bumpScale.value = Bt.bumpScale, Bt.side === Ne && (je.bumpScale.value *= -1)), Bt.normalMap && (je.normalMap.value = Bt.normalMap, je.normalScale.value.copy(Bt.normalScale), Bt.side === Ne && je.normalScale.value.negate()), Bt.displacementMap && (je.displacementMap.value = Bt.displacementMap, je.displacementScale.value = Bt.displacementScale, je.displacementBias.value = Bt.displacementBias);
        }
        function Ec(je, Bt) {
          je.roughness.value = Bt.roughness, je.metalness.value = Bt.metalness, Bt.roughnessMap && (je.roughnessMap.value = Bt.roughnessMap), Bt.metalnessMap && (je.metalnessMap.value = Bt.metalnessMap), Bt.emissiveMap && (je.emissiveMap.value = Bt.emissiveMap), Bt.bumpMap && (je.bumpMap.value = Bt.bumpMap, je.bumpScale.value = Bt.bumpScale, Bt.side === Ne && (je.bumpScale.value *= -1)), Bt.normalMap && (je.normalMap.value = Bt.normalMap, je.normalScale.value.copy(Bt.normalScale), Bt.side === Ne && je.normalScale.value.negate()), Bt.displacementMap && (je.displacementMap.value = Bt.displacementMap, je.displacementScale.value = Bt.displacementScale, je.displacementBias.value = Bt.displacementBias), Bt.envMap && (je.envMapIntensity.value = Bt.envMapIntensity);
        }
        Pi.setAnimationLoop(function(je) {
          kn.isPresenting() || Oi && Oi(je);
        }), typeof window < "u" && Pi.setContext(window), this.setAnimationLoop = function(je) {
          Oi = je, kn.setAnimationLoop(je), Pi.start();
        }, this.render = function(je, Bt, Ct, Kt) {
          if (Bt && Bt.isCamera) {
            if (!pr) {
              lr.geometry = null, lr.program = null, lr.wireframe = !1, Cr = -1, Yr = null, je.autoUpdate === !0 && je.updateMatrixWorld(), Bt.parent === null && Bt.updateMatrixWorld(), kn.enabled && (Bt = kn.getCamera(Bt)), (Qe = $t.get(je, Bt)).init(), je.onBeforeRender(vr, je, Bt, Ct), Qi.multiplyMatrices(Bt.projectionMatrix, Bt.matrixWorldInverse), Wi.setFromMatrix(Qi), _a = this.localClippingEnabled, wa = _i.init(this.clippingPlanes, _a, Bt), (Me = wt.get(je, Bt)).init(), function Ur(Er, xr, rn) {
                if (Er.visible !== !1) {
                  var nn = Er.layers.test(xr.layers);
                  if (nn) {
                    if (Er.isLight)
                      Qe.pushLight(Er), Er.castShadow && Qe.pushShadow(Er);
                    else if (Er.isSprite) {
                      if (!Er.frustumCulled || Wi.intersectsSprite(Er)) {
                        rn && Ci.setFromMatrixPosition(Er.matrixWorld).applyMatrix4(Qi);
                        var Wr = Ot.update(Er), Sr = Er.material;
                        Me.push(Er, Wr, Sr, Ci.z, null);
                      }
                    } else if (Er.isImmediateRenderObject)
                      rn && Ci.setFromMatrixPosition(Er.matrixWorld).applyMatrix4(Qi), Me.push(Er, null, Er.material, Ci.z, null);
                    else if ((Er.isMesh || Er.isLine || Er.isPoints) && (Er.isSkinnedMesh && Er.skeleton.update(), !Er.frustumCulled || Wi.intersectsObject(Er))) {
                      rn && Ci.setFromMatrixPosition(Er.matrixWorld).applyMatrix4(Qi);
                      var Wr = Ot.update(Er), Sr = Er.material;
                      if (Array.isArray(Sr))
                        for (var tn = Wr.groups, vn = 0, ln = tn.length; vn < ln; vn++) {
                          var hn = tn[vn], On = Sr[hn.materialIndex];
                          On && On.visible && Me.push(Er, Wr, On, Ci.z, hn);
                        }
                      else
                        Sr.visible && Me.push(Er, Wr, Sr, Ci.z, null);
                    }
                  }
                  for (var di = Er.children, vn = 0, ln = di.length; vn < ln; vn++)
                    Ur(di[vn], xr, rn);
                }
              }(je, Bt, vr.sortObjects), vr.sortObjects === !0 && Me.sort(), wa && _i.beginShadows();
              var sr = Qe.state.shadowsArray;
              Wn.render(sr, je, Bt), Qe.setupLights(Bt), wa && _i.endShadows(), this.info.autoReset && this.info.reset(), Ct === void 0 && (Ct = null), this.setRenderTarget(Ct), Pt.render(Me, je, Bt, Kt);
              var zr = Me.opaque, fr = Me.transparent;
              if (je.overrideMaterial) {
                var ur = je.overrideMaterial;
                zr.length && ca(zr, je, Bt, ur), fr.length && ca(fr, je, Bt, ur);
              } else
                zr.length && ca(zr, je, Bt), fr.length && ca(fr, je, Bt);
              Ct && yt.updateRenderTargetMipmap(Ct), Ze.buffers.depth.setTest(!0), Ze.buffers.depth.setMask(!0), Ze.buffers.color.setMask(!0), Ze.setPolygonOffset(!1), je.onAfterRender(vr, je, Bt), kn.enabled && kn.submitFrame(), Me = null, Qe = null;
            }
          } else
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        }, this.allocTextureUnit = function() {
          var je = Bi;
          return je >= ze.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + je + " texture units while this GPU supports only " + ze.maxTextures), Bi += 1, je;
        }, this.setTexture2D = function() {
          var je = !1;
          return function(Bt, Ct) {
            Bt && Bt.isWebGLRenderTarget && (je || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."), je = !0), Bt = Bt.texture), yt.setTexture2D(Bt, Ct);
          };
        }(), this.setTexture = function() {
          var je = !1;
          return function(Bt, Ct) {
            je || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."), je = !0), yt.setTexture2D(Bt, Ct);
          };
        }(), this.setTextureCube = function() {
          var je = !1;
          return function(Bt, Ct) {
            Bt && Bt.isWebGLRenderTargetCube && (je || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."), je = !0), Bt = Bt.texture), Bt && Bt.isCubeTexture || Array.isArray(Bt.image) && Bt.image.length === 6 ? yt.setTextureCube(Bt, Ct) : yt.setTextureCubeDynamic(Bt, Ct);
          };
        }(), this.setFramebuffer = function(je) {
          Or = je;
        }, this.getRenderTarget = function() {
          return Mr;
        }, this.setRenderTarget = function(je) {
          Mr = je, je && ct.get(je).__webglFramebuffer === void 0 && yt.setupRenderTarget(je);
          var Bt = Or, Ct = !1;
          if (je) {
            var Kt = ct.get(je).__webglFramebuffer;
            je.isWebGLRenderTargetCube ? (Bt = Kt[je.activeCubeFace], Ct = !0) : Bt = Kt, un.copy(je.viewport), yn.copy(je.scissor), ni = je.scissorTest;
          } else
            un.copy(hi).multiplyScalar(Fn), yn.copy(ji).multiplyScalar(Fn), ni = Ei;
          if (hr !== Bt && (Se.bindFramebuffer(Se.FRAMEBUFFER, Bt), hr = Bt), Ze.viewport(un), Ze.scissor(yn), Ze.setScissorTest(ni), Ct) {
            var sr = ct.get(je.texture);
            Se.framebufferTexture2D(Se.FRAMEBUFFER, Se.COLOR_ATTACHMENT0, Se.TEXTURE_CUBE_MAP_POSITIVE_X + je.activeCubeFace, sr.__webglTexture, je.activeMipMapLevel);
          }
        }, this.readRenderTargetPixels = function(je, Bt, Ct, Kt, sr, zr) {
          if (je && je.isWebGLRenderTarget) {
            var fr = ct.get(je).__webglFramebuffer;
            if (fr) {
              var ur = !1;
              fr !== hr && (Se.bindFramebuffer(Se.FRAMEBUFFER, fr), ur = !0);
              try {
                var Ur = je.texture, Er = Ur.format, xr = Ur.type;
                if (Er !== tr && dr.convert(Er) !== Se.getParameter(Se.IMPLEMENTATION_COLOR_READ_FORMAT))
                  return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                if (!(xr === Gn || dr.convert(xr) === Se.getParameter(Se.IMPLEMENTATION_COLOR_READ_TYPE) || xr === Hn && (ze.isWebGL2 || Ge.get("OES_texture_float") || Ge.get("WEBGL_color_buffer_float")) || xr === Xn && (ze.isWebGL2 ? Ge.get("EXT_color_buffer_float") : Ge.get("EXT_color_buffer_half_float"))))
                  return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                Se.checkFramebufferStatus(Se.FRAMEBUFFER) === Se.FRAMEBUFFER_COMPLETE ? Bt >= 0 && Bt <= je.width - Kt && Ct >= 0 && Ct <= je.height - sr && Se.readPixels(Bt, Ct, Kt, sr, dr.convert(Er), dr.convert(xr), zr) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
              } finally {
                ur && Se.bindFramebuffer(Se.FRAMEBUFFER, hr);
              }
            }
          } else
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
        }, this.copyFramebufferToTexture = function(je, Bt, Ct) {
          var Kt = Bt.image.width, sr = Bt.image.height, zr = dr.convert(Bt.format);
          this.setTexture2D(Bt, 0), Se.copyTexImage2D(Se.TEXTURE_2D, Ct || 0, zr, je.x, je.y, Kt, sr, 0);
        }, this.copyTextureToTexture = function(je, Bt, Ct, Kt) {
          var sr = Bt.image.width, zr = Bt.image.height, fr = dr.convert(Ct.format), ur = dr.convert(Ct.type);
          this.setTexture2D(Ct, 0), Bt.isDataTexture ? Se.texSubImage2D(Se.TEXTURE_2D, Kt || 0, je.x, je.y, sr, zr, fr, ur, Bt.image.data) : Se.texSubImage2D(Se.TEXTURE_2D, Kt || 0, je.x, je.y, fr, ur, Bt.image);
        };
      }
      function $o(Q, te) {
        this.name = "", this.color = new sn(Q), this.density = te !== void 0 ? te : 25e-5;
      }
      function Vo(Q, te, ae) {
        this.name = "", this.color = new sn(Q), this.near = te !== void 0 ? te : 1, this.far = ae !== void 0 ? ae : 1e3;
      }
      function Sc() {
        jr.call(this), this.type = "Scene", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0;
      }
      function ho(Q, te) {
        this.array = Q, this.stride = te, this.count = Q !== void 0 ? Q.length / te : 0, this.dynamic = !1, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function Qs(Q, te, ae, se) {
        this.data = Q, this.itemSize = te, this.offset = ae, this.normalized = se === !0;
      }
      function Za(Q) {
        In.call(this), this.type = "SpriteMaterial", this.color = new sn(16777215), this.map = null, this.rotation = 0, this.lights = !1, this.transparent = !0, this.setValues(Q);
      }
      function ks(Q) {
        if (jr.call(this), this.type = "Sprite", qo === void 0) {
          qo = new Jr();
          var te = new ho(new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]), 5);
          qo.setIndex([0, 1, 2, 0, 2, 3]), qo.addAttribute("position", new Qs(te, 3, 0, !1)), qo.addAttribute("uv", new Qs(te, 2, 3, !1));
        }
        this.geometry = qo, this.material = Q !== void 0 ? Q : new Za(), this.center = new wr(0.5, 0.5);
      }
      function Os() {
        jr.call(this), this.type = "LOD", Object.defineProperties(this, { levels: { enumerable: !0, value: [] } });
      }
      function Ps(Q, te) {
        if (Q = Q || [], this.bones = Q.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), te === void 0)
          this.calculateInverses();
        else if (this.bones.length === te.length)
          this.boneInverses = te.slice(0);
        else {
          console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
          for (var ae = 0, se = this.bones.length; ae < se; ae++)
            this.boneInverses.push(new An());
        }
      }
      function Ic() {
        jr.call(this), this.type = "Bone";
      }
      function Tc(Q, te) {
        Xi.call(this, Q, te), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new An(), this.bindMatrixInverse = new An();
        var ae = new Ps(this.initBones());
        this.bind(ae, this.matrixWorld), this.normalizeSkinWeights();
      }
      function ei(Q) {
        In.call(this), this.type = "LineBasicMaterial", this.color = new sn(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.lights = !1, this.setValues(Q);
      }
      function Zi(Q, te, ae) {
        ae === 1 && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), jr.call(this), this.type = "Line", this.geometry = Q !== void 0 ? Q : new Jr(), this.material = te !== void 0 ? te : new ei({ color: 16777215 * Math.random() });
      }
      function ri(Q, te) {
        Zi.call(this, Q, te), this.type = "LineSegments";
      }
      function Rc(Q, te) {
        Zi.call(this, Q, te), this.type = "LineLoop";
      }
      function ga(Q) {
        In.call(this), this.type = "PointsMaterial", this.color = new sn(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.morphTargets = !1, this.lights = !1, this.setValues(Q);
      }
      function Do(Q, te) {
        jr.call(this), this.type = "Points", this.geometry = Q !== void 0 ? Q : new Jr(), this.material = te !== void 0 ? te : new ga({ color: 16777215 * Math.random() });
      }
      function au(Q, te, ae, se, ue, le, de, pe, ve) {
        ii.call(this, Q, te, ae, se, ue, le, de, pe, ve), this.generateMipmaps = !1;
      }
      function zo(Q, te, ae, se, ue, le, de, pe, ve, we, Me, Qe) {
        ii.call(this, null, le, de, pe, ve, we, se, ue, Me, Qe), this.image = { width: te, height: ae }, this.mipmaps = Q, this.flipY = !1, this.generateMipmaps = !1;
      }
      function Fs(Q, te, ae, se, ue, le, de, pe, ve) {
        ii.call(this, Q, te, ae, se, ue, le, de, pe, ve), this.needsUpdate = !0;
      }
      function Gs(Q, te, ae, se, ue, le, de, pe, ve, we) {
        if ((we = we !== void 0 ? we : Bn) !== Bn && we !== En)
          throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        ae === void 0 && we === Bn && (ae = Ai), ae === void 0 && we === En && (ae = mi), ii.call(this, null, se, ue, le, de, pe, we, ae, ve), this.image = { width: Q, height: te }, this.magFilter = de !== void 0 ? de : _r, this.minFilter = pe !== void 0 ? pe : _r, this.flipY = !1, this.generateMipmaps = !1;
      }
      function Lo(Q) {
        Jr.call(this), this.type = "WireframeGeometry";
        var te, ae, se, ue, le, de, pe, ve, we, Me, Qe = [], Se = [0, 0], Ge = {}, ze = ["a", "b", "c"];
        if (Q && Q.isGeometry) {
          var Ze = Q.faces;
          for (te = 0, se = Ze.length; te < se; te++) {
            var nt = Ze[te];
            for (ae = 0; ae < 3; ae++)
              pe = nt[ze[ae]], ve = nt[ze[(ae + 1) % 3]], Se[0] = Math.min(pe, ve), Se[1] = Math.max(pe, ve), Ge[we = Se[0] + "," + Se[1]] === void 0 && (Ge[we] = { index1: Se[0], index2: Se[1] });
          }
          for (we in Ge)
            de = Ge[we], Me = Q.vertices[de.index1], Qe.push(Me.x, Me.y, Me.z), Me = Q.vertices[de.index2], Qe.push(Me.x, Me.y, Me.z);
        } else if (Q && Q.isBufferGeometry) {
          var ct, yt, st, Mt, Ot, dt, wt;
          if (Me = new mt(), Q.index !== null) {
            for (ct = Q.attributes.position, yt = Q.index, (st = Q.groups).length === 0 && (st = [{ start: 0, count: yt.count, materialIndex: 0 }]), ue = 0, le = st.length; ue < le; ++ue)
              for (te = Ot = (Mt = st[ue]).start, se = Ot + Mt.count; te < se; te += 3)
                for (ae = 0; ae < 3; ae++)
                  pe = yt.getX(te + ae), ve = yt.getX(te + (ae + 1) % 3), Se[0] = Math.min(pe, ve), Se[1] = Math.max(pe, ve), Ge[we = Se[0] + "," + Se[1]] === void 0 && (Ge[we] = { index1: Se[0], index2: Se[1] });
            for (we in Ge)
              de = Ge[we], Me.fromBufferAttribute(ct, de.index1), Qe.push(Me.x, Me.y, Me.z), Me.fromBufferAttribute(ct, de.index2), Qe.push(Me.x, Me.y, Me.z);
          } else
            for (te = 0, se = (ct = Q.attributes.position).count / 3; te < se; te++)
              for (ae = 0; ae < 3; ae++)
                dt = 3 * te + ae, Me.fromBufferAttribute(ct, dt), Qe.push(Me.x, Me.y, Me.z), wt = 3 * te + (ae + 1) % 3, Me.fromBufferAttribute(ct, wt), Qe.push(Me.x, Me.y, Me.z);
        }
        this.addAttribute("position", new Gr(Qe, 3));
      }
      function Us(Q, te, ae) {
        mn.call(this), this.type = "ParametricGeometry", this.parameters = { func: Q, slices: te, stacks: ae }, this.fromBufferGeometry(new Yo(Q, te, ae)), this.mergeVertices();
      }
      function Yo(Q, te, ae) {
        Jr.call(this), this.type = "ParametricBufferGeometry", this.parameters = { func: Q, slices: te, stacks: ae };
        var se, ue, le = [], de = [], pe = [], ve = [], we = new mt(), Me = new mt(), Qe = new mt(), Se = new mt(), Ge = new mt();
        Q.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        var ze = te + 1;
        for (se = 0; se <= ae; se++) {
          var Ze = se / ae;
          for (ue = 0; ue <= te; ue++) {
            var nt = ue / te;
            Q(nt, Ze, Me), de.push(Me.x, Me.y, Me.z), nt - 1e-5 >= 0 ? (Q(nt - 1e-5, Ze, Qe), Se.subVectors(Me, Qe)) : (Q(nt + 1e-5, Ze, Qe), Se.subVectors(Qe, Me)), Ze - 1e-5 >= 0 ? (Q(nt, Ze - 1e-5, Qe), Ge.subVectors(Me, Qe)) : (Q(nt, Ze + 1e-5, Qe), Ge.subVectors(Qe, Me)), we.crossVectors(Se, Ge).normalize(), pe.push(we.x, we.y, we.z), ve.push(nt, Ze);
          }
        }
        for (se = 0; se < ae; se++)
          for (ue = 0; ue < te; ue++) {
            var ct = se * ze + ue, yt = se * ze + ue + 1, st = (se + 1) * ze + ue + 1, Mt = (se + 1) * ze + ue;
            le.push(ct, yt, Mt), le.push(yt, st, Mt);
          }
        this.setIndex(le), this.addAttribute("position", new Gr(de, 3)), this.addAttribute("normal", new Gr(pe, 3)), this.addAttribute("uv", new Gr(ve, 2));
      }
      function Hs(Q, te, ae, se) {
        mn.call(this), this.type = "PolyhedronGeometry", this.parameters = { vertices: Q, indices: te, radius: ae, detail: se }, this.fromBufferGeometry(new Ki(Q, te, ae, se)), this.mergeVertices();
      }
      function Ki(Q, te, ae, se) {
        Jr.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = { vertices: Q, indices: te, radius: ae, detail: se }, ae = ae || 1;
        var ue = [], le = [];
        function de(Se, Ge, ze, Ze) {
          var nt, ct, yt = Math.pow(2, Ze), st = [];
          for (nt = 0; nt <= yt; nt++) {
            st[nt] = [];
            var Mt = Se.clone().lerp(ze, nt / yt), Ot = Ge.clone().lerp(ze, nt / yt), dt = yt - nt;
            for (ct = 0; ct <= dt; ct++)
              st[nt][ct] = ct === 0 && nt === yt ? Mt : Mt.clone().lerp(Ot, ct / dt);
          }
          for (nt = 0; nt < yt; nt++)
            for (ct = 0; ct < 2 * (yt - nt) - 1; ct++) {
              var wt = Math.floor(ct / 2);
              ct % 2 == 0 ? (pe(st[nt][wt + 1]), pe(st[nt + 1][wt]), pe(st[nt][wt])) : (pe(st[nt][wt + 1]), pe(st[nt + 1][wt + 1]), pe(st[nt + 1][wt]));
            }
        }
        function pe(Se) {
          ue.push(Se.x, Se.y, Se.z);
        }
        function ve(Se, Ge) {
          var ze = 3 * Se;
          Ge.x = Q[ze + 0], Ge.y = Q[ze + 1], Ge.z = Q[ze + 2];
        }
        function we(Se, Ge, ze, Ze) {
          Ze < 0 && Se.x === 1 && (le[Ge] = Se.x - 1), ze.x === 0 && ze.z === 0 && (le[Ge] = Ze / 2 / Math.PI + 0.5);
        }
        function Me(Se) {
          return Math.atan2(Se.z, -Se.x);
        }
        function Qe(Se) {
          return Math.atan2(-Se.y, Math.sqrt(Se.x * Se.x + Se.z * Se.z));
        }
        (function(Se) {
          for (var Ge = new mt(), ze = new mt(), Ze = new mt(), nt = 0; nt < te.length; nt += 3)
            ve(te[nt + 0], Ge), ve(te[nt + 1], ze), ve(te[nt + 2], Ze), de(Ge, ze, Ze, Se);
        })(se = se || 0), function(Se) {
          for (var Ge = new mt(), ze = 0; ze < ue.length; ze += 3)
            Ge.x = ue[ze + 0], Ge.y = ue[ze + 1], Ge.z = ue[ze + 2], Ge.normalize().multiplyScalar(Se), ue[ze + 0] = Ge.x, ue[ze + 1] = Ge.y, ue[ze + 2] = Ge.z;
        }(ae), function() {
          for (var Se = new mt(), Ge = 0; Ge < ue.length; Ge += 3) {
            Se.x = ue[Ge + 0], Se.y = ue[Ge + 1], Se.z = ue[Ge + 2];
            var ze = Me(Se) / 2 / Math.PI + 0.5, Ze = Qe(Se) / Math.PI + 0.5;
            le.push(ze, 1 - Ze);
          }
          (function() {
            for (var nt = new mt(), ct = new mt(), yt = new mt(), st = new mt(), Mt = new wr(), Ot = new wr(), dt = new wr(), wt = 0, $t = 0; wt < ue.length; wt += 9, $t += 6) {
              nt.set(ue[wt + 0], ue[wt + 1], ue[wt + 2]), ct.set(ue[wt + 3], ue[wt + 4], ue[wt + 5]), yt.set(ue[wt + 6], ue[wt + 7], ue[wt + 8]), Mt.set(le[$t + 0], le[$t + 1]), Ot.set(le[$t + 2], le[$t + 3]), dt.set(le[$t + 4], le[$t + 5]), st.copy(nt).add(ct).add(yt).divideScalar(3);
              var Pt = Me(st);
              we(Mt, $t + 0, nt, Pt), we(Ot, $t + 2, ct, Pt), we(dt, $t + 4, yt, Pt);
            }
          })(), function() {
            for (var nt = 0; nt < le.length; nt += 6) {
              var ct = le[nt + 0], yt = le[nt + 2], st = le[nt + 4], Mt = Math.max(ct, yt, st), Ot = Math.min(ct, yt, st);
              Mt > 0.9 && Ot < 0.1 && (ct < 0.2 && (le[nt + 0] += 1), yt < 0.2 && (le[nt + 2] += 1), st < 0.2 && (le[nt + 4] += 1));
            }
          }();
        }(), this.addAttribute("position", new Gr(ue, 3)), this.addAttribute("normal", new Gr(ue.slice(), 3)), this.addAttribute("uv", new Gr(le, 2)), se === 0 ? this.computeVertexNormals() : this.normalizeNormals();
      }
      function qs(Q, te) {
        mn.call(this), this.type = "TetrahedronGeometry", this.parameters = { radius: Q, detail: te }, this.fromBufferGeometry(new Wo(Q, te)), this.mergeVertices();
      }
      function Wo(Q, te) {
        Ki.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], Q, te), this.type = "TetrahedronBufferGeometry", this.parameters = { radius: Q, detail: te };
      }
      function js(Q, te) {
        mn.call(this), this.type = "OctahedronGeometry", this.parameters = { radius: Q, detail: te }, this.fromBufferGeometry(new po(Q, te)), this.mergeVertices();
      }
      function po(Q, te) {
        Ki.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], Q, te), this.type = "OctahedronBufferGeometry", this.parameters = { radius: Q, detail: te };
      }
      function $s(Q, te) {
        mn.call(this), this.type = "IcosahedronGeometry", this.parameters = { radius: Q, detail: te }, this.fromBufferGeometry(new Jo(Q, te)), this.mergeVertices();
      }
      function Jo(Q, te) {
        var ae = (1 + Math.sqrt(5)) / 2, se = [-1, ae, 0, 1, ae, 0, -1, -ae, 0, 1, -ae, 0, 0, -1, ae, 0, 1, ae, 0, -1, -ae, 0, 1, -ae, ae, 0, -1, ae, 0, 1, -ae, 0, -1, -ae, 0, 1];
        Ki.call(this, se, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], Q, te), this.type = "IcosahedronBufferGeometry", this.parameters = { radius: Q, detail: te };
      }
      function Vs(Q, te) {
        mn.call(this), this.type = "DodecahedronGeometry", this.parameters = { radius: Q, detail: te }, this.fromBufferGeometry(new Xo(Q, te)), this.mergeVertices();
      }
      function Xo(Q, te) {
        var ae = (1 + Math.sqrt(5)) / 2, se = 1 / ae, ue = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -se, -ae, 0, -se, ae, 0, se, -ae, 0, se, ae, -se, -ae, 0, -se, ae, 0, se, -ae, 0, se, ae, 0, -ae, 0, -se, ae, 0, -se, -ae, 0, se, ae, 0, se];
        Ki.call(this, ue, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], Q, te), this.type = "DodecahedronBufferGeometry", this.parameters = { radius: Q, detail: te };
      }
      function Ds(Q, te, ae, se, ue, le) {
        mn.call(this), this.type = "TubeGeometry", this.parameters = { path: Q, tubularSegments: te, radius: ae, radialSegments: se, closed: ue }, le !== void 0 && console.warn("THREE.TubeGeometry: taper has been removed.");
        var de = new Zo(Q, te, ae, se, ue);
        this.tangents = de.tangents, this.normals = de.normals, this.binormals = de.binormals, this.fromBufferGeometry(de), this.mergeVertices();
      }
      function Zo(Q, te, ae, se, ue) {
        Jr.call(this), this.type = "TubeBufferGeometry", this.parameters = { path: Q, tubularSegments: te, radius: ae, radialSegments: se, closed: ue }, te = te || 64, ae = ae || 1, se = se || 8, ue = ue || !1;
        var le = Q.computeFrenetFrames(te, ue);
        this.tangents = le.tangents, this.normals = le.normals, this.binormals = le.binormals;
        var de, pe, ve = new mt(), we = new mt(), Me = new wr(), Qe = new mt(), Se = [], Ge = [], ze = [], Ze = [];
        function nt(ct) {
          Qe = Q.getPointAt(ct / te, Qe);
          var yt = le.normals[ct], st = le.binormals[ct];
          for (pe = 0; pe <= se; pe++) {
            var Mt = pe / se * Math.PI * 2, Ot = Math.sin(Mt), dt = -Math.cos(Mt);
            we.x = dt * yt.x + Ot * st.x, we.y = dt * yt.y + Ot * st.y, we.z = dt * yt.z + Ot * st.z, we.normalize(), Ge.push(we.x, we.y, we.z), ve.x = Qe.x + ae * we.x, ve.y = Qe.y + ae * we.y, ve.z = Qe.z + ae * we.z, Se.push(ve.x, ve.y, ve.z);
          }
        }
        (function() {
          for (de = 0; de < te; de++)
            nt(de);
          nt(ue === !1 ? te : 0), function() {
            for (de = 0; de <= te; de++)
              for (pe = 0; pe <= se; pe++)
                Me.x = de / te, Me.y = pe / se, ze.push(Me.x, Me.y);
          }(), function() {
            for (pe = 1; pe <= te; pe++)
              for (de = 1; de <= se; de++) {
                var ct = (se + 1) * (pe - 1) + (de - 1), yt = (se + 1) * pe + (de - 1), st = (se + 1) * pe + de, Mt = (se + 1) * (pe - 1) + de;
                Ze.push(ct, yt, Mt), Ze.push(yt, st, Mt);
              }
          }();
        })(), this.setIndex(Ze), this.addAttribute("position", new Gr(Se, 3)), this.addAttribute("normal", new Gr(Ge, 3)), this.addAttribute("uv", new Gr(ze, 2));
      }
      function zs(Q, te, ae, se, ue, le, de) {
        mn.call(this), this.type = "TorusKnotGeometry", this.parameters = { radius: Q, tube: te, tubularSegments: ae, radialSegments: se, p: ue, q: le }, de !== void 0 && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new Ko(Q, te, ae, se, ue, le)), this.mergeVertices();
      }
      function Ko(Q, te, ae, se, ue, le) {
        Jr.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = { radius: Q, tube: te, tubularSegments: ae, radialSegments: se, p: ue, q: le }, Q = Q || 1, te = te || 0.4, ae = Math.floor(ae) || 64, se = Math.floor(se) || 8, ue = ue || 2, le = le || 3;
        var de, pe, ve = [], we = [], Me = [], Qe = [], Se = new mt(), Ge = new mt(), ze = new mt(), Ze = new mt(), nt = new mt(), ct = new mt(), yt = new mt();
        for (de = 0; de <= ae; ++de) {
          var st = de / ae * ue * Math.PI * 2;
          for (Ht(st, ue, le, Q, ze), Ht(st + 0.01, ue, le, Q, Ze), ct.subVectors(Ze, ze), yt.addVectors(Ze, ze), nt.crossVectors(ct, yt), yt.crossVectors(nt, ct), nt.normalize(), yt.normalize(), pe = 0; pe <= se; ++pe) {
            var Mt = pe / se * Math.PI * 2, Ot = -te * Math.cos(Mt), dt = te * Math.sin(Mt);
            Se.x = ze.x + (Ot * yt.x + dt * nt.x), Se.y = ze.y + (Ot * yt.y + dt * nt.y), Se.z = ze.z + (Ot * yt.z + dt * nt.z), we.push(Se.x, Se.y, Se.z), Ge.subVectors(Se, ze).normalize(), Me.push(Ge.x, Ge.y, Ge.z), Qe.push(de / ae), Qe.push(pe / se);
          }
        }
        for (pe = 1; pe <= ae; pe++)
          for (de = 1; de <= se; de++) {
            var wt = (se + 1) * (pe - 1) + (de - 1), $t = (se + 1) * pe + (de - 1), Pt = (se + 1) * pe + de, er = (se + 1) * (pe - 1) + de;
            ve.push(wt, $t, er), ve.push($t, Pt, er);
          }
        function Ht(ir, dr, vr, pr, Or) {
          var Mr = Math.cos(ir), hr = Math.sin(ir), Cr = vr / dr * ir, lr = Math.cos(Cr);
          Or.x = pr * (2 + lr) * 0.5 * Mr, Or.y = pr * (2 + lr) * hr * 0.5, Or.z = pr * Math.sin(Cr) * 0.5;
        }
        this.setIndex(ve), this.addAttribute("position", new Gr(we, 3)), this.addAttribute("normal", new Gr(Me, 3)), this.addAttribute("uv", new Gr(Qe, 2));
      }
      function Ls(Q, te, ae, se, ue) {
        mn.call(this), this.type = "TorusGeometry", this.parameters = { radius: Q, tube: te, radialSegments: ae, tubularSegments: se, arc: ue }, this.fromBufferGeometry(new es(Q, te, ae, se, ue)), this.mergeVertices();
      }
      function es(Q, te, ae, se, ue) {
        Jr.call(this), this.type = "TorusBufferGeometry", this.parameters = { radius: Q, tube: te, radialSegments: ae, tubularSegments: se, arc: ue }, Q = Q || 1, te = te || 0.4, ae = Math.floor(ae) || 8, se = Math.floor(se) || 6, ue = ue || 2 * Math.PI;
        var le, de, pe = [], ve = [], we = [], Me = [], Qe = new mt(), Se = new mt(), Ge = new mt();
        for (le = 0; le <= ae; le++)
          for (de = 0; de <= se; de++) {
            var ze = de / se * ue, Ze = le / ae * Math.PI * 2;
            Se.x = (Q + te * Math.cos(Ze)) * Math.cos(ze), Se.y = (Q + te * Math.cos(Ze)) * Math.sin(ze), Se.z = te * Math.sin(Ze), ve.push(Se.x, Se.y, Se.z), Qe.x = Q * Math.cos(ze), Qe.y = Q * Math.sin(ze), Ge.subVectors(Se, Qe).normalize(), we.push(Ge.x, Ge.y, Ge.z), Me.push(de / se), Me.push(le / ae);
          }
        for (le = 1; le <= ae; le++)
          for (de = 1; de <= se; de++) {
            var nt = (se + 1) * le + de - 1, ct = (se + 1) * (le - 1) + de - 1, yt = (se + 1) * (le - 1) + de, st = (se + 1) * le + de;
            pe.push(nt, ct, st), pe.push(ct, yt, st);
          }
        this.setIndex(pe), this.addAttribute("position", new Gr(ve, 3)), this.addAttribute("normal", new Gr(we, 3)), this.addAttribute("uv", new Gr(Me, 2));
      }
      Ja.prototype = Object.create(In.prototype), Ja.prototype.constructor = Ja, Ja.prototype.isMeshDepthMaterial = !0, Ja.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.depthPacking = Q.depthPacking, this.skinning = Q.skinning, this.morphTargets = Q.morphTargets, this.map = Q.map, this.alphaMap = Q.alphaMap, this.displacementMap = Q.displacementMap, this.displacementScale = Q.displacementScale, this.displacementBias = Q.displacementBias, this.wireframe = Q.wireframe, this.wireframeLinewidth = Q.wireframeLinewidth, this;
      }, Xa.prototype = Object.create(In.prototype), Xa.prototype.constructor = Xa, Xa.prototype.isMeshDistanceMaterial = !0, Xa.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.referencePosition.copy(Q.referencePosition), this.nearDistance = Q.nearDistance, this.farDistance = Q.farDistance, this.skinning = Q.skinning, this.morphTargets = Q.morphTargets, this.map = Q.map, this.alphaMap = Q.alphaMap, this.displacementMap = Q.displacementMap, this.displacementScale = Q.displacementScale, this.displacementBias = Q.displacementBias, this;
      }, jo.prototype = Object.assign(Object.create(jr.prototype), { constructor: jo, isGroup: !0 }), fi.prototype = Object.assign(Object.create(Sa.prototype), { constructor: fi, isPerspectiveCamera: !0, copy: function(Q, te) {
        return Sa.prototype.copy.call(this, Q, te), this.fov = Q.fov, this.zoom = Q.zoom, this.near = Q.near, this.far = Q.far, this.focus = Q.focus, this.aspect = Q.aspect, this.view = Q.view === null ? null : Object.assign({}, Q.view), this.filmGauge = Q.filmGauge, this.filmOffset = Q.filmOffset, this;
      }, setFocalLength: function(Q) {
        var te = 0.5 * this.getFilmHeight() / Q;
        this.fov = 2 * Cn.RAD2DEG * Math.atan(te), this.updateProjectionMatrix();
      }, getFocalLength: function() {
        var Q = Math.tan(0.5 * Cn.DEG2RAD * this.fov);
        return 0.5 * this.getFilmHeight() / Q;
      }, getEffectiveFOV: function() {
        return 2 * Cn.RAD2DEG * Math.atan(Math.tan(0.5 * Cn.DEG2RAD * this.fov) / this.zoom);
      }, getFilmWidth: function() {
        return this.filmGauge * Math.min(this.aspect, 1);
      }, getFilmHeight: function() {
        return this.filmGauge / Math.max(this.aspect, 1);
      }, setViewOffset: function(Q, te, ae, se, ue, le) {
        this.aspect = Q / te, this.view === null && (this.view = { enabled: !0, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = !0, this.view.fullWidth = Q, this.view.fullHeight = te, this.view.offsetX = ae, this.view.offsetY = se, this.view.width = ue, this.view.height = le, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var Q = this.near, te = Q * Math.tan(0.5 * Cn.DEG2RAD * this.fov) / this.zoom, ae = 2 * te, se = this.aspect * ae, ue = -0.5 * se, le = this.view;
        if (this.view !== null && this.view.enabled) {
          var de = le.fullWidth, pe = le.fullHeight;
          ue += le.offsetX * se / de, te -= le.offsetY * ae / pe, se *= le.width / de, ae *= le.height / pe;
        }
        var ve = this.filmOffset;
        ve !== 0 && (ue += Q * ve / this.getFilmWidth()), this.projectionMatrix.makePerspective(ue, ue + se, te, te - ae, Q, this.far);
      }, toJSON: function(Q) {
        var te = jr.prototype.toJSON.call(this, Q);
        return te.object.fov = this.fov, te.object.zoom = this.zoom, te.object.near = this.near, te.object.far = this.far, te.object.focus = this.focus, te.object.aspect = this.aspect, this.view !== null && (te.object.view = Object.assign({}, this.view)), te.object.filmGauge = this.filmGauge, te.object.filmOffset = this.filmOffset, te;
      } }), Ns.prototype = Object.assign(Object.create(fi.prototype), { constructor: Ns, isArrayCamera: !0 }), $o.prototype.isFogExp2 = !0, $o.prototype.clone = function() {
        return new $o(this.color, this.density);
      }, $o.prototype.toJSON = function() {
        return { type: "FogExp2", color: this.color.getHex(), density: this.density };
      }, Vo.prototype.isFog = !0, Vo.prototype.clone = function() {
        return new Vo(this.color, this.near, this.far);
      }, Vo.prototype.toJSON = function() {
        return { type: "Fog", color: this.color.getHex(), near: this.near, far: this.far };
      }, Sc.prototype = Object.assign(Object.create(jr.prototype), { constructor: Sc, copy: function(Q, te) {
        return jr.prototype.copy.call(this, Q, te), Q.background !== null && (this.background = Q.background.clone()), Q.fog !== null && (this.fog = Q.fog.clone()), Q.overrideMaterial !== null && (this.overrideMaterial = Q.overrideMaterial.clone()), this.autoUpdate = Q.autoUpdate, this.matrixAutoUpdate = Q.matrixAutoUpdate, this;
      }, toJSON: function(Q) {
        var te = jr.prototype.toJSON.call(this, Q);
        return this.background !== null && (te.object.background = this.background.toJSON(Q)), this.fog !== null && (te.object.fog = this.fog.toJSON()), te;
      } }), Object.defineProperty(ho.prototype, "needsUpdate", { set: function(Q) {
        Q === !0 && this.version++;
      } }), Object.assign(ho.prototype, { isInterleavedBuffer: !0, onUploadCallback: function() {
      }, setArray: function(Q) {
        if (Array.isArray(Q))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        return this.count = Q !== void 0 ? Q.length / this.stride : 0, this.array = Q, this;
      }, setDynamic: function(Q) {
        return this.dynamic = Q, this;
      }, copy: function(Q) {
        return this.array = new Q.array.constructor(Q.array), this.count = Q.count, this.stride = Q.stride, this.dynamic = Q.dynamic, this;
      }, copyAt: function(Q, te, ae) {
        Q *= this.stride, ae *= te.stride;
        for (var se = 0, ue = this.stride; se < ue; se++)
          this.array[Q + se] = te.array[ae + se];
        return this;
      }, set: function(Q, te) {
        return te === void 0 && (te = 0), this.array.set(Q, te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, onUpload: function(Q) {
        return this.onUploadCallback = Q, this;
      } }), Object.defineProperties(Qs.prototype, { count: { get: function() {
        return this.data.count;
      } }, array: { get: function() {
        return this.data.array;
      } } }), Object.assign(Qs.prototype, { isInterleavedBufferAttribute: !0, setX: function(Q, te) {
        return this.data.array[Q * this.data.stride + this.offset] = te, this;
      }, setY: function(Q, te) {
        return this.data.array[Q * this.data.stride + this.offset + 1] = te, this;
      }, setZ: function(Q, te) {
        return this.data.array[Q * this.data.stride + this.offset + 2] = te, this;
      }, setW: function(Q, te) {
        return this.data.array[Q * this.data.stride + this.offset + 3] = te, this;
      }, getX: function(Q) {
        return this.data.array[Q * this.data.stride + this.offset];
      }, getY: function(Q) {
        return this.data.array[Q * this.data.stride + this.offset + 1];
      }, getZ: function(Q) {
        return this.data.array[Q * this.data.stride + this.offset + 2];
      }, getW: function(Q) {
        return this.data.array[Q * this.data.stride + this.offset + 3];
      }, setXY: function(Q, te, ae) {
        return Q = Q * this.data.stride + this.offset, this.data.array[Q + 0] = te, this.data.array[Q + 1] = ae, this;
      }, setXYZ: function(Q, te, ae, se) {
        return Q = Q * this.data.stride + this.offset, this.data.array[Q + 0] = te, this.data.array[Q + 1] = ae, this.data.array[Q + 2] = se, this;
      }, setXYZW: function(Q, te, ae, se, ue) {
        return Q = Q * this.data.stride + this.offset, this.data.array[Q + 0] = te, this.data.array[Q + 1] = ae, this.data.array[Q + 2] = se, this.data.array[Q + 3] = ue, this;
      } }), Za.prototype = Object.create(In.prototype), Za.prototype.constructor = Za, Za.prototype.isSpriteMaterial = !0, Za.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.color.copy(Q.color), this.map = Q.map, this.rotation = Q.rotation, this;
      }, ks.prototype = Object.assign(Object.create(jr.prototype), { constructor: ks, isSprite: !0, raycast: function() {
        var Q = new mt(), te = new mt(), ae = new mt(), se = new wr(), ue = new wr(), le = new An(), de = new mt(), pe = new mt(), ve = new mt();
        function we(Me, Qe, Se, Ge, ze, Ze) {
          se.subVectors(Me, Se).addScalar(0.5).multiply(Ge), ze !== void 0 ? (ue.x = Ze * se.x - ze * se.y, ue.y = ze * se.x + Ze * se.y) : ue.copy(se), Me.copy(Qe), Me.x += ue.x, Me.y += ue.y, Me.applyMatrix4(le);
        }
        return function(Me, Qe) {
          te.setFromMatrixScale(this.matrixWorld), le.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld), ae.setFromMatrixPosition(this.modelViewMatrix);
          var Se, Ge, ze = this.material.rotation;
          ze !== 0 && (Ge = Math.cos(ze), Se = Math.sin(ze));
          var Ze = this.center;
          we(de.set(-0.5, -0.5, 0), ae, Ze, te, Se, Ge), we(pe.set(0.5, -0.5, 0), ae, Ze, te, Se, Ge), we(ve.set(0.5, 0.5, 0), ae, Ze, te, Se, Ge);
          var nt = Me.ray.intersectTriangle(de, pe, ve, !1, Q);
          if (nt !== null || (we(pe.set(-0.5, 0.5, 0), ae, Ze, te, Se, Ge), (nt = Me.ray.intersectTriangle(de, ve, pe, !1, Q)) !== null)) {
            var ct = Me.ray.origin.distanceTo(Q);
            ct < Me.near || ct > Me.far || Qe.push({ distance: ct, point: Q.clone(), face: null, object: this });
          }
        };
      }(), clone: function() {
        return new this.constructor(this.material).copy(this);
      }, copy: function(Q) {
        return jr.prototype.copy.call(this, Q), Q.center !== void 0 && this.center.copy(Q.center), this;
      } }), Os.prototype = Object.assign(Object.create(jr.prototype), { constructor: Os, copy: function(Q) {
        jr.prototype.copy.call(this, Q, !1);
        for (var te = Q.levels, ae = 0, se = te.length; ae < se; ae++) {
          var ue = te[ae];
          this.addLevel(ue.object.clone(), ue.distance);
        }
        return this;
      }, addLevel: function(Q, te) {
        te === void 0 && (te = 0), te = Math.abs(te);
        for (var ae = this.levels, se = 0; se < ae.length && !(te < ae[se].distance); se++)
          ;
        ae.splice(se, 0, { distance: te, object: Q }), this.add(Q);
      }, getObjectForDistance: function(Q) {
        for (var te = this.levels, ae = 1, se = te.length; ae < se && !(Q < te[ae].distance); ae++)
          ;
        return te[ae - 1].object;
      }, raycast: function() {
        var Q = new mt();
        return function(te, ae) {
          Q.setFromMatrixPosition(this.matrixWorld);
          var se = te.ray.origin.distanceTo(Q);
          this.getObjectForDistance(se).raycast(te, ae);
        };
      }(), update: function() {
        var Q = new mt(), te = new mt();
        return function(ae) {
          var se = this.levels;
          if (se.length > 1) {
            Q.setFromMatrixPosition(ae.matrixWorld), te.setFromMatrixPosition(this.matrixWorld);
            var ue = Q.distanceTo(te);
            se[0].object.visible = !0;
            for (var le = 1, de = se.length; le < de && ue >= se[le].distance; le++)
              se[le - 1].object.visible = !1, se[le].object.visible = !0;
            for (; le < de; le++)
              se[le].object.visible = !1;
          }
        };
      }(), toJSON: function(Q) {
        var te = jr.prototype.toJSON.call(this, Q);
        te.object.levels = [];
        for (var ae = this.levels, se = 0, ue = ae.length; se < ue; se++) {
          var le = ae[se];
          te.object.levels.push({ object: le.object.uuid, distance: le.distance });
        }
        return te;
      } }), Object.assign(Ps.prototype, { calculateInverses: function() {
        this.boneInverses = [];
        for (var Q = 0, te = this.bones.length; Q < te; Q++) {
          var ae = new An();
          this.bones[Q] && ae.getInverse(this.bones[Q].matrixWorld), this.boneInverses.push(ae);
        }
      }, pose: function() {
        var Q, te, ae;
        for (te = 0, ae = this.bones.length; te < ae; te++)
          (Q = this.bones[te]) && Q.matrixWorld.getInverse(this.boneInverses[te]);
        for (te = 0, ae = this.bones.length; te < ae; te++)
          (Q = this.bones[te]) && (Q.parent && Q.parent.isBone ? (Q.matrix.getInverse(Q.parent.matrixWorld), Q.matrix.multiply(Q.matrixWorld)) : Q.matrix.copy(Q.matrixWorld), Q.matrix.decompose(Q.position, Q.quaternion, Q.scale));
      }, update: function() {
        var Q = new An(), te = new An();
        return function() {
          for (var ae = this.bones, se = this.boneInverses, ue = this.boneMatrices, le = this.boneTexture, de = 0, pe = ae.length; de < pe; de++) {
            var ve = ae[de] ? ae[de].matrixWorld : te;
            Q.multiplyMatrices(ve, se[de]), Q.toArray(ue, 16 * de);
          }
          le !== void 0 && (le.needsUpdate = !0);
        };
      }(), clone: function() {
        return new Ps(this.bones, this.boneInverses);
      }, getBoneByName: function(Q) {
        for (var te = 0, ae = this.bones.length; te < ae; te++) {
          var se = this.bones[te];
          if (se.name === Q)
            return se;
        }
      } }), Ic.prototype = Object.assign(Object.create(jr.prototype), { constructor: Ic, isBone: !0 }), Tc.prototype = Object.assign(Object.create(Xi.prototype), { constructor: Tc, isSkinnedMesh: !0, initBones: function() {
        var Q, te, ae, se, ue = [];
        if (this.geometry && this.geometry.bones !== void 0) {
          for (ae = 0, se = this.geometry.bones.length; ae < se; ae++)
            te = this.geometry.bones[ae], Q = new Ic(), ue.push(Q), Q.name = te.name, Q.position.fromArray(te.pos), Q.quaternion.fromArray(te.rotq), te.scl !== void 0 && Q.scale.fromArray(te.scl);
          for (ae = 0, se = this.geometry.bones.length; ae < se; ae++)
            (te = this.geometry.bones[ae]).parent !== -1 && te.parent !== null && ue[te.parent] !== void 0 ? ue[te.parent].add(ue[ae]) : this.add(ue[ae]);
        }
        return this.updateMatrixWorld(!0), ue;
      }, bind: function(Q, te) {
        this.skeleton = Q, te === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), te = this.matrixWorld), this.bindMatrix.copy(te), this.bindMatrixInverse.getInverse(te);
      }, pose: function() {
        this.skeleton.pose();
      }, normalizeSkinWeights: function() {
        var Q, te;
        if (this.geometry && this.geometry.isGeometry)
          for (te = 0; te < this.geometry.skinWeights.length; te++) {
            var ae = this.geometry.skinWeights[te];
            (Q = 1 / ae.manhattanLength()) !== 1 / 0 ? ae.multiplyScalar(Q) : ae.set(1, 0, 0, 0);
          }
        else if (this.geometry && this.geometry.isBufferGeometry) {
          var se = new Zn(), ue = this.geometry.attributes.skinWeight;
          for (te = 0; te < ue.count; te++)
            se.x = ue.getX(te), se.y = ue.getY(te), se.z = ue.getZ(te), se.w = ue.getW(te), (Q = 1 / se.manhattanLength()) !== 1 / 0 ? se.multiplyScalar(Q) : se.set(1, 0, 0, 0), ue.setXYZW(te, se.x, se.y, se.z, se.w);
        }
      }, updateMatrixWorld: function(Q) {
        Xi.prototype.updateMatrixWorld.call(this, Q), this.bindMode === "attached" ? this.bindMatrixInverse.getInverse(this.matrixWorld) : this.bindMode === "detached" ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
      }, clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), ei.prototype = Object.create(In.prototype), ei.prototype.constructor = ei, ei.prototype.isLineBasicMaterial = !0, ei.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.color.copy(Q.color), this.linewidth = Q.linewidth, this.linecap = Q.linecap, this.linejoin = Q.linejoin, this;
      }, Zi.prototype = Object.assign(Object.create(jr.prototype), { constructor: Zi, isLine: !0, computeLineDistances: function() {
        var Q = new mt(), te = new mt();
        return function() {
          var ae = this.geometry;
          if (ae.isBufferGeometry)
            if (ae.index === null) {
              for (var se = ae.attributes.position, ue = [0], le = 1, de = se.count; le < de; le++)
                Q.fromBufferAttribute(se, le - 1), te.fromBufferAttribute(se, le), ue[le] = ue[le - 1], ue[le] += Q.distanceTo(te);
              ae.addAttribute("lineDistance", new Gr(ue, 1));
            } else
              console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
          else if (ae.isGeometry) {
            var pe = ae.vertices;
            for ((ue = ae.lineDistances)[0] = 0, le = 1, de = pe.length; le < de; le++)
              ue[le] = ue[le - 1], ue[le] += pe[le - 1].distanceTo(pe[le]);
          }
          return this;
        };
      }(), raycast: function() {
        var Q = new An(), te = new fo(), ae = new Aa();
        return function(se, ue) {
          var le = se.linePrecision, de = le * le, pe = this.geometry, ve = this.matrixWorld;
          if (pe.boundingSphere === null && pe.computeBoundingSphere(), ae.copy(pe.boundingSphere), ae.applyMatrix4(ve), se.ray.intersectsSphere(ae) !== !1) {
            Q.getInverse(ve), te.copy(se.ray).applyMatrix4(Q);
            var we = new mt(), Me = new mt(), Qe = new mt(), Se = new mt(), Ge = this && this.isLineSegments ? 2 : 1;
            if (pe.isBufferGeometry) {
              var ze = pe.index, Ze = pe.attributes.position.array;
              if (ze !== null)
                for (var nt = ze.array, ct = 0, yt = nt.length - 1; ct < yt; ct += Ge) {
                  var st = nt[ct], Mt = nt[ct + 1];
                  we.fromArray(Ze, 3 * st), Me.fromArray(Ze, 3 * Mt), !(te.distanceSqToSegment(we, Me, Se, Qe) > de) && (Se.applyMatrix4(this.matrixWorld), (wt = se.ray.origin.distanceTo(Se)) < se.near || wt > se.far || ue.push({ distance: wt, point: Qe.clone().applyMatrix4(this.matrixWorld), index: ct, face: null, faceIndex: null, object: this }));
                }
              else
                for (ct = 0, yt = Ze.length / 3 - 1; ct < yt; ct += Ge)
                  we.fromArray(Ze, 3 * ct), Me.fromArray(Ze, 3 * ct + 3), !(te.distanceSqToSegment(we, Me, Se, Qe) > de) && (Se.applyMatrix4(this.matrixWorld), (wt = se.ray.origin.distanceTo(Se)) < se.near || wt > se.far || ue.push({ distance: wt, point: Qe.clone().applyMatrix4(this.matrixWorld), index: ct, face: null, faceIndex: null, object: this }));
            } else if (pe.isGeometry) {
              var Ot = pe.vertices, dt = Ot.length;
              for (ct = 0; ct < dt - 1; ct += Ge) {
                var wt;
                te.distanceSqToSegment(Ot[ct], Ot[ct + 1], Se, Qe) > de || (Se.applyMatrix4(this.matrixWorld), (wt = se.ray.origin.distanceTo(Se)) < se.near || wt > se.far || ue.push({ distance: wt, point: Qe.clone().applyMatrix4(this.matrixWorld), index: ct, face: null, faceIndex: null, object: this }));
              }
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), ri.prototype = Object.assign(Object.create(Zi.prototype), { constructor: ri, isLineSegments: !0, computeLineDistances: function() {
        var Q = new mt(), te = new mt();
        return function() {
          var ae = this.geometry;
          if (ae.isBufferGeometry)
            if (ae.index === null) {
              for (var se = ae.attributes.position, ue = [], le = 0, de = se.count; le < de; le += 2)
                Q.fromBufferAttribute(se, le), te.fromBufferAttribute(se, le + 1), ue[le] = le === 0 ? 0 : ue[le - 1], ue[le + 1] = ue[le] + Q.distanceTo(te);
              ae.addAttribute("lineDistance", new Gr(ue, 1));
            } else
              console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
          else if (ae.isGeometry) {
            var pe = ae.vertices;
            for (ue = ae.lineDistances, le = 0, de = pe.length; le < de; le += 2)
              Q.copy(pe[le]), te.copy(pe[le + 1]), ue[le] = le === 0 ? 0 : ue[le - 1], ue[le + 1] = ue[le] + Q.distanceTo(te);
          }
          return this;
        };
      }() }), Rc.prototype = Object.assign(Object.create(Zi.prototype), { constructor: Rc, isLineLoop: !0 }), ga.prototype = Object.create(In.prototype), ga.prototype.constructor = ga, ga.prototype.isPointsMaterial = !0, ga.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.color.copy(Q.color), this.map = Q.map, this.size = Q.size, this.sizeAttenuation = Q.sizeAttenuation, this.morphTargets = Q.morphTargets, this;
      }, Do.prototype = Object.assign(Object.create(jr.prototype), { constructor: Do, isPoints: !0, raycast: function() {
        var Q = new An(), te = new fo(), ae = new Aa();
        return function(se, ue) {
          var le = this, de = this.geometry, pe = this.matrixWorld, ve = se.params.Points.threshold;
          if (de.boundingSphere === null && de.computeBoundingSphere(), ae.copy(de.boundingSphere), ae.applyMatrix4(pe), ae.radius += ve, se.ray.intersectsSphere(ae) !== !1) {
            Q.getInverse(pe), te.copy(se.ray).applyMatrix4(Q);
            var we = ve / ((this.scale.x + this.scale.y + this.scale.z) / 3), Me = we * we, Qe = new mt(), Se = new mt();
            if (de.isBufferGeometry) {
              var Ge = de.index, ze = de.attributes.position.array;
              if (Ge !== null)
                for (var Ze = Ge.array, nt = 0, ct = Ze.length; nt < ct; nt++) {
                  var yt = Ze[nt];
                  Qe.fromArray(ze, 3 * yt), Ot(Qe, yt);
                }
              else {
                nt = 0;
                for (var st = ze.length / 3; nt < st; nt++)
                  Qe.fromArray(ze, 3 * nt), Ot(Qe, nt);
              }
            } else {
              var Mt = de.vertices;
              for (nt = 0, st = Mt.length; nt < st; nt++)
                Ot(Mt[nt], nt);
            }
          }
          function Ot(dt, wt) {
            var $t = te.distanceSqToPoint(dt);
            if ($t < Me) {
              te.closestPointToPoint(dt, Se), Se.applyMatrix4(pe);
              var Pt = se.ray.origin.distanceTo(Se);
              if (Pt < se.near || Pt > se.far)
                return;
              ue.push({ distance: Pt, distanceToRay: Math.sqrt($t), point: Se.clone(), index: wt, face: null, object: le });
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), au.prototype = Object.assign(Object.create(ii.prototype), { constructor: au, isVideoTexture: !0, update: function() {
        var Q = this.image;
        Q.readyState >= Q.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
      } }), zo.prototype = Object.create(ii.prototype), zo.prototype.constructor = zo, zo.prototype.isCompressedTexture = !0, Fs.prototype = Object.create(ii.prototype), Fs.prototype.constructor = Fs, Fs.prototype.isCanvasTexture = !0, Gs.prototype = Object.create(ii.prototype), Gs.prototype.constructor = Gs, Gs.prototype.isDepthTexture = !0, Lo.prototype = Object.create(Jr.prototype), Lo.prototype.constructor = Lo, Us.prototype = Object.create(mn.prototype), Us.prototype.constructor = Us, Yo.prototype = Object.create(Jr.prototype), Yo.prototype.constructor = Yo, Hs.prototype = Object.create(mn.prototype), Hs.prototype.constructor = Hs, Ki.prototype = Object.create(Jr.prototype), Ki.prototype.constructor = Ki, qs.prototype = Object.create(mn.prototype), qs.prototype.constructor = qs, Wo.prototype = Object.create(Ki.prototype), Wo.prototype.constructor = Wo, js.prototype = Object.create(mn.prototype), js.prototype.constructor = js, po.prototype = Object.create(Ki.prototype), po.prototype.constructor = po, $s.prototype = Object.create(mn.prototype), $s.prototype.constructor = $s, Jo.prototype = Object.create(Ki.prototype), Jo.prototype.constructor = Jo, Vs.prototype = Object.create(mn.prototype), Vs.prototype.constructor = Vs, Xo.prototype = Object.create(Ki.prototype), Xo.prototype.constructor = Xo, Ds.prototype = Object.create(mn.prototype), Ds.prototype.constructor = Ds, Zo.prototype = Object.create(Jr.prototype), Zo.prototype.constructor = Zo, zs.prototype = Object.create(mn.prototype), zs.prototype.constructor = zs, Ko.prototype = Object.create(Jr.prototype), Ko.prototype.constructor = Ko, Ls.prototype = Object.create(mn.prototype), Ls.prototype.constructor = Ls, es.prototype = Object.create(Jr.prototype), es.prototype.constructor = es;
      var wd = function(Q, te, ae) {
        ae = ae || 2;
        var se, ue, le, de, pe, ve, we, Me = te && te.length, Qe = Me ? te[0] * ae : Q.length, Se = cl(Q, 0, Qe, ae, !0), Ge = [];
        if (!Se)
          return Ge;
        if (Me && (Se = function(Ze, nt, ct, yt) {
          var st, Mt, Ot, dt, wt, $t = [];
          for (st = 0, Mt = nt.length; st < Mt; st++)
            Ot = nt[st] * yt, dt = st < Mt - 1 ? nt[st + 1] * yt : Ze.length, (wt = cl(Ze, Ot, dt, yt, !1)) === wt.next && (wt.steiner = !0), $t.push(Md(wt));
          for ($t.sort(Td), st = 0; st < $t.length; st++)
            Rd($t[st], ct), ct = Ys(ct, ct.next);
          return ct;
        }(Q, te, Se, ae)), Q.length > 80 * ae) {
          se = le = Q[0], ue = de = Q[1];
          for (var ze = ae; ze < Qe; ze += ae)
            pe = Q[ze], ve = Q[ze + 1], pe < se && (se = pe), ve < ue && (ue = ve), pe > le && (le = pe), ve > de && (de = ve);
          we = (we = Math.max(le - se, de - ue)) !== 0 ? 1 / we : 0;
        }
        return Ws(Se, Ge, ae, se, ue, we), Ge;
      };
      function cl(Q, te, ae, se, ue) {
        var le, de;
        if (ue === function(pe, ve, we, Me) {
          for (var Qe = 0, Se = ve, Ge = we - Me; Se < we; Se += Me)
            Qe += (pe[Ge] - pe[Se]) * (pe[Se + 1] + pe[Ge + 1]), Ge = Se;
          return Qe;
        }(Q, te, ae, se) > 0)
          for (le = te; le < ae; le += se)
            de = dl(le, Q[le], Q[le + 1], de);
        else
          for (le = ae - se; le >= te; le -= se)
            de = dl(le, Q[le], Q[le + 1], de);
        return de && Ao(de, de.next) && (Xs(de), de = de.next), de;
      }
      function Ys(Q, te) {
        if (!Q)
          return Q;
        te || (te = Q);
        var ae, se = Q;
        do
          if (ae = !1, se.steiner || !Ao(se, se.next) && Yi(se.prev, se, se.next) !== 0)
            se = se.next;
          else {
            if (Xs(se), (se = te = se.prev) === se.next)
              break;
            ae = !0;
          }
        while (ae || se !== te);
        return te;
      }
      function Ws(Q, te, ae, se, ue, le, de) {
        if (Q) {
          !de && le && function(Me, Qe, Se, Ge) {
            var ze = Me;
            do
              ze.z === null && (ze.z = ou(ze.x, ze.y, Qe, Se, Ge)), ze.prevZ = ze.prev, ze.nextZ = ze.next, ze = ze.next;
            while (ze !== Me);
            ze.prevZ.nextZ = null, ze.prevZ = null, function(Ze) {
              var nt, ct, yt, st, Mt, Ot, dt, wt, $t = 1;
              do {
                for (ct = Ze, Ze = null, Mt = null, Ot = 0; ct; ) {
                  for (Ot++, yt = ct, dt = 0, nt = 0; nt < $t && (dt++, yt = yt.nextZ); nt++)
                    ;
                  for (wt = $t; dt > 0 || wt > 0 && yt; )
                    dt !== 0 && (wt === 0 || !yt || ct.z <= yt.z) ? (st = ct, ct = ct.nextZ, dt--) : (st = yt, yt = yt.nextZ, wt--), Mt ? Mt.nextZ = st : Ze = st, st.prevZ = Mt, Mt = st;
                  ct = yt;
                }
                Mt.nextZ = null, $t *= 2;
              } while (Ot > 1);
            }(ze);
          }(Q, se, ue, le);
          for (var pe, ve, we = Q; Q.prev !== Q.next; )
            if (pe = Q.prev, ve = Q.next, le ? Cd(Q, se, ue, le) : _d(Q))
              te.push(pe.i / ae), te.push(Q.i / ae), te.push(ve.i / ae), Xs(Q), Q = ve.next, we = ve.next;
            else if ((Q = ve) === we) {
              de ? de === 1 ? Ws(Q = Sd(Q, te, ae), te, ae, se, ue, le, 2) : de === 2 && Id(Q, te, ae, se, ue, le) : Ws(Ys(Q), te, ae, se, ue, le, 1);
              break;
            }
        }
      }
      function _d(Q) {
        var te = Q.prev, ae = Q, se = Q.next;
        if (Yi(te, ae, se) >= 0)
          return !1;
        for (var ue = Q.next.next; ue !== Q.prev; ) {
          if (Mc(te.x, te.y, ae.x, ae.y, se.x, se.y, ue.x, ue.y) && Yi(ue.prev, ue, ue.next) >= 0)
            return !1;
          ue = ue.next;
        }
        return !0;
      }
      function Cd(Q, te, ae, se) {
        var ue = Q.prev, le = Q, de = Q.next;
        if (Yi(ue, le, de) >= 0)
          return !1;
        for (var pe = ue.x < le.x ? ue.x < de.x ? ue.x : de.x : le.x < de.x ? le.x : de.x, ve = ue.y < le.y ? ue.y < de.y ? ue.y : de.y : le.y < de.y ? le.y : de.y, we = ue.x > le.x ? ue.x > de.x ? ue.x : de.x : le.x > de.x ? le.x : de.x, Me = ue.y > le.y ? ue.y > de.y ? ue.y : de.y : le.y > de.y ? le.y : de.y, Qe = ou(pe, ve, te, ae, se), Se = ou(we, Me, te, ae, se), Ge = Q.nextZ; Ge && Ge.z <= Se; ) {
          if (Ge !== Q.prev && Ge !== Q.next && Mc(ue.x, ue.y, le.x, le.y, de.x, de.y, Ge.x, Ge.y) && Yi(Ge.prev, Ge, Ge.next) >= 0)
            return !1;
          Ge = Ge.nextZ;
        }
        for (Ge = Q.prevZ; Ge && Ge.z >= Qe; ) {
          if (Ge !== Q.prev && Ge !== Q.next && Mc(ue.x, ue.y, le.x, le.y, de.x, de.y, Ge.x, Ge.y) && Yi(Ge.prev, Ge, Ge.next) >= 0)
            return !1;
          Ge = Ge.prevZ;
        }
        return !0;
      }
      function Sd(Q, te, ae) {
        var se = Q;
        do {
          var ue = se.prev, le = se.next.next;
          !Ao(ue, le) && ul(ue, se, se.next, le) && Js(ue, le) && Js(le, ue) && (te.push(ue.i / ae), te.push(se.i / ae), te.push(le.i / ae), Xs(se), Xs(se.next), se = Q = le), se = se.next;
        } while (se !== Q);
        return se;
      }
      function Id(Q, te, ae, se, ue, le) {
        var de = Q;
        do {
          for (var pe = de.next.next; pe !== de.prev; ) {
            if (de.i !== pe.i && Nd(de, pe)) {
              var ve = ll(de, pe);
              return de = Ys(de, de.next), ve = Ys(ve, ve.next), Ws(de, te, ae, se, ue, le), void Ws(ve, te, ae, se, ue, le);
            }
            pe = pe.next;
          }
          de = de.next;
        } while (de !== Q);
      }
      function Td(Q, te) {
        return Q.x - te.x;
      }
      function Rd(Q, te) {
        if (te = function(se, ue) {
          var le, de = ue, pe = se.x, ve = se.y, we = -1 / 0;
          do {
            if (ve <= de.y && ve >= de.next.y && de.next.y !== de.y) {
              var Me = de.x + (ve - de.y) * (de.next.x - de.x) / (de.next.y - de.y);
              if (Me <= pe && Me > we) {
                if (we = Me, Me === pe) {
                  if (ve === de.y)
                    return de;
                  if (ve === de.next.y)
                    return de.next;
                }
                le = de.x < de.next.x ? de : de.next;
              }
            }
            de = de.next;
          } while (de !== ue);
          if (!le)
            return null;
          if (pe === we)
            return le.prev;
          var Qe, Se = le, Ge = le.x, ze = le.y, Ze = 1 / 0;
          for (de = le.next; de !== Se; )
            pe >= de.x && de.x >= Ge && pe !== de.x && Mc(ve < ze ? pe : we, ve, Ge, ze, ve < ze ? we : pe, ve, de.x, de.y) && ((Qe = Math.abs(ve - de.y) / (pe - de.x)) < Ze || Qe === Ze && de.x > le.x) && Js(de, se) && (le = de, Ze = Qe), de = de.next;
          return le;
        }(Q, te)) {
          var ae = ll(te, Q);
          Ys(ae, ae.next);
        }
      }
      function ou(Q, te, ae, se, ue) {
        return (Q = 1431655765 & ((Q = 858993459 & ((Q = 252645135 & ((Q = 16711935 & ((Q = 32767 * (Q - ae) * ue) | Q << 8)) | Q << 4)) | Q << 2)) | Q << 1)) | (te = 1431655765 & ((te = 858993459 & ((te = 252645135 & ((te = 16711935 & ((te = 32767 * (te - se) * ue) | te << 8)) | te << 4)) | te << 2)) | te << 1)) << 1;
      }
      function Md(Q) {
        var te = Q, ae = Q;
        do
          te.x < ae.x && (ae = te), te = te.next;
        while (te !== Q);
        return ae;
      }
      function Mc(Q, te, ae, se, ue, le, de, pe) {
        return (ue - de) * (te - pe) - (Q - de) * (le - pe) >= 0 && (Q - de) * (se - pe) - (ae - de) * (te - pe) >= 0 && (ae - de) * (le - pe) - (ue - de) * (se - pe) >= 0;
      }
      function Nd(Q, te) {
        return Q.next.i !== te.i && Q.prev.i !== te.i && !function(ae, se) {
          var ue = ae;
          do {
            if (ue.i !== ae.i && ue.next.i !== ae.i && ue.i !== se.i && ue.next.i !== se.i && ul(ue, ue.next, ae, se))
              return !0;
            ue = ue.next;
          } while (ue !== ae);
          return !1;
        }(Q, te) && Js(Q, te) && Js(te, Q) && function(ae, se) {
          var ue = ae, le = !1, de = (ae.x + se.x) / 2, pe = (ae.y + se.y) / 2;
          do
            ue.y > pe != ue.next.y > pe && ue.next.y !== ue.y && de < (ue.next.x - ue.x) * (pe - ue.y) / (ue.next.y - ue.y) + ue.x && (le = !le), ue = ue.next;
          while (ue !== ae);
          return le;
        }(Q, te);
      }
      function Yi(Q, te, ae) {
        return (te.y - Q.y) * (ae.x - te.x) - (te.x - Q.x) * (ae.y - te.y);
      }
      function Ao(Q, te) {
        return Q.x === te.x && Q.y === te.y;
      }
      function ul(Q, te, ae, se) {
        return !!(Ao(Q, te) && Ao(ae, se) || Ao(Q, se) && Ao(ae, te)) || Yi(Q, te, ae) > 0 != Yi(Q, te, se) > 0 && Yi(ae, se, Q) > 0 != Yi(ae, se, te) > 0;
      }
      function Js(Q, te) {
        return Yi(Q.prev, Q, Q.next) < 0 ? Yi(Q, te, Q.next) >= 0 && Yi(Q, Q.prev, te) >= 0 : Yi(Q, te, Q.prev) < 0 || Yi(Q, Q.next, te) < 0;
      }
      function ll(Q, te) {
        var ae = new su(Q.i, Q.x, Q.y), se = new su(te.i, te.x, te.y), ue = Q.next, le = te.prev;
        return Q.next = te, te.prev = Q, ae.next = ue, ue.prev = ae, se.next = ae, ae.prev = se, le.next = se, se.prev = le, se;
      }
      function dl(Q, te, ae, se) {
        var ue = new su(Q, te, ae);
        return se ? (ue.next = se.next, ue.prev = se, se.next.prev = ue, se.next = ue) : (ue.prev = ue, ue.next = ue), ue;
      }
      function Xs(Q) {
        Q.next.prev = Q.prev, Q.prev.next = Q.next, Q.prevZ && (Q.prevZ.nextZ = Q.nextZ), Q.nextZ && (Q.nextZ.prevZ = Q.prevZ);
      }
      function su(Q, te, ae) {
        this.i = Q, this.x = te, this.y = ae, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
      }
      var $a = { area: function(Q) {
        for (var te = Q.length, ae = 0, se = te - 1, ue = 0; ue < te; se = ue++)
          ae += Q[se].x * Q[ue].y - Q[ue].x * Q[se].y;
        return 0.5 * ae;
      }, isClockWise: function(Q) {
        return $a.area(Q) < 0;
      }, triangulateShape: function(Q, te) {
        var ae = [], se = [], ue = [];
        fl(Q), hl(ae, Q);
        var le = Q.length;
        te.forEach(fl);
        for (var de = 0; de < te.length; de++)
          se.push(le), le += te[de].length, hl(ae, te[de]);
        var pe = wd(ae, se);
        for (de = 0; de < pe.length; de += 3)
          ue.push(pe.slice(de, de + 3));
        return ue;
      } };
      function fl(Q) {
        var te = Q.length;
        te > 2 && Q[te - 1].equals(Q[0]) && Q.pop();
      }
      function hl(Q, te) {
        for (var ae = 0; ae < te.length; ae++)
          Q.push(te[ae].x), Q.push(te[ae].y);
      }
      function go(Q, te) {
        mn.call(this), this.type = "ExtrudeGeometry", this.parameters = { shapes: Q, options: te }, this.fromBufferGeometry(new Ia(Q, te)), this.mergeVertices();
      }
      function Ia(Q, te) {
        Jr.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = { shapes: Q, options: te };
        for (var ae = this, se = [], ue = [], le = 0, de = (Q = Array.isArray(Q) ? Q : [Q]).length; le < de; le++)
          pe(Q[le]);
        function pe(ve) {
          var we = [], Me = te.curveSegments !== void 0 ? te.curveSegments : 12, Qe = te.steps !== void 0 ? te.steps : 1, Se = te.depth !== void 0 ? te.depth : 100, Ge = te.bevelEnabled === void 0 || te.bevelEnabled, ze = te.bevelThickness !== void 0 ? te.bevelThickness : 6, Ze = te.bevelSize !== void 0 ? te.bevelSize : ze - 2, nt = te.bevelSegments !== void 0 ? te.bevelSegments : 3, ct = te.extrudePath, yt = te.UVGenerator !== void 0 ? te.UVGenerator : Qd;
          te.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), Se = te.amount);
          var st, Mt, Ot, dt, wt, $t, Pt, er, Ht = !1;
          ct && (st = ct.getSpacedPoints(Qe), Ht = !0, Ge = !1, Mt = ct.computeFrenetFrames(Qe, !1), Ot = new mt(), dt = new mt(), wt = new mt()), Ge || (nt = 0, ze = 0, Ze = 0);
          var ir = ve.extractPoints(Me), dr = ir.shape, vr = ir.holes;
          if (!$a.isClockWise(dr))
            for (dr = dr.reverse(), Pt = 0, er = vr.length; Pt < er; Pt++)
              $t = vr[Pt], $a.isClockWise($t) && (vr[Pt] = $t.reverse());
          var pr = $a.triangulateShape(dr, vr), Or = dr;
          for (Pt = 0, er = vr.length; Pt < er; Pt++)
            $t = vr[Pt], dr = dr.concat($t);
          function Mr(kn, Wn, ti) {
            return Wn || console.error("THREE.ExtrudeGeometry: vec does not exist"), Wn.clone().multiplyScalar(ti).add(kn);
          }
          var hr, Cr, lr, Yr, Qr, un, yn = dr.length, ni = pr.length;
          function Bi(kn, Wn, ti) {
            var pi, ai, ki, Oi = kn.x - Wn.x, Pi = kn.y - Wn.y, ca = ti.x - kn.x, Na = ti.y - kn.y, Mo = Oi * Oi + Pi * Pi, Zc = Oi * Na - Pi * ca;
            if (Math.abs(Zc) > Number.EPSILON) {
              var Qa = Math.sqrt(Mo), xc = Math.sqrt(ca * ca + Na * Na), Ec = Wn.x - Pi / Qa, je = Wn.y + Oi / Qa, Bt = ((ti.x - Na / xc - Ec) * Na - (ti.y + ca / xc - je) * ca) / (Oi * Na - Pi * ca), Ct = (pi = Ec + Oi * Bt - kn.x) * pi + (ai = je + Pi * Bt - kn.y) * ai;
              if (Ct <= 2)
                return new wr(pi, ai);
              ki = Math.sqrt(Ct / 2);
            } else {
              var Kt = !1;
              Oi > Number.EPSILON ? ca > Number.EPSILON && (Kt = !0) : Oi < -Number.EPSILON ? ca < -Number.EPSILON && (Kt = !0) : Math.sign(Pi) === Math.sign(Na) && (Kt = !0), Kt ? (pi = -Pi, ai = Oi, ki = Math.sqrt(Mo)) : (pi = Oi, ai = Pi, ki = Math.sqrt(Mo / 2));
            }
            return new wr(pi / ki, ai / ki);
          }
          for (var Kn = [], kr = 0, Fn = Or.length, hi = Fn - 1, ji = kr + 1; kr < Fn; kr++, hi++, ji++)
            hi === Fn && (hi = 0), ji === Fn && (ji = 0), Kn[kr] = Bi(Or[kr], Or[hi], Or[ji]);
          var Ei, Wi, _i = [], wa = Kn.concat();
          for (Pt = 0, er = vr.length; Pt < er; Pt++) {
            for ($t = vr[Pt], Ei = [], kr = 0, hi = (Fn = $t.length) - 1, ji = kr + 1; kr < Fn; kr++, hi++, ji++)
              hi === Fn && (hi = 0), ji === Fn && (ji = 0), Ei[kr] = Bi($t[kr], $t[hi], $t[ji]);
            _i.push(Ei), wa = wa.concat(Ei);
          }
          for (hr = 0; hr < nt; hr++) {
            for (lr = hr / nt, Yr = ze * Math.cos(lr * Math.PI / 2), Cr = Ze * Math.sin(lr * Math.PI / 2), kr = 0, Fn = Or.length; kr < Fn; kr++)
              Qi((Qr = Mr(Or[kr], Kn[kr], Cr)).x, Qr.y, -Yr);
            for (Pt = 0, er = vr.length; Pt < er; Pt++)
              for ($t = vr[Pt], Ei = _i[Pt], kr = 0, Fn = $t.length; kr < Fn; kr++)
                Qi((Qr = Mr($t[kr], Ei[kr], Cr)).x, Qr.y, -Yr);
          }
          for (Cr = Ze, kr = 0; kr < yn; kr++)
            Qr = Ge ? Mr(dr[kr], wa[kr], Cr) : dr[kr], Ht ? (dt.copy(Mt.normals[0]).multiplyScalar(Qr.x), Ot.copy(Mt.binormals[0]).multiplyScalar(Qr.y), wt.copy(st[0]).add(dt).add(Ot), Qi(wt.x, wt.y, wt.z)) : Qi(Qr.x, Qr.y, 0);
          for (Wi = 1; Wi <= Qe; Wi++)
            for (kr = 0; kr < yn; kr++)
              Qr = Ge ? Mr(dr[kr], wa[kr], Cr) : dr[kr], Ht ? (dt.copy(Mt.normals[Wi]).multiplyScalar(Qr.x), Ot.copy(Mt.binormals[Wi]).multiplyScalar(Qr.y), wt.copy(st[Wi]).add(dt).add(Ot), Qi(wt.x, wt.y, wt.z)) : Qi(Qr.x, Qr.y, Se / Qe * Wi);
          for (hr = nt - 1; hr >= 0; hr--) {
            for (lr = hr / nt, Yr = ze * Math.cos(lr * Math.PI / 2), Cr = Ze * Math.sin(lr * Math.PI / 2), kr = 0, Fn = Or.length; kr < Fn; kr++)
              Qi((Qr = Mr(Or[kr], Kn[kr], Cr)).x, Qr.y, Se + Yr);
            for (Pt = 0, er = vr.length; Pt < er; Pt++)
              for ($t = vr[Pt], Ei = _i[Pt], kr = 0, Fn = $t.length; kr < Fn; kr++)
                Qr = Mr($t[kr], Ei[kr], Cr), Ht ? Qi(Qr.x, Qr.y + st[Qe - 1].y, st[Qe - 1].x + Yr) : Qi(Qr.x, Qr.y, Se + Yr);
          }
          function _a(kn, Wn) {
            var ti, pi;
            for (kr = kn.length; --kr >= 0; ) {
              ti = kr, (pi = kr - 1) < 0 && (pi = kn.length - 1);
              var ai = 0, ki = Qe + 2 * nt;
              for (ai = 0; ai < ki; ai++) {
                var Oi = yn * ai, Pi = yn * (ai + 1);
                eo(Wn + ti + Oi, Wn + pi + Oi, Wn + pi + Pi, Wn + ti + Pi);
              }
            }
          }
          function Qi(kn, Wn, ti) {
            we.push(kn), we.push(Wn), we.push(ti);
          }
          function Ci(kn, Wn, ti) {
            $i(kn), $i(Wn), $i(ti);
            var pi = se.length / 3, ai = yt.generateTopUV(ae, se, pi - 3, pi - 2, pi - 1);
            fa(ai[0]), fa(ai[1]), fa(ai[2]);
          }
          function eo(kn, Wn, ti, pi) {
            $i(kn), $i(Wn), $i(pi), $i(Wn), $i(ti), $i(pi);
            var ai = se.length / 3, ki = yt.generateSideWallUV(ae, se, ai - 6, ai - 3, ai - 2, ai - 1);
            fa(ki[0]), fa(ki[1]), fa(ki[3]), fa(ki[1]), fa(ki[2]), fa(ki[3]);
          }
          function $i(kn) {
            se.push(we[3 * kn + 0]), se.push(we[3 * kn + 1]), se.push(we[3 * kn + 2]);
          }
          function fa(kn) {
            ue.push(kn.x), ue.push(kn.y);
          }
          (function() {
            var kn = se.length / 3;
            if (Ge) {
              var Wn = 0, ti = yn * Wn;
              for (kr = 0; kr < ni; kr++)
                Ci((un = pr[kr])[2] + ti, un[1] + ti, un[0] + ti);
              for (ti = yn * (Wn = Qe + 2 * nt), kr = 0; kr < ni; kr++)
                Ci((un = pr[kr])[0] + ti, un[1] + ti, un[2] + ti);
            } else {
              for (kr = 0; kr < ni; kr++)
                Ci((un = pr[kr])[2], un[1], un[0]);
              for (kr = 0; kr < ni; kr++)
                Ci((un = pr[kr])[0] + yn * Qe, un[1] + yn * Qe, un[2] + yn * Qe);
            }
            ae.addGroup(kn, se.length / 3 - kn, 0);
          })(), function() {
            var kn = se.length / 3, Wn = 0;
            for (_a(Or, Wn), Wn += Or.length, Pt = 0, er = vr.length; Pt < er; Pt++)
              _a($t = vr[Pt], Wn), Wn += $t.length;
            ae.addGroup(kn, se.length / 3 - kn, 1);
          }();
        }
        this.addAttribute("position", new Gr(se, 3)), this.addAttribute("uv", new Gr(ue, 2)), this.computeVertexNormals();
      }
      go.prototype = Object.create(mn.prototype), go.prototype.constructor = go, go.prototype.toJSON = function() {
        var Q = mn.prototype.toJSON.call(this);
        return pl(this.parameters.shapes, this.parameters.options, Q);
      }, Ia.prototype = Object.create(Jr.prototype), Ia.prototype.constructor = Ia, Ia.prototype.toJSON = function() {
        var Q = Jr.prototype.toJSON.call(this);
        return pl(this.parameters.shapes, this.parameters.options, Q);
      };
      var Qd = { generateTopUV: function(Q, te, ae, se, ue) {
        var le = te[3 * ae], de = te[3 * ae + 1], pe = te[3 * se], ve = te[3 * se + 1], we = te[3 * ue], Me = te[3 * ue + 1];
        return [new wr(le, de), new wr(pe, ve), new wr(we, Me)];
      }, generateSideWallUV: function(Q, te, ae, se, ue, le) {
        var de = te[3 * ae], pe = te[3 * ae + 1], ve = te[3 * ae + 2], we = te[3 * se], Me = te[3 * se + 1], Qe = te[3 * se + 2], Se = te[3 * ue], Ge = te[3 * ue + 1], ze = te[3 * ue + 2], Ze = te[3 * le], nt = te[3 * le + 1], ct = te[3 * le + 2];
        return Math.abs(pe - Me) < 0.01 ? [new wr(de, 1 - ve), new wr(we, 1 - Qe), new wr(Se, 1 - ze), new wr(Ze, 1 - ct)] : [new wr(pe, 1 - ve), new wr(Me, 1 - Qe), new wr(Ge, 1 - ze), new wr(nt, 1 - ct)];
      } };
      function pl(Q, te, ae) {
        if (ae.shapes = [], Array.isArray(Q))
          for (var se = 0, ue = Q.length; se < ue; se++) {
            var le = Q[se];
            ae.shapes.push(le.uuid);
          }
        else
          ae.shapes.push(Q.uuid);
        return te.extrudePath !== void 0 && (ae.options.extrudePath = te.extrudePath.toJSON()), ae;
      }
      function Zs(Q, te) {
        mn.call(this), this.type = "TextGeometry", this.parameters = { text: Q, parameters: te }, this.fromBufferGeometry(new ts(Q, te)), this.mergeVertices();
      }
      function ts(Q, te) {
        var ae = (te = te || {}).font;
        if (!ae || !ae.isFont)
          return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new mn();
        var se = ae.generateShapes(Q, te.size);
        te.depth = te.height !== void 0 ? te.height : 50, te.bevelThickness === void 0 && (te.bevelThickness = 10), te.bevelSize === void 0 && (te.bevelSize = 8), te.bevelEnabled === void 0 && (te.bevelEnabled = !1), Ia.call(this, se, te), this.type = "TextBufferGeometry";
      }
      function Ks(Q, te, ae, se, ue, le, de) {
        mn.call(this), this.type = "SphereGeometry", this.parameters = { radius: Q, widthSegments: te, heightSegments: ae, phiStart: se, phiLength: ue, thetaStart: le, thetaLength: de }, this.fromBufferGeometry(new mo(Q, te, ae, se, ue, le, de)), this.mergeVertices();
      }
      function mo(Q, te, ae, se, ue, le, de) {
        Jr.call(this), this.type = "SphereBufferGeometry", this.parameters = { radius: Q, widthSegments: te, heightSegments: ae, phiStart: se, phiLength: ue, thetaStart: le, thetaLength: de }, Q = Q || 1, te = Math.max(3, Math.floor(te) || 8), ae = Math.max(2, Math.floor(ae) || 6), se = se !== void 0 ? se : 0, ue = ue !== void 0 ? ue : 2 * Math.PI;
        var pe, ve, we = (le = le !== void 0 ? le : 0) + (de = de !== void 0 ? de : Math.PI), Me = 0, Qe = [], Se = new mt(), Ge = new mt(), ze = [], Ze = [], nt = [], ct = [];
        for (ve = 0; ve <= ae; ve++) {
          var yt = [], st = ve / ae;
          for (pe = 0; pe <= te; pe++) {
            var Mt = pe / te;
            Se.x = -Q * Math.cos(se + Mt * ue) * Math.sin(le + st * de), Se.y = Q * Math.cos(le + st * de), Se.z = Q * Math.sin(se + Mt * ue) * Math.sin(le + st * de), Ze.push(Se.x, Se.y, Se.z), Ge.set(Se.x, Se.y, Se.z).normalize(), nt.push(Ge.x, Ge.y, Ge.z), ct.push(Mt, 1 - st), yt.push(Me++);
          }
          Qe.push(yt);
        }
        for (ve = 0; ve < ae; ve++)
          for (pe = 0; pe < te; pe++) {
            var Ot = Qe[ve][pe + 1], dt = Qe[ve][pe], wt = Qe[ve + 1][pe], $t = Qe[ve + 1][pe + 1];
            (ve !== 0 || le > 0) && ze.push(Ot, dt, $t), (ve !== ae - 1 || we < Math.PI) && ze.push(dt, wt, $t);
          }
        this.setIndex(ze), this.addAttribute("position", new Gr(Ze, 3)), this.addAttribute("normal", new Gr(nt, 3)), this.addAttribute("uv", new Gr(ct, 2));
      }
      function ec(Q, te, ae, se, ue, le) {
        mn.call(this), this.type = "RingGeometry", this.parameters = { innerRadius: Q, outerRadius: te, thetaSegments: ae, phiSegments: se, thetaStart: ue, thetaLength: le }, this.fromBufferGeometry(new rs(Q, te, ae, se, ue, le)), this.mergeVertices();
      }
      function rs(Q, te, ae, se, ue, le) {
        Jr.call(this), this.type = "RingBufferGeometry", this.parameters = { innerRadius: Q, outerRadius: te, thetaSegments: ae, phiSegments: se, thetaStart: ue, thetaLength: le }, Q = Q || 0.5, te = te || 1, ue = ue !== void 0 ? ue : 0, le = le !== void 0 ? le : 2 * Math.PI, ae = ae !== void 0 ? Math.max(3, ae) : 8;
        var de, pe, ve, we = [], Me = [], Qe = [], Se = [], Ge = Q, ze = (te - Q) / (se = se !== void 0 ? Math.max(1, se) : 1), Ze = new mt(), nt = new wr();
        for (pe = 0; pe <= se; pe++) {
          for (ve = 0; ve <= ae; ve++)
            de = ue + ve / ae * le, Ze.x = Ge * Math.cos(de), Ze.y = Ge * Math.sin(de), Me.push(Ze.x, Ze.y, Ze.z), Qe.push(0, 0, 1), nt.x = (Ze.x / te + 1) / 2, nt.y = (Ze.y / te + 1) / 2, Se.push(nt.x, nt.y);
          Ge += ze;
        }
        for (pe = 0; pe < se; pe++) {
          var ct = pe * (ae + 1);
          for (ve = 0; ve < ae; ve++) {
            var yt = de = ve + ct, st = de + ae + 1, Mt = de + ae + 2, Ot = de + 1;
            we.push(yt, st, Ot), we.push(st, Mt, Ot);
          }
        }
        this.setIndex(we), this.addAttribute("position", new Gr(Me, 3)), this.addAttribute("normal", new Gr(Qe, 3)), this.addAttribute("uv", new Gr(Se, 2));
      }
      function tc(Q, te, ae, se) {
        mn.call(this), this.type = "LatheGeometry", this.parameters = { points: Q, segments: te, phiStart: ae, phiLength: se }, this.fromBufferGeometry(new ns(Q, te, ae, se)), this.mergeVertices();
      }
      function ns(Q, te, ae, se) {
        Jr.call(this), this.type = "LatheBufferGeometry", this.parameters = { points: Q, segments: te, phiStart: ae, phiLength: se }, te = Math.floor(te) || 12, ae = ae || 0, se = se || 2 * Math.PI, se = Cn.clamp(se, 0, 2 * Math.PI);
        var ue, le, de, pe = [], ve = [], we = [], Me = 1 / te, Qe = new mt(), Se = new wr();
        for (le = 0; le <= te; le++) {
          var Ge = ae + le * Me * se, ze = Math.sin(Ge), Ze = Math.cos(Ge);
          for (de = 0; de <= Q.length - 1; de++)
            Qe.x = Q[de].x * ze, Qe.y = Q[de].y, Qe.z = Q[de].x * Ze, ve.push(Qe.x, Qe.y, Qe.z), Se.x = le / te, Se.y = de / (Q.length - 1), we.push(Se.x, Se.y);
        }
        for (le = 0; le < te; le++)
          for (de = 0; de < Q.length - 1; de++) {
            var nt = ue = de + le * Q.length, ct = ue + Q.length, yt = ue + Q.length + 1, st = ue + 1;
            pe.push(nt, ct, st), pe.push(ct, yt, st);
          }
        if (this.setIndex(pe), this.addAttribute("position", new Gr(ve, 3)), this.addAttribute("uv", new Gr(we, 2)), this.computeVertexNormals(), se === 2 * Math.PI) {
          var Mt = this.attributes.normal.array, Ot = new mt(), dt = new mt(), wt = new mt();
          for (ue = te * Q.length * 3, le = 0, de = 0; le < Q.length; le++, de += 3)
            Ot.x = Mt[de + 0], Ot.y = Mt[de + 1], Ot.z = Mt[de + 2], dt.x = Mt[ue + de + 0], dt.y = Mt[ue + de + 1], dt.z = Mt[ue + de + 2], wt.addVectors(Ot, dt).normalize(), Mt[de + 0] = Mt[ue + de + 0] = wt.x, Mt[de + 1] = Mt[ue + de + 1] = wt.y, Mt[de + 2] = Mt[ue + de + 2] = wt.z;
        }
      }
      function yo(Q, te) {
        mn.call(this), this.type = "ShapeGeometry", typeof te == "object" && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), te = te.curveSegments), this.parameters = { shapes: Q, curveSegments: te }, this.fromBufferGeometry(new vo(Q, te)), this.mergeVertices();
      }
      function vo(Q, te) {
        Jr.call(this), this.type = "ShapeBufferGeometry", this.parameters = { shapes: Q, curveSegments: te }, te = te || 12;
        var ae = [], se = [], ue = [], le = [], de = 0, pe = 0;
        if (Array.isArray(Q) === !1)
          we(Q);
        else
          for (var ve = 0; ve < Q.length; ve++)
            we(Q[ve]), this.addGroup(de, pe, ve), de += pe, pe = 0;
        function we(Me) {
          var Qe, Se, Ge, ze = se.length / 3, Ze = Me.extractPoints(te), nt = Ze.shape, ct = Ze.holes;
          if ($a.isClockWise(nt) === !1)
            for (nt = nt.reverse(), Qe = 0, Se = ct.length; Qe < Se; Qe++)
              Ge = ct[Qe], $a.isClockWise(Ge) === !0 && (ct[Qe] = Ge.reverse());
          var yt = $a.triangulateShape(nt, ct);
          for (Qe = 0, Se = ct.length; Qe < Se; Qe++)
            Ge = ct[Qe], nt = nt.concat(Ge);
          for (Qe = 0, Se = nt.length; Qe < Se; Qe++) {
            var st = nt[Qe];
            se.push(st.x, st.y, 0), ue.push(0, 0, 1), le.push(st.x, st.y);
          }
          for (Qe = 0, Se = yt.length; Qe < Se; Qe++) {
            var Mt = yt[Qe], Ot = Mt[0] + ze, dt = Mt[1] + ze, wt = Mt[2] + ze;
            ae.push(Ot, dt, wt), pe += 3;
          }
        }
        this.setIndex(ae), this.addAttribute("position", new Gr(se, 3)), this.addAttribute("normal", new Gr(ue, 3)), this.addAttribute("uv", new Gr(le, 2));
      }
      function Al(Q, te) {
        if (te.shapes = [], Array.isArray(Q))
          for (var ae = 0, se = Q.length; ae < se; ae++) {
            var ue = Q[ae];
            te.shapes.push(ue.uuid);
          }
        else
          te.shapes.push(Q.uuid);
        return te;
      }
      function is(Q, te) {
        Jr.call(this), this.type = "EdgesGeometry", this.parameters = { thresholdAngle: te }, te = te !== void 0 ? te : 1;
        var ae, se, ue, le, de = [], pe = Math.cos(Cn.DEG2RAD * te), ve = [0, 0], we = {}, Me = ["a", "b", "c"];
        Q.isBufferGeometry ? (le = new mn()).fromBufferGeometry(Q) : le = Q.clone(), le.mergeVertices(), le.computeFaceNormals();
        for (var Qe = le.vertices, Se = le.faces, Ge = 0, ze = Se.length; Ge < ze; Ge++)
          for (var Ze = Se[Ge], nt = 0; nt < 3; nt++)
            ae = Ze[Me[nt]], se = Ze[Me[(nt + 1) % 3]], ve[0] = Math.min(ae, se), ve[1] = Math.max(ae, se), we[ue = ve[0] + "," + ve[1]] === void 0 ? we[ue] = { index1: ve[0], index2: ve[1], face1: Ge, face2: void 0 } : we[ue].face2 = Ge;
        for (ue in we) {
          var ct = we[ue];
          if (ct.face2 === void 0 || Se[ct.face1].normal.dot(Se[ct.face2].normal) <= pe) {
            var yt = Qe[ct.index1];
            de.push(yt.x, yt.y, yt.z), yt = Qe[ct.index2], de.push(yt.x, yt.y, yt.z);
          }
        }
        this.addAttribute("position", new Gr(de, 3));
      }
      function xo(Q, te, ae, se, ue, le, de, pe) {
        mn.call(this), this.type = "CylinderGeometry", this.parameters = { radiusTop: Q, radiusBottom: te, height: ae, radialSegments: se, heightSegments: ue, openEnded: le, thetaStart: de, thetaLength: pe }, this.fromBufferGeometry(new Va(Q, te, ae, se, ue, le, de, pe)), this.mergeVertices();
      }
      function Va(Q, te, ae, se, ue, le, de, pe) {
        Jr.call(this), this.type = "CylinderBufferGeometry", this.parameters = { radiusTop: Q, radiusBottom: te, height: ae, radialSegments: se, heightSegments: ue, openEnded: le, thetaStart: de, thetaLength: pe };
        var ve = this;
        Q = Q !== void 0 ? Q : 1, te = te !== void 0 ? te : 1, ae = ae || 1, se = Math.floor(se) || 8, ue = Math.floor(ue) || 1, le = le !== void 0 && le, de = de !== void 0 ? de : 0, pe = pe !== void 0 ? pe : 2 * Math.PI;
        var we = [], Me = [], Qe = [], Se = [], Ge = 0, ze = [], Ze = ae / 2, nt = 0;
        function ct(yt) {
          var st, Mt, Ot, dt = new wr(), wt = new mt(), $t = 0, Pt = yt === !0 ? Q : te, er = yt === !0 ? 1 : -1;
          for (Mt = Ge, st = 1; st <= se; st++)
            Me.push(0, Ze * er, 0), Qe.push(0, er, 0), Se.push(0.5, 0.5), Ge++;
          for (Ot = Ge, st = 0; st <= se; st++) {
            var Ht = st / se * pe + de, ir = Math.cos(Ht), dr = Math.sin(Ht);
            wt.x = Pt * dr, wt.y = Ze * er, wt.z = Pt * ir, Me.push(wt.x, wt.y, wt.z), Qe.push(0, er, 0), dt.x = 0.5 * ir + 0.5, dt.y = 0.5 * dr * er + 0.5, Se.push(dt.x, dt.y), Ge++;
          }
          for (st = 0; st < se; st++) {
            var vr = Mt + st, pr = Ot + st;
            yt === !0 ? we.push(pr, pr + 1, vr) : we.push(pr + 1, pr, vr), $t += 3;
          }
          ve.addGroup(nt, $t, yt === !0 ? 1 : 2), nt += $t;
        }
        (function() {
          var yt, st, Mt = new mt(), Ot = new mt(), dt = 0, wt = (te - Q) / ae;
          for (st = 0; st <= ue; st++) {
            var $t = [], Pt = st / ue, er = Pt * (te - Q) + Q;
            for (yt = 0; yt <= se; yt++) {
              var Ht = yt / se, ir = Ht * pe + de, dr = Math.sin(ir), vr = Math.cos(ir);
              Ot.x = er * dr, Ot.y = -Pt * ae + Ze, Ot.z = er * vr, Me.push(Ot.x, Ot.y, Ot.z), Mt.set(dr, wt, vr).normalize(), Qe.push(Mt.x, Mt.y, Mt.z), Se.push(Ht, 1 - Pt), $t.push(Ge++);
            }
            ze.push($t);
          }
          for (yt = 0; yt < se; yt++)
            for (st = 0; st < ue; st++) {
              var pr = ze[st][yt], Or = ze[st + 1][yt], Mr = ze[st + 1][yt + 1], hr = ze[st][yt + 1];
              we.push(pr, Or, hr), we.push(Or, Mr, hr), dt += 6;
            }
          ve.addGroup(nt, dt, 0), nt += dt;
        })(), le === !1 && (Q > 0 && ct(!0), te > 0 && ct(!1)), this.setIndex(we), this.addAttribute("position", new Gr(Me, 3)), this.addAttribute("normal", new Gr(Qe, 3)), this.addAttribute("uv", new Gr(Se, 2));
      }
      function rc(Q, te, ae, se, ue, le, de) {
        xo.call(this, 0, Q, te, ae, se, ue, le, de), this.type = "ConeGeometry", this.parameters = { radius: Q, height: te, radialSegments: ae, heightSegments: se, openEnded: ue, thetaStart: le, thetaLength: de };
      }
      function nc(Q, te, ae, se, ue, le, de) {
        Va.call(this, 0, Q, te, ae, se, ue, le, de), this.type = "ConeBufferGeometry", this.parameters = { radius: Q, height: te, radialSegments: ae, heightSegments: se, openEnded: ue, thetaStart: le, thetaLength: de };
      }
      function ac(Q, te, ae, se) {
        mn.call(this), this.type = "CircleGeometry", this.parameters = { radius: Q, segments: te, thetaStart: ae, thetaLength: se }, this.fromBufferGeometry(new as(Q, te, ae, se)), this.mergeVertices();
      }
      function as(Q, te, ae, se) {
        Jr.call(this), this.type = "CircleBufferGeometry", this.parameters = { radius: Q, segments: te, thetaStart: ae, thetaLength: se }, Q = Q || 1, te = te !== void 0 ? Math.max(3, te) : 8, ae = ae !== void 0 ? ae : 0, se = se !== void 0 ? se : 2 * Math.PI;
        var ue, le, de = [], pe = [], ve = [], we = [], Me = new mt(), Qe = new wr();
        for (pe.push(0, 0, 0), ve.push(0, 0, 1), we.push(0.5, 0.5), le = 0, ue = 3; le <= te; le++, ue += 3) {
          var Se = ae + le / te * se;
          Me.x = Q * Math.cos(Se), Me.y = Q * Math.sin(Se), pe.push(Me.x, Me.y, Me.z), ve.push(0, 0, 1), Qe.x = (pe[ue] / Q + 1) / 2, Qe.y = (pe[ue + 1] / Q + 1) / 2, we.push(Qe.x, Qe.y);
        }
        for (ue = 1; ue <= te; ue++)
          de.push(ue, ue + 1, 0);
        this.setIndex(de), this.addAttribute("position", new Gr(pe, 3)), this.addAttribute("normal", new Gr(ve, 3)), this.addAttribute("uv", new Gr(we, 2));
      }
      Zs.prototype = Object.create(mn.prototype), Zs.prototype.constructor = Zs, ts.prototype = Object.create(Ia.prototype), ts.prototype.constructor = ts, Ks.prototype = Object.create(mn.prototype), Ks.prototype.constructor = Ks, mo.prototype = Object.create(Jr.prototype), mo.prototype.constructor = mo, ec.prototype = Object.create(mn.prototype), ec.prototype.constructor = ec, rs.prototype = Object.create(Jr.prototype), rs.prototype.constructor = rs, tc.prototype = Object.create(mn.prototype), tc.prototype.constructor = tc, ns.prototype = Object.create(Jr.prototype), ns.prototype.constructor = ns, yo.prototype = Object.create(mn.prototype), yo.prototype.constructor = yo, yo.prototype.toJSON = function() {
        var Q = mn.prototype.toJSON.call(this);
        return Al(this.parameters.shapes, Q);
      }, vo.prototype = Object.create(Jr.prototype), vo.prototype.constructor = vo, vo.prototype.toJSON = function() {
        var Q = Jr.prototype.toJSON.call(this);
        return Al(this.parameters.shapes, Q);
      }, is.prototype = Object.create(Jr.prototype), is.prototype.constructor = is, xo.prototype = Object.create(mn.prototype), xo.prototype.constructor = xo, Va.prototype = Object.create(Jr.prototype), Va.prototype.constructor = Va, rc.prototype = Object.create(xo.prototype), rc.prototype.constructor = rc, nc.prototype = Object.create(Va.prototype), nc.prototype.constructor = nc, ac.prototype = Object.create(mn.prototype), ac.prototype.constructor = ac, as.prototype = Object.create(Jr.prototype), as.prototype.constructor = as;
      var ea = Object.freeze({ WireframeGeometry: Lo, ParametricGeometry: Us, ParametricBufferGeometry: Yo, TetrahedronGeometry: qs, TetrahedronBufferGeometry: Wo, OctahedronGeometry: js, OctahedronBufferGeometry: po, IcosahedronGeometry: $s, IcosahedronBufferGeometry: Jo, DodecahedronGeometry: Vs, DodecahedronBufferGeometry: Xo, PolyhedronGeometry: Hs, PolyhedronBufferGeometry: Ki, TubeGeometry: Ds, TubeBufferGeometry: Zo, TorusKnotGeometry: zs, TorusKnotBufferGeometry: Ko, TorusGeometry: Ls, TorusBufferGeometry: es, TextGeometry: Zs, TextBufferGeometry: ts, SphereGeometry: Ks, SphereBufferGeometry: mo, RingGeometry: ec, RingBufferGeometry: rs, PlaneGeometry: Rs, PlaneBufferGeometry: lo, LatheGeometry: tc, LatheBufferGeometry: ns, ShapeGeometry: yo, ShapeBufferGeometry: vo, ExtrudeGeometry: go, ExtrudeBufferGeometry: Ia, EdgesGeometry: is, ConeGeometry: rc, ConeBufferGeometry: nc, CylinderGeometry: xo, CylinderBufferGeometry: Va, CircleGeometry: ac, CircleBufferGeometry: as, BoxGeometry: Uo, BoxBufferGeometry: uo });
      function Eo(Q) {
        In.call(this), this.type = "ShadowMaterial", this.color = new sn(0), this.transparent = !0, this.setValues(Q);
      }
      function os(Q) {
        la.call(this, Q), this.type = "RawShaderMaterial";
      }
      function Ta(Q) {
        In.call(this), this.defines = { STANDARD: "" }, this.type = "MeshStandardMaterial", this.color = new sn(16777215), this.roughness = 0.5, this.metalness = 0.5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new sn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ga, this.normalScale = new wr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Q);
      }
      function bo(Q) {
        Ta.call(this), this.defines = { PHYSICAL: "" }, this.type = "MeshPhysicalMaterial", this.reflectivity = 0.5, this.clearCoat = 0, this.clearCoatRoughness = 0, this.setValues(Q);
      }
      function ma(Q) {
        In.call(this), this.type = "MeshPhongMaterial", this.color = new sn(16777215), this.specular = new sn(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new sn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ga, this.normalScale = new wr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Q);
      }
      function Bo(Q) {
        ma.call(this), this.defines = { TOON: "" }, this.type = "MeshToonMaterial", this.gradientMap = null, this.setValues(Q);
      }
      function wo(Q) {
        In.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ga, this.normalScale = new wr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Q);
      }
      function _o(Q) {
        In.call(this), this.type = "MeshLambertMaterial", this.color = new sn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new sn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Q);
      }
      function Co(Q) {
        ei.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(Q);
      }
      Eo.prototype = Object.create(In.prototype), Eo.prototype.constructor = Eo, Eo.prototype.isShadowMaterial = !0, Eo.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.color.copy(Q.color), this;
      }, os.prototype = Object.create(la.prototype), os.prototype.constructor = os, os.prototype.isRawShaderMaterial = !0, Ta.prototype = Object.create(In.prototype), Ta.prototype.constructor = Ta, Ta.prototype.isMeshStandardMaterial = !0, Ta.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.defines = { STANDARD: "" }, this.color.copy(Q.color), this.roughness = Q.roughness, this.metalness = Q.metalness, this.map = Q.map, this.lightMap = Q.lightMap, this.lightMapIntensity = Q.lightMapIntensity, this.aoMap = Q.aoMap, this.aoMapIntensity = Q.aoMapIntensity, this.emissive.copy(Q.emissive), this.emissiveMap = Q.emissiveMap, this.emissiveIntensity = Q.emissiveIntensity, this.bumpMap = Q.bumpMap, this.bumpScale = Q.bumpScale, this.normalMap = Q.normalMap, this.normalMapType = Q.normalMapType, this.normalScale.copy(Q.normalScale), this.displacementMap = Q.displacementMap, this.displacementScale = Q.displacementScale, this.displacementBias = Q.displacementBias, this.roughnessMap = Q.roughnessMap, this.metalnessMap = Q.metalnessMap, this.alphaMap = Q.alphaMap, this.envMap = Q.envMap, this.envMapIntensity = Q.envMapIntensity, this.refractionRatio = Q.refractionRatio, this.wireframe = Q.wireframe, this.wireframeLinewidth = Q.wireframeLinewidth, this.wireframeLinecap = Q.wireframeLinecap, this.wireframeLinejoin = Q.wireframeLinejoin, this.skinning = Q.skinning, this.morphTargets = Q.morphTargets, this.morphNormals = Q.morphNormals, this;
      }, bo.prototype = Object.create(Ta.prototype), bo.prototype.constructor = bo, bo.prototype.isMeshPhysicalMaterial = !0, bo.prototype.copy = function(Q) {
        return Ta.prototype.copy.call(this, Q), this.defines = { PHYSICAL: "" }, this.reflectivity = Q.reflectivity, this.clearCoat = Q.clearCoat, this.clearCoatRoughness = Q.clearCoatRoughness, this;
      }, ma.prototype = Object.create(In.prototype), ma.prototype.constructor = ma, ma.prototype.isMeshPhongMaterial = !0, ma.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.color.copy(Q.color), this.specular.copy(Q.specular), this.shininess = Q.shininess, this.map = Q.map, this.lightMap = Q.lightMap, this.lightMapIntensity = Q.lightMapIntensity, this.aoMap = Q.aoMap, this.aoMapIntensity = Q.aoMapIntensity, this.emissive.copy(Q.emissive), this.emissiveMap = Q.emissiveMap, this.emissiveIntensity = Q.emissiveIntensity, this.bumpMap = Q.bumpMap, this.bumpScale = Q.bumpScale, this.normalMap = Q.normalMap, this.normalMapType = Q.normalMapType, this.normalScale.copy(Q.normalScale), this.displacementMap = Q.displacementMap, this.displacementScale = Q.displacementScale, this.displacementBias = Q.displacementBias, this.specularMap = Q.specularMap, this.alphaMap = Q.alphaMap, this.envMap = Q.envMap, this.combine = Q.combine, this.reflectivity = Q.reflectivity, this.refractionRatio = Q.refractionRatio, this.wireframe = Q.wireframe, this.wireframeLinewidth = Q.wireframeLinewidth, this.wireframeLinecap = Q.wireframeLinecap, this.wireframeLinejoin = Q.wireframeLinejoin, this.skinning = Q.skinning, this.morphTargets = Q.morphTargets, this.morphNormals = Q.morphNormals, this;
      }, Bo.prototype = Object.create(ma.prototype), Bo.prototype.constructor = Bo, Bo.prototype.isMeshToonMaterial = !0, Bo.prototype.copy = function(Q) {
        return ma.prototype.copy.call(this, Q), this.gradientMap = Q.gradientMap, this;
      }, wo.prototype = Object.create(In.prototype), wo.prototype.constructor = wo, wo.prototype.isMeshNormalMaterial = !0, wo.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.bumpMap = Q.bumpMap, this.bumpScale = Q.bumpScale, this.normalMap = Q.normalMap, this.normalMapType = Q.normalMapType, this.normalScale.copy(Q.normalScale), this.displacementMap = Q.displacementMap, this.displacementScale = Q.displacementScale, this.displacementBias = Q.displacementBias, this.wireframe = Q.wireframe, this.wireframeLinewidth = Q.wireframeLinewidth, this.skinning = Q.skinning, this.morphTargets = Q.morphTargets, this.morphNormals = Q.morphNormals, this;
      }, _o.prototype = Object.create(In.prototype), _o.prototype.constructor = _o, _o.prototype.isMeshLambertMaterial = !0, _o.prototype.copy = function(Q) {
        return In.prototype.copy.call(this, Q), this.color.copy(Q.color), this.map = Q.map, this.lightMap = Q.lightMap, this.lightMapIntensity = Q.lightMapIntensity, this.aoMap = Q.aoMap, this.aoMapIntensity = Q.aoMapIntensity, this.emissive.copy(Q.emissive), this.emissiveMap = Q.emissiveMap, this.emissiveIntensity = Q.emissiveIntensity, this.specularMap = Q.specularMap, this.alphaMap = Q.alphaMap, this.envMap = Q.envMap, this.combine = Q.combine, this.reflectivity = Q.reflectivity, this.refractionRatio = Q.refractionRatio, this.wireframe = Q.wireframe, this.wireframeLinewidth = Q.wireframeLinewidth, this.wireframeLinecap = Q.wireframeLinecap, this.wireframeLinejoin = Q.wireframeLinejoin, this.skinning = Q.skinning, this.morphTargets = Q.morphTargets, this.morphNormals = Q.morphNormals, this;
      }, Co.prototype = Object.create(ei.prototype), Co.prototype.constructor = Co, Co.prototype.isLineDashedMaterial = !0, Co.prototype.copy = function(Q) {
        return ei.prototype.copy.call(this, Q), this.scale = Q.scale, this.dashSize = Q.dashSize, this.gapSize = Q.gapSize, this;
      };
      var kd = Object.freeze({ ShadowMaterial: Eo, SpriteMaterial: Za, RawShaderMaterial: os, ShaderMaterial: la, PointsMaterial: ga, MeshPhysicalMaterial: bo, MeshStandardMaterial: Ta, MeshPhongMaterial: ma, MeshToonMaterial: Bo, MeshNormalMaterial: wo, MeshLambertMaterial: _o, MeshDepthMaterial: Ja, MeshDistanceMaterial: Xa, MeshBasicMaterial: ia, LineDashedMaterial: Co, LineBasicMaterial: ei, Material: In }), So = { enabled: !1, files: {}, add: function(Q, te) {
        this.enabled !== !1 && (this.files[Q] = te);
      }, get: function(Q) {
        if (this.enabled !== !1)
          return this.files[Q];
      }, remove: function(Q) {
        delete this.files[Q];
      }, clear: function() {
        this.files = {};
      } };
      function cu(Q, te, ae) {
        var se = this, ue = !1, le = 0, de = 0, pe = void 0;
        this.onStart = void 0, this.onLoad = Q, this.onProgress = te, this.onError = ae, this.itemStart = function(ve) {
          de++, ue === !1 && se.onStart !== void 0 && se.onStart(ve, le, de), ue = !0;
        }, this.itemEnd = function(ve) {
          le++, se.onProgress !== void 0 && se.onProgress(ve, le, de), le === de && (ue = !1, se.onLoad !== void 0 && se.onLoad());
        }, this.itemError = function(ve) {
          se.onError !== void 0 && se.onError(ve);
        }, this.resolveURL = function(ve) {
          return pe ? pe(ve) : ve;
        }, this.setURLModifier = function(ve) {
          return pe = ve, this;
        };
      }
      var ta = new cu(), Da = {};
      function ya(Q) {
        this.manager = Q !== void 0 ? Q : ta;
      }
      function gl(Q) {
        this.manager = Q !== void 0 ? Q : ta, this._parser = null;
      }
      function uu(Q) {
        this.manager = Q !== void 0 ? Q : ta, this._parser = null;
      }
      function oc(Q) {
        this.manager = Q !== void 0 ? Q : ta;
      }
      function lu(Q) {
        this.manager = Q !== void 0 ? Q : ta;
      }
      function Nc(Q) {
        this.manager = Q !== void 0 ? Q : ta;
      }
      function dn() {
        this.type = "Curve", this.arcLengthDivisions = 200;
      }
      function oa(Q, te, ae, se, ue, le, de, pe) {
        dn.call(this), this.type = "EllipseCurve", this.aX = Q || 0, this.aY = te || 0, this.xRadius = ae || 1, this.yRadius = se || 1, this.aStartAngle = ue || 0, this.aEndAngle = le || 2 * Math.PI, this.aClockwise = de || !1, this.aRotation = pe || 0;
      }
      function ss(Q, te, ae, se, ue, le) {
        oa.call(this, Q, te, ae, ae, se, ue, le), this.type = "ArcCurve";
      }
      function du() {
        var Q = 0, te = 0, ae = 0, se = 0;
        function ue(le, de, pe, ve) {
          Q = le, te = pe, ae = -3 * le + 3 * de - 2 * pe - ve, se = 2 * le - 2 * de + pe + ve;
        }
        return { initCatmullRom: function(le, de, pe, ve, we) {
          ue(de, pe, we * (pe - le), we * (ve - de));
        }, initNonuniformCatmullRom: function(le, de, pe, ve, we, Me, Qe) {
          var Se = (de - le) / we - (pe - le) / (we + Me) + (pe - de) / Me, Ge = (pe - de) / Me - (ve - de) / (Me + Qe) + (ve - pe) / Qe;
          ue(de, pe, Se *= Me, Ge *= Me);
        }, calc: function(le) {
          var de = le * le;
          return Q + te * le + ae * de + se * (de * le);
        } };
      }
      Object.assign(ya.prototype, { load: function(Q, te, ae, se) {
        Q === void 0 && (Q = ""), this.path !== void 0 && (Q = this.path + Q), Q = this.manager.resolveURL(Q);
        var ue = this, le = So.get(Q);
        if (le !== void 0)
          return ue.manager.itemStart(Q), setTimeout(function() {
            te && te(le), ue.manager.itemEnd(Q);
          }, 0), le;
        if (Da[Q] === void 0) {
          var de = Q.match(/^data:(.*?)(;base64)?,(.*)$/);
          if (de) {
            var pe = de[1], ve = !!de[2], we = de[3];
            we = window.decodeURIComponent(we), ve && (we = window.atob(we));
            try {
              var Me, Qe = (this.responseType || "").toLowerCase();
              switch (Qe) {
                case "arraybuffer":
                case "blob":
                  for (var Se = new Uint8Array(we.length), Ge = 0; Ge < we.length; Ge++)
                    Se[Ge] = we.charCodeAt(Ge);
                  Me = Qe === "blob" ? new Blob([Se.buffer], { type: pe }) : Se.buffer;
                  break;
                case "document":
                  var ze = new DOMParser();
                  Me = ze.parseFromString(we, pe);
                  break;
                case "json":
                  Me = JSON.parse(we);
                  break;
                default:
                  Me = we;
              }
              window.setTimeout(function() {
                te && te(Me), ue.manager.itemEnd(Q);
              }, 0);
            } catch (ct) {
              window.setTimeout(function() {
                se && se(ct), ue.manager.itemEnd(Q), ue.manager.itemError(Q);
              }, 0);
            }
          } else {
            Da[Q] = [], Da[Q].push({ onLoad: te, onProgress: ae, onError: se });
            var Ze = new XMLHttpRequest();
            for (var nt in Ze.open("GET", Q, !0), Ze.addEventListener("load", function(ct) {
              var yt = this.response;
              So.add(Q, yt);
              var st = Da[Q];
              if (delete Da[Q], this.status === 200 || this.status === 0) {
                this.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received.");
                for (var Mt = 0, Ot = st.length; Mt < Ot; Mt++)
                  (dt = st[Mt]).onLoad && dt.onLoad(yt);
                ue.manager.itemEnd(Q);
              } else {
                for (Mt = 0, Ot = st.length; Mt < Ot; Mt++) {
                  var dt;
                  (dt = st[Mt]).onError && dt.onError(ct);
                }
                ue.manager.itemEnd(Q), ue.manager.itemError(Q);
              }
            }, !1), Ze.addEventListener("progress", function(ct) {
              for (var yt = Da[Q], st = 0, Mt = yt.length; st < Mt; st++) {
                var Ot = yt[st];
                Ot.onProgress && Ot.onProgress(ct);
              }
            }, !1), Ze.addEventListener("error", function(ct) {
              var yt = Da[Q];
              delete Da[Q];
              for (var st = 0, Mt = yt.length; st < Mt; st++) {
                var Ot = yt[st];
                Ot.onError && Ot.onError(ct);
              }
              ue.manager.itemEnd(Q), ue.manager.itemError(Q);
            }, !1), this.responseType !== void 0 && (Ze.responseType = this.responseType), this.withCredentials !== void 0 && (Ze.withCredentials = this.withCredentials), Ze.overrideMimeType && Ze.overrideMimeType(this.mimeType !== void 0 ? this.mimeType : "text/plain"), this.requestHeader)
              Ze.setRequestHeader(nt, this.requestHeader[nt]);
            Ze.send(null);
          }
          return ue.manager.itemStart(Q), Ze;
        }
        Da[Q].push({ onLoad: te, onProgress: ae, onError: se });
      }, setPath: function(Q) {
        return this.path = Q, this;
      }, setResponseType: function(Q) {
        return this.responseType = Q, this;
      }, setWithCredentials: function(Q) {
        return this.withCredentials = Q, this;
      }, setMimeType: function(Q) {
        return this.mimeType = Q, this;
      }, setRequestHeader: function(Q) {
        return this.requestHeader = Q, this;
      } }), Object.assign(gl.prototype, { load: function(Q, te, ae, se) {
        var ue = this, le = [], de = new zo();
        de.image = le;
        var pe = new ya(this.manager);
        function ve(Se) {
          pe.load(Q[Se], function(Ge) {
            var ze = ue._parser(Ge, !0);
            le[Se] = { width: ze.width, height: ze.height, format: ze.format, mipmaps: ze.mipmaps }, (we += 1) === 6 && (ze.mipmapCount === 1 && (de.minFilter = an), de.format = ze.format, de.needsUpdate = !0, te && te(de));
          }, ae, se);
        }
        if (pe.setPath(this.path), pe.setResponseType("arraybuffer"), Array.isArray(Q))
          for (var we = 0, Me = 0, Qe = Q.length; Me < Qe; ++Me)
            ve(Me);
        else
          pe.load(Q, function(Se) {
            var Ge = ue._parser(Se, !0);
            if (Ge.isCubemap)
              for (var ze = Ge.mipmaps.length / Ge.mipmapCount, Ze = 0; Ze < ze; Ze++) {
                le[Ze] = { mipmaps: [] };
                for (var nt = 0; nt < Ge.mipmapCount; nt++)
                  le[Ze].mipmaps.push(Ge.mipmaps[Ze * Ge.mipmapCount + nt]), le[Ze].format = Ge.format, le[Ze].width = Ge.width, le[Ze].height = Ge.height;
              }
            else
              de.image.width = Ge.width, de.image.height = Ge.height, de.mipmaps = Ge.mipmaps;
            Ge.mipmapCount === 1 && (de.minFilter = an), de.format = Ge.format, de.needsUpdate = !0, te && te(de);
          }, ae, se);
        return de;
      }, setPath: function(Q) {
        return this.path = Q, this;
      } }), Object.assign(uu.prototype, { load: function(Q, te, ae, se) {
        var ue = this, le = new io(), de = new ya(this.manager);
        return de.setResponseType("arraybuffer"), de.load(Q, function(pe) {
          var ve = ue._parser(pe);
          ve && (ve.image !== void 0 ? le.image = ve.image : ve.data !== void 0 && (le.image.width = ve.width, le.image.height = ve.height, le.image.data = ve.data), le.wrapS = ve.wrapS !== void 0 ? ve.wrapS : br, le.wrapT = ve.wrapT !== void 0 ? ve.wrapT : br, le.magFilter = ve.magFilter !== void 0 ? ve.magFilter : an, le.minFilter = ve.minFilter !== void 0 ? ve.minFilter : $n, le.anisotropy = ve.anisotropy !== void 0 ? ve.anisotropy : 1, ve.format !== void 0 && (le.format = ve.format), ve.type !== void 0 && (le.type = ve.type), ve.mipmaps !== void 0 && (le.mipmaps = ve.mipmaps), ve.mipmapCount === 1 && (le.minFilter = an), le.needsUpdate = !0, te && te(le, ve));
        }, ae, se), le;
      } }), Object.assign(oc.prototype, { crossOrigin: "anonymous", load: function(Q, te, ae, se) {
        Q === void 0 && (Q = ""), this.path !== void 0 && (Q = this.path + Q), Q = this.manager.resolveURL(Q);
        var ue = this, le = So.get(Q);
        if (le !== void 0)
          return ue.manager.itemStart(Q), setTimeout(function() {
            te && te(le), ue.manager.itemEnd(Q);
          }, 0), le;
        var de = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
        function pe() {
          de.removeEventListener("load", pe, !1), de.removeEventListener("error", ve, !1), So.add(Q, this), te && te(this), ue.manager.itemEnd(Q);
        }
        function ve(we) {
          de.removeEventListener("load", pe, !1), de.removeEventListener("error", ve, !1), se && se(we), ue.manager.itemEnd(Q), ue.manager.itemError(Q);
        }
        return de.addEventListener("load", pe, !1), de.addEventListener("error", ve, !1), Q.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (de.crossOrigin = this.crossOrigin), ue.manager.itemStart(Q), de.src = Q, de;
      }, setCrossOrigin: function(Q) {
        return this.crossOrigin = Q, this;
      }, setPath: function(Q) {
        return this.path = Q, this;
      } }), Object.assign(lu.prototype, { crossOrigin: "anonymous", load: function(Q, te, ae, se) {
        var ue = new ja(), le = new oc(this.manager);
        le.setCrossOrigin(this.crossOrigin), le.setPath(this.path);
        var de = 0;
        function pe(we) {
          le.load(Q[we], function(Me) {
            ue.images[we] = Me, ++de === 6 && (ue.needsUpdate = !0, te && te(ue));
          }, void 0, se);
        }
        for (var ve = 0; ve < Q.length; ++ve)
          pe(ve);
        return ue;
      }, setCrossOrigin: function(Q) {
        return this.crossOrigin = Q, this;
      }, setPath: function(Q) {
        return this.path = Q, this;
      } }), Object.assign(Nc.prototype, { crossOrigin: "anonymous", load: function(Q, te, ae, se) {
        var ue = new ii(), le = new oc(this.manager);
        return le.setCrossOrigin(this.crossOrigin), le.setPath(this.path), le.load(Q, function(de) {
          ue.image = de;
          var pe = Q.search(/\.(jpg|jpeg)$/) > 0 || Q.search(/^data\:image\/jpeg/) === 0;
          ue.format = pe ? Rt : tr, ue.needsUpdate = !0, te !== void 0 && te(ue);
        }, ae, se), ue;
      }, setCrossOrigin: function(Q) {
        return this.crossOrigin = Q, this;
      }, setPath: function(Q) {
        return this.path = Q, this;
      } }), Object.assign(dn.prototype, { getPoint: function() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
      }, getPointAt: function(Q, te) {
        var ae = this.getUtoTmapping(Q);
        return this.getPoint(ae, te);
      }, getPoints: function(Q) {
        Q === void 0 && (Q = 5);
        for (var te = [], ae = 0; ae <= Q; ae++)
          te.push(this.getPoint(ae / Q));
        return te;
      }, getSpacedPoints: function(Q) {
        Q === void 0 && (Q = 5);
        for (var te = [], ae = 0; ae <= Q; ae++)
          te.push(this.getPointAt(ae / Q));
        return te;
      }, getLength: function() {
        var Q = this.getLengths();
        return Q[Q.length - 1];
      }, getLengths: function(Q) {
        if (Q === void 0 && (Q = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === Q + 1 && !this.needsUpdate)
          return this.cacheArcLengths;
        this.needsUpdate = !1;
        var te, ae, se = [], ue = this.getPoint(0), le = 0;
        for (se.push(0), ae = 1; ae <= Q; ae++)
          le += (te = this.getPoint(ae / Q)).distanceTo(ue), se.push(le), ue = te;
        return this.cacheArcLengths = se, se;
      }, updateArcLengths: function() {
        this.needsUpdate = !0, this.getLengths();
      }, getUtoTmapping: function(Q, te) {
        var ae, se = this.getLengths(), ue = 0, le = se.length;
        ae = te || Q * se[le - 1];
        for (var de, pe = 0, ve = le - 1; pe <= ve; )
          if ((de = se[ue = Math.floor(pe + (ve - pe) / 2)] - ae) < 0)
            pe = ue + 1;
          else {
            if (!(de > 0)) {
              ve = ue;
              break;
            }
            ve = ue - 1;
          }
        if (se[ue = ve] === ae)
          return ue / (le - 1);
        var we = se[ue];
        return (ue + (ae - we) / (se[ue + 1] - we)) / (le - 1);
      }, getTangent: function(Q) {
        var te = Q - 1e-4, ae = Q + 1e-4;
        te < 0 && (te = 0), ae > 1 && (ae = 1);
        var se = this.getPoint(te);
        return this.getPoint(ae).clone().sub(se).normalize();
      }, getTangentAt: function(Q) {
        var te = this.getUtoTmapping(Q);
        return this.getTangent(te);
      }, computeFrenetFrames: function(Q, te) {
        var ae, se, ue, le = new mt(), de = [], pe = [], ve = [], we = new mt(), Me = new An();
        for (ae = 0; ae <= Q; ae++)
          se = ae / Q, de[ae] = this.getTangentAt(se), de[ae].normalize();
        pe[0] = new mt(), ve[0] = new mt();
        var Qe = Number.MAX_VALUE, Se = Math.abs(de[0].x), Ge = Math.abs(de[0].y), ze = Math.abs(de[0].z);
        for (Se <= Qe && (Qe = Se, le.set(1, 0, 0)), Ge <= Qe && (Qe = Ge, le.set(0, 1, 0)), ze <= Qe && le.set(0, 0, 1), we.crossVectors(de[0], le).normalize(), pe[0].crossVectors(de[0], we), ve[0].crossVectors(de[0], pe[0]), ae = 1; ae <= Q; ae++)
          pe[ae] = pe[ae - 1].clone(), ve[ae] = ve[ae - 1].clone(), we.crossVectors(de[ae - 1], de[ae]), we.length() > Number.EPSILON && (we.normalize(), ue = Math.acos(Cn.clamp(de[ae - 1].dot(de[ae]), -1, 1)), pe[ae].applyMatrix4(Me.makeRotationAxis(we, ue))), ve[ae].crossVectors(de[ae], pe[ae]);
        if (te === !0)
          for (ue = Math.acos(Cn.clamp(pe[0].dot(pe[Q]), -1, 1)), ue /= Q, de[0].dot(we.crossVectors(pe[0], pe[Q])) > 0 && (ue = -ue), ae = 1; ae <= Q; ae++)
            pe[ae].applyMatrix4(Me.makeRotationAxis(de[ae], ue * ae)), ve[ae].crossVectors(de[ae], pe[ae]);
        return { tangents: de, normals: pe, binormals: ve };
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.arcLengthDivisions = Q.arcLengthDivisions, this;
      }, toJSON: function() {
        var Q = { metadata: { version: 4.5, type: "Curve", generator: "Curve.toJSON" } };
        return Q.arcLengthDivisions = this.arcLengthDivisions, Q.type = this.type, Q;
      }, fromJSON: function(Q) {
        return this.arcLengthDivisions = Q.arcLengthDivisions, this;
      } }), oa.prototype = Object.create(dn.prototype), oa.prototype.constructor = oa, oa.prototype.isEllipseCurve = !0, oa.prototype.getPoint = function(Q, te) {
        for (var ae = te || new wr(), se = 2 * Math.PI, ue = this.aEndAngle - this.aStartAngle, le = Math.abs(ue) < Number.EPSILON; ue < 0; )
          ue += se;
        for (; ue > se; )
          ue -= se;
        ue < Number.EPSILON && (ue = le ? 0 : se), this.aClockwise !== !0 || le || (ue === se ? ue = -se : ue -= se);
        var de = this.aStartAngle + Q * ue, pe = this.aX + this.xRadius * Math.cos(de), ve = this.aY + this.yRadius * Math.sin(de);
        if (this.aRotation !== 0) {
          var we = Math.cos(this.aRotation), Me = Math.sin(this.aRotation), Qe = pe - this.aX, Se = ve - this.aY;
          pe = Qe * we - Se * Me + this.aX, ve = Qe * Me + Se * we + this.aY;
        }
        return ae.set(pe, ve);
      }, oa.prototype.copy = function(Q) {
        return dn.prototype.copy.call(this, Q), this.aX = Q.aX, this.aY = Q.aY, this.xRadius = Q.xRadius, this.yRadius = Q.yRadius, this.aStartAngle = Q.aStartAngle, this.aEndAngle = Q.aEndAngle, this.aClockwise = Q.aClockwise, this.aRotation = Q.aRotation, this;
      }, oa.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        return Q.aX = this.aX, Q.aY = this.aY, Q.xRadius = this.xRadius, Q.yRadius = this.yRadius, Q.aStartAngle = this.aStartAngle, Q.aEndAngle = this.aEndAngle, Q.aClockwise = this.aClockwise, Q.aRotation = this.aRotation, Q;
      }, oa.prototype.fromJSON = function(Q) {
        return dn.prototype.fromJSON.call(this, Q), this.aX = Q.aX, this.aY = Q.aY, this.xRadius = Q.xRadius, this.yRadius = Q.yRadius, this.aStartAngle = Q.aStartAngle, this.aEndAngle = Q.aEndAngle, this.aClockwise = Q.aClockwise, this.aRotation = Q.aRotation, this;
      }, ss.prototype = Object.create(oa.prototype), ss.prototype.constructor = ss, ss.prototype.isArcCurve = !0;
      var Qc = new mt(), fu = new du(), hu = new du(), pu = new du();
      function Ui(Q, te, ae, se) {
        dn.call(this), this.type = "CatmullRomCurve3", this.points = Q || [], this.closed = te || !1, this.curveType = ae || "centripetal", this.tension = se || 0.5;
      }
      function ml(Q, te, ae, se, ue) {
        var le = 0.5 * (se - te), de = 0.5 * (ue - ae), pe = Q * Q;
        return (2 * ae - 2 * se + le + de) * (Q * pe) + (-3 * ae + 3 * se - 2 * le - de) * pe + le * Q + ae;
      }
      function sc(Q, te, ae, se) {
        return function(ue, le) {
          var de = 1 - ue;
          return de * de * le;
        }(Q, te) + function(ue, le) {
          return 2 * (1 - ue) * ue * le;
        }(Q, ae) + function(ue, le) {
          return ue * ue * le;
        }(Q, se);
      }
      function cc(Q, te, ae, se, ue) {
        return function(le, de) {
          var pe = 1 - le;
          return pe * pe * pe * de;
        }(Q, te) + function(le, de) {
          var pe = 1 - le;
          return 3 * pe * pe * le * de;
        }(Q, ae) + function(le, de) {
          return 3 * (1 - le) * le * le * de;
        }(Q, se) + function(le, de) {
          return le * le * le * de;
        }(Q, ue);
      }
      function va(Q, te, ae, se) {
        dn.call(this), this.type = "CubicBezierCurve", this.v0 = Q || new wr(), this.v1 = te || new wr(), this.v2 = ae || new wr(), this.v3 = se || new wr();
      }
      function Ra(Q, te, ae, se) {
        dn.call(this), this.type = "CubicBezierCurve3", this.v0 = Q || new mt(), this.v1 = te || new mt(), this.v2 = ae || new mt(), this.v3 = se || new mt();
      }
      function ra(Q, te) {
        dn.call(this), this.type = "LineCurve", this.v1 = Q || new wr(), this.v2 = te || new wr();
      }
      function xa(Q, te) {
        dn.call(this), this.type = "LineCurve3", this.v1 = Q || new mt(), this.v2 = te || new mt();
      }
      function Ea(Q, te, ae) {
        dn.call(this), this.type = "QuadraticBezierCurve", this.v0 = Q || new wr(), this.v1 = te || new wr(), this.v2 = ae || new wr();
      }
      function Ma(Q, te, ae) {
        dn.call(this), this.type = "QuadraticBezierCurve3", this.v0 = Q || new mt(), this.v1 = te || new mt(), this.v2 = ae || new mt();
      }
      function ba(Q) {
        dn.call(this), this.type = "SplineCurve", this.points = Q || [];
      }
      Ui.prototype = Object.create(dn.prototype), Ui.prototype.constructor = Ui, Ui.prototype.isCatmullRomCurve3 = !0, Ui.prototype.getPoint = function(Q, te) {
        var ae, se, ue, le, de = te || new mt(), pe = this.points, ve = pe.length, we = (ve - (this.closed ? 0 : 1)) * Q, Me = Math.floor(we), Qe = we - Me;
        if (this.closed ? Me += Me > 0 ? 0 : (Math.floor(Math.abs(Me) / ve) + 1) * ve : Qe === 0 && Me === ve - 1 && (Me = ve - 2, Qe = 1), this.closed || Me > 0 ? ae = pe[(Me - 1) % ve] : (Qc.subVectors(pe[0], pe[1]).add(pe[0]), ae = Qc), se = pe[Me % ve], ue = pe[(Me + 1) % ve], this.closed || Me + 2 < ve ? le = pe[(Me + 2) % ve] : (Qc.subVectors(pe[ve - 1], pe[ve - 2]).add(pe[ve - 1]), le = Qc), this.curveType === "centripetal" || this.curveType === "chordal") {
          var Se = this.curveType === "chordal" ? 0.5 : 0.25, Ge = Math.pow(ae.distanceToSquared(se), Se), ze = Math.pow(se.distanceToSquared(ue), Se), Ze = Math.pow(ue.distanceToSquared(le), Se);
          ze < 1e-4 && (ze = 1), Ge < 1e-4 && (Ge = ze), Ze < 1e-4 && (Ze = ze), fu.initNonuniformCatmullRom(ae.x, se.x, ue.x, le.x, Ge, ze, Ze), hu.initNonuniformCatmullRom(ae.y, se.y, ue.y, le.y, Ge, ze, Ze), pu.initNonuniformCatmullRom(ae.z, se.z, ue.z, le.z, Ge, ze, Ze);
        } else
          this.curveType === "catmullrom" && (fu.initCatmullRom(ae.x, se.x, ue.x, le.x, this.tension), hu.initCatmullRom(ae.y, se.y, ue.y, le.y, this.tension), pu.initCatmullRom(ae.z, se.z, ue.z, le.z, this.tension));
        return de.set(fu.calc(Qe), hu.calc(Qe), pu.calc(Qe)), de;
      }, Ui.prototype.copy = function(Q) {
        dn.prototype.copy.call(this, Q), this.points = [];
        for (var te = 0, ae = Q.points.length; te < ae; te++) {
          var se = Q.points[te];
          this.points.push(se.clone());
        }
        return this.closed = Q.closed, this.curveType = Q.curveType, this.tension = Q.tension, this;
      }, Ui.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        Q.points = [];
        for (var te = 0, ae = this.points.length; te < ae; te++) {
          var se = this.points[te];
          Q.points.push(se.toArray());
        }
        return Q.closed = this.closed, Q.curveType = this.curveType, Q.tension = this.tension, Q;
      }, Ui.prototype.fromJSON = function(Q) {
        dn.prototype.fromJSON.call(this, Q), this.points = [];
        for (var te = 0, ae = Q.points.length; te < ae; te++) {
          var se = Q.points[te];
          this.points.push(new mt().fromArray(se));
        }
        return this.closed = Q.closed, this.curveType = Q.curveType, this.tension = Q.tension, this;
      }, va.prototype = Object.create(dn.prototype), va.prototype.constructor = va, va.prototype.isCubicBezierCurve = !0, va.prototype.getPoint = function(Q, te) {
        var ae = te || new wr(), se = this.v0, ue = this.v1, le = this.v2, de = this.v3;
        return ae.set(cc(Q, se.x, ue.x, le.x, de.x), cc(Q, se.y, ue.y, le.y, de.y)), ae;
      }, va.prototype.copy = function(Q) {
        return dn.prototype.copy.call(this, Q), this.v0.copy(Q.v0), this.v1.copy(Q.v1), this.v2.copy(Q.v2), this.v3.copy(Q.v3), this;
      }, va.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        return Q.v0 = this.v0.toArray(), Q.v1 = this.v1.toArray(), Q.v2 = this.v2.toArray(), Q.v3 = this.v3.toArray(), Q;
      }, va.prototype.fromJSON = function(Q) {
        return dn.prototype.fromJSON.call(this, Q), this.v0.fromArray(Q.v0), this.v1.fromArray(Q.v1), this.v2.fromArray(Q.v2), this.v3.fromArray(Q.v3), this;
      }, Ra.prototype = Object.create(dn.prototype), Ra.prototype.constructor = Ra, Ra.prototype.isCubicBezierCurve3 = !0, Ra.prototype.getPoint = function(Q, te) {
        var ae = te || new mt(), se = this.v0, ue = this.v1, le = this.v2, de = this.v3;
        return ae.set(cc(Q, se.x, ue.x, le.x, de.x), cc(Q, se.y, ue.y, le.y, de.y), cc(Q, se.z, ue.z, le.z, de.z)), ae;
      }, Ra.prototype.copy = function(Q) {
        return dn.prototype.copy.call(this, Q), this.v0.copy(Q.v0), this.v1.copy(Q.v1), this.v2.copy(Q.v2), this.v3.copy(Q.v3), this;
      }, Ra.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        return Q.v0 = this.v0.toArray(), Q.v1 = this.v1.toArray(), Q.v2 = this.v2.toArray(), Q.v3 = this.v3.toArray(), Q;
      }, Ra.prototype.fromJSON = function(Q) {
        return dn.prototype.fromJSON.call(this, Q), this.v0.fromArray(Q.v0), this.v1.fromArray(Q.v1), this.v2.fromArray(Q.v2), this.v3.fromArray(Q.v3), this;
      }, ra.prototype = Object.create(dn.prototype), ra.prototype.constructor = ra, ra.prototype.isLineCurve = !0, ra.prototype.getPoint = function(Q, te) {
        var ae = te || new wr();
        return Q === 1 ? ae.copy(this.v2) : (ae.copy(this.v2).sub(this.v1), ae.multiplyScalar(Q).add(this.v1)), ae;
      }, ra.prototype.getPointAt = function(Q, te) {
        return this.getPoint(Q, te);
      }, ra.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize();
      }, ra.prototype.copy = function(Q) {
        return dn.prototype.copy.call(this, Q), this.v1.copy(Q.v1), this.v2.copy(Q.v2), this;
      }, ra.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        return Q.v1 = this.v1.toArray(), Q.v2 = this.v2.toArray(), Q;
      }, ra.prototype.fromJSON = function(Q) {
        return dn.prototype.fromJSON.call(this, Q), this.v1.fromArray(Q.v1), this.v2.fromArray(Q.v2), this;
      }, xa.prototype = Object.create(dn.prototype), xa.prototype.constructor = xa, xa.prototype.isLineCurve3 = !0, xa.prototype.getPoint = function(Q, te) {
        var ae = te || new mt();
        return Q === 1 ? ae.copy(this.v2) : (ae.copy(this.v2).sub(this.v1), ae.multiplyScalar(Q).add(this.v1)), ae;
      }, xa.prototype.getPointAt = function(Q, te) {
        return this.getPoint(Q, te);
      }, xa.prototype.copy = function(Q) {
        return dn.prototype.copy.call(this, Q), this.v1.copy(Q.v1), this.v2.copy(Q.v2), this;
      }, xa.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        return Q.v1 = this.v1.toArray(), Q.v2 = this.v2.toArray(), Q;
      }, xa.prototype.fromJSON = function(Q) {
        return dn.prototype.fromJSON.call(this, Q), this.v1.fromArray(Q.v1), this.v2.fromArray(Q.v2), this;
      }, Ea.prototype = Object.create(dn.prototype), Ea.prototype.constructor = Ea, Ea.prototype.isQuadraticBezierCurve = !0, Ea.prototype.getPoint = function(Q, te) {
        var ae = te || new wr(), se = this.v0, ue = this.v1, le = this.v2;
        return ae.set(sc(Q, se.x, ue.x, le.x), sc(Q, se.y, ue.y, le.y)), ae;
      }, Ea.prototype.copy = function(Q) {
        return dn.prototype.copy.call(this, Q), this.v0.copy(Q.v0), this.v1.copy(Q.v1), this.v2.copy(Q.v2), this;
      }, Ea.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        return Q.v0 = this.v0.toArray(), Q.v1 = this.v1.toArray(), Q.v2 = this.v2.toArray(), Q;
      }, Ea.prototype.fromJSON = function(Q) {
        return dn.prototype.fromJSON.call(this, Q), this.v0.fromArray(Q.v0), this.v1.fromArray(Q.v1), this.v2.fromArray(Q.v2), this;
      }, Ma.prototype = Object.create(dn.prototype), Ma.prototype.constructor = Ma, Ma.prototype.isQuadraticBezierCurve3 = !0, Ma.prototype.getPoint = function(Q, te) {
        var ae = te || new mt(), se = this.v0, ue = this.v1, le = this.v2;
        return ae.set(sc(Q, se.x, ue.x, le.x), sc(Q, se.y, ue.y, le.y), sc(Q, se.z, ue.z, le.z)), ae;
      }, Ma.prototype.copy = function(Q) {
        return dn.prototype.copy.call(this, Q), this.v0.copy(Q.v0), this.v1.copy(Q.v1), this.v2.copy(Q.v2), this;
      }, Ma.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        return Q.v0 = this.v0.toArray(), Q.v1 = this.v1.toArray(), Q.v2 = this.v2.toArray(), Q;
      }, Ma.prototype.fromJSON = function(Q) {
        return dn.prototype.fromJSON.call(this, Q), this.v0.fromArray(Q.v0), this.v1.fromArray(Q.v1), this.v2.fromArray(Q.v2), this;
      }, ba.prototype = Object.create(dn.prototype), ba.prototype.constructor = ba, ba.prototype.isSplineCurve = !0, ba.prototype.getPoint = function(Q, te) {
        var ae = te || new wr(), se = this.points, ue = (se.length - 1) * Q, le = Math.floor(ue), de = ue - le, pe = se[le === 0 ? le : le - 1], ve = se[le], we = se[le > se.length - 2 ? se.length - 1 : le + 1], Me = se[le > se.length - 3 ? se.length - 1 : le + 2];
        return ae.set(ml(de, pe.x, ve.x, we.x, Me.x), ml(de, pe.y, ve.y, we.y, Me.y)), ae;
      }, ba.prototype.copy = function(Q) {
        dn.prototype.copy.call(this, Q), this.points = [];
        for (var te = 0, ae = Q.points.length; te < ae; te++) {
          var se = Q.points[te];
          this.points.push(se.clone());
        }
        return this;
      }, ba.prototype.toJSON = function() {
        var Q = dn.prototype.toJSON.call(this);
        Q.points = [];
        for (var te = 0, ae = this.points.length; te < ae; te++) {
          var se = this.points[te];
          Q.points.push(se.toArray());
        }
        return Q;
      }, ba.prototype.fromJSON = function(Q) {
        dn.prototype.fromJSON.call(this, Q), this.points = [];
        for (var te = 0, ae = Q.points.length; te < ae; te++) {
          var se = Q.points[te];
          this.points.push(new wr().fromArray(se));
        }
        return this;
      };
      var yl = Object.freeze({ ArcCurve: ss, CatmullRomCurve3: Ui, CubicBezierCurve: va, CubicBezierCurve3: Ra, EllipseCurve: oa, LineCurve: ra, LineCurve3: xa, QuadraticBezierCurve: Ea, QuadraticBezierCurve3: Ma, SplineCurve: ba });
      function za() {
        dn.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = !1;
      }
      function Ba(Q) {
        za.call(this), this.type = "Path", this.currentPoint = new wr(), Q && this.setFromPoints(Q);
      }
      function Ka(Q) {
        Ba.call(this, Q), this.uuid = Cn.generateUUID(), this.type = "Shape", this.holes = [];
      }
      function li(Q, te) {
        jr.call(this), this.type = "Light", this.color = new sn(Q), this.intensity = te !== void 0 ? te : 1, this.receiveShadow = void 0;
      }
      function kc(Q, te, ae) {
        li.call(this, Q, ae), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(jr.DefaultUp), this.updateMatrix(), this.groundColor = new sn(te);
      }
      function Io(Q) {
        this.camera = Q, this.bias = 0, this.radius = 1, this.mapSize = new wr(512, 512), this.map = null, this.matrix = new An();
      }
      function Oc() {
        Io.call(this, new fi(50, 1, 0.5, 500));
      }
      function Pc(Q, te, ae, se, ue, le) {
        li.call(this, Q, te), this.type = "SpotLight", this.position.copy(jr.DefaultUp), this.updateMatrix(), this.target = new jr(), Object.defineProperty(this, "power", { get: function() {
          return this.intensity * Math.PI;
        }, set: function(de) {
          this.intensity = de / Math.PI;
        } }), this.distance = ae !== void 0 ? ae : 0, this.angle = se !== void 0 ? se : Math.PI / 3, this.penumbra = ue !== void 0 ? ue : 0, this.decay = le !== void 0 ? le : 1, this.shadow = new Oc();
      }
      function Fc(Q, te, ae, se) {
        li.call(this, Q, te), this.type = "PointLight", Object.defineProperty(this, "power", { get: function() {
          return 4 * this.intensity * Math.PI;
        }, set: function(ue) {
          this.intensity = ue / (4 * Math.PI);
        } }), this.distance = ae !== void 0 ? ae : 0, this.decay = se !== void 0 ? se : 1, this.shadow = new Io(new fi(90, 1, 0.5, 500));
      }
      function Gc() {
        Io.call(this, new Go(-5, 5, 5, -5, 0.5, 500));
      }
      function Uc(Q, te) {
        li.call(this, Q, te), this.type = "DirectionalLight", this.position.copy(jr.DefaultUp), this.updateMatrix(), this.target = new jr(), this.shadow = new Gc();
      }
      function Hc(Q, te) {
        li.call(this, Q, te), this.type = "AmbientLight", this.castShadow = void 0;
      }
      function qc(Q, te, ae, se) {
        li.call(this, Q, te), this.type = "RectAreaLight", this.width = ae !== void 0 ? ae : 10, this.height = se !== void 0 ? se : 10;
      }
      za.prototype = Object.assign(Object.create(dn.prototype), { constructor: za, add: function(Q) {
        this.curves.push(Q);
      }, closePath: function() {
        var Q = this.curves[0].getPoint(0), te = this.curves[this.curves.length - 1].getPoint(1);
        Q.equals(te) || this.curves.push(new ra(te, Q));
      }, getPoint: function(Q) {
        for (var te = Q * this.getLength(), ae = this.getCurveLengths(), se = 0; se < ae.length; ) {
          if (ae[se] >= te) {
            var ue = ae[se] - te, le = this.curves[se], de = le.getLength(), pe = de === 0 ? 0 : 1 - ue / de;
            return le.getPointAt(pe);
          }
          se++;
        }
        return null;
      }, getLength: function() {
        var Q = this.getCurveLengths();
        return Q[Q.length - 1];
      }, updateArcLengths: function() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
      }, getCurveLengths: function() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
          return this.cacheLengths;
        for (var Q = [], te = 0, ae = 0, se = this.curves.length; ae < se; ae++)
          te += this.curves[ae].getLength(), Q.push(te);
        return this.cacheLengths = Q, Q;
      }, getSpacedPoints: function(Q) {
        Q === void 0 && (Q = 40);
        for (var te = [], ae = 0; ae <= Q; ae++)
          te.push(this.getPoint(ae / Q));
        return this.autoClose && te.push(te[0]), te;
      }, getPoints: function(Q) {
        Q = Q || 12;
        for (var te, ae = [], se = 0, ue = this.curves; se < ue.length; se++)
          for (var le = ue[se], de = le && le.isEllipseCurve ? 2 * Q : le && (le.isLineCurve || le.isLineCurve3) ? 1 : le && le.isSplineCurve ? Q * le.points.length : Q, pe = le.getPoints(de), ve = 0; ve < pe.length; ve++) {
            var we = pe[ve];
            te && te.equals(we) || (ae.push(we), te = we);
          }
        return this.autoClose && ae.length > 1 && !ae[ae.length - 1].equals(ae[0]) && ae.push(ae[0]), ae;
      }, copy: function(Q) {
        dn.prototype.copy.call(this, Q), this.curves = [];
        for (var te = 0, ae = Q.curves.length; te < ae; te++) {
          var se = Q.curves[te];
          this.curves.push(se.clone());
        }
        return this.autoClose = Q.autoClose, this;
      }, toJSON: function() {
        var Q = dn.prototype.toJSON.call(this);
        Q.autoClose = this.autoClose, Q.curves = [];
        for (var te = 0, ae = this.curves.length; te < ae; te++) {
          var se = this.curves[te];
          Q.curves.push(se.toJSON());
        }
        return Q;
      }, fromJSON: function(Q) {
        dn.prototype.fromJSON.call(this, Q), this.autoClose = Q.autoClose, this.curves = [];
        for (var te = 0, ae = Q.curves.length; te < ae; te++) {
          var se = Q.curves[te];
          this.curves.push(new yl[se.type]().fromJSON(se));
        }
        return this;
      } }), Ba.prototype = Object.assign(Object.create(za.prototype), { constructor: Ba, setFromPoints: function(Q) {
        this.moveTo(Q[0].x, Q[0].y);
        for (var te = 1, ae = Q.length; te < ae; te++)
          this.lineTo(Q[te].x, Q[te].y);
      }, moveTo: function(Q, te) {
        this.currentPoint.set(Q, te);
      }, lineTo: function(Q, te) {
        var ae = new ra(this.currentPoint.clone(), new wr(Q, te));
        this.curves.push(ae), this.currentPoint.set(Q, te);
      }, quadraticCurveTo: function(Q, te, ae, se) {
        var ue = new Ea(this.currentPoint.clone(), new wr(Q, te), new wr(ae, se));
        this.curves.push(ue), this.currentPoint.set(ae, se);
      }, bezierCurveTo: function(Q, te, ae, se, ue, le) {
        var de = new va(this.currentPoint.clone(), new wr(Q, te), new wr(ae, se), new wr(ue, le));
        this.curves.push(de), this.currentPoint.set(ue, le);
      }, splineThru: function(Q) {
        var te = new ba([this.currentPoint.clone()].concat(Q));
        this.curves.push(te), this.currentPoint.copy(Q[Q.length - 1]);
      }, arc: function(Q, te, ae, se, ue, le) {
        var de = this.currentPoint.x, pe = this.currentPoint.y;
        this.absarc(Q + de, te + pe, ae, se, ue, le);
      }, absarc: function(Q, te, ae, se, ue, le) {
        this.absellipse(Q, te, ae, ae, se, ue, le);
      }, ellipse: function(Q, te, ae, se, ue, le, de, pe) {
        var ve = this.currentPoint.x, we = this.currentPoint.y;
        this.absellipse(Q + ve, te + we, ae, se, ue, le, de, pe);
      }, absellipse: function(Q, te, ae, se, ue, le, de, pe) {
        var ve = new oa(Q, te, ae, se, ue, le, de, pe);
        if (this.curves.length > 0) {
          var we = ve.getPoint(0);
          we.equals(this.currentPoint) || this.lineTo(we.x, we.y);
        }
        this.curves.push(ve);
        var Me = ve.getPoint(1);
        this.currentPoint.copy(Me);
      }, copy: function(Q) {
        return za.prototype.copy.call(this, Q), this.currentPoint.copy(Q.currentPoint), this;
      }, toJSON: function() {
        var Q = za.prototype.toJSON.call(this);
        return Q.currentPoint = this.currentPoint.toArray(), Q;
      }, fromJSON: function(Q) {
        return za.prototype.fromJSON.call(this, Q), this.currentPoint.fromArray(Q.currentPoint), this;
      } }), Ka.prototype = Object.assign(Object.create(Ba.prototype), { constructor: Ka, getPointsHoles: function(Q) {
        for (var te = [], ae = 0, se = this.holes.length; ae < se; ae++)
          te[ae] = this.holes[ae].getPoints(Q);
        return te;
      }, extractPoints: function(Q) {
        return { shape: this.getPoints(Q), holes: this.getPointsHoles(Q) };
      }, copy: function(Q) {
        Ba.prototype.copy.call(this, Q), this.holes = [];
        for (var te = 0, ae = Q.holes.length; te < ae; te++) {
          var se = Q.holes[te];
          this.holes.push(se.clone());
        }
        return this;
      }, toJSON: function() {
        var Q = Ba.prototype.toJSON.call(this);
        Q.uuid = this.uuid, Q.holes = [];
        for (var te = 0, ae = this.holes.length; te < ae; te++) {
          var se = this.holes[te];
          Q.holes.push(se.toJSON());
        }
        return Q;
      }, fromJSON: function(Q) {
        Ba.prototype.fromJSON.call(this, Q), this.uuid = Q.uuid, this.holes = [];
        for (var te = 0, ae = Q.holes.length; te < ae; te++) {
          var se = Q.holes[te];
          this.holes.push(new Ba().fromJSON(se));
        }
        return this;
      } }), li.prototype = Object.assign(Object.create(jr.prototype), { constructor: li, isLight: !0, copy: function(Q) {
        return jr.prototype.copy.call(this, Q), this.color.copy(Q.color), this.intensity = Q.intensity, this;
      }, toJSON: function(Q) {
        var te = jr.prototype.toJSON.call(this, Q);
        return te.object.color = this.color.getHex(), te.object.intensity = this.intensity, this.groundColor !== void 0 && (te.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (te.object.distance = this.distance), this.angle !== void 0 && (te.object.angle = this.angle), this.decay !== void 0 && (te.object.decay = this.decay), this.penumbra !== void 0 && (te.object.penumbra = this.penumbra), this.shadow !== void 0 && (te.object.shadow = this.shadow.toJSON()), te;
      } }), kc.prototype = Object.assign(Object.create(li.prototype), { constructor: kc, isHemisphereLight: !0, copy: function(Q) {
        return li.prototype.copy.call(this, Q), this.groundColor.copy(Q.groundColor), this;
      } }), Object.assign(Io.prototype, { copy: function(Q) {
        return this.camera = Q.camera.clone(), this.bias = Q.bias, this.radius = Q.radius, this.mapSize.copy(Q.mapSize), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, toJSON: function() {
        var Q = {};
        return this.bias !== 0 && (Q.bias = this.bias), this.radius !== 1 && (Q.radius = this.radius), this.mapSize.x === 512 && this.mapSize.y === 512 || (Q.mapSize = this.mapSize.toArray()), Q.camera = this.camera.toJSON(!1).object, delete Q.camera.matrix, Q;
      } }), Oc.prototype = Object.assign(Object.create(Io.prototype), { constructor: Oc, isSpotLightShadow: !0, update: function(Q) {
        var te = this.camera, ae = 2 * Cn.RAD2DEG * Q.angle, se = this.mapSize.width / this.mapSize.height, ue = Q.distance || te.far;
        ae === te.fov && se === te.aspect && ue === te.far || (te.fov = ae, te.aspect = se, te.far = ue, te.updateProjectionMatrix());
      } }), Pc.prototype = Object.assign(Object.create(li.prototype), { constructor: Pc, isSpotLight: !0, copy: function(Q) {
        return li.prototype.copy.call(this, Q), this.distance = Q.distance, this.angle = Q.angle, this.penumbra = Q.penumbra, this.decay = Q.decay, this.target = Q.target.clone(), this.shadow = Q.shadow.clone(), this;
      } }), Fc.prototype = Object.assign(Object.create(li.prototype), { constructor: Fc, isPointLight: !0, copy: function(Q) {
        return li.prototype.copy.call(this, Q), this.distance = Q.distance, this.decay = Q.decay, this.shadow = Q.shadow.clone(), this;
      } }), Gc.prototype = Object.assign(Object.create(Io.prototype), { constructor: Gc }), Uc.prototype = Object.assign(Object.create(li.prototype), { constructor: Uc, isDirectionalLight: !0, copy: function(Q) {
        return li.prototype.copy.call(this, Q), this.target = Q.target.clone(), this.shadow = Q.shadow.clone(), this;
      } }), Hc.prototype = Object.assign(Object.create(li.prototype), { constructor: Hc, isAmbientLight: !0 }), qc.prototype = Object.assign(Object.create(li.prototype), { constructor: qc, isRectAreaLight: !0, copy: function(Q) {
        return li.prototype.copy.call(this, Q), this.width = Q.width, this.height = Q.height, this;
      }, toJSON: function(Q) {
        var te = li.prototype.toJSON.call(this, Q);
        return te.object.width = this.width, te.object.height = this.height, te;
      } });
      var Hi = { arraySlice: function(Q, te, ae) {
        return Hi.isTypedArray(Q) ? new Q.constructor(Q.subarray(te, ae !== void 0 ? ae : Q.length)) : Q.slice(te, ae);
      }, convertArray: function(Q, te, ae) {
        return !Q || !ae && Q.constructor === te ? Q : typeof te.BYTES_PER_ELEMENT == "number" ? new te(Q) : Array.prototype.slice.call(Q);
      }, isTypedArray: function(Q) {
        return ArrayBuffer.isView(Q) && !(Q instanceof DataView);
      }, getKeyframeOrder: function(Q) {
        for (var te = Q.length, ae = new Array(te), se = 0; se !== te; ++se)
          ae[se] = se;
        return ae.sort(function(ue, le) {
          return Q[ue] - Q[le];
        }), ae;
      }, sortedArray: function(Q, te, ae) {
        for (var se = Q.length, ue = new Q.constructor(se), le = 0, de = 0; de !== se; ++le)
          for (var pe = ae[le] * te, ve = 0; ve !== te; ++ve)
            ue[de++] = Q[pe + ve];
        return ue;
      }, flattenJSON: function(Q, te, ae, se) {
        for (var ue = 1, le = Q[0]; le !== void 0 && le[se] === void 0; )
          le = Q[ue++];
        if (le !== void 0) {
          var de = le[se];
          if (de !== void 0)
            if (Array.isArray(de))
              do
                (de = le[se]) !== void 0 && (te.push(le.time), ae.push.apply(ae, de)), le = Q[ue++];
              while (le !== void 0);
            else if (de.toArray !== void 0)
              do
                (de = le[se]) !== void 0 && (te.push(le.time), de.toArray(ae, ae.length)), le = Q[ue++];
              while (le !== void 0);
            else
              do
                (de = le[se]) !== void 0 && (te.push(le.time), ae.push(de)), le = Q[ue++];
              while (le !== void 0);
        }
      } };
      function sa(Q, te, ae, se) {
        this.parameterPositions = Q, this._cachedIndex = 0, this.resultBuffer = se !== void 0 ? se : new te.constructor(ae), this.sampleValues = te, this.valueSize = ae;
      }
      function jc(Q, te, ae, se) {
        sa.call(this, Q, te, ae, se), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0;
      }
      function uc(Q, te, ae, se) {
        sa.call(this, Q, te, ae, se);
      }
      function $c(Q, te, ae, se) {
        sa.call(this, Q, te, ae, se);
      }
      function Ni(Q, te, ae, se) {
        if (Q === void 0)
          throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (te === void 0 || te.length === 0)
          throw new Error("THREE.KeyframeTrack: no keyframes in track named " + Q);
        this.name = Q, this.times = Hi.convertArray(te, this.TimeBufferType), this.values = Hi.convertArray(ae, this.ValueBufferType), this.setInterpolation(se || this.DefaultInterpolation);
      }
      function Vc(Q, te, ae) {
        Ni.call(this, Q, te, ae);
      }
      function Dc(Q, te, ae, se) {
        Ni.call(this, Q, te, ae, se);
      }
      function cs(Q, te, ae, se) {
        Ni.call(this, Q, te, ae, se);
      }
      function zc(Q, te, ae, se) {
        sa.call(this, Q, te, ae, se);
      }
      function lc(Q, te, ae, se) {
        Ni.call(this, Q, te, ae, se);
      }
      function Lc(Q, te, ae, se) {
        Ni.call(this, Q, te, ae, se);
      }
      function us(Q, te, ae, se) {
        Ni.call(this, Q, te, ae, se);
      }
      function da(Q, te, ae) {
        this.name = Q, this.tracks = ae, this.duration = te !== void 0 ? te : -1, this.uuid = Cn.generateUUID(), this.duration < 0 && this.resetDuration();
      }
      function Od(Q) {
        if (Q.type === void 0)
          throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var te = function(ue) {
          switch (ue.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return cs;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return us;
            case "color":
              return Dc;
            case "quaternion":
              return lc;
            case "bool":
            case "boolean":
              return Vc;
            case "string":
              return Lc;
          }
          throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + ue);
        }(Q.type);
        if (Q.times === void 0) {
          var ae = [], se = [];
          Hi.flattenJSON(Q.keys, ae, se, "value"), Q.times = ae, Q.values = se;
        }
        return te.parse !== void 0 ? te.parse(Q) : new te(Q.name, Q.times, Q.values, Q.interpolation);
      }
      function Yc(Q) {
        this.manager = Q !== void 0 ? Q : ta, this.textures = {};
      }
      function Au(Q) {
        this.manager = Q !== void 0 ? Q : ta;
      }
      Object.assign(sa.prototype, { evaluate: function(Q) {
        var te = this.parameterPositions, ae = this._cachedIndex, se = te[ae], ue = te[ae - 1];
        e: {
          t: {
            var le;
            r: {
              n:
                if (!(Q < se)) {
                  for (var de = ae + 2; ; ) {
                    if (se === void 0) {
                      if (Q < ue)
                        break n;
                      return ae = te.length, this._cachedIndex = ae, this.afterEnd_(ae - 1, Q, ue);
                    }
                    if (ae === de)
                      break;
                    if (ue = se, Q < (se = te[++ae]))
                      break t;
                  }
                  le = te.length;
                  break r;
                }
              if (Q >= ue)
                break e;
              var pe = te[1];
              for (Q < pe && (ae = 2, ue = pe), de = ae - 2; ; ) {
                if (ue === void 0)
                  return this._cachedIndex = 0, this.beforeStart_(0, Q, se);
                if (ae === de)
                  break;
                if (se = ue, Q >= (ue = te[--ae - 1]))
                  break t;
              }
              le = ae, ae = 0;
            }
            for (; ae < le; ) {
              var ve = ae + le >>> 1;
              Q < te[ve] ? le = ve : ae = ve + 1;
            }
            if (se = te[ae], (ue = te[ae - 1]) === void 0)
              return this._cachedIndex = 0, this.beforeStart_(0, Q, se);
            if (se === void 0)
              return ae = te.length, this._cachedIndex = ae, this.afterEnd_(ae - 1, ue, Q);
          }
          this._cachedIndex = ae, this.intervalChanged_(ae, ue, se);
        }
        return this.interpolate_(ae, ue, Q, se);
      }, settings: null, DefaultSettings_: {}, getSettings_: function() {
        return this.settings || this.DefaultSettings_;
      }, copySampleValue_: function(Q) {
        for (var te = this.resultBuffer, ae = this.sampleValues, se = this.valueSize, ue = Q * se, le = 0; le !== se; ++le)
          te[le] = ae[ue + le];
        return te;
      }, interpolate_: function() {
        throw new Error("call to abstract method");
      }, intervalChanged_: function() {
      } }), Object.assign(sa.prototype, { beforeStart_: sa.prototype.copySampleValue_, afterEnd_: sa.prototype.copySampleValue_ }), jc.prototype = Object.assign(Object.create(sa.prototype), { constructor: jc, DefaultSettings_: { endingStart: Kr, endingEnd: Kr }, intervalChanged_: function(Q, te, ae) {
        var se = this.parameterPositions, ue = Q - 2, le = Q + 1, de = se[ue], pe = se[le];
        if (de === void 0)
          switch (this.getSettings_().endingStart) {
            case Mn:
              ue = Q, de = 2 * te - ae;
              break;
            case Yn:
              de = te + se[ue = se.length - 2] - se[ue + 1];
              break;
            default:
              ue = Q, de = ae;
          }
        if (pe === void 0)
          switch (this.getSettings_().endingEnd) {
            case Mn:
              le = Q, pe = 2 * ae - te;
              break;
            case Yn:
              le = 1, pe = ae + se[1] - se[0];
              break;
            default:
              le = Q - 1, pe = te;
          }
        var ve = 0.5 * (ae - te), we = this.valueSize;
        this._weightPrev = ve / (te - de), this._weightNext = ve / (pe - ae), this._offsetPrev = ue * we, this._offsetNext = le * we;
      }, interpolate_: function(Q, te, ae, se) {
        for (var ue = this.resultBuffer, le = this.sampleValues, de = this.valueSize, pe = Q * de, ve = pe - de, we = this._offsetPrev, Me = this._offsetNext, Qe = this._weightPrev, Se = this._weightNext, Ge = (ae - te) / (se - te), ze = Ge * Ge, Ze = ze * Ge, nt = -Qe * Ze + 2 * Qe * ze - Qe * Ge, ct = (1 + Qe) * Ze + (-1.5 - 2 * Qe) * ze + (-0.5 + Qe) * Ge + 1, yt = (-1 - Se) * Ze + (1.5 + Se) * ze + 0.5 * Ge, st = Se * Ze - Se * ze, Mt = 0; Mt !== de; ++Mt)
          ue[Mt] = nt * le[we + Mt] + ct * le[ve + Mt] + yt * le[pe + Mt] + st * le[Me + Mt];
        return ue;
      } }), uc.prototype = Object.assign(Object.create(sa.prototype), { constructor: uc, interpolate_: function(Q, te, ae, se) {
        for (var ue = this.resultBuffer, le = this.sampleValues, de = this.valueSize, pe = Q * de, ve = pe - de, we = (ae - te) / (se - te), Me = 1 - we, Qe = 0; Qe !== de; ++Qe)
          ue[Qe] = le[ve + Qe] * Me + le[pe + Qe] * we;
        return ue;
      } }), $c.prototype = Object.assign(Object.create(sa.prototype), { constructor: $c, interpolate_: function(Q) {
        return this.copySampleValue_(Q - 1);
      } }), Object.assign(Ni, { toJSON: function(Q) {
        var te, ae = Q.constructor;
        if (ae.toJSON !== void 0)
          te = ae.toJSON(Q);
        else {
          te = { name: Q.name, times: Hi.convertArray(Q.times, Array), values: Hi.convertArray(Q.values, Array) };
          var se = Q.getInterpolation();
          se !== Q.DefaultInterpolation && (te.interpolation = se);
        }
        return te.type = Q.ValueTypeName, te;
      } }), Object.assign(Ni.prototype, { constructor: Ni, TimeBufferType: Float32Array, ValueBufferType: Float32Array, DefaultInterpolation: _n, InterpolantFactoryMethodDiscrete: function(Q) {
        return new $c(this.times, this.values, this.getValueSize(), Q);
      }, InterpolantFactoryMethodLinear: function(Q) {
        return new uc(this.times, this.values, this.getValueSize(), Q);
      }, InterpolantFactoryMethodSmooth: function(Q) {
        return new jc(this.times, this.values, this.getValueSize(), Q);
      }, setInterpolation: function(Q) {
        var te;
        switch (Q) {
          case qr:
            te = this.InterpolantFactoryMethodDiscrete;
            break;
          case _n:
            te = this.InterpolantFactoryMethodLinear;
            break;
          case fn:
            te = this.InterpolantFactoryMethodSmooth;
        }
        if (te === void 0) {
          var ae = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
          if (this.createInterpolant === void 0) {
            if (Q === this.DefaultInterpolation)
              throw new Error(ae);
            this.setInterpolation(this.DefaultInterpolation);
          }
          return console.warn("THREE.KeyframeTrack:", ae), this;
        }
        return this.createInterpolant = te, this;
      }, getInterpolation: function() {
        switch (this.createInterpolant) {
          case this.InterpolantFactoryMethodDiscrete:
            return qr;
          case this.InterpolantFactoryMethodLinear:
            return _n;
          case this.InterpolantFactoryMethodSmooth:
            return fn;
        }
      }, getValueSize: function() {
        return this.values.length / this.times.length;
      }, shift: function(Q) {
        if (Q !== 0)
          for (var te = this.times, ae = 0, se = te.length; ae !== se; ++ae)
            te[ae] += Q;
        return this;
      }, scale: function(Q) {
        if (Q !== 1)
          for (var te = this.times, ae = 0, se = te.length; ae !== se; ++ae)
            te[ae] *= Q;
        return this;
      }, trim: function(Q, te) {
        for (var ae = this.times, se = ae.length, ue = 0, le = se - 1; ue !== se && ae[ue] < Q; )
          ++ue;
        for (; le !== -1 && ae[le] > te; )
          --le;
        if (++le, ue !== 0 || le !== se) {
          ue >= le && (ue = (le = Math.max(le, 1)) - 1);
          var de = this.getValueSize();
          this.times = Hi.arraySlice(ae, ue, le), this.values = Hi.arraySlice(this.values, ue * de, le * de);
        }
        return this;
      }, validate: function() {
        var Q = !0, te = this.getValueSize();
        te - Math.floor(te) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), Q = !1);
        var ae = this.times, se = this.values, ue = ae.length;
        ue === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), Q = !1);
        for (var le = null, de = 0; de !== ue; de++) {
          var pe = ae[de];
          if (typeof pe == "number" && isNaN(pe)) {
            console.error("THREE.KeyframeTrack: Time is not a valid number.", this, de, pe), Q = !1;
            break;
          }
          if (le !== null && le > pe) {
            console.error("THREE.KeyframeTrack: Out of order keys.", this, de, pe, le), Q = !1;
            break;
          }
          le = pe;
        }
        if (se !== void 0 && Hi.isTypedArray(se)) {
          de = 0;
          for (var ve = se.length; de !== ve; ++de) {
            var we = se[de];
            if (isNaN(we)) {
              console.error("THREE.KeyframeTrack: Value is not a valid number.", this, de, we), Q = !1;
              break;
            }
          }
        }
        return Q;
      }, optimize: function() {
        for (var Q = this.times, te = this.values, ae = this.getValueSize(), se = this.getInterpolation() === fn, ue = 1, le = Q.length - 1, de = 1; de < le; ++de) {
          var pe = !1, ve = Q[de];
          if (ve !== Q[de + 1] && (de !== 1 || ve !== ve[0]))
            if (se)
              pe = !0;
            else
              for (var we = de * ae, Me = we - ae, Qe = we + ae, Se = 0; Se !== ae; ++Se) {
                var Ge = te[we + Se];
                if (Ge !== te[Me + Se] || Ge !== te[Qe + Se]) {
                  pe = !0;
                  break;
                }
              }
          if (pe) {
            if (de !== ue) {
              Q[ue] = Q[de];
              var ze = de * ae, Ze = ue * ae;
              for (Se = 0; Se !== ae; ++Se)
                te[Ze + Se] = te[ze + Se];
            }
            ++ue;
          }
        }
        if (le > 0) {
          for (Q[ue] = Q[le], ze = le * ae, Ze = ue * ae, Se = 0; Se !== ae; ++Se)
            te[Ze + Se] = te[ze + Se];
          ++ue;
        }
        return ue !== Q.length && (this.times = Hi.arraySlice(Q, 0, ue), this.values = Hi.arraySlice(te, 0, ue * ae)), this;
      } }), Vc.prototype = Object.assign(Object.create(Ni.prototype), { constructor: Vc, ValueTypeName: "bool", ValueBufferType: Array, DefaultInterpolation: qr, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), Dc.prototype = Object.assign(Object.create(Ni.prototype), { constructor: Dc, ValueTypeName: "color" }), cs.prototype = Object.assign(Object.create(Ni.prototype), { constructor: cs, ValueTypeName: "number" }), zc.prototype = Object.assign(Object.create(sa.prototype), { constructor: zc, interpolate_: function(Q, te, ae, se) {
        for (var ue = this.resultBuffer, le = this.sampleValues, de = this.valueSize, pe = Q * de, ve = (ae - te) / (se - te), we = pe + de; pe !== we; pe += 4)
          ci.slerpFlat(ue, 0, le, pe - de, le, pe, ve);
        return ue;
      } }), lc.prototype = Object.assign(Object.create(Ni.prototype), { constructor: lc, ValueTypeName: "quaternion", DefaultInterpolation: _n, InterpolantFactoryMethodLinear: function(Q) {
        return new zc(this.times, this.values, this.getValueSize(), Q);
      }, InterpolantFactoryMethodSmooth: void 0 }), Lc.prototype = Object.assign(Object.create(Ni.prototype), { constructor: Lc, ValueTypeName: "string", ValueBufferType: Array, DefaultInterpolation: qr, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), us.prototype = Object.assign(Object.create(Ni.prototype), { constructor: us, ValueTypeName: "vector" }), Object.assign(da, { parse: function(Q) {
        for (var te = [], ae = Q.tracks, se = 1 / (Q.fps || 1), ue = 0, le = ae.length; ue !== le; ++ue)
          te.push(Od(ae[ue]).scale(se));
        return new da(Q.name, Q.duration, te);
      }, toJSON: function(Q) {
        for (var te = [], ae = Q.tracks, se = { name: Q.name, duration: Q.duration, tracks: te, uuid: Q.uuid }, ue = 0, le = ae.length; ue !== le; ++ue)
          te.push(Ni.toJSON(ae[ue]));
        return se;
      }, CreateFromMorphTargetSequence: function(Q, te, ae, se) {
        for (var ue = te.length, le = [], de = 0; de < ue; de++) {
          var pe = [], ve = [];
          pe.push((de + ue - 1) % ue, de, (de + 1) % ue), ve.push(0, 1, 0);
          var we = Hi.getKeyframeOrder(pe);
          pe = Hi.sortedArray(pe, 1, we), ve = Hi.sortedArray(ve, 1, we), se || pe[0] !== 0 || (pe.push(ue), ve.push(ve[0])), le.push(new cs(".morphTargetInfluences[" + te[de].name + "]", pe, ve).scale(1 / ae));
        }
        return new da(Q, -1, le);
      }, findByName: function(Q, te) {
        var ae = Q;
        if (!Array.isArray(Q)) {
          var se = Q;
          ae = se.geometry && se.geometry.animations || se.animations;
        }
        for (var ue = 0; ue < ae.length; ue++)
          if (ae[ue].name === te)
            return ae[ue];
        return null;
      }, CreateClipsFromMorphTargetSequences: function(Q, te, ae) {
        for (var se = {}, ue = /^([\w-]*?)([\d]+)$/, le = 0, de = Q.length; le < de; le++) {
          var pe = Q[le], ve = pe.name.match(ue);
          if (ve && ve.length > 1) {
            var we = se[Qe = ve[1]];
            we || (se[Qe] = we = []), we.push(pe);
          }
        }
        var Me = [];
        for (var Qe in se)
          Me.push(da.CreateFromMorphTargetSequence(Qe, se[Qe], te, ae));
        return Me;
      }, parseAnimation: function(Q, te) {
        if (!Q)
          return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        for (var ae = function(yt, st, Mt, Ot, dt) {
          if (Mt.length !== 0) {
            var wt = [], $t = [];
            Hi.flattenJSON(Mt, wt, $t, Ot), wt.length !== 0 && dt.push(new yt(st, wt, $t));
          }
        }, se = [], ue = Q.name || "default", le = Q.length || -1, de = Q.fps || 30, pe = Q.hierarchy || [], ve = 0; ve < pe.length; ve++) {
          var we = pe[ve].keys;
          if (we && we.length !== 0)
            if (we[0].morphTargets) {
              for (var Me = {}, Qe = 0; Qe < we.length; Qe++)
                if (we[Qe].morphTargets)
                  for (var Se = 0; Se < we[Qe].morphTargets.length; Se++)
                    Me[we[Qe].morphTargets[Se]] = -1;
              for (var Ge in Me) {
                var ze = [], Ze = [];
                for (Se = 0; Se !== we[Qe].morphTargets.length; ++Se) {
                  var nt = we[Qe];
                  ze.push(nt.time), Ze.push(nt.morphTarget === Ge ? 1 : 0);
                }
                se.push(new cs(".morphTargetInfluence[" + Ge + "]", ze, Ze));
              }
              le = Me.length * (de || 1);
            } else {
              var ct = ".bones[" + te[ve].name + "]";
              ae(us, ct + ".position", we, "pos", se), ae(lc, ct + ".quaternion", we, "rot", se), ae(us, ct + ".scale", we, "scl", se);
            }
        }
        return se.length === 0 ? null : new da(ue, le, se);
      } }), Object.assign(da.prototype, { resetDuration: function() {
        for (var Q = 0, te = 0, ae = this.tracks.length; te !== ae; ++te) {
          var se = this.tracks[te];
          Q = Math.max(Q, se.times[se.times.length - 1]);
        }
        return this.duration = Q, this;
      }, trim: function() {
        for (var Q = 0; Q < this.tracks.length; Q++)
          this.tracks[Q].trim(0, this.duration);
        return this;
      }, validate: function() {
        for (var Q = !0, te = 0; te < this.tracks.length; te++)
          Q = Q && this.tracks[te].validate();
        return Q;
      }, optimize: function() {
        for (var Q = 0; Q < this.tracks.length; Q++)
          this.tracks[Q].optimize();
        return this;
      } }), Object.assign(Yc.prototype, { load: function(Q, te, ae, se) {
        var ue = this;
        new ya(ue.manager).load(Q, function(le) {
          te(ue.parse(JSON.parse(le)));
        }, ae, se);
      }, setTextures: function(Q) {
        this.textures = Q;
      }, parse: function(Q) {
        var te = this.textures;
        function ae(le) {
          return te[le] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", le), te[le];
        }
        var se = new kd[Q.type]();
        if (Q.uuid !== void 0 && (se.uuid = Q.uuid), Q.name !== void 0 && (se.name = Q.name), Q.color !== void 0 && se.color.setHex(Q.color), Q.roughness !== void 0 && (se.roughness = Q.roughness), Q.metalness !== void 0 && (se.metalness = Q.metalness), Q.emissive !== void 0 && se.emissive.setHex(Q.emissive), Q.specular !== void 0 && se.specular.setHex(Q.specular), Q.shininess !== void 0 && (se.shininess = Q.shininess), Q.clearCoat !== void 0 && (se.clearCoat = Q.clearCoat), Q.clearCoatRoughness !== void 0 && (se.clearCoatRoughness = Q.clearCoatRoughness), Q.uniforms !== void 0 && (se.uniforms = Q.uniforms), Q.vertexShader !== void 0 && (se.vertexShader = Q.vertexShader), Q.fragmentShader !== void 0 && (se.fragmentShader = Q.fragmentShader), Q.vertexColors !== void 0 && (se.vertexColors = Q.vertexColors), Q.fog !== void 0 && (se.fog = Q.fog), Q.flatShading !== void 0 && (se.flatShading = Q.flatShading), Q.blending !== void 0 && (se.blending = Q.blending), Q.side !== void 0 && (se.side = Q.side), Q.opacity !== void 0 && (se.opacity = Q.opacity), Q.transparent !== void 0 && (se.transparent = Q.transparent), Q.alphaTest !== void 0 && (se.alphaTest = Q.alphaTest), Q.depthTest !== void 0 && (se.depthTest = Q.depthTest), Q.depthWrite !== void 0 && (se.depthWrite = Q.depthWrite), Q.colorWrite !== void 0 && (se.colorWrite = Q.colorWrite), Q.wireframe !== void 0 && (se.wireframe = Q.wireframe), Q.wireframeLinewidth !== void 0 && (se.wireframeLinewidth = Q.wireframeLinewidth), Q.wireframeLinecap !== void 0 && (se.wireframeLinecap = Q.wireframeLinecap), Q.wireframeLinejoin !== void 0 && (se.wireframeLinejoin = Q.wireframeLinejoin), Q.rotation !== void 0 && (se.rotation = Q.rotation), Q.linewidth !== 1 && (se.linewidth = Q.linewidth), Q.dashSize !== void 0 && (se.dashSize = Q.dashSize), Q.gapSize !== void 0 && (se.gapSize = Q.gapSize), Q.scale !== void 0 && (se.scale = Q.scale), Q.polygonOffset !== void 0 && (se.polygonOffset = Q.polygonOffset), Q.polygonOffsetFactor !== void 0 && (se.polygonOffsetFactor = Q.polygonOffsetFactor), Q.polygonOffsetUnits !== void 0 && (se.polygonOffsetUnits = Q.polygonOffsetUnits), Q.skinning !== void 0 && (se.skinning = Q.skinning), Q.morphTargets !== void 0 && (se.morphTargets = Q.morphTargets), Q.dithering !== void 0 && (se.dithering = Q.dithering), Q.visible !== void 0 && (se.visible = Q.visible), Q.userData !== void 0 && (se.userData = Q.userData), Q.shading !== void 0 && (se.flatShading = Q.shading === 1), Q.size !== void 0 && (se.size = Q.size), Q.sizeAttenuation !== void 0 && (se.sizeAttenuation = Q.sizeAttenuation), Q.map !== void 0 && (se.map = ae(Q.map)), Q.alphaMap !== void 0 && (se.alphaMap = ae(Q.alphaMap), se.transparent = !0), Q.bumpMap !== void 0 && (se.bumpMap = ae(Q.bumpMap)), Q.bumpScale !== void 0 && (se.bumpScale = Q.bumpScale), Q.normalMap !== void 0 && (se.normalMap = ae(Q.normalMap)), Q.normalMapType !== void 0 && (se.normalMapType = Q.normalMapType), Q.normalScale !== void 0) {
          var ue = Q.normalScale;
          Array.isArray(ue) === !1 && (ue = [ue, ue]), se.normalScale = new wr().fromArray(ue);
        }
        return Q.displacementMap !== void 0 && (se.displacementMap = ae(Q.displacementMap)), Q.displacementScale !== void 0 && (se.displacementScale = Q.displacementScale), Q.displacementBias !== void 0 && (se.displacementBias = Q.displacementBias), Q.roughnessMap !== void 0 && (se.roughnessMap = ae(Q.roughnessMap)), Q.metalnessMap !== void 0 && (se.metalnessMap = ae(Q.metalnessMap)), Q.emissiveMap !== void 0 && (se.emissiveMap = ae(Q.emissiveMap)), Q.emissiveIntensity !== void 0 && (se.emissiveIntensity = Q.emissiveIntensity), Q.specularMap !== void 0 && (se.specularMap = ae(Q.specularMap)), Q.envMap !== void 0 && (se.envMap = ae(Q.envMap)), Q.reflectivity !== void 0 && (se.reflectivity = Q.reflectivity), Q.lightMap !== void 0 && (se.lightMap = ae(Q.lightMap)), Q.lightMapIntensity !== void 0 && (se.lightMapIntensity = Q.lightMapIntensity), Q.aoMap !== void 0 && (se.aoMap = ae(Q.aoMap)), Q.aoMapIntensity !== void 0 && (se.aoMapIntensity = Q.aoMapIntensity), Q.gradientMap !== void 0 && (se.gradientMap = ae(Q.gradientMap)), se;
      } }), Object.assign(Au.prototype, { load: function(Q, te, ae, se) {
        var ue = this;
        new ya(ue.manager).load(Q, function(le) {
          te(ue.parse(JSON.parse(le)));
        }, ae, se);
      }, parse: function(Q) {
        var te = new Jr(), ae = Q.data.index;
        if (ae !== void 0) {
          var se = new vl[ae.type](ae.array);
          te.setIndex(new Nn(se, 1));
        }
        var ue = Q.data.attributes;
        for (var le in ue) {
          var de = ue[le];
          se = new vl[de.type](de.array), te.addAttribute(le, new Nn(se, de.itemSize, de.normalized));
        }
        var pe = Q.data.groups || Q.data.drawcalls || Q.data.offsets;
        if (pe !== void 0)
          for (var ve = 0, we = pe.length; ve !== we; ++ve) {
            var Me = pe[ve];
            te.addGroup(Me.start, Me.count, Me.materialIndex);
          }
        var Qe = Q.data.boundingSphere;
        if (Qe !== void 0) {
          var Se = new mt();
          Qe.center !== void 0 && Se.fromArray(Qe.center), te.boundingSphere = new Aa(Se, Qe.radius);
        }
        return te;
      } });
      var vl = { Int8Array, Uint8Array, Uint8ClampedArray: typeof Uint8ClampedArray < "u" ? Uint8ClampedArray : Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array };
      function ls() {
      }
      ls.Handlers = { handlers: [], add: function(Q, te) {
        this.handlers.push(Q, te);
      }, get: function(Q) {
        for (var te = this.handlers, ae = 0, se = te.length; ae < se; ae += 2) {
          var ue = te[ae], le = te[ae + 1];
          if (ue.test(Q))
            return le;
        }
        return null;
      } }, Object.assign(ls.prototype, { crossOrigin: "anonymous", onLoadStart: function() {
      }, onLoadProgress: function() {
      }, onLoadComplete: function() {
      }, initMaterials: function(Q, te, ae) {
        for (var se = [], ue = 0; ue < Q.length; ++ue)
          se[ue] = this.createMaterial(Q[ue], te, ae);
        return se;
      }, createMaterial: function() {
        var Q = { NoBlending: kt, NormalBlending: Ke, AdditiveBlending: ht, SubtractiveBlending: Nt, MultiplyBlending: Ft, CustomBlending: At }, te = new sn(), ae = new Nc(), se = new Yc();
        return function(ue, le, de) {
          var pe = {};
          function ve(Se, Ge, ze, Ze, nt) {
            var ct, yt = le + Se, st = ls.Handlers.get(yt);
            st !== null ? ct = st.load(yt) : (ae.setCrossOrigin(de), ct = ae.load(yt)), Ge !== void 0 && (ct.repeat.fromArray(Ge), Ge[0] !== 1 && (ct.wrapS = gr), Ge[1] !== 1 && (ct.wrapT = gr)), ze !== void 0 && ct.offset.fromArray(ze), Ze !== void 0 && (Ze[0] === "repeat" && (ct.wrapS = gr), Ze[0] === "mirror" && (ct.wrapS = mr), Ze[1] === "repeat" && (ct.wrapT = gr), Ze[1] === "mirror" && (ct.wrapT = mr)), nt !== void 0 && (ct.anisotropy = nt);
            var Mt = Cn.generateUUID();
            return pe[Mt] = ct, Mt;
          }
          var we = { uuid: Cn.generateUUID(), type: "MeshLambertMaterial" };
          for (var Me in ue) {
            var Qe = ue[Me];
            switch (Me) {
              case "DbgColor":
              case "DbgIndex":
              case "opticalDensity":
              case "illumination":
                break;
              case "DbgName":
                we.name = Qe;
                break;
              case "blending":
                we.blending = Q[Qe];
                break;
              case "colorAmbient":
              case "mapAmbient":
                console.warn("THREE.Loader.createMaterial:", Me, "is no longer supported.");
                break;
              case "colorDiffuse":
                we.color = te.fromArray(Qe).getHex();
                break;
              case "colorSpecular":
                we.specular = te.fromArray(Qe).getHex();
                break;
              case "colorEmissive":
                we.emissive = te.fromArray(Qe).getHex();
                break;
              case "specularCoef":
                we.shininess = Qe;
                break;
              case "shading":
                Qe.toLowerCase() === "basic" && (we.type = "MeshBasicMaterial"), Qe.toLowerCase() === "phong" && (we.type = "MeshPhongMaterial"), Qe.toLowerCase() === "standard" && (we.type = "MeshStandardMaterial");
                break;
              case "mapDiffuse":
                we.map = ve(Qe, ue.mapDiffuseRepeat, ue.mapDiffuseOffset, ue.mapDiffuseWrap, ue.mapDiffuseAnisotropy);
                break;
              case "mapDiffuseRepeat":
              case "mapDiffuseOffset":
              case "mapDiffuseWrap":
              case "mapDiffuseAnisotropy":
                break;
              case "mapEmissive":
                we.emissiveMap = ve(Qe, ue.mapEmissiveRepeat, ue.mapEmissiveOffset, ue.mapEmissiveWrap, ue.mapEmissiveAnisotropy);
                break;
              case "mapEmissiveRepeat":
              case "mapEmissiveOffset":
              case "mapEmissiveWrap":
              case "mapEmissiveAnisotropy":
                break;
              case "mapLight":
                we.lightMap = ve(Qe, ue.mapLightRepeat, ue.mapLightOffset, ue.mapLightWrap, ue.mapLightAnisotropy);
                break;
              case "mapLightRepeat":
              case "mapLightOffset":
              case "mapLightWrap":
              case "mapLightAnisotropy":
                break;
              case "mapAO":
                we.aoMap = ve(Qe, ue.mapAORepeat, ue.mapAOOffset, ue.mapAOWrap, ue.mapAOAnisotropy);
                break;
              case "mapAORepeat":
              case "mapAOOffset":
              case "mapAOWrap":
              case "mapAOAnisotropy":
                break;
              case "mapBump":
                we.bumpMap = ve(Qe, ue.mapBumpRepeat, ue.mapBumpOffset, ue.mapBumpWrap, ue.mapBumpAnisotropy);
                break;
              case "mapBumpScale":
                we.bumpScale = Qe;
                break;
              case "mapBumpRepeat":
              case "mapBumpOffset":
              case "mapBumpWrap":
              case "mapBumpAnisotropy":
                break;
              case "mapNormal":
                we.normalMap = ve(Qe, ue.mapNormalRepeat, ue.mapNormalOffset, ue.mapNormalWrap, ue.mapNormalAnisotropy);
                break;
              case "mapNormalFactor":
                we.normalScale = Qe;
                break;
              case "mapNormalRepeat":
              case "mapNormalOffset":
              case "mapNormalWrap":
              case "mapNormalAnisotropy":
                break;
              case "mapSpecular":
                we.specularMap = ve(Qe, ue.mapSpecularRepeat, ue.mapSpecularOffset, ue.mapSpecularWrap, ue.mapSpecularAnisotropy);
                break;
              case "mapSpecularRepeat":
              case "mapSpecularOffset":
              case "mapSpecularWrap":
              case "mapSpecularAnisotropy":
                break;
              case "mapMetalness":
                we.metalnessMap = ve(Qe, ue.mapMetalnessRepeat, ue.mapMetalnessOffset, ue.mapMetalnessWrap, ue.mapMetalnessAnisotropy);
                break;
              case "mapMetalnessRepeat":
              case "mapMetalnessOffset":
              case "mapMetalnessWrap":
              case "mapMetalnessAnisotropy":
                break;
              case "mapRoughness":
                we.roughnessMap = ve(Qe, ue.mapRoughnessRepeat, ue.mapRoughnessOffset, ue.mapRoughnessWrap, ue.mapRoughnessAnisotropy);
                break;
              case "mapRoughnessRepeat":
              case "mapRoughnessOffset":
              case "mapRoughnessWrap":
              case "mapRoughnessAnisotropy":
                break;
              case "mapAlpha":
                we.alphaMap = ve(Qe, ue.mapAlphaRepeat, ue.mapAlphaOffset, ue.mapAlphaWrap, ue.mapAlphaAnisotropy);
                break;
              case "mapAlphaRepeat":
              case "mapAlphaOffset":
              case "mapAlphaWrap":
              case "mapAlphaAnisotropy":
                break;
              case "flipSided":
                we.side = Ne;
                break;
              case "doubleSided":
                we.side = Pe;
                break;
              case "transparency":
                console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"), we.opacity = Qe;
                break;
              case "depthTest":
              case "depthWrite":
              case "colorWrite":
              case "opacity":
              case "reflectivity":
              case "transparent":
              case "visible":
              case "wireframe":
                we[Me] = Qe;
                break;
              case "vertexColors":
                Qe === !0 && (we.vertexColors = gt), Qe === "face" && (we.vertexColors = rt);
                break;
              default:
                console.error("THREE.Loader.createMaterial: Unsupported", Me, Qe);
            }
          }
          return we.type === "MeshBasicMaterial" && delete we.emissive, we.type !== "MeshPhongMaterial" && delete we.specular, we.opacity < 1 && (we.transparent = !0), se.setTextures(pe), se.parse(we);
        };
      }() });
      var gu = { decodeText: function(Q) {
        if (typeof TextDecoder < "u")
          return new TextDecoder().decode(Q);
        for (var te = "", ae = 0, se = Q.length; ae < se; ae++)
          te += String.fromCharCode(Q[ae]);
        return decodeURIComponent(escape(te));
      }, extractUrlBase: function(Q) {
        var te = Q.lastIndexOf("/");
        return te === -1 ? "./" : Q.substr(0, te + 1);
      } };
      function mu(Q) {
        typeof Q == "boolean" && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."), Q = void 0), this.manager = Q !== void 0 ? Q : ta, this.withCredentials = !1;
      }
      function xl(Q) {
        this.manager = Q !== void 0 ? Q : ta, this.texturePath = "";
      }
      Object.assign(mu.prototype, { crossOrigin: "anonymous", load: function(Q, te, ae, se) {
        var ue = this, le = this.texturePath && typeof this.texturePath == "string" ? this.texturePath : gu.extractUrlBase(Q), de = new ya(this.manager);
        de.setWithCredentials(this.withCredentials), de.load(Q, function(pe) {
          var ve = JSON.parse(pe), we = ve.metadata;
          if (we !== void 0) {
            var Me = we.type;
            if (Me !== void 0 && Me.toLowerCase() === "object")
              return void console.error("THREE.JSONLoader: " + Q + " should be loaded with THREE.ObjectLoader instead.");
          }
          var Qe = ue.parse(ve, le);
          te(Qe.geometry, Qe.materials);
        }, ae, se);
      }, setCrossOrigin: function(Q) {
        return this.crossOrigin = Q, this;
      }, setTexturePath: function(Q) {
        return this.texturePath = Q, this;
      }, parse: function() {
        return function(Q, te) {
          Q.data !== void 0 && (Q = Q.data), Q.scale !== void 0 ? Q.scale = 1 / Q.scale : Q.scale = 1;
          var ae = new mn();
          return function(se, ue) {
            function le(Yr, Qr) {
              return Yr & 1 << Qr;
            }
            var de, pe, ve, we, Me, Qe, Se, Ge, ze, Ze, nt, ct, yt, st, Mt, Ot, dt, wt, $t, Pt, er, Ht, ir, dr, vr, pr = se.faces, Or = se.vertices, Mr = se.normals, hr = se.colors, Cr = se.scale, lr = 0;
            if (se.uvs !== void 0) {
              for (de = 0; de < se.uvs.length; de++)
                se.uvs[de].length && lr++;
              for (de = 0; de < lr; de++)
                ue.faceVertexUvs[de] = [];
            }
            for (we = 0, Me = Or.length; we < Me; )
              (wt = new mt()).x = Or[we++] * Cr, wt.y = Or[we++] * Cr, wt.z = Or[we++] * Cr, ue.vertices.push(wt);
            for (we = 0, Me = pr.length; we < Me; )
              if (nt = le(Ze = pr[we++], 0), ct = le(Ze, 1), yt = le(Ze, 3), st = le(Ze, 4), Mt = le(Ze, 5), Ot = le(Ze, 6), dt = le(Ze, 7), nt) {
                if ((Pt = new qa()).a = pr[we], Pt.b = pr[we + 1], Pt.c = pr[we + 3], (er = new qa()).a = pr[we + 1], er.b = pr[we + 2], er.c = pr[we + 3], we += 4, ct && (ze = pr[we++], Pt.materialIndex = ze, er.materialIndex = ze), ve = ue.faces.length, yt)
                  for (de = 0; de < lr; de++)
                    for (dr = se.uvs[de], ue.faceVertexUvs[de][ve] = [], ue.faceVertexUvs[de][ve + 1] = [], pe = 0; pe < 4; pe++)
                      vr = new wr(dr[2 * (Ge = pr[we++])], dr[2 * Ge + 1]), pe !== 2 && ue.faceVertexUvs[de][ve].push(vr), pe !== 0 && ue.faceVertexUvs[de][ve + 1].push(vr);
                if (st && (Se = 3 * pr[we++], Pt.normal.set(Mr[Se++], Mr[Se++], Mr[Se]), er.normal.copy(Pt.normal)), Mt)
                  for (de = 0; de < 4; de++)
                    Se = 3 * pr[we++], ir = new mt(Mr[Se++], Mr[Se++], Mr[Se]), de !== 2 && Pt.vertexNormals.push(ir), de !== 0 && er.vertexNormals.push(ir);
                if (Ot && (Ht = hr[Qe = pr[we++]], Pt.color.setHex(Ht), er.color.setHex(Ht)), dt)
                  for (de = 0; de < 4; de++)
                    Ht = hr[Qe = pr[we++]], de !== 2 && Pt.vertexColors.push(new sn(Ht)), de !== 0 && er.vertexColors.push(new sn(Ht));
                ue.faces.push(Pt), ue.faces.push(er);
              } else {
                if (($t = new qa()).a = pr[we++], $t.b = pr[we++], $t.c = pr[we++], ct && (ze = pr[we++], $t.materialIndex = ze), ve = ue.faces.length, yt)
                  for (de = 0; de < lr; de++)
                    for (dr = se.uvs[de], ue.faceVertexUvs[de][ve] = [], pe = 0; pe < 3; pe++)
                      vr = new wr(dr[2 * (Ge = pr[we++])], dr[2 * Ge + 1]), ue.faceVertexUvs[de][ve].push(vr);
                if (st && (Se = 3 * pr[we++], $t.normal.set(Mr[Se++], Mr[Se++], Mr[Se])), Mt)
                  for (de = 0; de < 3; de++)
                    Se = 3 * pr[we++], ir = new mt(Mr[Se++], Mr[Se++], Mr[Se]), $t.vertexNormals.push(ir);
                if (Ot && (Qe = pr[we++], $t.color.setHex(hr[Qe])), dt)
                  for (de = 0; de < 3; de++)
                    Qe = pr[we++], $t.vertexColors.push(new sn(hr[Qe]));
                ue.faces.push($t);
              }
          }(Q, ae), function(se, ue) {
            var le = se.influencesPerVertex !== void 0 ? se.influencesPerVertex : 2;
            if (se.skinWeights)
              for (var de = 0, pe = se.skinWeights.length; de < pe; de += le) {
                var ve = se.skinWeights[de], we = le > 1 ? se.skinWeights[de + 1] : 0, Me = le > 2 ? se.skinWeights[de + 2] : 0, Qe = le > 3 ? se.skinWeights[de + 3] : 0;
                ue.skinWeights.push(new Zn(ve, we, Me, Qe));
              }
            if (se.skinIndices)
              for (de = 0, pe = se.skinIndices.length; de < pe; de += le) {
                var Se = se.skinIndices[de], Ge = le > 1 ? se.skinIndices[de + 1] : 0, ze = le > 2 ? se.skinIndices[de + 2] : 0, Ze = le > 3 ? se.skinIndices[de + 3] : 0;
                ue.skinIndices.push(new Zn(Se, Ge, ze, Ze));
              }
            ue.bones = se.bones, ue.bones && ue.bones.length > 0 && (ue.skinWeights.length !== ue.skinIndices.length || ue.skinIndices.length !== ue.vertices.length) && console.warn("When skinning, number of vertices (" + ue.vertices.length + "), skinIndices (" + ue.skinIndices.length + "), and skinWeights (" + ue.skinWeights.length + ") should match.");
          }(Q, ae), function(se, ue) {
            var le = se.scale;
            if (se.morphTargets !== void 0)
              for (var de = 0, pe = se.morphTargets.length; de < pe; de++) {
                ue.morphTargets[de] = {}, ue.morphTargets[de].name = se.morphTargets[de].name, ue.morphTargets[de].vertices = [];
                for (var ve = ue.morphTargets[de].vertices, we = se.morphTargets[de].vertices, Me = 0, Qe = we.length; Me < Qe; Me += 3) {
                  var Se = new mt();
                  Se.x = we[Me] * le, Se.y = we[Me + 1] * le, Se.z = we[Me + 2] * le, ve.push(Se);
                }
              }
            if (se.morphColors !== void 0 && se.morphColors.length > 0) {
              console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
              var Ge = ue.faces, ze = se.morphColors[0].colors;
              for (de = 0, pe = Ge.length; de < pe; de++)
                Ge[de].color.fromArray(ze, 3 * de);
            }
          }(Q, ae), function(se, ue) {
            var le = [], de = [];
            se.animation !== void 0 && de.push(se.animation), se.animations !== void 0 && (se.animations.length ? de = de.concat(se.animations) : de.push(se.animations));
            for (var pe = 0; pe < de.length; pe++) {
              var ve = da.parseAnimation(de[pe], ue.bones);
              ve && le.push(ve);
            }
            if (ue.morphTargets) {
              var we = da.CreateClipsFromMorphTargetSequences(ue.morphTargets, 10);
              le = le.concat(we);
            }
            le.length > 0 && (ue.animations = le);
          }(Q, ae), ae.computeFaceNormals(), ae.computeBoundingSphere(), Q.materials === void 0 || Q.materials.length === 0 ? { geometry: ae } : { geometry: ae, materials: ls.prototype.initMaterials(Q.materials, te, this.crossOrigin) };
        };
      }() }), Object.assign(xl.prototype, { crossOrigin: "anonymous", load: function(Q, te, ae, se) {
        this.texturePath === "" && (this.texturePath = Q.substring(0, Q.lastIndexOf("/") + 1));
        var ue = this;
        new ya(ue.manager).load(Q, function(le) {
          var de = null;
          try {
            de = JSON.parse(le);
          } catch (ve) {
            return se !== void 0 && se(ve), void console.error("THREE:ObjectLoader: Can't parse " + Q + ".", ve.message);
          }
          var pe = de.metadata;
          pe !== void 0 && pe.type !== void 0 && pe.type.toLowerCase() !== "geometry" ? ue.parse(de, te) : console.error("THREE.ObjectLoader: Can't load " + Q + ". Use THREE.JSONLoader instead.");
        }, ae, se);
      }, setTexturePath: function(Q) {
        return this.texturePath = Q, this;
      }, setCrossOrigin: function(Q) {
        return this.crossOrigin = Q, this;
      }, parse: function(Q, te) {
        var ae = this.parseShape(Q.shapes), se = this.parseGeometries(Q.geometries, ae), ue = this.parseImages(Q.images, function() {
          te !== void 0 && te(pe);
        }), le = this.parseTextures(Q.textures, ue), de = this.parseMaterials(Q.materials, le), pe = this.parseObject(Q.object, se, de);
        return Q.animations && (pe.animations = this.parseAnimations(Q.animations)), Q.images !== void 0 && Q.images.length !== 0 || te !== void 0 && te(pe), pe;
      }, parseShape: function(Q) {
        var te = {};
        if (Q !== void 0)
          for (var ae = 0, se = Q.length; ae < se; ae++) {
            var ue = new Ka().fromJSON(Q[ae]);
            te[ue.uuid] = ue;
          }
        return te;
      }, parseGeometries: function(Q, te) {
        var ae = {};
        if (Q !== void 0)
          for (var se = new mu(), ue = new Au(), le = 0, de = Q.length; le < de; le++) {
            var pe, ve = Q[le];
            switch (ve.type) {
              case "PlaneGeometry":
              case "PlaneBufferGeometry":
                pe = new ea[ve.type](ve.width, ve.height, ve.widthSegments, ve.heightSegments);
                break;
              case "BoxGeometry":
              case "BoxBufferGeometry":
              case "CubeGeometry":
                pe = new ea[ve.type](ve.width, ve.height, ve.depth, ve.widthSegments, ve.heightSegments, ve.depthSegments);
                break;
              case "CircleGeometry":
              case "CircleBufferGeometry":
                pe = new ea[ve.type](ve.radius, ve.segments, ve.thetaStart, ve.thetaLength);
                break;
              case "CylinderGeometry":
              case "CylinderBufferGeometry":
                pe = new ea[ve.type](ve.radiusTop, ve.radiusBottom, ve.height, ve.radialSegments, ve.heightSegments, ve.openEnded, ve.thetaStart, ve.thetaLength);
                break;
              case "ConeGeometry":
              case "ConeBufferGeometry":
                pe = new ea[ve.type](ve.radius, ve.height, ve.radialSegments, ve.heightSegments, ve.openEnded, ve.thetaStart, ve.thetaLength);
                break;
              case "SphereGeometry":
              case "SphereBufferGeometry":
                pe = new ea[ve.type](ve.radius, ve.widthSegments, ve.heightSegments, ve.phiStart, ve.phiLength, ve.thetaStart, ve.thetaLength);
                break;
              case "DodecahedronGeometry":
              case "DodecahedronBufferGeometry":
              case "IcosahedronGeometry":
              case "IcosahedronBufferGeometry":
              case "OctahedronGeometry":
              case "OctahedronBufferGeometry":
              case "TetrahedronGeometry":
              case "TetrahedronBufferGeometry":
                pe = new ea[ve.type](ve.radius, ve.detail);
                break;
              case "RingGeometry":
              case "RingBufferGeometry":
                pe = new ea[ve.type](ve.innerRadius, ve.outerRadius, ve.thetaSegments, ve.phiSegments, ve.thetaStart, ve.thetaLength);
                break;
              case "TorusGeometry":
              case "TorusBufferGeometry":
                pe = new ea[ve.type](ve.radius, ve.tube, ve.radialSegments, ve.tubularSegments, ve.arc);
                break;
              case "TorusKnotGeometry":
              case "TorusKnotBufferGeometry":
                pe = new ea[ve.type](ve.radius, ve.tube, ve.tubularSegments, ve.radialSegments, ve.p, ve.q);
                break;
              case "LatheGeometry":
              case "LatheBufferGeometry":
                pe = new ea[ve.type](ve.points, ve.segments, ve.phiStart, ve.phiLength);
                break;
              case "PolyhedronGeometry":
              case "PolyhedronBufferGeometry":
                pe = new ea[ve.type](ve.vertices, ve.indices, ve.radius, ve.details);
                break;
              case "ShapeGeometry":
              case "ShapeBufferGeometry":
                for (var we = [], Me = 0, Qe = ve.shapes.length; Me < Qe; Me++) {
                  var Se = te[ve.shapes[Me]];
                  we.push(Se);
                }
                pe = new ea[ve.type](we, ve.curveSegments);
                break;
              case "ExtrudeGeometry":
              case "ExtrudeBufferGeometry":
                for (we = [], Me = 0, Qe = ve.shapes.length; Me < Qe; Me++)
                  Se = te[ve.shapes[Me]], we.push(Se);
                var Ge = ve.options.extrudePath;
                Ge !== void 0 && (ve.options.extrudePath = new yl[Ge.type]().fromJSON(Ge)), pe = new ea[ve.type](we, ve.options);
                break;
              case "BufferGeometry":
                pe = ue.parse(ve);
                break;
              case "Geometry":
                pe = se.parse(ve, this.texturePath).geometry;
                break;
              default:
                console.warn('THREE.ObjectLoader: Unsupported geometry type "' + ve.type + '"');
                continue;
            }
            pe.uuid = ve.uuid, ve.name !== void 0 && (pe.name = ve.name), pe.isBufferGeometry === !0 && ve.userData !== void 0 && (pe.userData = ve.userData), ae[ve.uuid] = pe;
          }
        return ae;
      }, parseMaterials: function(Q, te) {
        var ae = {};
        if (Q !== void 0) {
          var se = new Yc();
          se.setTextures(te);
          for (var ue = 0, le = Q.length; ue < le; ue++) {
            var de = Q[ue];
            if (de.type === "MultiMaterial") {
              for (var pe = [], ve = 0; ve < de.materials.length; ve++)
                pe.push(se.parse(de.materials[ve]));
              ae[de.uuid] = pe;
            } else
              ae[de.uuid] = se.parse(de);
          }
        }
        return ae;
      }, parseAnimations: function(Q) {
        for (var te = [], ae = 0; ae < Q.length; ae++) {
          var se = Q[ae], ue = da.parse(se);
          se.uuid !== void 0 && (ue.uuid = se.uuid), te.push(ue);
        }
        return te;
      }, parseImages: function(Q, te) {
        var ae = this, se = {};
        function ue(ze) {
          return ae.manager.itemStart(ze), le.load(ze, function() {
            ae.manager.itemEnd(ze);
          }, void 0, function() {
            ae.manager.itemEnd(ze), ae.manager.itemError(ze);
          });
        }
        if (Q !== void 0 && Q.length > 0) {
          var le = new oc(new cu(te));
          le.setCrossOrigin(this.crossOrigin);
          for (var de = 0, pe = Q.length; de < pe; de++) {
            var ve = Q[de], we = ve.url;
            if (Array.isArray(we)) {
              se[ve.uuid] = [];
              for (var Me = 0, Qe = we.length; Me < Qe; Me++) {
                var Se = we[Me], Ge = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(Se) ? Se : ae.texturePath + Se;
                se[ve.uuid].push(ue(Ge));
              }
            } else
              Ge = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(ve.url) ? ve.url : ae.texturePath + ve.url, se[ve.uuid] = ue(Ge);
          }
        }
        return se;
      }, parseTextures: function(Q, te) {
        function ae(ve, we) {
          return typeof ve == "number" ? ve : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", ve), we[ve]);
        }
        var se = {};
        if (Q !== void 0)
          for (var ue = 0, le = Q.length; ue < le; ue++) {
            var de, pe = Q[ue];
            pe.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', pe.uuid), te[pe.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", pe.image), (de = Array.isArray(te[pe.image]) ? new ja(te[pe.image]) : new ii(te[pe.image])).needsUpdate = !0, de.uuid = pe.uuid, pe.name !== void 0 && (de.name = pe.name), pe.mapping !== void 0 && (de.mapping = ae(pe.mapping, Pd)), pe.offset !== void 0 && de.offset.fromArray(pe.offset), pe.repeat !== void 0 && de.repeat.fromArray(pe.repeat), pe.center !== void 0 && de.center.fromArray(pe.center), pe.rotation !== void 0 && (de.rotation = pe.rotation), pe.wrap !== void 0 && (de.wrapS = ae(pe.wrap[0], El), de.wrapT = ae(pe.wrap[1], El)), pe.format !== void 0 && (de.format = pe.format), pe.minFilter !== void 0 && (de.minFilter = ae(pe.minFilter, bl)), pe.magFilter !== void 0 && (de.magFilter = ae(pe.magFilter, bl)), pe.anisotropy !== void 0 && (de.anisotropy = pe.anisotropy), pe.flipY !== void 0 && (de.flipY = pe.flipY), se[pe.uuid] = de;
          }
        return se;
      }, parseObject: function(Q, te, ae) {
        var se;
        function ue(ze) {
          return te[ze] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", ze), te[ze];
        }
        function le(ze) {
          if (ze !== void 0) {
            if (Array.isArray(ze)) {
              for (var Ze = [], nt = 0, ct = ze.length; nt < ct; nt++) {
                var yt = ze[nt];
                ae[yt] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", yt), Ze.push(ae[yt]);
              }
              return Ze;
            }
            return ae[ze] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", ze), ae[ze];
          }
        }
        switch (Q.type) {
          case "Scene":
            se = new Sc(), Q.background !== void 0 && Number.isInteger(Q.background) && (se.background = new sn(Q.background)), Q.fog !== void 0 && (Q.fog.type === "Fog" ? se.fog = new Vo(Q.fog.color, Q.fog.near, Q.fog.far) : Q.fog.type === "FogExp2" && (se.fog = new $o(Q.fog.color, Q.fog.density)));
            break;
          case "PerspectiveCamera":
            se = new fi(Q.fov, Q.aspect, Q.near, Q.far), Q.focus !== void 0 && (se.focus = Q.focus), Q.zoom !== void 0 && (se.zoom = Q.zoom), Q.filmGauge !== void 0 && (se.filmGauge = Q.filmGauge), Q.filmOffset !== void 0 && (se.filmOffset = Q.filmOffset), Q.view !== void 0 && (se.view = Object.assign({}, Q.view));
            break;
          case "OrthographicCamera":
            se = new Go(Q.left, Q.right, Q.top, Q.bottom, Q.near, Q.far), Q.zoom !== void 0 && (se.zoom = Q.zoom), Q.view !== void 0 && (se.view = Object.assign({}, Q.view));
            break;
          case "AmbientLight":
            se = new Hc(Q.color, Q.intensity);
            break;
          case "DirectionalLight":
            se = new Uc(Q.color, Q.intensity);
            break;
          case "PointLight":
            se = new Fc(Q.color, Q.intensity, Q.distance, Q.decay);
            break;
          case "RectAreaLight":
            se = new qc(Q.color, Q.intensity, Q.width, Q.height);
            break;
          case "SpotLight":
            se = new Pc(Q.color, Q.intensity, Q.distance, Q.angle, Q.penumbra, Q.decay);
            break;
          case "HemisphereLight":
            se = new kc(Q.color, Q.groundColor, Q.intensity);
            break;
          case "SkinnedMesh":
            console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
          case "Mesh":
            var de = ue(Q.geometry), pe = le(Q.material);
            se = de.bones && de.bones.length > 0 ? new Tc(de, pe) : new Xi(de, pe);
            break;
          case "LOD":
            se = new Os();
            break;
          case "Line":
            se = new Zi(ue(Q.geometry), le(Q.material), Q.mode);
            break;
          case "LineLoop":
            se = new Rc(ue(Q.geometry), le(Q.material));
            break;
          case "LineSegments":
            se = new ri(ue(Q.geometry), le(Q.material));
            break;
          case "PointCloud":
          case "Points":
            se = new Do(ue(Q.geometry), le(Q.material));
            break;
          case "Sprite":
            se = new ks(le(Q.material));
            break;
          case "Group":
            se = new jo();
            break;
          default:
            se = new jr();
        }
        if (se.uuid = Q.uuid, Q.name !== void 0 && (se.name = Q.name), Q.matrix !== void 0 ? (se.matrix.fromArray(Q.matrix), Q.matrixAutoUpdate !== void 0 && (se.matrixAutoUpdate = Q.matrixAutoUpdate), se.matrixAutoUpdate && se.matrix.decompose(se.position, se.quaternion, se.scale)) : (Q.position !== void 0 && se.position.fromArray(Q.position), Q.rotation !== void 0 && se.rotation.fromArray(Q.rotation), Q.quaternion !== void 0 && se.quaternion.fromArray(Q.quaternion), Q.scale !== void 0 && se.scale.fromArray(Q.scale)), Q.castShadow !== void 0 && (se.castShadow = Q.castShadow), Q.receiveShadow !== void 0 && (se.receiveShadow = Q.receiveShadow), Q.shadow && (Q.shadow.bias !== void 0 && (se.shadow.bias = Q.shadow.bias), Q.shadow.radius !== void 0 && (se.shadow.radius = Q.shadow.radius), Q.shadow.mapSize !== void 0 && se.shadow.mapSize.fromArray(Q.shadow.mapSize), Q.shadow.camera !== void 0 && (se.shadow.camera = this.parseObject(Q.shadow.camera))), Q.visible !== void 0 && (se.visible = Q.visible), Q.frustumCulled !== void 0 && (se.frustumCulled = Q.frustumCulled), Q.renderOrder !== void 0 && (se.renderOrder = Q.renderOrder), Q.userData !== void 0 && (se.userData = Q.userData), Q.layers !== void 0 && (se.layers.mask = Q.layers), Q.children !== void 0)
          for (var ve = Q.children, we = 0; we < ve.length; we++)
            se.add(this.parseObject(ve[we], te, ae));
        if (Q.type === "LOD")
          for (var Me = Q.levels, Qe = 0; Qe < Me.length; Qe++) {
            var Se = Me[Qe], Ge = se.getObjectByProperty("uuid", Se.object);
            Ge !== void 0 && se.addLevel(Ge, Se.distance);
          }
        return se;
      } });
      var Wc, Pd = { UVMapping: Ue, CubeReflectionMapping: Te, CubeRefractionMapping: Re, EquirectangularReflectionMapping: it, EquirectangularRefractionMapping: bt, SphericalReflectionMapping: Qt, CubeUVReflectionMapping: jt, CubeUVRefractionMapping: yr }, El = { RepeatWrapping: gr, ClampToEdgeWrapping: br, MirroredRepeatWrapping: mr }, bl = { NearestFilter: _r, NearestMipMapNearestFilter: en, NearestMipMapLinearFilter: Jn, LinearFilter: an, LinearMipMapNearestFilter: qn, LinearMipMapLinearFilter: $n };
      function yu(Q) {
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.manager = Q !== void 0 ? Q : ta, this.options = void 0;
      }
      function vu() {
        this.type = "ShapePath", this.color = new sn(), this.subPaths = [], this.currentPath = null;
      }
      function xu(Q) {
        this.type = "Font", this.data = Q;
      }
      function Fd(Q, te, ae, se, ue) {
        var le = ue.glyphs[Q] || ue.glyphs["?"];
        if (le) {
          var de, pe, ve, we, Me, Qe, Se, Ge, ze = new vu();
          if (le.o)
            for (var Ze = le._cachedOutline || (le._cachedOutline = le.o.split(" ")), nt = 0, ct = Ze.length; nt < ct; )
              switch (Ze[nt++]) {
                case "m":
                  de = Ze[nt++] * te + ae, pe = Ze[nt++] * te + se, ze.moveTo(de, pe);
                  break;
                case "l":
                  de = Ze[nt++] * te + ae, pe = Ze[nt++] * te + se, ze.lineTo(de, pe);
                  break;
                case "q":
                  ve = Ze[nt++] * te + ae, we = Ze[nt++] * te + se, Me = Ze[nt++] * te + ae, Qe = Ze[nt++] * te + se, ze.quadraticCurveTo(Me, Qe, ve, we);
                  break;
                case "b":
                  ve = Ze[nt++] * te + ae, we = Ze[nt++] * te + se, Me = Ze[nt++] * te + ae, Qe = Ze[nt++] * te + se, Se = Ze[nt++] * te + ae, Ge = Ze[nt++] * te + se, ze.bezierCurveTo(Me, Qe, Se, Ge, ve, we);
              }
          return { offsetX: le.ha * te, path: ze };
        }
      }
      function Bl(Q) {
        this.manager = Q !== void 0 ? Q : ta;
      }
      yu.prototype = { constructor: yu, setOptions: function(Q) {
        return this.options = Q, this;
      }, load: function(Q, te, ae, se) {
        Q === void 0 && (Q = ""), this.path !== void 0 && (Q = this.path + Q), Q = this.manager.resolveURL(Q);
        var ue = this, le = So.get(Q);
        if (le !== void 0)
          return ue.manager.itemStart(Q), setTimeout(function() {
            te && te(le), ue.manager.itemEnd(Q);
          }, 0), le;
        fetch(Q).then(function(de) {
          return de.blob();
        }).then(function(de) {
          return createImageBitmap(de, ue.options);
        }).then(function(de) {
          So.add(Q, de), te && te(de), ue.manager.itemEnd(Q);
        }).catch(function(de) {
          se && se(de), ue.manager.itemEnd(Q), ue.manager.itemError(Q);
        });
      }, setCrossOrigin: function() {
        return this;
      }, setPath: function(Q) {
        return this.path = Q, this;
      } }, Object.assign(vu.prototype, { moveTo: function(Q, te) {
        this.currentPath = new Ba(), this.subPaths.push(this.currentPath), this.currentPath.moveTo(Q, te);
      }, lineTo: function(Q, te) {
        this.currentPath.lineTo(Q, te);
      }, quadraticCurveTo: function(Q, te, ae, se) {
        this.currentPath.quadraticCurveTo(Q, te, ae, se);
      }, bezierCurveTo: function(Q, te, ae, se, ue, le) {
        this.currentPath.bezierCurveTo(Q, te, ae, se, ue, le);
      }, splineThru: function(Q) {
        this.currentPath.splineThru(Q);
      }, toShapes: function(Q, te) {
        function ae(pr) {
          for (var Or = [], Mr = 0, hr = pr.length; Mr < hr; Mr++) {
            var Cr = pr[Mr], lr = new Ka();
            lr.curves = Cr.curves, Or.push(lr);
          }
          return Or;
        }
        function se(pr, Or) {
          for (var Mr = Or.length, hr = !1, Cr = Mr - 1, lr = 0; lr < Mr; Cr = lr++) {
            var Yr = Or[Cr], Qr = Or[lr], un = Qr.x - Yr.x, yn = Qr.y - Yr.y;
            if (Math.abs(yn) > Number.EPSILON) {
              if (yn < 0 && (Yr = Or[lr], un = -un, Qr = Or[Cr], yn = -yn), pr.y < Yr.y || pr.y > Qr.y)
                continue;
              if (pr.y === Yr.y) {
                if (pr.x === Yr.x)
                  return !0;
              } else {
                var ni = yn * (pr.x - Yr.x) - un * (pr.y - Yr.y);
                if (ni === 0)
                  return !0;
                if (ni < 0)
                  continue;
                hr = !hr;
              }
            } else {
              if (pr.y !== Yr.y)
                continue;
              if (Qr.x <= pr.x && pr.x <= Yr.x || Yr.x <= pr.x && pr.x <= Qr.x)
                return !0;
            }
          }
          return hr;
        }
        var ue = $a.isClockWise, le = this.subPaths;
        if (le.length === 0)
          return [];
        if (te === !0)
          return ae(le);
        var de, pe, ve, we = [];
        if (le.length === 1)
          return pe = le[0], (ve = new Ka()).curves = pe.curves, we.push(ve), we;
        var Me = !ue(le[0].getPoints());
        Me = Q ? !Me : Me;
        var Qe, Se, Ge = [], ze = [], Ze = [], nt = 0;
        ze[nt] = void 0, Ze[nt] = [];
        for (var ct = 0, yt = le.length; ct < yt; ct++)
          de = ue(Qe = (pe = le[ct]).getPoints()), (de = Q ? !de : de) ? (!Me && ze[nt] && nt++, ze[nt] = { s: new Ka(), p: Qe }, ze[nt].s.curves = pe.curves, Me && nt++, Ze[nt] = []) : Ze[nt].push({ h: pe, p: Qe[0] });
        if (!ze[0])
          return ae(le);
        if (ze.length > 1) {
          for (var st = !1, Mt = [], Ot = 0, dt = ze.length; Ot < dt; Ot++)
            Ge[Ot] = [];
          for (Ot = 0, dt = ze.length; Ot < dt; Ot++)
            for (var wt = Ze[Ot], $t = 0; $t < wt.length; $t++) {
              for (var Pt = wt[$t], er = !0, Ht = 0; Ht < ze.length; Ht++)
                se(Pt.p, ze[Ht].p) && (Ot !== Ht && Mt.push({ froms: Ot, tos: Ht, hole: $t }), er ? (er = !1, Ge[Ht].push(Pt)) : st = !0);
              er && Ge[Ot].push(Pt);
            }
          Mt.length > 0 && (st || (Ze = Ge));
        }
        ct = 0;
        for (var ir = ze.length; ct < ir; ct++) {
          ve = ze[ct].s, we.push(ve);
          for (var dr = 0, vr = (Se = Ze[ct]).length; dr < vr; dr++)
            ve.holes.push(Se[dr].h);
        }
        return we;
      } }), Object.assign(xu.prototype, { isFont: !0, generateShapes: function(Q, te) {
        te === void 0 && (te = 100);
        for (var ae = [], se = function(de, pe, ve) {
          for (var we = Array.from ? Array.from(de) : String(de).split(""), Me = pe / ve.resolution, Qe = (ve.boundingBox.yMax - ve.boundingBox.yMin + ve.underlineThickness) * Me, Se = [], Ge = 0, ze = 0, Ze = 0; Ze < we.length; Ze++) {
            var nt = we[Ze];
            if (nt === `
`)
              Ge = 0, ze -= Qe;
            else {
              var ct = Fd(nt, Me, Ge, ze, ve);
              Ge += ct.offsetX, Se.push(ct.path);
            }
          }
          return Se;
        }(Q, te, this.data), ue = 0, le = se.length; ue < le; ue++)
          Array.prototype.push.apply(ae, se[ue].toShapes());
        return ae;
      } }), Object.assign(Bl.prototype, { load: function(Q, te, ae, se) {
        var ue = this, le = new ya(this.manager);
        le.setPath(this.path), le.load(Q, function(de) {
          var pe;
          try {
            pe = JSON.parse(de);
          } catch {
            console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), pe = JSON.parse(de.substring(65, de.length - 2));
          }
          var ve = ue.parse(pe);
          te && te(ve);
        }, ae, se);
      }, parse: function(Q) {
        return new xu(Q);
      }, setPath: function(Q) {
        return this.path = Q, this;
      } });
      var Eu = { getContext: function() {
        return Wc === void 0 && (Wc = new (window.AudioContext || window.webkitAudioContext)()), Wc;
      }, setContext: function(Q) {
        Wc = Q;
      } };
      function bu(Q) {
        this.manager = Q !== void 0 ? Q : ta;
      }
      function wl() {
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = 0.064, this.cameraL = new fi(), this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new fi(), this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1;
      }
      function dc(Q, te, ae) {
        jr.call(this), this.type = "CubeCamera";
        var se = new fi(90, 1, Q, te);
        se.up.set(0, -1, 0), se.lookAt(new mt(1, 0, 0)), this.add(se);
        var ue = new fi(90, 1, Q, te);
        ue.up.set(0, -1, 0), ue.lookAt(new mt(-1, 0, 0)), this.add(ue);
        var le = new fi(90, 1, Q, te);
        le.up.set(0, 0, 1), le.lookAt(new mt(0, 1, 0)), this.add(le);
        var de = new fi(90, 1, Q, te);
        de.up.set(0, 0, -1), de.lookAt(new mt(0, -1, 0)), this.add(de);
        var pe = new fi(90, 1, Q, te);
        pe.up.set(0, -1, 0), pe.lookAt(new mt(0, 0, 1)), this.add(pe);
        var ve = new fi(90, 1, Q, te);
        ve.up.set(0, -1, 0), ve.lookAt(new mt(0, 0, -1)), this.add(ve);
        var we = { format: Rt, magFilter: an, minFilter: an };
        this.renderTarget = new Fo(ae, ae, we), this.renderTarget.texture.name = "CubeCamera", this.update = function(Me, Qe) {
          this.parent === null && this.updateMatrixWorld();
          var Se = this.renderTarget, Ge = Se.texture.generateMipmaps;
          Se.texture.generateMipmaps = !1, Se.activeCubeFace = 0, Me.render(Qe, se, Se), Se.activeCubeFace = 1, Me.render(Qe, ue, Se), Se.activeCubeFace = 2, Me.render(Qe, le, Se), Se.activeCubeFace = 3, Me.render(Qe, de, Se), Se.activeCubeFace = 4, Me.render(Qe, pe, Se), Se.texture.generateMipmaps = Ge, Se.activeCubeFace = 5, Me.render(Qe, ve, Se), Me.setRenderTarget(null);
        }, this.clear = function(Me, Qe, Se, Ge) {
          for (var ze = this.renderTarget, Ze = 0; Ze < 6; Ze++)
            ze.activeCubeFace = Ze, Me.setRenderTarget(ze), Me.clear(Qe, Se, Ge);
          Me.setRenderTarget(null);
        };
      }
      function Bu() {
        jr.call(this), this.type = "AudioListener", this.context = Eu.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null;
      }
      function ds(Q) {
        jr.call(this), this.type = "Audio", this.context = Q.context, this.gain = this.context.createGain(), this.gain.connect(Q.getInput()), this.autoplay = !1, this.buffer = null, this.loop = !1, this.startTime = 0, this.offset = 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this.filters = [];
      }
      function wu(Q) {
        ds.call(this, Q), this.panner = this.context.createPanner(), this.panner.connect(this.gain);
      }
      function _u(Q, te) {
        this.analyser = Q.context.createAnalyser(), this.analyser.fftSize = te !== void 0 ? te : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), Q.getOutput().connect(this.analyser);
      }
      function Cu(Q, te, ae) {
        this.binding = Q, this.valueSize = ae;
        var se, ue = Float64Array;
        switch (te) {
          case "quaternion":
            se = this._slerp;
            break;
          case "string":
          case "bool":
            ue = Array, se = this._select;
            break;
          default:
            se = this._lerp;
        }
        this.buffer = new ue(4 * ae), this._mixBufferRegion = se, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0;
      }
      Object.assign(bu.prototype, { load: function(Q, te, ae, se) {
        var ue = new ya(this.manager);
        ue.setResponseType("arraybuffer"), ue.load(Q, function(le) {
          var de = le.slice(0);
          Eu.getContext().decodeAudioData(de, function(pe) {
            te(pe);
          });
        }, ae, se);
      } }), Object.assign(wl.prototype, { update: function() {
        var Q, te, ae, se, ue, le, de, pe, ve = new An(), we = new An();
        return function(Me) {
          if (Q !== this || te !== Me.focus || ae !== Me.fov || se !== Me.aspect * this.aspect || ue !== Me.near || le !== Me.far || de !== Me.zoom || pe !== this.eyeSep) {
            Q = this, te = Me.focus, ae = Me.fov, se = Me.aspect * this.aspect, ue = Me.near, le = Me.far, de = Me.zoom;
            var Qe, Se, Ge = Me.projectionMatrix.clone(), ze = (pe = this.eyeSep / 2) * ue / te, Ze = ue * Math.tan(Cn.DEG2RAD * ae * 0.5) / de;
            we.elements[12] = -pe, ve.elements[12] = pe, Qe = -Ze * se + ze, Se = Ze * se + ze, Ge.elements[0] = 2 * ue / (Se - Qe), Ge.elements[8] = (Se + Qe) / (Se - Qe), this.cameraL.projectionMatrix.copy(Ge), Qe = -Ze * se - ze, Se = Ze * se - ze, Ge.elements[0] = 2 * ue / (Se - Qe), Ge.elements[8] = (Se + Qe) / (Se - Qe), this.cameraR.projectionMatrix.copy(Ge);
          }
          this.cameraL.matrixWorld.copy(Me.matrixWorld).multiply(we), this.cameraR.matrixWorld.copy(Me.matrixWorld).multiply(ve);
        };
      }() }), dc.prototype = Object.create(jr.prototype), dc.prototype.constructor = dc, Bu.prototype = Object.assign(Object.create(jr.prototype), { constructor: Bu, getInput: function() {
        return this.gain;
      }, removeFilter: function() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
      }, getFilter: function() {
        return this.filter;
      }, setFilter: function(Q) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = Q, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
      }, getMasterVolume: function() {
        return this.gain.gain.value;
      }, setMasterVolume: function(Q) {
        return this.gain.gain.setTargetAtTime(Q, this.context.currentTime, 0.01), this;
      }, updateMatrixWorld: function() {
        var Q = new mt(), te = new ci(), ae = new mt(), se = new mt();
        return function(ue) {
          jr.prototype.updateMatrixWorld.call(this, ue);
          var le = this.context.listener, de = this.up;
          this.matrixWorld.decompose(Q, te, ae), se.set(0, 0, -1).applyQuaternion(te), le.positionX ? (le.positionX.setValueAtTime(Q.x, this.context.currentTime), le.positionY.setValueAtTime(Q.y, this.context.currentTime), le.positionZ.setValueAtTime(Q.z, this.context.currentTime), le.forwardX.setValueAtTime(se.x, this.context.currentTime), le.forwardY.setValueAtTime(se.y, this.context.currentTime), le.forwardZ.setValueAtTime(se.z, this.context.currentTime), le.upX.setValueAtTime(de.x, this.context.currentTime), le.upY.setValueAtTime(de.y, this.context.currentTime), le.upZ.setValueAtTime(de.z, this.context.currentTime)) : (le.setPosition(Q.x, Q.y, Q.z), le.setOrientation(se.x, se.y, se.z, de.x, de.y, de.z));
        };
      }() }), ds.prototype = Object.assign(Object.create(jr.prototype), { constructor: ds, getOutput: function() {
        return this.gain;
      }, setNodeSource: function(Q) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = Q, this.connect(), this;
      }, setMediaElementSource: function(Q) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(Q), this.connect(), this;
      }, setBuffer: function(Q) {
        return this.buffer = Q, this.sourceType = "buffer", this.autoplay && this.play(), this;
      }, play: function() {
        if (this.isPlaying !== !0) {
          if (this.hasPlaybackControl !== !1) {
            var Q = this.context.createBufferSource();
            return Q.buffer = this.buffer, Q.loop = this.loop, Q.onended = this.onEnded.bind(this), Q.playbackRate.setValueAtTime(this.playbackRate, this.startTime), this.startTime = this.context.currentTime, Q.start(this.startTime, this.offset), this.isPlaying = !0, this.source = Q, this.connect();
          }
          console.warn("THREE.Audio: this Audio has no playback control.");
        } else
          console.warn("THREE.Audio: Audio is already playing.");
      }, pause: function() {
        if (this.hasPlaybackControl !== !1)
          return this.isPlaying === !0 && (this.source.stop(), this.source.onended = null, this.offset += (this.context.currentTime - this.startTime) * this.playbackRate, this.isPlaying = !1), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, stop: function() {
        if (this.hasPlaybackControl !== !1)
          return this.source.stop(), this.source.onended = null, this.offset = 0, this.isPlaying = !1, this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, connect: function() {
        if (this.filters.length > 0) {
          this.source.connect(this.filters[0]);
          for (var Q = 1, te = this.filters.length; Q < te; Q++)
            this.filters[Q - 1].connect(this.filters[Q]);
          this.filters[this.filters.length - 1].connect(this.getOutput());
        } else
          this.source.connect(this.getOutput());
        return this;
      }, disconnect: function() {
        if (this.filters.length > 0) {
          this.source.disconnect(this.filters[0]);
          for (var Q = 1, te = this.filters.length; Q < te; Q++)
            this.filters[Q - 1].disconnect(this.filters[Q]);
          this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else
          this.source.disconnect(this.getOutput());
        return this;
      }, getFilters: function() {
        return this.filters;
      }, setFilters: function(Q) {
        return Q || (Q = []), this.isPlaying === !0 ? (this.disconnect(), this.filters = Q, this.connect()) : this.filters = Q, this;
      }, getFilter: function() {
        return this.getFilters()[0];
      }, setFilter: function(Q) {
        return this.setFilters(Q ? [Q] : []);
      }, setPlaybackRate: function(Q) {
        if (this.hasPlaybackControl !== !1)
          return this.playbackRate = Q, this.isPlaying === !0 && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getPlaybackRate: function() {
        return this.playbackRate;
      }, onEnded: function() {
        this.isPlaying = !1;
      }, getLoop: function() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
      }, setLoop: function(Q) {
        if (this.hasPlaybackControl !== !1)
          return this.loop = Q, this.isPlaying === !0 && (this.source.loop = this.loop), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getVolume: function() {
        return this.gain.gain.value;
      }, setVolume: function(Q) {
        return this.gain.gain.setTargetAtTime(Q, this.context.currentTime, 0.01), this;
      } }), wu.prototype = Object.assign(Object.create(ds.prototype), { constructor: wu, getOutput: function() {
        return this.panner;
      }, getRefDistance: function() {
        return this.panner.refDistance;
      }, setRefDistance: function(Q) {
        return this.panner.refDistance = Q, this;
      }, getRolloffFactor: function() {
        return this.panner.rolloffFactor;
      }, setRolloffFactor: function(Q) {
        return this.panner.rolloffFactor = Q, this;
      }, getDistanceModel: function() {
        return this.panner.distanceModel;
      }, setDistanceModel: function(Q) {
        return this.panner.distanceModel = Q, this;
      }, getMaxDistance: function() {
        return this.panner.maxDistance;
      }, setMaxDistance: function(Q) {
        return this.panner.maxDistance = Q, this;
      }, setDirectionalCone: function(Q, te, ae) {
        return this.panner.coneInnerAngle = Q, this.panner.coneOuterAngle = te, this.panner.coneOuterGain = ae, this;
      }, updateMatrixWorld: function() {
        var Q = new mt(), te = new ci(), ae = new mt(), se = new mt();
        return function(ue) {
          jr.prototype.updateMatrixWorld.call(this, ue);
          var le = this.panner;
          this.matrixWorld.decompose(Q, te, ae), se.set(0, 0, 1).applyQuaternion(te), le.setPosition(Q.x, Q.y, Q.z), le.setOrientation(se.x, se.y, se.z);
        };
      }() }), Object.assign(_u.prototype, { getFrequencyData: function() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
      }, getAverageFrequency: function() {
        for (var Q = 0, te = this.getFrequencyData(), ae = 0; ae < te.length; ae++)
          Q += te[ae];
        return Q / te.length;
      } }), Object.assign(Cu.prototype, { accumulate: function(Q, te) {
        var ae = this.buffer, se = this.valueSize, ue = Q * se + se, le = this.cumulativeWeight;
        if (le === 0) {
          for (var de = 0; de !== se; ++de)
            ae[ue + de] = ae[de];
          le = te;
        } else {
          var pe = te / (le += te);
          this._mixBufferRegion(ae, ue, 0, pe, se);
        }
        this.cumulativeWeight = le;
      }, apply: function(Q) {
        var te = this.valueSize, ae = this.buffer, se = Q * te + te, ue = this.cumulativeWeight, le = this.binding;
        if (this.cumulativeWeight = 0, ue < 1) {
          var de = 3 * te;
          this._mixBufferRegion(ae, se, de, 1 - ue, te);
        }
        for (var pe = te, ve = te + te; pe !== ve; ++pe)
          if (ae[pe] !== ae[pe + te]) {
            le.setValue(ae, se);
            break;
          }
      }, saveOriginalState: function() {
        var Q = this.binding, te = this.buffer, ae = this.valueSize, se = 3 * ae;
        Q.getValue(te, se);
        for (var ue = ae, le = se; ue !== le; ++ue)
          te[ue] = te[se + ue % ae];
        this.cumulativeWeight = 0;
      }, restoreOriginalState: function() {
        var Q = 3 * this.valueSize;
        this.binding.setValue(this.buffer, Q);
      }, _select: function(Q, te, ae, se, ue) {
        if (se >= 0.5)
          for (var le = 0; le !== ue; ++le)
            Q[te + le] = Q[ae + le];
      }, _slerp: function(Q, te, ae, se) {
        ci.slerpFlat(Q, te, Q, te, Q, ae, se);
      }, _lerp: function(Q, te, ae, se, ue) {
        for (var le = 1 - se, de = 0; de !== ue; ++de) {
          var pe = te + de;
          Q[pe] = Q[pe] * le + Q[ae + de] * se;
        }
      } });
      var Su, _l;
      function Cl(Q, te, ae) {
        var se = ae || qi.parseTrackName(te);
        this._targetGroup = Q, this._bindings = Q.subscribe_(te, se);
      }
      function qi(Q, te, ae) {
        this.path = te, this.parsedPath = ae || qi.parseTrackName(te), this.node = qi.findNode(Q, this.parsedPath.nodeName) || Q, this.rootNode = Q;
      }
      function Sl() {
        this.uuid = Cn.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        var Q = {};
        this._indicesByUUID = Q;
        for (var te = 0, ae = arguments.length; te !== ae; ++te)
          Q[arguments[te].uuid] = te;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        var se = this;
        this.stats = { objects: { get total() {
          return se._objects.length;
        }, get inUse() {
          return this.total - se.nCachedObjects_;
        } }, get bindingsPerObject() {
          return se._bindings.length;
        } };
      }
      function Il(Q, te, ae) {
        this._mixer = Q, this._clip = te, this._localRoot = ae || null;
        for (var se = te.tracks, ue = se.length, le = new Array(ue), de = { endingStart: Kr, endingEnd: Kr }, pe = 0; pe !== ue; ++pe) {
          var ve = se[pe].createInterpolant(null);
          le[pe] = ve, ve.settings = de;
        }
        this._interpolantSettings = de, this._interpolants = le, this._propertyBindings = new Array(ue), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Qn, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
      }
      function Iu(Q) {
        this._root = Q, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
      }
      function Jc(Q) {
        typeof Q == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), Q = arguments[1]), this.value = Q;
      }
      function Tu() {
        Jr.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0;
      }
      function Ru(Q, te, ae) {
        ho.call(this, Q, te), this.meshPerAttribute = ae || 1;
      }
      function Mu(Q, te, ae) {
        Nn.call(this, Q, te), this.meshPerAttribute = ae || 1;
      }
      function Tl(Q, te, ae, se) {
        this.ray = new fo(Q, te), this.near = ae || 0, this.far = se || 1 / 0, this.params = { Mesh: {}, Line: {}, LOD: {}, Points: { threshold: 1 }, Sprite: {} }, Object.defineProperties(this.params, { PointCloud: { get: function() {
          return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points;
        } } });
      }
      function Rl(Q, te) {
        return Q.distance - te.distance;
      }
      function Nu(Q, te, ae, se) {
        if (Q.visible !== !1 && (Q.raycast(te, ae), se === !0))
          for (var ue = Q.children, le = 0, de = ue.length; le < de; le++)
            Nu(ue[le], te, ae, !0);
      }
      function Ml(Q) {
        this.autoStart = Q === void 0 || Q, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
      }
      function Nl(Q, te, ae) {
        return this.radius = Q !== void 0 ? Q : 1, this.phi = te !== void 0 ? te : 0, this.theta = ae !== void 0 ? ae : 0, this;
      }
      function Ql(Q, te, ae) {
        return this.radius = Q !== void 0 ? Q : 1, this.theta = te !== void 0 ? te : 0, this.y = ae !== void 0 ? ae : 0, this;
      }
      function Qu(Q, te) {
        this.min = Q !== void 0 ? Q : new wr(1 / 0, 1 / 0), this.max = te !== void 0 ? te : new wr(-1 / 0, -1 / 0);
      }
      function ku(Q, te) {
        this.start = Q !== void 0 ? Q : new mt(), this.end = te !== void 0 ? te : new mt();
      }
      function fc(Q) {
        jr.call(this), this.material = Q, this.render = function() {
        };
      }
      function hc(Q, te, ae, se) {
        this.object = Q, this.size = te !== void 0 ? te : 1;
        var ue = ae !== void 0 ? ae : 16711680, le = se !== void 0 ? se : 1, de = 0, pe = this.object.geometry;
        pe && pe.isGeometry ? de = 3 * pe.faces.length : pe && pe.isBufferGeometry && (de = pe.attributes.normal.count);
        var ve = new Jr(), we = new Gr(2 * de * 3, 3);
        ve.addAttribute("position", we), ri.call(this, ve, new ei({ color: ue, linewidth: le })), this.matrixAutoUpdate = !1, this.update();
      }
      function fs(Q, te) {
        jr.call(this), this.light = Q, this.light.updateMatrixWorld(), this.matrix = Q.matrixWorld, this.matrixAutoUpdate = !1, this.color = te;
        for (var ae = new Jr(), se = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], ue = 0, le = 1; ue < 32; ue++, le++) {
          var de = ue / 32 * Math.PI * 2, pe = le / 32 * Math.PI * 2;
          se.push(Math.cos(de), Math.sin(de), 1, Math.cos(pe), Math.sin(pe), 1);
        }
        ae.addAttribute("position", new Gr(se, 3));
        var ve = new ei({ fog: !1 });
        this.cone = new ri(ae, ve), this.add(this.cone), this.update();
      }
      function hs(Q) {
        for (var te = function Me(Qe) {
          var Se = [];
          Qe && Qe.isBone && Se.push(Qe);
          for (var Ge = 0; Ge < Qe.children.length; Ge++)
            Se.push.apply(Se, Me(Qe.children[Ge]));
          return Se;
        }(Q), ae = new Jr(), se = [], ue = [], le = new sn(0, 0, 1), de = new sn(0, 1, 0), pe = 0; pe < te.length; pe++) {
          var ve = te[pe];
          ve.parent && ve.parent.isBone && (se.push(0, 0, 0), se.push(0, 0, 0), ue.push(le.r, le.g, le.b), ue.push(de.r, de.g, de.b));
        }
        ae.addAttribute("position", new Gr(se, 3)), ae.addAttribute("color", new Gr(ue, 3));
        var we = new ei({ vertexColors: gt, depthTest: !1, depthWrite: !1, transparent: !0 });
        ri.call(this, ae, we), this.root = Q, this.bones = te, this.matrix = Q.matrixWorld, this.matrixAutoUpdate = !1;
      }
      function ps(Q, te, ae) {
        this.light = Q, this.light.updateMatrixWorld(), this.color = ae;
        var se = new mo(te, 4, 2), ue = new ia({ wireframe: !0, fog: !1 });
        Xi.call(this, se, ue), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
      }
      function As(Q, te) {
        jr.call(this), this.light = Q, this.light.updateMatrixWorld(), this.matrix = Q.matrixWorld, this.matrixAutoUpdate = !1, this.color = te;
        var ae = new ei({ fog: !1 }), se = new Jr();
        se.addAttribute("position", new Nn(new Float32Array(15), 3)), this.line = new Zi(se, ae), this.add(this.line), this.update();
      }
      function gs(Q, te, ae) {
        jr.call(this), this.light = Q, this.light.updateMatrixWorld(), this.matrix = Q.matrixWorld, this.matrixAutoUpdate = !1, this.color = ae;
        var se = new po(te);
        se.rotateY(0.5 * Math.PI), this.material = new ia({ wireframe: !0, fog: !1 }), this.color === void 0 && (this.material.vertexColors = gt);
        var ue = se.getAttribute("position"), le = new Float32Array(3 * ue.count);
        se.addAttribute("color", new Nn(le, 3)), this.add(new Xi(se, this.material)), this.update();
      }
      function pc(Q, te, ae, se) {
        Q = Q || 10, te = te || 10, ae = new sn(ae !== void 0 ? ae : 4473924), se = new sn(se !== void 0 ? se : 8947848);
        for (var ue = te / 2, le = Q / te, de = Q / 2, pe = [], ve = [], we = 0, Me = 0, Qe = -de; we <= te; we++, Qe += le) {
          pe.push(-de, 0, Qe, de, 0, Qe), pe.push(Qe, 0, -de, Qe, 0, de);
          var Se = we === ue ? ae : se;
          Se.toArray(ve, Me), Me += 3, Se.toArray(ve, Me), Me += 3, Se.toArray(ve, Me), Me += 3, Se.toArray(ve, Me), Me += 3;
        }
        var Ge = new Jr();
        Ge.addAttribute("position", new Gr(pe, 3)), Ge.addAttribute("color", new Gr(ve, 3));
        var ze = new ei({ vertexColors: gt });
        ri.call(this, Ge, ze);
      }
      function Xc(Q, te, ae, se, ue, le) {
        Q = Q || 10, te = te || 16, ae = ae || 8, se = se || 64, ue = new sn(ue !== void 0 ? ue : 4473924), le = new sn(le !== void 0 ? le : 8947848);
        var de, pe, ve, we, Me, Qe, Se, Ge = [], ze = [];
        for (we = 0; we <= te; we++)
          ve = we / te * (2 * Math.PI), de = Math.sin(ve) * Q, pe = Math.cos(ve) * Q, Ge.push(0, 0, 0), Ge.push(de, 0, pe), Se = 1 & we ? ue : le, ze.push(Se.r, Se.g, Se.b), ze.push(Se.r, Se.g, Se.b);
        for (we = 0; we <= ae; we++)
          for (Se = 1 & we ? ue : le, Qe = Q - Q / ae * we, Me = 0; Me < se; Me++)
            ve = Me / se * (2 * Math.PI), de = Math.sin(ve) * Qe, pe = Math.cos(ve) * Qe, Ge.push(de, 0, pe), ze.push(Se.r, Se.g, Se.b), ve = (Me + 1) / se * (2 * Math.PI), de = Math.sin(ve) * Qe, pe = Math.cos(ve) * Qe, Ge.push(de, 0, pe), ze.push(Se.r, Se.g, Se.b);
        var Ze = new Jr();
        Ze.addAttribute("position", new Gr(Ge, 3)), Ze.addAttribute("color", new Gr(ze, 3));
        var nt = new ei({ vertexColors: gt });
        ri.call(this, Ze, nt);
      }
      function Ac(Q, te, ae, se) {
        this.object = Q, this.size = te !== void 0 ? te : 1;
        var ue = ae !== void 0 ? ae : 16776960, le = se !== void 0 ? se : 1, de = 0, pe = this.object.geometry;
        pe && pe.isGeometry ? de = pe.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
        var ve = new Jr(), we = new Gr(2 * de * 3, 3);
        ve.addAttribute("position", we), ri.call(this, ve, new ei({ color: ue, linewidth: le })), this.matrixAutoUpdate = !1, this.update();
      }
      function ms(Q, te, ae) {
        jr.call(this), this.light = Q, this.light.updateMatrixWorld(), this.matrix = Q.matrixWorld, this.matrixAutoUpdate = !1, this.color = ae, te === void 0 && (te = 1);
        var se = new Jr();
        se.addAttribute("position", new Gr([-te, te, 0, te, te, 0, te, -te, 0, -te, -te, 0, -te, te, 0], 3));
        var ue = new ei({ fog: !1 });
        this.lightPlane = new Zi(se, ue), this.add(this.lightPlane), (se = new Jr()).addAttribute("position", new Gr([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new Zi(se, ue), this.add(this.targetLine), this.update();
      }
      function gc(Q) {
        var te = new Jr(), ae = new ei({ color: 16777215, vertexColors: rt }), se = [], ue = [], le = {}, de = new sn(16755200), pe = new sn(16711680), ve = new sn(43775), we = new sn(16777215), Me = new sn(3355443);
        function Qe(Ge, ze, Ze) {
          Se(Ge, Ze), Se(ze, Ze);
        }
        function Se(Ge, ze) {
          se.push(0, 0, 0), ue.push(ze.r, ze.g, ze.b), le[Ge] === void 0 && (le[Ge] = []), le[Ge].push(se.length / 3 - 1);
        }
        Qe("n1", "n2", de), Qe("n2", "n4", de), Qe("n4", "n3", de), Qe("n3", "n1", de), Qe("f1", "f2", de), Qe("f2", "f4", de), Qe("f4", "f3", de), Qe("f3", "f1", de), Qe("n1", "f1", de), Qe("n2", "f2", de), Qe("n3", "f3", de), Qe("n4", "f4", de), Qe("p", "n1", pe), Qe("p", "n2", pe), Qe("p", "n3", pe), Qe("p", "n4", pe), Qe("u1", "u2", ve), Qe("u2", "u3", ve), Qe("u3", "u1", ve), Qe("c", "t", we), Qe("p", "c", Me), Qe("cn1", "cn2", Me), Qe("cn3", "cn4", Me), Qe("cf1", "cf2", Me), Qe("cf3", "cf4", Me), te.addAttribute("position", new Gr(se, 3)), te.addAttribute("color", new Gr(ue, 3)), ri.call(this, te, ae), this.camera = Q, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = Q.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = le, this.update();
      }
      function To(Q, te) {
        this.object = Q, te === void 0 && (te = 16776960);
        var ae = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), se = new Float32Array(24), ue = new Jr();
        ue.setIndex(new Nn(ae, 1)), ue.addAttribute("position", new Nn(se, 3)), ri.call(this, ue, new ei({ color: te })), this.matrixAutoUpdate = !1, this.update();
      }
      function mc(Q, te) {
        this.type = "Box3Helper", this.box = Q;
        var ae = te !== void 0 ? te : 16776960, se = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), ue = new Jr();
        ue.setIndex(new Nn(se, 1)), ue.addAttribute("position", new Gr([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), ri.call(this, ue, new ei({ color: ae })), this.geometry.computeBoundingSphere();
      }
      function yc(Q, te, ae) {
        this.type = "PlaneHelper", this.plane = Q, this.size = te === void 0 ? 1 : te;
        var se = ae !== void 0 ? ae : 16776960, ue = new Jr();
        ue.addAttribute("position", new Gr([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), ue.computeBoundingSphere(), Zi.call(this, ue, new ei({ color: se }));
        var le = new Jr();
        le.addAttribute("position", new Gr([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), le.computeBoundingSphere(), this.add(new Xi(le, new ia({ color: se, opacity: 0.2, transparent: !0, depthWrite: !1 })));
      }
      function Ro(Q, te, ae, se, ue, le) {
        jr.call(this), se === void 0 && (se = 16776960), ae === void 0 && (ae = 1), ue === void 0 && (ue = 0.2 * ae), le === void 0 && (le = 0.2 * ue), Su === void 0 && ((Su = new Jr()).addAttribute("position", new Gr([0, 0, 0, 0, 1, 0], 3)), (_l = new Va(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)), this.position.copy(te), this.line = new Zi(Su, new ei({ color: se })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new Xi(_l, new ia({ color: se })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(Q), this.setLength(ae, ue, le);
      }
      function vc(Q) {
        var te = [0, 0, 0, Q = Q || 1, 0, 0, 0, 0, 0, 0, Q, 0, 0, 0, 0, 0, 0, Q], ae = new Jr();
        ae.addAttribute("position", new Gr(te, 3)), ae.addAttribute("color", new Gr([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1], 3));
        var se = new ei({ vertexColors: gt });
        ri.call(this, ae, se);
      }
      function Gd(Q, te, ae, se, ue, le, de) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new qa(Q, te, ae, ue, le, de);
      }
      Object.assign(Cl.prototype, { getValue: function(Q, te) {
        this.bind();
        var ae = this._targetGroup.nCachedObjects_, se = this._bindings[ae];
        se !== void 0 && se.getValue(Q, te);
      }, setValue: function(Q, te) {
        for (var ae = this._bindings, se = this._targetGroup.nCachedObjects_, ue = ae.length; se !== ue; ++se)
          ae[se].setValue(Q, te);
      }, bind: function() {
        for (var Q = this._bindings, te = this._targetGroup.nCachedObjects_, ae = Q.length; te !== ae; ++te)
          Q[te].bind();
      }, unbind: function() {
        for (var Q = this._bindings, te = this._targetGroup.nCachedObjects_, ae = Q.length; te !== ae; ++te)
          Q[te].unbind();
      } }), Object.assign(qi, { Composite: Cl, create: function(Q, te, ae) {
        return Q && Q.isAnimationObjectGroup ? new qi.Composite(Q, te, ae) : new qi(Q, te, ae);
      }, sanitizeNodeName: function() {
        var Q = new RegExp("[\\[\\]\\.:\\/]", "g");
        return function(te) {
          return te.replace(/\s/g, "_").replace(Q, "");
        };
      }(), parseTrackName: function() {
        var Q = "[^\\[\\]\\.:\\/]", te = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]", ae = /((?:WC+[\/:])*)/.source.replace("WC", Q), se = /(WCOD+)?/.source.replace("WCOD", te), ue = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Q), le = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Q), de = new RegExp("^" + ae + se + ue + le + "$"), pe = ["material", "materials", "bones"];
        return function(ve) {
          var we = de.exec(ve);
          if (!we)
            throw new Error("PropertyBinding: Cannot parse trackName: " + ve);
          var Me = { nodeName: we[2], objectName: we[3], objectIndex: we[4], propertyName: we[5], propertyIndex: we[6] }, Qe = Me.nodeName && Me.nodeName.lastIndexOf(".");
          if (Qe !== void 0 && Qe !== -1) {
            var Se = Me.nodeName.substring(Qe + 1);
            pe.indexOf(Se) !== -1 && (Me.nodeName = Me.nodeName.substring(0, Qe), Me.objectName = Se);
          }
          if (Me.propertyName === null || Me.propertyName.length === 0)
            throw new Error("PropertyBinding: can not parse propertyName from trackName: " + ve);
          return Me;
        };
      }(), findNode: function(Q, te) {
        if (!te || te === "" || te === "root" || te === "." || te === -1 || te === Q.name || te === Q.uuid)
          return Q;
        if (Q.skeleton) {
          var ae = Q.skeleton.getBoneByName(te);
          if (ae !== void 0)
            return ae;
        }
        if (Q.children) {
          var se = function(le) {
            for (var de = 0; de < le.length; de++) {
              var pe = le[de];
              if (pe.name === te || pe.uuid === te)
                return pe;
              var ve = se(pe.children);
              if (ve)
                return ve;
            }
            return null;
          }, ue = se(Q.children);
          if (ue)
            return ue;
        }
        return null;
      } }), Object.assign(qi.prototype, { _getValue_unavailable: function() {
      }, _setValue_unavailable: function() {
      }, BindingType: { Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3 }, Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 }, GetterByBindingType: [function(Q, te) {
        Q[te] = this.node[this.propertyName];
      }, function(Q, te) {
        for (var ae = this.resolvedProperty, se = 0, ue = ae.length; se !== ue; ++se)
          Q[te++] = ae[se];
      }, function(Q, te) {
        Q[te] = this.resolvedProperty[this.propertyIndex];
      }, function(Q, te) {
        this.resolvedProperty.toArray(Q, te);
      }], SetterByBindingTypeAndVersioning: [[function(Q, te) {
        this.targetObject[this.propertyName] = Q[te];
      }, function(Q, te) {
        this.targetObject[this.propertyName] = Q[te], this.targetObject.needsUpdate = !0;
      }, function(Q, te) {
        this.targetObject[this.propertyName] = Q[te], this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Q, te) {
        for (var ae = this.resolvedProperty, se = 0, ue = ae.length; se !== ue; ++se)
          ae[se] = Q[te++];
      }, function(Q, te) {
        for (var ae = this.resolvedProperty, se = 0, ue = ae.length; se !== ue; ++se)
          ae[se] = Q[te++];
        this.targetObject.needsUpdate = !0;
      }, function(Q, te) {
        for (var ae = this.resolvedProperty, se = 0, ue = ae.length; se !== ue; ++se)
          ae[se] = Q[te++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Q, te) {
        this.resolvedProperty[this.propertyIndex] = Q[te];
      }, function(Q, te) {
        this.resolvedProperty[this.propertyIndex] = Q[te], this.targetObject.needsUpdate = !0;
      }, function(Q, te) {
        this.resolvedProperty[this.propertyIndex] = Q[te], this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Q, te) {
        this.resolvedProperty.fromArray(Q, te);
      }, function(Q, te) {
        this.resolvedProperty.fromArray(Q, te), this.targetObject.needsUpdate = !0;
      }, function(Q, te) {
        this.resolvedProperty.fromArray(Q, te), this.targetObject.matrixWorldNeedsUpdate = !0;
      }]], getValue: function(Q, te) {
        this.bind(), this.getValue(Q, te);
      }, setValue: function(Q, te) {
        this.bind(), this.setValue(Q, te);
      }, bind: function() {
        var Q = this.node, te = this.parsedPath, ae = te.objectName, se = te.propertyName, ue = te.propertyIndex;
        if (Q || (Q = qi.findNode(this.rootNode, te.nodeName) || this.rootNode, this.node = Q), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, Q) {
          if (ae) {
            var le = te.objectIndex;
            switch (ae) {
              case "materials":
                if (!Q.material)
                  return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                if (!Q.material.materials)
                  return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                Q = Q.material.materials;
                break;
              case "bones":
                if (!Q.skeleton)
                  return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                Q = Q.skeleton.bones;
                for (var de = 0; de < Q.length; de++)
                  if (Q[de].name === le) {
                    le = de;
                    break;
                  }
                break;
              default:
                if (Q[ae] === void 0)
                  return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                Q = Q[ae];
            }
            if (le !== void 0) {
              if (Q[le] === void 0)
                return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, Q);
              Q = Q[le];
            }
          }
          var pe = Q[se];
          if (pe !== void 0) {
            var ve = this.Versioning.None;
            Q.needsUpdate !== void 0 ? (ve = this.Versioning.NeedsUpdate, this.targetObject = Q) : Q.matrixWorldNeedsUpdate !== void 0 && (ve = this.Versioning.MatrixWorldNeedsUpdate, this.targetObject = Q);
            var we = this.BindingType.Direct;
            if (ue !== void 0) {
              if (se === "morphTargetInfluences") {
                if (!Q.geometry)
                  return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                if (Q.geometry.isBufferGeometry) {
                  if (!Q.geometry.morphAttributes)
                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                  for (de = 0; de < this.node.geometry.morphAttributes.position.length; de++)
                    if (Q.geometry.morphAttributes.position[de].name === ue) {
                      ue = de;
                      break;
                    }
                } else {
                  if (!Q.geometry.morphTargets)
                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                  for (de = 0; de < this.node.geometry.morphTargets.length; de++)
                    if (Q.geometry.morphTargets[de].name === ue) {
                      ue = de;
                      break;
                    }
                }
              }
              we = this.BindingType.ArrayElement, this.resolvedProperty = pe, this.propertyIndex = ue;
            } else
              pe.fromArray !== void 0 && pe.toArray !== void 0 ? (we = this.BindingType.HasFromToArray, this.resolvedProperty = pe) : Array.isArray(pe) ? (we = this.BindingType.EntireArray, this.resolvedProperty = pe) : this.propertyName = se;
            this.getValue = this.GetterByBindingType[we], this.setValue = this.SetterByBindingTypeAndVersioning[we][ve];
          } else {
            var Me = te.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + Me + "." + se + " but it wasn't found.", Q);
          }
        } else
          console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
      }, unbind: function() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
      } }), Object.assign(qi.prototype, { _getValue_unbound: qi.prototype.getValue, _setValue_unbound: qi.prototype.setValue }), Object.assign(Sl.prototype, { isAnimationObjectGroup: !0, add: function() {
        for (var Q = this._objects, te = Q.length, ae = this.nCachedObjects_, se = this._indicesByUUID, ue = this._paths, le = this._parsedPaths, de = this._bindings, pe = de.length, ve = void 0, we = 0, Me = arguments.length; we !== Me; ++we) {
          var Qe = arguments[we], Se = Qe.uuid, Ge = se[Se];
          if (Ge === void 0) {
            Ge = te++, se[Se] = Ge, Q.push(Qe);
            for (var ze = 0, Ze = pe; ze !== Ze; ++ze)
              de[ze].push(new qi(Qe, ue[ze], le[ze]));
          } else if (Ge < ae) {
            ve = Q[Ge];
            var nt = --ae, ct = Q[nt];
            for (se[ct.uuid] = Ge, Q[Ge] = ct, se[Se] = nt, Q[nt] = Qe, ze = 0, Ze = pe; ze !== Ze; ++ze) {
              var yt = de[ze], st = yt[nt], Mt = yt[Ge];
              yt[Ge] = st, Mt === void 0 && (Mt = new qi(Qe, ue[ze], le[ze])), yt[nt] = Mt;
            }
          } else
            Q[Ge] !== ve && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = ae;
      }, remove: function() {
        for (var Q = this._objects, te = this.nCachedObjects_, ae = this._indicesByUUID, se = this._bindings, ue = se.length, le = 0, de = arguments.length; le !== de; ++le) {
          var pe = arguments[le], ve = pe.uuid, we = ae[ve];
          if (we !== void 0 && we >= te) {
            var Me = te++, Qe = Q[Me];
            ae[Qe.uuid] = we, Q[we] = Qe, ae[ve] = Me, Q[Me] = pe;
            for (var Se = 0, Ge = ue; Se !== Ge; ++Se) {
              var ze = se[Se], Ze = ze[Me], nt = ze[we];
              ze[we] = Ze, ze[Me] = nt;
            }
          }
        }
        this.nCachedObjects_ = te;
      }, uncache: function() {
        for (var Q = this._objects, te = Q.length, ae = this.nCachedObjects_, se = this._indicesByUUID, ue = this._bindings, le = ue.length, de = 0, pe = arguments.length; de !== pe; ++de) {
          var ve = arguments[de].uuid, we = se[ve];
          if (we !== void 0)
            if (delete se[ve], we < ae) {
              var Me = --ae, Qe = Q[Me], Se = Q[ct = --te];
              se[Qe.uuid] = we, Q[we] = Qe, se[Se.uuid] = Me, Q[Me] = Se, Q.pop();
              for (var Ge = 0, ze = le; Ge !== ze; ++Ge) {
                var Ze = (yt = ue[Ge])[Me], nt = yt[ct];
                yt[we] = Ze, yt[Me] = nt, yt.pop();
              }
            } else {
              var ct;
              for (se[(Se = Q[ct = --te]).uuid] = we, Q[we] = Se, Q.pop(), Ge = 0, ze = le; Ge !== ze; ++Ge) {
                var yt;
                (yt = ue[Ge])[we] = yt[ct], yt.pop();
              }
            }
        }
        this.nCachedObjects_ = ae;
      }, subscribe_: function(Q, te) {
        var ae = this._bindingsIndicesByPath, se = ae[Q], ue = this._bindings;
        if (se !== void 0)
          return ue[se];
        var le = this._paths, de = this._parsedPaths, pe = this._objects, ve = pe.length, we = this.nCachedObjects_, Me = new Array(ve);
        se = ue.length, ae[Q] = se, le.push(Q), de.push(te), ue.push(Me);
        for (var Qe = we, Se = pe.length; Qe !== Se; ++Qe) {
          var Ge = pe[Qe];
          Me[Qe] = new qi(Ge, Q, te);
        }
        return Me;
      }, unsubscribe_: function(Q) {
        var te = this._bindingsIndicesByPath, ae = te[Q];
        if (ae !== void 0) {
          var se = this._paths, ue = this._parsedPaths, le = this._bindings, de = le.length - 1, pe = le[de];
          te[Q[de]] = ae, le[ae] = pe, le.pop(), ue[ae] = ue[de], ue.pop(), se[ae] = se[de], se.pop();
        }
      } }), Object.assign(Il.prototype, { play: function() {
        return this._mixer._activateAction(this), this;
      }, stop: function() {
        return this._mixer._deactivateAction(this), this.reset();
      }, reset: function() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
      }, isRunning: function() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
      }, isScheduled: function() {
        return this._mixer._isActiveAction(this);
      }, startAt: function(Q) {
        return this._startTime = Q, this;
      }, setLoop: function(Q, te) {
        return this.loop = Q, this.repetitions = te, this;
      }, setEffectiveWeight: function(Q) {
        return this.weight = Q, this._effectiveWeight = this.enabled ? Q : 0, this.stopFading();
      }, getEffectiveWeight: function() {
        return this._effectiveWeight;
      }, fadeIn: function(Q) {
        return this._scheduleFading(Q, 0, 1);
      }, fadeOut: function(Q) {
        return this._scheduleFading(Q, 1, 0);
      }, crossFadeFrom: function(Q, te, ae) {
        if (Q.fadeOut(te), this.fadeIn(te), ae) {
          var se = this._clip.duration, ue = Q._clip.duration, le = ue / se, de = se / ue;
          Q.warp(1, le, te), this.warp(de, 1, te);
        }
        return this;
      }, crossFadeTo: function(Q, te, ae) {
        return Q.crossFadeFrom(this, te, ae);
      }, stopFading: function() {
        var Q = this._weightInterpolant;
        return Q !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(Q)), this;
      }, setEffectiveTimeScale: function(Q) {
        return this.timeScale = Q, this._effectiveTimeScale = this.paused ? 0 : Q, this.stopWarping();
      }, getEffectiveTimeScale: function() {
        return this._effectiveTimeScale;
      }, setDuration: function(Q) {
        return this.timeScale = this._clip.duration / Q, this.stopWarping();
      }, syncWith: function(Q) {
        return this.time = Q.time, this.timeScale = Q.timeScale, this.stopWarping();
      }, halt: function(Q) {
        return this.warp(this._effectiveTimeScale, 0, Q);
      }, warp: function(Q, te, ae) {
        var se = this._mixer, ue = se.time, le = this._timeScaleInterpolant, de = this.timeScale;
        le === null && (le = se._lendControlInterpolant(), this._timeScaleInterpolant = le);
        var pe = le.parameterPositions, ve = le.sampleValues;
        return pe[0] = ue, pe[1] = ue + ae, ve[0] = Q / de, ve[1] = te / de, this;
      }, stopWarping: function() {
        var Q = this._timeScaleInterpolant;
        return Q !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(Q)), this;
      }, getMixer: function() {
        return this._mixer;
      }, getClip: function() {
        return this._clip;
      }, getRoot: function() {
        return this._localRoot || this._mixer._root;
      }, _update: function(Q, te, ae, se) {
        if (this.enabled) {
          var ue = this._startTime;
          if (ue !== null) {
            var le = (Q - ue) * ae;
            if (le < 0 || ae === 0)
              return;
            this._startTime = null, te = ae * le;
          }
          te *= this._updateTimeScale(Q);
          var de = this._updateTime(te), pe = this._updateWeight(Q);
          if (pe > 0)
            for (var ve = this._interpolants, we = this._propertyBindings, Me = 0, Qe = ve.length; Me !== Qe; ++Me)
              ve[Me].evaluate(de), we[Me].accumulate(se, pe);
        } else
          this._updateWeight(Q);
      }, _updateWeight: function(Q) {
        var te = 0;
        if (this.enabled) {
          te = this.weight;
          var ae = this._weightInterpolant;
          if (ae !== null) {
            var se = ae.evaluate(Q)[0];
            te *= se, Q > ae.parameterPositions[1] && (this.stopFading(), se === 0 && (this.enabled = !1));
          }
        }
        return this._effectiveWeight = te, te;
      }, _updateTimeScale: function(Q) {
        var te = 0;
        if (!this.paused) {
          te = this.timeScale;
          var ae = this._timeScaleInterpolant;
          ae !== null && (te *= ae.evaluate(Q)[0], Q > ae.parameterPositions[1] && (this.stopWarping(), te === 0 ? this.paused = !0 : this.timeScale = te));
        }
        return this._effectiveTimeScale = te, te;
      }, _updateTime: function(Q) {
        var te = this.time + Q, ae = this._clip.duration, se = this.loop, ue = this._loopCount, le = se === Fr;
        if (Q === 0)
          return ue === -1 ? te : le && (1 & ue) == 1 ? ae - te : te;
        if (se === Rn) {
          ue === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
          e: {
            if (te >= ae)
              te = ae;
            else {
              if (!(te < 0))
                break e;
              te = 0;
            }
            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this._mixer.dispatchEvent({ type: "finished", action: this, direction: Q < 0 ? -1 : 1 });
          }
        } else {
          if (ue === -1 && (Q >= 0 ? (ue = 0, this._setEndings(!0, this.repetitions === 0, le)) : this._setEndings(this.repetitions === 0, !0, le)), te >= ae || te < 0) {
            var de = Math.floor(te / ae);
            te -= ae * de, ue += Math.abs(de);
            var pe = this.repetitions - ue;
            if (pe <= 0)
              this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, te = Q > 0 ? ae : 0, this._mixer.dispatchEvent({ type: "finished", action: this, direction: Q > 0 ? 1 : -1 });
            else {
              if (pe === 1) {
                var ve = Q < 0;
                this._setEndings(ve, !ve, le);
              } else
                this._setEndings(!1, !1, le);
              this._loopCount = ue, this._mixer.dispatchEvent({ type: "loop", action: this, loopDelta: de });
            }
          }
          if (le && (1 & ue) == 1)
            return this.time = te, ae - te;
        }
        return this.time = te, te;
      }, _setEndings: function(Q, te, ae) {
        var se = this._interpolantSettings;
        ae ? (se.endingStart = Mn, se.endingEnd = Mn) : (se.endingStart = Q ? this.zeroSlopeAtStart ? Mn : Kr : Yn, se.endingEnd = te ? this.zeroSlopeAtEnd ? Mn : Kr : Yn);
      }, _scheduleFading: function(Q, te, ae) {
        var se = this._mixer, ue = se.time, le = this._weightInterpolant;
        le === null && (le = se._lendControlInterpolant(), this._weightInterpolant = le);
        var de = le.parameterPositions, pe = le.sampleValues;
        return de[0] = ue, pe[0] = te, de[1] = ue + Q, pe[1] = ae, this;
      } }), Iu.prototype = Object.assign(Object.create(ce.prototype), { constructor: Iu, _bindAction: function(Q, te) {
        var ae = Q._localRoot || this._root, se = Q._clip.tracks, ue = se.length, le = Q._propertyBindings, de = Q._interpolants, pe = ae.uuid, ve = this._bindingsByRootAndName, we = ve[pe];
        we === void 0 && (we = {}, ve[pe] = we);
        for (var Me = 0; Me !== ue; ++Me) {
          var Qe = se[Me], Se = Qe.name, Ge = we[Se];
          if (Ge !== void 0)
            le[Me] = Ge;
          else {
            if ((Ge = le[Me]) !== void 0) {
              Ge._cacheIndex === null && (++Ge.referenceCount, this._addInactiveBinding(Ge, pe, Se));
              continue;
            }
            var ze = te && te._propertyBindings[Me].binding.parsedPath;
            ++(Ge = new Cu(qi.create(ae, Se, ze), Qe.ValueTypeName, Qe.getValueSize())).referenceCount, this._addInactiveBinding(Ge, pe, Se), le[Me] = Ge;
          }
          de[Me].resultBuffer = Ge.buffer;
        }
      }, _activateAction: function(Q) {
        if (!this._isActiveAction(Q)) {
          if (Q._cacheIndex === null) {
            var te = (Q._localRoot || this._root).uuid, ae = Q._clip.uuid, se = this._actionsByClip[ae];
            this._bindAction(Q, se && se.knownActions[0]), this._addInactiveAction(Q, ae, te);
          }
          for (var ue = Q._propertyBindings, le = 0, de = ue.length; le !== de; ++le) {
            var pe = ue[le];
            pe.useCount++ == 0 && (this._lendBinding(pe), pe.saveOriginalState());
          }
          this._lendAction(Q);
        }
      }, _deactivateAction: function(Q) {
        if (this._isActiveAction(Q)) {
          for (var te = Q._propertyBindings, ae = 0, se = te.length; ae !== se; ++ae) {
            var ue = te[ae];
            --ue.useCount == 0 && (ue.restoreOriginalState(), this._takeBackBinding(ue));
          }
          this._takeBackAction(Q);
        }
      }, _initMemoryManager: function() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        var Q = this;
        this.stats = { actions: { get total() {
          return Q._actions.length;
        }, get inUse() {
          return Q._nActiveActions;
        } }, bindings: { get total() {
          return Q._bindings.length;
        }, get inUse() {
          return Q._nActiveBindings;
        } }, controlInterpolants: { get total() {
          return Q._controlInterpolants.length;
        }, get inUse() {
          return Q._nActiveControlInterpolants;
        } } };
      }, _isActiveAction: function(Q) {
        var te = Q._cacheIndex;
        return te !== null && te < this._nActiveActions;
      }, _addInactiveAction: function(Q, te, ae) {
        var se = this._actions, ue = this._actionsByClip, le = ue[te];
        if (le === void 0)
          le = { knownActions: [Q], actionByRoot: {} }, Q._byClipCacheIndex = 0, ue[te] = le;
        else {
          var de = le.knownActions;
          Q._byClipCacheIndex = de.length, de.push(Q);
        }
        Q._cacheIndex = se.length, se.push(Q), le.actionByRoot[ae] = Q;
      }, _removeInactiveAction: function(Q) {
        var te = this._actions, ae = te[te.length - 1], se = Q._cacheIndex;
        ae._cacheIndex = se, te[se] = ae, te.pop(), Q._cacheIndex = null;
        var ue = Q._clip.uuid, le = this._actionsByClip, de = le[ue], pe = de.knownActions, ve = pe[pe.length - 1], we = Q._byClipCacheIndex;
        ve._byClipCacheIndex = we, pe[we] = ve, pe.pop(), Q._byClipCacheIndex = null, delete de.actionByRoot[(Q._localRoot || this._root).uuid], pe.length === 0 && delete le[ue], this._removeInactiveBindingsForAction(Q);
      }, _removeInactiveBindingsForAction: function(Q) {
        for (var te = Q._propertyBindings, ae = 0, se = te.length; ae !== se; ++ae) {
          var ue = te[ae];
          --ue.referenceCount == 0 && this._removeInactiveBinding(ue);
        }
      }, _lendAction: function(Q) {
        var te = this._actions, ae = Q._cacheIndex, se = this._nActiveActions++, ue = te[se];
        Q._cacheIndex = se, te[se] = Q, ue._cacheIndex = ae, te[ae] = ue;
      }, _takeBackAction: function(Q) {
        var te = this._actions, ae = Q._cacheIndex, se = --this._nActiveActions, ue = te[se];
        Q._cacheIndex = se, te[se] = Q, ue._cacheIndex = ae, te[ae] = ue;
      }, _addInactiveBinding: function(Q, te, ae) {
        var se = this._bindingsByRootAndName, ue = se[te], le = this._bindings;
        ue === void 0 && (ue = {}, se[te] = ue), ue[ae] = Q, Q._cacheIndex = le.length, le.push(Q);
      }, _removeInactiveBinding: function(Q) {
        var te = this._bindings, ae = Q.binding, se = ae.rootNode.uuid, ue = ae.path, le = this._bindingsByRootAndName, de = le[se], pe = te[te.length - 1], ve = Q._cacheIndex;
        pe._cacheIndex = ve, te[ve] = pe, te.pop(), delete de[ue];
        e: {
          for (var we in de)
            break e;
          delete le[se];
        }
      }, _lendBinding: function(Q) {
        var te = this._bindings, ae = Q._cacheIndex, se = this._nActiveBindings++, ue = te[se];
        Q._cacheIndex = se, te[se] = Q, ue._cacheIndex = ae, te[ae] = ue;
      }, _takeBackBinding: function(Q) {
        var te = this._bindings, ae = Q._cacheIndex, se = --this._nActiveBindings, ue = te[se];
        Q._cacheIndex = se, te[se] = Q, ue._cacheIndex = ae, te[ae] = ue;
      }, _lendControlInterpolant: function() {
        var Q = this._controlInterpolants, te = this._nActiveControlInterpolants++, ae = Q[te];
        return ae === void 0 && ((ae = new uc(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = te, Q[te] = ae), ae;
      }, _takeBackControlInterpolant: function(Q) {
        var te = this._controlInterpolants, ae = Q.__cacheIndex, se = --this._nActiveControlInterpolants, ue = te[se];
        Q.__cacheIndex = se, te[se] = Q, ue.__cacheIndex = ae, te[ae] = ue;
      }, _controlInterpolantsResultBuffer: new Float32Array(1), clipAction: function(Q, te) {
        var ae = te || this._root, se = ae.uuid, ue = typeof Q == "string" ? da.findByName(ae, Q) : Q, le = ue !== null ? ue.uuid : Q, de = this._actionsByClip[le], pe = null;
        if (de !== void 0) {
          var ve = de.actionByRoot[se];
          if (ve !== void 0)
            return ve;
          pe = de.knownActions[0], ue === null && (ue = pe._clip);
        }
        if (ue === null)
          return null;
        var we = new Il(this, ue, te);
        return this._bindAction(we, pe), this._addInactiveAction(we, le, se), we;
      }, existingAction: function(Q, te) {
        var ae = te || this._root, se = ae.uuid, ue = typeof Q == "string" ? da.findByName(ae, Q) : Q, le = ue ? ue.uuid : Q, de = this._actionsByClip[le];
        return de !== void 0 && de.actionByRoot[se] || null;
      }, stopAllAction: function() {
        var Q = this._actions, te = this._nActiveActions, ae = this._bindings, se = this._nActiveBindings;
        this._nActiveActions = 0, this._nActiveBindings = 0;
        for (var ue = 0; ue !== te; ++ue)
          Q[ue].reset();
        for (ue = 0; ue !== se; ++ue)
          ae[ue].useCount = 0;
        return this;
      }, update: function(Q) {
        Q *= this.timeScale;
        for (var te = this._actions, ae = this._nActiveActions, se = this.time += Q, ue = Math.sign(Q), le = this._accuIndex ^= 1, de = 0; de !== ae; ++de)
          te[de]._update(se, Q, ue, le);
        var pe = this._bindings, ve = this._nActiveBindings;
        for (de = 0; de !== ve; ++de)
          pe[de].apply(le);
        return this;
      }, getRoot: function() {
        return this._root;
      }, uncacheClip: function(Q) {
        var te = this._actions, ae = Q.uuid, se = this._actionsByClip, ue = se[ae];
        if (ue !== void 0) {
          for (var le = ue.knownActions, de = 0, pe = le.length; de !== pe; ++de) {
            var ve = le[de];
            this._deactivateAction(ve);
            var we = ve._cacheIndex, Me = te[te.length - 1];
            ve._cacheIndex = null, ve._byClipCacheIndex = null, Me._cacheIndex = we, te[we] = Me, te.pop(), this._removeInactiveBindingsForAction(ve);
          }
          delete se[ae];
        }
      }, uncacheRoot: function(Q) {
        var te = Q.uuid, ae = this._actionsByClip;
        for (var se in ae) {
          var ue = ae[se].actionByRoot[te];
          ue !== void 0 && (this._deactivateAction(ue), this._removeInactiveAction(ue));
        }
        var le = this._bindingsByRootAndName[te];
        if (le !== void 0)
          for (var de in le) {
            var pe = le[de];
            pe.restoreOriginalState(), this._removeInactiveBinding(pe);
          }
      }, uncacheAction: function(Q, te) {
        var ae = this.existingAction(Q, te);
        ae !== null && (this._deactivateAction(ae), this._removeInactiveAction(ae));
      } }), Jc.prototype.clone = function() {
        return new Jc(this.value.clone === void 0 ? this.value : this.value.clone());
      }, Tu.prototype = Object.assign(Object.create(Jr.prototype), { constructor: Tu, isInstancedBufferGeometry: !0, copy: function(Q) {
        return Jr.prototype.copy.call(this, Q), this.maxInstancedCount = Q.maxInstancedCount, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), Ru.prototype = Object.assign(Object.create(ho.prototype), { constructor: Ru, isInstancedInterleavedBuffer: !0, copy: function(Q) {
        return ho.prototype.copy.call(this, Q), this.meshPerAttribute = Q.meshPerAttribute, this;
      } }), Mu.prototype = Object.assign(Object.create(Nn.prototype), { constructor: Mu, isInstancedBufferAttribute: !0, copy: function(Q) {
        return Nn.prototype.copy.call(this, Q), this.meshPerAttribute = Q.meshPerAttribute, this;
      } }), Object.assign(Tl.prototype, { linePrecision: 1, set: function(Q, te) {
        this.ray.set(Q, te);
      }, setFromCamera: function(Q, te) {
        te && te.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(te.matrixWorld), this.ray.direction.set(Q.x, Q.y, 0.5).unproject(te).sub(this.ray.origin).normalize()) : te && te.isOrthographicCamera ? (this.ray.origin.set(Q.x, Q.y, (te.near + te.far) / (te.near - te.far)).unproject(te), this.ray.direction.set(0, 0, -1).transformDirection(te.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.");
      }, intersectObject: function(Q, te, ae) {
        var se = ae || [];
        return Nu(Q, this, se, te), se.sort(Rl), se;
      }, intersectObjects: function(Q, te, ae) {
        var se = ae || [];
        if (Array.isArray(Q) === !1)
          return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), se;
        for (var ue = 0, le = Q.length; ue < le; ue++)
          Nu(Q[ue], this, se, te);
        return se.sort(Rl), se;
      } }), Object.assign(Ml.prototype, { start: function() {
        this.startTime = (typeof performance > "u" ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
      }, stop: function() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
      }, getElapsedTime: function() {
        return this.getDelta(), this.elapsedTime;
      }, getDelta: function() {
        var Q = 0;
        if (this.autoStart && !this.running)
          return this.start(), 0;
        if (this.running) {
          var te = (typeof performance > "u" ? Date : performance).now();
          Q = (te - this.oldTime) / 1e3, this.oldTime = te, this.elapsedTime += Q;
        }
        return Q;
      } }), Object.assign(Nl.prototype, { set: function(Q, te, ae) {
        return this.radius = Q, this.phi = te, this.theta = ae, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.radius = Q.radius, this.phi = Q.phi, this.theta = Q.theta, this;
      }, makeSafe: function() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
      }, setFromVector3: function(Q) {
        return this.radius = Q.length(), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(Q.x, Q.z), this.phi = Math.acos(Cn.clamp(Q.y / this.radius, -1, 1))), this;
      } }), Object.assign(Ql.prototype, { set: function(Q, te, ae) {
        return this.radius = Q, this.theta = te, this.y = ae, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.radius = Q.radius, this.theta = Q.theta, this.y = Q.y, this;
      }, setFromVector3: function(Q) {
        return this.radius = Math.sqrt(Q.x * Q.x + Q.z * Q.z), this.theta = Math.atan2(Q.x, Q.z), this.y = Q.y, this;
      } }), Object.assign(Qu.prototype, { set: function(Q, te) {
        return this.min.copy(Q), this.max.copy(te), this;
      }, setFromPoints: function(Q) {
        this.makeEmpty();
        for (var te = 0, ae = Q.length; te < ae; te++)
          this.expandByPoint(Q[te]);
        return this;
      }, setFromCenterAndSize: function() {
        var Q = new wr();
        return function(te, ae) {
          var se = Q.copy(ae).multiplyScalar(0.5);
          return this.min.copy(te).sub(se), this.max.copy(te).add(se), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.min.copy(Q.min), this.max.copy(Q.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
      }, getCenter: function(Q) {
        return Q === void 0 && (console.warn("THREE.Box2: .getCenter() target is now required"), Q = new wr()), this.isEmpty() ? Q.set(0, 0) : Q.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(Q) {
        return Q === void 0 && (console.warn("THREE.Box2: .getSize() target is now required"), Q = new wr()), this.isEmpty() ? Q.set(0, 0) : Q.subVectors(this.max, this.min);
      }, expandByPoint: function(Q) {
        return this.min.min(Q), this.max.max(Q), this;
      }, expandByVector: function(Q) {
        return this.min.sub(Q), this.max.add(Q), this;
      }, expandByScalar: function(Q) {
        return this.min.addScalar(-Q), this.max.addScalar(Q), this;
      }, containsPoint: function(Q) {
        return !(Q.x < this.min.x || Q.x > this.max.x || Q.y < this.min.y || Q.y > this.max.y);
      }, containsBox: function(Q) {
        return this.min.x <= Q.min.x && Q.max.x <= this.max.x && this.min.y <= Q.min.y && Q.max.y <= this.max.y;
      }, getParameter: function(Q, te) {
        return te === void 0 && (console.warn("THREE.Box2: .getParameter() target is now required"), te = new wr()), te.set((Q.x - this.min.x) / (this.max.x - this.min.x), (Q.y - this.min.y) / (this.max.y - this.min.y));
      }, intersectsBox: function(Q) {
        return !(Q.max.x < this.min.x || Q.min.x > this.max.x || Q.max.y < this.min.y || Q.min.y > this.max.y);
      }, clampPoint: function(Q, te) {
        return te === void 0 && (console.warn("THREE.Box2: .clampPoint() target is now required"), te = new wr()), te.copy(Q).clamp(this.min, this.max);
      }, distanceToPoint: function() {
        var Q = new wr();
        return function(te) {
          return Q.copy(te).clamp(this.min, this.max).sub(te).length();
        };
      }(), intersect: function(Q) {
        return this.min.max(Q.min), this.max.min(Q.max), this;
      }, union: function(Q) {
        return this.min.min(Q.min), this.max.max(Q.max), this;
      }, translate: function(Q) {
        return this.min.add(Q), this.max.add(Q), this;
      }, equals: function(Q) {
        return Q.min.equals(this.min) && Q.max.equals(this.max);
      } }), Object.assign(ku.prototype, { set: function(Q, te) {
        return this.start.copy(Q), this.end.copy(te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Q) {
        return this.start.copy(Q.start), this.end.copy(Q.end), this;
      }, getCenter: function(Q) {
        return Q === void 0 && (console.warn("THREE.Line3: .getCenter() target is now required"), Q = new mt()), Q.addVectors(this.start, this.end).multiplyScalar(0.5);
      }, delta: function(Q) {
        return Q === void 0 && (console.warn("THREE.Line3: .delta() target is now required"), Q = new mt()), Q.subVectors(this.end, this.start);
      }, distanceSq: function() {
        return this.start.distanceToSquared(this.end);
      }, distance: function() {
        return this.start.distanceTo(this.end);
      }, at: function(Q, te) {
        return te === void 0 && (console.warn("THREE.Line3: .at() target is now required"), te = new mt()), this.delta(te).multiplyScalar(Q).add(this.start);
      }, closestPointToPointParameter: function() {
        var Q = new mt(), te = new mt();
        return function(ae, se) {
          Q.subVectors(ae, this.start), te.subVectors(this.end, this.start);
          var ue = te.dot(te), le = te.dot(Q) / ue;
          return se && (le = Cn.clamp(le, 0, 1)), le;
        };
      }(), closestPointToPoint: function(Q, te, ae) {
        var se = this.closestPointToPointParameter(Q, te);
        return ae === void 0 && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), ae = new mt()), this.delta(ae).multiplyScalar(se).add(this.start);
      }, applyMatrix4: function(Q) {
        return this.start.applyMatrix4(Q), this.end.applyMatrix4(Q), this;
      }, equals: function(Q) {
        return Q.start.equals(this.start) && Q.end.equals(this.end);
      } }), fc.prototype = Object.create(jr.prototype), fc.prototype.constructor = fc, fc.prototype.isImmediateRenderObject = !0, hc.prototype = Object.create(ri.prototype), hc.prototype.constructor = hc, hc.prototype.update = function() {
        var Q = new mt(), te = new mt(), ae = new zi();
        return function() {
          var se = ["a", "b", "c"];
          this.object.updateMatrixWorld(!0), ae.getNormalMatrix(this.object.matrixWorld);
          var ue = this.object.matrixWorld, le = this.geometry.attributes.position, de = this.object.geometry;
          if (de && de.isGeometry)
            for (var pe = de.vertices, ve = de.faces, we = 0, Me = 0, Qe = ve.length; Me < Qe; Me++)
              for (var Se = ve[Me], Ge = 0, ze = Se.vertexNormals.length; Ge < ze; Ge++) {
                var Ze = pe[Se[se[Ge]]], nt = Se.vertexNormals[Ge];
                Q.copy(Ze).applyMatrix4(ue), te.copy(nt).applyMatrix3(ae).normalize().multiplyScalar(this.size).add(Q), le.setXYZ(we, Q.x, Q.y, Q.z), we += 1, le.setXYZ(we, te.x, te.y, te.z), we += 1;
              }
          else if (de && de.isBufferGeometry) {
            var ct = de.attributes.position, yt = de.attributes.normal;
            for (we = 0, Ge = 0, ze = ct.count; Ge < ze; Ge++)
              Q.set(ct.getX(Ge), ct.getY(Ge), ct.getZ(Ge)).applyMatrix4(ue), te.set(yt.getX(Ge), yt.getY(Ge), yt.getZ(Ge)), te.applyMatrix3(ae).normalize().multiplyScalar(this.size).add(Q), le.setXYZ(we, Q.x, Q.y, Q.z), we += 1, le.setXYZ(we, te.x, te.y, te.z), we += 1;
          }
          le.needsUpdate = !0;
        };
      }(), fs.prototype = Object.create(jr.prototype), fs.prototype.constructor = fs, fs.prototype.dispose = function() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
      }, fs.prototype.update = function() {
        var Q = new mt(), te = new mt();
        return function() {
          this.light.updateMatrixWorld();
          var ae = this.light.distance ? this.light.distance : 1e3, se = ae * Math.tan(this.light.angle);
          this.cone.scale.set(se, se, ae), Q.setFromMatrixPosition(this.light.matrixWorld), te.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(te.sub(Q)), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
        };
      }(), hs.prototype = Object.create(ri.prototype), hs.prototype.constructor = hs, hs.prototype.updateMatrixWorld = function() {
        var Q = new mt(), te = new An(), ae = new An();
        return function(se) {
          var ue = this.bones, le = this.geometry, de = le.getAttribute("position");
          ae.getInverse(this.root.matrixWorld);
          for (var pe = 0, ve = 0; pe < ue.length; pe++) {
            var we = ue[pe];
            we.parent && we.parent.isBone && (te.multiplyMatrices(ae, we.matrixWorld), Q.setFromMatrixPosition(te), de.setXYZ(ve, Q.x, Q.y, Q.z), te.multiplyMatrices(ae, we.parent.matrixWorld), Q.setFromMatrixPosition(te), de.setXYZ(ve + 1, Q.x, Q.y, Q.z), ve += 2);
          }
          le.getAttribute("position").needsUpdate = !0, jr.prototype.updateMatrixWorld.call(this, se);
        };
      }(), ps.prototype = Object.create(Xi.prototype), ps.prototype.constructor = ps, ps.prototype.dispose = function() {
        this.geometry.dispose(), this.material.dispose();
      }, ps.prototype.update = function() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
      }, As.prototype = Object.create(jr.prototype), As.prototype.constructor = As, As.prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, As.prototype.update = function() {
        var Q = 0.5 * this.light.width, te = 0.5 * this.light.height, ae = this.line.geometry.attributes.position, se = ae.array;
        se[0] = Q, se[1] = -te, se[2] = 0, se[3] = Q, se[4] = te, se[5] = 0, se[6] = -Q, se[7] = te, se[8] = 0, se[9] = -Q, se[10] = -te, se[11] = 0, se[12] = Q, se[13] = -te, se[14] = 0, ae.needsUpdate = !0, this.color !== void 0 ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color);
      }, gs.prototype = Object.create(jr.prototype), gs.prototype.constructor = gs, gs.prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, gs.prototype.update = function() {
        var Q = new mt(), te = new sn(), ae = new sn();
        return function() {
          var se = this.children[0];
          if (this.color !== void 0)
            this.material.color.set(this.color);
          else {
            var ue = se.geometry.getAttribute("color");
            te.copy(this.light.color), ae.copy(this.light.groundColor);
            for (var le = 0, de = ue.count; le < de; le++) {
              var pe = le < de / 2 ? te : ae;
              ue.setXYZ(le, pe.r, pe.g, pe.b);
            }
            ue.needsUpdate = !0;
          }
          se.lookAt(Q.setFromMatrixPosition(this.light.matrixWorld).negate());
        };
      }(), pc.prototype = Object.create(ri.prototype), pc.prototype.constructor = pc, Xc.prototype = Object.create(ri.prototype), Xc.prototype.constructor = Xc, Ac.prototype = Object.create(ri.prototype), Ac.prototype.constructor = Ac, Ac.prototype.update = function() {
        var Q = new mt(), te = new mt(), ae = new zi();
        return function() {
          this.object.updateMatrixWorld(!0), ae.getNormalMatrix(this.object.matrixWorld);
          for (var se = this.object.matrixWorld, ue = this.geometry.attributes.position, le = this.object.geometry, de = le.vertices, pe = le.faces, ve = 0, we = 0, Me = pe.length; we < Me; we++) {
            var Qe = pe[we], Se = Qe.normal;
            Q.copy(de[Qe.a]).add(de[Qe.b]).add(de[Qe.c]).divideScalar(3).applyMatrix4(se), te.copy(Se).applyMatrix3(ae).normalize().multiplyScalar(this.size).add(Q), ue.setXYZ(ve, Q.x, Q.y, Q.z), ve += 1, ue.setXYZ(ve, te.x, te.y, te.z), ve += 1;
          }
          ue.needsUpdate = !0;
        };
      }(), ms.prototype = Object.create(jr.prototype), ms.prototype.constructor = ms, ms.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
      }, ms.prototype.update = function() {
        var Q = new mt(), te = new mt(), ae = new mt();
        return function() {
          Q.setFromMatrixPosition(this.light.matrixWorld), te.setFromMatrixPosition(this.light.target.matrixWorld), ae.subVectors(te, Q), this.lightPlane.lookAt(ae), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(ae), this.targetLine.scale.z = ae.length();
        };
      }(), gc.prototype = Object.create(ri.prototype), gc.prototype.constructor = gc, gc.prototype.update = function() {
        var Q, te, ae = new mt(), se = new Sa();
        function ue(le, de, pe, ve) {
          ae.set(de, pe, ve).unproject(se);
          var we = te[le];
          if (we !== void 0)
            for (var Me = Q.getAttribute("position"), Qe = 0, Se = we.length; Qe < Se; Qe++)
              Me.setXYZ(we[Qe], ae.x, ae.y, ae.z);
        }
        return function() {
          Q = this.geometry, te = this.pointMap, se.projectionMatrix.copy(this.camera.projectionMatrix), ue("c", 0, 0, -1), ue("t", 0, 0, 1), ue("n1", -1, -1, -1), ue("n2", 1, -1, -1), ue("n3", -1, 1, -1), ue("n4", 1, 1, -1), ue("f1", -1, -1, 1), ue("f2", 1, -1, 1), ue("f3", -1, 1, 1), ue("f4", 1, 1, 1), ue("u1", 0.7, 1.1, -1), ue("u2", -0.7, 1.1, -1), ue("u3", 0, 2, -1), ue("cf1", -1, 0, 1), ue("cf2", 1, 0, 1), ue("cf3", 0, -1, 1), ue("cf4", 0, 1, 1), ue("cn1", -1, 0, -1), ue("cn2", 1, 0, -1), ue("cn3", 0, -1, -1), ue("cn4", 0, 1, -1), Q.getAttribute("position").needsUpdate = !0;
        };
      }(), To.prototype = Object.create(ri.prototype), To.prototype.constructor = To, To.prototype.update = function() {
        var Q = new Ha();
        return function(te) {
          if (te !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Q.setFromObject(this.object), !Q.isEmpty()) {
            var ae = Q.min, se = Q.max, ue = this.geometry.attributes.position, le = ue.array;
            le[0] = se.x, le[1] = se.y, le[2] = se.z, le[3] = ae.x, le[4] = se.y, le[5] = se.z, le[6] = ae.x, le[7] = ae.y, le[8] = se.z, le[9] = se.x, le[10] = ae.y, le[11] = se.z, le[12] = se.x, le[13] = se.y, le[14] = ae.z, le[15] = ae.x, le[16] = se.y, le[17] = ae.z, le[18] = ae.x, le[19] = ae.y, le[20] = ae.z, le[21] = se.x, le[22] = ae.y, le[23] = ae.z, ue.needsUpdate = !0, this.geometry.computeBoundingSphere();
          }
        };
      }(), To.prototype.setFromObject = function(Q) {
        return this.object = Q, this.update(), this;
      }, mc.prototype = Object.create(ri.prototype), mc.prototype.constructor = mc, mc.prototype.updateMatrixWorld = function(Q) {
        var te = this.box;
        te.isEmpty() || (te.getCenter(this.position), te.getSize(this.scale), this.scale.multiplyScalar(0.5), jr.prototype.updateMatrixWorld.call(this, Q));
      }, yc.prototype = Object.create(Zi.prototype), yc.prototype.constructor = yc, yc.prototype.updateMatrixWorld = function(Q) {
        var te = -this.plane.constant;
        Math.abs(te) < 1e-8 && (te = 1e-8), this.scale.set(0.5 * this.size, 0.5 * this.size, te), this.children[0].material.side = te < 0 ? Ne : He, this.lookAt(this.plane.normal), jr.prototype.updateMatrixWorld.call(this, Q);
      }, Ro.prototype = Object.create(jr.prototype), Ro.prototype.constructor = Ro, Ro.prototype.setDirection = function() {
        var Q, te = new mt();
        return function(ae) {
          ae.y > 0.99999 ? this.quaternion.set(0, 0, 0, 1) : ae.y < -0.99999 ? this.quaternion.set(1, 0, 0, 0) : (te.set(ae.z, 0, -ae.x).normalize(), Q = Math.acos(ae.y), this.quaternion.setFromAxisAngle(te, Q));
        };
      }(), Ro.prototype.setLength = function(Q, te, ae) {
        te === void 0 && (te = 0.2 * Q), ae === void 0 && (ae = 0.2 * te), this.line.scale.set(1, Math.max(0, Q - te), 1), this.line.updateMatrix(), this.cone.scale.set(ae, te, ae), this.cone.position.y = Q, this.cone.updateMatrix();
      }, Ro.prototype.setColor = function(Q) {
        this.line.material.color.copy(Q), this.cone.material.color.copy(Q);
      }, vc.prototype = Object.create(ri.prototype), vc.prototype.constructor = vc;
      var Ud = 0, Hd = 1;
      function qd(Q) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), Q;
      }
      function jd(Q) {
        return Q === void 0 && (Q = []), console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), Q.isMultiMaterial = !0, Q.materials = Q, Q.clone = function() {
          return Q.slice();
        }, Q;
      }
      function $d(Q, te) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new Do(Q, te);
      }
      function Vd(Q) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new ks(Q);
      }
      function Dd(Q, te) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new Do(Q, te);
      }
      function zd(Q) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new ga(Q);
      }
      function Ld(Q) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new ga(Q);
      }
      function Yd(Q) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new ga(Q);
      }
      function Wd(Q, te, ae) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new mt(Q, te, ae);
      }
      function Jd(Q, te) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new Nn(Q, te).setDynamic(!0);
      }
      function Xd(Q, te) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new ws(Q, te);
      }
      function Zd(Q, te) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new _s(Q, te);
      }
      function Kd(Q, te) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Cs(Q, te);
      }
      function ef(Q, te) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new Ss(Q, te);
      }
      function tf(Q, te) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new so(Q, te);
      }
      function rf(Q, te) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new Is(Q, te);
      }
      function nf(Q, te) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new co(Q, te);
      }
      function af(Q, te) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new Gr(Q, te);
      }
      function of(Q, te) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new Ts(Q, te);
      }
      function kl(Q) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), Ui.call(this, Q), this.type = "catmullrom", this.closed = !0;
      }
      function Ol(Q) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), Ui.call(this, Q), this.type = "catmullrom";
      }
      function Ou(Q) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), Ui.call(this, Q), this.type = "catmullrom";
      }
      function sf(Q) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new vc(Q);
      }
      function cf(Q, te) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new To(Q, te);
      }
      function uf(Q, te) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new ri(new is(Q.geometry), new ei({ color: te !== void 0 ? te : 16777215 }));
      }
      function lf(Q, te) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new ri(new Lo(Q.geometry), new ei({ color: te !== void 0 ? te : 16777215 }));
      }
      function df(Q) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new ya(Q);
      }
      function ff(Q) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new uu(Q);
      }
      dn.create = function(Q, te) {
        return console.log("THREE.Curve.create() has been deprecated"), Q.prototype = Object.create(dn.prototype), Q.prototype.constructor = Q, Q.prototype.getPoint = te, Q;
      }, Object.assign(za.prototype, { createPointsGeometry: function(Q) {
        console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var te = this.getPoints(Q);
        return this.createGeometry(te);
      }, createSpacedPointsGeometry: function(Q) {
        console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var te = this.getSpacedPoints(Q);
        return this.createGeometry(te);
      }, createGeometry: function(Q) {
        console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        for (var te = new mn(), ae = 0, se = Q.length; ae < se; ae++) {
          var ue = Q[ae];
          te.vertices.push(new mt(ue.x, ue.y, ue.z || 0));
        }
        return te;
      } }), Object.assign(Ba.prototype, { fromPoints: function(Q) {
        console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(Q);
      } }), kl.prototype = Object.create(Ui.prototype), Ol.prototype = Object.create(Ui.prototype), Ou.prototype = Object.create(Ui.prototype), Object.assign(Ou.prototype, { initFromArray: function() {
        console.error("THREE.Spline: .initFromArray() has been removed.");
      }, getControlPointsArray: function() {
        console.error("THREE.Spline: .getControlPointsArray() has been removed.");
      }, reparametrizeByArcLength: function() {
        console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.");
      } }), pc.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
      }, hs.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
      }, Object.assign(ls.prototype, { extractUrlBase: function(Q) {
        return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), gu.extractUrlBase(Q);
      } }), Object.assign(Qu.prototype, { center: function(Q) {
        return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(Q);
      }, empty: function() {
        return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(Q) {
        return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Q);
      }, size: function(Q) {
        return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(Q);
      } }), Object.assign(Ha.prototype, { center: function(Q) {
        return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(Q);
      }, empty: function() {
        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(Q) {
        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Q);
      }, isIntersectionSphere: function(Q) {
        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(Q);
      }, size: function(Q) {
        return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(Q);
      } }), ku.prototype.center = function(Q) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(Q);
      }, Object.assign(Cn, { random16: function() {
        return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random();
      }, nearestPowerOfTwo: function(Q) {
        return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), Cn.floorPowerOfTwo(Q);
      }, nextPowerOfTwo: function(Q) {
        return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), Cn.ceilPowerOfTwo(Q);
      } }), Object.assign(zi.prototype, { flattenToArrayOffset: function(Q, te) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(Q, te);
      }, multiplyVector3: function(Q) {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), Q.applyMatrix3(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
      }, applyToBuffer: function(Q) {
        return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(Q);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
      } }), Object.assign(An.prototype, { extractPosition: function(Q) {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(Q);
      }, flattenToArrayOffset: function(Q, te) {
        return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(Q, te);
      }, getPosition: function() {
        var Q;
        return function() {
          return Q === void 0 && (Q = new mt()), console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), Q.setFromMatrixColumn(this, 3);
        };
      }(), setRotationFromQuaternion: function(Q) {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(Q);
      }, multiplyToArray: function() {
        console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
      }, multiplyVector3: function(Q) {
        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), Q.applyMatrix4(this);
      }, multiplyVector4: function(Q) {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), Q.applyMatrix4(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
      }, rotateAxis: function(Q) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), Q.transformDirection(this);
      }, crossVector: function(Q) {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), Q.applyMatrix4(this);
      }, translate: function() {
        console.error("THREE.Matrix4: .translate() has been removed.");
      }, rotateX: function() {
        console.error("THREE.Matrix4: .rotateX() has been removed.");
      }, rotateY: function() {
        console.error("THREE.Matrix4: .rotateY() has been removed.");
      }, rotateZ: function() {
        console.error("THREE.Matrix4: .rotateZ() has been removed.");
      }, rotateByAxis: function() {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
      }, applyToBuffer: function(Q) {
        return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(Q);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
      }, makeFrustum: function(Q, te, ae, se, ue, le) {
        return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(Q, te, se, ae, ue, le);
      } }), Ca.prototype.isIntersectionLine = function(Q) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(Q);
      }, ci.prototype.multiplyVector3 = function(Q) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), Q.applyQuaternion(this);
      }, Object.assign(fo.prototype, { isIntersectionBox: function(Q) {
        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Q);
      }, isIntersectionPlane: function(Q) {
        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(Q);
      }, isIntersectionSphere: function(Q) {
        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(Q);
      } }), Object.assign(aa.prototype, { area: function() {
        return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
      }, barycoordFromPoint: function(Q, te) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(Q, te);
      }, midpoint: function(Q) {
        return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(Q);
      }, normal: function(Q) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(Q);
      }, plane: function(Q) {
        return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(Q);
      } }), Object.assign(aa, { barycoordFromPoint: function(Q, te, ae, se, ue) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), aa.getBarycoord(Q, te, ae, se, ue);
      }, normal: function(Q, te, ae, se) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), aa.getNormal(Q, te, ae, se);
      } }), Object.assign(Ka.prototype, { extractAllPoints: function(Q) {
        return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(Q);
      }, extrude: function(Q) {
        return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new go(this, Q);
      }, makeGeometry: function(Q) {
        return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new yo(this, Q);
      } }), Object.assign(wr.prototype, { fromAttribute: function(Q, te, ae) {
        return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Q, te, ae);
      }, distanceToManhattan: function(Q) {
        return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(Q);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(mt.prototype, { setEulerFromRotationMatrix: function() {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
      }, setEulerFromQuaternion: function() {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
      }, getPositionFromMatrix: function(Q) {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(Q);
      }, getScaleFromMatrix: function(Q) {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(Q);
      }, getColumnFromMatrix: function(Q, te) {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(te, Q);
      }, applyProjection: function(Q) {
        return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(Q);
      }, fromAttribute: function(Q, te, ae) {
        return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Q, te, ae);
      }, distanceToManhattan: function(Q) {
        return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(Q);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(Zn.prototype, { fromAttribute: function(Q, te, ae) {
        return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Q, te, ae);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(mn.prototype, { computeTangents: function() {
        console.error("THREE.Geometry: .computeTangents() has been removed.");
      }, computeLineDistances: function() {
        console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.");
      } }), Object.assign(jr.prototype, { getChildByName: function(Q) {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(Q);
      }, renderDepth: function() {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
      }, translate: function(Q, te) {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(te, Q);
      }, getWorldRotation: function() {
        console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
      } }), Object.defineProperties(jr.prototype, { eulerOrder: { get: function() {
        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
      }, set: function(Q) {
        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = Q;
      } }, useQuaternion: { get: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      }, set: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      } } }), Object.defineProperties(Os.prototype, { objects: { get: function() {
        return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels;
      } } }), Object.defineProperty(Ps.prototype, "useVertexTexture", { get: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      }, set: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      } }), Object.defineProperty(dn.prototype, "__arcLengthDivisions", { get: function() {
        return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions;
      }, set: function(Q) {
        console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = Q;
      } }), fi.prototype.setLens = function(Q, te) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), te !== void 0 && (this.filmGauge = te), this.setFocalLength(Q);
      }, Object.defineProperties(li.prototype, { onlyShadow: { set: function() {
        console.warn("THREE.Light: .onlyShadow has been removed.");
      } }, shadowCameraFov: { set: function(Q) {
        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = Q;
      } }, shadowCameraLeft: { set: function(Q) {
        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = Q;
      } }, shadowCameraRight: { set: function(Q) {
        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = Q;
      } }, shadowCameraTop: { set: function(Q) {
        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = Q;
      } }, shadowCameraBottom: { set: function(Q) {
        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = Q;
      } }, shadowCameraNear: { set: function(Q) {
        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = Q;
      } }, shadowCameraFar: { set: function(Q) {
        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = Q;
      } }, shadowCameraVisible: { set: function() {
        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
      } }, shadowBias: { set: function(Q) {
        console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = Q;
      } }, shadowDarkness: { set: function() {
        console.warn("THREE.Light: .shadowDarkness has been removed.");
      } }, shadowMapWidth: { set: function(Q) {
        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = Q;
      } }, shadowMapHeight: { set: function(Q) {
        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = Q;
      } } }), Object.defineProperties(Nn.prototype, { length: { get: function() {
        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
      } }, copyIndicesArray: function() {
        console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
      } }), Object.assign(Jr.prototype, { addIndex: function(Q) {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(Q);
      }, addDrawCall: function(Q, te, ae) {
        ae !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(Q, te);
      }, clearDrawCalls: function() {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
      }, computeTangents: function() {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
      }, computeOffsets: function() {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
      } }), Object.defineProperties(Jr.prototype, { drawcalls: { get: function() {
        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
      } }, offsets: { get: function() {
        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
      } } }), Object.assign(Ia.prototype, { getArrays: function() {
        console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.");
      }, addShapeList: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.");
      }, addShape: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.");
      } }), Object.defineProperties(Jc.prototype, { dynamic: { set: function() {
        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");
      } }, onUpdate: { value: function() {
        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
      } } }), Object.defineProperties(In.prototype, { wrapAround: { get: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      }, set: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      } }, wrapRGB: { get: function() {
        return console.warn("THREE.Material: .wrapRGB has been removed."), new sn();
      } }, shading: { get: function() {
        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
      }, set: function(Q) {
        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = Q === Fe;
      } } }), Object.defineProperties(ma.prototype, { metal: { get: function() {
        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1;
      }, set: function() {
        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
      } } }), Object.defineProperties(la.prototype, { derivatives: { get: function() {
        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
      }, set: function(Q) {
        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = Q;
      } } }), Object.assign(iu.prototype, { animate: function(Q) {
        console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(Q);
      }, getCurrentRenderTarget: function() {
        return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
      }, getMaxAnisotropy: function() {
        return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
      }, getPrecision: function() {
        return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
      }, resetGLState: function() {
        return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
      }, supportsFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
      }, supportsHalfFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
      }, supportsStandardDerivatives: function() {
        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
      }, supportsCompressedTextureS3TC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
      }, supportsCompressedTexturePVRTC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
      }, supportsBlendMinMax: function() {
        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
      }, supportsVertexTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
      }, supportsInstancedArrays: function() {
        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
      }, enableScissorTest: function(Q) {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(Q);
      }, initMaterial: function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
      }, addPrePlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
      }, addPostPlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
      }, updateShadowMap: function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
      }, setFaceCulling: function() {
        console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
      } }), Object.defineProperties(iu.prototype, { shadowMapEnabled: { get: function() {
        return this.shadowMap.enabled;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = Q;
      } }, shadowMapType: { get: function() {
        return this.shadowMap.type;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = Q;
      } }, shadowMapCullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(al.prototype, { cullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      } }, renderReverseSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      } }, renderSingleSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(no.prototype, { wrapS: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = Q;
      } }, wrapT: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = Q;
      } }, magFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = Q;
      } }, minFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = Q;
      } }, anisotropy: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = Q;
      } }, offset: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = Q;
      } }, repeat: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = Q;
      } }, format: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = Q;
      } }, type: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = Q;
      } }, generateMipmaps: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
      }, set: function(Q) {
        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = Q;
      } } }), Object.defineProperties(sl.prototype, { standing: { set: function() {
        console.warn("THREE.WebVRManager: .standing has been removed.");
      } } }), ds.prototype.load = function(Q) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var te = this;
        return new bu().load(Q, function(ae) {
          te.setBuffer(ae);
        }), this;
      }, _u.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
      }, dc.prototype.updateCubeMap = function(Q, te) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(Q, te);
      };
      var hf = { merge: function(Q, te, ae) {
        var se;
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."), te.isMesh && (te.matrixAutoUpdate && te.updateMatrix(), se = te.matrix, te = te.geometry), Q.merge(te, se, ae);
      }, center: function(Q) {
        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), Q.center();
      } };
      function pf() {
        console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."), this.projectVector = function(Q, te) {
          console.warn("THREE.Projector: .projectVector() is now vector.project()."), Q.project(te);
        }, this.unprojectVector = function(Q, te) {
          console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), Q.unproject(te);
        }, this.pickingRay = function() {
          console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
        };
      }
      function Af() {
        console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"), this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), this.clear = function() {
        }, this.render = function() {
        }, this.setClearColor = function() {
        }, this.setSize = function() {
        };
      }
      Ya.crossOrigin = void 0, Ya.loadTexture = function(Q, te, ae, se) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var ue = new Nc();
        ue.setCrossOrigin(this.crossOrigin);
        var le = ue.load(Q, ae, void 0, se);
        return te && (le.mapping = te), le;
      }, Ya.loadTextureCube = function(Q, te, ae, se) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var ue = new lu();
        ue.setCrossOrigin(this.crossOrigin);
        var le = ue.load(Q, ae, void 0, se);
        return te && (le.mapping = te), le;
      }, Ya.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
      }, Ya.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
      };
      var gf = { createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      } };
      function mf() {
        console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js");
      }
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, he, fe = function() {
        function Oe(He, Ne) {
          for (var Pe = 0; Pe < Ne.length; Pe++) {
            var Fe = Ne[Pe];
            Fe.enumerable = Fe.enumerable || !1, Fe.configurable = !0, "value" in Fe && (Fe.writable = !0), Object.defineProperty(He, Fe.key, Fe);
          }
        }
        return function(He, Ne, Pe) {
          return Ne && Oe(He.prototype, Ne), Pe && Oe(He, Pe), He;
        };
      }(), xe = ge(oe(5)), Ae = function(Oe) {
        if (Oe && Oe.__esModule)
          return Oe;
        var He = {};
        if (Oe != null)
          for (var Ne in Oe)
            Object.prototype.hasOwnProperty.call(Oe, Ne) && (He[Ne] = Oe[Ne]);
        return He.default = Oe, He;
      }(oe(0)), Ee = oe(4), ye = ge(oe(3));
      function ge(Oe) {
        return Oe && Oe.__esModule ? Oe : { default: Oe };
      }
      var me = { directionligth: { create: function() {
        var Oe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, He = Oe.color, Ne = Oe.position, Pe = Oe.castShadow, Fe = new Ae.DirectionalLight(new Ae.Color(He), 0.95);
        return Fe.position.set(Ne.x, Ne.y, Ne.z), Fe.castShadow = Pe, Fe;
      } }, ambientlight: { create: function() {
        var Oe = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}).color;
        return new Ae.AmbientLight(new Ae.Color(Oe));
      } }, spotlight: { create: function() {
      } } }, Ce = function Oe(He) {
        if (He instanceof Ae.Mesh) {
          var Ne = He.geometry;
          if (Ne) {
            Ne.boundingBox || Ne.computeBoundingBox();
            var Pe = Ne.boundingBox;
            return He.updateMatrix(), Pe.applyMatrix4(He.matrix), Pe;
          }
          return new Ae.Box3(new Ae.Vector3(), new Ae.Vector3());
        }
        var Fe, Le = He.children.length, We = new Ae.Box3(new Ae.Vector3(), new Ae.Vector3());
        for (Fe = 0; Fe < Le; Fe++) {
          var rt = Oe(He.children[Fe]);
          rt.min.x < We.min.x && (We.min.x = rt.min.x), rt.max.x > We.max.x && (We.max.x = rt.max.x), rt.min.y < We.min.y && (We.min.y = rt.min.y), rt.max.y > We.max.y && (We.max.y = rt.max.y), rt.min.z < We.min.z && (We.min.z = rt.min.z), rt.max.z > We.max.z && (We.max.z = rt.max.z);
        }
        return He.updateMatrix(), We.applyMatrix4(He.matrix), We;
      }, Ie = (he = ce = function(Oe) {
        function He(Ne) {
          (function(Fe, Le) {
            if (!(Fe instanceof Le))
              throw new TypeError("Cannot call a class as a function");
          })(this, He);
          var Pe = function(Fe, Le) {
            if (!Fe)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !Le || typeof Le != "object" && typeof Le != "function" ? Fe : Le;
          }(this, (He.__proto__ || Object.getPrototypeOf(He)).call(this, Ne));
          return Pe.obj3d, Pe.src, Pe.state = { lights: [] }, Pe.lights = [], Pe.group = new Ae.Group(), Pe;
        }
        return function(Ne, Pe) {
          if (typeof Pe != "function" && Pe !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof Pe);
          Ne.prototype = Object.create(Pe && Pe.prototype, { constructor: { value: Ne, enumerable: !1, writable: !0, configurable: !0 } }), Pe && (Object.setPrototypeOf ? Object.setPrototypeOf(Ne, Pe) : Ne.__proto__ = Pe);
        }(He, xe.default.Component), fe(He, [{ key: "render", value: function() {
          var Ne = this;
          return this.state.lights, xe.default.createElement("div", { ref: function(Pe) {
            return Ne.$container = Pe;
          }, "data-loader": this.props.loader, style: this.style() });
        } }, { key: "componentDidUpdate", value: function() {
          var Ne = this;
          if (!this.obj3d)
            return !1;
          var Pe = this.props, Fe = Pe.src, Le = (Pe.background, Pe.width), We = Pe.height;
          this.camera.aspect = Le / We, this.camera.updateProjectionMatrix(), this.renderer.setSize(Le, We);
          var rt = this.props, gt = rt.enableKeys, kt = rt.enableRotate, Ke = rt.enableZoom, ht = rt.enabled;
          Object.assign(this.orbit_controls, { enableKeys: gt, enablePan: !0, enableRotate: kt, enableZoom: Ke, enabled: ht }), this.src !== void 0 && this.src != Fe && (this.src = Fe, this.remove3dModel(), this.load3dModel()), this.lights.forEach(function(Nt) {
            return Ne.scene.remove(Nt);
          }), this.lights = [], this.addLight("ambientlight", Ee.AmbientLight.defaultProps), this.need_children_lights ? this.addChildrenLights() : this.addLight("directionligth", Ee.DirectionLight.defaultProps);
        } }, { key: "componentWillUnmount", value: function() {
          this.tick.animate = !1;
        } }, { key: "componentDidMount", value: function() {
          var Ne = this, Pe = this.props, Fe = Pe.width, Le = Pe.height, We = Pe.antialias, rt = Pe.background;
          this.scene = new Ae.Scene(), this.camera = new Ae.PerspectiveCamera(45, Fe / Le, 0.1, 8888), this.renderer = new Ae.WebGLRenderer({ antialias: We }), this.renderer.setClearColor(new Ae.Color(rt)), this.renderer.setSize(Fe, Le), this.$container.appendChild(this.renderer.domElement), this.scene.add(this.group), this.camera.position.set(0, 0, 0.1), this.createDefaultLight();
          var gt = this.props, kt = gt.position, Ke = gt.rotation, ht = gt.scale;
          this.group.position.copy(new Ae.Vector3(kt.x, kt.y, kt.z)), this.group.rotation.set(Ke.x, Ke.y, Ke.z), this.group.scale.set(ht.x, ht.y, ht.z), this.load3dModel(), this.tick = (0, ye.default)(function() {
            if (Ne.renderer.render(Ne.scene, Ne.camera), Ne.obj3d) {
              Ne.group.children.length || Ne.group.add(Ne.obj3d);
              var Nt = Ne.props, Ft = Nt.position, At = Nt.rotation, St = Nt.scale;
              Ne.group.position.copy(new Ae.Vector3(Ft.x, Ft.y, Ft.z)), Ne.group.rotation.set(At.x, At.y, At.z), Ne.group.scale.set(St.x, St.y, St.z);
            }
          });
        } }, { key: "initControl", value: function() {
          var Ne = this.props, Pe = Ne.enableKeys, Fe = Ne.enableRotate, Le = Ne.enableZoom, We = Ne.enabled;
          this.orbit_controls = new Ae.OrbitControls(this.camera, this.renderer.domElement), Object.assign(this.orbit_controls, { enableKeys: Pe, enablePan: !0, enableRotate: Fe, enableZoom: Le, enabled: We }), this.orbit_controls.update();
        } }, { key: "remove3dModel", value: function() {
          this.obj3d && this.scene.remove(this.obj3d);
        } }, { key: "load3dModel", value: function() {
        } }, { key: "style", value: function() {
          var Ne = this.props, Pe = Ne.width, Fe = Ne.height;
          return Object.assign({}, { width: Pe + "px", height: Fe + "px" });
        } }, { key: "computeBoundingBox", value: function(Ne) {
          if (Ne instanceof Ae.Mesh) {
            var Pe = Ne.geometry;
            if (Pe) {
              Pe.boundingBox || Pe.computeBoundingBox();
              var Fe = Pe.boundingBox;
              return Ne.updateMatrix(), Fe.applyMatrix4(Ne.matrix), Fe;
            }
            return new Ae.Box3(new Ae.Vector3(), new Ae.Vector3());
          }
          var Le, We = Ne.children.length, rt = new Ae.Box3(new Ae.Vector3(), new Ae.Vector3());
          for (Le = 0; Le < We; Le++) {
            var gt = Ce(Ne.children[Le]);
            gt.min.x < rt.min.x && (rt.min.x = gt.min.x), gt.max.x > rt.max.x && (rt.max.x = gt.max.x), gt.min.y < rt.min.y && (rt.min.y = gt.min.y), gt.max.y > rt.max.y && (rt.max.y = gt.max.y), gt.min.z < rt.min.z && (rt.min.z = gt.min.z), gt.max.z > rt.max.z && (rt.max.z = gt.max.z);
          }
          return Ne.updateMatrix(), rt.applyMatrix4(Ne.matrix), rt;
        } }, { key: "traverseScene", value: function() {
        } }, { key: "createEnvironment", value: function() {
        } }, { key: "addLight", value: function(Ne, Pe) {
          if (/directionligth|ambientlight|spotlight/.test(Ne)) {
            var Fe = me[Ne].create(Pe);
            return this.scene.add(Fe), this.lights.push(Fe), Fe;
          }
        } }, { key: "addChildrenLights", value: function() {
          var Ne = this;
          this.lights.forEach(function(Pe) {
            Ne.scene.remove(Pe);
          }), this.lights = [], this.array_children.map(function(Pe) {
            var Fe = Pe.props, Le = Fe.__constructor;
            Ne.addLight(Le, Fe);
          });
        } }, { key: "createDefaultLight", value: function() {
          this.addLight("ambientlight", Ee.AmbientLight.defaultProps), this.need_children_lights ? this.addChildrenLights() : this.addLight("directionligth", Ee.DirectionLight.defaultProps);
        } }, { key: "array_children", get: function() {
          return this.props.children ? this.props.children instanceof Array ? this.props.children : [this.props.children] : [];
        } }, { key: "need_children_lights", get: function() {
          return !!this.array_children.filter(function(Ne) {
            return /directionligth|ambientlight|spotlight/.test(Ne.props.__constructor);
          }).length;
        } }]), He;
      }(), ce.defaultProps = { width: 500, height: 500, antialias: !0, loader: "", baseUrl: "", texPath: "", position: { x: 0, y: 0, z: 0 }, scale: { x: 1, y: 1, z: 1 }, rotation: { x: 0, y: 0, z: 0 }, background: "rgb(255,255,255)", enableKeys: !0, enableRotate: !0, enableZoom: !0, enabled: !0 }, he);
      ie.default = Ie;
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 }), ie.GLTFLoader = ie.ColladaLoader = ie.OBJLoader = ie.MTLLoader = ie.OrbitControls = void 0;
      var ce = function(ye) {
        if (ye && ye.__esModule)
          return ye;
        var ge = {};
        if (ye != null)
          for (var me in ye)
            Object.prototype.hasOwnProperty.call(ye, me) && (ge[me] = ye[me]);
        return ge.default = ye, ge;
      }(oe(0));
      ce.OrbitControls = function(ye, ge) {
        this.object = ye, this.domElement = ge !== void 0 ? ge : document, this.enabled = !0, this.target = new ce.Vector3(), this.minDistance = 0, this.maxDistance = 1 / 0, this.minZoom = 0, this.maxZoom = 1 / 0, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -1 / 0, this.maxAzimuthAngle = 1 / 0, this.enableDamping = !1, this.dampingFactor = 0.25, this.enableZoom = !0, this.zoomSpeed = 1, this.enableRotate = !0, this.rotateSpeed = 1, this.enablePan = !0, this.keyPanSpeed = 7, this.autoRotate = !1, this.autoRotateSpeed = 2, this.enableKeys = !0, this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }, this.mouseButtons = { ORBIT: ce.MOUSE.LEFT, ZOOM: ce.MOUSE.MIDDLE, PAN: ce.MOUSE.RIGHT }, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function() {
          return Fe.phi;
        }, this.getAzimuthalAngle = function() {
          return Fe.theta;
        }, this.reset = function() {
          me.target.copy(me.target0), me.object.position.copy(me.position0), me.object.zoom = me.zoom0, me.object.updateProjectionMatrix(), me.dispatchEvent(Ce), me.update(), Ne = He.NONE;
        }, this.update = function() {
          var $e = new ce.Vector3(), _e = new ce.Quaternion().setFromUnitVectors(ye.up, new ce.Vector3(0, 1, 0)), Be = _e.clone().inverse(), be = new ce.Vector3(), ke = new ce.Quaternion();
          return function() {
            var Ve = me.object.position;
            return $e.copy(Ve).sub(me.target), $e.applyQuaternion(_e), Fe.setFromVector3($e), me.autoRotate && Ne === He.NONE && Zt(2 * Math.PI / 60 / 60 * me.autoRotateSpeed), Fe.theta += Le.theta, Fe.phi += Le.phi, Fe.theta = Math.max(me.minAzimuthAngle, Math.min(me.maxAzimuthAngle, Fe.theta)), Fe.phi = Math.max(me.minPolarAngle, Math.min(me.maxPolarAngle, Fe.phi)), Fe.makeSafe(), Fe.radius *= We, Fe.radius = Math.max(me.minDistance, Math.min(me.maxDistance, Fe.radius)), me.target.add(rt), $e.setFromSpherical(Fe), $e.applyQuaternion(Be), Ve.copy(me.target).add($e), me.object.lookAt(me.target), me.enableDamping === !0 ? (Le.theta *= 1 - me.dampingFactor, Le.phi *= 1 - me.dampingFactor) : Le.set(0, 0, 0), We = 1, rt.set(0, 0, 0), !!(gt || be.distanceToSquared(me.object.position) > Pe || 8 * (1 - ke.dot(me.object.quaternion)) > Pe) && (me.dispatchEvent(Ce), be.copy(me.object.position), ke.copy(me.object.quaternion), gt = !1, !0);
          };
        }(), this.dispose = function() {
          me.domElement.removeEventListener("contextmenu", lt, !1), me.domElement.removeEventListener("mousedown", rr, !1), me.domElement.removeEventListener("wheel", Ut, !1), me.domElement.removeEventListener("touchstart", tt, !1), me.domElement.removeEventListener("touchend", Et, !1), me.domElement.removeEventListener("touchmove", et, !1), document.removeEventListener("mousemove", Ar, !1), document.removeEventListener("mouseup", vt, !1), window.removeEventListener("keydown", Xe, !1);
        };
        var me = this, Ce = { type: "change" }, Ie = { type: "start" }, Oe = { type: "end" }, He = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 }, Ne = He.NONE, Pe = 1e-6, Fe = new ce.Spherical(), Le = new ce.Spherical(), We = 1, rt = new ce.Vector3(), gt = !1, kt = new ce.Vector2(), Ke = new ce.Vector2(), ht = new ce.Vector2(), Nt = new ce.Vector2(), Ft = new ce.Vector2(), At = new ce.Vector2(), St = new ce.Vector2(), Vt = new ce.Vector2(), Xt = new ce.Vector2();
        function Lt() {
          return Math.pow(0.95, me.zoomSpeed);
        }
        function Zt($e) {
          Le.theta -= $e;
        }
        function Gt($e) {
          Le.phi -= $e;
        }
        var pt = function() {
          var $e = new ce.Vector3();
          return function(_e, Be) {
            $e.setFromMatrixColumn(Be, 0), $e.multiplyScalar(-_e), rt.add($e);
          };
        }(), It = function() {
          var $e = new ce.Vector3();
          return function(_e, Be) {
            $e.setFromMatrixColumn(Be, 1), $e.multiplyScalar(_e), rt.add($e);
          };
        }(), qt = function() {
          var $e = new ce.Vector3();
          return function(_e, Be) {
            var be = me.domElement === document ? me.domElement.body : me.domElement;
            if (me.object instanceof ce.PerspectiveCamera) {
              var ke = me.object.position;
              $e.copy(ke).sub(me.target);
              var Ve = $e.length();
              Ve *= Math.tan(me.object.fov / 2 * Math.PI / 180), pt(2 * _e * Ve / be.clientHeight, me.object.matrix), It(2 * Be * Ve / be.clientHeight, me.object.matrix);
            } else
              me.object instanceof ce.OrthographicCamera ? (pt(_e * (me.object.right - me.object.left) / me.object.zoom / be.clientWidth, me.object.matrix), It(Be * (me.object.top - me.object.bottom) / me.object.zoom / be.clientHeight, me.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), me.enablePan = !1);
          };
        }();
        function De($e) {
          me.object instanceof ce.PerspectiveCamera ? We /= $e : me.object instanceof ce.OrthographicCamera ? (me.object.zoom = Math.max(me.minZoom, Math.min(me.maxZoom, me.object.zoom * $e)), me.object.updateProjectionMatrix(), gt = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), me.enableZoom = !1);
        }
        function ar($e) {
          me.object instanceof ce.PerspectiveCamera ? We *= $e : me.object instanceof ce.OrthographicCamera ? (me.object.zoom = Math.max(me.minZoom, Math.min(me.maxZoom, me.object.zoom / $e)), me.object.updateProjectionMatrix(), gt = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), me.enableZoom = !1);
        }
        function rr($e) {
          if (me.enabled !== !1) {
            if ($e.preventDefault(), $e.button === me.mouseButtons.ORBIT) {
              if (me.enableRotate === !1)
                return;
              (function(_e) {
                kt.set(_e.clientX, _e.clientY);
              })($e), Ne = He.ROTATE;
            } else if ($e.button === me.mouseButtons.ZOOM) {
              if (me.enableZoom === !1)
                return;
              (function(_e) {
                St.set(_e.clientX, _e.clientY);
              })($e), Ne = He.DOLLY;
            } else if ($e.button === me.mouseButtons.PAN) {
              if (me.enablePan === !1)
                return;
              (function(_e) {
                Nt.set(_e.clientX, _e.clientY);
              })($e), Ne = He.PAN;
            }
            Ne !== He.NONE && (document.addEventListener("mousemove", Ar, !1), document.addEventListener("mouseup", vt, !1), me.dispatchEvent(Ie));
          }
        }
        function Ar($e) {
          if (me.enabled !== !1) {
            if ($e.preventDefault(), Ne === He.ROTATE) {
              if (me.enableRotate === !1)
                return;
              (function(_e) {
                Ke.set(_e.clientX, _e.clientY), ht.subVectors(Ke, kt);
                var Be = me.domElement === document ? me.domElement.body : me.domElement;
                Zt(2 * Math.PI * ht.x / Be.clientWidth * me.rotateSpeed), Gt(2 * Math.PI * ht.y / Be.clientHeight * me.rotateSpeed), kt.copy(Ke), me.update();
              })($e);
            } else if (Ne === He.DOLLY) {
              if (me.enableZoom === !1)
                return;
              (function(_e) {
                Vt.set(_e.clientX, _e.clientY), Xt.subVectors(Vt, St), Xt.y > 0 ? De(Lt()) : Xt.y < 0 && ar(Lt()), St.copy(Vt), me.update();
              })($e);
            } else if (Ne === He.PAN) {
              if (me.enablePan === !1)
                return;
              (function(_e) {
                Ft.set(_e.clientX, _e.clientY), At.subVectors(Ft, Nt), qt(At.x, At.y), Nt.copy(Ft), me.update();
              })($e);
            }
          }
        }
        function vt($e) {
          me.enabled !== !1 && (document.removeEventListener("mousemove", Ar, !1), document.removeEventListener("mouseup", vt, !1), me.dispatchEvent(Oe), Ne = He.NONE);
        }
        function Ut($e) {
          me.enabled === !1 || me.enableZoom === !1 || Ne !== He.NONE && Ne !== He.ROTATE || ($e.preventDefault(), $e.stopPropagation(), function(_e) {
            _e.deltaY < 0 ? ar(Lt()) : _e.deltaY > 0 && De(Lt()), me.update();
          }($e), me.dispatchEvent(Ie), me.dispatchEvent(Oe));
        }
        function Xe($e) {
          me.enabled !== !1 && me.enableKeys !== !1 && me.enablePan !== !1 && function(_e) {
            switch (_e.keyCode) {
              case me.keys.UP:
                qt(0, me.keyPanSpeed), me.update();
                break;
              case me.keys.BOTTOM:
                qt(0, -me.keyPanSpeed), me.update();
                break;
              case me.keys.LEFT:
                qt(me.keyPanSpeed, 0), me.update();
                break;
              case me.keys.RIGHT:
                qt(-me.keyPanSpeed, 0), me.update();
            }
          }($e);
        }
        function tt($e) {
          if (me.enabled !== !1) {
            switch ($e.touches.length) {
              case 1:
                if (me.enableRotate === !1)
                  return;
                (function(_e) {
                  kt.set(_e.touches[0].pageX, _e.touches[0].pageY);
                })($e), Ne = He.TOUCH_ROTATE;
                break;
              case 2:
                if (me.enableZoom === !1)
                  return;
                (function(_e) {
                  var Be = _e.touches[0].pageX - _e.touches[1].pageX, be = _e.touches[0].pageY - _e.touches[1].pageY, ke = Math.sqrt(Be * Be + be * be);
                  St.set(0, ke);
                })($e), Ne = He.TOUCH_DOLLY;
                break;
              case 3:
                if (me.enablePan === !1)
                  return;
                (function(_e) {
                  Nt.set(_e.touches[0].pageX, _e.touches[0].pageY);
                })($e), Ne = He.TOUCH_PAN;
                break;
              default:
                Ne = He.NONE;
            }
            Ne !== He.NONE && me.dispatchEvent(Ie);
          }
        }
        function et($e) {
          if (me.enabled !== !1)
            switch ($e.preventDefault(), $e.stopPropagation(), $e.touches.length) {
              case 1:
                if (me.enableRotate === !1 || Ne !== He.TOUCH_ROTATE)
                  return;
                (function(_e) {
                  Ke.set(_e.touches[0].pageX, _e.touches[0].pageY), ht.subVectors(Ke, kt);
                  var Be = me.domElement === document ? me.domElement.body : me.domElement;
                  Zt(2 * Math.PI * ht.x / Be.clientWidth * me.rotateSpeed), Gt(2 * Math.PI * ht.y / Be.clientHeight * me.rotateSpeed), kt.copy(Ke), me.update();
                })($e);
                break;
              case 2:
                if (me.enableZoom === !1 || Ne !== He.TOUCH_DOLLY)
                  return;
                (function(_e) {
                  var Be = _e.touches[0].pageX - _e.touches[1].pageX, be = _e.touches[0].pageY - _e.touches[1].pageY, ke = Math.sqrt(Be * Be + be * be);
                  Vt.set(0, ke), Xt.subVectors(Vt, St), Xt.y > 0 ? ar(Lt()) : Xt.y < 0 && De(Lt()), St.copy(Vt), me.update();
                })($e);
                break;
              case 3:
                if (me.enablePan === !1 || Ne !== He.TOUCH_PAN)
                  return;
                (function(_e) {
                  Ft.set(_e.touches[0].pageX, _e.touches[0].pageY), At.subVectors(Ft, Nt), qt(At.x, At.y), Nt.copy(Ft), me.update();
                })($e);
                break;
              default:
                Ne = He.NONE;
            }
        }
        function Et($e) {
          me.enabled !== !1 && (me.dispatchEvent(Oe), Ne = He.NONE);
        }
        function lt($e) {
          $e.preventDefault();
        }
        me.domElement.addEventListener("contextmenu", lt, !1), me.domElement.addEventListener("mousedown", rr, !1), me.domElement.addEventListener("wheel", Ut, !1), me.domElement.addEventListener("touchstart", tt, !1), me.domElement.addEventListener("touchend", Et, !1), me.domElement.addEventListener("touchmove", et, !1), window.addEventListener("keydown", Xe, !1), this.update();
      }, ce.OrbitControls.prototype = Object.create(ce.EventDispatcher.prototype), ce.OrbitControls.prototype.constructor = ce.OrbitControls, Object.defineProperties(ce.OrbitControls.prototype, { center: { get: function() {
        return console.warn("THREE.OrbitControls: .center has been renamed to .target"), this.target;
      } }, noZoom: { get: function() {
        return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), !this.enableZoom;
      }, set: function(ye) {
        console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), this.enableZoom = !ye;
      } }, noRotate: { get: function() {
        return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), !this.enableRotate;
      }, set: function(ye) {
        console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), this.enableRotate = !ye;
      } }, noPan: { get: function() {
        return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), !this.enablePan;
      }, set: function(ye) {
        console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), this.enablePan = !ye;
      } }, noKeys: { get: function() {
        return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), !this.enableKeys;
      }, set: function(ye) {
        console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), this.enableKeys = !ye;
      } }, staticMoving: { get: function() {
        return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), !this.enableDamping;
      }, set: function(ye) {
        console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), this.enableDamping = !ye;
      } }, dynamicDampingFactor: { get: function() {
        return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor;
      }, set: function(ye) {
        console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor = ye;
      } } }), ce.MTLLoader = function(ye) {
        this.manager = ye !== void 0 ? ye : ce.DefaultLoadingManager;
      }, ce.MTLLoader.prototype = { constructor: ce.MTLLoader, load: function(ye, ge, me, Ce) {
        var Ie = this, Oe = new ce.FileLoader(this.manager);
        Oe.setPath(this.path), Oe.load(ye, function(He) {
          ge(Ie.parse(He));
        }, me, Ce);
      }, setPath: function(ye) {
        this.path = ye;
      }, setTexturePath: function(ye) {
        this.texturePath = ye;
      }, setBaseUrl: function(ye) {
        console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead."), this.setTexturePath(ye);
      }, setCrossOrigin: function(ye) {
        this.crossOrigin = ye;
      }, setMaterialOptions: function(ye) {
        this.materialOptions = ye;
      }, parse: function(ye) {
        for (var ge = ye.split(`
`), me = {}, Ce = /\s+/, Ie = {}, Oe = 0; Oe < ge.length; Oe++) {
          var He = ge[Oe];
          if ((He = He.trim()).length !== 0 && He.charAt(0) !== "#") {
            var Ne = He.indexOf(" "), Pe = Ne >= 0 ? He.substring(0, Ne) : He;
            Pe = Pe.toLowerCase();
            var Fe = Ne >= 0 ? He.substring(Ne + 1) : "";
            if (Fe = Fe.trim(), Pe === "newmtl")
              me = { name: Fe }, Ie[Fe] = me;
            else if (me)
              if (Pe === "ka" || Pe === "kd" || Pe === "ks") {
                var Le = Fe.split(Ce, 3);
                me[Pe] = [parseFloat(Le[0]), parseFloat(Le[1]), parseFloat(Le[2])];
              } else
                me[Pe] = Fe;
          }
        }
        var We = new ce.MTLLoader.MaterialCreator(this.texturePath || this.path, this.materialOptions);
        return We.setCrossOrigin(this.crossOrigin), We.setManager(this.manager), We.setMaterials(Ie), We;
      } }, ce.MTLLoader.MaterialCreator = function(ye, ge) {
        this.baseUrl = ye || "", this.options = ge, this.materialsInfo = {}, this.materials = {}, this.materialsArray = [], this.nameLookup = {}, this.side = this.options && this.options.side ? this.options.side : ce.FrontSide, this.wrap = this.options && this.options.wrap ? this.options.wrap : ce.RepeatWrapping;
      }, ce.MTLLoader.MaterialCreator.prototype = { constructor: ce.MTLLoader.MaterialCreator, crossOrigin: "Anonymous", setCrossOrigin: function(ye) {
        this.crossOrigin = ye;
      }, setManager: function(ye) {
        this.manager = ye;
      }, setMaterials: function(ye) {
        this.materialsInfo = this.convert(ye), this.materials = {}, this.materialsArray = [], this.nameLookup = {};
      }, convert: function(ye) {
        if (!this.options)
          return ye;
        var ge = {};
        for (var me in ye) {
          var Ce = ye[me], Ie = {};
          for (var Oe in ge[me] = Ie, Ce) {
            var He = !0, Ne = Ce[Oe], Pe = Oe.toLowerCase();
            switch (Pe) {
              case "kd":
              case "ka":
              case "ks":
                this.options && this.options.normalizeRGB && (Ne = [Ne[0] / 255, Ne[1] / 255, Ne[2] / 255]), this.options && this.options.ignoreZeroRGBs && Ne[0] === 0 && Ne[1] === 0 && Ne[2] === 0 && (He = !1);
            }
            He && (Ie[Pe] = Ne);
          }
        }
        return ge;
      }, preload: function() {
        for (var ye in this.materialsInfo)
          this.create(ye);
      }, getIndex: function(ye) {
        return this.nameLookup[ye];
      }, getAsArray: function() {
        var ye = 0;
        for (var ge in this.materialsInfo)
          this.materialsArray[ye] = this.create(ge), this.nameLookup[ge] = ye, ye++;
        return this.materialsArray;
      }, create: function(ye) {
        return this.materials[ye] === void 0 && this.createMaterial_(ye), this.materials[ye];
      }, createMaterial_: function(ye) {
        var ge = this, me = this.materialsInfo[ye], Ce = { name: ye, side: this.side };
        function Ie(Pe, Fe) {
          if (!Ce[Pe]) {
            var Le = ge.getTextureParams(Fe, Ce), We = ge.loadTexture(function(rt, gt) {
              return typeof gt != "string" || gt === "" ? "" : /^https?:\/\//i.test(gt) ? gt : rt + gt;
            }(ge.baseUrl, Le.url));
            We.repeat.copy(Le.scale), We.offset.copy(Le.offset), We.wrapS = ge.wrap, We.wrapT = ge.wrap, Ce[Pe] = We;
          }
        }
        for (var Oe in me) {
          var He, Ne = me[Oe];
          if (Ne !== "")
            switch (Oe.toLowerCase()) {
              case "kd":
                Ce.color = new ce.Color().fromArray(Ne);
                break;
              case "ks":
                Ce.specular = new ce.Color().fromArray(Ne);
                break;
              case "map_kd":
                Ie("map", Ne);
                break;
              case "map_ks":
                Ie("specularMap", Ne);
                break;
              case "norm":
                Ie("normalMap", Ne);
                break;
              case "map_bump":
              case "bump":
                Ie("bumpMap", Ne);
                break;
              case "ns":
                Ce.shininess = parseFloat(Ne);
                break;
              case "d":
                (He = parseFloat(Ne)) < 1 && (Ce.opacity = He, Ce.transparent = !0);
                break;
              case "tr":
                (He = parseFloat(Ne)) > 0 && (Ce.opacity = 1 - He, Ce.transparent = !0);
            }
        }
        return this.materials[ye] = new ce.MeshPhongMaterial(Ce), this.materials[ye];
      }, getTextureParams: function(ye, ge) {
        var me, Ce = { scale: new ce.Vector2(1, 1), offset: new ce.Vector2(0, 0) }, Ie = ye.split(/\s+/);
        return (me = Ie.indexOf("-bm")) >= 0 && (ge.bumpScale = parseFloat(Ie[me + 1]), Ie.splice(me, 2)), (me = Ie.indexOf("-s")) >= 0 && (Ce.scale.set(parseFloat(Ie[me + 1]), parseFloat(Ie[me + 2])), Ie.splice(me, 4)), (me = Ie.indexOf("-o")) >= 0 && (Ce.offset.set(parseFloat(Ie[me + 1]), parseFloat(Ie[me + 2])), Ie.splice(me, 4)), Ce.url = Ie.join(" ").trim(), Ce;
      }, loadTexture: function(ye, ge, me, Ce, Ie) {
        var Oe, He = ce.Loader.Handlers.get(ye), Ne = this.manager !== void 0 ? this.manager : ce.DefaultLoadingManager;
        return He === null && (He = new ce.TextureLoader(Ne)), He.setCrossOrigin && He.setCrossOrigin(this.crossOrigin), Oe = He.load(ye, me, Ce, Ie), ge !== void 0 && (Oe.mapping = ge), Oe;
      } }, ce.OBJLoader = function() {
        var ye = /^[og]\s*(.+)?/, ge = /^mtllib /, me = /^usemtl /;
        function Ce(Ie) {
          this.manager = Ie !== void 0 ? Ie : ce.DefaultLoadingManager, this.materials = null;
        }
        return Ce.prototype = { constructor: Ce, load: function(Ie, Oe, He, Ne) {
          var Pe = this, Fe = new ce.FileLoader(Pe.manager);
          Fe.setPath(this.path), Fe.load(Ie, function(Le) {
            Oe(Pe.parse(Le));
          }, He, Ne);
        }, setPath: function(Ie) {
          this.path = Ie;
        }, setMaterials: function(Ie) {
          return this.materials = Ie, this;
        }, parse: function(Ie) {
          console.time("OBJLoader");
          var Oe = new function() {
            var ke = { objects: [], object: {}, vertices: [], normals: [], colors: [], uvs: [], materialLibraries: [], startObject: function(Ve, Je) {
              if (this.object && this.object.fromDeclaration === !1)
                return this.object.name = Ve, void (this.object.fromDeclaration = Je !== !1);
              var at = this.object && typeof this.object.currentMaterial == "function" ? this.object.currentMaterial() : void 0;
              if (this.object && typeof this.object._finalize == "function" && this.object._finalize(!0), this.object = { name: Ve || "", fromDeclaration: Je !== !1, geometry: { vertices: [], normals: [], colors: [], uvs: [] }, materials: [], smooth: !0, startMaterial: function(Dt, zt) {
                var Yt = this._finalize(!1);
                Yt && (Yt.inherited || Yt.groupCount <= 0) && this.materials.splice(Yt.index, 1);
                var Ue = { index: this.materials.length, name: Dt || "", mtllib: Array.isArray(zt) && zt.length > 0 ? zt[zt.length - 1] : "", smooth: Yt !== void 0 ? Yt.smooth : this.smooth, groupStart: Yt !== void 0 ? Yt.groupEnd : 0, groupEnd: -1, groupCount: -1, inherited: !1, clone: function(Te) {
                  var Re = { index: typeof Te == "number" ? Te : this.index, name: this.name, mtllib: this.mtllib, smooth: this.smooth, groupStart: 0, groupEnd: -1, groupCount: -1, inherited: !1 };
                  return Re.clone = this.clone.bind(Re), Re;
                } };
                return this.materials.push(Ue), Ue;
              }, currentMaterial: function() {
                if (this.materials.length > 0)
                  return this.materials[this.materials.length - 1];
              }, _finalize: function(Dt) {
                var zt = this.currentMaterial();
                if (zt && zt.groupEnd === -1 && (zt.groupEnd = this.geometry.vertices.length / 3, zt.groupCount = zt.groupEnd - zt.groupStart, zt.inherited = !1), Dt && this.materials.length > 1)
                  for (var Yt = this.materials.length - 1; Yt >= 0; Yt--)
                    this.materials[Yt].groupCount <= 0 && this.materials.splice(Yt, 1);
                return Dt && this.materials.length === 0 && this.materials.push({ name: "", smooth: this.smooth }), zt;
              } }, at && at.name && typeof at.clone == "function") {
                var Tt = at.clone(0);
                Tt.inherited = !0, this.object.materials.push(Tt);
              }
              this.objects.push(this.object);
            }, finalize: function() {
              this.object && typeof this.object._finalize == "function" && this.object._finalize(!0);
            }, parseVertexIndex: function(Ve, Je) {
              var at = parseInt(Ve, 10);
              return 3 * (at >= 0 ? at - 1 : at + Je / 3);
            }, parseNormalIndex: function(Ve, Je) {
              var at = parseInt(Ve, 10);
              return 3 * (at >= 0 ? at - 1 : at + Je / 3);
            }, parseUVIndex: function(Ve, Je) {
              var at = parseInt(Ve, 10);
              return 2 * (at >= 0 ? at - 1 : at + Je / 2);
            }, addVertex: function(Ve, Je, at) {
              var Tt = this.vertices, Dt = this.object.geometry.vertices;
              Dt.push(Tt[Ve + 0], Tt[Ve + 1], Tt[Ve + 2]), Dt.push(Tt[Je + 0], Tt[Je + 1], Tt[Je + 2]), Dt.push(Tt[at + 0], Tt[at + 1], Tt[at + 2]);
            }, addVertexLine: function(Ve) {
              var Je = this.vertices;
              this.object.geometry.vertices.push(Je[Ve + 0], Je[Ve + 1], Je[Ve + 2]);
            }, addNormal: function(Ve, Je, at) {
              var Tt = this.normals, Dt = this.object.geometry.normals;
              Dt.push(Tt[Ve + 0], Tt[Ve + 1], Tt[Ve + 2]), Dt.push(Tt[Je + 0], Tt[Je + 1], Tt[Je + 2]), Dt.push(Tt[at + 0], Tt[at + 1], Tt[at + 2]);
            }, addColor: function(Ve, Je, at) {
              var Tt = this.colors, Dt = this.object.geometry.colors;
              Dt.push(Tt[Ve + 0], Tt[Ve + 1], Tt[Ve + 2]), Dt.push(Tt[Je + 0], Tt[Je + 1], Tt[Je + 2]), Dt.push(Tt[at + 0], Tt[at + 1], Tt[at + 2]);
            }, addUV: function(Ve, Je, at) {
              var Tt = this.uvs, Dt = this.object.geometry.uvs;
              Dt.push(Tt[Ve + 0], Tt[Ve + 1]), Dt.push(Tt[Je + 0], Tt[Je + 1]), Dt.push(Tt[at + 0], Tt[at + 1]);
            }, addUVLine: function(Ve) {
              var Je = this.uvs;
              this.object.geometry.uvs.push(Je[Ve + 0], Je[Ve + 1]);
            }, addFace: function(Ve, Je, at, Tt, Dt, zt, Yt, Ue, Te) {
              var Re = this.vertices.length, it = this.parseVertexIndex(Ve, Re), bt = this.parseVertexIndex(Je, Re), Qt = this.parseVertexIndex(at, Re);
              if (this.addVertex(it, bt, Qt), Tt !== void 0) {
                var jt = this.uvs.length;
                it = this.parseUVIndex(Tt, jt), bt = this.parseUVIndex(Dt, jt), Qt = this.parseUVIndex(zt, jt), this.addUV(it, bt, Qt);
              }
              if (Yt !== void 0) {
                var yr = this.normals.length;
                it = this.parseNormalIndex(Yt, yr), bt = Yt === Ue ? it : this.parseNormalIndex(Ue, yr), Qt = Yt === Te ? it : this.parseNormalIndex(Te, yr), this.addNormal(it, bt, Qt);
              }
              this.colors.length > 0 && this.addColor(it, bt, Qt);
            }, addLineGeometry: function(Ve, Je) {
              this.object.geometry.type = "Line";
              for (var at = this.vertices.length, Tt = this.uvs.length, Dt = 0, zt = Ve.length; Dt < zt; Dt++)
                this.addVertexLine(this.parseVertexIndex(Ve[Dt], at));
              var Yt = 0;
              for (zt = Je.length; Yt < zt; Yt++)
                this.addUVLine(this.parseUVIndex(Je[Yt], Tt));
            } };
            return ke.startObject("", !1), ke;
          }();
          Ie.indexOf(`\r
`) !== -1 && (Ie = Ie.replace(/\r\n/g, `
`)), Ie.indexOf(`\\
`) !== -1 && (Ie = Ie.replace(/\\\n/g, ""));
          for (var He = Ie.split(`
`), Ne = "", Pe = "", Fe = [], Le = typeof "".trimLeft == "function", We = 0, rt = He.length; We < rt; We++)
            if (Ne = He[We], (Ne = Le ? Ne.trimLeft() : Ne.trim()).length !== 0 && (Pe = Ne.charAt(0)) !== "#")
              if (Pe === "v") {
                var gt = Ne.split(/\s+/);
                switch (gt[0]) {
                  case "v":
                    Oe.vertices.push(parseFloat(gt[1]), parseFloat(gt[2]), parseFloat(gt[3])), gt.length === 8 && Oe.colors.push(parseFloat(gt[4]), parseFloat(gt[5]), parseFloat(gt[6]));
                    break;
                  case "vn":
                    Oe.normals.push(parseFloat(gt[1]), parseFloat(gt[2]), parseFloat(gt[3]));
                    break;
                  case "vt":
                    Oe.uvs.push(parseFloat(gt[1]), parseFloat(gt[2]));
                }
              } else if (Pe === "f") {
                for (var kt = Ne.substr(1).trim().split(/\s+/), Ke = [], ht = 0, Nt = kt.length; ht < Nt; ht++) {
                  var Ft = kt[ht];
                  if (Ft.length > 0) {
                    var At = Ft.split("/");
                    Ke.push(At);
                  }
                }
                var St = Ke[0];
                for (ht = 1, Nt = Ke.length - 1; ht < Nt; ht++) {
                  var Vt = Ke[ht], Xt = Ke[ht + 1];
                  Oe.addFace(St[0], Vt[0], Xt[0], St[1], Vt[1], Xt[1], St[2], Vt[2], Xt[2]);
                }
              } else if (Pe === "l") {
                var Lt = Ne.substring(1).trim().split(" "), Zt = [], Gt = [];
                if (Ne.indexOf("/") === -1)
                  Zt = Lt;
                else
                  for (var pt = 0, It = Lt.length; pt < It; pt++) {
                    var qt = Lt[pt].split("/");
                    qt[0] !== "" && Zt.push(qt[0]), qt[1] !== "" && Gt.push(qt[1]);
                  }
                Oe.addLineGeometry(Zt, Gt);
              } else if ((Fe = ye.exec(Ne)) !== null) {
                var De = (" " + Fe[0].substr(1).trim()).substr(1);
                Oe.startObject(De);
              } else if (me.test(Ne))
                Oe.object.startMaterial(Ne.substring(7).trim(), Oe.materialLibraries);
              else if (ge.test(Ne))
                Oe.materialLibraries.push(Ne.substring(7).trim());
              else {
                if (Pe !== "s") {
                  if (Ne === "\0")
                    continue;
                  throw new Error('THREE.OBJLoader: Unexpected line: "' + Ne + '"');
                }
                if ((Fe = Ne.split(" ")).length > 1) {
                  var ar = Fe[1].trim().toLowerCase();
                  Oe.object.smooth = ar !== "0" && ar !== "off";
                } else
                  Oe.object.smooth = !0;
                (Be = Oe.object.currentMaterial()) && (Be.smooth = Oe.object.smooth);
              }
          Oe.finalize();
          var rr = new ce.Group();
          for (rr.materialLibraries = [].concat(Oe.materialLibraries), We = 0, rt = Oe.objects.length; We < rt; We++) {
            var Ar = Oe.objects[We], vt = Ar.geometry, Ut = Ar.materials, Xe = vt.type === "Line";
            if (vt.vertices.length !== 0) {
              var tt = new ce.BufferGeometry();
              tt.addAttribute("position", new ce.Float32BufferAttribute(vt.vertices, 3)), vt.normals.length > 0 ? tt.addAttribute("normal", new ce.Float32BufferAttribute(vt.normals, 3)) : tt.computeVertexNormals(), vt.colors.length > 0 && tt.addAttribute("color", new ce.Float32BufferAttribute(vt.colors, 3)), vt.uvs.length > 0 && tt.addAttribute("uv", new ce.Float32BufferAttribute(vt.uvs, 2));
              for (var et, Et = [], lt = 0, $e = Ut.length; lt < $e; lt++) {
                var _e = Ut[lt], Be = void 0;
                if (this.materials !== null && (Be = this.materials.create(_e.name), Xe && Be && !(Be instanceof ce.LineBasicMaterial))) {
                  var be = new ce.LineBasicMaterial();
                  be.copy(Be), Be = be;
                }
                Be || ((Be = Xe ? new ce.LineBasicMaterial() : new ce.MeshPhongMaterial()).name = _e.name), Be.flatShading = !_e.smooth, Et.push(Be);
              }
              if (Et.length > 1) {
                for (lt = 0, $e = Ut.length; lt < $e; lt++)
                  _e = Ut[lt], tt.addGroup(_e.groupStart, _e.groupCount, lt);
                et = Xe ? new ce.LineSegments(tt, Et) : new ce.Mesh(tt, Et);
              } else
                et = Xe ? new ce.LineSegments(tt, Et[0]) : new ce.Mesh(tt, Et[0]);
              et.name = Ar.name, rr.add(et);
            }
          }
          return console.timeEnd("OBJLoader"), rr;
        } }, Ce;
      }(), ce.ColladaLoader = function(ye) {
        this.manager = ye !== void 0 ? ye : ce.DefaultLoadingManager;
      }, ce.ColladaLoader.prototype = { constructor: ce.ColladaLoader, crossOrigin: "anonymous", load: function(ye, ge, me, Ce) {
        var Ie = this, Oe = Ie.path === void 0 ? ce.LoaderUtils.extractUrlBase(ye) : Ie.path;
        new ce.FileLoader(Ie.manager).load(ye, function(He) {
          ge(Ie.parse(He, Oe));
        }, me, Ce);
      }, setPath: function(ye) {
        return this.path = ye, this;
      }, options: { set convertUpAxis(ye) {
        console.warn("THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.");
      } }, setCrossOrigin: function(ye) {
        return this.crossOrigin = ye, this;
      }, parse: function(ye, ge) {
        function me(qe, Ye) {
          for (var ot = [], ft = qe.childNodes, ut = 0, Jt = ft.length; ut < Jt; ut++) {
            var cr = ft[ut];
            cr.nodeName === Ye && ot.push(cr);
          }
          return ot;
        }
        function Ce(qe) {
          if (qe.length === 0)
            return [];
          for (var Ye = qe.trim().split(/\s+/), ot = new Array(Ye.length), ft = 0, ut = Ye.length; ft < ut; ft++)
            ot[ft] = Ye[ft];
          return ot;
        }
        function Ie(qe) {
          if (qe.length === 0)
            return [];
          for (var Ye = qe.trim().split(/\s+/), ot = new Array(Ye.length), ft = 0, ut = Ye.length; ft < ut; ft++)
            ot[ft] = parseFloat(Ye[ft]);
          return ot;
        }
        function Oe(qe) {
          if (qe.length === 0)
            return [];
          for (var Ye = qe.trim().split(/\s+/), ot = new Array(Ye.length), ft = 0, ut = Ye.length; ft < ut; ft++)
            ot[ft] = parseInt(Ye[ft]);
          return ot;
        }
        function He(qe) {
          return qe.substring(1);
        }
        function Ne(qe) {
          return Object.keys(qe).length === 0;
        }
        function Pe(qe, Ye, ot, ft) {
          var ut = me(qe, Ye)[0];
          if (ut !== void 0)
            for (var Jt = me(ut, ot), cr = 0; cr < Jt.length; cr++)
              ft(Jt[cr]);
        }
        function Fe(qe, Ye) {
          for (var ot in qe)
            qe[ot].build = Ye(qe[ot]);
        }
        function Le(qe, Ye) {
          return qe.build !== void 0 || (qe.build = Ye(qe)), qe.build;
        }
        function We(qe) {
          for (var Ye = { inputs: {} }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "input":
                  var Jt = He(ut.getAttribute("source")), cr = ut.getAttribute("semantic");
                  Ye.inputs[cr] = Jt;
              }
          }
          return Ye;
        }
        function rt(qe) {
          var Ye = {}, ot = qe.getAttribute("target").split("/"), ft = ot.shift(), ut = ot.shift(), Jt = ut.indexOf("(") !== -1, cr = ut.indexOf(".") !== -1;
          if (cr)
            ut = (ot = ut.split(".")).shift(), Ye.member = ot.shift();
          else if (Jt) {
            var or = ut.split("(");
            ut = or.shift();
            for (var Tr = 0; Tr < or.length; Tr++)
              or[Tr] = parseInt(or[Tr].replace(/\)/, ""));
            Ye.indices = or;
          }
          return Ye.id = ft, Ye.sid = ut, Ye.arraySyntax = Jt, Ye.memberSyntax = cr, Ye.sampler = He(qe.getAttribute("source")), Ye;
        }
        function gt(qe) {
          var Ye = [], ot = qe.channels, ft = qe.samplers, ut = qe.sources;
          for (var Jt in ot)
            if (ot.hasOwnProperty(Jt)) {
              var cr = ot[Jt], or = ft[cr.sampler], Tr = or.inputs.INPUT, Vr = or.inputs.OUTPUT;
              At(Ke(cr, ut[Tr], ut[Vr]), Ye);
            }
          return Ye;
        }
        function kt(qe) {
          return Le(Wt.animations[qe], gt);
        }
        function Ke(qe, Ye, ot) {
          var ft, ut, Jt, cr, or, Tr, Vr = Wt.nodes[qe.id], Rr = xn(Vr.id), Lr = Vr.transforms[qe.sid], wn = Vr.matrix.clone().transpose(), Rn = {};
          switch (Lr) {
            case "matrix":
              for (Jt = 0, cr = Ye.array.length; Jt < cr; Jt++)
                if (ft = Ye.array[Jt], ut = Jt * ot.stride, Rn[ft] === void 0 && (Rn[ft] = {}), qe.arraySyntax === !0) {
                  var Qn = ot.array[ut], Fr = qe.indices[0] + 4 * qe.indices[1];
                  Rn[ft][Fr] = Qn;
                } else
                  for (or = 0, Tr = ot.stride; or < Tr; or++)
                    Rn[ft][or] = ot.array[ut + or];
              break;
            case "translate":
            case "rotate":
            case "scale":
              console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.', Lr);
          }
          var qr = function(_n, fn) {
            var Kr = [];
            for (var Mn in _n)
              Kr.push({ time: parseFloat(Mn), value: _n[Mn] });
            Kr.sort(function(bn, Dr) {
              return bn.time - Dr.time;
            });
            for (var Yn = 0; Yn < 16; Yn++)
              St(Kr, Yn, fn.elements[Yn]);
            return Kr;
          }(Rn, wn);
          return { name: Rr.uuid, keyframes: qr };
        }
        var ht = new ce.Vector3(), Nt = new ce.Vector3(), Ft = new ce.Quaternion();
        function At(qe, Ye) {
          for (var ot = qe.keyframes, ft = qe.name, ut = [], Jt = [], cr = [], or = [], Tr = 0, Vr = ot.length; Tr < Vr; Tr++) {
            var Rr = ot[Tr], Lr = Rr.time, wn = Rr.value;
            Xn.fromArray(wn).transpose(), Xn.decompose(ht, Ft, Nt), ut.push(Lr), Jt.push(ht.x, ht.y, ht.z), cr.push(Ft.x, Ft.y, Ft.z, Ft.w), or.push(Nt.x, Nt.y, Nt.z);
          }
          return Jt.length > 0 && Ye.push(new ce.VectorKeyframeTrack(ft + ".position", ut, Jt)), cr.length > 0 && Ye.push(new ce.QuaternionKeyframeTrack(ft + ".quaternion", ut, cr)), or.length > 0 && Ye.push(new ce.VectorKeyframeTrack(ft + ".scale", ut, or)), Ye;
        }
        function St(qe, Ye, ot) {
          var ft, ut, Jt, cr = !0;
          for (ut = 0, Jt = qe.length; ut < Jt; ut++)
            (ft = qe[ut]).value[Ye] === void 0 ? ft.value[Ye] = null : cr = !1;
          if (cr === !0)
            for (ut = 0, Jt = qe.length; ut < Jt; ut++)
              (ft = qe[ut]).value[Ye] = ot;
          else
            (function(or, Tr) {
              for (var Vr, Rr, Lr = 0, wn = or.length; Lr < wn; Lr++) {
                var Rn = or[Lr];
                if (Rn.value[Tr] === null) {
                  if (Vr = Vt(or, Lr, Tr), Rr = Xt(or, Lr, Tr), Vr === null) {
                    Rn.value[Tr] = Rr.value[Tr];
                    continue;
                  }
                  if (Rr === null) {
                    Rn.value[Tr] = Vr.value[Tr];
                    continue;
                  }
                  Lt(Rn, Vr, Rr, Tr);
                }
              }
            })(qe, Ye);
        }
        function Vt(qe, Ye, ot) {
          for (; Ye >= 0; ) {
            var ft = qe[Ye];
            if (ft.value[ot] !== null)
              return ft;
            Ye--;
          }
          return null;
        }
        function Xt(qe, Ye, ot) {
          for (; Ye < qe.length; ) {
            var ft = qe[Ye];
            if (ft.value[ot] !== null)
              return ft;
            Ye++;
          }
          return null;
        }
        function Lt(qe, Ye, ot, ft) {
          ot.time - Ye.time != 0 ? qe.value[ft] = (qe.time - Ye.time) * (ot.value[ft] - Ye.value[ft]) / (ot.time - Ye.time) + Ye.value[ft] : qe.value[ft] = Ye.value[ft];
        }
        function Zt(qe) {
          for (var Ye = [], ot = qe.name, ft = qe.end - qe.start || -1, ut = qe.animations, Jt = 0, cr = ut.length; Jt < cr; Jt++)
            for (var or = kt(ut[Jt]), Tr = 0, Vr = or.length; Tr < Vr; Tr++)
              Ye.push(or[Tr]);
          return new ce.AnimationClip(ot, ft, Ye);
        }
        function Gt(qe) {
          return Le(Wt.clips[qe], Zt);
        }
        function pt(qe) {
          for (var Ye = { sources: {} }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "bind_shape_matrix":
                  Ye.bindShapeMatrix = Ie(ut.textContent);
                  break;
                case "source":
                  var Jt = ut.getAttribute("id");
                  Ye.sources[Jt] = Qt(ut);
                  break;
                case "joints":
                  Ye.joints = It(ut);
                  break;
                case "vertex_weights":
                  Ye.vertexWeights = qt(ut);
              }
          }
          return Ye;
        }
        function It(qe) {
          for (var Ye = { inputs: {} }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "input":
                  var Jt = ut.getAttribute("semantic"), cr = He(ut.getAttribute("source"));
                  Ye.inputs[Jt] = cr;
              }
          }
          return Ye;
        }
        function qt(qe) {
          for (var Ye = { inputs: {} }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "input":
                  var Jt = ut.getAttribute("semantic"), cr = He(ut.getAttribute("source")), or = parseInt(ut.getAttribute("offset"));
                  Ye.inputs[Jt] = { id: cr, offset: or };
                  break;
                case "vcount":
                  Ye.vcount = Oe(ut.textContent);
                  break;
                case "v":
                  Ye.v = Oe(ut.textContent);
              }
          }
          return Ye;
        }
        function De(qe) {
          var Ye = { id: qe.id }, ot = Wt.geometries[Ye.id];
          return qe.skin !== void 0 && (Ye.skin = function(ft) {
            var ut, Jt, cr, or = { joints: [], indices: { array: [], stride: 4 }, weights: { array: [], stride: 4 } }, Tr = ft.sources, Vr = ft.vertexWeights, Rr = Vr.vcount, Lr = Vr.v, wn = Vr.inputs.JOINT.offset, Rn = Vr.inputs.WEIGHT.offset, Qn = ft.sources[ft.joints.inputs.JOINT], Fr = ft.sources[ft.joints.inputs.INV_BIND_MATRIX], qr = Tr[Vr.inputs.WEIGHT.id].array, _n = 0;
            for (ut = 0, cr = Rr.length; ut < cr; ut++) {
              var fn = Rr[ut], Kr = [];
              for (Jt = 0; Jt < fn; Jt++) {
                var Mn = Lr[_n + wn], Yn = Lr[_n + Rn], bn = qr[Yn];
                Kr.push({ index: Mn, weight: bn }), _n += 2;
              }
              for (Kr.sort(bi), Jt = 0; Jt < 4; Jt++) {
                var Dr = Kr[Jt];
                Dr !== void 0 ? (or.indices.array.push(Dr.index), or.weights.array.push(Dr.weight)) : (or.indices.array.push(0), or.weights.array.push(0));
              }
            }
            for (ft.bindShapeMatrix ? or.bindMatrix = new ce.Matrix4().fromArray(ft.bindShapeMatrix).transpose() : or.bindMatrix = new ce.Matrix4().transpose(), ut = 0, cr = Qn.array.length; ut < cr; ut++) {
              var gn = Qn.array[ut], Dn = new ce.Matrix4().fromArray(Fr.array, ut * Fr.stride).transpose();
              or.joints.push({ name: gn, boneInverse: Dn });
            }
            return or;
            function bi(na, Fa) {
              return Fa.weight - na.weight;
            }
          }(qe.skin), ot.sources.skinIndices = Ye.skin.indices, ot.sources.skinWeights = Ye.skin.weights), Ye;
        }
        function ar(qe) {
          return Le(Wt.controllers[qe], De);
        }
        function rr(qe) {
          return qe.build !== void 0 ? qe.build : qe.init_from;
        }
        function Ar(qe) {
          var Ye = Wt.images[qe];
          return Ye !== void 0 ? Le(Ye, rr) : (console.warn("THREE.ColladaLoader: Couldn't find image with ID:", qe), null);
        }
        function vt(qe) {
          for (var Ye = { surfaces: {}, samplers: {} }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "newparam":
                  Ut(ut, Ye);
                  break;
                case "technique":
                  Ye.technique = et(ut);
                  break;
                case "extra":
                  Ye.extra = be(ut);
              }
          }
          return Ye;
        }
        function Ut(qe, Ye) {
          for (var ot = qe.getAttribute("sid"), ft = 0, ut = qe.childNodes.length; ft < ut; ft++) {
            var Jt = qe.childNodes[ft];
            if (Jt.nodeType === 1)
              switch (Jt.nodeName) {
                case "surface":
                  Ye.surfaces[ot] = Xe(Jt);
                  break;
                case "sampler2D":
                  Ye.samplers[ot] = tt(Jt);
              }
          }
        }
        function Xe(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "init_from":
                  Ye.init_from = ut.textContent;
              }
          }
          return Ye;
        }
        function tt(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "source":
                  Ye.source = ut.textContent;
              }
          }
          return Ye;
        }
        function et(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "constant":
                case "lambert":
                case "blinn":
                case "phong":
                  Ye.type = ut.nodeName, Ye.parameters = Et(ut);
              }
          }
          return Ye;
        }
        function Et(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "emission":
                case "diffuse":
                case "specular":
                case "shininess":
                case "transparency":
                  Ye[ut.nodeName] = lt(ut);
                  break;
                case "transparent":
                  Ye[ut.nodeName] = { opaque: ut.getAttribute("opaque"), data: lt(ut) };
              }
          }
          return Ye;
        }
        function lt(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "color":
                  Ye[ut.nodeName] = Ie(ut.textContent);
                  break;
                case "float":
                  Ye[ut.nodeName] = parseFloat(ut.textContent);
                  break;
                case "texture":
                  Ye[ut.nodeName] = { id: ut.getAttribute("texture"), extra: $e(ut) };
              }
          }
          return Ye;
        }
        function $e(qe) {
          for (var Ye = { technique: {} }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "extra":
                  _e(ut, Ye);
              }
          }
          return Ye;
        }
        function _e(qe, Ye) {
          for (var ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "technique":
                  Be(ut, Ye);
              }
          }
        }
        function Be(qe, Ye) {
          for (var ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "repeatU":
                case "repeatV":
                case "offsetU":
                case "offsetV":
                  Ye.technique[ut.nodeName] = parseFloat(ut.textContent);
                  break;
                case "wrapU":
                case "wrapV":
                  ut.textContent.toUpperCase() === "TRUE" ? Ye.technique[ut.nodeName] = 1 : ut.textContent.toUpperCase() === "FALSE" ? Ye.technique[ut.nodeName] = 0 : Ye.technique[ut.nodeName] = parseInt(ut.textContent);
              }
          }
        }
        function be(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "technique":
                  Ye.technique = ke(ut);
              }
          }
          return Ye;
        }
        function ke(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "double_sided":
                  Ye[ut.nodeName] = parseInt(ut.textContent);
              }
          }
          return Ye;
        }
        function Ve(qe) {
          return qe;
        }
        function Je(qe) {
          var Ye, ot = function(wn) {
            return Le(Wt.effects[wn], Ve);
          }(qe.url), ft = ot.profile.technique, ut = ot.profile.extra;
          switch (ft.type) {
            case "phong":
            case "blinn":
              Ye = new ce.MeshPhongMaterial();
              break;
            case "lambert":
              Ye = new ce.MeshLambertMaterial();
              break;
            default:
              Ye = new ce.MeshBasicMaterial();
          }
          function Jt(wn) {
            var Rn = ot.profile.samplers[wn.id], Qn = null;
            if (Rn !== void 0 ? Qn = Ar(ot.profile.surfaces[Rn.source].init_from) : (console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."), Qn = Ar(wn.id)), Qn !== null) {
              var Fr = Xr.load(Qn), qr = wn.extra;
              if (qr !== void 0 && qr.technique !== void 0 && Ne(qr.technique) === !1) {
                var _n = qr.technique;
                Fr.wrapS = _n.wrapU ? ce.RepeatWrapping : ce.ClampToEdgeWrapping, Fr.wrapT = _n.wrapV ? ce.RepeatWrapping : ce.ClampToEdgeWrapping, Fr.offset.set(_n.offsetU || 0, _n.offsetV || 0), Fr.repeat.set(_n.repeatU || 1, _n.repeatV || 1);
              } else
                Fr.wrapS = ce.RepeatWrapping, Fr.wrapT = ce.RepeatWrapping;
              return Fr;
            }
            return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:", wn.id), null;
          }
          Ye.name = qe.name;
          var cr = ft.parameters;
          for (var or in cr) {
            var Tr = cr[or];
            switch (or) {
              case "diffuse":
                Tr.color && Ye.color.fromArray(Tr.color), Tr.texture && (Ye.map = Jt(Tr.texture));
                break;
              case "specular":
                Tr.color && Ye.specular && Ye.specular.fromArray(Tr.color), Tr.texture && (Ye.specularMap = Jt(Tr.texture));
                break;
              case "shininess":
                Tr.float && Ye.shininess && (Ye.shininess = Tr.float);
                break;
              case "emission":
                Tr.color && Ye.emissive && Ye.emissive.fromArray(Tr.color), Tr.texture && (Ye.emissiveMap = Jt(Tr.texture));
            }
          }
          var Vr = cr.transparent, Rr = cr.transparency;
          if (Rr === void 0 && Vr && (Rr = { float: 1 }), Vr === void 0 && Rr && (Vr = { opaque: "A_ONE", data: { color: [1, 1, 1, 1] } }), Vr && Rr)
            if (Vr.data.texture)
              Ye.transparent = !0;
            else {
              var Lr = Vr.data.color;
              switch (Vr.opaque) {
                case "A_ONE":
                  Ye.opacity = Lr[3] * Rr.float;
                  break;
                case "RGB_ZERO":
                  Ye.opacity = 1 - Lr[0] * Rr.float;
                  break;
                case "A_ZERO":
                  Ye.opacity = 1 - Lr[3] * Rr.float;
                  break;
                case "RGB_ONE":
                  Ye.opacity = Lr[0] * Rr.float;
                  break;
                default:
                  console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.', Vr.opaque);
              }
              Ye.opacity < 1 && (Ye.transparent = !0);
            }
          return ut !== void 0 && ut.technique !== void 0 && ut.technique.double_sided === 1 && (Ye.side = ce.DoubleSide), Ye;
        }
        function at(qe) {
          return Le(Wt.materials[qe], Je);
        }
        function Tt(qe) {
          for (var Ye = 0; Ye < qe.childNodes.length; Ye++) {
            var ot = qe.childNodes[Ye];
            switch (ot.nodeName) {
              case "technique_common":
                return Dt(ot);
            }
          }
          return {};
        }
        function Dt(qe) {
          for (var Ye = {}, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            switch (ft.nodeName) {
              case "perspective":
              case "orthographic":
                Ye.technique = ft.nodeName, Ye.parameters = zt(ft);
            }
          }
          return Ye;
        }
        function zt(qe) {
          for (var Ye = {}, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            switch (ft.nodeName) {
              case "xfov":
              case "yfov":
              case "xmag":
              case "ymag":
              case "znear":
              case "zfar":
              case "aspect_ratio":
                Ye[ft.nodeName] = parseFloat(ft.textContent);
            }
          }
          return Ye;
        }
        function Yt(qe) {
          var Ye;
          switch (qe.optics.technique) {
            case "perspective":
              Ye = new ce.PerspectiveCamera(qe.optics.parameters.yfov, qe.optics.parameters.aspect_ratio, qe.optics.parameters.znear, qe.optics.parameters.zfar);
              break;
            case "orthographic":
              var ot = qe.optics.parameters.ymag, ft = qe.optics.parameters.xmag, ut = qe.optics.parameters.aspect_ratio;
              ft = ft === void 0 ? ot * ut : ft, ot = ot === void 0 ? ft / ut : ot, ft *= 0.5, ot *= 0.5, Ye = new ce.OrthographicCamera(-ft, ft, ot, -ot, qe.optics.parameters.znear, qe.optics.parameters.zfar);
              break;
            default:
              Ye = new ce.PerspectiveCamera();
          }
          return Ye.name = qe.name, Ye;
        }
        function Ue(qe) {
          var Ye = Wt.cameras[qe];
          return Ye !== void 0 ? Le(Ye, Yt) : (console.warn("THREE.ColladaLoader: Couldn't find camera with ID:", qe), null);
        }
        function Te(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "directional":
                case "point":
                case "spot":
                case "ambient":
                  Ye.technique = ut.nodeName, Ye.parameters = Re(ut);
              }
          }
          return Ye;
        }
        function Re(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "color":
                  var Jt = Ie(ut.textContent);
                  Ye.color = new ce.Color().fromArray(Jt);
                  break;
                case "falloff_angle":
                  Ye.falloffAngle = parseFloat(ut.textContent);
                  break;
                case "quadratic_attenuation":
                  var cr = parseFloat(ut.textContent);
                  Ye.distance = cr ? Math.sqrt(1 / cr) : 0;
              }
          }
          return Ye;
        }
        function it(qe) {
          var Ye;
          switch (qe.technique) {
            case "directional":
              Ye = new ce.DirectionalLight();
              break;
            case "point":
              Ye = new ce.PointLight();
              break;
            case "spot":
              Ye = new ce.SpotLight();
              break;
            case "ambient":
              Ye = new ce.AmbientLight();
          }
          return qe.parameters.color && Ye.color.copy(qe.parameters.color), qe.parameters.distance && (Ye.distance = qe.parameters.distance), Ye;
        }
        function bt(qe) {
          var Ye = Wt.lights[qe];
          return Ye !== void 0 ? Le(Ye, it) : (console.warn("THREE.ColladaLoader: Couldn't find light with ID:", qe), null);
        }
        function Qt(qe) {
          for (var Ye = { array: [], stride: 3 }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "float_array":
                  Ye.array = Ie(ft.textContent);
                  break;
                case "Name_array":
                  Ye.array = Ce(ft.textContent);
                  break;
                case "technique_common":
                  var ut = me(ft, "accessor")[0];
                  ut !== void 0 && (Ye.stride = parseInt(ut.getAttribute("stride")));
              }
          }
          return Ye;
        }
        function jt(qe) {
          for (var Ye = {}, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            ft.nodeType === 1 && (Ye[ft.getAttribute("semantic")] = He(ft.getAttribute("source")));
          }
          return Ye;
        }
        function yr(qe) {
          for (var Ye = { type: qe.nodeName, material: qe.getAttribute("material"), count: parseInt(qe.getAttribute("count")), inputs: {}, stride: 0, hasUV: !1 }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "input":
                  var Jt = He(ut.getAttribute("source")), cr = ut.getAttribute("semantic"), or = parseInt(ut.getAttribute("offset"));
                  Ye.inputs[cr] = { id: Jt, offset: or }, Ye.stride = Math.max(Ye.stride, or + 1), cr === "TEXCOORD" && (Ye.hasUV = !0);
                  break;
                case "vcount":
                  Ye.vcount = Oe(ut.textContent);
                  break;
                case "p":
                  Ye.p = Oe(ut.textContent);
              }
          }
          return Ye;
        }
        function gr(qe) {
          for (var Ye = 0, ot = 0, ft = qe.length; ot < ft; ot++)
            qe[ot].hasUV === !0 && Ye++;
          Ye > 0 && Ye < qe.length && (qe.uvsNeedsFix = !0);
        }
        function br(qe) {
          var Ye = {}, ot = qe.sources, ft = qe.vertices, ut = qe.primitives;
          if (ut.length === 0)
            return {};
          var Jt = function(Tr) {
            for (var Vr = {}, Rr = 0; Rr < Tr.length; Rr++) {
              var Lr = Tr[Rr];
              Vr[Lr.type] === void 0 && (Vr[Lr.type] = []), Vr[Lr.type].push(Lr);
            }
            return Vr;
          }(ut);
          for (var cr in Jt) {
            var or = Jt[cr];
            gr(or), Ye[cr] = mr(or, ot, ft);
          }
          return Ye;
        }
        function mr(qe, Ye, ot) {
          for (var ft = {}, ut = { array: [], stride: 0 }, Jt = { array: [], stride: 0 }, cr = { array: [], stride: 0 }, or = { array: [], stride: 0 }, Tr = [], Vr = 4, Rr = [], Lr = 4, wn = new ce.BufferGeometry(), Rn = [], Qn = 0, Fr = 0; Fr < qe.length; Fr++) {
            var qr = qe[Fr], _n = qr.inputs, fn = 0;
            switch (qr.type) {
              case "lines":
              case "linestrips":
                fn = 2 * qr.count;
                break;
              case "triangles":
                fn = 3 * qr.count;
                break;
              case "polylist":
                for (var Kr = 0; Kr < qr.count; Kr++) {
                  var Mn = qr.vcount[Kr];
                  switch (Mn) {
                    case 3:
                      fn += 3;
                      break;
                    case 4:
                      fn += 6;
                      break;
                    default:
                      fn += 3 * (Mn - 2);
                  }
                }
                break;
              default:
                console.warn("THREE.ColladaLoader: Unknow primitive type:", qr.type);
            }
            for (var Yn in wn.addGroup(Qn, fn, Fr), Qn += fn, qr.material && Rn.push(qr.material), _n) {
              var bn = _n[Yn];
              switch (Yn) {
                case "VERTEX":
                  for (var Dr in ot) {
                    var gn = ot[Dr];
                    switch (Dr) {
                      case "POSITION":
                        var Dn = ut.array.length;
                        if (_r(qr, Ye[gn], bn.offset, ut.array), ut.stride = Ye[gn].stride, Ye.skinWeights && Ye.skinIndices && (_r(qr, Ye.skinIndices, bn.offset, Tr), _r(qr, Ye.skinWeights, bn.offset, Rr)), qr.hasUV === !1 && qe.uvsNeedsFix === !0) {
                          fn = (ut.array.length - Dn) / ut.stride;
                          for (var bi = 0; bi < fn; bi++)
                            cr.array.push(0, 0);
                        }
                        break;
                      case "NORMAL":
                        _r(qr, Ye[gn], bn.offset, Jt.array), Jt.stride = Ye[gn].stride;
                        break;
                      case "COLOR":
                        _r(qr, Ye[gn], bn.offset, or.array), or.stride = Ye[gn].stride;
                        break;
                      case "TEXCOORD":
                        _r(qr, Ye[gn], bn.offset, cr.array), cr.stride = Ye[gn].stride;
                        break;
                      default:
                        console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.', Dr);
                    }
                  }
                  break;
                case "NORMAL":
                  _r(qr, Ye[bn.id], bn.offset, Jt.array), Jt.stride = Ye[bn.id].stride;
                  break;
                case "COLOR":
                  _r(qr, Ye[bn.id], bn.offset, or.array), or.stride = Ye[bn.id].stride;
                  break;
                case "TEXCOORD":
                  _r(qr, Ye[bn.id], bn.offset, cr.array), cr.stride = Ye[bn.id].stride;
              }
            }
          }
          return ut.array.length > 0 && wn.addAttribute("position", new ce.Float32BufferAttribute(ut.array, ut.stride)), Jt.array.length > 0 && wn.addAttribute("normal", new ce.Float32BufferAttribute(Jt.array, Jt.stride)), or.array.length > 0 && wn.addAttribute("color", new ce.Float32BufferAttribute(or.array, or.stride)), cr.array.length > 0 && wn.addAttribute("uv", new ce.Float32BufferAttribute(cr.array, cr.stride)), Tr.length > 0 && wn.addAttribute("skinIndex", new ce.Float32BufferAttribute(Tr, Vr)), Rr.length > 0 && wn.addAttribute("skinWeight", new ce.Float32BufferAttribute(Rr, Lr)), ft.data = wn, ft.type = qe[0].type, ft.materialKeys = Rn, ft;
        }
        function _r(qe, Ye, ot, ft) {
          var ut = qe.p, Jt = qe.stride, cr = qe.vcount;
          function or(Kr) {
            for (var Mn = ut[Kr + ot] * Vr, Yn = Mn + Vr; Mn < Yn; Mn++)
              ft.push(Tr[Mn]);
          }
          var Tr = Ye.array, Vr = Ye.stride;
          if (qe.vcount !== void 0)
            for (var Rr = 0, Lr = 0, wn = cr.length; Lr < wn; Lr++) {
              var Rn = cr[Lr];
              if (Rn === 4) {
                var Qn = Rr + 1 * Jt, Fr = Rr + 2 * Jt, qr = Rr + 3 * Jt;
                or(Rr + 0 * Jt), or(Qn), or(qr), or(Qn), or(Fr), or(qr);
              } else if (Rn === 3)
                Qn = Rr + 1 * Jt, Fr = Rr + 2 * Jt, or(Rr + 0 * Jt), or(Qn), or(Fr);
              else if (Rn > 4)
                for (var _n = 1, fn = Rn - 2; _n <= fn; _n++)
                  Qn = Rr + Jt * _n, Fr = Rr + Jt * (_n + 1), or(Rr + 0 * Jt), or(Qn), or(Fr);
              Rr += Jt * Rn;
            }
          else
            for (Lr = 0, wn = ut.length; Lr < wn; Lr += Jt)
              or(Lr);
        }
        function en(qe) {
          return Le(Wt.geometries[qe], br);
        }
        function Jn(qe) {
          return qe.build !== void 0 ? qe.build : qe;
        }
        function an(qe, Ye) {
          for (var ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "joint":
                  Ye.joints[ft.getAttribute("sid")] = qn(ft);
                  break;
                case "link":
                  Ye.links.push(Gn(ft));
              }
          }
        }
        function qn(qe) {
          for (var Ye, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "prismatic":
                case "revolute":
                  Ye = $n(ft);
              }
          }
          return Ye;
        }
        function $n(qe, Ye) {
          Ye = { sid: qe.getAttribute("sid"), name: qe.getAttribute("name") || "", axis: new ce.Vector3(), limits: { min: 0, max: 0 }, type: qe.nodeName, static: !1, zeroPosition: 0, middlePosition: 0 };
          for (var ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "axis":
                  var ut = Ie(ft.textContent);
                  Ye.axis.fromArray(ut);
                  break;
                case "limits":
                  var Jt = ft.getElementsByTagName("max")[0], cr = ft.getElementsByTagName("min")[0];
                  Ye.limits.max = parseFloat(Jt.textContent), Ye.limits.min = parseFloat(cr.textContent);
              }
          }
          return Ye.limits.min >= Ye.limits.max && (Ye.static = !0), Ye.middlePosition = (Ye.limits.min + Ye.limits.max) / 2, Ye;
        }
        function Gn(qe) {
          for (var Ye = { sid: qe.getAttribute("sid"), name: qe.getAttribute("name") || "", attachments: [], transforms: [] }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "attachment_full":
                  Ye.attachments.push(Un(ft));
                  break;
                case "matrix":
                case "translate":
                case "rotate":
                  Ye.transforms.push(oi(ft));
              }
          }
          return Ye;
        }
        function Un(qe) {
          for (var Ye = { joint: qe.getAttribute("joint").split("/").pop(), transforms: [], links: [] }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "link":
                  Ye.links.push(Gn(ft));
                  break;
                case "matrix":
                case "translate":
                case "rotate":
                  Ye.transforms.push(oi(ft));
              }
          }
          return Ye;
        }
        function oi(qe) {
          var Ye = { type: qe.nodeName }, ot = Ie(qe.textContent);
          switch (Ye.type) {
            case "matrix":
              Ye.obj = new ce.Matrix4(), Ye.obj.fromArray(ot).transpose();
              break;
            case "translate":
              Ye.obj = new ce.Vector3(), Ye.obj.fromArray(ot);
              break;
            case "rotate":
              Ye.obj = new ce.Vector3(), Ye.obj.fromArray(ot), Ye.angle = ce.Math.degToRad(ot[3]);
          }
          return Ye;
        }
        function Ai(qe, Ye) {
          for (var ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "technique_common":
                  Ji(ft, Ye);
              }
          }
        }
        function Ji(qe, Ye) {
          for (var ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "inertia":
                  Ye.inertia = Ie(ft.textContent);
                  break;
                case "mass":
                  Ye.mass = Ie(ft.textContent)[0];
              }
          }
        }
        function Ri(qe) {
          for (var Ye = { target: qe.getAttribute("target").split("/").pop() }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "axis":
                  var ut = ft.getElementsByTagName("param")[0];
                  Ye.axis = ut.textContent;
                  var Jt = Ye.axis.split("inst_").pop().split("axis")[0];
                  Ye.jointIndex = Jt.substr(0, Jt.length - 1);
              }
          }
          return Ye;
        }
        function Hn(qe) {
          return qe.build !== void 0 ? qe.build : qe;
        }
        var Xn = new ce.Matrix4(), Ln = new ce.Vector3();
        function si(qe) {
          for (var Ye = { name: qe.getAttribute("name") || "", type: qe.getAttribute("type"), id: qe.getAttribute("id"), sid: qe.getAttribute("sid"), matrix: new ce.Matrix4(), nodes: [], instanceCameras: [], instanceControllers: [], instanceLights: [], instanceGeometries: [], instanceNodes: [], transforms: {} }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "node":
                  Ye.nodes.push(ft.getAttribute("id")), si(ft);
                  break;
                case "instance_camera":
                  Ye.instanceCameras.push(He(ft.getAttribute("url")));
                  break;
                case "instance_controller":
                  Ye.instanceControllers.push(gi(ft));
                  break;
                case "instance_light":
                  Ye.instanceLights.push(He(ft.getAttribute("url")));
                  break;
                case "instance_geometry":
                  Ye.instanceGeometries.push(gi(ft));
                  break;
                case "instance_node":
                  Ye.instanceNodes.push(He(ft.getAttribute("url")));
                  break;
                case "matrix":
                  var ut = Ie(ft.textContent);
                  Ye.matrix.multiply(Xn.fromArray(ut).transpose()), Ye.transforms[ft.getAttribute("sid")] = ft.nodeName;
                  break;
                case "translate":
                  ut = Ie(ft.textContent), Ln.fromArray(ut), Ye.matrix.multiply(Xn.makeTranslation(Ln.x, Ln.y, Ln.z)), Ye.transforms[ft.getAttribute("sid")] = ft.nodeName;
                  break;
                case "rotate":
                  ut = Ie(ft.textContent);
                  var Jt = ce.Math.degToRad(ut[3]);
                  Ye.matrix.multiply(Xn.makeRotationAxis(Ln.fromArray(ut), Jt)), Ye.transforms[ft.getAttribute("sid")] = ft.nodeName;
                  break;
                case "scale":
                  ut = Ie(ft.textContent), Ye.matrix.scale(Ln.fromArray(ut)), Ye.transforms[ft.getAttribute("sid")] = ft.nodeName;
                  break;
                case "extra":
                  break;
                default:
                  console.log(ft);
              }
          }
          return Wt.nodes[Ye.id] = Ye, Ye;
        }
        function gi(qe) {
          for (var Ye = { id: He(qe.getAttribute("url")), materials: {}, skeletons: [] }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            switch (ft.nodeName) {
              case "bind_material":
                for (var ut = ft.getElementsByTagName("instance_material"), Jt = 0; Jt < ut.length; Jt++) {
                  var cr = ut[Jt], or = cr.getAttribute("symbol"), Tr = cr.getAttribute("target");
                  Ye.materials[or] = He(Tr);
                }
                break;
              case "skeleton":
                Ye.skeletons.push(He(ft.textContent));
            }
          }
          return Ye;
        }
        function mi(qe, Ye) {
          var ot, ft, ut = [], Jt = [];
          for (ot = 0; ot < qe.length; ot++) {
            var cr = qe[ot];
            if (on(cr))
              yi(xn(cr), Ye, ut);
            else if (En(cr))
              for (var or = Wt.visualScenes[cr].children, Tr = 0; Tr < or.length; Tr++) {
                var Vr = or[Tr];
                Vr.type === "JOINT" && yi(xn(Vr.id), Ye, ut);
              }
            else
              console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:", cr);
          }
          for (ot = 0; ot < Ye.length; ot++)
            for (Tr = 0; Tr < ut.length; Tr++)
              if ((ft = ut[Tr]).bone.name === Ye[ot].name) {
                Jt[ot] = ft, ft.processed = !0;
                break;
              }
          for (ot = 0; ot < ut.length; ot++)
            (ft = ut[ot]).processed === !1 && (Jt.push(ft), ft.processed = !0);
          var Rr = [], Lr = [];
          for (ot = 0; ot < Jt.length; ot++)
            ft = Jt[ot], Rr.push(ft.bone), Lr.push(ft.boneInverse);
          return new ce.Skeleton(Rr, Lr);
        }
        function yi(qe, Ye, ot) {
          qe.traverse(function(ft) {
            if (ft.isBone === !0) {
              for (var ut, Jt = 0; Jt < Ye.length; Jt++) {
                var cr = Ye[Jt];
                if (cr.name === ft.name) {
                  ut = cr.boneInverse;
                  break;
                }
              }
              ut === void 0 && (ut = new ce.Matrix4()), ot.push({ bone: ft, boneInverse: ut, processed: !1 });
            }
          });
        }
        function Rt(qe) {
          for (var Ye = [], ot = qe.matrix, ft = qe.nodes, ut = qe.type, Jt = qe.instanceCameras, cr = qe.instanceControllers, or = qe.instanceLights, Tr = qe.instanceGeometries, Vr = qe.instanceNodes, Rr = 0, Lr = ft.length; Rr < Lr; Rr++)
            Ye.push(xn(ft[Rr]));
          for (Rr = 0, Lr = Jt.length; Rr < Lr; Rr++) {
            var wn = Ue(Jt[Rr]);
            wn !== null && Ye.push(wn.clone());
          }
          for (Rr = 0, Lr = cr.length; Rr < Lr; Rr++)
            for (var Rn = ar((Mn = cr[Rr]).id), Qn = Nr(en(Rn.id), Mn.materials), Fr = mi(Mn.skeletons, Rn.skin.joints), qr = 0, _n = Qn.length; qr < _n; qr++) {
              var fn;
              (fn = Qn[qr]).isSkinnedMesh && (fn.bind(Fr, Rn.skin.bindMatrix), fn.normalizeSkinWeights()), Ye.push(fn);
            }
          for (Rr = 0, Lr = or.length; Rr < Lr; Rr++) {
            var Kr = bt(or[Rr]);
            Kr !== null && Ye.push(Kr.clone());
          }
          for (Rr = 0, Lr = Tr.length; Rr < Lr; Rr++) {
            var Mn;
            for (qr = 0, _n = (Qn = Nr(en((Mn = Tr[Rr]).id), Mn.materials)).length; qr < _n; qr++)
              Ye.push(Qn[qr]);
          }
          for (Rr = 0, Lr = Vr.length; Rr < Lr; Rr++)
            Ye.push(xn(Vr[Rr]).clone());
          if (ft.length === 0 && Ye.length === 1)
            fn = Ye[0];
          else
            for (fn = ut === "JOINT" ? new ce.Bone() : new ce.Group(), Rr = 0; Rr < Ye.length; Rr++)
              fn.add(Ye[Rr]);
          return fn.name === "" && (fn.name = ut === "JOINT" ? qe.sid : qe.name), fn.matrix.copy(ot), fn.matrix.decompose(fn.position, fn.quaternion, fn.scale), fn;
        }
        function tr(qe, Ye) {
          for (var ot = [], ft = 0, ut = qe.length; ft < ut; ft++) {
            var Jt = Ye[qe[ft]];
            ot.push(at(Jt));
          }
          return ot;
        }
        function Nr(qe, Ye) {
          var ot = [];
          for (var ft in qe) {
            var ut = qe[ft], Jt = tr(ut.materialKeys, Ye);
            Jt.length === 0 && (ft === "lines" || ft === "linestrips" ? Jt.push(new ce.LineBasicMaterial()) : Jt.push(new ce.MeshPhongMaterial()));
            var cr = ut.data.attributes.skinIndex !== void 0;
            if (cr)
              for (var or = 0, Tr = Jt.length; or < Tr; or++)
                Jt[or].skinning = !0;
            var Vr, Rr = Jt.length === 1 ? Jt[0] : Jt;
            switch (ft) {
              case "lines":
                Vr = new ce.LineSegments(ut.data, Rr);
                break;
              case "linestrips":
                Vr = new ce.Line(ut.data, Rr);
                break;
              case "triangles":
              case "polylist":
                Vr = cr ? new ce.SkinnedMesh(ut.data, Rr) : new ce.Mesh(ut.data, Rr);
            }
            ot.push(Vr);
          }
          return ot;
        }
        function on(qe) {
          return Wt.nodes[qe] !== void 0;
        }
        function xn(qe) {
          return Le(Wt.nodes[qe], Rt);
        }
        function Bn(qe) {
          var Ye = new ce.Group();
          Ye.name = qe.name;
          for (var ot = qe.children, ft = 0; ft < ot.length; ft++) {
            var ut = ot[ft];
            Ye.add(xn(ut.id));
          }
          return Ye;
        }
        function En(qe) {
          return Wt.visualScenes[qe] !== void 0;
        }
        function pn(qe) {
          return Le(Wt.visualScenes[qe], Bn);
        }
        if (ye.length === 0)
          return { scene: new ce.Scene() };
        var Sn = me(new DOMParser().parseFromString(ye, "application/xml"), "COLLADA")[0], Vn = Sn.getAttribute("version");
        console.log("THREE.ColladaLoader: File version", Vn);
        var Zr = function(qe) {
          return { unit: function(Ye) {
            return Ye !== void 0 && Ye.hasAttribute("meter") === !0 ? parseFloat(Ye.getAttribute("meter")) : 1;
          }(me(qe, "unit")[0]), upAxis: function(Ye) {
            return Ye !== void 0 ? Ye.textContent : "Y_UP";
          }(me(qe, "up_axis")[0]) };
        }(me(Sn, "asset")[0]), Xr = new ce.TextureLoader(this.manager);
        Xr.setPath(ge).setCrossOrigin(this.crossOrigin);
        var $r = [], xt = {}, Br = 0, Wt = { animations: {}, clips: {}, controllers: {}, images: {}, effects: {}, materials: {}, cameras: {}, lights: {}, geometries: {}, nodes: {}, visualScenes: {}, kinematicsModels: {}, physicsModels: {}, kinematicsScenes: {} };
        Pe(Sn, "library_animations", "animation", function(qe) {
          for (var Ye = { sources: {}, samplers: {}, channels: {} }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut, Jt = qe.childNodes[ot];
            if (Jt.nodeType === 1)
              switch (Jt.nodeName) {
                case "source":
                  ut = Jt.getAttribute("id"), Ye.sources[ut] = Qt(Jt);
                  break;
                case "sampler":
                  ut = Jt.getAttribute("id"), Ye.samplers[ut] = We(Jt);
                  break;
                case "channel":
                  ut = Jt.getAttribute("target"), Ye.channels[ut] = rt(Jt);
                  break;
                default:
                  console.log(Jt);
              }
          }
          Wt.animations[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_animation_clips", "animation_clip", function(qe) {
          for (var Ye = { name: qe.getAttribute("id") || "default", start: parseFloat(qe.getAttribute("start") || 0), end: parseFloat(qe.getAttribute("end") || 0), animations: [] }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "instance_animation":
                  Ye.animations.push(He(ut.getAttribute("url")));
              }
          }
          Wt.clips[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_controllers", "controller", function(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "skin":
                  Ye.id = He(ut.getAttribute("source")), Ye.skin = pt(ut);
                  break;
                case "morph":
                  Ye.id = He(ut.getAttribute("source")), console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");
              }
          }
          Wt.controllers[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_images", "image", function(qe) {
          var Ye = { init_from: me(qe, "init_from")[0].textContent };
          Wt.images[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_effects", "effect", function(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "profile_COMMON":
                  Ye.profile = vt(ut);
              }
          }
          Wt.effects[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_materials", "material", function(qe) {
          for (var Ye = { name: qe.getAttribute("name") }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "instance_effect":
                  Ye.url = He(ut.getAttribute("url"));
              }
          }
          Wt.materials[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_cameras", "camera", function(qe) {
          for (var Ye = { name: qe.getAttribute("name") }, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "optics":
                  Ye.optics = Tt(ut);
              }
          }
          Wt.cameras[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_lights", "light", function(qe) {
          for (var Ye = {}, ot = 0, ft = qe.childNodes.length; ot < ft; ot++) {
            var ut = qe.childNodes[ot];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "technique_common":
                  Ye = Te(ut);
              }
          }
          Wt.lights[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_geometries", "geometry", function(qe) {
          var Ye = { name: qe.getAttribute("name"), sources: {}, vertices: {}, primitives: [] }, ot = me(qe, "mesh")[0];
          if (ot !== void 0) {
            for (var ft = 0; ft < ot.childNodes.length; ft++) {
              var ut = ot.childNodes[ft];
              if (ut.nodeType === 1) {
                var Jt = ut.getAttribute("id");
                switch (ut.nodeName) {
                  case "source":
                    Ye.sources[Jt] = Qt(ut);
                    break;
                  case "vertices":
                    Ye.vertices = jt(ut);
                    break;
                  case "polygons":
                    console.warn("THREE.ColladaLoader: Unsupported primitive type: ", ut.nodeName);
                    break;
                  case "lines":
                  case "linestrips":
                  case "polylist":
                  case "triangles":
                    Ye.primitives.push(yr(ut));
                    break;
                  default:
                    console.log(ut);
                }
              }
            }
            Wt.geometries[qe.getAttribute("id")] = Ye;
          }
        }), Pe(Sn, "library_nodes", "node", si), Pe(Sn, "library_visual_scenes", "visual_scene", function(qe) {
          var Ye = { name: qe.getAttribute("name"), children: [] };
          (function(ut) {
            for (var Jt = ut.getElementsByTagName("node"), cr = 0; cr < Jt.length; cr++) {
              var or = Jt[cr];
              or.hasAttribute("id") === !1 && or.setAttribute("id", "three_default_" + Br++);
            }
          })(qe);
          for (var ot = me(qe, "node"), ft = 0; ft < ot.length; ft++)
            Ye.children.push(si(ot[ft]));
          Wt.visualScenes[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_kinematics_models", "kinematics_model", function(qe) {
          for (var Ye = { name: qe.getAttribute("name") || "", joints: {}, links: [] }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "technique_common":
                  an(ft, Ye);
              }
          }
          Wt.kinematicsModels[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "library_physics_models", "physics_model", function(qe) {
          for (var Ye = { name: qe.getAttribute("name") || "", rigidBodies: {} }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "rigid_body":
                  Ye.rigidBodies[ft.getAttribute("name")] = {}, Ai(ft, Ye.rigidBodies[ft.getAttribute("name")]);
              }
          }
          Wt.physicsModels[qe.getAttribute("id")] = Ye;
        }), Pe(Sn, "scene", "instance_kinematics_scene", function(qe) {
          for (var Ye = { bindJointAxis: [] }, ot = 0; ot < qe.childNodes.length; ot++) {
            var ft = qe.childNodes[ot];
            if (ft.nodeType === 1)
              switch (ft.nodeName) {
                case "bind_joint_axis":
                  Ye.bindJointAxis.push(Ri(ft));
              }
          }
          Wt.kinematicsScenes[He(qe.getAttribute("url"))] = Ye;
        }), Fe(Wt.animations, gt), Fe(Wt.clips, Zt), Fe(Wt.controllers, De), Fe(Wt.images, rr), Fe(Wt.effects, Ve), Fe(Wt.materials, Je), Fe(Wt.cameras, Yt), Fe(Wt.lights, it), Fe(Wt.geometries, br), Fe(Wt.visualScenes, Bn), function() {
          var qe = Wt.clips;
          if (Ne(qe) === !0) {
            if (Ne(Wt.animations) === !1) {
              var Ye = [];
              for (var ot in Wt.animations)
                for (var ft = kt(ot), ut = 0, Jt = ft.length; ut < Jt; ut++)
                  Ye.push(ft[ut]);
              $r.push(new ce.AnimationClip("default", -1, Ye));
            }
          } else
            for (var ot in qe)
              $r.push(Gt(ot));
        }(), function() {
          var qe = Object.keys(Wt.kinematicsModels)[0], Ye = Object.keys(Wt.kinematicsScenes)[0], ot = Object.keys(Wt.visualScenes)[0];
          if (qe !== void 0 && Ye !== void 0) {
            for (var ft = function(Fr) {
              return Le(Wt.kinematicsModels[Fr], Jn);
            }(qe), ut = function(Fr) {
              return Le(Wt.kinematicsScenes[Fr], Hn);
            }(Ye), Jt = pn(ot), cr = ut.bindJointAxis, or = {}, Tr = 0, Vr = cr.length; Tr < Vr; Tr++) {
              var Rr = cr[Tr], Lr = Sn.querySelector('[sid="' + Rr.target + '"]');
              if (Lr) {
                var wn = Lr.parentElement;
                Qn(Rr.jointIndex, wn);
              }
            }
            var Rn = new ce.Matrix4();
            xt = { joints: ft && ft.joints, getJointValue: function(Fr) {
              var qr = or[Fr];
              if (qr)
                return qr.position;
              console.warn("THREE.ColladaLoader: Joint " + Fr + " doesn't exist.");
            }, setJointValue: function(Fr, qr) {
              var _n = or[Fr];
              if (_n) {
                var fn = _n.joint;
                if (qr > fn.limits.max || qr < fn.limits.min)
                  console.warn("THREE.ColladaLoader: Joint " + Fr + " value " + qr + " outside of limits (min: " + fn.limits.min + ", max: " + fn.limits.max + ").");
                else if (fn.static)
                  console.warn("THREE.ColladaLoader: Joint " + Fr + " is static.");
                else {
                  var Kr = _n.object, Mn = fn.axis, Yn = _n.transforms;
                  Xn.identity();
                  for (var bn = 0; bn < Yn.length; bn++) {
                    var Dr = Yn[bn];
                    if (Dr.sid && Dr.sid.indexOf(Fr) !== -1)
                      switch (fn.type) {
                        case "revolute":
                          Xn.multiply(Rn.makeRotationAxis(Mn, ce.Math.degToRad(qr)));
                          break;
                        case "prismatic":
                          Xn.multiply(Rn.makeTranslation(Mn.x * qr, Mn.y * qr, Mn.z * qr));
                          break;
                        default:
                          console.warn("THREE.ColladaLoader: Unknown joint type: " + fn.type);
                      }
                    else
                      switch (Dr.type) {
                        case "matrix":
                          Xn.multiply(Dr.obj);
                          break;
                        case "translate":
                          Xn.multiply(Rn.makeTranslation(Dr.obj.x, Dr.obj.y, Dr.obj.z));
                          break;
                        case "scale":
                          Xn.scale(Dr.obj);
                          break;
                        case "rotate":
                          Xn.multiply(Rn.makeRotationAxis(Dr.obj, Dr.angle));
                      }
                  }
                  Kr.matrix.copy(Xn), Kr.matrix.decompose(Kr.position, Kr.quaternion, Kr.scale), or[Fr].position = qr;
                }
              } else
                console.log("THREE.ColladaLoader: " + Fr + " does not exist.");
            } };
          }
          function Qn(Fr, qr) {
            var _n = qr.getAttribute("name"), fn = ft.joints[Fr];
            Jt.traverse(function(Kr) {
              Kr.name === _n && (or[Fr] = { object: Kr, transforms: function(Mn) {
                for (var Yn = [], bn = Sn.querySelector('[id="' + Mn.id + '"]'), Dr = 0; Dr < bn.childNodes.length; Dr++) {
                  var gn = bn.childNodes[Dr];
                  if (gn.nodeType === 1)
                    switch (gn.nodeName) {
                      case "matrix":
                        var bi = Ie(gn.textContent), Dn = new ce.Matrix4().fromArray(bi).transpose();
                        Yn.push({ sid: gn.getAttribute("sid"), type: gn.nodeName, obj: Dn });
                        break;
                      case "translate":
                      case "scale":
                        var bi = Ie(gn.textContent), na = new ce.Vector3().fromArray(bi);
                        Yn.push({ sid: gn.getAttribute("sid"), type: gn.nodeName, obj: na });
                        break;
                      case "rotate":
                        var bi = Ie(gn.textContent), na = new ce.Vector3().fromArray(bi), Fa = ce.Math.degToRad(bi[3]);
                        Yn.push({ sid: gn.getAttribute("sid"), type: gn.nodeName, obj: na, angle: Fa });
                    }
                }
                return Yn;
              }(qr), joint: fn, position: fn.zeroPosition });
            });
          }
        }();
        var Hr = function(qe) {
          return pn(He(me(qe, "instance_visual_scene")[0].getAttribute("url")));
        }(me(Sn, "scene")[0]);
        return Zr.upAxis === "Z_UP" && Hr.quaternion.setFromEuler(new ce.Euler(-Math.PI / 2, 0, 0)), Hr.scale.multiplyScalar(Zr.unit), { animations: $r, kinematics: xt, library: Wt, scene: Hr };
      } }, ce.GLTFLoader = function() {
        function ye($e) {
          this.manager = $e !== void 0 ? $e : ce.DefaultLoadingManager, this.dracoLoader = null;
        }
        ye.prototype = { constructor: ye, crossOrigin: "anonymous", load: function($e, _e, Be, be) {
          var ke = this, Ve = this.path !== void 0 ? this.path : ce.LoaderUtils.extractUrlBase($e), Je = new ce.FileLoader(ke.manager);
          Je.setResponseType("arraybuffer"), Je.load($e, function(at) {
            try {
              ke.parse(at, Ve, _e, be);
            } catch (Tt) {
              if (be === void 0)
                throw Tt;
              be(Tt);
            }
          }, Be, be);
        }, setCrossOrigin: function($e) {
          return this.crossOrigin = $e, this;
        }, setPath: function($e) {
          return this.path = $e, this;
        }, setDRACOLoader: function($e) {
          return this.dracoLoader = $e, this;
        }, parse: function($e, _e, Be, be) {
          var ke, Ve = {};
          if (typeof $e == "string")
            ke = $e;
          else if (ce.LoaderUtils.decodeText(new Uint8Array($e, 0, 4)) === Oe) {
            try {
              Ve[ge.KHR_BINARY_GLTF] = new function(Yt) {
                this.name = ge.KHR_BINARY_GLTF, this.content = null, this.body = null;
                var Ue = new DataView(Yt, 0, He);
                if (this.header = { magic: ce.LoaderUtils.decodeText(new Uint8Array(Yt.slice(0, 4))), version: Ue.getUint32(4, !0), length: Ue.getUint32(8, !0) }, this.header.magic !== Oe)
                  throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");
                if (this.header.version < 2)
                  throw new Error("THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");
                for (var Te = new DataView(Yt, He), Re = 0; Re < Te.byteLength; ) {
                  var it = Te.getUint32(Re, !0);
                  Re += 4;
                  var bt = Te.getUint32(Re, !0);
                  if (Re += 4, bt === Ne.JSON) {
                    var Qt = new Uint8Array(Yt, He + Re, it);
                    this.content = ce.LoaderUtils.decodeText(Qt);
                  } else if (bt === Ne.BIN) {
                    var jt = He + Re;
                    this.body = Yt.slice(jt, jt + it);
                  }
                  Re += it;
                }
                if (this.content === null)
                  throw new Error("THREE.GLTFLoader: JSON content not found.");
              }($e);
            } catch (Yt) {
              return void (be && be(Yt));
            }
            ke = Ve[ge.KHR_BINARY_GLTF].content;
          } else
            ke = ce.LoaderUtils.decodeText(new Uint8Array($e));
          var Je = JSON.parse(ke);
          if (Je.asset === void 0 || Je.asset.version[0] < 2)
            be && be(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead."));
          else {
            if (Je.extensionsUsed)
              for (var at = 0; at < Je.extensionsUsed.length; ++at) {
                var Tt = Je.extensionsUsed[at], Dt = Je.extensionsRequired || [];
                switch (Tt) {
                  case ge.KHR_LIGHTS:
                    Ve[Tt] = new Ce(Je);
                    break;
                  case ge.KHR_MATERIALS_UNLIT:
                    Ve[Tt] = new Ie();
                    break;
                  case ge.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:
                    Ve[Tt] = new Fe();
                    break;
                  case ge.KHR_DRACO_MESH_COMPRESSION:
                    Ve[Tt] = new Pe(Je, this.dracoLoader);
                    break;
                  case ge.MSFT_TEXTURE_DDS:
                    Ve[ge.MSFT_TEXTURE_DDS] = new me();
                    break;
                  default:
                    Dt.indexOf(Tt) >= 0 && console.warn('THREE.GLTFLoader: Unknown extension "' + Tt + '".');
                }
              }
            var zt = new Et(Je, Ve, { path: _e || this.path || "", crossOrigin: this.crossOrigin, manager: this.manager });
            zt.parse(function(Yt, Ue, Te, Re, it) {
              var bt = { scene: Yt, scenes: Ue, cameras: Te, animations: Re, asset: it.asset, parser: zt, userData: {} };
              rr(Ve, bt, it), Be(bt);
            }, be);
          }
        } };
        var ge = { KHR_BINARY_GLTF: "KHR_binary_glTF", KHR_DRACO_MESH_COMPRESSION: "KHR_draco_mesh_compression", KHR_LIGHTS: "KHR_lights", KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: "KHR_materials_pbrSpecularGlossiness", KHR_MATERIALS_UNLIT: "KHR_materials_unlit", MSFT_TEXTURE_DDS: "MSFT_texture_dds" };
        function me() {
          if (!ce.DDSLoader)
            throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader");
          this.name = ge.MSFT_TEXTURE_DDS, this.ddsLoader = new ce.DDSLoader();
        }
        function Ce($e) {
          this.name = ge.KHR_LIGHTS, this.lights = {};
          var _e = ($e.extensions && $e.extensions[ge.KHR_LIGHTS] || {}).lights || {};
          for (var Be in _e) {
            var be, ke = _e[Be], Ve = new ce.Color().fromArray(ke.color);
            switch (ke.type) {
              case "directional":
                (be = new ce.DirectionalLight(Ve)).target.position.set(0, 0, 1), be.add(be.target);
                break;
              case "point":
                be = new ce.PointLight(Ve);
                break;
              case "spot":
                be = new ce.SpotLight(Ve), ke.spot = ke.spot || {}, ke.spot.innerConeAngle = ke.spot.innerConeAngle !== void 0 ? ke.spot.innerConeAngle : 0, ke.spot.outerConeAngle = ke.spot.outerConeAngle !== void 0 ? ke.spot.outerConeAngle : Math.PI / 4, be.angle = ke.spot.outerConeAngle, be.penumbra = 1 - ke.spot.innerConeAngle / ke.spot.outerConeAngle, be.target.position.set(0, 0, 1), be.add(be.target);
                break;
              case "ambient":
                be = new ce.AmbientLight(Ve);
            }
            be && (be.decay = 2, ke.intensity !== void 0 && (be.intensity = ke.intensity), be.name = ke.name || "light_" + Be, this.lights[Be] = be);
          }
        }
        function Ie($e) {
          this.name = ge.KHR_MATERIALS_UNLIT;
        }
        Ie.prototype.getMaterialType = function($e) {
          return ce.MeshBasicMaterial;
        }, Ie.prototype.extendParams = function($e, _e, Be) {
          var be = [];
          $e.color = new ce.Color(1, 1, 1), $e.opacity = 1;
          var ke = _e.pbrMetallicRoughness;
          if (ke) {
            if (Array.isArray(ke.baseColorFactor)) {
              var Ve = ke.baseColorFactor;
              $e.color.fromArray(Ve), $e.opacity = Ve[3];
            }
            ke.baseColorTexture !== void 0 && be.push(Be.assignTexture($e, "map", ke.baseColorTexture.index));
          }
          return Promise.all(be);
        };
        var Oe = "glTF", He = 12, Ne = { JSON: 1313821514, BIN: 5130562 };
        function Pe($e, _e) {
          if (!_e)
            throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");
          this.name = ge.KHR_DRACO_MESH_COMPRESSION, this.json = $e, this.dracoLoader = _e;
        }
        function Fe() {
          return { name: ge.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS, specularGlossinessParams: ["color", "map", "lightMap", "lightMapIntensity", "aoMap", "aoMapIntensity", "emissive", "emissiveIntensity", "emissiveMap", "bumpMap", "bumpScale", "normalMap", "displacementMap", "displacementScale", "displacementBias", "specularMap", "specular", "glossinessMap", "glossiness", "alphaMap", "envMap", "envMapIntensity", "refractionRatio"], getMaterialType: function() {
            return ce.ShaderMaterial;
          }, extendParams: function($e, _e, Be) {
            var be = _e.extensions[this.name], ke = ce.ShaderLib.standard, Ve = ce.UniformsUtils.clone(ke.uniforms), Je = ["#ifdef USE_SPECULARMAP", "	uniform sampler2D specularMap;", "#endif"].join(`
`), at = ["#ifdef USE_GLOSSINESSMAP", "	uniform sampler2D glossinessMap;", "#endif"].join(`
`), Tt = ["vec3 specularFactor = specular;", "#ifdef USE_SPECULARMAP", "	vec4 texelSpecular = texture2D( specularMap, vUv );", "	texelSpecular = sRGBToLinear( texelSpecular );", "	// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture", "	specularFactor *= texelSpecular.rgb;", "#endif"].join(`
`), Dt = ["float glossinessFactor = glossiness;", "#ifdef USE_GLOSSINESSMAP", "	vec4 texelGlossiness = texture2D( glossinessMap, vUv );", "	// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture", "	glossinessFactor *= texelGlossiness.a;", "#endif"].join(`
`), zt = ["PhysicalMaterial material;", "material.diffuseColor = diffuseColor.rgb;", "material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );", "material.specularColor = specularFactor.rgb;"].join(`
`), Yt = ke.fragmentShader.replace("uniform float roughness;", "uniform vec3 specular;").replace("uniform float metalness;", "uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>", Je).replace("#include <metalnessmap_pars_fragment>", at).replace("#include <roughnessmap_fragment>", Tt).replace("#include <metalnessmap_fragment>", Dt).replace("#include <lights_physical_fragment>", zt);
            delete Ve.roughness, delete Ve.metalness, delete Ve.roughnessMap, delete Ve.metalnessMap, Ve.specular = { value: new ce.Color().setHex(1118481) }, Ve.glossiness = { value: 0.5 }, Ve.specularMap = { value: null }, Ve.glossinessMap = { value: null }, $e.vertexShader = ke.vertexShader, $e.fragmentShader = Yt, $e.uniforms = Ve, $e.defines = { STANDARD: "" }, $e.color = new ce.Color(1, 1, 1), $e.opacity = 1;
            var Ue = [];
            if (Array.isArray(be.diffuseFactor)) {
              var Te = be.diffuseFactor;
              $e.color.fromArray(Te), $e.opacity = Te[3];
            }
            if (be.diffuseTexture !== void 0 && Ue.push(Be.assignTexture($e, "map", be.diffuseTexture.index)), $e.emissive = new ce.Color(0, 0, 0), $e.glossiness = be.glossinessFactor !== void 0 ? be.glossinessFactor : 1, $e.specular = new ce.Color(1, 1, 1), Array.isArray(be.specularFactor) && $e.specular.fromArray(be.specularFactor), be.specularGlossinessTexture !== void 0) {
              var Re = be.specularGlossinessTexture.index;
              Ue.push(Be.assignTexture($e, "glossinessMap", Re)), Ue.push(Be.assignTexture($e, "specularMap", Re));
            }
            return Promise.all(Ue);
          }, createMaterial: function($e) {
            var _e = new ce.ShaderMaterial({ defines: $e.defines, vertexShader: $e.vertexShader, fragmentShader: $e.fragmentShader, uniforms: $e.uniforms, fog: !0, lights: !0, opacity: $e.opacity, transparent: $e.transparent });
            return _e.isGLTFSpecularGlossinessMaterial = !0, _e.color = $e.color, _e.map = $e.map === void 0 ? null : $e.map, _e.lightMap = null, _e.lightMapIntensity = 1, _e.aoMap = $e.aoMap === void 0 ? null : $e.aoMap, _e.aoMapIntensity = 1, _e.emissive = $e.emissive, _e.emissiveIntensity = 1, _e.emissiveMap = $e.emissiveMap === void 0 ? null : $e.emissiveMap, _e.bumpMap = $e.bumpMap === void 0 ? null : $e.bumpMap, _e.bumpScale = 1, _e.normalMap = $e.normalMap === void 0 ? null : $e.normalMap, $e.normalScale && (_e.normalScale = $e.normalScale), _e.displacementMap = null, _e.displacementScale = 1, _e.displacementBias = 0, _e.specularMap = $e.specularMap === void 0 ? null : $e.specularMap, _e.specular = $e.specular, _e.glossinessMap = $e.glossinessMap === void 0 ? null : $e.glossinessMap, _e.glossiness = $e.glossiness, _e.alphaMap = null, _e.envMap = $e.envMap === void 0 ? null : $e.envMap, _e.envMapIntensity = 1, _e.refractionRatio = 0.98, _e.extensions.derivatives = !0, _e;
          }, cloneMaterial: function($e) {
            var _e = $e.clone();
            _e.isGLTFSpecularGlossinessMaterial = !0;
            for (var Be = this.specularGlossinessParams, be = 0, ke = Be.length; be < ke; be++)
              _e[Be[be]] = $e[Be[be]];
            return _e;
          }, refreshUniforms: function($e, _e, Be, be, ke, Ve) {
            if (ke.isGLTFSpecularGlossinessMaterial === !0) {
              var Je, at = ke.uniforms, Tt = ke.defines;
              at.opacity.value = ke.opacity, at.diffuse.value.copy(ke.color), at.emissive.value.copy(ke.emissive).multiplyScalar(ke.emissiveIntensity), at.map.value = ke.map, at.specularMap.value = ke.specularMap, at.alphaMap.value = ke.alphaMap, at.lightMap.value = ke.lightMap, at.lightMapIntensity.value = ke.lightMapIntensity, at.aoMap.value = ke.aoMap, at.aoMapIntensity.value = ke.aoMapIntensity, ke.map ? Je = ke.map : ke.specularMap ? Je = ke.specularMap : ke.displacementMap ? Je = ke.displacementMap : ke.normalMap ? Je = ke.normalMap : ke.bumpMap ? Je = ke.bumpMap : ke.glossinessMap ? Je = ke.glossinessMap : ke.alphaMap ? Je = ke.alphaMap : ke.emissiveMap && (Je = ke.emissiveMap), Je !== void 0 && (Je.isWebGLRenderTarget && (Je = Je.texture), Je.matrixAutoUpdate === !0 && Je.updateMatrix(), at.uvTransform.value.copy(Je.matrix)), at.envMap.value = ke.envMap, at.envMapIntensity.value = ke.envMapIntensity, at.flipEnvMap.value = ke.envMap && ke.envMap.isCubeTexture ? -1 : 1, at.refractionRatio.value = ke.refractionRatio, at.specular.value.copy(ke.specular), at.glossiness.value = ke.glossiness, at.glossinessMap.value = ke.glossinessMap, at.emissiveMap.value = ke.emissiveMap, at.bumpMap.value = ke.bumpMap, at.normalMap.value = ke.normalMap, at.displacementMap.value = ke.displacementMap, at.displacementScale.value = ke.displacementScale, at.displacementBias.value = ke.displacementBias, at.glossinessMap.value !== null && Tt.USE_GLOSSINESSMAP === void 0 && (Tt.USE_GLOSSINESSMAP = "", Tt.USE_ROUGHNESSMAP = ""), at.glossinessMap.value === null && Tt.USE_GLOSSINESSMAP !== void 0 && (delete Tt.USE_GLOSSINESSMAP, delete Tt.USE_ROUGHNESSMAP);
            }
          } };
        }
        function Le($e, _e, Be, be) {
          ce.Interpolant.call(this, $e, _e, Be, be);
        }
        Pe.prototype.decodePrimitive = function($e, _e) {
          var Be = this.json, be = this.dracoLoader, ke = $e.extensions[this.name].bufferView, Ve = $e.extensions[this.name].attributes, Je = {}, at = {}, Tt = {};
          for (var Dt in Ve)
            Dt in Zt && (Je[Zt[Dt]] = Ve[Dt]);
          for (Dt in $e.attributes)
            if (Zt[Dt] !== void 0 && Ve[Dt] !== void 0) {
              var zt = Be.accessors[$e.attributes[Dt]], Yt = Ft[zt.componentType];
              Tt[Zt[Dt]] = Yt, at[Zt[Dt]] = zt.normalized === !0;
            }
          return _e.getDependency("bufferView", ke).then(function(Ue) {
            return new Promise(function(Te) {
              be.decodeDracoFile(Ue, function(Re) {
                for (var it in Re.attributes) {
                  var bt = Re.attributes[it], Qt = at[it];
                  Qt !== void 0 && (bt.normalized = Qt);
                }
                Te(Re);
              }, Je, Tt);
            });
          });
        }, Le.prototype = Object.create(ce.Interpolant.prototype), Le.prototype.constructor = Le, Le.prototype.interpolate_ = function($e, _e, Be, be) {
          for (var ke = this.resultBuffer, Ve = this.sampleValues, Je = this.valueSize, at = 2 * Je, Tt = 3 * Je, Dt = be - _e, zt = (Be - _e) / Dt, Yt = zt * zt, Ue = Yt * zt, Te = $e * Tt, Re = Te - Tt, it = 2 * Ue - 3 * Yt + 1, bt = Ue - 2 * Yt + zt, Qt = -2 * Ue + 3 * Yt, jt = Ue - Yt, yr = 0; yr !== Je; yr++) {
            var gr = Ve[Re + yr + Je], br = Ve[Re + yr + at] * Dt, mr = Ve[Te + yr + Je], _r = Ve[Te + yr] * Dt;
            ke[yr] = it * gr + bt * br + Qt * mr + jt * _r;
          }
          return ke;
        };
        var We = 0, rt = 1, gt = 2, kt = 3, Ke = 4, ht = 5, Nt = 6, Ft = (ce.Matrix3, ce.Matrix4, ce.Vector2, ce.Vector3, ce.Vector4, ce.Texture, { 5120: Int8Array, 5121: Uint8Array, 5122: Int16Array, 5123: Uint16Array, 5125: Uint32Array, 5126: Float32Array }), At = { 9728: ce.NearestFilter, 9729: ce.LinearFilter, 9984: ce.NearestMipMapNearestFilter, 9985: ce.LinearMipMapNearestFilter, 9986: ce.NearestMipMapLinearFilter, 9987: ce.LinearMipMapLinearFilter }, St = { 33071: ce.ClampToEdgeWrapping, 33648: ce.MirroredRepeatWrapping, 10497: ce.RepeatWrapping }, Vt = { 6406: ce.AlphaFormat, 6407: ce.RGBFormat, 6408: ce.RGBAFormat, 6409: ce.LuminanceFormat, 6410: ce.LuminanceAlphaFormat }, Xt = { 5121: ce.UnsignedByteType, 32819: ce.UnsignedShort4444Type, 32820: ce.UnsignedShort5551Type, 33635: ce.UnsignedShort565Type }, Lt = (ce.BackSide, ce.FrontSide, ce.NeverDepth, ce.LessDepth, ce.EqualDepth, ce.LessEqualDepth, ce.GreaterEqualDepth, ce.NotEqualDepth, ce.GreaterEqualDepth, ce.AlwaysDepth, ce.AddEquation, ce.SubtractEquation, ce.ReverseSubtractEquation, ce.ZeroFactor, ce.OneFactor, ce.SrcColorFactor, ce.OneMinusSrcColorFactor, ce.SrcAlphaFactor, ce.OneMinusSrcAlphaFactor, ce.DstAlphaFactor, ce.OneMinusDstAlphaFactor, ce.DstColorFactor, ce.OneMinusDstColorFactor, ce.SrcAlphaSaturateFactor, { SCALAR: 1, VEC2: 2, VEC3: 3, VEC4: 4, MAT2: 4, MAT3: 9, MAT4: 16 }), Zt = { POSITION: "position", NORMAL: "normal", TEXCOORD_0: "uv", TEXCOORD0: "uv", TEXCOORD: "uv", TEXCOORD_1: "uv2", COLOR_0: "color", COLOR0: "color", COLOR: "color", WEIGHTS_0: "skinWeight", WEIGHT: "skinWeight", JOINTS_0: "skinIndex", JOINT: "skinIndex" }, Gt = { scale: "scale", translation: "position", rotation: "quaternion", weights: "morphTargetInfluences" }, pt = { CUBICSPLINE: ce.InterpolateSmooth, LINEAR: ce.InterpolateLinear, STEP: ce.InterpolateDiscrete }, It = "OPAQUE", qt = "MASK", De = "BLEND";
        function ar($e, _e) {
          return typeof $e != "string" || $e === "" ? "" : /^(https?:)?\/\//i.test($e) || /^data:.*,.*$/i.test($e) || /^blob:.*$/i.test($e) ? $e : _e + $e;
        }
        function rr($e, _e, Be) {
          for (var be in Be.extensions)
            $e[be] === void 0 && (_e.userData.gltfExtensions = _e.userData.gltfExtensions || {}, _e.userData.gltfExtensions[be] = Be.extensions[be]);
        }
        function Ar($e, _e) {
          if ($e.updateMorphTargets(), _e.weights !== void 0)
            for (var Be = 0, be = _e.weights.length; Be < be; Be++)
              $e.morphTargetInfluences[Be] = _e.weights[Be];
          if (_e.extras && Array.isArray(_e.extras.targetNames)) {
            var ke = _e.extras.targetNames;
            if ($e.morphTargetInfluences.length === ke.length)
              for ($e.morphTargetDictionary = {}, Be = 0, be = ke.length; Be < be; Be++)
                $e.morphTargetDictionary[ke[Be]] = Be;
            else
              console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.");
          }
        }
        function vt($e, _e) {
          return $e.indices === _e.indices && Ut($e.attributes, _e.attributes);
        }
        function Ut($e, _e) {
          if (Object.keys($e).length !== Object.keys(_e).length)
            return !1;
          for (var Be in $e)
            if ($e[Be] !== _e[Be])
              return !1;
          return !0;
        }
        function Xe($e, _e) {
          if ($e.length !== _e.length)
            return !1;
          for (var Be = 0, be = $e.length; Be < be; Be++)
            if ($e[Be] !== _e[Be])
              return !1;
          return !0;
        }
        function tt($e, _e) {
          for (var Be = 0, be = $e.length; Be < be; Be++) {
            var ke = $e[Be];
            if (vt(ke.primitive, _e))
              return ke.promise;
          }
          return null;
        }
        function et($e) {
          if ($e.isInterleavedBufferAttribute) {
            for (var _e = $e.count, Be = $e.itemSize, be = $e.array.slice(0, _e * Be), ke = 0; ke < _e; ++ke)
              be[ke] = $e.getX(ke), Be >= 2 && (be[ke + 1] = $e.getY(ke)), Be >= 3 && (be[ke + 2] = $e.getZ(ke)), Be >= 4 && (be[ke + 3] = $e.getW(ke));
            return new ce.BufferAttribute(be, Be, $e.normalized);
          }
          return $e.clone();
        }
        function Et($e, _e, Be) {
          this.json = $e || {}, this.extensions = _e || {}, this.options = Be || {}, this.cache = new function() {
            var be = {};
            return { get: function(ke) {
              return be[ke];
            }, add: function(ke, Ve) {
              be[ke] = Ve;
            }, remove: function(ke) {
              delete be[ke];
            }, removeAll: function() {
              be = {};
            } };
          }(), this.primitiveCache = [], this.multiplePrimitivesCache = [], this.multiPassGeometryCache = [], this.textureLoader = new ce.TextureLoader(this.options.manager), this.textureLoader.setCrossOrigin(this.options.crossOrigin), this.fileLoader = new ce.FileLoader(this.options.manager), this.fileLoader.setResponseType("arraybuffer");
        }
        function lt($e, _e, Be) {
          var be = _e.attributes;
          for (var ke in be) {
            var Ve = Zt[ke], Je = Be[be[ke]];
            Ve && (Ve in $e.attributes || $e.addAttribute(Ve, Je));
          }
          _e.indices === void 0 || $e.index || $e.setIndex(Be[_e.indices]), _e.targets !== void 0 && function(at, Tt, Dt) {
            for (var zt = !1, Yt = !1, Ue = 0, Te = Tt.length; Ue < Te && ((bt = Tt[Ue]).POSITION !== void 0 && (zt = !0), bt.NORMAL !== void 0 && (Yt = !0), !zt || !Yt); Ue++)
              ;
            if (zt || Yt) {
              var Re = [], it = [];
              for (Ue = 0, Te = Tt.length; Ue < Te; Ue++) {
                var bt = Tt[Ue], Qt = "morphTarget" + Ue;
                if (zt) {
                  if (bt.POSITION !== void 0) {
                    var jt = et(Dt[bt.POSITION]);
                    jt.name = Qt;
                    for (var yr = at.attributes.position, gr = 0, br = jt.count; gr < br; gr++)
                      jt.setXYZ(gr, jt.getX(gr) + yr.getX(gr), jt.getY(gr) + yr.getY(gr), jt.getZ(gr) + yr.getZ(gr));
                  } else
                    jt = at.attributes.position;
                  Re.push(jt);
                }
                if (Yt) {
                  if (bt.NORMAL !== void 0) {
                    var mr;
                    (mr = et(Dt[bt.NORMAL])).name = Qt;
                    var _r = at.attributes.normal;
                    for (gr = 0, br = mr.count; gr < br; gr++)
                      mr.setXYZ(gr, mr.getX(gr) + _r.getX(gr), mr.getY(gr) + _r.getY(gr), mr.getZ(gr) + _r.getZ(gr));
                  } else
                    mr = at.attributes.normal;
                  it.push(mr);
                }
              }
              zt && (at.morphAttributes.position = Re), Yt && (at.morphAttributes.normal = it);
            }
          }($e, _e.targets, Be), _e.extras !== void 0 && ($e.userData = _e.extras);
        }
        return Et.prototype.parse = function($e, _e) {
          var Be = this.json;
          this.cache.removeAll(), this.markDefs(), this.getMultiDependencies(["scene", "animation", "camera"]).then(function(be) {
            var ke = be.scenes || [], Ve = ke[Be.scene || 0], Je = be.animations || [], at = be.cameras || [];
            $e(Ve, ke, at, Je, Be);
          }).catch(_e);
        }, Et.prototype.markDefs = function() {
          for (var $e = this.json.nodes || [], _e = this.json.skins || [], Be = this.json.meshes || [], be = {}, ke = {}, Ve = 0, Je = _e.length; Ve < Je; Ve++)
            for (var at = _e[Ve].joints, Tt = 0, Dt = at.length; Tt < Dt; Tt++)
              $e[at[Tt]].isBone = !0;
          for (var zt = 0, Yt = $e.length; zt < Yt; zt++) {
            var Ue = $e[zt];
            Ue.mesh !== void 0 && (be[Ue.mesh] === void 0 && (be[Ue.mesh] = ke[Ue.mesh] = 0), be[Ue.mesh]++, Ue.skin !== void 0 && (Be[Ue.mesh].isSkinnedMesh = !0));
          }
          this.json.meshReferences = be, this.json.meshUses = ke;
        }, Et.prototype.getDependency = function($e, _e) {
          var Be = $e + ":" + _e, be = this.cache.get(Be);
          if (!be) {
            switch ($e) {
              case "scene":
                be = this.loadScene(_e);
                break;
              case "node":
                be = this.loadNode(_e);
                break;
              case "mesh":
                be = this.loadMesh(_e);
                break;
              case "accessor":
                be = this.loadAccessor(_e);
                break;
              case "bufferView":
                be = this.loadBufferView(_e);
                break;
              case "buffer":
                be = this.loadBuffer(_e);
                break;
              case "material":
                be = this.loadMaterial(_e);
                break;
              case "texture":
                be = this.loadTexture(_e);
                break;
              case "skin":
                be = this.loadSkin(_e);
                break;
              case "animation":
                be = this.loadAnimation(_e);
                break;
              case "camera":
                be = this.loadCamera(_e);
                break;
              default:
                throw new Error("Unknown type: " + $e);
            }
            this.cache.add(Be, be);
          }
          return be;
        }, Et.prototype.getDependencies = function($e) {
          var _e = this.cache.get($e);
          if (!_e) {
            var Be = this, be = this.json[$e + ($e === "mesh" ? "es" : "s")] || [];
            _e = Promise.all(be.map(function(ke, Ve) {
              return Be.getDependency($e, Ve);
            })), this.cache.add($e, _e);
          }
          return _e;
        }, Et.prototype.getMultiDependencies = function($e) {
          for (var _e = {}, Be = [], be = 0, ke = $e.length; be < ke; be++) {
            var Ve = $e[be], Je = this.getDependencies(Ve);
            Je = Je.then(function(at, Tt) {
              _e[at] = Tt;
            }.bind(this, Ve + (Ve === "mesh" ? "es" : "s"))), Be.push(Je);
          }
          return Promise.all(Be).then(function() {
            return _e;
          });
        }, Et.prototype.loadBuffer = function($e) {
          var _e = this.json.buffers[$e], Be = this.fileLoader;
          if (_e.type && _e.type !== "arraybuffer")
            throw new Error("THREE.GLTFLoader: " + _e.type + " buffer type is not supported.");
          if (_e.uri === void 0 && $e === 0)
            return Promise.resolve(this.extensions[ge.KHR_BINARY_GLTF].body);
          var be = this.options;
          return new Promise(function(ke, Ve) {
            Be.load(ar(_e.uri, be.path), ke, void 0, function() {
              Ve(new Error('THREE.GLTFLoader: Failed to load buffer "' + _e.uri + '".'));
            });
          });
        }, Et.prototype.loadBufferView = function($e) {
          var _e = this.json.bufferViews[$e];
          return this.getDependency("buffer", _e.buffer).then(function(Be) {
            var be = _e.byteLength || 0, ke = _e.byteOffset || 0;
            return Be.slice(ke, ke + be);
          });
        }, Et.prototype.loadAccessor = function($e) {
          var _e = this, Be = this.json, be = this.json.accessors[$e];
          if (be.bufferView === void 0 && be.sparse === void 0)
            return null;
          var ke = [];
          return be.bufferView !== void 0 ? ke.push(this.getDependency("bufferView", be.bufferView)) : ke.push(null), be.sparse !== void 0 && (ke.push(this.getDependency("bufferView", be.sparse.indices.bufferView)), ke.push(this.getDependency("bufferView", be.sparse.values.bufferView))), Promise.all(ke).then(function(Ve) {
            var Je, at, Tt = Ve[0], Dt = Lt[be.type], zt = Ft[be.componentType], Yt = zt.BYTES_PER_ELEMENT, Ue = Yt * Dt, Te = be.byteOffset || 0, Re = Be.bufferViews[be.bufferView].byteStride, it = be.normalized === !0;
            if (Re && Re !== Ue) {
              var bt = "InterleavedBuffer:" + be.bufferView + ":" + be.componentType, Qt = _e.cache.get(bt);
              Qt || (Je = new zt(Tt), Qt = new ce.InterleavedBuffer(Je, Re / Yt), _e.cache.add(bt, Qt)), at = new ce.InterleavedBufferAttribute(Qt, Dt, Te / Yt, it);
            } else
              Je = Tt === null ? new zt(be.count * Dt) : new zt(Tt, Te, be.count * Dt), at = new ce.BufferAttribute(Je, Dt, it);
            if (be.sparse !== void 0) {
              var jt = Lt.SCALAR, yr = Ft[be.sparse.indices.componentType], gr = be.sparse.indices.byteOffset || 0, br = be.sparse.values.byteOffset || 0, mr = new yr(Ve[1], gr, be.sparse.count * jt), _r = new zt(Ve[2], br, be.sparse.count * Dt);
              Tt !== null && at.setArray(at.array.slice());
              for (var en = 0, Jn = mr.length; en < Jn; en++) {
                var an = mr[en];
                if (at.setX(an, _r[en * Dt]), Dt >= 2 && at.setY(an, _r[en * Dt + 1]), Dt >= 3 && at.setZ(an, _r[en * Dt + 2]), Dt >= 4 && at.setW(an, _r[en * Dt + 3]), Dt >= 5)
                  throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.");
              }
            }
            return at;
          });
        }, Et.prototype.loadTexture = function($e) {
          var _e, Be = this, be = this.json, ke = this.options, Ve = this.textureLoader, Je = window.URL || window.webkitURL, at = be.textures[$e], Tt = at.extensions || {}, Dt = (_e = Tt[ge.MSFT_TEXTURE_DDS] ? be.images[Tt[ge.MSFT_TEXTURE_DDS].source] : be.images[at.source]).uri, zt = !1;
          return _e.bufferView !== void 0 && (Dt = Be.getDependency("bufferView", _e.bufferView).then(function(Yt) {
            zt = !0;
            var Ue = new Blob([Yt], { type: _e.mimeType });
            return Dt = Je.createObjectURL(Ue);
          })), Promise.resolve(Dt).then(function(Yt) {
            var Ue = ce.Loader.Handlers.get(Yt);
            return Ue || (Ue = Tt[ge.MSFT_TEXTURE_DDS] ? Be.extensions[ge.MSFT_TEXTURE_DDS].ddsLoader : Ve), new Promise(function(Te, Re) {
              Ue.load(ar(Yt, ke.path), Te, void 0, Re);
            });
          }).then(function(Yt) {
            zt === !0 && Je.revokeObjectURL(Dt), Yt.flipY = !1, at.name !== void 0 && (Yt.name = at.name), Tt[ge.MSFT_TEXTURE_DDS] || (Yt.format = at.format !== void 0 ? Vt[at.format] : ce.RGBAFormat), at.internalFormat !== void 0 && Yt.format !== Vt[at.internalFormat] && console.warn("THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."), Yt.type = at.type !== void 0 ? Xt[at.type] : ce.UnsignedByteType;
            var Ue = (be.samplers || {})[at.sampler] || {};
            return Yt.magFilter = At[Ue.magFilter] || ce.LinearFilter, Yt.minFilter = At[Ue.minFilter] || ce.LinearMipMapLinearFilter, Yt.wrapS = St[Ue.wrapS] || ce.RepeatWrapping, Yt.wrapT = St[Ue.wrapT] || ce.RepeatWrapping, Yt;
          });
        }, Et.prototype.assignTexture = function($e, _e, Be) {
          return this.getDependency("texture", Be).then(function(be) {
            $e[_e] = be;
          });
        }, Et.prototype.loadMaterial = function($e) {
          this.json;
          var _e, Be = this.extensions, be = this.json.materials[$e], ke = {}, Ve = be.extensions || {}, Je = [];
          if (Ve[ge.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {
            var at = Be[ge.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];
            _e = at.getMaterialType(be), Je.push(at.extendParams(ke, be, this));
          } else if (Ve[ge.KHR_MATERIALS_UNLIT]) {
            var Tt = Be[ge.KHR_MATERIALS_UNLIT];
            _e = Tt.getMaterialType(be), Je.push(Tt.extendParams(ke, be, this));
          } else {
            _e = ce.MeshStandardMaterial;
            var Dt = be.pbrMetallicRoughness || {};
            if (ke.color = new ce.Color(1, 1, 1), ke.opacity = 1, Array.isArray(Dt.baseColorFactor)) {
              var zt = Dt.baseColorFactor;
              ke.color.fromArray(zt), ke.opacity = zt[3];
            }
            if (Dt.baseColorTexture !== void 0 && Je.push(this.assignTexture(ke, "map", Dt.baseColorTexture.index)), ke.metalness = Dt.metallicFactor !== void 0 ? Dt.metallicFactor : 1, ke.roughness = Dt.roughnessFactor !== void 0 ? Dt.roughnessFactor : 1, Dt.metallicRoughnessTexture !== void 0) {
              var Yt = Dt.metallicRoughnessTexture.index;
              Je.push(this.assignTexture(ke, "metalnessMap", Yt)), Je.push(this.assignTexture(ke, "roughnessMap", Yt));
            }
          }
          be.doubleSided === !0 && (ke.side = ce.DoubleSide);
          var Ue = be.alphaMode || It;
          return Ue === De ? ke.transparent = !0 : (ke.transparent = !1, Ue === qt && (ke.alphaTest = be.alphaCutoff !== void 0 ? be.alphaCutoff : 0.5)), be.normalTexture !== void 0 && _e !== ce.MeshBasicMaterial && (Je.push(this.assignTexture(ke, "normalMap", be.normalTexture.index)), ke.normalScale = new ce.Vector2(1, 1), be.normalTexture.scale !== void 0 && ke.normalScale.set(be.normalTexture.scale, be.normalTexture.scale)), be.occlusionTexture !== void 0 && _e !== ce.MeshBasicMaterial && (Je.push(this.assignTexture(ke, "aoMap", be.occlusionTexture.index)), be.occlusionTexture.strength !== void 0 && (ke.aoMapIntensity = be.occlusionTexture.strength)), be.emissiveFactor !== void 0 && _e !== ce.MeshBasicMaterial && (ke.emissive = new ce.Color().fromArray(be.emissiveFactor)), be.emissiveTexture !== void 0 && _e !== ce.MeshBasicMaterial && Je.push(this.assignTexture(ke, "emissiveMap", be.emissiveTexture.index)), Promise.all(Je).then(function() {
            var Te;
            return Te = _e === ce.ShaderMaterial ? Be[ge.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(ke) : new _e(ke), be.name !== void 0 && (Te.name = be.name), Te.normalScale && (Te.normalScale.y = -Te.normalScale.y), Te.map && (Te.map.encoding = ce.sRGBEncoding), Te.emissiveMap && (Te.emissiveMap.encoding = ce.sRGBEncoding), Te.specularMap && (Te.specularMap.encoding = ce.sRGBEncoding), be.extras && (Te.userData = be.extras), be.extensions && rr(Be, Te, be), Te;
          });
        }, Et.prototype.loadGeometries = function($e) {
          var _e, Be = this, be = this.extensions, ke = this.primitiveCache, Ve = function(Je) {
            if (Je.length < 2)
              return !1;
            var at = Je[0], Tt = at.targets || [];
            if (at.indices === void 0)
              return !1;
            for (var Dt = 1, zt = Je.length; Dt < zt; Dt++) {
              var Yt = Je[Dt];
              if (at.mode !== Yt.mode || Yt.indices === void 0 || !Ut(at.attributes, Yt.attributes))
                return !1;
              var Ue = Yt.targets || [];
              if (Tt.length !== Ue.length)
                return !1;
              for (var Te = 0, Re = Tt.length; Te < Re; Te++)
                if (!Ut(Tt[Te], Ue[Te]))
                  return !1;
            }
            return !0;
          }($e);
          return Ve && (_e = $e, $e = [$e[0]]), this.getDependencies("accessor").then(function(Je) {
            for (var at = [], Tt = 0, Dt = $e.length; Tt < Dt; Tt++) {
              var zt = $e[Tt], Yt = tt(ke, zt);
              if (Yt)
                at.push(Yt);
              else if (zt.extensions && zt.extensions[ge.KHR_DRACO_MESH_COMPRESSION]) {
                var Ue = be[ge.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(zt, Be).then(function(Re) {
                  return lt(Re, zt, Je), Re;
                });
                ke.push({ primitive: zt, promise: Ue }), at.push(Ue);
              } else {
                var Te = new ce.BufferGeometry();
                lt(Te, zt, Je), Ue = Promise.resolve(Te), ke.push({ primitive: zt, promise: Ue }), at.push(Ue);
              }
            }
            return Promise.all(at).then(function(Re) {
              if (Ve) {
                var it = Re[0];
                if ((an = function(qn, $n, Gn) {
                  for (var Un = 0, oi = qn.length; Un < oi; Un++) {
                    var Ai = qn[Un];
                    if ($n === Ai.baseGeometry && Xe(Gn, Ai.primitives))
                      return Ai.geometry;
                  }
                  return null;
                }(Jn = Be.multiPassGeometryCache, it, _e)) !== null)
                  return [an.geometry];
                var bt = new ce.BufferGeometry();
                for (var Qt in bt.name = it.name, bt.userData = it.userData, it.attributes)
                  bt.addAttribute(Qt, it.attributes[Qt]);
                for (var Qt in it.morphAttributes)
                  bt.morphAttributes[Qt] = it.morphAttributes[Qt];
                for (var jt = [], yr = 0, gr = 0, br = _e.length; gr < br; gr++) {
                  for (var mr = Je[_e[gr].indices], _r = 0, en = mr.count; _r < en; _r++)
                    jt.push(mr.array[_r]);
                  bt.addGroup(yr, mr.count, gr), yr += mr.count;
                }
                return bt.setIndex(jt), Jn.push({ geometry: bt, baseGeometry: it, primitives: _e }), [bt];
              }
              if (Re.length > 1 && ce.BufferGeometryUtils !== void 0) {
                for (gr = 1, br = $e.length; gr < br; gr++)
                  if ($e[0].mode !== $e[gr].mode)
                    return Re;
                var Jn, an;
                if (an = function(qn, $n) {
                  for (var Gn = 0, Un = qn.length; Gn < Un; Gn++) {
                    var oi = qn[Gn];
                    if (Xe($n, oi.baseGeometries))
                      return oi.geometry;
                  }
                  return null;
                }(Jn = Be.multiplePrimitivesCache, Re)) {
                  if (an.geometry !== null)
                    return [an.geometry];
                } else if (bt = ce.BufferGeometryUtils.mergeBufferGeometries(Re, !0), Jn.push({ geometry: bt, baseGeometries: Re }), bt !== null)
                  return [bt];
              }
              return Re;
            });
          });
        }, Et.prototype.loadMesh = function($e) {
          var _e = this, Be = (this.json, this.extensions), be = this.json.meshes[$e];
          return this.getMultiDependencies(["accessor", "material"]).then(function(ke) {
            for (var Ve = be.primitives, Je = [], at = 0, Tt = Ve.length; at < Tt; at++)
              Je[at] = Ve[at].material === void 0 ? new ce.MeshStandardMaterial({ color: 16777215, emissive: 0, metalness: 1, roughness: 1, transparent: !1, depthTest: !0, side: ce.FrontSide }) : ke.materials[Ve[at].material];
            return _e.loadGeometries(Ve).then(function(Dt) {
              for (var zt = Dt.length === 1 && Dt[0].groups.length > 0, Yt = [], Ue = 0, Te = Dt.length; Ue < Te; Ue++) {
                var Re, it = Dt[Ue], bt = Ve[Ue], Qt = zt ? Je : Je[Ue];
                if (bt.mode === Ke || bt.mode === ht || bt.mode === Nt || bt.mode === void 0)
                  Re = be.isSkinnedMesh === !0 ? new ce.SkinnedMesh(it, Qt) : new ce.Mesh(it, Qt), bt.mode === ht ? Re.drawMode = ce.TriangleStripDrawMode : bt.mode === Nt && (Re.drawMode = ce.TriangleFanDrawMode);
                else if (bt.mode === rt)
                  Re = new ce.LineSegments(it, Qt);
                else if (bt.mode === kt)
                  Re = new ce.Line(it, Qt);
                else if (bt.mode === gt)
                  Re = new ce.LineLoop(it, Qt);
                else {
                  if (bt.mode !== We)
                    throw new Error("THREE.GLTFLoader: Primitive mode unsupported: " + bt.mode);
                  Re = new ce.Points(it, Qt);
                }
                Object.keys(Re.geometry.morphAttributes).length > 0 && Ar(Re, be), Re.name = be.name || "mesh_" + $e, Dt.length > 1 && (Re.name += "_" + Ue), be.extras !== void 0 && (Re.userData = be.extras), Yt.push(Re);
                for (var jt = zt ? Re.material : [Re.material], yr = it.attributes.color !== void 0, gr = it.attributes.normal === void 0, br = Re.isSkinnedMesh === !0, mr = Object.keys(it.morphAttributes).length > 0, _r = mr && it.morphAttributes.normal !== void 0, en = 0, Jn = jt.length; en < Jn; en++) {
                  if (Qt = jt[en], Re.isPoints) {
                    var an = "PointsMaterial:" + Qt.uuid, qn = _e.cache.get(an);
                    qn || (qn = new ce.PointsMaterial(), ce.Material.prototype.copy.call(qn, Qt), qn.color.copy(Qt.color), qn.map = Qt.map, qn.lights = !1, _e.cache.add(an, qn)), Qt = qn;
                  } else if (Re.isLine) {
                    an = "LineBasicMaterial:" + Qt.uuid;
                    var $n = _e.cache.get(an);
                    $n || ($n = new ce.LineBasicMaterial(), ce.Material.prototype.copy.call($n, Qt), $n.color.copy(Qt.color), $n.lights = !1, _e.cache.add(an, $n)), Qt = $n;
                  }
                  if (yr || gr || br || mr) {
                    an = "ClonedMaterial:" + Qt.uuid + ":", Qt.isGLTFSpecularGlossinessMaterial && (an += "specular-glossiness:"), br && (an += "skinning:"), yr && (an += "vertex-colors:"), gr && (an += "flat-shading:"), mr && (an += "morph-targets:"), _r && (an += "morph-normals:");
                    var Gn = _e.cache.get(an);
                    Gn || (Gn = Qt.isGLTFSpecularGlossinessMaterial ? Be[ge.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(Qt) : Qt.clone(), br && (Gn.skinning = !0), yr && (Gn.vertexColors = ce.VertexColors), gr && (Gn.flatShading = !0), mr && (Gn.morphTargets = !0), _r && (Gn.morphNormals = !0), _e.cache.add(an, Gn)), Qt = Gn;
                  }
                  jt[en] = Qt, Qt.aoMap && it.attributes.uv2 === void 0 && it.attributes.uv !== void 0 && (console.log("THREE.GLTFLoader: Duplicating UVs to support aoMap."), it.addAttribute("uv2", new ce.BufferAttribute(it.attributes.uv.array, 2))), Qt.isGLTFSpecularGlossinessMaterial && (Re.onBeforeRender = Be[ge.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms);
                }
                Re.material = zt ? jt : jt[0];
              }
              if (Yt.length === 1)
                return Yt[0];
              var Un = new ce.Group();
              for (Ue = 0, Te = Yt.length; Ue < Te; Ue++)
                Un.add(Yt[Ue]);
              return Un;
            });
          });
        }, Et.prototype.loadCamera = function($e) {
          var _e, Be = this.json.cameras[$e], be = Be[Be.type];
          if (be)
            return Be.type === "perspective" ? _e = new ce.PerspectiveCamera(ce.Math.radToDeg(be.yfov), be.aspectRatio || 1, be.znear || 1, be.zfar || 2e6) : Be.type === "orthographic" && (_e = new ce.OrthographicCamera(be.xmag / -2, be.xmag / 2, be.ymag / 2, be.ymag / -2, be.znear, be.zfar)), Be.name !== void 0 && (_e.name = Be.name), Be.extras && (_e.userData = Be.extras), Promise.resolve(_e);
          console.warn("THREE.GLTFLoader: Missing camera parameters.");
        }, Et.prototype.loadSkin = function($e) {
          var _e = this.json.skins[$e], Be = { joints: _e.joints };
          return _e.inverseBindMatrices === void 0 ? Promise.resolve(Be) : this.getDependency("accessor", _e.inverseBindMatrices).then(function(be) {
            return Be.inverseBindMatrices = be, Be;
          });
        }, Et.prototype.loadAnimation = function($e) {
          this.json;
          var _e = this.json.animations[$e];
          return this.getMultiDependencies(["accessor", "node"]).then(function(Be) {
            for (var be = [], ke = 0, Ve = _e.channels.length; ke < Ve; ke++) {
              var Je = _e.channels[ke], at = _e.samplers[Je.sampler];
              if (at) {
                var Tt = Je.target, Dt = Tt.node !== void 0 ? Tt.node : Tt.id, zt = _e.parameters !== void 0 ? _e.parameters[at.input] : at.input, Yt = _e.parameters !== void 0 ? _e.parameters[at.output] : at.output, Ue = Be.accessors[zt], Te = Be.accessors[Yt], Re = Be.nodes[Dt];
                if (Re) {
                  var it;
                  switch (Re.updateMatrix(), Re.matrixAutoUpdate = !0, Gt[Tt.path]) {
                    case Gt.weights:
                      it = ce.NumberKeyframeTrack;
                      break;
                    case Gt.rotation:
                      it = ce.QuaternionKeyframeTrack;
                      break;
                    case Gt.position:
                    case Gt.scale:
                    default:
                      it = ce.VectorKeyframeTrack;
                  }
                  var bt = Re.name ? Re.name : Re.uuid, Qt = at.interpolation !== void 0 ? pt[at.interpolation] : ce.InterpolateLinear, jt = [];
                  Gt[Tt.path] === Gt.weights ? Re.traverse(function(mr) {
                    mr.isMesh === !0 && mr.morphTargetInfluences && jt.push(mr.name ? mr.name : mr.uuid);
                  }) : jt.push(bt);
                  for (var yr = 0, gr = jt.length; yr < gr; yr++) {
                    var br = new it(jt[yr] + "." + Gt[Tt.path], ce.AnimationUtils.arraySlice(Ue.array, 0), ce.AnimationUtils.arraySlice(Te.array, 0), Qt);
                    at.interpolation === "CUBICSPLINE" && (br.createInterpolant = function(mr) {
                      return new Le(this.times, this.values, this.getValueSize() / 3, mr);
                    }, br.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = !0), be.push(br);
                  }
                }
              }
            }
            return Dt = _e.name !== void 0 ? _e.name : "animation_" + $e, new ce.AnimationClip(Dt, void 0, be);
          });
        }, Et.prototype.loadNode = function($e) {
          this.json;
          var _e = this.extensions, Be = this.json.meshReferences, be = this.json.meshUses, ke = this.json.nodes[$e];
          return this.getMultiDependencies(["mesh", "skin", "camera", "light"]).then(function(Ve) {
            var Je;
            if (ke.isBone === !0)
              Je = new ce.Bone();
            else if (ke.mesh !== void 0) {
              var at = Ve.meshes[ke.mesh];
              if (Je = at.clone(), at.isGroup === !0)
                for (var Tt = 0, Dt = at.children.length; Tt < Dt; Tt++) {
                  var zt = at.children[Tt];
                  zt.material && zt.material.isGLTFSpecularGlossinessMaterial === !0 && (Je.children[Tt].onBeforeRender = zt.onBeforeRender);
                }
              else
                at.material && at.material.isGLTFSpecularGlossinessMaterial === !0 && (Je.onBeforeRender = at.onBeforeRender);
              Be[ke.mesh] > 1 && (Je.name += "_instance_" + be[ke.mesh]++);
            } else
              ke.camera !== void 0 ? Je = Ve.cameras[ke.camera] : ke.extensions && ke.extensions[ge.KHR_LIGHTS] && ke.extensions[ge.KHR_LIGHTS].light !== void 0 ? Je = _e[ge.KHR_LIGHTS].lights[ke.extensions[ge.KHR_LIGHTS].light] : Je = new ce.Object3D();
            if (ke.name !== void 0 && (Je.name = ce.PropertyBinding.sanitizeNodeName(ke.name)), ke.extras && (Je.userData = ke.extras), ke.extensions && rr(_e, Je, ke), ke.matrix !== void 0) {
              var Yt = new ce.Matrix4();
              Yt.fromArray(ke.matrix), Je.applyMatrix(Yt);
            } else
              ke.translation !== void 0 && Je.position.fromArray(ke.translation), ke.rotation !== void 0 && Je.quaternion.fromArray(ke.rotation), ke.scale !== void 0 && Je.scale.fromArray(ke.scale);
            return Je;
          });
        }, Et.prototype.loadScene = function() {
          function $e(_e, Be, be, ke, Ve) {
            var Je = ke[_e], at = be.nodes[_e];
            if (at.skin !== void 0)
              for (var Tt = Je.isGroup === !0 ? Je.children : [Je], Dt = 0, zt = Tt.length; Dt < zt; Dt++) {
                for (var Yt = Tt[Dt], Ue = Ve[at.skin], Te = [], Re = [], it = 0, bt = Ue.joints.length; it < bt; it++) {
                  var Qt = Ue.joints[it], jt = ke[Qt];
                  if (jt) {
                    Te.push(jt);
                    var yr = new ce.Matrix4();
                    Ue.inverseBindMatrices !== void 0 && yr.fromArray(Ue.inverseBindMatrices.array, 16 * it), Re.push(yr);
                  } else
                    console.warn('THREE.GLTFLoader: Joint "%s" could not be found.', Qt);
                }
                Yt.bind(new ce.Skeleton(Te, Re), Yt.matrixWorld);
              }
            if (Be.add(Je), at.children) {
              var gr = at.children;
              for (Dt = 0, zt = gr.length; Dt < zt; Dt++)
                $e(gr[Dt], Je, be, ke, Ve);
            }
          }
          return function(_e) {
            var Be = this.json, be = this.extensions, ke = this.json.scenes[_e];
            return this.getMultiDependencies(["node", "skin"]).then(function(Ve) {
              var Je = new ce.Scene();
              ke.name !== void 0 && (Je.name = ke.name), ke.extras && (Je.userData = ke.extras), ke.extensions && rr(be, Je, ke);
              for (var at = ke.nodes || [], Tt = 0, Dt = at.length; Tt < Dt; Tt++)
                $e(at[Tt], Je, Be, Ve.nodes, Ve.skins);
              if (ke.extensions && ke.extensions[ge.KHR_LIGHTS] && ke.extensions[ge.KHR_LIGHTS].light !== void 0) {
                var zt = be[ge.KHR_LIGHTS].lights;
                Je.add(zt[ke.extensions[ge.KHR_LIGHTS].light]);
              }
              return Je;
            });
          };
        }(), ye;
      }();
      var he = ce.MTLLoader, fe = ce.OBJLoader, xe = ce.OrbitControls, Ae = ce.ColladaLoader, Ee = ce.GLTFLoader;
      ie.OrbitControls = xe, ie.MTLLoader = he, ie.OBJLoader = fe, ie.ColladaLoader = Ae, ie.GLTFLoader = Ee;
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 }), ie.default = function(ce, he) {
        var fe = { animate: !0, name: "" }, xe = [Object.assign(Object.create(fe), { fuc: ce, name: he })];
        return function Ae() {
          requestAnimationFrame(Ae), xe.forEach(function(Ee) {
            var ye = Ee.fuc, ge = Ee.animate;
            ge && ye.call(Ee, Date.now());
          });
        }(), ie.default = function(Ae, Ee) {
          var ye = Object.assign(Object.create(fe), { fuc: Ae, name: Ee });
          return xe.push(ye), ye;
        }, xe[0];
      };
    }, function(ne, ie, oe) {
      var ce, he, fe, xe, Ae = function() {
        function Ne(Pe, Fe) {
          for (var Le = 0; Le < Fe.length; Le++) {
            var We = Fe[Le];
            We.enumerable = We.enumerable || !1, We.configurable = !0, "value" in We && (We.writable = !0), Object.defineProperty(Pe, We.key, We);
          }
        }
        return function(Pe, Fe, Le) {
          return Fe && Ne(Pe.prototype, Fe), Le && Ne(Pe, Le), Pe;
        };
      }(), Ee = oe(5), ye = function(Ne) {
        return Ne && Ne.__esModule ? Ne : { default: Ne };
      }(Ee), ge = function(Ne) {
        if (Ne && Ne.__esModule)
          return Ne;
        var Pe = {};
        if (Ne != null)
          for (var Fe in Ne)
            Object.prototype.hasOwnProperty.call(Ne, Fe) && (Pe[Fe] = Ne[Fe]);
        return Pe.default = Ne, Pe;
      }(oe(0));
      function me(Ne, Pe) {
        if (!(Ne instanceof Pe))
          throw new TypeError("Cannot call a class as a function");
      }
      function Ce(Ne, Pe) {
        if (!Ne)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !Pe || typeof Pe != "object" && typeof Pe != "function" ? Ne : Pe;
      }
      function Ie(Ne, Pe) {
        if (typeof Pe != "function" && Pe !== null)
          throw new TypeError("Super expression must either be null or a function, not " + typeof Pe);
        Ne.prototype = Object.create(Pe && Pe.prototype, { constructor: { value: Ne, enumerable: !1, writable: !0, configurable: !0 } }), Pe && (Object.setPrototypeOf ? Object.setPrototypeOf(Ne, Pe) : Ne.__proto__ = Pe);
      }
      var Oe = (he = ce = function(Ne) {
        function Pe() {
          return me(this, Pe), Ce(this, (Pe.__proto__ || Object.getPrototypeOf(Pe)).apply(this, arguments));
        }
        return Ie(Pe, Ee.Component), Ae(Pe, [{ key: "render", value: function() {
          return ye.default.createElement(ye.default.Fragment, null, " ");
        } }]), Pe;
      }(), ce.defaultProps = { color: "rgb(30,30,30)", __constructor: "ambientlight" }, he), He = (xe = fe = function(Ne) {
        function Pe() {
          return me(this, Pe), Ce(this, (Pe.__proto__ || Object.getPrototypeOf(Pe)).apply(this, arguments));
        }
        return Ie(Pe, Ee.Component), Ae(Pe, [{ key: "render", value: function() {
          return ye.default.createElement(ye.default.Fragment, null, " ");
        } }]), Pe;
      }(), fe.defaultProps = { color: 16777215, __constructor: "directionligth", position: new ge.Vector3(-30, 30, 30), castShadow: !0 }, xe);
      ne.exports = { AmbientLight: Oe, DirectionLight: He };
    }, function(ne, ie, oe) {
      ne.exports = oe(12);
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, he, fe = function() {
        function ye(ge, me) {
          for (var Ce = 0; Ce < me.length; Ce++) {
            var Ie = me[Ce];
            Ie.enumerable = Ie.enumerable || !1, Ie.configurable = !0, "value" in Ie && (Ie.writable = !0), Object.defineProperty(ge, Ie.key, Ie);
          }
        }
        return function(ge, me, Ce) {
          return me && ye(ge.prototype, me), Ce && ye(ge, Ce), ge;
        };
      }(), xe = function(ye) {
        if (ye && ye.__esModule)
          return ye;
        var ge = {};
        if (ye != null)
          for (var me in ye)
            Object.prototype.hasOwnProperty.call(ye, me) && (ge[me] = ye[me]);
        return ge.default = ye, ge;
      }(oe(0)), Ae = (oe(2), function(ye) {
        return ye && ye.__esModule ? ye : { default: ye };
      }(oe(1))), Ee = (he = ce = function(ye) {
        function ge(me) {
          return function(Ce, Ie) {
            if (!(Ce instanceof Ie))
              throw new TypeError("Cannot call a class as a function");
          }(this, ge), function(Ce, Ie) {
            if (!Ce)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !Ie || typeof Ie != "object" && typeof Ie != "function" ? Ce : Ie;
          }(this, (ge.__proto__ || Object.getPrototypeOf(ge)).call(this, me));
        }
        return function(me, Ce) {
          if (typeof Ce != "function" && Ce !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof Ce);
          me.prototype = Object.create(Ce && Ce.prototype, { constructor: { value: me, enumerable: !1, writable: !0, configurable: !0 } }), Ce && (Object.setPrototypeOf ? Object.setPrototypeOf(me, Ce) : me.__proto__ = Ce);
        }(ge, Ae.default), fe(ge, [{ key: "load3dModel", value: function() {
          var me = this, Ce = this.props, Ie = Ce.src;
          if (Ce.texPath, !Ie)
            return !1;
          new xe.GLTFLoader().load(Ie, function(Oe) {
            me.obj3d = Oe.scene;
            var He = {};
            if (Oe.scene.traverse(function(Le) {
              Le instanceof xe.Camera && (He.cameras || (He.cameras = []), He.cameras.push(Le)), Le instanceof xe.Light && (He.lights || (He.lights = []), He.lights.push(Le));
            }), He.cameras && He.cameras.length)
              me.camera = He.cameras[0], me.camera.position.copy(me.camera.position.clone().add(new xe.Vector3(0, 0, 0.01)));
            else {
              var Ne = me.computeBoundingBox(Oe.scene), Pe = Ne.max, Fe = Ne.max.z - Ne.min.z;
              me.camera.position.set(Pe.x, Pe.y, Pe.z + 0.6 * Fe);
            }
            He.lights && He.lights.length, me.initControl(), me.props.onLoad && me.props.onLoad();
          }, function(Oe) {
            me.props.onProgress && me.props.onProgress(Oe);
          }, function() {
            console.log("An error happened");
          });
        } }]), ge;
      }(), ce.defaultProps = Object.assign({}, Ae.default.defaultProps, { loader: "gltf" }), he);
      ie.default = Ee;
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, he, fe = function() {
        function ye(ge, me) {
          for (var Ce = 0; Ce < me.length; Ce++) {
            var Ie = me[Ce];
            Ie.enumerable = Ie.enumerable || !1, Ie.configurable = !0, "value" in Ie && (Ie.writable = !0), Object.defineProperty(ge, Ie.key, Ie);
          }
        }
        return function(ge, me, Ce) {
          return me && ye(ge.prototype, me), Ce && ye(ge, Ce), ge;
        };
      }(), xe = function(ye) {
        if (ye && ye.__esModule)
          return ye;
        var ge = {};
        if (ye != null)
          for (var me in ye)
            Object.prototype.hasOwnProperty.call(ye, me) && (ge[me] = ye[me]);
        return ge.default = ye, ge;
      }(oe(0)), Ae = (oe(2), function(ye) {
        return ye && ye.__esModule ? ye : { default: ye };
      }(oe(1))), Ee = (he = ce = function(ye) {
        function ge(me) {
          return function(Ce, Ie) {
            if (!(Ce instanceof Ie))
              throw new TypeError("Cannot call a class as a function");
          }(this, ge), function(Ce, Ie) {
            if (!Ce)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !Ie || typeof Ie != "object" && typeof Ie != "function" ? Ce : Ie;
          }(this, (ge.__proto__ || Object.getPrototypeOf(ge)).call(this, me));
        }
        return function(me, Ce) {
          if (typeof Ce != "function" && Ce !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof Ce);
          me.prototype = Object.create(Ce && Ce.prototype, { constructor: { value: me, enumerable: !1, writable: !0, configurable: !0 } }), Ce && (Object.setPrototypeOf ? Object.setPrototypeOf(me, Ce) : me.__proto__ = Ce);
        }(ge, Ae.default), fe(ge, [{ key: "load3dModel", value: function() {
          var me = this, Ce = this.props, Ie = Ce.src;
          if (Ce.texPath, !Ie)
            return !1;
          new xe.ColladaLoader().load(Ie, function(Oe) {
            me.obj3d = Oe.scene;
            var He = {};
            if (Oe.scene.traverse(function(Fe) {
              Fe instanceof xe.Camera && (He.cameras || (He.cameras = []), He.cameras.push(Fe)), Fe instanceof xe.Light && (He.lights || (He.lights = []), He.lights.push(Fe));
            }), He.cameras && He.cameras.length)
              me.camera = He.cameras[0], me.camera.position.copy(me.camera.position.clone().add(new xe.Vector3(0, 0, 0.01)));
            else {
              var Ne = me.computeBoundingBox(Oe.scene), Pe = Ne.max;
              Ne.max.z, Ne.min.z, me.camera.position.set(Pe.x, Pe.y, Pe.z);
            }
            He.lights && He.lights.length, me.initControl(), me.props.onLoad && me.props.onLoad();
          }, function(Oe) {
            me.props.onProgress && me.props.onProgress(Oe);
          }, function() {
            console.log("An error happened");
          });
        } }]), ge;
      }(), ce.defaultProps = Object.assign({}, Ae.default.defaultProps, { loader: "collada" }), he);
      ie.default = Ee;
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, he, fe = function() {
        function ye(ge, me) {
          for (var Ce = 0; Ce < me.length; Ce++) {
            var Ie = me[Ce];
            Ie.enumerable = Ie.enumerable || !1, Ie.configurable = !0, "value" in Ie && (Ie.writable = !0), Object.defineProperty(ge, Ie.key, Ie);
          }
        }
        return function(ge, me, Ce) {
          return me && ye(ge.prototype, me), Ce && ye(ge, Ce), ge;
        };
      }(), xe = function(ye) {
        if (ye && ye.__esModule)
          return ye;
        var ge = {};
        if (ye != null)
          for (var me in ye)
            Object.prototype.hasOwnProperty.call(ye, me) && (ge[me] = ye[me]);
        return ge.default = ye, ge;
      }(oe(0)), Ae = (oe(2), function(ye) {
        return ye && ye.__esModule ? ye : { default: ye };
      }(oe(1))), Ee = (he = ce = function(ye) {
        function ge(me) {
          return function(Ce, Ie) {
            if (!(Ce instanceof Ie))
              throw new TypeError("Cannot call a class as a function");
          }(this, ge), function(Ce, Ie) {
            if (!Ce)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !Ie || typeof Ie != "object" && typeof Ie != "function" ? Ce : Ie;
          }(this, (ge.__proto__ || Object.getPrototypeOf(ge)).call(this, me));
        }
        return function(me, Ce) {
          if (typeof Ce != "function" && Ce !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof Ce);
          me.prototype = Object.create(Ce && Ce.prototype, { constructor: { value: me, enumerable: !1, writable: !0, configurable: !0 } }), Ce && (Object.setPrototypeOf ? Object.setPrototypeOf(me, Ce) : me.__proto__ = Ce);
        }(ge, Ae.default), fe(ge, [{ key: "load3dModel", value: function() {
          var me = this, Ce = this.props, Ie = Ce.src, Oe = Ce.mtl, He = Ce.texPath;
          if (!Ie || !Oe)
            return !1;
          var Ne = new xe.MTLLoader(), Pe = new xe.OBJLoader();
          Ne.setTexturePath(He), Ne.load(Oe, function(Fe) {
            Fe.preload(), Pe.setMaterials(Fe).load(Ie, function(Le) {
              var We = me.computeBoundingBox(Le), rt = We.max, gt = We.max.z - We.min.z;
              me.camera.position.set(0, 0, rt.z + 1.5 * gt), me.initControl(), me.obj3d = Le, me.props.onLoad && me.props.onLoad();
            }, function(Le) {
              me.props.onProgress && me.props.onProgress(Le);
            });
          });
        } }]), ge;
      }(), ce.defaultProps = Object.assign({}, Ae.default.defaultProps, { loader: "objmtl" }), he);
      ie.default = Ee;
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, he, fe = function() {
        function ye(ge, me) {
          for (var Ce = 0; Ce < me.length; Ce++) {
            var Ie = me[Ce];
            Ie.enumerable = Ie.enumerable || !1, Ie.configurable = !0, "value" in Ie && (Ie.writable = !0), Object.defineProperty(ge, Ie.key, Ie);
          }
        }
        return function(ge, me, Ce) {
          return me && ye(ge.prototype, me), Ce && ye(ge, Ce), ge;
        };
      }(), xe = function(ye) {
        if (ye && ye.__esModule)
          return ye;
        var ge = {};
        if (ye != null)
          for (var me in ye)
            Object.prototype.hasOwnProperty.call(ye, me) && (ge[me] = ye[me]);
        return ge.default = ye, ge;
      }(oe(0)), Ae = (oe(2), function(ye) {
        return ye && ye.__esModule ? ye : { default: ye };
      }(oe(1))), Ee = (he = ce = function(ye) {
        function ge(me) {
          return function(Ce, Ie) {
            if (!(Ce instanceof Ie))
              throw new TypeError("Cannot call a class as a function");
          }(this, ge), function(Ce, Ie) {
            if (!Ce)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !Ie || typeof Ie != "object" && typeof Ie != "function" ? Ce : Ie;
          }(this, (ge.__proto__ || Object.getPrototypeOf(ge)).call(this, me));
        }
        return function(me, Ce) {
          if (typeof Ce != "function" && Ce !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof Ce);
          me.prototype = Object.create(Ce && Ce.prototype, { constructor: { value: me, enumerable: !1, writable: !0, configurable: !0 } }), Ce && (Object.setPrototypeOf ? Object.setPrototypeOf(me, Ce) : me.__proto__ = Ce);
        }(ge, Ae.default), fe(ge, [{ key: "load3dModel", value: function() {
          var me = this, Ce = this.props, Ie = Ce.src;
          if (Ce.texPath, !Ie)
            return !1;
          new xe.OBJLoader().load(Ie, function(Oe) {
            var He = me.computeBoundingBox(Oe), Ne = He.max, Pe = He.max.z - He.min.z;
            me.camera.position.set(0, 0, Ne.z + 1.5 * Pe), me.initControl(), me.obj3d = Oe, me.props.onLoad && me.props.onLoad();
          }, function(Oe) {
            me.props.onProgress && me.props.onProgress(Oe);
          });
        } }]), ge;
      }(), ce.defaultProps = Object.assign({}, Ae.default.defaultProps, { loader: "obj" }), he);
      ie.default = Ee;
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, he, fe = function() {
        function ye(ge, me) {
          for (var Ce = 0; Ce < me.length; Ce++) {
            var Ie = me[Ce];
            Ie.enumerable = Ie.enumerable || !1, Ie.configurable = !0, "value" in Ie && (Ie.writable = !0), Object.defineProperty(ge, Ie.key, Ie);
          }
        }
        return function(ge, me, Ce) {
          return me && ye(ge.prototype, me), Ce && ye(ge, Ce), ge;
        };
      }(), xe = function(ye) {
        if (ye && ye.__esModule)
          return ye;
        var ge = {};
        if (ye != null)
          for (var me in ye)
            Object.prototype.hasOwnProperty.call(ye, me) && (ge[me] = ye[me]);
        return ge.default = ye, ge;
      }(oe(0)), Ae = (oe(2), function(ye) {
        return ye && ye.__esModule ? ye : { default: ye };
      }(oe(1))), Ee = (he = ce = function(ye) {
        function ge(me) {
          return function(Ce, Ie) {
            if (!(Ce instanceof Ie))
              throw new TypeError("Cannot call a class as a function");
          }(this, ge), function(Ce, Ie) {
            if (!Ce)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !Ie || typeof Ie != "object" && typeof Ie != "function" ? Ce : Ie;
          }(this, (ge.__proto__ || Object.getPrototypeOf(ge)).call(this, me));
        }
        return function(me, Ce) {
          if (typeof Ce != "function" && Ce !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof Ce);
          me.prototype = Object.create(Ce && Ce.prototype, { constructor: { value: me, enumerable: !1, writable: !0, configurable: !0 } }), Ce && (Object.setPrototypeOf ? Object.setPrototypeOf(me, Ce) : me.__proto__ = Ce);
        }(ge, Ae.default), fe(ge, [{ key: "load3dModel", value: function() {
          var me = this, Ce = this.props, Ie = Ce.src, Oe = Ce.onProgress, He = Ce.onLoad, Ne = Ce.texPath, Pe = new xe.JSONLoader();
          Pe.setTexturePath(Ne), Pe.load(Ie, function(Fe, Le) {
            var We = new xe.Mesh(Fe, Le);
            Fe.computeBoundingBox();
            var rt = Fe.boundingSphere, gt = rt.center, kt = rt.radius, Ke = gt.clone().multiplyScalar(-1);
            We.geometry.applyMatrix(new xe.Matrix4().makeTranslation(Ke.x, Ke.y, Ke.z));
            var ht = me.computeBoundingBox(We).max;
            me.camera.position.set(ht.x, ht.y, ht.z), me.camera.position.copy(Ke.clone().add(new xe.Vector3(0, 0, 1.666 * kt))), me.initControl(), me.obj3d = We, He && He();
          }, function(Fe) {
            Oe && Oe(Fe);
          });
        } }]), ge;
      }(), ce.defaultProps = Object.assign({}, Ae.default.defaultProps, { loader: "json" }), he);
      ie.default = Ee;
    }, function(ne, ie, oe) {
      /*
      object-assign
      (c) Sindre Sorhus
      @license MIT
      */
      var ce = Object.getOwnPropertySymbols, he = Object.prototype.hasOwnProperty, fe = Object.prototype.propertyIsEnumerable;
      ne.exports = function() {
        try {
          if (!Object.assign)
            return !1;
          var xe = new String("abc");
          if (xe[5] = "de", Object.getOwnPropertyNames(xe)[0] === "5")
            return !1;
          for (var Ae = {}, Ee = 0; Ee < 10; Ee++)
            Ae["_" + String.fromCharCode(Ee)] = Ee;
          if (Object.getOwnPropertyNames(Ae).map(function(ge) {
            return Ae[ge];
          }).join("") !== "0123456789")
            return !1;
          var ye = {};
          return "abcdefghijklmnopqrst".split("").forEach(function(ge) {
            ye[ge] = ge;
          }), Object.keys(Object.assign({}, ye)).join("") === "abcdefghijklmnopqrst";
        } catch {
          return !1;
        }
      }() ? Object.assign : function(xe, Ae) {
        for (var Ee, ye, ge = function(Oe) {
          if (Oe == null)
            throw new TypeError("Object.assign cannot be called with null or undefined");
          return Object(Oe);
        }(xe), me = 1; me < arguments.length; me++) {
          for (var Ce in Ee = Object(arguments[me]))
            he.call(Ee, Ce) && (ge[Ce] = Ee[Ce]);
          if (ce) {
            ye = ce(Ee);
            for (var Ie = 0; Ie < ye.length; Ie++)
              fe.call(Ee, ye[Ie]) && (ge[ye[Ie]] = Ee[ye[Ie]]);
          }
        }
        return ge;
      };
    }, function(ne, ie, oe) {
      /** @license React v16.7.0
      * react.production.min.js
      *
      * Copyright (c) Facebook, Inc. and its affiliates.
      *
      * This source code is licensed under the MIT license found in the
      * LICENSE file in the root directory of this source tree.
      */
      var ce = oe(11), he = typeof Symbol == "function" && Symbol.for, fe = he ? Symbol.for("react.element") : 60103, xe = he ? Symbol.for("react.portal") : 60106, Ae = he ? Symbol.for("react.fragment") : 60107, Ee = he ? Symbol.for("react.strict_mode") : 60108, ye = he ? Symbol.for("react.profiler") : 60114, ge = he ? Symbol.for("react.provider") : 60109, me = he ? Symbol.for("react.context") : 60110, Ce = he ? Symbol.for("react.concurrent_mode") : 60111, Ie = he ? Symbol.for("react.forward_ref") : 60112, Oe = he ? Symbol.for("react.suspense") : 60113, He = he ? Symbol.for("react.memo") : 60115, Ne = he ? Symbol.for("react.lazy") : 60116, Pe = typeof Symbol == "function" && Symbol.iterator;
      function Fe(vt) {
        for (var Ut = arguments.length - 1, Xe = "https://reactjs.org/docs/error-decoder.html?invariant=" + vt, tt = 0; tt < Ut; tt++)
          Xe += "&args[]=" + encodeURIComponent(arguments[tt + 1]);
        (function(et, Et, lt, $e, _e, Be, be, ke) {
          if (!et) {
            if (et = void 0, Et === void 0)
              et = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            else {
              var Ve = [lt, $e, _e, Be, be, ke], Je = 0;
              (et = Error(Et.replace(/%s/g, function() {
                return Ve[Je++];
              }))).name = "Invariant Violation";
            }
            throw et.framesToPop = 1, et;
          }
        })(!1, "Minified React error #" + vt + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", Xe);
      }
      var Le = { isMounted: function() {
        return !1;
      }, enqueueForceUpdate: function() {
      }, enqueueReplaceState: function() {
      }, enqueueSetState: function() {
      } }, We = {};
      function rt(vt, Ut, Xe) {
        this.props = vt, this.context = Ut, this.refs = We, this.updater = Xe || Le;
      }
      function gt() {
      }
      function kt(vt, Ut, Xe) {
        this.props = vt, this.context = Ut, this.refs = We, this.updater = Xe || Le;
      }
      rt.prototype.isReactComponent = {}, rt.prototype.setState = function(vt, Ut) {
        typeof vt != "object" && typeof vt != "function" && vt != null && Fe("85"), this.updater.enqueueSetState(this, vt, Ut, "setState");
      }, rt.prototype.forceUpdate = function(vt) {
        this.updater.enqueueForceUpdate(this, vt, "forceUpdate");
      }, gt.prototype = rt.prototype;
      var Ke = kt.prototype = new gt();
      Ke.constructor = kt, ce(Ke, rt.prototype), Ke.isPureReactComponent = !0;
      var ht = { current: null, currentDispatcher: null }, Nt = Object.prototype.hasOwnProperty, Ft = { key: !0, ref: !0, __self: !0, __source: !0 };
      function At(vt, Ut, Xe) {
        var tt = void 0, et = {}, Et = null, lt = null;
        if (Ut != null)
          for (tt in Ut.ref !== void 0 && (lt = Ut.ref), Ut.key !== void 0 && (Et = "" + Ut.key), Ut)
            Nt.call(Ut, tt) && !Ft.hasOwnProperty(tt) && (et[tt] = Ut[tt]);
        var $e = arguments.length - 2;
        if ($e === 1)
          et.children = Xe;
        else if (1 < $e) {
          for (var _e = Array($e), Be = 0; Be < $e; Be++)
            _e[Be] = arguments[Be + 2];
          et.children = _e;
        }
        if (vt && vt.defaultProps)
          for (tt in $e = vt.defaultProps)
            et[tt] === void 0 && (et[tt] = $e[tt]);
        return { $$typeof: fe, type: vt, key: Et, ref: lt, props: et, _owner: ht.current };
      }
      function St(vt) {
        return typeof vt == "object" && vt !== null && vt.$$typeof === fe;
      }
      var Vt = /\/+/g, Xt = [];
      function Lt(vt, Ut, Xe, tt) {
        if (Xt.length) {
          var et = Xt.pop();
          return et.result = vt, et.keyPrefix = Ut, et.func = Xe, et.context = tt, et.count = 0, et;
        }
        return { result: vt, keyPrefix: Ut, func: Xe, context: tt, count: 0 };
      }
      function Zt(vt) {
        vt.result = null, vt.keyPrefix = null, vt.func = null, vt.context = null, vt.count = 0, 10 > Xt.length && Xt.push(vt);
      }
      function Gt(vt, Ut, Xe) {
        return vt == null ? 0 : function tt(et, Et, lt, $e) {
          var _e = typeof et;
          _e !== "undefined" && _e !== "boolean" || (et = null);
          var Be = !1;
          if (et === null)
            Be = !0;
          else
            switch (_e) {
              case "string":
              case "number":
                Be = !0;
                break;
              case "object":
                switch (et.$$typeof) {
                  case fe:
                  case xe:
                    Be = !0;
                }
            }
          if (Be)
            return lt($e, et, Et === "" ? "." + pt(et, 0) : Et), 1;
          if (Be = 0, Et = Et === "" ? "." : Et + ":", Array.isArray(et))
            for (var be = 0; be < et.length; be++) {
              var ke = Et + pt(_e = et[be], be);
              Be += tt(_e, ke, lt, $e);
            }
          else if (ke = et === null || typeof et != "object" ? null : typeof (ke = Pe && et[Pe] || et["@@iterator"]) == "function" ? ke : null, typeof ke == "function")
            for (et = ke.call(et), be = 0; !(_e = et.next()).done; )
              Be += tt(_e = _e.value, ke = Et + pt(_e, be++), lt, $e);
          else
            _e === "object" && Fe("31", (lt = "" + et) == "[object Object]" ? "object with keys {" + Object.keys(et).join(", ") + "}" : lt, "");
          return Be;
        }(vt, "", Ut, Xe);
      }
      function pt(vt, Ut) {
        return typeof vt == "object" && vt !== null && vt.key != null ? function(Xe) {
          var tt = { "=": "=0", ":": "=2" };
          return "$" + ("" + Xe).replace(/[=:]/g, function(et) {
            return tt[et];
          });
        }(vt.key) : Ut.toString(36);
      }
      function It(vt, Ut) {
        vt.func.call(vt.context, Ut, vt.count++);
      }
      function qt(vt, Ut, Xe) {
        var tt = vt.result, et = vt.keyPrefix;
        vt = vt.func.call(vt.context, Ut, vt.count++), Array.isArray(vt) ? De(vt, tt, Xe, function(Et) {
          return Et;
        }) : vt != null && (St(vt) && (vt = function(Et, lt) {
          return { $$typeof: fe, type: Et.type, key: lt, ref: Et.ref, props: Et.props, _owner: Et._owner };
        }(vt, et + (!vt.key || Ut && Ut.key === vt.key ? "" : ("" + vt.key).replace(Vt, "$&/") + "/") + Xe)), tt.push(vt));
      }
      function De(vt, Ut, Xe, tt, et) {
        var Et = "";
        Xe != null && (Et = ("" + Xe).replace(Vt, "$&/") + "/"), Gt(vt, qt, Ut = Lt(Ut, Et, tt, et)), Zt(Ut);
      }
      var ar = { Children: { map: function(vt, Ut, Xe) {
        if (vt == null)
          return vt;
        var tt = [];
        return De(vt, tt, null, Ut, Xe), tt;
      }, forEach: function(vt, Ut, Xe) {
        if (vt == null)
          return vt;
        Gt(vt, It, Ut = Lt(null, null, Ut, Xe)), Zt(Ut);
      }, count: function(vt) {
        return Gt(vt, function() {
          return null;
        }, null);
      }, toArray: function(vt) {
        var Ut = [];
        return De(vt, Ut, null, function(Xe) {
          return Xe;
        }), Ut;
      }, only: function(vt) {
        return St(vt) || Fe("143"), vt;
      } }, createRef: function() {
        return { current: null };
      }, Component: rt, PureComponent: kt, createContext: function(vt, Ut) {
        return Ut === void 0 && (Ut = null), (vt = { $$typeof: me, _calculateChangedBits: Ut, _currentValue: vt, _currentValue2: vt, _threadCount: 0, Provider: null, Consumer: null }).Provider = { $$typeof: ge, _context: vt }, vt.Consumer = vt;
      }, forwardRef: function(vt) {
        return { $$typeof: Ie, render: vt };
      }, lazy: function(vt) {
        return { $$typeof: Ne, _ctor: vt, _status: -1, _result: null };
      }, memo: function(vt, Ut) {
        return { $$typeof: He, type: vt, compare: Ut === void 0 ? null : Ut };
      }, Fragment: Ae, StrictMode: Ee, Suspense: Oe, createElement: At, cloneElement: function(vt, Ut, Xe) {
        vt == null && Fe("267", vt);
        var tt = void 0, et = ce({}, vt.props), Et = vt.key, lt = vt.ref, $e = vt._owner;
        if (Ut != null) {
          Ut.ref !== void 0 && (lt = Ut.ref, $e = ht.current), Ut.key !== void 0 && (Et = "" + Ut.key);
          var _e = void 0;
          for (tt in vt.type && vt.type.defaultProps && (_e = vt.type.defaultProps), Ut)
            Nt.call(Ut, tt) && !Ft.hasOwnProperty(tt) && (et[tt] = Ut[tt] === void 0 && _e !== void 0 ? _e[tt] : Ut[tt]);
        }
        if ((tt = arguments.length - 2) === 1)
          et.children = Xe;
        else if (1 < tt) {
          _e = Array(tt);
          for (var Be = 0; Be < tt; Be++)
            _e[Be] = arguments[Be + 2];
          et.children = _e;
        }
        return { $$typeof: fe, type: vt.type, key: Et, ref: lt, props: et, _owner: $e };
      }, createFactory: function(vt) {
        var Ut = At.bind(null, vt);
        return Ut.type = vt, Ut;
      }, isValidElement: St, version: "16.7.0", unstable_ConcurrentMode: Ce, unstable_Profiler: ye, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: ht, assign: ce } }, rr = { default: ar }, Ar = rr && ar || rr;
      ne.exports = Ar.default || Ar;
    }, function(ne, ie, oe) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce = oe(1);
      Object.defineProperty(ie, "Model", { enumerable: !0, get: function() {
        return me(ce).default;
      } });
      var he = oe(10);
      Object.defineProperty(ie, "JSONModel", { enumerable: !0, get: function() {
        return me(he).default;
      } });
      var fe = oe(9);
      Object.defineProperty(ie, "OBJModel", { enumerable: !0, get: function() {
        return me(fe).default;
      } });
      var xe = oe(8);
      Object.defineProperty(ie, "MTLModel", { enumerable: !0, get: function() {
        return me(xe).default;
      } });
      var Ae = oe(7);
      Object.defineProperty(ie, "DAEModel", { enumerable: !0, get: function() {
        return me(Ae).default;
      } });
      var Ee = oe(6);
      Object.defineProperty(ie, "GLTFModel", { enumerable: !0, get: function() {
        return me(Ee).default;
      } });
      var ye = oe(3);
      Object.defineProperty(ie, "Tick", { enumerable: !0, get: function() {
        return me(ye).default;
      } });
      var ge = oe(4);
      function me(Ce) {
        return Ce && Ce.__esModule ? Ce : { default: Ce };
      }
      Object.defineProperty(ie, "DirectionLight", { enumerable: !0, get: function() {
        return ge.DirectionLight;
      } }), Object.defineProperty(ie, "AmbientLight", { enumerable: !0, get: function() {
        return ge.AmbientLight;
      } });
    }]);
  });
})(react3dViewer);
const StyledBagItem = styled$1.div`
  ${(Z) => {
  const {
    isDragging: ee
  } = Z;
  return css`
      width: 6em;
      height: 6em;
      border: 0 !important;
      opacity: ${ee ? 0 : 1};
      cursor: grab;
      img,
      video {
        max-width: 100%;
      }
    `;
}}
`;
StyledBagItem.displayName = "StyledBagItem";
const PresentationalBagItem = ({
  drag: Z,
  isDragging: ee,
  item: ne
}) => {
  var ce, he;
  const {
    updateSelItem: ie
  } = useStore();
  return useRef(null), ne ? /* @__PURE__ */ jsxs(StyledBagItem, {
    className: "flex items-center justify-center",
    ref: Z,
    isDragging: ee,
    onClick: (fe) => {
      switch (fe.detail) {
        case 1:
          window && window.openInWebaverse ? window.openInWebaverse(ne) : ie(ne);
          break;
      }
    },
    children: [isImage((ce = ne == null ? void 0 : ne.metadata) == null ? void 0 : ce.image) && /* @__PURE__ */ jsx("img", {
      className: "w-full h-full",
      src: ne.metadata.image
    }), isMedia((he = ne == null ? void 0 : ne.metadata) == null ? void 0 : he.image) && /* @__PURE__ */ jsx("video", {
      className: "w-full h-full",
      src: ne.metadata.image,
      autoPlay: !0,
      loop: !0,
      muted: !0
    })]
  }) : /* @__PURE__ */ jsx(Fragment, {});
}, BagItem = ({
  item: Z,
  isForTrade: ee,
  index: ne,
  tradeBoxes: ie,
  updateTradeBoxes: oe,
  tradeLayer: ce
}) => {
  const he = useRef(null), {
    plugActor: fe,
    tradeData: xe,
    isCreator: Ae
  } = useStore();
  Z || (Z = {}), Z.isForTrade = ee;
  const [{
    handlerId: Ee
  }, ye] = useDrop({
    accept: itemTypes.LAYER1,
    collect(Ie) {
      return {
        handlerId: Ie.getHandlerId()
      };
    },
    drop(Ie, Oe) {
      if (!he.current || Z.canister || !fe || !xe)
        return;
      const He = Ie.index, Ne = ne, Pe = clone(Ie.item), Fe = clone(Ie.tradeBoxes), Le = clone(Z), We = clone(ie);
      console.log("cloneDragTradeItem: ", Pe), Ie.tradeLayer, Ie.tradeLayer, ce === Ie.tradeLayer ? (Fe[He].item = Le, Fe[Ne].item = Pe, oe(Fe)) : (Fe[He].item = Le, We[Ne].item = Pe, Ie.updateTradeBoxes(Fe), oe(We));
    }
  }), [{
    isDragging: ge
  }, me] = useDrag({
    type: itemTypes.LAYER1,
    canDrag: !!Z.canister,
    item: () => ({
      index: ne,
      tradeBoxes: ie,
      updateTradeBoxes: oe,
      item: Z,
      tradeLayer: ce
    }),
    collect: (Ie) => ({
      isDragging: Ie.isDragging()
    })
  }), Ce = ge ? 0 : 1;
  return me(ye(he)), /* @__PURE__ */ jsx("div", {
    className: classnames({
      opacity: Ce
    }),
    ref: he,
    "data-handler-id": Ee,
    children: /* @__PURE__ */ jsx(PresentationalBagItem, {
      drag: me,
      isDragging: ge,
      item: Z
    })
  });
}, BagItem$1 = memo(BagItem), Loading = () => {
  const {
    loading: Z
  } = useStore();
  return /* @__PURE__ */ jsx("div", {
    className: classnames("absolute top-0 bottom-0 left-0 right-0 z-10 flex justify-center items-center opacity-30 bg-white", {
      hidden: !Z
    }),
    children: /* @__PURE__ */ jsx("div", {
      className: "w-32 h-32 border-8 rounded-full border-t-green-900 animate-spin"
    })
  });
}, ItemDetails = () => {
  var ee;
  const {
    selItem: Z
  } = useStore();
  return Z ? /* @__PURE__ */ jsxs("div", {
    className: "absolute bottom-0 right-0 z-10 flex flex-col w-1/4 gap-1 p-4 bg-black-100",
    children: [/* @__PURE__ */ jsxs("div", {
      className: "flex flex-col gap-1 font-bold text-red-900",
      children: [/* @__PURE__ */ jsx("div", {
        children: Z == null ? void 0 : Z.collection
      }), /* @__PURE__ */ jsx("div", {
        children: "#7849"
      })]
    }), /* @__PURE__ */ jsx("div", {
      className: "flex items-center justify-center w-full p-4 bg-black",
      children: /* @__PURE__ */ jsx("img", {
        className: "w-4/5",
        src: (ee = Z == null ? void 0 : Z.metadata) == null ? void 0 : ee.image
      })
    })]
  }) : /* @__PURE__ */ jsx(Fragment, {});
}, nullPartner = Principal$2.fromUint8Array(new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 1, 1])).toText(), nullPrincipal = "rrkah-fqaaa-aaaaa-aaaaq-cai", url = new URL(window.location.href), tradeId = url.searchParams.get("tradeId");
console.log("tradeId: ", tradeId);
const Trade = () => {
  const {
    authenticated: Z,
    principal: ee,
    login: ne,
    agent: ie
  } = usePlug(), {
    isCreator: oe,
    updateIsCreator: ce,
    tradeData: he,
    updateTradeData: fe,
    remoteBoxes: xe,
    updateRemoteBoxes: Ae,
    localBoxes: Ee,
    updateLocalBoxes: ye,
    inventoryBoxes: ge,
    updateInventoryBoxes: me,
    partner: Ce,
    updatePartner: Ie,
    plugActor: Oe,
    updatePlugActor: He,
    existTrade: Ne,
    updateExistTrade: Pe,
    accepted: Fe,
    updateAccepted: Le,
    boxNumPerPage: We,
    updateBoxNumPerPage: rt,
    curPage: gt,
    updateCurPage: kt,
    loading: Ke,
    updateLoading: ht,
    updateLocalUser: Nt
  } = useStore(), Ft = ee ? window.ic.plug.principalId : "<none>";
  useEffect(() => {
    (async () => {
      if (tradeId) {
        ht(!0);
        const Gt = await window.ic.plug.createActor({
          canisterId: "jljwu-oiaaa-aaaam-qbala-cai",
          interfaceFactory: idlFactory
        });
        He(Gt);
        const pt = await Gt.get_trade_by_id(tradeId);
        console.log("get_trade_by_id trade: ", pt), fe(pt), ce(!1);
        const It = Principal$2.fromUint8Array(pt[0].guest._arr).toText();
        console.log("get_trade_by_id guest: ", It);
        const qt = Principal$2.fromUint8Array(pt[0].host._arr).toText();
        if (console.log("get_trade_by_id host: ", qt), It !== null && It !== "" && It !== nullPrincipal && It !== nullPartner && It !== ee)
          return console.error("Trade already initialized to another wallet! guest: ", It);
        qt !== null && qt !== "" && qt !== nullPrincipal && qt !== nullPartner && (console.log("Trade partner found! host: ", qt), Ie(qt));
        const De = await Gt.join_trade(tradeId);
        console.log("tradeJoined: ", De), Pe(!0), console.log("***** TRADE DETECTED *****"), ht(!1);
      }
    })();
  }, []), useEffect(() => {
    var Ar, vt;
    const Gt = (vt = (Ar = window == null ? void 0 : window.ic) == null ? void 0 : Ar.plug) == null ? void 0 : vt.principalId;
    if (!Gt)
      return;
    const pt = Principal$2.fromUint8Array(he.host._arr).toText(), It = Principal$2.fromUint8Array(he.guest._arr).toText(), qt = Gt === pt, De = Gt === It;
    let ar = [];
    if (qt)
      ar = he.hostData;
    else if (De)
      ar = he.guestData;
    else
      throw new Error("User is not host or guest");
    if (Ee.length === ar.length)
      return;
    let rr = !1;
    for (let Ut = 0; Ut < Ee.length; Ut++) {
      const Xe = Ee[Ut];
      if (ar.findIndex((et) => et.id === Xe.id) === -1 && Xe.item) {
        const et = Xe.item;
        console.log("***** ADDING ITEM", et), console.log("***** tradeData", he);
        const Et = Number(et.index);
        console.log("tradeData.id, {name: item.collection, canister: Principal.fromText(item.canister), tokenId"), console.log(he.id, {
          name: et.metadata.name,
          canisterId: et.canister,
          tokenId: Et
        }), Oe.add_item_to_trade(he.id, {
          name: et.collection,
          canisterId: Principal$2.fromText(et.canister),
          tokenId: Et
        }).then((lt) => {
          console.log("tradeResponse", lt), fe(lt[0]);
        }), rr = !0;
      }
    }
    if (!rr) {
      let Ut = !1;
      for (let Xe = 0; Xe < ar.length; Xe++) {
        const tt = ar[Xe];
        if (Ee.findIndex((Et) => Et.id === tt.id) === -1)
          return Ut = !0;
      }
      if (!Ut)
        throw new Error("something went wrong");
    }
  }, [Ee]), useEffect(() => {
    !ee || (async () => {
      ht(!0);
      const Gt = window.ic.plug.principalId, pt = await window.ic.plug.requestBalance();
      console.log("user: ", Gt), console.log("balance: ", pt);
      const It = await getUserTokens({
        agent: ie,
        user: Gt
      });
      clone(It), Nt(Gt), me(getInventoryBoxes(It)), ht(!1);
    })();
  }, [ee]), useEffect(() => {
    if (!Oe || !he || Ce)
      return;
    const Gt = setInterval(async () => {
      const pt = await Oe.get_trade_by_id(he.id);
      console.log("rtTrade: ", pt);
      const It = Principal$2.fromUint8Array(pt[0].guest._arr).toText();
      It !== null && It !== "" && It !== nullPrincipal && It !== nullPartner && (Ie(It), clearInterval(Gt), console.log("Trade partner found! guest: ", It));
    }, 1e3);
  }, [Oe, he]), useEffect(() => {
    if (!Oe || !he || !Ce)
      return;
    const Gt = setInterval(async () => {
      const pt = await Oe.get_trade_by_id(he.id);
      if (JSON.stringify(pt[0]) === JSON.stringify(he))
        return;
      console.log("updated!"), fe(pt[0]);
      const It = window.ic.plug.principalId.toText(), qt = Principal$2.fromUint8Array(pt[0].host._arr).toText(), De = Principal$2.fromUint8Array(pt[0].guest._arr).toText();
      if (!(It === qt) && !(It === De))
        throw new Error("User is not in this trade!");
      if (qt !== he.host)
        throw new Error("host changed!");
      if (De !== he.guest)
        throw new Error("guest changed!");
    }, 1e3);
    return () => clearInterval(Gt);
  }, [Oe, he, Ce]);
  const At = async () => {
    console.log("connecting..."), ne();
  }, St = async () => {
    ht(!0);
    const Gt = await window.ic.plug.createActor({
      canisterId: "jljwu-oiaaa-aaaam-qbala-cai",
      interfaceFactory: idlFactory
    });
    He(Gt);
    const pt = await Gt.create_trade();
    console.log("new trade: ", pt), fe(pt), ce(!0), Pe(!0), ht(!1);
  }, Vt = () => {
    !Oe || (Oe.accept(he.id), Le(!0), console.log("Trade accepted!"));
  }, Xt = () => {
    !Oe || (Oe.cancel(he.id), Le(!1), console.log("Trade canceled!"));
  }, Lt = () => {
    gt <= 1 || kt(gt - 1);
  }, Zt = () => {
    const Gt = Math.ceil(inventoryBoxNum / We);
    gt >= Gt || kt(gt + 1);
  };
  return /* @__PURE__ */ jsx("div", {
    className: "w-full h-full",
    children: /* @__PURE__ */ jsxs(DndProvider, {
      backend: HTML5Backend,
      children: [/* @__PURE__ */ jsx(ItemDetails, {}), /* @__PURE__ */ jsxs("div", {
        className: "absolute top-0 left-0 w-3/4 h-full",
        children: [/* @__PURE__ */ jsx(Loading, {}), !Z && /* @__PURE__ */ jsx(Frame, {
          className: "absolute w-full h-full",
          children: /* @__PURE__ */ jsx("div", {
            className: "flex items-center justify-center w-full h-full",
            children: /* @__PURE__ */ jsx(Button$1, {
              variant: "contained",
              onClick: At,
              children: "Connect"
            })
          })
        }), Z && !he && /* @__PURE__ */ jsx(Frame, {
          className: "absolute w-full",
          children: /* @__PURE__ */ jsxs("div", {
            className: "flex items-center justify-center w-full h-full",
            children: [!Ne && /* @__PURE__ */ jsx(Button$1, {
              variant: "contained",
              onClick: St,
              children: "Start Trade"
            }), Ne && !he && /* @__PURE__ */ jsx(Button$1, {
              variant: "disabled",
              children: "Starting..."
            })]
          })
        }), /* @__PURE__ */ jsxs("div", {
          className: "absolute w-full h-full overflow-auto",
          children: [Z && he && /* @__PURE__ */ jsxs(React__default.Fragment, {
            children: [/* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-col gap-2",
                children: [/* @__PURE__ */ jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [/* @__PURE__ */ jsx("div", {
                    className: "text-2xl",
                    children: "Their Trade"
                  }), /* @__PURE__ */ jsx("div", {
                    className: "text-xl text-blue-900",
                    children: oe && he.guestAccept || !oe && he.hostAccept ? "TRADE ACCEPTED" : ""
                  })]
                }), /* @__PURE__ */ jsx("div", {
                  className: "flex flex-wrap gap-3",
                  children: xe.map((Gt, pt) => /* @__PURE__ */ jsx(RemoteBox$1, {
                    children: /* @__PURE__ */ jsx(BagItem$1, {
                      item: clone(Gt.item),
                      index: pt,
                      tradeBoxes: clone(xe),
                      updateTradeBoxes: Ae,
                      tradeLayer: "remote"
                    }, `remote_${Gt.id}`)
                  }, Gt.id))
                })]
              })
            }), /* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-col gap-2",
                children: [/* @__PURE__ */ jsx("div", {
                  className: "text-2xl",
                  children: "Your Trade"
                }), /* @__PURE__ */ jsx("div", {
                  className: "flex flex-wrap gap-3",
                  children: Ee.map((Gt, pt) => /* @__PURE__ */ jsx(BagBox$1, {
                    children: /* @__PURE__ */ jsx(BagItem$1, {
                      isForTrade: !0,
                      item: clone(Gt.item),
                      index: pt,
                      tradeBoxes: clone(Ee),
                      updateTradeBoxes: ye,
                      tradeLayer: "local"
                    }, `local_${Gt.id}`)
                  }, Gt.id))
                })]
              })
            }), /* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-wrap items-center justify-center w-full h-full gap-8",
                children: [/* @__PURE__ */ jsx(Button$1, {
                  variant: "contained",
                  onClick: Vt,
                  disabled: Fe,
                  color: "success",
                  children: "Accept"
                }), /* @__PURE__ */ jsxs("div", {
                  className: "flex items-center justify-center gap-2",
                  children: [/* @__PURE__ */ jsx("label", {
                    htmlFor: "icp",
                    children: "ICP: "
                  }), /* @__PURE__ */ jsx("input", {
                    className: "w-32 p-0.5 text-xl border rounded opacity-30 bg-amber-900",
                    id: "icp",
                    type: "number"
                  })]
                }), /* @__PURE__ */ jsx(Button$1, {
                  variant: "contained",
                  onClick: Xt,
                  disabled: !Fe,
                  color: "error",
                  children: "Cancel"
                })]
              })
            })]
          }), ee && /* @__PURE__ */ jsx(Frame, {
            children: /* @__PURE__ */ jsxs("div", {
              className: "flex flex-col gap-2",
              children: [/* @__PURE__ */ jsxs("div", {
                className: "flex items-center justify-between",
                children: [/* @__PURE__ */ jsx("div", {
                  className: "text-2xl",
                  children: "Inventory"
                }), /* @__PURE__ */ jsxs("div", {
                  className: "flex items-center gap-2 text-xl",
                  children: [/* @__PURE__ */ jsx("div", {
                    className: "cursor-pointer",
                    onClick: Lt,
                    children: "<"
                  }), /* @__PURE__ */ jsx("div", {
                    className: "text-blue-900",
                    children: gt
                  }), /* @__PURE__ */ jsx("div", {
                    className: "cursor-pointer",
                    onClick: Zt,
                    children: ">"
                  })]
                })]
              }), /* @__PURE__ */ jsx("div", {
                className: "flex flex-wrap gap-3",
                children: ge.slice((gt - 1) * We, gt * We).map((Gt, pt) => /* @__PURE__ */ jsx(BagBox$1, {
                  children: /* @__PURE__ */ jsx(BagItem$1, {
                    item: clone(Gt.item),
                    index: (gt - 1) * We + pt,
                    tradeBoxes: clone(ge),
                    updateTradeBoxes: me,
                    tradeLayer: "inventory"
                  }, `inventory_${Gt.id}`)
                }, Gt.id))
              })]
            })
          })]
        })]
      }), /* @__PURE__ */ jsx("div", {
        className: "absolute top-0 right-0 w-1/4 h-full",
        children: /* @__PURE__ */ jsx(Frame, {
          className: "h-full",
          children: /* @__PURE__ */ jsxs("div", {
            className: "p-2",
            children: [/* @__PURE__ */ jsx("b", {
              children: "CONNECTION STATUS"
            }), /* @__PURE__ */ jsx("br", {}), Z && ee ? "Connected with " + Ft : "Waiting for IC wallet connection...", /* @__PURE__ */ jsx("br", {}), /* @__PURE__ */ jsx("br", {}), Ne && he && !Ce && !tradeId && /* @__PURE__ */ jsxs(Fragment, {
              children: [/* @__PURE__ */ jsx("b", {
                children: " WAITING FOR TRADE PARTNER... "
              }), /* @__PURE__ */ jsx("br", {}), "Send this link to your trade partner", /* @__PURE__ */ jsx("br", {}), /* @__PURE__ */ jsxs("a", {
                className: "text-blue-900",
                href: `${url.host}/?tradeId=${he.id}`,
                children: [url.host, "/?tradeId=", he.id]
              })]
            }), Ne && he && Ce && /* @__PURE__ */ jsxs(Fragment, {
              children: ["Trading with ", Ce]
            })]
          })
        })
      })]
    })
  });
};
globalThis.Buffer = buffer$1.Buffer;
const canisterId = "lj532-6iaaa-aaaah-qcc7a-cai", whitelist = [canisterId, "vlhm2-4iaaa-aaaam-qaatq-cai"], App = ({
  type: Z
}) => /* @__PURE__ */ jsx(PlugProvider, {
  whitelist,
  children: /* @__PURE__ */ jsx("div", {
    className: "fixed top-0 bottom-0 left-0 right-0",
    children: /* @__PURE__ */ jsx(Trade, {
      type: Z
    })
  })
});
export {
  App,
  App as default
};
