import * as React from "react";
import React__default, { useLayoutEffect, forwardRef, useContext, createContext, createElement, Fragment as Fragment$1, useRef, Children, isValidElement, cloneElement, memo, useEffect, useState, useCallback, useMemo, useDebugValue, Component } from "react";
const css$2 = `hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width: 640px){.container{max-width:640px}}@media (min-width: 768px){.container{max-width:768px}}@media (min-width: 1024px){.container{max-width:1024px}}@media (min-width: 1280px){.container{max-width:1280px}}@media (min-width: 1536px){.container{max-width:1536px}}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.top-0{top:0px}.bottom-0{bottom:0px}.left-0{left:0px}.right-0{right:0px}.z-10{z-index:10}.flex{display:flex}.hidden{display:none}.h-full{height:100%}.h-32{height:8rem}.w-full{width:100%}.w-1\\/4{width:25%}.w-4\\/5{width:80%}.w-32{width:8rem}.w-3\\/4{width:75%}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes spin{to{transform:rotate(360deg)}}.animate-spin{animation:spin 1s linear infinite}.cursor-pointer{cursor:pointer}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-8{gap:2rem}.overflow-auto{overflow:auto}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.border{border-width:1px}.border-8{border-width:8px}.border-t-green-900{--tw-border-opacity: 1;border-top-color:rgb(20 83 45 / var(--tw-border-opacity))}.bg-black{--tw-bg-opacity: 1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-amber-900{--tw-bg-opacity: 1;background-color:rgb(120 53 15 / var(--tw-bg-opacity))}.bg-\\[url\\(\\'\\/frame\\/bg\\.jpg\\'\\)\\]{background-image:url(/frame/bg.jpg)}.bg-cover{background-size:cover}.bg-center{background-position:center}.p-3{padding:.75rem}.p-4{padding:1rem}.p-0\\.5{padding:.125rem}.p-0{padding:0}.p-2{padding:.5rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.font-bold{font-weight:700}.text-red-900{--tw-text-opacity: 1;color:rgb(127 29 29 / var(--tw-text-opacity))}.text-blue-900{--tw-text-opacity: 1;color:rgb(30 58 138 / var(--tw-text-opacity))}.opacity-30{opacity:.3}.shadow-inner{--tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / .05);--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}*{box-sizing:border-box}.body{margin:0;font-family:Roboto,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;height:100%;width:100%;background-color:#000}.body:before{content:"";background-repeat:repeat;position:fixed;top:0;left:0;width:100%;height:100%;z-index:-1}code{font-family:source-code-pro,Menlo,Monaco,Consolas,Courier New,monospace}ul{list-style-type:none;margin:0;padding:0}#root{width:100vw;height:100vh;margin:0;border:0}
`;
function styleInject(e, n) {
  n === void 0 && (n = {});
  var o = n.insertAt;
  if (!(!e || typeof document > "u")) {
    var s = document.head || document.getElementsByTagName("head")[0], u = document.createElement("style");
    u.type = "text/css", o === "top" && s.firstChild ? s.insertBefore(u, s.firstChild) : s.appendChild(u), u.styleSheet ? u.styleSheet.cssText = e : u.appendChild(document.createTextNode(e));
  }
}
const common = {
  black: "#000",
  white: "#fff"
}, common$1 = common, red = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
}, red$1 = red, purple = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
}, purple$1 = purple, blue = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
}, blue$1 = blue, lightBlue = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
}, lightBlue$1 = lightBlue, green = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
}, green$1 = green, orange = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
}, orange$1 = orange, grey = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, grey$1 = grey;
function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function(e) {
    for (var n = 1; n < arguments.length; n++) {
      var o = arguments[n];
      for (var s in o)
        Object.prototype.hasOwnProperty.call(o, s) && (e[s] = o[s]);
    }
    return e;
  }, _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(e, n) {
  if (e == null)
    return {};
  var o = {}, s = Object.keys(e), u, d;
  for (d = 0; d < s.length; d++)
    u = s[d], !(n.indexOf(u) >= 0) && (o[u] = e[u]);
  return o;
}
function memoize$3(e) {
  var n = /* @__PURE__ */ Object.create(null);
  return function(o) {
    return n[o] === void 0 && (n[o] = e(o)), n[o];
  };
}
var reactPropsRegex$1 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, isPropValid = /* @__PURE__ */ memoize$3(
  function(e) {
    return reactPropsRegex$1.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
);
function sheetForTag$1(e) {
  if (e.sheet)
    return e.sheet;
  for (var n = 0; n < document.styleSheets.length; n++)
    if (document.styleSheets[n].ownerNode === e)
      return document.styleSheets[n];
}
function createStyleElement(e) {
  var n = document.createElement("style");
  return n.setAttribute("data-emotion", e.key), e.nonce !== void 0 && n.setAttribute("nonce", e.nonce), n.appendChild(document.createTextNode("")), n.setAttribute("data-s", ""), n;
}
var StyleSheet$1 = /* @__PURE__ */ function() {
  function e(o) {
    var s = this;
    this._insertTag = function(u) {
      var d;
      s.tags.length === 0 ? s.insertionPoint ? d = s.insertionPoint.nextSibling : s.prepend ? d = s.container.firstChild : d = s.before : d = s.tags[s.tags.length - 1].nextSibling, s.container.insertBefore(u, d), s.tags.push(u);
    }, this.isSpeedy = o.speedy === void 0 ? process.env.NODE_ENV === "production" : o.speedy, this.tags = [], this.ctr = 0, this.nonce = o.nonce, this.key = o.key, this.container = o.container, this.prepend = o.prepend, this.insertionPoint = o.insertionPoint, this.before = null;
  }
  var n = e.prototype;
  return n.hydrate = function(s) {
    s.forEach(this._insertTag);
  }, n.insert = function(s) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(createStyleElement(this));
    var u = this.tags[this.tags.length - 1];
    if (process.env.NODE_ENV !== "production") {
      var d = s.charCodeAt(0) === 64 && s.charCodeAt(1) === 105;
      d && this._alreadyInsertedOrderInsensitiveRule && console.error(`You're attempting to insert the following rule:
` + s + "\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules."), this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !d;
    }
    if (this.isSpeedy) {
      var g = sheetForTag$1(u);
      try {
        g.insertRule(s, g.cssRules.length);
      } catch (m) {
        process.env.NODE_ENV !== "production" && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(s) && console.error('There was a problem inserting the following rule: "' + s + '"', m);
      }
    } else
      u.appendChild(document.createTextNode(s));
    this.ctr++;
  }, n.flush = function() {
    this.tags.forEach(function(s) {
      return s.parentNode && s.parentNode.removeChild(s);
    }), this.tags = [], this.ctr = 0, process.env.NODE_ENV !== "production" && (this._alreadyInsertedOrderInsensitiveRule = !1);
  }, e;
}(), MS = "-ms-", MOZ = "-moz-", WEBKIT = "-webkit-", COMMENT = "comm", RULESET = "rule", DECLARATION = "decl", IMPORT = "@import", KEYFRAMES = "@keyframes", abs = Math.abs, from = String.fromCharCode, assign = Object.assign;
function hash$2(e, n) {
  return charat(e, 0) ^ 45 ? (((n << 2 ^ charat(e, 0)) << 2 ^ charat(e, 1)) << 2 ^ charat(e, 2)) << 2 ^ charat(e, 3) : 0;
}
function trim$1(e) {
  return e.trim();
}
function match(e, n) {
  return (e = n.exec(e)) ? e[0] : e;
}
function replace(e, n, o) {
  return e.replace(n, o);
}
function indexof(e, n) {
  return e.indexOf(n);
}
function charat(e, n) {
  return e.charCodeAt(n) | 0;
}
function substr(e, n, o) {
  return e.slice(n, o);
}
function strlen(e) {
  return e.length;
}
function sizeof(e) {
  return e.length;
}
function append(e, n) {
  return n.push(e), e;
}
function combine(e, n) {
  return e.map(n).join("");
}
var line = 1, column = 1, length = 0, position$1 = 0, character = 0, characters = "";
function node(e, n, o, s, u, d, g) {
  return { value: e, root: n, parent: o, type: s, props: u, children: d, line, column, length: g, return: "" };
}
function copy(e, n) {
  return assign(node("", null, null, "", null, null, 0), e, { length: -e.length }, n);
}
function char() {
  return character;
}
function prev() {
  return character = position$1 > 0 ? charat(characters, --position$1) : 0, column--, character === 10 && (column = 1, line--), character;
}
function next() {
  return character = position$1 < length ? charat(characters, position$1++) : 0, column++, character === 10 && (column = 1, line++), character;
}
function peek() {
  return charat(characters, position$1);
}
function caret() {
  return position$1;
}
function slice(e, n) {
  return substr(characters, e, n);
}
function token$1(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(e) {
  return line = column = 1, length = strlen(characters = e), position$1 = 0, [];
}
function dealloc(e) {
  return characters = "", e;
}
function delimit(e) {
  return trim$1(slice(position$1 - 1, delimiter(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function whitespace(e) {
  for (; (character = peek()) && character < 33; )
    next();
  return token$1(e) > 2 || token$1(character) > 3 ? "" : " ";
}
function escaping(e, n) {
  for (; --n && next() && !(character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97); )
    ;
  return slice(e, caret() + (n < 6 && peek() == 32 && next() == 32));
}
function delimiter(e) {
  for (; next(); )
    switch (character) {
      case e:
        return position$1;
      case 34:
      case 39:
        e !== 34 && e !== 39 && delimiter(character);
        break;
      case 40:
        e === 41 && delimiter(e);
        break;
      case 92:
        next();
        break;
    }
  return position$1;
}
function commenter(e, n) {
  for (; next() && e + character !== 47 + 10; )
    if (e + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(n, position$1 - 1) + "*" + from(e === 47 ? e : next());
}
function identifier(e) {
  for (; !token$1(peek()); )
    next();
  return slice(e, position$1);
}
function compile(e) {
  return dealloc(parse("", null, null, null, [""], e = alloc(e), 0, [0], e));
}
function parse(e, n, o, s, u, d, g, m, w) {
  for (var B = 0, x = 0, C = g, v = 0, y = 0, T = 0, M = 1, D = 1, V = 1, O = 0, H = "", q = u, $ = d, re = s, ce = H; D; )
    switch (T = O, O = next()) {
      case 40:
        if (T != 108 && charat(ce, C - 1) == 58) {
          indexof(ce += replace(delimit(O), "&", "&\f"), "&\f") != -1 && (V = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        ce += delimit(O);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        ce += whitespace(T);
        break;
      case 92:
        ce += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), n, o), w);
            break;
          default:
            ce += "/";
        }
        break;
      case 123 * M:
        m[B++] = strlen(ce) * V;
      case 125 * M:
      case 59:
      case 0:
        switch (O) {
          case 0:
          case 125:
            D = 0;
          case 59 + x:
            y > 0 && strlen(ce) - C && append(y > 32 ? declaration(ce + ";", s, o, C - 1) : declaration(replace(ce, " ", "") + ";", s, o, C - 2), w);
            break;
          case 59:
            ce += ";";
          default:
            if (append(re = ruleset(ce, n, o, B, x, u, m, H, q = [], $ = [], C), d), O === 123)
              if (x === 0)
                parse(ce, n, re, re, q, d, C, m, $);
              else
                switch (v === 99 && charat(ce, 3) === 110 ? 100 : v) {
                  case 100:
                  case 109:
                  case 115:
                    parse(e, re, re, s && append(ruleset(e, re, re, 0, 0, u, m, H, u, q = [], C), $), u, $, C, m, s ? q : $);
                    break;
                  default:
                    parse(ce, re, re, re, [""], $, 0, m, $);
                }
        }
        B = x = y = 0, M = V = 1, H = ce = "", C = g;
        break;
      case 58:
        C = 1 + strlen(ce), y = T;
      default:
        if (M < 1) {
          if (O == 123)
            --M;
          else if (O == 125 && M++ == 0 && prev() == 125)
            continue;
        }
        switch (ce += from(O), O * M) {
          case 38:
            V = x > 0 ? 1 : (ce += "\f", -1);
            break;
          case 44:
            m[B++] = (strlen(ce) - 1) * V, V = 1;
            break;
          case 64:
            peek() === 45 && (ce += delimit(next())), v = peek(), x = C = strlen(H = ce += identifier(caret())), O++;
            break;
          case 45:
            T === 45 && strlen(ce) == 2 && (M = 0);
        }
    }
  return d;
}
function ruleset(e, n, o, s, u, d, g, m, w, B, x) {
  for (var C = u - 1, v = u === 0 ? d : [""], y = sizeof(v), T = 0, M = 0, D = 0; T < s; ++T)
    for (var V = 0, O = substr(e, C + 1, C = abs(M = g[T])), H = e; V < y; ++V)
      (H = trim$1(M > 0 ? v[V] + " " + O : replace(O, /&\f/g, v[V]))) && (w[D++] = H);
  return node(e, n, o, u === 0 ? RULESET : m, w, B, x);
}
function comment(e, n, o) {
  return node(e, n, o, COMMENT, from(char()), substr(e, 2, -2), 0);
}
function declaration(e, n, o, s) {
  return node(e, n, o, DECLARATION, substr(e, 0, s), substr(e, s + 1, -1), s);
}
function serialize(e, n) {
  for (var o = "", s = sizeof(e), u = 0; u < s; u++)
    o += n(e[u], u, e, n) || "";
  return o;
}
function stringify(e, n, o, s) {
  switch (e.type) {
    case IMPORT:
    case DECLARATION:
      return e.return = e.return || e.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return e.return = e.value + "{" + serialize(e.children, s) + "}";
    case RULESET:
      e.value = e.props.join(",");
  }
  return strlen(o = serialize(e.children, s)) ? e.return = e.value + "{" + o + "}" : "";
}
function middleware(e) {
  var n = sizeof(e);
  return function(o, s, u, d) {
    for (var g = "", m = 0; m < n; m++)
      g += e[m](o, s, u, d) || "";
    return g;
  };
}
function rulesheet(e) {
  return function(n) {
    n.root || (n = n.return) && e(n);
  };
}
var identifierWithPointTracking = function(n, o, s) {
  for (var u = 0, d = 0; u = d, d = peek(), u === 38 && d === 12 && (o[s] = 1), !token$1(d); )
    next();
  return slice(n, position$1);
}, toRules = function(n, o) {
  var s = -1, u = 44;
  do
    switch (token$1(u)) {
      case 0:
        u === 38 && peek() === 12 && (o[s] = 1), n[s] += identifierWithPointTracking(position$1 - 1, o, s);
        break;
      case 2:
        n[s] += delimit(u);
        break;
      case 4:
        if (u === 44) {
          n[++s] = peek() === 58 ? "&\f" : "", o[s] = n[s].length;
          break;
        }
      default:
        n[s] += from(u);
    }
  while (u = next());
  return n;
}, getRules = function(n, o) {
  return dealloc(toRules(alloc(n), o));
}, fixedElements = /* @__PURE__ */ new WeakMap(), compat = function(n) {
  if (!(n.type !== "rule" || !n.parent || n.length < 1)) {
    for (var o = n.value, s = n.parent, u = n.column === s.column && n.line === s.line; s.type !== "rule"; )
      if (s = s.parent, !s)
        return;
    if (!(n.props.length === 1 && o.charCodeAt(0) !== 58 && !fixedElements.get(s)) && !u) {
      fixedElements.set(n, !0);
      for (var d = [], g = getRules(o, d), m = s.props, w = 0, B = 0; w < g.length; w++)
        for (var x = 0; x < m.length; x++, B++)
          n.props[B] = d[w] ? g[w].replace(/&\f/g, m[x]) : m[x] + " " + g[w];
    }
  }
}, removeLabel = function(n) {
  if (n.type === "decl") {
    var o = n.value;
    o.charCodeAt(0) === 108 && o.charCodeAt(2) === 98 && (n.return = "", n.value = "");
  }
}, ignoreFlag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason", isIgnoringComment = function(n) {
  return n.type === "comm" && n.children.indexOf(ignoreFlag) > -1;
}, createUnsafeSelectorsAlarm = function(n) {
  return function(o, s, u) {
    if (!(o.type !== "rule" || n.compat)) {
      var d = o.value.match(/(:first|:nth|:nth-last)-child/g);
      if (d) {
        for (var g = o.parent === u[0], m = g ? u[0].children : u, w = m.length - 1; w >= 0; w--) {
          var B = m[w];
          if (B.line < o.line)
            break;
          if (B.column < o.column) {
            if (isIgnoringComment(B))
              return;
            break;
          }
        }
        d.forEach(function(x) {
          console.error('The pseudo class "' + x + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + x.split("-child")[0] + '-of-type".');
        });
      }
    }
  };
}, isImportRule = function(n) {
  return n.type.charCodeAt(1) === 105 && n.type.charCodeAt(0) === 64;
}, isPrependedWithRegularRules = function(n, o) {
  for (var s = n - 1; s >= 0; s--)
    if (!isImportRule(o[s]))
      return !0;
  return !1;
}, nullifyElement = function(n) {
  n.type = "", n.value = "", n.return = "", n.children = "", n.props = "";
}, incorrectImportAlarm = function(n, o, s) {
  !isImportRule(n) || (n.parent ? (console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles."), nullifyElement(n)) : isPrependedWithRegularRules(o, s) && (console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules."), nullifyElement(n)));
};
function prefix(e, n) {
  switch (hash$2(e, n)) {
    case 5103:
      return WEBKIT + "print-" + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + e + MOZ + e + MS + e + e;
    case 6828:
    case 4268:
      return WEBKIT + e + MS + e + e;
    case 6165:
      return WEBKIT + e + MS + "flex-" + e + e;
    case 5187:
      return WEBKIT + e + replace(e, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + e;
    case 5443:
      return WEBKIT + e + MS + "flex-item-" + replace(e, /flex-|-self/, "") + e;
    case 4675:
      return WEBKIT + e + MS + "flex-line-pack" + replace(e, /align-content|flex-|-self/, "") + e;
    case 5548:
      return WEBKIT + e + MS + replace(e, "shrink", "negative") + e;
    case 5292:
      return WEBKIT + e + MS + replace(e, "basis", "preferred-size") + e;
    case 6060:
      return WEBKIT + "box-" + replace(e, "-grow", "") + WEBKIT + e + MS + replace(e, "grow", "positive") + e;
    case 4554:
      return WEBKIT + replace(e, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + e;
    case 6187:
      return replace(replace(replace(e, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), e, "") + e;
    case 5495:
    case 3959:
      return replace(e, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(e, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + e + e;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(e, /(.+)-inline(.+)/, WEBKIT + "$1$2") + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(e) - 1 - n > 6)
        switch (charat(e, n + 1)) {
          case 109:
            if (charat(e, n + 4) !== 45)
              break;
          case 102:
            return replace(e, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(e, n + 3) == 108 ? "$3" : "$2-$3")) + e;
          case 115:
            return ~indexof(e, "stretch") ? prefix(replace(e, "stretch", "fill-available"), n) + e : e;
        }
      break;
    case 4949:
      if (charat(e, n + 1) !== 115)
        break;
    case 6444:
      switch (charat(e, strlen(e) - 3 - (~indexof(e, "!important") && 10))) {
        case 107:
          return replace(e, ":", ":" + WEBKIT) + e;
        case 101:
          return replace(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(e, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + e;
      }
      break;
    case 5936:
      switch (charat(e, n + 11)) {
        case 114:
          return WEBKIT + e + MS + replace(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        case 108:
          return WEBKIT + e + MS + replace(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        case 45:
          return WEBKIT + e + MS + replace(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return WEBKIT + e + MS + e + e;
  }
  return e;
}
var prefixer = function(n, o, s, u) {
  if (n.length > -1 && !n.return)
    switch (n.type) {
      case DECLARATION:
        n.return = prefix(n.value, n.length);
        break;
      case KEYFRAMES:
        return serialize([copy(n, {
          value: replace(n.value, "@", "@" + WEBKIT)
        })], u);
      case RULESET:
        if (n.length)
          return combine(n.props, function(d) {
            switch (match(d, /(::plac\w+|:read-\w+)/)) {
              case ":read-only":
              case ":read-write":
                return serialize([copy(n, {
                  props: [replace(d, /:(read-\w+)/, ":" + MOZ + "$1")]
                })], u);
              case "::placeholder":
                return serialize([copy(n, {
                  props: [replace(d, /:(plac\w+)/, ":" + WEBKIT + "input-$1")]
                }), copy(n, {
                  props: [replace(d, /:(plac\w+)/, ":" + MOZ + "$1")]
                }), copy(n, {
                  props: [replace(d, /:(plac\w+)/, MS + "input-$1")]
                })], u);
            }
            return "";
          });
    }
}, defaultStylisPlugins = [prefixer], createCache = function(n) {
  var o = n.key;
  if (process.env.NODE_ENV !== "production" && !o)
    throw new Error(`You have to configure \`key\` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.
If multiple caches share the same key they might "fight" for each other's style elements.`);
  if (o === "css") {
    var s = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(s, function(M) {
      var D = M.getAttribute("data-emotion");
      D.indexOf(" ") !== -1 && (document.head.appendChild(M), M.setAttribute("data-s", ""));
    });
  }
  var u = n.stylisPlugins || defaultStylisPlugins;
  if (process.env.NODE_ENV !== "production" && /[^a-z-]/.test(o))
    throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + o + '" was passed');
  var d = {}, g, m = [];
  g = n.container || document.head, Array.prototype.forEach.call(
    document.querySelectorAll('style[data-emotion^="' + o + ' "]'),
    function(M) {
      for (var D = M.getAttribute("data-emotion").split(" "), V = 1; V < D.length; V++)
        d[D[V]] = !0;
      m.push(M);
    }
  );
  var w, B = [compat, removeLabel];
  process.env.NODE_ENV !== "production" && B.push(createUnsafeSelectorsAlarm({
    get compat() {
      return T.compat;
    }
  }), incorrectImportAlarm);
  {
    var x, C = [stringify, process.env.NODE_ENV !== "production" ? function(M) {
      M.root || (M.return ? x.insert(M.return) : M.value && M.type !== COMMENT && x.insert(M.value + "{}"));
    } : rulesheet(function(M) {
      x.insert(M);
    })], v = middleware(B.concat(u, C)), y = function(D) {
      return serialize(compile(D), v);
    };
    w = function(D, V, O, H) {
      x = O, process.env.NODE_ENV !== "production" && V.map !== void 0 && (x = {
        insert: function($) {
          O.insert($ + V.map);
        }
      }), y(D ? D + "{" + V.styles + "}" : V.styles), H && (T.inserted[V.name] = !0);
    };
  }
  var T = {
    key: o,
    sheet: new StyleSheet$1({
      key: o,
      container: g,
      nonce: n.nonce,
      speedy: n.speedy,
      prepend: n.prepend,
      insertionPoint: n.insertionPoint
    }),
    nonce: n.nonce,
    inserted: d,
    registered: {},
    insert: w
  };
  return T.sheet.hydrate(m), T;
}, commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function getDefaultExportFromCjs(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function getAugmentedNamespace(e) {
  var n = e.default;
  if (typeof n == "function") {
    var o = function() {
      return n.apply(this, arguments);
    };
    o.prototype = n.prototype;
  } else
    o = {};
  return Object.defineProperty(o, "__esModule", { value: !0 }), Object.keys(e).forEach(function(s) {
    var u = Object.getOwnPropertyDescriptor(e, s);
    Object.defineProperty(o, s, u.get ? u : {
      enumerable: !0,
      get: function() {
        return e[s];
      }
    });
  }), o;
}
var reactIs$4 = { exports: {} }, reactIs_production_min$3 = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$3;
function requireReactIs_production_min$3() {
  if (hasRequiredReactIs_production_min$3)
    return reactIs_production_min$3;
  hasRequiredReactIs_production_min$3 = 1;
  var e = typeof Symbol == "function" && Symbol.for, n = e ? Symbol.for("react.element") : 60103, o = e ? Symbol.for("react.portal") : 60106, s = e ? Symbol.for("react.fragment") : 60107, u = e ? Symbol.for("react.strict_mode") : 60108, d = e ? Symbol.for("react.profiler") : 60114, g = e ? Symbol.for("react.provider") : 60109, m = e ? Symbol.for("react.context") : 60110, w = e ? Symbol.for("react.async_mode") : 60111, B = e ? Symbol.for("react.concurrent_mode") : 60111, x = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, v = e ? Symbol.for("react.suspense_list") : 60120, y = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, M = e ? Symbol.for("react.block") : 60121, D = e ? Symbol.for("react.fundamental") : 60117, V = e ? Symbol.for("react.responder") : 60118, O = e ? Symbol.for("react.scope") : 60119;
  function H($) {
    if (typeof $ == "object" && $ !== null) {
      var re = $.$$typeof;
      switch (re) {
        case n:
          switch ($ = $.type, $) {
            case w:
            case B:
            case s:
            case d:
            case u:
            case C:
              return $;
            default:
              switch ($ = $ && $.$$typeof, $) {
                case m:
                case x:
                case T:
                case y:
                case g:
                  return $;
                default:
                  return re;
              }
          }
        case o:
          return re;
      }
    }
  }
  function q($) {
    return H($) === B;
  }
  return reactIs_production_min$3.AsyncMode = w, reactIs_production_min$3.ConcurrentMode = B, reactIs_production_min$3.ContextConsumer = m, reactIs_production_min$3.ContextProvider = g, reactIs_production_min$3.Element = n, reactIs_production_min$3.ForwardRef = x, reactIs_production_min$3.Fragment = s, reactIs_production_min$3.Lazy = T, reactIs_production_min$3.Memo = y, reactIs_production_min$3.Portal = o, reactIs_production_min$3.Profiler = d, reactIs_production_min$3.StrictMode = u, reactIs_production_min$3.Suspense = C, reactIs_production_min$3.isAsyncMode = function($) {
    return q($) || H($) === w;
  }, reactIs_production_min$3.isConcurrentMode = q, reactIs_production_min$3.isContextConsumer = function($) {
    return H($) === m;
  }, reactIs_production_min$3.isContextProvider = function($) {
    return H($) === g;
  }, reactIs_production_min$3.isElement = function($) {
    return typeof $ == "object" && $ !== null && $.$$typeof === n;
  }, reactIs_production_min$3.isForwardRef = function($) {
    return H($) === x;
  }, reactIs_production_min$3.isFragment = function($) {
    return H($) === s;
  }, reactIs_production_min$3.isLazy = function($) {
    return H($) === T;
  }, reactIs_production_min$3.isMemo = function($) {
    return H($) === y;
  }, reactIs_production_min$3.isPortal = function($) {
    return H($) === o;
  }, reactIs_production_min$3.isProfiler = function($) {
    return H($) === d;
  }, reactIs_production_min$3.isStrictMode = function($) {
    return H($) === u;
  }, reactIs_production_min$3.isSuspense = function($) {
    return H($) === C;
  }, reactIs_production_min$3.isValidElementType = function($) {
    return typeof $ == "string" || typeof $ == "function" || $ === s || $ === B || $ === d || $ === u || $ === C || $ === v || typeof $ == "object" && $ !== null && ($.$$typeof === T || $.$$typeof === y || $.$$typeof === g || $.$$typeof === m || $.$$typeof === x || $.$$typeof === D || $.$$typeof === V || $.$$typeof === O || $.$$typeof === M);
  }, reactIs_production_min$3.typeOf = H, reactIs_production_min$3;
}
var reactIs_development$3 = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$3;
function requireReactIs_development$3() {
  return hasRequiredReactIs_development$3 || (hasRequiredReactIs_development$3 = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, n = e ? Symbol.for("react.element") : 60103, o = e ? Symbol.for("react.portal") : 60106, s = e ? Symbol.for("react.fragment") : 60107, u = e ? Symbol.for("react.strict_mode") : 60108, d = e ? Symbol.for("react.profiler") : 60114, g = e ? Symbol.for("react.provider") : 60109, m = e ? Symbol.for("react.context") : 60110, w = e ? Symbol.for("react.async_mode") : 60111, B = e ? Symbol.for("react.concurrent_mode") : 60111, x = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, v = e ? Symbol.for("react.suspense_list") : 60120, y = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, M = e ? Symbol.for("react.block") : 60121, D = e ? Symbol.for("react.fundamental") : 60117, V = e ? Symbol.for("react.responder") : 60118, O = e ? Symbol.for("react.scope") : 60119;
    function H(z) {
      return typeof z == "string" || typeof z == "function" || z === s || z === B || z === d || z === u || z === C || z === v || typeof z == "object" && z !== null && (z.$$typeof === T || z.$$typeof === y || z.$$typeof === g || z.$$typeof === m || z.$$typeof === x || z.$$typeof === D || z.$$typeof === V || z.$$typeof === O || z.$$typeof === M);
    }
    function q(z) {
      if (typeof z == "object" && z !== null) {
        var be = z.$$typeof;
        switch (be) {
          case n:
            var fe = z.type;
            switch (fe) {
              case w:
              case B:
              case s:
              case d:
              case u:
              case C:
                return fe;
              default:
                var J = fe && fe.$$typeof;
                switch (J) {
                  case m:
                  case x:
                  case T:
                  case y:
                  case g:
                    return J;
                  default:
                    return be;
                }
            }
          case o:
            return be;
        }
      }
    }
    var $ = w, re = B, ce = m, Ie = g, Pe = n, se = x, Ce = s, Ge = T, $e = y, Be = o, Me = d, We = u, nt = C, Xe = !1;
    function Je(z) {
      return Xe || (Xe = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), qe(z) || q(z) === w;
    }
    function qe(z) {
      return q(z) === B;
    }
    function ye(z) {
      return q(z) === m;
    }
    function Ue(z) {
      return q(z) === g;
    }
    function ze(z) {
      return typeof z == "object" && z !== null && z.$$typeof === n;
    }
    function X(z) {
      return q(z) === x;
    }
    function ut(z) {
      return q(z) === s;
    }
    function ot(z) {
      return q(z) === T;
    }
    function mt(z) {
      return q(z) === y;
    }
    function ve(z) {
      return q(z) === o;
    }
    function je(z) {
      return q(z) === d;
    }
    function ie(z) {
      return q(z) === u;
    }
    function ae(z) {
      return q(z) === C;
    }
    reactIs_development$3.AsyncMode = $, reactIs_development$3.ConcurrentMode = re, reactIs_development$3.ContextConsumer = ce, reactIs_development$3.ContextProvider = Ie, reactIs_development$3.Element = Pe, reactIs_development$3.ForwardRef = se, reactIs_development$3.Fragment = Ce, reactIs_development$3.Lazy = Ge, reactIs_development$3.Memo = $e, reactIs_development$3.Portal = Be, reactIs_development$3.Profiler = Me, reactIs_development$3.StrictMode = We, reactIs_development$3.Suspense = nt, reactIs_development$3.isAsyncMode = Je, reactIs_development$3.isConcurrentMode = qe, reactIs_development$3.isContextConsumer = ye, reactIs_development$3.isContextProvider = Ue, reactIs_development$3.isElement = ze, reactIs_development$3.isForwardRef = X, reactIs_development$3.isFragment = ut, reactIs_development$3.isLazy = ot, reactIs_development$3.isMemo = mt, reactIs_development$3.isPortal = ve, reactIs_development$3.isProfiler = je, reactIs_development$3.isStrictMode = ie, reactIs_development$3.isSuspense = ae, reactIs_development$3.isValidElementType = H, reactIs_development$3.typeOf = q;
  }()), reactIs_development$3;
}
(function(e) {
  process.env.NODE_ENV === "production" ? e.exports = requireReactIs_production_min$3() : e.exports = requireReactIs_development$3();
})(reactIs$4);
var reactIs$3 = reactIs$4.exports, FORWARD_REF_STATICS = {
  $$typeof: !0,
  render: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0
}, MEMO_STATICS = {
  $$typeof: !0,
  compare: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0,
  type: !0
}, TYPE_STATICS$1 = {};
TYPE_STATICS$1[reactIs$3.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS$1[reactIs$3.Memo] = MEMO_STATICS;
var isBrowser$1 = !0;
function getRegisteredStyles(e, n, o) {
  var s = "";
  return o.split(" ").forEach(function(u) {
    e[u] !== void 0 ? n.push(e[u] + ";") : s += u + " ";
  }), s;
}
var registerStyles = function(n, o, s) {
  var u = n.key + "-" + o.name;
  (s === !1 || isBrowser$1 === !1) && n.registered[u] === void 0 && (n.registered[u] = o.styles);
}, insertStyles = function(n, o, s) {
  registerStyles(n, o, s);
  var u = n.key + "-" + o.name;
  if (n.inserted[o.name] === void 0) {
    var d = o;
    do
      n.insert(o === d ? "." + u : "", d, n.sheet, !0), d = d.next;
    while (d !== void 0);
  }
};
function murmur2(e) {
  for (var n = 0, o, s = 0, u = e.length; u >= 4; ++s, u -= 4)
    o = e.charCodeAt(s) & 255 | (e.charCodeAt(++s) & 255) << 8 | (e.charCodeAt(++s) & 255) << 16 | (e.charCodeAt(++s) & 255) << 24, o = (o & 65535) * 1540483477 + ((o >>> 16) * 59797 << 16), o ^= o >>> 24, n = (o & 65535) * 1540483477 + ((o >>> 16) * 59797 << 16) ^ (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16);
  switch (u) {
    case 3:
      n ^= (e.charCodeAt(s + 2) & 255) << 16;
    case 2:
      n ^= (e.charCodeAt(s + 1) & 255) << 8;
    case 1:
      n ^= e.charCodeAt(s) & 255, n = (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16);
  }
  return n ^= n >>> 13, n = (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), ((n ^ n >>> 15) >>> 0).toString(36);
}
var unitlessKeys$1 = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, ILLEGAL_ESCAPE_SEQUENCE_ERROR$1 = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`, UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).", hyphenateRegex = /[A-Z]|^ms/g, animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g, isCustomProperty = function(n) {
  return n.charCodeAt(1) === 45;
}, isProcessableValue = function(n) {
  return n != null && typeof n != "boolean";
}, processStyleName = /* @__PURE__ */ memoize$3(function(e) {
  return isCustomProperty(e) ? e : e.replace(hyphenateRegex, "-$&").toLowerCase();
}), processStyleValue = function(n, o) {
  switch (n) {
    case "animation":
    case "animationName":
      if (typeof o == "string")
        return o.replace(animationRegex, function(s, u, d) {
          return cursor = {
            name: u,
            styles: d,
            next: cursor
          }, u;
        });
  }
  return unitlessKeys$1[n] !== 1 && !isCustomProperty(n) && typeof o == "number" && o !== 0 ? o + "px" : o;
};
if (process.env.NODE_ENV !== "production") {
  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/, contentValues = ["normal", "none", "initial", "inherit", "unset"], oldProcessStyleValue = processStyleValue, msPattern$1 = /^-ms-/, hyphenPattern = /-(.)/g, hyphenatedCache = {};
  processStyleValue = function(n, o) {
    if (n === "content" && (typeof o != "string" || contentValues.indexOf(o) === -1 && !contentValuePattern.test(o) && (o.charAt(0) !== o.charAt(o.length - 1) || o.charAt(0) !== '"' && o.charAt(0) !== "'")))
      throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + o + "\"'`");
    var s = oldProcessStyleValue(n, o);
    return s !== "" && !isCustomProperty(n) && n.indexOf("-") !== -1 && hyphenatedCache[n] === void 0 && (hyphenatedCache[n] = !0, console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + n.replace(msPattern$1, "ms-").replace(hyphenPattern, function(u, d) {
      return d.toUpperCase();
    }) + "?")), s;
  };
}
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(e, n, o) {
  if (o == null)
    return "";
  if (o.__emotion_styles !== void 0) {
    if (process.env.NODE_ENV !== "production" && o.toString() === "NO_COMPONENT_SELECTOR")
      throw new Error(noComponentSelectorMessage);
    return o;
  }
  switch (typeof o) {
    case "boolean":
      return "";
    case "object": {
      if (o.anim === 1)
        return cursor = {
          name: o.name,
          styles: o.styles,
          next: cursor
        }, o.name;
      if (o.styles !== void 0) {
        var s = o.next;
        if (s !== void 0)
          for (; s !== void 0; )
            cursor = {
              name: s.name,
              styles: s.styles,
              next: cursor
            }, s = s.next;
        var u = o.styles + ";";
        return process.env.NODE_ENV !== "production" && o.map !== void 0 && (u += o.map), u;
      }
      return createStringFromObject(e, n, o);
    }
    case "function": {
      if (e !== void 0) {
        var d = cursor, g = o(e);
        return cursor = d, handleInterpolation(e, n, g);
      } else
        process.env.NODE_ENV !== "production" && console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
      break;
    }
    case "string":
      if (process.env.NODE_ENV !== "production") {
        var m = [], w = o.replace(animationRegex, function(x, C, v) {
          var y = "animation" + m.length;
          return m.push("const " + y + " = keyframes`" + v.replace(/^@keyframes animation-\w+/, "") + "`"), "${" + y + "}";
        });
        m.length && console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(m, ["`" + w + "`"]).join(`
`) + `

You should wrap it with \`css\` like this:

` + ("css`" + w + "`"));
      }
      break;
  }
  if (n == null)
    return o;
  var B = n[o];
  return B !== void 0 ? B : o;
}
function createStringFromObject(e, n, o) {
  var s = "";
  if (Array.isArray(o))
    for (var u = 0; u < o.length; u++)
      s += handleInterpolation(e, n, o[u]) + ";";
  else
    for (var d in o) {
      var g = o[d];
      if (typeof g != "object")
        n != null && n[g] !== void 0 ? s += d + "{" + n[g] + "}" : isProcessableValue(g) && (s += processStyleName(d) + ":" + processStyleValue(d, g) + ";");
      else {
        if (d === "NO_COMPONENT_SELECTOR" && process.env.NODE_ENV !== "production")
          throw new Error(noComponentSelectorMessage);
        if (Array.isArray(g) && typeof g[0] == "string" && (n == null || n[g[0]] === void 0))
          for (var m = 0; m < g.length; m++)
            isProcessableValue(g[m]) && (s += processStyleName(d) + ":" + processStyleValue(d, g[m]) + ";");
        else {
          var w = handleInterpolation(e, n, g);
          switch (d) {
            case "animation":
            case "animationName": {
              s += processStyleName(d) + ":" + w + ";";
              break;
            }
            default:
              process.env.NODE_ENV !== "production" && d === "undefined" && console.error(UNDEFINED_AS_OBJECT_KEY_ERROR), s += d + "{" + w + "}";
          }
        }
      }
    }
  return s;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g, sourceMapPattern;
process.env.NODE_ENV !== "production" && (sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g);
var cursor, serializeStyles = function(n, o, s) {
  if (n.length === 1 && typeof n[0] == "object" && n[0] !== null && n[0].styles !== void 0)
    return n[0];
  var u = !0, d = "";
  cursor = void 0;
  var g = n[0];
  g == null || g.raw === void 0 ? (u = !1, d += handleInterpolation(s, o, g)) : (process.env.NODE_ENV !== "production" && g[0] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1), d += g[0]);
  for (var m = 1; m < n.length; m++)
    d += handleInterpolation(s, o, n[m]), u && (process.env.NODE_ENV !== "production" && g[m] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1), d += g[m]);
  var w;
  process.env.NODE_ENV !== "production" && (d = d.replace(sourceMapPattern, function(v) {
    return w = v, "";
  })), labelPattern.lastIndex = 0;
  for (var B = "", x; (x = labelPattern.exec(d)) !== null; )
    B += "-" + x[1];
  var C = murmur2(d) + B;
  return process.env.NODE_ENV !== "production" ? {
    name: C,
    styles: d,
    map: w,
    next: cursor,
    toString: function() {
      return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
    }
  } : {
    name: C,
    styles: d,
    next: cursor
  };
}, syncFallback = function(n) {
  return n();
}, useInsertionEffect = React["useInsertionEffect"] ? React["useInsertionEffect"] : !1, useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback, useInsertionEffectWithLayoutFallback = useInsertionEffect || useLayoutEffect, hasOwnProperty = {}.hasOwnProperty, EmotionCacheContext = /* @__PURE__ */ createContext(
  typeof HTMLElement < "u" ? /* @__PURE__ */ createCache({
    key: "css"
  }) : null
);
process.env.NODE_ENV !== "production" && (EmotionCacheContext.displayName = "EmotionCacheContext");
EmotionCacheContext.Provider;
var withEmotionCache = function(n) {
  return /* @__PURE__ */ forwardRef(function(o, s) {
    var u = useContext(EmotionCacheContext);
    return n(o, u, s);
  });
}, ThemeContext$3 = /* @__PURE__ */ createContext({});
process.env.NODE_ENV !== "production" && (ThemeContext$3.displayName = "EmotionThemeContext");
var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__", Insertion$2 = function(n) {
  var o = n.cache, s = n.serialized, u = n.isStringTag;
  return registerStyles(o, s, u), useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(o, s, u);
  }), null;
}, Emotion = /* @__PURE__ */ withEmotionCache(function(e, n, o) {
  var s = e.css;
  typeof s == "string" && n.registered[s] !== void 0 && (s = n.registered[s]);
  var u = e[typePropName], d = [s], g = "";
  typeof e.className == "string" ? g = getRegisteredStyles(n.registered, d, e.className) : e.className != null && (g = e.className + " ");
  var m = serializeStyles(d, void 0, useContext(ThemeContext$3));
  if (process.env.NODE_ENV !== "production" && m.name.indexOf("-") === -1) {
    var w = e[labelPropName];
    w && (m = serializeStyles([m, "label:" + w + ";"]));
  }
  g += n.key + "-" + m.name;
  var B = {};
  for (var x in e)
    hasOwnProperty.call(e, x) && x !== "css" && x !== typePropName && (process.env.NODE_ENV === "production" || x !== labelPropName) && (B[x] = e[x]);
  return B.ref = o, B.className = g, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion$2, {
    cache: n,
    serialized: m,
    isStringTag: typeof u == "string"
  }), /* @__PURE__ */ createElement(u, B));
});
process.env.NODE_ENV !== "production" && (Emotion.displayName = "EmotionCssPropInternal");
var pkg = {
  name: "@emotion/react",
  version: "11.10.5",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  exports: {
    ".": {
      module: {
        worker: "./dist/emotion-react.worker.esm.js",
        browser: "./dist/emotion-react.browser.esm.js",
        default: "./dist/emotion-react.esm.js"
      },
      default: "./dist/emotion-react.cjs.js"
    },
    "./jsx-runtime": {
      module: {
        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
        default: "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
      },
      default: "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
    },
    "./_isolated-hnrs": {
      module: {
        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
        default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
      },
      default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
    },
    "./jsx-dev-runtime": {
      module: {
        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
        default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
      },
      default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
    },
    "./package.json": "./package.json",
    "./types/css-prop": "./types/css-prop.d.ts",
    "./macro": "./macro.js"
  },
  types: "types/index.d.ts",
  files: [
    "src",
    "dist",
    "jsx-runtime",
    "jsx-dev-runtime",
    "_isolated-hnrs",
    "types/*.d.ts",
    "macro.js",
    "macro.d.ts",
    "macro.js.flow"
  ],
  sideEffects: !1,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.18.3",
    "@emotion/babel-plugin": "^11.10.5",
    "@emotion/cache": "^11.10.5",
    "@emotion/serialize": "^1.1.1",
    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.0",
    "@emotion/utils": "^1.2.0",
    "@emotion/weak-memoize": "^0.3.0",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    "@babel/core": "^7.0.0",
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@babel/core": {
      optional: !0
    },
    "@types/react": {
      optional: !0
    }
  },
  devDependencies: {
    "@babel/core": "^7.18.5",
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.10.5",
    "@emotion/css-prettifier": "1.1.1",
    "@emotion/server": "11.10.0",
    "@emotion/styled": "11.10.5",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^4.5.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: [
      "./index.js",
      "./jsx-runtime.js",
      "./jsx-dev-runtime.js",
      "./_isolated-hnrs.js"
    ],
    umdName: "emotionReact",
    exports: {
      envConditions: [
        "browser",
        "worker"
      ],
      extra: {
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": "./macro.js"
      }
    }
  }
}, warnedAboutCssPropForGlobal = !1, Global = /* @__PURE__ */ withEmotionCache(function(e, n) {
  process.env.NODE_ENV !== "production" && !warnedAboutCssPropForGlobal && (e.className || e.css) && (console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?"), warnedAboutCssPropForGlobal = !0);
  var o = e.styles, s = serializeStyles([o], void 0, useContext(ThemeContext$3)), u = useRef();
  return useInsertionEffectWithLayoutFallback(function() {
    var d = n.key + "-global", g = new n.sheet.constructor({
      key: d,
      nonce: n.sheet.nonce,
      container: n.sheet.container,
      speedy: n.sheet.isSpeedy
    }), m = !1, w = document.querySelector('style[data-emotion="' + d + " " + s.name + '"]');
    return n.sheet.tags.length && (g.before = n.sheet.tags[0]), w !== null && (m = !0, w.setAttribute("data-emotion", d), g.hydrate([w])), u.current = [g, m], function() {
      g.flush();
    };
  }, [n]), useInsertionEffectWithLayoutFallback(function() {
    var d = u.current, g = d[0], m = d[1];
    if (m) {
      d[1] = !1;
      return;
    }
    if (s.next !== void 0 && insertStyles(n, s.next, !0), g.tags.length) {
      var w = g.tags[g.tags.length - 1].nextElementSibling;
      g.before = w, g.flush();
    }
    n.insert("", s, g, !1);
  }, [n, s.name]), null;
});
process.env.NODE_ENV !== "production" && (Global.displayName = "EmotionGlobal");
function css$1() {
  for (var e = arguments.length, n = new Array(e), o = 0; o < e; o++)
    n[o] = arguments[o];
  return serializeStyles(n);
}
var keyframes = function() {
  var n = css$1.apply(void 0, arguments), o = "animation-" + n.name;
  return {
    name: o,
    styles: "@keyframes " + o + "{" + n.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}, classnames$2 = function e(n) {
  for (var o = n.length, s = 0, u = ""; s < o; s++) {
    var d = n[s];
    if (d != null) {
      var g = void 0;
      switch (typeof d) {
        case "boolean":
          break;
        case "object": {
          if (Array.isArray(d))
            g = e(d);
          else {
            process.env.NODE_ENV !== "production" && d.styles !== void 0 && d.name !== void 0 && console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component."), g = "";
            for (var m in d)
              d[m] && m && (g && (g += " "), g += m);
          }
          break;
        }
        default:
          g = d;
      }
      g && (u && (u += " "), u += g);
    }
  }
  return u;
};
function merge$3(e, n, o) {
  var s = [], u = getRegisteredStyles(e, s, o);
  return s.length < 2 ? o : u + n(s);
}
var Insertion$1 = function(n) {
  var o = n.cache, s = n.serializedArr;
  return useInsertionEffectAlwaysWithSyncFallback(function() {
    for (var u = 0; u < s.length; u++)
      insertStyles(o, s[u], !1);
  }), null;
}, ClassNames = /* @__PURE__ */ withEmotionCache(function(e, n) {
  var o = !1, s = [], u = function() {
    if (o && process.env.NODE_ENV !== "production")
      throw new Error("css can only be used during render");
    for (var B = arguments.length, x = new Array(B), C = 0; C < B; C++)
      x[C] = arguments[C];
    var v = serializeStyles(x, n.registered);
    return s.push(v), registerStyles(n, v, !1), n.key + "-" + v.name;
  }, d = function() {
    if (o && process.env.NODE_ENV !== "production")
      throw new Error("cx can only be used during render");
    for (var B = arguments.length, x = new Array(B), C = 0; C < B; C++)
      x[C] = arguments[C];
    return merge$3(n.registered, u, classnames$2(x));
  }, g = {
    css: u,
    cx: d,
    theme: useContext(ThemeContext$3)
  }, m = e.children(g);
  return o = !0, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion$1, {
    cache: n,
    serializedArr: s
  }), m);
});
process.env.NODE_ENV !== "production" && (ClassNames.displayName = "EmotionClassNames");
if (process.env.NODE_ENV !== "production") {
  var isBrowser = !0, isTestEnv = typeof jest < "u" || typeof vi < "u";
  if (isBrowser && !isTestEnv) {
    var globalContext = typeof globalThis < "u" ? globalThis : isBrowser ? window : global, globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";
    globalContext[globalKey] && console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used."), globalContext[globalKey] = !0;
  }
}
var testOmitPropsOnStringTag = isPropValid, testOmitPropsOnComponent = function(n) {
  return n !== "theme";
}, getDefaultShouldForwardProp = function(n) {
  return typeof n == "string" && n.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
}, composeShouldForwardProps = function(n, o, s) {
  var u;
  if (o) {
    var d = o.shouldForwardProp;
    u = n.__emotion_forwardProp && d ? function(g) {
      return n.__emotion_forwardProp(g) && d(g);
    } : d;
  }
  return typeof u != "function" && s && (u = n.__emotion_forwardProp), u;
}, ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`, Insertion = function(n) {
  var o = n.cache, s = n.serialized, u = n.isStringTag;
  return registerStyles(o, s, u), useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(o, s, u);
  }), null;
}, createStyled$1 = function e(n, o) {
  if (process.env.NODE_ENV !== "production" && n === void 0)
    throw new Error(`You are trying to create a styled element with an undefined component.
You may have forgotten to import it.`);
  var s = n.__emotion_real === n, u = s && n.__emotion_base || n, d, g;
  o !== void 0 && (d = o.label, g = o.target);
  var m = composeShouldForwardProps(n, o, s), w = m || getDefaultShouldForwardProp(u), B = !w("as");
  return function() {
    var x = arguments, C = s && n.__emotion_styles !== void 0 ? n.__emotion_styles.slice(0) : [];
    if (d !== void 0 && C.push("label:" + d + ";"), x[0] == null || x[0].raw === void 0)
      C.push.apply(C, x);
    else {
      process.env.NODE_ENV !== "production" && x[0][0] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR), C.push(x[0][0]);
      for (var v = x.length, y = 1; y < v; y++)
        process.env.NODE_ENV !== "production" && x[0][y] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR), C.push(x[y], x[0][y]);
    }
    var T = withEmotionCache(function(M, D, V) {
      var O = B && M.as || u, H = "", q = [], $ = M;
      if (M.theme == null) {
        $ = {};
        for (var re in M)
          $[re] = M[re];
        $.theme = useContext(ThemeContext$3);
      }
      typeof M.className == "string" ? H = getRegisteredStyles(D.registered, q, M.className) : M.className != null && (H = M.className + " ");
      var ce = serializeStyles(C.concat(q), D.registered, $);
      H += D.key + "-" + ce.name, g !== void 0 && (H += " " + g);
      var Ie = B && m === void 0 ? getDefaultShouldForwardProp(O) : w, Pe = {};
      for (var se in M)
        B && se === "as" || Ie(se) && (Pe[se] = M[se]);
      return Pe.className = H, Pe.ref = V, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion, {
        cache: D,
        serialized: ce,
        isStringTag: typeof O == "string"
      }), /* @__PURE__ */ createElement(O, Pe));
    });
    return T.displayName = d !== void 0 ? d : "Styled(" + (typeof u == "string" ? u : u.displayName || u.name || "Component") + ")", T.defaultProps = n.defaultProps, T.__emotion_real = T, T.__emotion_base = u, T.__emotion_styles = C, T.__emotion_forwardProp = m, Object.defineProperty(T, "toString", {
      value: function() {
        return g === void 0 && process.env.NODE_ENV !== "production" ? "NO_COMPONENT_SELECTOR" : "." + g;
      }
    }), T.withComponent = function(M, D) {
      return e(M, _extends$1({}, o, D, {
        shouldForwardProp: composeShouldForwardProps(T, D, !0)
      })).apply(void 0, C);
    }, T;
  };
}, tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], newStyled = createStyled$1.bind();
tags.forEach(function(e) {
  newStyled[e] = newStyled(e);
});
const emStyled = newStyled;
var propTypes = { exports: {} }, reactIs$2 = { exports: {} }, reactIs_production_min$2 = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$2;
function requireReactIs_production_min$2() {
  if (hasRequiredReactIs_production_min$2)
    return reactIs_production_min$2;
  hasRequiredReactIs_production_min$2 = 1;
  var e = typeof Symbol == "function" && Symbol.for, n = e ? Symbol.for("react.element") : 60103, o = e ? Symbol.for("react.portal") : 60106, s = e ? Symbol.for("react.fragment") : 60107, u = e ? Symbol.for("react.strict_mode") : 60108, d = e ? Symbol.for("react.profiler") : 60114, g = e ? Symbol.for("react.provider") : 60109, m = e ? Symbol.for("react.context") : 60110, w = e ? Symbol.for("react.async_mode") : 60111, B = e ? Symbol.for("react.concurrent_mode") : 60111, x = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, v = e ? Symbol.for("react.suspense_list") : 60120, y = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, M = e ? Symbol.for("react.block") : 60121, D = e ? Symbol.for("react.fundamental") : 60117, V = e ? Symbol.for("react.responder") : 60118, O = e ? Symbol.for("react.scope") : 60119;
  function H($) {
    if (typeof $ == "object" && $ !== null) {
      var re = $.$$typeof;
      switch (re) {
        case n:
          switch ($ = $.type, $) {
            case w:
            case B:
            case s:
            case d:
            case u:
            case C:
              return $;
            default:
              switch ($ = $ && $.$$typeof, $) {
                case m:
                case x:
                case T:
                case y:
                case g:
                  return $;
                default:
                  return re;
              }
          }
        case o:
          return re;
      }
    }
  }
  function q($) {
    return H($) === B;
  }
  return reactIs_production_min$2.AsyncMode = w, reactIs_production_min$2.ConcurrentMode = B, reactIs_production_min$2.ContextConsumer = m, reactIs_production_min$2.ContextProvider = g, reactIs_production_min$2.Element = n, reactIs_production_min$2.ForwardRef = x, reactIs_production_min$2.Fragment = s, reactIs_production_min$2.Lazy = T, reactIs_production_min$2.Memo = y, reactIs_production_min$2.Portal = o, reactIs_production_min$2.Profiler = d, reactIs_production_min$2.StrictMode = u, reactIs_production_min$2.Suspense = C, reactIs_production_min$2.isAsyncMode = function($) {
    return q($) || H($) === w;
  }, reactIs_production_min$2.isConcurrentMode = q, reactIs_production_min$2.isContextConsumer = function($) {
    return H($) === m;
  }, reactIs_production_min$2.isContextProvider = function($) {
    return H($) === g;
  }, reactIs_production_min$2.isElement = function($) {
    return typeof $ == "object" && $ !== null && $.$$typeof === n;
  }, reactIs_production_min$2.isForwardRef = function($) {
    return H($) === x;
  }, reactIs_production_min$2.isFragment = function($) {
    return H($) === s;
  }, reactIs_production_min$2.isLazy = function($) {
    return H($) === T;
  }, reactIs_production_min$2.isMemo = function($) {
    return H($) === y;
  }, reactIs_production_min$2.isPortal = function($) {
    return H($) === o;
  }, reactIs_production_min$2.isProfiler = function($) {
    return H($) === d;
  }, reactIs_production_min$2.isStrictMode = function($) {
    return H($) === u;
  }, reactIs_production_min$2.isSuspense = function($) {
    return H($) === C;
  }, reactIs_production_min$2.isValidElementType = function($) {
    return typeof $ == "string" || typeof $ == "function" || $ === s || $ === B || $ === d || $ === u || $ === C || $ === v || typeof $ == "object" && $ !== null && ($.$$typeof === T || $.$$typeof === y || $.$$typeof === g || $.$$typeof === m || $.$$typeof === x || $.$$typeof === D || $.$$typeof === V || $.$$typeof === O || $.$$typeof === M);
  }, reactIs_production_min$2.typeOf = H, reactIs_production_min$2;
}
var reactIs_development$2 = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$2;
function requireReactIs_development$2() {
  return hasRequiredReactIs_development$2 || (hasRequiredReactIs_development$2 = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, n = e ? Symbol.for("react.element") : 60103, o = e ? Symbol.for("react.portal") : 60106, s = e ? Symbol.for("react.fragment") : 60107, u = e ? Symbol.for("react.strict_mode") : 60108, d = e ? Symbol.for("react.profiler") : 60114, g = e ? Symbol.for("react.provider") : 60109, m = e ? Symbol.for("react.context") : 60110, w = e ? Symbol.for("react.async_mode") : 60111, B = e ? Symbol.for("react.concurrent_mode") : 60111, x = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, v = e ? Symbol.for("react.suspense_list") : 60120, y = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, M = e ? Symbol.for("react.block") : 60121, D = e ? Symbol.for("react.fundamental") : 60117, V = e ? Symbol.for("react.responder") : 60118, O = e ? Symbol.for("react.scope") : 60119;
    function H(z) {
      return typeof z == "string" || typeof z == "function" || z === s || z === B || z === d || z === u || z === C || z === v || typeof z == "object" && z !== null && (z.$$typeof === T || z.$$typeof === y || z.$$typeof === g || z.$$typeof === m || z.$$typeof === x || z.$$typeof === D || z.$$typeof === V || z.$$typeof === O || z.$$typeof === M);
    }
    function q(z) {
      if (typeof z == "object" && z !== null) {
        var be = z.$$typeof;
        switch (be) {
          case n:
            var fe = z.type;
            switch (fe) {
              case w:
              case B:
              case s:
              case d:
              case u:
              case C:
                return fe;
              default:
                var J = fe && fe.$$typeof;
                switch (J) {
                  case m:
                  case x:
                  case T:
                  case y:
                  case g:
                    return J;
                  default:
                    return be;
                }
            }
          case o:
            return be;
        }
      }
    }
    var $ = w, re = B, ce = m, Ie = g, Pe = n, se = x, Ce = s, Ge = T, $e = y, Be = o, Me = d, We = u, nt = C, Xe = !1;
    function Je(z) {
      return Xe || (Xe = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), qe(z) || q(z) === w;
    }
    function qe(z) {
      return q(z) === B;
    }
    function ye(z) {
      return q(z) === m;
    }
    function Ue(z) {
      return q(z) === g;
    }
    function ze(z) {
      return typeof z == "object" && z !== null && z.$$typeof === n;
    }
    function X(z) {
      return q(z) === x;
    }
    function ut(z) {
      return q(z) === s;
    }
    function ot(z) {
      return q(z) === T;
    }
    function mt(z) {
      return q(z) === y;
    }
    function ve(z) {
      return q(z) === o;
    }
    function je(z) {
      return q(z) === d;
    }
    function ie(z) {
      return q(z) === u;
    }
    function ae(z) {
      return q(z) === C;
    }
    reactIs_development$2.AsyncMode = $, reactIs_development$2.ConcurrentMode = re, reactIs_development$2.ContextConsumer = ce, reactIs_development$2.ContextProvider = Ie, reactIs_development$2.Element = Pe, reactIs_development$2.ForwardRef = se, reactIs_development$2.Fragment = Ce, reactIs_development$2.Lazy = Ge, reactIs_development$2.Memo = $e, reactIs_development$2.Portal = Be, reactIs_development$2.Profiler = Me, reactIs_development$2.StrictMode = We, reactIs_development$2.Suspense = nt, reactIs_development$2.isAsyncMode = Je, reactIs_development$2.isConcurrentMode = qe, reactIs_development$2.isContextConsumer = ye, reactIs_development$2.isContextProvider = Ue, reactIs_development$2.isElement = ze, reactIs_development$2.isForwardRef = X, reactIs_development$2.isFragment = ut, reactIs_development$2.isLazy = ot, reactIs_development$2.isMemo = mt, reactIs_development$2.isPortal = ve, reactIs_development$2.isProfiler = je, reactIs_development$2.isStrictMode = ie, reactIs_development$2.isSuspense = ae, reactIs_development$2.isValidElementType = H, reactIs_development$2.typeOf = q;
  }()), reactIs_development$2;
}
var hasRequiredReactIs;
function requireReactIs() {
  return hasRequiredReactIs || (hasRequiredReactIs = 1, function(e) {
    process.env.NODE_ENV === "production" ? e.exports = requireReactIs_production_min$2() : e.exports = requireReactIs_development$2();
  }(reactIs$2)), reactIs$2.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var objectAssign, hasRequiredObjectAssign;
function requireObjectAssign() {
  if (hasRequiredObjectAssign)
    return objectAssign;
  hasRequiredObjectAssign = 1;
  var e = Object.getOwnPropertySymbols, n = Object.prototype.hasOwnProperty, o = Object.prototype.propertyIsEnumerable;
  function s(d) {
    if (d == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(d);
  }
  function u() {
    try {
      if (!Object.assign)
        return !1;
      var d = new String("abc");
      if (d[5] = "de", Object.getOwnPropertyNames(d)[0] === "5")
        return !1;
      for (var g = {}, m = 0; m < 10; m++)
        g["_" + String.fromCharCode(m)] = m;
      var w = Object.getOwnPropertyNames(g).map(function(x) {
        return g[x];
      });
      if (w.join("") !== "0123456789")
        return !1;
      var B = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(x) {
        B[x] = x;
      }), Object.keys(Object.assign({}, B)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return objectAssign = u() ? Object.assign : function(d, g) {
    for (var m, w = s(d), B, x = 1; x < arguments.length; x++) {
      m = Object(arguments[x]);
      for (var C in m)
        n.call(m, C) && (w[C] = m[C]);
      if (e) {
        B = e(m);
        for (var v = 0; v < B.length; v++)
          o.call(m, B[v]) && (w[B[v]] = m[B[v]]);
      }
    }
    return w;
  }, objectAssign;
}
var ReactPropTypesSecret_1, hasRequiredReactPropTypesSecret;
function requireReactPropTypesSecret() {
  if (hasRequiredReactPropTypesSecret)
    return ReactPropTypesSecret_1;
  hasRequiredReactPropTypesSecret = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return ReactPropTypesSecret_1 = e, ReactPropTypesSecret_1;
}
var has, hasRequiredHas;
function requireHas() {
  return hasRequiredHas || (hasRequiredHas = 1, has = Function.call.bind(Object.prototype.hasOwnProperty)), has;
}
var checkPropTypes_1, hasRequiredCheckPropTypes;
function requireCheckPropTypes() {
  if (hasRequiredCheckPropTypes)
    return checkPropTypes_1;
  hasRequiredCheckPropTypes = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var n = requireReactPropTypesSecret(), o = {}, s = requireHas();
    e = function(d) {
      var g = "Warning: " + d;
      typeof console < "u" && console.error(g);
      try {
        throw new Error(g);
      } catch {
      }
    };
  }
  function u(d, g, m, w, B) {
    if (process.env.NODE_ENV !== "production") {
      for (var x in d)
        if (s(d, x)) {
          var C;
          try {
            if (typeof d[x] != "function") {
              var v = Error(
                (w || "React class") + ": " + m + " type `" + x + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof d[x] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw v.name = "Invariant Violation", v;
            }
            C = d[x](g, x, w, m, null, n);
          } catch (T) {
            C = T;
          }
          if (C && !(C instanceof Error) && e(
            (w || "React class") + ": type specification of " + m + " `" + x + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof C + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), C instanceof Error && !(C.message in o)) {
            o[C.message] = !0;
            var y = B ? B() : "";
            e(
              "Failed " + m + " type: " + C.message + (y != null ? y : "")
            );
          }
        }
    }
  }
  return u.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (o = {});
  }, checkPropTypes_1 = u, checkPropTypes_1;
}
var factoryWithTypeCheckers, hasRequiredFactoryWithTypeCheckers;
function requireFactoryWithTypeCheckers() {
  if (hasRequiredFactoryWithTypeCheckers)
    return factoryWithTypeCheckers;
  hasRequiredFactoryWithTypeCheckers = 1;
  var e = requireReactIs(), n = requireObjectAssign(), o = requireReactPropTypesSecret(), s = requireHas(), u = requireCheckPropTypes(), d = function() {
  };
  process.env.NODE_ENV !== "production" && (d = function(m) {
    var w = "Warning: " + m;
    typeof console < "u" && console.error(w);
    try {
      throw new Error(w);
    } catch {
    }
  });
  function g() {
    return null;
  }
  return factoryWithTypeCheckers = function(m, w) {
    var B = typeof Symbol == "function" && Symbol.iterator, x = "@@iterator";
    function C(qe) {
      var ye = qe && (B && qe[B] || qe[x]);
      if (typeof ye == "function")
        return ye;
    }
    var v = "<<anonymous>>", y = {
      array: V("array"),
      bigint: V("bigint"),
      bool: V("boolean"),
      func: V("function"),
      number: V("number"),
      object: V("object"),
      string: V("string"),
      symbol: V("symbol"),
      any: O(),
      arrayOf: H,
      element: q(),
      elementType: $(),
      instanceOf: re,
      node: se(),
      objectOf: Ie,
      oneOf: ce,
      oneOfType: Pe,
      shape: Ge,
      exact: $e
    };
    function T(qe, ye) {
      return qe === ye ? qe !== 0 || 1 / qe === 1 / ye : qe !== qe && ye !== ye;
    }
    function M(qe, ye) {
      this.message = qe, this.data = ye && typeof ye == "object" ? ye : {}, this.stack = "";
    }
    M.prototype = Error.prototype;
    function D(qe) {
      if (process.env.NODE_ENV !== "production")
        var ye = {}, Ue = 0;
      function ze(ut, ot, mt, ve, je, ie, ae) {
        if (ve = ve || v, ie = ie || mt, ae !== o) {
          if (w) {
            var z = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw z.name = "Invariant Violation", z;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var be = ve + ":" + mt;
            !ye[be] && Ue < 3 && (d(
              "You are manually calling a React.PropTypes validation function for the `" + ie + "` prop on `" + ve + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), ye[be] = !0, Ue++);
          }
        }
        return ot[mt] == null ? ut ? ot[mt] === null ? new M("The " + je + " `" + ie + "` is marked as required " + ("in `" + ve + "`, but its value is `null`.")) : new M("The " + je + " `" + ie + "` is marked as required in " + ("`" + ve + "`, but its value is `undefined`.")) : null : qe(ot, mt, ve, je, ie);
      }
      var X = ze.bind(null, !1);
      return X.isRequired = ze.bind(null, !0), X;
    }
    function V(qe) {
      function ye(Ue, ze, X, ut, ot, mt) {
        var ve = Ue[ze], je = We(ve);
        if (je !== qe) {
          var ie = nt(ve);
          return new M(
            "Invalid " + ut + " `" + ot + "` of type " + ("`" + ie + "` supplied to `" + X + "`, expected ") + ("`" + qe + "`."),
            { expectedType: qe }
          );
        }
        return null;
      }
      return D(ye);
    }
    function O() {
      return D(g);
    }
    function H(qe) {
      function ye(Ue, ze, X, ut, ot) {
        if (typeof qe != "function")
          return new M("Property `" + ot + "` of component `" + X + "` has invalid PropType notation inside arrayOf.");
        var mt = Ue[ze];
        if (!Array.isArray(mt)) {
          var ve = We(mt);
          return new M("Invalid " + ut + " `" + ot + "` of type " + ("`" + ve + "` supplied to `" + X + "`, expected an array."));
        }
        for (var je = 0; je < mt.length; je++) {
          var ie = qe(mt, je, X, ut, ot + "[" + je + "]", o);
          if (ie instanceof Error)
            return ie;
        }
        return null;
      }
      return D(ye);
    }
    function q() {
      function qe(ye, Ue, ze, X, ut) {
        var ot = ye[Ue];
        if (!m(ot)) {
          var mt = We(ot);
          return new M("Invalid " + X + " `" + ut + "` of type " + ("`" + mt + "` supplied to `" + ze + "`, expected a single ReactElement."));
        }
        return null;
      }
      return D(qe);
    }
    function $() {
      function qe(ye, Ue, ze, X, ut) {
        var ot = ye[Ue];
        if (!e.isValidElementType(ot)) {
          var mt = We(ot);
          return new M("Invalid " + X + " `" + ut + "` of type " + ("`" + mt + "` supplied to `" + ze + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return D(qe);
    }
    function re(qe) {
      function ye(Ue, ze, X, ut, ot) {
        if (!(Ue[ze] instanceof qe)) {
          var mt = qe.name || v, ve = Je(Ue[ze]);
          return new M("Invalid " + ut + " `" + ot + "` of type " + ("`" + ve + "` supplied to `" + X + "`, expected ") + ("instance of `" + mt + "`."));
        }
        return null;
      }
      return D(ye);
    }
    function ce(qe) {
      if (!Array.isArray(qe))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? d(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : d("Invalid argument supplied to oneOf, expected an array.")), g;
      function ye(Ue, ze, X, ut, ot) {
        for (var mt = Ue[ze], ve = 0; ve < qe.length; ve++)
          if (T(mt, qe[ve]))
            return null;
        var je = JSON.stringify(qe, function(ae, z) {
          var be = nt(z);
          return be === "symbol" ? String(z) : z;
        });
        return new M("Invalid " + ut + " `" + ot + "` of value `" + String(mt) + "` " + ("supplied to `" + X + "`, expected one of " + je + "."));
      }
      return D(ye);
    }
    function Ie(qe) {
      function ye(Ue, ze, X, ut, ot) {
        if (typeof qe != "function")
          return new M("Property `" + ot + "` of component `" + X + "` has invalid PropType notation inside objectOf.");
        var mt = Ue[ze], ve = We(mt);
        if (ve !== "object")
          return new M("Invalid " + ut + " `" + ot + "` of type " + ("`" + ve + "` supplied to `" + X + "`, expected an object."));
        for (var je in mt)
          if (s(mt, je)) {
            var ie = qe(mt, je, X, ut, ot + "." + je, o);
            if (ie instanceof Error)
              return ie;
          }
        return null;
      }
      return D(ye);
    }
    function Pe(qe) {
      if (!Array.isArray(qe))
        return process.env.NODE_ENV !== "production" && d("Invalid argument supplied to oneOfType, expected an instance of array."), g;
      for (var ye = 0; ye < qe.length; ye++) {
        var Ue = qe[ye];
        if (typeof Ue != "function")
          return d(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + Xe(Ue) + " at index " + ye + "."
          ), g;
      }
      function ze(X, ut, ot, mt, ve) {
        for (var je = [], ie = 0; ie < qe.length; ie++) {
          var ae = qe[ie], z = ae(X, ut, ot, mt, ve, o);
          if (z == null)
            return null;
          z.data && s(z.data, "expectedType") && je.push(z.data.expectedType);
        }
        var be = je.length > 0 ? ", expected one of type [" + je.join(", ") + "]" : "";
        return new M("Invalid " + mt + " `" + ve + "` supplied to " + ("`" + ot + "`" + be + "."));
      }
      return D(ze);
    }
    function se() {
      function qe(ye, Ue, ze, X, ut) {
        return Be(ye[Ue]) ? null : new M("Invalid " + X + " `" + ut + "` supplied to " + ("`" + ze + "`, expected a ReactNode."));
      }
      return D(qe);
    }
    function Ce(qe, ye, Ue, ze, X) {
      return new M(
        (qe || "React class") + ": " + ye + " type `" + Ue + "." + ze + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + X + "`."
      );
    }
    function Ge(qe) {
      function ye(Ue, ze, X, ut, ot) {
        var mt = Ue[ze], ve = We(mt);
        if (ve !== "object")
          return new M("Invalid " + ut + " `" + ot + "` of type `" + ve + "` " + ("supplied to `" + X + "`, expected `object`."));
        for (var je in qe) {
          var ie = qe[je];
          if (typeof ie != "function")
            return Ce(X, ut, ot, je, nt(ie));
          var ae = ie(mt, je, X, ut, ot + "." + je, o);
          if (ae)
            return ae;
        }
        return null;
      }
      return D(ye);
    }
    function $e(qe) {
      function ye(Ue, ze, X, ut, ot) {
        var mt = Ue[ze], ve = We(mt);
        if (ve !== "object")
          return new M("Invalid " + ut + " `" + ot + "` of type `" + ve + "` " + ("supplied to `" + X + "`, expected `object`."));
        var je = n({}, Ue[ze], qe);
        for (var ie in je) {
          var ae = qe[ie];
          if (s(qe, ie) && typeof ae != "function")
            return Ce(X, ut, ot, ie, nt(ae));
          if (!ae)
            return new M(
              "Invalid " + ut + " `" + ot + "` key `" + ie + "` supplied to `" + X + "`.\nBad object: " + JSON.stringify(Ue[ze], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(qe), null, "  ")
            );
          var z = ae(mt, ie, X, ut, ot + "." + ie, o);
          if (z)
            return z;
        }
        return null;
      }
      return D(ye);
    }
    function Be(qe) {
      switch (typeof qe) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !qe;
        case "object":
          if (Array.isArray(qe))
            return qe.every(Be);
          if (qe === null || m(qe))
            return !0;
          var ye = C(qe);
          if (ye) {
            var Ue = ye.call(qe), ze;
            if (ye !== qe.entries) {
              for (; !(ze = Ue.next()).done; )
                if (!Be(ze.value))
                  return !1;
            } else
              for (; !(ze = Ue.next()).done; ) {
                var X = ze.value;
                if (X && !Be(X[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function Me(qe, ye) {
      return qe === "symbol" ? !0 : ye ? ye["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && ye instanceof Symbol : !1;
    }
    function We(qe) {
      var ye = typeof qe;
      return Array.isArray(qe) ? "array" : qe instanceof RegExp ? "object" : Me(ye, qe) ? "symbol" : ye;
    }
    function nt(qe) {
      if (typeof qe > "u" || qe === null)
        return "" + qe;
      var ye = We(qe);
      if (ye === "object") {
        if (qe instanceof Date)
          return "date";
        if (qe instanceof RegExp)
          return "regexp";
      }
      return ye;
    }
    function Xe(qe) {
      var ye = nt(qe);
      switch (ye) {
        case "array":
        case "object":
          return "an " + ye;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + ye;
        default:
          return ye;
      }
    }
    function Je(qe) {
      return !qe.constructor || !qe.constructor.name ? v : qe.constructor.name;
    }
    return y.checkPropTypes = u, y.resetWarningCache = u.resetWarningCache, y.PropTypes = y, y;
  }, factoryWithTypeCheckers;
}
var factoryWithThrowingShims, hasRequiredFactoryWithThrowingShims;
function requireFactoryWithThrowingShims() {
  if (hasRequiredFactoryWithThrowingShims)
    return factoryWithThrowingShims;
  hasRequiredFactoryWithThrowingShims = 1;
  var e = requireReactPropTypesSecret();
  function n() {
  }
  function o() {
  }
  return o.resetWarningCache = n, factoryWithThrowingShims = function() {
    function s(g, m, w, B, x, C) {
      if (C !== e) {
        var v = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw v.name = "Invariant Violation", v;
      }
    }
    s.isRequired = s;
    function u() {
      return s;
    }
    var d = {
      array: s,
      bigint: s,
      bool: s,
      func: s,
      number: s,
      object: s,
      string: s,
      symbol: s,
      any: s,
      arrayOf: u,
      element: s,
      elementType: s,
      instanceOf: u,
      node: s,
      objectOf: u,
      oneOf: u,
      oneOfType: u,
      shape: u,
      exact: u,
      checkPropTypes: o,
      resetWarningCache: n
    };
    return d.PropTypes = d, d;
  }, factoryWithThrowingShims;
}
if (process.env.NODE_ENV !== "production") {
  var ReactIs = requireReactIs(), throwOnDirectAccess = !0;
  propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
} else
  propTypes.exports = requireFactoryWithThrowingShims()();
var jsxRuntime = { exports: {} }, reactJsxRuntime_production_min = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_production_min;
function requireReactJsxRuntime_production_min() {
  if (hasRequiredReactJsxRuntime_production_min)
    return reactJsxRuntime_production_min;
  hasRequiredReactJsxRuntime_production_min = 1;
  var e = React__default, n = Symbol.for("react.element"), o = Symbol.for("react.fragment"), s = Object.prototype.hasOwnProperty, u = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, d = { key: !0, ref: !0, __self: !0, __source: !0 };
  function g(m, w, B) {
    var x, C = {}, v = null, y = null;
    B !== void 0 && (v = "" + B), w.key !== void 0 && (v = "" + w.key), w.ref !== void 0 && (y = w.ref);
    for (x in w)
      s.call(w, x) && !d.hasOwnProperty(x) && (C[x] = w[x]);
    if (m && m.defaultProps)
      for (x in w = m.defaultProps, w)
        C[x] === void 0 && (C[x] = w[x]);
    return { $$typeof: n, type: m, key: v, ref: y, props: C, _owner: u.current };
  }
  return reactJsxRuntime_production_min.Fragment = o, reactJsxRuntime_production_min.jsx = g, reactJsxRuntime_production_min.jsxs = g, reactJsxRuntime_production_min;
}
var reactJsxRuntime_development = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_development;
function requireReactJsxRuntime_development() {
  return hasRequiredReactJsxRuntime_development || (hasRequiredReactJsxRuntime_development = 1, process.env.NODE_ENV !== "production" && function() {
    var e = React__default, n = Symbol.for("react.element"), o = Symbol.for("react.portal"), s = Symbol.for("react.fragment"), u = Symbol.for("react.strict_mode"), d = Symbol.for("react.profiler"), g = Symbol.for("react.provider"), m = Symbol.for("react.context"), w = Symbol.for("react.forward_ref"), B = Symbol.for("react.suspense"), x = Symbol.for("react.suspense_list"), C = Symbol.for("react.memo"), v = Symbol.for("react.lazy"), y = Symbol.for("react.offscreen"), T = Symbol.iterator, M = "@@iterator";
    function D(ke) {
      if (ke === null || typeof ke != "object")
        return null;
      var st = T && ke[T] || ke[M];
      return typeof st == "function" ? st : null;
    }
    var V = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function O(ke) {
      {
        for (var st = arguments.length, Pt = new Array(st > 1 ? st - 1 : 0), lr = 1; lr < st; lr++)
          Pt[lr - 1] = arguments[lr];
        H("error", ke, Pt);
      }
    }
    function H(ke, st, Pt) {
      {
        var lr = V.ReactDebugCurrentFrame, wr = lr.getStackAddendum();
        wr !== "" && (st += "%s", Pt = Pt.concat([wr]));
        var Qr = Pt.map(function(br) {
          return String(br);
        });
        Qr.unshift("Warning: " + st), Function.prototype.apply.call(console[ke], console, Qr);
      }
    }
    var q = !1, $ = !1, re = !1, ce = !1, Ie = !1, Pe;
    Pe = Symbol.for("react.module.reference");
    function se(ke) {
      return !!(typeof ke == "string" || typeof ke == "function" || ke === s || ke === d || Ie || ke === u || ke === B || ke === x || ce || ke === y || q || $ || re || typeof ke == "object" && ke !== null && (ke.$$typeof === v || ke.$$typeof === C || ke.$$typeof === g || ke.$$typeof === m || ke.$$typeof === w || ke.$$typeof === Pe || ke.getModuleId !== void 0));
    }
    function Ce(ke, st, Pt) {
      var lr = ke.displayName;
      if (lr)
        return lr;
      var wr = st.displayName || st.name || "";
      return wr !== "" ? Pt + "(" + wr + ")" : Pt;
    }
    function Ge(ke) {
      return ke.displayName || "Context";
    }
    function $e(ke) {
      if (ke == null)
        return null;
      if (typeof ke.tag == "number" && O("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ke == "function")
        return ke.displayName || ke.name || null;
      if (typeof ke == "string")
        return ke;
      switch (ke) {
        case s:
          return "Fragment";
        case o:
          return "Portal";
        case d:
          return "Profiler";
        case u:
          return "StrictMode";
        case B:
          return "Suspense";
        case x:
          return "SuspenseList";
      }
      if (typeof ke == "object")
        switch (ke.$$typeof) {
          case m:
            var st = ke;
            return Ge(st) + ".Consumer";
          case g:
            var Pt = ke;
            return Ge(Pt._context) + ".Provider";
          case w:
            return Ce(ke, ke.render, "ForwardRef");
          case C:
            var lr = ke.displayName || null;
            return lr !== null ? lr : $e(ke.type) || "Memo";
          case v: {
            var wr = ke, Qr = wr._payload, br = wr._init;
            try {
              return $e(br(Qr));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var Be = Object.assign, Me = 0, We, nt, Xe, Je, qe, ye, Ue;
    function ze() {
    }
    ze.__reactDisabledLog = !0;
    function X() {
      {
        if (Me === 0) {
          We = console.log, nt = console.info, Xe = console.warn, Je = console.error, qe = console.group, ye = console.groupCollapsed, Ue = console.groupEnd;
          var ke = {
            configurable: !0,
            enumerable: !0,
            value: ze,
            writable: !0
          };
          Object.defineProperties(console, {
            info: ke,
            log: ke,
            warn: ke,
            error: ke,
            group: ke,
            groupCollapsed: ke,
            groupEnd: ke
          });
        }
        Me++;
      }
    }
    function ut() {
      {
        if (Me--, Me === 0) {
          var ke = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: Be({}, ke, {
              value: We
            }),
            info: Be({}, ke, {
              value: nt
            }),
            warn: Be({}, ke, {
              value: Xe
            }),
            error: Be({}, ke, {
              value: Je
            }),
            group: Be({}, ke, {
              value: qe
            }),
            groupCollapsed: Be({}, ke, {
              value: ye
            }),
            groupEnd: Be({}, ke, {
              value: Ue
            })
          });
        }
        Me < 0 && O("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var ot = V.ReactCurrentDispatcher, mt;
    function ve(ke, st, Pt) {
      {
        if (mt === void 0)
          try {
            throw Error();
          } catch (wr) {
            var lr = wr.stack.trim().match(/\n( *(at )?)/);
            mt = lr && lr[1] || "";
          }
        return `
` + mt + ke;
      }
    }
    var je = !1, ie;
    {
      var ae = typeof WeakMap == "function" ? WeakMap : Map;
      ie = new ae();
    }
    function z(ke, st) {
      if (!ke || je)
        return "";
      {
        var Pt = ie.get(ke);
        if (Pt !== void 0)
          return Pt;
      }
      var lr;
      je = !0;
      var wr = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var Qr;
      Qr = ot.current, ot.current = null, X();
      try {
        if (st) {
          var br = function() {
            throw Error();
          };
          if (Object.defineProperty(br.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(br, []);
            } catch (St) {
              lr = St;
            }
            Reflect.construct(ke, [], br);
          } else {
            try {
              br.call();
            } catch (St) {
              lr = St;
            }
            ke.call(br.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (St) {
            lr = St;
          }
          ke();
        }
      } catch (St) {
        if (St && lr && typeof St.stack == "string") {
          for (var yr = St.stack.split(`
`), Mr = lr.stack.split(`
`), Jr = yr.length - 1, ir = Mr.length - 1; Jr >= 1 && ir >= 0 && yr[Jr] !== Mr[ir]; )
            ir--;
          for (; Jr >= 1 && ir >= 0; Jr--, ir--)
            if (yr[Jr] !== Mr[ir]) {
              if (Jr !== 1 || ir !== 1)
                do
                  if (Jr--, ir--, ir < 0 || yr[Jr] !== Mr[ir]) {
                    var nr = `
` + yr[Jr].replace(" at new ", " at ");
                    return ke.displayName && nr.includes("<anonymous>") && (nr = nr.replace("<anonymous>", ke.displayName)), typeof ke == "function" && ie.set(ke, nr), nr;
                  }
                while (Jr >= 1 && ir >= 0);
              break;
            }
        }
      } finally {
        je = !1, ot.current = Qr, ut(), Error.prepareStackTrace = wr;
      }
      var Jt = ke ? ke.displayName || ke.name : "", _e = Jt ? ve(Jt) : "";
      return typeof ke == "function" && ie.set(ke, _e), _e;
    }
    function be(ke, st, Pt) {
      return z(ke, !1);
    }
    function fe(ke) {
      var st = ke.prototype;
      return !!(st && st.isReactComponent);
    }
    function J(ke, st, Pt) {
      if (ke == null)
        return "";
      if (typeof ke == "function")
        return z(ke, fe(ke));
      if (typeof ke == "string")
        return ve(ke);
      switch (ke) {
        case B:
          return ve("Suspense");
        case x:
          return ve("SuspenseList");
      }
      if (typeof ke == "object")
        switch (ke.$$typeof) {
          case w:
            return be(ke.render);
          case C:
            return J(ke.type, st, Pt);
          case v: {
            var lr = ke, wr = lr._payload, Qr = lr._init;
            try {
              return J(Qr(wr), st, Pt);
            } catch {
            }
          }
        }
      return "";
    }
    var R = Object.prototype.hasOwnProperty, Q = {}, b = V.ReactDebugCurrentFrame;
    function U(ke) {
      if (ke) {
        var st = ke._owner, Pt = J(ke.type, ke._source, st ? st.type : null);
        b.setExtraStackFrame(Pt);
      } else
        b.setExtraStackFrame(null);
    }
    function Z(ke, st, Pt, lr, wr) {
      {
        var Qr = Function.call.bind(R);
        for (var br in ke)
          if (Qr(ke, br)) {
            var yr = void 0;
            try {
              if (typeof ke[br] != "function") {
                var Mr = Error((lr || "React class") + ": " + Pt + " type `" + br + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ke[br] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw Mr.name = "Invariant Violation", Mr;
              }
              yr = ke[br](st, br, lr, Pt, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (Jr) {
              yr = Jr;
            }
            yr && !(yr instanceof Error) && (U(wr), O("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", lr || "React class", Pt, br, typeof yr), U(null)), yr instanceof Error && !(yr.message in Q) && (Q[yr.message] = !0, U(wr), O("Failed %s type: %s", Pt, yr.message), U(null));
          }
      }
    }
    var ne = Array.isArray;
    function le(ke) {
      return ne(ke);
    }
    function Ne(ke) {
      {
        var st = typeof Symbol == "function" && Symbol.toStringTag, Pt = st && ke[Symbol.toStringTag] || ke.constructor.name || "Object";
        return Pt;
      }
    }
    function Ke(ke) {
      try {
        return Ze(ke), !1;
      } catch {
        return !0;
      }
    }
    function Ze(ke) {
      return "" + ke;
    }
    function et(ke) {
      if (Ke(ke))
        return O("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ne(ke)), Ze(ke);
    }
    var Y = V.ReactCurrentOwner, k = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, F, ue, Qe;
    Qe = {};
    function Oe(ke) {
      if (R.call(ke, "ref")) {
        var st = Object.getOwnPropertyDescriptor(ke, "ref").get;
        if (st && st.isReactWarning)
          return !1;
      }
      return ke.ref !== void 0;
    }
    function Ve(ke) {
      if (R.call(ke, "key")) {
        var st = Object.getOwnPropertyDescriptor(ke, "key").get;
        if (st && st.isReactWarning)
          return !1;
      }
      return ke.key !== void 0;
    }
    function It(ke, st) {
      if (typeof ke.ref == "string" && Y.current && st && Y.current.stateNode !== st) {
        var Pt = $e(Y.current.type);
        Qe[Pt] || (O('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', $e(Y.current.type), ke.ref), Qe[Pt] = !0);
      }
    }
    function vt(ke, st) {
      {
        var Pt = function() {
          F || (F = !0, O("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", st));
        };
        Pt.isReactWarning = !0, Object.defineProperty(ke, "key", {
          get: Pt,
          configurable: !0
        });
      }
    }
    function Qt(ke, st) {
      {
        var Pt = function() {
          ue || (ue = !0, O("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", st));
        };
        Pt.isReactWarning = !0, Object.defineProperty(ke, "ref", {
          get: Pt,
          configurable: !0
        });
      }
    }
    var Ct = function(ke, st, Pt, lr, wr, Qr, br) {
      var yr = {
        $$typeof: n,
        type: ke,
        key: st,
        ref: Pt,
        props: br,
        _owner: Qr
      };
      return yr._store = {}, Object.defineProperty(yr._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(yr, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: lr
      }), Object.defineProperty(yr, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: wr
      }), Object.freeze && (Object.freeze(yr.props), Object.freeze(yr)), yr;
    };
    function Rt(ke, st, Pt, lr, wr) {
      {
        var Qr, br = {}, yr = null, Mr = null;
        Pt !== void 0 && (et(Pt), yr = "" + Pt), Ve(st) && (et(st.key), yr = "" + st.key), Oe(st) && (Mr = st.ref, It(st, wr));
        for (Qr in st)
          R.call(st, Qr) && !k.hasOwnProperty(Qr) && (br[Qr] = st[Qr]);
        if (ke && ke.defaultProps) {
          var Jr = ke.defaultProps;
          for (Qr in Jr)
            br[Qr] === void 0 && (br[Qr] = Jr[Qr]);
        }
        if (yr || Mr) {
          var ir = typeof ke == "function" ? ke.displayName || ke.name || "Unknown" : ke;
          yr && vt(br, ir), Mr && Qt(br, ir);
        }
        return Ct(ke, yr, Mr, wr, lr, Y.current, br);
      }
    }
    var or = V.ReactCurrentOwner, tn = V.ReactDebugCurrentFrame;
    function ur(ke) {
      if (ke) {
        var st = ke._owner, Pt = J(ke.type, ke._source, st ? st.type : null);
        tn.setExtraStackFrame(Pt);
      } else
        tn.setExtraStackFrame(null);
    }
    var Vr;
    Vr = !1;
    function zr(ke) {
      return typeof ke == "object" && ke !== null && ke.$$typeof === n;
    }
    function $r() {
      {
        if (or.current) {
          var ke = $e(or.current.type);
          if (ke)
            return `

Check the render method of \`` + ke + "`.";
        }
        return "";
      }
    }
    function jr(ke) {
      {
        if (ke !== void 0) {
          var st = ke.fileName.replace(/^.*[\\\/]/, ""), Pt = ke.lineNumber;
          return `

Check your code at ` + st + ":" + Pt + ".";
        }
        return "";
      }
    }
    var dn = {};
    function vn(ke) {
      {
        var st = $r();
        if (!st) {
          var Pt = typeof ke == "string" ? ke : ke.displayName || ke.name;
          Pt && (st = `

Check the top-level render call using <` + Pt + ">.");
        }
        return st;
      }
    }
    function ti(ke, st) {
      {
        if (!ke._store || ke._store.validated || ke.key != null)
          return;
        ke._store.validated = !0;
        var Pt = vn(st);
        if (dn[Pt])
          return;
        dn[Pt] = !0;
        var lr = "";
        ke && ke._owner && ke._owner !== or.current && (lr = " It was passed a child from " + $e(ke._owner.type) + "."), ur(ke), O('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', Pt, lr), ur(null);
      }
    }
    function Fn(ke, st) {
      {
        if (typeof ke != "object")
          return;
        if (le(ke))
          for (var Pt = 0; Pt < ke.length; Pt++) {
            var lr = ke[Pt];
            zr(lr) && ti(lr, st);
          }
        else if (zr(ke))
          ke._store && (ke._store.validated = !0);
        else if (ke) {
          var wr = D(ke);
          if (typeof wr == "function" && wr !== ke.entries)
            for (var Qr = wr.call(ke), br; !(br = Qr.next()).done; )
              zr(br.value) && ti(br.value, st);
        }
      }
    }
    function Yr(ke) {
      {
        var st = ke.type;
        if (st == null || typeof st == "string")
          return;
        var Pt;
        if (typeof st == "function")
          Pt = st.propTypes;
        else if (typeof st == "object" && (st.$$typeof === w || st.$$typeof === C))
          Pt = st.propTypes;
        else
          return;
        if (Pt) {
          var lr = $e(st);
          Z(Pt, ke.props, "prop", lr, ke);
        } else if (st.PropTypes !== void 0 && !Vr) {
          Vr = !0;
          var wr = $e(st);
          O("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", wr || "Unknown");
        }
        typeof st.getDefaultProps == "function" && !st.getDefaultProps.isReactClassApproved && O("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function rn(ke) {
      {
        for (var st = Object.keys(ke.props), Pt = 0; Pt < st.length; Pt++) {
          var lr = st[Pt];
          if (lr !== "children" && lr !== "key") {
            ur(ke), O("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", lr), ur(null);
            break;
          }
        }
        ke.ref !== null && (ur(ke), O("Invalid attribute `ref` supplied to `React.Fragment`."), ur(null));
      }
    }
    function Zr(ke, st, Pt, lr, wr, Qr) {
      {
        var br = se(ke);
        if (!br) {
          var yr = "";
          (ke === void 0 || typeof ke == "object" && ke !== null && Object.keys(ke).length === 0) && (yr += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var Mr = jr(wr);
          Mr ? yr += Mr : yr += $r();
          var Jr;
          ke === null ? Jr = "null" : le(ke) ? Jr = "array" : ke !== void 0 && ke.$$typeof === n ? (Jr = "<" + ($e(ke.type) || "Unknown") + " />", yr = " Did you accidentally export a JSX literal instead of a component?") : Jr = typeof ke, O("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Jr, yr);
        }
        var ir = Rt(ke, st, Pt, wr, Qr);
        if (ir == null)
          return ir;
        if (br) {
          var nr = st.children;
          if (nr !== void 0)
            if (lr)
              if (le(nr)) {
                for (var Jt = 0; Jt < nr.length; Jt++)
                  Fn(nr[Jt], ke);
                Object.freeze && Object.freeze(nr);
              } else
                O("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Fn(nr, ke);
        }
        return ke === s ? rn(ir) : Yr(ir), ir;
      }
    }
    function hn(ke, st, Pt) {
      return Zr(ke, st, Pt, !0);
    }
    function Cn(ke, st, Pt) {
      return Zr(ke, st, Pt, !1);
    }
    var In = Cn, xn = hn;
    reactJsxRuntime_development.Fragment = s, reactJsxRuntime_development.jsx = In, reactJsxRuntime_development.jsxs = xn;
  }()), reactJsxRuntime_development;
}
(function(e) {
  process.env.NODE_ENV === "production" ? e.exports = requireReactJsxRuntime_production_min() : e.exports = requireReactJsxRuntime_development();
})(jsxRuntime);
const Fragment = jsxRuntime.exports.Fragment, jsx = jsxRuntime.exports.jsx, jsxs = jsxRuntime.exports.jsxs;
/** @license MUI v5.10.14
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function styled$4(e, n) {
  const o = emStyled(e, n);
  return process.env.NODE_ENV !== "production" ? (...s) => {
    const u = typeof e == "string" ? `"${e}"` : "component";
    return s.length === 0 ? console.error([`MUI: Seems like you called \`styled(${u})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : s.some((d) => d === void 0) && console.error(`MUI: the styled(${u})(...args) API requires all its args to be defined.`), o(...s);
  } : o;
}
const internal_processStyles = (e, n) => {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = n(e.__emotion_styles));
}, responsivePropType = process.env.NODE_ENV !== "production" ? propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string, propTypes.exports.object, propTypes.exports.array]) : {}, responsivePropType$1 = responsivePropType;
function chainPropTypes(e, n) {
  return process.env.NODE_ENV === "production" ? () => null : function(...s) {
    return e(...s) || n(...s);
  };
}
function isPlainObject$4(e) {
  return e !== null && typeof e == "object" && e.constructor === Object;
}
function deepmerge(e, n, o = {
  clone: !0
}) {
  const s = o.clone ? _extends$1({}, e) : e;
  return isPlainObject$4(e) && isPlainObject$4(n) && Object.keys(n).forEach((u) => {
    u !== "__proto__" && (isPlainObject$4(n[u]) && u in e && isPlainObject$4(e[u]) ? s[u] = deepmerge(e[u], n[u], o) : s[u] = n[u]);
  }), s;
}
function isClassComponent(e) {
  const {
    prototype: n = {}
  } = e;
  return Boolean(n.isReactComponent);
}
function elementTypeAcceptingRef(e, n, o, s, u) {
  const d = e[n], g = u || n;
  if (d == null || typeof window > "u")
    return null;
  let m;
  return typeof d == "function" && !isClassComponent(d) && (m = "Did you accidentally provide a plain function component instead?"), m !== void 0 ? new Error(`Invalid ${s} \`${g}\` supplied to \`${o}\`. Expected an element type that can hold a ref. ${m} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const elementTypeAcceptingRef$1 = chainPropTypes(propTypes.exports.elementType, elementTypeAcceptingRef);
function formatMuiErrorMessage(e) {
  let n = "https://mui.com/production-error/?code=" + e;
  for (let o = 1; o < arguments.length; o += 1)
    n += "&args[]=" + encodeURIComponent(arguments[o]);
  return "Minified MUI error #" + e + "; visit " + n + " for the full message.";
}
var reactIs$1 = { exports: {} }, reactIs_production_min$1 = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$1;
function requireReactIs_production_min$1() {
  if (hasRequiredReactIs_production_min$1)
    return reactIs_production_min$1;
  hasRequiredReactIs_production_min$1 = 1;
  var e = Symbol.for("react.element"), n = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), g = Symbol.for("react.context"), m = Symbol.for("react.server_context"), w = Symbol.for("react.forward_ref"), B = Symbol.for("react.suspense"), x = Symbol.for("react.suspense_list"), C = Symbol.for("react.memo"), v = Symbol.for("react.lazy"), y = Symbol.for("react.offscreen"), T;
  T = Symbol.for("react.module.reference");
  function M(D) {
    if (typeof D == "object" && D !== null) {
      var V = D.$$typeof;
      switch (V) {
        case e:
          switch (D = D.type, D) {
            case o:
            case u:
            case s:
            case B:
            case x:
              return D;
            default:
              switch (D = D && D.$$typeof, D) {
                case m:
                case g:
                case w:
                case v:
                case C:
                case d:
                  return D;
                default:
                  return V;
              }
          }
        case n:
          return V;
      }
    }
  }
  return reactIs_production_min$1.ContextConsumer = g, reactIs_production_min$1.ContextProvider = d, reactIs_production_min$1.Element = e, reactIs_production_min$1.ForwardRef = w, reactIs_production_min$1.Fragment = o, reactIs_production_min$1.Lazy = v, reactIs_production_min$1.Memo = C, reactIs_production_min$1.Portal = n, reactIs_production_min$1.Profiler = u, reactIs_production_min$1.StrictMode = s, reactIs_production_min$1.Suspense = B, reactIs_production_min$1.SuspenseList = x, reactIs_production_min$1.isAsyncMode = function() {
    return !1;
  }, reactIs_production_min$1.isConcurrentMode = function() {
    return !1;
  }, reactIs_production_min$1.isContextConsumer = function(D) {
    return M(D) === g;
  }, reactIs_production_min$1.isContextProvider = function(D) {
    return M(D) === d;
  }, reactIs_production_min$1.isElement = function(D) {
    return typeof D == "object" && D !== null && D.$$typeof === e;
  }, reactIs_production_min$1.isForwardRef = function(D) {
    return M(D) === w;
  }, reactIs_production_min$1.isFragment = function(D) {
    return M(D) === o;
  }, reactIs_production_min$1.isLazy = function(D) {
    return M(D) === v;
  }, reactIs_production_min$1.isMemo = function(D) {
    return M(D) === C;
  }, reactIs_production_min$1.isPortal = function(D) {
    return M(D) === n;
  }, reactIs_production_min$1.isProfiler = function(D) {
    return M(D) === u;
  }, reactIs_production_min$1.isStrictMode = function(D) {
    return M(D) === s;
  }, reactIs_production_min$1.isSuspense = function(D) {
    return M(D) === B;
  }, reactIs_production_min$1.isSuspenseList = function(D) {
    return M(D) === x;
  }, reactIs_production_min$1.isValidElementType = function(D) {
    return typeof D == "string" || typeof D == "function" || D === o || D === u || D === s || D === B || D === x || D === y || typeof D == "object" && D !== null && (D.$$typeof === v || D.$$typeof === C || D.$$typeof === d || D.$$typeof === g || D.$$typeof === w || D.$$typeof === T || D.getModuleId !== void 0);
  }, reactIs_production_min$1.typeOf = M, reactIs_production_min$1;
}
var reactIs_development$1 = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$1;
function requireReactIs_development$1() {
  return hasRequiredReactIs_development$1 || (hasRequiredReactIs_development$1 = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), n = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), u = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), g = Symbol.for("react.context"), m = Symbol.for("react.server_context"), w = Symbol.for("react.forward_ref"), B = Symbol.for("react.suspense"), x = Symbol.for("react.suspense_list"), C = Symbol.for("react.memo"), v = Symbol.for("react.lazy"), y = Symbol.for("react.offscreen"), T = !1, M = !1, D = !1, V = !1, O = !1, H;
    H = Symbol.for("react.module.reference");
    function q(fe) {
      return !!(typeof fe == "string" || typeof fe == "function" || fe === o || fe === u || O || fe === s || fe === B || fe === x || V || fe === y || T || M || D || typeof fe == "object" && fe !== null && (fe.$$typeof === v || fe.$$typeof === C || fe.$$typeof === d || fe.$$typeof === g || fe.$$typeof === w || fe.$$typeof === H || fe.getModuleId !== void 0));
    }
    function $(fe) {
      if (typeof fe == "object" && fe !== null) {
        var J = fe.$$typeof;
        switch (J) {
          case e:
            var R = fe.type;
            switch (R) {
              case o:
              case u:
              case s:
              case B:
              case x:
                return R;
              default:
                var Q = R && R.$$typeof;
                switch (Q) {
                  case m:
                  case g:
                  case w:
                  case v:
                  case C:
                  case d:
                    return Q;
                  default:
                    return J;
                }
            }
          case n:
            return J;
        }
      }
    }
    var re = g, ce = d, Ie = e, Pe = w, se = o, Ce = v, Ge = C, $e = n, Be = u, Me = s, We = B, nt = x, Xe = !1, Je = !1;
    function qe(fe) {
      return Xe || (Xe = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function ye(fe) {
      return Je || (Je = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function Ue(fe) {
      return $(fe) === g;
    }
    function ze(fe) {
      return $(fe) === d;
    }
    function X(fe) {
      return typeof fe == "object" && fe !== null && fe.$$typeof === e;
    }
    function ut(fe) {
      return $(fe) === w;
    }
    function ot(fe) {
      return $(fe) === o;
    }
    function mt(fe) {
      return $(fe) === v;
    }
    function ve(fe) {
      return $(fe) === C;
    }
    function je(fe) {
      return $(fe) === n;
    }
    function ie(fe) {
      return $(fe) === u;
    }
    function ae(fe) {
      return $(fe) === s;
    }
    function z(fe) {
      return $(fe) === B;
    }
    function be(fe) {
      return $(fe) === x;
    }
    reactIs_development$1.ContextConsumer = re, reactIs_development$1.ContextProvider = ce, reactIs_development$1.Element = Ie, reactIs_development$1.ForwardRef = Pe, reactIs_development$1.Fragment = se, reactIs_development$1.Lazy = Ce, reactIs_development$1.Memo = Ge, reactIs_development$1.Portal = $e, reactIs_development$1.Profiler = Be, reactIs_development$1.StrictMode = Me, reactIs_development$1.Suspense = We, reactIs_development$1.SuspenseList = nt, reactIs_development$1.isAsyncMode = qe, reactIs_development$1.isConcurrentMode = ye, reactIs_development$1.isContextConsumer = Ue, reactIs_development$1.isContextProvider = ze, reactIs_development$1.isElement = X, reactIs_development$1.isForwardRef = ut, reactIs_development$1.isFragment = ot, reactIs_development$1.isLazy = mt, reactIs_development$1.isMemo = ve, reactIs_development$1.isPortal = je, reactIs_development$1.isProfiler = ie, reactIs_development$1.isStrictMode = ae, reactIs_development$1.isSuspense = z, reactIs_development$1.isSuspenseList = be, reactIs_development$1.isValidElementType = q, reactIs_development$1.typeOf = $;
  }()), reactIs_development$1;
}
(function(e) {
  process.env.NODE_ENV === "production" ? e.exports = requireReactIs_production_min$1() : e.exports = requireReactIs_development$1();
})(reactIs$1);
const fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function getFunctionName(e) {
  const n = `${e}`.match(fnNameMatchRegex);
  return n && n[1] || "";
}
function getFunctionComponentName(e, n = "") {
  return e.displayName || e.name || getFunctionName(e) || n;
}
function getWrappedName(e, n, o) {
  const s = getFunctionComponentName(n);
  return e.displayName || (s !== "" ? `${o}(${s})` : o);
}
function getDisplayName(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return getFunctionComponentName(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case reactIs$1.exports.ForwardRef:
          return getWrappedName(e, e.render, "ForwardRef");
        case reactIs$1.exports.Memo:
          return getWrappedName(e, e.type, "memo");
        default:
          return;
      }
  }
}
const refType = propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object]), refType$1 = refType;
function capitalize(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : formatMuiErrorMessage(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function setRef$1(e, n) {
  typeof e == "function" ? e(n) : e && (e.current = n);
}
const useEnhancedEffect = typeof window < "u" ? React.useLayoutEffect : React.useEffect, useEnhancedEffect$1 = useEnhancedEffect;
function useEventCallback(e) {
  const n = React.useRef(e);
  return useEnhancedEffect$1(() => {
    n.current = e;
  }), React.useCallback((...o) => (0, n.current)(...o), []);
}
function useForkRef(...e) {
  return React.useMemo(() => e.every((n) => n == null) ? null : (n) => {
    e.forEach((o) => {
      setRef$1(o, n);
    });
  }, e);
}
let hadKeyboardEvent = !0, hadFocusVisibleRecently = !1, hadFocusVisibleRecentlyTimeout;
const inputTypesWhitelist = {
  text: !0,
  search: !0,
  url: !0,
  tel: !0,
  email: !0,
  password: !0,
  number: !0,
  date: !0,
  month: !0,
  week: !0,
  time: !0,
  datetime: !0,
  "datetime-local": !0
};
function focusTriggersKeyboardModality(e) {
  const {
    type: n,
    tagName: o
  } = e;
  return !!(o === "INPUT" && inputTypesWhitelist[n] && !e.readOnly || o === "TEXTAREA" && !e.readOnly || e.isContentEditable);
}
function handleKeyDown(e) {
  e.metaKey || e.altKey || e.ctrlKey || (hadKeyboardEvent = !0);
}
function handlePointerDown() {
  hadKeyboardEvent = !1;
}
function handleVisibilityChange() {
  this.visibilityState === "hidden" && hadFocusVisibleRecently && (hadKeyboardEvent = !0);
}
function prepare(e) {
  e.addEventListener("keydown", handleKeyDown, !0), e.addEventListener("mousedown", handlePointerDown, !0), e.addEventListener("pointerdown", handlePointerDown, !0), e.addEventListener("touchstart", handlePointerDown, !0), e.addEventListener("visibilitychange", handleVisibilityChange, !0);
}
function isFocusVisible(e) {
  const {
    target: n
  } = e;
  try {
    return n.matches(":focus-visible");
  } catch {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(n);
}
function useIsFocusVisible() {
  const e = React.useCallback((u) => {
    u != null && prepare(u.ownerDocument);
  }, []), n = React.useRef(!1);
  function o() {
    return n.current ? (hadFocusVisibleRecently = !0, window.clearTimeout(hadFocusVisibleRecentlyTimeout), hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
      hadFocusVisibleRecently = !1;
    }, 100), n.current = !1, !0) : !1;
  }
  function s(u) {
    return isFocusVisible(u) ? (n.current = !0, !0) : !1;
  }
  return {
    isFocusVisibleRef: n,
    onFocus: s,
    onBlur: o,
    ref: e
  };
}
function resolveProps(e, n) {
  const o = _extends$1({}, n);
  return Object.keys(e).forEach((s) => {
    o[s] === void 0 && (o[s] = e[s]);
  }), o;
}
function composeClasses(e, n, o) {
  const s = {};
  return Object.keys(e).forEach(
    (u) => {
      s[u] = e[u].reduce((d, g) => (g && (d.push(n(g)), o && o[g] && d.push(o[g])), d), []).join(" ");
    }
  ), s;
}
const defaultGenerator = (e) => e, createClassNameGenerator = () => {
  let e = defaultGenerator;
  return {
    configure(n) {
      e = n;
    },
    generate(n) {
      return e(n);
    },
    reset() {
      e = defaultGenerator;
    }
  };
}, ClassNameGenerator = createClassNameGenerator(), ClassNameGenerator$1 = ClassNameGenerator, globalStateClassesMapping = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  required: "required",
  selected: "selected"
};
function generateUtilityClass(e, n, o = "Mui") {
  const s = globalStateClassesMapping[n];
  return s ? `${o}-${s}` : `${ClassNameGenerator$1.generate(e)}-${n}`;
}
function generateUtilityClasses(e, n, o = "Mui") {
  const s = {};
  return n.forEach((u) => {
    s[u] = generateUtilityClass(e, u, o);
  }), s;
}
function merge$2(e, n) {
  return n ? deepmerge(e, n, {
    clone: !1
  }) : e;
}
const values$1 = {
  xs: 0,
  sm: 600,
  md: 900,
  lg: 1200,
  xl: 1536
}, defaultBreakpoints = {
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${values$1[e]}px)`
};
function handleBreakpoints(e, n, o) {
  const s = e.theme || {};
  if (Array.isArray(n)) {
    const d = s.breakpoints || defaultBreakpoints;
    return n.reduce((g, m, w) => (g[d.up(d.keys[w])] = o(n[w]), g), {});
  }
  if (typeof n == "object") {
    const d = s.breakpoints || defaultBreakpoints;
    return Object.keys(n).reduce((g, m) => {
      if (Object.keys(d.values || values$1).indexOf(m) !== -1) {
        const w = d.up(m);
        g[w] = o(n[m], m);
      } else {
        const w = m;
        g[w] = n[w];
      }
      return g;
    }, {});
  }
  return o(n);
}
function createEmptyBreakpointObject(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((s, u) => {
    const d = e.up(u);
    return s[d] = {}, s;
  }, {})) || {};
}
function removeUnusedBreakpoints(e, n) {
  return e.reduce((o, s) => {
    const u = o[s];
    return (!u || Object.keys(u).length === 0) && delete o[s], o;
  }, n);
}
function getPath(e, n, o = !0) {
  if (!n || typeof n != "string")
    return null;
  if (e && e.vars && o) {
    const s = `vars.${n}`.split(".").reduce((u, d) => u && u[d] ? u[d] : null, e);
    if (s != null)
      return s;
  }
  return n.split(".").reduce((s, u) => s && s[u] != null ? s[u] : null, e);
}
function getValue$1(e, n, o, s = o) {
  let u;
  return typeof e == "function" ? u = e(o) : Array.isArray(e) ? u = e[o] || s : u = getPath(e, o) || s, n && (u = n(u, s)), u;
}
function style$1(e) {
  const {
    prop: n,
    cssProperty: o = e.prop,
    themeKey: s,
    transform: u
  } = e, d = (g) => {
    if (g[n] == null)
      return null;
    const m = g[n], w = g.theme, B = getPath(w, s) || {};
    return handleBreakpoints(g, m, (C) => {
      let v = getValue$1(B, u, C);
      return C === v && typeof C == "string" && (v = getValue$1(B, u, `${n}${C === "default" ? "" : capitalize(C)}`, C)), o === !1 ? v : {
        [o]: v
      };
    });
  };
  return d.propTypes = process.env.NODE_ENV !== "production" ? {
    [n]: responsivePropType$1
  } : {}, d.filterProps = [n], d;
}
function compose(...e) {
  const n = e.reduce((s, u) => (u.filterProps.forEach((d) => {
    s[d] = u;
  }), s), {}), o = (s) => Object.keys(s).reduce((u, d) => n[d] ? merge$2(u, n[d](s)) : u, {});
  return o.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((s, u) => Object.assign(s, u.propTypes), {}) : {}, o.filterProps = e.reduce((s, u) => s.concat(u.filterProps), []), o;
}
function memoize$2(e) {
  const n = {};
  return (o) => (n[o] === void 0 && (n[o] = e(o)), n[o]);
}
const properties = {
  m: "margin",
  p: "padding"
}, directions = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, aliases = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, getCssProperties = memoize$2((e) => {
  if (e.length > 2)
    if (aliases[e])
      e = aliases[e];
    else
      return [e];
  const [n, o] = e.split(""), s = properties[n], u = directions[o] || "";
  return Array.isArray(u) ? u.map((d) => s + d) : [s + u];
}), marginKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], paddingKeys = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], spacingKeys = [...marginKeys, ...paddingKeys];
function createUnaryUnit(e, n, o, s) {
  var u;
  const d = (u = getPath(e, n, !1)) != null ? u : o;
  return typeof d == "number" ? (g) => typeof g == "string" ? g : (process.env.NODE_ENV !== "production" && typeof g != "number" && console.error(`MUI: Expected ${s} argument to be a number or a string, got ${g}.`), d * g) : Array.isArray(d) ? (g) => typeof g == "string" ? g : (process.env.NODE_ENV !== "production" && (Number.isInteger(g) ? g > d.length - 1 && console.error([`MUI: The value provided (${g}) overflows.`, `The supported values are: ${JSON.stringify(d)}.`, `${g} > ${d.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${n}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${n}\` as a number.`].join(`
`))), d[g]) : typeof d == "function" ? d : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${n}\` value (${d}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function createUnarySpacing(e) {
  return createUnaryUnit(e, "spacing", 8, "spacing");
}
function getValue(e, n) {
  if (typeof n == "string" || n == null)
    return n;
  const o = Math.abs(n), s = e(o);
  return n >= 0 ? s : typeof s == "number" ? -s : `-${s}`;
}
function getStyleFromPropValue(e, n) {
  return (o) => e.reduce((s, u) => (s[u] = getValue(n, o), s), {});
}
function resolveCssProperty(e, n, o, s) {
  if (n.indexOf(o) === -1)
    return null;
  const u = getCssProperties(o), d = getStyleFromPropValue(u, s), g = e[o];
  return handleBreakpoints(e, g, d);
}
function style(e, n) {
  const o = createUnarySpacing(e.theme);
  return Object.keys(e).map((s) => resolveCssProperty(e, n, s, o)).reduce(merge$2, {});
}
process.env.NODE_ENV !== "production" && marginKeys.reduce((e, n) => (e[n] = responsivePropType$1, e), {});
process.env.NODE_ENV !== "production" && paddingKeys.reduce((e, n) => (e[n] = responsivePropType$1, e), {});
function spacing(e) {
  return style(e, spacingKeys);
}
spacing.propTypes = process.env.NODE_ENV !== "production" ? spacingKeys.reduce((e, n) => (e[n] = responsivePropType$1, e), {}) : {};
spacing.filterProps = spacingKeys;
function getBorder(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
const border = style$1({
  prop: "border",
  themeKey: "borders",
  transform: getBorder
}), borderTop = style$1({
  prop: "borderTop",
  themeKey: "borders",
  transform: getBorder
}), borderRight = style$1({
  prop: "borderRight",
  themeKey: "borders",
  transform: getBorder
}), borderBottom = style$1({
  prop: "borderBottom",
  themeKey: "borders",
  transform: getBorder
}), borderLeft = style$1({
  prop: "borderLeft",
  themeKey: "borders",
  transform: getBorder
}), borderColor = style$1({
  prop: "borderColor",
  themeKey: "palette"
}), borderTopColor = style$1({
  prop: "borderTopColor",
  themeKey: "palette"
}), borderRightColor = style$1({
  prop: "borderRightColor",
  themeKey: "palette"
}), borderBottomColor = style$1({
  prop: "borderBottomColor",
  themeKey: "palette"
}), borderLeftColor = style$1({
  prop: "borderLeftColor",
  themeKey: "palette"
}), borderRadius = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const n = createUnaryUnit(e.theme, "shape.borderRadius", 4, "borderRadius"), o = (s) => ({
      borderRadius: getValue(n, s)
    });
    return handleBreakpoints(e, e.borderRadius, o);
  }
  return null;
};
borderRadius.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: responsivePropType$1
} : {};
borderRadius.filterProps = ["borderRadius"];
const borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius), borders$1 = borders, displayPrint = style$1({
  prop: "displayPrint",
  cssProperty: !1,
  transform: (e) => ({
    "@media print": {
      display: e
    }
  })
}), displayRaw = style$1({
  prop: "display"
}), overflow = style$1({
  prop: "overflow"
}), textOverflow = style$1({
  prop: "textOverflow"
}), visibility = style$1({
  prop: "visibility"
}), whiteSpace = style$1({
  prop: "whiteSpace"
}), display = compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace), flexBasis = style$1({
  prop: "flexBasis"
}), flexDirection = style$1({
  prop: "flexDirection"
}), flexWrap = style$1({
  prop: "flexWrap"
}), justifyContent = style$1({
  prop: "justifyContent"
}), alignItems = style$1({
  prop: "alignItems"
}), alignContent = style$1({
  prop: "alignContent"
}), order = style$1({
  prop: "order"
}), flex = style$1({
  prop: "flex"
}), flexGrow = style$1({
  prop: "flexGrow"
}), flexShrink = style$1({
  prop: "flexShrink"
}), alignSelf = style$1({
  prop: "alignSelf"
}), justifyItems = style$1({
  prop: "justifyItems"
}), justifySelf = style$1({
  prop: "justifySelf"
}), flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf), flexbox$1 = flexbox, gap = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const n = createUnaryUnit(e.theme, "spacing", 8, "gap"), o = (s) => ({
      gap: getValue(n, s)
    });
    return handleBreakpoints(e, e.gap, o);
  }
  return null;
};
gap.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: responsivePropType$1
} : {};
gap.filterProps = ["gap"];
const columnGap = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const n = createUnaryUnit(e.theme, "spacing", 8, "columnGap"), o = (s) => ({
      columnGap: getValue(n, s)
    });
    return handleBreakpoints(e, e.columnGap, o);
  }
  return null;
};
columnGap.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: responsivePropType$1
} : {};
columnGap.filterProps = ["columnGap"];
const rowGap = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const n = createUnaryUnit(e.theme, "spacing", 8, "rowGap"), o = (s) => ({
      rowGap: getValue(n, s)
    });
    return handleBreakpoints(e, e.rowGap, o);
  }
  return null;
};
rowGap.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: responsivePropType$1
} : {};
rowGap.filterProps = ["rowGap"];
const gridColumn = style$1({
  prop: "gridColumn"
}), gridRow = style$1({
  prop: "gridRow"
}), gridAutoFlow = style$1({
  prop: "gridAutoFlow"
}), gridAutoColumns = style$1({
  prop: "gridAutoColumns"
}), gridAutoRows = style$1({
  prop: "gridAutoRows"
}), gridTemplateColumns = style$1({
  prop: "gridTemplateColumns"
}), gridTemplateRows = style$1({
  prop: "gridTemplateRows"
}), gridTemplateAreas = style$1({
  prop: "gridTemplateAreas"
}), gridArea = style$1({
  prop: "gridArea"
}), grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea), grid$1 = grid;
function transform$1(e, n) {
  return n === "grey" ? n : e;
}
const color = style$1({
  prop: "color",
  themeKey: "palette",
  transform: transform$1
}), bgcolor = style$1({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: transform$1
}), backgroundColor = style$1({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: transform$1
}), palette = compose(color, bgcolor, backgroundColor), palette$1 = palette, position = style$1({
  prop: "position"
}), zIndex$2 = style$1({
  prop: "zIndex",
  themeKey: "zIndex"
}), top = style$1({
  prop: "top"
}), right = style$1({
  prop: "right"
}), bottom = style$1({
  prop: "bottom"
}), left = style$1({
  prop: "left"
}), positions = compose(position, zIndex$2, top, right, bottom, left), boxShadow = style$1({
  prop: "boxShadow",
  themeKey: "shadows"
}), shadows$2 = boxShadow;
function transform(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const width = style$1({
  prop: "width",
  transform
}), maxWidth = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const n = (o) => {
      var s, u, d;
      return {
        maxWidth: ((s = e.theme) == null || (u = s.breakpoints) == null || (d = u.values) == null ? void 0 : d[o]) || values$1[o] || transform(o)
      };
    };
    return handleBreakpoints(e, e.maxWidth, n);
  }
  return null;
};
maxWidth.filterProps = ["maxWidth"];
const minWidth = style$1({
  prop: "minWidth",
  transform
}), height = style$1({
  prop: "height",
  transform
}), maxHeight = style$1({
  prop: "maxHeight",
  transform
}), minHeight = style$1({
  prop: "minHeight",
  transform
});
style$1({
  prop: "size",
  cssProperty: "width",
  transform
});
style$1({
  prop: "size",
  cssProperty: "height",
  transform
});
const boxSizing = style$1({
  prop: "boxSizing"
}), sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing), sizing$1 = sizing, fontFamily = style$1({
  prop: "fontFamily",
  themeKey: "typography"
}), fontSize = style$1({
  prop: "fontSize",
  themeKey: "typography"
}), fontStyle = style$1({
  prop: "fontStyle",
  themeKey: "typography"
}), fontWeight = style$1({
  prop: "fontWeight",
  themeKey: "typography"
}), letterSpacing = style$1({
  prop: "letterSpacing"
}), textTransform = style$1({
  prop: "textTransform"
}), lineHeight = style$1({
  prop: "lineHeight"
}), textAlign = style$1({
  prop: "textAlign"
}), typographyVariant = style$1({
  prop: "typography",
  cssProperty: !1,
  themeKey: "typography"
}), typography = compose(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign, textTransform), typography$1 = typography, filterPropsMapping = {
  borders: borders$1.filterProps,
  display: display.filterProps,
  flexbox: flexbox$1.filterProps,
  grid: grid$1.filterProps,
  positions: positions.filterProps,
  palette: palette$1.filterProps,
  shadows: shadows$2.filterProps,
  sizing: sizing$1.filterProps,
  spacing: spacing.filterProps,
  typography: typography$1.filterProps
}, styleFunctionMapping = {
  borders: borders$1,
  display,
  flexbox: flexbox$1,
  grid: grid$1,
  positions,
  palette: palette$1,
  shadows: shadows$2,
  sizing: sizing$1,
  spacing,
  typography: typography$1
};
Object.keys(filterPropsMapping).reduce((e, n) => (filterPropsMapping[n].forEach((o) => {
  e[o] = styleFunctionMapping[n];
}), e), {});
function objectsHaveSameKeys(...e) {
  const n = e.reduce((s, u) => s.concat(Object.keys(u)), []), o = new Set(n);
  return e.every((s) => o.size === Object.keys(s).length);
}
function callIfFn(e, n) {
  return typeof e == "function" ? e(n) : e;
}
function unstable_createStyleFunctionSx(e = styleFunctionMapping) {
  const n = Object.keys(e).reduce((u, d) => (e[d].filterProps.forEach((g) => {
    u[g] = e[d];
  }), u), {});
  function o(u, d, g) {
    const m = {
      [u]: d,
      theme: g
    }, w = n[u];
    return w ? w(m) : {
      [u]: d
    };
  }
  function s(u) {
    const {
      sx: d,
      theme: g = {}
    } = u || {};
    if (!d)
      return null;
    function m(w) {
      let B = w;
      if (typeof w == "function")
        B = w(g);
      else if (typeof w != "object")
        return w;
      if (!B)
        return null;
      const x = createEmptyBreakpointObject(g.breakpoints), C = Object.keys(x);
      let v = x;
      return Object.keys(B).forEach((y) => {
        const T = callIfFn(B[y], g);
        if (T != null)
          if (typeof T == "object")
            if (n[y])
              v = merge$2(v, o(y, T, g));
            else {
              const M = handleBreakpoints({
                theme: g
              }, T, (D) => ({
                [y]: D
              }));
              objectsHaveSameKeys(M, T) ? v[y] = s({
                sx: T,
                theme: g
              }) : v = merge$2(v, M);
            }
          else
            v = merge$2(v, o(y, T, g));
      }), removeUnusedBreakpoints(C, v);
    }
    return Array.isArray(d) ? d.map(m) : m(d);
  }
  return s;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = ["sx"];
const defaultStyleFunctionSx = styleFunctionSx;
function r(e) {
  var n, o, s = "";
  if (typeof e == "string" || typeof e == "number")
    s += e;
  else if (typeof e == "object")
    if (Array.isArray(e))
      for (n = 0; n < e.length; n++)
        e[n] && (o = r(e[n])) && (s && (s += " "), s += o);
    else
      for (n in e)
        e[n] && (s && (s += " "), s += n);
  return s;
}
function clsx() {
  for (var e, n, o = 0, s = ""; o < arguments.length; )
    (e = arguments[o++]) && (n = r(e)) && (s && (s += " "), s += n);
  return s;
}
const _excluded$a = ["values", "unit", "step"], sortBreakpointsValues = (e) => {
  const n = Object.keys(e).map((o) => ({
    key: o,
    val: e[o]
  })) || [];
  return n.sort((o, s) => o.val - s.val), n.reduce((o, s) => _extends$1({}, o, {
    [s.key]: s.val
  }), {});
};
function createBreakpoints(e) {
  const {
    values: n = {
      xs: 0,
      sm: 600,
      md: 900,
      lg: 1200,
      xl: 1536
    },
    unit: o = "px",
    step: s = 5
  } = e, u = _objectWithoutPropertiesLoose$1(e, _excluded$a), d = sortBreakpointsValues(n), g = Object.keys(d);
  function m(v) {
    return `@media (min-width:${typeof n[v] == "number" ? n[v] : v}${o})`;
  }
  function w(v) {
    return `@media (max-width:${(typeof n[v] == "number" ? n[v] : v) - s / 100}${o})`;
  }
  function B(v, y) {
    const T = g.indexOf(y);
    return `@media (min-width:${typeof n[v] == "number" ? n[v] : v}${o}) and (max-width:${(T !== -1 && typeof n[g[T]] == "number" ? n[g[T]] : y) - s / 100}${o})`;
  }
  function x(v) {
    return g.indexOf(v) + 1 < g.length ? B(v, g[g.indexOf(v) + 1]) : m(v);
  }
  function C(v) {
    const y = g.indexOf(v);
    return y === 0 ? m(g[1]) : y === g.length - 1 ? w(g[y]) : B(v, g[g.indexOf(v) + 1]).replace("@media", "@media not all and");
  }
  return _extends$1({
    keys: g,
    values: d,
    up: m,
    down: w,
    between: B,
    only: x,
    not: C,
    unit: o
  }, u);
}
const shape = {
  borderRadius: 4
}, shape$1 = shape;
function createSpacing(e = 8) {
  if (e.mui)
    return e;
  const n = createUnarySpacing({
    spacing: e
  }), o = (...s) => (process.env.NODE_ENV !== "production" && (s.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${s.length}`)), (s.length === 0 ? [1] : s).map((d) => {
    const g = n(d);
    return typeof g == "number" ? `${g}px` : g;
  }).join(" "));
  return o.mui = !0, o;
}
const _excluded$9 = ["breakpoints", "palette", "spacing", "shape"];
function createTheme$1(e = {}, ...n) {
  const {
    breakpoints: o = {},
    palette: s = {},
    spacing: u,
    shape: d = {}
  } = e, g = _objectWithoutPropertiesLoose$1(e, _excluded$9), m = createBreakpoints(o), w = createSpacing(u);
  let B = deepmerge({
    breakpoints: m,
    direction: "ltr",
    components: {},
    palette: _extends$1({
      mode: "light"
    }, s),
    spacing: w,
    shape: _extends$1({}, shape$1, d)
  }, g);
  return B = n.reduce((x, C) => deepmerge(x, C), B), B;
}
const ThemeContext$1 = /* @__PURE__ */ React.createContext(null);
process.env.NODE_ENV !== "production" && (ThemeContext$1.displayName = "ThemeContext");
const ThemeContext$2 = ThemeContext$1;
function useTheme$2() {
  const e = React.useContext(ThemeContext$2);
  return process.env.NODE_ENV !== "production" && React.useDebugValue(e), e;
}
function isObjectEmpty(e) {
  return Object.keys(e).length === 0;
}
function useTheme$1(e = null) {
  const n = useTheme$2();
  return !n || isObjectEmpty(n) ? e : n;
}
const systemDefaultTheme$1 = createTheme$1();
function useTheme(e = systemDefaultTheme$1) {
  return useTheme$1(e);
}
const _excluded$8 = ["variant"];
function isEmpty$1(e) {
  return e.length === 0;
}
function propsToClassKey(e) {
  const {
    variant: n
  } = e, o = _objectWithoutPropertiesLoose$1(e, _excluded$8);
  let s = n || "";
  return Object.keys(o).sort().forEach((u) => {
    u === "color" ? s += isEmpty$1(s) ? e[u] : capitalize(e[u]) : s += `${isEmpty$1(s) ? u : capitalize(u)}${capitalize(e[u].toString())}`;
  }), s;
}
const _excluded$7 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"], _excluded2 = ["theme"], _excluded3 = ["theme"];
function isEmpty(e) {
  return Object.keys(e).length === 0;
}
function isStringTag(e) {
  return typeof e == "string" && e.charCodeAt(0) > 96;
}
const getStyleOverrides = (e, n) => n.components && n.components[e] && n.components[e].styleOverrides ? n.components[e].styleOverrides : null, getVariantStyles = (e, n) => {
  let o = [];
  n && n.components && n.components[e] && n.components[e].variants && (o = n.components[e].variants);
  const s = {};
  return o.forEach((u) => {
    const d = propsToClassKey(u.props);
    s[d] = u.style;
  }), s;
}, variantsResolver = (e, n, o, s) => {
  var u, d;
  const {
    ownerState: g = {}
  } = e, m = [], w = o == null || (u = o.components) == null || (d = u[s]) == null ? void 0 : d.variants;
  return w && w.forEach((B) => {
    let x = !0;
    Object.keys(B.props).forEach((C) => {
      g[C] !== B.props[C] && e[C] !== B.props[C] && (x = !1);
    }), x && m.push(n[propsToClassKey(B.props)]);
  }), m;
};
function shouldForwardProp(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const systemDefaultTheme = createTheme$1(), lowercaseFirstLetter = (e) => e.charAt(0).toLowerCase() + e.slice(1);
function createStyled(e = {}) {
  const {
    defaultTheme: n = systemDefaultTheme,
    rootShouldForwardProp: o = shouldForwardProp,
    slotShouldForwardProp: s = shouldForwardProp,
    styleFunctionSx: u = defaultStyleFunctionSx
  } = e, d = (g) => {
    const m = isEmpty(g.theme) ? n : g.theme;
    return u(_extends$1({}, g, {
      theme: m
    }));
  };
  return d.__mui_systemSx = !0, (g, m = {}) => {
    internal_processStyles(g, (q) => q.filter(($) => !($ != null && $.__mui_systemSx)));
    const {
      name: w,
      slot: B,
      skipVariantsResolver: x,
      skipSx: C,
      overridesResolver: v
    } = m, y = _objectWithoutPropertiesLoose$1(m, _excluded$7), T = x !== void 0 ? x : B && B !== "Root" || !1, M = C || !1;
    let D;
    process.env.NODE_ENV !== "production" && w && (D = `${w}-${lowercaseFirstLetter(B || "Root")}`);
    let V = shouldForwardProp;
    B === "Root" ? V = o : B ? V = s : isStringTag(g) && (V = void 0);
    const O = styled$4(g, _extends$1({
      shouldForwardProp: V,
      label: D
    }, y)), H = (q, ...$) => {
      const re = $ ? $.map((se) => typeof se == "function" && se.__emotion_real !== se ? (Ce) => {
        let {
          theme: Ge
        } = Ce, $e = _objectWithoutPropertiesLoose$1(Ce, _excluded2);
        return se(_extends$1({
          theme: isEmpty(Ge) ? n : Ge
        }, $e));
      } : se) : [];
      let ce = q;
      w && v && re.push((se) => {
        const Ce = isEmpty(se.theme) ? n : se.theme, Ge = getStyleOverrides(w, Ce);
        if (Ge) {
          const $e = {};
          return Object.entries(Ge).forEach(([Be, Me]) => {
            $e[Be] = typeof Me == "function" ? Me(_extends$1({}, se, {
              theme: Ce
            })) : Me;
          }), v(se, $e);
        }
        return null;
      }), w && !T && re.push((se) => {
        const Ce = isEmpty(se.theme) ? n : se.theme;
        return variantsResolver(se, getVariantStyles(w, Ce), Ce, w);
      }), M || re.push(d);
      const Ie = re.length - $.length;
      if (Array.isArray(q) && Ie > 0) {
        const se = new Array(Ie).fill("");
        ce = [...q, ...se], ce.raw = [...q.raw, ...se];
      } else
        typeof q == "function" && q.__emotion_real !== q && (ce = (se) => {
          let {
            theme: Ce
          } = se, Ge = _objectWithoutPropertiesLoose$1(se, _excluded3);
          return q(_extends$1({
            theme: isEmpty(Ce) ? n : Ce
          }, Ge));
        });
      const Pe = O(ce, ...re);
      if (process.env.NODE_ENV !== "production") {
        let se;
        w && (se = `${w}${B || ""}`), se === void 0 && (se = `Styled(${getDisplayName(g)})`), Pe.displayName = se;
      }
      return Pe;
    };
    return O.withConfig && (H.withConfig = O.withConfig), H;
  };
}
function getThemeProps(e) {
  const {
    theme: n,
    name: o,
    props: s
  } = e;
  return !n || !n.components || !n.components[o] || !n.components[o].defaultProps ? s : resolveProps(n.components[o].defaultProps, s);
}
function useThemeProps$1({
  props: e,
  name: n,
  defaultTheme: o
}) {
  const s = useTheme(o);
  return getThemeProps({
    theme: s,
    name: n,
    props: e
  });
}
function clamp(e, n = 0, o = 1) {
  return process.env.NODE_ENV !== "production" && (e < n || e > o) && console.error(`MUI: The value provided ${e} is out of range [${n}, ${o}].`), Math.min(Math.max(n, e), o);
}
function hexToRgb(e) {
  e = e.slice(1);
  const n = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let o = e.match(n);
  return o && o[0].length === 1 && (o = o.map((s) => s + s)), o ? `rgb${o.length === 4 ? "a" : ""}(${o.map((s, u) => u < 3 ? parseInt(s, 16) : Math.round(parseInt(s, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function decomposeColor(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return decomposeColor(hexToRgb(e));
  const n = e.indexOf("("), o = e.substring(0, n);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(o) === -1)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : formatMuiErrorMessage(9, e));
  let s = e.substring(n + 1, e.length - 1), u;
  if (o === "color") {
    if (s = s.split(" "), u = s.shift(), s.length === 4 && s[3].charAt(0) === "/" && (s[3] = s[3].slice(1)), ["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(u) === -1)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${u}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : formatMuiErrorMessage(10, u));
  } else
    s = s.split(",");
  return s = s.map((d) => parseFloat(d)), {
    type: o,
    values: s,
    colorSpace: u
  };
}
function recomposeColor(e) {
  const {
    type: n,
    colorSpace: o
  } = e;
  let {
    values: s
  } = e;
  return n.indexOf("rgb") !== -1 ? s = s.map((u, d) => d < 3 ? parseInt(u, 10) : u) : n.indexOf("hsl") !== -1 && (s[1] = `${s[1]}%`, s[2] = `${s[2]}%`), n.indexOf("color") !== -1 ? s = `${o} ${s.join(" ")}` : s = `${s.join(", ")}`, `${n}(${s})`;
}
function hslToRgb(e) {
  e = decomposeColor(e);
  const {
    values: n
  } = e, o = n[0], s = n[1] / 100, u = n[2] / 100, d = s * Math.min(u, 1 - u), g = (B, x = (B + o / 30) % 12) => u - d * Math.max(Math.min(x - 3, 9 - x, 1), -1);
  let m = "rgb";
  const w = [Math.round(g(0) * 255), Math.round(g(8) * 255), Math.round(g(4) * 255)];
  return e.type === "hsla" && (m += "a", w.push(n[3])), recomposeColor({
    type: m,
    values: w
  });
}
function getLuminance(e) {
  e = decomposeColor(e);
  let n = e.type === "hsl" || e.type === "hsla" ? decomposeColor(hslToRgb(e)).values : e.values;
  return n = n.map((o) => (e.type !== "color" && (o /= 255), o <= 0.03928 ? o / 12.92 : ((o + 0.055) / 1.055) ** 2.4)), Number((0.2126 * n[0] + 0.7152 * n[1] + 0.0722 * n[2]).toFixed(3));
}
function getContrastRatio(e, n) {
  const o = getLuminance(e), s = getLuminance(n);
  return (Math.max(o, s) + 0.05) / (Math.min(o, s) + 0.05);
}
function alpha(e, n) {
  return e = decomposeColor(e), n = clamp(n), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${n}` : e.values[3] = n, recomposeColor(e);
}
function darken(e, n) {
  if (e = decomposeColor(e), n = clamp(n), e.type.indexOf("hsl") !== -1)
    e.values[2] *= 1 - n;
  else if (e.type.indexOf("rgb") !== -1 || e.type.indexOf("color") !== -1)
    for (let o = 0; o < 3; o += 1)
      e.values[o] *= 1 - n;
  return recomposeColor(e);
}
function lighten(e, n) {
  if (e = decomposeColor(e), n = clamp(n), e.type.indexOf("hsl") !== -1)
    e.values[2] += (100 - e.values[2]) * n;
  else if (e.type.indexOf("rgb") !== -1)
    for (let o = 0; o < 3; o += 1)
      e.values[o] += (255 - e.values[o]) * n;
  else if (e.type.indexOf("color") !== -1)
    for (let o = 0; o < 3; o += 1)
      e.values[o] += (1 - e.values[o]) * n;
  return recomposeColor(e);
}
function createMixins(e, n) {
  return _extends$1({
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    }
  }, n);
}
const _excluded$6 = ["mode", "contrastThreshold", "tonalOffset"], light = {
  text: {
    primary: "rgba(0, 0, 0, 0.87)",
    secondary: "rgba(0, 0, 0, 0.6)",
    disabled: "rgba(0, 0, 0, 0.38)"
  },
  divider: "rgba(0, 0, 0, 0.12)",
  background: {
    paper: common$1.white,
    default: common$1.white
  },
  action: {
    active: "rgba(0, 0, 0, 0.54)",
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    disabled: "rgba(0, 0, 0, 0.26)",
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
}, dark = {
  text: {
    primary: common$1.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: "#121212",
    default: "#121212"
  },
  action: {
    active: common$1.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(e, n, o, s) {
  const u = s.light || s, d = s.dark || s * 1.5;
  e[n] || (e.hasOwnProperty(o) ? e[n] = e[o] : n === "light" ? e.light = lighten(e.main, u) : n === "dark" && (e.dark = darken(e.main, d)));
}
function getDefaultPrimary(e = "light") {
  return e === "dark" ? {
    main: blue$1[200],
    light: blue$1[50],
    dark: blue$1[400]
  } : {
    main: blue$1[700],
    light: blue$1[400],
    dark: blue$1[800]
  };
}
function getDefaultSecondary(e = "light") {
  return e === "dark" ? {
    main: purple$1[200],
    light: purple$1[50],
    dark: purple$1[400]
  } : {
    main: purple$1[500],
    light: purple$1[300],
    dark: purple$1[700]
  };
}
function getDefaultError(e = "light") {
  return e === "dark" ? {
    main: red$1[500],
    light: red$1[300],
    dark: red$1[700]
  } : {
    main: red$1[700],
    light: red$1[400],
    dark: red$1[800]
  };
}
function getDefaultInfo(e = "light") {
  return e === "dark" ? {
    main: lightBlue$1[400],
    light: lightBlue$1[300],
    dark: lightBlue$1[700]
  } : {
    main: lightBlue$1[700],
    light: lightBlue$1[500],
    dark: lightBlue$1[900]
  };
}
function getDefaultSuccess(e = "light") {
  return e === "dark" ? {
    main: green$1[400],
    light: green$1[300],
    dark: green$1[700]
  } : {
    main: green$1[800],
    light: green$1[500],
    dark: green$1[900]
  };
}
function getDefaultWarning(e = "light") {
  return e === "dark" ? {
    main: orange$1[400],
    light: orange$1[300],
    dark: orange$1[700]
  } : {
    main: "#ed6c02",
    light: orange$1[500],
    dark: orange$1[900]
  };
}
function createPalette(e) {
  const {
    mode: n = "light",
    contrastThreshold: o = 3,
    tonalOffset: s = 0.2
  } = e, u = _objectWithoutPropertiesLoose$1(e, _excluded$6), d = e.primary || getDefaultPrimary(n), g = e.secondary || getDefaultSecondary(n), m = e.error || getDefaultError(n), w = e.info || getDefaultInfo(n), B = e.success || getDefaultSuccess(n), x = e.warning || getDefaultWarning(n);
  function C(M) {
    const D = getContrastRatio(M, dark.text.primary) >= o ? dark.text.primary : light.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const V = getContrastRatio(M, D);
      V < 3 && console.error([`MUI: The contrast ratio of ${V}:1 for ${D} on ${M}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return D;
  }
  const v = ({
    color: M,
    name: D,
    mainShade: V = 500,
    lightShade: O = 300,
    darkShade: H = 700
  }) => {
    if (M = _extends$1({}, M), !M.main && M[V] && (M.main = M[V]), !M.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${D ? ` (${D})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${V}\` property.` : formatMuiErrorMessage(11, D ? ` (${D})` : "", V));
    if (typeof M.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${D ? ` (${D})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(M.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : formatMuiErrorMessage(12, D ? ` (${D})` : "", JSON.stringify(M.main)));
    return addLightOrDark(M, "light", O, s), addLightOrDark(M, "dark", H, s), M.contrastText || (M.contrastText = C(M.main)), M;
  }, y = {
    dark,
    light
  };
  return process.env.NODE_ENV !== "production" && (y[n] || console.error(`MUI: The palette mode \`${n}\` is not supported.`)), deepmerge(_extends$1({
    common: _extends$1({}, common$1),
    mode: n,
    primary: v({
      color: d,
      name: "primary"
    }),
    secondary: v({
      color: g,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    error: v({
      color: m,
      name: "error"
    }),
    warning: v({
      color: x,
      name: "warning"
    }),
    info: v({
      color: w,
      name: "info"
    }),
    success: v({
      color: B,
      name: "success"
    }),
    grey: grey$1,
    contrastThreshold: o,
    getContrastText: C,
    augmentColor: v,
    tonalOffset: s
  }, y[n]), u);
}
const _excluded$5 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
function round(e) {
  return Math.round(e * 1e5) / 1e5;
}
const caseAllCaps = {
  textTransform: "uppercase"
}, defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(e, n) {
  const o = typeof n == "function" ? n(e) : n, {
    fontFamily: s = defaultFontFamily,
    fontSize: u = 14,
    fontWeightLight: d = 300,
    fontWeightRegular: g = 400,
    fontWeightMedium: m = 500,
    fontWeightBold: w = 700,
    htmlFontSize: B = 16,
    allVariants: x,
    pxToRem: C
  } = o, v = _objectWithoutPropertiesLoose$1(o, _excluded$5);
  process.env.NODE_ENV !== "production" && (typeof u != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof B != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const y = u / 14, T = C || ((V) => `${V / B * y}rem`), M = (V, O, H, q, $) => _extends$1({
    fontFamily: s,
    fontWeight: V,
    fontSize: T(O),
    lineHeight: H
  }, s === defaultFontFamily ? {
    letterSpacing: `${round(q / O)}em`
  } : {}, $, x), D = {
    h1: M(d, 96, 1.167, -1.5),
    h2: M(d, 60, 1.2, -0.5),
    h3: M(g, 48, 1.167, 0),
    h4: M(g, 34, 1.235, 0.25),
    h5: M(g, 24, 1.334, 0),
    h6: M(m, 20, 1.6, 0.15),
    subtitle1: M(g, 16, 1.75, 0.15),
    subtitle2: M(m, 14, 1.57, 0.1),
    body1: M(g, 16, 1.5, 0.15),
    body2: M(g, 14, 1.43, 0.15),
    button: M(m, 14, 1.75, 0.4, caseAllCaps),
    caption: M(g, 12, 1.66, 0.4),
    overline: M(g, 12, 2.66, 1, caseAllCaps)
  };
  return deepmerge(_extends$1({
    htmlFontSize: B,
    pxToRem: T,
    fontFamily: s,
    fontSize: u,
    fontWeightLight: d,
    fontWeightRegular: g,
    fontWeightMedium: m,
    fontWeightBold: w
  }, D), v, {
    clone: !1
  });
}
const shadowKeyUmbraOpacity = 0.2, shadowKeyPenumbraOpacity = 0.14, shadowAmbientShadowOpacity = 0.12;
function createShadow(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
}
const shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], shadows$1 = shadows, _excluded$4 = ["duration", "easing", "delay"], easing = {
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  standard: 300,
  complex: 375,
  enteringScreen: 225,
  leavingScreen: 195
};
function formatMs(e) {
  return `${Math.round(e)}ms`;
}
function getAutoHeightDuration(e) {
  if (!e)
    return 0;
  const n = e / 36;
  return Math.round((4 + 15 * n ** 0.25 + n / 5) * 10);
}
function createTransitions(e) {
  const n = _extends$1({}, easing, e.easing), o = _extends$1({}, duration, e.duration);
  return _extends$1({
    getAutoHeightDuration,
    create: (u = ["all"], d = {}) => {
      const {
        duration: g = o.standard,
        easing: m = n.easeInOut,
        delay: w = 0
      } = d, B = _objectWithoutPropertiesLoose$1(d, _excluded$4);
      if (process.env.NODE_ENV !== "production") {
        const x = (v) => typeof v == "string", C = (v) => !isNaN(parseFloat(v));
        !x(u) && !Array.isArray(u) && console.error('MUI: Argument "props" must be a string or Array.'), !C(g) && !x(g) && console.error(`MUI: Argument "duration" must be a number or a string but found ${g}.`), x(m) || console.error('MUI: Argument "easing" must be a string.'), !C(w) && !x(w) && console.error('MUI: Argument "delay" must be a number or a string.'), Object.keys(B).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(B).join(",")}].`);
      }
      return (Array.isArray(u) ? u : [u]).map((x) => `${x} ${typeof g == "string" ? g : formatMs(g)} ${m} ${typeof w == "string" ? w : formatMs(w)}`).join(",");
    }
  }, e, {
    easing: n,
    duration: o
  });
}
const zIndex = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
}, zIndex$1 = zIndex, _excluded$3 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
function createTheme(e = {}, ...n) {
  const {
    mixins: o = {},
    palette: s = {},
    transitions: u = {},
    typography: d = {}
  } = e, g = _objectWithoutPropertiesLoose$1(e, _excluded$3);
  if (e.vars)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name." : formatMuiErrorMessage(18));
  const m = createPalette(s), w = createTheme$1(e);
  let B = deepmerge(w, {
    mixins: createMixins(w.breakpoints, o),
    palette: m,
    shadows: shadows$1.slice(),
    typography: createTypography(m, d),
    transitions: createTransitions(u),
    zIndex: _extends$1({}, zIndex$1)
  });
  if (B = deepmerge(B, g), B = n.reduce((x, C) => deepmerge(x, C), B), process.env.NODE_ENV !== "production") {
    const x = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], C = (v, y) => {
      let T;
      for (T in v) {
        const M = v[T];
        if (x.indexOf(T) !== -1 && Object.keys(M).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const D = generateUtilityClass("", T);
            console.error([`MUI: The \`${y}\` component increases the CSS specificity of the \`${T}\` internal state.`, "You can not override it like this: ", JSON.stringify(v, null, 2), "", `Instead, you need to use the '&.${D}' syntax:`, JSON.stringify({
              root: {
                [`&.${D}`]: M
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          v[T] = {};
        }
      }
    };
    Object.keys(B.components).forEach((v) => {
      const y = B.components[v].styleOverrides;
      y && v.indexOf("Mui") === 0 && C(y, v);
    });
  }
  return B;
}
const defaultTheme = createTheme(), defaultTheme$1 = defaultTheme;
function useThemeProps({
  props: e,
  name: n
}) {
  return useThemeProps$1({
    props: e,
    name: n,
    defaultTheme: defaultTheme$1
  });
}
const rootShouldForwardProp = (e) => shouldForwardProp(e) && e !== "classes", styled$2 = createStyled({
  defaultTheme: defaultTheme$1,
  rootShouldForwardProp
}), styled$3 = styled$2;
function _setPrototypeOf(e, n) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(s, u) {
    return s.__proto__ = u, s;
  }, _setPrototypeOf(e, n);
}
function _inheritsLoose(e, n) {
  e.prototype = Object.create(n.prototype), e.prototype.constructor = e, _setPrototypeOf(e, n);
}
const TransitionGroupContext = React__default.createContext(null);
function _assertThisInitialized(e) {
  if (e === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function getChildMapping(e, n) {
  var o = function(d) {
    return n && isValidElement(d) ? n(d) : d;
  }, s = /* @__PURE__ */ Object.create(null);
  return e && Children.map(e, function(u) {
    return u;
  }).forEach(function(u) {
    s[u.key] = o(u);
  }), s;
}
function mergeChildMappings(e, n) {
  e = e || {}, n = n || {};
  function o(x) {
    return x in n ? n[x] : e[x];
  }
  var s = /* @__PURE__ */ Object.create(null), u = [];
  for (var d in e)
    d in n ? u.length && (s[d] = u, u = []) : u.push(d);
  var g, m = {};
  for (var w in n) {
    if (s[w])
      for (g = 0; g < s[w].length; g++) {
        var B = s[w][g];
        m[s[w][g]] = o(B);
      }
    m[w] = o(w);
  }
  for (g = 0; g < u.length; g++)
    m[u[g]] = o(u[g]);
  return m;
}
function getProp(e, n, o) {
  return o[n] != null ? o[n] : e.props[n];
}
function getInitialChildMapping(e, n) {
  return getChildMapping(e.children, function(o) {
    return cloneElement(o, {
      onExited: n.bind(null, o),
      in: !0,
      appear: getProp(o, "appear", e),
      enter: getProp(o, "enter", e),
      exit: getProp(o, "exit", e)
    });
  });
}
function getNextChildMapping(e, n, o) {
  var s = getChildMapping(e.children), u = mergeChildMappings(n, s);
  return Object.keys(u).forEach(function(d) {
    var g = u[d];
    if (!!isValidElement(g)) {
      var m = d in n, w = d in s, B = n[d], x = isValidElement(B) && !B.props.in;
      w && (!m || x) ? u[d] = cloneElement(g, {
        onExited: o.bind(null, g),
        in: !0,
        exit: getProp(g, "exit", e),
        enter: getProp(g, "enter", e)
      }) : !w && m && !x ? u[d] = cloneElement(g, {
        in: !1
      }) : w && m && isValidElement(B) && (u[d] = cloneElement(g, {
        onExited: o.bind(null, g),
        in: B.props.in,
        exit: getProp(g, "exit", e),
        enter: getProp(g, "enter", e)
      }));
    }
  }), u;
}
var values = Object.values || function(e) {
  return Object.keys(e).map(function(n) {
    return e[n];
  });
}, defaultProps = {
  component: "div",
  childFactory: function(n) {
    return n;
  }
}, TransitionGroup = /* @__PURE__ */ function(e) {
  _inheritsLoose(n, e);
  function n(s, u) {
    var d;
    d = e.call(this, s, u) || this;
    var g = d.handleExited.bind(_assertThisInitialized(d));
    return d.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: g,
      firstRender: !0
    }, d;
  }
  var o = n.prototype;
  return o.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, o.componentWillUnmount = function() {
    this.mounted = !1;
  }, n.getDerivedStateFromProps = function(u, d) {
    var g = d.children, m = d.handleExited, w = d.firstRender;
    return {
      children: w ? getInitialChildMapping(u, m) : getNextChildMapping(u, g, m),
      firstRender: !1
    };
  }, o.handleExited = function(u, d) {
    var g = getChildMapping(this.props.children);
    u.key in g || (u.props.onExited && u.props.onExited(d), this.mounted && this.setState(function(m) {
      var w = _extends$1({}, m.children);
      return delete w[u.key], {
        children: w
      };
    }));
  }, o.render = function() {
    var u = this.props, d = u.component, g = u.childFactory, m = _objectWithoutPropertiesLoose$1(u, ["component", "childFactory"]), w = this.state.contextValue, B = values(this.state.children).map(g);
    return delete m.appear, delete m.enter, delete m.exit, d === null ? /* @__PURE__ */ jsx(TransitionGroupContext.Provider, {
      value: w,
      children: B
    }) : /* @__PURE__ */ jsx(TransitionGroupContext.Provider, {
      value: w,
      children: /* @__PURE__ */ jsx(d, {
        ...m,
        children: B
      })
    });
  }, n;
}(React__default.Component);
TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  component: propTypes.exports.any,
  children: propTypes.exports.node,
  appear: propTypes.exports.bool,
  enter: propTypes.exports.bool,
  exit: propTypes.exports.bool,
  childFactory: propTypes.exports.func
} : {};
TransitionGroup.defaultProps = defaultProps;
const TransitionGroup$1 = TransitionGroup;
function Ripple(e) {
  const {
    className: n,
    classes: o,
    pulsate: s = !1,
    rippleX: u,
    rippleY: d,
    rippleSize: g,
    in: m,
    onExited: w,
    timeout: B
  } = e, [x, C] = React.useState(!1), v = clsx(n, o.ripple, o.rippleVisible, s && o.ripplePulsate), y = {
    width: g,
    height: g,
    top: -(g / 2) + d,
    left: -(g / 2) + u
  }, T = clsx(o.child, x && o.childLeaving, s && o.childPulsate);
  return !m && !x && C(!0), React.useEffect(() => {
    if (!m && w != null) {
      const M = setTimeout(w, B);
      return () => {
        clearTimeout(M);
      };
    }
  }, [w, m, B]), /* @__PURE__ */ jsx("span", {
    className: v,
    style: y,
    children: /* @__PURE__ */ jsx("span", {
      className: T
    })
  });
}
process.env.NODE_ENV !== "production" && (Ripple.propTypes = {
  classes: propTypes.exports.object.isRequired,
  className: propTypes.exports.string,
  in: propTypes.exports.bool,
  onExited: propTypes.exports.func,
  pulsate: propTypes.exports.bool,
  rippleSize: propTypes.exports.number,
  rippleX: propTypes.exports.number,
  rippleY: propTypes.exports.number,
  timeout: propTypes.exports.number.isRequired
});
const touchRippleClasses = generateUtilityClasses("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), touchRippleClasses$1 = touchRippleClasses, _excluded$2 = ["center", "classes", "className"];
let _ = (e) => e, _t, _t2, _t3, _t4;
const DURATION = 550, DELAY_RIPPLE = 80, enterKeyframe = keyframes(_t || (_t = _`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)), exitKeyframe = keyframes(_t2 || (_t2 = _`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)), pulsateKeyframe = keyframes(_t3 || (_t3 = _`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)), TouchRippleRoot = styled$3("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), TouchRippleRipple = styled$3(Ripple, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(_t4 || (_t4 = _`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses$1.rippleVisible, enterKeyframe, DURATION, ({
  theme: e
}) => e.transitions.easing.easeInOut, touchRippleClasses$1.ripplePulsate, ({
  theme: e
}) => e.transitions.duration.shorter, touchRippleClasses$1.child, touchRippleClasses$1.childLeaving, exitKeyframe, DURATION, ({
  theme: e
}) => e.transitions.easing.easeInOut, touchRippleClasses$1.childPulsate, pulsateKeyframe, ({
  theme: e
}) => e.transitions.easing.easeInOut), TouchRipple = /* @__PURE__ */ React.forwardRef(function(n, o) {
  const s = useThemeProps({
    props: n,
    name: "MuiTouchRipple"
  }), {
    center: u = !1,
    classes: d = {},
    className: g
  } = s, m = _objectWithoutPropertiesLoose$1(s, _excluded$2), [w, B] = React.useState([]), x = React.useRef(0), C = React.useRef(null);
  React.useEffect(() => {
    C.current && (C.current(), C.current = null);
  }, [w]);
  const v = React.useRef(!1), y = React.useRef(null), T = React.useRef(null), M = React.useRef(null);
  React.useEffect(() => () => {
    clearTimeout(y.current);
  }, []);
  const D = React.useCallback((q) => {
    const {
      pulsate: $,
      rippleX: re,
      rippleY: ce,
      rippleSize: Ie,
      cb: Pe
    } = q;
    B((se) => [...se, /* @__PURE__ */ jsx(TouchRippleRipple, {
      classes: {
        ripple: clsx(d.ripple, touchRippleClasses$1.ripple),
        rippleVisible: clsx(d.rippleVisible, touchRippleClasses$1.rippleVisible),
        ripplePulsate: clsx(d.ripplePulsate, touchRippleClasses$1.ripplePulsate),
        child: clsx(d.child, touchRippleClasses$1.child),
        childLeaving: clsx(d.childLeaving, touchRippleClasses$1.childLeaving),
        childPulsate: clsx(d.childPulsate, touchRippleClasses$1.childPulsate)
      },
      timeout: DURATION,
      pulsate: $,
      rippleX: re,
      rippleY: ce,
      rippleSize: Ie
    }, x.current)]), x.current += 1, C.current = Pe;
  }, [d]), V = React.useCallback((q = {}, $ = {}, re = () => {
  }) => {
    const {
      pulsate: ce = !1,
      center: Ie = u || $.pulsate,
      fakeElement: Pe = !1
    } = $;
    if ((q == null ? void 0 : q.type) === "mousedown" && v.current) {
      v.current = !1;
      return;
    }
    (q == null ? void 0 : q.type) === "touchstart" && (v.current = !0);
    const se = Pe ? null : M.current, Ce = se ? se.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let Ge, $e, Be;
    if (Ie || q === void 0 || q.clientX === 0 && q.clientY === 0 || !q.clientX && !q.touches)
      Ge = Math.round(Ce.width / 2), $e = Math.round(Ce.height / 2);
    else {
      const {
        clientX: Me,
        clientY: We
      } = q.touches && q.touches.length > 0 ? q.touches[0] : q;
      Ge = Math.round(Me - Ce.left), $e = Math.round(We - Ce.top);
    }
    if (Ie)
      Be = Math.sqrt((2 * Ce.width ** 2 + Ce.height ** 2) / 3), Be % 2 === 0 && (Be += 1);
    else {
      const Me = Math.max(Math.abs((se ? se.clientWidth : 0) - Ge), Ge) * 2 + 2, We = Math.max(Math.abs((se ? se.clientHeight : 0) - $e), $e) * 2 + 2;
      Be = Math.sqrt(Me ** 2 + We ** 2);
    }
    q != null && q.touches ? T.current === null && (T.current = () => {
      D({
        pulsate: ce,
        rippleX: Ge,
        rippleY: $e,
        rippleSize: Be,
        cb: re
      });
    }, y.current = setTimeout(() => {
      T.current && (T.current(), T.current = null);
    }, DELAY_RIPPLE)) : D({
      pulsate: ce,
      rippleX: Ge,
      rippleY: $e,
      rippleSize: Be,
      cb: re
    });
  }, [u, D]), O = React.useCallback(() => {
    V({}, {
      pulsate: !0
    });
  }, [V]), H = React.useCallback((q, $) => {
    if (clearTimeout(y.current), (q == null ? void 0 : q.type) === "touchend" && T.current) {
      T.current(), T.current = null, y.current = setTimeout(() => {
        H(q, $);
      });
      return;
    }
    T.current = null, B((re) => re.length > 0 ? re.slice(1) : re), C.current = $;
  }, []);
  return React.useImperativeHandle(o, () => ({
    pulsate: O,
    start: V,
    stop: H
  }), [O, V, H]), /* @__PURE__ */ jsx(TouchRippleRoot, _extends$1({
    className: clsx(touchRippleClasses$1.root, d.root, g),
    ref: M
  }, m, {
    children: /* @__PURE__ */ jsx(TransitionGroup$1, {
      component: null,
      exit: !0,
      children: w
    })
  }));
});
process.env.NODE_ENV !== "production" && (TouchRipple.propTypes = {
  center: propTypes.exports.bool,
  classes: propTypes.exports.object,
  className: propTypes.exports.string
});
const TouchRipple$1 = TouchRipple;
function getButtonBaseUtilityClass(e) {
  return generateUtilityClass("MuiButtonBase", e);
}
const buttonBaseClasses = generateUtilityClasses("MuiButtonBase", ["root", "disabled", "focusVisible"]), buttonBaseClasses$1 = buttonBaseClasses, _excluded$1 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"], useUtilityClasses$1 = (e) => {
  const {
    disabled: n,
    focusVisible: o,
    focusVisibleClassName: s,
    classes: u
  } = e, g = composeClasses({
    root: ["root", n && "disabled", o && "focusVisible"]
  }, getButtonBaseUtilityClass, u);
  return o && s && (g.root += ` ${s}`), g;
}, ButtonBaseRoot = styled$3("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, n) => n.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  outline: 0,
  border: 0,
  margin: 0,
  borderRadius: 0,
  padding: 0,
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  WebkitAppearance: "none",
  textDecoration: "none",
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
  },
  [`&.${buttonBaseClasses$1.disabled}`]: {
    pointerEvents: "none",
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), ButtonBase = /* @__PURE__ */ React.forwardRef(function(n, o) {
  const s = useThemeProps({
    props: n,
    name: "MuiButtonBase"
  }), {
    action: u,
    centerRipple: d = !1,
    children: g,
    className: m,
    component: w = "button",
    disabled: B = !1,
    disableRipple: x = !1,
    disableTouchRipple: C = !1,
    focusRipple: v = !1,
    LinkComponent: y = "a",
    onBlur: T,
    onClick: M,
    onContextMenu: D,
    onDragLeave: V,
    onFocus: O,
    onFocusVisible: H,
    onKeyDown: q,
    onKeyUp: $,
    onMouseDown: re,
    onMouseLeave: ce,
    onMouseUp: Ie,
    onTouchEnd: Pe,
    onTouchMove: se,
    onTouchStart: Ce,
    tabIndex: Ge = 0,
    TouchRippleProps: $e,
    touchRippleRef: Be,
    type: Me
  } = s, We = _objectWithoutPropertiesLoose$1(s, _excluded$1), nt = React.useRef(null), Xe = React.useRef(null), Je = useForkRef(Xe, Be), {
    isFocusVisibleRef: qe,
    onFocus: ye,
    onBlur: Ue,
    ref: ze
  } = useIsFocusVisible(), [X, ut] = React.useState(!1);
  B && X && ut(!1), React.useImperativeHandle(u, () => ({
    focusVisible: () => {
      ut(!0), nt.current.focus();
    }
  }), []);
  const [ot, mt] = React.useState(!1);
  React.useEffect(() => {
    mt(!0);
  }, []);
  const ve = ot && !x && !B;
  React.useEffect(() => {
    X && v && !x && ot && Xe.current.pulsate();
  }, [x, v, X, ot]);
  function je(F, ue, Qe = C) {
    return useEventCallback((Oe) => (ue && ue(Oe), !Qe && Xe.current && Xe.current[F](Oe), !0));
  }
  const ie = je("start", re), ae = je("stop", D), z = je("stop", V), be = je("stop", Ie), fe = je("stop", (F) => {
    X && F.preventDefault(), ce && ce(F);
  }), J = je("start", Ce), R = je("stop", Pe), Q = je("stop", se), b = je("stop", (F) => {
    Ue(F), qe.current === !1 && ut(!1), T && T(F);
  }, !1), U = useEventCallback((F) => {
    nt.current || (nt.current = F.currentTarget), ye(F), qe.current === !0 && (ut(!0), H && H(F)), O && O(F);
  }), Z = () => {
    const F = nt.current;
    return w && w !== "button" && !(F.tagName === "A" && F.href);
  }, ne = React.useRef(!1), le = useEventCallback((F) => {
    v && !ne.current && X && Xe.current && F.key === " " && (ne.current = !0, Xe.current.stop(F, () => {
      Xe.current.start(F);
    })), F.target === F.currentTarget && Z() && F.key === " " && F.preventDefault(), q && q(F), F.target === F.currentTarget && Z() && F.key === "Enter" && !B && (F.preventDefault(), M && M(F));
  }), Ne = useEventCallback((F) => {
    v && F.key === " " && Xe.current && X && !F.defaultPrevented && (ne.current = !1, Xe.current.stop(F, () => {
      Xe.current.pulsate(F);
    })), $ && $(F), M && F.target === F.currentTarget && Z() && F.key === " " && !F.defaultPrevented && M(F);
  });
  let Ke = w;
  Ke === "button" && (We.href || We.to) && (Ke = y);
  const Ze = {};
  Ke === "button" ? (Ze.type = Me === void 0 ? "button" : Me, Ze.disabled = B) : (!We.href && !We.to && (Ze.role = "button"), B && (Ze["aria-disabled"] = B));
  const et = useForkRef(o, ze, nt);
  process.env.NODE_ENV !== "production" && React.useEffect(() => {
    ve && !Xe.current && console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join(`
`));
  }, [ve]);
  const Y = _extends$1({}, s, {
    centerRipple: d,
    component: w,
    disabled: B,
    disableRipple: x,
    disableTouchRipple: C,
    focusRipple: v,
    tabIndex: Ge,
    focusVisible: X
  }), k = useUtilityClasses$1(Y);
  return /* @__PURE__ */ jsxs(ButtonBaseRoot, _extends$1({
    as: Ke,
    className: clsx(k.root, m),
    ownerState: Y,
    onBlur: b,
    onClick: M,
    onContextMenu: ae,
    onFocus: U,
    onKeyDown: le,
    onKeyUp: Ne,
    onMouseDown: ie,
    onMouseLeave: fe,
    onMouseUp: be,
    onDragLeave: z,
    onTouchEnd: R,
    onTouchMove: Q,
    onTouchStart: J,
    ref: et,
    tabIndex: B ? -1 : Ge,
    type: Me
  }, Ze, We, {
    children: [g, ve ? /* @__PURE__ */ jsx(TouchRipple$1, _extends$1({
      ref: Je,
      center: d
    }, $e)) : null]
  }));
});
process.env.NODE_ENV !== "production" && (ButtonBase.propTypes = {
  action: refType$1,
  centerRipple: propTypes.exports.bool,
  children: propTypes.exports.node,
  classes: propTypes.exports.object,
  className: propTypes.exports.string,
  component: elementTypeAcceptingRef$1,
  disabled: propTypes.exports.bool,
  disableRipple: propTypes.exports.bool,
  disableTouchRipple: propTypes.exports.bool,
  focusRipple: propTypes.exports.bool,
  focusVisibleClassName: propTypes.exports.string,
  href: propTypes.exports.any,
  LinkComponent: propTypes.exports.elementType,
  onBlur: propTypes.exports.func,
  onClick: propTypes.exports.func,
  onContextMenu: propTypes.exports.func,
  onDragLeave: propTypes.exports.func,
  onFocus: propTypes.exports.func,
  onFocusVisible: propTypes.exports.func,
  onKeyDown: propTypes.exports.func,
  onKeyUp: propTypes.exports.func,
  onMouseDown: propTypes.exports.func,
  onMouseLeave: propTypes.exports.func,
  onMouseUp: propTypes.exports.func,
  onTouchEnd: propTypes.exports.func,
  onTouchMove: propTypes.exports.func,
  onTouchStart: propTypes.exports.func,
  sx: propTypes.exports.oneOfType([propTypes.exports.arrayOf(propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object, propTypes.exports.bool])), propTypes.exports.func, propTypes.exports.object]),
  tabIndex: propTypes.exports.number,
  TouchRippleProps: propTypes.exports.object,
  touchRippleRef: propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.shape({
    current: propTypes.exports.shape({
      pulsate: propTypes.exports.func.isRequired,
      start: propTypes.exports.func.isRequired,
      stop: propTypes.exports.func.isRequired
    })
  })]),
  type: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "reset", "submit"]), propTypes.exports.string])
});
const ButtonBase$1 = ButtonBase;
function getButtonUtilityClass(e) {
  return generateUtilityClass("MuiButton", e);
}
const buttonClasses = generateUtilityClasses("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]), buttonClasses$1 = buttonClasses, ButtonGroupContext = /* @__PURE__ */ React.createContext({});
process.env.NODE_ENV !== "production" && (ButtonGroupContext.displayName = "ButtonGroupContext");
const ButtonGroupContext$1 = ButtonGroupContext, _excluded = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"], useUtilityClasses = (e) => {
  const {
    color: n,
    disableElevation: o,
    fullWidth: s,
    size: u,
    variant: d,
    classes: g
  } = e, m = {
    root: ["root", d, `${d}${capitalize(n)}`, `size${capitalize(u)}`, `${d}Size${capitalize(u)}`, n === "inherit" && "colorInherit", o && "disableElevation", s && "fullWidth"],
    label: ["label"],
    startIcon: ["startIcon", `iconSize${capitalize(u)}`],
    endIcon: ["endIcon", `iconSize${capitalize(u)}`]
  }, w = composeClasses(m, getButtonUtilityClass, g);
  return _extends$1({}, g, w);
}, commonIconStyles = (e) => _extends$1({}, e.size === "small" && {
  "& > *:nth-of-type(1)": {
    fontSize: 18
  }
}, e.size === "medium" && {
  "& > *:nth-of-type(1)": {
    fontSize: 20
  }
}, e.size === "large" && {
  "& > *:nth-of-type(1)": {
    fontSize: 22
  }
}), ButtonRoot = styled$3(ButtonBase$1, {
  shouldForwardProp: (e) => rootShouldForwardProp(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, n) => {
    const {
      ownerState: o
    } = e;
    return [n.root, n[o.variant], n[`${o.variant}${capitalize(o.color)}`], n[`size${capitalize(o.size)}`], n[`${o.variant}Size${capitalize(o.size)}`], o.color === "inherit" && n.colorInherit, o.disableElevation && n.disableElevation, o.fullWidth && n.fullWidth];
  }
})(({
  theme: e,
  ownerState: n
}) => {
  var o, s;
  return _extends$1({}, e.typography.button, {
    minWidth: 64,
    padding: "6px 16px",
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": _extends$1({
      textDecoration: "none",
      backgroundColor: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : alpha(e.palette.text.primary, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, n.variant === "text" && n.color !== "inherit" && {
      backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : alpha(e.palette[n.color].main, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, n.variant === "outlined" && n.color !== "inherit" && {
      border: `1px solid ${(e.vars || e).palette[n.color].main}`,
      backgroundColor: e.vars ? `rgba(${e.vars.palette[n.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : alpha(e.palette[n.color].main, e.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, n.variant === "contained" && {
      backgroundColor: (e.vars || e).palette.grey.A100,
      boxShadow: (e.vars || e).shadows[4],
      "@media (hover: none)": {
        boxShadow: (e.vars || e).shadows[2],
        backgroundColor: (e.vars || e).palette.grey[300]
      }
    }, n.variant === "contained" && n.color !== "inherit" && {
      backgroundColor: (e.vars || e).palette[n.color].dark,
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette[n.color].main
      }
    }),
    "&:active": _extends$1({}, n.variant === "contained" && {
      boxShadow: (e.vars || e).shadows[8]
    }),
    [`&.${buttonClasses$1.focusVisible}`]: _extends$1({}, n.variant === "contained" && {
      boxShadow: (e.vars || e).shadows[6]
    }),
    [`&.${buttonClasses$1.disabled}`]: _extends$1({
      color: (e.vars || e).palette.action.disabled
    }, n.variant === "outlined" && {
      border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
    }, n.variant === "outlined" && n.color === "secondary" && {
      border: `1px solid ${(e.vars || e).palette.action.disabled}`
    }, n.variant === "contained" && {
      color: (e.vars || e).palette.action.disabled,
      boxShadow: (e.vars || e).shadows[0],
      backgroundColor: (e.vars || e).palette.action.disabledBackground
    })
  }, n.variant === "text" && {
    padding: "6px 8px"
  }, n.variant === "text" && n.color !== "inherit" && {
    color: (e.vars || e).palette[n.color].main
  }, n.variant === "outlined" && {
    padding: "5px 15px",
    border: "1px solid currentColor"
  }, n.variant === "outlined" && n.color !== "inherit" && {
    color: (e.vars || e).palette[n.color].main,
    border: e.vars ? `1px solid rgba(${e.vars.palette[n.color].mainChannel} / 0.5)` : `1px solid ${alpha(e.palette[n.color].main, 0.5)}`
  }, n.variant === "contained" && {
    color: e.vars ? e.vars.palette.text.primary : (o = (s = e.palette).getContrastText) == null ? void 0 : o.call(s, e.palette.grey[300]),
    backgroundColor: (e.vars || e).palette.grey[300],
    boxShadow: (e.vars || e).shadows[2]
  }, n.variant === "contained" && n.color !== "inherit" && {
    color: (e.vars || e).palette[n.color].contrastText,
    backgroundColor: (e.vars || e).palette[n.color].main
  }, n.color === "inherit" && {
    color: "inherit",
    borderColor: "currentColor"
  }, n.size === "small" && n.variant === "text" && {
    padding: "4px 5px",
    fontSize: e.typography.pxToRem(13)
  }, n.size === "large" && n.variant === "text" && {
    padding: "8px 11px",
    fontSize: e.typography.pxToRem(15)
  }, n.size === "small" && n.variant === "outlined" && {
    padding: "3px 9px",
    fontSize: e.typography.pxToRem(13)
  }, n.size === "large" && n.variant === "outlined" && {
    padding: "7px 21px",
    fontSize: e.typography.pxToRem(15)
  }, n.size === "small" && n.variant === "contained" && {
    padding: "4px 10px",
    fontSize: e.typography.pxToRem(13)
  }, n.size === "large" && n.variant === "contained" && {
    padding: "8px 22px",
    fontSize: e.typography.pxToRem(15)
  }, n.fullWidth && {
    width: "100%"
  });
}, ({
  ownerState: e
}) => e.disableElevation && {
  boxShadow: "none",
  "&:hover": {
    boxShadow: "none"
  },
  [`&.${buttonClasses$1.focusVisible}`]: {
    boxShadow: "none"
  },
  "&:active": {
    boxShadow: "none"
  },
  [`&.${buttonClasses$1.disabled}`]: {
    boxShadow: "none"
  }
}), ButtonStartIcon = styled$3("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, n) => {
    const {
      ownerState: o
    } = e;
    return [n.startIcon, n[`iconSize${capitalize(o.size)}`]];
  }
})(({
  ownerState: e
}) => _extends$1({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4
}, e.size === "small" && {
  marginLeft: -2
}, commonIconStyles(e))), ButtonEndIcon = styled$3("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, n) => {
    const {
      ownerState: o
    } = e;
    return [n.endIcon, n[`iconSize${capitalize(o.size)}`]];
  }
})(({
  ownerState: e
}) => _extends$1({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8
}, e.size === "small" && {
  marginRight: -2
}, commonIconStyles(e))), Button = /* @__PURE__ */ React.forwardRef(function(n, o) {
  const s = React.useContext(ButtonGroupContext$1), u = resolveProps(s, n), d = useThemeProps({
    props: u,
    name: "MuiButton"
  }), {
    children: g,
    color: m = "primary",
    component: w = "button",
    className: B,
    disabled: x = !1,
    disableElevation: C = !1,
    disableFocusRipple: v = !1,
    endIcon: y,
    focusVisibleClassName: T,
    fullWidth: M = !1,
    size: D = "medium",
    startIcon: V,
    type: O,
    variant: H = "text"
  } = d, q = _objectWithoutPropertiesLoose$1(d, _excluded), $ = _extends$1({}, d, {
    color: m,
    component: w,
    disabled: x,
    disableElevation: C,
    disableFocusRipple: v,
    fullWidth: M,
    size: D,
    type: O,
    variant: H
  }), re = useUtilityClasses($), ce = V && /* @__PURE__ */ jsx(ButtonStartIcon, {
    className: re.startIcon,
    ownerState: $,
    children: V
  }), Ie = y && /* @__PURE__ */ jsx(ButtonEndIcon, {
    className: re.endIcon,
    ownerState: $,
    children: y
  });
  return /* @__PURE__ */ jsxs(ButtonRoot, _extends$1({
    ownerState: $,
    className: clsx(s.className, re.root, B),
    component: w,
    disabled: x,
    focusRipple: !v,
    focusVisibleClassName: clsx(re.focusVisible, T),
    ref: o,
    type: O
  }, q, {
    classes: re,
    children: [ce, g, Ie]
  }));
});
process.env.NODE_ENV !== "production" && (Button.propTypes = {
  children: propTypes.exports.node,
  classes: propTypes.exports.object,
  className: propTypes.exports.string,
  color: propTypes.exports.oneOfType([propTypes.exports.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), propTypes.exports.string]),
  component: propTypes.exports.elementType,
  disabled: propTypes.exports.bool,
  disableElevation: propTypes.exports.bool,
  disableFocusRipple: propTypes.exports.bool,
  disableRipple: propTypes.exports.bool,
  endIcon: propTypes.exports.node,
  focusVisibleClassName: propTypes.exports.string,
  fullWidth: propTypes.exports.bool,
  href: propTypes.exports.string,
  size: propTypes.exports.oneOfType([propTypes.exports.oneOf(["small", "medium", "large"]), propTypes.exports.string]),
  startIcon: propTypes.exports.node,
  sx: propTypes.exports.oneOfType([propTypes.exports.arrayOf(propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object, propTypes.exports.bool])), propTypes.exports.func, propTypes.exports.object]),
  type: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "reset", "submit"]), propTypes.exports.string]),
  variant: propTypes.exports.oneOfType([propTypes.exports.oneOf(["contained", "outlined", "text"]), propTypes.exports.string])
});
const Button$1 = Button, DndContext = createContext({
  dragDropManager: void 0
});
function formatProdErrorMessage(e) {
  return "Minified Redux error #" + e + "; visit https://redux.js.org/Errors?code=" + e + " for the full message or use the non-minified dev environment for full errors. ";
}
var $$observable = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}(), randomString = function() {
  return Math.random().toString(36).substring(7).split("").join(".");
}, ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};
function isPlainObject$3(e) {
  if (typeof e != "object" || e === null)
    return !1;
  for (var n = e; Object.getPrototypeOf(n) !== null; )
    n = Object.getPrototypeOf(n);
  return Object.getPrototypeOf(e) === n;
}
function miniKindOf(e) {
  if (e === void 0)
    return "undefined";
  if (e === null)
    return "null";
  var n = typeof e;
  switch (n) {
    case "boolean":
    case "string":
    case "number":
    case "symbol":
    case "function":
      return n;
  }
  if (Array.isArray(e))
    return "array";
  if (isDate$1(e))
    return "date";
  if (isError(e))
    return "error";
  var o = ctorName(e);
  switch (o) {
    case "Symbol":
    case "Promise":
    case "WeakMap":
    case "WeakSet":
    case "Map":
    case "Set":
      return o;
  }
  return n.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function ctorName(e) {
  return typeof e.constructor == "function" ? e.constructor.name : null;
}
function isError(e) {
  return e instanceof Error || typeof e.message == "string" && e.constructor && typeof e.constructor.stackTraceLimit == "number";
}
function isDate$1(e) {
  return e instanceof Date ? !0 : typeof e.toDateString == "function" && typeof e.getDate == "function" && typeof e.setDate == "function";
}
function kindOf(e) {
  var n = typeof e;
  return process.env.NODE_ENV !== "production" && (n = miniKindOf(e)), n;
}
function createStore$1(e, n, o) {
  var s;
  if (typeof n == "function" && typeof o == "function" || typeof o == "function" && typeof arguments[3] == "function")
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(0) : "It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
  if (typeof n == "function" && typeof o > "u" && (o = n, n = void 0), typeof o < "u") {
    if (typeof o != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(1) : "Expected the enhancer to be a function. Instead, received: '" + kindOf(o) + "'");
    return o(createStore$1)(e, n);
  }
  if (typeof e != "function")
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(2) : "Expected the root reducer to be a function. Instead, received: '" + kindOf(e) + "'");
  var u = e, d = n, g = [], m = g, w = !1;
  function B() {
    m === g && (m = g.slice());
  }
  function x() {
    if (w)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(3) : "You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
    return d;
  }
  function C(M) {
    if (typeof M != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(4) : "Expected the listener to be a function. Instead, received: '" + kindOf(M) + "'");
    if (w)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(5) : "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
    var D = !0;
    return B(), m.push(M), function() {
      if (!!D) {
        if (w)
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(6) : "You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
        D = !1, B();
        var O = m.indexOf(M);
        m.splice(O, 1), g = null;
      }
    };
  }
  function v(M) {
    if (!isPlainObject$3(M))
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(M) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    if (typeof M.type > "u")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    if (w)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(9) : "Reducers may not dispatch actions.");
    try {
      w = !0, d = u(d, M);
    } finally {
      w = !1;
    }
    for (var D = g = m, V = 0; V < D.length; V++) {
      var O = D[V];
      O();
    }
    return M;
  }
  function y(M) {
    if (typeof M != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(10) : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(M));
    u = M, v({
      type: ActionTypes.REPLACE
    });
  }
  function T() {
    var M, D = C;
    return M = {
      subscribe: function(O) {
        if (typeof O != "object" || O === null)
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(11) : "Expected the observer to be an object. Instead, received: '" + kindOf(O) + "'");
        function H() {
          O.next && O.next(x());
        }
        H();
        var q = D(H);
        return {
          unsubscribe: q
        };
      }
    }, M[$$observable] = function() {
      return this;
    }, M;
  }
  return v({
    type: ActionTypes.INIT
  }), s = {
    dispatch: v,
    subscribe: C,
    getState: x,
    replaceReducer: y
  }, s[$$observable] = T, s;
}
function warning(e) {
  typeof console < "u" && typeof console.error == "function" && console.error(e);
  try {
    throw new Error(e);
  } catch {
  }
}
function isCrushed() {
}
process.env.NODE_ENV !== "production" && typeof isCrushed.name == "string" && isCrushed.name !== "isCrushed" && warning('You are currently using minified code outside of NODE_ENV === "production". This means that you are running a slower development build of Redux. You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) to ensure you have the correct code for your production build.');
function invariant(e, n, ...o) {
  if (isProduction() && n === void 0)
    throw new Error("invariant requires an error message argument");
  if (!e) {
    let s;
    if (n === void 0)
      s = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
    else {
      let u = 0;
      s = new Error(n.replace(/%s/g, function() {
        return o[u++];
      })), s.name = "Invariant Violation";
    }
    throw s.framesToPop = 1, s;
  }
}
function isProduction() {
  return typeof process < "u" && process.env.NODE_ENV === "production";
}
function get(e, n, o) {
  return n.split(".").reduce(
    (s, u) => s && s[u] ? s[u] : o || null,
    e
  );
}
function without$1(e, n) {
  return e.filter(
    (o) => o !== n
  );
}
function isObject$1(e) {
  return typeof e == "object";
}
function xor(e, n) {
  const o = /* @__PURE__ */ new Map(), s = (d) => {
    o.set(d, o.has(d) ? o.get(d) + 1 : 1);
  };
  e.forEach(s), n.forEach(s);
  const u = [];
  return o.forEach((d, g) => {
    d === 1 && u.push(g);
  }), u;
}
function intersection(e, n) {
  return e.filter(
    (o) => n.indexOf(o) > -1
  );
}
const INIT_COORDS = "dnd-core/INIT_COORDS", BEGIN_DRAG = "dnd-core/BEGIN_DRAG", PUBLISH_DRAG_SOURCE = "dnd-core/PUBLISH_DRAG_SOURCE", HOVER = "dnd-core/HOVER", DROP = "dnd-core/DROP", END_DRAG = "dnd-core/END_DRAG";
function setClientOffset(e, n) {
  return {
    type: INIT_COORDS,
    payload: {
      sourceClientOffset: n || null,
      clientOffset: e || null
    }
  };
}
const ResetCoordinatesAction = {
  type: INIT_COORDS,
  payload: {
    clientOffset: null,
    sourceClientOffset: null
  }
};
function createBeginDrag(e) {
  return function(o = [], s = {
    publishSource: !0
  }) {
    const { publishSource: u = !0, clientOffset: d, getSourceClientOffset: g } = s, m = e.getMonitor(), w = e.getRegistry();
    e.dispatch(setClientOffset(d)), verifyInvariants$1(o, m, w);
    const B = getDraggableSource(o, m);
    if (B == null) {
      e.dispatch(ResetCoordinatesAction);
      return;
    }
    let x = null;
    if (d) {
      if (!g)
        throw new Error("getSourceClientOffset must be defined");
      verifyGetSourceClientOffsetIsFunction(g), x = g(B);
    }
    e.dispatch(setClientOffset(d, x));
    const v = w.getSource(B).beginDrag(m, B);
    if (v == null)
      return;
    verifyItemIsObject(v), w.pinSource(B);
    const y = w.getSourceType(B);
    return {
      type: BEGIN_DRAG,
      payload: {
        itemType: y,
        item: v,
        sourceId: B,
        clientOffset: d || null,
        sourceClientOffset: x || null,
        isSourcePublic: !!u
      }
    };
  };
}
function verifyInvariants$1(e, n, o) {
  invariant(!n.isDragging(), "Cannot call beginDrag while dragging."), e.forEach(function(s) {
    invariant(o.getSource(s), "Expected sourceIds to be registered.");
  });
}
function verifyGetSourceClientOffsetIsFunction(e) {
  invariant(typeof e == "function", "When clientOffset is provided, getSourceClientOffset must be a function.");
}
function verifyItemIsObject(e) {
  invariant(isObject$1(e), "Item must be an object.");
}
function getDraggableSource(e, n) {
  let o = null;
  for (let s = e.length - 1; s >= 0; s--)
    if (n.canDragSource(e[s])) {
      o = e[s];
      break;
    }
  return o;
}
function _defineProperty$4(e, n, o) {
  return n in e ? Object.defineProperty(e, n, {
    value: o,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[n] = o, e;
}
function _objectSpread$4(e) {
  for (var n = 1; n < arguments.length; n++) {
    var o = arguments[n] != null ? arguments[n] : {}, s = Object.keys(o);
    typeof Object.getOwnPropertySymbols == "function" && (s = s.concat(Object.getOwnPropertySymbols(o).filter(function(u) {
      return Object.getOwnPropertyDescriptor(o, u).enumerable;
    }))), s.forEach(function(u) {
      _defineProperty$4(e, u, o[u]);
    });
  }
  return e;
}
function createDrop(e) {
  return function(o = {}) {
    const s = e.getMonitor(), u = e.getRegistry();
    verifyInvariants(s), getDroppableTargets(s).forEach((g, m) => {
      const w = determineDropResult(g, m, u, s), B = {
        type: DROP,
        payload: {
          dropResult: _objectSpread$4({}, o, w)
        }
      };
      e.dispatch(B);
    });
  };
}
function verifyInvariants(e) {
  invariant(e.isDragging(), "Cannot call drop while not dragging."), invariant(!e.didDrop(), "Cannot call drop twice during one drag operation.");
}
function determineDropResult(e, n, o, s) {
  const u = o.getTarget(e);
  let d = u ? u.drop(s, e) : void 0;
  return verifyDropResultType(d), typeof d > "u" && (d = n === 0 ? {} : s.getDropResult()), d;
}
function verifyDropResultType(e) {
  invariant(typeof e > "u" || isObject$1(e), "Drop result must either be an object or undefined.");
}
function getDroppableTargets(e) {
  const n = e.getTargetIds().filter(e.canDropOnTarget, e);
  return n.reverse(), n;
}
function createEndDrag(e) {
  return function() {
    const o = e.getMonitor(), s = e.getRegistry();
    verifyIsDragging(o);
    const u = o.getSourceId();
    return u != null && (s.getSource(u, !0).endDrag(o, u), s.unpinSource()), {
      type: END_DRAG
    };
  };
}
function verifyIsDragging(e) {
  invariant(e.isDragging(), "Cannot call endDrag while not dragging.");
}
function matchesType(e, n) {
  return n === null ? e === null : Array.isArray(e) ? e.some(
    (o) => o === n
  ) : e === n;
}
function createHover(e) {
  return function(o, { clientOffset: s } = {}) {
    verifyTargetIdsIsArray(o);
    const u = o.slice(0), d = e.getMonitor(), g = e.getRegistry(), m = d.getItemType();
    return removeNonMatchingTargetIds(u, g, m), checkInvariants(u, d, g), hoverAllTargets(u, d, g), {
      type: HOVER,
      payload: {
        targetIds: u,
        clientOffset: s || null
      }
    };
  };
}
function verifyTargetIdsIsArray(e) {
  invariant(Array.isArray(e), "Expected targetIds to be an array.");
}
function checkInvariants(e, n, o) {
  invariant(n.isDragging(), "Cannot call hover while not dragging."), invariant(!n.didDrop(), "Cannot call hover after drop.");
  for (let s = 0; s < e.length; s++) {
    const u = e[s];
    invariant(e.lastIndexOf(u) === s, "Expected targetIds to be unique in the passed array.");
    const d = o.getTarget(u);
    invariant(d, "Expected targetIds to be registered.");
  }
}
function removeNonMatchingTargetIds(e, n, o) {
  for (let s = e.length - 1; s >= 0; s--) {
    const u = e[s], d = n.getTargetType(u);
    matchesType(d, o) || e.splice(s, 1);
  }
}
function hoverAllTargets(e, n, o) {
  e.forEach(function(s) {
    o.getTarget(s).hover(n, s);
  });
}
function createPublishDragSource(e) {
  return function() {
    if (e.getMonitor().isDragging())
      return {
        type: PUBLISH_DRAG_SOURCE
      };
  };
}
function createDragDropActions(e) {
  return {
    beginDrag: createBeginDrag(e),
    publishDragSource: createPublishDragSource(e),
    hover: createHover(e),
    drop: createDrop(e),
    endDrag: createEndDrag(e)
  };
}
class DragDropManagerImpl {
  receiveBackend(n) {
    this.backend = n;
  }
  getMonitor() {
    return this.monitor;
  }
  getBackend() {
    return this.backend;
  }
  getRegistry() {
    return this.monitor.registry;
  }
  getActions() {
    const n = this, { dispatch: o } = this.store;
    function s(d) {
      return (...g) => {
        const m = d.apply(n, g);
        typeof m < "u" && o(m);
      };
    }
    const u = createDragDropActions(this);
    return Object.keys(u).reduce((d, g) => {
      const m = u[g];
      return d[g] = s(m), d;
    }, {});
  }
  dispatch(n) {
    this.store.dispatch(n);
  }
  constructor(n, o) {
    this.isSetUp = !1, this.handleRefCountChange = () => {
      const s = this.store.getState().refCount > 0;
      this.backend && (s && !this.isSetUp ? (this.backend.setup(), this.isSetUp = !0) : !s && this.isSetUp && (this.backend.teardown(), this.isSetUp = !1));
    }, this.store = n, this.monitor = o, n.subscribe(this.handleRefCountChange);
  }
}
function add(e, n) {
  return {
    x: e.x + n.x,
    y: e.y + n.y
  };
}
function subtract(e, n) {
  return {
    x: e.x - n.x,
    y: e.y - n.y
  };
}
function getSourceClientOffset(e) {
  const { clientOffset: n, initialClientOffset: o, initialSourceClientOffset: s } = e;
  return !n || !o || !s ? null : subtract(add(n, s), o);
}
function getDifferenceFromInitialOffset(e) {
  const { clientOffset: n, initialClientOffset: o } = e;
  return !n || !o ? null : subtract(n, o);
}
const NONE = [], ALL = [];
NONE.__IS_NONE__ = !0;
ALL.__IS_ALL__ = !0;
function areDirty(e, n) {
  return e === NONE ? !1 : e === ALL || typeof n > "u" ? !0 : intersection(n, e).length > 0;
}
class DragDropMonitorImpl {
  subscribeToStateChange(n, o = {}) {
    const { handlerIds: s } = o;
    invariant(typeof n == "function", "listener must be a function."), invariant(typeof s > "u" || Array.isArray(s), "handlerIds, when specified, must be an array of strings.");
    let u = this.store.getState().stateId;
    const d = () => {
      const g = this.store.getState(), m = g.stateId;
      try {
        m === u || m === u + 1 && !areDirty(g.dirtyHandlerIds, s) || n();
      } finally {
        u = m;
      }
    };
    return this.store.subscribe(d);
  }
  subscribeToOffsetChange(n) {
    invariant(typeof n == "function", "listener must be a function.");
    let o = this.store.getState().dragOffset;
    const s = () => {
      const u = this.store.getState().dragOffset;
      u !== o && (o = u, n());
    };
    return this.store.subscribe(s);
  }
  canDragSource(n) {
    if (!n)
      return !1;
    const o = this.registry.getSource(n);
    return invariant(o, `Expected to find a valid source. sourceId=${n}`), this.isDragging() ? !1 : o.canDrag(this, n);
  }
  canDropOnTarget(n) {
    if (!n)
      return !1;
    const o = this.registry.getTarget(n);
    if (invariant(o, `Expected to find a valid target. targetId=${n}`), !this.isDragging() || this.didDrop())
      return !1;
    const s = this.registry.getTargetType(n), u = this.getItemType();
    return matchesType(s, u) && o.canDrop(this, n);
  }
  isDragging() {
    return Boolean(this.getItemType());
  }
  isDraggingSource(n) {
    if (!n)
      return !1;
    const o = this.registry.getSource(n, !0);
    if (invariant(o, `Expected to find a valid source. sourceId=${n}`), !this.isDragging() || !this.isSourcePublic())
      return !1;
    const s = this.registry.getSourceType(n), u = this.getItemType();
    return s !== u ? !1 : o.isDragging(this, n);
  }
  isOverTarget(n, o = {
    shallow: !1
  }) {
    if (!n)
      return !1;
    const { shallow: s } = o;
    if (!this.isDragging())
      return !1;
    const u = this.registry.getTargetType(n), d = this.getItemType();
    if (d && !matchesType(u, d))
      return !1;
    const g = this.getTargetIds();
    if (!g.length)
      return !1;
    const m = g.indexOf(n);
    return s ? m === g.length - 1 : m > -1;
  }
  getItemType() {
    return this.store.getState().dragOperation.itemType;
  }
  getItem() {
    return this.store.getState().dragOperation.item;
  }
  getSourceId() {
    return this.store.getState().dragOperation.sourceId;
  }
  getTargetIds() {
    return this.store.getState().dragOperation.targetIds;
  }
  getDropResult() {
    return this.store.getState().dragOperation.dropResult;
  }
  didDrop() {
    return this.store.getState().dragOperation.didDrop;
  }
  isSourcePublic() {
    return Boolean(this.store.getState().dragOperation.isSourcePublic);
  }
  getInitialClientOffset() {
    return this.store.getState().dragOffset.initialClientOffset;
  }
  getInitialSourceClientOffset() {
    return this.store.getState().dragOffset.initialSourceClientOffset;
  }
  getClientOffset() {
    return this.store.getState().dragOffset.clientOffset;
  }
  getSourceClientOffset() {
    return getSourceClientOffset(this.store.getState().dragOffset);
  }
  getDifferenceFromInitialOffset() {
    return getDifferenceFromInitialOffset(this.store.getState().dragOffset);
  }
  constructor(n, o) {
    this.store = n, this.registry = o;
  }
}
const scope = typeof global < "u" ? global : self, BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;
function makeRequestCallFromTimer(e) {
  return function() {
    const o = setTimeout(u, 0), s = setInterval(u, 50);
    function u() {
      clearTimeout(o), clearInterval(s), e();
    }
  };
}
function makeRequestCallFromMutationObserver(e) {
  let n = 1;
  const o = new BrowserMutationObserver(e), s = document.createTextNode("");
  return o.observe(s, {
    characterData: !0
  }), function() {
    n = -n, s.data = n;
  };
}
const makeRequestCall = typeof BrowserMutationObserver == "function" ? makeRequestCallFromMutationObserver : makeRequestCallFromTimer;
class AsapQueue {
  enqueueTask(n) {
    const { queue: o, requestFlush: s } = this;
    o.length || (s(), this.flushing = !0), o[o.length] = n;
  }
  constructor() {
    this.queue = [], this.pendingErrors = [], this.flushing = !1, this.index = 0, this.capacity = 1024, this.flush = () => {
      const { queue: n } = this;
      for (; this.index < n.length; ) {
        const o = this.index;
        if (this.index++, n[o].call(), this.index > this.capacity) {
          for (let s = 0, u = n.length - this.index; s < u; s++)
            n[s] = n[s + this.index];
          n.length -= this.index, this.index = 0;
        }
      }
      n.length = 0, this.index = 0, this.flushing = !1;
    }, this.registerPendingError = (n) => {
      this.pendingErrors.push(n), this.requestErrorThrow();
    }, this.requestFlush = makeRequestCall(this.flush), this.requestErrorThrow = makeRequestCallFromTimer(() => {
      if (this.pendingErrors.length)
        throw this.pendingErrors.shift();
    });
  }
}
class RawTask {
  call() {
    try {
      this.task && this.task();
    } catch (n) {
      this.onError(n);
    } finally {
      this.task = null, this.release(this);
    }
  }
  constructor(n, o) {
    this.onError = n, this.release = o, this.task = null;
  }
}
class TaskFactory {
  create(n) {
    const o = this.freeTasks, s = o.length ? o.pop() : new RawTask(
      this.onError,
      (u) => o[o.length] = u
    );
    return s.task = n, s;
  }
  constructor(n) {
    this.onError = n, this.freeTasks = [];
  }
}
const asapQueue = new AsapQueue(), taskFactory = new TaskFactory(asapQueue.registerPendingError);
function asap(e) {
  asapQueue.enqueueTask(taskFactory.create(e));
}
const ADD_SOURCE = "dnd-core/ADD_SOURCE", ADD_TARGET = "dnd-core/ADD_TARGET", REMOVE_SOURCE = "dnd-core/REMOVE_SOURCE", REMOVE_TARGET = "dnd-core/REMOVE_TARGET";
function addSource(e) {
  return {
    type: ADD_SOURCE,
    payload: {
      sourceId: e
    }
  };
}
function addTarget(e) {
  return {
    type: ADD_TARGET,
    payload: {
      targetId: e
    }
  };
}
function removeSource(e) {
  return {
    type: REMOVE_SOURCE,
    payload: {
      sourceId: e
    }
  };
}
function removeTarget(e) {
  return {
    type: REMOVE_TARGET,
    payload: {
      targetId: e
    }
  };
}
function validateSourceContract(e) {
  invariant(typeof e.canDrag == "function", "Expected canDrag to be a function."), invariant(typeof e.beginDrag == "function", "Expected beginDrag to be a function."), invariant(typeof e.endDrag == "function", "Expected endDrag to be a function.");
}
function validateTargetContract(e) {
  invariant(typeof e.canDrop == "function", "Expected canDrop to be a function."), invariant(typeof e.hover == "function", "Expected hover to be a function."), invariant(typeof e.drop == "function", "Expected beginDrag to be a function.");
}
function validateType(e, n) {
  if (n && Array.isArray(e)) {
    e.forEach(
      (o) => validateType(o, !1)
    );
    return;
  }
  invariant(typeof e == "string" || typeof e == "symbol", n ? "Type can only be a string, a symbol, or an array of either." : "Type can only be a string or a symbol.");
}
var HandlerRole;
(function(e) {
  e.SOURCE = "SOURCE", e.TARGET = "TARGET";
})(HandlerRole || (HandlerRole = {}));
let nextUniqueId = 0;
function getNextUniqueId() {
  return nextUniqueId++;
}
function getNextHandlerId(e) {
  const n = getNextUniqueId().toString();
  switch (e) {
    case HandlerRole.SOURCE:
      return `S${n}`;
    case HandlerRole.TARGET:
      return `T${n}`;
    default:
      throw new Error(`Unknown Handler Role: ${e}`);
  }
}
function parseRoleFromHandlerId(e) {
  switch (e[0]) {
    case "S":
      return HandlerRole.SOURCE;
    case "T":
      return HandlerRole.TARGET;
    default:
      throw new Error(`Cannot parse handler ID: ${e}`);
  }
}
function mapContainsValue(e, n) {
  const o = e.entries();
  let s = !1;
  do {
    const { done: u, value: [, d] } = o.next();
    if (d === n)
      return !0;
    s = !!u;
  } while (!s);
  return !1;
}
class HandlerRegistryImpl {
  addSource(n, o) {
    validateType(n), validateSourceContract(o);
    const s = this.addHandler(HandlerRole.SOURCE, n, o);
    return this.store.dispatch(addSource(s)), s;
  }
  addTarget(n, o) {
    validateType(n, !0), validateTargetContract(o);
    const s = this.addHandler(HandlerRole.TARGET, n, o);
    return this.store.dispatch(addTarget(s)), s;
  }
  containsHandler(n) {
    return mapContainsValue(this.dragSources, n) || mapContainsValue(this.dropTargets, n);
  }
  getSource(n, o = !1) {
    return invariant(this.isSourceId(n), "Expected a valid source ID."), o && n === this.pinnedSourceId ? this.pinnedSource : this.dragSources.get(n);
  }
  getTarget(n) {
    return invariant(this.isTargetId(n), "Expected a valid target ID."), this.dropTargets.get(n);
  }
  getSourceType(n) {
    return invariant(this.isSourceId(n), "Expected a valid source ID."), this.types.get(n);
  }
  getTargetType(n) {
    return invariant(this.isTargetId(n), "Expected a valid target ID."), this.types.get(n);
  }
  isSourceId(n) {
    return parseRoleFromHandlerId(n) === HandlerRole.SOURCE;
  }
  isTargetId(n) {
    return parseRoleFromHandlerId(n) === HandlerRole.TARGET;
  }
  removeSource(n) {
    invariant(this.getSource(n), "Expected an existing source."), this.store.dispatch(removeSource(n)), asap(() => {
      this.dragSources.delete(n), this.types.delete(n);
    });
  }
  removeTarget(n) {
    invariant(this.getTarget(n), "Expected an existing target."), this.store.dispatch(removeTarget(n)), this.dropTargets.delete(n), this.types.delete(n);
  }
  pinSource(n) {
    const o = this.getSource(n);
    invariant(o, "Expected an existing source."), this.pinnedSourceId = n, this.pinnedSource = o;
  }
  unpinSource() {
    invariant(this.pinnedSource, "No source is pinned at the time."), this.pinnedSourceId = null, this.pinnedSource = null;
  }
  addHandler(n, o, s) {
    const u = getNextHandlerId(n);
    return this.types.set(u, o), n === HandlerRole.SOURCE ? this.dragSources.set(u, s) : n === HandlerRole.TARGET && this.dropTargets.set(u, s), u;
  }
  constructor(n) {
    this.types = /* @__PURE__ */ new Map(), this.dragSources = /* @__PURE__ */ new Map(), this.dropTargets = /* @__PURE__ */ new Map(), this.pinnedSourceId = null, this.pinnedSource = null, this.store = n;
  }
}
const strictEquality = (e, n) => e === n;
function areCoordsEqual(e, n) {
  return !e && !n ? !0 : !e || !n ? !1 : e.x === n.x && e.y === n.y;
}
function areArraysEqual(e, n, o = strictEquality) {
  if (e.length !== n.length)
    return !1;
  for (let s = 0; s < e.length; ++s)
    if (!o(e[s], n[s]))
      return !1;
  return !0;
}
function reduce$5(e = NONE, n) {
  switch (n.type) {
    case HOVER:
      break;
    case ADD_SOURCE:
    case ADD_TARGET:
    case REMOVE_TARGET:
    case REMOVE_SOURCE:
      return NONE;
    case BEGIN_DRAG:
    case PUBLISH_DRAG_SOURCE:
    case END_DRAG:
    case DROP:
    default:
      return ALL;
  }
  const { targetIds: o = [], prevTargetIds: s = [] } = n.payload, u = xor(o, s);
  if (!(u.length > 0 || !areArraysEqual(o, s)))
    return NONE;
  const g = s[s.length - 1], m = o[o.length - 1];
  return g !== m && (g && u.push(g), m && u.push(m)), u;
}
function _defineProperty$3(e, n, o) {
  return n in e ? Object.defineProperty(e, n, {
    value: o,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[n] = o, e;
}
function _objectSpread$3(e) {
  for (var n = 1; n < arguments.length; n++) {
    var o = arguments[n] != null ? arguments[n] : {}, s = Object.keys(o);
    typeof Object.getOwnPropertySymbols == "function" && (s = s.concat(Object.getOwnPropertySymbols(o).filter(function(u) {
      return Object.getOwnPropertyDescriptor(o, u).enumerable;
    }))), s.forEach(function(u) {
      _defineProperty$3(e, u, o[u]);
    });
  }
  return e;
}
const initialState$1 = {
  initialSourceClientOffset: null,
  initialClientOffset: null,
  clientOffset: null
};
function reduce$4(e = initialState$1, n) {
  const { payload: o } = n;
  switch (n.type) {
    case INIT_COORDS:
    case BEGIN_DRAG:
      return {
        initialSourceClientOffset: o.sourceClientOffset,
        initialClientOffset: o.clientOffset,
        clientOffset: o.clientOffset
      };
    case HOVER:
      return areCoordsEqual(e.clientOffset, o.clientOffset) ? e : _objectSpread$3({}, e, {
        clientOffset: o.clientOffset
      });
    case END_DRAG:
    case DROP:
      return initialState$1;
    default:
      return e;
  }
}
function _defineProperty$2(e, n, o) {
  return n in e ? Object.defineProperty(e, n, {
    value: o,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[n] = o, e;
}
function _objectSpread$2(e) {
  for (var n = 1; n < arguments.length; n++) {
    var o = arguments[n] != null ? arguments[n] : {}, s = Object.keys(o);
    typeof Object.getOwnPropertySymbols == "function" && (s = s.concat(Object.getOwnPropertySymbols(o).filter(function(u) {
      return Object.getOwnPropertyDescriptor(o, u).enumerable;
    }))), s.forEach(function(u) {
      _defineProperty$2(e, u, o[u]);
    });
  }
  return e;
}
const initialState = {
  itemType: null,
  item: null,
  sourceId: null,
  targetIds: [],
  dropResult: null,
  didDrop: !1,
  isSourcePublic: null
};
function reduce$3(e = initialState, n) {
  const { payload: o } = n;
  switch (n.type) {
    case BEGIN_DRAG:
      return _objectSpread$2({}, e, {
        itemType: o.itemType,
        item: o.item,
        sourceId: o.sourceId,
        isSourcePublic: o.isSourcePublic,
        dropResult: null,
        didDrop: !1
      });
    case PUBLISH_DRAG_SOURCE:
      return _objectSpread$2({}, e, {
        isSourcePublic: !0
      });
    case HOVER:
      return _objectSpread$2({}, e, {
        targetIds: o.targetIds
      });
    case REMOVE_TARGET:
      return e.targetIds.indexOf(o.targetId) === -1 ? e : _objectSpread$2({}, e, {
        targetIds: without$1(e.targetIds, o.targetId)
      });
    case DROP:
      return _objectSpread$2({}, e, {
        dropResult: o.dropResult,
        didDrop: !0,
        targetIds: []
      });
    case END_DRAG:
      return _objectSpread$2({}, e, {
        itemType: null,
        item: null,
        sourceId: null,
        dropResult: null,
        didDrop: !1,
        isSourcePublic: null,
        targetIds: []
      });
    default:
      return e;
  }
}
function reduce$2(e = 0, n) {
  switch (n.type) {
    case ADD_SOURCE:
    case ADD_TARGET:
      return e + 1;
    case REMOVE_SOURCE:
    case REMOVE_TARGET:
      return e - 1;
    default:
      return e;
  }
}
function reduce$1(e = 0) {
  return e + 1;
}
function _defineProperty$1(e, n, o) {
  return n in e ? Object.defineProperty(e, n, {
    value: o,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[n] = o, e;
}
function _objectSpread$1(e) {
  for (var n = 1; n < arguments.length; n++) {
    var o = arguments[n] != null ? arguments[n] : {}, s = Object.keys(o);
    typeof Object.getOwnPropertySymbols == "function" && (s = s.concat(Object.getOwnPropertySymbols(o).filter(function(u) {
      return Object.getOwnPropertyDescriptor(o, u).enumerable;
    }))), s.forEach(function(u) {
      _defineProperty$1(e, u, o[u]);
    });
  }
  return e;
}
function reduce(e = {}, n) {
  return {
    dirtyHandlerIds: reduce$5(e.dirtyHandlerIds, {
      type: n.type,
      payload: _objectSpread$1({}, n.payload, {
        prevTargetIds: get(e, "dragOperation.targetIds", [])
      })
    }),
    dragOffset: reduce$4(e.dragOffset, n),
    refCount: reduce$2(e.refCount, n),
    dragOperation: reduce$3(e.dragOperation, n),
    stateId: reduce$1(e.stateId)
  };
}
function createDragDropManager(e, n = void 0, o = {}, s = !1) {
  const u = makeStoreInstance(s), d = new DragDropMonitorImpl(u, new HandlerRegistryImpl(u)), g = new DragDropManagerImpl(u, d), m = e(g, n, o);
  return g.receiveBackend(m), g;
}
function makeStoreInstance(e) {
  const n = typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION__;
  return createStore$1(reduce, e && n && n({
    name: "dnd-core",
    instanceId: "dnd-core"
  }));
}
function _objectWithoutProperties(e, n) {
  if (e == null)
    return {};
  var o = _objectWithoutPropertiesLoose(e, n), s, u;
  if (Object.getOwnPropertySymbols) {
    var d = Object.getOwnPropertySymbols(e);
    for (u = 0; u < d.length; u++)
      s = d[u], !(n.indexOf(s) >= 0) && (!Object.prototype.propertyIsEnumerable.call(e, s) || (o[s] = e[s]));
  }
  return o;
}
function _objectWithoutPropertiesLoose(e, n) {
  if (e == null)
    return {};
  var o = {}, s = Object.keys(e), u, d;
  for (d = 0; d < s.length; d++)
    u = s[d], !(n.indexOf(u) >= 0) && (o[u] = e[u]);
  return o;
}
let refCount = 0;
const INSTANCE_SYM = Symbol.for("__REACT_DND_CONTEXT_INSTANCE__");
var DndProvider = /* @__PURE__ */ memo(function(n) {
  var { children: o } = n, s = _objectWithoutProperties(n, [
    "children"
  ]);
  const [u, d] = getDndContextValue(s);
  return useEffect(() => {
    if (d) {
      const g = getGlobalContext();
      return ++refCount, () => {
        --refCount === 0 && (g[INSTANCE_SYM] = null);
      };
    }
  }, []), /* @__PURE__ */ jsx(DndContext.Provider, {
    value: u,
    children: o
  });
});
function getDndContextValue(e) {
  if ("manager" in e)
    return [
      {
        dragDropManager: e.manager
      },
      !1
    ];
  const n = createSingletonDndContext(e.backend, e.context, e.options, e.debugMode), o = !e.context;
  return [
    n,
    o
  ];
}
function createSingletonDndContext(e, n = getGlobalContext(), o, s) {
  const u = n;
  return u[INSTANCE_SYM] || (u[INSTANCE_SYM] = {
    dragDropManager: createDragDropManager(e, n, o, s)
  }), u[INSTANCE_SYM];
}
function getGlobalContext() {
  return typeof global < "u" ? global : window;
}
var fastDeepEqual = function e(n, o) {
  if (n === o)
    return !0;
  if (n && o && typeof n == "object" && typeof o == "object") {
    if (n.constructor !== o.constructor)
      return !1;
    var s, u, d;
    if (Array.isArray(n)) {
      if (s = n.length, s != o.length)
        return !1;
      for (u = s; u-- !== 0; )
        if (!e(n[u], o[u]))
          return !1;
      return !0;
    }
    if (n.constructor === RegExp)
      return n.source === o.source && n.flags === o.flags;
    if (n.valueOf !== Object.prototype.valueOf)
      return n.valueOf() === o.valueOf();
    if (n.toString !== Object.prototype.toString)
      return n.toString() === o.toString();
    if (d = Object.keys(n), s = d.length, s !== Object.keys(o).length)
      return !1;
    for (u = s; u-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(o, d[u]))
        return !1;
    for (u = s; u-- !== 0; ) {
      var g = d[u];
      if (!e(n[g], o[g]))
        return !1;
    }
    return !0;
  }
  return n !== n && o !== o;
};
const useIsomorphicLayoutEffect = typeof window < "u" ? useLayoutEffect : useEffect;
function useCollector(e, n, o) {
  const [s, u] = useState(
    () => n(e)
  ), d = useCallback(() => {
    const g = n(e);
    fastDeepEqual(s, g) || (u(g), o && o());
  }, [
    s,
    e,
    o
  ]);
  return useIsomorphicLayoutEffect(d), [
    s,
    d
  ];
}
function useMonitorOutput(e, n, o) {
  const [s, u] = useCollector(e, n, o);
  return useIsomorphicLayoutEffect(function() {
    const g = e.getHandlerId();
    if (g != null)
      return e.subscribeToStateChange(u, {
        handlerIds: [
          g
        ]
      });
  }, [
    e,
    u
  ]), s;
}
function useCollectedProps(e, n, o) {
  return useMonitorOutput(
    n,
    e || (() => ({})),
    () => o.reconnect()
  );
}
function useOptionalFactory(e, n) {
  const o = [
    ...n || []
  ];
  return n == null && typeof e != "function" && o.push(e), useMemo(() => typeof e == "function" ? e() : e, o);
}
function useConnectDragSource(e) {
  return useMemo(
    () => e.hooks.dragSource(),
    [
      e
    ]
  );
}
function useConnectDragPreview(e) {
  return useMemo(
    () => e.hooks.dragPreview(),
    [
      e
    ]
  );
}
let isCallingCanDrag = !1, isCallingIsDragging = !1;
class DragSourceMonitorImpl {
  receiveHandlerId(n) {
    this.sourceId = n;
  }
  getHandlerId() {
    return this.sourceId;
  }
  canDrag() {
    invariant(!isCallingCanDrag, "You may not call monitor.canDrag() inside your canDrag() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");
    try {
      return isCallingCanDrag = !0, this.internalMonitor.canDragSource(this.sourceId);
    } finally {
      isCallingCanDrag = !1;
    }
  }
  isDragging() {
    if (!this.sourceId)
      return !1;
    invariant(!isCallingIsDragging, "You may not call monitor.isDragging() inside your isDragging() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");
    try {
      return isCallingIsDragging = !0, this.internalMonitor.isDraggingSource(this.sourceId);
    } finally {
      isCallingIsDragging = !1;
    }
  }
  subscribeToStateChange(n, o) {
    return this.internalMonitor.subscribeToStateChange(n, o);
  }
  isDraggingSource(n) {
    return this.internalMonitor.isDraggingSource(n);
  }
  isOverTarget(n, o) {
    return this.internalMonitor.isOverTarget(n, o);
  }
  getTargetIds() {
    return this.internalMonitor.getTargetIds();
  }
  isSourcePublic() {
    return this.internalMonitor.isSourcePublic();
  }
  getSourceId() {
    return this.internalMonitor.getSourceId();
  }
  subscribeToOffsetChange(n) {
    return this.internalMonitor.subscribeToOffsetChange(n);
  }
  canDragSource(n) {
    return this.internalMonitor.canDragSource(n);
  }
  canDropOnTarget(n) {
    return this.internalMonitor.canDropOnTarget(n);
  }
  getItemType() {
    return this.internalMonitor.getItemType();
  }
  getItem() {
    return this.internalMonitor.getItem();
  }
  getDropResult() {
    return this.internalMonitor.getDropResult();
  }
  didDrop() {
    return this.internalMonitor.didDrop();
  }
  getInitialClientOffset() {
    return this.internalMonitor.getInitialClientOffset();
  }
  getInitialSourceClientOffset() {
    return this.internalMonitor.getInitialSourceClientOffset();
  }
  getSourceClientOffset() {
    return this.internalMonitor.getSourceClientOffset();
  }
  getClientOffset() {
    return this.internalMonitor.getClientOffset();
  }
  getDifferenceFromInitialOffset() {
    return this.internalMonitor.getDifferenceFromInitialOffset();
  }
  constructor(n) {
    this.sourceId = null, this.internalMonitor = n.getMonitor();
  }
}
let isCallingCanDrop = !1;
class DropTargetMonitorImpl {
  receiveHandlerId(n) {
    this.targetId = n;
  }
  getHandlerId() {
    return this.targetId;
  }
  subscribeToStateChange(n, o) {
    return this.internalMonitor.subscribeToStateChange(n, o);
  }
  canDrop() {
    if (!this.targetId)
      return !1;
    invariant(!isCallingCanDrop, "You may not call monitor.canDrop() inside your canDrop() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor");
    try {
      return isCallingCanDrop = !0, this.internalMonitor.canDropOnTarget(this.targetId);
    } finally {
      isCallingCanDrop = !1;
    }
  }
  isOver(n) {
    return this.targetId ? this.internalMonitor.isOverTarget(this.targetId, n) : !1;
  }
  getItemType() {
    return this.internalMonitor.getItemType();
  }
  getItem() {
    return this.internalMonitor.getItem();
  }
  getDropResult() {
    return this.internalMonitor.getDropResult();
  }
  didDrop() {
    return this.internalMonitor.didDrop();
  }
  getInitialClientOffset() {
    return this.internalMonitor.getInitialClientOffset();
  }
  getInitialSourceClientOffset() {
    return this.internalMonitor.getInitialSourceClientOffset();
  }
  getSourceClientOffset() {
    return this.internalMonitor.getSourceClientOffset();
  }
  getClientOffset() {
    return this.internalMonitor.getClientOffset();
  }
  getDifferenceFromInitialOffset() {
    return this.internalMonitor.getDifferenceFromInitialOffset();
  }
  constructor(n) {
    this.targetId = null, this.internalMonitor = n.getMonitor();
  }
}
function registerTarget(e, n, o) {
  const s = o.getRegistry(), u = s.addTarget(e, n);
  return [
    u,
    () => s.removeTarget(u)
  ];
}
function registerSource(e, n, o) {
  const s = o.getRegistry(), u = s.addSource(e, n);
  return [
    u,
    () => s.removeSource(u)
  ];
}
function shallowEqual(e, n, o, s) {
  let u = o ? o.call(s, e, n) : void 0;
  if (u !== void 0)
    return !!u;
  if (e === n)
    return !0;
  if (typeof e != "object" || !e || typeof n != "object" || !n)
    return !1;
  const d = Object.keys(e), g = Object.keys(n);
  if (d.length !== g.length)
    return !1;
  const m = Object.prototype.hasOwnProperty.bind(n);
  for (let w = 0; w < d.length; w++) {
    const B = d[w];
    if (!m(B))
      return !1;
    const x = e[B], C = n[B];
    if (u = o ? o.call(s, x, C, B) : void 0, u === !1 || u === void 0 && x !== C)
      return !1;
  }
  return !0;
}
function isRef(e) {
  return e !== null && typeof e == "object" && Object.prototype.hasOwnProperty.call(e, "current");
}
function throwIfCompositeComponentElement(e) {
  if (typeof e.type == "string")
    return;
  const n = e.type.displayName || e.type.name || "the component";
  throw new Error(`Only native element nodes can now be passed to React DnD connectors.You can either wrap ${n} into a <div>, or turn it into a drag source or a drop target itself.`);
}
function wrapHookToRecognizeElement(e) {
  return (n = null, o = null) => {
    if (!isValidElement(n)) {
      const d = n;
      return e(d, o), d;
    }
    const s = n;
    return throwIfCompositeComponentElement(s), cloneWithRef(s, o ? (d) => e(d, o) : e);
  };
}
function wrapConnectorHooks(e) {
  const n = {};
  return Object.keys(e).forEach((o) => {
    const s = e[o];
    if (o.endsWith("Ref"))
      n[o] = e[o];
    else {
      const u = wrapHookToRecognizeElement(s);
      n[o] = () => u;
    }
  }), n;
}
function setRef(e, n) {
  typeof e == "function" ? e(n) : e.current = n;
}
function cloneWithRef(e, n) {
  const o = e.ref;
  return invariant(typeof o != "string", "Cannot connect React DnD to an element with an existing string ref. Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs"), o ? cloneElement(e, {
    ref: (s) => {
      setRef(o, s), setRef(n, s);
    }
  }) : cloneElement(e, {
    ref: n
  });
}
class SourceConnector {
  receiveHandlerId(n) {
    this.handlerId !== n && (this.handlerId = n, this.reconnect());
  }
  get connectTarget() {
    return this.dragSource;
  }
  get dragSourceOptions() {
    return this.dragSourceOptionsInternal;
  }
  set dragSourceOptions(n) {
    this.dragSourceOptionsInternal = n;
  }
  get dragPreviewOptions() {
    return this.dragPreviewOptionsInternal;
  }
  set dragPreviewOptions(n) {
    this.dragPreviewOptionsInternal = n;
  }
  reconnect() {
    const n = this.reconnectDragSource();
    this.reconnectDragPreview(n);
  }
  reconnectDragSource() {
    const n = this.dragSource, o = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();
    return o && this.disconnectDragSource(), this.handlerId ? n ? (o && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDragSource = n, this.lastConnectedDragSourceOptions = this.dragSourceOptions, this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, n, this.dragSourceOptions)), o) : (this.lastConnectedDragSource = n, o) : o;
  }
  reconnectDragPreview(n = !1) {
    const o = this.dragPreview, s = n || this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();
    if (s && this.disconnectDragPreview(), !!this.handlerId) {
      if (!o) {
        this.lastConnectedDragPreview = o;
        return;
      }
      s && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDragPreview = o, this.lastConnectedDragPreviewOptions = this.dragPreviewOptions, this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, o, this.dragPreviewOptions));
    }
  }
  didHandlerIdChange() {
    return this.lastConnectedHandlerId !== this.handlerId;
  }
  didConnectedDragSourceChange() {
    return this.lastConnectedDragSource !== this.dragSource;
  }
  didConnectedDragPreviewChange() {
    return this.lastConnectedDragPreview !== this.dragPreview;
  }
  didDragSourceOptionsChange() {
    return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);
  }
  didDragPreviewOptionsChange() {
    return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);
  }
  disconnectDragSource() {
    this.dragSourceUnsubscribe && (this.dragSourceUnsubscribe(), this.dragSourceUnsubscribe = void 0);
  }
  disconnectDragPreview() {
    this.dragPreviewUnsubscribe && (this.dragPreviewUnsubscribe(), this.dragPreviewUnsubscribe = void 0, this.dragPreviewNode = null, this.dragPreviewRef = null);
  }
  get dragSource() {
    return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;
  }
  get dragPreview() {
    return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;
  }
  clearDragSource() {
    this.dragSourceNode = null, this.dragSourceRef = null;
  }
  clearDragPreview() {
    this.dragPreviewNode = null, this.dragPreviewRef = null;
  }
  constructor(n) {
    this.hooks = wrapConnectorHooks({
      dragSource: (o, s) => {
        this.clearDragSource(), this.dragSourceOptions = s || null, isRef(o) ? this.dragSourceRef = o : this.dragSourceNode = o, this.reconnectDragSource();
      },
      dragPreview: (o, s) => {
        this.clearDragPreview(), this.dragPreviewOptions = s || null, isRef(o) ? this.dragPreviewRef = o : this.dragPreviewNode = o, this.reconnectDragPreview();
      }
    }), this.handlerId = null, this.dragSourceRef = null, this.dragSourceOptionsInternal = null, this.dragPreviewRef = null, this.dragPreviewOptionsInternal = null, this.lastConnectedHandlerId = null, this.lastConnectedDragSource = null, this.lastConnectedDragSourceOptions = null, this.lastConnectedDragPreview = null, this.lastConnectedDragPreviewOptions = null, this.backend = n;
  }
}
class TargetConnector {
  get connectTarget() {
    return this.dropTarget;
  }
  reconnect() {
    const n = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();
    n && this.disconnectDropTarget();
    const o = this.dropTarget;
    if (!!this.handlerId) {
      if (!o) {
        this.lastConnectedDropTarget = o;
        return;
      }
      n && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDropTarget = o, this.lastConnectedDropTargetOptions = this.dropTargetOptions, this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, o, this.dropTargetOptions));
    }
  }
  receiveHandlerId(n) {
    n !== this.handlerId && (this.handlerId = n, this.reconnect());
  }
  get dropTargetOptions() {
    return this.dropTargetOptionsInternal;
  }
  set dropTargetOptions(n) {
    this.dropTargetOptionsInternal = n;
  }
  didHandlerIdChange() {
    return this.lastConnectedHandlerId !== this.handlerId;
  }
  didDropTargetChange() {
    return this.lastConnectedDropTarget !== this.dropTarget;
  }
  didOptionsChange() {
    return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);
  }
  disconnectDropTarget() {
    this.unsubscribeDropTarget && (this.unsubscribeDropTarget(), this.unsubscribeDropTarget = void 0);
  }
  get dropTarget() {
    return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;
  }
  clearDropTarget() {
    this.dropTargetRef = null, this.dropTargetNode = null;
  }
  constructor(n) {
    this.hooks = wrapConnectorHooks({
      dropTarget: (o, s) => {
        this.clearDropTarget(), this.dropTargetOptions = s, isRef(o) ? this.dropTargetRef = o : this.dropTargetNode = o, this.reconnect();
      }
    }), this.handlerId = null, this.dropTargetRef = null, this.dropTargetOptionsInternal = null, this.lastConnectedHandlerId = null, this.lastConnectedDropTarget = null, this.lastConnectedDropTargetOptions = null, this.backend = n;
  }
}
function useDragDropManager() {
  const { dragDropManager: e } = useContext(DndContext);
  return invariant(e != null, "Expected drag drop context"), e;
}
function useDragSourceConnector(e, n) {
  const o = useDragDropManager(), s = useMemo(
    () => new SourceConnector(o.getBackend()),
    [
      o
    ]
  );
  return useIsomorphicLayoutEffect(() => (s.dragSourceOptions = e || null, s.reconnect(), () => s.disconnectDragSource()), [
    s,
    e
  ]), useIsomorphicLayoutEffect(() => (s.dragPreviewOptions = n || null, s.reconnect(), () => s.disconnectDragPreview()), [
    s,
    n
  ]), s;
}
function useDragSourceMonitor() {
  const e = useDragDropManager();
  return useMemo(
    () => new DragSourceMonitorImpl(e),
    [
      e
    ]
  );
}
class DragSourceImpl {
  beginDrag() {
    const n = this.spec, o = this.monitor;
    let s = null;
    return typeof n.item == "object" ? s = n.item : typeof n.item == "function" ? s = n.item(o) : s = {}, s != null ? s : null;
  }
  canDrag() {
    const n = this.spec, o = this.monitor;
    return typeof n.canDrag == "boolean" ? n.canDrag : typeof n.canDrag == "function" ? n.canDrag(o) : !0;
  }
  isDragging(n, o) {
    const s = this.spec, u = this.monitor, { isDragging: d } = s;
    return d ? d(u) : o === n.getSourceId();
  }
  endDrag() {
    const n = this.spec, o = this.monitor, s = this.connector, { end: u } = n;
    u && u(o.getItem(), o), s.reconnect();
  }
  constructor(n, o, s) {
    this.spec = n, this.monitor = o, this.connector = s;
  }
}
function useDragSource(e, n, o) {
  const s = useMemo(
    () => new DragSourceImpl(e, n, o),
    [
      n,
      o
    ]
  );
  return useEffect(() => {
    s.spec = e;
  }, [
    e
  ]), s;
}
function useDragType(e) {
  return useMemo(() => {
    const n = e.type;
    return invariant(n != null, "spec.type must be defined"), n;
  }, [
    e
  ]);
}
function useRegisteredDragSource(e, n, o) {
  const s = useDragDropManager(), u = useDragSource(e, n, o), d = useDragType(e);
  useIsomorphicLayoutEffect(function() {
    if (d != null) {
      const [m, w] = registerSource(d, u, s);
      return n.receiveHandlerId(m), o.receiveHandlerId(m), w;
    }
  }, [
    s,
    n,
    o,
    u,
    d
  ]);
}
function useDrag(e, n) {
  const o = useOptionalFactory(e, n);
  invariant(!o.begin, "useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)");
  const s = useDragSourceMonitor(), u = useDragSourceConnector(o.options, o.previewOptions);
  return useRegisteredDragSource(o, s, u), [
    useCollectedProps(o.collect, s, u),
    useConnectDragSource(u),
    useConnectDragPreview(u)
  ];
}
function useConnectDropTarget(e) {
  return useMemo(
    () => e.hooks.dropTarget(),
    [
      e
    ]
  );
}
function useDropTargetConnector(e) {
  const n = useDragDropManager(), o = useMemo(
    () => new TargetConnector(n.getBackend()),
    [
      n
    ]
  );
  return useIsomorphicLayoutEffect(() => (o.dropTargetOptions = e || null, o.reconnect(), () => o.disconnectDropTarget()), [
    e
  ]), o;
}
function useDropTargetMonitor() {
  const e = useDragDropManager();
  return useMemo(
    () => new DropTargetMonitorImpl(e),
    [
      e
    ]
  );
}
function useAccept(e) {
  const { accept: n } = e;
  return useMemo(() => (invariant(e.accept != null, "accept must be defined"), Array.isArray(n) ? n : [
    n
  ]), [
    n
  ]);
}
class DropTargetImpl {
  canDrop() {
    const n = this.spec, o = this.monitor;
    return n.canDrop ? n.canDrop(o.getItem(), o) : !0;
  }
  hover() {
    const n = this.spec, o = this.monitor;
    n.hover && n.hover(o.getItem(), o);
  }
  drop() {
    const n = this.spec, o = this.monitor;
    if (n.drop)
      return n.drop(o.getItem(), o);
  }
  constructor(n, o) {
    this.spec = n, this.monitor = o;
  }
}
function useDropTarget(e, n) {
  const o = useMemo(
    () => new DropTargetImpl(e, n),
    [
      n
    ]
  );
  return useEffect(() => {
    o.spec = e;
  }, [
    e
  ]), o;
}
function useRegisteredDropTarget(e, n, o) {
  const s = useDragDropManager(), u = useDropTarget(e, n), d = useAccept(e);
  useIsomorphicLayoutEffect(function() {
    const [m, w] = registerTarget(d, u, s);
    return n.receiveHandlerId(m), o.receiveHandlerId(m), w;
  }, [
    s,
    n,
    u,
    o,
    d.map(
      (g) => g.toString()
    ).join("|")
  ]);
}
function useDrop(e, n) {
  const o = useOptionalFactory(e, n), s = useDropTargetMonitor(), u = useDropTargetConnector(o.options);
  return useRegisteredDropTarget(o, s, u), [
    useCollectedProps(o.collect, s, u),
    useConnectDropTarget(u)
  ];
}
function memoize$1(e) {
  let n = null;
  return () => (n == null && (n = e()), n);
}
function without(e, n) {
  return e.filter(
    (o) => o !== n
  );
}
function union(e, n) {
  const o = /* @__PURE__ */ new Set(), s = (d) => o.add(d);
  e.forEach(s), n.forEach(s);
  const u = [];
  return o.forEach(
    (d) => u.push(d)
  ), u;
}
class EnterLeaveCounter {
  enter(n) {
    const o = this.entered.length, s = (u) => this.isNodeInDocument(u) && (!u.contains || u.contains(n));
    return this.entered = union(this.entered.filter(s), [
      n
    ]), o === 0 && this.entered.length > 0;
  }
  leave(n) {
    const o = this.entered.length;
    return this.entered = without(this.entered.filter(this.isNodeInDocument), n), o > 0 && this.entered.length === 0;
  }
  reset() {
    this.entered = [];
  }
  constructor(n) {
    this.entered = [], this.isNodeInDocument = n;
  }
}
class NativeDragSource {
  initializeExposedProperties() {
    Object.keys(this.config.exposeProperties).forEach((n) => {
      Object.defineProperty(this.item, n, {
        configurable: !0,
        enumerable: !0,
        get() {
          return console.warn(`Browser doesn't allow reading "${n}" until the drop event.`), null;
        }
      });
    });
  }
  loadDataTransfer(n) {
    if (n) {
      const o = {};
      Object.keys(this.config.exposeProperties).forEach((s) => {
        const u = this.config.exposeProperties[s];
        u != null && (o[s] = {
          value: u(n, this.config.matchesTypes),
          configurable: !0,
          enumerable: !0
        });
      }), Object.defineProperties(this.item, o);
    }
  }
  canDrag() {
    return !0;
  }
  beginDrag() {
    return this.item;
  }
  isDragging(n, o) {
    return o === n.getSourceId();
  }
  endDrag() {
  }
  constructor(n) {
    this.config = n, this.item = {}, this.initializeExposedProperties();
  }
}
const FILE = "__NATIVE_FILE__", URL$4 = "__NATIVE_URL__", TEXT = "__NATIVE_TEXT__", HTML = "__NATIVE_HTML__", NativeTypes = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  FILE,
  URL: URL$4,
  TEXT,
  HTML
}, Symbol.toStringTag, { value: "Module" }));
function getDataFromDataTransfer(e, n, o) {
  const s = n.reduce(
    (u, d) => u || e.getData(d),
    ""
  );
  return s != null ? s : o;
}
const nativeTypesConfig = {
  [FILE]: {
    exposeProperties: {
      files: (e) => Array.prototype.slice.call(e.files),
      items: (e) => e.items,
      dataTransfer: (e) => e
    },
    matchesTypes: [
      "Files"
    ]
  },
  [HTML]: {
    exposeProperties: {
      html: (e, n) => getDataFromDataTransfer(e, n, ""),
      dataTransfer: (e) => e
    },
    matchesTypes: [
      "Html",
      "text/html"
    ]
  },
  [URL$4]: {
    exposeProperties: {
      urls: (e, n) => getDataFromDataTransfer(e, n, "").split(`
`),
      dataTransfer: (e) => e
    },
    matchesTypes: [
      "Url",
      "text/uri-list"
    ]
  },
  [TEXT]: {
    exposeProperties: {
      text: (e, n) => getDataFromDataTransfer(e, n, ""),
      dataTransfer: (e) => e
    },
    matchesTypes: [
      "Text",
      "text/plain"
    ]
  }
};
function createNativeDragSource(e, n) {
  const o = nativeTypesConfig[e];
  if (!o)
    throw new Error(`native type ${e} has no configuration`);
  const s = new NativeDragSource(o);
  return s.loadDataTransfer(n), s;
}
function matchNativeItemType(e) {
  if (!e)
    return null;
  const n = Array.prototype.slice.call(e.types || []);
  return Object.keys(nativeTypesConfig).filter((o) => {
    const s = nativeTypesConfig[o];
    return s != null && s.matchesTypes ? s.matchesTypes.some(
      (u) => n.indexOf(u) > -1
    ) : !1;
  })[0] || null;
}
const isFirefox = memoize$1(
  () => /firefox/i.test(navigator.userAgent)
), isSafari = memoize$1(
  () => Boolean(window.safari)
);
class MonotonicInterpolant {
  interpolate(n) {
    const { xs: o, ys: s, c1s: u, c2s: d, c3s: g } = this;
    let m = o.length - 1;
    if (n === o[m])
      return s[m];
    let w = 0, B = g.length - 1, x;
    for (; w <= B; ) {
      x = Math.floor(0.5 * (w + B));
      const y = o[x];
      if (y < n)
        w = x + 1;
      else if (y > n)
        B = x - 1;
      else
        return s[x];
    }
    m = Math.max(0, B);
    const C = n - o[m], v = C * C;
    return s[m] + u[m] * C + d[m] * v + g[m] * C * v;
  }
  constructor(n, o) {
    const { length: s } = n, u = [];
    for (let y = 0; y < s; y++)
      u.push(y);
    u.sort(
      (y, T) => n[y] < n[T] ? -1 : 1
    );
    const d = [], g = [];
    let m, w;
    for (let y = 0; y < s - 1; y++)
      m = n[y + 1] - n[y], w = o[y + 1] - o[y], d.push(m), g.push(w / m);
    const B = [
      g[0]
    ];
    for (let y = 0; y < d.length - 1; y++) {
      const T = g[y], M = g[y + 1];
      if (T * M <= 0)
        B.push(0);
      else {
        m = d[y];
        const D = d[y + 1], V = m + D;
        B.push(3 * V / ((V + D) / T + (V + m) / M));
      }
    }
    B.push(g[g.length - 1]);
    const x = [], C = [];
    let v;
    for (let y = 0; y < B.length - 1; y++) {
      v = g[y];
      const T = B[y], M = 1 / d[y], D = T + B[y + 1] - v - v;
      x.push((v - T - D) * M), C.push(D * M * M);
    }
    this.xs = n, this.ys = o, this.c1s = B, this.c2s = x, this.c3s = C;
  }
}
const ELEMENT_NODE = 1;
function getNodeClientOffset(e) {
  const n = e.nodeType === ELEMENT_NODE ? e : e.parentElement;
  if (!n)
    return null;
  const { top: o, left: s } = n.getBoundingClientRect();
  return {
    x: s,
    y: o
  };
}
function getEventClientOffset(e) {
  return {
    x: e.clientX,
    y: e.clientY
  };
}
function isImageNode(e) {
  var n;
  return e.nodeName === "IMG" && (isFirefox() || !(!((n = document.documentElement) === null || n === void 0) && n.contains(e)));
}
function getDragPreviewSize(e, n, o, s) {
  let u = e ? n.width : o, d = e ? n.height : s;
  return isSafari() && e && (d /= window.devicePixelRatio, u /= window.devicePixelRatio), {
    dragPreviewWidth: u,
    dragPreviewHeight: d
  };
}
function getDragPreviewOffset(e, n, o, s, u) {
  const d = isImageNode(n), m = getNodeClientOffset(d ? e : n), w = {
    x: o.x - m.x,
    y: o.y - m.y
  }, { offsetWidth: B, offsetHeight: x } = e, { anchorX: C, anchorY: v } = s, { dragPreviewWidth: y, dragPreviewHeight: T } = getDragPreviewSize(d, n, B, x), M = () => {
    let re = new MonotonicInterpolant([
      0,
      0.5,
      1
    ], [
      w.y,
      w.y / x * T,
      w.y + T - x
    ]).interpolate(v);
    return isSafari() && d && (re += (window.devicePixelRatio - 1) * T), re;
  }, D = () => new MonotonicInterpolant([
    0,
    0.5,
    1
  ], [
    w.x,
    w.x / B * y,
    w.x + y - B
  ]).interpolate(C), { offsetX: V, offsetY: O } = u, H = V === 0 || V, q = O === 0 || O;
  return {
    x: H ? V : D(),
    y: q ? O : M()
  };
}
class OptionsReader {
  get window() {
    if (this.globalContext)
      return this.globalContext;
    if (typeof window < "u")
      return window;
  }
  get document() {
    var n;
    return !((n = this.globalContext) === null || n === void 0) && n.document ? this.globalContext.document : this.window ? this.window.document : void 0;
  }
  get rootElement() {
    var n;
    return ((n = this.optionsArgs) === null || n === void 0 ? void 0 : n.rootElement) || this.window;
  }
  constructor(n, o) {
    this.ownerDocument = null, this.globalContext = n, this.optionsArgs = o;
  }
}
function _defineProperty(e, n, o) {
  return n in e ? Object.defineProperty(e, n, {
    value: o,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[n] = o, e;
}
function _objectSpread(e) {
  for (var n = 1; n < arguments.length; n++) {
    var o = arguments[n] != null ? arguments[n] : {}, s = Object.keys(o);
    typeof Object.getOwnPropertySymbols == "function" && (s = s.concat(Object.getOwnPropertySymbols(o).filter(function(u) {
      return Object.getOwnPropertyDescriptor(o, u).enumerable;
    }))), s.forEach(function(u) {
      _defineProperty(e, u, o[u]);
    });
  }
  return e;
}
class HTML5BackendImpl {
  profile() {
    var n, o;
    return {
      sourcePreviewNodes: this.sourcePreviewNodes.size,
      sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,
      sourceNodeOptions: this.sourceNodeOptions.size,
      sourceNodes: this.sourceNodes.size,
      dragStartSourceIds: ((n = this.dragStartSourceIds) === null || n === void 0 ? void 0 : n.length) || 0,
      dropTargetIds: this.dropTargetIds.length,
      dragEnterTargetIds: this.dragEnterTargetIds.length,
      dragOverTargetIds: ((o = this.dragOverTargetIds) === null || o === void 0 ? void 0 : o.length) || 0
    };
  }
  get window() {
    return this.options.window;
  }
  get document() {
    return this.options.document;
  }
  get rootElement() {
    return this.options.rootElement;
  }
  setup() {
    const n = this.rootElement;
    if (n !== void 0) {
      if (n.__isReactDndBackendSetUp)
        throw new Error("Cannot have two HTML5 backends at the same time.");
      n.__isReactDndBackendSetUp = !0, this.addEventListeners(n);
    }
  }
  teardown() {
    const n = this.rootElement;
    if (n !== void 0 && (n.__isReactDndBackendSetUp = !1, this.removeEventListeners(this.rootElement), this.clearCurrentDragSourceNode(), this.asyncEndDragFrameId)) {
      var o;
      (o = this.window) === null || o === void 0 || o.cancelAnimationFrame(this.asyncEndDragFrameId);
    }
  }
  connectDragPreview(n, o, s) {
    return this.sourcePreviewNodeOptions.set(n, s), this.sourcePreviewNodes.set(n, o), () => {
      this.sourcePreviewNodes.delete(n), this.sourcePreviewNodeOptions.delete(n);
    };
  }
  connectDragSource(n, o, s) {
    this.sourceNodes.set(n, o), this.sourceNodeOptions.set(n, s);
    const u = (g) => this.handleDragStart(g, n), d = (g) => this.handleSelectStart(g);
    return o.setAttribute("draggable", "true"), o.addEventListener("dragstart", u), o.addEventListener("selectstart", d), () => {
      this.sourceNodes.delete(n), this.sourceNodeOptions.delete(n), o.removeEventListener("dragstart", u), o.removeEventListener("selectstart", d), o.setAttribute("draggable", "false");
    };
  }
  connectDropTarget(n, o) {
    const s = (g) => this.handleDragEnter(g, n), u = (g) => this.handleDragOver(g, n), d = (g) => this.handleDrop(g, n);
    return o.addEventListener("dragenter", s), o.addEventListener("dragover", u), o.addEventListener("drop", d), () => {
      o.removeEventListener("dragenter", s), o.removeEventListener("dragover", u), o.removeEventListener("drop", d);
    };
  }
  addEventListeners(n) {
    !n.addEventListener || (n.addEventListener("dragstart", this.handleTopDragStart), n.addEventListener("dragstart", this.handleTopDragStartCapture, !0), n.addEventListener("dragend", this.handleTopDragEndCapture, !0), n.addEventListener("dragenter", this.handleTopDragEnter), n.addEventListener("dragenter", this.handleTopDragEnterCapture, !0), n.addEventListener("dragleave", this.handleTopDragLeaveCapture, !0), n.addEventListener("dragover", this.handleTopDragOver), n.addEventListener("dragover", this.handleTopDragOverCapture, !0), n.addEventListener("drop", this.handleTopDrop), n.addEventListener("drop", this.handleTopDropCapture, !0));
  }
  removeEventListeners(n) {
    !n.removeEventListener || (n.removeEventListener("dragstart", this.handleTopDragStart), n.removeEventListener("dragstart", this.handleTopDragStartCapture, !0), n.removeEventListener("dragend", this.handleTopDragEndCapture, !0), n.removeEventListener("dragenter", this.handleTopDragEnter), n.removeEventListener("dragenter", this.handleTopDragEnterCapture, !0), n.removeEventListener("dragleave", this.handleTopDragLeaveCapture, !0), n.removeEventListener("dragover", this.handleTopDragOver), n.removeEventListener("dragover", this.handleTopDragOverCapture, !0), n.removeEventListener("drop", this.handleTopDrop), n.removeEventListener("drop", this.handleTopDropCapture, !0));
  }
  getCurrentSourceNodeOptions() {
    const n = this.monitor.getSourceId(), o = this.sourceNodeOptions.get(n);
    return _objectSpread({
      dropEffect: this.altKeyPressed ? "copy" : "move"
    }, o || {});
  }
  getCurrentDropEffect() {
    return this.isDraggingNativeItem() ? "copy" : this.getCurrentSourceNodeOptions().dropEffect;
  }
  getCurrentSourcePreviewNodeOptions() {
    const n = this.monitor.getSourceId(), o = this.sourcePreviewNodeOptions.get(n);
    return _objectSpread({
      anchorX: 0.5,
      anchorY: 0.5,
      captureDraggingState: !1
    }, o || {});
  }
  isDraggingNativeItem() {
    const n = this.monitor.getItemType();
    return Object.keys(NativeTypes).some(
      (o) => NativeTypes[o] === n
    );
  }
  beginDragNativeItem(n, o) {
    this.clearCurrentDragSourceNode(), this.currentNativeSource = createNativeDragSource(n, o), this.currentNativeHandle = this.registry.addSource(n, this.currentNativeSource), this.actions.beginDrag([
      this.currentNativeHandle
    ]);
  }
  setCurrentDragSourceNode(n) {
    this.clearCurrentDragSourceNode(), this.currentDragSourceNode = n;
    const o = 1e3;
    this.mouseMoveTimeoutTimer = setTimeout(() => {
      var s;
      return (s = this.rootElement) === null || s === void 0 ? void 0 : s.addEventListener("mousemove", this.endDragIfSourceWasRemovedFromDOM, !0);
    }, o);
  }
  clearCurrentDragSourceNode() {
    if (this.currentDragSourceNode) {
      if (this.currentDragSourceNode = null, this.rootElement) {
        var n;
        (n = this.window) === null || n === void 0 || n.clearTimeout(this.mouseMoveTimeoutTimer || void 0), this.rootElement.removeEventListener("mousemove", this.endDragIfSourceWasRemovedFromDOM, !0);
      }
      return this.mouseMoveTimeoutTimer = null, !0;
    }
    return !1;
  }
  handleDragStart(n, o) {
    n.defaultPrevented || (this.dragStartSourceIds || (this.dragStartSourceIds = []), this.dragStartSourceIds.unshift(o));
  }
  handleDragEnter(n, o) {
    this.dragEnterTargetIds.unshift(o);
  }
  handleDragOver(n, o) {
    this.dragOverTargetIds === null && (this.dragOverTargetIds = []), this.dragOverTargetIds.unshift(o);
  }
  handleDrop(n, o) {
    this.dropTargetIds.unshift(o);
  }
  constructor(n, o, s) {
    this.sourcePreviewNodes = /* @__PURE__ */ new Map(), this.sourcePreviewNodeOptions = /* @__PURE__ */ new Map(), this.sourceNodes = /* @__PURE__ */ new Map(), this.sourceNodeOptions = /* @__PURE__ */ new Map(), this.dragStartSourceIds = null, this.dropTargetIds = [], this.dragEnterTargetIds = [], this.currentNativeSource = null, this.currentNativeHandle = null, this.currentDragSourceNode = null, this.altKeyPressed = !1, this.mouseMoveTimeoutTimer = null, this.asyncEndDragFrameId = null, this.dragOverTargetIds = null, this.lastClientOffset = null, this.hoverRafId = null, this.getSourceClientOffset = (u) => {
      const d = this.sourceNodes.get(u);
      return d && getNodeClientOffset(d) || null;
    }, this.endDragNativeItem = () => {
      !this.isDraggingNativeItem() || (this.actions.endDrag(), this.currentNativeHandle && this.registry.removeSource(this.currentNativeHandle), this.currentNativeHandle = null, this.currentNativeSource = null);
    }, this.isNodeInDocument = (u) => Boolean(u && this.document && this.document.body && this.document.body.contains(u)), this.endDragIfSourceWasRemovedFromDOM = () => {
      const u = this.currentDragSourceNode;
      u == null || this.isNodeInDocument(u) || (this.clearCurrentDragSourceNode() && this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover());
    }, this.scheduleHover = (u) => {
      this.hoverRafId === null && typeof requestAnimationFrame < "u" && (this.hoverRafId = requestAnimationFrame(() => {
        this.monitor.isDragging() && this.actions.hover(u || [], {
          clientOffset: this.lastClientOffset
        }), this.hoverRafId = null;
      }));
    }, this.cancelHover = () => {
      this.hoverRafId !== null && typeof cancelAnimationFrame < "u" && (cancelAnimationFrame(this.hoverRafId), this.hoverRafId = null);
    }, this.handleTopDragStartCapture = () => {
      this.clearCurrentDragSourceNode(), this.dragStartSourceIds = [];
    }, this.handleTopDragStart = (u) => {
      if (u.defaultPrevented)
        return;
      const { dragStartSourceIds: d } = this;
      this.dragStartSourceIds = null;
      const g = getEventClientOffset(u);
      this.monitor.isDragging() && (this.actions.endDrag(), this.cancelHover()), this.actions.beginDrag(d || [], {
        publishSource: !1,
        getSourceClientOffset: this.getSourceClientOffset,
        clientOffset: g
      });
      const { dataTransfer: m } = u, w = matchNativeItemType(m);
      if (this.monitor.isDragging()) {
        if (m && typeof m.setDragImage == "function") {
          const x = this.monitor.getSourceId(), C = this.sourceNodes.get(x), v = this.sourcePreviewNodes.get(x) || C;
          if (v) {
            const { anchorX: y, anchorY: T, offsetX: M, offsetY: D } = this.getCurrentSourcePreviewNodeOptions(), H = getDragPreviewOffset(C, v, g, {
              anchorX: y,
              anchorY: T
            }, {
              offsetX: M,
              offsetY: D
            });
            m.setDragImage(v, H.x, H.y);
          }
        }
        try {
          m == null || m.setData("application/json", {});
        } catch {
        }
        this.setCurrentDragSourceNode(u.target);
        const { captureDraggingState: B } = this.getCurrentSourcePreviewNodeOptions();
        B ? this.actions.publishDragSource() : setTimeout(
          () => this.actions.publishDragSource(),
          0
        );
      } else if (w)
        this.beginDragNativeItem(w);
      else {
        if (m && !m.types && (u.target && !u.target.hasAttribute || !u.target.hasAttribute("draggable")))
          return;
        u.preventDefault();
      }
    }, this.handleTopDragEndCapture = () => {
      this.clearCurrentDragSourceNode() && this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover();
    }, this.handleTopDragEnterCapture = (u) => {
      if (this.dragEnterTargetIds = [], this.isDraggingNativeItem()) {
        var d;
        (d = this.currentNativeSource) === null || d === void 0 || d.loadDataTransfer(u.dataTransfer);
      }
      if (!this.enterLeaveCounter.enter(u.target) || this.monitor.isDragging())
        return;
      const { dataTransfer: m } = u, w = matchNativeItemType(m);
      w && this.beginDragNativeItem(w, m);
    }, this.handleTopDragEnter = (u) => {
      const { dragEnterTargetIds: d } = this;
      if (this.dragEnterTargetIds = [], !this.monitor.isDragging())
        return;
      this.altKeyPressed = u.altKey, d.length > 0 && this.actions.hover(d, {
        clientOffset: getEventClientOffset(u)
      }), d.some(
        (m) => this.monitor.canDropOnTarget(m)
      ) && (u.preventDefault(), u.dataTransfer && (u.dataTransfer.dropEffect = this.getCurrentDropEffect()));
    }, this.handleTopDragOverCapture = (u) => {
      if (this.dragOverTargetIds = [], this.isDraggingNativeItem()) {
        var d;
        (d = this.currentNativeSource) === null || d === void 0 || d.loadDataTransfer(u.dataTransfer);
      }
    }, this.handleTopDragOver = (u) => {
      const { dragOverTargetIds: d } = this;
      if (this.dragOverTargetIds = [], !this.monitor.isDragging()) {
        u.preventDefault(), u.dataTransfer && (u.dataTransfer.dropEffect = "none");
        return;
      }
      this.altKeyPressed = u.altKey, this.lastClientOffset = getEventClientOffset(u), this.scheduleHover(d), (d || []).some(
        (m) => this.monitor.canDropOnTarget(m)
      ) ? (u.preventDefault(), u.dataTransfer && (u.dataTransfer.dropEffect = this.getCurrentDropEffect())) : this.isDraggingNativeItem() ? u.preventDefault() : (u.preventDefault(), u.dataTransfer && (u.dataTransfer.dropEffect = "none"));
    }, this.handleTopDragLeaveCapture = (u) => {
      this.isDraggingNativeItem() && u.preventDefault(), this.enterLeaveCounter.leave(u.target) && (this.isDraggingNativeItem() && setTimeout(
        () => this.endDragNativeItem(),
        0
      ), this.cancelHover());
    }, this.handleTopDropCapture = (u) => {
      if (this.dropTargetIds = [], this.isDraggingNativeItem()) {
        var d;
        u.preventDefault(), (d = this.currentNativeSource) === null || d === void 0 || d.loadDataTransfer(u.dataTransfer);
      } else
        matchNativeItemType(u.dataTransfer) && u.preventDefault();
      this.enterLeaveCounter.reset();
    }, this.handleTopDrop = (u) => {
      const { dropTargetIds: d } = this;
      this.dropTargetIds = [], this.actions.hover(d, {
        clientOffset: getEventClientOffset(u)
      }), this.actions.drop({
        dropEffect: this.getCurrentDropEffect()
      }), this.isDraggingNativeItem() ? this.endDragNativeItem() : this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover();
    }, this.handleSelectStart = (u) => {
      const d = u.target;
      typeof d.dragDrop == "function" && (d.tagName === "INPUT" || d.tagName === "SELECT" || d.tagName === "TEXTAREA" || d.isContentEditable || (u.preventDefault(), d.dragDrop()));
    }, this.options = new OptionsReader(o, s), this.actions = n.getActions(), this.monitor = n.getMonitor(), this.registry = n.getRegistry(), this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);
  }
}
const HTML5Backend = function(n, o, s) {
  return new HTML5BackendImpl(n, o, s);
}, alphabet$1 = "abcdefghijklmnopqrstuvwxyz234567", lookupTable$1 = /* @__PURE__ */ Object.create(null);
for (let e = 0; e < alphabet$1.length; e++)
  lookupTable$1[alphabet$1[e]] = e;
lookupTable$1[0] = lookupTable$1.o;
lookupTable$1[1] = lookupTable$1.i;
function encode$6(e) {
  let n = 0, o = 0, s = "";
  function u(d) {
    return n < 0 ? o |= d >> -n : o = d << n & 248, n > 3 ? (n -= 8, 1) : (n < 4 && (s += alphabet$1[o >> 3], n += 5), 0);
  }
  for (let d = 0; d < e.length; )
    d += u(e[d]);
  return s + (n < 0 ? alphabet$1[o >> 3] : "");
}
function decode$6(e) {
  let n = 0, o = 0;
  const s = new Uint8Array(e.length * 4 / 3 | 0);
  let u = 0;
  function d(g) {
    let m = lookupTable$1[g.toLowerCase()];
    if (m === void 0)
      throw new Error(`Invalid character: ${JSON.stringify(g)}`);
    m <<= 3, o |= m >>> n, n += 5, n >= 8 && (s[u++] = o, n -= 8, n > 0 ? o = m << 5 - n & 255 : o = 0);
  }
  for (const g of e)
    d(g);
  return s.slice(0, u);
}
const lookUpTable$1 = new Uint32Array([
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
]);
function getCrc32$1(e) {
  const n = new Uint8Array(e);
  let o = -1;
  for (let s = 0; s < n.length; s++) {
    const d = (n[s] ^ o) & 255;
    o = lookUpTable$1[d] ^ o >>> 8;
  }
  return (o ^ -1) >>> 0;
}
var sha256$1 = { exports: {} };
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
(function(module) {
  (function() {
    var ERROR = "input is invalid type", WINDOW = typeof window == "object", root = WINDOW ? window : {};
    root.JS_SHA256_NO_WINDOW && (WINDOW = !1);
    var WEB_WORKER = !WINDOW && typeof self == "object", NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
    NODE_JS ? root = commonjsGlobal : WEB_WORKER && (root = self);
    var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && !0 && module.exports, ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", HEX_CHARS = "0123456789abcdef".split(""), EXTRA = [-2147483648, 8388608, 32768, 128], SHIFT = [24, 16, 8, 0], K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ], OUTPUT_TYPES = ["hex", "array", "digest", "arrayBuffer"], blocks = [];
    (root.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(e) {
      return Object.prototype.toString.call(e) === "[object Array]";
    }), ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(e) {
      return typeof e == "object" && e.buffer && e.buffer.constructor === ArrayBuffer;
    });
    var createOutputMethod = function(e, n) {
      return function(o) {
        return new Sha256(n, !0).update(o)[e]();
      };
    }, createMethod = function(e) {
      var n = createOutputMethod("hex", e);
      NODE_JS && (n = nodeWrap(n, e)), n.create = function() {
        return new Sha256(e);
      }, n.update = function(u) {
        return n.create().update(u);
      };
      for (var o = 0; o < OUTPUT_TYPES.length; ++o) {
        var s = OUTPUT_TYPES[o];
        n[s] = createOutputMethod(s, e);
      }
      return n;
    }, nodeWrap = function(method, is224) {
      var crypto = eval("require('crypto')"), Buffer = eval("require('buffer').Buffer"), algorithm = is224 ? "sha224" : "sha256", nodeMethod = function(e) {
        if (typeof e == "string")
          return crypto.createHash(algorithm).update(e, "utf8").digest("hex");
        if (e == null)
          throw new Error(ERROR);
        return e.constructor === ArrayBuffer && (e = new Uint8Array(e)), Array.isArray(e) || ArrayBuffer.isView(e) || e.constructor === Buffer ? crypto.createHash(algorithm).update(new Buffer(e)).digest("hex") : method(e);
      };
      return nodeMethod;
    }, createHmacOutputMethod = function(e, n) {
      return function(o, s) {
        return new HmacSha256(o, n, !0).update(s)[e]();
      };
    }, createHmacMethod = function(e) {
      var n = createHmacOutputMethod("hex", e);
      n.create = function(u) {
        return new HmacSha256(u, e);
      }, n.update = function(u, d) {
        return n.create(u).update(d);
      };
      for (var o = 0; o < OUTPUT_TYPES.length; ++o) {
        var s = OUTPUT_TYPES[o];
        n[s] = createHmacOutputMethod(s, e);
      }
      return n;
    };
    function Sha256(e, n) {
      n ? (blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], e ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = e;
    }
    Sha256.prototype.update = function(e) {
      if (!this.finalized) {
        var n, o = typeof e;
        if (o !== "string") {
          if (o === "object") {
            if (e === null)
              throw new Error(ERROR);
            if (ARRAY_BUFFER && e.constructor === ArrayBuffer)
              e = new Uint8Array(e);
            else if (!Array.isArray(e) && (!ARRAY_BUFFER || !ArrayBuffer.isView(e)))
              throw new Error(ERROR);
          } else
            throw new Error(ERROR);
          n = !0;
        }
        for (var s, u = 0, d, g = e.length, m = this.blocks; u < g; ) {
          if (this.hashed && (this.hashed = !1, m[0] = this.block, m[16] = m[1] = m[2] = m[3] = m[4] = m[5] = m[6] = m[7] = m[8] = m[9] = m[10] = m[11] = m[12] = m[13] = m[14] = m[15] = 0), n)
            for (d = this.start; u < g && d < 64; ++u)
              m[d >> 2] |= e[u] << SHIFT[d++ & 3];
          else
            for (d = this.start; u < g && d < 64; ++u)
              s = e.charCodeAt(u), s < 128 ? m[d >> 2] |= s << SHIFT[d++ & 3] : s < 2048 ? (m[d >> 2] |= (192 | s >> 6) << SHIFT[d++ & 3], m[d >> 2] |= (128 | s & 63) << SHIFT[d++ & 3]) : s < 55296 || s >= 57344 ? (m[d >> 2] |= (224 | s >> 12) << SHIFT[d++ & 3], m[d >> 2] |= (128 | s >> 6 & 63) << SHIFT[d++ & 3], m[d >> 2] |= (128 | s & 63) << SHIFT[d++ & 3]) : (s = 65536 + ((s & 1023) << 10 | e.charCodeAt(++u) & 1023), m[d >> 2] |= (240 | s >> 18) << SHIFT[d++ & 3], m[d >> 2] |= (128 | s >> 12 & 63) << SHIFT[d++ & 3], m[d >> 2] |= (128 | s >> 6 & 63) << SHIFT[d++ & 3], m[d >> 2] |= (128 | s & 63) << SHIFT[d++ & 3]);
          this.lastByteIndex = d, this.bytes += d - this.start, d >= 64 ? (this.block = m[16], this.start = d - 64, this.hash(), this.hashed = !0) : this.start = d;
        }
        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
      }
    }, Sha256.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = !0;
        var e = this.blocks, n = this.lastByteIndex;
        e[16] = this.block, e[n >> 2] |= EXTRA[n & 3], this.block = e[16], n >= 56 && (this.hashed || this.hash(), e[0] = this.block, e[16] = e[1] = e[2] = e[3] = e[4] = e[5] = e[6] = e[7] = e[8] = e[9] = e[10] = e[11] = e[12] = e[13] = e[14] = e[15] = 0), e[14] = this.hBytes << 3 | this.bytes >>> 29, e[15] = this.bytes << 3, this.hash();
      }
    }, Sha256.prototype.hash = function() {
      var e = this.h0, n = this.h1, o = this.h2, s = this.h3, u = this.h4, d = this.h5, g = this.h6, m = this.h7, w = this.blocks, B, x, C, v, y, T, M, D, V, O, H;
      for (B = 16; B < 64; ++B)
        y = w[B - 15], x = (y >>> 7 | y << 25) ^ (y >>> 18 | y << 14) ^ y >>> 3, y = w[B - 2], C = (y >>> 17 | y << 15) ^ (y >>> 19 | y << 13) ^ y >>> 10, w[B] = w[B - 16] + x + w[B - 7] + C << 0;
      for (H = n & o, B = 0; B < 64; B += 4)
        this.first ? (this.is224 ? (D = 300032, y = w[0] - 1413257819, m = y - 150054599 << 0, s = y + 24177077 << 0) : (D = 704751109, y = w[0] - 210244248, m = y - 1521486534 << 0, s = y + 143694565 << 0), this.first = !1) : (x = (e >>> 2 | e << 30) ^ (e >>> 13 | e << 19) ^ (e >>> 22 | e << 10), C = (u >>> 6 | u << 26) ^ (u >>> 11 | u << 21) ^ (u >>> 25 | u << 7), D = e & n, v = D ^ e & o ^ H, M = u & d ^ ~u & g, y = m + C + M + K[B] + w[B], T = x + v, m = s + y << 0, s = y + T << 0), x = (s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10), C = (m >>> 6 | m << 26) ^ (m >>> 11 | m << 21) ^ (m >>> 25 | m << 7), V = s & e, v = V ^ s & n ^ D, M = m & u ^ ~m & d, y = g + C + M + K[B + 1] + w[B + 1], T = x + v, g = o + y << 0, o = y + T << 0, x = (o >>> 2 | o << 30) ^ (o >>> 13 | o << 19) ^ (o >>> 22 | o << 10), C = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7), O = o & s, v = O ^ o & e ^ V, M = g & m ^ ~g & u, y = d + C + M + K[B + 2] + w[B + 2], T = x + v, d = n + y << 0, n = y + T << 0, x = (n >>> 2 | n << 30) ^ (n >>> 13 | n << 19) ^ (n >>> 22 | n << 10), C = (d >>> 6 | d << 26) ^ (d >>> 11 | d << 21) ^ (d >>> 25 | d << 7), H = n & o, v = H ^ n & s ^ O, M = d & g ^ ~d & m, y = u + C + M + K[B + 3] + w[B + 3], T = x + v, u = e + y << 0, e = y + T << 0;
      this.h0 = this.h0 + e << 0, this.h1 = this.h1 + n << 0, this.h2 = this.h2 + o << 0, this.h3 = this.h3 + s << 0, this.h4 = this.h4 + u << 0, this.h5 = this.h5 + d << 0, this.h6 = this.h6 + g << 0, this.h7 = this.h7 + m << 0;
    }, Sha256.prototype.hex = function() {
      this.finalize();
      var e = this.h0, n = this.h1, o = this.h2, s = this.h3, u = this.h4, d = this.h5, g = this.h6, m = this.h7, w = HEX_CHARS[e >> 28 & 15] + HEX_CHARS[e >> 24 & 15] + HEX_CHARS[e >> 20 & 15] + HEX_CHARS[e >> 16 & 15] + HEX_CHARS[e >> 12 & 15] + HEX_CHARS[e >> 8 & 15] + HEX_CHARS[e >> 4 & 15] + HEX_CHARS[e & 15] + HEX_CHARS[n >> 28 & 15] + HEX_CHARS[n >> 24 & 15] + HEX_CHARS[n >> 20 & 15] + HEX_CHARS[n >> 16 & 15] + HEX_CHARS[n >> 12 & 15] + HEX_CHARS[n >> 8 & 15] + HEX_CHARS[n >> 4 & 15] + HEX_CHARS[n & 15] + HEX_CHARS[o >> 28 & 15] + HEX_CHARS[o >> 24 & 15] + HEX_CHARS[o >> 20 & 15] + HEX_CHARS[o >> 16 & 15] + HEX_CHARS[o >> 12 & 15] + HEX_CHARS[o >> 8 & 15] + HEX_CHARS[o >> 4 & 15] + HEX_CHARS[o & 15] + HEX_CHARS[s >> 28 & 15] + HEX_CHARS[s >> 24 & 15] + HEX_CHARS[s >> 20 & 15] + HEX_CHARS[s >> 16 & 15] + HEX_CHARS[s >> 12 & 15] + HEX_CHARS[s >> 8 & 15] + HEX_CHARS[s >> 4 & 15] + HEX_CHARS[s & 15] + HEX_CHARS[u >> 28 & 15] + HEX_CHARS[u >> 24 & 15] + HEX_CHARS[u >> 20 & 15] + HEX_CHARS[u >> 16 & 15] + HEX_CHARS[u >> 12 & 15] + HEX_CHARS[u >> 8 & 15] + HEX_CHARS[u >> 4 & 15] + HEX_CHARS[u & 15] + HEX_CHARS[d >> 28 & 15] + HEX_CHARS[d >> 24 & 15] + HEX_CHARS[d >> 20 & 15] + HEX_CHARS[d >> 16 & 15] + HEX_CHARS[d >> 12 & 15] + HEX_CHARS[d >> 8 & 15] + HEX_CHARS[d >> 4 & 15] + HEX_CHARS[d & 15] + HEX_CHARS[g >> 28 & 15] + HEX_CHARS[g >> 24 & 15] + HEX_CHARS[g >> 20 & 15] + HEX_CHARS[g >> 16 & 15] + HEX_CHARS[g >> 12 & 15] + HEX_CHARS[g >> 8 & 15] + HEX_CHARS[g >> 4 & 15] + HEX_CHARS[g & 15];
      return this.is224 || (w += HEX_CHARS[m >> 28 & 15] + HEX_CHARS[m >> 24 & 15] + HEX_CHARS[m >> 20 & 15] + HEX_CHARS[m >> 16 & 15] + HEX_CHARS[m >> 12 & 15] + HEX_CHARS[m >> 8 & 15] + HEX_CHARS[m >> 4 & 15] + HEX_CHARS[m & 15]), w;
    }, Sha256.prototype.toString = Sha256.prototype.hex, Sha256.prototype.digest = function() {
      this.finalize();
      var e = this.h0, n = this.h1, o = this.h2, s = this.h3, u = this.h4, d = this.h5, g = this.h6, m = this.h7, w = [
        e >> 24 & 255,
        e >> 16 & 255,
        e >> 8 & 255,
        e & 255,
        n >> 24 & 255,
        n >> 16 & 255,
        n >> 8 & 255,
        n & 255,
        o >> 24 & 255,
        o >> 16 & 255,
        o >> 8 & 255,
        o & 255,
        s >> 24 & 255,
        s >> 16 & 255,
        s >> 8 & 255,
        s & 255,
        u >> 24 & 255,
        u >> 16 & 255,
        u >> 8 & 255,
        u & 255,
        d >> 24 & 255,
        d >> 16 & 255,
        d >> 8 & 255,
        d & 255,
        g >> 24 & 255,
        g >> 16 & 255,
        g >> 8 & 255,
        g & 255
      ];
      return this.is224 || w.push(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, m & 255), w;
    }, Sha256.prototype.array = Sha256.prototype.digest, Sha256.prototype.arrayBuffer = function() {
      this.finalize();
      var e = new ArrayBuffer(this.is224 ? 28 : 32), n = new DataView(e);
      return n.setUint32(0, this.h0), n.setUint32(4, this.h1), n.setUint32(8, this.h2), n.setUint32(12, this.h3), n.setUint32(16, this.h4), n.setUint32(20, this.h5), n.setUint32(24, this.h6), this.is224 || n.setUint32(28, this.h7), e;
    };
    function HmacSha256(e, n, o) {
      var s, u = typeof e;
      if (u === "string") {
        var d = [], g = e.length, m = 0, w;
        for (s = 0; s < g; ++s)
          w = e.charCodeAt(s), w < 128 ? d[m++] = w : w < 2048 ? (d[m++] = 192 | w >> 6, d[m++] = 128 | w & 63) : w < 55296 || w >= 57344 ? (d[m++] = 224 | w >> 12, d[m++] = 128 | w >> 6 & 63, d[m++] = 128 | w & 63) : (w = 65536 + ((w & 1023) << 10 | e.charCodeAt(++s) & 1023), d[m++] = 240 | w >> 18, d[m++] = 128 | w >> 12 & 63, d[m++] = 128 | w >> 6 & 63, d[m++] = 128 | w & 63);
        e = d;
      } else if (u === "object") {
        if (e === null)
          throw new Error(ERROR);
        if (ARRAY_BUFFER && e.constructor === ArrayBuffer)
          e = new Uint8Array(e);
        else if (!Array.isArray(e) && (!ARRAY_BUFFER || !ArrayBuffer.isView(e)))
          throw new Error(ERROR);
      } else
        throw new Error(ERROR);
      e.length > 64 && (e = new Sha256(n, !0).update(e).array());
      var B = [], x = [];
      for (s = 0; s < 64; ++s) {
        var C = e[s] || 0;
        B[s] = 92 ^ C, x[s] = 54 ^ C;
      }
      Sha256.call(this, n, o), this.update(x), this.oKeyPad = B, this.inner = !0, this.sharedMemory = o;
    }
    HmacSha256.prototype = new Sha256(), HmacSha256.prototype.finalize = function() {
      if (Sha256.prototype.finalize.call(this), this.inner) {
        this.inner = !1;
        var e = this.array();
        Sha256.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(e), Sha256.prototype.finalize.call(this);
      }
    };
    var exports = createMethod();
    exports.sha256 = exports, exports.sha224 = createMethod(!0), exports.sha256.hmac = createHmacMethod(), exports.sha224.hmac = createHmacMethod(!0), COMMON_JS ? module.exports = exports : (root.sha256 = exports.sha256, root.sha224 = exports.sha224);
  })();
})(sha256$1);
function sha224$2(e) {
  const n = sha256$1.exports.sha224.create();
  return n.update(e), new Uint8Array(n.array());
}
const SELF_AUTHENTICATING_SUFFIX$1 = 2, ANONYMOUS_SUFFIX$1 = 4, MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = "aaaaa-aa", fromHexString$1 = (e) => {
  var n;
  return new Uint8Array(((n = e.match(/.{1,2}/g)) !== null && n !== void 0 ? n : []).map((o) => parseInt(o, 16)));
}, toHexString$1 = (e) => e.reduce((n, o) => n + o.toString(16).padStart(2, "0"), "");
class Principal$3 {
  constructor(n) {
    this._arr = n, this._isPrincipal = !0;
  }
  static anonymous() {
    return new this(new Uint8Array([ANONYMOUS_SUFFIX$1]));
  }
  static managementCanister() {
    return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);
  }
  static selfAuthenticating(n) {
    const o = sha224$2(n);
    return new this(new Uint8Array([...o, SELF_AUTHENTICATING_SUFFIX$1]));
  }
  static from(n) {
    if (typeof n == "string")
      return Principal$3.fromText(n);
    if (typeof n == "object" && n !== null && n._isPrincipal === !0)
      return new Principal$3(n._arr);
    throw new Error(`Impossible to convert ${JSON.stringify(n)} to Principal.`);
  }
  static fromHex(n) {
    return new this(fromHexString$1(n));
  }
  static fromText(n) {
    const o = n.toLowerCase().replace(/-/g, "");
    let s = decode$6(o);
    s = s.slice(4, s.length);
    const u = new this(s);
    if (u.toText() !== n)
      throw new Error(`Principal "${u.toText()}" does not have a valid checksum (original value "${n}" may not be a valid Principal ID).`);
    return u;
  }
  static fromUint8Array(n) {
    return new this(n);
  }
  isAnonymous() {
    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX$1;
  }
  toUint8Array() {
    return this._arr;
  }
  toHex() {
    return toHexString$1(this._arr).toUpperCase();
  }
  toText() {
    const n = new ArrayBuffer(4);
    new DataView(n).setUint32(0, getCrc32$1(this._arr));
    const s = new Uint8Array(n), u = Uint8Array.from(this._arr), d = new Uint8Array([...s, ...u]), m = encode$6(d).match(/.{1,5}/g);
    if (!m)
      throw new Error();
    return m.join("-");
  }
  toString() {
    return this.toText();
  }
  compareTo(n) {
    for (let o = 0; o < Math.min(this._arr.length, n._arr.length); o++) {
      if (this._arr[o] < n._arr[o])
        return "lt";
      if (this._arr[o] > n._arr[o])
        return "gt";
    }
    return this._arr.length < n._arr.length ? "lt" : this._arr.length > n._arr.length ? "gt" : "eq";
  }
  ltEq(n) {
    const o = this.compareTo(n);
    return o == "lt" || o == "eq";
  }
  gtEq(n) {
    const o = this.compareTo(n);
    return o == "gt" || o == "eq";
  }
}
const tradeBoxNum = 6, inventoryBoxNum = 45, pageBoxNum = 18, itemTypes = {
  LAYER1: "layer1"
}, nullPrincipalId = Principal$3.fromText("rrkah-fqaaa-aaaaa-aaaaq-cai");
var dist = {}, registries = {}, nfts_registry = {}, axios$2 = { exports: {} }, axios$1 = { exports: {} }, bind$2 = function e(n, o) {
  return function() {
    for (var u = new Array(arguments.length), d = 0; d < u.length; d++)
      u[d] = arguments[d];
    return n.apply(o, u);
  };
}, bind$1 = bind$2, toString = Object.prototype.toString;
function isArray$1(e) {
  return toString.call(e) === "[object Array]";
}
function isUndefined(e) {
  return typeof e > "u";
}
function isBuffer(e) {
  return e !== null && !isUndefined(e) && e.constructor !== null && !isUndefined(e.constructor) && typeof e.constructor.isBuffer == "function" && e.constructor.isBuffer(e);
}
function isArrayBuffer(e) {
  return toString.call(e) === "[object ArrayBuffer]";
}
function isFormData(e) {
  return typeof FormData < "u" && e instanceof FormData;
}
function isArrayBufferView(e) {
  var n;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? n = ArrayBuffer.isView(e) : n = e && e.buffer && e.buffer instanceof ArrayBuffer, n;
}
function isString(e) {
  return typeof e == "string";
}
function isNumber(e) {
  return typeof e == "number";
}
function isObject(e) {
  return e !== null && typeof e == "object";
}
function isPlainObject$2(e) {
  if (toString.call(e) !== "[object Object]")
    return !1;
  var n = Object.getPrototypeOf(e);
  return n === null || n === Object.prototype;
}
function isDate(e) {
  return toString.call(e) === "[object Date]";
}
function isFile(e) {
  return toString.call(e) === "[object File]";
}
function isBlob(e) {
  return toString.call(e) === "[object Blob]";
}
function isFunction$1(e) {
  return toString.call(e) === "[object Function]";
}
function isStream(e) {
  return isObject(e) && isFunction$1(e.pipe);
}
function isURLSearchParams(e) {
  return typeof URLSearchParams < "u" && e instanceof URLSearchParams;
}
function trim(e) {
  return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "");
}
function isStandardBrowserEnv() {
  return typeof navigator < "u" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS") ? !1 : typeof window < "u" && typeof document < "u";
}
function forEach(e, n) {
  if (!(e === null || typeof e > "u"))
    if (typeof e != "object" && (e = [e]), isArray$1(e))
      for (var o = 0, s = e.length; o < s; o++)
        n.call(null, e[o], o, e);
    else
      for (var u in e)
        Object.prototype.hasOwnProperty.call(e, u) && n.call(null, e[u], u, e);
}
function merge$1() {
  var e = {};
  function n(u, d) {
    isPlainObject$2(e[d]) && isPlainObject$2(u) ? e[d] = merge$1(e[d], u) : isPlainObject$2(u) ? e[d] = merge$1({}, u) : isArray$1(u) ? e[d] = u.slice() : e[d] = u;
  }
  for (var o = 0, s = arguments.length; o < s; o++)
    forEach(arguments[o], n);
  return e;
}
function extend(e, n, o) {
  return forEach(n, function(u, d) {
    o && typeof u == "function" ? e[d] = bind$1(u, o) : e[d] = u;
  }), e;
}
function stripBOM(e) {
  return e.charCodeAt(0) === 65279 && (e = e.slice(1)), e;
}
var utils$c = {
  isArray: isArray$1,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isObject,
  isPlainObject: isPlainObject$2,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isFunction: isFunction$1,
  isStream,
  isURLSearchParams,
  isStandardBrowserEnv,
  forEach,
  merge: merge$1,
  extend,
  trim,
  stripBOM
}, utils$b = utils$c;
function encode$5(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
var buildURL$1 = function e(n, o, s) {
  if (!o)
    return n;
  var u;
  if (s)
    u = s(o);
  else if (utils$b.isURLSearchParams(o))
    u = o.toString();
  else {
    var d = [];
    utils$b.forEach(o, function(w, B) {
      w === null || typeof w > "u" || (utils$b.isArray(w) ? B = B + "[]" : w = [w], utils$b.forEach(w, function(C) {
        utils$b.isDate(C) ? C = C.toISOString() : utils$b.isObject(C) && (C = JSON.stringify(C)), d.push(encode$5(B) + "=" + encode$5(C));
      }));
    }), u = d.join("&");
  }
  if (u) {
    var g = n.indexOf("#");
    g !== -1 && (n = n.slice(0, g)), n += (n.indexOf("?") === -1 ? "?" : "&") + u;
  }
  return n;
}, utils$a = utils$c;
function InterceptorManager$1() {
  this.handlers = [];
}
InterceptorManager$1.prototype.use = function e(n, o, s) {
  return this.handlers.push({
    fulfilled: n,
    rejected: o,
    synchronous: s ? s.synchronous : !1,
    runWhen: s ? s.runWhen : null
  }), this.handlers.length - 1;
};
InterceptorManager$1.prototype.eject = function e(n) {
  this.handlers[n] && (this.handlers[n] = null);
};
InterceptorManager$1.prototype.forEach = function e(n) {
  utils$a.forEach(this.handlers, function(s) {
    s !== null && n(s);
  });
};
var InterceptorManager_1 = InterceptorManager$1, utils$9 = utils$c, normalizeHeaderName = function e(n, o) {
  utils$9.forEach(n, function(u, d) {
    d !== o && d.toUpperCase() === o.toUpperCase() && (n[o] = u, delete n[d]);
  });
}, enhanceError = function e(n, o, s, u, d) {
  return n.config = o, s && (n.code = s), n.request = u, n.response = d, n.isAxiosError = !0, n.toJSON = function() {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }, n;
}, createError, hasRequiredCreateError;
function requireCreateError() {
  if (hasRequiredCreateError)
    return createError;
  hasRequiredCreateError = 1;
  var e = enhanceError;
  return createError = function(o, s, u, d, g) {
    var m = new Error(o);
    return e(m, s, u, d, g);
  }, createError;
}
var settle, hasRequiredSettle;
function requireSettle() {
  if (hasRequiredSettle)
    return settle;
  hasRequiredSettle = 1;
  var e = requireCreateError();
  return settle = function(o, s, u) {
    var d = u.config.validateStatus;
    !u.status || !d || d(u.status) ? o(u) : s(e(
      "Request failed with status code " + u.status,
      u.config,
      null,
      u.request,
      u
    ));
  }, settle;
}
var cookies, hasRequiredCookies;
function requireCookies() {
  if (hasRequiredCookies)
    return cookies;
  hasRequiredCookies = 1;
  var e = utils$c;
  return cookies = e.isStandardBrowserEnv() ? function() {
    return {
      write: function(s, u, d, g, m, w) {
        var B = [];
        B.push(s + "=" + encodeURIComponent(u)), e.isNumber(d) && B.push("expires=" + new Date(d).toGMTString()), e.isString(g) && B.push("path=" + g), e.isString(m) && B.push("domain=" + m), w === !0 && B.push("secure"), document.cookie = B.join("; ");
      },
      read: function(s) {
        var u = document.cookie.match(new RegExp("(^|;\\s*)(" + s + ")=([^;]*)"));
        return u ? decodeURIComponent(u[3]) : null;
      },
      remove: function(s) {
        this.write(s, "", Date.now() - 864e5);
      }
    };
  }() : function() {
    return {
      write: function() {
      },
      read: function() {
        return null;
      },
      remove: function() {
      }
    };
  }(), cookies;
}
var isAbsoluteURL, hasRequiredIsAbsoluteURL;
function requireIsAbsoluteURL() {
  return hasRequiredIsAbsoluteURL || (hasRequiredIsAbsoluteURL = 1, isAbsoluteURL = function(n) {
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(n);
  }), isAbsoluteURL;
}
var combineURLs, hasRequiredCombineURLs;
function requireCombineURLs() {
  return hasRequiredCombineURLs || (hasRequiredCombineURLs = 1, combineURLs = function(n, o) {
    return o ? n.replace(/\/+$/, "") + "/" + o.replace(/^\/+/, "") : n;
  }), combineURLs;
}
var buildFullPath, hasRequiredBuildFullPath;
function requireBuildFullPath() {
  if (hasRequiredBuildFullPath)
    return buildFullPath;
  hasRequiredBuildFullPath = 1;
  var e = requireIsAbsoluteURL(), n = requireCombineURLs();
  return buildFullPath = function(s, u) {
    return s && !e(u) ? n(s, u) : u;
  }, buildFullPath;
}
var parseHeaders, hasRequiredParseHeaders;
function requireParseHeaders() {
  if (hasRequiredParseHeaders)
    return parseHeaders;
  hasRequiredParseHeaders = 1;
  var e = utils$c, n = [
    "age",
    "authorization",
    "content-length",
    "content-type",
    "etag",
    "expires",
    "from",
    "host",
    "if-modified-since",
    "if-unmodified-since",
    "last-modified",
    "location",
    "max-forwards",
    "proxy-authorization",
    "referer",
    "retry-after",
    "user-agent"
  ];
  return parseHeaders = function(s) {
    var u = {}, d, g, m;
    return s && e.forEach(s.split(`
`), function(B) {
      if (m = B.indexOf(":"), d = e.trim(B.substr(0, m)).toLowerCase(), g = e.trim(B.substr(m + 1)), d) {
        if (u[d] && n.indexOf(d) >= 0)
          return;
        d === "set-cookie" ? u[d] = (u[d] ? u[d] : []).concat([g]) : u[d] = u[d] ? u[d] + ", " + g : g;
      }
    }), u;
  }, parseHeaders;
}
var isURLSameOrigin, hasRequiredIsURLSameOrigin;
function requireIsURLSameOrigin() {
  if (hasRequiredIsURLSameOrigin)
    return isURLSameOrigin;
  hasRequiredIsURLSameOrigin = 1;
  var e = utils$c;
  return isURLSameOrigin = e.isStandardBrowserEnv() ? function() {
    var o = /(msie|trident)/i.test(navigator.userAgent), s = document.createElement("a"), u;
    function d(g) {
      var m = g;
      return o && (s.setAttribute("href", m), m = s.href), s.setAttribute("href", m), {
        href: s.href,
        protocol: s.protocol ? s.protocol.replace(/:$/, "") : "",
        host: s.host,
        search: s.search ? s.search.replace(/^\?/, "") : "",
        hash: s.hash ? s.hash.replace(/^#/, "") : "",
        hostname: s.hostname,
        port: s.port,
        pathname: s.pathname.charAt(0) === "/" ? s.pathname : "/" + s.pathname
      };
    }
    return u = d(window.location.href), function(m) {
      var w = e.isString(m) ? d(m) : m;
      return w.protocol === u.protocol && w.host === u.host;
    };
  }() : function() {
    return function() {
      return !0;
    };
  }(), isURLSameOrigin;
}
var Cancel_1, hasRequiredCancel;
function requireCancel() {
  if (hasRequiredCancel)
    return Cancel_1;
  hasRequiredCancel = 1;
  function e(n) {
    this.message = n;
  }
  return e.prototype.toString = function() {
    return "Cancel" + (this.message ? ": " + this.message : "");
  }, e.prototype.__CANCEL__ = !0, Cancel_1 = e, Cancel_1;
}
var xhr, hasRequiredXhr;
function requireXhr() {
  if (hasRequiredXhr)
    return xhr;
  hasRequiredXhr = 1;
  var e = utils$c, n = requireSettle(), o = requireCookies(), s = buildURL$1, u = requireBuildFullPath(), d = requireParseHeaders(), g = requireIsURLSameOrigin(), m = requireCreateError(), w = requireDefaults(), B = requireCancel();
  return xhr = function(C) {
    return new Promise(function(y, T) {
      var M = C.data, D = C.headers, V = C.responseType, O;
      function H() {
        C.cancelToken && C.cancelToken.unsubscribe(O), C.signal && C.signal.removeEventListener("abort", O);
      }
      e.isFormData(M) && delete D["Content-Type"];
      var q = new XMLHttpRequest();
      if (C.auth) {
        var $ = C.auth.username || "", re = C.auth.password ? unescape(encodeURIComponent(C.auth.password)) : "";
        D.Authorization = "Basic " + btoa($ + ":" + re);
      }
      var ce = u(C.baseURL, C.url);
      q.open(C.method.toUpperCase(), s(ce, C.params, C.paramsSerializer), !0), q.timeout = C.timeout;
      function Ie() {
        if (!!q) {
          var se = "getAllResponseHeaders" in q ? d(q.getAllResponseHeaders()) : null, Ce = !V || V === "text" || V === "json" ? q.responseText : q.response, Ge = {
            data: Ce,
            status: q.status,
            statusText: q.statusText,
            headers: se,
            config: C,
            request: q
          };
          n(function(Be) {
            y(Be), H();
          }, function(Be) {
            T(Be), H();
          }, Ge), q = null;
        }
      }
      if ("onloadend" in q ? q.onloadend = Ie : q.onreadystatechange = function() {
        !q || q.readyState !== 4 || q.status === 0 && !(q.responseURL && q.responseURL.indexOf("file:") === 0) || setTimeout(Ie);
      }, q.onabort = function() {
        !q || (T(m("Request aborted", C, "ECONNABORTED", q)), q = null);
      }, q.onerror = function() {
        T(m("Network Error", C, null, q)), q = null;
      }, q.ontimeout = function() {
        var Ce = C.timeout ? "timeout of " + C.timeout + "ms exceeded" : "timeout exceeded", Ge = C.transitional || w.transitional;
        C.timeoutErrorMessage && (Ce = C.timeoutErrorMessage), T(m(
          Ce,
          C,
          Ge.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED",
          q
        )), q = null;
      }, e.isStandardBrowserEnv()) {
        var Pe = (C.withCredentials || g(ce)) && C.xsrfCookieName ? o.read(C.xsrfCookieName) : void 0;
        Pe && (D[C.xsrfHeaderName] = Pe);
      }
      "setRequestHeader" in q && e.forEach(D, function(Ce, Ge) {
        typeof M > "u" && Ge.toLowerCase() === "content-type" ? delete D[Ge] : q.setRequestHeader(Ge, Ce);
      }), e.isUndefined(C.withCredentials) || (q.withCredentials = !!C.withCredentials), V && V !== "json" && (q.responseType = C.responseType), typeof C.onDownloadProgress == "function" && q.addEventListener("progress", C.onDownloadProgress), typeof C.onUploadProgress == "function" && q.upload && q.upload.addEventListener("progress", C.onUploadProgress), (C.cancelToken || C.signal) && (O = function(se) {
        !q || (T(!se || se && se.type ? new B("canceled") : se), q.abort(), q = null);
      }, C.cancelToken && C.cancelToken.subscribe(O), C.signal && (C.signal.aborted ? O() : C.signal.addEventListener("abort", O))), M || (M = null), q.send(M);
    });
  }, xhr;
}
var defaults_1, hasRequiredDefaults;
function requireDefaults() {
  if (hasRequiredDefaults)
    return defaults_1;
  hasRequiredDefaults = 1;
  var e = utils$c, n = normalizeHeaderName, o = enhanceError, s = {
    "Content-Type": "application/x-www-form-urlencoded"
  };
  function u(w, B) {
    !e.isUndefined(w) && e.isUndefined(w["Content-Type"]) && (w["Content-Type"] = B);
  }
  function d() {
    var w;
    return (typeof XMLHttpRequest < "u" || typeof process < "u" && Object.prototype.toString.call(process) === "[object process]") && (w = requireXhr()), w;
  }
  function g(w, B, x) {
    if (e.isString(w))
      try {
        return (B || JSON.parse)(w), e.trim(w);
      } catch (C) {
        if (C.name !== "SyntaxError")
          throw C;
      }
    return (x || JSON.stringify)(w);
  }
  var m = {
    transitional: {
      silentJSONParsing: !0,
      forcedJSONParsing: !0,
      clarifyTimeoutError: !1
    },
    adapter: d(),
    transformRequest: [function(B, x) {
      return n(x, "Accept"), n(x, "Content-Type"), e.isFormData(B) || e.isArrayBuffer(B) || e.isBuffer(B) || e.isStream(B) || e.isFile(B) || e.isBlob(B) ? B : e.isArrayBufferView(B) ? B.buffer : e.isURLSearchParams(B) ? (u(x, "application/x-www-form-urlencoded;charset=utf-8"), B.toString()) : e.isObject(B) || x && x["Content-Type"] === "application/json" ? (u(x, "application/json"), g(B)) : B;
    }],
    transformResponse: [function(B) {
      var x = this.transitional || m.transitional, C = x && x.silentJSONParsing, v = x && x.forcedJSONParsing, y = !C && this.responseType === "json";
      if (y || v && e.isString(B) && B.length)
        try {
          return JSON.parse(B);
        } catch (T) {
          if (y)
            throw T.name === "SyntaxError" ? o(T, this, "E_JSON_PARSE") : T;
        }
      return B;
    }],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: function(B) {
      return B >= 200 && B < 300;
    },
    headers: {
      common: {
        Accept: "application/json, text/plain, */*"
      }
    }
  };
  return e.forEach(["delete", "get", "head"], function(B) {
    m.headers[B] = {};
  }), e.forEach(["post", "put", "patch"], function(B) {
    m.headers[B] = e.merge(s);
  }), defaults_1 = m, defaults_1;
}
var utils$8 = utils$c, defaults$2 = requireDefaults(), transformData$1 = function e(n, o, s) {
  var u = this || defaults$2;
  return utils$8.forEach(s, function(g) {
    n = g.call(u, n, o);
  }), n;
}, isCancel$1, hasRequiredIsCancel;
function requireIsCancel() {
  return hasRequiredIsCancel || (hasRequiredIsCancel = 1, isCancel$1 = function(n) {
    return !!(n && n.__CANCEL__);
  }), isCancel$1;
}
var utils$7 = utils$c, transformData = transformData$1, isCancel = requireIsCancel(), defaults$1 = requireDefaults(), Cancel = requireCancel();
function throwIfCancellationRequested(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new Cancel("canceled");
}
var dispatchRequest$1 = function e(n) {
  throwIfCancellationRequested(n), n.headers = n.headers || {}, n.data = transformData.call(
    n,
    n.data,
    n.headers,
    n.transformRequest
  ), n.headers = utils$7.merge(
    n.headers.common || {},
    n.headers[n.method] || {},
    n.headers
  ), utils$7.forEach(
    ["delete", "get", "head", "post", "put", "patch", "common"],
    function(u) {
      delete n.headers[u];
    }
  );
  var o = n.adapter || defaults$1.adapter;
  return o(n).then(function(u) {
    return throwIfCancellationRequested(n), u.data = transformData.call(
      n,
      u.data,
      u.headers,
      n.transformResponse
    ), u;
  }, function(u) {
    return isCancel(u) || (throwIfCancellationRequested(n), u && u.response && (u.response.data = transformData.call(
      n,
      u.response.data,
      u.response.headers,
      n.transformResponse
    ))), Promise.reject(u);
  });
}, utils$6 = utils$c, mergeConfig$2 = function e(n, o) {
  o = o || {};
  var s = {};
  function u(x, C) {
    return utils$6.isPlainObject(x) && utils$6.isPlainObject(C) ? utils$6.merge(x, C) : utils$6.isPlainObject(C) ? utils$6.merge({}, C) : utils$6.isArray(C) ? C.slice() : C;
  }
  function d(x) {
    if (utils$6.isUndefined(o[x])) {
      if (!utils$6.isUndefined(n[x]))
        return u(void 0, n[x]);
    } else
      return u(n[x], o[x]);
  }
  function g(x) {
    if (!utils$6.isUndefined(o[x]))
      return u(void 0, o[x]);
  }
  function m(x) {
    if (utils$6.isUndefined(o[x])) {
      if (!utils$6.isUndefined(n[x]))
        return u(void 0, n[x]);
    } else
      return u(void 0, o[x]);
  }
  function w(x) {
    if (x in o)
      return u(n[x], o[x]);
    if (x in n)
      return u(void 0, n[x]);
  }
  var B = {
    url: g,
    method: g,
    data: g,
    baseURL: m,
    transformRequest: m,
    transformResponse: m,
    paramsSerializer: m,
    timeout: m,
    timeoutMessage: m,
    withCredentials: m,
    adapter: m,
    responseType: m,
    xsrfCookieName: m,
    xsrfHeaderName: m,
    onUploadProgress: m,
    onDownloadProgress: m,
    decompress: m,
    maxContentLength: m,
    maxBodyLength: m,
    transport: m,
    httpAgent: m,
    httpsAgent: m,
    cancelToken: m,
    socketPath: m,
    responseEncoding: m,
    validateStatus: w
  };
  return utils$6.forEach(Object.keys(n).concat(Object.keys(o)), function(C) {
    var v = B[C] || d, y = v(C);
    utils$6.isUndefined(y) && v !== w || (s[C] = y);
  }), s;
}, data, hasRequiredData;
function requireData() {
  return hasRequiredData || (hasRequiredData = 1, data = {
    version: "0.24.0"
  }), data;
}
var VERSION = requireData().version, validators$1 = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach(function(e, n) {
  validators$1[e] = function(s) {
    return typeof s === e || "a" + (n < 1 ? "n " : " ") + e;
  };
});
var deprecatedWarnings = {};
validators$1.transitional = function e(n, o, s) {
  function u(d, g) {
    return "[Axios v" + VERSION + "] Transitional option '" + d + "'" + g + (s ? ". " + s : "");
  }
  return function(d, g, m) {
    if (n === !1)
      throw new Error(u(g, " has been removed" + (o ? " in " + o : "")));
    return o && !deprecatedWarnings[g] && (deprecatedWarnings[g] = !0, console.warn(
      u(
        g,
        " has been deprecated since v" + o + " and will be removed in the near future"
      )
    )), n ? n(d, g, m) : !0;
  };
};
function assertOptions(e, n, o) {
  if (typeof e != "object")
    throw new TypeError("options must be an object");
  for (var s = Object.keys(e), u = s.length; u-- > 0; ) {
    var d = s[u], g = n[d];
    if (g) {
      var m = e[d], w = m === void 0 || g(m, d, e);
      if (w !== !0)
        throw new TypeError("option " + d + " must be " + w);
      continue;
    }
    if (o !== !0)
      throw Error("Unknown option " + d);
  }
}
var validator$1 = {
  assertOptions,
  validators: validators$1
}, utils$5 = utils$c, buildURL = buildURL$1, InterceptorManager = InterceptorManager_1, dispatchRequest = dispatchRequest$1, mergeConfig$1 = mergeConfig$2, validator = validator$1, validators = validator.validators;
function Axios$1(e) {
  this.defaults = e, this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}
Axios$1.prototype.request = function e(n) {
  typeof n == "string" ? (n = arguments[1] || {}, n.url = arguments[0]) : n = n || {}, n = mergeConfig$1(this.defaults, n), n.method ? n.method = n.method.toLowerCase() : this.defaults.method ? n.method = this.defaults.method.toLowerCase() : n.method = "get";
  var o = n.transitional;
  o !== void 0 && validator.assertOptions(o, {
    silentJSONParsing: validators.transitional(validators.boolean),
    forcedJSONParsing: validators.transitional(validators.boolean),
    clarifyTimeoutError: validators.transitional(validators.boolean)
  }, !1);
  var s = [], u = !0;
  this.interceptors.request.forEach(function(v) {
    typeof v.runWhen == "function" && v.runWhen(n) === !1 || (u = u && v.synchronous, s.unshift(v.fulfilled, v.rejected));
  });
  var d = [];
  this.interceptors.response.forEach(function(v) {
    d.push(v.fulfilled, v.rejected);
  });
  var g;
  if (!u) {
    var m = [dispatchRequest, void 0];
    for (Array.prototype.unshift.apply(m, s), m = m.concat(d), g = Promise.resolve(n); m.length; )
      g = g.then(m.shift(), m.shift());
    return g;
  }
  for (var w = n; s.length; ) {
    var B = s.shift(), x = s.shift();
    try {
      w = B(w);
    } catch (C) {
      x(C);
      break;
    }
  }
  try {
    g = dispatchRequest(w);
  } catch (C) {
    return Promise.reject(C);
  }
  for (; d.length; )
    g = g.then(d.shift(), d.shift());
  return g;
};
Axios$1.prototype.getUri = function e(n) {
  return n = mergeConfig$1(this.defaults, n), buildURL(n.url, n.params, n.paramsSerializer).replace(/^\?/, "");
};
utils$5.forEach(["delete", "get", "head", "options"], function e(n) {
  Axios$1.prototype[n] = function(o, s) {
    return this.request(mergeConfig$1(s || {}, {
      method: n,
      url: o,
      data: (s || {}).data
    }));
  };
});
utils$5.forEach(["post", "put", "patch"], function e(n) {
  Axios$1.prototype[n] = function(o, s, u) {
    return this.request(mergeConfig$1(u || {}, {
      method: n,
      url: o,
      data: s
    }));
  };
});
var Axios_1 = Axios$1, CancelToken_1, hasRequiredCancelToken;
function requireCancelToken() {
  if (hasRequiredCancelToken)
    return CancelToken_1;
  hasRequiredCancelToken = 1;
  var e = requireCancel();
  function n(o) {
    if (typeof o != "function")
      throw new TypeError("executor must be a function.");
    var s;
    this.promise = new Promise(function(g) {
      s = g;
    });
    var u = this;
    this.promise.then(function(d) {
      if (!!u._listeners) {
        var g, m = u._listeners.length;
        for (g = 0; g < m; g++)
          u._listeners[g](d);
        u._listeners = null;
      }
    }), this.promise.then = function(d) {
      var g, m = new Promise(function(w) {
        u.subscribe(w), g = w;
      }).then(d);
      return m.cancel = function() {
        u.unsubscribe(g);
      }, m;
    }, o(function(g) {
      u.reason || (u.reason = new e(g), s(u.reason));
    });
  }
  return n.prototype.throwIfRequested = function() {
    if (this.reason)
      throw this.reason;
  }, n.prototype.subscribe = function(s) {
    if (this.reason) {
      s(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(s) : this._listeners = [s];
  }, n.prototype.unsubscribe = function(s) {
    if (!!this._listeners) {
      var u = this._listeners.indexOf(s);
      u !== -1 && this._listeners.splice(u, 1);
    }
  }, n.source = function() {
    var s, u = new n(function(g) {
      s = g;
    });
    return {
      token: u,
      cancel: s
    };
  }, CancelToken_1 = n, CancelToken_1;
}
var spread, hasRequiredSpread;
function requireSpread() {
  return hasRequiredSpread || (hasRequiredSpread = 1, spread = function(n) {
    return function(s) {
      return n.apply(null, s);
    };
  }), spread;
}
var isAxiosError, hasRequiredIsAxiosError;
function requireIsAxiosError() {
  return hasRequiredIsAxiosError || (hasRequiredIsAxiosError = 1, isAxiosError = function(n) {
    return typeof n == "object" && n.isAxiosError === !0;
  }), isAxiosError;
}
var utils$4 = utils$c, bind = bind$2, Axios = Axios_1, mergeConfig = mergeConfig$2, defaults = requireDefaults();
function createInstance(e) {
  var n = new Axios(e), o = bind(Axios.prototype.request, n);
  return utils$4.extend(o, Axios.prototype, n), utils$4.extend(o, n), o.create = function(u) {
    return createInstance(mergeConfig(e, u));
  }, o;
}
var axios = createInstance(defaults);
axios.Axios = Axios;
axios.Cancel = requireCancel();
axios.CancelToken = requireCancelToken();
axios.isCancel = requireIsCancel();
axios.VERSION = requireData().version;
axios.all = function e(n) {
  return Promise.all(n);
};
axios.spread = requireSpread();
axios.isAxiosError = requireIsAxiosError();
axios$1.exports = axios;
axios$1.exports.default = axios;
(function(e) {
  e.exports = axios$1.exports;
})(axios$2);
var buffer$1 = {}, base64Js = {};
base64Js.byteLength = byteLength;
base64Js.toByteArray = toByteArray;
base64Js.fromByteArray = fromByteArray;
var lookup = [], revLookup = [], Arr = typeof Uint8Array < "u" ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var i = 0, len = code.length; i < len; ++i)
  lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i;
revLookup["-".charCodeAt(0)] = 62;
revLookup["_".charCodeAt(0)] = 63;
function getLens(e) {
  var n = e.length;
  if (n % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var o = e.indexOf("=");
  o === -1 && (o = n);
  var s = o === n ? 0 : 4 - o % 4;
  return [o, s];
}
function byteLength(e) {
  var n = getLens(e), o = n[0], s = n[1];
  return (o + s) * 3 / 4 - s;
}
function _byteLength(e, n, o) {
  return (n + o) * 3 / 4 - o;
}
function toByteArray(e) {
  var n, o = getLens(e), s = o[0], u = o[1], d = new Arr(_byteLength(e, s, u)), g = 0, m = u > 0 ? s - 4 : s, w;
  for (w = 0; w < m; w += 4)
    n = revLookup[e.charCodeAt(w)] << 18 | revLookup[e.charCodeAt(w + 1)] << 12 | revLookup[e.charCodeAt(w + 2)] << 6 | revLookup[e.charCodeAt(w + 3)], d[g++] = n >> 16 & 255, d[g++] = n >> 8 & 255, d[g++] = n & 255;
  return u === 2 && (n = revLookup[e.charCodeAt(w)] << 2 | revLookup[e.charCodeAt(w + 1)] >> 4, d[g++] = n & 255), u === 1 && (n = revLookup[e.charCodeAt(w)] << 10 | revLookup[e.charCodeAt(w + 1)] << 4 | revLookup[e.charCodeAt(w + 2)] >> 2, d[g++] = n >> 8 & 255, d[g++] = n & 255), d;
}
function tripletToBase64(e) {
  return lookup[e >> 18 & 63] + lookup[e >> 12 & 63] + lookup[e >> 6 & 63] + lookup[e & 63];
}
function encodeChunk(e, n, o) {
  for (var s, u = [], d = n; d < o; d += 3)
    s = (e[d] << 16 & 16711680) + (e[d + 1] << 8 & 65280) + (e[d + 2] & 255), u.push(tripletToBase64(s));
  return u.join("");
}
function fromByteArray(e) {
  for (var n, o = e.length, s = o % 3, u = [], d = 16383, g = 0, m = o - s; g < m; g += d)
    u.push(encodeChunk(e, g, g + d > m ? m : g + d));
  return s === 1 ? (n = e[o - 1], u.push(
    lookup[n >> 2] + lookup[n << 4 & 63] + "=="
  )) : s === 2 && (n = (e[o - 2] << 8) + e[o - 1], u.push(
    lookup[n >> 10] + lookup[n >> 4 & 63] + lookup[n << 2 & 63] + "="
  )), u.join("");
}
var ieee754$1 = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
ieee754$1.read = function(e, n, o, s, u) {
  var d, g, m = u * 8 - s - 1, w = (1 << m) - 1, B = w >> 1, x = -7, C = o ? u - 1 : 0, v = o ? -1 : 1, y = e[n + C];
  for (C += v, d = y & (1 << -x) - 1, y >>= -x, x += m; x > 0; d = d * 256 + e[n + C], C += v, x -= 8)
    ;
  for (g = d & (1 << -x) - 1, d >>= -x, x += s; x > 0; g = g * 256 + e[n + C], C += v, x -= 8)
    ;
  if (d === 0)
    d = 1 - B;
  else {
    if (d === w)
      return g ? NaN : (y ? -1 : 1) * (1 / 0);
    g = g + Math.pow(2, s), d = d - B;
  }
  return (y ? -1 : 1) * g * Math.pow(2, d - s);
};
ieee754$1.write = function(e, n, o, s, u, d) {
  var g, m, w, B = d * 8 - u - 1, x = (1 << B) - 1, C = x >> 1, v = u === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, y = s ? 0 : d - 1, T = s ? 1 : -1, M = n < 0 || n === 0 && 1 / n < 0 ? 1 : 0;
  for (n = Math.abs(n), isNaN(n) || n === 1 / 0 ? (m = isNaN(n) ? 1 : 0, g = x) : (g = Math.floor(Math.log(n) / Math.LN2), n * (w = Math.pow(2, -g)) < 1 && (g--, w *= 2), g + C >= 1 ? n += v / w : n += v * Math.pow(2, 1 - C), n * w >= 2 && (g++, w /= 2), g + C >= x ? (m = 0, g = x) : g + C >= 1 ? (m = (n * w - 1) * Math.pow(2, u), g = g + C) : (m = n * Math.pow(2, C - 1) * Math.pow(2, u), g = 0)); u >= 8; e[o + y] = m & 255, y += T, m /= 256, u -= 8)
    ;
  for (g = g << u | m, B += u; B > 0; e[o + y] = g & 255, y += T, g /= 256, B -= 8)
    ;
  e[o + y - T] |= M * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(e) {
  const n = base64Js, o = ieee754$1, s = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  e.Buffer = m, e.SlowBuffer = O, e.INSPECT_MAX_BYTES = 50;
  const u = 2147483647;
  e.kMaxLength = u, m.TYPED_ARRAY_SUPPORT = d(), !m.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function d() {
    try {
      const Y = new Uint8Array(1), k = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(k, Uint8Array.prototype), Object.setPrototypeOf(Y, k), Y.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(m.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (!!m.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(m.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (!!m.isBuffer(this))
        return this.byteOffset;
    }
  });
  function g(Y) {
    if (Y > u)
      throw new RangeError('The value "' + Y + '" is invalid for option "size"');
    const k = new Uint8Array(Y);
    return Object.setPrototypeOf(k, m.prototype), k;
  }
  function m(Y, k, F) {
    if (typeof Y == "number") {
      if (typeof k == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return C(Y);
    }
    return w(Y, k, F);
  }
  m.poolSize = 8192;
  function w(Y, k, F) {
    if (typeof Y == "string")
      return v(Y, k);
    if (ArrayBuffer.isView(Y))
      return T(Y);
    if (Y == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof Y
      );
    if (le(Y, ArrayBuffer) || Y && le(Y.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (le(Y, SharedArrayBuffer) || Y && le(Y.buffer, SharedArrayBuffer)))
      return M(Y, k, F);
    if (typeof Y == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    const ue = Y.valueOf && Y.valueOf();
    if (ue != null && ue !== Y)
      return m.from(ue, k, F);
    const Qe = D(Y);
    if (Qe)
      return Qe;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof Y[Symbol.toPrimitive] == "function")
      return m.from(Y[Symbol.toPrimitive]("string"), k, F);
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof Y
    );
  }
  m.from = function(Y, k, F) {
    return w(Y, k, F);
  }, Object.setPrototypeOf(m.prototype, Uint8Array.prototype), Object.setPrototypeOf(m, Uint8Array);
  function B(Y) {
    if (typeof Y != "number")
      throw new TypeError('"size" argument must be of type number');
    if (Y < 0)
      throw new RangeError('The value "' + Y + '" is invalid for option "size"');
  }
  function x(Y, k, F) {
    return B(Y), Y <= 0 ? g(Y) : k !== void 0 ? typeof F == "string" ? g(Y).fill(k, F) : g(Y).fill(k) : g(Y);
  }
  m.alloc = function(Y, k, F) {
    return x(Y, k, F);
  };
  function C(Y) {
    return B(Y), g(Y < 0 ? 0 : V(Y) | 0);
  }
  m.allocUnsafe = function(Y) {
    return C(Y);
  }, m.allocUnsafeSlow = function(Y) {
    return C(Y);
  };
  function v(Y, k) {
    if ((typeof k != "string" || k === "") && (k = "utf8"), !m.isEncoding(k))
      throw new TypeError("Unknown encoding: " + k);
    const F = H(Y, k) | 0;
    let ue = g(F);
    const Qe = ue.write(Y, k);
    return Qe !== F && (ue = ue.slice(0, Qe)), ue;
  }
  function y(Y) {
    const k = Y.length < 0 ? 0 : V(Y.length) | 0, F = g(k);
    for (let ue = 0; ue < k; ue += 1)
      F[ue] = Y[ue] & 255;
    return F;
  }
  function T(Y) {
    if (le(Y, Uint8Array)) {
      const k = new Uint8Array(Y);
      return M(k.buffer, k.byteOffset, k.byteLength);
    }
    return y(Y);
  }
  function M(Y, k, F) {
    if (k < 0 || Y.byteLength < k)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (Y.byteLength < k + (F || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let ue;
    return k === void 0 && F === void 0 ? ue = new Uint8Array(Y) : F === void 0 ? ue = new Uint8Array(Y, k) : ue = new Uint8Array(Y, k, F), Object.setPrototypeOf(ue, m.prototype), ue;
  }
  function D(Y) {
    if (m.isBuffer(Y)) {
      const k = V(Y.length) | 0, F = g(k);
      return F.length === 0 || Y.copy(F, 0, 0, k), F;
    }
    if (Y.length !== void 0)
      return typeof Y.length != "number" || Ne(Y.length) ? g(0) : y(Y);
    if (Y.type === "Buffer" && Array.isArray(Y.data))
      return y(Y.data);
  }
  function V(Y) {
    if (Y >= u)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + u.toString(16) + " bytes");
    return Y | 0;
  }
  function O(Y) {
    return +Y != Y && (Y = 0), m.alloc(+Y);
  }
  m.isBuffer = function(k) {
    return k != null && k._isBuffer === !0 && k !== m.prototype;
  }, m.compare = function(k, F) {
    if (le(k, Uint8Array) && (k = m.from(k, k.offset, k.byteLength)), le(F, Uint8Array) && (F = m.from(F, F.offset, F.byteLength)), !m.isBuffer(k) || !m.isBuffer(F))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (k === F)
      return 0;
    let ue = k.length, Qe = F.length;
    for (let Oe = 0, Ve = Math.min(ue, Qe); Oe < Ve; ++Oe)
      if (k[Oe] !== F[Oe]) {
        ue = k[Oe], Qe = F[Oe];
        break;
      }
    return ue < Qe ? -1 : Qe < ue ? 1 : 0;
  }, m.isEncoding = function(k) {
    switch (String(k).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, m.concat = function(k, F) {
    if (!Array.isArray(k))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (k.length === 0)
      return m.alloc(0);
    let ue;
    if (F === void 0)
      for (F = 0, ue = 0; ue < k.length; ++ue)
        F += k[ue].length;
    const Qe = m.allocUnsafe(F);
    let Oe = 0;
    for (ue = 0; ue < k.length; ++ue) {
      let Ve = k[ue];
      if (le(Ve, Uint8Array))
        Oe + Ve.length > Qe.length ? (m.isBuffer(Ve) || (Ve = m.from(Ve)), Ve.copy(Qe, Oe)) : Uint8Array.prototype.set.call(
          Qe,
          Ve,
          Oe
        );
      else if (m.isBuffer(Ve))
        Ve.copy(Qe, Oe);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Oe += Ve.length;
    }
    return Qe;
  };
  function H(Y, k) {
    if (m.isBuffer(Y))
      return Y.length;
    if (ArrayBuffer.isView(Y) || le(Y, ArrayBuffer))
      return Y.byteLength;
    if (typeof Y != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof Y
      );
    const F = Y.length, ue = arguments.length > 2 && arguments[2] === !0;
    if (!ue && F === 0)
      return 0;
    let Qe = !1;
    for (; ; )
      switch (k) {
        case "ascii":
        case "latin1":
        case "binary":
          return F;
        case "utf8":
        case "utf-8":
          return Q(Y).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return F * 2;
        case "hex":
          return F >>> 1;
        case "base64":
          return Z(Y).length;
        default:
          if (Qe)
            return ue ? -1 : Q(Y).length;
          k = ("" + k).toLowerCase(), Qe = !0;
      }
  }
  m.byteLength = H;
  function q(Y, k, F) {
    let ue = !1;
    if ((k === void 0 || k < 0) && (k = 0), k > this.length || ((F === void 0 || F > this.length) && (F = this.length), F <= 0) || (F >>>= 0, k >>>= 0, F <= k))
      return "";
    for (Y || (Y = "utf8"); ; )
      switch (Y) {
        case "hex":
          return Je(this, k, F);
        case "utf8":
        case "utf-8":
          return Be(this, k, F);
        case "ascii":
          return nt(this, k, F);
        case "latin1":
        case "binary":
          return Xe(this, k, F);
        case "base64":
          return $e(this, k, F);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return qe(this, k, F);
        default:
          if (ue)
            throw new TypeError("Unknown encoding: " + Y);
          Y = (Y + "").toLowerCase(), ue = !0;
      }
  }
  m.prototype._isBuffer = !0;
  function $(Y, k, F) {
    const ue = Y[k];
    Y[k] = Y[F], Y[F] = ue;
  }
  m.prototype.swap16 = function() {
    const k = this.length;
    if (k % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let F = 0; F < k; F += 2)
      $(this, F, F + 1);
    return this;
  }, m.prototype.swap32 = function() {
    const k = this.length;
    if (k % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let F = 0; F < k; F += 4)
      $(this, F, F + 3), $(this, F + 1, F + 2);
    return this;
  }, m.prototype.swap64 = function() {
    const k = this.length;
    if (k % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let F = 0; F < k; F += 8)
      $(this, F, F + 7), $(this, F + 1, F + 6), $(this, F + 2, F + 5), $(this, F + 3, F + 4);
    return this;
  }, m.prototype.toString = function() {
    const k = this.length;
    return k === 0 ? "" : arguments.length === 0 ? Be(this, 0, k) : q.apply(this, arguments);
  }, m.prototype.toLocaleString = m.prototype.toString, m.prototype.equals = function(k) {
    if (!m.isBuffer(k))
      throw new TypeError("Argument must be a Buffer");
    return this === k ? !0 : m.compare(this, k) === 0;
  }, m.prototype.inspect = function() {
    let k = "";
    const F = e.INSPECT_MAX_BYTES;
    return k = this.toString("hex", 0, F).replace(/(.{2})/g, "$1 ").trim(), this.length > F && (k += " ... "), "<Buffer " + k + ">";
  }, s && (m.prototype[s] = m.prototype.inspect), m.prototype.compare = function(k, F, ue, Qe, Oe) {
    if (le(k, Uint8Array) && (k = m.from(k, k.offset, k.byteLength)), !m.isBuffer(k))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof k
      );
    if (F === void 0 && (F = 0), ue === void 0 && (ue = k ? k.length : 0), Qe === void 0 && (Qe = 0), Oe === void 0 && (Oe = this.length), F < 0 || ue > k.length || Qe < 0 || Oe > this.length)
      throw new RangeError("out of range index");
    if (Qe >= Oe && F >= ue)
      return 0;
    if (Qe >= Oe)
      return -1;
    if (F >= ue)
      return 1;
    if (F >>>= 0, ue >>>= 0, Qe >>>= 0, Oe >>>= 0, this === k)
      return 0;
    let Ve = Oe - Qe, It = ue - F;
    const vt = Math.min(Ve, It), Qt = this.slice(Qe, Oe), Ct = k.slice(F, ue);
    for (let Rt = 0; Rt < vt; ++Rt)
      if (Qt[Rt] !== Ct[Rt]) {
        Ve = Qt[Rt], It = Ct[Rt];
        break;
      }
    return Ve < It ? -1 : It < Ve ? 1 : 0;
  };
  function re(Y, k, F, ue, Qe) {
    if (Y.length === 0)
      return -1;
    if (typeof F == "string" ? (ue = F, F = 0) : F > 2147483647 ? F = 2147483647 : F < -2147483648 && (F = -2147483648), F = +F, Ne(F) && (F = Qe ? 0 : Y.length - 1), F < 0 && (F = Y.length + F), F >= Y.length) {
      if (Qe)
        return -1;
      F = Y.length - 1;
    } else if (F < 0)
      if (Qe)
        F = 0;
      else
        return -1;
    if (typeof k == "string" && (k = m.from(k, ue)), m.isBuffer(k))
      return k.length === 0 ? -1 : ce(Y, k, F, ue, Qe);
    if (typeof k == "number")
      return k = k & 255, typeof Uint8Array.prototype.indexOf == "function" ? Qe ? Uint8Array.prototype.indexOf.call(Y, k, F) : Uint8Array.prototype.lastIndexOf.call(Y, k, F) : ce(Y, [k], F, ue, Qe);
    throw new TypeError("val must be string, number or Buffer");
  }
  function ce(Y, k, F, ue, Qe) {
    let Oe = 1, Ve = Y.length, It = k.length;
    if (ue !== void 0 && (ue = String(ue).toLowerCase(), ue === "ucs2" || ue === "ucs-2" || ue === "utf16le" || ue === "utf-16le")) {
      if (Y.length < 2 || k.length < 2)
        return -1;
      Oe = 2, Ve /= 2, It /= 2, F /= 2;
    }
    function vt(Ct, Rt) {
      return Oe === 1 ? Ct[Rt] : Ct.readUInt16BE(Rt * Oe);
    }
    let Qt;
    if (Qe) {
      let Ct = -1;
      for (Qt = F; Qt < Ve; Qt++)
        if (vt(Y, Qt) === vt(k, Ct === -1 ? 0 : Qt - Ct)) {
          if (Ct === -1 && (Ct = Qt), Qt - Ct + 1 === It)
            return Ct * Oe;
        } else
          Ct !== -1 && (Qt -= Qt - Ct), Ct = -1;
    } else
      for (F + It > Ve && (F = Ve - It), Qt = F; Qt >= 0; Qt--) {
        let Ct = !0;
        for (let Rt = 0; Rt < It; Rt++)
          if (vt(Y, Qt + Rt) !== vt(k, Rt)) {
            Ct = !1;
            break;
          }
        if (Ct)
          return Qt;
      }
    return -1;
  }
  m.prototype.includes = function(k, F, ue) {
    return this.indexOf(k, F, ue) !== -1;
  }, m.prototype.indexOf = function(k, F, ue) {
    return re(this, k, F, ue, !0);
  }, m.prototype.lastIndexOf = function(k, F, ue) {
    return re(this, k, F, ue, !1);
  };
  function Ie(Y, k, F, ue) {
    F = Number(F) || 0;
    const Qe = Y.length - F;
    ue ? (ue = Number(ue), ue > Qe && (ue = Qe)) : ue = Qe;
    const Oe = k.length;
    ue > Oe / 2 && (ue = Oe / 2);
    let Ve;
    for (Ve = 0; Ve < ue; ++Ve) {
      const It = parseInt(k.substr(Ve * 2, 2), 16);
      if (Ne(It))
        return Ve;
      Y[F + Ve] = It;
    }
    return Ve;
  }
  function Pe(Y, k, F, ue) {
    return ne(Q(k, Y.length - F), Y, F, ue);
  }
  function se(Y, k, F, ue) {
    return ne(b(k), Y, F, ue);
  }
  function Ce(Y, k, F, ue) {
    return ne(Z(k), Y, F, ue);
  }
  function Ge(Y, k, F, ue) {
    return ne(U(k, Y.length - F), Y, F, ue);
  }
  m.prototype.write = function(k, F, ue, Qe) {
    if (F === void 0)
      Qe = "utf8", ue = this.length, F = 0;
    else if (ue === void 0 && typeof F == "string")
      Qe = F, ue = this.length, F = 0;
    else if (isFinite(F))
      F = F >>> 0, isFinite(ue) ? (ue = ue >>> 0, Qe === void 0 && (Qe = "utf8")) : (Qe = ue, ue = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    const Oe = this.length - F;
    if ((ue === void 0 || ue > Oe) && (ue = Oe), k.length > 0 && (ue < 0 || F < 0) || F > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    Qe || (Qe = "utf8");
    let Ve = !1;
    for (; ; )
      switch (Qe) {
        case "hex":
          return Ie(this, k, F, ue);
        case "utf8":
        case "utf-8":
          return Pe(this, k, F, ue);
        case "ascii":
        case "latin1":
        case "binary":
          return se(this, k, F, ue);
        case "base64":
          return Ce(this, k, F, ue);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Ge(this, k, F, ue);
        default:
          if (Ve)
            throw new TypeError("Unknown encoding: " + Qe);
          Qe = ("" + Qe).toLowerCase(), Ve = !0;
      }
  }, m.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function $e(Y, k, F) {
    return k === 0 && F === Y.length ? n.fromByteArray(Y) : n.fromByteArray(Y.slice(k, F));
  }
  function Be(Y, k, F) {
    F = Math.min(Y.length, F);
    const ue = [];
    let Qe = k;
    for (; Qe < F; ) {
      const Oe = Y[Qe];
      let Ve = null, It = Oe > 239 ? 4 : Oe > 223 ? 3 : Oe > 191 ? 2 : 1;
      if (Qe + It <= F) {
        let vt, Qt, Ct, Rt;
        switch (It) {
          case 1:
            Oe < 128 && (Ve = Oe);
            break;
          case 2:
            vt = Y[Qe + 1], (vt & 192) === 128 && (Rt = (Oe & 31) << 6 | vt & 63, Rt > 127 && (Ve = Rt));
            break;
          case 3:
            vt = Y[Qe + 1], Qt = Y[Qe + 2], (vt & 192) === 128 && (Qt & 192) === 128 && (Rt = (Oe & 15) << 12 | (vt & 63) << 6 | Qt & 63, Rt > 2047 && (Rt < 55296 || Rt > 57343) && (Ve = Rt));
            break;
          case 4:
            vt = Y[Qe + 1], Qt = Y[Qe + 2], Ct = Y[Qe + 3], (vt & 192) === 128 && (Qt & 192) === 128 && (Ct & 192) === 128 && (Rt = (Oe & 15) << 18 | (vt & 63) << 12 | (Qt & 63) << 6 | Ct & 63, Rt > 65535 && Rt < 1114112 && (Ve = Rt));
        }
      }
      Ve === null ? (Ve = 65533, It = 1) : Ve > 65535 && (Ve -= 65536, ue.push(Ve >>> 10 & 1023 | 55296), Ve = 56320 | Ve & 1023), ue.push(Ve), Qe += It;
    }
    return We(ue);
  }
  const Me = 4096;
  function We(Y) {
    const k = Y.length;
    if (k <= Me)
      return String.fromCharCode.apply(String, Y);
    let F = "", ue = 0;
    for (; ue < k; )
      F += String.fromCharCode.apply(
        String,
        Y.slice(ue, ue += Me)
      );
    return F;
  }
  function nt(Y, k, F) {
    let ue = "";
    F = Math.min(Y.length, F);
    for (let Qe = k; Qe < F; ++Qe)
      ue += String.fromCharCode(Y[Qe] & 127);
    return ue;
  }
  function Xe(Y, k, F) {
    let ue = "";
    F = Math.min(Y.length, F);
    for (let Qe = k; Qe < F; ++Qe)
      ue += String.fromCharCode(Y[Qe]);
    return ue;
  }
  function Je(Y, k, F) {
    const ue = Y.length;
    (!k || k < 0) && (k = 0), (!F || F < 0 || F > ue) && (F = ue);
    let Qe = "";
    for (let Oe = k; Oe < F; ++Oe)
      Qe += Ke[Y[Oe]];
    return Qe;
  }
  function qe(Y, k, F) {
    const ue = Y.slice(k, F);
    let Qe = "";
    for (let Oe = 0; Oe < ue.length - 1; Oe += 2)
      Qe += String.fromCharCode(ue[Oe] + ue[Oe + 1] * 256);
    return Qe;
  }
  m.prototype.slice = function(k, F) {
    const ue = this.length;
    k = ~~k, F = F === void 0 ? ue : ~~F, k < 0 ? (k += ue, k < 0 && (k = 0)) : k > ue && (k = ue), F < 0 ? (F += ue, F < 0 && (F = 0)) : F > ue && (F = ue), F < k && (F = k);
    const Qe = this.subarray(k, F);
    return Object.setPrototypeOf(Qe, m.prototype), Qe;
  };
  function ye(Y, k, F) {
    if (Y % 1 !== 0 || Y < 0)
      throw new RangeError("offset is not uint");
    if (Y + k > F)
      throw new RangeError("Trying to access beyond buffer length");
  }
  m.prototype.readUintLE = m.prototype.readUIntLE = function(k, F, ue) {
    k = k >>> 0, F = F >>> 0, ue || ye(k, F, this.length);
    let Qe = this[k], Oe = 1, Ve = 0;
    for (; ++Ve < F && (Oe *= 256); )
      Qe += this[k + Ve] * Oe;
    return Qe;
  }, m.prototype.readUintBE = m.prototype.readUIntBE = function(k, F, ue) {
    k = k >>> 0, F = F >>> 0, ue || ye(k, F, this.length);
    let Qe = this[k + --F], Oe = 1;
    for (; F > 0 && (Oe *= 256); )
      Qe += this[k + --F] * Oe;
    return Qe;
  }, m.prototype.readUint8 = m.prototype.readUInt8 = function(k, F) {
    return k = k >>> 0, F || ye(k, 1, this.length), this[k];
  }, m.prototype.readUint16LE = m.prototype.readUInt16LE = function(k, F) {
    return k = k >>> 0, F || ye(k, 2, this.length), this[k] | this[k + 1] << 8;
  }, m.prototype.readUint16BE = m.prototype.readUInt16BE = function(k, F) {
    return k = k >>> 0, F || ye(k, 2, this.length), this[k] << 8 | this[k + 1];
  }, m.prototype.readUint32LE = m.prototype.readUInt32LE = function(k, F) {
    return k = k >>> 0, F || ye(k, 4, this.length), (this[k] | this[k + 1] << 8 | this[k + 2] << 16) + this[k + 3] * 16777216;
  }, m.prototype.readUint32BE = m.prototype.readUInt32BE = function(k, F) {
    return k = k >>> 0, F || ye(k, 4, this.length), this[k] * 16777216 + (this[k + 1] << 16 | this[k + 2] << 8 | this[k + 3]);
  }, m.prototype.readBigUInt64LE = Ze(function(k) {
    k = k >>> 0, be(k, "offset");
    const F = this[k], ue = this[k + 7];
    (F === void 0 || ue === void 0) && fe(k, this.length - 8);
    const Qe = F + this[++k] * 2 ** 8 + this[++k] * 2 ** 16 + this[++k] * 2 ** 24, Oe = this[++k] + this[++k] * 2 ** 8 + this[++k] * 2 ** 16 + ue * 2 ** 24;
    return BigInt(Qe) + (BigInt(Oe) << BigInt(32));
  }), m.prototype.readBigUInt64BE = Ze(function(k) {
    k = k >>> 0, be(k, "offset");
    const F = this[k], ue = this[k + 7];
    (F === void 0 || ue === void 0) && fe(k, this.length - 8);
    const Qe = F * 2 ** 24 + this[++k] * 2 ** 16 + this[++k] * 2 ** 8 + this[++k], Oe = this[++k] * 2 ** 24 + this[++k] * 2 ** 16 + this[++k] * 2 ** 8 + ue;
    return (BigInt(Qe) << BigInt(32)) + BigInt(Oe);
  }), m.prototype.readIntLE = function(k, F, ue) {
    k = k >>> 0, F = F >>> 0, ue || ye(k, F, this.length);
    let Qe = this[k], Oe = 1, Ve = 0;
    for (; ++Ve < F && (Oe *= 256); )
      Qe += this[k + Ve] * Oe;
    return Oe *= 128, Qe >= Oe && (Qe -= Math.pow(2, 8 * F)), Qe;
  }, m.prototype.readIntBE = function(k, F, ue) {
    k = k >>> 0, F = F >>> 0, ue || ye(k, F, this.length);
    let Qe = F, Oe = 1, Ve = this[k + --Qe];
    for (; Qe > 0 && (Oe *= 256); )
      Ve += this[k + --Qe] * Oe;
    return Oe *= 128, Ve >= Oe && (Ve -= Math.pow(2, 8 * F)), Ve;
  }, m.prototype.readInt8 = function(k, F) {
    return k = k >>> 0, F || ye(k, 1, this.length), this[k] & 128 ? (255 - this[k] + 1) * -1 : this[k];
  }, m.prototype.readInt16LE = function(k, F) {
    k = k >>> 0, F || ye(k, 2, this.length);
    const ue = this[k] | this[k + 1] << 8;
    return ue & 32768 ? ue | 4294901760 : ue;
  }, m.prototype.readInt16BE = function(k, F) {
    k = k >>> 0, F || ye(k, 2, this.length);
    const ue = this[k + 1] | this[k] << 8;
    return ue & 32768 ? ue | 4294901760 : ue;
  }, m.prototype.readInt32LE = function(k, F) {
    return k = k >>> 0, F || ye(k, 4, this.length), this[k] | this[k + 1] << 8 | this[k + 2] << 16 | this[k + 3] << 24;
  }, m.prototype.readInt32BE = function(k, F) {
    return k = k >>> 0, F || ye(k, 4, this.length), this[k] << 24 | this[k + 1] << 16 | this[k + 2] << 8 | this[k + 3];
  }, m.prototype.readBigInt64LE = Ze(function(k) {
    k = k >>> 0, be(k, "offset");
    const F = this[k], ue = this[k + 7];
    (F === void 0 || ue === void 0) && fe(k, this.length - 8);
    const Qe = this[k + 4] + this[k + 5] * 2 ** 8 + this[k + 6] * 2 ** 16 + (ue << 24);
    return (BigInt(Qe) << BigInt(32)) + BigInt(F + this[++k] * 2 ** 8 + this[++k] * 2 ** 16 + this[++k] * 2 ** 24);
  }), m.prototype.readBigInt64BE = Ze(function(k) {
    k = k >>> 0, be(k, "offset");
    const F = this[k], ue = this[k + 7];
    (F === void 0 || ue === void 0) && fe(k, this.length - 8);
    const Qe = (F << 24) + this[++k] * 2 ** 16 + this[++k] * 2 ** 8 + this[++k];
    return (BigInt(Qe) << BigInt(32)) + BigInt(this[++k] * 2 ** 24 + this[++k] * 2 ** 16 + this[++k] * 2 ** 8 + ue);
  }), m.prototype.readFloatLE = function(k, F) {
    return k = k >>> 0, F || ye(k, 4, this.length), o.read(this, k, !0, 23, 4);
  }, m.prototype.readFloatBE = function(k, F) {
    return k = k >>> 0, F || ye(k, 4, this.length), o.read(this, k, !1, 23, 4);
  }, m.prototype.readDoubleLE = function(k, F) {
    return k = k >>> 0, F || ye(k, 8, this.length), o.read(this, k, !0, 52, 8);
  }, m.prototype.readDoubleBE = function(k, F) {
    return k = k >>> 0, F || ye(k, 8, this.length), o.read(this, k, !1, 52, 8);
  };
  function Ue(Y, k, F, ue, Qe, Oe) {
    if (!m.isBuffer(Y))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (k > Qe || k < Oe)
      throw new RangeError('"value" argument is out of bounds');
    if (F + ue > Y.length)
      throw new RangeError("Index out of range");
  }
  m.prototype.writeUintLE = m.prototype.writeUIntLE = function(k, F, ue, Qe) {
    if (k = +k, F = F >>> 0, ue = ue >>> 0, !Qe) {
      const It = Math.pow(2, 8 * ue) - 1;
      Ue(this, k, F, ue, It, 0);
    }
    let Oe = 1, Ve = 0;
    for (this[F] = k & 255; ++Ve < ue && (Oe *= 256); )
      this[F + Ve] = k / Oe & 255;
    return F + ue;
  }, m.prototype.writeUintBE = m.prototype.writeUIntBE = function(k, F, ue, Qe) {
    if (k = +k, F = F >>> 0, ue = ue >>> 0, !Qe) {
      const It = Math.pow(2, 8 * ue) - 1;
      Ue(this, k, F, ue, It, 0);
    }
    let Oe = ue - 1, Ve = 1;
    for (this[F + Oe] = k & 255; --Oe >= 0 && (Ve *= 256); )
      this[F + Oe] = k / Ve & 255;
    return F + ue;
  }, m.prototype.writeUint8 = m.prototype.writeUInt8 = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 1, 255, 0), this[F] = k & 255, F + 1;
  }, m.prototype.writeUint16LE = m.prototype.writeUInt16LE = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 2, 65535, 0), this[F] = k & 255, this[F + 1] = k >>> 8, F + 2;
  }, m.prototype.writeUint16BE = m.prototype.writeUInt16BE = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 2, 65535, 0), this[F] = k >>> 8, this[F + 1] = k & 255, F + 2;
  }, m.prototype.writeUint32LE = m.prototype.writeUInt32LE = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 4, 4294967295, 0), this[F + 3] = k >>> 24, this[F + 2] = k >>> 16, this[F + 1] = k >>> 8, this[F] = k & 255, F + 4;
  }, m.prototype.writeUint32BE = m.prototype.writeUInt32BE = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 4, 4294967295, 0), this[F] = k >>> 24, this[F + 1] = k >>> 16, this[F + 2] = k >>> 8, this[F + 3] = k & 255, F + 4;
  };
  function ze(Y, k, F, ue, Qe) {
    z(k, ue, Qe, Y, F, 7);
    let Oe = Number(k & BigInt(4294967295));
    Y[F++] = Oe, Oe = Oe >> 8, Y[F++] = Oe, Oe = Oe >> 8, Y[F++] = Oe, Oe = Oe >> 8, Y[F++] = Oe;
    let Ve = Number(k >> BigInt(32) & BigInt(4294967295));
    return Y[F++] = Ve, Ve = Ve >> 8, Y[F++] = Ve, Ve = Ve >> 8, Y[F++] = Ve, Ve = Ve >> 8, Y[F++] = Ve, F;
  }
  function X(Y, k, F, ue, Qe) {
    z(k, ue, Qe, Y, F, 7);
    let Oe = Number(k & BigInt(4294967295));
    Y[F + 7] = Oe, Oe = Oe >> 8, Y[F + 6] = Oe, Oe = Oe >> 8, Y[F + 5] = Oe, Oe = Oe >> 8, Y[F + 4] = Oe;
    let Ve = Number(k >> BigInt(32) & BigInt(4294967295));
    return Y[F + 3] = Ve, Ve = Ve >> 8, Y[F + 2] = Ve, Ve = Ve >> 8, Y[F + 1] = Ve, Ve = Ve >> 8, Y[F] = Ve, F + 8;
  }
  m.prototype.writeBigUInt64LE = Ze(function(k, F = 0) {
    return ze(this, k, F, BigInt(0), BigInt("0xffffffffffffffff"));
  }), m.prototype.writeBigUInt64BE = Ze(function(k, F = 0) {
    return X(this, k, F, BigInt(0), BigInt("0xffffffffffffffff"));
  }), m.prototype.writeIntLE = function(k, F, ue, Qe) {
    if (k = +k, F = F >>> 0, !Qe) {
      const vt = Math.pow(2, 8 * ue - 1);
      Ue(this, k, F, ue, vt - 1, -vt);
    }
    let Oe = 0, Ve = 1, It = 0;
    for (this[F] = k & 255; ++Oe < ue && (Ve *= 256); )
      k < 0 && It === 0 && this[F + Oe - 1] !== 0 && (It = 1), this[F + Oe] = (k / Ve >> 0) - It & 255;
    return F + ue;
  }, m.prototype.writeIntBE = function(k, F, ue, Qe) {
    if (k = +k, F = F >>> 0, !Qe) {
      const vt = Math.pow(2, 8 * ue - 1);
      Ue(this, k, F, ue, vt - 1, -vt);
    }
    let Oe = ue - 1, Ve = 1, It = 0;
    for (this[F + Oe] = k & 255; --Oe >= 0 && (Ve *= 256); )
      k < 0 && It === 0 && this[F + Oe + 1] !== 0 && (It = 1), this[F + Oe] = (k / Ve >> 0) - It & 255;
    return F + ue;
  }, m.prototype.writeInt8 = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 1, 127, -128), k < 0 && (k = 255 + k + 1), this[F] = k & 255, F + 1;
  }, m.prototype.writeInt16LE = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 2, 32767, -32768), this[F] = k & 255, this[F + 1] = k >>> 8, F + 2;
  }, m.prototype.writeInt16BE = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 2, 32767, -32768), this[F] = k >>> 8, this[F + 1] = k & 255, F + 2;
  }, m.prototype.writeInt32LE = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 4, 2147483647, -2147483648), this[F] = k & 255, this[F + 1] = k >>> 8, this[F + 2] = k >>> 16, this[F + 3] = k >>> 24, F + 4;
  }, m.prototype.writeInt32BE = function(k, F, ue) {
    return k = +k, F = F >>> 0, ue || Ue(this, k, F, 4, 2147483647, -2147483648), k < 0 && (k = 4294967295 + k + 1), this[F] = k >>> 24, this[F + 1] = k >>> 16, this[F + 2] = k >>> 8, this[F + 3] = k & 255, F + 4;
  }, m.prototype.writeBigInt64LE = Ze(function(k, F = 0) {
    return ze(this, k, F, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), m.prototype.writeBigInt64BE = Ze(function(k, F = 0) {
    return X(this, k, F, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  function ut(Y, k, F, ue, Qe, Oe) {
    if (F + ue > Y.length)
      throw new RangeError("Index out of range");
    if (F < 0)
      throw new RangeError("Index out of range");
  }
  function ot(Y, k, F, ue, Qe) {
    return k = +k, F = F >>> 0, Qe || ut(Y, k, F, 4), o.write(Y, k, F, ue, 23, 4), F + 4;
  }
  m.prototype.writeFloatLE = function(k, F, ue) {
    return ot(this, k, F, !0, ue);
  }, m.prototype.writeFloatBE = function(k, F, ue) {
    return ot(this, k, F, !1, ue);
  };
  function mt(Y, k, F, ue, Qe) {
    return k = +k, F = F >>> 0, Qe || ut(Y, k, F, 8), o.write(Y, k, F, ue, 52, 8), F + 8;
  }
  m.prototype.writeDoubleLE = function(k, F, ue) {
    return mt(this, k, F, !0, ue);
  }, m.prototype.writeDoubleBE = function(k, F, ue) {
    return mt(this, k, F, !1, ue);
  }, m.prototype.copy = function(k, F, ue, Qe) {
    if (!m.isBuffer(k))
      throw new TypeError("argument should be a Buffer");
    if (ue || (ue = 0), !Qe && Qe !== 0 && (Qe = this.length), F >= k.length && (F = k.length), F || (F = 0), Qe > 0 && Qe < ue && (Qe = ue), Qe === ue || k.length === 0 || this.length === 0)
      return 0;
    if (F < 0)
      throw new RangeError("targetStart out of bounds");
    if (ue < 0 || ue >= this.length)
      throw new RangeError("Index out of range");
    if (Qe < 0)
      throw new RangeError("sourceEnd out of bounds");
    Qe > this.length && (Qe = this.length), k.length - F < Qe - ue && (Qe = k.length - F + ue);
    const Oe = Qe - ue;
    return this === k && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(F, ue, Qe) : Uint8Array.prototype.set.call(
      k,
      this.subarray(ue, Qe),
      F
    ), Oe;
  }, m.prototype.fill = function(k, F, ue, Qe) {
    if (typeof k == "string") {
      if (typeof F == "string" ? (Qe = F, F = 0, ue = this.length) : typeof ue == "string" && (Qe = ue, ue = this.length), Qe !== void 0 && typeof Qe != "string")
        throw new TypeError("encoding must be a string");
      if (typeof Qe == "string" && !m.isEncoding(Qe))
        throw new TypeError("Unknown encoding: " + Qe);
      if (k.length === 1) {
        const Ve = k.charCodeAt(0);
        (Qe === "utf8" && Ve < 128 || Qe === "latin1") && (k = Ve);
      }
    } else
      typeof k == "number" ? k = k & 255 : typeof k == "boolean" && (k = Number(k));
    if (F < 0 || this.length < F || this.length < ue)
      throw new RangeError("Out of range index");
    if (ue <= F)
      return this;
    F = F >>> 0, ue = ue === void 0 ? this.length : ue >>> 0, k || (k = 0);
    let Oe;
    if (typeof k == "number")
      for (Oe = F; Oe < ue; ++Oe)
        this[Oe] = k;
    else {
      const Ve = m.isBuffer(k) ? k : m.from(k, Qe), It = Ve.length;
      if (It === 0)
        throw new TypeError('The value "' + k + '" is invalid for argument "value"');
      for (Oe = 0; Oe < ue - F; ++Oe)
        this[Oe + F] = Ve[Oe % It];
    }
    return this;
  };
  const ve = {};
  function je(Y, k, F) {
    ve[Y] = class extends F {
      constructor() {
        super(), Object.defineProperty(this, "message", {
          value: k.apply(this, arguments),
          writable: !0,
          configurable: !0
        }), this.name = `${this.name} [${Y}]`, this.stack, delete this.name;
      }
      get code() {
        return Y;
      }
      set code(Qe) {
        Object.defineProperty(this, "code", {
          configurable: !0,
          enumerable: !0,
          value: Qe,
          writable: !0
        });
      }
      toString() {
        return `${this.name} [${Y}]: ${this.message}`;
      }
    };
  }
  je(
    "ERR_BUFFER_OUT_OF_BOUNDS",
    function(Y) {
      return Y ? `${Y} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    },
    RangeError
  ), je(
    "ERR_INVALID_ARG_TYPE",
    function(Y, k) {
      return `The "${Y}" argument must be of type number. Received type ${typeof k}`;
    },
    TypeError
  ), je(
    "ERR_OUT_OF_RANGE",
    function(Y, k, F) {
      let ue = `The value of "${Y}" is out of range.`, Qe = F;
      return Number.isInteger(F) && Math.abs(F) > 2 ** 32 ? Qe = ie(String(F)) : typeof F == "bigint" && (Qe = String(F), (F > BigInt(2) ** BigInt(32) || F < -(BigInt(2) ** BigInt(32))) && (Qe = ie(Qe)), Qe += "n"), ue += ` It must be ${k}. Received ${Qe}`, ue;
    },
    RangeError
  );
  function ie(Y) {
    let k = "", F = Y.length;
    const ue = Y[0] === "-" ? 1 : 0;
    for (; F >= ue + 4; F -= 3)
      k = `_${Y.slice(F - 3, F)}${k}`;
    return `${Y.slice(0, F)}${k}`;
  }
  function ae(Y, k, F) {
    be(k, "offset"), (Y[k] === void 0 || Y[k + F] === void 0) && fe(k, Y.length - (F + 1));
  }
  function z(Y, k, F, ue, Qe, Oe) {
    if (Y > F || Y < k) {
      const Ve = typeof k == "bigint" ? "n" : "";
      let It;
      throw Oe > 3 ? k === 0 || k === BigInt(0) ? It = `>= 0${Ve} and < 2${Ve} ** ${(Oe + 1) * 8}${Ve}` : It = `>= -(2${Ve} ** ${(Oe + 1) * 8 - 1}${Ve}) and < 2 ** ${(Oe + 1) * 8 - 1}${Ve}` : It = `>= ${k}${Ve} and <= ${F}${Ve}`, new ve.ERR_OUT_OF_RANGE("value", It, Y);
    }
    ae(ue, Qe, Oe);
  }
  function be(Y, k) {
    if (typeof Y != "number")
      throw new ve.ERR_INVALID_ARG_TYPE(k, "number", Y);
  }
  function fe(Y, k, F) {
    throw Math.floor(Y) !== Y ? (be(Y, F), new ve.ERR_OUT_OF_RANGE(F || "offset", "an integer", Y)) : k < 0 ? new ve.ERR_BUFFER_OUT_OF_BOUNDS() : new ve.ERR_OUT_OF_RANGE(
      F || "offset",
      `>= ${F ? 1 : 0} and <= ${k}`,
      Y
    );
  }
  const J = /[^+/0-9A-Za-z-_]/g;
  function R(Y) {
    if (Y = Y.split("=")[0], Y = Y.trim().replace(J, ""), Y.length < 2)
      return "";
    for (; Y.length % 4 !== 0; )
      Y = Y + "=";
    return Y;
  }
  function Q(Y, k) {
    k = k || 1 / 0;
    let F;
    const ue = Y.length;
    let Qe = null;
    const Oe = [];
    for (let Ve = 0; Ve < ue; ++Ve) {
      if (F = Y.charCodeAt(Ve), F > 55295 && F < 57344) {
        if (!Qe) {
          if (F > 56319) {
            (k -= 3) > -1 && Oe.push(239, 191, 189);
            continue;
          } else if (Ve + 1 === ue) {
            (k -= 3) > -1 && Oe.push(239, 191, 189);
            continue;
          }
          Qe = F;
          continue;
        }
        if (F < 56320) {
          (k -= 3) > -1 && Oe.push(239, 191, 189), Qe = F;
          continue;
        }
        F = (Qe - 55296 << 10 | F - 56320) + 65536;
      } else
        Qe && (k -= 3) > -1 && Oe.push(239, 191, 189);
      if (Qe = null, F < 128) {
        if ((k -= 1) < 0)
          break;
        Oe.push(F);
      } else if (F < 2048) {
        if ((k -= 2) < 0)
          break;
        Oe.push(
          F >> 6 | 192,
          F & 63 | 128
        );
      } else if (F < 65536) {
        if ((k -= 3) < 0)
          break;
        Oe.push(
          F >> 12 | 224,
          F >> 6 & 63 | 128,
          F & 63 | 128
        );
      } else if (F < 1114112) {
        if ((k -= 4) < 0)
          break;
        Oe.push(
          F >> 18 | 240,
          F >> 12 & 63 | 128,
          F >> 6 & 63 | 128,
          F & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Oe;
  }
  function b(Y) {
    const k = [];
    for (let F = 0; F < Y.length; ++F)
      k.push(Y.charCodeAt(F) & 255);
    return k;
  }
  function U(Y, k) {
    let F, ue, Qe;
    const Oe = [];
    for (let Ve = 0; Ve < Y.length && !((k -= 2) < 0); ++Ve)
      F = Y.charCodeAt(Ve), ue = F >> 8, Qe = F % 256, Oe.push(Qe), Oe.push(ue);
    return Oe;
  }
  function Z(Y) {
    return n.toByteArray(R(Y));
  }
  function ne(Y, k, F, ue) {
    let Qe;
    for (Qe = 0; Qe < ue && !(Qe + F >= k.length || Qe >= Y.length); ++Qe)
      k[Qe + F] = Y[Qe];
    return Qe;
  }
  function le(Y, k) {
    return Y instanceof k || Y != null && Y.constructor != null && Y.constructor.name != null && Y.constructor.name === k.name;
  }
  function Ne(Y) {
    return Y !== Y;
  }
  const Ke = function() {
    const Y = "0123456789abcdef", k = new Array(256);
    for (let F = 0; F < 16; ++F) {
      const ue = F * 16;
      for (let Qe = 0; Qe < 16; ++Qe)
        k[ue + Qe] = Y[F] + Y[Qe];
    }
    return k;
  }();
  function Ze(Y) {
    return typeof BigInt > "u" ? et : Y;
  }
  function et() {
    throw new Error("BigInt not supported");
  }
})(buffer$1);
var ReplicaRejectCode$1;
(function(e) {
  e[e.SysFatal = 1] = "SysFatal", e[e.SysTransient = 2] = "SysTransient", e[e.DestinationInvalid = 3] = "DestinationInvalid", e[e.CanisterReject = 4] = "CanisterReject", e[e.CanisterError = 5] = "CanisterError";
})(ReplicaRejectCode$1 || (ReplicaRejectCode$1 = {}));
const alphabet = "abcdefghijklmnopqrstuvwxyz234567", lookupTable = /* @__PURE__ */ Object.create(null);
for (let e = 0; e < alphabet.length; e++)
  lookupTable[alphabet[e]] = e;
lookupTable[0] = lookupTable.o;
lookupTable[1] = lookupTable.i;
function encode$4(e) {
  let n = 0, o = 0, s = "";
  function u(d) {
    return n < 0 ? o |= d >> -n : o = d << n & 248, n > 3 ? (n -= 8, 1) : (n < 4 && (s += alphabet[o >> 3], n += 5), 0);
  }
  for (let d = 0; d < e.length; )
    d += u(e[d]);
  return s + (n < 0 ? alphabet[o >> 3] : "");
}
function decode$5(e) {
  let n = 0, o = 0;
  const s = new Uint8Array(e.length * 4 / 3 | 0);
  let u = 0;
  function d(g) {
    let m = lookupTable[g.toLowerCase()];
    if (m === void 0)
      throw new Error(`Invalid character: ${JSON.stringify(g)}`);
    m <<= 3, o |= m >>> n, n += 5, n >= 8 && (s[u++] = o, n -= 8, n > 0 ? o = m << 5 - n & 255 : o = 0);
  }
  for (const g of e)
    d(g);
  return s.slice(0, u);
}
const lookUpTable = new Uint32Array([
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
]);
function getCrc32(e) {
  const n = new Uint8Array(e);
  let o = -1;
  for (let s = 0; s < n.length; s++) {
    const d = (n[s] ^ o) & 255;
    o = lookUpTable[d] ^ o >>> 8;
  }
  return (o ^ -1) >>> 0;
}
function sha224$1(e) {
  const n = sha256$1.exports.sha224.create();
  return n.update(e), new Uint8Array(n.array());
}
const SELF_AUTHENTICATING_SUFFIX = 2, ANONYMOUS_SUFFIX = 4, fromHexString = (e) => {
  var n;
  return new Uint8Array(((n = e.match(/.{1,2}/g)) !== null && n !== void 0 ? n : []).map((o) => parseInt(o, 16)));
}, toHexString = (e) => e.reduce((n, o) => n + o.toString(16).padStart(2, "0"), "");
class Principal$2 {
  constructor(n) {
    this._arr = n, this._isPrincipal = !0;
  }
  static anonymous() {
    return new this(new Uint8Array([ANONYMOUS_SUFFIX]));
  }
  static selfAuthenticating(n) {
    const o = sha224$1(n);
    return new this(new Uint8Array([...o, SELF_AUTHENTICATING_SUFFIX]));
  }
  static from(n) {
    if (typeof n == "string")
      return Principal$2.fromText(n);
    if (typeof n == "object" && n !== null && n._isPrincipal === !0)
      return new Principal$2(n._arr);
    throw new Error(`Impossible to convert ${JSON.stringify(n)} to Principal.`);
  }
  static fromHex(n) {
    return new this(fromHexString(n));
  }
  static fromText(n) {
    const o = n.toLowerCase().replace(/-/g, "");
    let s = decode$5(o);
    s = s.slice(4, s.length);
    const u = new this(s);
    if (u.toText() !== n)
      throw new Error(`Principal "${u.toText()}" does not have a valid checksum.`);
    return u;
  }
  static fromUint8Array(n) {
    return new this(n);
  }
  isAnonymous() {
    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;
  }
  toUint8Array() {
    return this._arr;
  }
  toHex() {
    return toHexString(this._arr).toUpperCase();
  }
  toText() {
    const n = new ArrayBuffer(4);
    new DataView(n).setUint32(0, getCrc32(this._arr));
    const s = Uint8Array.from(buffer$1.Buffer.from(n)), u = Uint8Array.from(this._arr), d = new Uint8Array([...s, ...u]), m = encode$4(d).match(/.{1,5}/g);
    if (!m)
      throw new Error();
    return m.join("-");
  }
  toString() {
    return this.toText();
  }
}
const esm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Principal: Principal$2
}, Symbol.toStringTag, { value: "Module" }));
var src$1 = {}, buffer = {};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(e) {
  var n = base64Js, o = ieee754$1, s = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  e.Buffer = m, e.SlowBuffer = O, e.INSPECT_MAX_BYTES = 50;
  var u = 2147483647;
  e.kMaxLength = u, m.TYPED_ARRAY_SUPPORT = d(), !m.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function d() {
    try {
      var R = new Uint8Array(1), Q = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(Q, Uint8Array.prototype), Object.setPrototypeOf(R, Q), R.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(m.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (!!m.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(m.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (!!m.isBuffer(this))
        return this.byteOffset;
    }
  });
  function g(R) {
    if (R > u)
      throw new RangeError('The value "' + R + '" is invalid for option "size"');
    var Q = new Uint8Array(R);
    return Object.setPrototypeOf(Q, m.prototype), Q;
  }
  function m(R, Q, b) {
    if (typeof R == "number") {
      if (typeof Q == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return C(R);
    }
    return w(R, Q, b);
  }
  m.poolSize = 8192;
  function w(R, Q, b) {
    if (typeof R == "string")
      return v(R, Q);
    if (ArrayBuffer.isView(R))
      return T(R);
    if (R == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof R
      );
    if (be(R, ArrayBuffer) || R && be(R.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (be(R, SharedArrayBuffer) || R && be(R.buffer, SharedArrayBuffer)))
      return M(R, Q, b);
    if (typeof R == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    var U = R.valueOf && R.valueOf();
    if (U != null && U !== R)
      return m.from(U, Q, b);
    var Z = D(R);
    if (Z)
      return Z;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof R[Symbol.toPrimitive] == "function")
      return m.from(
        R[Symbol.toPrimitive]("string"),
        Q,
        b
      );
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof R
    );
  }
  m.from = function(R, Q, b) {
    return w(R, Q, b);
  }, Object.setPrototypeOf(m.prototype, Uint8Array.prototype), Object.setPrototypeOf(m, Uint8Array);
  function B(R) {
    if (typeof R != "number")
      throw new TypeError('"size" argument must be of type number');
    if (R < 0)
      throw new RangeError('The value "' + R + '" is invalid for option "size"');
  }
  function x(R, Q, b) {
    return B(R), R <= 0 ? g(R) : Q !== void 0 ? typeof b == "string" ? g(R).fill(Q, b) : g(R).fill(Q) : g(R);
  }
  m.alloc = function(R, Q, b) {
    return x(R, Q, b);
  };
  function C(R) {
    return B(R), g(R < 0 ? 0 : V(R) | 0);
  }
  m.allocUnsafe = function(R) {
    return C(R);
  }, m.allocUnsafeSlow = function(R) {
    return C(R);
  };
  function v(R, Q) {
    if ((typeof Q != "string" || Q === "") && (Q = "utf8"), !m.isEncoding(Q))
      throw new TypeError("Unknown encoding: " + Q);
    var b = H(R, Q) | 0, U = g(b), Z = U.write(R, Q);
    return Z !== b && (U = U.slice(0, Z)), U;
  }
  function y(R) {
    for (var Q = R.length < 0 ? 0 : V(R.length) | 0, b = g(Q), U = 0; U < Q; U += 1)
      b[U] = R[U] & 255;
    return b;
  }
  function T(R) {
    if (be(R, Uint8Array)) {
      var Q = new Uint8Array(R);
      return M(Q.buffer, Q.byteOffset, Q.byteLength);
    }
    return y(R);
  }
  function M(R, Q, b) {
    if (Q < 0 || R.byteLength < Q)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (R.byteLength < Q + (b || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    var U;
    return Q === void 0 && b === void 0 ? U = new Uint8Array(R) : b === void 0 ? U = new Uint8Array(R, Q) : U = new Uint8Array(R, Q, b), Object.setPrototypeOf(U, m.prototype), U;
  }
  function D(R) {
    if (m.isBuffer(R)) {
      var Q = V(R.length) | 0, b = g(Q);
      return b.length === 0 || R.copy(b, 0, 0, Q), b;
    }
    if (R.length !== void 0)
      return typeof R.length != "number" || fe(R.length) ? g(0) : y(R);
    if (R.type === "Buffer" && Array.isArray(R.data))
      return y(R.data);
  }
  function V(R) {
    if (R >= u)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + u.toString(16) + " bytes");
    return R | 0;
  }
  function O(R) {
    return +R != R && (R = 0), m.alloc(+R);
  }
  m.isBuffer = function(Q) {
    return Q != null && Q._isBuffer === !0 && Q !== m.prototype;
  }, m.compare = function(Q, b) {
    if (be(Q, Uint8Array) && (Q = m.from(Q, Q.offset, Q.byteLength)), be(b, Uint8Array) && (b = m.from(b, b.offset, b.byteLength)), !m.isBuffer(Q) || !m.isBuffer(b))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (Q === b)
      return 0;
    for (var U = Q.length, Z = b.length, ne = 0, le = Math.min(U, Z); ne < le; ++ne)
      if (Q[ne] !== b[ne]) {
        U = Q[ne], Z = b[ne];
        break;
      }
    return U < Z ? -1 : Z < U ? 1 : 0;
  }, m.isEncoding = function(Q) {
    switch (String(Q).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, m.concat = function(Q, b) {
    if (!Array.isArray(Q))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (Q.length === 0)
      return m.alloc(0);
    var U;
    if (b === void 0)
      for (b = 0, U = 0; U < Q.length; ++U)
        b += Q[U].length;
    var Z = m.allocUnsafe(b), ne = 0;
    for (U = 0; U < Q.length; ++U) {
      var le = Q[U];
      if (be(le, Uint8Array))
        ne + le.length > Z.length ? m.from(le).copy(Z, ne) : Uint8Array.prototype.set.call(
          Z,
          le,
          ne
        );
      else if (m.isBuffer(le))
        le.copy(Z, ne);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      ne += le.length;
    }
    return Z;
  };
  function H(R, Q) {
    if (m.isBuffer(R))
      return R.length;
    if (ArrayBuffer.isView(R) || be(R, ArrayBuffer))
      return R.byteLength;
    if (typeof R != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof R
      );
    var b = R.length, U = arguments.length > 2 && arguments[2] === !0;
    if (!U && b === 0)
      return 0;
    for (var Z = !1; ; )
      switch (Q) {
        case "ascii":
        case "latin1":
        case "binary":
          return b;
        case "utf8":
        case "utf-8":
          return ve(R).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return b * 2;
        case "hex":
          return b >>> 1;
        case "base64":
          return ae(R).length;
        default:
          if (Z)
            return U ? -1 : ve(R).length;
          Q = ("" + Q).toLowerCase(), Z = !0;
      }
  }
  m.byteLength = H;
  function q(R, Q, b) {
    var U = !1;
    if ((Q === void 0 || Q < 0) && (Q = 0), Q > this.length || ((b === void 0 || b > this.length) && (b = this.length), b <= 0) || (b >>>= 0, Q >>>= 0, b <= Q))
      return "";
    for (R || (R = "utf8"); ; )
      switch (R) {
        case "hex":
          return Je(this, Q, b);
        case "utf8":
        case "utf-8":
          return Be(this, Q, b);
        case "ascii":
          return nt(this, Q, b);
        case "latin1":
        case "binary":
          return Xe(this, Q, b);
        case "base64":
          return $e(this, Q, b);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return qe(this, Q, b);
        default:
          if (U)
            throw new TypeError("Unknown encoding: " + R);
          R = (R + "").toLowerCase(), U = !0;
      }
  }
  m.prototype._isBuffer = !0;
  function $(R, Q, b) {
    var U = R[Q];
    R[Q] = R[b], R[b] = U;
  }
  m.prototype.swap16 = function() {
    var Q = this.length;
    if (Q % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var b = 0; b < Q; b += 2)
      $(this, b, b + 1);
    return this;
  }, m.prototype.swap32 = function() {
    var Q = this.length;
    if (Q % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var b = 0; b < Q; b += 4)
      $(this, b, b + 3), $(this, b + 1, b + 2);
    return this;
  }, m.prototype.swap64 = function() {
    var Q = this.length;
    if (Q % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var b = 0; b < Q; b += 8)
      $(this, b, b + 7), $(this, b + 1, b + 6), $(this, b + 2, b + 5), $(this, b + 3, b + 4);
    return this;
  }, m.prototype.toString = function() {
    var Q = this.length;
    return Q === 0 ? "" : arguments.length === 0 ? Be(this, 0, Q) : q.apply(this, arguments);
  }, m.prototype.toLocaleString = m.prototype.toString, m.prototype.equals = function(Q) {
    if (!m.isBuffer(Q))
      throw new TypeError("Argument must be a Buffer");
    return this === Q ? !0 : m.compare(this, Q) === 0;
  }, m.prototype.inspect = function() {
    var Q = "", b = e.INSPECT_MAX_BYTES;
    return Q = this.toString("hex", 0, b).replace(/(.{2})/g, "$1 ").trim(), this.length > b && (Q += " ... "), "<Buffer " + Q + ">";
  }, s && (m.prototype[s] = m.prototype.inspect), m.prototype.compare = function(Q, b, U, Z, ne) {
    if (be(Q, Uint8Array) && (Q = m.from(Q, Q.offset, Q.byteLength)), !m.isBuffer(Q))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Q
      );
    if (b === void 0 && (b = 0), U === void 0 && (U = Q ? Q.length : 0), Z === void 0 && (Z = 0), ne === void 0 && (ne = this.length), b < 0 || U > Q.length || Z < 0 || ne > this.length)
      throw new RangeError("out of range index");
    if (Z >= ne && b >= U)
      return 0;
    if (Z >= ne)
      return -1;
    if (b >= U)
      return 1;
    if (b >>>= 0, U >>>= 0, Z >>>= 0, ne >>>= 0, this === Q)
      return 0;
    for (var le = ne - Z, Ne = U - b, Ke = Math.min(le, Ne), Ze = this.slice(Z, ne), et = Q.slice(b, U), Y = 0; Y < Ke; ++Y)
      if (Ze[Y] !== et[Y]) {
        le = Ze[Y], Ne = et[Y];
        break;
      }
    return le < Ne ? -1 : Ne < le ? 1 : 0;
  };
  function re(R, Q, b, U, Z) {
    if (R.length === 0)
      return -1;
    if (typeof b == "string" ? (U = b, b = 0) : b > 2147483647 ? b = 2147483647 : b < -2147483648 && (b = -2147483648), b = +b, fe(b) && (b = Z ? 0 : R.length - 1), b < 0 && (b = R.length + b), b >= R.length) {
      if (Z)
        return -1;
      b = R.length - 1;
    } else if (b < 0)
      if (Z)
        b = 0;
      else
        return -1;
    if (typeof Q == "string" && (Q = m.from(Q, U)), m.isBuffer(Q))
      return Q.length === 0 ? -1 : ce(R, Q, b, U, Z);
    if (typeof Q == "number")
      return Q = Q & 255, typeof Uint8Array.prototype.indexOf == "function" ? Z ? Uint8Array.prototype.indexOf.call(R, Q, b) : Uint8Array.prototype.lastIndexOf.call(R, Q, b) : ce(R, [Q], b, U, Z);
    throw new TypeError("val must be string, number or Buffer");
  }
  function ce(R, Q, b, U, Z) {
    var ne = 1, le = R.length, Ne = Q.length;
    if (U !== void 0 && (U = String(U).toLowerCase(), U === "ucs2" || U === "ucs-2" || U === "utf16le" || U === "utf-16le")) {
      if (R.length < 2 || Q.length < 2)
        return -1;
      ne = 2, le /= 2, Ne /= 2, b /= 2;
    }
    function Ke(F, ue) {
      return ne === 1 ? F[ue] : F.readUInt16BE(ue * ne);
    }
    var Ze;
    if (Z) {
      var et = -1;
      for (Ze = b; Ze < le; Ze++)
        if (Ke(R, Ze) === Ke(Q, et === -1 ? 0 : Ze - et)) {
          if (et === -1 && (et = Ze), Ze - et + 1 === Ne)
            return et * ne;
        } else
          et !== -1 && (Ze -= Ze - et), et = -1;
    } else
      for (b + Ne > le && (b = le - Ne), Ze = b; Ze >= 0; Ze--) {
        for (var Y = !0, k = 0; k < Ne; k++)
          if (Ke(R, Ze + k) !== Ke(Q, k)) {
            Y = !1;
            break;
          }
        if (Y)
          return Ze;
      }
    return -1;
  }
  m.prototype.includes = function(Q, b, U) {
    return this.indexOf(Q, b, U) !== -1;
  }, m.prototype.indexOf = function(Q, b, U) {
    return re(this, Q, b, U, !0);
  }, m.prototype.lastIndexOf = function(Q, b, U) {
    return re(this, Q, b, U, !1);
  };
  function Ie(R, Q, b, U) {
    b = Number(b) || 0;
    var Z = R.length - b;
    U ? (U = Number(U), U > Z && (U = Z)) : U = Z;
    var ne = Q.length;
    U > ne / 2 && (U = ne / 2);
    for (var le = 0; le < U; ++le) {
      var Ne = parseInt(Q.substr(le * 2, 2), 16);
      if (fe(Ne))
        return le;
      R[b + le] = Ne;
    }
    return le;
  }
  function Pe(R, Q, b, U) {
    return z(ve(Q, R.length - b), R, b, U);
  }
  function se(R, Q, b, U) {
    return z(je(Q), R, b, U);
  }
  function Ce(R, Q, b, U) {
    return z(ae(Q), R, b, U);
  }
  function Ge(R, Q, b, U) {
    return z(ie(Q, R.length - b), R, b, U);
  }
  m.prototype.write = function(Q, b, U, Z) {
    if (b === void 0)
      Z = "utf8", U = this.length, b = 0;
    else if (U === void 0 && typeof b == "string")
      Z = b, U = this.length, b = 0;
    else if (isFinite(b))
      b = b >>> 0, isFinite(U) ? (U = U >>> 0, Z === void 0 && (Z = "utf8")) : (Z = U, U = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    var ne = this.length - b;
    if ((U === void 0 || U > ne) && (U = ne), Q.length > 0 && (U < 0 || b < 0) || b > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    Z || (Z = "utf8");
    for (var le = !1; ; )
      switch (Z) {
        case "hex":
          return Ie(this, Q, b, U);
        case "utf8":
        case "utf-8":
          return Pe(this, Q, b, U);
        case "ascii":
        case "latin1":
        case "binary":
          return se(this, Q, b, U);
        case "base64":
          return Ce(this, Q, b, U);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Ge(this, Q, b, U);
        default:
          if (le)
            throw new TypeError("Unknown encoding: " + Z);
          Z = ("" + Z).toLowerCase(), le = !0;
      }
  }, m.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function $e(R, Q, b) {
    return Q === 0 && b === R.length ? n.fromByteArray(R) : n.fromByteArray(R.slice(Q, b));
  }
  function Be(R, Q, b) {
    b = Math.min(R.length, b);
    for (var U = [], Z = Q; Z < b; ) {
      var ne = R[Z], le = null, Ne = ne > 239 ? 4 : ne > 223 ? 3 : ne > 191 ? 2 : 1;
      if (Z + Ne <= b) {
        var Ke, Ze, et, Y;
        switch (Ne) {
          case 1:
            ne < 128 && (le = ne);
            break;
          case 2:
            Ke = R[Z + 1], (Ke & 192) === 128 && (Y = (ne & 31) << 6 | Ke & 63, Y > 127 && (le = Y));
            break;
          case 3:
            Ke = R[Z + 1], Ze = R[Z + 2], (Ke & 192) === 128 && (Ze & 192) === 128 && (Y = (ne & 15) << 12 | (Ke & 63) << 6 | Ze & 63, Y > 2047 && (Y < 55296 || Y > 57343) && (le = Y));
            break;
          case 4:
            Ke = R[Z + 1], Ze = R[Z + 2], et = R[Z + 3], (Ke & 192) === 128 && (Ze & 192) === 128 && (et & 192) === 128 && (Y = (ne & 15) << 18 | (Ke & 63) << 12 | (Ze & 63) << 6 | et & 63, Y > 65535 && Y < 1114112 && (le = Y));
        }
      }
      le === null ? (le = 65533, Ne = 1) : le > 65535 && (le -= 65536, U.push(le >>> 10 & 1023 | 55296), le = 56320 | le & 1023), U.push(le), Z += Ne;
    }
    return We(U);
  }
  var Me = 4096;
  function We(R) {
    var Q = R.length;
    if (Q <= Me)
      return String.fromCharCode.apply(String, R);
    for (var b = "", U = 0; U < Q; )
      b += String.fromCharCode.apply(
        String,
        R.slice(U, U += Me)
      );
    return b;
  }
  function nt(R, Q, b) {
    var U = "";
    b = Math.min(R.length, b);
    for (var Z = Q; Z < b; ++Z)
      U += String.fromCharCode(R[Z] & 127);
    return U;
  }
  function Xe(R, Q, b) {
    var U = "";
    b = Math.min(R.length, b);
    for (var Z = Q; Z < b; ++Z)
      U += String.fromCharCode(R[Z]);
    return U;
  }
  function Je(R, Q, b) {
    var U = R.length;
    (!Q || Q < 0) && (Q = 0), (!b || b < 0 || b > U) && (b = U);
    for (var Z = "", ne = Q; ne < b; ++ne)
      Z += J[R[ne]];
    return Z;
  }
  function qe(R, Q, b) {
    for (var U = R.slice(Q, b), Z = "", ne = 0; ne < U.length - 1; ne += 2)
      Z += String.fromCharCode(U[ne] + U[ne + 1] * 256);
    return Z;
  }
  m.prototype.slice = function(Q, b) {
    var U = this.length;
    Q = ~~Q, b = b === void 0 ? U : ~~b, Q < 0 ? (Q += U, Q < 0 && (Q = 0)) : Q > U && (Q = U), b < 0 ? (b += U, b < 0 && (b = 0)) : b > U && (b = U), b < Q && (b = Q);
    var Z = this.subarray(Q, b);
    return Object.setPrototypeOf(Z, m.prototype), Z;
  };
  function ye(R, Q, b) {
    if (R % 1 !== 0 || R < 0)
      throw new RangeError("offset is not uint");
    if (R + Q > b)
      throw new RangeError("Trying to access beyond buffer length");
  }
  m.prototype.readUintLE = m.prototype.readUIntLE = function(Q, b, U) {
    Q = Q >>> 0, b = b >>> 0, U || ye(Q, b, this.length);
    for (var Z = this[Q], ne = 1, le = 0; ++le < b && (ne *= 256); )
      Z += this[Q + le] * ne;
    return Z;
  }, m.prototype.readUintBE = m.prototype.readUIntBE = function(Q, b, U) {
    Q = Q >>> 0, b = b >>> 0, U || ye(Q, b, this.length);
    for (var Z = this[Q + --b], ne = 1; b > 0 && (ne *= 256); )
      Z += this[Q + --b] * ne;
    return Z;
  }, m.prototype.readUint8 = m.prototype.readUInt8 = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 1, this.length), this[Q];
  }, m.prototype.readUint16LE = m.prototype.readUInt16LE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 2, this.length), this[Q] | this[Q + 1] << 8;
  }, m.prototype.readUint16BE = m.prototype.readUInt16BE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 2, this.length), this[Q] << 8 | this[Q + 1];
  }, m.prototype.readUint32LE = m.prototype.readUInt32LE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 4, this.length), (this[Q] | this[Q + 1] << 8 | this[Q + 2] << 16) + this[Q + 3] * 16777216;
  }, m.prototype.readUint32BE = m.prototype.readUInt32BE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 4, this.length), this[Q] * 16777216 + (this[Q + 1] << 16 | this[Q + 2] << 8 | this[Q + 3]);
  }, m.prototype.readIntLE = function(Q, b, U) {
    Q = Q >>> 0, b = b >>> 0, U || ye(Q, b, this.length);
    for (var Z = this[Q], ne = 1, le = 0; ++le < b && (ne *= 256); )
      Z += this[Q + le] * ne;
    return ne *= 128, Z >= ne && (Z -= Math.pow(2, 8 * b)), Z;
  }, m.prototype.readIntBE = function(Q, b, U) {
    Q = Q >>> 0, b = b >>> 0, U || ye(Q, b, this.length);
    for (var Z = b, ne = 1, le = this[Q + --Z]; Z > 0 && (ne *= 256); )
      le += this[Q + --Z] * ne;
    return ne *= 128, le >= ne && (le -= Math.pow(2, 8 * b)), le;
  }, m.prototype.readInt8 = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 1, this.length), this[Q] & 128 ? (255 - this[Q] + 1) * -1 : this[Q];
  }, m.prototype.readInt16LE = function(Q, b) {
    Q = Q >>> 0, b || ye(Q, 2, this.length);
    var U = this[Q] | this[Q + 1] << 8;
    return U & 32768 ? U | 4294901760 : U;
  }, m.prototype.readInt16BE = function(Q, b) {
    Q = Q >>> 0, b || ye(Q, 2, this.length);
    var U = this[Q + 1] | this[Q] << 8;
    return U & 32768 ? U | 4294901760 : U;
  }, m.prototype.readInt32LE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 4, this.length), this[Q] | this[Q + 1] << 8 | this[Q + 2] << 16 | this[Q + 3] << 24;
  }, m.prototype.readInt32BE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 4, this.length), this[Q] << 24 | this[Q + 1] << 16 | this[Q + 2] << 8 | this[Q + 3];
  }, m.prototype.readFloatLE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 4, this.length), o.read(this, Q, !0, 23, 4);
  }, m.prototype.readFloatBE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 4, this.length), o.read(this, Q, !1, 23, 4);
  }, m.prototype.readDoubleLE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 8, this.length), o.read(this, Q, !0, 52, 8);
  }, m.prototype.readDoubleBE = function(Q, b) {
    return Q = Q >>> 0, b || ye(Q, 8, this.length), o.read(this, Q, !1, 52, 8);
  };
  function Ue(R, Q, b, U, Z, ne) {
    if (!m.isBuffer(R))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (Q > Z || Q < ne)
      throw new RangeError('"value" argument is out of bounds');
    if (b + U > R.length)
      throw new RangeError("Index out of range");
  }
  m.prototype.writeUintLE = m.prototype.writeUIntLE = function(Q, b, U, Z) {
    if (Q = +Q, b = b >>> 0, U = U >>> 0, !Z) {
      var ne = Math.pow(2, 8 * U) - 1;
      Ue(this, Q, b, U, ne, 0);
    }
    var le = 1, Ne = 0;
    for (this[b] = Q & 255; ++Ne < U && (le *= 256); )
      this[b + Ne] = Q / le & 255;
    return b + U;
  }, m.prototype.writeUintBE = m.prototype.writeUIntBE = function(Q, b, U, Z) {
    if (Q = +Q, b = b >>> 0, U = U >>> 0, !Z) {
      var ne = Math.pow(2, 8 * U) - 1;
      Ue(this, Q, b, U, ne, 0);
    }
    var le = U - 1, Ne = 1;
    for (this[b + le] = Q & 255; --le >= 0 && (Ne *= 256); )
      this[b + le] = Q / Ne & 255;
    return b + U;
  }, m.prototype.writeUint8 = m.prototype.writeUInt8 = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 1, 255, 0), this[b] = Q & 255, b + 1;
  }, m.prototype.writeUint16LE = m.prototype.writeUInt16LE = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 2, 65535, 0), this[b] = Q & 255, this[b + 1] = Q >>> 8, b + 2;
  }, m.prototype.writeUint16BE = m.prototype.writeUInt16BE = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 2, 65535, 0), this[b] = Q >>> 8, this[b + 1] = Q & 255, b + 2;
  }, m.prototype.writeUint32LE = m.prototype.writeUInt32LE = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 4, 4294967295, 0), this[b + 3] = Q >>> 24, this[b + 2] = Q >>> 16, this[b + 1] = Q >>> 8, this[b] = Q & 255, b + 4;
  }, m.prototype.writeUint32BE = m.prototype.writeUInt32BE = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 4, 4294967295, 0), this[b] = Q >>> 24, this[b + 1] = Q >>> 16, this[b + 2] = Q >>> 8, this[b + 3] = Q & 255, b + 4;
  }, m.prototype.writeIntLE = function(Q, b, U, Z) {
    if (Q = +Q, b = b >>> 0, !Z) {
      var ne = Math.pow(2, 8 * U - 1);
      Ue(this, Q, b, U, ne - 1, -ne);
    }
    var le = 0, Ne = 1, Ke = 0;
    for (this[b] = Q & 255; ++le < U && (Ne *= 256); )
      Q < 0 && Ke === 0 && this[b + le - 1] !== 0 && (Ke = 1), this[b + le] = (Q / Ne >> 0) - Ke & 255;
    return b + U;
  }, m.prototype.writeIntBE = function(Q, b, U, Z) {
    if (Q = +Q, b = b >>> 0, !Z) {
      var ne = Math.pow(2, 8 * U - 1);
      Ue(this, Q, b, U, ne - 1, -ne);
    }
    var le = U - 1, Ne = 1, Ke = 0;
    for (this[b + le] = Q & 255; --le >= 0 && (Ne *= 256); )
      Q < 0 && Ke === 0 && this[b + le + 1] !== 0 && (Ke = 1), this[b + le] = (Q / Ne >> 0) - Ke & 255;
    return b + U;
  }, m.prototype.writeInt8 = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 1, 127, -128), Q < 0 && (Q = 255 + Q + 1), this[b] = Q & 255, b + 1;
  }, m.prototype.writeInt16LE = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 2, 32767, -32768), this[b] = Q & 255, this[b + 1] = Q >>> 8, b + 2;
  }, m.prototype.writeInt16BE = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 2, 32767, -32768), this[b] = Q >>> 8, this[b + 1] = Q & 255, b + 2;
  }, m.prototype.writeInt32LE = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 4, 2147483647, -2147483648), this[b] = Q & 255, this[b + 1] = Q >>> 8, this[b + 2] = Q >>> 16, this[b + 3] = Q >>> 24, b + 4;
  }, m.prototype.writeInt32BE = function(Q, b, U) {
    return Q = +Q, b = b >>> 0, U || Ue(this, Q, b, 4, 2147483647, -2147483648), Q < 0 && (Q = 4294967295 + Q + 1), this[b] = Q >>> 24, this[b + 1] = Q >>> 16, this[b + 2] = Q >>> 8, this[b + 3] = Q & 255, b + 4;
  };
  function ze(R, Q, b, U, Z, ne) {
    if (b + U > R.length)
      throw new RangeError("Index out of range");
    if (b < 0)
      throw new RangeError("Index out of range");
  }
  function X(R, Q, b, U, Z) {
    return Q = +Q, b = b >>> 0, Z || ze(R, Q, b, 4), o.write(R, Q, b, U, 23, 4), b + 4;
  }
  m.prototype.writeFloatLE = function(Q, b, U) {
    return X(this, Q, b, !0, U);
  }, m.prototype.writeFloatBE = function(Q, b, U) {
    return X(this, Q, b, !1, U);
  };
  function ut(R, Q, b, U, Z) {
    return Q = +Q, b = b >>> 0, Z || ze(R, Q, b, 8), o.write(R, Q, b, U, 52, 8), b + 8;
  }
  m.prototype.writeDoubleLE = function(Q, b, U) {
    return ut(this, Q, b, !0, U);
  }, m.prototype.writeDoubleBE = function(Q, b, U) {
    return ut(this, Q, b, !1, U);
  }, m.prototype.copy = function(Q, b, U, Z) {
    if (!m.isBuffer(Q))
      throw new TypeError("argument should be a Buffer");
    if (U || (U = 0), !Z && Z !== 0 && (Z = this.length), b >= Q.length && (b = Q.length), b || (b = 0), Z > 0 && Z < U && (Z = U), Z === U || Q.length === 0 || this.length === 0)
      return 0;
    if (b < 0)
      throw new RangeError("targetStart out of bounds");
    if (U < 0 || U >= this.length)
      throw new RangeError("Index out of range");
    if (Z < 0)
      throw new RangeError("sourceEnd out of bounds");
    Z > this.length && (Z = this.length), Q.length - b < Z - U && (Z = Q.length - b + U);
    var ne = Z - U;
    return this === Q && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(b, U, Z) : Uint8Array.prototype.set.call(
      Q,
      this.subarray(U, Z),
      b
    ), ne;
  }, m.prototype.fill = function(Q, b, U, Z) {
    if (typeof Q == "string") {
      if (typeof b == "string" ? (Z = b, b = 0, U = this.length) : typeof U == "string" && (Z = U, U = this.length), Z !== void 0 && typeof Z != "string")
        throw new TypeError("encoding must be a string");
      if (typeof Z == "string" && !m.isEncoding(Z))
        throw new TypeError("Unknown encoding: " + Z);
      if (Q.length === 1) {
        var ne = Q.charCodeAt(0);
        (Z === "utf8" && ne < 128 || Z === "latin1") && (Q = ne);
      }
    } else
      typeof Q == "number" ? Q = Q & 255 : typeof Q == "boolean" && (Q = Number(Q));
    if (b < 0 || this.length < b || this.length < U)
      throw new RangeError("Out of range index");
    if (U <= b)
      return this;
    b = b >>> 0, U = U === void 0 ? this.length : U >>> 0, Q || (Q = 0);
    var le;
    if (typeof Q == "number")
      for (le = b; le < U; ++le)
        this[le] = Q;
    else {
      var Ne = m.isBuffer(Q) ? Q : m.from(Q, Z), Ke = Ne.length;
      if (Ke === 0)
        throw new TypeError('The value "' + Q + '" is invalid for argument "value"');
      for (le = 0; le < U - b; ++le)
        this[le + b] = Ne[le % Ke];
    }
    return this;
  };
  var ot = /[^+/0-9A-Za-z-_]/g;
  function mt(R) {
    if (R = R.split("=")[0], R = R.trim().replace(ot, ""), R.length < 2)
      return "";
    for (; R.length % 4 !== 0; )
      R = R + "=";
    return R;
  }
  function ve(R, Q) {
    Q = Q || 1 / 0;
    for (var b, U = R.length, Z = null, ne = [], le = 0; le < U; ++le) {
      if (b = R.charCodeAt(le), b > 55295 && b < 57344) {
        if (!Z) {
          if (b > 56319) {
            (Q -= 3) > -1 && ne.push(239, 191, 189);
            continue;
          } else if (le + 1 === U) {
            (Q -= 3) > -1 && ne.push(239, 191, 189);
            continue;
          }
          Z = b;
          continue;
        }
        if (b < 56320) {
          (Q -= 3) > -1 && ne.push(239, 191, 189), Z = b;
          continue;
        }
        b = (Z - 55296 << 10 | b - 56320) + 65536;
      } else
        Z && (Q -= 3) > -1 && ne.push(239, 191, 189);
      if (Z = null, b < 128) {
        if ((Q -= 1) < 0)
          break;
        ne.push(b);
      } else if (b < 2048) {
        if ((Q -= 2) < 0)
          break;
        ne.push(
          b >> 6 | 192,
          b & 63 | 128
        );
      } else if (b < 65536) {
        if ((Q -= 3) < 0)
          break;
        ne.push(
          b >> 12 | 224,
          b >> 6 & 63 | 128,
          b & 63 | 128
        );
      } else if (b < 1114112) {
        if ((Q -= 4) < 0)
          break;
        ne.push(
          b >> 18 | 240,
          b >> 12 & 63 | 128,
          b >> 6 & 63 | 128,
          b & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return ne;
  }
  function je(R) {
    for (var Q = [], b = 0; b < R.length; ++b)
      Q.push(R.charCodeAt(b) & 255);
    return Q;
  }
  function ie(R, Q) {
    for (var b, U, Z, ne = [], le = 0; le < R.length && !((Q -= 2) < 0); ++le)
      b = R.charCodeAt(le), U = b >> 8, Z = b % 256, ne.push(Z), ne.push(U);
    return ne;
  }
  function ae(R) {
    return n.toByteArray(mt(R));
  }
  function z(R, Q, b, U) {
    for (var Z = 0; Z < U && !(Z + b >= Q.length || Z >= R.length); ++Z)
      Q[Z + b] = R[Z];
    return Z;
  }
  function be(R, Q) {
    return R instanceof Q || R != null && R.constructor != null && R.constructor.name != null && R.constructor.name === Q.name;
  }
  function fe(R) {
    return R !== R;
  }
  var J = function() {
    for (var R = "0123456789abcdef", Q = new Array(256), b = 0; b < 16; ++b)
      for (var U = b * 16, Z = 0; Z < 16; ++Z)
        Q[U + Z] = R[b] + R[Z];
    return Q;
  }();
})(buffer);
var bignumber = { exports: {} };
(function(e) {
  (function(n) {
    var o, s = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, u = Math.ceil, d = Math.floor, g = "[BigNumber Error] ", m = g + "Number primitive has more than 15 significant digits: ", w = 1e14, B = 14, x = 9007199254740991, C = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], v = 1e7, y = 1e9;
    function T(re) {
      var ce, Ie, Pe, se = X.prototype = { constructor: X, toString: null, valueOf: null }, Ce = new X(1), Ge = 20, $e = 4, Be = -7, Me = 21, We = -1e7, nt = 1e7, Xe = !1, Je = 1, qe = 0, ye = {
        prefix: "",
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ",",
        decimalSeparator: ".",
        fractionGroupSize: 0,
        fractionGroupSeparator: "\xA0",
        suffix: ""
      }, Ue = "0123456789abcdefghijklmnopqrstuvwxyz", ze = !0;
      function X(ie, ae) {
        var z, be, fe, J, R, Q, b, U, Z = this;
        if (!(Z instanceof X))
          return new X(ie, ae);
        if (ae == null) {
          if (ie && ie._isBigNumber === !0) {
            Z.s = ie.s, !ie.c || ie.e > nt ? Z.c = Z.e = null : ie.e < We ? Z.c = [Z.e = 0] : (Z.e = ie.e, Z.c = ie.c.slice());
            return;
          }
          if ((Q = typeof ie == "number") && ie * 0 == 0) {
            if (Z.s = 1 / ie < 0 ? (ie = -ie, -1) : 1, ie === ~~ie) {
              for (J = 0, R = ie; R >= 10; R /= 10, J++)
                ;
              J > nt ? Z.c = Z.e = null : (Z.e = J, Z.c = [ie]);
              return;
            }
            U = String(ie);
          } else {
            if (!s.test(U = String(ie)))
              return Pe(Z, U, Q);
            Z.s = U.charCodeAt(0) == 45 ? (U = U.slice(1), -1) : 1;
          }
          (J = U.indexOf(".")) > -1 && (U = U.replace(".", "")), (R = U.search(/e/i)) > 0 ? (J < 0 && (J = R), J += +U.slice(R + 1), U = U.substring(0, R)) : J < 0 && (J = U.length);
        } else {
          if (O(ae, 2, Ue.length, "Base"), ae == 10 && ze)
            return Z = new X(ie), ve(Z, Ge + Z.e + 1, $e);
          if (U = String(ie), Q = typeof ie == "number") {
            if (ie * 0 != 0)
              return Pe(Z, U, Q, ae);
            if (Z.s = 1 / ie < 0 ? (U = U.slice(1), -1) : 1, X.DEBUG && U.replace(/^0\.0*|\./, "").length > 15)
              throw Error(m + ie);
          } else
            Z.s = U.charCodeAt(0) === 45 ? (U = U.slice(1), -1) : 1;
          for (z = Ue.slice(0, ae), J = R = 0, b = U.length; R < b; R++)
            if (z.indexOf(be = U.charAt(R)) < 0) {
              if (be == ".") {
                if (R > J) {
                  J = b;
                  continue;
                }
              } else if (!fe && (U == U.toUpperCase() && (U = U.toLowerCase()) || U == U.toLowerCase() && (U = U.toUpperCase()))) {
                fe = !0, R = -1, J = 0;
                continue;
              }
              return Pe(Z, String(ie), Q, ae);
            }
          Q = !1, U = Ie(U, ae, 10, Z.s), (J = U.indexOf(".")) > -1 ? U = U.replace(".", "") : J = U.length;
        }
        for (R = 0; U.charCodeAt(R) === 48; R++)
          ;
        for (b = U.length; U.charCodeAt(--b) === 48; )
          ;
        if (U = U.slice(R, ++b)) {
          if (b -= R, Q && X.DEBUG && b > 15 && (ie > x || ie !== d(ie)))
            throw Error(m + Z.s * ie);
          if ((J = J - R - 1) > nt)
            Z.c = Z.e = null;
          else if (J < We)
            Z.c = [Z.e = 0];
          else {
            if (Z.e = J, Z.c = [], R = (J + 1) % B, J < 0 && (R += B), R < b) {
              for (R && Z.c.push(+U.slice(0, R)), b -= B; R < b; )
                Z.c.push(+U.slice(R, R += B));
              R = B - (U = U.slice(R)).length;
            } else
              R -= b;
            for (; R--; U += "0")
              ;
            Z.c.push(+U);
          }
        } else
          Z.c = [Z.e = 0];
      }
      X.clone = T, X.ROUND_UP = 0, X.ROUND_DOWN = 1, X.ROUND_CEIL = 2, X.ROUND_FLOOR = 3, X.ROUND_HALF_UP = 4, X.ROUND_HALF_DOWN = 5, X.ROUND_HALF_EVEN = 6, X.ROUND_HALF_CEIL = 7, X.ROUND_HALF_FLOOR = 8, X.EUCLID = 9, X.config = X.set = function(ie) {
        var ae, z;
        if (ie != null)
          if (typeof ie == "object") {
            if (ie.hasOwnProperty(ae = "DECIMAL_PLACES") && (z = ie[ae], O(z, 0, y, ae), Ge = z), ie.hasOwnProperty(ae = "ROUNDING_MODE") && (z = ie[ae], O(z, 0, 8, ae), $e = z), ie.hasOwnProperty(ae = "EXPONENTIAL_AT") && (z = ie[ae], z && z.pop ? (O(z[0], -y, 0, ae), O(z[1], 0, y, ae), Be = z[0], Me = z[1]) : (O(z, -y, y, ae), Be = -(Me = z < 0 ? -z : z))), ie.hasOwnProperty(ae = "RANGE"))
              if (z = ie[ae], z && z.pop)
                O(z[0], -y, -1, ae), O(z[1], 1, y, ae), We = z[0], nt = z[1];
              else if (O(z, -y, y, ae), z)
                We = -(nt = z < 0 ? -z : z);
              else
                throw Error(g + ae + " cannot be zero: " + z);
            if (ie.hasOwnProperty(ae = "CRYPTO"))
              if (z = ie[ae], z === !!z)
                if (z)
                  if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes))
                    Xe = z;
                  else
                    throw Xe = !z, Error(g + "crypto unavailable");
                else
                  Xe = z;
              else
                throw Error(g + ae + " not true or false: " + z);
            if (ie.hasOwnProperty(ae = "MODULO_MODE") && (z = ie[ae], O(z, 0, 9, ae), Je = z), ie.hasOwnProperty(ae = "POW_PRECISION") && (z = ie[ae], O(z, 0, y, ae), qe = z), ie.hasOwnProperty(ae = "FORMAT"))
              if (z = ie[ae], typeof z == "object")
                ye = z;
              else
                throw Error(g + ae + " not an object: " + z);
            if (ie.hasOwnProperty(ae = "ALPHABET"))
              if (z = ie[ae], typeof z == "string" && !/^.?$|[+\-.\s]|(.).*\1/.test(z))
                ze = z.slice(0, 10) == "0123456789", Ue = z;
              else
                throw Error(g + ae + " invalid: " + z);
          } else
            throw Error(g + "Object expected: " + ie);
        return {
          DECIMAL_PLACES: Ge,
          ROUNDING_MODE: $e,
          EXPONENTIAL_AT: [Be, Me],
          RANGE: [We, nt],
          CRYPTO: Xe,
          MODULO_MODE: Je,
          POW_PRECISION: qe,
          FORMAT: ye,
          ALPHABET: Ue
        };
      }, X.isBigNumber = function(ie) {
        if (!ie || ie._isBigNumber !== !0)
          return !1;
        if (!X.DEBUG)
          return !0;
        var ae, z, be = ie.c, fe = ie.e, J = ie.s;
        e:
          if ({}.toString.call(be) == "[object Array]") {
            if ((J === 1 || J === -1) && fe >= -y && fe <= y && fe === d(fe)) {
              if (be[0] === 0) {
                if (fe === 0 && be.length === 1)
                  return !0;
                break e;
              }
              if (ae = (fe + 1) % B, ae < 1 && (ae += B), String(be[0]).length == ae) {
                for (ae = 0; ae < be.length; ae++)
                  if (z = be[ae], z < 0 || z >= w || z !== d(z))
                    break e;
                if (z !== 0)
                  return !0;
              }
            }
          } else if (be === null && fe === null && (J === null || J === 1 || J === -1))
            return !0;
        throw Error(g + "Invalid BigNumber: " + ie);
      }, X.maximum = X.max = function() {
        return ot(arguments, se.lt);
      }, X.minimum = X.min = function() {
        return ot(arguments, se.gt);
      }, X.random = function() {
        var ie = 9007199254740992, ae = Math.random() * ie & 2097151 ? function() {
          return d(Math.random() * ie);
        } : function() {
          return (Math.random() * 1073741824 | 0) * 8388608 + (Math.random() * 8388608 | 0);
        };
        return function(z) {
          var be, fe, J, R, Q, b = 0, U = [], Z = new X(Ce);
          if (z == null ? z = Ge : O(z, 0, y), R = u(z / B), Xe)
            if (crypto.getRandomValues) {
              for (be = crypto.getRandomValues(new Uint32Array(R *= 2)); b < R; )
                Q = be[b] * 131072 + (be[b + 1] >>> 11), Q >= 9e15 ? (fe = crypto.getRandomValues(new Uint32Array(2)), be[b] = fe[0], be[b + 1] = fe[1]) : (U.push(Q % 1e14), b += 2);
              b = R / 2;
            } else if (crypto.randomBytes) {
              for (be = crypto.randomBytes(R *= 7); b < R; )
                Q = (be[b] & 31) * 281474976710656 + be[b + 1] * 1099511627776 + be[b + 2] * 4294967296 + be[b + 3] * 16777216 + (be[b + 4] << 16) + (be[b + 5] << 8) + be[b + 6], Q >= 9e15 ? crypto.randomBytes(7).copy(be, b) : (U.push(Q % 1e14), b += 7);
              b = R / 7;
            } else
              throw Xe = !1, Error(g + "crypto unavailable");
          if (!Xe)
            for (; b < R; )
              Q = ae(), Q < 9e15 && (U[b++] = Q % 1e14);
          for (R = U[--b], z %= B, R && z && (Q = C[B - z], U[b] = d(R / Q) * Q); U[b] === 0; U.pop(), b--)
            ;
          if (b < 0)
            U = [J = 0];
          else {
            for (J = -1; U[0] === 0; U.splice(0, 1), J -= B)
              ;
            for (b = 1, Q = U[0]; Q >= 10; Q /= 10, b++)
              ;
            b < B && (J -= B - b);
          }
          return Z.e = J, Z.c = U, Z;
        };
      }(), X.sum = function() {
        for (var ie = 1, ae = arguments, z = new X(ae[0]); ie < ae.length; )
          z = z.plus(ae[ie++]);
        return z;
      }, Ie = function() {
        var ie = "0123456789";
        function ae(z, be, fe, J) {
          for (var R, Q = [0], b, U = 0, Z = z.length; U < Z; ) {
            for (b = Q.length; b--; Q[b] *= be)
              ;
            for (Q[0] += J.indexOf(z.charAt(U++)), R = 0; R < Q.length; R++)
              Q[R] > fe - 1 && (Q[R + 1] == null && (Q[R + 1] = 0), Q[R + 1] += Q[R] / fe | 0, Q[R] %= fe);
          }
          return Q.reverse();
        }
        return function(z, be, fe, J, R) {
          var Q, b, U, Z, ne, le, Ne, Ke, Ze = z.indexOf("."), et = Ge, Y = $e;
          for (Ze >= 0 && (Z = qe, qe = 0, z = z.replace(".", ""), Ke = new X(be), le = Ke.pow(z.length - Ze), qe = Z, Ke.c = ae(
            $(D(le.c), le.e, "0"),
            10,
            fe,
            ie
          ), Ke.e = Ke.c.length), Ne = ae(z, be, fe, R ? (Q = Ue, ie) : (Q = ie, Ue)), U = Z = Ne.length; Ne[--Z] == 0; Ne.pop())
            ;
          if (!Ne[0])
            return Q.charAt(0);
          if (Ze < 0 ? --U : (le.c = Ne, le.e = U, le.s = J, le = ce(le, Ke, et, Y, fe), Ne = le.c, ne = le.r, U = le.e), b = U + et + 1, Ze = Ne[b], Z = fe / 2, ne = ne || b < 0 || Ne[b + 1] != null, ne = Y < 4 ? (Ze != null || ne) && (Y == 0 || Y == (le.s < 0 ? 3 : 2)) : Ze > Z || Ze == Z && (Y == 4 || ne || Y == 6 && Ne[b - 1] & 1 || Y == (le.s < 0 ? 8 : 7)), b < 1 || !Ne[0])
            z = ne ? $(Q.charAt(1), -et, Q.charAt(0)) : Q.charAt(0);
          else {
            if (Ne.length = b, ne)
              for (--fe; ++Ne[--b] > fe; )
                Ne[b] = 0, b || (++U, Ne = [1].concat(Ne));
            for (Z = Ne.length; !Ne[--Z]; )
              ;
            for (Ze = 0, z = ""; Ze <= Z; z += Q.charAt(Ne[Ze++]))
              ;
            z = $(z, U, Q.charAt(0));
          }
          return z;
        };
      }(), ce = function() {
        function ie(be, fe, J) {
          var R, Q, b, U, Z = 0, ne = be.length, le = fe % v, Ne = fe / v | 0;
          for (be = be.slice(); ne--; )
            b = be[ne] % v, U = be[ne] / v | 0, R = Ne * b + U * le, Q = le * b + R % v * v + Z, Z = (Q / J | 0) + (R / v | 0) + Ne * U, be[ne] = Q % J;
          return Z && (be = [Z].concat(be)), be;
        }
        function ae(be, fe, J, R) {
          var Q, b;
          if (J != R)
            b = J > R ? 1 : -1;
          else
            for (Q = b = 0; Q < J; Q++)
              if (be[Q] != fe[Q]) {
                b = be[Q] > fe[Q] ? 1 : -1;
                break;
              }
          return b;
        }
        function z(be, fe, J, R) {
          for (var Q = 0; J--; )
            be[J] -= Q, Q = be[J] < fe[J] ? 1 : 0, be[J] = Q * R + be[J] - fe[J];
          for (; !be[0] && be.length > 1; be.splice(0, 1))
            ;
        }
        return function(be, fe, J, R, Q) {
          var b, U, Z, ne, le, Ne, Ke, Ze, et, Y, k, F, ue, Qe, Oe, Ve, It, vt = be.s == fe.s ? 1 : -1, Qt = be.c, Ct = fe.c;
          if (!Qt || !Qt[0] || !Ct || !Ct[0])
            return new X(
              !be.s || !fe.s || (Qt ? Ct && Qt[0] == Ct[0] : !Ct) ? NaN : Qt && Qt[0] == 0 || !Ct ? vt * 0 : vt / 0
            );
          for (Ze = new X(vt), et = Ze.c = [], U = be.e - fe.e, vt = J + U + 1, Q || (Q = w, U = M(be.e / B) - M(fe.e / B), vt = vt / B | 0), Z = 0; Ct[Z] == (Qt[Z] || 0); Z++)
            ;
          if (Ct[Z] > (Qt[Z] || 0) && U--, vt < 0)
            et.push(1), ne = !0;
          else {
            for (Qe = Qt.length, Ve = Ct.length, Z = 0, vt += 2, le = d(Q / (Ct[0] + 1)), le > 1 && (Ct = ie(Ct, le, Q), Qt = ie(Qt, le, Q), Ve = Ct.length, Qe = Qt.length), ue = Ve, Y = Qt.slice(0, Ve), k = Y.length; k < Ve; Y[k++] = 0)
              ;
            It = Ct.slice(), It = [0].concat(It), Oe = Ct[0], Ct[1] >= Q / 2 && Oe++;
            do {
              if (le = 0, b = ae(Ct, Y, Ve, k), b < 0) {
                if (F = Y[0], Ve != k && (F = F * Q + (Y[1] || 0)), le = d(F / Oe), le > 1)
                  for (le >= Q && (le = Q - 1), Ne = ie(Ct, le, Q), Ke = Ne.length, k = Y.length; ae(Ne, Y, Ke, k) == 1; )
                    le--, z(Ne, Ve < Ke ? It : Ct, Ke, Q), Ke = Ne.length, b = 1;
                else
                  le == 0 && (b = le = 1), Ne = Ct.slice(), Ke = Ne.length;
                if (Ke < k && (Ne = [0].concat(Ne)), z(Y, Ne, k, Q), k = Y.length, b == -1)
                  for (; ae(Ct, Y, Ve, k) < 1; )
                    le++, z(Y, Ve < k ? It : Ct, k, Q), k = Y.length;
              } else
                b === 0 && (le++, Y = [0]);
              et[Z++] = le, Y[0] ? Y[k++] = Qt[ue] || 0 : (Y = [Qt[ue]], k = 1);
            } while ((ue++ < Qe || Y[0] != null) && vt--);
            ne = Y[0] != null, et[0] || et.splice(0, 1);
          }
          if (Q == w) {
            for (Z = 1, vt = et[0]; vt >= 10; vt /= 10, Z++)
              ;
            ve(Ze, J + (Ze.e = Z + U * B - 1) + 1, R, ne);
          } else
            Ze.e = U, Ze.r = +ne;
          return Ze;
        };
      }();
      function ut(ie, ae, z, be) {
        var fe, J, R, Q, b;
        if (z == null ? z = $e : O(z, 0, 8), !ie.c)
          return ie.toString();
        if (fe = ie.c[0], R = ie.e, ae == null)
          b = D(ie.c), b = be == 1 || be == 2 && (R <= Be || R >= Me) ? q(b, R) : $(b, R, "0");
        else if (ie = ve(new X(ie), ae, z), J = ie.e, b = D(ie.c), Q = b.length, be == 1 || be == 2 && (ae <= J || J <= Be)) {
          for (; Q < ae; b += "0", Q++)
            ;
          b = q(b, J);
        } else if (ae -= R, b = $(b, J, "0"), J + 1 > Q) {
          if (--ae > 0)
            for (b += "."; ae--; b += "0")
              ;
        } else if (ae += J - Q, ae > 0)
          for (J + 1 == Q && (b += "."); ae--; b += "0")
            ;
        return ie.s < 0 && fe ? "-" + b : b;
      }
      function ot(ie, ae) {
        for (var z, be = 1, fe = new X(ie[0]); be < ie.length; be++)
          if (z = new X(ie[be]), z.s)
            ae.call(fe, z) && (fe = z);
          else {
            fe = z;
            break;
          }
        return fe;
      }
      function mt(ie, ae, z) {
        for (var be = 1, fe = ae.length; !ae[--fe]; ae.pop())
          ;
        for (fe = ae[0]; fe >= 10; fe /= 10, be++)
          ;
        return (z = be + z * B - 1) > nt ? ie.c = ie.e = null : z < We ? ie.c = [ie.e = 0] : (ie.e = z, ie.c = ae), ie;
      }
      Pe = function() {
        var ie = /^(-?)0([xbo])(?=\w[\w.]*$)/i, ae = /^([^.]+)\.$/, z = /^\.([^.]+)$/, be = /^-?(Infinity|NaN)$/, fe = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function(J, R, Q, b) {
          var U, Z = Q ? R : R.replace(fe, "");
          if (be.test(Z))
            J.s = isNaN(Z) ? null : Z < 0 ? -1 : 1;
          else {
            if (!Q && (Z = Z.replace(ie, function(ne, le, Ne) {
              return U = (Ne = Ne.toLowerCase()) == "x" ? 16 : Ne == "b" ? 2 : 8, !b || b == U ? le : ne;
            }), b && (U = b, Z = Z.replace(ae, "$1").replace(z, "0.$1")), R != Z))
              return new X(Z, U);
            if (X.DEBUG)
              throw Error(g + "Not a" + (b ? " base " + b : "") + " number: " + R);
            J.s = null;
          }
          J.c = J.e = null;
        };
      }();
      function ve(ie, ae, z, be) {
        var fe, J, R, Q, b, U, Z, ne = ie.c, le = C;
        if (ne) {
          e: {
            for (fe = 1, Q = ne[0]; Q >= 10; Q /= 10, fe++)
              ;
            if (J = ae - fe, J < 0)
              J += B, R = ae, b = ne[U = 0], Z = b / le[fe - R - 1] % 10 | 0;
            else if (U = u((J + 1) / B), U >= ne.length)
              if (be) {
                for (; ne.length <= U; ne.push(0))
                  ;
                b = Z = 0, fe = 1, J %= B, R = J - B + 1;
              } else
                break e;
            else {
              for (b = Q = ne[U], fe = 1; Q >= 10; Q /= 10, fe++)
                ;
              J %= B, R = J - B + fe, Z = R < 0 ? 0 : b / le[fe - R - 1] % 10 | 0;
            }
            if (be = be || ae < 0 || ne[U + 1] != null || (R < 0 ? b : b % le[fe - R - 1]), be = z < 4 ? (Z || be) && (z == 0 || z == (ie.s < 0 ? 3 : 2)) : Z > 5 || Z == 5 && (z == 4 || be || z == 6 && (J > 0 ? R > 0 ? b / le[fe - R] : 0 : ne[U - 1]) % 10 & 1 || z == (ie.s < 0 ? 8 : 7)), ae < 1 || !ne[0])
              return ne.length = 0, be ? (ae -= ie.e + 1, ne[0] = le[(B - ae % B) % B], ie.e = -ae || 0) : ne[0] = ie.e = 0, ie;
            if (J == 0 ? (ne.length = U, Q = 1, U--) : (ne.length = U + 1, Q = le[B - J], ne[U] = R > 0 ? d(b / le[fe - R] % le[R]) * Q : 0), be)
              for (; ; )
                if (U == 0) {
                  for (J = 1, R = ne[0]; R >= 10; R /= 10, J++)
                    ;
                  for (R = ne[0] += Q, Q = 1; R >= 10; R /= 10, Q++)
                    ;
                  J != Q && (ie.e++, ne[0] == w && (ne[0] = 1));
                  break;
                } else {
                  if (ne[U] += Q, ne[U] != w)
                    break;
                  ne[U--] = 0, Q = 1;
                }
            for (J = ne.length; ne[--J] === 0; ne.pop())
              ;
          }
          ie.e > nt ? ie.c = ie.e = null : ie.e < We && (ie.c = [ie.e = 0]);
        }
        return ie;
      }
      function je(ie) {
        var ae, z = ie.e;
        return z === null ? ie.toString() : (ae = D(ie.c), ae = z <= Be || z >= Me ? q(ae, z) : $(ae, z, "0"), ie.s < 0 ? "-" + ae : ae);
      }
      return se.absoluteValue = se.abs = function() {
        var ie = new X(this);
        return ie.s < 0 && (ie.s = 1), ie;
      }, se.comparedTo = function(ie, ae) {
        return V(this, new X(ie, ae));
      }, se.decimalPlaces = se.dp = function(ie, ae) {
        var z, be, fe, J = this;
        if (ie != null)
          return O(ie, 0, y), ae == null ? ae = $e : O(ae, 0, 8), ve(new X(J), ie + J.e + 1, ae);
        if (!(z = J.c))
          return null;
        if (be = ((fe = z.length - 1) - M(this.e / B)) * B, fe = z[fe])
          for (; fe % 10 == 0; fe /= 10, be--)
            ;
        return be < 0 && (be = 0), be;
      }, se.dividedBy = se.div = function(ie, ae) {
        return ce(this, new X(ie, ae), Ge, $e);
      }, se.dividedToIntegerBy = se.idiv = function(ie, ae) {
        return ce(this, new X(ie, ae), 0, 1);
      }, se.exponentiatedBy = se.pow = function(ie, ae) {
        var z, be, fe, J, R, Q, b, U, Z, ne = this;
        if (ie = new X(ie), ie.c && !ie.isInteger())
          throw Error(g + "Exponent not an integer: " + je(ie));
        if (ae != null && (ae = new X(ae)), Q = ie.e > 14, !ne.c || !ne.c[0] || ne.c[0] == 1 && !ne.e && ne.c.length == 1 || !ie.c || !ie.c[0])
          return Z = new X(Math.pow(+je(ne), Q ? 2 - H(ie) : +je(ie))), ae ? Z.mod(ae) : Z;
        if (b = ie.s < 0, ae) {
          if (ae.c ? !ae.c[0] : !ae.s)
            return new X(NaN);
          be = !b && ne.isInteger() && ae.isInteger(), be && (ne = ne.mod(ae));
        } else {
          if (ie.e > 9 && (ne.e > 0 || ne.e < -1 || (ne.e == 0 ? ne.c[0] > 1 || Q && ne.c[1] >= 24e7 : ne.c[0] < 8e13 || Q && ne.c[0] <= 9999975e7)))
            return J = ne.s < 0 && H(ie) ? -0 : 0, ne.e > -1 && (J = 1 / J), new X(b ? 1 / J : J);
          qe && (J = u(qe / B + 2));
        }
        for (Q ? (z = new X(0.5), b && (ie.s = 1), U = H(ie)) : (fe = Math.abs(+je(ie)), U = fe % 2), Z = new X(Ce); ; ) {
          if (U) {
            if (Z = Z.times(ne), !Z.c)
              break;
            J ? Z.c.length > J && (Z.c.length = J) : be && (Z = Z.mod(ae));
          }
          if (fe) {
            if (fe = d(fe / 2), fe === 0)
              break;
            U = fe % 2;
          } else if (ie = ie.times(z), ve(ie, ie.e + 1, 1), ie.e > 14)
            U = H(ie);
          else {
            if (fe = +je(ie), fe === 0)
              break;
            U = fe % 2;
          }
          ne = ne.times(ne), J ? ne.c && ne.c.length > J && (ne.c.length = J) : be && (ne = ne.mod(ae));
        }
        return be ? Z : (b && (Z = Ce.div(Z)), ae ? Z.mod(ae) : J ? ve(Z, qe, $e, R) : Z);
      }, se.integerValue = function(ie) {
        var ae = new X(this);
        return ie == null ? ie = $e : O(ie, 0, 8), ve(ae, ae.e + 1, ie);
      }, se.isEqualTo = se.eq = function(ie, ae) {
        return V(this, new X(ie, ae)) === 0;
      }, se.isFinite = function() {
        return !!this.c;
      }, se.isGreaterThan = se.gt = function(ie, ae) {
        return V(this, new X(ie, ae)) > 0;
      }, se.isGreaterThanOrEqualTo = se.gte = function(ie, ae) {
        return (ae = V(this, new X(ie, ae))) === 1 || ae === 0;
      }, se.isInteger = function() {
        return !!this.c && M(this.e / B) > this.c.length - 2;
      }, se.isLessThan = se.lt = function(ie, ae) {
        return V(this, new X(ie, ae)) < 0;
      }, se.isLessThanOrEqualTo = se.lte = function(ie, ae) {
        return (ae = V(this, new X(ie, ae))) === -1 || ae === 0;
      }, se.isNaN = function() {
        return !this.s;
      }, se.isNegative = function() {
        return this.s < 0;
      }, se.isPositive = function() {
        return this.s > 0;
      }, se.isZero = function() {
        return !!this.c && this.c[0] == 0;
      }, se.minus = function(ie, ae) {
        var z, be, fe, J, R = this, Q = R.s;
        if (ie = new X(ie, ae), ae = ie.s, !Q || !ae)
          return new X(NaN);
        if (Q != ae)
          return ie.s = -ae, R.plus(ie);
        var b = R.e / B, U = ie.e / B, Z = R.c, ne = ie.c;
        if (!b || !U) {
          if (!Z || !ne)
            return Z ? (ie.s = -ae, ie) : new X(ne ? R : NaN);
          if (!Z[0] || !ne[0])
            return ne[0] ? (ie.s = -ae, ie) : new X(Z[0] ? R : $e == 3 ? -0 : 0);
        }
        if (b = M(b), U = M(U), Z = Z.slice(), Q = b - U) {
          for ((J = Q < 0) ? (Q = -Q, fe = Z) : (U = b, fe = ne), fe.reverse(), ae = Q; ae--; fe.push(0))
            ;
          fe.reverse();
        } else
          for (be = (J = (Q = Z.length) < (ae = ne.length)) ? Q : ae, Q = ae = 0; ae < be; ae++)
            if (Z[ae] != ne[ae]) {
              J = Z[ae] < ne[ae];
              break;
            }
        if (J && (fe = Z, Z = ne, ne = fe, ie.s = -ie.s), ae = (be = ne.length) - (z = Z.length), ae > 0)
          for (; ae--; Z[z++] = 0)
            ;
        for (ae = w - 1; be > Q; ) {
          if (Z[--be] < ne[be]) {
            for (z = be; z && !Z[--z]; Z[z] = ae)
              ;
            --Z[z], Z[be] += w;
          }
          Z[be] -= ne[be];
        }
        for (; Z[0] == 0; Z.splice(0, 1), --U)
          ;
        return Z[0] ? mt(ie, Z, U) : (ie.s = $e == 3 ? -1 : 1, ie.c = [ie.e = 0], ie);
      }, se.modulo = se.mod = function(ie, ae) {
        var z, be, fe = this;
        return ie = new X(ie, ae), !fe.c || !ie.s || ie.c && !ie.c[0] ? new X(NaN) : !ie.c || fe.c && !fe.c[0] ? new X(fe) : (Je == 9 ? (be = ie.s, ie.s = 1, z = ce(fe, ie, 0, 3), ie.s = be, z.s *= be) : z = ce(fe, ie, 0, Je), ie = fe.minus(z.times(ie)), !ie.c[0] && Je == 1 && (ie.s = fe.s), ie);
      }, se.multipliedBy = se.times = function(ie, ae) {
        var z, be, fe, J, R, Q, b, U, Z, ne, le, Ne, Ke, Ze, et, Y = this, k = Y.c, F = (ie = new X(ie, ae)).c;
        if (!k || !F || !k[0] || !F[0])
          return !Y.s || !ie.s || k && !k[0] && !F || F && !F[0] && !k ? ie.c = ie.e = ie.s = null : (ie.s *= Y.s, !k || !F ? ie.c = ie.e = null : (ie.c = [0], ie.e = 0)), ie;
        for (be = M(Y.e / B) + M(ie.e / B), ie.s *= Y.s, b = k.length, ne = F.length, b < ne && (Ke = k, k = F, F = Ke, fe = b, b = ne, ne = fe), fe = b + ne, Ke = []; fe--; Ke.push(0))
          ;
        for (Ze = w, et = v, fe = ne; --fe >= 0; ) {
          for (z = 0, le = F[fe] % et, Ne = F[fe] / et | 0, R = b, J = fe + R; J > fe; )
            U = k[--R] % et, Z = k[R] / et | 0, Q = Ne * U + Z * le, U = le * U + Q % et * et + Ke[J] + z, z = (U / Ze | 0) + (Q / et | 0) + Ne * Z, Ke[J--] = U % Ze;
          Ke[J] = z;
        }
        return z ? ++be : Ke.splice(0, 1), mt(ie, Ke, be);
      }, se.negated = function() {
        var ie = new X(this);
        return ie.s = -ie.s || null, ie;
      }, se.plus = function(ie, ae) {
        var z, be = this, fe = be.s;
        if (ie = new X(ie, ae), ae = ie.s, !fe || !ae)
          return new X(NaN);
        if (fe != ae)
          return ie.s = -ae, be.minus(ie);
        var J = be.e / B, R = ie.e / B, Q = be.c, b = ie.c;
        if (!J || !R) {
          if (!Q || !b)
            return new X(fe / 0);
          if (!Q[0] || !b[0])
            return b[0] ? ie : new X(Q[0] ? be : fe * 0);
        }
        if (J = M(J), R = M(R), Q = Q.slice(), fe = J - R) {
          for (fe > 0 ? (R = J, z = b) : (fe = -fe, z = Q), z.reverse(); fe--; z.push(0))
            ;
          z.reverse();
        }
        for (fe = Q.length, ae = b.length, fe - ae < 0 && (z = b, b = Q, Q = z, ae = fe), fe = 0; ae; )
          fe = (Q[--ae] = Q[ae] + b[ae] + fe) / w | 0, Q[ae] = w === Q[ae] ? 0 : Q[ae] % w;
        return fe && (Q = [fe].concat(Q), ++R), mt(ie, Q, R);
      }, se.precision = se.sd = function(ie, ae) {
        var z, be, fe, J = this;
        if (ie != null && ie !== !!ie)
          return O(ie, 1, y), ae == null ? ae = $e : O(ae, 0, 8), ve(new X(J), ie, ae);
        if (!(z = J.c))
          return null;
        if (fe = z.length - 1, be = fe * B + 1, fe = z[fe]) {
          for (; fe % 10 == 0; fe /= 10, be--)
            ;
          for (fe = z[0]; fe >= 10; fe /= 10, be++)
            ;
        }
        return ie && J.e + 1 > be && (be = J.e + 1), be;
      }, se.shiftedBy = function(ie) {
        return O(ie, -x, x), this.times("1e" + ie);
      }, se.squareRoot = se.sqrt = function() {
        var ie, ae, z, be, fe, J = this, R = J.c, Q = J.s, b = J.e, U = Ge + 4, Z = new X("0.5");
        if (Q !== 1 || !R || !R[0])
          return new X(!Q || Q < 0 && (!R || R[0]) ? NaN : R ? J : 1 / 0);
        if (Q = Math.sqrt(+je(J)), Q == 0 || Q == 1 / 0 ? (ae = D(R), (ae.length + b) % 2 == 0 && (ae += "0"), Q = Math.sqrt(+ae), b = M((b + 1) / 2) - (b < 0 || b % 2), Q == 1 / 0 ? ae = "5e" + b : (ae = Q.toExponential(), ae = ae.slice(0, ae.indexOf("e") + 1) + b), z = new X(ae)) : z = new X(Q + ""), z.c[0]) {
          for (b = z.e, Q = b + U, Q < 3 && (Q = 0); ; )
            if (fe = z, z = Z.times(fe.plus(ce(J, fe, U, 1))), D(fe.c).slice(0, Q) === (ae = D(z.c)).slice(0, Q))
              if (z.e < b && --Q, ae = ae.slice(Q - 3, Q + 1), ae == "9999" || !be && ae == "4999") {
                if (!be && (ve(fe, fe.e + Ge + 2, 0), fe.times(fe).eq(J))) {
                  z = fe;
                  break;
                }
                U += 4, Q += 4, be = 1;
              } else {
                (!+ae || !+ae.slice(1) && ae.charAt(0) == "5") && (ve(z, z.e + Ge + 2, 1), ie = !z.times(z).eq(J));
                break;
              }
        }
        return ve(z, z.e + Ge + 1, $e, ie);
      }, se.toExponential = function(ie, ae) {
        return ie != null && (O(ie, 0, y), ie++), ut(this, ie, ae, 1);
      }, se.toFixed = function(ie, ae) {
        return ie != null && (O(ie, 0, y), ie = ie + this.e + 1), ut(this, ie, ae);
      }, se.toFormat = function(ie, ae, z) {
        var be, fe = this;
        if (z == null)
          ie != null && ae && typeof ae == "object" ? (z = ae, ae = null) : ie && typeof ie == "object" ? (z = ie, ie = ae = null) : z = ye;
        else if (typeof z != "object")
          throw Error(g + "Argument not an object: " + z);
        if (be = fe.toFixed(ie, ae), fe.c) {
          var J, R = be.split("."), Q = +z.groupSize, b = +z.secondaryGroupSize, U = z.groupSeparator || "", Z = R[0], ne = R[1], le = fe.s < 0, Ne = le ? Z.slice(1) : Z, Ke = Ne.length;
          if (b && (J = Q, Q = b, b = J, Ke -= J), Q > 0 && Ke > 0) {
            for (J = Ke % Q || Q, Z = Ne.substr(0, J); J < Ke; J += Q)
              Z += U + Ne.substr(J, Q);
            b > 0 && (Z += U + Ne.slice(J)), le && (Z = "-" + Z);
          }
          be = ne ? Z + (z.decimalSeparator || "") + ((b = +z.fractionGroupSize) ? ne.replace(
            new RegExp("\\d{" + b + "}\\B", "g"),
            "$&" + (z.fractionGroupSeparator || "")
          ) : ne) : Z;
        }
        return (z.prefix || "") + be + (z.suffix || "");
      }, se.toFraction = function(ie) {
        var ae, z, be, fe, J, R, Q, b, U, Z, ne, le, Ne = this, Ke = Ne.c;
        if (ie != null && (Q = new X(ie), !Q.isInteger() && (Q.c || Q.s !== 1) || Q.lt(Ce)))
          throw Error(g + "Argument " + (Q.isInteger() ? "out of range: " : "not an integer: ") + je(Q));
        if (!Ke)
          return new X(Ne);
        for (ae = new X(Ce), U = z = new X(Ce), be = b = new X(Ce), le = D(Ke), J = ae.e = le.length - Ne.e - 1, ae.c[0] = C[(R = J % B) < 0 ? B + R : R], ie = !ie || Q.comparedTo(ae) > 0 ? J > 0 ? ae : U : Q, R = nt, nt = 1 / 0, Q = new X(le), b.c[0] = 0; Z = ce(Q, ae, 0, 1), fe = z.plus(Z.times(be)), fe.comparedTo(ie) != 1; )
          z = be, be = fe, U = b.plus(Z.times(fe = U)), b = fe, ae = Q.minus(Z.times(fe = ae)), Q = fe;
        return fe = ce(ie.minus(z), be, 0, 1), b = b.plus(fe.times(U)), z = z.plus(fe.times(be)), b.s = U.s = Ne.s, J = J * 2, ne = ce(U, be, J, $e).minus(Ne).abs().comparedTo(
          ce(b, z, J, $e).minus(Ne).abs()
        ) < 1 ? [U, be] : [b, z], nt = R, ne;
      }, se.toNumber = function() {
        return +je(this);
      }, se.toPrecision = function(ie, ae) {
        return ie != null && O(ie, 1, y), ut(this, ie, ae, 2);
      }, se.toString = function(ie) {
        var ae, z = this, be = z.s, fe = z.e;
        return fe === null ? be ? (ae = "Infinity", be < 0 && (ae = "-" + ae)) : ae = "NaN" : (ie == null ? ae = fe <= Be || fe >= Me ? q(D(z.c), fe) : $(D(z.c), fe, "0") : ie === 10 && ze ? (z = ve(new X(z), Ge + fe + 1, $e), ae = $(D(z.c), z.e, "0")) : (O(ie, 2, Ue.length, "Base"), ae = Ie($(D(z.c), fe, "0"), 10, ie, be, !0)), be < 0 && z.c[0] && (ae = "-" + ae)), ae;
      }, se.valueOf = se.toJSON = function() {
        return je(this);
      }, se._isBigNumber = !0, re != null && X.set(re), X;
    }
    function M(re) {
      var ce = re | 0;
      return re > 0 || re === ce ? ce : ce - 1;
    }
    function D(re) {
      for (var ce, Ie, Pe = 1, se = re.length, Ce = re[0] + ""; Pe < se; ) {
        for (ce = re[Pe++] + "", Ie = B - ce.length; Ie--; ce = "0" + ce)
          ;
        Ce += ce;
      }
      for (se = Ce.length; Ce.charCodeAt(--se) === 48; )
        ;
      return Ce.slice(0, se + 1 || 1);
    }
    function V(re, ce) {
      var Ie, Pe, se = re.c, Ce = ce.c, Ge = re.s, $e = ce.s, Be = re.e, Me = ce.e;
      if (!Ge || !$e)
        return null;
      if (Ie = se && !se[0], Pe = Ce && !Ce[0], Ie || Pe)
        return Ie ? Pe ? 0 : -$e : Ge;
      if (Ge != $e)
        return Ge;
      if (Ie = Ge < 0, Pe = Be == Me, !se || !Ce)
        return Pe ? 0 : !se ^ Ie ? 1 : -1;
      if (!Pe)
        return Be > Me ^ Ie ? 1 : -1;
      for ($e = (Be = se.length) < (Me = Ce.length) ? Be : Me, Ge = 0; Ge < $e; Ge++)
        if (se[Ge] != Ce[Ge])
          return se[Ge] > Ce[Ge] ^ Ie ? 1 : -1;
      return Be == Me ? 0 : Be > Me ^ Ie ? 1 : -1;
    }
    function O(re, ce, Ie, Pe) {
      if (re < ce || re > Ie || re !== d(re))
        throw Error(g + (Pe || "Argument") + (typeof re == "number" ? re < ce || re > Ie ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(re));
    }
    function H(re) {
      var ce = re.c.length - 1;
      return M(re.e / B) == ce && re.c[ce] % 2 != 0;
    }
    function q(re, ce) {
      return (re.length > 1 ? re.charAt(0) + "." + re.slice(1) : re) + (ce < 0 ? "e" : "e+") + ce;
    }
    function $(re, ce, Ie) {
      var Pe, se;
      if (ce < 0) {
        for (se = Ie + "."; ++ce; se += Ie)
          ;
        re = se + re;
      } else if (Pe = re.length, ++ce > Pe) {
        for (se = Ie, ce -= Pe; --ce; se += Ie)
          ;
        re += se;
      } else
        ce < Pe && (re = re.slice(0, ce) + "." + re.slice(ce));
      return re;
    }
    o = T(), o.default = o.BigNumber = o, e.exports ? e.exports = o : (n || (n = typeof self < "u" && self ? self : window), n.BigNumber = o);
  })(commonjsGlobal);
})(bignumber);
var decoder_asm = function e(n, o, s) {
  var u = new n.Uint8Array(s), d = o.pushInt, g = o.pushInt32, m = o.pushInt32Neg, w = o.pushInt64, B = o.pushInt64Neg, x = o.pushFloat, C = o.pushFloatSingle, v = o.pushFloatDouble, y = o.pushTrue, T = o.pushFalse, M = o.pushUndefined, D = o.pushNull, V = o.pushInfinity, O = o.pushInfinityNeg, H = o.pushNaN, q = o.pushNaNNeg, $ = o.pushArrayStart, re = o.pushArrayStartFixed, ce = o.pushArrayStartFixed32, Ie = o.pushArrayStartFixed64, Pe = o.pushObjectStart, se = o.pushObjectStartFixed, Ce = o.pushObjectStartFixed32, Ge = o.pushObjectStartFixed64, $e = o.pushByteString, Be = o.pushByteStringStart, Me = o.pushUtf8String, We = o.pushUtf8StringStart, nt = o.pushSimpleUnassigned, Xe = o.pushTagStart, Je = o.pushTagStart4, qe = o.pushTagStart8, ye = o.pushTagUnassigned, Ue = o.pushBreak, ze = n.Math.pow, X = 0, ut = 0, ot = 0;
  function mt(_e) {
    for (_e = _e | 0, X = 0, ut = _e; (X | 0) < (ut | 0) && (ot = Jt[u[X] & 255](u[X] | 0) | 0, !((ot | 0) > 0)); )
      ;
    return ot | 0;
  }
  function ve(_e) {
    return _e = _e | 0, ((X | 0) + (_e | 0) | 0) < (ut | 0) ? 0 : 1;
  }
  function je(_e) {
    return _e = _e | 0, u[_e | 0] << 8 | u[_e + 1 | 0] | 0;
  }
  function ie(_e) {
    return _e = _e | 0, u[_e | 0] << 24 | u[_e + 1 | 0] << 16 | u[_e + 2 | 0] << 8 | u[_e + 3 | 0] | 0;
  }
  function ae(_e) {
    return _e = _e | 0, d(_e | 0), X = X + 1 | 0, 0;
  }
  function z(_e) {
    return _e = _e | 0, ve(1) | 0 ? 1 : (d(u[X + 1 | 0] | 0), X = X + 2 | 0, 0);
  }
  function be(_e) {
    return _e = _e | 0, ve(2) | 0 ? 1 : (d(
      je(X + 1 | 0) | 0
    ), X = X + 3 | 0, 0);
  }
  function fe(_e) {
    return _e = _e | 0, ve(4) | 0 ? 1 : (g(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0
    ), X = X + 5 | 0, 0);
  }
  function J(_e) {
    return _e = _e | 0, ve(8) | 0 ? 1 : (w(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0,
      je(X + 5 | 0) | 0,
      je(X + 7 | 0) | 0
    ), X = X + 9 | 0, 0);
  }
  function R(_e) {
    return _e = _e | 0, d(-1 - (_e - 32 | 0) | 0), X = X + 1 | 0, 0;
  }
  function Q(_e) {
    return _e = _e | 0, ve(1) | 0 ? 1 : (d(
      -1 - (u[X + 1 | 0] | 0) | 0
    ), X = X + 2 | 0, 0);
  }
  function b(_e) {
    _e = _e | 0;
    var St = 0;
    return ve(2) | 0 ? 1 : (St = je(X + 1 | 0) | 0, d(-1 - (St | 0) | 0), X = X + 3 | 0, 0);
  }
  function U(_e) {
    return _e = _e | 0, ve(4) | 0 ? 1 : (m(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0
    ), X = X + 5 | 0, 0);
  }
  function Z(_e) {
    return _e = _e | 0, ve(8) | 0 ? 1 : (B(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0,
      je(X + 5 | 0) | 0,
      je(X + 7 | 0) | 0
    ), X = X + 9 | 0, 0);
  }
  function ne(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 0;
    return Vt = _e - 64 | 0, ve(Vt | 0) | 0 ? 1 : (St = X + 1 | 0, tt = (X + 1 | 0) + (Vt | 0) | 0, $e(St | 0, tt | 0), X = tt | 0, 0);
  }
  function le(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 0;
    return ve(1) | 0 || (Vt = u[X + 1 | 0] | 0, St = X + 2 | 0, tt = (X + 2 | 0) + (Vt | 0) | 0, ve(Vt + 1 | 0) | 0) ? 1 : ($e(St | 0, tt | 0), X = tt | 0, 0);
  }
  function Ne(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 0;
    return ve(2) | 0 || (Vt = je(X + 1 | 0) | 0, St = X + 3 | 0, tt = (X + 3 | 0) + (Vt | 0) | 0, ve(Vt + 2 | 0) | 0) ? 1 : ($e(St | 0, tt | 0), X = tt | 0, 0);
  }
  function Ke(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 0;
    return ve(4) | 0 || (Vt = ie(X + 1 | 0) | 0, St = X + 5 | 0, tt = (X + 5 | 0) + (Vt | 0) | 0, ve(Vt + 4 | 0) | 0) ? 1 : ($e(St | 0, tt | 0), X = tt | 0, 0);
  }
  function Ze(_e) {
    return _e = _e | 0, 1;
  }
  function et(_e) {
    return _e = _e | 0, Be(), X = X + 1 | 0, 0;
  }
  function Y(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 0;
    return Vt = _e - 96 | 0, ve(Vt | 0) | 0 ? 1 : (St = X + 1 | 0, tt = (X + 1 | 0) + (Vt | 0) | 0, Me(St | 0, tt | 0), X = tt | 0, 0);
  }
  function k(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 0;
    return ve(1) | 0 || (Vt = u[X + 1 | 0] | 0, St = X + 2 | 0, tt = (X + 2 | 0) + (Vt | 0) | 0, ve(Vt + 1 | 0) | 0) ? 1 : (Me(St | 0, tt | 0), X = tt | 0, 0);
  }
  function F(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 0;
    return ve(2) | 0 || (Vt = je(X + 1 | 0) | 0, St = X + 3 | 0, tt = (X + 3 | 0) + (Vt | 0) | 0, ve(Vt + 2 | 0) | 0) ? 1 : (Me(St | 0, tt | 0), X = tt | 0, 0);
  }
  function ue(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 0;
    return ve(4) | 0 || (Vt = ie(X + 1 | 0) | 0, St = X + 5 | 0, tt = (X + 5 | 0) + (Vt | 0) | 0, ve(Vt + 4 | 0) | 0) ? 1 : (Me(St | 0, tt | 0), X = tt | 0, 0);
  }
  function Qe(_e) {
    return _e = _e | 0, 1;
  }
  function Oe(_e) {
    return _e = _e | 0, We(), X = X + 1 | 0, 0;
  }
  function Ve(_e) {
    return _e = _e | 0, re(_e - 128 | 0), X = X + 1 | 0, 0;
  }
  function It(_e) {
    return _e = _e | 0, ve(1) | 0 ? 1 : (re(u[X + 1 | 0] | 0), X = X + 2 | 0, 0);
  }
  function vt(_e) {
    return _e = _e | 0, ve(2) | 0 ? 1 : (re(
      je(X + 1 | 0) | 0
    ), X = X + 3 | 0, 0);
  }
  function Qt(_e) {
    return _e = _e | 0, ve(4) | 0 ? 1 : (ce(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0
    ), X = X + 5 | 0, 0);
  }
  function Ct(_e) {
    return _e = _e | 0, ve(8) | 0 ? 1 : (Ie(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0,
      je(X + 5 | 0) | 0,
      je(X + 7 | 0) | 0
    ), X = X + 9 | 0, 0);
  }
  function Rt(_e) {
    return _e = _e | 0, $(), X = X + 1 | 0, 0;
  }
  function or(_e) {
    _e = _e | 0;
    var St = 0;
    return St = _e - 160 | 0, ve(St | 0) | 0 ? 1 : (se(St | 0), X = X + 1 | 0, 0);
  }
  function tn(_e) {
    return _e = _e | 0, ve(1) | 0 ? 1 : (se(u[X + 1 | 0] | 0), X = X + 2 | 0, 0);
  }
  function ur(_e) {
    return _e = _e | 0, ve(2) | 0 ? 1 : (se(
      je(X + 1 | 0) | 0
    ), X = X + 3 | 0, 0);
  }
  function Vr(_e) {
    return _e = _e | 0, ve(4) | 0 ? 1 : (Ce(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0
    ), X = X + 5 | 0, 0);
  }
  function zr(_e) {
    return _e = _e | 0, ve(8) | 0 ? 1 : (Ge(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0,
      je(X + 5 | 0) | 0,
      je(X + 7 | 0) | 0
    ), X = X + 9 | 0, 0);
  }
  function $r(_e) {
    return _e = _e | 0, Pe(), X = X + 1 | 0, 0;
  }
  function jr(_e) {
    return _e = _e | 0, Xe(_e - 192 | 0 | 0), X = X + 1 | 0, 0;
  }
  function dn(_e) {
    return _e = _e | 0, Xe(_e | 0), X = X + 1 | 0, 0;
  }
  function vn(_e) {
    return _e = _e | 0, Xe(_e | 0), X = X + 1 | 0, 0;
  }
  function ti(_e) {
    return _e = _e | 0, Xe(_e | 0), X = X + 1 | 0, 0;
  }
  function Fn(_e) {
    return _e = _e | 0, Xe(_e | 0), X = X + 1 | 0, 0;
  }
  function Yr(_e) {
    return _e = _e | 0, Xe(_e - 192 | 0 | 0), X = X + 1 | 0, 0;
  }
  function rn(_e) {
    return _e = _e | 0, Xe(_e | 0), X = X + 1 | 0, 0;
  }
  function Zr(_e) {
    return _e = _e | 0, Xe(_e | 0), X = X + 1 | 0, 0;
  }
  function hn(_e) {
    return _e = _e | 0, Xe(_e | 0), X = X + 1 | 0, 0;
  }
  function Cn(_e) {
    return _e = _e | 0, ve(1) | 0 ? 1 : (Xe(u[X + 1 | 0] | 0), X = X + 2 | 0, 0);
  }
  function In(_e) {
    return _e = _e | 0, ve(2) | 0 ? 1 : (Xe(
      je(X + 1 | 0) | 0
    ), X = X + 3 | 0, 0);
  }
  function xn(_e) {
    return _e = _e | 0, ve(4) | 0 ? 1 : (Je(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0
    ), X = X + 5 | 0, 0);
  }
  function ke(_e) {
    return _e = _e | 0, ve(8) | 0 ? 1 : (qe(
      je(X + 1 | 0) | 0,
      je(X + 3 | 0) | 0,
      je(X + 5 | 0) | 0,
      je(X + 7 | 0) | 0
    ), X = X + 9 | 0, 0);
  }
  function st(_e) {
    return _e = _e | 0, nt((_e | 0) - 224 | 0), X = X + 1 | 0, 0;
  }
  function Pt(_e) {
    return _e = _e | 0, T(), X = X + 1 | 0, 0;
  }
  function lr(_e) {
    return _e = _e | 0, y(), X = X + 1 | 0, 0;
  }
  function wr(_e) {
    return _e = _e | 0, D(), X = X + 1 | 0, 0;
  }
  function Qr(_e) {
    return _e = _e | 0, M(), X = X + 1 | 0, 0;
  }
  function br(_e) {
    return _e = _e | 0, ve(1) | 0 ? 1 : (nt(u[X + 1 | 0] | 0), X = X + 2 | 0, 0);
  }
  function yr(_e) {
    _e = _e | 0;
    var St = 0, tt = 0, Vt = 1, L = 0, te = 0, de = 0;
    return ve(2) | 0 ? 1 : (St = u[X + 1 | 0] | 0, tt = u[X + 2 | 0] | 0, (St | 0) & 128 && (Vt = -1), L = +(((St | 0) & 124) >> 2), te = +(((St | 0) & 3) << 8 | tt), +L == 0 ? x(+(+Vt * 5960464477539063e-23 * +te)) : +L == 31 ? +Vt == 1 ? +te > 0 ? H() : V() : +te > 0 ? q() : O() : x(+(+Vt * ze(2, +(+L - 25)) * +(1024 + te))), X = X + 3 | 0, 0);
  }
  function Mr(_e) {
    return _e = _e | 0, ve(4) | 0 ? 1 : (C(
      u[X + 1 | 0] | 0,
      u[X + 2 | 0] | 0,
      u[X + 3 | 0] | 0,
      u[X + 4 | 0] | 0
    ), X = X + 5 | 0, 0);
  }
  function Jr(_e) {
    return _e = _e | 0, ve(8) | 0 ? 1 : (v(
      u[X + 1 | 0] | 0,
      u[X + 2 | 0] | 0,
      u[X + 3 | 0] | 0,
      u[X + 4 | 0] | 0,
      u[X + 5 | 0] | 0,
      u[X + 6 | 0] | 0,
      u[X + 7 | 0] | 0,
      u[X + 8 | 0] | 0
    ), X = X + 9 | 0, 0);
  }
  function ir(_e) {
    return _e = _e | 0, 1;
  }
  function nr(_e) {
    return _e = _e | 0, Ue(), X = X + 1 | 0, 0;
  }
  var Jt = [
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    ae,
    z,
    be,
    fe,
    J,
    ir,
    ir,
    ir,
    ir,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    R,
    Q,
    b,
    U,
    Z,
    ir,
    ir,
    ir,
    ir,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    ne,
    le,
    Ne,
    Ke,
    Ze,
    ir,
    ir,
    ir,
    et,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    Y,
    k,
    F,
    ue,
    Qe,
    ir,
    ir,
    ir,
    Oe,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    Ve,
    It,
    vt,
    Qt,
    Ct,
    ir,
    ir,
    ir,
    Rt,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    or,
    tn,
    ur,
    Vr,
    zr,
    ir,
    ir,
    ir,
    $r,
    jr,
    jr,
    jr,
    jr,
    jr,
    jr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Yr,
    Cn,
    In,
    xn,
    ke,
    ir,
    ir,
    ir,
    ir,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    st,
    Pt,
    lr,
    wr,
    Qr,
    br,
    yr,
    Mr,
    Jr,
    ir,
    ir,
    ir,
    nr
  ];
  return {
    parse: mt
  };
}, utils$3 = {}, constants$3 = {};
const Bignumber$2 = bignumber.exports.BigNumber;
constants$3.MT = {
  POS_INT: 0,
  NEG_INT: 1,
  BYTE_STRING: 2,
  UTF8_STRING: 3,
  ARRAY: 4,
  MAP: 5,
  TAG: 6,
  SIMPLE_FLOAT: 7
};
constants$3.TAG = {
  DATE_STRING: 0,
  DATE_EPOCH: 1,
  POS_BIGINT: 2,
  NEG_BIGINT: 3,
  DECIMAL_FRAC: 4,
  BIGFLOAT: 5,
  BASE64URL_EXPECTED: 21,
  BASE64_EXPECTED: 22,
  BASE16_EXPECTED: 23,
  CBOR: 24,
  URI: 32,
  BASE64URL: 33,
  BASE64: 34,
  REGEXP: 35,
  MIME: 36
};
constants$3.NUMBYTES = {
  ZERO: 0,
  ONE: 24,
  TWO: 25,
  FOUR: 26,
  EIGHT: 27,
  INDEFINITE: 31
};
constants$3.SIMPLE = {
  FALSE: 20,
  TRUE: 21,
  NULL: 22,
  UNDEFINED: 23
};
constants$3.SYMS = {
  NULL: Symbol("null"),
  UNDEFINED: Symbol("undef"),
  PARENT: Symbol("parent"),
  BREAK: Symbol("break"),
  STREAM: Symbol("stream")
};
constants$3.SHIFT32 = Math.pow(2, 32);
constants$3.SHIFT16 = Math.pow(2, 16);
constants$3.MAX_SAFE_HIGH = 2097151;
constants$3.NEG_ONE = new Bignumber$2(-1);
constants$3.TEN = new Bignumber$2(10);
constants$3.TWO = new Bignumber$2(2);
constants$3.PARENT = {
  ARRAY: 0,
  OBJECT: 1,
  MAP: 2,
  TAG: 3,
  BYTE_STRING: 4,
  UTF8_STRING: 5
};
(function(e) {
  const { Buffer: n } = buffer, o = bignumber.exports.BigNumber, s = constants$3, u = s.SHIFT32, d = s.SHIFT16, g = 2097151;
  e.parseHalf = function(B) {
    var x, C, v;
    return v = B[0] & 128 ? -1 : 1, x = (B[0] & 124) >> 2, C = (B[0] & 3) << 8 | B[1], x ? x === 31 ? v * (C ? 0 / 0 : 1 / 0) : v * Math.pow(2, x - 25) * (1024 + C) : v * 5960464477539063e-23 * C;
  };
  function m(w) {
    return w < 16 ? "0" + w.toString(16) : w.toString(16);
  }
  e.arrayBufferToBignumber = function(w) {
    const B = w.byteLength;
    let x = "";
    for (let C = 0; C < B; C++)
      x += m(w[C]);
    return new o(x, 16);
  }, e.buildMap = (w) => {
    const B = /* @__PURE__ */ new Map(), x = Object.keys(w), C = x.length;
    for (let v = 0; v < C; v++)
      B.set(x[v], w[x[v]]);
    return B;
  }, e.buildInt32 = (w, B) => w * d + B, e.buildInt64 = (w, B, x, C) => {
    const v = e.buildInt32(w, B), y = e.buildInt32(x, C);
    return v > g ? new o(v).times(u).plus(y) : v * u + y;
  }, e.writeHalf = function(B, x) {
    const C = n.allocUnsafe(4);
    C.writeFloatBE(x, 0);
    const v = C.readUInt32BE(0);
    if ((v & 8191) !== 0)
      return !1;
    var y = v >> 16 & 32768;
    const T = v >> 23 & 255, M = v & 8388607;
    if (T >= 113 && T <= 142)
      y += (T - 112 << 10) + (M >> 13);
    else if (T >= 103 && T < 113) {
      if (M & (1 << 126 - T) - 1)
        return !1;
      y += M + 8388608 >> 126 - T;
    } else
      return !1;
    return B.writeUInt16BE(y, 0), !0;
  }, e.keySorter = function(w, B) {
    var x = w[0].byteLength, C = B[0].byteLength;
    return x > C ? 1 : C > x ? -1 : w[0].compare(B[0]);
  }, e.isNegativeZero = (w) => w === 0 && 1 / w < 0, e.nextPowerOf2 = (w) => {
    let B = 0;
    if (w && !(w & w - 1))
      return w;
    for (; w !== 0; )
      w >>= 1, B += 1;
    return 1 << B;
  };
})(utils$3);
const constants$2 = constants$3, MT$1 = constants$2.MT, SIMPLE = constants$2.SIMPLE, SYMS$1 = constants$2.SYMS;
class Simple$1 {
  constructor(n) {
    if (typeof n != "number")
      throw new Error("Invalid Simple type: " + typeof n);
    if (n < 0 || n > 255 || (n | 0) !== n)
      throw new Error("value must be a small positive integer: " + n);
    this.value = n;
  }
  toString() {
    return "simple(" + this.value + ")";
  }
  inspect() {
    return "simple(" + this.value + ")";
  }
  encodeCBOR(n) {
    return n._pushInt(this.value, MT$1.SIMPLE_FLOAT);
  }
  static isSimple(n) {
    return n instanceof Simple$1;
  }
  static decode(n, o) {
    switch (o == null && (o = !0), n) {
      case SIMPLE.FALSE:
        return !1;
      case SIMPLE.TRUE:
        return !0;
      case SIMPLE.NULL:
        return o ? null : SYMS$1.NULL;
      case SIMPLE.UNDEFINED:
        return o ? void 0 : SYMS$1.UNDEFINED;
      case -1:
        if (!o)
          throw new Error("Invalid BREAK");
        return SYMS$1.BREAK;
      default:
        return new Simple$1(n);
    }
  }
}
var simple = Simple$1;
class Tagged$1 {
  constructor(n, o, s) {
    if (this.tag = n, this.value = o, this.err = s, typeof this.tag != "number")
      throw new Error("Invalid tag type (" + typeof this.tag + ")");
    if (this.tag < 0 || (this.tag | 0) !== this.tag)
      throw new Error("Tag must be a positive integer: " + this.tag);
  }
  toString() {
    return `${this.tag}(${JSON.stringify(this.value)})`;
  }
  encodeCBOR(n) {
    return n._pushTag(this.tag), n.pushAny(this.value);
  }
  convert(n) {
    var o, s;
    if (s = n != null ? n[this.tag] : void 0, typeof s != "function" && (s = Tagged$1["_tag" + this.tag], typeof s != "function"))
      return this;
    try {
      return s.call(Tagged$1, this.value);
    } catch (u) {
      return o = u, this.err = o, this;
    }
  }
}
var tagged$1 = Tagged$1;
const defaultBase$1 = self.location ? self.location.protocol + "//" + self.location.host : "", URL$3 = self.URL;
class URLWithLegacySupport$2 {
  constructor(n = "", o = defaultBase$1) {
    this.super = new URL$3(n, o), this.path = this.pathname + this.search, this.auth = this.username && this.password ? this.username + ":" + this.password : null, this.query = this.search && this.search.startsWith("?") ? this.search.slice(1) : null;
  }
  get hash() {
    return this.super.hash;
  }
  get host() {
    return this.super.host;
  }
  get hostname() {
    return this.super.hostname;
  }
  get href() {
    return this.super.href;
  }
  get origin() {
    return this.super.origin;
  }
  get password() {
    return this.super.password;
  }
  get pathname() {
    return this.super.pathname;
  }
  get port() {
    return this.super.port;
  }
  get protocol() {
    return this.super.protocol;
  }
  get search() {
    return this.super.search;
  }
  get searchParams() {
    return this.super.searchParams;
  }
  get username() {
    return this.super.username;
  }
  set hash(n) {
    this.super.hash = n;
  }
  set host(n) {
    this.super.host = n;
  }
  set hostname(n) {
    this.super.hostname = n;
  }
  set href(n) {
    this.super.href = n;
  }
  set origin(n) {
    this.super.origin = n;
  }
  set password(n) {
    this.super.password = n;
  }
  set pathname(n) {
    this.super.pathname = n;
  }
  set port(n) {
    this.super.port = n;
  }
  set protocol(n) {
    this.super.protocol = n;
  }
  set search(n) {
    this.super.search = n;
  }
  set searchParams(n) {
    this.super.searchParams = n;
  }
  set username(n) {
    this.super.username = n;
  }
  createObjectURL(n) {
    return this.super.createObjectURL(n);
  }
  revokeObjectURL(n) {
    this.super.revokeObjectURL(n);
  }
  toJSON() {
    return this.super.toJSON();
  }
  toString() {
    return this.super.toString();
  }
  format() {
    return this.toString();
  }
}
function format$3(e) {
  if (typeof e == "string")
    return new URL$3(e).toString();
  if (!(e instanceof URL$3)) {
    const n = e.username && e.password ? `${e.username}:${e.password}@` : "", o = e.auth ? e.auth + "@" : "", s = e.port ? ":" + e.port : "", u = e.protocol ? e.protocol + "//" : "", d = e.host || "", g = e.hostname || "", m = e.search || (e.query ? "?" + e.query : ""), w = e.hash || "", B = e.pathname || "", x = e.path || B + m;
    return `${u}${n || o}${d || g + s}${x}${w}`;
  }
}
var urlBrowser = {
  URLWithLegacySupport: URLWithLegacySupport$2,
  URLSearchParams: self.URLSearchParams,
  defaultBase: defaultBase$1,
  format: format$3
};
const { URLWithLegacySupport: URLWithLegacySupport$1, format: format$2 } = urlBrowser;
var relative$1 = (e, n = {}, o = {}, s) => {
  let u = n.protocol ? n.protocol.replace(":", "") : "http";
  u = (o[u] || s || u) + ":";
  let d;
  try {
    d = new URLWithLegacySupport$1(e);
  } catch {
    d = {};
  }
  const g = Object.assign({}, n, {
    protocol: u || d.protocol,
    host: n.host || d.host
  });
  return new URLWithLegacySupport$1(e, format$2(g)).toString();
};
const {
  URLWithLegacySupport,
  format: format$1,
  URLSearchParams: URLSearchParams$1,
  defaultBase
} = urlBrowser, relative = relative$1;
var isoUrl = {
  URL: URLWithLegacySupport,
  URLSearchParams: URLSearchParams$1,
  format: format$1,
  relative,
  defaultBase
};
const { Buffer: Buffer$4 } = buffer, ieee754 = ieee754$1, Bignumber$1 = bignumber.exports.BigNumber, parser = decoder_asm, utils$2 = utils$3, c = constants$3, Simple = simple, Tagged = tagged$1, { URL: URL$2 } = isoUrl;
class Decoder$1 {
  constructor(n) {
    n = n || {}, !n.size || n.size < 65536 ? n.size = 65536 : n.size = utils$2.nextPowerOf2(n.size), this._heap = new ArrayBuffer(n.size), this._heap8 = new Uint8Array(this._heap), this._buffer = Buffer$4.from(this._heap), this._reset(), this._knownTags = Object.assign({
      0: (o) => new Date(o),
      1: (o) => new Date(o * 1e3),
      2: (o) => utils$2.arrayBufferToBignumber(o),
      3: (o) => c.NEG_ONE.minus(utils$2.arrayBufferToBignumber(o)),
      4: (o) => c.TEN.pow(o[0]).times(o[1]),
      5: (o) => c.TWO.pow(o[0]).times(o[1]),
      32: (o) => new URL$2(o),
      35: (o) => new RegExp(o)
    }, n.tags), this.parser = parser(commonjsGlobal, {
      log: console.log.bind(console),
      pushInt: this.pushInt.bind(this),
      pushInt32: this.pushInt32.bind(this),
      pushInt32Neg: this.pushInt32Neg.bind(this),
      pushInt64: this.pushInt64.bind(this),
      pushInt64Neg: this.pushInt64Neg.bind(this),
      pushFloat: this.pushFloat.bind(this),
      pushFloatSingle: this.pushFloatSingle.bind(this),
      pushFloatDouble: this.pushFloatDouble.bind(this),
      pushTrue: this.pushTrue.bind(this),
      pushFalse: this.pushFalse.bind(this),
      pushUndefined: this.pushUndefined.bind(this),
      pushNull: this.pushNull.bind(this),
      pushInfinity: this.pushInfinity.bind(this),
      pushInfinityNeg: this.pushInfinityNeg.bind(this),
      pushNaN: this.pushNaN.bind(this),
      pushNaNNeg: this.pushNaNNeg.bind(this),
      pushArrayStart: this.pushArrayStart.bind(this),
      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),
      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),
      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),
      pushObjectStart: this.pushObjectStart.bind(this),
      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),
      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),
      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),
      pushByteString: this.pushByteString.bind(this),
      pushByteStringStart: this.pushByteStringStart.bind(this),
      pushUtf8String: this.pushUtf8String.bind(this),
      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),
      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),
      pushTagUnassigned: this.pushTagUnassigned.bind(this),
      pushTagStart: this.pushTagStart.bind(this),
      pushTagStart4: this.pushTagStart4.bind(this),
      pushTagStart8: this.pushTagStart8.bind(this),
      pushBreak: this.pushBreak.bind(this)
    }, this._heap);
  }
  get _depth() {
    return this._parents.length;
  }
  get _currentParent() {
    return this._parents[this._depth - 1];
  }
  get _ref() {
    return this._currentParent.ref;
  }
  _closeParent() {
    var n = this._parents.pop();
    if (n.length > 0)
      throw new Error(`Missing ${n.length} elements`);
    switch (n.type) {
      case c.PARENT.TAG:
        this._push(
          this.createTag(n.ref[0], n.ref[1])
        );
        break;
      case c.PARENT.BYTE_STRING:
        this._push(this.createByteString(n.ref, n.length));
        break;
      case c.PARENT.UTF8_STRING:
        this._push(this.createUtf8String(n.ref, n.length));
        break;
      case c.PARENT.MAP:
        if (n.values % 2 > 0)
          throw new Error("Odd number of elements in the map");
        this._push(this.createMap(n.ref, n.length));
        break;
      case c.PARENT.OBJECT:
        if (n.values % 2 > 0)
          throw new Error("Odd number of elements in the map");
        this._push(this.createObject(n.ref, n.length));
        break;
      case c.PARENT.ARRAY:
        this._push(this.createArray(n.ref, n.length));
        break;
    }
    this._currentParent && this._currentParent.type === c.PARENT.TAG && this._dec();
  }
  _dec() {
    const n = this._currentParent;
    n.length < 0 || (n.length--, n.length === 0 && this._closeParent());
  }
  _push(n, o) {
    const s = this._currentParent;
    switch (s.values++, s.type) {
      case c.PARENT.ARRAY:
      case c.PARENT.BYTE_STRING:
      case c.PARENT.UTF8_STRING:
        s.length > -1 ? this._ref[this._ref.length - s.length] = n : this._ref.push(n), this._dec();
        break;
      case c.PARENT.OBJECT:
        s.tmpKey != null ? (this._ref[s.tmpKey] = n, s.tmpKey = null, this._dec()) : (s.tmpKey = n, typeof s.tmpKey != "string" && (s.type = c.PARENT.MAP, s.ref = utils$2.buildMap(s.ref)));
        break;
      case c.PARENT.MAP:
        s.tmpKey != null ? (this._ref.set(s.tmpKey, n), s.tmpKey = null, this._dec()) : s.tmpKey = n;
        break;
      case c.PARENT.TAG:
        this._ref.push(n), o || this._dec();
        break;
      default:
        throw new Error("Unknown parent type");
    }
  }
  _createParent(n, o, s) {
    this._parents[this._depth] = {
      type: o,
      length: s,
      ref: n,
      values: 0,
      tmpKey: null
    };
  }
  _reset() {
    this._res = [], this._parents = [{
      type: c.PARENT.ARRAY,
      length: -1,
      ref: this._res,
      values: 0,
      tmpKey: null
    }];
  }
  createTag(n, o) {
    const s = this._knownTags[n];
    return s ? s(o) : new Tagged(n, o);
  }
  createMap(n, o) {
    return n;
  }
  createObject(n, o) {
    return n;
  }
  createArray(n, o) {
    return n;
  }
  createByteString(n, o) {
    return Buffer$4.concat(n);
  }
  createByteStringFromHeap(n, o) {
    return n === o ? Buffer$4.alloc(0) : Buffer$4.from(this._heap.slice(n, o));
  }
  createInt(n) {
    return n;
  }
  createInt32(n, o) {
    return utils$2.buildInt32(n, o);
  }
  createInt64(n, o, s, u) {
    return utils$2.buildInt64(n, o, s, u);
  }
  createFloat(n) {
    return n;
  }
  createFloatSingle(n, o, s, u) {
    return ieee754.read([n, o, s, u], 0, !1, 23, 4);
  }
  createFloatDouble(n, o, s, u, d, g, m, w) {
    return ieee754.read([n, o, s, u, d, g, m, w], 0, !1, 52, 8);
  }
  createInt32Neg(n, o) {
    return -1 - utils$2.buildInt32(n, o);
  }
  createInt64Neg(n, o, s, u) {
    const d = utils$2.buildInt32(n, o), g = utils$2.buildInt32(s, u);
    return d > c.MAX_SAFE_HIGH ? c.NEG_ONE.minus(new Bignumber$1(d).times(c.SHIFT32).plus(g)) : -1 - (d * c.SHIFT32 + g);
  }
  createTrue() {
    return !0;
  }
  createFalse() {
    return !1;
  }
  createNull() {
    return null;
  }
  createUndefined() {
  }
  createInfinity() {
    return 1 / 0;
  }
  createInfinityNeg() {
    return -1 / 0;
  }
  createNaN() {
    return NaN;
  }
  createNaNNeg() {
    return NaN;
  }
  createUtf8String(n, o) {
    return n.join("");
  }
  createUtf8StringFromHeap(n, o) {
    return n === o ? "" : this._buffer.toString("utf8", n, o);
  }
  createSimpleUnassigned(n) {
    return new Simple(n);
  }
  pushInt(n) {
    this._push(this.createInt(n));
  }
  pushInt32(n, o) {
    this._push(this.createInt32(n, o));
  }
  pushInt64(n, o, s, u) {
    this._push(this.createInt64(n, o, s, u));
  }
  pushFloat(n) {
    this._push(this.createFloat(n));
  }
  pushFloatSingle(n, o, s, u) {
    this._push(this.createFloatSingle(n, o, s, u));
  }
  pushFloatDouble(n, o, s, u, d, g, m, w) {
    this._push(this.createFloatDouble(n, o, s, u, d, g, m, w));
  }
  pushInt32Neg(n, o) {
    this._push(this.createInt32Neg(n, o));
  }
  pushInt64Neg(n, o, s, u) {
    this._push(this.createInt64Neg(n, o, s, u));
  }
  pushTrue() {
    this._push(this.createTrue());
  }
  pushFalse() {
    this._push(this.createFalse());
  }
  pushNull() {
    this._push(this.createNull());
  }
  pushUndefined() {
    this._push(this.createUndefined());
  }
  pushInfinity() {
    this._push(this.createInfinity());
  }
  pushInfinityNeg() {
    this._push(this.createInfinityNeg());
  }
  pushNaN() {
    this._push(this.createNaN());
  }
  pushNaNNeg() {
    this._push(this.createNaNNeg());
  }
  pushArrayStart() {
    this._createParent([], c.PARENT.ARRAY, -1);
  }
  pushArrayStartFixed(n) {
    this._createArrayStartFixed(n);
  }
  pushArrayStartFixed32(n, o) {
    const s = utils$2.buildInt32(n, o);
    this._createArrayStartFixed(s);
  }
  pushArrayStartFixed64(n, o, s, u) {
    const d = utils$2.buildInt64(n, o, s, u);
    this._createArrayStartFixed(d);
  }
  pushObjectStart() {
    this._createObjectStartFixed(-1);
  }
  pushObjectStartFixed(n) {
    this._createObjectStartFixed(n);
  }
  pushObjectStartFixed32(n, o) {
    const s = utils$2.buildInt32(n, o);
    this._createObjectStartFixed(s);
  }
  pushObjectStartFixed64(n, o, s, u) {
    const d = utils$2.buildInt64(n, o, s, u);
    this._createObjectStartFixed(d);
  }
  pushByteStringStart() {
    this._parents[this._depth] = {
      type: c.PARENT.BYTE_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    };
  }
  pushByteString(n, o) {
    this._push(this.createByteStringFromHeap(n, o));
  }
  pushUtf8StringStart() {
    this._parents[this._depth] = {
      type: c.PARENT.UTF8_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    };
  }
  pushUtf8String(n, o) {
    this._push(this.createUtf8StringFromHeap(n, o));
  }
  pushSimpleUnassigned(n) {
    this._push(this.createSimpleUnassigned(n));
  }
  pushTagStart(n) {
    this._parents[this._depth] = {
      type: c.PARENT.TAG,
      length: 1,
      ref: [n]
    };
  }
  pushTagStart4(n, o) {
    this.pushTagStart(utils$2.buildInt32(n, o));
  }
  pushTagStart8(n, o, s, u) {
    this.pushTagStart(utils$2.buildInt64(n, o, s, u));
  }
  pushTagUnassigned(n) {
    this._push(this.createTag(n));
  }
  pushBreak() {
    if (this._currentParent.length > -1)
      throw new Error("Unexpected break");
    this._closeParent();
  }
  _createObjectStartFixed(n) {
    if (n === 0) {
      this._push(this.createObject({}));
      return;
    }
    this._createParent({}, c.PARENT.OBJECT, n);
  }
  _createArrayStartFixed(n) {
    if (n === 0) {
      this._push(this.createArray([]));
      return;
    }
    this._createParent(new Array(n), c.PARENT.ARRAY, n);
  }
  _decode(n) {
    if (n.byteLength === 0)
      throw new Error("Input too short");
    this._reset(), this._heap8.set(n);
    const o = this.parser.parse(n.byteLength);
    if (this._depth > 1) {
      for (; this._currentParent.length === 0; )
        this._closeParent();
      if (this._depth > 1)
        throw new Error("Undeterminated nesting");
    }
    if (o > 0)
      throw new Error("Failed to parse");
    if (this._res.length === 0)
      throw new Error("No valid result");
  }
  decodeFirst(n) {
    return this._decode(n), this._res[0];
  }
  decodeAll(n) {
    return this._decode(n), this._res;
  }
  static decode(n, o) {
    return typeof n == "string" && (n = Buffer$4.from(n, o || "hex")), new Decoder$1({ size: n.length }).decodeFirst(n);
  }
  static decodeAll(n, o) {
    return typeof n == "string" && (n = Buffer$4.from(n, o || "hex")), new Decoder$1({ size: n.length }).decodeAll(n);
  }
}
Decoder$1.decodeFirst = Decoder$1.decode;
var decoder = Decoder$1;
const { Buffer: Buffer$3 } = buffer, Decoder = decoder, utils$1 = utils$3;
class Diagnose extends Decoder {
  createTag(n, o) {
    return `${n}(${o})`;
  }
  createInt(n) {
    return super.createInt(n).toString();
  }
  createInt32(n, o) {
    return super.createInt32(n, o).toString();
  }
  createInt64(n, o, s, u) {
    return super.createInt64(n, o, s, u).toString();
  }
  createInt32Neg(n, o) {
    return super.createInt32Neg(n, o).toString();
  }
  createInt64Neg(n, o, s, u) {
    return super.createInt64Neg(n, o, s, u).toString();
  }
  createTrue() {
    return "true";
  }
  createFalse() {
    return "false";
  }
  createFloat(n) {
    const o = super.createFloat(n);
    return utils$1.isNegativeZero(n) ? "-0_1" : `${o}_1`;
  }
  createFloatSingle(n, o, s, u) {
    return `${super.createFloatSingle(n, o, s, u)}_2`;
  }
  createFloatDouble(n, o, s, u, d, g, m, w) {
    return `${super.createFloatDouble(n, o, s, u, d, g, m, w)}_3`;
  }
  createByteString(n, o) {
    const s = n.join(", ");
    return o === -1 ? `(_ ${s})` : `h'${s}`;
  }
  createByteStringFromHeap(n, o) {
    return `h'${Buffer$3.from(
      super.createByteStringFromHeap(n, o)
    ).toString("hex")}'`;
  }
  createInfinity() {
    return "Infinity_1";
  }
  createInfinityNeg() {
    return "-Infinity_1";
  }
  createNaN() {
    return "NaN_1";
  }
  createNaNNeg() {
    return "-NaN_1";
  }
  createNull() {
    return "null";
  }
  createUndefined() {
    return "undefined";
  }
  createSimpleUnassigned(n) {
    return `simple(${n})`;
  }
  createArray(n, o) {
    const s = super.createArray(n, o);
    return o === -1 ? `[_ ${s.join(", ")}]` : `[${s.join(", ")}]`;
  }
  createMap(n, o) {
    const s = super.createMap(n), u = Array.from(s.keys()).reduce(collectObject(s), "");
    return o === -1 ? `{_ ${u}}` : `{${u}}`;
  }
  createObject(n, o) {
    const s = super.createObject(n), u = Object.keys(s).reduce(collectObject(s), "");
    return o === -1 ? `{_ ${u}}` : `{${u}}`;
  }
  createUtf8String(n, o) {
    const s = n.join(", ");
    return o === -1 ? `(_ ${s})` : `"${s}"`;
  }
  createUtf8StringFromHeap(n, o) {
    return `"${Buffer$3.from(
      super.createUtf8StringFromHeap(n, o)
    ).toString("utf8")}"`;
  }
  static diagnose(n, o) {
    return typeof n == "string" && (n = Buffer$3.from(n, o || "hex")), new Diagnose().decodeFirst(n);
  }
}
var diagnose = Diagnose;
function collectObject(e) {
  return (n, o) => n ? `${n}, ${o}: ${e[o]}` : `${o}: ${e[o]}`;
}
const { Buffer: Buffer$2 } = buffer, { URL: URL$1 } = isoUrl, Bignumber = bignumber.exports.BigNumber, utils = utils$3, constants$1 = constants$3, MT = constants$1.MT, NUMBYTES = constants$1.NUMBYTES, SHIFT32 = constants$1.SHIFT32, SYMS = constants$1.SYMS, TAG = constants$1.TAG, HALF = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.TWO, FLOAT = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.FOUR, DOUBLE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.EIGHT, TRUE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.TRUE, FALSE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.FALSE, UNDEFINED = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.UNDEFINED, NULL = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.NULL, MAXINT_BN = new Bignumber("0x20000000000000"), BUF_NAN = Buffer$2.from("f97e00", "hex"), BUF_INF_NEG = Buffer$2.from("f9fc00", "hex"), BUF_INF_POS = Buffer$2.from("f97c00", "hex");
function toType(e) {
  return {}.toString.call(e).slice(8, -1);
}
class Encoder {
  constructor(n) {
    n = n || {}, this.streaming = typeof n.stream == "function", this.onData = n.stream, this.semanticTypes = [
      [URL$1, this._pushUrl],
      [Bignumber, this._pushBigNumber]
    ];
    const o = n.genTypes || [], s = o.length;
    for (let u = 0; u < s; u++)
      this.addSemanticType(
        o[u][0],
        o[u][1]
      );
    this._reset();
  }
  addSemanticType(n, o) {
    const s = this.semanticTypes.length;
    for (let u = 0; u < s; u++)
      if (this.semanticTypes[u][0] === n) {
        const g = this.semanticTypes[u][1];
        return this.semanticTypes[u][1] = o, g;
      }
    return this.semanticTypes.push([n, o]), null;
  }
  push(n) {
    return n && (this.result[this.offset] = n, this.resultMethod[this.offset] = 0, this.resultLength[this.offset] = n.length, this.offset++, this.streaming && this.onData(this.finalize())), !0;
  }
  pushWrite(n, o, s) {
    return this.result[this.offset] = n, this.resultMethod[this.offset] = o, this.resultLength[this.offset] = s, this.offset++, this.streaming && this.onData(this.finalize()), !0;
  }
  _pushUInt8(n) {
    return this.pushWrite(n, 1, 1);
  }
  _pushUInt16BE(n) {
    return this.pushWrite(n, 2, 2);
  }
  _pushUInt32BE(n) {
    return this.pushWrite(n, 3, 4);
  }
  _pushDoubleBE(n) {
    return this.pushWrite(n, 4, 8);
  }
  _pushNaN() {
    return this.push(BUF_NAN);
  }
  _pushInfinity(n) {
    const o = n < 0 ? BUF_INF_NEG : BUF_INF_POS;
    return this.push(o);
  }
  _pushFloat(n) {
    const o = Buffer$2.allocUnsafe(2);
    if (utils.writeHalf(o, n) && utils.parseHalf(o) === n)
      return this._pushUInt8(HALF) && this.push(o);
    const s = Buffer$2.allocUnsafe(4);
    return s.writeFloatBE(n, 0), s.readFloatBE(0) === n ? this._pushUInt8(FLOAT) && this.push(s) : this._pushUInt8(DOUBLE) && this._pushDoubleBE(n);
  }
  _pushInt(n, o, s) {
    const u = o << 5;
    return n < 24 ? this._pushUInt8(u | n) : n <= 255 ? this._pushUInt8(u | NUMBYTES.ONE) && this._pushUInt8(n) : n <= 65535 ? this._pushUInt8(u | NUMBYTES.TWO) && this._pushUInt16BE(n) : n <= 4294967295 ? this._pushUInt8(u | NUMBYTES.FOUR) && this._pushUInt32BE(n) : n <= Number.MAX_SAFE_INTEGER ? this._pushUInt8(u | NUMBYTES.EIGHT) && this._pushUInt32BE(Math.floor(n / SHIFT32)) && this._pushUInt32BE(n % SHIFT32) : o === MT.NEG_INT ? this._pushFloat(s) : this._pushFloat(n);
  }
  _pushIntNum(n) {
    return n < 0 ? this._pushInt(-n - 1, MT.NEG_INT, n) : this._pushInt(n, MT.POS_INT);
  }
  _pushNumber(n) {
    switch (!1) {
      case n === n:
        return this._pushNaN(n);
      case isFinite(n):
        return this._pushInfinity(n);
      case n % 1 !== 0:
        return this._pushIntNum(n);
      default:
        return this._pushFloat(n);
    }
  }
  _pushString(n) {
    const o = Buffer$2.byteLength(n, "utf8");
    return this._pushInt(o, MT.UTF8_STRING) && this.pushWrite(n, 5, o);
  }
  _pushBoolean(n) {
    return this._pushUInt8(n ? TRUE : FALSE);
  }
  _pushUndefined(n) {
    return this._pushUInt8(UNDEFINED);
  }
  _pushArray(n, o) {
    const s = o.length;
    if (!n._pushInt(s, MT.ARRAY))
      return !1;
    for (let u = 0; u < s; u++)
      if (!n.pushAny(o[u]))
        return !1;
    return !0;
  }
  _pushTag(n) {
    return this._pushInt(n, MT.TAG);
  }
  _pushDate(n, o) {
    return n._pushTag(TAG.DATE_EPOCH) && n.pushAny(Math.round(o / 1e3));
  }
  _pushBuffer(n, o) {
    return n._pushInt(o.length, MT.BYTE_STRING) && n.push(o);
  }
  _pushNoFilter(n, o) {
    return n._pushBuffer(n, o.slice());
  }
  _pushRegexp(n, o) {
    return n._pushTag(TAG.REGEXP) && n.pushAny(o.source);
  }
  _pushSet(n, o) {
    if (!n._pushInt(o.size, MT.ARRAY))
      return !1;
    for (const s of o)
      if (!n.pushAny(s))
        return !1;
    return !0;
  }
  _pushUrl(n, o) {
    return n._pushTag(TAG.URI) && n.pushAny(o.format());
  }
  _pushBigint(n) {
    let o = TAG.POS_BIGINT;
    n.isNegative() && (n = n.negated().minus(1), o = TAG.NEG_BIGINT);
    let s = n.toString(16);
    s.length % 2 && (s = "0" + s);
    const u = Buffer$2.from(s, "hex");
    return this._pushTag(o) && this._pushBuffer(this, u);
  }
  _pushBigNumber(n, o) {
    if (o.isNaN())
      return n._pushNaN();
    if (!o.isFinite())
      return n._pushInfinity(o.isNegative() ? -1 / 0 : 1 / 0);
    if (o.isInteger())
      return n._pushBigint(o);
    if (!(n._pushTag(TAG.DECIMAL_FRAC) && n._pushInt(2, MT.ARRAY)))
      return !1;
    const s = o.decimalPlaces(), u = o.multipliedBy(new Bignumber(10).pow(s));
    return n._pushIntNum(-s) ? u.abs().isLessThan(MAXINT_BN) ? n._pushIntNum(u.toNumber()) : n._pushBigint(u) : !1;
  }
  _pushMap(n, o) {
    return n._pushInt(o.size, MT.MAP) ? this._pushRawMap(
      o.size,
      Array.from(o)
    ) : !1;
  }
  _pushObject(n) {
    if (!n)
      return this._pushUInt8(NULL);
    for (var o = this.semanticTypes.length, s = 0; s < o; s++)
      if (n instanceof this.semanticTypes[s][0])
        return this.semanticTypes[s][1].call(n, this, n);
    var u = n.encodeCBOR;
    if (typeof u == "function")
      return u.call(n, this);
    var d = Object.keys(n), g = d.length;
    return this._pushInt(g, MT.MAP) ? this._pushRawMap(
      g,
      d.map((m) => [m, n[m]])
    ) : !1;
  }
  _pushRawMap(n, o) {
    o = o.map(function(u) {
      return u[0] = Encoder.encode(u[0]), u;
    }).sort(utils.keySorter);
    for (var s = 0; s < n; s++)
      if (!this.push(o[s][0]) || !this.pushAny(o[s][1]))
        return !1;
    return !0;
  }
  write(n) {
    return this.pushAny(n);
  }
  pushAny(n) {
    var o = toType(n);
    switch (o) {
      case "Number":
        return this._pushNumber(n);
      case "String":
        return this._pushString(n);
      case "Boolean":
        return this._pushBoolean(n);
      case "Object":
        return this._pushObject(n);
      case "Array":
        return this._pushArray(this, n);
      case "Uint8Array":
        return this._pushBuffer(this, Buffer$2.isBuffer(n) ? n : Buffer$2.from(n));
      case "Null":
        return this._pushUInt8(NULL);
      case "Undefined":
        return this._pushUndefined(n);
      case "Map":
        return this._pushMap(this, n);
      case "Set":
        return this._pushSet(this, n);
      case "URL":
        return this._pushUrl(this, n);
      case "BigNumber":
        return this._pushBigNumber(this, n);
      case "Date":
        return this._pushDate(this, n);
      case "RegExp":
        return this._pushRegexp(this, n);
      case "Symbol":
        switch (n) {
          case SYMS.NULL:
            return this._pushObject(null);
          case SYMS.UNDEFINED:
            return this._pushUndefined(void 0);
          default:
            throw new Error("Unknown symbol: " + n.toString());
        }
      default:
        throw new Error("Unknown type: " + typeof n + ", " + (n ? n.toString() : ""));
    }
  }
  finalize() {
    if (this.offset === 0)
      return null;
    for (var n = this.result, o = this.resultLength, s = this.resultMethod, u = this.offset, d = 0, g = 0; g < u; g++)
      d += o[g];
    var m = Buffer$2.allocUnsafe(d), w = 0, B = 0;
    for (g = 0; g < u; g++) {
      switch (B = o[g], s[g]) {
        case 0:
          n[g].copy(m, w);
          break;
        case 1:
          m.writeUInt8(n[g], w, !0);
          break;
        case 2:
          m.writeUInt16BE(n[g], w, !0);
          break;
        case 3:
          m.writeUInt32BE(n[g], w, !0);
          break;
        case 4:
          m.writeDoubleBE(n[g], w, !0);
          break;
        case 5:
          m.write(n[g], w, B, "utf8");
          break;
        default:
          throw new Error("unkown method");
      }
      w += B;
    }
    var x = m;
    return this._reset(), x;
  }
  _reset() {
    this.result = [], this.resultMethod = [], this.resultLength = [], this.offset = 0;
  }
  static encode(n) {
    const o = new Encoder();
    if (!o.pushAny(n))
      throw new Error("Failed to encode input");
    return o.finalize();
  }
}
var encoder = Encoder;
(function(e) {
  e.Diagnose = diagnose, e.Decoder = decoder, e.Encoder = encoder, e.Simple = simple, e.Tagged = tagged$1, e.decodeAll = e.Decoder.decodeAll, e.decodeFirst = e.Decoder.decodeFirst, e.diagnose = e.Diagnose.diagnose, e.encode = e.Encoder.encode, e.decode = e.Decoder.decode, e.leveldb = {
    decode: e.Decoder.decodeAll,
    encode: e.Encoder.encode,
    buffer: !0,
    name: "cbor"
  };
})(src$1);
var safeBuffer = { exports: {} };
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
(function(e, n) {
  var o = buffer$1, s = o.Buffer;
  function u(g, m) {
    for (var w in g)
      m[w] = g[w];
  }
  s.from && s.alloc && s.allocUnsafe && s.allocUnsafeSlow ? e.exports = o : (u(o, n), n.Buffer = d);
  function d(g, m, w) {
    return s(g, m, w);
  }
  d.prototype = Object.create(s.prototype), u(s, d), d.from = function(g, m, w) {
    if (typeof g == "number")
      throw new TypeError("Argument must not be a number");
    return s(g, m, w);
  }, d.alloc = function(g, m, w) {
    if (typeof g != "number")
      throw new TypeError("Argument must be a number");
    var B = s(g);
    return m !== void 0 ? typeof w == "string" ? B.fill(m, w) : B.fill(m) : B.fill(0), B;
  }, d.allocUnsafe = function(g) {
    if (typeof g != "number")
      throw new TypeError("Argument must be a number");
    return s(g);
  }, d.allocUnsafeSlow = function(g) {
    if (typeof g != "number")
      throw new TypeError("Argument must be a number");
    return o.SlowBuffer(g);
  };
})(safeBuffer, safeBuffer.exports);
const Buffer$1 = safeBuffer.exports.Buffer;
var bufferPipe = class {
  constructor(n = Buffer$1.from([])) {
    this.buffer = n, this._bytesRead = 0, this._bytesWrote = 0;
  }
  read(n) {
    this._bytesRead += n;
    const o = this.buffer.slice(0, n);
    return this.buffer = this.buffer.slice(n), o;
  }
  write(n) {
    n = Buffer$1.from(n), this._bytesWrote += n.length, this.buffer = Buffer$1.concat([this.buffer, n]);
  }
  get end() {
    return !this.buffer.length;
  }
  get bytesRead() {
    return this._bytesRead;
  }
  get bytesWrote() {
    return this._bytesWrote;
  }
};
function safeRead$1(e, n) {
  if (e.buffer.length < n)
    throw new Error("unexpected end of buffer");
  return e.read(n);
}
function lebEncode$1(e) {
  if (typeof e == "number" && (e = BigInt(e)), e < BigInt(0))
    throw new Error("Cannot leb encode negative values.");
  const n = new bufferPipe();
  for (; ; ) {
    const o = Number(e & BigInt(127));
    if (e /= BigInt(128), e === BigInt(0)) {
      n.write([o]);
      break;
    } else
      n.write([o | 128]);
  }
  return new buffer$1.Buffer(n.buffer);
}
function lebDecode$1(e) {
  let n = BigInt(1), o = BigInt(0), s;
  do
    s = safeRead$1(e, 1)[0], o += BigInt(s & 127).valueOf() * n, n *= BigInt(128);
  while (s >= 128);
  return o;
}
function slebEncode$1(e) {
  typeof e == "number" && (e = BigInt(e));
  const n = e < BigInt(0);
  n && (e = -e - BigInt(1));
  const o = new bufferPipe();
  for (; ; ) {
    const u = s(e);
    if (e /= BigInt(128), n && e === BigInt(0) && (u & 64) !== 0 || !n && e === BigInt(0) && (u & 64) === 0) {
      o.write([u]);
      break;
    } else
      o.write([u | 128]);
  }
  function s(u) {
    const d = u % BigInt(128);
    return Number(n ? BigInt(128) - d - BigInt(1) : d);
  }
  return new buffer$1.Buffer(o.buffer);
}
function slebDecode$1(e) {
  const n = new Uint8Array(e.buffer);
  let o = 0;
  for (; o < n.byteLength; o++)
    if (n[o] < 128) {
      if ((n[o] & 64) === 0)
        return lebDecode$1(e);
      break;
    }
  const s = new Uint8Array(safeRead$1(e, o + 1));
  let u = BigInt(0);
  for (let d = s.byteLength - 1; d >= 0; d--)
    u = u * BigInt(128) + BigInt(128 - (s[d] & 127) - 1);
  return -u - BigInt(1);
}
function writeUIntLE$1(e, n) {
  if (BigInt(e) < BigInt(0))
    throw new Error("Cannot write negative values.");
  return writeIntLE$1(e, n);
}
function writeIntLE$1(e, n) {
  e = BigInt(e);
  const o = new bufferPipe();
  let s = 0, u = BigInt(256), d = BigInt(0), g = Number(e % u);
  for (o.write([g]); ++s < n; )
    e < 0 && d === BigInt(0) && g !== 0 && (d = BigInt(1)), g = Number((e / u - d) % BigInt(256)), o.write([g]), u *= BigInt(256);
  return new buffer$1.Buffer(o.buffer);
}
function readUIntLE$1(e, n) {
  let o = BigInt(safeRead$1(e, 1)[0]), s = BigInt(1), u = 0;
  for (; ++u < n; ) {
    s *= BigInt(256);
    const d = BigInt(safeRead$1(e, 1)[0]);
    o = o + s * d;
  }
  return o;
}
function readIntLE$1(e, n) {
  let o = readUIntLE$1(e, n);
  const s = BigInt(2) ** (BigInt(8) * BigInt(n - 1) + BigInt(7));
  return o >= s && (o -= s * BigInt(2)), o;
}
function blobFromBuffer(e) {
  return e;
}
function blobFromUint8Array(e) {
  return buffer$1.Buffer.from(e);
}
function blobFromText(e) {
  return buffer$1.Buffer.from(e);
}
function blobFromHex(e) {
  return buffer$1.Buffer.from(e, "hex");
}
function blobToHex(e) {
  return e.toString("hex");
}
function blobToUint8Array(e) {
  return new Uint8Array(e.slice(0, e.byteLength));
}
function makeNonce$1() {
  return lebEncode$1(BigInt(+Date.now()) * BigInt(1e5) + BigInt(Math.floor(Math.random() * 1e5)));
}
function idlHash$1(e) {
  const o = new TextEncoder().encode(e);
  let s = 0;
  for (const u of o)
    s = (s * 223 + u) % 2 ** 32;
  return s;
}
function idlLabelToId$1(e) {
  if (/^_\d+_$/.test(e) || /^_0x[0-9a-fA-F]+_$/.test(e)) {
    const n = +e.slice(1, -1);
    if (Number.isSafeInteger(n) && n >= 0 && n < 2 ** 32)
      return n;
  }
  return idlHash$1(e);
}
const magicNumber$1 = "DIDL";
function zipWith$1(e, n, o) {
  return e.map((s, u) => o(s, n[u]));
}
class TypeTable$1 {
  constructor() {
    this._typs = [], this._idx = /* @__PURE__ */ new Map();
  }
  has(n) {
    return this._idx.has(n.name);
  }
  add(n, o) {
    const s = this._typs.length;
    this._idx.set(n.name, s), this._typs.push(o);
  }
  merge(n, o) {
    const s = this._idx.get(n.name), u = this._idx.get(o);
    if (s === void 0)
      throw new Error("Missing type index for " + n);
    if (u === void 0)
      throw new Error("Missing type index for " + o);
    this._typs[s] = this._typs[u], this._typs.splice(u, 1), this._idx.delete(o);
  }
  encode() {
    const n = lebEncode$1(this._typs.length), o = buffer$1.Buffer.concat(this._typs);
    return buffer$1.Buffer.concat([n, o]);
  }
  indexOf(n) {
    if (!this._idx.has(n))
      throw new Error("Missing type index for " + n);
    return slebEncode$1(this._idx.get(n) || 0);
  }
}
class Visitor$1 {
  visitType(n, o) {
    throw new Error("Not implemented");
  }
  visitPrimitive(n, o) {
    return this.visitType(n, o);
  }
  visitEmpty(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitBool(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitNull(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitReserved(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitText(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitNumber(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitInt(n, o) {
    return this.visitNumber(n, o);
  }
  visitNat(n, o) {
    return this.visitNumber(n, o);
  }
  visitFloat(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitFixedInt(n, o) {
    return this.visitNumber(n, o);
  }
  visitFixedNat(n, o) {
    return this.visitNumber(n, o);
  }
  visitPrincipal(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitConstruct(n, o) {
    return this.visitType(n, o);
  }
  visitVec(n, o, s) {
    return this.visitConstruct(n, s);
  }
  visitOpt(n, o, s) {
    return this.visitConstruct(n, s);
  }
  visitRecord(n, o, s) {
    return this.visitConstruct(n, s);
  }
  visitTuple(n, o, s) {
    const u = o.map((d, g) => [`_${g}_`, d]);
    return this.visitRecord(n, u, s);
  }
  visitVariant(n, o, s) {
    return this.visitConstruct(n, s);
  }
  visitRec(n, o, s) {
    return this.visitConstruct(o, s);
  }
  visitFunc(n, o) {
    return this.visitConstruct(n, o);
  }
  visitService(n, o) {
    return this.visitConstruct(n, o);
  }
}
class Type$1 {
  display() {
    return this.name;
  }
  valueToString(n) {
    return toReadableString$1(n);
  }
  buildTypeTable(n) {
    n.has(this) || this._buildTypeTableImpl(n);
  }
}
class PrimitiveType$1 extends Type$1 {
  checkType(n) {
    if (this.name !== n.name)
      throw new Error(`type mismatch: type on the wire ${n.name}, expect type ${this.name}`);
    return n;
  }
  _buildTypeTableImpl(n) {
  }
}
class ConstructType$1 extends Type$1 {
  checkType(n) {
    if (n instanceof RecClass$1) {
      const o = n.getType();
      if (typeof o > "u")
        throw new Error("type mismatch with uninitialized type");
      return o;
    }
    throw new Error(`type mismatch: type on the wire ${n.name}, expect type ${this.name}`);
  }
  encodeType(n) {
    return n.indexOf(this.name);
  }
}
class EmptyClass$1 extends PrimitiveType$1 {
  accept(n, o) {
    return n.visitEmpty(this, o);
  }
  covariant(n) {
    return !1;
  }
  encodeValue() {
    throw new Error("Empty cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Empty cannot appear as a value");
  }
  encodeType() {
    return slebEncode$1(-17);
  }
  decodeValue() {
    throw new Error("Empty cannot appear as an output");
  }
  get name() {
    return "empty";
  }
}
class BoolClass$1 extends PrimitiveType$1 {
  accept(n, o) {
    return n.visitBool(this, o);
  }
  covariant(n) {
    return typeof n == "boolean";
  }
  encodeValue(n) {
    const o = buffer$1.Buffer.alloc(1);
    return o.writeInt8(n ? 1 : 0, 0), o;
  }
  encodeType() {
    return slebEncode$1(-2);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = safeRead$1(n, 1).toString("hex");
    if (s === "00")
      return !1;
    if (s === "01")
      return !0;
    throw new Error("Boolean value out of range");
  }
  get name() {
    return "bool";
  }
}
class NullClass$1 extends PrimitiveType$1 {
  accept(n, o) {
    return n.visitNull(this, o);
  }
  covariant(n) {
    return n === null;
  }
  encodeValue() {
    return buffer$1.Buffer.alloc(0);
  }
  encodeType() {
    return slebEncode$1(-1);
  }
  decodeValue(n, o) {
    return this.checkType(o), null;
  }
  get name() {
    return "null";
  }
}
class ReservedClass$1 extends PrimitiveType$1 {
  accept(n, o) {
    return n.visitReserved(this, o);
  }
  covariant(n) {
    return !0;
  }
  encodeValue() {
    return buffer$1.Buffer.alloc(0);
  }
  encodeType() {
    return slebEncode$1(-16);
  }
  decodeValue(n, o) {
    return o.name !== this.name && o.decodeValue(n, o), null;
  }
  get name() {
    return "reserved";
  }
}
function isValidUTF8(e) {
  return buffer$1.Buffer.compare(new buffer$1.Buffer(e.toString(), "utf8"), e) === 0;
}
class TextClass$1 extends PrimitiveType$1 {
  accept(n, o) {
    return n.visitText(this, o);
  }
  covariant(n) {
    return typeof n == "string";
  }
  encodeValue(n) {
    const o = buffer$1.Buffer.from(n, "utf8"), s = lebEncode$1(o.length);
    return buffer$1.Buffer.concat([s, o]);
  }
  encodeType() {
    return slebEncode$1(-15);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = lebDecode$1(n), u = safeRead$1(n, Number(s));
    if (!isValidUTF8(u))
      throw new Error("Not valid UTF8 text");
    return u.toString("utf8");
  }
  get name() {
    return "text";
  }
  valueToString(n) {
    return '"' + n + '"';
  }
}
class IntClass$1 extends PrimitiveType$1 {
  accept(n, o) {
    return n.visitInt(this, o);
  }
  covariant(n) {
    return typeof n == "bigint" || Number.isInteger(n);
  }
  encodeValue(n) {
    return slebEncode$1(n);
  }
  encodeType() {
    return slebEncode$1(-4);
  }
  decodeValue(n, o) {
    return this.checkType(o), slebDecode$1(n);
  }
  get name() {
    return "int";
  }
  valueToString(n) {
    return n.toString();
  }
}
class NatClass$1 extends PrimitiveType$1 {
  accept(n, o) {
    return n.visitNat(this, o);
  }
  covariant(n) {
    return typeof n == "bigint" && n >= BigInt(0) || Number.isInteger(n) && n >= 0;
  }
  encodeValue(n) {
    return lebEncode$1(n);
  }
  encodeType() {
    return slebEncode$1(-3);
  }
  decodeValue(n, o) {
    return this.checkType(o), lebDecode$1(n);
  }
  get name() {
    return "nat";
  }
  valueToString(n) {
    return n.toString();
  }
}
class FloatClass$1 extends PrimitiveType$1 {
  constructor(n) {
    if (super(), this._bits = n, n !== 32 && n !== 64)
      throw new Error("not a valid float type");
  }
  accept(n, o) {
    return n.visitFloat(this, o);
  }
  covariant(n) {
    return typeof n == "number" || n instanceof Number;
  }
  encodeValue(n) {
    const o = buffer$1.Buffer.allocUnsafe(this._bits / 8);
    return this._bits === 32 ? o.writeFloatLE(n, 0) : o.writeDoubleLE(n, 0), o;
  }
  encodeType() {
    const n = this._bits === 32 ? -13 : -14;
    return slebEncode$1(n);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = safeRead$1(n, this._bits / 8);
    return this._bits === 32 ? s.readFloatLE(0) : s.readDoubleLE(0);
  }
  get name() {
    return "float" + this._bits;
  }
  valueToString(n) {
    return n.toString();
  }
}
class FixedIntClass$1 extends PrimitiveType$1 {
  constructor(n) {
    super(), this._bits = n;
  }
  accept(n, o) {
    return n.visitFixedInt(this, o);
  }
  covariant(n) {
    const o = BigInt(2) ** BigInt(this._bits - 1) * BigInt(-1), s = BigInt(2) ** BigInt(this._bits - 1) - BigInt(1);
    if (typeof n == "bigint")
      return n >= o && n <= s;
    if (Number.isInteger(n)) {
      const u = BigInt(n);
      return u >= o && u <= s;
    } else
      return !1;
  }
  encodeValue(n) {
    return writeIntLE$1(n, this._bits / 8);
  }
  encodeType() {
    const n = Math.log2(this._bits) - 3;
    return slebEncode$1(-9 - n);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = readIntLE$1(n, this._bits / 8);
    return this._bits <= 32 ? Number(s) : s;
  }
  get name() {
    return `int${this._bits}`;
  }
  valueToString(n) {
    return n.toString();
  }
}
class FixedNatClass$1 extends PrimitiveType$1 {
  constructor(n) {
    super(), this.bits = n;
  }
  accept(n, o) {
    return n.visitFixedNat(this, o);
  }
  covariant(n) {
    const o = BigInt(2) ** BigInt(this.bits);
    return typeof n == "bigint" && n >= BigInt(0) ? n < o : Number.isInteger(n) && n >= 0 ? BigInt(n) < o : !1;
  }
  encodeValue(n) {
    return writeUIntLE$1(n, this.bits / 8);
  }
  encodeType() {
    const n = Math.log2(this.bits) - 3;
    return slebEncode$1(-5 - n);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = readUIntLE$1(n, this.bits / 8);
    return this.bits <= 32 ? Number(s) : s;
  }
  get name() {
    return `nat${this.bits}`;
  }
  valueToString(n) {
    return n.toString();
  }
}
class VecClass$1 extends ConstructType$1 {
  constructor(n) {
    super(), this._type = n, this._blobOptimization = !1, n instanceof FixedNatClass$1 && n.bits === 8 && (this._blobOptimization = !0);
  }
  accept(n, o) {
    return n.visitVec(this, this._type, o);
  }
  covariant(n) {
    return Array.isArray(n) && n.every((o) => this._type.covariant(o));
  }
  encodeValue(n) {
    const o = lebEncode$1(n.length);
    return this._blobOptimization ? buffer$1.Buffer.concat([o, buffer$1.Buffer.from(n)]) : buffer$1.Buffer.concat([o, ...n.map((s) => this._type.encodeValue(s))]);
  }
  _buildTypeTableImpl(n) {
    this._type.buildTypeTable(n);
    const o = slebEncode$1(-19), s = this._type.encodeType(n);
    n.add(this, buffer$1.Buffer.concat([o, s]));
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof VecClass$1))
      throw new Error("Not a vector type");
    const u = Number(lebDecode$1(n));
    if (this._blobOptimization)
      return [...new Uint8Array(n.read(u))];
    const d = [];
    for (let g = 0; g < u; g++)
      d.push(this._type.decodeValue(n, s._type));
    return d;
  }
  get name() {
    return `vec ${this._type.name}`;
  }
  display() {
    return `vec ${this._type.display()}`;
  }
  valueToString(n) {
    return "vec {" + n.map((s) => this._type.valueToString(s)).join("; ") + "}";
  }
}
class OptClass$1 extends ConstructType$1 {
  constructor(n) {
    super(), this._type = n;
  }
  accept(n, o) {
    return n.visitOpt(this, this._type, o);
  }
  covariant(n) {
    return Array.isArray(n) && (n.length === 0 || n.length === 1 && this._type.covariant(n[0]));
  }
  encodeValue(n) {
    return n.length === 0 ? buffer$1.Buffer.from([0]) : buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), this._type.encodeValue(n[0])]);
  }
  _buildTypeTableImpl(n) {
    this._type.buildTypeTable(n);
    const o = slebEncode$1(-18), s = this._type.encodeType(n);
    n.add(this, buffer$1.Buffer.concat([o, s]));
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof OptClass$1))
      throw new Error("Not an option type");
    const u = safeRead$1(n, 1).toString("hex");
    if (u === "00")
      return [];
    if (u === "01")
      return [this._type.decodeValue(n, s._type)];
    throw new Error("Not an option value");
  }
  get name() {
    return `opt ${this._type.name}`;
  }
  display() {
    return `opt ${this._type.display()}`;
  }
  valueToString(n) {
    return n.length === 0 ? "null" : `opt ${this._type.valueToString(n[0])}`;
  }
}
class RecordClass$1 extends ConstructType$1 {
  constructor(n = {}) {
    super(), this._fields = Object.entries(n).sort((o, s) => idlLabelToId$1(o[0]) - idlLabelToId$1(s[0]));
  }
  accept(n, o) {
    return n.visitRecord(this, this._fields, o);
  }
  tryAsTuple() {
    const n = [];
    for (let o = 0; o < this._fields.length; o++) {
      const [s, u] = this._fields[o];
      if (s !== `_${o}_`)
        return null;
      n.push(u);
    }
    return n;
  }
  covariant(n) {
    return typeof n == "object" && this._fields.every(([o, s]) => {
      if (!n.hasOwnProperty(o))
        throw new Error(`Record is missing key "${o}".`);
      return s.covariant(n[o]);
    });
  }
  encodeValue(n) {
    const o = this._fields.map(([u]) => n[u]), s = zipWith$1(this._fields, o, ([, u], d) => u.encodeValue(d));
    return buffer$1.Buffer.concat(s);
  }
  _buildTypeTableImpl(n) {
    this._fields.forEach(([d, g]) => g.buildTypeTable(n));
    const o = slebEncode$1(-20), s = lebEncode$1(this._fields.length), u = this._fields.map(([d, g]) => buffer$1.Buffer.concat([lebEncode$1(idlLabelToId$1(d)), g.encodeType(n)]));
    n.add(this, buffer$1.Buffer.concat([o, s, buffer$1.Buffer.concat(u)]));
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof RecordClass$1))
      throw new Error("Not a record type");
    const u = {};
    let d = 0;
    for (const [g, m] of s._fields) {
      if (d >= this._fields.length || idlLabelToId$1(this._fields[d][0]) !== idlLabelToId$1(g)) {
        m.decodeValue(n, m);
        continue;
      }
      const [w, B] = this._fields[d];
      u[w] = B.decodeValue(n, m), d++;
    }
    if (d < this._fields.length)
      throw new Error("Cannot find field " + this._fields[d][0]);
    return u;
  }
  get name() {
    return `record {${this._fields.map(([o, s]) => o + ":" + s.name).join("; ")}}`;
  }
  display() {
    return `record {${this._fields.map(([o, s]) => o + ":" + s.display()).join("; ")}}`;
  }
  valueToString(n) {
    const o = this._fields.map(([u]) => n[u]);
    return `record {${zipWith$1(this._fields, o, ([u, d], g) => u + "=" + d.valueToString(g)).join("; ")}}`;
  }
}
class TupleClass$1 extends RecordClass$1 {
  constructor(n) {
    const o = {};
    n.forEach((s, u) => o["_" + u + "_"] = s), super(o), this._components = n;
  }
  accept(n, o) {
    return n.visitTuple(this, this._components, o);
  }
  covariant(n) {
    return Array.isArray(n) && n.length >= this._fields.length && this._components.every((o, s) => o.covariant(n[s]));
  }
  encodeValue(n) {
    const o = zipWith$1(this._components, n, (s, u) => s.encodeValue(u));
    return buffer$1.Buffer.concat(o);
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof TupleClass$1))
      throw new Error("not a tuple type");
    if (s._components.length < this._components.length)
      throw new Error("tuple mismatch");
    const u = [];
    for (const [d, g] of s._components.entries())
      d >= this._components.length ? g.decodeValue(n, g) : u.push(this._components[d].decodeValue(n, g));
    return u;
  }
  display() {
    return `record {${this._components.map((o) => o.display()).join("; ")}}`;
  }
  valueToString(n) {
    return `record {${zipWith$1(this._components, n, (s, u) => s.valueToString(u)).join("; ")}}`;
  }
}
class VariantClass$1 extends ConstructType$1 {
  constructor(n = {}) {
    super(), this._fields = Object.entries(n).sort((o, s) => idlLabelToId$1(o[0]) - idlLabelToId$1(s[0]));
  }
  accept(n, o) {
    return n.visitVariant(this, this._fields, o);
  }
  covariant(n) {
    return typeof n == "object" && Object.entries(n).length === 1 && this._fields.every(([o, s]) => !n.hasOwnProperty(o) || s.covariant(n[o]));
  }
  encodeValue(n) {
    for (let o = 0; o < this._fields.length; o++) {
      const [s, u] = this._fields[o];
      if (n.hasOwnProperty(s)) {
        const d = lebEncode$1(o), g = u.encodeValue(n[s]);
        return buffer$1.Buffer.concat([d, g]);
      }
    }
    throw Error("Variant has no data: " + n);
  }
  _buildTypeTableImpl(n) {
    this._fields.forEach(([, d]) => {
      d.buildTypeTable(n);
    });
    const o = slebEncode$1(-21), s = lebEncode$1(this._fields.length), u = this._fields.map(([d, g]) => buffer$1.Buffer.concat([lebEncode$1(idlLabelToId$1(d)), g.encodeType(n)]));
    n.add(this, buffer$1.Buffer.concat([o, s, ...u]));
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof VariantClass$1))
      throw new Error("Not a variant type");
    const u = Number(lebDecode$1(n));
    if (u >= s._fields.length)
      throw Error("Invalid variant index: " + u);
    const [d, g] = s._fields[u];
    for (const [m, w] of this._fields)
      if (idlLabelToId$1(d) === idlLabelToId$1(m)) {
        const B = w.decodeValue(n, g);
        return { [m]: B };
      }
    throw new Error("Cannot find field hash " + d);
  }
  get name() {
    return `variant {${this._fields.map(([o, s]) => o + ":" + s.name).join("; ")}}`;
  }
  display() {
    return `variant {${this._fields.map(([o, s]) => o + (s.name === "null" ? "" : `:${s.display()}`)).join("; ")}}`;
  }
  valueToString(n) {
    for (const [o, s] of this._fields)
      if (n.hasOwnProperty(o)) {
        const u = s.valueToString(n[o]);
        return u === "null" ? `variant {${o}}` : `variant {${o}=${u}}`;
      }
    throw new Error("Variant has no data: " + n);
  }
}
class RecClass$1 extends ConstructType$1 {
  constructor() {
    super(...arguments), this._id = RecClass$1._counter++, this._type = void 0;
  }
  accept(n, o) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return n.visitRec(this, this._type, o);
  }
  fill(n) {
    this._type = n;
  }
  getType() {
    return this._type;
  }
  covariant(n) {
    return this._type ? this._type.covariant(n) : !1;
  }
  encodeValue(n) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.encodeValue(n);
  }
  _buildTypeTableImpl(n) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    n.add(this, buffer$1.Buffer.alloc(0)), this._type.buildTypeTable(n), n.merge(this, this._type.name);
  }
  decodeValue(n, o) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.decodeValue(n, o);
  }
  get name() {
    return `rec_${this._id}`;
  }
  display() {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return `\u03BC${this.name}.${this._type.name}`;
  }
  valueToString(n) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.valueToString(n);
  }
}
RecClass$1._counter = 0;
function decodePrincipalId$1(e) {
  if (safeRead$1(e, 1).toString("hex") !== "01")
    throw new Error("Cannot decode principal");
  const o = Number(lebDecode$1(e)), s = safeRead$1(e, o).toString("hex").toUpperCase();
  return Principal$2.fromHex(s);
}
class PrincipalClass$1 extends PrimitiveType$1 {
  accept(n, o) {
    return n.visitPrincipal(this, o);
  }
  covariant(n) {
    return n && n._isPrincipal;
  }
  encodeValue(n) {
    const o = n.toHex(), s = buffer$1.Buffer.from(o, "hex"), u = lebEncode$1(s.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), u, s]);
  }
  encodeType() {
    return slebEncode$1(-24);
  }
  decodeValue(n, o) {
    return this.checkType(o), decodePrincipalId$1(n);
  }
  get name() {
    return "principal";
  }
  valueToString(n) {
    return `${this.name} "${n.toText()}"`;
  }
}
class FuncClass$1 extends ConstructType$1 {
  constructor(n, o, s = []) {
    super(), this.argTypes = n, this.retTypes = o, this.annotations = s;
  }
  static argsToString(n, o) {
    if (n.length !== o.length)
      throw new Error("arity mismatch");
    return "(" + n.map((s, u) => s.valueToString(o[u])).join(", ") + ")";
  }
  accept(n, o) {
    return n.visitFunc(this, o);
  }
  covariant(n) {
    return Array.isArray(n) && n.length === 2 && n[0] && n[0]._isPrincipal && typeof n[1] == "string";
  }
  encodeValue(n) {
    const o = n[0].toHex(), s = buffer$1.Buffer.from(o, "hex"), u = lebEncode$1(s.length), d = buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), u, s]), g = buffer$1.Buffer.from(n[1], "utf8"), m = lebEncode$1(g.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), d, m, g]);
  }
  _buildTypeTableImpl(n) {
    this.argTypes.forEach((B) => B.buildTypeTable(n)), this.retTypes.forEach((B) => B.buildTypeTable(n));
    const o = slebEncode$1(-22), s = lebEncode$1(this.argTypes.length), u = buffer$1.Buffer.concat(this.argTypes.map((B) => B.encodeType(n))), d = lebEncode$1(this.retTypes.length), g = buffer$1.Buffer.concat(this.retTypes.map((B) => B.encodeType(n))), m = lebEncode$1(this.annotations.length), w = buffer$1.Buffer.concat(this.annotations.map((B) => this.encodeAnnotation(B)));
    n.add(this, buffer$1.Buffer.concat([o, s, u, d, g, m, w]));
  }
  decodeValue(n) {
    if (safeRead$1(n, 1).toString("hex") !== "01")
      throw new Error("Cannot decode function reference");
    const s = decodePrincipalId$1(n), u = Number(lebDecode$1(n)), d = safeRead$1(n, u);
    if (!isValidUTF8(d))
      throw new Error("Not valid UTF8 method name");
    const g = d.toString("utf8");
    return [s, g];
  }
  get name() {
    const n = this.argTypes.map((u) => u.name).join(", "), o = this.retTypes.map((u) => u.name).join(", "), s = " " + this.annotations.join(" ");
    return `(${n}) -> (${o})${s}`;
  }
  valueToString([n, o]) {
    return `func "${n.toText()}".${o}`;
  }
  display() {
    const n = this.argTypes.map((u) => u.display()).join(", "), o = this.retTypes.map((u) => u.display()).join(", "), s = " " + this.annotations.join(" ");
    return `(${n}) \u2192 (${o})${s}`;
  }
  encodeAnnotation(n) {
    if (n === "query")
      return buffer$1.Buffer.from([1]);
    if (n === "oneway")
      return buffer$1.Buffer.from([2]);
    throw new Error("Illeagal function annotation");
  }
}
class ServiceClass$1 extends ConstructType$1 {
  constructor(n) {
    super(), this._fields = Object.entries(n).sort((o, s) => idlLabelToId$1(o[0]) - idlLabelToId$1(s[0]));
  }
  accept(n, o) {
    return n.visitService(this, o);
  }
  covariant(n) {
    return n && n._isPrincipal;
  }
  encodeValue(n) {
    const o = n.toHex(), s = buffer$1.Buffer.from(o, "hex"), u = lebEncode$1(s.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), u, s]);
  }
  _buildTypeTableImpl(n) {
    this._fields.forEach(([d, g]) => g.buildTypeTable(n));
    const o = slebEncode$1(-23), s = lebEncode$1(this._fields.length), u = this._fields.map(([d, g]) => {
      const m = buffer$1.Buffer.from(d, "utf8"), w = lebEncode$1(m.length);
      return buffer$1.Buffer.concat([w, m, g.encodeType(n)]);
    });
    n.add(this, buffer$1.Buffer.concat([o, s, buffer$1.Buffer.concat(u)]));
  }
  decodeValue(n) {
    return decodePrincipalId$1(n);
  }
  get name() {
    return `service {${this._fields.map(([o, s]) => o + ":" + s.name).join("; ")}}`;
  }
  valueToString(n) {
    return `service "${n.toText()}"`;
  }
}
function toReadableString$1(e) {
  return JSON.stringify(e, (n, o) => typeof o == "bigint" ? `BigInt(${o})` : o);
}
function encode$3(e, n) {
  if (n.length < e.length)
    throw Error("Wrong number of message arguments");
  const o = new TypeTable$1();
  e.forEach((w) => w.buildTypeTable(o));
  const s = buffer$1.Buffer.from(magicNumber$1, "utf8"), u = o.encode(), d = lebEncode$1(n.length), g = buffer$1.Buffer.concat(e.map((w) => w.encodeType(o))), m = buffer$1.Buffer.concat(zipWith$1(e, n, (w, B) => {
    if (!w.covariant(B))
      throw new Error(`Invalid ${w.display()} argument: ${toReadableString$1(B)}`);
    return w.encodeValue(B);
  }));
  return buffer$1.Buffer.concat([s, u, d, g, m]);
}
function decode$4(e, n) {
  const o = new bufferPipe(n);
  if (n.byteLength < magicNumber$1.length)
    throw new Error("Message length smaller than magic number");
  const s = safeRead$1(o, magicNumber$1.length).toString();
  if (s !== magicNumber$1)
    throw new Error("Wrong magic number: " + s);
  function u(v) {
    const y = [], T = Number(lebDecode$1(v));
    for (let V = 0; V < T; V++) {
      const O = Number(slebDecode$1(v));
      switch (O) {
        case -18:
        case -19: {
          const H = Number(slebDecode$1(v));
          y.push([O, H]);
          break;
        }
        case -20:
        case -21: {
          const H = [];
          let q = Number(lebDecode$1(v)), $;
          for (; q--; ) {
            const re = Number(lebDecode$1(v));
            if (re >= Math.pow(2, 32))
              throw new Error("field id out of 32-bit range");
            if (typeof $ == "number" && $ >= re)
              throw new Error("field id collision or not sorted");
            $ = re;
            const ce = Number(slebDecode$1(v));
            H.push([re, ce]);
          }
          y.push([O, H]);
          break;
        }
        case -22: {
          for (let q = 0; q < 2; q++) {
            let $ = Number(lebDecode$1(v));
            for (; $--; )
              slebDecode$1(v);
          }
          const H = Number(lebDecode$1(v));
          safeRead$1(v, H), y.push([O, void 0]);
          break;
        }
        case -23: {
          let H = Number(lebDecode$1(v));
          for (; H--; ) {
            const q = Number(lebDecode$1(v));
            safeRead$1(v, q), slebDecode$1(v);
          }
          y.push([O, void 0]);
          break;
        }
        default:
          throw new Error("Illegal op_code: " + O);
      }
    }
    const M = [], D = Number(lebDecode$1(v));
    for (let V = 0; V < D; V++)
      M.push(Number(slebDecode$1(v)));
    return [y, M];
  }
  const [d, g] = u(o);
  if (g.length < e.length)
    throw new Error("Wrong number of return values");
  const m = d.map((v) => Rec$1());
  function w(v) {
    if (v < -24)
      throw new Error("future value not supported");
    if (v < 0)
      switch (v) {
        case -1:
          return Null$1;
        case -2:
          return Bool$1;
        case -3:
          return Nat$1;
        case -4:
          return Int$1;
        case -5:
          return Nat8$1;
        case -6:
          return Nat16$1;
        case -7:
          return Nat32$1;
        case -8:
          return Nat64$1;
        case -9:
          return Int8$1;
        case -10:
          return Int16$1;
        case -11:
          return Int32$1;
        case -12:
          return Int64$1;
        case -13:
          return Float32$1;
        case -14:
          return Float64$1;
        case -15:
          return Text$1;
        case -16:
          return Reserved$1;
        case -17:
          return Empty$1;
        case -24:
          return Principal$1;
        default:
          throw new Error("Illegal op_code: " + v);
      }
    if (v >= d.length)
      throw new Error("type index out of range");
    return m[v];
  }
  function B(v) {
    switch (v[0]) {
      case -19: {
        const y = w(v[1]);
        return Vec$1(y);
      }
      case -18: {
        const y = w(v[1]);
        return Opt$1(y);
      }
      case -20: {
        const y = {};
        for (const [D, V] of v[1]) {
          const O = `_${D}_`;
          y[O] = w(V);
        }
        const T = Record$1(y), M = T.tryAsTuple();
        return Array.isArray(M) ? Tuple$1(...M) : T;
      }
      case -21: {
        const y = {};
        for (const [T, M] of v[1]) {
          const D = `_${T}_`;
          y[D] = w(M);
        }
        return Variant$1(y);
      }
      case -22:
        return Func$1([], [], []);
      case -23:
        return Service$1({});
      default:
        throw new Error("Illegal op_code: " + v[0]);
    }
  }
  d.forEach((v, y) => {
    const T = B(v);
    m[y].fill(T);
  });
  const x = g.map((v) => w(v)), C = e.map((v, y) => v.decodeValue(o, x[y]));
  for (let v = e.length; v < x.length; v++)
    x[v].decodeValue(o, x[v]);
  if (o.buffer.length > 0)
    throw new Error("decode: Left-over bytes");
  return C;
}
const Empty$1 = new EmptyClass$1(), Reserved$1 = new ReservedClass$1(), Bool$1 = new BoolClass$1(), Null$1 = new NullClass$1(), Text$1 = new TextClass$1(), Int$1 = new IntClass$1(), Nat$1 = new NatClass$1(), Float32$1 = new FloatClass$1(32), Float64$1 = new FloatClass$1(64), Int8$1 = new FixedIntClass$1(8), Int16$1 = new FixedIntClass$1(16), Int32$1 = new FixedIntClass$1(32), Int64$1 = new FixedIntClass$1(64), Nat8$1 = new FixedNatClass$1(8), Nat16$1 = new FixedNatClass$1(16), Nat32$1 = new FixedNatClass$1(32), Nat64$1 = new FixedNatClass$1(64), Principal$1 = new PrincipalClass$1();
function Tuple$1(...e) {
  return new TupleClass$1(e);
}
function Vec$1(e) {
  return new VecClass$1(e);
}
function Opt$1(e) {
  return new OptClass$1(e);
}
function Record$1(e) {
  return new RecordClass$1(e);
}
function Variant$1(e) {
  return new VariantClass$1(e);
}
function Rec$1() {
  return new RecClass$1();
}
function Func$1(e, n, o = []) {
  return new FuncClass$1(e, n, o);
}
function Service$1(e) {
  return new ServiceClass$1(e);
}
const IDL$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Visitor: Visitor$1,
  Type: Type$1,
  PrimitiveType: PrimitiveType$1,
  ConstructType: ConstructType$1,
  EmptyClass: EmptyClass$1,
  BoolClass: BoolClass$1,
  NullClass: NullClass$1,
  ReservedClass: ReservedClass$1,
  TextClass: TextClass$1,
  IntClass: IntClass$1,
  NatClass: NatClass$1,
  FloatClass: FloatClass$1,
  FixedIntClass: FixedIntClass$1,
  FixedNatClass: FixedNatClass$1,
  VecClass: VecClass$1,
  OptClass: OptClass$1,
  RecordClass: RecordClass$1,
  TupleClass: TupleClass$1,
  VariantClass: VariantClass$1,
  RecClass: RecClass$1,
  PrincipalClass: PrincipalClass$1,
  FuncClass: FuncClass$1,
  ServiceClass: ServiceClass$1,
  encode: encode$3,
  decode: decode$4,
  Empty: Empty$1,
  Reserved: Reserved$1,
  Bool: Bool$1,
  Null: Null$1,
  Text: Text$1,
  Int: Int$1,
  Nat: Nat$1,
  Float32: Float32$1,
  Float64: Float64$1,
  Int8: Int8$1,
  Int16: Int16$1,
  Int32: Int32$1,
  Int64: Int64$1,
  Nat8: Nat8$1,
  Nat16: Nat16$1,
  Nat32: Nat32$1,
  Nat64: Nat64$1,
  Principal: Principal$1,
  Tuple: Tuple$1,
  Vec: Vec$1,
  Opt: Opt$1,
  Record: Record$1,
  Variant: Variant$1,
  Rec: Rec$1,
  Func: Func$1,
  Service: Service$1
}, Symbol.toStringTag, { value: "Module" }));
function toHex$1(e) {
  return blobToHex(e);
}
function hash$1(e) {
  const n = sha256$1.exports.sha256.create().update(e).arrayBuffer();
  return blobFromUint8Array(new Uint8Array(n));
}
function hashValue$1(e) {
  if (e instanceof src$1.Tagged)
    return hashValue$1(e.value);
  if (typeof e == "string")
    return hashString$1(e);
  if (typeof e == "number")
    return hash$1(lebEncode$1(e));
  if (buffer$1.Buffer.isBuffer(e))
    return hash$1(blobFromUint8Array(new Uint8Array(e)));
  if (e instanceof Uint8Array || e instanceof ArrayBuffer)
    return hash$1(blobFromUint8Array(new Uint8Array(e)));
  if (Array.isArray(e)) {
    const n = e.map(hashValue$1);
    return hash$1(buffer$1.Buffer.concat(n));
  } else {
    if (e instanceof Principal$2)
      return hash$1(blobFromUint8Array(e.toUint8Array()));
    if (typeof e == "object" && e !== null && typeof e.toHash == "function")
      return hashValue$1(e.toHash());
    if (typeof e == "bigint")
      return hash$1(lebEncode$1(e));
  }
  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${e}`), {
    value: e
  });
}
const hashString$1 = (e) => {
  const o = new TextEncoder().encode(e);
  return hash$1(buffer$1.Buffer.from(o));
};
function concat$2(e) {
  return buffer$1.Buffer.concat(e);
}
function requestIdOf$1(e) {
  const s = Object.entries(e).filter(([, g]) => g !== void 0).map(([g, m]) => {
    const w = hashString$1(g), B = hashValue$1(m);
    return [w, B];
  }).sort(([g], [m]) => buffer$1.Buffer.compare(buffer$1.Buffer.from(g), buffer$1.Buffer.from(m))), u = concat$2(s.map(concat$2));
  return hash$1(u);
}
var __rest = globalThis && globalThis.__rest || function(e, n) {
  var o = {};
  for (var s in e)
    Object.prototype.hasOwnProperty.call(e, s) && n.indexOf(s) < 0 && (o[s] = e[s]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var u = 0, s = Object.getOwnPropertySymbols(e); u < s.length; u++)
      n.indexOf(s[u]) < 0 && Object.prototype.propertyIsEnumerable.call(e, s[u]) && (o[s[u]] = e[s[u]]);
  return o;
};
const domainSeparator = buffer$1.Buffer.from(new TextEncoder().encode(`
ic-request`));
class SignIdentity {
  getPrincipal() {
    return this._principal || (this._principal = Principal$2.selfAuthenticating(this.getPublicKey().toDer())), this._principal;
  }
  async transformRequest(n) {
    const { body: o } = n, s = __rest(n, ["body"]), u = await requestIdOf$1(o);
    return Object.assign(Object.assign({}, s), { body: {
      content: o,
      sender_pubkey: this.getPublicKey().toDer(),
      sender_sig: await this.sign(buffer$1.Buffer.concat([domainSeparator, u]))
    } });
  }
}
class AnonymousIdentity$1 {
  getPrincipal() {
    return Principal$2.anonymous();
  }
  async transformRequest(n) {
    return Object.assign(Object.assign({}, n), { body: { content: n.body } });
  }
}
function createIdentityDescriptor(e) {
  return "getPublicKey" in e ? { type: "PublicKeyIdentity", publicKey: e.getPublicKey().toDer().toString("hex") } : { type: "AnonymousIdentity" };
}
function isIdentityDescriptor(e) {
  var n, o;
  switch ((n = e) === null || n === void 0 ? void 0 : n.type) {
    case "AnonymousIdentity":
      return !0;
    case "PublicKeyIdentity":
      return typeof ((o = e) === null || o === void 0 ? void 0 : o.publicKey) == "string";
  }
  return !1;
}
var src = {}, serializer$2 = {}, value = {};
Object.defineProperty(value, "__esModule", { value: !0 });
const MAX_U64_NUMBER = 9007199254740992;
function _concat(e, ...n) {
  const o = new Uint8Array(e.byteLength + n.reduce((u, d) => u + d.byteLength, 0));
  o.set(new Uint8Array(e), 0);
  let s = e.byteLength;
  for (const u of n)
    o.set(new Uint8Array(u), s), s += u.byteLength;
  return o.buffer;
}
function _serializeValue(e, n, o) {
  o = o.replace(/[^0-9a-fA-F]/g, "");
  const s = 2 ** (n - 24);
  o = o.slice(-s * 2).padStart(s * 2, "0");
  const u = [(e << 5) + n].concat(o.match(/../g).map((d) => parseInt(d, 16)));
  return new Uint8Array(u).buffer;
}
function _serializeNumber(e, n) {
  if (n < 24)
    return new Uint8Array([(e << 5) + n]).buffer;
  {
    const o = n <= 255 ? 24 : n <= 65535 ? 25 : n <= 4294967295 ? 26 : 27;
    return _serializeValue(e, o, n.toString(16));
  }
}
function _serializeString(e) {
  const n = [];
  for (let o = 0; o < e.length; o++) {
    let s = e.charCodeAt(o);
    s < 128 ? n.push(s) : s < 2048 ? n.push(192 | s >> 6, 128 | s & 63) : s < 55296 || s >= 57344 ? n.push(224 | s >> 12, 128 | s >> 6 & 63, 128 | s & 63) : (o++, s = (s & 1023) << 10 | e.charCodeAt(o) & 1023, n.push(240 | s >> 18, 128 | s >> 12 & 63, 128 | s >> 6 & 63, 128 | s & 63));
  }
  return _concat(new Uint8Array(_serializeNumber(3, e.length)), new Uint8Array(n));
}
function tagged(e, n) {
  if (e == 14277111)
    return _concat(new Uint8Array([217, 217, 247]), n);
  if (e < 24)
    return _concat(new Uint8Array([(6 << 5) + e]), n);
  {
    const o = e <= 255 ? 24 : e <= 65535 ? 25 : e <= 4294967295 ? 26 : 27, s = 2 ** (o - 24), u = e.toString(16).slice(-s * 2).padStart(s * 2, "0"), d = [(6 << 5) + o].concat(u.match(/../g).map((g) => parseInt(g, 16)));
    return new Uint8Array(d).buffer;
  }
}
value.tagged = tagged;
function raw(e) {
  return new Uint8Array(e).buffer;
}
value.raw = raw;
function uSmall(e) {
  if (isNaN(e))
    throw new RangeError("Invalid number.");
  e = Math.min(Math.max(0, e), 23);
  const n = [(0 << 5) + e];
  return new Uint8Array(n).buffer;
}
value.uSmall = uSmall;
function u8(e, n) {
  if (e = parseInt("" + e, n), isNaN(e))
    throw new RangeError("Invalid number.");
  return e = Math.min(Math.max(0, e), 255), e = e.toString(16), _serializeValue(0, 24, e);
}
value.u8 = u8;
function u16(e, n) {
  if (e = parseInt("" + e, n), isNaN(e))
    throw new RangeError("Invalid number.");
  return e = Math.min(Math.max(0, e), 65535), e = e.toString(16), _serializeValue(0, 25, e);
}
value.u16 = u16;
function u32(e, n) {
  if (e = parseInt("" + e, n), isNaN(e))
    throw new RangeError("Invalid number.");
  return e = Math.min(Math.max(0, e), 4294967295), e = e.toString(16), _serializeValue(0, 26, e);
}
value.u32 = u32;
function u64(e, n) {
  if (typeof e == "string" && n == 16) {
    if (e.match(/[^0-9a-fA-F]/))
      throw new RangeError("Invalid number.");
    return _serializeValue(0, 27, e);
  }
  if (e = parseInt("" + e, n), isNaN(e))
    throw new RangeError("Invalid number.");
  return e = Math.min(Math.max(0, e), MAX_U64_NUMBER), e = e.toString(16), _serializeValue(0, 27, e);
}
value.u64 = u64;
function iSmall(e) {
  if (isNaN(e))
    throw new RangeError("Invalid number.");
  if (e === 0)
    return uSmall(0);
  e = Math.min(Math.max(0, -e), 24) - 1;
  const n = [(1 << 5) + e];
  return new Uint8Array(n).buffer;
}
value.iSmall = iSmall;
function i8(e, n) {
  if (e = parseInt("" + e, n), isNaN(e))
    throw new RangeError("Invalid number.");
  return e = Math.min(Math.max(0, -e - 1), 255), e = e.toString(16), _serializeValue(1, 24, e);
}
value.i8 = i8;
function i16(e, n) {
  if (e = parseInt("" + e, n), isNaN(e))
    throw new RangeError("Invalid number.");
  return e = Math.min(Math.max(0, -e - 1), 65535), e = e.toString(16), _serializeValue(1, 25, e);
}
value.i16 = i16;
function i32(e, n) {
  if (e = parseInt("" + e, n), isNaN(e))
    throw new RangeError("Invalid number.");
  return e = Math.min(Math.max(0, -e - 1), 4294967295), e = e.toString(16), _serializeValue(1, 26, e);
}
value.i32 = i32;
function i64(e, n) {
  if (typeof e == "string" && n == 16) {
    if (e.startsWith("-") ? e = e.slice(1) : e = "0", e.match(/[^0-9a-fA-F]/) || e.length > 16)
      throw new RangeError("Invalid number.");
    let o = !1, s = e.split("").reduceRight((u, d) => {
      if (o)
        return d + u;
      let g = parseInt(d, 16) - 1;
      return g >= 0 ? (o = !0, g.toString(16) + u) : "f" + u;
    }, "");
    return o ? _serializeValue(1, 27, s) : u64(0);
  }
  if (e = parseInt("" + e, n), isNaN(e))
    throw new RangeError("Invalid number.");
  return e = Math.min(Math.max(0, -e - 1), 9007199254740992), e = e.toString(16), _serializeValue(1, 27, e);
}
value.i64 = i64;
function number$1(e) {
  return e >= 0 ? e < 24 ? uSmall(e) : e <= 255 ? u8(e) : e <= 65535 ? u16(e) : e <= 4294967295 ? u32(e) : u64(e) : e >= -24 ? iSmall(e) : e >= -255 ? i8(e) : e >= -65535 ? i16(e) : e >= -4294967295 ? i32(e) : i64(e);
}
value.number = number$1;
function bytes(e) {
  return _concat(_serializeNumber(2, e.byteLength), e);
}
value.bytes = bytes;
function string(e) {
  return _serializeString(e);
}
value.string = string;
function array(e) {
  return _concat(_serializeNumber(4, e.length), ...e);
}
value.array = array;
function map(e, n = !1) {
  e instanceof Map || (e = new Map(Object.entries(e)));
  let o = Array.from(e.entries());
  return n && (o = o.sort(([s], [u]) => s.localeCompare(u))), _concat(_serializeNumber(5, e.size), ...o.map(([s, u]) => _concat(_serializeString(s), u)));
}
value.map = map;
function singleFloat(e) {
  const n = new Float32Array([e]);
  return _concat(new Uint8Array([(7 << 5) + 26]), new Uint8Array(n.buffer));
}
value.singleFloat = singleFloat;
function doubleFloat(e) {
  const n = new Float64Array([e]);
  return _concat(new Uint8Array([(7 << 5) + 27]), new Uint8Array(n.buffer));
}
value.doubleFloat = doubleFloat;
function bool(e) {
  return e ? true_() : false_();
}
value.bool = bool;
function true_() {
  return raw(new Uint8Array([(7 << 5) + 21]));
}
value.true_ = true_;
function false_() {
  return raw(new Uint8Array([(7 << 5) + 20]));
}
value.false_ = false_;
function null_() {
  return raw(new Uint8Array([(7 << 5) + 22]));
}
value.null_ = null_;
function undefined_() {
  return raw(new Uint8Array([(7 << 5) + 23]));
}
value.undefined_ = undefined_;
var __importStar = commonjsGlobal && commonjsGlobal.__importStar || function(e) {
  if (e && e.__esModule)
    return e;
  var n = {};
  if (e != null)
    for (var o in e)
      Object.hasOwnProperty.call(e, o) && (n[o] = e[o]);
  return n.default = e, n;
};
Object.defineProperty(serializer$2, "__esModule", { value: !0 });
const cbor$1 = __importStar(value), BufferClasses = [
  ArrayBuffer,
  Uint8Array,
  Uint16Array,
  Uint32Array,
  Int8Array,
  Int16Array,
  Int32Array,
  Float32Array,
  Float64Array
];
class JsonDefaultCborEncoder {
  constructor(n, o = !1) {
    this._serializer = n, this._stable = o, this.name = "jsonDefault", this.priority = -100;
  }
  match(n) {
    return ["undefined", "boolean", "number", "string", "object"].indexOf(typeof n) != -1;
  }
  encode(n) {
    switch (typeof n) {
      case "undefined":
        return cbor$1.undefined_();
      case "boolean":
        return cbor$1.bool(n);
      case "number":
        return Math.floor(n) === n ? cbor$1.number(n) : cbor$1.doubleFloat(n);
      case "string":
        return cbor$1.string(n);
      case "object":
        if (n === null)
          return cbor$1.null_();
        if (Array.isArray(n))
          return cbor$1.array(n.map((o) => this._serializer.serializeValue(o)));
        if (BufferClasses.find((o) => n instanceof o))
          return cbor$1.bytes(n.buffer);
        if (Object.getOwnPropertyNames(n).indexOf("toJSON") !== -1)
          return this.encode(n.toJSON());
        if (n instanceof Map) {
          const o = /* @__PURE__ */ new Map();
          for (const [s, u] of n.entries())
            o.set(s, this._serializer.serializeValue(u));
          return cbor$1.map(o, this._stable);
        } else {
          const o = /* @__PURE__ */ new Map();
          for (const [s, u] of Object.entries(n))
            o.set(s, this._serializer.serializeValue(u));
          return cbor$1.map(o, this._stable);
        }
      default:
        throw new Error("Invalid value.");
    }
  }
}
serializer$2.JsonDefaultCborEncoder = JsonDefaultCborEncoder;
class ToCborEncoder {
  constructor() {
    this.name = "cborEncoder", this.priority = -90;
  }
  match(n) {
    return typeof n == "object" && typeof n.toCBOR == "function";
  }
  encode(n) {
    return n.toCBOR();
  }
}
serializer$2.ToCborEncoder = ToCborEncoder;
class CborSerializer {
  constructor() {
    this._encoders = /* @__PURE__ */ new Set();
  }
  static withDefaultEncoders(n = !1) {
    const o = new this();
    return o.addEncoder(new JsonDefaultCborEncoder(o, n)), o.addEncoder(new ToCborEncoder()), o;
  }
  removeEncoder(n) {
    for (const o of this._encoders.values())
      o.name == n && this._encoders.delete(o);
  }
  addEncoder(n) {
    this._encoders.add(n);
  }
  getEncoderFor(n) {
    let o = null;
    for (const s of this._encoders)
      (!o || s.priority > o.priority) && s.match(n) && (o = s);
    if (o === null)
      throw new Error("Could not find an encoder for value.");
    return o;
  }
  serializeValue(n) {
    return this.getEncoderFor(n).encode(n);
  }
  serialize(n) {
    return this.serializeValue(n);
  }
}
serializer$2.CborSerializer = CborSerializer;
class SelfDescribeCborSerializer extends CborSerializer {
  serialize(n) {
    return cbor$1.raw(new Uint8Array([
      ...new Uint8Array([217, 217, 247]),
      ...new Uint8Array(super.serializeValue(n))
    ]));
  }
}
serializer$2.SelfDescribeCborSerializer = SelfDescribeCborSerializer;
(function(e) {
  function n(u) {
    for (var d in u)
      e.hasOwnProperty(d) || (e[d] = u[d]);
  }
  var o = commonjsGlobal && commonjsGlobal.__importStar || function(u) {
    if (u && u.__esModule)
      return u;
    var d = {};
    if (u != null)
      for (var g in u)
        Object.hasOwnProperty.call(u, g) && (d[g] = u[g]);
    return d.default = u, d;
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), n(serializer$2);
  const s = o(value);
  e.value = s;
})(src);
class PrincipalEncoder$1 {
  get name() {
    return "Principal";
  }
  get priority() {
    return 0;
  }
  match(n) {
    return n && n._isPrincipal === !0;
  }
  encode(n) {
    return src.value.bytes(n.toUint8Array().buffer);
  }
}
class BufferEncoder$1 {
  get name() {
    return "Buffer";
  }
  get priority() {
    return 1;
  }
  match(n) {
    return buffer$1.Buffer.isBuffer(n);
  }
  encode(n) {
    return src.value.bytes(new Uint8Array(n));
  }
}
class BigIntEncoder$1 {
  get name() {
    return "BigInt";
  }
  get priority() {
    return 1;
  }
  match(n) {
    return typeof n == "bigint";
  }
  encode(n) {
    return n > BigInt(0) ? src.value.tagged(2, src.value.bytes(blobFromHex(n.toString(16)))) : src.value.tagged(3, src.value.bytes(blobFromHex((BigInt("-1") * n).toString(16))));
  }
}
const serializer$1 = src.SelfDescribeCborSerializer.withDefaultEncoders(!0);
serializer$1.addEncoder(new PrincipalEncoder$1());
serializer$1.addEncoder(new BufferEncoder$1());
serializer$1.addEncoder(new BigIntEncoder$1());
var CborTag$1;
(function(e) {
  e[e.Uint64LittleEndian = 71] = "Uint64LittleEndian", e[e.Semantic = 55799] = "Semantic";
})(CborTag$1 || (CborTag$1 = {}));
const encode$2 = (e) => buffer$1.Buffer.from(serializer$1.serialize(e));
function decodePositiveBigInt$1(e) {
  const n = e.byteLength;
  let o = BigInt(0);
  for (let s = 0; s < n; s++)
    o = o * BigInt(256) + BigInt(e[s]);
  return o;
}
function decode$3(e) {
  return new src$1.Decoder({
    size: e.byteLength,
    tags: {
      2: (s) => decodePositiveBigInt$1(s),
      3: (s) => -decodePositiveBigInt$1(s),
      [CborTag$1.Semantic]: (s) => s
    }
  }).decodeFirst(e);
}
const cbor = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get CborTag() {
    return CborTag$1;
  },
  encode: encode$2,
  decode: decode$3
}, Symbol.toStringTag, { value: "Module" })), NANOSECONDS_PER_MILLISECONDS$1 = BigInt(1e6), REPLICA_PERMITTED_DRIFT_MILLISECONDS$1 = BigInt(60 * 1e3);
class Expiry$1 {
  constructor(n) {
    this._value = (BigInt(Date.now()) + BigInt(n) - REPLICA_PERMITTED_DRIFT_MILLISECONDS$1) * NANOSECONDS_PER_MILLISECONDS$1;
  }
  toCBOR() {
    return src.value.u64(this._value.toString(16), 16);
  }
  toHash() {
    return lebEncode$1(this._value);
  }
}
function makeNonceTransform$1(e = makeNonce$1) {
  return async (n) => {
    n.endpoint === "call" && (n.body.nonce = e());
  };
}
function makeExpiryTransform(e) {
  return async (n) => {
    n.body.ingress_expiry = new Expiry$1(e);
  };
}
var SubmitRequestType$1;
(function(e) {
  e.Call = "call";
})(SubmitRequestType$1 || (SubmitRequestType$1 = {}));
var RequestStatusResponseStatus$1;
(function(e) {
  e.Received = "received", e.Processing = "processing", e.Replied = "replied", e.Rejected = "rejected", e.Unknown = "unknown", e.Done = "done";
})(RequestStatusResponseStatus$1 || (RequestStatusResponseStatus$1 = {}));
const DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1 = 5 * 60 * 1e3, IC_ROOT_KEY$1 = "308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d9685f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484b01291091c5f87b98883463f98091a0baaae";
function getDefaultFetch$1() {
  const e = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.fetch.bind(self) : global.fetch.bind(global) : window.fetch.bind(window);
  if (!e)
    throw new Error("Could not find default `fetch` implementation.");
  return e;
}
class HttpAgent$1 {
  constructor(n = {}) {
    if (this._pipeline = [], this._rootKeyFetched = !1, this.rootKey = blobFromHex(IC_ROOT_KEY$1), n.source) {
      if (!(n.source instanceof HttpAgent$1))
        throw new Error("An Agent's source can only be another HttpAgent");
      this._pipeline = [...n.source._pipeline], this._identity = n.source._identity, this._fetch = n.source._fetch, this._host = n.source._host, this._credentials = n.source._credentials;
    } else
      this._fetch = n.fetch || getDefaultFetch$1() || fetch.bind(global);
    if (n.host !== void 0)
      !n.host.match(/^[a-z]+:/) && typeof window < "u" ? this._host = new URL(window.location.protocol + "//" + n.host) : this._host = new URL(n.host);
    else if (n.source !== void 0)
      this._host = n.source._host;
    else {
      const o = typeof window < "u" ? window.location : void 0;
      if (!o)
        throw new Error("Must specify a host to connect to.");
      this._host = new URL(o + "");
    }
    if (n.credentials) {
      const { name: o, password: s } = n.credentials;
      this._credentials = `${o}${s ? ":" + s : ""}`;
    }
    this._identity = Promise.resolve(n.identity || new AnonymousIdentity$1());
  }
  addTransform(n, o = n.priority || 0) {
    const s = this._pipeline.findIndex((u) => (u.priority || 0) < o);
    this._pipeline.splice(s >= 0 ? s : this._pipeline.length, 0, Object.assign(n, { priority: o }));
  }
  async getPrincipal() {
    return (await this._identity).getPrincipal();
  }
  async call(n, o, s) {
    const u = await (s !== void 0 ? await s : await this._identity), d = Principal$2.from(n), g = o.effectiveCanisterId ? Principal$2.from(o.effectiveCanisterId) : d, m = u.getPrincipal() || Principal$2.anonymous(), w = {
      request_type: SubmitRequestType$1.Call,
      canister_id: d,
      method_name: o.methodName,
      arg: o.arg,
      sender: m,
      ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
    };
    let B = await this._transform({
      request: {
        body: null,
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "call",
      body: w
    });
    B = await u.transformRequest(B);
    const x = encode$2(B.body), [C, v] = await Promise.all([
      this._fetch("" + new URL(`/api/v2/canister/${g.toText()}/call`, this._host), Object.assign(Object.assign({}, B.request), { body: x })),
      requestIdOf$1(w)
    ]);
    if (!C.ok)
      throw new Error(`Server returned an error:
  Code: ${C.status} (${C.statusText})
  Body: ${await C.text()}
`);
    return {
      requestId: v,
      response: {
        ok: C.ok,
        status: C.status,
        statusText: C.statusText
      }
    };
  }
  async query(n, o, s) {
    const u = await (s !== void 0 ? await s : await this._identity), d = typeof n == "string" ? Principal$2.fromText(n) : n, g = (u == null ? void 0 : u.getPrincipal()) || Principal$2.anonymous(), m = {
      request_type: "query",
      canister_id: d,
      method_name: o.methodName,
      arg: o.arg,
      sender: g,
      ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
    };
    let w = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read",
      body: m
    });
    w = await u.transformRequest(w);
    const B = encode$2(w.body), x = await this._fetch("" + new URL(`/api/v2/canister/${d.toText()}/query`, this._host), Object.assign(Object.assign({}, w.request), { body: B }));
    if (!x.ok)
      throw new Error(`Server returned an error:
  Code: ${x.status} (${x.statusText})
  Body: ${await x.text()}
`);
    return decode$3(buffer$1.Buffer.from(await x.arrayBuffer()));
  }
  async readState(n, o, s) {
    const u = typeof n == "string" ? Principal$2.fromText(n) : n, d = await (s !== void 0 ? await s : await this._identity), g = (d == null ? void 0 : d.getPrincipal()) || Principal$2.anonymous();
    let m = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read_state",
      body: {
        request_type: "read_state",
        paths: o.paths,
        sender: g,
        ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
      }
    });
    m = await d.transformRequest(m);
    const w = encode$2(m.body), B = await this._fetch("" + new URL(`/api/v2/canister/${u}/read_state`, this._host), Object.assign(Object.assign({}, m.request), { body: w }));
    if (!B.ok)
      throw new Error(`Server returned an error:
  Code: ${B.status} (${B.statusText})
  Body: ${await B.text()}
`);
    return decode$3(buffer$1.Buffer.from(await B.arrayBuffer()));
  }
  async status() {
    const n = this._credentials ? {
      Authorization: "Basic " + btoa(this._credentials)
    } : {}, o = await this._fetch("" + new URL("/api/v2/status", this._host), { headers: n });
    if (!o.ok)
      throw new Error(`Server returned an error:
  Code: ${o.status} (${o.statusText})
  Body: ${await o.text()}
`);
    const s = await o.arrayBuffer();
    return decode$3(new Uint8Array(s));
  }
  async fetchRootKey() {
    return this._rootKeyFetched || (this.rootKey = blobFromUint8Array((await this.status()).root_key), this._rootKeyFetched = !0), this.rootKey;
  }
  _transform(n) {
    let o = Promise.resolve(n);
    for (const s of this._pipeline)
      o = o.then((u) => s(u).then((d) => d || u));
    return o;
  }
}
var ProxyMessageKind$1;
(function(e) {
  e.Error = "err", e.GetPrincipal = "gp", e.GetPrincipalResponse = "gpr", e.Query = "q", e.QueryResponse = "qr", e.Call = "c", e.CallResponse = "cr", e.ReadState = "rs", e.ReadStateResponse = "rsr", e.Status = "s", e.StatusResponse = "sr";
})(ProxyMessageKind$1 || (ProxyMessageKind$1 = {}));
class ProxyStubAgent {
  constructor(n, o) {
    this._frontend = n, this._agent = o;
  }
  onmessage(n) {
    switch (n.type) {
      case ProxyMessageKind$1.GetPrincipal:
        this._agent.getPrincipal().then((o) => {
          this._frontend({
            id: n.id,
            type: ProxyMessageKind$1.GetPrincipalResponse,
            response: o.toText()
          });
        });
        break;
      case ProxyMessageKind$1.Query:
        this._agent.query(...n.args).then((o) => {
          this._frontend({
            id: n.id,
            type: ProxyMessageKind$1.QueryResponse,
            response: o
          });
        });
        break;
      case ProxyMessageKind$1.Call:
        this._agent.call(...n.args).then((o) => {
          this._frontend({
            id: n.id,
            type: ProxyMessageKind$1.CallResponse,
            response: o
          });
        });
        break;
      case ProxyMessageKind$1.ReadState:
        this._agent.readState(...n.args).then((o) => {
          this._frontend({
            id: n.id,
            type: ProxyMessageKind$1.ReadStateResponse,
            response: o
          });
        });
        break;
      case ProxyMessageKind$1.Status:
        this._agent.status().then((o) => {
          this._frontend({
            id: n.id,
            type: ProxyMessageKind$1.StatusResponse,
            response: o
          });
        });
        break;
      default:
        throw new Error(`Invalid message received: ${JSON.stringify(n)}`);
    }
  }
}
class ProxyAgent {
  constructor(n) {
    this._backend = n, this._nextId = 0, this._pendingCalls = /* @__PURE__ */ new Map(), this.rootKey = null;
  }
  onmessage(n) {
    const o = n.id, s = this._pendingCalls.get(o);
    if (!s)
      throw new Error("A proxy get the same message twice...");
    this._pendingCalls.delete(o);
    const [u, d] = s;
    switch (n.type) {
      case ProxyMessageKind$1.Error:
        return d(n.error);
      case ProxyMessageKind$1.GetPrincipalResponse:
      case ProxyMessageKind$1.CallResponse:
      case ProxyMessageKind$1.QueryResponse:
      case ProxyMessageKind$1.ReadStateResponse:
      case ProxyMessageKind$1.StatusResponse:
        return u(n.response);
      default:
        throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(n)}`);
    }
  }
  async getPrincipal() {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.GetPrincipal
    }).then((n) => {
      if (typeof n != "string")
        throw new Error("Invalid principal received.");
      return Principal$2.fromText(n);
    });
  }
  readState(n, o) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.ReadState,
      args: [n.toString(), o]
    });
  }
  call(n, o) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Call,
      args: [n.toString(), o]
    });
  }
  status() {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Status
    });
  }
  query(n, o) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Query,
      args: [n.toString(), o]
    });
  }
  async _sendAndWait(n) {
    return new Promise((o, s) => {
      this._pendingCalls.set(n.id, [o, s]), this._backend(n);
    });
  }
  async fetchRootKey() {
    const n = (await this.status()).root_key;
    return this.rootKey = n, n;
  }
}
function getDefaultAgent$1() {
  const e = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.ic.agent : global.ic.agent : window.ic.agent;
  if (!e)
    throw new Error("No Agent could be found.");
  return e;
}
const managementCanisterIdl$1 = ({ IDL: e }) => {
  const n = e.Principal, o = e.Vec(e.Nat8), s = e.Record({
    compute_allocation: e.Opt(e.Nat),
    memory_allocation: e.Opt(e.Nat)
  });
  return e.Service({
    provisional_create_canister_with_cycles: e.Func([e.Record({ amount: e.Opt(e.Nat), settings: e.Opt(s) })], [e.Record({ canister_id: n })], []),
    create_canister: e.Func([], [e.Record({ canister_id: n })], []),
    install_code: e.Func([
      e.Record({
        mode: e.Variant({ install: e.Null, reinstall: e.Null, upgrade: e.Null }),
        canister_id: n,
        wasm_module: o,
        arg: e.Vec(e.Nat8)
      })
    ], [], []),
    set_controller: e.Func([e.Record({ canister_id: n, new_controller: e.Principal })], [], [])
  });
};
function getManagementCanister$1(e) {
  function n(o, s, u) {
    const d = s[0];
    let g = Principal$2.fromHex("");
    return d && typeof d == "object" && d.canister_id && (g = Principal$2.from(d.canister_id)), { effectiveCanisterId: g };
  }
  return Actor$1.createActor(managementCanisterIdl$1, Object.assign(Object.assign(Object.assign({}, e), { canisterId: Principal$2.fromHex("") }), {
    callTransform: n,
    queryTransform: n
  }));
}
class AgentError$1 extends Error {
}
var decode$2;
(function() {
  for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = new Uint8Array(256), o = 0; o < e.length; o++)
    n[e.charCodeAt(o)] = o;
  decode$2 = function(s) {
    var u = s.length * 0.75, d = s.length, g, m = 0, w, B, x, C;
    s[s.length - 1] === "=" && (u--, s[s.length - 2] === "=" && u--);
    var v = new ArrayBuffer(u), y = new Uint8Array(v);
    for (g = 0; g < d; g += 4)
      w = n[s.charCodeAt(g)], B = n[s.charCodeAt(g + 1)], x = n[s.charCodeAt(g + 2)], C = n[s.charCodeAt(g + 3)], y[m++] = w << 2 | B >> 4, y[m++] = (B & 15) << 4 | x >> 2, y[m++] = (x & 3) << 6 | C & 63;
    return v;
  };
})();
let wasm$1;
const wasmBytesBase64$1 = `
    AGFzbQEAAAABXg9gAn9/AGABfwBgA39/fwBgAn9/AX9gAX8Bf2ADf39/AX9gBH9/f38AYAV/f39/fwBgBn9/f39/fwF/
    YAAAYAZ/f39/f38AYAV/fn5+fgBgAAF/YAF/AX5gAn9/AX4DvAG6AQgEAAEAAAABAgEDAAAMAAACAQEKAQAHBgEAAQEA
    AgcCAgABAgAGAAgOBAEBBAAAAQALAQkAAwMAAQQBAAICAAIBAQEBAQEGAQACAQEEAAECAQEABQMBAQMEAwQCAwAAAAEA
    AAAAAAEFAQEAAAACAQIAAQMAAQAGBAACAgMEAAAAAAAGAAQABAQEBAAAAwIAAgACAAEBAAAAAQEBAAEAAAAAAgAAAQAB
    AQEBAQEBAQEBAQIBAAAAAQ0AAQQFAXABBQUFAwEAEQYJAX8BQYCAwAALBzYEBm1lbW9yeQIACGJsc19pbml0AA0KYmxz
    X3ZlcmlmeQAnEV9fd2JpbmRnZW5fbWFsbG9jAHwJDQEAQQELBLgBCrkBtwEKiO8CugGXVQIQfwV+IwBB4OEAayIGJABB
    KxABIgkEQCAJQfSgwABBKxBnIQwDQCAHQStHBEAgByAMaiIJQV9BfyAJLQAAIglBn39qQf8BcUEaSRsgCXE6AAAgB0EB
    aiEHDAELC0EAIQcgBkGoA2pBOBByGiAGQQE2AuADIAZB6ANqQTgQciEPIAZBoARqQQE2AgAgBkGoBmpBoKfAABBfIAZB
    qAZqECkhCSAGQbgVakGAAhByGiAGQdjbAGpBgAEQchogBkGbI2pBgQIQciENIAZBsAxqQcAAEHIaIAZByM8AakHAABBy
    GiAGQdDVAGpBwAAQchogBkEAOgCaIyAGIAlB/wBqIhBBA3ZBAWoiCkEBdCILOgCZIyAGIApBB3Y6AJgjIAtBf2pBBXYi
    CEEBaiERA0AgB0ErRwRAIAcgDWogByAMai0AADoAACAHQQFqIQcMAQsLIAZBKzoAxiMgBkEgaiAGQZgjakEvQdinwAAQ
    ggEgBkGwDGpBwAAgAiADIAYoAiAgBigCJBATQQAhDUEAIAtrIRIgBkGZI2ohE0EBIQNBACEJA0ACQCANIAMgEUtyRQRA
    IAMgCEshDSADIAMgCE1qIQJBACEHA0AgB0EgRgRAIAYgAzoAmCNBACEHA0AgB0ErRwRAIAcgE2ogByAMai0AADoAACAH
    QQFqIQcMAQsLIAZBKzoAxCMgBkEYaiAGQZgjakEtQeinwAAQggFBACEHIAZByM8AakEAIAZB0NUAakEgIAYoAhggBigC
    HBATIAkgEmohAyAJIAlBgAIgCUGAAksbIg5rIRQgBkG4FWogCWohFQJAA0AgB0EgRg0FIAcgFGpFDQEgByAVaiAGQcjP
    AGogB2otAAA6AAAgAyAHQQFqIgdqDQALIAIhAyALIQkMBQsgDkGAAkH4p8AAEDwABSAGQcjPAGogB2oiDiAOLQAAIAZB
    sAxqIAdqLQAAcyIOOgAAIAZB0NUAaiAHaiAOOgAAIAdBAWohBwwBCwALAAsgEEGACEkhDUEAIQNBACEJA0ACQCAJQQJH
    BEAgCUEBaiELIAZBuBVqIANqIQJBACEHAkADQCAHIApGBEAgDQRAIAZByM8AakHwABByGiAGQdjbAGohCCAKIQcDQCAH
    BEAgBkHIzwBqQQgQLiAGIAYpA8hPIAgxAAB8NwPITyAHQX9qIQcgCEEBaiEIDAELCyAGQcjPAGoQRSAGQdDVAGogBkGo
    BmoQMCAGQZgjakHwABByGiAGQcjPAGogBkHQ1QBqEDZBAEgNBUEAIQIDQCAGQdDVAGpBARAuIAJBAWohAiAGQcjPAGog
    BkHQ1QBqEDZBf0oNAAsDQCACQQFIDQZBACEHA0AgB0HoAEYEQCAGIAYpA7hWQgGHNwO4VkEAIQcDQCAHQfAARwRAIAZB
    mCNqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQcMAQsLIAZBmCNqIAZB0NUAahBkIAZBmCNqEEUgBikDgCRCP4chF0EA
    IQcDQCAHQfAARwRAIAZByM8AaiAHaiIIIAZBmCNqIAdqKQMAIhYgCCkDAIUgF4MgFoU3AwAgB0EIaiEHDAELCyACQX9q
    IQIMAgUgBkHQ1QBqIAdqIgggCEEIaikDAEI5hkKAgICAgICAgAKDIAgpAwBCAYeENwMAIAdBCGohBwwBCwALAAsACyAK
    QYABQaChwAAQPQALIAMgB2oiCEH/AU0EQCAHQYABRg0CIAZB2NsAaiAHaiACIAdqLQAAOgAAIAdBAWohBwwBCwsgCEGA
    AkGwocAAEDwAC0GAAUGAAUHAocAAEDwACyAGQShqIAZBqANqEAIgBkG4EmogDxACIAZBKGogBkG4EmoQDCAGQegBakHo
    g8AAEF8CQAJAIAZB6AFqEFoNACAGQShqEIQBDQAgBkGIPWoQS0EAIQcgBkGIwwBqQTgQchogBkG4IWpBOBByGiAGQYjA
    AGoQSyAGQcjEAGoQSyAGQcjJAGoQSyAGQcjMAGoQSyAGQagGahBLIAZBsAxqEEsgBkHIzwBqEEsgBkHQ1QBqEEsgBkHY
    2wBqEEsgBkG4FWoQSyAGQZgjaiAGQcjJAGpBwAEQZxogBkHYJGogBkHIzABqQcABEGcaIAZBmCZqIAZBqAZqQcABEGca
    IAZB2CdqIAZBsAxqQcABEGcaIAZBmClqIAZByM8AakHAARBnGiAGQdgqaiAGQdDVAGpBwAEQZxogBkGYLGogBkHY2wBq
    QcABEGcaIAZB2C1qIAZBuBVqQcABEGcaIAZBuBVqQecAEHIaIAZBiMAAaiAGQShqEH8gBkGIwABqEBggBkGYI2ogBkEo
    ahB/A0AgB0HACkYEQCAGQbghaiAGQegBahBrIAYpA7ghIRcgBkG4IWpBARCdASAGQbghahBEIAYpA7ghIRYgBkGIwwBq
    IAZBuCFqEGsgBkGIwwBqQQEQnQEgBkGIwwBqEEQgBkG4IWogBkGIwwBqIBdCAoGnEE8gBkGIwABqIAZBKGogFkICgacQ
    bSAGQcjEAGogBkGIwABqEH8gBkG4IWoQKUEDaiIJQQJ2IgdBAWohAkEAIQgCQAJAAkADQAJAIAZBuCFqQQUQjAEhAyAC
    IAhGBEAgCUGYA0kNASACQecAQbCEwAAQPAALIAhB5wBGDQIgBkG4FWogCGogA0FwaiIDOgAAIAZBuCFqIANBGHRBGHUQ
    ngEgBkG4IWoQRCAGQbghakEEEDsgCEEBaiEIDAELCyAGQbgVaiACaiADOgAAIANBGHRBGHVBf2oiA0EBdiECIANBD0sN
    ASAGQYg9aiAGQZgjaiACQcABbGoQfwNAIAdBf0YEQCAGQYg9aiAGQcjEAGoQcyAGQZgjaiAGQYg9akHAARBnGgwICyAH
    QeYASw0DIAZBiMAAaiAGQZgjaiAGQbgVaiAHaiwAABAfIAdBf2ohByAGQYg9ahAYIAZBiD1qEBggBkGIPWoQGCAGQYg9
    ahAYIAZBiD1qIAZBiMAAahAMDAALAAtB5wBB5wBBoITAABA8AAsgAkEIQcCEwAAQPAALIAdB5wBB0ITAABA8AAUgBkHI
    xABqIAZBmCNqIAdqIgIQfyACQcABaiICIAZByMQAahB/IAIgBkGIwABqEAwgB0HAAWohBwwBCwALAAsgBkGYI2oQSwsgB
    kEoaiAGQZgjahB/IAZBKGoQRyAMEAlBACEHIAZBqAZqQTAQchogBkGwDGpBoKfAABBfAkACQAJAAkACQANAAkAgB0EwRg
    RAIAYgBi0AqAZBH3E6AKgGIAZByM8AaiAGQagGahBdIAENAUEAQQBB8ILAABA8AAsgASAHRg0CIAZBqAZqIAdqIAAgB2o
    tAAA6AAAgB0EBaiEHDAELC0EAIQcCQCAALAAAIgJBAE4EQCAAQTBqIQAgAUEwIAFBMEsbQVBqIQIDQCAHQTBGBEAgBkHY
    2wBqIAZBqAZqEF0gBkHoAWoQSyAGQegBaiAGQcjPAGoQtAEgBkGoAmoiACAGQdjbAGoQtAEgBkHoAmoQaSAGQegBahBEI
    AZBuBVqIAZB6AFqEE0gBkGYI2ogABCFASAGQZgjahADIAZBmCNqIAZBuBVqEFkNAyAGQegBahCUAQwDCyACIAdGDQQgBk
    GoBmogB2ogACAHai0AADoAACAHQQFqIQcMAAsACyAGQZgjahBLIAZB0NUAakE4EHIaIAZBATYCiFYgBkGYI2ogBkHIzwB
    qELQBIAZBmCNqEEQgBkGYJGoQaSAGQdjbAGogBkGYI2oQTQJAIAZB2NsAaiAGQdDVAGoQXEEBRwRAIAZBmCNqEJQBDAEL
    IAZBuBVqIAZB2NsAaiAGQdDVAGoQIyAGQbgVahBYBEAgBkG4FWoQQSAGQbgVahBECyAGQdgjaiAGQbgVahClAQsgAkEgc
    UEFdiAGQdgjahBMQQFGRwRAIAZBmCNqEKYBCyAGQegBaiAGQZgjakHAARBnGgsgBkHQPGpB8IHAABBfIAZB6AFqEIQBRQ
    0CDAMLIAEgAUHggsAAEDwACyAHQTBqIAFBgIPAABA8AAsgBkGoA2oQSyAGQagDaiAGQegBahB/IAZBuBJqEEsgBkG4Emo
    gBkHoAWoQfyAGQbgSahBHIAZByMcAakHwgcAAEF8gBkGYI2pBqILAABBfIAZBiMMAaiAGQZgjahCLAUEAIQAgBkG4IWpB
    OBByGiAGQfAhakE4EHIhCSAGQdjbAGpB8IHAABBfIAZBuBVqQYCAwAAQXyAGQZgjakE4EHIaIAZBkCNqIQsgBkGwFWohC
    gJAAkADQCAAQQdGDQIgAEEBaiEBIAZBuBVqIABBA3RqIQxCACEXQQAhAwNAIANBf2ohByAKIANBA3RqIQIgCyAAIANqQQ
    N0aiEIA0AgB0EGRgRAIAEhAAwDCyAIQQhqIQggAkEIaiECIAAgB0EBaiIHakEGSw0ACyAAQQZNBEAgB0EGSw0DIAdBAWo
    hAyAGQQhqIAIpAwAiFiAWQj+HIAwpAwAiFiAWQj+HEDEgCCAGKQMIIhkgF3wiFiAIKQMAIhp8IhhC//////////8DgzcD
    ACAYIBZUrSAWIBlUrSAGQRBqKQMAIBdCP4d8fCAaQj+HfHxCBoYgGEI6iIQhFwwBCwsLIABBB0G0ncAAEDwACyAHQQdBx
    J3AABA8AAsgBkG4IWogBkHQPGoQayAGQbghaiAGQZgjahAkIAkgBkHQPGoQayAJIAZBmCNqEBwgCSAGQdjbAGoQYyAGQb
    gSaiAGQYjDAGoQSCAGQbghahApIQAgBkGIyABqIAZBuCFqIAZByMcAahCNASAGQYjIAGoQKSAASQRAIAZBuCFqIAZBiMg
    AahBrIAZBqANqEKYBCyAJECkhACAGQYjIAGogCSAGQcjHAGoQjQEgBkGIyABqECkgAEkEQCAJIAZBiMgAahBrIAZBuBJq
    EKYBCyAGQbghahBEIAkQREEAIQcgBkHIyABqQTgQchogBkGIyQBqQTgQchogBkGYO2pBOBByGiAGQYg9ahBLIAZBiMAAa
    hBLIAZByMQAahBLIAZByMkAahBLIAZByMwAahBLIAZBqAZqEEsgBkGwDGoQSyAGQcjPAGoQSyAGQdDVAGoQSyAGQdjbAG
    oQSyAGQbgVahBLIAZBmCNqIAZByMkAakHAARBnGiAGQdgkaiAGQcjMAGpBwAEQZyEAIAZBmCZqIAZBqAZqQcABEGchASA
    GQdgnaiAGQbAMakHAARBnIQsgBkGYKWogBkHIzwBqQcABEGchCiAGQdgqaiAGQdDVAGpBwAEQZyECIAZBmCxqIAZB2NsA
    akHAARBnIQMgBkHYLWogBkG4FWpBwAEQZyEIIAZBuBVqQcwBEHIaIAZByMgAaiAGQbghahBrIAZBiMkAaiAJEGsgACAGQ
    agDahB/IAAgBkG4EmoQcyABIAZBqANqEH8gASAGQbgSahAMIAZBiD1qIAZBuBJqEH8gBkGIPWoQGCAGQcjEAGogABB/IA
    ZBmCNqIAZByMQAahB/IAZBmCNqIAZBiD1qEHMgBkHIxABqIAEQfyALIAZByMQAahB/IAsgBkGIPWoQDCAGQYjAAGogBkG
    oA2oQfyAGQYjAAGoQGCAGQcjEAGogABB/IAIgBkHIxABqEH8gAiAGQYjAAGoQDCAGQcjEAGogARB/IAMgBkHIxABqEH8g
    AyAGQYjAAGoQDCAGQcjEAGogAhB/IAogBkHIxABqEH8gCiAGQYg9ahBzIAZByMQAaiADEH8gCCAGQcjEAGoQfyAIIAZBi
    D1qEAwgBikDyEghFyAGQcjIAGpBARCdASAGQcjIAGoQRCAGKQPISCEWIAZBmDtqIAZByMgAahBrIAZBmDtqQQEQnQEgBk
    GYO2oQRCAGQcjIAGogBkGYO2ogF0ICgacQTyAGQYjAAGogBkGoA2ogFkICgacQbSAGQcjEAGogBkGIwABqEH8gBikDiEk
    hFyAGQYjJAGpBARCdASAGQYjJAGoQRCAGKQOISSEWIAZBmDtqIAZBiMkAahBrIAZBmDtqQQEQnQEgBkGYO2oQRCAGQYjJ
    AGogBkGYO2ogF0ICgacQTyAGQYg9aiAGQbgSaiAWQgKBpxBtIAZByMQAaiAGQYg9ahAMIAZBmDtqIAZByMgAahBrIAZBm
    DtqIAZBiMkAahBhIAZBmDtqEEQgBkGYO2oQKUEBaiICQQF2IghBAWohAAJAAkACQAJAA0ACQCAGQcjIAGpBAxCMASEBIA
    AgB0YEQCAGQYjJAGpBAxCMASEDIAJBlgNJDQEgAEHMAUG0g8AAEDwACyAGQcjIAGogAUF8aiIBEJ4BIAZByMgAahBEIAZ
    ByMgAakECEDsgBkGIyQBqIAZBiMkAakEDEIwBQXxqIgMQngEgBkGIyQBqEEQgBkGIyQBqQQIQOyAHQcwBRg0CIAZBuBVq
    IAdqIAMgAUECdGo6AAAgB0EBaiEHDAELCyAGQbgVaiAAaiADIAFBAnRqIgA6AAAgAEEYdEEYdUF/aiIBQQF2IQAgAUEPS
    w0BIAZBiD1qIAZBmCNqIABBwAFsahB/A0AgCEF/Rg0EIAhBywFLDQMgBkGIwABqIAZBmCNqIAZBuBVqIAhqLAAAEB8gCE
    F/aiEIIAZBiD1qEBggBkGIPWoQGCAGQYg9aiAGQYjAAGoQDAwACwALQcwBQcwBQaSDwAAQPAALIABBCEHEg8AAEDwACyA
    IQcwBQdSDwAAQPAALIAZBiD1qIAZByMQAahBzIAZBqANqIAZBiD1qQcABEGcaQX8hByAGQagDahCEAUUNASAGQegBahCm
    AUEAIQcgBkHIzwBqQeAAEHIaIAUEQANAIAdB4ABGBEAgBiAGLQDIT0EfcToAyE8gBkHQ1QBqIAZByM8AahAhAkACQAJAI
    AQsAAAiA0F/SgRAIARB4ABqIQAgBUHgACAFQeAASxtBoH9qIQFBACEHA0AgB0HgAEYEQCAGQZgjaiAGQcjPAGoQISAGQa
    gDaiAGQdDVAGogBkGYI2oQPwwDCyABIAdGDQMgBkHIzwBqIAdqIAAgB2otAAA6AAAgB0EBaiEHDAALAAsgBkGYI2oQKiA
    GQYjAAGpBOBByGiAGQQE2AsBAIAZBmCNqIAZB0NUAahCQASAGQZgkaiIBELABIAZBmCVqELABIAZBmCNqEKgBIAZB2NsA
    aiAGQZgjahAmIAZBuBVqIAZB2NsAahBeIAZBuBVqEKYBIAZBuBVqIAZB2NsAahAPIAZBsAxqIAZBuBVqQcAAEGcaAkAgB
    kGwDGogBkGIwABqEFxBAUcEQCAGQZgjahCYAQwBCyAGQdjbAGoQhwFFBEAgBkHIxABqIAZBmNwAaiIAEIUBIAZByMkAai
    AGQdjbAGoQhQEgBkHIzABqIAZB2NsAahCFASAGQagGakE4EHIaIAZBATYC4AYgBkGwDGpBOBByGiAGQQE2AugMIAZByMQ
    AahADIAZByMkAahADIAZByMQAaiAGQcjJAGoQeCAGQcjEAGoQRCAGQbgVaiAGQcjEAGogBkGIwABqECMgBkHIyQBqIAZB
    uBVqEKUBIAZByMQAaiAGQcjJAGoQpQEgBkHIyQBqIAZB2NsAahClASAGQcjJAGogBkHIxABqEHggBkHIyQBqEEQgBkHIy
    QBqEEIgBkHIxABqIAAQpQEgBkHIxABqEEIgBkHIyQBqIAZBsAxqEFwhAiAGQcjMAGogBkGwDGoQpQEgBkHIzABqEEEgBk
    HIzABqEEQgBkGoBmogBkHIyQBqEKUBIAZBqAZqEEEgBkGoBmoQRCAGQcjJAGogBkGoBmpBASACayICEHkgBkGwDGogBkH
    IzABqIAIQeSAGQbgVaiAGQcjJAGogBkGwDGoQIyAGQdjbAGogBkG4FWoQpQEgBkHIzABqIAZByMkAahClASAGQcjMAGog
    BkGwDGoQNCAGQcjMAGogBkHY2wBqEEggACAGQcjMAGoQpQEgACAGQcjEAGoQSCAGQagGaiAGQdjbAGoQpQEgBkHY2wBqI
    AAgAhB5IAAgBkGoBmogAhB5IAZB2NsAahCJASEAIAZBuBVqIAZB2NsAahBeIAZBuBVqEDogBkG4FWoQqAEgBkHY2wBqIA
    ZBuBVqIAAQjwELIAZB2NsAahCJAQRAIAZB2NsAahA6CyAGQdjbAGoQqwEgASAGQdjbAGoQkAELQQAhAgJAIAEQhwENACA
    GQdgkahBMIgINACABEEwhAgsgA0EgcUEFdiACQQFGRwRAIAZBmCNqEJwBCyAGQagDaiAGQZgjakGAAxBnGgsgBkHIyABq
    QfCBwAAQXyAGQagDahCIAQ0FIAZBuBJqECogBkG4FWoQKiAGQdDVAGoQKiAGQdjbAGoQKiAGQZgjahAqIAZBuBhqIAZB0
    NUAakGAAxBnIQ0gBkG4G2ogBkHY2wBqQYADEGchCSAGQbgeaiAGQZgjakGAAxBnIQAgBkHY2wBqQbiAwAAQXyAGQZgjak
    HwgMAAEF8gBkGIwwBqIAZB2NsAaiAGQZgjahBJIAZBiMkAakHwgcAAEF9BACEHIAZBuCFqQTgQchogBkHwIWpBqAEQciE
    DIAZBsAxqQfCBwAAQXyAGQcjPAGpBgIDAABBfIAZB4CJqIQEgBkGoImohDyAGQdDVAGogBkHIyABqEF8DQCAHQagBRg0C
    IAZBuCFqIAdqIgIgBkHQ1QBqEGsgAiAGQcjPAGoQJCAHQThqIQcgBkHQ1QBqIAZByM8AahAcDAALAAsgB0HgAGogBUGwp
    MAAEDwACyABIAZB0NUAahBrQQAhByAGQdjbAGpBOBByGiAGQZgjaiADIAZBsAxqEI0BIAZB2NsAaiAGQZgjahBrIAMgBk
    HY2wBqEGsgBkGYI2ogASAGQbAMahCNASAGQdjbAGogBkGYI2oQayABIAZB2NsAahBrIAZBiD1qECogBkGIwwBqEEAgBkG
    IwwBqEKgBIAZBmDtqQTgQchogBkG4FWogBkGoA2oQfgNAIAdBgAlGBEACQCAGQbgVaiECQQAhBwNAIAdB4AFHBEAgBkG4
    IWogB2oiBBApIQUgBkGYI2ogBCAGQYjJAGoQjQEgBkGYO2ogBkGYI2oQayAGQZg7ahApIAVJBEAgBCAGQZg7ahBrIAIQn
    AELIAQQRCAHQThqIQcgAkGAA2ohAgwBCwsgBkHIxABqECogBkGIwABqECogBkGYI2oQKiAGQcjJAGoQKiAGQcjMAGoQKi
    AGQagGahAqIAZBsAxqECogBkHIzwBqECogBkHQ1QBqECogBkHY2wBqECogBkGYJmogBkHIyQBqQYADEGchAiAGQZgpaiA
    GQcjMAGpBgAMQZyEEIAZBmCxqIAZBqAZqQYADEGchBSAGQZgvaiAGQbAMakGAAxBnIQsgBkGYMmogBkHIzwBqQYADEGch
    CiAGQZg1aiAGQdDVAGpBgAMQZyEIIAZBmDhqIAZB2NsAakGAAxBnIQxBACEHIAZBqAZqQTgQchogBkGwDGogBkG4IWoQX
    yAGQcjPAGogAxBfIAZB0NUAaiAPEF8gBkHY2wBqIAEQXyAGQegMaiAGQcjPAGpBOBBnGiAGQaANaiAGQdDVAGpBOBBnGi
    AGQdgNaiAGQdjbAGpBOBBnGiAGQdDVAGpBlwMQchogBkHY2wBqQZcDEHIaA0AgB0HgAUYEQAJAIAZBmCNqIAZBuBVqEH4
    gBkHIxABqIAZBmCNqEH4gAiAGQcjEAGoQfiACIA0QCyAEIAZByMQAahB+IAQgCRALIAZByMQAaiACEH4gBSAGQcjEAGoQ
    fiAFIAkQCyAGQcjEAGogBkGYI2oQfiALIAZByMQAahB+IAsgABALIAZByMQAaiACEH4gCiAGQcjEAGoQfiAKIAAQCyAGQ
    cjEAGogBBB+IAggBkHIxABqEH4gCCAAEAsgBkHIxABqIAUQfiAMIAZByMQAahB+IAwgABALIAZBsAxqQQEgBikDsAxCAo
    GnayIFEJ0BIAZBsAxqEEQgBkGoBmoQdEEAIQAgBkGwDGohAgJAAkACQAJAA38gAEEERgR/IAZBqAZqECkiA0GXA08NAiA
    DQQFqIQkgBkHY2wBqIANqQQE6AAAgBkHY2wBqIQggAwVBACEHA0AgB0E4RwRAIAZBqAZqIAdqIgEgASkDACACIAdqKQMA
    hDcDACAHQQhqIQcMAQsLIAJBOGohAiAAQQFqIQAMAQsLIQcDQCAHBEAgBkGwDGpBARA7IAggBikDsAxCAoGnQQF0QX9qO
    gAAIAdBf2ohByAIQQFqIQgMAQsLQQAhBwNAIAcgCUYEQCAGQYjAAGogBkGYI2ogBkHQ1QBqIANqLQAAQRl0QRh1QQFyEC
    AgA0F/aiEHA0AgB0F/Rg0GIAZBiMAAahAUIAdBlgNLDQUgBkHIxABqIAZBmCNqIAZB2NsAaiAHai0AACAGQdDVAGogB2o
    tAABBAXRqQRh0QRh1ECAgB0F/aiEHIAZBiMAAaiAGQcjEAGoQCwwACwALIAdBlwNGDQIgB0EBaiEBQQAhACAGQdDVAGog
    B2oiC0EAOgAAIAZB2NsAaiAHai0AACEKQQEhAkE4IQcDQCAHQeABRgRAIAEhBwwCBSAGQbAMaiAHaiIEKQMAIRcgBEEBE
    DsgBCAKIBdCAoGnbCIIQRh0QRl1EJ4BIAQQRCALIAAgAiAIbGoiADoAACAHQThqIQcgAkEBdCECDAELAAsACwALIANBlw
    NBkKXAABA8AAtBlwNBlwNBoKXAABA8AAsgB0GXA0GwpcAAEDwACyAGQcjEAGogBkGIwABqEH4gBkHIzwBqECogBkHIzwB
    qIAZBuBVqEH4gBkHIzwBqEJwBIAZByMQAaiAGQcjPAGoQCyAGQYjAAGogBkHIxABqIAUQbyAGQbgSaiAGQYjAAGoQfkF/
    IQcgBkG4EmoQiAFFDQogBkG4EmoQOCAGQbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZBmDtqIAZBuBVqIAZBmCNqEEkgB
    kGYPGpBOBByGiAGQdA8akE4EHIaIAZBiD1qECogBkHoAWoQhAFFBEAgBkEoahCEAQ0BIAZBiMAAahAqIAZBiMAAaiAGQb
    gSahB+IAZBiMAAahBKIAZBiMMAahBLIAZBiMMAaiAGQegBahB/IAZBiMMAahBHIAZByMQAahAqIAZByMQAaiAGQagDahB
    +IAZByMQAahBKIAZBuCFqEEsgBkG4IWogBkEoahB/IAZBuCFqEEcgBkGYI2ogBkGIwwBqEIUBIAZByMcAaiAGQZgjahCF
    ASAGQZgjaiAGQcjDAGoQhQEgBkGIyABqIAZBmCNqEIUBIAZBmCNqIAZBuCFqEIUBIAZByMgAaiAGQZgjahCFASAGQZgja
    iAGQfghahCFASAGQYjJAGogBkGYI2oQhQEgBkHIyQBqECogBkHIzABqECogBkHQ1QBqEGAgBkHIyQBqIAZBiMAAahB+IA
    ZByMwAaiAGQcjEAGoQfiAGQbAMahAqIAZBsAxqIAZBiMAAahB+IAZBsAxqEJwBIAZByM8AahAqIAZByM8AaiAGQcjEAGo
    QfiAGQcjPAGoQnAEgBkHQPGogBkGYPGoQVEF/aiEHA0AgB0EBTQRAIAZB0NUAahCTASAGQagGaiAGQdDVAGpBiAYQZxoM
    BgsgBkHQ1QBqEBsgBkHY2wBqIAZByMkAaiAGQcjHAGogBkGIyABqEBcgBkG4FWogBkHIzABqIAZByMgAaiAGQYjJAGoQF
    yAGQdjbAGogBkG4FWoQBiAGQdDVAGogBkHY2wBqEAQCQAJAIAZB0DxqIAdBf2oiBxBXIAZBmDxqIAcQV2tBAWoOAwECAA
    ILIAZB2NsAaiAGQcjJAGogBkGIwABqIAZByMcAaiAGQYjIAGoQFiAGQZgjaiAGQcjMAGogBkHIxABqIAZByMgAaiAGQYj
    JAGoQFiAGQdjbAGogBkGYI2oQBiAGQdDVAGogBkHY2wBqEAQMAQsgBkHY2wBqIAZByMkAaiAGQbAMaiAGQcjHAGogBkGI
    yABqEBYgBkGYI2ogBkHIzABqIAZByM8AaiAGQcjIAGogBkGIyQBqEBYgBkHY2wBqIAZBmCNqEAYgBkHQ1QBqIAZB2NsAa
    hAEDAALAAsgBkGoBmogBkGoA2ogBkEoahAQDAMLBSAGQbAMaiAHahBEIAdBOGohBwwBCwsgBkGoBmogBkG4EmogBkHoAW
    oQEAsFIAZBiD1qIAZBuBVqIAdqIgIQfiACQYADaiIEIAZBiD1qEH4gBkGYI2ogBkGIwwBqEF4gBkGYI2oQMiAEEKYBIAJ
    BgARqIgUQpgEgAkGABWoiAhCmASACEKsBIAQgBkGYI2oQDyAFIAZBmCNqEA8gBSAGQYjDAGoQDyAHQYADaiEHDAELCyAG
    QbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZByMQAaiAGQbgVaiAGQZgjahBJIAZBiMAAakGAgMAAEF8gBkGwDGogBkGoB
    moQaiAGQcjPAGogBkGwDGoQaiAGQdDVAGogBkHIzwBqEI4BIAZB2NsAaiAGQcjRAGoiARCOASAGQbgVaiAGQcjPAGoQjg
    EgBkGYI2oQLyAGQcjPAGoQmQEgBkHQ1QBqECIgBkHY2wBqIAZByNMAaiIAEBkgBkHY2wBqEGYgBkHQ1QBqIAZB2NsAahC
    BASAGQdDVAGoQrAEgBkHY2wBqIAAQkgEgBkHY2wBqECIgBkHY2wBqEGYgBkG4FWogARAZIAZB2NsAaiAGQbgVahCBASAG
    QdjbAGoQrAEgBkG4FWogARCSASAGQbgVahAiIAZBmCNqIAZByM8AahCSASAGQZgjaiAAEBkgBkG4FWogBkGYI2oQgQEgB
    kG4FWoQrAEgBkGYI2ogARCSASAGQZgjaiAGQbgVahAZIAZBmCNqEGYgBkHIzwBqIAZB0NUAahAZIAZBmCNqIAZByM8Aah
    CWASAAIAZB2NsAahAZIAAQZiAGQZgjaiAAEJYBIAZBmCNqEKwBIAZByMkAaiAGQZgjahBeIAZByMwAaiAGQZgkaiICEF4
    gBkHIyQBqEDIgBkHIzABqEDIgBkHIzABqEFUgBkHIzABqEKgBIAZByMkAaiAGQcjMAGoQfSAGQcjJAGoQQCAGQZgjaiAG
    QcjJAGoQDyAGQcjJAGoQOiAGQcjJAGoQqAEgAiAGQcjJAGoQDyAGQcjPAGogBkHQ1QBqEJIBIAZByM8AaiAGQZgjahAZI
    AEgBkHY2wBqEJIBIAEgBkGYI2oQGSAAIAZBuBVqEJIBIAAgBkGYI2oQGSAGQQU2AshVIAZBsAxqEJMBIAZBsAxqIAZByM
    8AahAOIAZByM8AaiAGQbAMahBsIAZBsAxqIAZByMQAahA3IAZBsAxqIAZByMQAahA3IAZBsAxqIAZByM8AahAOIAZB0NU
    AaiAGQbAMahBqIAZB0NUAahAaIAZB0NUAaiAGQbAMahAOIAZBmCNqIAZBsAxqIAZBiMAAahAdIAZB2NsAaiAGQZgjahBq
    IAZB2NsAahCTASAGQbgVaiAGQbAMahBqIAZBuBVqEJMBIAZBsAxqIAZB2NsAahBsIAZBsAxqIAZBuBVqEA4gBkGYI2ogB
    kGwDGogBkGIwABqEB0gBkHY2wBqIAZBmCNqEGwgBkHY2wBqEJMBIAZBuBVqIAZBsAxqEGwgBkG4FWoQkwEgBkGwDGogBk
    HY2wBqEGwgBkGwDGogBkG4FWoQDiAGQZgjaiAGQbAMaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQdjbAGoQkwEgBkG
    4FWogBkGwDGoQbCAGQbgVaiAGQcjEAGoQNyAGQbAMaiAGQdjbAGoQbCAGQbAMaiAGQbgVahAOIAZBmCNqIAZBsAxqIAZB
    iMAAahAdIAZB2NsAaiAGQZgjahBsIAZBmCNqIAZB2NsAaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQbgVaiAGQbAMa
    hBsIAZBuBVqIAZByMQAahA3IAZBuBVqIAZByMQAahA3IAZB2NsAaiAGQbgVahAOIAZBuBVqIAZBsAxqEGwgBkG4FWoQkw
    EgBkGwDGogBkHY2wBqEGwgBkGwDGogBkG4FWoQDiAGQbAMaiAGQdDVAGoQDiAGQbAMahCaASAGQagGaiAGQbAMakGIBhB
    nGiAGQZgjahBuIAZBqAZqIAZBmCNqEHtFDQMgBkGoB2ogAhB7RQ0DIAZBqAhqEIYBRQ0DQQAhByAGQagKahCGAUUNAwwE
    CyAFIAdHBEAgBkHIzwBqIAdqIAQgB2otAAA6AAAgB0EBaiEHDAELCyAFIAVBoKTAABA8AAtBAEEAQZCkwAAQPAALQX8hB
    wsgBkHg4QBqJAAgBw8LQQAhByAGQbAMakE4EHIaA0AgB0E4RwRAIAZBsAxqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQ
    cMAQsLIAZBmCNqIAZBsAxqEIsBIAZBqANqIAlBBnRqIAZBmCNqQcAAEGcaIAMgCmohAyALIQkMAAsACyAHIAlqIQkgAiE
    DDAALAAtBK0EBQaS5wQAoAgAiAEEBIAAbEQAAAAvBKgIIfwF+AkACQAJAAkAgAEH1AU8EQCAAQc3/e08NAiAAQQtqIgBB
    eHEhBkHYtcEAKAIAIgdFDQFBHyEIQQAgBmshBQJAAkAgBkH///8HTQRAIAZBBiAAQQh2ZyIAa0EfcXZBAXEgAEEBdGtBP
    mohCAsgCEECdEHkt8EAaigCACIABEAgBkEAQRkgCEEBdmtBH3EgCEEfRht0IQMDQAJAIABBBGooAgBBeHEiBCAGSQ0AIA
    QgBmsiBCAFTw0AIAAhAiAEIgUNAEEAIQUMAwsgAEEUaigCACIEIAEgBCAAIANBHXZBBHFqQRBqKAIAIgBHGyABIAQbIQE
    gA0EBdCEDIAANAAsgAQRAIAEhAAwCCyACDQILQQAhAkECIAhBH3F0IgBBACAAa3IgB3EiAEUNAyAAQQAgAGtxaEECdEHk
    t8EAaigCACIARQ0DCwNAIAAgAiAAQQRqKAIAQXhxIgEgBk8gASAGayIDIAVJcSIEGyECIAMgBSAEGyEFIAAoAhAiAQR/I
    AEFIABBFGooAgALIgANAAsgAkUNAgtB5LjBACgCACIAIAZPQQAgBSAAIAZrTxsNASACKAIYIQcCQAJAIAIgAigCDCIBRg
    RAIAJBFEEQIAJBFGoiAygCACIBG2ooAgAiAA0BQQAhAQwCCyACKAIIIgAgATYCDCABIAA2AggMAQsgAyACQRBqIAEbIQM
    DQCADIQQgACIBQRRqIgMoAgAiAEUEQCABQRBqIQMgASgCECEACyAADQALIARBADYCAAsCQCAHRQ0AAkAgAiACKAIcQQJ0
    QeS3wQBqIgAoAgBHBEAgB0EQQRQgBygCECACRhtqIAE2AgAgAUUNAgwBCyAAIAE2AgAgAQ0AQdi1wQBB2LXBACgCAEF+I
    AIoAhx3cTYCAAwBCyABIAc2AhggAigCECIABEAgASAANgIQIAAgATYCGAsgAkEUaigCACIARQ0AIAFBFGogADYCACAAIA
    E2AhgLAkAgBUEQTwRAIAIgBkEDcjYCBCACIAZqIgcgBUEBcjYCBCAFIAdqIAU2AgAgBUGAAk8EQEEfIQAgB0IANwIQIAV
    B////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIAcgADYCHCAAQQJ0QeS3wQBqIQQCQAJAAkACQEHY
    tcEAKAIAIgNBASAAQR9xdCIBcQRAIAQoAgAiA0EEaigCAEF4cSAFRw0BIAMhAAwCC0HYtcEAIAEgA3I2AgAgBCAHNgIAI
    AcgBDYCGAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAMgAUEddkEEcWpBEGoiBCgCACIARQ0CIAFBAXQhASAAIQ
    MgAEEEaigCAEF4cSAFRw0ACwsgACgCCCIBIAc2AgwgACAHNgIIIAdBADYCGCAHIAA2AgwgByABNgIIDAQLIAQgBzYCACA
    HIAM2AhgLIAcgBzYCDCAHIAc2AggMAgsgBUEDdiIBQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASABdCIBcQRAIAAoAggM
    AQtB1LXBACABIANyNgIAIAALIQUgACAHNgIIIAUgBzYCDCAHIAA2AgwgByAFNgIIDAELIAIgBSAGaiIAQQNyNgIEIAAgA
    moiACAAKAIEQQFyNgIECyACQQhqDwsCQAJAQdS1wQAoAgAiB0EQIABBC2pBeHEgAEELSRsiBkEDdiIBdiICQQNxRQRAIA
    ZB5LjBACgCAE0NAyACDQFB2LXBACgCACIARQ0DIABBACAAa3FoQQJ0QeS3wQBqKAIAIgFBBGooAgBBeHEgBmshBSABIQM
    DQCABKAIQIgBFBEAgAUEUaigCACIARQ0ECyAAQQRqKAIAQXhxIAZrIgIgBSACIAVJIgIbIQUgACADIAIbIQMgACEBDAAL
    AAsCQCACQX9zQQFxIAFqIgVBA3QiAEHktcEAaigCACIDQQhqIgIoAgAiASAAQdy1wQBqIgBHBEAgASAANgIMIAAgATYCC
    AwBC0HUtcEAIAdBfiAFd3E2AgALIAMgBUEDdCIAQQNyNgIEIAAgA2oiACAAKAIEQQFyNgIEIAIPCwJAQQIgAXQiAEEAIA
    BrciACIAF0cSIAQQAgAGtxaCIBQQN0IgBB5LXBAGooAgAiA0EIaiIEKAIAIgIgAEHctcEAaiIARwRAIAIgADYCDCAAIAI
    2AggMAQtB1LXBACAHQX4gAXdxNgIACyADIAZBA3I2AgQgAyAGaiIFIAFBA3QiACAGayIHQQFyNgIEIAAgA2ogBzYCAEHk
    uMEAKAIAIgAEQCAAQQN2IgJBA3RB3LXBAGohAEHsuMEAKAIAIQgCf0HUtcEAKAIAIgFBASACQR9xdCICcQRAIAAoAggMA
    QtB1LXBACABIAJyNgIAIAALIQMgACAINgIIIAMgCDYCDCAIIAA2AgwgCCADNgIIC0HsuMEAIAU2AgBB5LjBACAHNgIAIA
    QPCyADKAIYIQcCQAJAIAMgAygCDCIBRgRAIANBFEEQIANBFGoiASgCACICG2ooAgAiAA0BQQAhAQwCCyADKAIIIgAgATY
    CDCABIAA2AggMAQsgASADQRBqIAIbIQIDQCACIQQgACIBQRRqIgIoAgAiAEUEQCABQRBqIQIgASgCECEACyAADQALIARB
    ADYCAAsgB0UNAyADIAMoAhxBAnRB5LfBAGoiACgCAEcEQCAHQRBBFCAHKAIQIANGG2ogATYCACABRQ0EDAMLIAAgATYCA
    CABDQJB2LXBAEHYtcEAKAIAQX4gAygCHHdxNgIADAMLAkACQAJAAkACQEHkuMEAKAIAIgEgBkkEQEHouMEAKAIAIgAgBk
    sNA0EAIQUgBkGvgARqIgJBEHZAACIAQX9GDQYgAEEQdCIDRQ0GQfS4wQAgAkGAgHxxIgVB9LjBACgCAGoiAjYCAEH4uME
    AQfi4wQAoAgAiACACIAAgAksbNgIAQfC4wQAoAgAiBEUNAUH8uMEAIQADQCAAKAIAIgEgACgCBCICaiADRg0DIAAoAggi
    AA0ACwwEC0HsuMEAKAIAIQMCfyABIAZrIgJBD00EQEHsuMEAQQA2AgBB5LjBAEEANgIAIAMgAUEDcjYCBCABIANqIgJBB
    GohACACKAIEQQFyDAELQeS4wQAgAjYCAEHsuMEAIAMgBmoiADYCACAAIAJBAXI2AgQgASADaiACNgIAIANBBGohACAGQQ
    NyCyEGIAAgBjYCACADQQhqDwtBkLnBACgCACIAQQAgACADTRtFBEBBkLnBACADNgIAC0GUucEAQf8fNgIAQYC5wQAgBTY
    CAEH8uMEAIAM2AgBB6LXBAEHctcEANgIAQfC1wQBB5LXBADYCAEHktcEAQdy1wQA2AgBB+LXBAEHstcEANgIAQey1wQBB
    5LXBADYCAEGAtsEAQfS1wQA2AgBB9LXBAEHstcEANgIAQYi2wQBB/LXBADYCAEH8tcEAQfS1wQA2AgBBkLbBAEGEtsEAN
    gIAQYS2wQBB/LXBADYCAEGYtsEAQYy2wQA2AgBBjLbBAEGEtsEANgIAQaC2wQBBlLbBADYCAEGUtsEAQYy2wQA2AgBBiL
    nBAEEANgIAQai2wQBBnLbBADYCAEGctsEAQZS2wQA2AgBBpLbBAEGctsEANgIAQbC2wQBBpLbBADYCAEGstsEAQaS2wQA
    2AgBBuLbBAEGstsEANgIAQbS2wQBBrLbBADYCAEHAtsEAQbS2wQA2AgBBvLbBAEG0tsEANgIAQci2wQBBvLbBADYCAEHE
    tsEAQby2wQA2AgBB0LbBAEHEtsEANgIAQcy2wQBBxLbBADYCAEHYtsEAQcy2wQA2AgBB1LbBAEHMtsEANgIAQeC2wQBB1
    LbBADYCAEHctsEAQdS2wQA2AgBB6LbBAEHctsEANgIAQfC2wQBB5LbBADYCAEHktsEAQdy2wQA2AgBB+LbBAEHstsEANg
    IAQey2wQBB5LbBADYCAEGAt8EAQfS2wQA2AgBB9LbBAEHstsEANgIAQYi3wQBB/LbBADYCAEH8tsEAQfS2wQA2AgBBkLf
    BAEGEt8EANgIAQYS3wQBB/LbBADYCAEGYt8EAQYy3wQA2AgBBjLfBAEGEt8EANgIAQaC3wQBBlLfBADYCAEGUt8EAQYy3
    wQA2AgBBqLfBAEGct8EANgIAQZy3wQBBlLfBADYCAEGwt8EAQaS3wQA2AgBBpLfBAEGct8EANgIAQbi3wQBBrLfBADYCA
    EGst8EAQaS3wQA2AgBBwLfBAEG0t8EANgIAQbS3wQBBrLfBADYCAEHIt8EAQby3wQA2AgBBvLfBAEG0t8EANgIAQdC3wQ
    BBxLfBADYCAEHEt8EAQby3wQA2AgBB2LfBAEHMt8EANgIAQcy3wQBBxLfBADYCAEHgt8EAQdS3wQA2AgBB1LfBAEHMt8E
    ANgIAQfC4wQAgAzYCAEHct8EAQdS3wQA2AgBB6LjBACAFQVhqIgA2AgAgAyAAQQFyNgIEIAAgA2pBKDYCBEGMucEAQYCA
    gAE2AgAMAwsgAEEMaigCACADIARNciABIARLcg0BIAAgAiAFajYCBEHwuMEAQfC4wQAoAgAiA0EPakF4cSIBQXhqNgIAQ
    ei4wQBB6LjBACgCACAFaiICIAMgAWtqQQhqIgA2AgAgAUF8aiAAQQFyNgIAIAIgA2pBKDYCBEGMucEAQYCAgAE2AgAMAg
    tB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2AgQgASAGQQNyNgIEIAFBCGohBQwCC0G
    QucEAQZC5wQAoAgAiACADIAAgA0kbNgIAIAMgBWohAUH8uMEAIQACQANAIAEgACgCAEcEQCAAKAIIIgANAQwCCwsgAEEM
    aigCAA0AIAAgAzYCACAAIAAoAgQgBWo2AgQgAyAGQQNyNgIEIAMgBmohBCABIANrIAZrIQYCQAJAIAFB8LjBACgCAEcEQ
    EHsuMEAKAIAIAFGDQEgAUEEaigCACIAQQNxQQFGBEAgASAAQXhxIgAQFSAAIAZqIQYgACABaiEBCyABIAEoAgRBfnE2Ag
    QgBCAGQQFyNgIEIAQgBmogBjYCACAGQYACTwRAQR8hBSAEQgA3AhAgBkH///8HTQRAIAZBBiAGQQh2ZyIAa0EfcXZBAXE
    gAEEBdGtBPmohBQsgBCAFNgIcIAVBAnRB5LfBAGohAQJAAkACQAJAQdi1wQAoAgAiAkEBIAVBH3F0IgBxBEAgASgCACIC
    QQRqKAIAQXhxIAZHDQEgAiEFDAILQdi1wQAgACACcjYCACABIAQ2AgAgBCABNgIYDAMLIAZBAEEZIAVBAXZrQR9xIAVBH
    0YbdCEBA0AgAiABQR12QQRxakEQaiIAKAIAIgVFDQIgAUEBdCEBIAUiAkEEaigCAEF4cSAGRw0ACwsgBSgCCCIAIAQ2Ag
    wgBSAENgIIIARBADYCGCAEIAU2AgwgBCAANgIIDAULIAAgBDYCACAEIAI2AhgLIAQgBDYCDCAEIAQ2AggMAwsgBkEDdiI
    CQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQUgACAENgIIIAUg
    BDYCDCAEIAA2AgwgBCAFNgIIDAILQfC4wQAgBDYCAEHouMEAQei4wQAoAgAgBmoiADYCACAEIABBAXI2AgQMAQtB7LjBA
    CAENgIAQeS4wQBB5LjBACgCACAGaiIANgIAIAQgAEEBcjYCBCAAIARqIAA2AgALIANBCGoPC0H8uMEAIQADQAJAIAAoAg
    AiAiAETQRAIAIgACgCBGoiAiAESw0BCyAAKAIIIQAMAQsLQfC4wQAgAzYCAEHouMEAIAVBWGoiADYCACADIABBAXI2AgQ
    gACADakEoNgIEQYy5wQBBgICAATYCACAEIAJBYGpBeHFBeGoiACAAIARBEGpJGyIBQRs2AgRB/LjBACkCACEJIAFBEGpB
    hLnBACkCADcCACABIAk3AghBgLnBACAFNgIAQfy4wQAgAzYCAEGEucEAIAFBCGo2AgBBiLnBAEEANgIAIAFBHGohAANAI
    ABBBzYCACACIABBBGoiAEsNAAsgASAERg0AIAEgASgCBEF+cTYCBCAEIAEgBGsiBUEBcjYCBCABIAU2AgAgBUGAAk8EQE
    EfIQAgBEIANwIQIAVB////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIARBHGogADYCACAAQQJ0QeS
    3wQBqIQMCQAJAAkACQEHYtcEAKAIAIgFBASAAQR9xdCICcQRAIAMoAgAiAkEEaigCAEF4cSAFRw0BIAIhAAwCC0HYtcEA
    IAEgAnI2AgAgAyAENgIAIARBGGogAzYCAAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAIgAUEddkEEcWpBEGoiA
    ygCACIARQ0CIAFBAXQhASAAIQIgAEEEaigCAEF4cSAFRw0ACwsgACgCCCICIAQ2AgwgACAENgIIIARBGGpBADYCACAEIA
    A2AgwgBCACNgIIDAMLIAMgBDYCACAEQRhqIAI2AgALIAQgBDYCDCAEIAQ2AggMAQsgBUEDdiICQQN0Qdy1wQBqIQACf0H
    UtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQEgACAENgIIIAEgBDYCDCAEIAA2AgwgBCAB
    NgIIC0EAIQVB6LjBACgCACIAIAZNDQBB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2A
    gQgASAGQQNyNgIEIAFBCGoPCyAFDwsgASAHNgIYIAMoAhAiAARAIAEgADYCECAAIAE2AhgLIANBFGooAgAiAEUNACABQR
    RqIAA2AgAgACABNgIYCwJAIAVBEE8EQCADIAZBA3I2AgQgAyAGaiIEIAVBAXI2AgQgBCAFaiAFNgIAQeS4wQAoAgAiAAR
    AIABBA3YiAkEDdEHctcEAaiEAQey4wQAoAgAhBwJ/QdS1wQAoAgAiAUEBIAJBH3F0IgJxBEAgACgCCAwBC0HUtcEAIAEg
    AnI2AgAgAAshAiAAIAc2AgggAiAHNgIMIAcgADYCDCAHIAI2AggLQey4wQAgBDYCAEHkuMEAIAU2AgAMAQsgAyAFIAZqI
    gBBA3I2AgQgACADaiIAIAAoAgRBAXI2AgQLIANBCGoLtA8BA38jAEGAC2siAiQAIAJBCGoQSyACQcgBakE4EHIaIAJBAT
    YCgAIgAkGIAmpBOBByGiACQQE2AsACIAJByAJqQTgQchogAkEBNgKAAyACQYgDakE4EHIaIAJBATYCwAMgAkHIA2pBOBB
    yGiACQQE2AoAEIAJBiARqQQEQigEgAkHIBGpBOBByGiACQQE2AoAFIAJBiAVqQTgQchogAkEBNgLABSACQcgFaiABEIUB
    IAJBiAZqQTgQchogAkEBNgLABiACQcgGakE4EHIaIAJBATYCgAcgAkGIB2pBOBByGiACQQE2AsAHIAJByAdqQTgQchogA
    kEBNgKACCACQcgFahBYIQMgAkHICWpB4ITAABBfIAJBiApqIAJByAlqEIsBIAJByAFqIAJBiApqEKUBIAJByAlqQZiFwA
    AQXyACQYgKaiACQcgJahCLASACQYgCaiACQYgKahClASACQcgFahADIAJByAVqQQsQUiACQYgGaiACQcgFahClASACQYg
    GaiACQYgEahB4IAJBiAZqEEQgAkGIBmogAkHIBWoQSCACQYgFaiACQcgBahClASACQYgFaiACQYgGahBIIAJBiAZqIAJB
    iARqEHggAkGIBmoQRCACQYgGaiACQYgCahBIIAJBiAZqEEEgAkGIBmoQRCACQYgDaiACQYgGahClASACQcgDaiACQcgFa
    hClASACQcgDaiACQYgDahBIIAJByAdqIAJBiANqEKUBIAJByAdqEAMgAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgGai
    ACQcgBahClASACQYgGaiACQcgGahBIIAJByAdqIAJBiAZqEHggAkHIB2oQRCACQcgHaiACQYgDahBIIAJByAZqIAJBiAV
    qEEggAkGIBmogAkGIAmoQpQEgAkGIBmogAkHIBmoQSCACQcgHaiACQYgGahB4IAJByAdqEEQgAkGIBmogAkHIB2oQpQEg
    AkGIBmogAkGIBWoQSCACQYgGaiACQYgHahBcIQQgAkGIBWogAkGIBmoQpQEgAkGIBWogAkGIB2oQNCACQYgFaiACQcgHa
    hBIIAJBiANqIAJBiAVqEEggAkHIA2ogAkGIBWoQSCACQcgFaiABEEggAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgFai
    ACQcgGahClASACQYgFaiACQcgFahBIIAJByAVqIAJBiAZqEKUBIAJByAVqQQsQUiACQcgJakHQhcAAEF8gAkGICmogAkH
    ICWoQiwEgAkHIAmogAkGICmoQpQEgAkHIAmogAkGIB2oQSCACQYgDaiACQcgDakEBIARrIgEQeSACQcgGaiACQYgFaiAB
    EHkgAkGIBmogAkHIBWogARB5IAJBiAdqIAJByAJqIAEQeSACQYgKaiACQYgGaiACQYgHahAjIAJByARqIAJBiApqEKUBI
    AJByARqIAJByAZqEEggAkHIBGoQWCEBIAJBiAZqIAJByARqEKUBIAJBiAZqEEEgAkGIBmoQRCACQcgEaiACQYgGaiABIA
    NzEHkgAkGICmpBiIbAABBfIAJBiAhqIAJBiApqEIsBQTghAQNAIAFBoAVGRQRAIAJBiAhqIAJBiANqEEggAkHICWogAUG
    IhsAAahBfIAFBOGohASACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQYgIaiACQYgGahB4IAJBiAhqEEQMAQsL
    IAJByAhqIAJBiANqEIUBIAJByAlqQaiLwAAQXyACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQcgIaiACQYgGa
    hB4IAJByAhqEERBACEBA0AgAUH4A0ZFBEAgAkHICGogAkGIA2oQSCACQcgJaiABQeCLwABqEF8gAUE4aiEBIAJBiApqIA
    JByAlqEIsBIAJBiAZqIAJBiApqEKUBIAJByAhqIAJBiAZqEHggAkHICGoQRAwBCwsgAkGICmpB2I/AABBfIAJBiAlqIAJ
    BiApqEIsBQQAhAQNAIAFByAZGBEACQCACQcgJaiACQYgDahCFASACQcgKakHYlsAAEF8gAkGICmogAkHICmoQiwEgAkGI
    BmogAkGICmoQpQEgAkHICWogAkGIBmoQeCACQcgJahBEQQAhAQNAIAFBkAZGDQEgAkHICWogAkGIA2oQSCACQcgKaiABQ
    ZCXwABqEF8gAUE4aiEBIAJBiApqIAJByApqEIsBIAJBiAZqIAJBiApqEKUBIAJByAlqIAJBiAZqEHggAkHICWoQRAwACw
    ALBSACQYgJaiACQYgDahBIIAJByAlqIAFBkJDAAGoQXyABQThqIQEgAkGICmogAkHICWoQiwEgAkGIBmogAkGICmoQpQE
    gAkGICWogAkGIBmoQeCACQYgJahBEDAELCyACQYgJaiACQcgEahBIIAJBiAZqIAJBiAhqEKUBIAJBiAZqIAJByAlqEEgg
    AkEIaiACQYgGahClASACQYgGaiACQYgJahClASACQYgGaiACQcgIahBIIAJByABqIAJBiAZqEKUBIAJBiAZqIAJByAhqE
    KUBIAJBiAZqIAJByAlqEEggAkGIAWogAkGIBmoQpQEgACACQQhqQcABEGcaIAJBgAtqJAALzQ0CE38IfiMAQYADayIBJA
    AgADQCOCIUIBR+QoCAgBBaBEAgABASCyABQeABakHoABByGiABQcgBaiAAKQMAIhggGEI/hyIZIBggGRAxIAEgASkDyAE
    iFEL//////////wODNwPYASABQdABaikDACIXQgaGIBRCOoiEIRUgF0I6iCEaIABBCGoiCyEFIAAhBkEBIQcDQCAHQQZP
    BEAgAEEYaiEMIABBKGohCyAAQRBqIQcgACkDMCEYQQQhBkEAIQkgAUGgAWohDUEDIQpBAiEIQQchBQJAAkADQCAFQQpLD
    QIgBiAIIAYgCEsbIQ4gBiAKIAYgCksbQQN0QWhqIQ8gAUGYAWogBUEDdCIQIABqQVBqKQMAIhQgFEI/hyAYIBhCP4ciGR
    AxIAVBAWoiEUEBdiESIA0pAwAhFyABKQOYASEUIAshAyAHIQQgBUF7aiITIQICQANAIAIgDkcEQCACQQdGDQIgAUGIAWo
    gBCkDACIWIBZCP4cgAykDACIWIBZCP4cQMSABKQOIASIWIBR8IhQgFlStIAFBkAFqKQMAIBd8fCEXIANBeGohAyAEQQhq
    IQQgAkEBaiECDAELCyABQdgBaiAQaiAUQgGGIhYgFXwiFUL//////////wODNwMAIAFB+ABqIAAgE0EDdGopAwAiGyAbQ
    j+HIBggGRAxIBUgFlStIBdCAYYgFEI/iIQgGnx8IhRCOochGiAUQgaGIBVCOoiEIRkgBUECaiEFIAFBgAFqKQMAIRcgAS
    kDeCEUIAshAyAJIQIDQCACIA9GBEAgAUHYAGogACASQQN0aikDACIVIBVCP4ciFiAVIBYQMSABQdgBaiARQQN0aiAUQgG
    GIhYgGXwiFSABKQNYfCIZQv//////////A4M3AwAgGSAVVK0gAUHgAGopAwAgFSAWVK0gF0IBhiAUQj+IhCAafHx8fCIU
    QjqHIRogFEIGhiAZQjqIhCEVIApBAmohCiAJQRBqIQkgCEECaiEIIAZBAWohBiAHQRBqIQcMAwsgAkEgRg0DIAFB6ABqI
    AIgDGopAwAiFSAVQj+HIAMpAwAiFSAVQj+HEDEgASkDaCIVIBR8IhQgFVStIAFB8ABqKQMAIBd8fCEXIANBeGohAyACQQ
    hqIQIMAAsACwtBB0EHQbSewAAQPAALQQdBB0HEnsAAEDwACyABQagBaiAAKQMoIhQgFEI/hyAYIBhCP4ciFBAxIAEgFSA
    BKQOoASIVQgGGIhl8IhdC//////////8DgzcDsAIgAUG4AWogGCAUIBggFBAxIAEgFyAZVK0gAUGwAWopAwBCAYYgFUI/
    iIQgGnx8IhhCBoYgF0I6iIQiFyABKQO4AXwiFEL//////////wODNwO4AiABIBQgF1StIAFBwAFqKQMAIBhCOod8fEIGh
    iAUQjqIhDcDwAIgAUHIAmogAUHYAWoQBSAAIAFByAJqEGsgAEECNgI4IAFBgANqJAAPCyABQcgAaiAAIAdBA3QiDGopAw
    AiFCAUQj+HIBggGRAxIAdBAWoiDUEBdiEOIAFB0ABqKQMAIRcgASkDSCEUIAghAiAGIQMgCiEEIAshCQNAIAJFBEAgAUH
    YAWogDGogFEIBhiIWIBV8IhVC//////////8DgzcDACABQShqIAAgDUEDdCIMaikDACIbIBtCP4cgGCAZEDEgFSAWVK0g
    F0IBhiAUQj+IhCAafHwiFEI6hyEaIBRCBoYgFUI6iIQhFiAHQQJqIQkgAUEwaikDACEXQQAhAiABKQMoIRQgBSEDIAshB
    ANAIAIgCGpFBEAgAUEIaiAAIA5BA3RqKQMAIhUgFUI/hyIbIBUgGxAxIAFB2AFqIAxqIBRCAYYiGyAWfCIVIAEpAwh8Ih
    ZC//////////8DgzcDACAWIBVUrSABQRBqKQMAIBUgG1StIBdCAYYgFEI/iIQgGnx8fHwiFEI6hyEaIBRCBoYgFkI6iIQ
    hFSAFQRBqIQUgCEEBaiEIIAZBEGohBiAKQQJqIQogCSEHDAQLIAIgB2oiDUEGTQRAIAFBGGogBCkDACIVIBVCP4cgAykD
    ACIVIBVCP4cQMSABKQMYIhUgFHwiFCAVVK0gAUEgaikDACAXfHwhFyADQXhqIQMgAkF/aiECIARBCGohBAwBCwsgDUEHQ
    aSewAAQPAALIARBBk0EQCABQThqIAkpAwAiFiAWQj+HIAMpAwAiFiAWQj+HEDEgASkDOCIWIBR8IhQgFlStIAFBQGspAw
    AgF3x8IRcgAkF/aiECIANBeGohAyAEQX9qIQQgCUEIaiEJDAELCwsgBEEHQZSewAAQPAAL7wwBBH8jAEHADWsiAiQAAkA
    gACgCgAYiA0EBRwRAIAEoAoAGIgRBAUYNAQJAAkACQAJAIARBA00EQCADQX5xQQJGDQEgAiAAEI4BIAJBgAJqEC8gAkGA
    BGoQLyACQYAGahAvIAJBgAhqIAAQjgEgAkGACmoQLyACIAEQGSACQYAIaiAAQYACaiIFEJYBIAJBgAhqEKwBIAJBgAJqI
    AJBgAhqEJIBIAJBgAJqIAEQGSACQYAIaiAFEJIBIAJBgAhqIABBgARqIgMQlgEgAkGACGoQrAEgAkGABmogAkGACGoQkg
    EgBEECRg0CIAJBwAxqIAFBgAVqEF4gAkGABmogAkHADGoQogEMAwsgAiAAEI4BIAJBgAJqEC8gAkGABGoQLyACQYAGahA
    vIAIgARAZAkACQCAEQQRGIgQNACAAKAKABkEERg0AIAJBgARqIABBgAJqEJIBIAJBgARqIAFBgAJqEBkMAQsgAkHADGpB
    OBByGiACQQE2AvgMIAJBgA1qQTgQchogAkG4DWpBATYCACACQYAIakE4EHIaIAJBATYCuAggAkHACGpBOBByGiACQfgIa
    kEBNgIAIAJBgApqIABBgANqIgMQXiACQYAIaiACQYAKahCQASACQYAKaiABQYADaiIFEF4gAkGACGogAkGACmoQDyACQc
    AMahCpASAERQRAIAJBgApqIAMQXiACQcAMaiACQYAKahCQASACQYAKaiABQYACahBeIAJBwAxqIAJBgApqEA8LIAAoAoA
    GQQRHBEAgAkGACmogAEGAAmoQXiACQcAMaiACQYAKahCQASACQYAKaiAFEF4gAkHADGogAkGACmoQDwsgAkGABGogAkHA
    DGogAkGACGoQoQEgAkGABGoQZgsgAkGACGogABCOASACQYAKaiABEI4BIAJBgAhqIABBgAJqIgQQlgEgAkGACGoQrAEgA
    kGACmogAUGAAmoiBRCWASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAQQkgEgAkGACG
    ogAEGABGoiAxCWASACQYAIahCsASACQYAKaiAFEJIBIAJBgApqIAFBgARqIgUQlgEgAkGACmoQrAEgAkGABmogAkGACGo
    QkgEgAkGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAI
    ahCWASAEIAJBgAJqEJIBIAQgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQ
    YAIaiADEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBRCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIA
    JBgAhqEJYBIAJBgAhqIAMQkgEgAkGACGogBRAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgAyACQYAEahCSASADIAJBgAp
    qEJYBIAJBgAZqIAJBgApqEJYBIAJBgAhqEGYgBCACQYAIahCWAQwDCyAAIAEQBgwECyACQcAMaiABQYAFahBeIAJBgAxq
    IAJBwAxqQcAAEGcaIAJBgAZqIAJBgAxqEKMBCyACQYAGahBmIAJBgAhqIAIQkgEgAkGACGoQKyACQYACaiACQYAIahCWA
    SAFIAJBgAJqEJIBIAJBgARqIAJBgAhqEJIBIAJBgAhqIAAQkgEgAkGACGogAxCWASACQYAIahCsASACQYAKaiABEJIBIA
    JBgApqIAFBgARqEJYBIAJBgApqEKwBIAJBgAhqIAJBgApqEBkgAkGABGogAkGACGoQlgEgAkGACGogAxCSAQJAIARBAkc
    EQCACQcAMaiABQYAFahBeIAJBgAhqIAJBwAxqEKIBDAELIAJBwAxqIAFBgAVqEF4gAkGADGogAkHADGpBwAAQZxogAkGA
    CGogAkGADGoQowELIAJBgAhqEGYgAkGACmogAkGACGoQkgEgAkGACmoQKyADIAJBgARqEJIBIAMgAkGACmoQlgEgAkGAB
    mogAkGACmoQlgEgAkGACGoQZiAFIAJBgAhqEJYBCyACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIABBBT
    YCgAYgABCZAQwBCyAAIAEQbAsgAkHADWokAAuaCQIPfwt+IwBBwAJrIgIkACACQeAAakGgp8AAEF8gAEE4EHIhDCACQZg
    BakHwABByGiACQZACakEwEHIaIAwQdCACIAEpAwAiFEL9//P/z///+QF+Qv//////////A4MiETcDiAIgAkHQAGogEUIA
    IAIpA2AiGCAYQj+HIhoQMSAUIAIpA1AiEXwiFiARVK0gAkHYAGopAwAgFEI/h3x8IhRCOocgASkDCCIRQj+HfCARIBRCB
    oYgFkI6iIQiEXwiEiARVK18IRNBASEDAkADQAJAIANBB0YEQCACQZACaiEJIAJB6ABqIQpBByEEIAJB4ABqIQ0gAkGIAm
    ohDkEGIQ8MAQsgA0EBdiIAQQFqIQUgCiAAayEGIAkgAEEDdCIHayEAIAdBCGohCCACQUBrIANBA3QiBCACQeAAamopAwA
    iFiAWQj+HIhQgAikDiAIiESARQj+HEDEgAkHIAGopAwAgEiAVfCIRIBJUrSATIBd8fHwgESACKQNAfCITIBFUrXwhEiAD
    QQFqIQcDQCADIAVNBEAgAkGIAmogBGogE0L9//P/z///+QF+Qv//////////A4MiETcDACACQTBqIBFCACAYIBoQMSACQ
    SBqIBFCACAWIBQQMSACQZgBaiADQQR0aiIAIAJBKGopAwAiGzcDCCAAIAIpAyAiGTcDACACKQMwIhEgE3wiFiARVK0gAk
    E4aikDACASfHwiFEI6hyABIAdBA3RqKQMAIhFCP4d8IBEgFEIGhiAWQjqIhCIRfCISIBFUrXwhEyAVIBl8IhUgGVStIBc
    gG3x8IRcgCUEIaiEJIApBAWohCiAHIQMMAwsgBkEGSw0DIAJBEGogAkHgAGogCGopAwAgAkHgAGogAGopAwB9IhEgEUI/
    hyACQYgCaiAAaikDACACQYgCaiAIaikDAH0iESARQj+HEDEgAikDECIRIBN8IhMgEVStIAJBGGopAwAgEnx8IRIgBUEBa
    iEFIABBeGohACAGQX9qIQYgCEEIaiEIDAALAAsLA0ACQCAEQQ1HBEAgDyAEQQF2IgBrIQUgDiAAQQN0IgtrIRAgDSALay
    EIIBMgF3wgEiAVfCITIBJUrXwhEiAEQQFqIQdBMCEAIAkhBiAKIQMDQCAAIAtGDQIgBUEGTQRAIAIgAyALaikDACAAIAh
    qKQMAfSIRIBFCP4cgACAQaikDACAGIAtqKQMAfSIRIBFCP4cQMSACKQMAIhEgE3wiEyARVK0gAkEIaikDACASfHwhEiAF
    QX9qIQUgBkEIaiEGIANBCGohAyAAQXhqIQAMAQsLIAVBB0HknsAAEDwACyAMIBJC//////////8DgzcDMCACQcACaiQAD
    wsgBEEDdCAMakFIaiATQv//////////A4M3AwAgEkI6hyABIAdBA3RqKQMAIhFCP4d8IBEgEkIGhiATQjqIhCIRfCISIB
    FUrXwhEyAXIARBBHQgAmpBOGoiAEEIaikDAH0gFSAAKQMAIhFUrX0hFyAOQQhqIQ4gDUEIaiENIA9BAWohDyAVIBF9IRU
    gByEEDAALAAsgBkEHQdSewAAQPAAL+QkBBH8jAEGACWsiAiQAIAJBgAhqIAAQXiACIAJBgAhqEF4gAkGACGogAEGAAWoi
    BBBeIAJBgAFqIAJBgAhqEF4gAkGACGogARBeIAIgAkGACGoQDyACQYAIaiABQYABaiIFEF4gAkGAAWogAkGACGoQDyAAK
    AKABiEDAkACQCABKAKABkECRwRAIANBAkYNASACQYAIaiAAQYAFahBeIAJBgAJqIAJBgAhqEF4gAkGACGogAUGABWoQXi
    ACQYACaiACQYAIahAPDAILIANBAkYEQCACQYAIaiAAQYAFahBeIAJBgAdqIAJBgAhqQcAAEGcaIAJBgAZqIAJBgAdqEIU
    BIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGABmogAkGAB2oQSCACQYAIakE4EHIaIAJBATYCuAggAkHA
    CGpBOBByIAJB+AhqQQE2AgAgAkGACGogAkGABmoQpQEQsgEgAkGAAmogAkGACGpBgAEQZxoMAgsgAkGACGogAEGABWoQX
    iACQYACaiACQYAIahBeIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAEMAQsgAkGACG
    ogAUGABWoQXiACQYACaiACQYAIahBeIAJBgAhqIABBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAE
    LIAJBgAhqIAAQXiACQYADaiACQYAIahBeIAJBgAhqIAEQXiACQYAEaiACQYAIahBeIAJBgAhqIAQQXiACQYADaiACQYAI
    ahCVASACQYADahCoASACQYAIaiAFEF4gAkGABGogAkGACGoQlQEgAkGABGoQqAEgAkGABWogAkGAA2oQXiACQYAFaiACQ
    YAEahAPIAJBgAZqIAIQXiACQYAGaiACQYABahCVASACQYAGahA6IAJBgAVqIAJBgAZqEJUBIAJBgAhqIAAQXiACQYADai
    ACQYAIahCQASACQYAIaiAAQYAFaiIDEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogARBeIAJBgARqIAJBgAh
    qEJABIAJBgAhqIAFBgAVqIgEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAHaiACQYADahBeIAJBgAdqIAJBgARq
    EA8gAkGABmogAhCQASACQYAGaiACQYACahCVASACQYAGahA6IAJBgAdqIAJBgAZqEJUBIAJBgAhqIAQQXiACQYADaiACQ
    YAIahCQASACQYAIaiADEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogBRBeIAJBgARqIAJBgAhqEJABIAJBgA
    hqIAEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAIaiACQYADahBeIAJBgAhqIAJBgARqEA8gAkGABmogAkGAAWo
    QkAEgAkGABmogAkGAAmoQlQEgAkGABmoQOiACQYAIaiACQYAGahCVASACQYABahBVIAIgAkGAAWoQlQEgACACIAJBgAVq
    EKEBIAJBgAJqEFUgAkGAAmoQqAEgAEGAA2ogAkGAAmoQkAEgAEGAAmoQqQEgAkGACGoQqAEgAkGACGoQVSAAQYAEaiIBI
    AJBgAhqIAJBgAdqEKEBIAAQrAEgARCsASAAQQQ2AoAGIAJBgAlqJAALnwgBB38jAEGgC2siASQAIAFBCGpBoKfAABBfIA
    FBCGpBARCeAQNAIAJBMEYEQCABIAEpAzhCAYc3AzggAUEIakEBEJ4BIAFBCGpBARA7QQAhAiABQYABakE4EHIaIAFB4Ap
    qQTgQchogAUGACWpBOBByGiABQQE2ArgBIAFBwAFqQTgQciEEIAFB+AFqQQE2AgAgAUGAAmpBOBByGiABQbgCakEBNgIA
    IAFBwAJqQTgQchogAUH4AmpBATYCACABQYADakE4EHIaIAFBuANqQQE2AgAgAUHAA2pBOBByGiABQfgDakEBNgIAIAFBg
    ARqQTgQchogAUG4BGpBATYCACABQcAEakE4EHIaIAFB+ARqQQE2AgAgAUGABWpBOBByGiABQbgFakEBNgIAIAFBwAVqQT
    gQchogAUH4BWpBATYCACABQYAGakE4EHIaIAFBuAZqQQE2AgAgAUHABmpBOBByGiABQfgGakEBNgIAIAFBgAdqQTgQcho
    gAUG4B2pBATYCACABQcAHakE4EHIaIAFB+AdqQQE2AgAgAUGACGogAUHgCmpBOBBnGiABQbgIakEBNgIAIAFBwAhqIAFB
    gAlqQTgQZxogAUH4CGpBATYCACABQYAJakHnABByGiABQegJaiAAEIUBIAFB6AlqEEQgAUGoCmogAUEIahBfIAFBqApqE
    EQgAUGoCmoQKUEDaiIFQQJ2IgNBAWohBgJAAkACQAJAAkACQANAAkAgAiAGRgRAIAFBgAFqEGkgBCABQegJahClASABQe
    AKakE4EHIaIAFBATYCmAtBgHkhAgwBCyABQagKaiABQagKakEEEIwBIgcQngEgAUGoCmoQRCACQecARg0CIAFBgAlqIAJ
    qIAc6AAAgAUGoCmpBBBA7IAJBAWohAgwBCwsDQCACBEAgAUHgCmogAUGAAWogAmoiBEHAB2oQpQEgBEGACGoiBCABQeAK
    ahClASAEIAFB6AlqEEggAkFAayECDAELCyAFQZwDTw0BIAFBgAlqIANqLAAAIgJBD0sNAiABQUBrIAFBgAFqIAJBBnRqE
    IUBIANBf2ohAgNAIAJBf0YNBiABQUBrEAMgAUFAaxADIAFBQGsQAyABQUBrEAMgAkHmAEsNBCABQYAJaiACai0AACIDQQ
    9LDQUgAUFAayABQYABaiADQQZ0ahBIIAJBf2ohAgwACwALQecAQecAQYSjwAAQPAALIANB5wBBlKPAABA8AAsgAkEQQaS
    jwAAQPAALIAJB5wBBtKPAABA8AAsgA0EYdEEYdUEQQcSjwAAQPAALIAFBQGsQEiAAIAFBQGsQpQEgAUGgC2okAAUgAUEI
    aiACaiIDIANBCGopAwBCOYZCgICAgICAgIACgyADKQMAQgGHhDcDACACQQhqIQIMAQsLC8EHAhJ/BX4jAEGQAmsiBCQAI
    ABB8AAQciEPIARBMGpB4AEQchogBEEwaiEAAkADQCADQThGBEACQCAPIAQpAzAiGEL//////////wODNwMAIAFBCGohCS
    ACQQhqIQogAiEMIAEhDUF4IRBBASEGIBghFSAEQThqKQMAIhkhFwNAAkAgF0IGhiAVQjqIhCEWIBdCOochFyAGQQdGBEA
    gAUEIaiEMIAJBCGohDUEHIQBBBiEKDAELIAsgBkEBdiIFayEAIAwgBUEDdCIIayERIA0gCGshEiAEQTBqIAZBBHRqIgVB
    CGopAwAgGXwgBSkDACIVIBh8IhggFVStfCIZIBd8IBYgGHwiFSAYVK18IRcgCEFQaiETIAggEGohFCAGQQFqIQ5BACEDI
    AkhByAKIQUDQCADIBRGBEAgDyAGQQN0aiAVQv//////////A4M3AwAgDEEIaiEMIA1BCGohDSALQQFqIQsgEEF4aiEQIA
    4hBgwDCyADIBNGDQYgAEEGSw0DIARBEGogAyARaikDACAFIAhqKQMAfSIWIBZCP4cgByAIaikDACADIBJqKQMAfSIWIBZ
    CP4cQMSAEKQMQIhYgFXwiFSAWVK0gBEEYaikDACAXfHwhFyAAQX9qIQAgB0EIaiEHIAVBCGohBSADQXhqIQMMAAsACwsD
    QAJAIABBDUcEQCAKIABBAXYiBWshByACIAVBA3QiCWshCCABIAlrIQsgGSAAQQR0IARqQUBqIgVBCGopAwB9IBggBSkDA
    CIVVK19IhkgF3wgGCAVfSIYIBZ8IhcgGFStfCEVIABBAWohBkEwIQMgDCEFIA0hDgNAIAMgCUYNAiAHQQZNBEAgBCADIA
    hqKQMAIAkgDmopAwB9IhYgFkI/hyAFIAlqKQMAIAMgC2opAwB9IhYgFkI/hxAxIAQpAwAiFiAXfCIXIBZUrSAEQQhqKQM
    AIBV8fCEVIAdBf2ohByAFQQhqIQUgDkEIaiEOIANBeGohAwwBCwsgB0EHQYSewAAQPAALIA8gFjcDaCAEQZACaiQADwsg
    DyAAQQN0aiAXQv//////////A4M3AwAgFUIGhiAXQjqIhCEWIAJBCGohAiABQQhqIQEgCkEBaiEKIBVCOochFyAGIQAMA
    AsACwUgBEEgaiACIANqKQMAIhUgFUI/hyABIANqKQMAIhUgFUI/hxAxIAAgBEEoaikDADcDCCAAIAQpAyA3AwAgAEEQai
    EAIANBCGohAwwBCwsgAEEHQfSdwAAQPAALQQdBB0HkncAAEDwAC8sIAQV/IABBeGoiASAAQXxqKAIAIgNBeHEiAGohAgJ
    AAkAgA0EBcQ0AIANBA3FFDQEgASgCACIDIABqIQAgASADayIBQey4wQAoAgBGBEAgAigCBEEDcUEDRw0BQeS4wQAgADYC
    ACACIAIoAgRBfnE2AgQgASAAQQFyNgIEIAAgAWogADYCAA8LIAEgAxAVCwJAIAJBBGoiBCgCACIDQQJxBEAgBCADQX5xN
    gIAIAEgAEEBcjYCBCAAIAFqIAA2AgAMAQsCQCACQfC4wQAoAgBHBEBB7LjBACgCACACRg0BIAIgA0F4cSICEBUgASAAIA
    JqIgBBAXI2AgQgACABaiAANgIAIAFB7LjBACgCAEcNAkHkuMEAIAA2AgAPC0HwuMEAIAE2AgBB6LjBAEHouMEAKAIAIAB
    qIgA2AgAgASAAQQFyNgIEQey4wQAoAgAgAUYEQEHkuMEAQQA2AgBB7LjBAEEANgIAC0GMucEAKAIAIgIgAE8NAkHwuMEA
    KAIAIgBFDQICQEHouMEAKAIAIgNBKUkNAEH8uMEAIQEDQCABKAIAIgQgAE0EQCAEIAEoAgRqIABLDQILIAEoAggiAQ0AC
    wtBlLnBAAJ/Qf8fQYS5wQAoAgAiAEUNABpBACEBA0AgAUEBaiEBIAAoAggiAA0ACyABQf8fIAFB/x9LGws2AgAgAyACTQ
    0CQYy5wQBBfzYCAA8LQey4wQAgATYCAEHkuMEAQeS4wQAoAgAgAGoiADYCACABIABBAXI2AgQgACABaiAANgIADwtBlLn
    BAAJ/AkAgAEGAAk8EQEEfIQIgAUIANwIQIABB////B00EQCAAQQYgAEEIdmciAmtBH3F2QQFxIAJBAXRrQT5qIQILIAFB
    HGogAjYCACACQQJ0QeS3wQBqIQMCQAJAAkACQAJAQdi1wQAoAgAiBEEBIAJBH3F0IgVxBEAgAygCACIDQQRqKAIAQXhxI
    ABHDQEgAyECDAILQdi1wQAgBCAFcjYCACADIAE2AgAMAwsgAEEAQRkgAkEBdmtBH3EgAkEfRht0IQQDQCADIARBHXZBBH
    FqQRBqIgUoAgAiAkUNAiAEQQF0IQQgAiEDIAJBBGooAgBBeHEgAEcNAAsLIAIoAggiACABNgIMIAIgATYCCCABQRhqQQA
    2AgAgASACNgIMIAEgADYCCAwCCyAFIAE2AgALIAFBGGogAzYCACABIAE2AgwgASABNgIIC0GUucEAQZS5wQAoAgBBf2oi
    ADYCACAADQNBhLnBACgCACIADQFB/x8MAgsgAEEDdiICQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASACdCICcQRAIAAoA
    ggMAQtB1LXBACACIANyNgIAIAALIQIgACABNgIIIAIgATYCDCABIAA2AgwgASACNgIIDwtBACEBA0AgAUEBaiEBIAAoAg
    giAA0ACyABQf8fIAFB/x9LGws2AgALC9AHAgp/An4jAEEwayIIJABBJyECAkAgADUCACIMQpDOAFQEQCAMIQ0MAQsDQCA
    IQQlqIAJqIgBBfGogDEKQzgCAIg1C8LF/fiAMfKciA0H//wNxQeQAbiIEQQF0QeaowABqLwAAOwAAIABBfmogBEGcf2wg
    A2pB//8DcUEBdEHmqMAAai8AADsAACACQXxqIQIgDEL/wdcvViANIQwNAAsLIA2nIgBB4wBKBEAgAkF+aiICIAhBCWpqI
    A2nIgNB//8DcUHkAG4iAEGcf2wgA2pB//8DcUEBdEHmqMAAai8AADsAAAsCQCAAQQpOBEAgAkF+aiIFIAhBCWpqIABBAX
    RB5qjAAGovAAA7AAAMAQsgAkF/aiIFIAhBCWpqIABBMGo6AAALQScgBWshA0EBIQJBK0GAgMQAIAEoAgAiAEEBcSIGGyE
    EIABBHXRBH3VB9KrAAHEhByAIQQlqIAVqIQUCQCABKAIIQQFHBEAgASAEIAcQUw0BIAEoAhggBSADIAFBHGooAgAoAgwR
    BQAhAgwBCyABQQxqKAIAIgkgAyAGaiIGTQRAIAEgBCAHEFMNASABKAIYIAUgAyABQRxqKAIAKAIMEQUAIQIMAQsCQAJAA
    kACQCAAQQhxBEAgASgCBCEKIAFBMDYCBCABLQAgIQsgAUEBOgAgIAEgBCAHEFMNBUEAIQIgCSAGayIAIQRBASABLQAgIg
    cgB0EDRhtBA3FBAWsOAwIBAgMLQQAhAiAJIAZrIgAhCQJAAkACQEEBIAEtACAiBiAGQQNGG0EDcUEBaw4DAQABAgsgAEE
    BdiECIABBAWpBAXYhCQwBC0EAIQkgACECCyACQQFqIQIDQCACQX9qIgJFDQQgASgCGCABKAIEIAEoAhwoAhARAwBFDQAL
    QQEhAgwECyAAQQF2IQIgAEEBakEBdiEEDAELQQAhBCAAIQILIAJBAWohAgJAA0AgAkF/aiICRQ0BIAEoAhggASgCBCABK
    AIcKAIQEQMARQ0AC0EBIQIMAgsgASgCBCEHQQEhAiABKAIYIAUgAyABKAIcKAIMEQUADQEgBEEBaiEAIAEoAhwhAyABKA
    IYIQQDQCAAQX9qIgAEQCAEIAcgAygCEBEDAEUNAQwDCwsgASALOgAgIAEgCjYCBEEAIQIMAQsgASgCBCEGQQEhAiABIAQ
    gBxBTDQAgASgCGCAFIAMgASgCHCgCDBEFAA0AIAlBAWohACABKAIcIQMgASgCGCEBA0AgAEF/aiIARQRAQQAhAgwCCyAB
    IAYgAygCEBEDAEUNAAsLIAhBMGokACACC7gGAQV/IwBBgAhrIgIkACACIAAQXiACIAEQDyACQYABaiAAQYABaiIDEF4gA
    kGAAWogAUGAAWoiBRAPIAJBgAJqIABBgAJqIgQQXiACQYACaiABQYACaiIGEA8gAkGAA2ogABBeIAJBgANqIAMQlQEgAk
    GAA2oQqAEgAkGABGogARBeIAJBgARqIAUQlQEgAkGABGoQqAEgAkGAA2ogAkGABGoQDyACQYAEaiACEJABIAJBgARqIAJ
    BgAFqEJUBIAJBgANqIAJBgARqEH0gAkGAA2oQqAEgAkGABGogAxCQASACQYAEaiAEEJUBIAJBgARqEKgBIAJBgAVqIAUQ
    XiACQYAFaiAGEJUBIAJBgAVqEKgBIAJBgARqIAJBgAVqEA8gAkGABWogAkGAAWoQkAEgAkGABWogAkGAAmoQlQEgAkGAB
    GogAkGABWoQfSACQYAEahCoASACQYAFaiAAEJABIAJBgAVqIAQQlQEgAkGABWoQqAEgAkGABmogARBeIAJBgAZqIAYQlQ
    EgAkGABmoQqAEgAkGABWogAkGABmoQDyACQYAGaiACEJABIAJBgAZqIAJBgAJqEJUBIAJBgAZqIAJBgAVqELUBIAJBgAZ
    qEKgBIAJBgAVqIAIQkAEgAkGABWogAhCVASACIAJBgAVqEJUBIAIQqAEgAkGAAmpBDBCfASACQYACahBVIAJBgAJqEKgB
    IAJBgAdqIAJBgAFqEF4gAkGAB2ogAkGAAmoQlQEgAkGAB2oQqAEgAkGAAWogAkGAAmoQfSACQYABahCoASACQYAGakEME
    J8BIAJBgAZqEFUgAkGABmoQqAEgAkGABWogAkGABmoQkAEgAkGABWogAkGABGoQDyACQYACaiACQYADahCQASACQYACai
    ACQYABahAPIAJBgAVqIAJBgAJqELUBIAJBgAZqIAIQDyACQYABaiACQYAHahAPIAJBgAZqIAJBgAFqEJUBIAIgAkGAA2o
    QDyACQYAHaiACQYAEahAPIAJBgAdqIAIQlQEgACACQYAFahCQASAAEKgBIAMgAkGABmoQkAEgAxCoASAEIAJBgAdqEJAB
    IAQQqAEgAkGACGokAAv2BQEFfyMAQYAEayICJAAgAiAAEIUBIAIgARBIIAJBQGsgAEFAayIDEIUBIAJBQGsgAUFAayIFE
    EggAkGAAWogAEGAAWoiBBCFASACQYABaiABQYABaiIGEEggAkHAAWogABCFASACQcABaiADEHggAkHAAWoQRCACQYACai
    ABEIUBIAJBgAJqIAUQeCACQYACahBEIAJBwAFqIAJBgAJqEEggAkGAAmogAhClASACQYACaiACQUBrEHggAkHAAWogAkG
    AAmoQgAEgAkHAAWoQRCACQYACaiADEKUBIAJBgAJqIAQQeCACQYACahBEIAJBwAJqIAUQhQEgAkHAAmogBhB4IAJBwAJq
    EEQgAkGAAmogAkHAAmoQSCACQcACaiACQUBrEKUBIAJBwAJqIAJBgAFqEHggAkGAAmogAkHAAmoQgAEgAkGAAmoQRCACQ
    cACaiAAEKUBIAJBwAJqIAQQeCACQcACahBEIAJBgANqIAEQhQEgAkGAA2ogBhB4IAJBgANqEEQgAkHAAmogAkGAA2oQSC
    ACQYADaiACEKUBIAJBgANqIAJBgAFqEHggAkGAA2ogAkHAAmoQswEgAkGAA2oQRCACQcACaiACEKUBIAJBwAJqIAIQeCA
    CIAJBwAJqEHggAhBEIAJBgAFqQQwQUiACQcADaiACQUBrEIUBIAJBwANqIAJBgAFqEHggAkHAA2oQRCACQUBrIAJBgAFq
    EIABIAJBQGsQRCACQYADakEMEFIgAkHAAmogAkGAA2oQpQEgAkHAAmogAkGAAmoQSCACQYABaiACQcABahClASACQYABa
    iACQUBrEEggAkHAAmogAkGAAWoQswEgAkGAA2ogAhBIIAJBQGsgAkHAA2oQSCACQYADaiACQUBrEHggAiACQcABahBIIA
    JBwANqIAJBgAJqEEggAkHAA2ogAhB4IAAgAkHAAmoQpQEgABBEIAMgAkGAA2oQpQEgAxBEIAQgAkHAA2oQpQEgBBBEIAJ
    BgARqJAALxQUBBH8jAEHwEmsiACQAIAAQOEF/IQEgABCIAUUEQCAAQYADakE4EHIaIABBuANqQTgQchogAEG4A2ogAEGA
    A2oQVCAAQfAKakG4gMAAEF8gAEHwDWpB8IDAABBfIABB8ANqIABB8ApqIABB8A1qEEkgAEHwBGpBOBByGiAAQQE2AqgFI
    ABBsAVqQTgQchogAEHoBWpBATYCACAAQfAFakE4EHIaIABBATYCqAYgAEGwBmpBOBByGiAAQegGakEBNgIAIABB8AZqQT
    gQchogAEEBNgKoByAAQbAHakE4EHIaIABB6AdqQQE2AgBBf2ohAyAAQfAHahAqIABB8AdqIAAQfiAAQfAKahAqIABB8Ap
    qIABB8AdqEH4gAEHwDWoQKiAAQfANaiAAQfAHahB+IABB8A1qEJwBAkACQAJAA0AgAiEBIANBAkkNAyAAQfAKaiAAQfAE
    aiAAQfAFaiAAQfAGahAlIAFBxABNBEAgAEHwEGogAEHwBGogAEHwBWogAEHwBmoQRiABQQh0QdCrwABqIABB8BBqEJIBI
    AFBAWohAgJAAkAgAEG4A2ogA0F/aiIDEFcgAEGAA2ogAxBXa0EBag4DAQMAAwsgAEHwCmogAEHwB2ogAEHwBGogAEHwBW
    ogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYgAkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQI
    MAgsgAEHwCmogAEHwDWogAEHwBGogAEHwBWogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYg
    AkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQIMAQsLIAFBxQBBvIHAABA8AAtBxQBBxQBBzIHAABA8AAtBxQBBxQBB3IHAA
    BA8AAtBACEBCyAAQfASaiQAIAEL8gQBBH8jAEGADGsiAiQAIAIgABCOASACQYACahAvIAJBgARqIABBgAJqIgMQjgEgAk
    GABmoQLyACQYAIaiAAEI4BIAJBgApqIAEQjgEgAiABEBkgAkGABGogAUGAAmoiBBAZIAJBgAhqIAMQlgEgAkGACmogBBC
    WASACQYAIahCsASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAMQkgEgAkGACGogAEGA
    BGoiBRCWASACQYAKaiAEEJIBIAJBgApqIAFBgARqIgQQlgEgAkGACGoQrAEgAkGACmoQrAEgAkGABmogAkGACGoQkgEgA
    kGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAIahCWAS
    ADIAJBgAJqEJIBIAMgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQYAIaiA
    FEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBBCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIAJBgAhq
    EJYBIAJBgAhqIAUQkgEgAkGACGogBBAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgBSACQYAEahCSASAFIAJBgApqEJYBI
    AJBgAZqIAJBgApqEJYBIAJBgAhqEGYgAyACQYAIahCWASACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIA
    BBBTYCgAYgABCZASACQYAMaiQAC68EAQV/IwBBkAZrIgIkACAAQUBrIQQCQCABQfgAaigCACABKAI4aqwgAEH4AGooAgA
    iAyAAKAI4IgVqrH5CgICAEFMNACAFQQJOBH8gABASIAAoAngFIAMLQQJIDQAgBBASCyACQaCnwAAQX0EAIQMgAkE4akHw
    ABByGiABQUBrIQUDQCADQThGBEAgAkHwAGohBkEAIQMDQCADQThGRQRAIAMgBmogAiADaikDADcDACADQQhqIQMMAQsLI
    AJBqAFqIAAQXyACQeABaiABEF8gAkGYAmogACABEAggAkGIA2ogBCAFEAggAkGoAWogBBBhIAJBqAFqEEQgAkHgAWogBR
    BhIAJB4AFqEEQgAkH4A2ogAkGoAWogAkHgAWoQCEEAIQMgAkHoBGpB8AAQchoDQCADQfAARkUEQCACQegEaiADaiACQZg
    CaiADaikDADcDACADQQhqIQMMAQsLIAJB6ARqIAJBiANqEGVBACEDA0AgA0HwAEZFBEAgAkGIA2ogA2oiASACQThqIANq
    KQMAIAEpAwB9NwMAIANBCGohAwwBCwsgAkGYAmogAkGIA2oQZSACQZgCahBFIAJB+ANqIAJB6ARqEGQgAkH4A2oQRSACQ
    dgFaiACQZgCahAFIAAgAkHYBWoQayAAQQM2AjggAkHYBWogAkH4A2oQBSAEIAJB2AVqEGsgAEECNgJ4IAJBkAZqJAAFIA
    JBOGogA2pCADcDACADQQhqIQMMAQsLC5QEAQF/IwBB0CJrIgMkACADQcAWakG4gMAAEF8gA0HIHGpB8IDAABBfIANBCGo
    gA0HAFmogA0HIHGoQSSADQYgBakE4EHIaIANBwAFqQTgQchogA0H4AWoQKgJAIAIQhAFFBEAgA0H4BGoQKiADQfgEaiAB
    EH4gA0H4BGoQSiADQfgHahBLIANB+AdqIAIQfyADQfgHahBHIANByBxqIANB+AdqEIUBIANBuAlqIANByBxqEIUBIANBy
    BxqIANBuAhqEIUBIANB+AlqIANByBxqEIUBIANBuApqECogA0G4DWoQYCADQbgKaiADQfgEahB+IANBwBNqECogA0HAE2
    ogA0H4BGoQfiADQcATahCcASADQcABaiADQYgBahBUQX9qIQIDQCACQQFNBEAgA0G4DWoQkwEgACADQbgNakGIBhBnGgw
    DBSADQbgNahAbIANBwBZqIANBuApqIANBuAlqIANB+AlqEBcCQAJAAkAgA0HAAWogAkF/aiICEFcgA0GIAWogAhBXa0EB
    ag4DAQIAAgsgA0HIHGogA0G4CmogA0H4BGogA0G4CWogA0H4CWoQFiADQcAWaiADQcgcahAGDAELIANByBxqIANBuApqI
    ANBwBNqIANBuAlqIANB+AlqEBYgA0HAFmogA0HIHGoQBgsgA0G4DWogA0HAFmoQBAwBCwALAAsgABBgCyADQdAiaiQAC8
    MDARV/A0AgAUHAAUYEQAJAIABBKGohCyAAQRRqKAIAIgwhCCAAQRBqKAIAIg0hAyAAQQxqKAIAIg4hAiAAKAIIIg8hASA
    AQRhqKAIAIhAhCiAAQRxqKAIAIhEhBCAAQSBqKAIAIhIhByAAQSRqKAIAIhMhBgNAIAchCSAEIQcgCiEEIAVBgAJGDQEg
    AiADcSEUIAIgA3MhFSAFIAtqKAIAIAVB9J7AAGooAgAgBEEadyAEQRV3cyAEQQd3cyAGaiAJIARBf3NxIAQgB3FyampqI
    gYgCGohCiAFQQRqIQUgAyEIIAIhAyABIQIgAUEedyABQRN3cyABQQp3cyAUIAEgFXFzaiAGaiEBIAkhBgwACwALBSAAIA
    FqIgNB6ABqIANBzABqKAIAIANBKGooAgAgA0EsaigCACICQRl3IAJBDndzIAJBA3ZzIANB4ABqKAIAIgJBD3cgAkENd3M
    gAkEKdnNqamo2AgAgAUEEaiEBDAELCyAAIAYgE2o2AiQgACAJIBJqNgIgIAAgByARajYCHCAAIAQgEGo2AhggACAIIAxq
    NgIUIAAgAyANajYCECAAIAIgDmo2AgwgACABIA9qNgIIC9YDAgZ/An4jAEHwAGsiASQAIAFBoKfAABBfIAFBOGogARBfI
    AAQRAJAAkACQCABAn8gACgCOCICQRBMBEAgAkF/ahA5DAELIAEpAzAiCEIBfCIHIAhUDQEgACkDMCIIQoCAgICAgICAgH
    9RQQAgB0J/URsNAiABQThqIAggB3+nECghByABIAEpA2ggB0I6hnw3A2ggACABQThqEGIgABBEQQILIgMQLSAAQQhqIQQ
    DQCADRQ0DIAEgASkDCEI5hkKAgICAgICAgAKDIAEpAwBCAYeEIgc3AwAgASAAKQMAIAd9IgdC//////////8DgzcDOEEA
    IQIDQCAHQjqHIQcgAkEoRkUEQCABIAJqIgVBCGoiBiAFQRBqKQMAQjmGQoCAgICAgICAAoMgBikDAEIBh4QiCDcDACABI
    AJqQUBrIAIgBGopAwAgCH0gB3wiB0L//////////wODNwMAIAJBCGohAgwBCwsgASABKQMwQgGHIgg3AzAgASAAKQMwIA
    h9IAd8Igc3A2ggACABQThqIAdCP4enQQFqEE8gA0F/aiEDDAALAAtBoKLAAEEZQbyiwAAQWwALQdCiwABBH0G8osAAEFs
    ACyAAQQE2AjggAUHwAGokAAuhAwEBfyMAQZADayIGJAAgBkEIakHAABByGiAGQcgAakGoAhByGiAGQcgAahBDA0AgAQRA
    IAZByABqQQAQPiABQX9qIQEMAQUCQCACBEAgBkHIAGogAiADEHoLIAQEQCAGQcgAaiAEIAUQegsgBkGIA2pCADcDACAGQ
    YADakIANwMAIAZB+AJqQgA3AwAgBkIANwPwAiAGKAJIIQEgBigCTCECIAZByABqQYABED4DQCAGKAJIQf8DcUHAA0ZFBE
    AgBkHIAGpBABA+DAELCyAGQawBaiABNgIAIAZBqAFqIAI2AgAgBkHIAGoQEUEAIQJBACEBA0AgAUEgRkUEQCAGQfACaiA
    BaiABQXxxIAZqQdAAaigCACACQX9zQRhxdjoAACACQQhqIQIgAUEBaiEBDAELCyAGQcgAahBDQQAhAQNAIAFBIEZFBEAg
    BkEIaiABaiAGQfACaiABai0AADoAACABQQFqIQEMAQsLQQAhAQNAIAFBIEYNASAAIAFqIAZBCGogAWotAAA6AAAgAUEBa
    iEBDAALAAsLCyAGQZADaiQAC6EDAQN/IwBBgAZrIgEkACABIABBgAFqIgMQXiABQYABaiADEF4gAUGAAWoQMiABQYACai
    ABEF4gAUGAAmogAEGAAmoiAhAPIAFBgANqIAIQXiABQYADahAyIAIgAUGAAWoQkAEgAiABQYABahCVASACEKgBIAIQpwE
    gAhCnASACEKgBIAFBgANqQQwQnwEgAUGAA2oQVSABQYADahCoASABQYAEaiABQYADahBeIAFBgARqIAIQDyABQYAFaiAB
    QYABahBeIAFBgAVqIAFBgANqEJUBIAFBgAVqEKgBIAIgAUGAAmoQDyABQYACaiABQYADahCQASABQYACaiABQYADahCVA
    SABQYADaiABQYACahCVASABQYADahCoASABQYABaiABQYADahB9IAFBgAFqEKgBIAFBgAVqIAFBgAFqEA8gAUGABWogAU
    GABGoQlQEgAUGAAmogABCQASABQYACaiABEA8gACABQYABahCQASAAEKgBIAAgAUGAAmoQDyAAEKcBIAAQqAEgAyABQYA
    FahCQASADEKgBIAFBgAZqJAALhQMBBH8CQAJAIAFBgAJPBEAgAEEYaigCACEEAkACQCAAIAAoAgwiAkYEQCAAQRRBECAA
    QRRqIgIoAgAiAxtqKAIAIgENAUEAIQIMAgsgACgCCCIBIAI2AgwgAiABNgIIDAELIAIgAEEQaiADGyEDA0AgAyEFIAEiA
    kEUaiIDKAIAIgFFBEAgAkEQaiEDIAIoAhAhAQsgAQ0ACyAFQQA2AgALIARFDQIgACAAQRxqKAIAQQJ0QeS3wQBqIgEoAg
    BHBEAgBEEQQRQgBCgCECAARhtqIAI2AgAgAkUNAwwCCyABIAI2AgAgAg0BQdi1wQBB2LXBACgCAEF+IAAoAhx3cTYCAA8
    LIABBDGooAgAiAiAAQQhqKAIAIgBHBEAgACACNgIMIAIgADYCCA8LQdS1wQBB1LXBACgCAEF+IAFBA3Z3cTYCAAwBCyAC
    IAQ2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgAEEUaigCACIARQ0AIAJBFGogADYCACAAIAI2AhgLC7MCAQF/IwBBg
    AtrIgUkACAFEC8gBUGAAmoQLyAFQYAEahAvIAVBgAZqQTgQchogBUEBNgK4BiAFQcAGakE4EHIaIAVB+AZqQQE2AgAgBU
    GAB2pBOBByGiAFQQE2ArgHIAVBwAdqQTgQchogBUH4B2pBATYCACAFQYAIakE4EHIaIAVBATYCuAggBUHACGpBOBByGiA
    FQfgIakEBNgIAIAEgAiAFQYAGaiAFQYAHaiAFQYAIahAeIAVBgAhqIAMQoAEgBUGABmogBBCgASAFQYAJaiAFQYAGaiAF
    QYAHahCRASAFIAVBgAlqEJIBIAVBgAlqIAVBgAhqEJsBIAVBgARqIAVBgAlqEJIBIAVBgARqEGYgACAFIAVBgAJqIAVBg
    ARqEHYgAEEDNgKABiAFQYALaiQAC7ECAQF/IwBBgAtrIgQkACAEEC8gBEGAAmoQLyAEQYAEahAvIARBgAZqQTgQchogBE
    EBNgK4BiAEQcAGakE4EHIaIARB+AZqQQE2AgAgBEGAB2pBOBByGiAEQQE2ArgHIARBwAdqQTgQchogBEH4B2pBATYCACA
    EQYAIakE4EHIaIARBATYCuAggBEHACGpBOBByGiAEQfgIakEBNgIAIAEgBEGABmogBEGAB2ogBEGACGoQJSAEQYAIaiAC
    EKABIARBgAZqIAMQoAEgBEGACWogBEGABmogBEGAB2oQkQEgBCAEQYAJahCSASAEQYAJaiAEQYAIahCbASAEQYAEaiAEQ
    YAJahCSASAEQYAEahBmIAAgBCAEQYACaiAEQYAEahB2IABBAzYCgAYgBEGAC2okAAvJAgEDfyMAQcACayIBJAAgASAAQU
    BrIgMQhQEgARADIAFBQGsgAxCFASABQUBrIABBgAFqIgIQSCABQYABaiACEIUBIAFBgAFqEAMgAiABEKUBIAIgARB4IAI
    QRCACEE4gAhBOIAIQRCABQYABakEMEFIgAUHAAWogAUGAAWoQhQEgAUHAAWogAhBIIAFBgAJqIAEQhQEgAUGAAmogAUGA
    AWoQeCABQYACahBEIAIgAUFAaxBIIAFBQGsgAUGAAWoQpQEgAUFAayABQYABahB4IAFBgAFqIAFBQGsQeCABIAFBgAFqE
    IABIAEQRCABQYACaiABEEggAUGAAmogAUHAAWoQeCABQUBrIAAQpQEgAUFAayADEEggACABEKUBIAAQRCAAIAFBQGsQSC
    AAEE4gABBEIAMgAUGAAmoQpQEgAxBEIAFBwAJqJAALrQIBA38jAEGABGsiAiQAIAIgABBeIAJBgAFqIABBgAFqIgMQXiA
    CQYACakE4EHIaIAJBATYCuAIgAkHAAmpBOBByGiACQfgCakEBNgIAIAJBgANqIAMQXiACIAEQDyACQYABaiABQYABaiIE
    EA8gAkGAAmogBBCQASACQYACaiABEJUBIAJBgANqIAAQlQEgAkGAAmoQqAEgAkGAA2oQqAEgAkGAA2ogAkGAAmoQDyACQ
    YACaiACEJABIAJBgAJqEDogAkGAA2ogAkGAAmoQlQEgAkGAA2oQqAEgAkGAAmogAkGAAWoQkAEgAkGAAmoQOiADIAJBgA
    NqEJABIAMgAkGAAmoQlQEgAkGAAWoQVSAAIAJBgAFqEJABIAAgAhCVASAAEKwBIAJBgARqJAALvQIBA38jAEGACGsiASQ
    AIAEgABCOASABQYACaiAAQYAEaiICEI4BIAFBgARqIABBgAJqIgMQjgEgAUGABmoQLyAAECIgAUGABmogABCSASABQYAG
    aiAAEJYBIAAgAUGABmoQlgEgABCsASABELYBIAEQrwEgACABEJYBIAFBgAJqECIgAUGAAmoQZiABQYAGaiABQYACahCSA
    SABQYAGaiABQYACahCWASABQYACaiABQYAGahCWASABQYACahCsASABQYAEahAiIAFBgAZqIAFBgARqEJIBIAFBgAZqIA
    FBgARqEJYBIAFBgARqIAFBgAZqEJYBIAFBgARqEKwBIAMQrgEgAxCvASACELYBIAIQrwEgAyABQYACahCWASACIAFBgAR
    qEJYBIABBBTYCgAYgABCaASABQYAIaiQAC7ICAQN/IwBBgAhrIgEkACAAKAKABkEBRwRAIAEgABCOASABQYACaiAAQYAC
    aiIDEI4BIAFBgARqIABBgARqIgIQjgEgAUGABmogABCOASABECIgAUGAAmogAhAZIAFBgAJqEK8BIAFBgAJqEKwBIAFBg
    ARqECIgAUGABmogAxAZIAFBgAZqEK8BIAIgABCWASACIAMQlgEgAhCsASACECIgACABEJIBIAEgAUGAAmoQlgEgARCsAS
    ABIAFBgARqEJYBIAEgAUGABmoQlgEgARCsASABECsgAUGAAmoQZiABQYAEahBmIAAgAUGAAmoQlgEgAyABQYAEahCSASA
    DIAFBgAZqEJYBIAIgARCWASAAQQRBBSAAKAKABkF+cUECRhs2AoAGIAAQmQELIAFBgAhqJAALigIBAn8jAEHgAWsiAiQA
    IAAQRCACQQhqQTAQchogAkIBNwMAIAJBOGogABBfIAJB8ABqIAEQXyACQagBakE4EHIaIAAQdANAIAJBOGogAkHwAGoQN
    UF/TARAA0ACQCADQQBMDQAgAkHwAGpBARA7IAJBARA7IAJBqAFqIAJBOGoQayACQagBaiACQfAAahBiIAJBqAFqEEQgAk
    E4aiACQagBaiACKQPYAUI/h6dBAWoiARBPIAJBqAFqIAAQayACQagBaiACEGEgAkGoAWoQRCAAIAJBqAFqIAEQTyADQX9
    qIQMMAQsLBSACQQEQLSACQfAAakEBEC0gA0EBaiEDDAELCyACQeABaiQAC54CAQF/IwBBgA1rIgMkACADIAEQaiADEJkB
    IANBiAZqIAIQXyADQYgGahBEIANBwAZqIANBiAZqEF8gA0HABmpBAxAoGiADQcAGahBEIANB+AZqIAMQagJAIANBwAZqE
    FpFBEAgA0HABmoQKUF/aiECA0AgAkEBTQRAIANB+AZqEJoBDAMLIANB+AZqEBoCQAJAIANBwAZqIAJBf2oiAhBXIANBiA
    ZqIAIQV2tBAWoOAwECAAILIANB+AZqIAMQDgwBCyADEJMBIANB+AZqIAMQDiADEJMBDAALAAsgA0H4BmoQsAEgA0H4B2o
    QqQEgA0H4CGoQrQEgA0H4CmoQrQEgA0EBNgL4DAsgACADQfgGakGIBhBnGiADQYANaiQAC5ACAQJ/IwBBgAJrIgUkACAF
    QYABaiAAEF4gAiAFQYABahCQASAFQYABaiAAQYABahBeIAQgBUGAAWoQkAEgBUGAAWogAEGAAmoiBhBeIAUgBUGAAWoQX
    iAFQYABaiAGEF4gAyAFQYABahCQASAFQYABaiABQYABaiIGEF4gBSAFQYABahAPIAVBgAFqIAEQXiADIAVBgAFqEA8gAi
    ADEH0gAhCoASAEIAUQfSAEEKgBIAUgAhCQASACEFUgAhCoASAFQYABaiAGEF4gBSAFQYABahAPIAMgBBCQASAFQYABaiA
    BEF4gAyAFQYABahAPIAMgBRB9IAMQqAEgBBA6IAQQqAEgACABEAsgBUGAAmokAAvkAQECfyMAQcABayIDJAAgAxBLIAAg
    ASACQR91IgQgAnMgBEF/c2pBAm0iAkF/akEfdhBtIAAgAUHAAWogAkEBc0F/akEfdhBtIAAgAUGAA2ogAkECc0F/akEfd
    hBtIAAgAUHABGogAkEDc0F/akEfdhBtIAAgAUGABmogAkEEc0F/akEfdhBtIAAgAUHAB2ogAkEFc0F/akEfdhBtIAAgAU
    GACWogAkEGc0F/akEfdhBtIAAgAUHACmogAkEHc0F/akEfdhBtIAMgABB/IAMQpgEgACADIARBAXEQbSADQcABaiQAC+Q
    BAQJ/IwBBgANrIgMkACADECogACABIAJBH3UiBCACcyAEQX9zakECbSICQX9qQR92EG8gACABQYADaiACQQFzQX9qQR92
    EG8gACABQYAGaiACQQJzQX9qQR92EG8gACABQYAJaiACQQNzQX9qQR92EG8gACABQYAMaiACQQRzQX9qQR92EG8gACABQ
    YAPaiACQQVzQX9qQR92EG8gACABQYASaiACQQZzQX9qQR92EG8gACABQYAVaiACQQdzQX9qQR92EG8gAyAAEH4gAxCcAS
    AAIAMgBEEBcRBvIANBgANqJAALvAEBAn8jAEGwAWsiAiQAIAJBMBByIQIDQCADQTBGBEACQCABQTBqIQEgAkEwaiACEHV
    BACEDA0AgA0EwRg0BIAIgA2ogASADai0AADoAACADQQFqIQMMAAsACwUgAiADaiABIANqLQAAOgAAIANBAWohAwwBCwsg
    AkHwAGogAhB1IABBOBByIgBBATYCOCAAQUBrQTgQciAAQfgAakEBNgIAIAAgAkHwAGoQpQEgAkEwahClASACQbABaiQAC
    9QBAQJ/IwBBgANrIgEkACABIAAQXiABQYABaiAAQYABaiICEF4gAUGAAmogABBeIAFBgAJqIAIQDyABIAIQlQEgAUGAAW
    oQVSABQYABaiAAEJUBIAEQqAEgAUGAAWoQqAEgACABEJABIAAgAUGAAWoQDyABQYABaiABQYACahCQASABQYABahBVIAF
    BgAFqIAFBgAJqEJUBIAFBgAFqEKgBIAFBgAFqEDogACABQYABahCVASABQYACahCnASACIAFBgAJqEJABIAAQrAEgAUGA
    A2okAAvEAQEBfyMAQYADayIDJAAgA0EIaiABEIUBAkAgAkUEQCADQQhqEAcMAQsgA0EIaiACEKUBCyADQcgAakHYo8AAE
    F8gA0GAAWogA0HIAGoQiwEgA0HAAWogA0EIahCFASADQcABahADIANBwAFqIAEQSCAAIAEQhQEgACADQQhqEEggA0GAAm
    ogA0HAAWoQhQEgABBYIQEgA0HAAmogABCFASADQcACahBBIANBwAJqEEQgACADQcACaiABEHkgA0GAA2okAAufAQEBfyM
    AQfAAayICJAAgAiABEF9BACEBIAJBOGpBOBByGiAAEEQCQCAAIAIQNUEASA0AA0AgAkEBEC0gAUEBaiEBIAAgAhA1QX9K
    DQALA0AgAUEATA0BIAJBARA7IAJBOGogABBrIAJBOGogAhBiIAJBOGoQRCAAIAJBOGogAikDaEI/h6dBAWoQTyABQX9qI
    QEMAAsACyACQfAAaiQAC7IBAQF/IwBBgAJrIgQkACAEQYABaiAAEF4gAyAEQYABahCQASAEQYABaiAAQYABahBeIAQgBE
    GAAWoQXiAEQYABaiAAQYACahBeIAIgBEGAAWoQkAEgASAEEJABIAEgAhAPIAMQMiAEEDIgAhAyIAEQpwEgARA6IAEQqAE
    gARBVIAEQqAEgAkEMEJ8BIANBAxCfASACEFUgAhCoASACIAQQfSACEKgBIAAQFCAEQYACaiQAC58BAQJ/IwBBgAJrIgIk
    ACAAIAEQXiAAEDIgAkGIAWpB2KTAABBfIAJBCGpBOBByGiACQQE2AkAgAkHIAGpBOBByIAJBgAFqQQE2AgAgAkHAAWogA
    kGIAWoQiwEgAkEIaiACQcABahClARCyASACQQhqEKgBIAJBCGoQVSACQQhqEKgBIAAgARAPIAAgAkEIahCVASAAEKsBIA
    JBgAJqJAALowEBAX8jAEEwayIGJAAgBkEQaiAAIAEQsQEgBiAGKAIUIgA2AhwgBiAGKAIQIgE2AhggBkEIaiACIAMQsQE
    gBiAGKAIMIgI2AiQgBiAGKAIIIgM2AiAgBiAEIAUQsQEgBiAGKAIEIgQ2AiwgBiAGKAIAIgU2AiggASAAIAMgAiAFIAQQ
    ACAGQShqEKQBIAZBIGoQpAEgBkEYahCkASAGQTBqJAALiAECA38DfiMAQRBrIgIkAAN+IANBOEYEfiACQRBqJAAgBgUgA
    iAAIANqIgQpAwAiBSAFQj+HIAGsIgUgBUI/hxAxIAQgAikDACIHIAZ8IgVC//////////8DgzcDACAFIAdUrSACQQhqKQ
    MAIAZCP4d8fEIGhiAFQjqIhCEGIANBCGohAwwBCwsLhAECA38BfiMAQUBqIgEkACABQQhqIAAQXyABQQhqEEQgAUE4aiE
    CQQYhA0HcAiEAAn8DQEEAIANBAEgNARogAikDACIEUARAIAJBeGohAiAAQUZqIQAgA0F/aiEDDAELCwN/IARQBH8gAAUg
    AEEBaiEAIARCAn8hBAwBCwsLIAFBQGskAAuHAQEBfyMAQcABayIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAa
    kEBNgIAIAEQUCABQYgBakE4EHIaIABBgAFqIAFBgAEQZxogAEGAAmpBOBByGiAAQbgCakEBNgIAIABBvAJqIAFBhAFqQT
    wQZxogAEH4AmpBATYCACABQcABaiQAC48BAQJ/IwBBgAJrIgEkACAAEKwBIAEgABBeIAFBgAFqQTgQchogAUEBNgK4ASA
    BQcABakE4EHIaIAFB+AFqQQE2AgAgASAAQYABaiICEJUBIAEQOiABQYABaiABEJABIAFBgAFqIAIQlQEgAiABEJABIAIg
    ABCVASAAIAFBgAFqEJABIAAQrAEgAUGAAmokAAt9AgF/An4jAEGAAWsiASQAIAFBCGogABCFASABQQhqEBIgAUHIAGogA
    UEIahCDAUEIIQADQCAAQThGRQRAIAFByABqIABqKQMAIAKEIQIgAEEIaiEADAELCyABKQNIIQMgAUGAAWokACACQn98IA
    NCAYVCf3yDQjqIp0EBcQuJAQIBfwJ+IAAgACkDMCABQT9xrSIDhiAAKQMoQTogAWtBP3GtIgSHhDcDMCAAQShqIQFBBiE
    CA0AgAkEBTQRAIAAgACkDACADhkL//////////wODNwMABSABIAEpAwAgA4ZC//////////8DgyABQXhqIgEpAwAgBIeE
    NwMAIAJBf2ohAgwBCwsLiQECAX8CfiAAIAApA2BBOiABQTpwIgFrrSIEhyAAKQNoIAGtIgOGhDcDaCAAQeAAaiEBQQ0hA
    gNAIAJBAU0EQCAAIAApAwAgA4ZC//////////8DgzcDAAUgASABKQMAIAOGQv//////////A4MgAUF4aiIBKQMAIASHhD
    cDACACQX9qIQIMAQsLC3EBAX8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAakEBNgIAIAFBCGpBOBB
    yGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAEG8AWogAUEEakE8EGcaIABB+AFqQQE2AgAgAUFAayQAC4EBAgF/AX4gAEHw
    ABByIQADQCACQThGBEACQCAAIAEpAzAiA0I6hzcDOCAAIANC//////////8DgzcDMCAAQUBrIQBBACECA0AgAkEwRg0BI
    AAgAmpCADcDACACQQhqIQIMAAsACwUgACACaiABIAJqKQMANwMAIAJBCGohAgwBCwsLdQECfiAAIANCIIgiBSABQiCIIg
    Z+IAIgA358IAEgBH58IANC/////w+DIgIgAUL/////D4MiAX4iA0IgiCACIAZ+fCICQiCIfCABIAV+IAJC/////w+DfCI
    BQiCIfDcDCCAAIANC/////w+DIAFCIIaENwMAC3YBAn8jAEHAAWsiASQAIAEgABCFASABQUBrIAAQhQEgAUGAAWogAEFA
    ayICEIUBIAEgAhB4IAFBQGsgABB4IAFBQGsQRCACIAFBQGsQSCABQYABahBBIAAgAUGAAWoQeCABEEQgABBEIAAgARBII
    AFBwAFqJAALkwEBAn9B0LXBAEHQtcEAKAIAQQFqNgIAAkACQEGYucEAKAIAQQFGBEBBnLnBAEGcucEAKAIAQQFqIgA2Ag
    AgAEECSw0CQaC5wQAoAgAiAUF/Sg0BDAILQZi5wQBCgYCAgBA3AwBBoLnBACgCACIAQQBIDQFBoLnBACAANgIAAAtBoLn
    BACABNgIAIABBAUsNAAALAAtnAQJ/IwBBQGoiAiQAIAAQRCACIAAQhQECQCABRQRAIAAQBwwBCyAAIAEQpQELQQAhAQNA
    IAFBAUsgA3JFBEAgABADIAFBAEchAyABIAFFaiEBDAELCyAAIAIQSCAAEBIgAkFAayQAC18CAX8EfkIBIQNBMCECA38gA
    kF4RgR/IARCAYYgA3ynQX9qBSABIAJqKQMAIgUgACACaikDACIGfUI6hyADgyAEhCEEIAJBeGohAiAFIAaFQn98QjqHIA
    ODIQMMAQsLC2ACAX8EfkIBIQNB6AAhAgN/IAJBeEYEfyAEQgGGIAN8p0F/agUgASACaikDACIFIAAgAmopAwAiBn1COoc
    gA4MgBIQhBCACQXhqIQIgBSAGhUJ/fEI6hyADgyEDDAELCwt3AQN/IwBBgAJrIgIkACACIAEQXiACQYABaiABEF4gAhAy
    IAJBgAFqIAIQDyAAIAJBgAFqEJcBIABBgAJqIgMgAkGAAWoQlwEgAEGABGoiBCACQYABahCXASADIAEQogEgBCACEKIBI
    ABBBTYCgAYgAkGAAmokAAt6AQF/IwBB4ANrIgEkACABQYABakHApcAAEF8gAUG4AWpB+KXAABBfIAEgAUGAAWogAUG4AW
    oQSSABQfACakGwpsAAEF8gAUGoA2pB6KbAABBfIAFB8AFqIAFB8AJqIAFBqANqEEkgACABIAFB8AFqED8gAUHgA2okAAt
    nACAAQQF2IAByIgBBAnYgAHIiAEEEdiAAciIAQQh2IAByIgBBEHYgAHIiACAAQQF2QdWq1aoFcWsiAEECdkGz5syZA3Eg
    AEGz5syZA3FqIgBBBHYgAGpBj568+ABxQYGChAhsQRh2C2cBAn8jAEGAAWsiASQAIAEgABCFASABQUBrQTgQchogAUEBN
    gJ4IAEgAEFAayICEHggARBBIAFBQGsgARClASABQUBrIAIQeCACIAEQpQEgAiAAEHggACABQUBrEKUBIAFBgAFqJAALaA
    IBfwJ+IAFBP3GtIQNBOiABa0E/ca0hBEEAIQEDQCABQTBGBEAgACAAKQMwIAOHNwMwBSAAIAFqIgIgAkEIaikDACAEhkL
    //////////wODIAIpAwAgA4eENwMAIAFBCGohAQwBCwsLbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYC
    ACADQSxqQQI2AgAgA0ICNwIMIANBlKjAADYCCCADQQI2AiQgAyADQSBqNgIYIAMgAzYCKCADIANBBGo2AiAgA0EIaiACE
    HAAC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakECNgIAIANCAjcCDCADQbCqwAA2AgggA0
    ECNgIkIAMgA0EgajYCGCADIANBBGo2AiggAyADNgIgIANBCGogAhBwAAtlAQJ/IAAgACgCACICQQhqIgM2AgAgACACQQN
    2QTxxakEoaiICIAFB/wFxIAIoAgBBCHRyNgIAAkACQCADRQRAIABBADYCACAAIAAoAgRBAWo2AgQMAQsgA0H/A3ENAQsg
    ABARCwtnAQF/IwBBgAJrIgMkACAAECogACABEJABIABBgAFqIgEgAhCQASAAQYACahCwASAAEKgBIAMgABAmIANBgAFqI
    AEQXiADQYABahAyIANBgAFqIAMQe0UEQCAAEJgBCyADQYACaiQAC18BAn8jAEGAAWsiASQAIAAQqAEgASAAEIUBIAFBQG
    sgAEFAayICEIUBIAEQAyABQUBrEAMgASABQUBrEHggAUEAEDQgACABEEggARBBIAEQRCACIAEQSCABQYABaiQAC10BAn8
    jAEFAaiIBJAAgAUEIakGgp8AAEF8gAUEIaiAAKAI4QX9qEDkiAhAtIAAgAUEIahBjIABBASACQQFqQR9xdCICNgI4IAJB
    gICAEE4EQCAAEBILIAFBQGskAAtfAgF/AX4jAEHwAGsiASQAIAFBoKfAABBfIAApAwAhAiABQThqIAAQXyAAQQEQOyABQ
    ThqIAEQYSABQThqEEQgAUE4akEBEDsgACABQThqIAJCAoGnEE8gAUHwAGokAAt7AQJ/IABBKGohAgNAIAFBgAJGBEAgAE
    LnzKfQ1tDrs7t/NwIIIABCADcCACAAQSBqQquzj/yRo7Pw2wA3AgAgAEEYakL/pLmIxZHagpt/NwIAIABBEGpC8ua746O
    n/aelfzcCAAUgASACakEANgIAIAFBBGohAQwBCwsLaQICfwF+IAAgACkDACIDQv//////////A4M3AwBBCCEBA0AgA0I6
    hyEDIAFBMEYEQCAAIAApAzAgA3w3AzAFIAAgAWoiAiACKQMAIAN8IgNC//////////8DgzcDACABQQhqIQEMAQsLC2oCA
    n8BfiAAIAApAwAiA0L//////////wODNwMAQQghAQNAIANCOochAyABQegARgRAIAAgACkDaCADfDcDaAUgACABaiICIA
    IpAwAgA3wiA0L//////////wODNwMAIAFBCGohAQwBCwsLWQEBfyMAQYADayIEJAAgBCADEF4gBBBAIARBgAFqIAEQXiA
    EQYACaiACEF4gBEGAAWogBBAPIARBgAJqIAQQDyAAIARBgAFqIARBgAJqEJEBIARBgANqJAALWQECfyMAQUBqIgEkAAJA
    IAAQhAENACABQQEQigEgAEGAAWoiAiABEFkNACACQQAQNCAAIAIQSCAAEBIgAEFAayIAIAIQSCAAEBIgAiABEKUBCyABQ
    UBrJAALVwEBfyMAQbABayICJAAgATQCOCAANAI4fkKAgIAQWQRAIAAQEgsgAkEIaiAAIAEQCCACQfgAaiACQQhqEAUgAC
    ACQfgAahBrIABBAjYCOCACQbABaiQAC08BAn8jAEFAaiIDJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgA
    gAyABEIsBIAAgAxClASADIAIQiwEgAxClASADQUBrJAALWQECfyMAQYABayIBJAACQCAAEIgBDQAgARBQIABBgAJqIgIg
    ARB7DQAgAhBAIAAgAhAPIAAQqwEgAEGAAWoiACACEA8gABCrASACIAEQkAELIAFBgAFqJAALSwEBfyMAQUBqIgEkACAAQ
    TgQciIAQQE2AjggAUEBEIoBIABBQGsgAUHAABBnGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAUFAayQAC0sBAn8jAEHwAG
    siASQAIAAQd0UEQCABQaCnwAAQXyABQThqIAAQgwEgASABQThqEGIgARBEIAFBOGogARA1IQILIAFB8ABqJAAgAgtPAQF
    /IwBBgAFrIgIkACAAIAEQhQEgABADIAJByABqQdikwAAQXyACQQhqIAJByABqEIsBIAAgARBIIAAgAkEIahB4IAAQEiAC
    QYABaiQAC0kBAn8DQCABQThGRQRAIAAgAWoiAiACKQMAQgGGNwMAIAFBCGohAQwBCwsgACAAKAI4QQF0IgE2AjggAUGAg
    IAQTgRAIAAQEgsLQgIBfwJ+QQAgAmusIQQDQCADQThHBEAgACADaiICIAIpAwAiBSABIANqKQMAhSAEgyAFhTcDACADQQ
    hqIQMMAQsLC0YBAn8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgAgAUEBEIoBIAAgARClARC
    yASABQUBrJAALTgEBfyMAQYAEayIBJAAgABAvIAEQLyABQYACahAvIABBgAJqIAFBgAIQZxogAEGABGogAUGAAmpBgAIQ
    ZxogAEEANgKABiABQYAEaiQAC0sBAX8jAEFAaiICJAACQCAAKAI4IAFsQYCAgBBOBEAgAiABEIoBIAAgAhBIDAELIAAgA
    RAoGiAAIAAoAjggAWw2AjgLIAJBQGskAAtKAAJ/IAFBgIDEAEcEQEEBIAAoAhggASAAQRxqKAIAKAIQEQMADQEaCyACRQ
    RAQQAPCyAAKAIYIAJBACAAQRxqKAIAKAIMEQUACwtCAQF/IwBBQGoiAiQAIAJBCGpBgIDAABBfIAEgAkEIahBrIAEQRCA
    AIAEQayAAQQMQKBogABBEIAAQKSACQUBrJAALSQECfyMAQcABayIBJAAgASAAEF4gAUGAAWogABCFASAAIABBQGsiAhCl
    ASAAEEEgAiABQYABahClASAAIAEQlQEgAUHAAWokAAtIAQF/IwBB4AFrIgEkACABQeihwAAQXyABQThqIAAgARAIIAFBq
    AFqIAFBOGoQBSAAIAFBqAFqEGsgAEECNgI4IAFB4AFqJAALPgEBfyABQTpuIQIgAUGVA00EQCAAIAJBA3RqKQMAQgEgAU
    H//wNxQTpwrYaDQgBVDwsgAkEHQdSdwAAQPAALQAIBfwF+IwBBgAFrIgEkACABQQhqIAAQhQEgAUEIahASIAFByABqIAF
    BCGoQgwEgASkDSCABQYABaiQAQgKBpws8AQF/IwBBgAFrIgIkACACIAAQhQEgAkFAayABEIUBIAIQEiACQUBrEBIgAiAC
    QUBrEDUgAkGAAWokAEULPAIBfwF+A38gAUE4RgR/IAJCf3xCgICAgICAgIAEg0I6iKcFIAAgAWopAwAgAoQhAiABQQhqI
    QEMAQsLC0cBAX8jAEEgayIDJAAgA0EUakEANgIAIANB9KrAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2Ag
    AgAyACEHAACzkBAX8jAEFAaiICJAAgAiAAEIUBIAIQByABBEAgASACEKUBCyACEAMgAiAAEEggAhAsIAJBQGskAAs6AQF
    /IABBOBByIQADQCACQTBGRQRAIABBCBAtIAAgACkDACABIAJqMQAAfDcDACACQQFqIQIMAQsLCzQBAX8gAEE4EHIiAEEB
    NgI4IABBQGtBOBByIABB+ABqQQE2AgAgACABEKUBIAFBQGsQpQELMAEBfyAAQTgQciEAA0AgAkE4RwRAIAAgAmogASACa
    ikDADcDACACQQhqIQIMAQsLCz8BAX8jAEGAAmsiASQAIAAQUSABEG4gACABEJIBIABBgAJqEK0BIABBgARqEK0BIABBAT
    YCgAYgAUGAAmokAAswAQJ/A0AgAkE4RwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLMAECfwNAIAJ
    BOEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLCzABAn8DQCACQThHBEAgACACaiIDIAEgAmopAwAg
    AykDAH03AwAgAkEIaiECDAELCwsxAQJ/A0AgAkHwAEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLC
    zEBAn8DQCACQfAARwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLOQECfyMAQYABayIBJAAgASAAQY
    ABaiICEF4gAiAAEJABIAEQVSAAIAEQkAEgABCsASABQYABaiQACzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACABQQFqIQE
    gA0EBaiEDIAJBf2oiAg0ACwsgAAtIAQN/IwBBEGsiASQAIAAoAgwhAyAAKAIIIgJFBEBB9KrAAEErQaCrwAAQWwALIAEg
    AzYCCCABIAA2AgQgASACNgIAIAEQcQALMgEBfyAAQgE3AwBBCCEBA0AgAUE4RkUEQCAAIAFqQgA3AwAgAUEIaiEBDAELC
    yAAEFYLNwAgABBRIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahCSASAAIAEoAoAGNgKABgsoAQF/A0AgAk
    E4RwRAIAAgAmogASACaikDADcDACACQQhqIQIMAQsLCzMAIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahC
    SASAAIAEoAoAGNgKABgsoACAAIAEgAhB5IABBQGsgAUFAayACEHkgAEGAAWogAUGAAWogAhB5Cy4BAX8jAEGAAWsiASQA
    IAAQLyABEFAgACABEJABIABBgAFqEKkBIAFBgAFqJAALLQAgACABIAIQjwEgAEGAAWogAUGAAWogAhCPASAAQYACaiABQ
    YACaiACEI8BCzQBAX8jAEEQayICJAAgAiABNgIMIAIgADYCCCACQaSowAA2AgQgAkH0qsAANgIAIAIQaAALPgEBfyMAQR
    BrIgEkACABQQhqIABBCGooAgA2AgAgASAAKQIANwMAIAEoAgAiAEEUaigCABogACgCBBoQMwALKQEBfyABBEAgACECA0A
    gAkEAOgAAIAJBAWohAiABQX9qIgENAAsLIAALKwEBfyMAQcABayICJAAgAhBLIAIgARB/IAIQpgEgACACEAwgAkHAAWok
    AAsiAQF/A0AgAUE4RwRAIAAgAWpCADcDACABQQhqIQEMAQsLCycBAX8jAEFAaiICJAAgAkEIaiABEF0gACACQQhqEIsBI
    AJBQGskAAsrACAAEFEgACABEJIBIABBgAJqIAIQkgEgAEGABGogAxCSASAAQQU2AoAGCyMBAX8jAEFAaiIBJAAgASAAEI
    UBIAEQEiABEFogAUFAayQACykAIAAgARBhIAAgACgCOCABKAI4aiIBNgI4IAFBgICAEE4EQCAAEBILCyUAIAAgASACEE8
    gAEEAIAJrIAAoAjgiACABKAI4c3EgAHM2AjgLIwADQCACBEAgACABLQAAED4gAkF/aiECIAFBAWohAQwBCwsLIgACQCAA
    IAEQWUUNACAAQUBrIAFBQGsQWUUNAEEBDwtBAAskAAJAIABBfE0EQCAARQRAQQQhAAwCCyAAEAEiAA0BCwALIAALJwEBf
    yMAQYABayICJAAgAiABEF4gAhA6IAAgAhCVASACQYABaiQACycAIAAgARCQASAAQYABaiABQYABahCQASAAQYACaiABQY
    ACahCQAQslACAAIAEQpQEgAEFAayABQUBrEKUBIABBgAFqIAFBgAFqEKUBCyUBAX8jAEFAaiICJAAgAiABEIUBIAIQQSA
    AIAIQeCACQUBrJAALKAEBfyMAQYACayICJAAgAiABEI4BIAIQKyAAIAIQlgEgAkGAAmokAAsjAEGEAiACSQRAIAJBhAIg
    AxA9AAsgACACNgIEIAAgATYCAAsiAQF/IwBB8ABrIgIkACACIAEQMCAAIAIQBSACQfAAaiQACxwAAkAgABB3RQ0AIABBg
    AFqEHdFDQBBAQ8LQQALHwAgAEE4EHIiAEEBNgI4IAAgARBrIAAgASgCODYCOAseAAJAIAAQhwFFDQAgAEGAAWoQhwFFDQ
    BBAQ8LQQALGwACQCAAEHdFDQAgAEFAaxB3RQ0AQQEPC0EACx4AAkAgABCHAUUNACAAQYACahCHAUUNAEEBDwtBAAsaAQF
    /IAAQWCIBIABBQGsQWCABcyAAEHdxcwsaACAAQTgQciIAQQE2AjggACABEJ0BIAAQVgsZACAAQTgQciIAQQE2AjggACAB
    EGsgABBWCxcAIAAQRCAAKAIAQX8gAUEfcXRBf3NxCxoAIAAgARBfIAAgAhAkIAAgAhBjIAAgAhAkCxwAIAAQLyAAIAEQk
    AEgAEGAAWogAUGAAWoQkAELGAAgACABIAIQeSAAQUBrIAFBQGsgAhB5CxYAIAAgARClASAAQUBrIAFBQGsQpQELGAAgAB
    AvIAAgARCQASAAQYABaiACEJABCxgAIAAgARCQASAAQYABaiABQYABahCQAQsZACAAEK4BIABBgAJqELYBIABBgARqEK4
    BCxcAIAAQsgEgAEFAaxBpIABBgAFqELIBCxQAIAAgARB4IABBQGsgAUFAaxB4CxgAIAAgARCVASAAQYABaiABQYABahCV
    AQsYACAAEKYBIABBgAFqIgAQpgEgACABEA8LGQAgABCpASAAQYABahCwASAAQYACahCpAQsZACAAEKwBIABBgAJqEKwBI
    ABBgARqEKwBCxkAIAAQqgEgAEGAAmoQqgEgAEGABGoQqgELFgAgABAvIAAgARCQASAAQYABahCpAQsWACAAQYABaiIAEK
    gBIAAQOiAAEKgBCxQAIAAQRCAAIAApAwAgAax8NwMACxQAIAAQRCAAIAApAwAgAax9NwMACxEAIAAgARBSIABBQGsgARB
    SCxEAIAAgARBIIABBQGsgARBICxQAIAAgARCQASAAQYABaiACEJABCxIAIAAgARAPIABBgAFqIAEQDwsUACAAIAEQoAEg
    AEGAAWogARCgAQsRACAAKAIEBEAgACgCABAJCwsSACAAIAEQayAAIAEoAjg2AjgLDwAgAEFAayIAEEEgABBECw0AIAAQT
    iAAQUBrEE4LDQAgABBEIABBQGsQRAsPACAAELIBIABBQGsQsgELEAAgABCrASAAQYABahCrAQsNACAAEBIgAEFAaxASCx
    AAIAAQqAEgAEGAAWoQqAELEAAgABCpASAAQYABahCpAQsPACAAQYABahA6IAAQrAELEAAgABCnASAAQYABahCnAQsOACA
    AEGkgAEFAaxCyAQsQACAAIAI2AgQgACABNgIACw0AIAAQdCAAQQE2AjgLDAAgABBBIAAgARB4CwwAIAAgARBrIAAQVgsN
    ACAAEDogACABEJUBCwsAIAAQOiAAEKwBCwwAQunQotvMouq7RgsDAAELAwABCwv+PZoCAEGCgMAACwcBAAAAAQI0AEG4g
    MAAC9sBuF8jku11BwFjT+D5WE+pA2dPnKtLeD0Akew9ffXy9AMD1g8fDSwgAK1vjPCZwa4A8DtNkAEAAADzStxtEor3AI
    uwH1tTsFYDgvLFYx+X7AAysL/NHtseAkehVLifHyMCQHo6ogw4sQGz4sMPAAAAAHNyYy9ibHMxMjM4MS9wYWlyLnJzqAA
    QABQAAAAHAQAACQAAAKgAEAAUAAAADAEAAA0AAACoABAAFAAAABEBAAANAAAAAAAAAAEAAAD///8Dv/+W/78AaQM7VYAd
    moCAAefMIPV1pkwBp+1zAEGogsAACyz+//7///8BAosAgILYBPYB4Y1oiW++kwLOdqvfPagdAMZpulHOdt8Dy1nGFwBB4
    ILAAAuRAZABEAATAAAA0AEAABgAAACQARAAEwAAANQBAAARAAAAkAEQABMAAADWAQAAHAAAAHNyYy9ibHMxMjM4MS9lY3
    AucnMAkAEQABMAAAAZBQAADQAAAJABEAATAAAAGwUAAAkAAACQARAAEwAAABwFAAARAAAAkAEQABMAAAAfBQAAHAAAAAA
    AAAABAAEAAAABAjQAQaCEwAALuSCQARAAEwAAAGcEAAARAAAAkAEQABMAAABsBAAADQAAAJABEAATAAAAbgQAABUAAACQ
    ARAAEwAAAHAEAAAgAAAAHUxYLQgo9ADXXz44aOPbAInJGoj9roEBomOjmrkPTgGY6rCCSW3JAoBOWs9QOu4AimlEAQAAA
    ADgKxeO6UjMAXSpOluMVsgAolXvNe/8FADngsIBPcnDA8EWIDvuPnUAusRiAAwgWgDRCCkuAQAAALgh6L1iEMUA3/4Vlz
    tIpQGLCDH8A9S9AbsR/Cc0UtIDHfAS2hvXowEqPc423S/bAshidB8AAAAAKdKiiy66yAHqR06TLeDGAiSMtsYkvPEDAo/
    w3iCL+AGd1zE97u2BA4ilRy+cg4kDSMIIbgAAAAB7+wUWP99nAjJ7Fwrjx90CaW+GFDsANgMrVFv+4Zl3A8x9+g1bVtIB
    Aju2nPiBcwIH2iEDAQAAAJ4MOb5nECQDX97JALfLQgIx+rexS69LAYydZXIx6AACyy7dIo8TXQHUDYML8enzAuH4sWkBA
    AAAF+OXhGqYcQFbpdOtpXylAPrkHV2MkmwBFovSVX2eswF1O8QNmb5jAc0s5B7x42kCH8/TgAAAAACOyPDjGFbLAOdrHT
    0yPvIBmzNTJw/vYgALmsY2bZ2sAuVtNVN+EdEAIQ4duvj2agBw54F7AQAAAITtOaEl8tcBt7JLQTBKlADaqLKGnI8hAiN
    AhjM+PJkAhhWxv1LmigOwyY1aShP5A1Nl7dYAAAAAgyllb8bBEwFzRs+5ckvDAQgK+Wh+CbkCTntu5kll9wGxPNu1Sqf3
    AwZIdMD/xFwDUDIMYwEAAADZlYis6UwVARTxnQfMG4oChYnB+oJZtgK7IfzsX0loAZnbmVSOEeQDLK2Q2RB9ZgCjJpfpA
    AAAAGFomx1kiLMB8WQcxDiXuAEzNQgzG58oA8zGl/w2qpUB5PXXElTlBwN0goHTbRvzA2ZxjncBAAAAsNyerJ2fFwD4p1
    yCSo8PA1jJJY7GHlAC46GVD2alzAEkA84bmgrRATESRAc7nl0C2wVA1QAAAAC7g8uz8e40ALrVMMa8qTwCg7SGHg3HMwK
    X1V8Qqr1sAecXfByoRyECrC5iwcvqUAI+7ZRyAQAAALdJRnNiFqwCq1uLuXy1MABhhSxO22y1A4nJfwFciyICPjBrhRWY
    2QEHRAIu0MygA7HyBRoBAAAACt3saNGEYwELQBne0pLTATFZwTGPlzMBfdvdQN9bugO0gvaAZqWzAo9b2xG1SnoCqxP8l
    QAAAABB1qF5Oux2AxHckO6qpJkAOFCDmPNn2gBA0K3ZhMV1AI1/4Myjx68Bz4Kkl+BTaQNqzw6hAAAAAF5azL2b2fcBxL
    R4RCdSbgH6gMUimN8cAltmoKIpbwgDY39umQHPdABs/SyMLCpZA6nCekoBAAAAOkrobkl0JQA7G3jD49TsAKfO6e0qBnM
    AuDglhk69ZgJXD1chZ1ngAxiDz0OGTVoAz6osdwAAAAClBGOfovktAHDEowjxkjQAQPeCiUvyzgMOKTS1cjqnAzVXOenG
    BgUD30NOVe6ZOQGOXzXnAAAAAB6iMjVbOZ0DVAdezQfqpgC9qW0wO4NOAK017oqBhGYBx9//faDnQwNXx5sCKkWKACAWj
    joBAAAA2CzGjZPoDQMEcT27D0m1AZcE/dYovIoCMlNFlcVa/AAkCFtU60B8A/urDrK/uGIBGlglNAAAAAAZPrhcujnCAD
    +3PyWfJfQAas3qrBEL4ACZ8kczxmm9AUGJbx+Z8r8BivlNoJfI6AHlL5ayAAAAAP87K8huJ8gBeboJLBshqgI9cfWLxIg
    lAJsEMADCMygD6EFwNjblmAJEHC3SEGfVAt6lYSUBAAAAHBvSQPr5PAEmfg+Nb6A1AlUrxor8F4YAVnLqIm2NLgHv1QFv
    +tNLA4u5LIZrxj8DSNWojAAAAAAEtshpvla0AMEdB7C/n0ABZisb8FqpTwG3XuVoWRI+Ah0Yy7Uu30IDzkKpk/PAQwLp5
    GteAQAAAEsidVRxHmsC4e1rXtkmQQC6Rs6nltP1AKxmo5WhXwcCPWde/KPESAN9VqhAxDORA0WWElwAAAAAMwGY2/XT2Q
    IQmcoIRyvkA2zMWQbE0zICmU8AVjA1IAA7e3XcFeN7AisAv9ymskcDSjlaJAAAAAD4HpcL8ARMAYN8hGRkcBQCbPAzRnu
    ADgGcADvCmtCoALGnekQ/9QQAWEJVdObkBgDByoKxAAAAAI5NB9CkyAcCs4E10QZ9cwKdJEP2EfnnA6+5GAnDq+ICWTVS
    zO3S/gNQMEaut73NAwipRosBAAAAMsER0BpxEwA6v+6PM5fOAxsDYZ44FuQDYET/JL2yLQPLL82T+0MdA+NCf4NvNN8Ae
    eQTlwEAAAAwHHPK66qvA8qbrlN3FdwDs7lDTR7t5wFhGvjba0WeAgwqxCNKoa0Dea+OSG2vYQChp7vhAAAAAIel23tXDj
    cA2OiB4XGAlAGd5qsM8qHmAi16sAl3nlkAvTqPu6FNHgKIJyP6EpplA4sBxJ8AAAAAKftwGKNMXgFoTfq3P1SRAS9kQsg
    mbNoADvR/YPeO/wIFChd0xqYsAa9Jpvcbrs4AU418mAAAAADy1ulfhfhhAbJX0IORsB4CenTzNNbEEwDFSC0Thq8oA7hb
    5zxreScA9F2yLO8G6wO8ubBKAAAAAPClMzaxOrIBphygVrLJ2AMD4kRVrdPDAUHZ9d62vlID0Kd0oKbwuAFHeISI2tIYA
    KT8A2YBAAAA2/7o8uzatgEQKhBkAjf+Ae7CrVETIv0DDObhQjmP7wM2VRnEKRWiAvjTK9fEP/gD3j/AjAAAAADL9OWwd1
    w1Ail7h7GnrhYA5J3PUTLAPgKSJ3DkrTvkAqcq1FdndNgCRh0mXggHJgJuN4YfAAAAAPbhLcdA4t8A7kgBLIqFVAMmfdo
    AFLnkAxINi3OMYlkD4lIllEk7agAy4Si9mZulArqGxwwAAAAAlsZBLlrnlwD4L+qLZcRZAWxN03q2PjQCQT704DyVsAHp
    IxKDRvt2A7UNRHUEljsBEGqZNAEAAAAzuweXcUWYAq/w6M6mux4D0Dw9VFbJ9gJKrUiloSI5AhOtEfrcgEkBwkdnCbiT6
    AKBfNmQAAAAAI9LYx06RxUAEeAlTTxcvQDKBaLKVmPNAzvJTOHOiZcBD8RxwRl4DQJXCcmaD3C3AYEd+uAAAAAA9wbtJh
    Pc+gE0IDPFYe9FASDkgCSUJ98A0i0Hn6ScUwJbVr/yds1TAUP3otjOk8sCDkBgJgAAAADMRTNXOLGZAkewQu742AEAMGm
    42QCa7wJz9ZkIfCtmA0YzVJYUX7QAUUzY8PifHQMUlWutAAAAAJIQVuIptYQCpfqu3xsmWgJvURN56oyoAT4wSgs5vysC
    /5R/RwzFSAIHS2H9z0AHAnS2y6wAAAAAqGqPupy0+AAAgcHg06dwARqHXGpjbrMBZDmkmIbt5gDQbZwdkdIaACgEPFJvA
    akDniUvTQAAAABVP5G4i/RuAI3XbEr1qBcCc7xPfernkgEhTO0e9oSPAfcWMpCEStkDZYGgOoebwgHaXKVnAQAAAEpdU1
    WdPSMD2iCS5O69+AMshbQ5v8RQAxWvgmS9GpMDDPv5xEzX0QNT+YbGSBjbANOObIYBAAAA2S6BFVpB7gAYuXcAAmw9AJI
    rE1djIP0AzfpfP33oewE3pOVu/6a7An4374D6qY8Di/A+agEAAABcd2oSmRMaAU/ux2JpAKcCXx0FoADEWwJNd73jMzTq
    A/3sXkuC6awAzaHu8Mt2pgIIfABmAQAAAKy3+ap/R8YCgDhz6ndu4wCfRKb18LaHAbMXB2JDVRkDUgG3gjF4rAK6mexny
    7ZhAJdSno0AAAAAHQClESMUOQJ2e7v0A3fFAiBqkeyd/KABu1DB7qY9fAKc0cbcjSL4AkQyAyz50BcBlQcOvgAAAAAWVF
    9EmG3SAGrrpaCwPNkAJxf0anKeSAL2SDhM83ZvA8UV0dG07YkD70iDfOWUYwKHKH1rAQAAAPJnvz21OCUCR+Jbvo01XwF
    nyi7NedJdAtYwxPy5RlUBhcR4V7GObgGfq+rbiTaQAQYz31gAAAAAPaBJLiwQ9gJMjafU2IEJAYr3AT5FbzUAhJJyVhPH
    3ANPyIW4SMNDAFsvg4YHSOAAwnUtlgEAAADBYzawU5JHAUAbCIO9I9oAf6Dncr61MgIMu5svYOKVA20aYOnq0PoAUASGl
    CwmpwLDxBJhAQAAAHNyYy9ibHMxMjM4MS9iaWcucnMAoA4QABMAAADMAQAALQAAAKAOEAATAAAAzAEAADUAAACgDhAAEw
    AAABkCAAANAAAAoA4QABMAAAA4AwAAGAAAAKAOEAATAAAAOAMAACEAAACgDhAAEwAAAEIDAAAhAAAAoA4QABMAAABbAwA
    AFwAAAKAOEAATAAAAZAMAABcAAACgDhAAEwAAAHIDAAAwAAAAoA4QABMAAAB7AwAAMAAAAKAOEAATAAAApwMAABgAAACg
    DhAAEwAAALUDAAAYAAAAmC+KQpFEN3HP+8C1pdu16VvCVjnxEfFZpII/ktVeHKuYqgfYAVuDEr6FMSTDfQxVdF2+cv6x3
    oCnBtybdPGbwcFpm+SGR77vxp3BD8yhDCRvLOktqoR0StypsFzaiPl2UlE+mG3GMajIJwOwx39Zv/ML4MZHkafVUWPKBm
    cpKRSFCrcnOCEbLvxtLE0TDThTVHMKZbsKanYuycKBhSxykqHov6JLZhqocItLwqNRbMcZ6JLRJAaZ1oU1DvRwoGoQFsG
    kGQhsNx5Md0gntbywNLMMHDlKqthOT8qcW/NvLmjugo90b2OleBR4yIQIAseM+v++kOtsUKT3o/m+8nhxxkJMU19TSUdf
    QkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF8A0BAQABMAAAA/AAAALgAAANAQEAATAAAAPQAAABUAAADQE
    BAAEwAAAD0AAAANAAAAc3JjL2JsczEyMzgxL2Jscy5ycwAAAAAArve+1aE5BgLok91iZEwkAdIsbk61CS0C2+VwMbbEEQ
    GZYzb76G2KA7ycH+3PFk8AK2qmngEAAABhdHRlbXB0IHRvIGRpdmlkZSBieSB6ZXJvAAAAbxEQABIAAAB8AQAAFAAAAAA
    AAABhdHRlbXB0IHRvIGRpdmlkZSB3aXRoIG92ZXJmbG93c3JjL2JsczEyMzgxL2ZwLnJzAAAAbxEQABIAAAASAgAADQAA
    AG8REAASAAAAHgIAACYAAABvERAAEgAAAB4CAAAjAAAAbxEQABIAAAAkAgAAFwAAAG8REAASAAAAJAIAABQAAAAAAAAAq
    qr//////gHu//9UrP//AupBYg9rDyoBw5z9ShTOEwJLd2TXrEtDAu3pxpKm+V8Cox4RoAEAAABAEhAAFAAAABUBAAATAA
    AAQBIQABQAAAAeAQAAGAAAAEASEAAUAAAAJAEAABwAAABzcmMvYmxzMTIzODEvZWNwMi5ycwAAAAAEAEGQpcAAC7wGQBI
    QABQAAADmAgAACQAAAEASEAAUAAAA7gIAAA0AAABAEhAAFAAAAP4CAAAhAAAAuL0hwchWgAD1+24BqskAA7pwFz2uR7YA
    RNEK7ADpUwN65MZREMUtA0kBgkmkwiMALyuqJAAAAAB+KwRdBX2sAflVF+WERDwDNJME9ce9GwJp12rYgmRCA9BrWWVPJ
    4gA6DRrH9hnnAAFtgI+AQAAAAEouAiGVJMBeKIo6w5zsgIjyRINFpWmAQq1nU73MqoCm/2tGjUu2gJxczJjhFufAHdSXc
    4AAAAAvnlf8F8HqQJqaAc710nDAfOzmulytSoB0pm8jp0W+gEoPsuZi8IrAKw0qwwzzakDAkpsYAAAAACrqv/////+Ae7
    //1Ss//8C6kFiD2sPKgHDnP1KFM4TAkt3ZNesS0MC7enGkqb5XwKjHhGgAQAAAAgUEAALAAAAjwEAAA8AAAAIFBAACwAA
    AKcBAAATAAAACBQQAAsAAACqAQAADQAAAHNyYy9obWFjLnJzADQUEAAgAAAAVBQQABIAAAADAAAAAAAAAAEAAAAEAAAAa
    W5kZXggb3V0IG9mIGJvdW5kczogdGhlIGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAwMDAxMDIwMzA0MDUwNjA3MDgwOT
    EwMTExMjEzMTQxNTE2MTcxODE5MjAyMTIyMjMyNDI1MjYyNzI4MjkzMDMxMzIzMzM0MzUzNjM3MzgzOTQwNDE0MjQzNDQ
    0NTQ2NDc0ODQ5NTA1MTUyNTM1NDU1NTY1NzU4NTk2MDYxNjI2MzY0NjU2NjY3Njg2OTcwNzE3MjczNzQ3NTc2Nzc3ODc5
    ODA4MTgyODM4NDg1ODY4Nzg4ODk5MDkxOTI5Mzk0OTU5Njk3OTg5OQAAQBUQABAAAABQFRAAIgAAAHJhbmdlIGVuZCBpb
    mRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAABjYWxsZWQgYE9wdGlvbjo6dW53cmFwKClgIG9uIG
    EgYE5vbmVgIHZhbHVlALAVEAAcAAAA7gEAAB4AAABsaWJyYXJ5L3N0ZC9zcmMvcGFuaWNraW5nLnJzAEGIrMAACwEBAEH
    IrMAACwEBAEGIrcAACwEBAEHIrcAACwEBAEGIrsAACwEBAEHIrsAACwEBAEGIr8AACwEBAEHIr8AACwEBAEGIsMAACwEB
    AEHIsMAACwEBAEGIscAACwEBAEHIscAACwEBAEGIssAACwEBAEHIssAACwEBAEGIs8AACwEBAEHIs8AACwEBAEGItMAAC
    wEBAEHItMAACwEBAEGItcAACwEBAEHItcAACwEBAEGItsAACwEBAEHItsAACwEBAEGIt8AACwEBAEHIt8AACwEBAEGIuM
    AACwEBAEHIuMAACwEBAEGIucAACwEBAEHIucAACwEBAEGIusAACwEBAEHIusAACwEBAEGIu8AACwEBAEHIu8AACwEBAEG
    IvMAACwEBAEHIvMAACwEBAEGIvcAACwEBAEHIvcAACwEBAEGIvsAACwEBAEHIvsAACwEBAEGIv8AACwEBAEHIv8AACwEB
    AEGIwMAACwEBAEHIwMAACwEBAEGIwcAACwEBAEHIwcAACwEBAEGIwsAACwEBAEHIwsAACwEBAEGIw8AACwEBAEHIw8AAC
    wEBAEGIxMAACwEBAEHIxMAACwEBAEGIxcAACwEBAEHIxcAACwEBAEGIxsAACwEBAEHIxsAACwEBAEGIx8AACwEBAEHIx8
    AACwEBAEGIyMAACwEBAEHIyMAACwEBAEGIycAACwEBAEHIycAACwEBAEGIysAACwEBAEHIysAACwEBAEGIy8AACwEBAEH
    Iy8AACwEBAEGIzMAACwEBAEHIzMAACwEBAEGIzcAACwEBAEHIzcAACwEBAEGIzsAACwEBAEHIzsAACwEBAEGIz8AACwEB
    AEHIz8AACwEBAEGI0MAACwEBAEHI0MAACwEBAEGI0cAACwEBAEHI0cAACwEBAEGI0sAACwEBAEHI0sAACwEBAEGI08AAC
    wEBAEHI08AACwEBAEGI1MAACwEBAEHI1MAACwEBAEGI1cAACwEBAEHI1cAACwEBAEGI1sAACwEBAEHI1sAACwEBAEGI18
    AACwEBAEHI18AACwEBAEGI2MAACwEBAEHI2MAACwEBAEGI2cAACwEBAEHI2cAACwEBAEGI2sAACwEBAEHI2sAACwEBAEG
    I28AACwEBAEHI28AACwEBAEGI3MAACwEBAEHI3MAACwEBAEGI3cAACwEBAEHI3cAACwEBAEGI3sAACwEBAEHI3sAACwEB
    AEGI38AACwEBAEHI38AACwEBAEGI4MAACwEBAEHI4MAACwEBAEGI4cAACwEBAEHI4cAACwEBAEGI4sAACwEBAEHI4sAAC
    wEBAEGI48AACwEBAEHI48AACwEBAEGI5MAACwEBAEHI5MAACwEBAEGI5cAACwEBAEHI5cAACwEBAEGI5sAACwEBAEHI5s
    AACwEBAEGI58AACwEBAEHI58AACwEBAEGI6MAACwEBAEHI6MAACwEBAEGI6cAACwEBAEHI6cAACwEBAEGI6sAACwEBAEH
    I6sAACwEBAEGI68AACwEBAEHI68AACwEBAEGI7MAACwEBAEHI7MAACwEBAEGI7cAACwEBAEHI7cAACwEBAEGI7sAACwEB
    AEHI7sAACwEBAEGI78AACwEBAEHI78AACwEBAEGI8MAACwEBAEHI8MAACwEBAEGI8cAACwEBAEHI8cAACwEBAEGI8sAAC
    wEBAEHI8sAACwEBAEGI88AACwEBAEHI88AACwEBAEGI9MAACwEBAEHI9MAACwEBAEGI9cAACwEBAEHI9cAACwEBAEGI9s
    AACwEBAEHI9sAACwEBAEGI98AACwEBAEHI98AACwEBAEGI+MAACwEBAEHI+MAACwEBAEGI+cAACwEBAEHI+cAACwEBAEG
    I+sAACwEBAEHI+sAACwEBAEGI+8AACwEBAEHI+8AACwEBAEGI/MAACwEBAEHI/MAACwEBAEGI/cAACwEBAEHI/cAACwEB
    AEGI/sAACwEBAEHI/sAACwEBAEGI/8AACwEBAEHI/8AACwEBAEGIgMEACwEBAEHIgMEACwEBAEGIgcEACwEBAEHIgcEAC
    wEBAEGIgsEACwEBAEHIgsEACwEBAEGIg8EACwEBAEHIg8EACwEBAEGIhMEACwEBAEHIhMEACwEBAEGIhcEACwEBAEHIhc
    EACwEBAEGIhsEACwEBAEHIhsEACwEBAEGIh8EACwEBAEHIh8EACwEBAEGIiMEACwEBAEHIiMEACwEBAEGIicEACwEBAEH
    IicEACwEBAEGIisEACwEBAEHIisEACwEBAEGIi8EACwEBAEHIi8EACwEBAEGIjMEACwEBAEHIjMEACwEBAEGIjcEACwEB
    AEHIjcEACwEBAEGIjsEACwEBAEHIjsEACwEBAEGIj8EACwEBAEHIj8EACwEBAEGIkMEACwEBAEHIkMEACwEBAEGIkcEAC
    wEBAEHIkcEACwEBAEGIksEACwEBAEHIksEACwEBAEGIk8EACwEBAEHIk8EACwEBAEGIlMEACwEBAEHIlMEACwEBAEGIlc
    EACwEBAEHIlcEACwEBAEGIlsEACwEBAEHIlsEACwEBAEGIl8EACwEBAEHIl8EACwEBAEGImMEACwEBAEHImMEACwEBAEG
    ImcEACwEBAEHImcEACwEBAEGImsEACwEBAEHImsEACwEBAEGIm8EACwEBAEHIm8EACwEBAEGInMEACwEBAEHInMEACwEB
    AEGIncEACwEBAEHIncEACwEBAEGInsEACwEBAEHInsEACwEBAEGIn8EACwEBAEHIn8EACwEBAEGIoMEACwEBAEHIoMEAC
    wEBAEGIocEACwEBAEHIocEACwEBAEGIosEACwEBAEHIosEACwEBAEGIo8EACwEBAEHIo8EACwEBAEGIpMEACwEBAEHIpM
    EACwEBAEGIpcEACwEBAEHIpcEACwEBAEGIpsEACwEBAEHIpsEACwEBAEGIp8EACwEBAEHIp8EACwEBAEGIqMEACwEBAEH
    IqMEACwEBAEGIqcEACwEBAEHIqcEACwEBAEGIqsEACwEBAEHIqsEACwEBAEGIq8EACwEBAEHIq8EACwEBAEGIrMEACwEB
    AEHIrMEACwEBAEGIrcEACwEBAEHIrcEACwEBAEGIrsEACwEBAEHIrsEACwEBAEGIr8EACwEBAEHIr8EACwEBAEGIsMEAC
    wEBAEHIsMEACwEBAEGIscEACwEBAEHIscEACwEBAEGIssEACwEBAEHIssEACwEBAEGIs8EACwEBAEHIs8EACwEBAEGItM
    EACwEBAEHItMEACwEBAEGItcEACwEBAEHItcEACwEBAHsJcHJvZHVjZXJzAghsYW5ndWFnZQEEUnVzdAAMcHJvY2Vzc2V
    kLWJ5AwVydXN0Yx0xLjQ5LjAgKGUxODg0YThlMyAyMDIwLTEyLTI5KQZ3YWxydXMGMC4xOC4wDHdhc20tYmluZGdlbhIw
    LjIuNzAgKGI2MzU1YzI3MCk=
`.replace(/[^0-9a-zA-Z/+]/g, ""), wasmBytes$1 = decode$2(wasmBytesBase64$1);
function bls_init$1() {
  return wasm$1.bls_init();
}
let cachegetUint8Memory0$1 = null;
function getUint8Memory0$1() {
  return (cachegetUint8Memory0$1 === null || cachegetUint8Memory0$1.buffer !== wasm$1.memory.buffer) && (cachegetUint8Memory0$1 = new Uint8Array(wasm$1.memory.buffer)), cachegetUint8Memory0$1;
}
function passArray8ToWasm0$1(e, n) {
  const o = n(e.length * 1);
  return getUint8Memory0$1().set(e, o / 1), [o, e.length];
}
function bls_verify$1(e, n, o) {
  const [s, u] = passArray8ToWasm0$1(e, wasm$1.__wbindgen_malloc), [d, g] = passArray8ToWasm0$1(n, wasm$1.__wbindgen_malloc), [m, w] = passArray8ToWasm0$1(o, wasm$1.__wbindgen_malloc);
  return wasm$1.bls_verify(s, u, d, g, m, w);
}
async function load$1(e, n) {
  if (typeof Response == "function" && e instanceof Response) {
    const o = await e.arrayBuffer();
    return await WebAssembly.instantiate(o, n);
  } else {
    const o = await WebAssembly.instantiate(e, n);
    return o instanceof WebAssembly.Instance ? { instance: o, module: e } : o;
  }
}
async function init$e() {
  const e = {}, { instance: n, module: o } = await load$1(wasmBytes$1, e);
  return wasm$1 = n.exports, init$e.__wbindgen_wasm_module = o, wasm$1;
}
let verify$1;
async function blsVerify$1(e, n, o) {
  if (!verify$1) {
    if (await init$e(), bls_init$1() !== 0)
      throw new Error("Cannot initialize BLS");
    verify$1 = (s, u, d) => bls_verify$1(u, d, s) === 0;
  }
  return verify$1(e, n, o);
}
class UnverifiedCertificateError extends AgentError$1 {
  constructor() {
    super("Cannot lookup unverified certificate. Call 'verify()' first.");
  }
}
function hashTreeToString(e) {
  const n = (s) => s.split(`
`).map((u) => "  " + u).join(`
`);
  function o(s) {
    const u = new TextDecoder(void 0, { fatal: !0 });
    try {
      return JSON.stringify(u.decode(s));
    } catch {
      return `data(...${s.byteLength} bytes)`;
    }
  }
  switch (e[0]) {
    case 0:
      return "()";
    case 1: {
      const s = hashTreeToString(e[1]), u = hashTreeToString(e[2]);
      return `sub(
 left:
${n(s)}
---
 right:
${n(u)}
)`;
    }
    case 2: {
      const s = o(e[1]), u = hashTreeToString(e[2]);
      return `label(
 label:
${n(s)}
 sub:
${n(u)}
)`;
    }
    case 3:
      return `leaf(...${e[1].byteLength} bytes)`;
    case 4:
      return `pruned(${blobToHex(blobFromUint8Array(new Uint8Array(e[1])))}`;
    default:
      return `unknown(${JSON.stringify(e[0])})`;
  }
}
function isBufferEqual$1(e, n) {
  if (e.length !== n.length)
    return !1;
  for (let o = 0; o < e.length; o++)
    if (e[o] !== n[o])
      return !1;
  return !0;
}
class Certificate$1 {
  constructor(n, o = getDefaultAgent$1()) {
    this._agent = o, this.verified = !1, this._rootKey = null, this.cert = decode$3(n.certificate);
  }
  lookupEx(n) {
    return this.checkState(), lookupPathEx(n, this.cert.tree);
  }
  lookup(n) {
    return this.checkState(), lookup_path$1(n, this.cert.tree);
  }
  async verify() {
    const n = await reconstruct$1(this.cert.tree), o = await this._checkDelegation(this.cert.delegation), s = this.cert.signature, u = extractDER$1(o), d = buffer$1.Buffer.concat([domain_sep$1("ic-state-root"), n]), g = await blsVerify$1(u, s, d);
    return this.verified = g, g;
  }
  checkState() {
    if (!this.verified)
      throw new UnverifiedCertificateError();
  }
  async _checkDelegation(n) {
    if (!n) {
      if (!this._rootKey) {
        if (this._agent.rootKey)
          return this._rootKey = this._agent.rootKey, this._rootKey;
        throw new Error("Agent does not have a rootKey. Do you need to call 'fetchRootKey'?");
      }
      return this._rootKey;
    }
    const o = new Certificate$1(n, this._agent);
    if (!await o.verify())
      throw new Error("fail to verify delegation certificate");
    const s = o.lookupEx(["subnet", n.subnet_id, "public_key"]);
    if (!s)
      throw new Error(`Could not find subnet key for subnet 0x${n.subnet_id.toString("hex")}`);
    return buffer$1.Buffer.from(s);
  }
}
const DER_PREFIX$1 = buffer$1.Buffer.from("308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100", "hex"), KEY_LENGTH$1 = 96;
function extractDER$1(e) {
  const n = DER_PREFIX$1.length + KEY_LENGTH$1;
  if (e.length !== n)
    throw new TypeError(`BLS DER-encoded public key must be ${n} bytes long`);
  const o = e.slice(0, DER_PREFIX$1.length);
  if (!isBufferEqual$1(o, DER_PREFIX$1))
    throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX$1}, but get ${o}`);
  return e.slice(DER_PREFIX$1.length);
}
async function reconstruct$1(e) {
  switch (e[0]) {
    case 0:
      return hash$1(domain_sep$1("ic-hashtree-empty"));
    case 4:
      return buffer$1.Buffer.from(e[1]);
    case 3:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-leaf"),
        buffer$1.Buffer.from(e[1])
      ]));
    case 2:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-labeled"),
        buffer$1.Buffer.from(e[1]),
        buffer$1.Buffer.from(await reconstruct$1(e[2]))
      ]));
    case 1:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-fork"),
        buffer$1.Buffer.from(await reconstruct$1(e[1])),
        buffer$1.Buffer.from(await reconstruct$1(e[2]))
      ]));
    default:
      throw new Error("unreachable");
  }
}
function domain_sep$1(e) {
  const n = buffer$1.Buffer.alloc(1);
  return n.writeUInt8(e.length, 0), buffer$1.Buffer.concat([n, buffer$1.Buffer.from(e)]);
}
function lookupPathEx(e, n) {
  const o = lookup_path$1(e.map((s) => typeof s == "string" ? blobFromText(s) : blobFromUint8Array(new Uint8Array(s))), n);
  return o && blobToUint8Array(o);
}
function lookup_path$1(e, n) {
  if (e.length === 0)
    switch (n[0]) {
      case 3:
        return buffer$1.Buffer.from(n[1]);
      default:
        return;
    }
  const o = find_label$1(e[0], flatten_forks$1(n));
  if (o)
    return lookup_path$1(e.slice(1), o);
}
function flatten_forks$1(e) {
  switch (e[0]) {
    case 0:
      return [];
    case 1:
      return flatten_forks$1(e[1]).concat(flatten_forks$1(e[2]));
    default:
      return [e];
  }
}
function find_label$1(e, n) {
  if (n.length !== 0) {
    for (const o of n)
      if (o[0] === 2) {
        const s = buffer$1.Buffer.from(o[1]);
        if (isBufferEqual$1(e, s))
          return o[2];
      }
  }
}
const FIVE_MINUTES_IN_MSEC$1 = 5 * 60 * 1e3;
function defaultStrategy$1() {
  return chain$1(conditionalDelay$1(once$2(), 1e3), backoff$1(1e3, 1.2), timeout$2(FIVE_MINUTES_IN_MSEC$1));
}
function once$2() {
  let e = !0;
  return async () => e ? (e = !1, !0) : !1;
}
function conditionalDelay$1(e, n) {
  return async (o, s, u) => {
    if (await e(o, s, u))
      return new Promise((d) => setTimeout(d, n));
  };
}
function maxAttempts(e) {
  let n = e;
  return async (o, s, u) => {
    if (--n <= 0)
      throw new Error(`Failed to retrieve a reply for request after ${e} attempts:
  Request ID: ${toHex$1(s)}
  Request status: ${u}
`);
  };
}
function throttle(e) {
  return () => new Promise((n) => setTimeout(n, e));
}
function timeout$2(e) {
  const n = Date.now() + e;
  return async (o, s, u) => {
    if (Date.now() > n)
      throw new Error(`Request timed out after ${e} msec:
  Request ID: ${toHex$1(s)}
  Request status: ${u}
`);
  };
}
function backoff$1(e, n) {
  let o = e;
  return () => new Promise((s) => setTimeout(() => {
    o *= n, s();
  }, o));
}
function chain$1(...e) {
  return async (n, o, s) => {
    for (const u of e)
      await u(n, o, s);
  };
}
const strategy = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  defaultStrategy: defaultStrategy$1,
  once: once$2,
  conditionalDelay: conditionalDelay$1,
  maxAttempts,
  throttle,
  timeout: timeout$2,
  backoff: backoff$1,
  chain: chain$1
}, Symbol.toStringTag, { value: "Module" }));
async function pollForResponse$1(e, n, o, s) {
  const u = [blobFromText("request_status"), o], d = await e.readState(n, { paths: [u] }), g = new Certificate$1(d, e);
  if (!await g.verify())
    throw new Error("Fail to verify certificate");
  const w = g.lookup([...u, blobFromText("status")]);
  let B;
  switch (typeof w > "u" ? B = RequestStatusResponseStatus$1.Unknown : B = w.toString(), B) {
    case RequestStatusResponseStatus$1.Replied:
      return g.lookup([...u, blobFromText("reply")]);
    case RequestStatusResponseStatus$1.Received:
    case RequestStatusResponseStatus$1.Unknown:
    case RequestStatusResponseStatus$1.Processing:
      return await s(n, o, B), pollForResponse$1(e, n, o, s);
    case RequestStatusResponseStatus$1.Rejected: {
      const x = g.lookup([...u, blobFromText("reject_code")]).toString(), C = g.lookup([...u, blobFromText("reject_message")]).toString();
      throw new Error(`Call was rejected:
  Request ID: ${toHex$1(o)}
  Reject code: ${x}
  Reject text: ${C}
`);
    }
    case RequestStatusResponseStatus$1.Done:
      throw new Error(`Call was marked as done but we never saw the reply:
  Request ID: ${toHex$1(o)}
`);
  }
  throw new Error("unreachable");
}
const index$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  pollForResponse: pollForResponse$1,
  strategy,
  defaultStrategy: defaultStrategy$1
}, Symbol.toStringTag, { value: "Module" }));
class ActorCallError$1 extends AgentError$1 {
  constructor(n, o, s, u) {
    super([
      "Call failed:",
      `  Canister: ${n.toText()}`,
      `  Method: ${o} (${s})`,
      ...Object.getOwnPropertyNames(u).map((d) => `  "${d}": ${JSON.stringify(u[d])}`)
    ].join(`
`)), this.canisterId = n, this.methodName = o, this.type = s, this.props = u;
  }
}
class QueryCallRejectedError$1 extends ActorCallError$1 {
  constructor(n, o, s) {
    var u;
    super(n, o, "query", {
      Status: s.status,
      Code: (u = ReplicaRejectCode$1[s.reject_code]) !== null && u !== void 0 ? u : `Unknown Code "${s.reject_code}"`,
      Message: s.reject_message
    }), this.result = s;
  }
}
class UpdateCallRejectedError$1 extends ActorCallError$1 {
  constructor(n, o, s, u) {
    super(n, o, "update", {
      "Request ID": toHex$1(s),
      "HTTP status code": u.status.toString(),
      "HTTP status text": u.statusText
    }), this.requestId = s, this.response = u;
  }
}
var CanisterInstallMode$1;
(function(e) {
  e.Install = "install", e.Reinstall = "reinstall", e.Upgrade = "upgrade";
})(CanisterInstallMode$1 || (CanisterInstallMode$1 = {}));
const metadataSymbol$1 = Symbol.for("ic-agent-metadata");
class Actor$1 {
  constructor(n) {
    this[metadataSymbol$1] = Object.freeze(n);
  }
  static agentOf(n) {
    return n[metadataSymbol$1].config.agent;
  }
  static interfaceOf(n) {
    return n[metadataSymbol$1].service;
  }
  static canisterIdOf(n) {
    return Principal$2.from(n[metadataSymbol$1].config.canisterId);
  }
  static async install(n, o) {
    const s = n.mode === void 0 ? CanisterInstallMode$1.Install : n.mode, u = n.arg ? [...n.arg] : [], d = [...n.module], g = typeof o.canisterId == "string" ? Principal$2.fromText(o.canisterId) : o.canisterId;
    await getManagementCanister$1(o).install_code({
      mode: { [s]: null },
      arg: u,
      wasm_module: d,
      canister_id: g
    });
  }
  static async createCanister(n) {
    const { canister_id: o } = await getManagementCanister$1(n || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
    return o;
  }
  static async createAndInstallCanister(n, o, s) {
    const u = await this.createCanister(s);
    return await this.install(Object.assign({}, o), Object.assign(Object.assign({}, s), { canisterId: u })), this.createActor(n, Object.assign(Object.assign({}, s), { canisterId: u }));
  }
  static createActorClass(n) {
    const o = n({ IDL: IDL$1 });
    class s extends Actor$1 {
      constructor(d) {
        const g = typeof d.canisterId == "string" ? Principal$2.fromText(d.canisterId) : d.canisterId;
        super({
          config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG$1), d), { canisterId: g }),
          service: o
        });
        for (const [m, w] of o._fields)
          this[m] = _createActorMethod$1(this, m, w);
      }
    }
    return s;
  }
  static createActor(n, o) {
    return new (this.createActorClass(n))(o);
  }
}
function decodeReturnValue$1(e, n) {
  const o = decode$4(e, buffer$1.Buffer.from(n));
  switch (o.length) {
    case 0:
      return;
    case 1:
      return o[0];
    default:
      return o;
  }
}
const DEFAULT_ACTOR_CONFIG$1 = {
  pollingStrategyFactory: defaultStrategy$1
};
function _createActorMethod$1(e, n, o) {
  let s;
  o.annotations.includes("query") ? s = async (d, ...g) => {
    var m, w;
    d = Object.assign(Object.assign({}, d), (w = (m = e[metadataSymbol$1].config).queryTransform) === null || w === void 0 ? void 0 : w.call(m, n, g, Object.assign(Object.assign({}, e[metadataSymbol$1].config), d)));
    const B = d.agent || e[metadataSymbol$1].config.agent || getDefaultAgent$1(), x = Principal$2.from(d.canisterId || e[metadataSymbol$1].config.canisterId), C = encode$3(o.argTypes, g), v = await B.query(x, { methodName: n, arg: C });
    switch (v.status) {
      case "rejected":
        throw new QueryCallRejectedError$1(x, n, v);
      case "replied":
        return decodeReturnValue$1(o.retTypes, v.reply.arg);
    }
  } : s = async (d, ...g) => {
    var m, w;
    d = Object.assign(Object.assign({}, d), (w = (m = e[metadataSymbol$1].config).callTransform) === null || w === void 0 ? void 0 : w.call(m, n, g, Object.assign(Object.assign({}, e[metadataSymbol$1].config), d)));
    const B = d.agent || e[metadataSymbol$1].config.agent || getDefaultAgent$1(), { canisterId: x, effectiveCanisterId: C, pollingStrategyFactory: v } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG$1), e[metadataSymbol$1].config), d), y = Principal$2.from(x), T = C !== void 0 ? Principal$2.from(C) : y, M = encode$3(o.argTypes, g), { requestId: D, response: V } = await B.call(y, {
      methodName: n,
      arg: M,
      effectiveCanisterId: T
    });
    if (!V.ok)
      throw new UpdateCallRejectedError$1(y, n, D, V);
    const O = v(), H = await pollForResponse$1(B, T, D, O);
    if (H !== void 0)
      return decodeReturnValue$1(o.retTypes, H);
    if (o.retTypes.length === 0)
      return;
    throw new Error(`Call was returned undefined, but type [${o.retTypes.join(",")}].`);
  };
  const u = (...d) => s({}, ...d);
  return u.withOptions = (d) => (...g) => s(d, ...g), u;
}
const assetCanister = ({ IDL: e }) => e.Service({
  retrieve: e.Func([e.Text], [e.Vec(e.Nat8)], ["query"]),
  store: e.Func([e.Text, e.Vec(e.Nat8)], [], [])
});
function createAssetCanisterActor(e) {
  return Actor$1.createActor(assetCanister, e);
}
const esm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  polling: index$1,
  Cbor: cbor,
  ActorCallError: ActorCallError$1,
  QueryCallRejectedError: QueryCallRejectedError$1,
  UpdateCallRejectedError: UpdateCallRejectedError$1,
  get CanisterInstallMode() {
    return CanisterInstallMode$1;
  },
  Actor: Actor$1,
  get ReplicaRejectCode() {
    return ReplicaRejectCode$1;
  },
  Expiry: Expiry$1,
  makeNonceTransform: makeNonceTransform$1,
  makeExpiryTransform,
  get RequestStatusResponseStatus() {
    return RequestStatusResponseStatus$1;
  },
  HttpAgent: HttpAgent$1,
  get ProxyMessageKind() {
    return ProxyMessageKind$1;
  },
  ProxyStubAgent,
  ProxyAgent,
  getDefaultAgent: getDefaultAgent$1,
  SignIdentity,
  AnonymousIdentity: AnonymousIdentity$1,
  createIdentityDescriptor,
  isIdentityDescriptor,
  UnverifiedCertificateError,
  hashTreeToString,
  Certificate: Certificate$1,
  reconstruct: reconstruct$1,
  lookupPathEx,
  lookup_path: lookup_path$1,
  get SubmitRequestType() {
    return SubmitRequestType$1;
  },
  createAssetCanisterActor,
  getManagementCanister: getManagementCanister$1,
  toHex: toHex$1,
  hash: hash$1,
  requestIdOf: requestIdOf$1,
  get verify() {
    return verify$1;
  },
  blsVerify: blsVerify$1
}, Symbol.toStringTag, { value: "Module" })), require$$5 = /* @__PURE__ */ getAugmentedNamespace(esm), require$$4 = /* @__PURE__ */ getAugmentedNamespace(esm$1);
var browserPonyfill = { exports: {} };
(function(e, n) {
  var o = typeof self < "u" ? self : commonjsGlobal, s = function() {
    function d() {
      this.fetch = !1, this.DOMException = o.DOMException;
    }
    return d.prototype = o, new d();
  }();
  (function(d) {
    (function(g) {
      var m = {
        searchParams: "URLSearchParams" in d,
        iterable: "Symbol" in d && "iterator" in Symbol,
        blob: "FileReader" in d && "Blob" in d && function() {
          try {
            return new Blob(), !0;
          } catch {
            return !1;
          }
        }(),
        formData: "FormData" in d,
        arrayBuffer: "ArrayBuffer" in d
      };
      function w(Be) {
        return Be && DataView.prototype.isPrototypeOf(Be);
      }
      if (m.arrayBuffer)
        var B = [
          "[object Int8Array]",
          "[object Uint8Array]",
          "[object Uint8ClampedArray]",
          "[object Int16Array]",
          "[object Uint16Array]",
          "[object Int32Array]",
          "[object Uint32Array]",
          "[object Float32Array]",
          "[object Float64Array]"
        ], x = ArrayBuffer.isView || function(Be) {
          return Be && B.indexOf(Object.prototype.toString.call(Be)) > -1;
        };
      function C(Be) {
        if (typeof Be != "string" && (Be = String(Be)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(Be))
          throw new TypeError("Invalid character in header field name");
        return Be.toLowerCase();
      }
      function v(Be) {
        return typeof Be != "string" && (Be = String(Be)), Be;
      }
      function y(Be) {
        var Me = {
          next: function() {
            var We = Be.shift();
            return { done: We === void 0, value: We };
          }
        };
        return m.iterable && (Me[Symbol.iterator] = function() {
          return Me;
        }), Me;
      }
      function T(Be) {
        this.map = {}, Be instanceof T ? Be.forEach(function(Me, We) {
          this.append(We, Me);
        }, this) : Array.isArray(Be) ? Be.forEach(function(Me) {
          this.append(Me[0], Me[1]);
        }, this) : Be && Object.getOwnPropertyNames(Be).forEach(function(Me) {
          this.append(Me, Be[Me]);
        }, this);
      }
      T.prototype.append = function(Be, Me) {
        Be = C(Be), Me = v(Me);
        var We = this.map[Be];
        this.map[Be] = We ? We + ", " + Me : Me;
      }, T.prototype.delete = function(Be) {
        delete this.map[C(Be)];
      }, T.prototype.get = function(Be) {
        return Be = C(Be), this.has(Be) ? this.map[Be] : null;
      }, T.prototype.has = function(Be) {
        return this.map.hasOwnProperty(C(Be));
      }, T.prototype.set = function(Be, Me) {
        this.map[C(Be)] = v(Me);
      }, T.prototype.forEach = function(Be, Me) {
        for (var We in this.map)
          this.map.hasOwnProperty(We) && Be.call(Me, this.map[We], We, this);
      }, T.prototype.keys = function() {
        var Be = [];
        return this.forEach(function(Me, We) {
          Be.push(We);
        }), y(Be);
      }, T.prototype.values = function() {
        var Be = [];
        return this.forEach(function(Me) {
          Be.push(Me);
        }), y(Be);
      }, T.prototype.entries = function() {
        var Be = [];
        return this.forEach(function(Me, We) {
          Be.push([We, Me]);
        }), y(Be);
      }, m.iterable && (T.prototype[Symbol.iterator] = T.prototype.entries);
      function M(Be) {
        if (Be.bodyUsed)
          return Promise.reject(new TypeError("Already read"));
        Be.bodyUsed = !0;
      }
      function D(Be) {
        return new Promise(function(Me, We) {
          Be.onload = function() {
            Me(Be.result);
          }, Be.onerror = function() {
            We(Be.error);
          };
        });
      }
      function V(Be) {
        var Me = new FileReader(), We = D(Me);
        return Me.readAsArrayBuffer(Be), We;
      }
      function O(Be) {
        var Me = new FileReader(), We = D(Me);
        return Me.readAsText(Be), We;
      }
      function H(Be) {
        for (var Me = new Uint8Array(Be), We = new Array(Me.length), nt = 0; nt < Me.length; nt++)
          We[nt] = String.fromCharCode(Me[nt]);
        return We.join("");
      }
      function q(Be) {
        if (Be.slice)
          return Be.slice(0);
        var Me = new Uint8Array(Be.byteLength);
        return Me.set(new Uint8Array(Be)), Me.buffer;
      }
      function $() {
        return this.bodyUsed = !1, this._initBody = function(Be) {
          this._bodyInit = Be, Be ? typeof Be == "string" ? this._bodyText = Be : m.blob && Blob.prototype.isPrototypeOf(Be) ? this._bodyBlob = Be : m.formData && FormData.prototype.isPrototypeOf(Be) ? this._bodyFormData = Be : m.searchParams && URLSearchParams.prototype.isPrototypeOf(Be) ? this._bodyText = Be.toString() : m.arrayBuffer && m.blob && w(Be) ? (this._bodyArrayBuffer = q(Be.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : m.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(Be) || x(Be)) ? this._bodyArrayBuffer = q(Be) : this._bodyText = Be = Object.prototype.toString.call(Be) : this._bodyText = "", this.headers.get("content-type") || (typeof Be == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : m.searchParams && URLSearchParams.prototype.isPrototypeOf(Be) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
        }, m.blob && (this.blob = function() {
          var Be = M(this);
          if (Be)
            return Be;
          if (this._bodyBlob)
            return Promise.resolve(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as blob");
          return Promise.resolve(new Blob([this._bodyText]));
        }, this.arrayBuffer = function() {
          return this._bodyArrayBuffer ? M(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(V);
        }), this.text = function() {
          var Be = M(this);
          if (Be)
            return Be;
          if (this._bodyBlob)
            return O(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(H(this._bodyArrayBuffer));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as text");
          return Promise.resolve(this._bodyText);
        }, m.formData && (this.formData = function() {
          return this.text().then(Pe);
        }), this.json = function() {
          return this.text().then(JSON.parse);
        }, this;
      }
      var re = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
      function ce(Be) {
        var Me = Be.toUpperCase();
        return re.indexOf(Me) > -1 ? Me : Be;
      }
      function Ie(Be, Me) {
        Me = Me || {};
        var We = Me.body;
        if (Be instanceof Ie) {
          if (Be.bodyUsed)
            throw new TypeError("Already read");
          this.url = Be.url, this.credentials = Be.credentials, Me.headers || (this.headers = new T(Be.headers)), this.method = Be.method, this.mode = Be.mode, this.signal = Be.signal, !We && Be._bodyInit != null && (We = Be._bodyInit, Be.bodyUsed = !0);
        } else
          this.url = String(Be);
        if (this.credentials = Me.credentials || this.credentials || "same-origin", (Me.headers || !this.headers) && (this.headers = new T(Me.headers)), this.method = ce(Me.method || this.method || "GET"), this.mode = Me.mode || this.mode || null, this.signal = Me.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && We)
          throw new TypeError("Body not allowed for GET or HEAD requests");
        this._initBody(We);
      }
      Ie.prototype.clone = function() {
        return new Ie(this, { body: this._bodyInit });
      };
      function Pe(Be) {
        var Me = new FormData();
        return Be.trim().split("&").forEach(function(We) {
          if (We) {
            var nt = We.split("="), Xe = nt.shift().replace(/\+/g, " "), Je = nt.join("=").replace(/\+/g, " ");
            Me.append(decodeURIComponent(Xe), decodeURIComponent(Je));
          }
        }), Me;
      }
      function se(Be) {
        var Me = new T(), We = Be.replace(/\r?\n[\t ]+/g, " ");
        return We.split(/\r?\n/).forEach(function(nt) {
          var Xe = nt.split(":"), Je = Xe.shift().trim();
          if (Je) {
            var qe = Xe.join(":").trim();
            Me.append(Je, qe);
          }
        }), Me;
      }
      $.call(Ie.prototype);
      function Ce(Be, Me) {
        Me || (Me = {}), this.type = "default", this.status = Me.status === void 0 ? 200 : Me.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in Me ? Me.statusText : "OK", this.headers = new T(Me.headers), this.url = Me.url || "", this._initBody(Be);
      }
      $.call(Ce.prototype), Ce.prototype.clone = function() {
        return new Ce(this._bodyInit, {
          status: this.status,
          statusText: this.statusText,
          headers: new T(this.headers),
          url: this.url
        });
      }, Ce.error = function() {
        var Be = new Ce(null, { status: 0, statusText: "" });
        return Be.type = "error", Be;
      };
      var Ge = [301, 302, 303, 307, 308];
      Ce.redirect = function(Be, Me) {
        if (Ge.indexOf(Me) === -1)
          throw new RangeError("Invalid status code");
        return new Ce(null, { status: Me, headers: { location: Be } });
      }, g.DOMException = d.DOMException;
      try {
        new g.DOMException();
      } catch {
        g.DOMException = function(Me, We) {
          this.message = Me, this.name = We;
          var nt = Error(Me);
          this.stack = nt.stack;
        }, g.DOMException.prototype = Object.create(Error.prototype), g.DOMException.prototype.constructor = g.DOMException;
      }
      function $e(Be, Me) {
        return new Promise(function(We, nt) {
          var Xe = new Ie(Be, Me);
          if (Xe.signal && Xe.signal.aborted)
            return nt(new g.DOMException("Aborted", "AbortError"));
          var Je = new XMLHttpRequest();
          function qe() {
            Je.abort();
          }
          Je.onload = function() {
            var ye = {
              status: Je.status,
              statusText: Je.statusText,
              headers: se(Je.getAllResponseHeaders() || "")
            };
            ye.url = "responseURL" in Je ? Je.responseURL : ye.headers.get("X-Request-URL");
            var Ue = "response" in Je ? Je.response : Je.responseText;
            We(new Ce(Ue, ye));
          }, Je.onerror = function() {
            nt(new TypeError("Network request failed"));
          }, Je.ontimeout = function() {
            nt(new TypeError("Network request failed"));
          }, Je.onabort = function() {
            nt(new g.DOMException("Aborted", "AbortError"));
          }, Je.open(Xe.method, Xe.url, !0), Xe.credentials === "include" ? Je.withCredentials = !0 : Xe.credentials === "omit" && (Je.withCredentials = !1), "responseType" in Je && m.blob && (Je.responseType = "blob"), Xe.headers.forEach(function(ye, Ue) {
            Je.setRequestHeader(Ue, ye);
          }), Xe.signal && (Xe.signal.addEventListener("abort", qe), Je.onreadystatechange = function() {
            Je.readyState === 4 && Xe.signal.removeEventListener("abort", qe);
          }), Je.send(typeof Xe._bodyInit > "u" ? null : Xe._bodyInit);
        });
      }
      return $e.polyfill = !0, d.fetch || (d.fetch = $e, d.Headers = T, d.Request = Ie, d.Response = Ce), g.Headers = T, g.Request = Ie, g.Response = Ce, g.fetch = $e, Object.defineProperty(g, "__esModule", { value: !0 }), g;
    })({});
  })(s), s.fetch.ponyfill = !0, delete s.fetch.polyfill;
  var u = s;
  n = u.fetch, n.default = u.fetch, n.fetch = u.fetch, n.Headers = u.Headers, n.Request = u.Request, n.Response = u.Response, e.exports = n;
})(browserPonyfill, browserPonyfill.exports);
var ext = {}, ext_did = {};
Object.defineProperty(ext_did, "__esModule", { value: !0 });
ext_did.init = void 0;
ext_did.default = ({ IDL: e }) => {
  const n = e.Nat32, o = e.Text, s = e.Text, u = e.Nat, d = e.Int, g = e.Vec(e.Nat8), m = e.Vec(e.Nat8), w = e.Record({
    locked: e.Opt(d),
    seller: e.Principal,
    price: e.Nat64
  }), B = e.Variant({
    principal: e.Principal,
    address: o
  }), x = e.Variant({
    InvalidToken: s,
    Other: e.Text
  }), C = e.Record({
    token: s,
    user: B
  }), v = e.Variant({ ok: u, err: x }), y = e.Variant({
    ok: e.Tuple(o, e.Opt(w)),
    err: x
  }), T = e.Variant({
    ok: e.Vec(n),
    err: x
  }), M = e.Variant({
    ok: e.Vec(e.Tuple(n, e.Opt(w), e.Opt(e.Vec(e.Nat8)))),
    err: x
  }), D = e.Record({
    to: B,
    token: s,
    notify: e.Bool,
    from: B,
    memo: m,
    subaccount: e.Opt(g),
    amount: u,
    fee: e.Nat
  }), V = e.Variant({
    ok: u,
    err: e.Variant({
      CannotNotify: o,
      InsufficientBalance: e.Null,
      InvalidToken: s,
      Rejected: e.Null,
      Unauthorized: o,
      Other: e.Text
    })
  }), O = e.Variant({
    fungible: e.Record({
      decimals: e.Nat8,
      metadata: e.Opt(e.Vec(e.Nat8)),
      name: e.Text,
      symbol: e.Text
    }),
    nonfungible: e.Record({ metadata: e.Opt(e.Vec(e.Nat8)) })
  }), H = e.Variant({ ok: O, err: x }), q = e.Variant({ ok: u, err: x });
  return e.Service({
    extensions: e.Func([], [e.Vec(e.Text)], ["query"]),
    balance: e.Func([C], [v], ["query"]),
    details: e.Func([s], [y], ["query"]),
    tokens: e.Func([o], [T], ["query"]),
    tokens_ext: e.Func([o], [M], ["query"]),
    transfer: e.Func([D], [V], []),
    metadata: e.Func([s], [H], ["query"]),
    supply: e.Func([s], [q], ["query"])
  });
};
const init$d = () => [];
ext_did.init = init$d;
var _default = {};
Object.defineProperty(_default, "__esModule", { value: !0 });
class NFT {
  constructor(n, o) {
    this.agent = o, this.canisterId = n;
  }
}
_default.default = NFT;
var account = {}, cryptoJs = { exports: {} };
function commonjsRequire(e) {
  throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var core = { exports: {} };
const __viteBrowserExternal = {}, __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: __viteBrowserExternal
}, Symbol.toStringTag, { value: "Module" })), require$$0 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);
var hasRequiredCore;
function requireCore() {
  return hasRequiredCore || (hasRequiredCore = 1, function(e, n) {
    (function(o, s) {
      e.exports = s();
    })(commonjsGlobal, function() {
      var o = o || function(s, u) {
        var d;
        if (typeof window < "u" && window.crypto && (d = window.crypto), typeof self < "u" && self.crypto && (d = self.crypto), typeof globalThis < "u" && globalThis.crypto && (d = globalThis.crypto), !d && typeof window < "u" && window.msCrypto && (d = window.msCrypto), !d && typeof commonjsGlobal < "u" && commonjsGlobal.crypto && (d = commonjsGlobal.crypto), !d && typeof commonjsRequire == "function")
          try {
            d = require$$0;
          } catch {
          }
        var g = function() {
          if (d) {
            if (typeof d.getRandomValues == "function")
              try {
                return d.getRandomValues(new Uint32Array(1))[0];
              } catch {
              }
            if (typeof d.randomBytes == "function")
              try {
                return d.randomBytes(4).readInt32LE();
              } catch {
              }
          }
          throw new Error("Native crypto module could not be used to get secure random number.");
        }, m = Object.create || function() {
          function O() {
          }
          return function(H) {
            var q;
            return O.prototype = H, q = new O(), O.prototype = null, q;
          };
        }(), w = {}, B = w.lib = {}, x = B.Base = function() {
          return {
            extend: function(O) {
              var H = m(this);
              return O && H.mixIn(O), (!H.hasOwnProperty("init") || this.init === H.init) && (H.init = function() {
                H.$super.init.apply(this, arguments);
              }), H.init.prototype = H, H.$super = this, H;
            },
            create: function() {
              var O = this.extend();
              return O.init.apply(O, arguments), O;
            },
            init: function() {
            },
            mixIn: function(O) {
              for (var H in O)
                O.hasOwnProperty(H) && (this[H] = O[H]);
              O.hasOwnProperty("toString") && (this.toString = O.toString);
            },
            clone: function() {
              return this.init.prototype.extend(this);
            }
          };
        }(), C = B.WordArray = x.extend({
          init: function(O, H) {
            O = this.words = O || [], H != u ? this.sigBytes = H : this.sigBytes = O.length * 4;
          },
          toString: function(O) {
            return (O || y).stringify(this);
          },
          concat: function(O) {
            var H = this.words, q = O.words, $ = this.sigBytes, re = O.sigBytes;
            if (this.clamp(), $ % 4)
              for (var ce = 0; ce < re; ce++) {
                var Ie = q[ce >>> 2] >>> 24 - ce % 4 * 8 & 255;
                H[$ + ce >>> 2] |= Ie << 24 - ($ + ce) % 4 * 8;
              }
            else
              for (var Pe = 0; Pe < re; Pe += 4)
                H[$ + Pe >>> 2] = q[Pe >>> 2];
            return this.sigBytes += re, this;
          },
          clamp: function() {
            var O = this.words, H = this.sigBytes;
            O[H >>> 2] &= 4294967295 << 32 - H % 4 * 8, O.length = s.ceil(H / 4);
          },
          clone: function() {
            var O = x.clone.call(this);
            return O.words = this.words.slice(0), O;
          },
          random: function(O) {
            for (var H = [], q = 0; q < O; q += 4)
              H.push(g());
            return new C.init(H, O);
          }
        }), v = w.enc = {}, y = v.Hex = {
          stringify: function(O) {
            for (var H = O.words, q = O.sigBytes, $ = [], re = 0; re < q; re++) {
              var ce = H[re >>> 2] >>> 24 - re % 4 * 8 & 255;
              $.push((ce >>> 4).toString(16)), $.push((ce & 15).toString(16));
            }
            return $.join("");
          },
          parse: function(O) {
            for (var H = O.length, q = [], $ = 0; $ < H; $ += 2)
              q[$ >>> 3] |= parseInt(O.substr($, 2), 16) << 24 - $ % 8 * 4;
            return new C.init(q, H / 2);
          }
        }, T = v.Latin1 = {
          stringify: function(O) {
            for (var H = O.words, q = O.sigBytes, $ = [], re = 0; re < q; re++) {
              var ce = H[re >>> 2] >>> 24 - re % 4 * 8 & 255;
              $.push(String.fromCharCode(ce));
            }
            return $.join("");
          },
          parse: function(O) {
            for (var H = O.length, q = [], $ = 0; $ < H; $++)
              q[$ >>> 2] |= (O.charCodeAt($) & 255) << 24 - $ % 4 * 8;
            return new C.init(q, H);
          }
        }, M = v.Utf8 = {
          stringify: function(O) {
            try {
              return decodeURIComponent(escape(T.stringify(O)));
            } catch {
              throw new Error("Malformed UTF-8 data");
            }
          },
          parse: function(O) {
            return T.parse(unescape(encodeURIComponent(O)));
          }
        }, D = B.BufferedBlockAlgorithm = x.extend({
          reset: function() {
            this._data = new C.init(), this._nDataBytes = 0;
          },
          _append: function(O) {
            typeof O == "string" && (O = M.parse(O)), this._data.concat(O), this._nDataBytes += O.sigBytes;
          },
          _process: function(O) {
            var H, q = this._data, $ = q.words, re = q.sigBytes, ce = this.blockSize, Ie = ce * 4, Pe = re / Ie;
            O ? Pe = s.ceil(Pe) : Pe = s.max((Pe | 0) - this._minBufferSize, 0);
            var se = Pe * ce, Ce = s.min(se * 4, re);
            if (se) {
              for (var Ge = 0; Ge < se; Ge += ce)
                this._doProcessBlock($, Ge);
              H = $.splice(0, se), q.sigBytes -= Ce;
            }
            return new C.init(H, Ce);
          },
          clone: function() {
            var O = x.clone.call(this);
            return O._data = this._data.clone(), O;
          },
          _minBufferSize: 0
        });
        B.Hasher = D.extend({
          cfg: x.extend(),
          init: function(O) {
            this.cfg = this.cfg.extend(O), this.reset();
          },
          reset: function() {
            D.reset.call(this), this._doReset();
          },
          update: function(O) {
            return this._append(O), this._process(), this;
          },
          finalize: function(O) {
            O && this._append(O);
            var H = this._doFinalize();
            return H;
          },
          blockSize: 16,
          _createHelper: function(O) {
            return function(H, q) {
              return new O.init(q).finalize(H);
            };
          },
          _createHmacHelper: function(O) {
            return function(H, q) {
              return new V.HMAC.init(O, q).finalize(H);
            };
          }
        });
        var V = w.algo = {};
        return w;
      }(Math);
      return o;
    });
  }(core)), core.exports;
}
var x64Core = { exports: {} }, hasRequiredX64Core;
function requireX64Core() {
  return hasRequiredX64Core || (hasRequiredX64Core = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      return function(s) {
        var u = o, d = u.lib, g = d.Base, m = d.WordArray, w = u.x64 = {};
        w.Word = g.extend({
          init: function(B, x) {
            this.high = B, this.low = x;
          }
        }), w.WordArray = g.extend({
          init: function(B, x) {
            B = this.words = B || [], x != s ? this.sigBytes = x : this.sigBytes = B.length * 8;
          },
          toX32: function() {
            for (var B = this.words, x = B.length, C = [], v = 0; v < x; v++) {
              var y = B[v];
              C.push(y.high), C.push(y.low);
            }
            return m.create(C, this.sigBytes);
          },
          clone: function() {
            for (var B = g.clone.call(this), x = B.words = this.words.slice(0), C = x.length, v = 0; v < C; v++)
              x[v] = x[v].clone();
            return B;
          }
        });
      }(), o;
    });
  }(x64Core)), x64Core.exports;
}
var libTypedarrays = { exports: {} }, hasRequiredLibTypedarrays;
function requireLibTypedarrays() {
  return hasRequiredLibTypedarrays || (hasRequiredLibTypedarrays = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      return function() {
        if (typeof ArrayBuffer == "function") {
          var s = o, u = s.lib, d = u.WordArray, g = d.init, m = d.init = function(w) {
            if (w instanceof ArrayBuffer && (w = new Uint8Array(w)), (w instanceof Int8Array || typeof Uint8ClampedArray < "u" && w instanceof Uint8ClampedArray || w instanceof Int16Array || w instanceof Uint16Array || w instanceof Int32Array || w instanceof Uint32Array || w instanceof Float32Array || w instanceof Float64Array) && (w = new Uint8Array(w.buffer, w.byteOffset, w.byteLength)), w instanceof Uint8Array) {
              for (var B = w.byteLength, x = [], C = 0; C < B; C++)
                x[C >>> 2] |= w[C] << 24 - C % 4 * 8;
              g.call(this, x, B);
            } else
              g.apply(this, arguments);
          };
          m.prototype = d;
        }
      }(), o.lib.WordArray;
    });
  }(libTypedarrays)), libTypedarrays.exports;
}
var encUtf16 = { exports: {} }, hasRequiredEncUtf16;
function requireEncUtf16() {
  return hasRequiredEncUtf16 || (hasRequiredEncUtf16 = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.WordArray, g = s.enc;
        g.Utf16 = g.Utf16BE = {
          stringify: function(w) {
            for (var B = w.words, x = w.sigBytes, C = [], v = 0; v < x; v += 2) {
              var y = B[v >>> 2] >>> 16 - v % 4 * 8 & 65535;
              C.push(String.fromCharCode(y));
            }
            return C.join("");
          },
          parse: function(w) {
            for (var B = w.length, x = [], C = 0; C < B; C++)
              x[C >>> 1] |= w.charCodeAt(C) << 16 - C % 2 * 16;
            return d.create(x, B * 2);
          }
        }, g.Utf16LE = {
          stringify: function(w) {
            for (var B = w.words, x = w.sigBytes, C = [], v = 0; v < x; v += 2) {
              var y = m(B[v >>> 2] >>> 16 - v % 4 * 8 & 65535);
              C.push(String.fromCharCode(y));
            }
            return C.join("");
          },
          parse: function(w) {
            for (var B = w.length, x = [], C = 0; C < B; C++)
              x[C >>> 1] |= m(w.charCodeAt(C) << 16 - C % 2 * 16);
            return d.create(x, B * 2);
          }
        };
        function m(w) {
          return w << 8 & 4278255360 | w >>> 8 & 16711935;
        }
      }(), o.enc.Utf16;
    });
  }(encUtf16)), encUtf16.exports;
}
var encBase64 = { exports: {} }, hasRequiredEncBase64;
function requireEncBase64() {
  return hasRequiredEncBase64 || (hasRequiredEncBase64 = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.WordArray, g = s.enc;
        g.Base64 = {
          stringify: function(w) {
            var B = w.words, x = w.sigBytes, C = this._map;
            w.clamp();
            for (var v = [], y = 0; y < x; y += 3)
              for (var T = B[y >>> 2] >>> 24 - y % 4 * 8 & 255, M = B[y + 1 >>> 2] >>> 24 - (y + 1) % 4 * 8 & 255, D = B[y + 2 >>> 2] >>> 24 - (y + 2) % 4 * 8 & 255, V = T << 16 | M << 8 | D, O = 0; O < 4 && y + O * 0.75 < x; O++)
                v.push(C.charAt(V >>> 6 * (3 - O) & 63));
            var H = C.charAt(64);
            if (H)
              for (; v.length % 4; )
                v.push(H);
            return v.join("");
          },
          parse: function(w) {
            var B = w.length, x = this._map, C = this._reverseMap;
            if (!C) {
              C = this._reverseMap = [];
              for (var v = 0; v < x.length; v++)
                C[x.charCodeAt(v)] = v;
            }
            var y = x.charAt(64);
            if (y) {
              var T = w.indexOf(y);
              T !== -1 && (B = T);
            }
            return m(w, B, C);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
        };
        function m(w, B, x) {
          for (var C = [], v = 0, y = 0; y < B; y++)
            if (y % 4) {
              var T = x[w.charCodeAt(y - 1)] << y % 4 * 2, M = x[w.charCodeAt(y)] >>> 6 - y % 4 * 2, D = T | M;
              C[v >>> 2] |= D << 24 - v % 4 * 8, v++;
            }
          return d.create(C, v);
        }
      }(), o.enc.Base64;
    });
  }(encBase64)), encBase64.exports;
}
var encBase64url = { exports: {} }, hasRequiredEncBase64url;
function requireEncBase64url() {
  return hasRequiredEncBase64url || (hasRequiredEncBase64url = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.WordArray, g = s.enc;
        g.Base64url = {
          stringify: function(w, B = !0) {
            var x = w.words, C = w.sigBytes, v = B ? this._safe_map : this._map;
            w.clamp();
            for (var y = [], T = 0; T < C; T += 3)
              for (var M = x[T >>> 2] >>> 24 - T % 4 * 8 & 255, D = x[T + 1 >>> 2] >>> 24 - (T + 1) % 4 * 8 & 255, V = x[T + 2 >>> 2] >>> 24 - (T + 2) % 4 * 8 & 255, O = M << 16 | D << 8 | V, H = 0; H < 4 && T + H * 0.75 < C; H++)
                y.push(v.charAt(O >>> 6 * (3 - H) & 63));
            var q = v.charAt(64);
            if (q)
              for (; y.length % 4; )
                y.push(q);
            return y.join("");
          },
          parse: function(w, B = !0) {
            var x = w.length, C = B ? this._safe_map : this._map, v = this._reverseMap;
            if (!v) {
              v = this._reverseMap = [];
              for (var y = 0; y < C.length; y++)
                v[C.charCodeAt(y)] = y;
            }
            var T = C.charAt(64);
            if (T) {
              var M = w.indexOf(T);
              M !== -1 && (x = M);
            }
            return m(w, x, v);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
          _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
        };
        function m(w, B, x) {
          for (var C = [], v = 0, y = 0; y < B; y++)
            if (y % 4) {
              var T = x[w.charCodeAt(y - 1)] << y % 4 * 2, M = x[w.charCodeAt(y)] >>> 6 - y % 4 * 2, D = T | M;
              C[v >>> 2] |= D << 24 - v % 4 * 8, v++;
            }
          return d.create(C, v);
        }
      }(), o.enc.Base64url;
    });
  }(encBase64url)), encBase64url.exports;
}
var md5 = { exports: {} }, hasRequiredMd5;
function requireMd5() {
  return hasRequiredMd5 || (hasRequiredMd5 = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      return function(s) {
        var u = o, d = u.lib, g = d.WordArray, m = d.Hasher, w = u.algo, B = [];
        (function() {
          for (var M = 0; M < 64; M++)
            B[M] = s.abs(s.sin(M + 1)) * 4294967296 | 0;
        })();
        var x = w.MD5 = m.extend({
          _doReset: function() {
            this._hash = new g.init([
              1732584193,
              4023233417,
              2562383102,
              271733878
            ]);
          },
          _doProcessBlock: function(M, D) {
            for (var V = 0; V < 16; V++) {
              var O = D + V, H = M[O];
              M[O] = (H << 8 | H >>> 24) & 16711935 | (H << 24 | H >>> 8) & 4278255360;
            }
            var q = this._hash.words, $ = M[D + 0], re = M[D + 1], ce = M[D + 2], Ie = M[D + 3], Pe = M[D + 4], se = M[D + 5], Ce = M[D + 6], Ge = M[D + 7], $e = M[D + 8], Be = M[D + 9], Me = M[D + 10], We = M[D + 11], nt = M[D + 12], Xe = M[D + 13], Je = M[D + 14], qe = M[D + 15], ye = q[0], Ue = q[1], ze = q[2], X = q[3];
            ye = C(ye, Ue, ze, X, $, 7, B[0]), X = C(X, ye, Ue, ze, re, 12, B[1]), ze = C(ze, X, ye, Ue, ce, 17, B[2]), Ue = C(Ue, ze, X, ye, Ie, 22, B[3]), ye = C(ye, Ue, ze, X, Pe, 7, B[4]), X = C(X, ye, Ue, ze, se, 12, B[5]), ze = C(ze, X, ye, Ue, Ce, 17, B[6]), Ue = C(Ue, ze, X, ye, Ge, 22, B[7]), ye = C(ye, Ue, ze, X, $e, 7, B[8]), X = C(X, ye, Ue, ze, Be, 12, B[9]), ze = C(ze, X, ye, Ue, Me, 17, B[10]), Ue = C(Ue, ze, X, ye, We, 22, B[11]), ye = C(ye, Ue, ze, X, nt, 7, B[12]), X = C(X, ye, Ue, ze, Xe, 12, B[13]), ze = C(ze, X, ye, Ue, Je, 17, B[14]), Ue = C(Ue, ze, X, ye, qe, 22, B[15]), ye = v(ye, Ue, ze, X, re, 5, B[16]), X = v(X, ye, Ue, ze, Ce, 9, B[17]), ze = v(ze, X, ye, Ue, We, 14, B[18]), Ue = v(Ue, ze, X, ye, $, 20, B[19]), ye = v(ye, Ue, ze, X, se, 5, B[20]), X = v(X, ye, Ue, ze, Me, 9, B[21]), ze = v(ze, X, ye, Ue, qe, 14, B[22]), Ue = v(Ue, ze, X, ye, Pe, 20, B[23]), ye = v(ye, Ue, ze, X, Be, 5, B[24]), X = v(X, ye, Ue, ze, Je, 9, B[25]), ze = v(ze, X, ye, Ue, Ie, 14, B[26]), Ue = v(Ue, ze, X, ye, $e, 20, B[27]), ye = v(ye, Ue, ze, X, Xe, 5, B[28]), X = v(X, ye, Ue, ze, ce, 9, B[29]), ze = v(ze, X, ye, Ue, Ge, 14, B[30]), Ue = v(Ue, ze, X, ye, nt, 20, B[31]), ye = y(ye, Ue, ze, X, se, 4, B[32]), X = y(X, ye, Ue, ze, $e, 11, B[33]), ze = y(ze, X, ye, Ue, We, 16, B[34]), Ue = y(Ue, ze, X, ye, Je, 23, B[35]), ye = y(ye, Ue, ze, X, re, 4, B[36]), X = y(X, ye, Ue, ze, Pe, 11, B[37]), ze = y(ze, X, ye, Ue, Ge, 16, B[38]), Ue = y(Ue, ze, X, ye, Me, 23, B[39]), ye = y(ye, Ue, ze, X, Xe, 4, B[40]), X = y(X, ye, Ue, ze, $, 11, B[41]), ze = y(ze, X, ye, Ue, Ie, 16, B[42]), Ue = y(Ue, ze, X, ye, Ce, 23, B[43]), ye = y(ye, Ue, ze, X, Be, 4, B[44]), X = y(X, ye, Ue, ze, nt, 11, B[45]), ze = y(ze, X, ye, Ue, qe, 16, B[46]), Ue = y(Ue, ze, X, ye, ce, 23, B[47]), ye = T(ye, Ue, ze, X, $, 6, B[48]), X = T(X, ye, Ue, ze, Ge, 10, B[49]), ze = T(ze, X, ye, Ue, Je, 15, B[50]), Ue = T(Ue, ze, X, ye, se, 21, B[51]), ye = T(ye, Ue, ze, X, nt, 6, B[52]), X = T(X, ye, Ue, ze, Ie, 10, B[53]), ze = T(ze, X, ye, Ue, Me, 15, B[54]), Ue = T(Ue, ze, X, ye, re, 21, B[55]), ye = T(ye, Ue, ze, X, $e, 6, B[56]), X = T(X, ye, Ue, ze, qe, 10, B[57]), ze = T(ze, X, ye, Ue, Ce, 15, B[58]), Ue = T(Ue, ze, X, ye, Xe, 21, B[59]), ye = T(ye, Ue, ze, X, Pe, 6, B[60]), X = T(X, ye, Ue, ze, We, 10, B[61]), ze = T(ze, X, ye, Ue, ce, 15, B[62]), Ue = T(Ue, ze, X, ye, Be, 21, B[63]), q[0] = q[0] + ye | 0, q[1] = q[1] + Ue | 0, q[2] = q[2] + ze | 0, q[3] = q[3] + X | 0;
          },
          _doFinalize: function() {
            var M = this._data, D = M.words, V = this._nDataBytes * 8, O = M.sigBytes * 8;
            D[O >>> 5] |= 128 << 24 - O % 32;
            var H = s.floor(V / 4294967296), q = V;
            D[(O + 64 >>> 9 << 4) + 15] = (H << 8 | H >>> 24) & 16711935 | (H << 24 | H >>> 8) & 4278255360, D[(O + 64 >>> 9 << 4) + 14] = (q << 8 | q >>> 24) & 16711935 | (q << 24 | q >>> 8) & 4278255360, M.sigBytes = (D.length + 1) * 4, this._process();
            for (var $ = this._hash, re = $.words, ce = 0; ce < 4; ce++) {
              var Ie = re[ce];
              re[ce] = (Ie << 8 | Ie >>> 24) & 16711935 | (Ie << 24 | Ie >>> 8) & 4278255360;
            }
            return $;
          },
          clone: function() {
            var M = m.clone.call(this);
            return M._hash = this._hash.clone(), M;
          }
        });
        function C(M, D, V, O, H, q, $) {
          var re = M + (D & V | ~D & O) + H + $;
          return (re << q | re >>> 32 - q) + D;
        }
        function v(M, D, V, O, H, q, $) {
          var re = M + (D & O | V & ~O) + H + $;
          return (re << q | re >>> 32 - q) + D;
        }
        function y(M, D, V, O, H, q, $) {
          var re = M + (D ^ V ^ O) + H + $;
          return (re << q | re >>> 32 - q) + D;
        }
        function T(M, D, V, O, H, q, $) {
          var re = M + (V ^ (D | ~O)) + H + $;
          return (re << q | re >>> 32 - q) + D;
        }
        u.MD5 = m._createHelper(x), u.HmacMD5 = m._createHmacHelper(x);
      }(Math), o.MD5;
    });
  }(md5)), md5.exports;
}
var sha1 = { exports: {} }, hasRequiredSha1;
function requireSha1() {
  return hasRequiredSha1 || (hasRequiredSha1 = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.WordArray, g = u.Hasher, m = s.algo, w = [], B = m.SHA1 = g.extend({
          _doReset: function() {
            this._hash = new d.init([
              1732584193,
              4023233417,
              2562383102,
              271733878,
              3285377520
            ]);
          },
          _doProcessBlock: function(x, C) {
            for (var v = this._hash.words, y = v[0], T = v[1], M = v[2], D = v[3], V = v[4], O = 0; O < 80; O++) {
              if (O < 16)
                w[O] = x[C + O] | 0;
              else {
                var H = w[O - 3] ^ w[O - 8] ^ w[O - 14] ^ w[O - 16];
                w[O] = H << 1 | H >>> 31;
              }
              var q = (y << 5 | y >>> 27) + V + w[O];
              O < 20 ? q += (T & M | ~T & D) + 1518500249 : O < 40 ? q += (T ^ M ^ D) + 1859775393 : O < 60 ? q += (T & M | T & D | M & D) - 1894007588 : q += (T ^ M ^ D) - 899497514, V = D, D = M, M = T << 30 | T >>> 2, T = y, y = q;
            }
            v[0] = v[0] + y | 0, v[1] = v[1] + T | 0, v[2] = v[2] + M | 0, v[3] = v[3] + D | 0, v[4] = v[4] + V | 0;
          },
          _doFinalize: function() {
            var x = this._data, C = x.words, v = this._nDataBytes * 8, y = x.sigBytes * 8;
            return C[y >>> 5] |= 128 << 24 - y % 32, C[(y + 64 >>> 9 << 4) + 14] = Math.floor(v / 4294967296), C[(y + 64 >>> 9 << 4) + 15] = v, x.sigBytes = C.length * 4, this._process(), this._hash;
          },
          clone: function() {
            var x = g.clone.call(this);
            return x._hash = this._hash.clone(), x;
          }
        });
        s.SHA1 = g._createHelper(B), s.HmacSHA1 = g._createHmacHelper(B);
      }(), o.SHA1;
    });
  }(sha1)), sha1.exports;
}
var sha256 = { exports: {} }, hasRequiredSha256;
function requireSha256() {
  return hasRequiredSha256 || (hasRequiredSha256 = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      return function(s) {
        var u = o, d = u.lib, g = d.WordArray, m = d.Hasher, w = u.algo, B = [], x = [];
        (function() {
          function y(V) {
            for (var O = s.sqrt(V), H = 2; H <= O; H++)
              if (!(V % H))
                return !1;
            return !0;
          }
          function T(V) {
            return (V - (V | 0)) * 4294967296 | 0;
          }
          for (var M = 2, D = 0; D < 64; )
            y(M) && (D < 8 && (B[D] = T(s.pow(M, 1 / 2))), x[D] = T(s.pow(M, 1 / 3)), D++), M++;
        })();
        var C = [], v = w.SHA256 = m.extend({
          _doReset: function() {
            this._hash = new g.init(B.slice(0));
          },
          _doProcessBlock: function(y, T) {
            for (var M = this._hash.words, D = M[0], V = M[1], O = M[2], H = M[3], q = M[4], $ = M[5], re = M[6], ce = M[7], Ie = 0; Ie < 64; Ie++) {
              if (Ie < 16)
                C[Ie] = y[T + Ie] | 0;
              else {
                var Pe = C[Ie - 15], se = (Pe << 25 | Pe >>> 7) ^ (Pe << 14 | Pe >>> 18) ^ Pe >>> 3, Ce = C[Ie - 2], Ge = (Ce << 15 | Ce >>> 17) ^ (Ce << 13 | Ce >>> 19) ^ Ce >>> 10;
                C[Ie] = se + C[Ie - 7] + Ge + C[Ie - 16];
              }
              var $e = q & $ ^ ~q & re, Be = D & V ^ D & O ^ V & O, Me = (D << 30 | D >>> 2) ^ (D << 19 | D >>> 13) ^ (D << 10 | D >>> 22), We = (q << 26 | q >>> 6) ^ (q << 21 | q >>> 11) ^ (q << 7 | q >>> 25), nt = ce + We + $e + x[Ie] + C[Ie], Xe = Me + Be;
              ce = re, re = $, $ = q, q = H + nt | 0, H = O, O = V, V = D, D = nt + Xe | 0;
            }
            M[0] = M[0] + D | 0, M[1] = M[1] + V | 0, M[2] = M[2] + O | 0, M[3] = M[3] + H | 0, M[4] = M[4] + q | 0, M[5] = M[5] + $ | 0, M[6] = M[6] + re | 0, M[7] = M[7] + ce | 0;
          },
          _doFinalize: function() {
            var y = this._data, T = y.words, M = this._nDataBytes * 8, D = y.sigBytes * 8;
            return T[D >>> 5] |= 128 << 24 - D % 32, T[(D + 64 >>> 9 << 4) + 14] = s.floor(M / 4294967296), T[(D + 64 >>> 9 << 4) + 15] = M, y.sigBytes = T.length * 4, this._process(), this._hash;
          },
          clone: function() {
            var y = m.clone.call(this);
            return y._hash = this._hash.clone(), y;
          }
        });
        u.SHA256 = m._createHelper(v), u.HmacSHA256 = m._createHmacHelper(v);
      }(Math), o.SHA256;
    });
  }(sha256)), sha256.exports;
}
var sha224 = { exports: {} }, hasRequiredSha224;
function requireSha224() {
  return hasRequiredSha224 || (hasRequiredSha224 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireSha256());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.WordArray, g = s.algo, m = g.SHA256, w = g.SHA224 = m.extend({
          _doReset: function() {
            this._hash = new d.init([
              3238371032,
              914150663,
              812702999,
              4144912697,
              4290775857,
              1750603025,
              1694076839,
              3204075428
            ]);
          },
          _doFinalize: function() {
            var B = m._doFinalize.call(this);
            return B.sigBytes -= 4, B;
          }
        });
        s.SHA224 = m._createHelper(w), s.HmacSHA224 = m._createHmacHelper(w);
      }(), o.SHA224;
    });
  }(sha224)), sha224.exports;
}
var sha512 = { exports: {} }, hasRequiredSha512;
function requireSha512() {
  return hasRequiredSha512 || (hasRequiredSha512 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireX64Core());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.Hasher, g = s.x64, m = g.Word, w = g.WordArray, B = s.algo;
        function x() {
          return m.create.apply(m, arguments);
        }
        var C = [
          x(1116352408, 3609767458),
          x(1899447441, 602891725),
          x(3049323471, 3964484399),
          x(3921009573, 2173295548),
          x(961987163, 4081628472),
          x(1508970993, 3053834265),
          x(2453635748, 2937671579),
          x(2870763221, 3664609560),
          x(3624381080, 2734883394),
          x(310598401, 1164996542),
          x(607225278, 1323610764),
          x(1426881987, 3590304994),
          x(1925078388, 4068182383),
          x(2162078206, 991336113),
          x(2614888103, 633803317),
          x(3248222580, 3479774868),
          x(3835390401, 2666613458),
          x(4022224774, 944711139),
          x(264347078, 2341262773),
          x(604807628, 2007800933),
          x(770255983, 1495990901),
          x(1249150122, 1856431235),
          x(1555081692, 3175218132),
          x(1996064986, 2198950837),
          x(2554220882, 3999719339),
          x(2821834349, 766784016),
          x(2952996808, 2566594879),
          x(3210313671, 3203337956),
          x(3336571891, 1034457026),
          x(3584528711, 2466948901),
          x(113926993, 3758326383),
          x(338241895, 168717936),
          x(666307205, 1188179964),
          x(773529912, 1546045734),
          x(1294757372, 1522805485),
          x(1396182291, 2643833823),
          x(1695183700, 2343527390),
          x(1986661051, 1014477480),
          x(2177026350, 1206759142),
          x(2456956037, 344077627),
          x(2730485921, 1290863460),
          x(2820302411, 3158454273),
          x(3259730800, 3505952657),
          x(3345764771, 106217008),
          x(3516065817, 3606008344),
          x(3600352804, 1432725776),
          x(4094571909, 1467031594),
          x(275423344, 851169720),
          x(430227734, 3100823752),
          x(506948616, 1363258195),
          x(659060556, 3750685593),
          x(883997877, 3785050280),
          x(958139571, 3318307427),
          x(1322822218, 3812723403),
          x(1537002063, 2003034995),
          x(1747873779, 3602036899),
          x(1955562222, 1575990012),
          x(2024104815, 1125592928),
          x(2227730452, 2716904306),
          x(2361852424, 442776044),
          x(2428436474, 593698344),
          x(2756734187, 3733110249),
          x(3204031479, 2999351573),
          x(3329325298, 3815920427),
          x(3391569614, 3928383900),
          x(3515267271, 566280711),
          x(3940187606, 3454069534),
          x(4118630271, 4000239992),
          x(116418474, 1914138554),
          x(174292421, 2731055270),
          x(289380356, 3203993006),
          x(460393269, 320620315),
          x(685471733, 587496836),
          x(852142971, 1086792851),
          x(1017036298, 365543100),
          x(1126000580, 2618297676),
          x(1288033470, 3409855158),
          x(1501505948, 4234509866),
          x(1607167915, 987167468),
          x(1816402316, 1246189591)
        ], v = [];
        (function() {
          for (var T = 0; T < 80; T++)
            v[T] = x();
        })();
        var y = B.SHA512 = d.extend({
          _doReset: function() {
            this._hash = new w.init([
              new m.init(1779033703, 4089235720),
              new m.init(3144134277, 2227873595),
              new m.init(1013904242, 4271175723),
              new m.init(2773480762, 1595750129),
              new m.init(1359893119, 2917565137),
              new m.init(2600822924, 725511199),
              new m.init(528734635, 4215389547),
              new m.init(1541459225, 327033209)
            ]);
          },
          _doProcessBlock: function(T, M) {
            for (var D = this._hash.words, V = D[0], O = D[1], H = D[2], q = D[3], $ = D[4], re = D[5], ce = D[6], Ie = D[7], Pe = V.high, se = V.low, Ce = O.high, Ge = O.low, $e = H.high, Be = H.low, Me = q.high, We = q.low, nt = $.high, Xe = $.low, Je = re.high, qe = re.low, ye = ce.high, Ue = ce.low, ze = Ie.high, X = Ie.low, ut = Pe, ot = se, mt = Ce, ve = Ge, je = $e, ie = Be, ae = Me, z = We, be = nt, fe = Xe, J = Je, R = qe, Q = ye, b = Ue, U = ze, Z = X, ne = 0; ne < 80; ne++) {
              var le, Ne, Ke = v[ne];
              if (ne < 16)
                Ne = Ke.high = T[M + ne * 2] | 0, le = Ke.low = T[M + ne * 2 + 1] | 0;
              else {
                var Ze = v[ne - 15], et = Ze.high, Y = Ze.low, k = (et >>> 1 | Y << 31) ^ (et >>> 8 | Y << 24) ^ et >>> 7, F = (Y >>> 1 | et << 31) ^ (Y >>> 8 | et << 24) ^ (Y >>> 7 | et << 25), ue = v[ne - 2], Qe = ue.high, Oe = ue.low, Ve = (Qe >>> 19 | Oe << 13) ^ (Qe << 3 | Oe >>> 29) ^ Qe >>> 6, It = (Oe >>> 19 | Qe << 13) ^ (Oe << 3 | Qe >>> 29) ^ (Oe >>> 6 | Qe << 26), vt = v[ne - 7], Qt = vt.high, Ct = vt.low, Rt = v[ne - 16], or = Rt.high, tn = Rt.low;
                le = F + Ct, Ne = k + Qt + (le >>> 0 < F >>> 0 ? 1 : 0), le = le + It, Ne = Ne + Ve + (le >>> 0 < It >>> 0 ? 1 : 0), le = le + tn, Ne = Ne + or + (le >>> 0 < tn >>> 0 ? 1 : 0), Ke.high = Ne, Ke.low = le;
              }
              var ur = be & J ^ ~be & Q, Vr = fe & R ^ ~fe & b, zr = ut & mt ^ ut & je ^ mt & je, $r = ot & ve ^ ot & ie ^ ve & ie, jr = (ut >>> 28 | ot << 4) ^ (ut << 30 | ot >>> 2) ^ (ut << 25 | ot >>> 7), dn = (ot >>> 28 | ut << 4) ^ (ot << 30 | ut >>> 2) ^ (ot << 25 | ut >>> 7), vn = (be >>> 14 | fe << 18) ^ (be >>> 18 | fe << 14) ^ (be << 23 | fe >>> 9), ti = (fe >>> 14 | be << 18) ^ (fe >>> 18 | be << 14) ^ (fe << 23 | be >>> 9), Fn = C[ne], Yr = Fn.high, rn = Fn.low, Zr = Z + ti, hn = U + vn + (Zr >>> 0 < Z >>> 0 ? 1 : 0), Zr = Zr + Vr, hn = hn + ur + (Zr >>> 0 < Vr >>> 0 ? 1 : 0), Zr = Zr + rn, hn = hn + Yr + (Zr >>> 0 < rn >>> 0 ? 1 : 0), Zr = Zr + le, hn = hn + Ne + (Zr >>> 0 < le >>> 0 ? 1 : 0), Cn = dn + $r, In = jr + zr + (Cn >>> 0 < dn >>> 0 ? 1 : 0);
              U = Q, Z = b, Q = J, b = R, J = be, R = fe, fe = z + Zr | 0, be = ae + hn + (fe >>> 0 < z >>> 0 ? 1 : 0) | 0, ae = je, z = ie, je = mt, ie = ve, mt = ut, ve = ot, ot = Zr + Cn | 0, ut = hn + In + (ot >>> 0 < Zr >>> 0 ? 1 : 0) | 0;
            }
            se = V.low = se + ot, V.high = Pe + ut + (se >>> 0 < ot >>> 0 ? 1 : 0), Ge = O.low = Ge + ve, O.high = Ce + mt + (Ge >>> 0 < ve >>> 0 ? 1 : 0), Be = H.low = Be + ie, H.high = $e + je + (Be >>> 0 < ie >>> 0 ? 1 : 0), We = q.low = We + z, q.high = Me + ae + (We >>> 0 < z >>> 0 ? 1 : 0), Xe = $.low = Xe + fe, $.high = nt + be + (Xe >>> 0 < fe >>> 0 ? 1 : 0), qe = re.low = qe + R, re.high = Je + J + (qe >>> 0 < R >>> 0 ? 1 : 0), Ue = ce.low = Ue + b, ce.high = ye + Q + (Ue >>> 0 < b >>> 0 ? 1 : 0), X = Ie.low = X + Z, Ie.high = ze + U + (X >>> 0 < Z >>> 0 ? 1 : 0);
          },
          _doFinalize: function() {
            var T = this._data, M = T.words, D = this._nDataBytes * 8, V = T.sigBytes * 8;
            M[V >>> 5] |= 128 << 24 - V % 32, M[(V + 128 >>> 10 << 5) + 30] = Math.floor(D / 4294967296), M[(V + 128 >>> 10 << 5) + 31] = D, T.sigBytes = M.length * 4, this._process();
            var O = this._hash.toX32();
            return O;
          },
          clone: function() {
            var T = d.clone.call(this);
            return T._hash = this._hash.clone(), T;
          },
          blockSize: 1024 / 32
        });
        s.SHA512 = d._createHelper(y), s.HmacSHA512 = d._createHmacHelper(y);
      }(), o.SHA512;
    });
  }(sha512)), sha512.exports;
}
var sha384 = { exports: {} }, hasRequiredSha384;
function requireSha384() {
  return hasRequiredSha384 || (hasRequiredSha384 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireX64Core(), requireSha512());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.x64, d = u.Word, g = u.WordArray, m = s.algo, w = m.SHA512, B = m.SHA384 = w.extend({
          _doReset: function() {
            this._hash = new g.init([
              new d.init(3418070365, 3238371032),
              new d.init(1654270250, 914150663),
              new d.init(2438529370, 812702999),
              new d.init(355462360, 4144912697),
              new d.init(1731405415, 4290775857),
              new d.init(2394180231, 1750603025),
              new d.init(3675008525, 1694076839),
              new d.init(1203062813, 3204075428)
            ]);
          },
          _doFinalize: function() {
            var x = w._doFinalize.call(this);
            return x.sigBytes -= 16, x;
          }
        });
        s.SHA384 = w._createHelper(B), s.HmacSHA384 = w._createHmacHelper(B);
      }(), o.SHA384;
    });
  }(sha384)), sha384.exports;
}
var sha3 = { exports: {} }, hasRequiredSha3;
function requireSha3() {
  return hasRequiredSha3 || (hasRequiredSha3 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireX64Core());
    })(commonjsGlobal, function(o) {
      return function(s) {
        var u = o, d = u.lib, g = d.WordArray, m = d.Hasher, w = u.x64, B = w.Word, x = u.algo, C = [], v = [], y = [];
        (function() {
          for (var D = 1, V = 0, O = 0; O < 24; O++) {
            C[D + 5 * V] = (O + 1) * (O + 2) / 2 % 64;
            var H = V % 5, q = (2 * D + 3 * V) % 5;
            D = H, V = q;
          }
          for (var D = 0; D < 5; D++)
            for (var V = 0; V < 5; V++)
              v[D + 5 * V] = V + (2 * D + 3 * V) % 5 * 5;
          for (var $ = 1, re = 0; re < 24; re++) {
            for (var ce = 0, Ie = 0, Pe = 0; Pe < 7; Pe++) {
              if ($ & 1) {
                var se = (1 << Pe) - 1;
                se < 32 ? Ie ^= 1 << se : ce ^= 1 << se - 32;
              }
              $ & 128 ? $ = $ << 1 ^ 113 : $ <<= 1;
            }
            y[re] = B.create(ce, Ie);
          }
        })();
        var T = [];
        (function() {
          for (var D = 0; D < 25; D++)
            T[D] = B.create();
        })();
        var M = x.SHA3 = m.extend({
          cfg: m.cfg.extend({
            outputLength: 512
          }),
          _doReset: function() {
            for (var D = this._state = [], V = 0; V < 25; V++)
              D[V] = new B.init();
            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
          },
          _doProcessBlock: function(D, V) {
            for (var O = this._state, H = this.blockSize / 2, q = 0; q < H; q++) {
              var $ = D[V + 2 * q], re = D[V + 2 * q + 1];
              $ = ($ << 8 | $ >>> 24) & 16711935 | ($ << 24 | $ >>> 8) & 4278255360, re = (re << 8 | re >>> 24) & 16711935 | (re << 24 | re >>> 8) & 4278255360;
              var ce = O[q];
              ce.high ^= re, ce.low ^= $;
            }
            for (var Ie = 0; Ie < 24; Ie++) {
              for (var Pe = 0; Pe < 5; Pe++) {
                for (var se = 0, Ce = 0, Ge = 0; Ge < 5; Ge++) {
                  var ce = O[Pe + 5 * Ge];
                  se ^= ce.high, Ce ^= ce.low;
                }
                var $e = T[Pe];
                $e.high = se, $e.low = Ce;
              }
              for (var Pe = 0; Pe < 5; Pe++)
                for (var Be = T[(Pe + 4) % 5], Me = T[(Pe + 1) % 5], We = Me.high, nt = Me.low, se = Be.high ^ (We << 1 | nt >>> 31), Ce = Be.low ^ (nt << 1 | We >>> 31), Ge = 0; Ge < 5; Ge++) {
                  var ce = O[Pe + 5 * Ge];
                  ce.high ^= se, ce.low ^= Ce;
                }
              for (var Xe = 1; Xe < 25; Xe++) {
                var se, Ce, ce = O[Xe], Je = ce.high, qe = ce.low, ye = C[Xe];
                ye < 32 ? (se = Je << ye | qe >>> 32 - ye, Ce = qe << ye | Je >>> 32 - ye) : (se = qe << ye - 32 | Je >>> 64 - ye, Ce = Je << ye - 32 | qe >>> 64 - ye);
                var Ue = T[v[Xe]];
                Ue.high = se, Ue.low = Ce;
              }
              var ze = T[0], X = O[0];
              ze.high = X.high, ze.low = X.low;
              for (var Pe = 0; Pe < 5; Pe++)
                for (var Ge = 0; Ge < 5; Ge++) {
                  var Xe = Pe + 5 * Ge, ce = O[Xe], ut = T[Xe], ot = T[(Pe + 1) % 5 + 5 * Ge], mt = T[(Pe + 2) % 5 + 5 * Ge];
                  ce.high = ut.high ^ ~ot.high & mt.high, ce.low = ut.low ^ ~ot.low & mt.low;
                }
              var ce = O[0], ve = y[Ie];
              ce.high ^= ve.high, ce.low ^= ve.low;
            }
          },
          _doFinalize: function() {
            var D = this._data, V = D.words;
            this._nDataBytes * 8;
            var O = D.sigBytes * 8, H = this.blockSize * 32;
            V[O >>> 5] |= 1 << 24 - O % 32, V[(s.ceil((O + 1) / H) * H >>> 5) - 1] |= 128, D.sigBytes = V.length * 4, this._process();
            for (var q = this._state, $ = this.cfg.outputLength / 8, re = $ / 8, ce = [], Ie = 0; Ie < re; Ie++) {
              var Pe = q[Ie], se = Pe.high, Ce = Pe.low;
              se = (se << 8 | se >>> 24) & 16711935 | (se << 24 | se >>> 8) & 4278255360, Ce = (Ce << 8 | Ce >>> 24) & 16711935 | (Ce << 24 | Ce >>> 8) & 4278255360, ce.push(Ce), ce.push(se);
            }
            return new g.init(ce, $);
          },
          clone: function() {
            for (var D = m.clone.call(this), V = D._state = this._state.slice(0), O = 0; O < 25; O++)
              V[O] = V[O].clone();
            return D;
          }
        });
        u.SHA3 = m._createHelper(M), u.HmacSHA3 = m._createHmacHelper(M);
      }(Math), o.SHA3;
    });
  }(sha3)), sha3.exports;
}
var ripemd160 = { exports: {} }, hasRequiredRipemd160;
function requireRipemd160() {
  return hasRequiredRipemd160 || (hasRequiredRipemd160 = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      /** @preserve
      			(c) 2012 by Cédric Mesnil. All rights reserved.
      
      			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
      
      			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      
      			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      			*/
      return function(s) {
        var u = o, d = u.lib, g = d.WordArray, m = d.Hasher, w = u.algo, B = g.create([
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13
        ]), x = g.create([
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11
        ]), C = g.create([
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6
        ]), v = g.create([
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11
        ]), y = g.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), T = g.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), M = w.RIPEMD160 = m.extend({
          _doReset: function() {
            this._hash = g.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          },
          _doProcessBlock: function(re, ce) {
            for (var Ie = 0; Ie < 16; Ie++) {
              var Pe = ce + Ie, se = re[Pe];
              re[Pe] = (se << 8 | se >>> 24) & 16711935 | (se << 24 | se >>> 8) & 4278255360;
            }
            var Ce = this._hash.words, Ge = y.words, $e = T.words, Be = B.words, Me = x.words, We = C.words, nt = v.words, Xe, Je, qe, ye, Ue, ze, X, ut, ot, mt;
            ze = Xe = Ce[0], X = Je = Ce[1], ut = qe = Ce[2], ot = ye = Ce[3], mt = Ue = Ce[4];
            for (var ve, Ie = 0; Ie < 80; Ie += 1)
              ve = Xe + re[ce + Be[Ie]] | 0, Ie < 16 ? ve += D(Je, qe, ye) + Ge[0] : Ie < 32 ? ve += V(Je, qe, ye) + Ge[1] : Ie < 48 ? ve += O(Je, qe, ye) + Ge[2] : Ie < 64 ? ve += H(Je, qe, ye) + Ge[3] : ve += q(Je, qe, ye) + Ge[4], ve = ve | 0, ve = $(ve, We[Ie]), ve = ve + Ue | 0, Xe = Ue, Ue = ye, ye = $(qe, 10), qe = Je, Je = ve, ve = ze + re[ce + Me[Ie]] | 0, Ie < 16 ? ve += q(X, ut, ot) + $e[0] : Ie < 32 ? ve += H(X, ut, ot) + $e[1] : Ie < 48 ? ve += O(X, ut, ot) + $e[2] : Ie < 64 ? ve += V(X, ut, ot) + $e[3] : ve += D(X, ut, ot) + $e[4], ve = ve | 0, ve = $(ve, nt[Ie]), ve = ve + mt | 0, ze = mt, mt = ot, ot = $(ut, 10), ut = X, X = ve;
            ve = Ce[1] + qe + ot | 0, Ce[1] = Ce[2] + ye + mt | 0, Ce[2] = Ce[3] + Ue + ze | 0, Ce[3] = Ce[4] + Xe + X | 0, Ce[4] = Ce[0] + Je + ut | 0, Ce[0] = ve;
          },
          _doFinalize: function() {
            var re = this._data, ce = re.words, Ie = this._nDataBytes * 8, Pe = re.sigBytes * 8;
            ce[Pe >>> 5] |= 128 << 24 - Pe % 32, ce[(Pe + 64 >>> 9 << 4) + 14] = (Ie << 8 | Ie >>> 24) & 16711935 | (Ie << 24 | Ie >>> 8) & 4278255360, re.sigBytes = (ce.length + 1) * 4, this._process();
            for (var se = this._hash, Ce = se.words, Ge = 0; Ge < 5; Ge++) {
              var $e = Ce[Ge];
              Ce[Ge] = ($e << 8 | $e >>> 24) & 16711935 | ($e << 24 | $e >>> 8) & 4278255360;
            }
            return se;
          },
          clone: function() {
            var re = m.clone.call(this);
            return re._hash = this._hash.clone(), re;
          }
        });
        function D(re, ce, Ie) {
          return re ^ ce ^ Ie;
        }
        function V(re, ce, Ie) {
          return re & ce | ~re & Ie;
        }
        function O(re, ce, Ie) {
          return (re | ~ce) ^ Ie;
        }
        function H(re, ce, Ie) {
          return re & Ie | ce & ~Ie;
        }
        function q(re, ce, Ie) {
          return re ^ (ce | ~Ie);
        }
        function $(re, ce) {
          return re << ce | re >>> 32 - ce;
        }
        u.RIPEMD160 = m._createHelper(M), u.HmacRIPEMD160 = m._createHmacHelper(M);
      }(), o.RIPEMD160;
    });
  }(ripemd160)), ripemd160.exports;
}
var hmac = { exports: {} }, hasRequiredHmac;
function requireHmac() {
  return hasRequiredHmac || (hasRequiredHmac = 1, function(e, n) {
    (function(o, s) {
      e.exports = s(requireCore());
    })(commonjsGlobal, function(o) {
      (function() {
        var s = o, u = s.lib, d = u.Base, g = s.enc, m = g.Utf8, w = s.algo;
        w.HMAC = d.extend({
          init: function(B, x) {
            B = this._hasher = new B.init(), typeof x == "string" && (x = m.parse(x));
            var C = B.blockSize, v = C * 4;
            x.sigBytes > v && (x = B.finalize(x)), x.clamp();
            for (var y = this._oKey = x.clone(), T = this._iKey = x.clone(), M = y.words, D = T.words, V = 0; V < C; V++)
              M[V] ^= 1549556828, D[V] ^= 909522486;
            y.sigBytes = T.sigBytes = v, this.reset();
          },
          reset: function() {
            var B = this._hasher;
            B.reset(), B.update(this._iKey);
          },
          update: function(B) {
            return this._hasher.update(B), this;
          },
          finalize: function(B) {
            var x = this._hasher, C = x.finalize(B);
            x.reset();
            var v = x.finalize(this._oKey.clone().concat(C));
            return v;
          }
        });
      })();
    });
  }(hmac)), hmac.exports;
}
var pbkdf2 = { exports: {} }, hasRequiredPbkdf2;
function requirePbkdf2() {
  return hasRequiredPbkdf2 || (hasRequiredPbkdf2 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireSha1(), requireHmac());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.Base, g = u.WordArray, m = s.algo, w = m.SHA1, B = m.HMAC, x = m.PBKDF2 = d.extend({
          cfg: d.extend({
            keySize: 128 / 32,
            hasher: w,
            iterations: 1
          }),
          init: function(C) {
            this.cfg = this.cfg.extend(C);
          },
          compute: function(C, v) {
            for (var y = this.cfg, T = B.create(y.hasher, C), M = g.create(), D = g.create([1]), V = M.words, O = D.words, H = y.keySize, q = y.iterations; V.length < H; ) {
              var $ = T.update(v).finalize(D);
              T.reset();
              for (var re = $.words, ce = re.length, Ie = $, Pe = 1; Pe < q; Pe++) {
                Ie = T.finalize(Ie), T.reset();
                for (var se = Ie.words, Ce = 0; Ce < ce; Ce++)
                  re[Ce] ^= se[Ce];
              }
              M.concat($), O[0]++;
            }
            return M.sigBytes = H * 4, M;
          }
        });
        s.PBKDF2 = function(C, v, y) {
          return x.create(y).compute(C, v);
        };
      }(), o.PBKDF2;
    });
  }(pbkdf2)), pbkdf2.exports;
}
var evpkdf = { exports: {} }, hasRequiredEvpkdf;
function requireEvpkdf() {
  return hasRequiredEvpkdf || (hasRequiredEvpkdf = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireSha1(), requireHmac());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.Base, g = u.WordArray, m = s.algo, w = m.MD5, B = m.EvpKDF = d.extend({
          cfg: d.extend({
            keySize: 128 / 32,
            hasher: w,
            iterations: 1
          }),
          init: function(x) {
            this.cfg = this.cfg.extend(x);
          },
          compute: function(x, C) {
            for (var v, y = this.cfg, T = y.hasher.create(), M = g.create(), D = M.words, V = y.keySize, O = y.iterations; D.length < V; ) {
              v && T.update(v), v = T.update(x).finalize(C), T.reset();
              for (var H = 1; H < O; H++)
                v = T.finalize(v), T.reset();
              M.concat(v);
            }
            return M.sigBytes = V * 4, M;
          }
        });
        s.EvpKDF = function(x, C, v) {
          return B.create(v).compute(x, C);
        };
      }(), o.EvpKDF;
    });
  }(evpkdf)), evpkdf.exports;
}
var cipherCore = { exports: {} }, hasRequiredCipherCore;
function requireCipherCore() {
  return hasRequiredCipherCore || (hasRequiredCipherCore = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireEvpkdf());
    })(commonjsGlobal, function(o) {
      o.lib.Cipher || function(s) {
        var u = o, d = u.lib, g = d.Base, m = d.WordArray, w = d.BufferedBlockAlgorithm, B = u.enc;
        B.Utf8;
        var x = B.Base64, C = u.algo, v = C.EvpKDF, y = d.Cipher = w.extend({
          cfg: g.extend(),
          createEncryptor: function(se, Ce) {
            return this.create(this._ENC_XFORM_MODE, se, Ce);
          },
          createDecryptor: function(se, Ce) {
            return this.create(this._DEC_XFORM_MODE, se, Ce);
          },
          init: function(se, Ce, Ge) {
            this.cfg = this.cfg.extend(Ge), this._xformMode = se, this._key = Ce, this.reset();
          },
          reset: function() {
            w.reset.call(this), this._doReset();
          },
          process: function(se) {
            return this._append(se), this._process();
          },
          finalize: function(se) {
            se && this._append(se);
            var Ce = this._doFinalize();
            return Ce;
          },
          keySize: 128 / 32,
          ivSize: 128 / 32,
          _ENC_XFORM_MODE: 1,
          _DEC_XFORM_MODE: 2,
          _createHelper: function() {
            function se(Ce) {
              return typeof Ce == "string" ? Pe : re;
            }
            return function(Ce) {
              return {
                encrypt: function(Ge, $e, Be) {
                  return se($e).encrypt(Ce, Ge, $e, Be);
                },
                decrypt: function(Ge, $e, Be) {
                  return se($e).decrypt(Ce, Ge, $e, Be);
                }
              };
            };
          }()
        });
        d.StreamCipher = y.extend({
          _doFinalize: function() {
            var se = this._process(!0);
            return se;
          },
          blockSize: 1
        });
        var T = u.mode = {}, M = d.BlockCipherMode = g.extend({
          createEncryptor: function(se, Ce) {
            return this.Encryptor.create(se, Ce);
          },
          createDecryptor: function(se, Ce) {
            return this.Decryptor.create(se, Ce);
          },
          init: function(se, Ce) {
            this._cipher = se, this._iv = Ce;
          }
        }), D = T.CBC = function() {
          var se = M.extend();
          se.Encryptor = se.extend({
            processBlock: function(Ge, $e) {
              var Be = this._cipher, Me = Be.blockSize;
              Ce.call(this, Ge, $e, Me), Be.encryptBlock(Ge, $e), this._prevBlock = Ge.slice($e, $e + Me);
            }
          }), se.Decryptor = se.extend({
            processBlock: function(Ge, $e) {
              var Be = this._cipher, Me = Be.blockSize, We = Ge.slice($e, $e + Me);
              Be.decryptBlock(Ge, $e), Ce.call(this, Ge, $e, Me), this._prevBlock = We;
            }
          });
          function Ce(Ge, $e, Be) {
            var Me, We = this._iv;
            We ? (Me = We, this._iv = s) : Me = this._prevBlock;
            for (var nt = 0; nt < Be; nt++)
              Ge[$e + nt] ^= Me[nt];
          }
          return se;
        }(), V = u.pad = {}, O = V.Pkcs7 = {
          pad: function(se, Ce) {
            for (var Ge = Ce * 4, $e = Ge - se.sigBytes % Ge, Be = $e << 24 | $e << 16 | $e << 8 | $e, Me = [], We = 0; We < $e; We += 4)
              Me.push(Be);
            var nt = m.create(Me, $e);
            se.concat(nt);
          },
          unpad: function(se) {
            var Ce = se.words[se.sigBytes - 1 >>> 2] & 255;
            se.sigBytes -= Ce;
          }
        };
        d.BlockCipher = y.extend({
          cfg: y.cfg.extend({
            mode: D,
            padding: O
          }),
          reset: function() {
            var se;
            y.reset.call(this);
            var Ce = this.cfg, Ge = Ce.iv, $e = Ce.mode;
            this._xformMode == this._ENC_XFORM_MODE ? se = $e.createEncryptor : (se = $e.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == se ? this._mode.init(this, Ge && Ge.words) : (this._mode = se.call($e, this, Ge && Ge.words), this._mode.__creator = se);
          },
          _doProcessBlock: function(se, Ce) {
            this._mode.processBlock(se, Ce);
          },
          _doFinalize: function() {
            var se, Ce = this.cfg.padding;
            return this._xformMode == this._ENC_XFORM_MODE ? (Ce.pad(this._data, this.blockSize), se = this._process(!0)) : (se = this._process(!0), Ce.unpad(se)), se;
          },
          blockSize: 128 / 32
        });
        var H = d.CipherParams = g.extend({
          init: function(se) {
            this.mixIn(se);
          },
          toString: function(se) {
            return (se || this.formatter).stringify(this);
          }
        }), q = u.format = {}, $ = q.OpenSSL = {
          stringify: function(se) {
            var Ce, Ge = se.ciphertext, $e = se.salt;
            return $e ? Ce = m.create([1398893684, 1701076831]).concat($e).concat(Ge) : Ce = Ge, Ce.toString(x);
          },
          parse: function(se) {
            var Ce, Ge = x.parse(se), $e = Ge.words;
            return $e[0] == 1398893684 && $e[1] == 1701076831 && (Ce = m.create($e.slice(2, 4)), $e.splice(0, 4), Ge.sigBytes -= 16), H.create({ ciphertext: Ge, salt: Ce });
          }
        }, re = d.SerializableCipher = g.extend({
          cfg: g.extend({
            format: $
          }),
          encrypt: function(se, Ce, Ge, $e) {
            $e = this.cfg.extend($e);
            var Be = se.createEncryptor(Ge, $e), Me = Be.finalize(Ce), We = Be.cfg;
            return H.create({
              ciphertext: Me,
              key: Ge,
              iv: We.iv,
              algorithm: se,
              mode: We.mode,
              padding: We.padding,
              blockSize: se.blockSize,
              formatter: $e.format
            });
          },
          decrypt: function(se, Ce, Ge, $e) {
            $e = this.cfg.extend($e), Ce = this._parse(Ce, $e.format);
            var Be = se.createDecryptor(Ge, $e).finalize(Ce.ciphertext);
            return Be;
          },
          _parse: function(se, Ce) {
            return typeof se == "string" ? Ce.parse(se, this) : se;
          }
        }), ce = u.kdf = {}, Ie = ce.OpenSSL = {
          execute: function(se, Ce, Ge, $e) {
            $e || ($e = m.random(64 / 8));
            var Be = v.create({ keySize: Ce + Ge }).compute(se, $e), Me = m.create(Be.words.slice(Ce), Ge * 4);
            return Be.sigBytes = Ce * 4, H.create({ key: Be, iv: Me, salt: $e });
          }
        }, Pe = d.PasswordBasedCipher = re.extend({
          cfg: re.cfg.extend({
            kdf: Ie
          }),
          encrypt: function(se, Ce, Ge, $e) {
            $e = this.cfg.extend($e);
            var Be = $e.kdf.execute(Ge, se.keySize, se.ivSize);
            $e.iv = Be.iv;
            var Me = re.encrypt.call(this, se, Ce, Be.key, $e);
            return Me.mixIn(Be), Me;
          },
          decrypt: function(se, Ce, Ge, $e) {
            $e = this.cfg.extend($e), Ce = this._parse(Ce, $e.format);
            var Be = $e.kdf.execute(Ge, se.keySize, se.ivSize, Ce.salt);
            $e.iv = Be.iv;
            var Me = re.decrypt.call(this, se, Ce, Be.key, $e);
            return Me;
          }
        });
      }();
    });
  }(cipherCore)), cipherCore.exports;
}
var modeCfb = { exports: {} }, hasRequiredModeCfb;
function requireModeCfb() {
  return hasRequiredModeCfb || (hasRequiredModeCfb = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.mode.CFB = function() {
        var s = o.lib.BlockCipherMode.extend();
        s.Encryptor = s.extend({
          processBlock: function(d, g) {
            var m = this._cipher, w = m.blockSize;
            u.call(this, d, g, w, m), this._prevBlock = d.slice(g, g + w);
          }
        }), s.Decryptor = s.extend({
          processBlock: function(d, g) {
            var m = this._cipher, w = m.blockSize, B = d.slice(g, g + w);
            u.call(this, d, g, w, m), this._prevBlock = B;
          }
        });
        function u(d, g, m, w) {
          var B, x = this._iv;
          x ? (B = x.slice(0), this._iv = void 0) : B = this._prevBlock, w.encryptBlock(B, 0);
          for (var C = 0; C < m; C++)
            d[g + C] ^= B[C];
        }
        return s;
      }(), o.mode.CFB;
    });
  }(modeCfb)), modeCfb.exports;
}
var modeCtr = { exports: {} }, hasRequiredModeCtr;
function requireModeCtr() {
  return hasRequiredModeCtr || (hasRequiredModeCtr = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.mode.CTR = function() {
        var s = o.lib.BlockCipherMode.extend(), u = s.Encryptor = s.extend({
          processBlock: function(d, g) {
            var m = this._cipher, w = m.blockSize, B = this._iv, x = this._counter;
            B && (x = this._counter = B.slice(0), this._iv = void 0);
            var C = x.slice(0);
            m.encryptBlock(C, 0), x[w - 1] = x[w - 1] + 1 | 0;
            for (var v = 0; v < w; v++)
              d[g + v] ^= C[v];
          }
        });
        return s.Decryptor = u, s;
      }(), o.mode.CTR;
    });
  }(modeCtr)), modeCtr.exports;
}
var modeCtrGladman = { exports: {} }, hasRequiredModeCtrGladman;
function requireModeCtrGladman() {
  return hasRequiredModeCtrGladman || (hasRequiredModeCtrGladman = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      /** @preserve
       * Counter block mode compatible with  Dr Brian Gladman fileenc.c
       * derived from CryptoJS.mode.CTR
       * Jan Hruby jhruby.web@gmail.com
       */
      return o.mode.CTRGladman = function() {
        var s = o.lib.BlockCipherMode.extend();
        function u(m) {
          if ((m >> 24 & 255) === 255) {
            var w = m >> 16 & 255, B = m >> 8 & 255, x = m & 255;
            w === 255 ? (w = 0, B === 255 ? (B = 0, x === 255 ? x = 0 : ++x) : ++B) : ++w, m = 0, m += w << 16, m += B << 8, m += x;
          } else
            m += 1 << 24;
          return m;
        }
        function d(m) {
          return (m[0] = u(m[0])) === 0 && (m[1] = u(m[1])), m;
        }
        var g = s.Encryptor = s.extend({
          processBlock: function(m, w) {
            var B = this._cipher, x = B.blockSize, C = this._iv, v = this._counter;
            C && (v = this._counter = C.slice(0), this._iv = void 0), d(v);
            var y = v.slice(0);
            B.encryptBlock(y, 0);
            for (var T = 0; T < x; T++)
              m[w + T] ^= y[T];
          }
        });
        return s.Decryptor = g, s;
      }(), o.mode.CTRGladman;
    });
  }(modeCtrGladman)), modeCtrGladman.exports;
}
var modeOfb = { exports: {} }, hasRequiredModeOfb;
function requireModeOfb() {
  return hasRequiredModeOfb || (hasRequiredModeOfb = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.mode.OFB = function() {
        var s = o.lib.BlockCipherMode.extend(), u = s.Encryptor = s.extend({
          processBlock: function(d, g) {
            var m = this._cipher, w = m.blockSize, B = this._iv, x = this._keystream;
            B && (x = this._keystream = B.slice(0), this._iv = void 0), m.encryptBlock(x, 0);
            for (var C = 0; C < w; C++)
              d[g + C] ^= x[C];
          }
        });
        return s.Decryptor = u, s;
      }(), o.mode.OFB;
    });
  }(modeOfb)), modeOfb.exports;
}
var modeEcb = { exports: {} }, hasRequiredModeEcb;
function requireModeEcb() {
  return hasRequiredModeEcb || (hasRequiredModeEcb = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.mode.ECB = function() {
        var s = o.lib.BlockCipherMode.extend();
        return s.Encryptor = s.extend({
          processBlock: function(u, d) {
            this._cipher.encryptBlock(u, d);
          }
        }), s.Decryptor = s.extend({
          processBlock: function(u, d) {
            this._cipher.decryptBlock(u, d);
          }
        }), s;
      }(), o.mode.ECB;
    });
  }(modeEcb)), modeEcb.exports;
}
var padAnsix923 = { exports: {} }, hasRequiredPadAnsix923;
function requirePadAnsix923() {
  return hasRequiredPadAnsix923 || (hasRequiredPadAnsix923 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.pad.AnsiX923 = {
        pad: function(s, u) {
          var d = s.sigBytes, g = u * 4, m = g - d % g, w = d + m - 1;
          s.clamp(), s.words[w >>> 2] |= m << 24 - w % 4 * 8, s.sigBytes += m;
        },
        unpad: function(s) {
          var u = s.words[s.sigBytes - 1 >>> 2] & 255;
          s.sigBytes -= u;
        }
      }, o.pad.Ansix923;
    });
  }(padAnsix923)), padAnsix923.exports;
}
var padIso10126 = { exports: {} }, hasRequiredPadIso10126;
function requirePadIso10126() {
  return hasRequiredPadIso10126 || (hasRequiredPadIso10126 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.pad.Iso10126 = {
        pad: function(s, u) {
          var d = u * 4, g = d - s.sigBytes % d;
          s.concat(o.lib.WordArray.random(g - 1)).concat(o.lib.WordArray.create([g << 24], 1));
        },
        unpad: function(s) {
          var u = s.words[s.sigBytes - 1 >>> 2] & 255;
          s.sigBytes -= u;
        }
      }, o.pad.Iso10126;
    });
  }(padIso10126)), padIso10126.exports;
}
var padIso97971 = { exports: {} }, hasRequiredPadIso97971;
function requirePadIso97971() {
  return hasRequiredPadIso97971 || (hasRequiredPadIso97971 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.pad.Iso97971 = {
        pad: function(s, u) {
          s.concat(o.lib.WordArray.create([2147483648], 1)), o.pad.ZeroPadding.pad(s, u);
        },
        unpad: function(s) {
          o.pad.ZeroPadding.unpad(s), s.sigBytes--;
        }
      }, o.pad.Iso97971;
    });
  }(padIso97971)), padIso97971.exports;
}
var padZeropadding = { exports: {} }, hasRequiredPadZeropadding;
function requirePadZeropadding() {
  return hasRequiredPadZeropadding || (hasRequiredPadZeropadding = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.pad.ZeroPadding = {
        pad: function(s, u) {
          var d = u * 4;
          s.clamp(), s.sigBytes += d - (s.sigBytes % d || d);
        },
        unpad: function(s) {
          for (var u = s.words, d = s.sigBytes - 1, d = s.sigBytes - 1; d >= 0; d--)
            if (u[d >>> 2] >>> 24 - d % 4 * 8 & 255) {
              s.sigBytes = d + 1;
              break;
            }
        }
      }, o.pad.ZeroPadding;
    });
  }(padZeropadding)), padZeropadding.exports;
}
var padNopadding = { exports: {} }, hasRequiredPadNopadding;
function requirePadNopadding() {
  return hasRequiredPadNopadding || (hasRequiredPadNopadding = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return o.pad.NoPadding = {
        pad: function() {
        },
        unpad: function() {
        }
      }, o.pad.NoPadding;
    });
  }(padNopadding)), padNopadding.exports;
}
var formatHex = { exports: {} }, hasRequiredFormatHex;
function requireFormatHex() {
  return hasRequiredFormatHex || (hasRequiredFormatHex = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return function(s) {
        var u = o, d = u.lib, g = d.CipherParams, m = u.enc, w = m.Hex, B = u.format;
        B.Hex = {
          stringify: function(x) {
            return x.ciphertext.toString(w);
          },
          parse: function(x) {
            var C = w.parse(x);
            return g.create({ ciphertext: C });
          }
        };
      }(), o.format.Hex;
    });
  }(formatHex)), formatHex.exports;
}
var aes = { exports: {} }, hasRequiredAes;
function requireAes() {
  return hasRequiredAes || (hasRequiredAes = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.BlockCipher, g = s.algo, m = [], w = [], B = [], x = [], C = [], v = [], y = [], T = [], M = [], D = [];
        (function() {
          for (var H = [], q = 0; q < 256; q++)
            q < 128 ? H[q] = q << 1 : H[q] = q << 1 ^ 283;
          for (var $ = 0, re = 0, q = 0; q < 256; q++) {
            var ce = re ^ re << 1 ^ re << 2 ^ re << 3 ^ re << 4;
            ce = ce >>> 8 ^ ce & 255 ^ 99, m[$] = ce, w[ce] = $;
            var Ie = H[$], Pe = H[Ie], se = H[Pe], Ce = H[ce] * 257 ^ ce * 16843008;
            B[$] = Ce << 24 | Ce >>> 8, x[$] = Ce << 16 | Ce >>> 16, C[$] = Ce << 8 | Ce >>> 24, v[$] = Ce;
            var Ce = se * 16843009 ^ Pe * 65537 ^ Ie * 257 ^ $ * 16843008;
            y[ce] = Ce << 24 | Ce >>> 8, T[ce] = Ce << 16 | Ce >>> 16, M[ce] = Ce << 8 | Ce >>> 24, D[ce] = Ce, $ ? ($ = Ie ^ H[H[H[se ^ Ie]]], re ^= H[H[re]]) : $ = re = 1;
          }
        })();
        var V = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], O = g.AES = d.extend({
          _doReset: function() {
            var H;
            if (!(this._nRounds && this._keyPriorReset === this._key)) {
              for (var q = this._keyPriorReset = this._key, $ = q.words, re = q.sigBytes / 4, ce = this._nRounds = re + 6, Ie = (ce + 1) * 4, Pe = this._keySchedule = [], se = 0; se < Ie; se++)
                se < re ? Pe[se] = $[se] : (H = Pe[se - 1], se % re ? re > 6 && se % re == 4 && (H = m[H >>> 24] << 24 | m[H >>> 16 & 255] << 16 | m[H >>> 8 & 255] << 8 | m[H & 255]) : (H = H << 8 | H >>> 24, H = m[H >>> 24] << 24 | m[H >>> 16 & 255] << 16 | m[H >>> 8 & 255] << 8 | m[H & 255], H ^= V[se / re | 0] << 24), Pe[se] = Pe[se - re] ^ H);
              for (var Ce = this._invKeySchedule = [], Ge = 0; Ge < Ie; Ge++) {
                var se = Ie - Ge;
                if (Ge % 4)
                  var H = Pe[se];
                else
                  var H = Pe[se - 4];
                Ge < 4 || se <= 4 ? Ce[Ge] = H : Ce[Ge] = y[m[H >>> 24]] ^ T[m[H >>> 16 & 255]] ^ M[m[H >>> 8 & 255]] ^ D[m[H & 255]];
              }
            }
          },
          encryptBlock: function(H, q) {
            this._doCryptBlock(H, q, this._keySchedule, B, x, C, v, m);
          },
          decryptBlock: function(H, q) {
            var $ = H[q + 1];
            H[q + 1] = H[q + 3], H[q + 3] = $, this._doCryptBlock(H, q, this._invKeySchedule, y, T, M, D, w);
            var $ = H[q + 1];
            H[q + 1] = H[q + 3], H[q + 3] = $;
          },
          _doCryptBlock: function(H, q, $, re, ce, Ie, Pe, se) {
            for (var Ce = this._nRounds, Ge = H[q] ^ $[0], $e = H[q + 1] ^ $[1], Be = H[q + 2] ^ $[2], Me = H[q + 3] ^ $[3], We = 4, nt = 1; nt < Ce; nt++) {
              var Xe = re[Ge >>> 24] ^ ce[$e >>> 16 & 255] ^ Ie[Be >>> 8 & 255] ^ Pe[Me & 255] ^ $[We++], Je = re[$e >>> 24] ^ ce[Be >>> 16 & 255] ^ Ie[Me >>> 8 & 255] ^ Pe[Ge & 255] ^ $[We++], qe = re[Be >>> 24] ^ ce[Me >>> 16 & 255] ^ Ie[Ge >>> 8 & 255] ^ Pe[$e & 255] ^ $[We++], ye = re[Me >>> 24] ^ ce[Ge >>> 16 & 255] ^ Ie[$e >>> 8 & 255] ^ Pe[Be & 255] ^ $[We++];
              Ge = Xe, $e = Je, Be = qe, Me = ye;
            }
            var Xe = (se[Ge >>> 24] << 24 | se[$e >>> 16 & 255] << 16 | se[Be >>> 8 & 255] << 8 | se[Me & 255]) ^ $[We++], Je = (se[$e >>> 24] << 24 | se[Be >>> 16 & 255] << 16 | se[Me >>> 8 & 255] << 8 | se[Ge & 255]) ^ $[We++], qe = (se[Be >>> 24] << 24 | se[Me >>> 16 & 255] << 16 | se[Ge >>> 8 & 255] << 8 | se[$e & 255]) ^ $[We++], ye = (se[Me >>> 24] << 24 | se[Ge >>> 16 & 255] << 16 | se[$e >>> 8 & 255] << 8 | se[Be & 255]) ^ $[We++];
            H[q] = Xe, H[q + 1] = Je, H[q + 2] = qe, H[q + 3] = ye;
          },
          keySize: 256 / 32
        });
        s.AES = d._createHelper(O);
      }(), o.AES;
    });
  }(aes)), aes.exports;
}
var tripledes = { exports: {} }, hasRequiredTripledes;
function requireTripledes() {
  return hasRequiredTripledes || (hasRequiredTripledes = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.WordArray, g = u.BlockCipher, m = s.algo, w = [
          57,
          49,
          41,
          33,
          25,
          17,
          9,
          1,
          58,
          50,
          42,
          34,
          26,
          18,
          10,
          2,
          59,
          51,
          43,
          35,
          27,
          19,
          11,
          3,
          60,
          52,
          44,
          36,
          63,
          55,
          47,
          39,
          31,
          23,
          15,
          7,
          62,
          54,
          46,
          38,
          30,
          22,
          14,
          6,
          61,
          53,
          45,
          37,
          29,
          21,
          13,
          5,
          28,
          20,
          12,
          4
        ], B = [
          14,
          17,
          11,
          24,
          1,
          5,
          3,
          28,
          15,
          6,
          21,
          10,
          23,
          19,
          12,
          4,
          26,
          8,
          16,
          7,
          27,
          20,
          13,
          2,
          41,
          52,
          31,
          37,
          47,
          55,
          30,
          40,
          51,
          45,
          33,
          48,
          44,
          49,
          39,
          56,
          34,
          53,
          46,
          42,
          50,
          36,
          29,
          32
        ], x = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], C = [
          {
            0: 8421888,
            268435456: 32768,
            536870912: 8421378,
            805306368: 2,
            1073741824: 512,
            1342177280: 8421890,
            1610612736: 8389122,
            1879048192: 8388608,
            2147483648: 514,
            2415919104: 8389120,
            2684354560: 33280,
            2952790016: 8421376,
            3221225472: 32770,
            3489660928: 8388610,
            3758096384: 0,
            4026531840: 33282,
            134217728: 0,
            402653184: 8421890,
            671088640: 33282,
            939524096: 32768,
            1207959552: 8421888,
            1476395008: 512,
            1744830464: 8421378,
            2013265920: 2,
            2281701376: 8389120,
            2550136832: 33280,
            2818572288: 8421376,
            3087007744: 8389122,
            3355443200: 8388610,
            3623878656: 32770,
            3892314112: 514,
            4160749568: 8388608,
            1: 32768,
            268435457: 2,
            536870913: 8421888,
            805306369: 8388608,
            1073741825: 8421378,
            1342177281: 33280,
            1610612737: 512,
            1879048193: 8389122,
            2147483649: 8421890,
            2415919105: 8421376,
            2684354561: 8388610,
            2952790017: 33282,
            3221225473: 514,
            3489660929: 8389120,
            3758096385: 32770,
            4026531841: 0,
            134217729: 8421890,
            402653185: 8421376,
            671088641: 8388608,
            939524097: 512,
            1207959553: 32768,
            1476395009: 8388610,
            1744830465: 2,
            2013265921: 33282,
            2281701377: 32770,
            2550136833: 8389122,
            2818572289: 514,
            3087007745: 8421888,
            3355443201: 8389120,
            3623878657: 0,
            3892314113: 33280,
            4160749569: 8421378
          },
          {
            0: 1074282512,
            16777216: 16384,
            33554432: 524288,
            50331648: 1074266128,
            67108864: 1073741840,
            83886080: 1074282496,
            100663296: 1073758208,
            117440512: 16,
            134217728: 540672,
            150994944: 1073758224,
            167772160: 1073741824,
            184549376: 540688,
            201326592: 524304,
            218103808: 0,
            234881024: 16400,
            251658240: 1074266112,
            8388608: 1073758208,
            25165824: 540688,
            41943040: 16,
            58720256: 1073758224,
            75497472: 1074282512,
            92274688: 1073741824,
            109051904: 524288,
            125829120: 1074266128,
            142606336: 524304,
            159383552: 0,
            176160768: 16384,
            192937984: 1074266112,
            209715200: 1073741840,
            226492416: 540672,
            243269632: 1074282496,
            260046848: 16400,
            268435456: 0,
            285212672: 1074266128,
            301989888: 1073758224,
            318767104: 1074282496,
            335544320: 1074266112,
            352321536: 16,
            369098752: 540688,
            385875968: 16384,
            402653184: 16400,
            419430400: 524288,
            436207616: 524304,
            452984832: 1073741840,
            469762048: 540672,
            486539264: 1073758208,
            503316480: 1073741824,
            520093696: 1074282512,
            276824064: 540688,
            293601280: 524288,
            310378496: 1074266112,
            327155712: 16384,
            343932928: 1073758208,
            360710144: 1074282512,
            377487360: 16,
            394264576: 1073741824,
            411041792: 1074282496,
            427819008: 1073741840,
            444596224: 1073758224,
            461373440: 524304,
            478150656: 0,
            494927872: 16400,
            511705088: 1074266128,
            528482304: 540672
          },
          {
            0: 260,
            1048576: 0,
            2097152: 67109120,
            3145728: 65796,
            4194304: 65540,
            5242880: 67108868,
            6291456: 67174660,
            7340032: 67174400,
            8388608: 67108864,
            9437184: 67174656,
            10485760: 65792,
            11534336: 67174404,
            12582912: 67109124,
            13631488: 65536,
            14680064: 4,
            15728640: 256,
            524288: 67174656,
            1572864: 67174404,
            2621440: 0,
            3670016: 67109120,
            4718592: 67108868,
            5767168: 65536,
            6815744: 65540,
            7864320: 260,
            8912896: 4,
            9961472: 256,
            11010048: 67174400,
            12058624: 65796,
            13107200: 65792,
            14155776: 67109124,
            15204352: 67174660,
            16252928: 67108864,
            16777216: 67174656,
            17825792: 65540,
            18874368: 65536,
            19922944: 67109120,
            20971520: 256,
            22020096: 67174660,
            23068672: 67108868,
            24117248: 0,
            25165824: 67109124,
            26214400: 67108864,
            27262976: 4,
            28311552: 65792,
            29360128: 67174400,
            30408704: 260,
            31457280: 65796,
            32505856: 67174404,
            17301504: 67108864,
            18350080: 260,
            19398656: 67174656,
            20447232: 0,
            21495808: 65540,
            22544384: 67109120,
            23592960: 256,
            24641536: 67174404,
            25690112: 65536,
            26738688: 67174660,
            27787264: 65796,
            28835840: 67108868,
            29884416: 67109124,
            30932992: 67174400,
            31981568: 4,
            33030144: 65792
          },
          {
            0: 2151682048,
            65536: 2147487808,
            131072: 4198464,
            196608: 2151677952,
            262144: 0,
            327680: 4198400,
            393216: 2147483712,
            458752: 4194368,
            524288: 2147483648,
            589824: 4194304,
            655360: 64,
            720896: 2147487744,
            786432: 2151678016,
            851968: 4160,
            917504: 4096,
            983040: 2151682112,
            32768: 2147487808,
            98304: 64,
            163840: 2151678016,
            229376: 2147487744,
            294912: 4198400,
            360448: 2151682112,
            425984: 0,
            491520: 2151677952,
            557056: 4096,
            622592: 2151682048,
            688128: 4194304,
            753664: 4160,
            819200: 2147483648,
            884736: 4194368,
            950272: 4198464,
            1015808: 2147483712,
            1048576: 4194368,
            1114112: 4198400,
            1179648: 2147483712,
            1245184: 0,
            1310720: 4160,
            1376256: 2151678016,
            1441792: 2151682048,
            1507328: 2147487808,
            1572864: 2151682112,
            1638400: 2147483648,
            1703936: 2151677952,
            1769472: 4198464,
            1835008: 2147487744,
            1900544: 4194304,
            1966080: 64,
            2031616: 4096,
            1081344: 2151677952,
            1146880: 2151682112,
            1212416: 0,
            1277952: 4198400,
            1343488: 4194368,
            1409024: 2147483648,
            1474560: 2147487808,
            1540096: 64,
            1605632: 2147483712,
            1671168: 4096,
            1736704: 2147487744,
            1802240: 2151678016,
            1867776: 4160,
            1933312: 2151682048,
            1998848: 4194304,
            2064384: 4198464
          },
          {
            0: 128,
            4096: 17039360,
            8192: 262144,
            12288: 536870912,
            16384: 537133184,
            20480: 16777344,
            24576: 553648256,
            28672: 262272,
            32768: 16777216,
            36864: 537133056,
            40960: 536871040,
            45056: 553910400,
            49152: 553910272,
            53248: 0,
            57344: 17039488,
            61440: 553648128,
            2048: 17039488,
            6144: 553648256,
            10240: 128,
            14336: 17039360,
            18432: 262144,
            22528: 537133184,
            26624: 553910272,
            30720: 536870912,
            34816: 537133056,
            38912: 0,
            43008: 553910400,
            47104: 16777344,
            51200: 536871040,
            55296: 553648128,
            59392: 16777216,
            63488: 262272,
            65536: 262144,
            69632: 128,
            73728: 536870912,
            77824: 553648256,
            81920: 16777344,
            86016: 553910272,
            90112: 537133184,
            94208: 16777216,
            98304: 553910400,
            102400: 553648128,
            106496: 17039360,
            110592: 537133056,
            114688: 262272,
            118784: 536871040,
            122880: 0,
            126976: 17039488,
            67584: 553648256,
            71680: 16777216,
            75776: 17039360,
            79872: 537133184,
            83968: 536870912,
            88064: 17039488,
            92160: 128,
            96256: 553910272,
            100352: 262272,
            104448: 553910400,
            108544: 0,
            112640: 553648128,
            116736: 16777344,
            120832: 262144,
            124928: 537133056,
            129024: 536871040
          },
          {
            0: 268435464,
            256: 8192,
            512: 270532608,
            768: 270540808,
            1024: 268443648,
            1280: 2097152,
            1536: 2097160,
            1792: 268435456,
            2048: 0,
            2304: 268443656,
            2560: 2105344,
            2816: 8,
            3072: 270532616,
            3328: 2105352,
            3584: 8200,
            3840: 270540800,
            128: 270532608,
            384: 270540808,
            640: 8,
            896: 2097152,
            1152: 2105352,
            1408: 268435464,
            1664: 268443648,
            1920: 8200,
            2176: 2097160,
            2432: 8192,
            2688: 268443656,
            2944: 270532616,
            3200: 0,
            3456: 270540800,
            3712: 2105344,
            3968: 268435456,
            4096: 268443648,
            4352: 270532616,
            4608: 270540808,
            4864: 8200,
            5120: 2097152,
            5376: 268435456,
            5632: 268435464,
            5888: 2105344,
            6144: 2105352,
            6400: 0,
            6656: 8,
            6912: 270532608,
            7168: 8192,
            7424: 268443656,
            7680: 270540800,
            7936: 2097160,
            4224: 8,
            4480: 2105344,
            4736: 2097152,
            4992: 268435464,
            5248: 268443648,
            5504: 8200,
            5760: 270540808,
            6016: 270532608,
            6272: 270540800,
            6528: 270532616,
            6784: 8192,
            7040: 2105352,
            7296: 2097160,
            7552: 0,
            7808: 268435456,
            8064: 268443656
          },
          {
            0: 1048576,
            16: 33555457,
            32: 1024,
            48: 1049601,
            64: 34604033,
            80: 0,
            96: 1,
            112: 34603009,
            128: 33555456,
            144: 1048577,
            160: 33554433,
            176: 34604032,
            192: 34603008,
            208: 1025,
            224: 1049600,
            240: 33554432,
            8: 34603009,
            24: 0,
            40: 33555457,
            56: 34604032,
            72: 1048576,
            88: 33554433,
            104: 33554432,
            120: 1025,
            136: 1049601,
            152: 33555456,
            168: 34603008,
            184: 1048577,
            200: 1024,
            216: 34604033,
            232: 1,
            248: 1049600,
            256: 33554432,
            272: 1048576,
            288: 33555457,
            304: 34603009,
            320: 1048577,
            336: 33555456,
            352: 34604032,
            368: 1049601,
            384: 1025,
            400: 34604033,
            416: 1049600,
            432: 1,
            448: 0,
            464: 34603008,
            480: 33554433,
            496: 1024,
            264: 1049600,
            280: 33555457,
            296: 34603009,
            312: 1,
            328: 33554432,
            344: 1048576,
            360: 1025,
            376: 34604032,
            392: 33554433,
            408: 34603008,
            424: 0,
            440: 34604033,
            456: 1049601,
            472: 1024,
            488: 33555456,
            504: 1048577
          },
          {
            0: 134219808,
            1: 131072,
            2: 134217728,
            3: 32,
            4: 131104,
            5: 134350880,
            6: 134350848,
            7: 2048,
            8: 134348800,
            9: 134219776,
            10: 133120,
            11: 134348832,
            12: 2080,
            13: 0,
            14: 134217760,
            15: 133152,
            2147483648: 2048,
            2147483649: 134350880,
            2147483650: 134219808,
            2147483651: 134217728,
            2147483652: 134348800,
            2147483653: 133120,
            2147483654: 133152,
            2147483655: 32,
            2147483656: 134217760,
            2147483657: 2080,
            2147483658: 131104,
            2147483659: 134350848,
            2147483660: 0,
            2147483661: 134348832,
            2147483662: 134219776,
            2147483663: 131072,
            16: 133152,
            17: 134350848,
            18: 32,
            19: 2048,
            20: 134219776,
            21: 134217760,
            22: 134348832,
            23: 131072,
            24: 0,
            25: 131104,
            26: 134348800,
            27: 134219808,
            28: 134350880,
            29: 133120,
            30: 2080,
            31: 134217728,
            2147483664: 131072,
            2147483665: 2048,
            2147483666: 134348832,
            2147483667: 133152,
            2147483668: 32,
            2147483669: 134348800,
            2147483670: 134217728,
            2147483671: 134219808,
            2147483672: 134350880,
            2147483673: 134217760,
            2147483674: 134219776,
            2147483675: 0,
            2147483676: 133120,
            2147483677: 2080,
            2147483678: 131104,
            2147483679: 134350848
          }
        ], v = [
          4160749569,
          528482304,
          33030144,
          2064384,
          129024,
          8064,
          504,
          2147483679
        ], y = m.DES = g.extend({
          _doReset: function() {
            for (var V = this._key, O = V.words, H = [], q = 0; q < 56; q++) {
              var $ = w[q] - 1;
              H[q] = O[$ >>> 5] >>> 31 - $ % 32 & 1;
            }
            for (var re = this._subKeys = [], ce = 0; ce < 16; ce++) {
              for (var Ie = re[ce] = [], Pe = x[ce], q = 0; q < 24; q++)
                Ie[q / 6 | 0] |= H[(B[q] - 1 + Pe) % 28] << 31 - q % 6, Ie[4 + (q / 6 | 0)] |= H[28 + (B[q + 24] - 1 + Pe) % 28] << 31 - q % 6;
              Ie[0] = Ie[0] << 1 | Ie[0] >>> 31;
              for (var q = 1; q < 7; q++)
                Ie[q] = Ie[q] >>> (q - 1) * 4 + 3;
              Ie[7] = Ie[7] << 5 | Ie[7] >>> 27;
            }
            for (var se = this._invSubKeys = [], q = 0; q < 16; q++)
              se[q] = re[15 - q];
          },
          encryptBlock: function(V, O) {
            this._doCryptBlock(V, O, this._subKeys);
          },
          decryptBlock: function(V, O) {
            this._doCryptBlock(V, O, this._invSubKeys);
          },
          _doCryptBlock: function(V, O, H) {
            this._lBlock = V[O], this._rBlock = V[O + 1], T.call(this, 4, 252645135), T.call(this, 16, 65535), M.call(this, 2, 858993459), M.call(this, 8, 16711935), T.call(this, 1, 1431655765);
            for (var q = 0; q < 16; q++) {
              for (var $ = H[q], re = this._lBlock, ce = this._rBlock, Ie = 0, Pe = 0; Pe < 8; Pe++)
                Ie |= C[Pe][((ce ^ $[Pe]) & v[Pe]) >>> 0];
              this._lBlock = ce, this._rBlock = re ^ Ie;
            }
            var se = this._lBlock;
            this._lBlock = this._rBlock, this._rBlock = se, T.call(this, 1, 1431655765), M.call(this, 8, 16711935), M.call(this, 2, 858993459), T.call(this, 16, 65535), T.call(this, 4, 252645135), V[O] = this._lBlock, V[O + 1] = this._rBlock;
          },
          keySize: 64 / 32,
          ivSize: 64 / 32,
          blockSize: 64 / 32
        });
        function T(V, O) {
          var H = (this._lBlock >>> V ^ this._rBlock) & O;
          this._rBlock ^= H, this._lBlock ^= H << V;
        }
        function M(V, O) {
          var H = (this._rBlock >>> V ^ this._lBlock) & O;
          this._lBlock ^= H, this._rBlock ^= H << V;
        }
        s.DES = g._createHelper(y);
        var D = m.TripleDES = g.extend({
          _doReset: function() {
            var V = this._key, O = V.words;
            if (O.length !== 2 && O.length !== 4 && O.length < 6)
              throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
            var H = O.slice(0, 2), q = O.length < 4 ? O.slice(0, 2) : O.slice(2, 4), $ = O.length < 6 ? O.slice(0, 2) : O.slice(4, 6);
            this._des1 = y.createEncryptor(d.create(H)), this._des2 = y.createEncryptor(d.create(q)), this._des3 = y.createEncryptor(d.create($));
          },
          encryptBlock: function(V, O) {
            this._des1.encryptBlock(V, O), this._des2.decryptBlock(V, O), this._des3.encryptBlock(V, O);
          },
          decryptBlock: function(V, O) {
            this._des3.decryptBlock(V, O), this._des2.encryptBlock(V, O), this._des1.decryptBlock(V, O);
          },
          keySize: 192 / 32,
          ivSize: 64 / 32,
          blockSize: 64 / 32
        });
        s.TripleDES = g._createHelper(D);
      }(), o.TripleDES;
    });
  }(tripledes)), tripledes.exports;
}
var rc4 = { exports: {} }, hasRequiredRc4;
function requireRc4() {
  return hasRequiredRc4 || (hasRequiredRc4 = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.StreamCipher, g = s.algo, m = g.RC4 = d.extend({
          _doReset: function() {
            for (var x = this._key, C = x.words, v = x.sigBytes, y = this._S = [], T = 0; T < 256; T++)
              y[T] = T;
            for (var T = 0, M = 0; T < 256; T++) {
              var D = T % v, V = C[D >>> 2] >>> 24 - D % 4 * 8 & 255;
              M = (M + y[T] + V) % 256;
              var O = y[T];
              y[T] = y[M], y[M] = O;
            }
            this._i = this._j = 0;
          },
          _doProcessBlock: function(x, C) {
            x[C] ^= w.call(this);
          },
          keySize: 256 / 32,
          ivSize: 0
        });
        function w() {
          for (var x = this._S, C = this._i, v = this._j, y = 0, T = 0; T < 4; T++) {
            C = (C + 1) % 256, v = (v + x[C]) % 256;
            var M = x[C];
            x[C] = x[v], x[v] = M, y |= x[(x[C] + x[v]) % 256] << 24 - T * 8;
          }
          return this._i = C, this._j = v, y;
        }
        s.RC4 = d._createHelper(m);
        var B = g.RC4Drop = m.extend({
          cfg: m.cfg.extend({
            drop: 192
          }),
          _doReset: function() {
            m._doReset.call(this);
            for (var x = this.cfg.drop; x > 0; x--)
              w.call(this);
          }
        });
        s.RC4Drop = d._createHelper(B);
      }(), o.RC4;
    });
  }(rc4)), rc4.exports;
}
var rabbit = { exports: {} }, hasRequiredRabbit;
function requireRabbit() {
  return hasRequiredRabbit || (hasRequiredRabbit = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.StreamCipher, g = s.algo, m = [], w = [], B = [], x = g.Rabbit = d.extend({
          _doReset: function() {
            for (var v = this._key.words, y = this.cfg.iv, T = 0; T < 4; T++)
              v[T] = (v[T] << 8 | v[T] >>> 24) & 16711935 | (v[T] << 24 | v[T] >>> 8) & 4278255360;
            var M = this._X = [
              v[0],
              v[3] << 16 | v[2] >>> 16,
              v[1],
              v[0] << 16 | v[3] >>> 16,
              v[2],
              v[1] << 16 | v[0] >>> 16,
              v[3],
              v[2] << 16 | v[1] >>> 16
            ], D = this._C = [
              v[2] << 16 | v[2] >>> 16,
              v[0] & 4294901760 | v[1] & 65535,
              v[3] << 16 | v[3] >>> 16,
              v[1] & 4294901760 | v[2] & 65535,
              v[0] << 16 | v[0] >>> 16,
              v[2] & 4294901760 | v[3] & 65535,
              v[1] << 16 | v[1] >>> 16,
              v[3] & 4294901760 | v[0] & 65535
            ];
            this._b = 0;
            for (var T = 0; T < 4; T++)
              C.call(this);
            for (var T = 0; T < 8; T++)
              D[T] ^= M[T + 4 & 7];
            if (y) {
              var V = y.words, O = V[0], H = V[1], q = (O << 8 | O >>> 24) & 16711935 | (O << 24 | O >>> 8) & 4278255360, $ = (H << 8 | H >>> 24) & 16711935 | (H << 24 | H >>> 8) & 4278255360, re = q >>> 16 | $ & 4294901760, ce = $ << 16 | q & 65535;
              D[0] ^= q, D[1] ^= re, D[2] ^= $, D[3] ^= ce, D[4] ^= q, D[5] ^= re, D[6] ^= $, D[7] ^= ce;
              for (var T = 0; T < 4; T++)
                C.call(this);
            }
          },
          _doProcessBlock: function(v, y) {
            var T = this._X;
            C.call(this), m[0] = T[0] ^ T[5] >>> 16 ^ T[3] << 16, m[1] = T[2] ^ T[7] >>> 16 ^ T[5] << 16, m[2] = T[4] ^ T[1] >>> 16 ^ T[7] << 16, m[3] = T[6] ^ T[3] >>> 16 ^ T[1] << 16;
            for (var M = 0; M < 4; M++)
              m[M] = (m[M] << 8 | m[M] >>> 24) & 16711935 | (m[M] << 24 | m[M] >>> 8) & 4278255360, v[y + M] ^= m[M];
          },
          blockSize: 128 / 32,
          ivSize: 64 / 32
        });
        function C() {
          for (var v = this._X, y = this._C, T = 0; T < 8; T++)
            w[T] = y[T];
          y[0] = y[0] + 1295307597 + this._b | 0, y[1] = y[1] + 3545052371 + (y[0] >>> 0 < w[0] >>> 0 ? 1 : 0) | 0, y[2] = y[2] + 886263092 + (y[1] >>> 0 < w[1] >>> 0 ? 1 : 0) | 0, y[3] = y[3] + 1295307597 + (y[2] >>> 0 < w[2] >>> 0 ? 1 : 0) | 0, y[4] = y[4] + 3545052371 + (y[3] >>> 0 < w[3] >>> 0 ? 1 : 0) | 0, y[5] = y[5] + 886263092 + (y[4] >>> 0 < w[4] >>> 0 ? 1 : 0) | 0, y[6] = y[6] + 1295307597 + (y[5] >>> 0 < w[5] >>> 0 ? 1 : 0) | 0, y[7] = y[7] + 3545052371 + (y[6] >>> 0 < w[6] >>> 0 ? 1 : 0) | 0, this._b = y[7] >>> 0 < w[7] >>> 0 ? 1 : 0;
          for (var T = 0; T < 8; T++) {
            var M = v[T] + y[T], D = M & 65535, V = M >>> 16, O = ((D * D >>> 17) + D * V >>> 15) + V * V, H = ((M & 4294901760) * M | 0) + ((M & 65535) * M | 0);
            B[T] = O ^ H;
          }
          v[0] = B[0] + (B[7] << 16 | B[7] >>> 16) + (B[6] << 16 | B[6] >>> 16) | 0, v[1] = B[1] + (B[0] << 8 | B[0] >>> 24) + B[7] | 0, v[2] = B[2] + (B[1] << 16 | B[1] >>> 16) + (B[0] << 16 | B[0] >>> 16) | 0, v[3] = B[3] + (B[2] << 8 | B[2] >>> 24) + B[1] | 0, v[4] = B[4] + (B[3] << 16 | B[3] >>> 16) + (B[2] << 16 | B[2] >>> 16) | 0, v[5] = B[5] + (B[4] << 8 | B[4] >>> 24) + B[3] | 0, v[6] = B[6] + (B[5] << 16 | B[5] >>> 16) + (B[4] << 16 | B[4] >>> 16) | 0, v[7] = B[7] + (B[6] << 8 | B[6] >>> 24) + B[5] | 0;
        }
        s.Rabbit = d._createHelper(x);
      }(), o.Rabbit;
    });
  }(rabbit)), rabbit.exports;
}
var rabbitLegacy = { exports: {} }, hasRequiredRabbitLegacy;
function requireRabbitLegacy() {
  return hasRequiredRabbitLegacy || (hasRequiredRabbitLegacy = 1, function(e, n) {
    (function(o, s, u) {
      e.exports = s(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(o) {
      return function() {
        var s = o, u = s.lib, d = u.StreamCipher, g = s.algo, m = [], w = [], B = [], x = g.RabbitLegacy = d.extend({
          _doReset: function() {
            var v = this._key.words, y = this.cfg.iv, T = this._X = [
              v[0],
              v[3] << 16 | v[2] >>> 16,
              v[1],
              v[0] << 16 | v[3] >>> 16,
              v[2],
              v[1] << 16 | v[0] >>> 16,
              v[3],
              v[2] << 16 | v[1] >>> 16
            ], M = this._C = [
              v[2] << 16 | v[2] >>> 16,
              v[0] & 4294901760 | v[1] & 65535,
              v[3] << 16 | v[3] >>> 16,
              v[1] & 4294901760 | v[2] & 65535,
              v[0] << 16 | v[0] >>> 16,
              v[2] & 4294901760 | v[3] & 65535,
              v[1] << 16 | v[1] >>> 16,
              v[3] & 4294901760 | v[0] & 65535
            ];
            this._b = 0;
            for (var D = 0; D < 4; D++)
              C.call(this);
            for (var D = 0; D < 8; D++)
              M[D] ^= T[D + 4 & 7];
            if (y) {
              var V = y.words, O = V[0], H = V[1], q = (O << 8 | O >>> 24) & 16711935 | (O << 24 | O >>> 8) & 4278255360, $ = (H << 8 | H >>> 24) & 16711935 | (H << 24 | H >>> 8) & 4278255360, re = q >>> 16 | $ & 4294901760, ce = $ << 16 | q & 65535;
              M[0] ^= q, M[1] ^= re, M[2] ^= $, M[3] ^= ce, M[4] ^= q, M[5] ^= re, M[6] ^= $, M[7] ^= ce;
              for (var D = 0; D < 4; D++)
                C.call(this);
            }
          },
          _doProcessBlock: function(v, y) {
            var T = this._X;
            C.call(this), m[0] = T[0] ^ T[5] >>> 16 ^ T[3] << 16, m[1] = T[2] ^ T[7] >>> 16 ^ T[5] << 16, m[2] = T[4] ^ T[1] >>> 16 ^ T[7] << 16, m[3] = T[6] ^ T[3] >>> 16 ^ T[1] << 16;
            for (var M = 0; M < 4; M++)
              m[M] = (m[M] << 8 | m[M] >>> 24) & 16711935 | (m[M] << 24 | m[M] >>> 8) & 4278255360, v[y + M] ^= m[M];
          },
          blockSize: 128 / 32,
          ivSize: 64 / 32
        });
        function C() {
          for (var v = this._X, y = this._C, T = 0; T < 8; T++)
            w[T] = y[T];
          y[0] = y[0] + 1295307597 + this._b | 0, y[1] = y[1] + 3545052371 + (y[0] >>> 0 < w[0] >>> 0 ? 1 : 0) | 0, y[2] = y[2] + 886263092 + (y[1] >>> 0 < w[1] >>> 0 ? 1 : 0) | 0, y[3] = y[3] + 1295307597 + (y[2] >>> 0 < w[2] >>> 0 ? 1 : 0) | 0, y[4] = y[4] + 3545052371 + (y[3] >>> 0 < w[3] >>> 0 ? 1 : 0) | 0, y[5] = y[5] + 886263092 + (y[4] >>> 0 < w[4] >>> 0 ? 1 : 0) | 0, y[6] = y[6] + 1295307597 + (y[5] >>> 0 < w[5] >>> 0 ? 1 : 0) | 0, y[7] = y[7] + 3545052371 + (y[6] >>> 0 < w[6] >>> 0 ? 1 : 0) | 0, this._b = y[7] >>> 0 < w[7] >>> 0 ? 1 : 0;
          for (var T = 0; T < 8; T++) {
            var M = v[T] + y[T], D = M & 65535, V = M >>> 16, O = ((D * D >>> 17) + D * V >>> 15) + V * V, H = ((M & 4294901760) * M | 0) + ((M & 65535) * M | 0);
            B[T] = O ^ H;
          }
          v[0] = B[0] + (B[7] << 16 | B[7] >>> 16) + (B[6] << 16 | B[6] >>> 16) | 0, v[1] = B[1] + (B[0] << 8 | B[0] >>> 24) + B[7] | 0, v[2] = B[2] + (B[1] << 16 | B[1] >>> 16) + (B[0] << 16 | B[0] >>> 16) | 0, v[3] = B[3] + (B[2] << 8 | B[2] >>> 24) + B[1] | 0, v[4] = B[4] + (B[3] << 16 | B[3] >>> 16) + (B[2] << 16 | B[2] >>> 16) | 0, v[5] = B[5] + (B[4] << 8 | B[4] >>> 24) + B[3] | 0, v[6] = B[6] + (B[5] << 16 | B[5] >>> 16) + (B[4] << 16 | B[4] >>> 16) | 0, v[7] = B[7] + (B[6] << 8 | B[6] >>> 24) + B[5] | 0;
        }
        s.RabbitLegacy = d._createHelper(x);
      }(), o.RabbitLegacy;
    });
  }(rabbitLegacy)), rabbitLegacy.exports;
}
(function(e, n) {
  (function(o, s, u) {
    e.exports = s(requireCore(), requireX64Core(), requireLibTypedarrays(), requireEncUtf16(), requireEncBase64(), requireEncBase64url(), requireMd5(), requireSha1(), requireSha256(), requireSha224(), requireSha512(), requireSha384(), requireSha3(), requireRipemd160(), requireHmac(), requirePbkdf2(), requireEvpkdf(), requireCipherCore(), requireModeCfb(), requireModeCtr(), requireModeCtrGladman(), requireModeOfb(), requireModeEcb(), requirePadAnsix923(), requirePadIso10126(), requirePadIso97971(), requirePadZeropadding(), requirePadNopadding(), requireFormatHex(), requireAes(), requireTripledes(), requireRc4(), requireRabbit(), requireRabbitLegacy());
  })(commonjsGlobal, function(o) {
    return o;
  });
})(cryptoJs);
var Buffer = buffer$1.Buffer, CRC_TABLE = [
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
];
typeof Int32Array < "u" && (CRC_TABLE = new Int32Array(CRC_TABLE));
function ensureBuffer(e) {
  if (Buffer.isBuffer(e))
    return e;
  var n = typeof Buffer.alloc == "function" && typeof Buffer.from == "function";
  if (typeof e == "number")
    return n ? Buffer.alloc(e) : new Buffer(e);
  if (typeof e == "string")
    return n ? Buffer.from(e) : new Buffer(e);
  throw new Error("input must be buffer, number, or string, received " + typeof e);
}
function bufferizeInt(e) {
  var n = ensureBuffer(4);
  return n.writeInt32BE(e, 0), n;
}
function _crc32(e, n) {
  e = ensureBuffer(e), Buffer.isBuffer(n) && (n = n.readUInt32BE(0));
  for (var o = ~~n ^ -1, s = 0; s < e.length; s++)
    o = CRC_TABLE[(o ^ e[s]) & 255] ^ o >>> 8;
  return o ^ -1;
}
function crc32() {
  return bufferizeInt(_crc32.apply(null, arguments));
}
crc32.signed = function() {
  return _crc32.apply(null, arguments);
};
crc32.unsigned = function() {
  return _crc32.apply(null, arguments) >>> 0;
};
var bufferCrc32 = crc32, __importDefault$8 = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(account, "__esModule", { value: !0 });
account.getAccountId = void 0;
const crypto_js_1 = __importDefault$8(cryptoJs.exports), buffer_crc32_1 = __importDefault$8(bufferCrc32), ACCOUNT_DOMAIN_SEPERATOR = `
account-id`, SUB_ACCOUNT_ZERO = buffer$1.Buffer.alloc(32), byteArrayToWordArray = (e) => {
  const n = [];
  let o;
  for (o = 0; o < e.length; o += 1)
    n[o / 4 | 0] |= e[o] << 24 - 8 * o;
  return crypto_js_1.default.lib.WordArray.create(n, e.length);
}, wordToByteArray = (e, n) => {
  const o = [];
  return n > 0 && o.push(e >>> 24), n > 1 && o.push(e >>> 16 & 255), n > 2 && o.push(e >>> 8 & 255), n > 3 && o.push(e & 255), o;
}, wordArrayToByteArray = (e, n) => {
  e.hasOwnProperty("sigBytes") && e.hasOwnProperty("words") && (n = e.sigBytes, e = e.words);
  let o = [], s, u = 0;
  for (; n > 0; )
    s = wordToByteArray(e[u], Math.min(4, n)), n -= s.length, o = [...o, s], u++;
  return [].concat.apply([], o);
}, intToHex = (e) => e < 0 ? (Number(e) >>> 0).toString(16) : Number(e).toString(16), generateChecksum = (e) => {
  const n = buffer_crc32_1.default.unsigned(buffer$1.Buffer.from(e));
  return intToHex(n).padStart(8, "0");
}, getAccountId = (e, n) => {
  const o = crypto_js_1.default.algo.SHA224.create();
  o.update(ACCOUNT_DOMAIN_SEPERATOR), o.update(byteArrayToWordArray(e.toUint8Array()));
  const s = buffer$1.Buffer.from(SUB_ACCOUNT_ZERO);
  n && s.writeUInt32BE(n), o.update(byteArrayToWordArray(s));
  const u = o.finalize(), d = wordArrayToByteArray(u, 28);
  return generateChecksum(d) + u.toString();
};
account.getAccountId = getAccountId;
account.default = {};
var number = {};
Object.defineProperty(number, "__esModule", { value: !0 });
number.from32bits = number.to32bits = void 0;
const to32bits = (e) => {
  const n = new ArrayBuffer(4);
  return new DataView(n).setUint32(0, e), Array.from(new Uint8Array(n));
};
number.to32bits = to32bits;
const from32bits = (e) => {
  let n;
  for (let o = 0; o < 4; o += 1)
    n = n << 8 | e[o];
  return n;
};
number.from32bits = from32bits;
var canisters = {};
Object.defineProperty(canisters, "__esModule", { value: !0 });
canisters.NFT_CANISTERS = void 0;
canisters.NFT_CANISTERS = {
  WRAPPED_PUNKS: "bxdf4-baaaa-aaaah-qaruq-cai",
  WRAPPED_DRIP: "3db6u-aiaaa-aaaah-qbjbq-cai",
  IC_PUNKS: "qcg3w-tyaaa-aaaah-qakea-cai",
  IC_DRIP: "d3ttm-qaaaa-aaaai-qam4a-cai",
  ICP_BUNNY_MAIN: "xkbqi-2qaaa-aaaah-qbpqq-cai",
  ICP_BUNNY_STORAGE: [
    "efqhu-yqaaa-aaaaf-qaeda-cai",
    "ecrba-viaaa-aaaaf-qaedq-cai",
    "fp7fo-2aaaa-aaaaf-qaeea-cai",
    "fi6d2-xyaaa-aaaaf-qaeeq-cai",
    "fb5ig-bqaaa-aaaaf-qaefa-cai",
    "fg4os-miaaa-aaaaf-qaefq-cai",
    "ft377-naaaa-aaaaf-qaega-cai",
    "fu2zl-ayaaa-aaaaf-qaegq-cai",
    "f5zsx-wqaaa-aaaaf-qaeha-cai",
    "f2yud-3iaaa-aaaaf-qaehq-cai"
  ]
};
var standards = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.NFT = e.TOKEN = void 0, e.TOKEN = {
    dip20: "DIP20",
    xtc: "XTC",
    wicp: "WICP",
    ext: "EXT",
    icp: "ICP",
    rosetta: "ROSETTA"
  }, e.NFT = {
    ext: "EXT",
    icpunks: "ICPunks",
    departuresLabs: "DepartureLabs",
    erc721: "ERC721",
    dip721: "DIP721",
    c3: "C3",
    nftOrigyn: "nftOrigyn"
  }, e.default = {
    TOKEN: e.TOKEN,
    NFT: e.NFT
  };
})(standards);
var __awaiter$c = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
}, __importDefault$7 = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(ext, "__esModule", { value: !0 });
const agent_1$7 = require$$5, principal_1$6 = require$$4, ext_did_1 = __importDefault$7(ext_did), default_1$5 = __importDefault$7(_default), account_1$1 = account, number_1 = number, canisters_1$1 = canisters, standards_1$5 = standards, getTokenIdentifier = (e, n) => {
  const o = buffer$1.Buffer.from(`
tid`), s = new Uint8Array([
    ...o,
    ...principal_1$6.Principal.fromText(e).toUint8Array(),
    ...(0, number_1.to32bits)(n)
  ]);
  return principal_1$6.Principal.fromUint8Array(s).toText();
}, extImageUrl = (e, n, o) => ({
  [canisters_1$1.NFT_CANISTERS.WRAPPED_PUNKS]: `https://${canisters_1$1.NFT_CANISTERS.IC_PUNKS}.raw.ic0.app/Token/${n}`,
  [canisters_1$1.NFT_CANISTERS.WRAPPED_DRIP]: `https://${canisters_1$1.NFT_CANISTERS.IC_DRIP}.raw.ic0.app?tokenId=${n}`
})[e] || `https://${e}.raw.ic0.app/?type=thumbnail&tokenid=${o}`;
class EXT extends default_1$5.default {
  constructor(n, o) {
    super(n, o), this.standard = standards_1$5.NFT.ext, this.actor = agent_1$7.Actor.createActor(ext_did_1.default, {
      agent: o,
      canisterId: n
    });
  }
  getUserTokens(n) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const o = (0, account_1$1.getAccountId)(n), s = yield this.actor.tokens_ext(o);
      if ("err" in s)
        throw new Error(`${Object.keys(s.err)[0]}: ${Object.values(s.err)[0]}`);
      return (s.ok || []).map((d) => {
        const g = d[2], m = d[0];
        return this.serializeTokenData(g, getTokenIdentifier(this.canisterId, m), m);
      });
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  transfer(n, o) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const s = getTokenIdentifier(this.canisterId, o), u = yield this.agent.getPrincipal(), d = new Array(32).fill(0), g = yield this.actor.transfer({
        to: { principal: n },
        from: { principal: u },
        token: s,
        amount: BigInt(1),
        memo: d,
        notify: !1,
        subaccount: [],
        fee: BigInt(0)
      });
      if ("err" in g)
        throw new Error(`${Object.keys(g.err)[0]}: ${Object.values(g.err)[0]}`);
    });
  }
  details(n) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const o = getTokenIdentifier(this.canisterId, n), s = yield this.actor.metadata(o);
      if ("err" in s)
        throw new Error(`${Object.keys(s.err)[0]}: ${Object.values(s.err)[0]}`);
      const { metadata: u = {} } = "nonfungible" in s.ok ? s.ok.nonfungible : {};
      return this.serializeTokenData(u, o, n);
    });
  }
  serializeTokenData(n, o, s) {
    return {
      id: o,
      index: BigInt(s),
      canister: this.canisterId,
      metadata: n.length ? n[0] : void 0,
      url: extImageUrl(this.canisterId, s, o),
      standard: this.standard
    };
  }
}
ext.default = EXT;
var ic_punks = {}, icpunks_did = {};
Object.defineProperty(icpunks_did, "__esModule", { value: !0 });
icpunks_did.init = void 0;
icpunks_did.default = ({ IDL: e }) => {
  const n = e.Record({ value: e.Text, name: e.Text }), o = e.Record({
    id: e.Nat,
    url: e.Text,
    owner: e.Principal,
    desc: e.Text,
    name: e.Text,
    properties: e.Vec(n)
  }), s = e.Nat;
  return e.Service({
    data_of: e.Func([s], [o], []),
    transfer_to: e.Func([e.Principal, s], [e.Bool], []),
    user_tokens: e.Func([e.Principal], [e.Vec(e.Nat)], [])
  });
};
const init$c = ({ IDL: e }) => [e.Text, e.Text, e.Nat, e.Principal];
icpunks_did.init = init$c;
var __awaiter$b = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
}, __importDefault$6 = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(ic_punks, "__esModule", { value: !0 });
const agent_1$6 = require$$5, icpunks_did_1 = __importDefault$6(icpunks_did), default_1$4 = __importDefault$6(_default), canisters_1 = canisters, standards_1$4 = standards, getICPBunnyCanisterId = (e) => canisters_1.NFT_CANISTERS.ICP_BUNNY_STORAGE[e % 10], imageUrl = (e, n, o) => ({
  [canisters_1.NFT_CANISTERS.ICP_BUNNY_MAIN]: `https://${getICPBunnyCanisterId(n)}.raw.ic0.app/Token/${n}`
})[e] || `https://${e}.raw.ic0.app${o}`;
class ICPUNKS extends default_1$4.default {
  constructor(n, o) {
    super(n, o), this.standard = standards_1$4.NFT.icpunks, this.serializeTokenData = (s) => ({
      index: BigInt(s.id),
      canister: this.canisterId,
      url: imageUrl(this.canisterId, Number.parseInt(s.id.toString(), 10), s.url),
      name: s.name,
      metadata: s,
      standard: this.standard
    }), this.actor = agent_1$6.Actor.createActor(icpunks_did_1.default, {
      agent: o,
      canisterId: n
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(n) {
    return __awaiter$b(this, void 0, void 0, function* () {
      const o = yield this.actor.user_tokens(n);
      return (yield Promise.all(o.map((u) => this.actor.data_of(u)))).map((u) => this.serializeTokenData(u));
    });
  }
  transfer(n, o) {
    return __awaiter$b(this, void 0, void 0, function* () {
      if (!(yield this.actor.transfer_to(n, BigInt(o))))
        throw new Error("Error transfering token");
    });
  }
  details(n) {
    return __awaiter$b(this, void 0, void 0, function* () {
      const o = yield this.actor.data_of(BigInt(n));
      return this.serializeTokenData(o);
    });
  }
}
ic_punks.default = ICPUNKS;
var nft_origyn = {}, nft_origyn_did = {};
Object.defineProperty(nft_origyn_did, "__esModule", { value: !0 });
nft_origyn_did.init = void 0;
nft_origyn_did.default = ({ IDL: e }) => {
  const n = e.Rec(), o = e.Rec(), s = e.Principal;
  e.Record({
    owner: s,
    storage_space: e.Opt(e.Nat)
  });
  const u = e.Text, d = e.Text, g = e.Variant({
    principal: e.Principal,
    address: d
  }), m = e.Record({
    token: u,
    user: g
  }), w = e.Nat, B = e.Variant({
    InvalidToken: u,
    Other: e.Text
  }), x = e.Variant({
    ok: w,
    err: B
  }), C = e.Record({
    value: n,
    name: e.Text,
    immutable: e.Bool
  });
  n.fill(e.Variant({
    Int: e.Int,
    Nat: e.Nat,
    Empty: e.Null,
    Nat16: e.Nat16,
    Nat32: e.Nat32,
    Nat64: e.Nat64,
    Blob: e.Vec(e.Nat8),
    Bool: e.Bool,
    Int8: e.Int8,
    Nat8: e.Nat8,
    Nats: e.Variant({
      thawed: e.Vec(e.Nat),
      frozen: e.Vec(e.Nat)
    }),
    Text: e.Text,
    Bytes: e.Variant({
      thawed: e.Vec(e.Nat8),
      frozen: e.Vec(e.Nat8)
    }),
    Int16: e.Int16,
    Int32: e.Int32,
    Int64: e.Int64,
    Option: e.Opt(n),
    Floats: e.Variant({
      thawed: e.Vec(e.Float64),
      frozen: e.Vec(e.Float64)
    }),
    Float: e.Float64,
    Principal: e.Principal,
    Array: e.Variant({
      thawed: e.Vec(n),
      frozen: e.Vec(n)
    }),
    Class: e.Vec(C)
  }));
  const v = e.Variant({
    account_id: e.Text,
    principal: e.Principal,
    extensible: n
  }), y = e.Record({
    fee: e.Nat,
    decimals: e.Nat,
    canister: e.Principal,
    standard: e.Variant({
      EXTFungible: e.Null,
      DIP20: e.Null,
      Ledger: e.Null
    }),
    symbol: e.Text
  }), T = e.Variant({
    ic: y,
    extensible: n
  }), M = e.Record({
    token: T,
    token_id: e.Text,
    seller: v,
    lock_to_date: e.Opt(e.Int),
    buyer: v,
    amount: e.Nat,
    sale_id: e.Opt(e.Text)
  }), D = e.Record({
    staker: v,
    token_id: e.Text,
    amount: e.Nat
  }), V = e.Record({
    nfts: e.Vec(e.Text),
    sales: e.Vec(M),
    stake: e.Vec(D),
    multi_canister: e.Opt(e.Vec(e.Principal)),
    escrow: e.Vec(M)
  }), O = e.Variant({
    nyi: e.Null,
    storage_configuration_error: e.Null,
    escrow_withdraw_payment_failed: e.Null,
    token_not_found: e.Null,
    owner_not_found: e.Null,
    content_not_found: e.Null,
    auction_ended: e.Null,
    out_of_range: e.Null,
    sale_id_does_not_match: e.Null,
    sale_not_found: e.Null,
    item_not_owned: e.Null,
    property_not_found: e.Null,
    validate_trx_wrong_host: e.Null,
    withdraw_too_large: e.Null,
    content_not_deserializable: e.Null,
    bid_too_low: e.Null,
    validate_deposit_wrong_amount: e.Null,
    existing_sale_found: e.Null,
    asset_mismatch: e.Null,
    escrow_cannot_be_removed: e.Null,
    deposit_burned: e.Null,
    cannot_restage_minted_token: e.Null,
    cannot_find_status_in_metadata: e.Null,
    receipt_data_mismatch: e.Null,
    validate_deposit_failed: e.Null,
    unauthorized_access: e.Null,
    item_already_minted: e.Null,
    no_escrow_found: e.Null,
    escrow_owner_not_the_owner: e.Null,
    improper_interface: e.Null,
    app_id_not_found: e.Null,
    token_non_transferable: e.Null,
    sale_not_over: e.Null,
    update_class_error: e.Null,
    malformed_metadata: e.Null,
    token_id_mismatch: e.Null,
    id_not_found_in_metadata: e.Null,
    auction_not_started: e.Null,
    library_not_found: e.Null,
    attempt_to_stage_system_data: e.Null,
    validate_deposit_wrong_buyer: e.Null,
    not_enough_storage: e.Null,
    sales_withdraw_payment_failed: e.Null
  }), H = e.Record({
    text: e.Text,
    error: O,
    number: e.Nat32,
    flag_point: e.Text
  }), q = e.Variant({
    ok: V,
    err: H
  }), $ = e.Variant({
    ok: d,
    err: B
  }), re = e.Variant({ ok: v, err: H }), ce = e.Record({
    token: T,
    token_id: e.Text,
    seller: v,
    buyer: v,
    amount: e.Nat
  }), Ie = e.Record({
    escrow_receipt: ce,
    sale_id: e.Text
  }), Pe = e.Variant({
    nat: e.Nat,
    text: e.Text,
    extensible: n
  }), se = e.Record({
    start_price: e.Nat,
    token: T,
    reserve: e.Opt(e.Nat),
    start_date: e.Int,
    min_increase: e.Variant({
      amount: e.Nat,
      percentage: e.Float64
    }),
    allow_list: e.Opt(e.Vec(e.Principal)),
    buy_now: e.Opt(e.Nat),
    ending: e.Variant({
      waitForQuiet: e.Record({
        max: e.Nat,
        date: e.Int,
        fade: e.Float64,
        extention: e.Nat64
      }),
      date: e.Int
    })
  }), Ce = e.Variant({
    flat: e.Record({ token: T, amount: e.Nat }),
    extensible: e.Variant({ candyClass: e.Null }),
    instant: e.Null,
    auction: se,
    dutch: e.Record({
      start_price: e.Nat,
      reserve: e.Opt(e.Nat),
      decay_per_hour: e.Float64
    })
  }), Ge = e.Record({
    token_id: e.Text,
    txn_type: e.Variant({
      escrow_deposit: e.Record({
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_network_updated: e.Record({
        network: e.Principal,
        extensible: n
      }),
      escrow_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_managers_updated: e.Record({
        managers: e.Vec(e.Principal),
        extensible: n
      }),
      auction_bid: e.Record({
        token: T,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Text
      }),
      burn: e.Null,
      data: e.Null,
      sale_ended: e.Record({
        token: T,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Opt(e.Text)
      }),
      mint: e.Record({
        to: v,
        from: v,
        sale: e.Opt(e.Record({ token: T, amount: e.Nat })),
        extensible: n
      }),
      extensible: n,
      owner_transfer: e.Record({
        to: v,
        from: v,
        extensible: n
      }),
      sale_opened: e.Record({
        pricing: Ce,
        extensible: n,
        sale_id: e.Text
      }),
      canister_owner_updated: e.Record({
        owner: e.Principal,
        extensible: n
      }),
      sale_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      })
    }),
    timestamp: e.Int,
    index: e.Nat
  }), $e = e.Variant({ ok: Ge, err: H }), Be = e.Principal, Me = e.Record({
    freezing_threshold: e.Nat,
    controllers: e.Opt(e.Vec(e.Principal)),
    memory_allocation: e.Nat,
    compute_allocation: e.Nat
  }), We = e.Record({
    status: e.Variant({
      stopped: e.Null,
      stopping: e.Null,
      running: e.Null
    }),
    memory_size: e.Nat,
    cycles: e.Nat,
    settings: Me,
    module_hash: e.Opt(e.Vec(e.Nat8))
  }), nt = e.Record({
    token_id: e.Text,
    chunk: e.Opt(e.Nat),
    library_id: e.Text
  }), Xe = e.Record({
    allocated_space: e.Nat,
    token_id: e.Text,
    available_space: e.Nat,
    canister: e.Principal,
    chunks: e.Vec(e.Nat),
    library_id: e.Text
  }), Je = e.Variant({
    remote: e.Record({
      args: nt,
      canister: e.Principal
    }),
    chunk: e.Record({
      total_chunks: e.Nat,
      content: e.Vec(e.Nat8),
      storage_allocation: Xe,
      current_chunk: e.Opt(e.Nat)
    })
  }), qe = e.Variant({ ok: Je, err: H }), ye = e.Record({
    multi_canister_count: e.Opt(e.Nat),
    managers: e.Opt(e.Vec(e.Principal)),
    owner: e.Opt(e.Principal),
    metadata: e.Opt(n),
    logo: e.Opt(e.Text),
    name: e.Opt(e.Text),
    network: e.Opt(e.Principal),
    fields: e.Opt(e.Vec(e.Tuple(e.Text, e.Opt(e.Nat), e.Opt(e.Nat)))),
    token_ids_count: e.Opt(e.Nat),
    available_space: e.Opt(e.Nat),
    multi_canister: e.Opt(e.Vec(e.Principal)),
    token_ids: e.Opt(e.Vec(e.Text)),
    total_supply: e.Opt(e.Nat),
    symbol: e.Opt(e.Text),
    allocated_storage: e.Opt(e.Nat)
  }), Ue = e.Variant({ ok: ye, err: H }), ze = e.Variant({
    metadata: e.Opt(n),
    logo: e.Opt(e.Text),
    name: e.Opt(e.Text),
    symbol: e.Opt(e.Text)
  }), X = e.Vec(ze), ut = e.Variant({ ok: e.Bool, err: H }), ot = e.Record({
    data: n,
    event: e.Text,
    timestamp: e.Int,
    caller: e.Opt(e.Principal)
  }), mt = e.Record({
    token_id: e.Text,
    txn_type: e.Variant({
      escrow_deposit: e.Record({
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_network_updated: e.Record({
        network: e.Principal,
        extensible: n
      }),
      escrow_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_managers_updated: e.Record({
        managers: e.Vec(e.Principal),
        extensible: n
      }),
      auction_bid: e.Record({
        token: T,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Text
      }),
      burn: e.Null,
      data: e.Null,
      sale_ended: e.Record({
        token: T,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Opt(e.Text)
      }),
      mint: e.Record({
        to: v,
        from: v,
        sale: e.Opt(e.Record({ token: T, amount: e.Nat })),
        extensible: n
      }),
      extensible: n,
      owner_transfer: e.Record({
        to: v,
        from: v,
        extensible: n
      }),
      sale_opened: e.Record({
        pricing: Ce,
        extensible: n,
        sale_id: e.Text
      }),
      canister_owner_updated: e.Record({
        owner: e.Principal,
        extensible: n
      }),
      sale_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      })
    }),
    timestamp: e.Int,
    index: e.Nat
  }), ve = e.Variant({
    ok: mt,
    err: H
  }), je = e.Record({
    token: T,
    trx_id: Pe,
    seller: v,
    buyer: v,
    amount: e.Nat,
    sale_id: e.Opt(e.Text)
  }), ie = e.Record({
    token_id: e.Text,
    deposit: je,
    lock_to_date: e.Opt(e.Int)
  }), ae = e.Record({
    token_id: e.Text,
    txn_type: e.Variant({
      escrow_deposit: e.Record({
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_network_updated: e.Record({
        network: e.Principal,
        extensible: n
      }),
      escrow_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_managers_updated: e.Record({
        managers: e.Vec(e.Principal),
        extensible: n
      }),
      auction_bid: e.Record({
        token: T,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Text
      }),
      burn: e.Null,
      data: e.Null,
      sale_ended: e.Record({
        token: T,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Opt(e.Text)
      }),
      mint: e.Record({
        to: v,
        from: v,
        sale: e.Opt(e.Record({ token: T, amount: e.Nat })),
        extensible: n
      }),
      extensible: n,
      owner_transfer: e.Record({
        to: v,
        from: v,
        extensible: n
      }),
      sale_opened: e.Record({
        pricing: Ce,
        extensible: n,
        sale_id: e.Text
      }),
      canister_owner_updated: e.Record({
        owner: e.Principal,
        extensible: n
      }),
      sale_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      })
    }),
    timestamp: e.Int,
    index: e.Nat
  }), z = e.Record({
    balance: e.Nat,
    receipt: ce,
    transaction: ae
  }), be = e.Variant({ ok: z, err: H }), fe = e.Variant({ ok: e.Text, err: H }), J = e.Record({
    available_space: e.Nat,
    allocated_storage: e.Nat
  }), R = e.Variant({ ok: J, err: H }), Q = e.Variant({
    ok: e.Vec(ae),
    err: H
  }), b = e.Tuple(e.Text, e.Text), U = e.Record({
    url: e.Text,
    method: e.Text,
    body: e.Vec(e.Nat8),
    headers: e.Vec(b)
  }), Z = e.Tuple(e.Text, e.Text), ne = e.Record({
    key: e.Text,
    index: e.Nat,
    content_encoding: e.Text
  }), le = e.Variant({
    Callback: e.Record({
      token: ne,
      callback: e.Func([], [], [])
    })
  }), Ne = e.Record({
    body: e.Vec(e.Nat8),
    headers: e.Vec(Z),
    streaming_strategy: e.Opt(le),
    status_code: e.Nat16
  }), Ke = e.Record({
    token: e.Opt(ne),
    body: e.Vec(e.Nat8)
  }), Ze = e.Variant({
    UpdateOwner: e.Principal,
    UpdateManagers: e.Vec(e.Principal),
    UpdateNetwork: e.Opt(e.Principal)
  }), et = e.Variant({
    add_storage_canisters: e.Vec(e.Tuple(e.Principal, e.Nat, e.Tuple(e.Nat, e.Nat, e.Nat)))
  }), Y = e.Variant({
    add_storage_canisters: e.Tuple(e.Nat, e.Nat)
  }), k = e.Variant({
    ok: Y,
    err: H
  }), F = e.Record({
    pricing: Ce,
    escrow_receipt: e.Opt(ce)
  }), ue = e.Record({
    token_id: e.Text,
    sales_config: F
  }), Qe = e.Record({
    token_id: e.Text,
    txn_type: e.Variant({
      escrow_deposit: e.Record({
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_network_updated: e.Record({
        network: e.Principal,
        extensible: n
      }),
      escrow_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_managers_updated: e.Record({
        managers: e.Vec(e.Principal),
        extensible: n
      }),
      auction_bid: e.Record({
        token: T,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Text
      }),
      burn: e.Null,
      data: e.Null,
      sale_ended: e.Record({
        token: T,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Opt(e.Text)
      }),
      mint: e.Record({
        to: v,
        from: v,
        sale: e.Opt(e.Record({ token: T, amount: e.Nat })),
        extensible: n
      }),
      extensible: n,
      owner_transfer: e.Record({
        to: v,
        from: v,
        extensible: n
      }),
      sale_opened: e.Record({
        pricing: Ce,
        extensible: n,
        sale_id: e.Text
      }),
      canister_owner_updated: e.Record({
        owner: e.Principal,
        extensible: n
      }),
      sale_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      })
    }),
    timestamp: e.Int,
    index: e.Nat
  }), Oe = e.Variant({
    ok: Qe,
    err: H
  }), Ve = e.Variant({
    fungible: e.Record({
      decimals: e.Nat8,
      metadata: e.Opt(e.Vec(e.Nat8)),
      name: e.Text,
      symbol: e.Text
    }),
    nonfungible: e.Record({ metadata: e.Opt(e.Vec(e.Nat8)) })
  }), It = e.Variant({ ok: Ve, err: B }), vt = e.Record({
    status: e.Variant({
      closed: e.Null,
      open: e.Null,
      not_started: e.Null
    }),
    participants: e.Vec(e.Tuple(e.Principal, e.Int)),
    current_bid_amount: e.Nat,
    winner: e.Opt(v),
    end_date: e.Int,
    wait_for_quiet_count: e.Opt(e.Nat),
    current_escrow: e.Opt(ce),
    allow_list: e.Opt(e.Vec(e.Tuple(e.Principal, e.Bool))),
    min_next_bid: e.Nat,
    config: Ce
  }), Qt = e.Record({
    token_id: e.Text,
    sale_type: e.Variant({ auction: vt }),
    sale_id: e.Text
  }), Ct = e.Record({
    metadata: n,
    current_sale: e.Opt(Qt)
  }), Rt = e.Variant({ ok: Ct, err: H }), or = e.Variant({
    UnauthorizedOperator: e.Null,
    SelfTransfer: e.Null,
    TokenNotFound: e.Null,
    UnauthorizedOwner: e.Null,
    TxNotFound: e.Null,
    SelfApprove: e.Null,
    OperatorNotFound: e.Null,
    ExistedNFT: e.Null,
    OwnerNotFound: e.Null,
    Other: e.Text
  }), tn = e.Variant({
    Ok: e.Opt(e.Principal),
    Err: or
  }), ur = e.Record({
    to: v,
    token_id: e.Text,
    from: v
  }), Vr = e.Record({
    transaction: ae,
    assets: e.Vec(n)
  }), zr = e.Variant({
    ok: Vr,
    err: H
  }), $r = e.Record({
    content: e.Vec(e.Nat8),
    token_id: e.Text,
    chunk: e.Nat,
    filedata: n,
    library_id: e.Text
  }), jr = e.Record({ canister: e.Principal }), dn = e.Variant({
    ok: jr,
    err: H
  }), vn = e.Vec(e.Nat8), ti = e.Vec(e.Nat8), Fn = e.Record({
    to: g,
    token: u,
    notify: e.Bool,
    from: g,
    memo: vn,
    subaccount: e.Opt(ti),
    amount: w
  }), Yr = e.Variant({
    ok: w,
    err: e.Variant({
      CannotNotify: d,
      InsufficientBalance: e.Null,
      InvalidToken: u,
      Rejected: e.Null,
      Unauthorized: d,
      Other: e.Text
    })
  }), rn = e.Variant({ Ok: e.Nat, Err: or }), Zr = e.Variant({
    Set: n,
    Lock: n,
    Next: e.Vec(o)
  });
  o.fill(e.Record({ mode: Zr, name: e.Text }));
  const hn = e.Record({
    id: e.Text,
    update: e.Vec(o)
  }), Cn = e.Variant({
    update: e.Record({
      token_id: e.Text,
      update: hn,
      app_id: e.Text
    }),
    replace: e.Record({ token_id: e.Text, data: n })
  }), In = e.Bool, xn = e.Variant({
    ok: In,
    err: H
  }), ke = e.Record({
    token: T,
    token_id: e.Text,
    seller: v,
    withdraw_to: v,
    buyer: v,
    amount: e.Nat
  }), st = e.Variant({
    sale: ke,
    escrow: ke
  }), Pt = e.Record({
    token_id: e.Text,
    txn_type: e.Variant({
      escrow_deposit: e.Record({
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_network_updated: e.Record({
        network: e.Principal,
        extensible: n
      }),
      escrow_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      }),
      canister_managers_updated: e.Record({
        managers: e.Vec(e.Principal),
        extensible: n
      }),
      auction_bid: e.Record({
        token: T,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Text
      }),
      burn: e.Null,
      data: e.Null,
      sale_ended: e.Record({
        token: T,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat,
        sale_id: e.Opt(e.Text)
      }),
      mint: e.Record({
        to: v,
        from: v,
        sale: e.Opt(e.Record({ token: T, amount: e.Nat })),
        extensible: n
      }),
      extensible: n,
      owner_transfer: e.Record({
        to: v,
        from: v,
        extensible: n
      }),
      sale_opened: e.Record({
        pricing: Ce,
        extensible: n,
        sale_id: e.Text
      }),
      canister_owner_updated: e.Record({
        owner: e.Principal,
        extensible: n
      }),
      sale_withdraw: e.Record({
        fee: e.Nat,
        token: T,
        token_id: e.Text,
        trx_id: Pe,
        seller: v,
        extensible: n,
        buyer: v,
        amount: e.Nat
      })
    }),
    timestamp: e.Int,
    index: e.Nat
  }), lr = e.Variant({ ok: Pt, err: H });
  return e.Service({
    __advance_time: e.Func([e.Int], [e.Int], []),
    __set_time_mode: e.Func([e.Variant({ test: e.Null, standard: e.Null })], [e.Bool], []),
    balance: e.Func([m], [x], ["query"]),
    balanceEXT: e.Func([m], [x], ["query"]),
    balanceOfDip721: e.Func([e.Principal], [e.Nat], ["query"]),
    balance_of_nft_origyn: e.Func([v], [q], ["query"]),
    bearer: e.Func([u], [$], ["query"]),
    bearerEXT: e.Func([u], [$], ["query"]),
    bearer_batch_nft_origyn: e.Func([e.Vec(e.Text)], [e.Vec(re)], ["query"]),
    bearer_nft_origyn: e.Func([e.Text], [re], ["query"]),
    bid_nft_origyn: e.Func([Ie], [$e], []),
    canister_status: e.Func([e.Record({ canister_id: Be })], [We], []),
    chunk_nft_origyn: e.Func([nt], [qe], ["query"]),
    collection_nft_origyn: e.Func([
      e.Opt(e.Vec(e.Tuple(e.Text, e.Opt(e.Nat), e.Opt(e.Nat))))
    ], [Ue], ["query"]),
    collection_update_origyn: e.Func([X], [ut], []),
    current_log: e.Func([], [e.Vec(ot)], ["query"]),
    cycles: e.Func([], [e.Nat], ["query"]),
    end_sale_nft_origyn: e.Func([e.Text], [ve], []),
    escrow_nft_origyn: e.Func([ie], [be], []),
    getEXTTokenIdentifier: e.Func([e.Text], [e.Text], ["query"]),
    get_access_key: e.Func([], [fe], ["query"]),
    get_canister_managers_nft_origyn: e.Func([], [e.Vec(s)], ["query"]),
    get_canister_network_nft_origyn: e.Func([], [e.Opt(s)], ["query"]),
    get_canister_owner_nft_origyn: e.Func([], [s], ["query"]),
    get_nat_as_token_id_origyn: e.Func([e.Nat], [e.Text], ["query"]),
    get_owner_soulbound: e.Func([n], [e.Bool], []),
    get_storage_metrics: e.Func([], [R], ["query"]),
    get_token_id_as_nat_origyn: e.Func([e.Text], [e.Nat], ["query"]),
    harvest_log: e.Func([e.Nat], [e.Vec(e.Vec(ot))], []),
    history_nft_origyn: e.Func([e.Text, e.Opt(e.Nat), e.Opt(e.Nat)], [Q], ["query"]),
    http_access_key: e.Func([], [fe], []),
    http_request: e.Func([U], [Ne], ["query"]),
    http_request_streaming_callback: e.Func([ne], [Ke], ["query"]),
    log_history_page: e.Func([e.Nat], [e.Vec(ot)], ["query"]),
    log_history_page_chunk: e.Func([e.Nat, e.Nat, e.Nat], [e.Vec(ot)], ["query"]),
    log_history_size: e.Func([], [e.Nat], ["query"]),
    manage_nft_origyn: e.Func([Ze], [ut], []),
    manage_storage_nft_origyn: e.Func([et], [k], []),
    market_transfer_batch_nft_origyn: e.Func([e.Vec(ue)], [e.Vec(Oe)], []),
    market_transfer_nft_origyn: e.Func([ue], [Oe], []),
    metadata: e.Func([u], [It], ["query"]),
    mint__batch_nft_origyn: e.Func([e.Vec(e.Tuple(e.Text, v))], [e.Vec(fe)], []),
    mint_nft_origyn: e.Func([e.Text, v], [fe], []),
    nftStreamingCallback: e.Func([ne], [Ke], ["query"]),
    nft_batch_origyn: e.Func([e.Vec(e.Text)], [e.Vec(Rt)], ["query"]),
    nft_origyn: e.Func([e.Text], [Rt], ["query"]),
    nuke_log: e.Func([], [], []),
    ownerOf: e.Func([e.Nat], [tn], ["query"]),
    ownerOfDIP721: e.Func([e.Nat], [tn], ["query"]),
    owner_transfer_nft_origyn: e.Func([ur], [zr], []),
    set_log_harvester_id: e.Func([e.Principal], [], []),
    stage_batch_nft_origyn: e.Func([e.Vec(e.Record({ metadata: n }))], [e.Vec(fe)], []),
    stage_library_nft_origyn: e.Func([$r], [dn], []),
    stage_nft_origyn: e.Func([e.Record({ metadata: n })], [fe], []),
    transfer: e.Func([Fn], [Yr], []),
    transferEXT: e.Func([Fn], [Yr], []),
    transferFrom: e.Func([e.Principal, e.Principal, e.Nat], [rn], []),
    transferFromDip721: e.Func([e.Principal, e.Principal, e.Nat], [rn], []),
    update_app_nft_origyn: e.Func([Cn], [xn], []),
    whoami: e.Func([], [e.Principal], ["query"]),
    withdraw_nft_origyn: e.Func([st], [lr], [])
  });
};
const init$b = ({ IDL: e }) => {
  const n = e.Principal;
  return [e.Record({
    owner: n,
    storage_space: e.Opt(e.Nat)
  })];
};
nft_origyn_did.init = init$b;
var __awaiter$a = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
}, __importDefault$5 = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(nft_origyn, "__esModule", { value: !0 });
const agent_1$5 = require$$5, nft_origyn_did_1 = __importDefault$5(nft_origyn_did), default_1$3 = __importDefault$5(_default), standards_1$3 = standards;
class NFTOrigyn extends default_1$3.default {
  constructor(n, o) {
    super(n, o), this.standard = standards_1$3.NFT.nftOrigyn, this.serializeTokenData = (s) => {
      if ("err" in s)
        throw new Error(Object.keys(s.err)[0]);
      const u = s.ok.metadata, d = u.Class.find(({ name: g }) => g === "id").value.Text;
      return {
        index: d,
        canister: this.canisterId,
        url: `https://${this.canisterId}.raw.ic0.app/-/${d}`,
        name: d,
        metadata: u,
        standard: this.standard
      };
    }, this.actor = agent_1$5.Actor.createActor(nft_origyn_did_1.default, {
      agent: o,
      canisterId: n
    });
  }
  getUserTokens(n) {
    return __awaiter$a(this, void 0, void 0, function* () {
      const o = yield this.actor.balance_of_nft_origyn({ principal: n });
      if ("err" in o)
        throw new Error(Object.keys(o.err)[0]);
      return (yield Promise.all(o.ok.nfts.map((u) => __awaiter$a(this, void 0, void 0, function* () {
        const d = yield this.actor.nft_origyn(u);
        if ("err" in d)
          throw new Error(Object.keys(d.err)[0]);
        return { detail: d, principal: n };
      })))).map((u) => this.serializeTokenData(u.detail));
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  transfer(n, o) {
    return __awaiter$a(this, void 0, void 0, function* () {
      yield this.agent.getPrincipal();
      const s = yield this.actor.balance_of_nft_origyn({ principal: n });
      if ("err" in s)
        throw new Error(Object.keys(s.err)[0]);
      const u = s.ok.escrow.find(({ token_id: g }) => g === o);
      if (!u)
        throw new Error("No pending escrows for transfer.");
      const d = yield this.actor.market_transfer_nft_origyn({
        token_id: o,
        sales_config: {
          pricing: { instant: null },
          escrow_receipt: [u]
        }
      });
      if ("err" in d)
        throw new Error(Object.keys(d.err)[0]);
    });
  }
  details(n) {
    return __awaiter$a(this, void 0, void 0, function* () {
      const o = yield this.actor.nft_origyn(n);
      return this.serializeTokenData(o);
    });
  }
}
nft_origyn.default = NFTOrigyn;
var departure_labs = {}, departure_labs_did = {};
Object.defineProperty(departure_labs_did, "__esModule", { value: !0 });
departure_labs_did.init = void 0;
departure_labs_did.default = ({ IDL: e }) => {
  const n = e.Rec(), o = e.Rec(), s = e.Rec(), u = e.Func([], [], []), d = e.Variant({
    Init: e.Record({ size: e.Nat, callback: e.Opt(u) }),
    Chunk: e.Record({
      chunk: e.Vec(e.Nat8),
      callback: e.Opt(u)
    })
  }), g = e.Variant({
    Put: e.Record({
      key: e.Text,
      contentType: e.Text,
      callback: e.Opt(u),
      payload: e.Variant({
        StagedData: e.Null,
        Payload: e.Vec(e.Nat8)
      })
    }),
    Remove: e.Record({ key: e.Text, callback: e.Opt(u) }),
    StagedWrite: d
  }), m = e.Record({
    p: e.Principal,
    id: e.Text,
    isAuthorized: e.Bool
  }), w = e.Variant({
    Immutable: e.Null,
    NotFound: e.Null,
    Unauthorized: e.Null,
    InvalidRequest: e.Null,
    AuthorizedPrincipalLimitReached: e.Nat
  }), B = e.Variant({ ok: e.Null, err: w }), x = e.Record({
    nft_payload_size: e.Nat,
    memory_size: e.Nat,
    max_live_size: e.Nat,
    cycles: e.Nat,
    total_minted: e.Nat,
    heap_size: e.Nat,
    authorized_users: e.Vec(e.Principal)
  }), C = e.Func([], [], []), v = e.Variant({
    ContractAuthorize: e.Record({
      isAuthorized: e.Bool,
      user: e.Principal
    }),
    Mint: e.Record({ id: e.Text, owner: e.Principal })
  }), y = e.Variant({
    Authorize: e.Record({
      id: e.Text,
      isAuthorized: e.Bool,
      user: e.Principal
    }),
    Transfer: e.Record({
      id: e.Text,
      to: e.Principal,
      from: e.Principal
    })
  }), T = e.Record({
    topupCallback: C,
    createdAt: e.Int,
    topupAmount: e.Nat,
    event: e.Variant({ ContractEvent: v, TokenEvent: y })
  }), M = e.Func([T], [], []), D = e.Record({
    failedCalls: e.Nat,
    failedCallsLimit: e.Nat,
    callback: e.Opt(M),
    noTopupCallLimit: e.Nat,
    callsSinceLastTopup: e.Nat
  }), V = e.Record({
    name: e.Text,
    symbol: e.Text
  }), O = e.Tuple(e.Text, e.Text), H = e.Record({
    url: e.Text,
    method: e.Text,
    body: e.Vec(e.Nat8),
    headers: e.Vec(O)
  }), q = e.Record({
    key: e.Text,
    index: e.Nat,
    content_encoding: e.Text
  }), $ = e.Record({
    token: e.Opt(q),
    body: e.Vec(e.Nat8)
  }), re = e.Func([q], [$], ["query"]), ce = e.Variant({
    Callback: e.Record({
      token: q,
      callback: re
    })
  }), Ie = e.Record({
    body: e.Vec(e.Nat8),
    headers: e.Vec(O),
    streaming_strategy: e.Opt(ce),
    status_code: e.Nat16
  }), Pe = e.Variant({
    Int: e.Int,
    Nat: e.Nat,
    Empty: e.Null,
    Bool: e.Bool,
    Text: e.Text,
    Float: e.Float64,
    Principal: e.Principal,
    Class: e.Vec(n)
  });
  n.fill(e.Record({ value: Pe, name: e.Text, immutable: e.Bool }));
  const se = e.Vec(n), Ce = e.Record({
    contentType: e.Text,
    owner: e.Opt(e.Principal),
    properties: se,
    isPrivate: e.Bool,
    payload: e.Variant({
      StagedData: e.Null,
      Payload: e.Vec(e.Nat8)
    })
  }), Ge = e.Variant({ ok: e.Principal, err: w });
  o.fill(e.Record({ name: e.Text, next: e.Vec(o) }));
  const $e = e.Variant({ All: e.Null, Some: e.Vec(o) }), Be = e.Record({ id: e.Text, mode: $e }), Me = e.Variant({ ok: se, err: w }), We = e.Record({
    data: e.Vec(e.Nat8),
    totalPages: e.Nat,
    nextPage: e.Opt(e.Nat)
  }), nt = e.Variant({
    Complete: e.Vec(e.Nat8),
    Chunk: We
  }), Xe = e.Record({
    id: e.Text,
    contentType: e.Text,
    owner: e.Principal,
    createdAt: e.Int,
    properties: se,
    payload: nt
  }), Je = e.Variant({ ok: Xe, err: w }), qe = e.Variant({ ok: We, err: w }), ye = e.Record({
    id: e.Text,
    contentType: e.Text,
    owner: e.Principal,
    createdAt: e.Int,
    properties: se
  }), Ue = e.Variant({ ok: ye, err: w }), ze = e.Variant({
    Set: M,
    Remove: e.Null
  }), X = e.Variant({ Set: Pe, Next: e.Vec(s) });
  s.fill(e.Record({ mode: X, name: e.Text }));
  const ut = e.Record({
    id: e.Text,
    update: e.Vec(s)
  });
  return e.Service({
    assetRequest: e.Func([g], [], []),
    authorize: e.Func([m], [B], []),
    balanceOf: e.Func([e.Principal], [e.Vec(e.Text)], []),
    getAuthorized: e.Func([e.Text], [e.Vec(e.Principal)], ["query"]),
    getContractInfo: e.Func([], [x], []),
    getEventCallbackStatus: e.Func([], [D], []),
    getMetadata: e.Func([], [V], ["query"]),
    getTotalMinted: e.Func([], [e.Nat], ["query"]),
    http_request: e.Func([H], [Ie], ["query"]),
    http_request_streaming_callback: e.Func([q], [$], ["query"]),
    init: e.Func([e.Vec(e.Principal), V], [], []),
    isAuthorized: e.Func([e.Text, e.Principal], [e.Bool], ["query"]),
    listAssets: e.Func([], [e.Vec(e.Tuple(e.Text, e.Text, e.Nat))], ["query"]),
    mint: e.Func([Ce], [e.Text], []),
    nftStreamingCallback: e.Func([q], [$], ["query"]),
    ownerOf: e.Func([e.Text], [Ge], ["query"]),
    queryProperties: e.Func([Be], [Me], ["query"]),
    staticStreamingCallback: e.Func([q], [$], ["query"]),
    tokenByIndex: e.Func([e.Text], [Je], []),
    tokenChunkByIndex: e.Func([e.Text, e.Nat], [qe], []),
    tokenMetadataByIndex: e.Func([e.Text], [Ue], []),
    transfer: e.Func([e.Principal, e.Text], [B], []),
    updateContractOwners: e.Func([e.Principal, e.Bool], [B], []),
    updateEventCallback: e.Func([ze], [], []),
    updateProperties: e.Func([ut], [Me], []),
    wallet_receive: e.Func([], [], []),
    writeStaged: e.Func([d], [], [])
  });
};
const init$a = ({}) => [];
departure_labs_did.init = init$a;
var __awaiter$9 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
}, __importDefault$4 = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(departure_labs, "__esModule", { value: !0 });
const agent_1$4 = require$$5, departure_labs_did_1 = __importDefault$4(departure_labs_did), default_1$2 = __importDefault$4(_default), standards_1$2 = standards;
class DepartureLabs extends default_1$2.default {
  constructor(n, o) {
    super(n, o), this.standard = standards_1$2.NFT.departuresLabs, this.serializeTokenData = (s) => ({
      index: BigInt(s.id),
      canister: this.canisterId,
      url: `https://${this.canisterId}.raw.ic0.app/nft/${s.id}`,
      metadata: s,
      standard: this.standard
    }), this.actor = agent_1$4.Actor.createActor(departure_labs_did_1.default, {
      agent: o,
      canisterId: n
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(n) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const o = yield this.actor.balanceOf(n);
      return (yield Promise.all(o.map((u) => __awaiter$9(this, void 0, void 0, function* () {
        const d = yield this.actor.tokenMetadataByIndex(u);
        if ("err" in d)
          throw new Error(Object.keys(d.err)[0]);
        return d.ok;
      })))).map((u) => this.serializeTokenData(u));
    });
  }
  transfer(n, o) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const s = yield this.actor.transfer(n, o.toString(10));
      if ("err" in s)
        throw new Error(Object.keys(s.err)[0]);
    });
  }
  details(n) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const o = yield this.actor.tokenMetadataByIndex(n.toString(10));
      if ("err" in o)
        throw new Error(Object.keys(o.err)[0]);
      return this.serializeTokenData(o.ok);
    });
  }
}
departure_labs.default = DepartureLabs;
var dip_721 = {}, dip_721_did = {};
Object.defineProperty(dip_721_did, "__esModule", { value: !0 });
dip_721_did.default = ({ IDL: e }) => {
  const n = e.Rec();
  e.Record({
    cap: e.Opt(e.Principal),
    logo: e.Opt(e.Text),
    name: e.Opt(e.Text),
    custodians: e.Opt(e.Vec(e.Principal)),
    symbol: e.Opt(e.Text)
  });
  const o = e.Variant({
    UnauthorizedOperator: e.Null,
    SelfTransfer: e.Null,
    TokenNotFound: e.Null,
    UnauthorizedOwner: e.Null,
    SelfApprove: e.Null,
    OperatorNotFound: e.Null,
    ExistedNFT: e.Null,
    OwnerNotFound: e.Null
  }), s = e.Variant({ Ok: e.Nat, Err: o }), u = e.Variant({ Ok: e.Bool, Err: o }), d = e.Record({
    logo: e.Opt(e.Text),
    name: e.Opt(e.Text),
    created_at: e.Nat64,
    upgraded_at: e.Nat64,
    custodians: e.Vec(e.Principal),
    symbol: e.Opt(e.Text)
  });
  n.fill(e.Vec(e.Tuple(e.Text, e.Variant({
    Nat64Content: e.Nat64,
    Nat32Content: e.Nat32,
    BoolContent: e.Bool,
    Nat8Content: e.Nat8,
    Int64Content: e.Int64,
    IntContent: e.Int,
    NatContent: e.Nat,
    Nat16Content: e.Nat16,
    Int32Content: e.Int32,
    Int8Content: e.Int8,
    FloatContent: e.Float64,
    Int16Content: e.Int16,
    BlobContent: e.Vec(e.Nat8),
    NestedContent: n,
    Principal: e.Principal,
    TextContent: e.Text
  }))));
  const g = e.Variant({
    Nat64Content: e.Nat64,
    Nat32Content: e.Nat32,
    BoolContent: e.Bool,
    Nat8Content: e.Nat8,
    Int64Content: e.Int64,
    IntContent: e.Int,
    NatContent: e.Nat,
    Nat16Content: e.Nat16,
    Int32Content: e.Int32,
    Int8Content: e.Int8,
    FloatContent: e.Float64,
    Int16Content: e.Int16,
    BlobContent: e.Vec(e.Nat8),
    NestedContent: n,
    Principal: e.Principal,
    TextContent: e.Text
  }), m = e.Variant({
    Ok: e.Opt(e.Principal),
    Err: o
  }), w = e.Variant({
    Ok: e.Vec(e.Nat),
    Err: o
  }), B = e.Record({
    transferred_at: e.Opt(e.Nat64),
    transferred_by: e.Opt(e.Principal),
    owner: e.Opt(e.Principal),
    operator: e.Opt(e.Principal),
    approved_at: e.Opt(e.Nat64),
    approved_by: e.Opt(e.Principal),
    properties: e.Vec(e.Tuple(e.Text, g)),
    is_burned: e.Bool,
    token_identifier: e.Nat,
    burned_at: e.Opt(e.Nat64),
    burned_by: e.Opt(e.Principal),
    minted_at: e.Nat64,
    minted_by: e.Principal
  }), x = e.Variant({
    Ok: e.Vec(B),
    Err: o
  }), C = e.Record({
    cycles: e.Nat,
    total_transactions: e.Nat,
    total_unique_holders: e.Nat,
    total_supply: e.Nat
  }), v = e.Variant({
    Burn: e.Null,
    Mint: e.Null,
    Approval: e.Null
  }), y = e.Variant({ Ok: B, Err: o });
  return e.Service({
    approve: e.Func([e.Principal, e.Nat], [s], []),
    balanceOf: e.Func([e.Principal], [s], ["query"]),
    burn: e.Func([e.Nat], [s], []),
    custodians: e.Func([], [e.Vec(e.Principal)], ["query"]),
    cycles: e.Func([], [e.Nat], ["query"]),
    dfx_info: e.Func([], [e.Text], ["query"]),
    dip721_approve: e.Func([e.Principal, e.Nat], [s], []),
    dip721_balance_of: e.Func([e.Principal], [s], ["query"]),
    dip721_burn: e.Func([e.Nat], [s], []),
    dip721_custodians: e.Func([], [e.Vec(e.Principal)], ["query"]),
    dip721_cycles: e.Func([], [e.Nat], ["query"]),
    dip721_is_approved_for_all: e.Func([e.Principal, e.Principal], [u], ["query"]),
    dip721_logo: e.Func([], [e.Opt(e.Text)], ["query"]),
    dip721_metadata: e.Func([], [d], ["query"]),
    dip721_mint: e.Func([e.Principal, e.Nat, e.Vec(e.Tuple(e.Text, g))], [s], []),
    dip721_name: e.Func([], [e.Opt(e.Text)], ["query"]),
    dip721_operator_of: e.Func([e.Nat], [m], ["query"]),
    dip721_operator_token_identifiers: e.Func([e.Principal], [w], ["query"]),
    dip721_operator_token_metadata: e.Func([e.Principal], [x], ["query"]),
    dip721_owner_of: e.Func([e.Nat], [m], ["query"]),
    dip721_owner_token_identifiers: e.Func([e.Principal], [w], ["query"]),
    dip721_owner_token_metadata: e.Func([e.Principal], [x], ["query"]),
    dip721_set_approval_for_all: e.Func([e.Principal, e.Bool], [s], []),
    dip721_set_custodians: e.Func([e.Vec(e.Principal)], [], []),
    dip721_set_logo: e.Func([e.Text], [], []),
    dip721_set_name: e.Func([e.Text], [], []),
    dip721_set_symbol: e.Func([e.Text], [], []),
    dip721_stats: e.Func([], [C], ["query"]),
    dip721_supported_interfaces: e.Func([], [e.Vec(v)], ["query"]),
    dip721_symbol: e.Func([], [e.Opt(e.Text)], ["query"]),
    dip721_token_metadata: e.Func([e.Nat], [y], ["query"]),
    dip721_total_supply: e.Func([], [e.Nat], ["query"]),
    dip721_total_transactions: e.Func([], [e.Nat], ["query"]),
    dip721_total_unique_holders: e.Func([], [e.Nat], ["query"]),
    dip721_transfer: e.Func([e.Principal, e.Nat], [s], []),
    dip721_transfer_from: e.Func([e.Principal, e.Principal, e.Nat], [s], []),
    git_commit_hash: e.Func([], [e.Text], ["query"]),
    isApprovedForAll: e.Func([e.Principal, e.Principal], [u], ["query"]),
    logo: e.Func([], [e.Opt(e.Text)], ["query"]),
    metadata: e.Func([], [d], ["query"]),
    mint: e.Func([e.Principal, e.Nat, e.Vec(e.Tuple(e.Text, g))], [s], []),
    name: e.Func([], [e.Opt(e.Text)], ["query"]),
    operatorOf: e.Func([e.Nat], [m], ["query"]),
    operatorTokenIdentifiers: e.Func([e.Principal], [w], ["query"]),
    operatorTokenMetadata: e.Func([e.Principal], [x], ["query"]),
    ownerOf: e.Func([e.Nat], [m], ["query"]),
    ownerTokenIdentifiers: e.Func([e.Principal], [w], ["query"]),
    ownerTokenMetadata: e.Func([e.Principal], [x], ["query"]),
    rust_toolchain_info: e.Func([], [e.Text], ["query"]),
    setApprovalForAll: e.Func([e.Principal, e.Bool], [s], []),
    setCustodians: e.Func([e.Vec(e.Principal)], [], []),
    setLogo: e.Func([e.Text], [], []),
    setName: e.Func([e.Text], [], []),
    setSymbol: e.Func([e.Text], [], []),
    stats: e.Func([], [C], ["query"]),
    supportedInterfaces: e.Func([], [e.Vec(v)], ["query"]),
    symbol: e.Func([], [e.Opt(e.Text)], ["query"]),
    tokenMetadata: e.Func([e.Nat], [y], ["query"]),
    totalSupply: e.Func([], [e.Nat], ["query"]),
    totalTransactions: e.Func([], [e.Nat], ["query"]),
    totalUniqueHolders: e.Func([], [e.Nat], ["query"]),
    transfer: e.Func([e.Principal, e.Nat], [s], []),
    transferFrom: e.Func([e.Principal, e.Principal, e.Nat], [s], [])
  });
};
var __awaiter$8 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
}, __importDefault$3 = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(dip_721, "__esModule", { value: !0 });
const agent_1$3 = require$$5, dip_721_did_1 = __importDefault$3(dip_721_did), default_1$1 = __importDefault$3(_default), standards_1$1 = standards, extractMetadataValue = (e) => {
  const n = Object.keys(e)[0], o = e[n];
  return typeof o == "object" ? JSON.stringify(o) : o;
};
class ERC721 extends default_1$1.default {
  constructor(n, o) {
    super(n, o), this.standard = standards_1$1.NFT.dip721, this.actor = agent_1$3.Actor.createActor(dip_721_did_1.default, {
      agent: o,
      canisterId: n
    });
  }
  backwardsCompatibleGuard(n, o) {
    return (s = []) => __awaiter$8(this, void 0, void 0, function* () {
      let u;
      try {
        u = yield this.actor[o](...s);
      } catch {
        u = yield this.actor[n](...s);
      }
      return u;
    });
  }
  getUserTokens(n) {
    return __awaiter$8(this, void 0, void 0, function* () {
      const u = (yield this.backwardsCompatibleGuard("ownerTokenMetadata", "dip721_owner_token_metadata")([n])).Ok || [];
      return u.length ? u.map((g) => {
        var m, w;
        const B = g.token_identifier, x = this.formatMetadata(g);
        if (!x)
          return;
        const C = (w = (m = g.operator) === null || m === void 0 ? void 0 : m[0]) === null || w === void 0 ? void 0 : w.toText();
        return this.serializeTokenData(x, B, n.toText(), C);
      }).filter((g) => g) : [];
    });
  }
  transfer(n, o) {
    return __awaiter$8(this, void 0, void 0, function* () {
      const u = yield this.backwardsCompatibleGuard("transfer", "dip721_transfer")([n, BigInt(o)]);
      if ("Err" in u)
        throw new Error(`${Object.keys(u.Err)[0]}: ${Object.values(u.Err)[0]}`);
    });
  }
  details(n) {
    var o, s, u, d, g, m;
    return __awaiter$8(this, void 0, void 0, function* () {
      const B = yield this.backwardsCompatibleGuard("tokenMetadata", "dip721_token_metadata")([BigInt(n)]);
      if ("Err" in B)
        throw new Error(`${Object.keys(B.Err)[0]}: ${Object.values(B.Err)[0]}`);
      const x = B == null ? void 0 : B.Ok, C = this.formatMetadata(x), v = (u = (s = (o = x == null ? void 0 : x.owner) === null || o === void 0 ? void 0 : o[0]) === null || s === void 0 ? void 0 : s.toText) === null || u === void 0 ? void 0 : u.call(s), y = (m = (g = (d = x == null ? void 0 : x.operator) === null || d === void 0 ? void 0 : d[0]) === null || g === void 0 ? void 0 : g.toText) === null || m === void 0 ? void 0 : m.call(g);
      return this.serializeTokenData(C, n, v, y);
    });
  }
  getMetadata() {
    var n;
    return __awaiter$8(this, void 0, void 0, function* () {
      const s = yield this.backwardsCompatibleGuard("metadata", "dip721_get_metadata")();
      return {
        icon: s == null ? void 0 : s.logo[0],
        name: ((n = s == null ? void 0 : s.name) === null || n === void 0 ? void 0 : n[0]) || "",
        standard: this.standard,
        canisterId: this.canisterId,
        tokens: [],
        description: ""
      };
    });
  }
  serializeTokenData(n, o, s, u) {
    var d, g;
    return {
      index: BigInt(o),
      canister: this.canisterId,
      metadata: n,
      owner: s,
      url: ((g = (d = n == null ? void 0 : n.location) === null || d === void 0 ? void 0 : d.value) === null || g === void 0 ? void 0 : g.TextContent) || "",
      standard: this.standard,
      operator: u
    };
  }
  formatMetadata(n) {
    const o = { properties: new Array() };
    if (!(n != null && n.properties) || !Array.isArray(n.properties)) {
      console.warn(`Oops! Failed to format the metadata properties for token, field is missing or invalid. See ${JSON.stringify(n)}`), console.log(n);
      return;
    }
    return n.properties.forEach((s) => {
      const u = s[0];
      o[u] = { value: s[1] };
      const d = (() => {
        try {
          return extractMetadataValue(s[1]);
        } catch (g) {
          console.warn(`Oops! Failed to extract metadata value for property ${u}, is that a valid key value pair?`), console.error(g);
        }
      })();
      o.properties = [
        ...o.properties,
        { name: s[0], value: d }
      ];
    }), o.properties = o.properties.filter(({ name: s }) => !["location", "thumbnail", "contentHash", "contentType"].includes(s)), o;
  }
}
dip_721.default = ERC721;
var constants = {};
Object.defineProperty(constants, "__esModule", { value: !0 });
constants.KYASSHU_URL = constants.IC_HOST = void 0;
constants.IC_HOST = "https://ic0.app/";
constants.KYASSHU_URL = "https://kyasshu.fleek.co";
var nft_registry_did = {};
Object.defineProperty(nft_registry_did, "__esModule", { value: !0 });
nft_registry_did.init = void 0;
nft_registry_did.default = ({ IDL: e }) => {
  const n = e.Rec();
  n.fill(e.Variant({
    I64: e.Int64,
    U64: e.Nat64,
    Vec: e.Vec(n),
    Slice: e.Vec(e.Nat8),
    Text: e.Text,
    True: e.Null,
    False: e.Null,
    Float: e.Float64,
    Principal: e.Principal
  }));
  const o = e.Record({
    thumbnail: e.Text,
    name: e.Text,
    frontend: e.Opt(e.Text),
    description: e.Text,
    details: e.Vec(e.Tuple(e.Text, n)),
    principal_id: e.Principal
  }), s = e.Variant({
    NotAuthorized: e.Null,
    BadParameters: e.Null,
    Unknown: e.Text,
    NonExistentItem: e.Null
  }), u = e.Variant({
    Ok: e.Opt(e.Text),
    Err: s
  });
  return e.Service({
    add: e.Func([o], [u], []),
    get: e.Func([e.Principal], [e.Opt(o)], ["query"]),
    get_all: e.Func([], [e.Vec(o)], ["query"]),
    name: e.Func([], [e.Text], ["query"]),
    remove: e.Func([e.Principal], [u], []),
    set_controller: e.Func([e.Principal], [u], [])
  });
};
const init$9 = () => [];
nft_registry_did.init = init$9;
var standard_registry = {}, registry_standard_did = {};
Object.defineProperty(registry_standard_did, "__esModule", { value: !0 });
registry_standard_did.init = void 0;
registry_standard_did.default = ({ IDL: e }) => {
  const n = e.Rec();
  n.fill(e.Variant({
    I64: e.Int64,
    U64: e.Nat64,
    Vec: e.Vec(n),
    Slice: e.Vec(e.Nat8),
    Text: e.Text,
    True: e.Null,
    False: e.Null,
    Float: e.Float64,
    Principal: e.Principal
  }));
  const o = e.Record({
    thumbnail: e.Text,
    name: e.Text,
    frontend: e.Opt(e.Text),
    description: e.Text,
    principal_id: e.Principal,
    details: e.Vec(e.Tuple(e.Text, n))
  }), s = e.Variant({
    NotAuthorized: e.Null,
    BadParameters: e.Null,
    Unknown: e.Text,
    NonExistantCanister: e.Null
  }), u = e.Variant({ Ok: e.Opt(e.Text), Err: s });
  return e.Service({
    add: e.Func([o], [u], []),
    get: e.Func([e.Principal], [e.Opt(o)], ["query"]),
    name: e.Func([], [e.Text], ["query"]),
    remove: e.Func([e.Principal], [u], [])
  });
};
const init$8 = () => [];
registry_standard_did.init = init$8;
var registry = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.formatMetadata = e.formatRegistryDetails = e.parseDetailValue = void 0;
  const n = ["True", "False"], o = (d) => {
    const g = Object.keys(d)[0], m = n.includes(g) ? Boolean(g) : Object.values(d)[0];
    return Array.isArray(m) ? m.map((w) => typeof m == "number" ? w : (0, e.parseDetailValue)(w)) : m;
  };
  e.parseDetailValue = o;
  const s = (d) => {
    const g = {};
    for (const [m, w] of d)
      g[m] = (0, e.parseDetailValue)(w);
    return g;
  };
  e.formatRegistryDetails = s;
  const u = (d) => Object.assign(Object.assign({}, d), { details: (0, e.formatRegistryDetails)(d.details) });
  e.formatMetadata = u;
})(registry);
var __awaiter$7 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
}, __importDefault$2 = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(standard_registry, "__esModule", { value: !0 });
const agent_1$2 = require$$5, principal_1$5 = require$$4, constants_1 = constants, registry_standard_did_1 = __importDefault$2(registry_standard_did), registry_1 = registry, cross_fetch_1$1 = __importDefault$2(browserPonyfill.exports), DEFAULT_AGENT = new agent_1$2.HttpAgent({ fetch: cross_fetch_1$1.default, host: constants_1.IC_HOST });
class Registry {
  constructor(n, o = DEFAULT_AGENT) {
    this.name = () => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.name();
    }), this.add = (s) => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.add(s != null ? s : []);
    }), this.get = (s) => __awaiter$7(this, void 0, void 0, function* () {
      const u = yield this.actor.get(principal_1$5.Principal.fromText(s));
      if (u.length !== 0)
        return (0, registry_1.formatMetadata)(u[0]);
    }), this.remove = (s) => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.remove(principal_1$5.Principal.fromText(s));
    }), this.actor = agent_1$2.Actor.createActor(registry_standard_did_1.default, {
      agent: o,
      canisterId: n
    }), this.canisterId = n;
  }
}
standard_registry.default = Registry;
var actorFactory = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.generateActor = e.createExtendedActorClass = void 0;
  const n = require$$5, o = require$$4, s = (d, g, m, w) => {
    class B extends n.Actor.createActorClass(w) {
      constructor() {
        const C = typeof m == "string" ? o.Principal.fromText(m) : m;
        super({ agent: d, canisterId: C }), Object.keys(this).forEach((v) => {
          this[`_${v}`] = this[v];
        }), Object.keys(g).forEach((v) => {
          this[v] = (...y) => g[v](this, ...y);
        });
      }
    }
    return B;
  };
  e.createExtendedActorClass = s;
  function u({ agent: d, canisterId: g, IDL: m }) {
    return n.Actor.createActor(m, {
      agent: d,
      canisterId: o.Principal.fromText(g)
    });
  }
  e.generateActor = u, e.default = { createExtendedActorClass: e.createExtendedActorClass, generateActor: u };
})(actorFactory);
var ccc = {}, c3_did = {};
Object.defineProperty(c3_did, "__esModule", { value: !0 });
c3_did.init = void 0;
c3_did.default = ({ IDL: e }) => {
  const n = e.Nat, o = e.Nat, s = e.Variant({
    ok: o,
    err: e.Variant({
      ListOnMarketPlace: e.Null,
      NotAllowTransferToSelf: e.Null,
      NotOwnerOrNotApprove: e.Null,
      Other: e.Null
    })
  }), u = e.Record({
    id: e.Nat,
    rarityScore: e.Float64
  }), d = e.Variant({
    ok: u,
    err: e.Variant({ NotFoundIndex: e.Null })
  });
  return e.Service({
    getAllNFT: e.Func([e.Principal], [e.Vec(e.Tuple(n, e.Principal))], ["query"]),
    getNftStoreCIDByIndex: e.Func([n], [e.Principal], ["query"]),
    getTokenById: e.Func([e.Nat], [d], ["query"]),
    transferFrom: e.Func([e.Principal, e.Principal, n], [s], [])
  });
};
const init$7 = ({ IDL: e }) => [e.Principal, e.Principal, e.Principal];
c3_did.init = init$7;
var __awaiter$6 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
}, __importDefault$1 = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(ccc, "__esModule", { value: !0 });
const agent_1$1 = require$$5, c3_did_1 = __importDefault$1(c3_did), default_1 = __importDefault$1(_default), standards_1 = standards;
class CCC extends default_1.default {
  constructor(n, o) {
    super(n, o), this.standard = standards_1.NFT.c3, this.serializeTokenData = (s, u) => ({
      index: BigInt(s.id),
      canister: this.canisterId,
      url: `https://${u.toText()}.raw.ic0.app/token/${s.id}`,
      name: `${s.id}`,
      metadata: s,
      standard: this.standard
    }), this.actor = agent_1$1.Actor.createActor(c3_did_1.default, {
      agent: o,
      canisterId: n
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(n) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const o = yield this.actor.getAllNFT(n);
      return (yield Promise.all(o.map((u) => __awaiter$6(this, void 0, void 0, function* () {
        const d = u[0], g = u[1], m = yield this.actor.getTokenById(d);
        if ("err" in m)
          throw new Error(Object.keys(m.err)[0]);
        return { detail: m.ok, principal: g };
      })))).map((u) => this.serializeTokenData(u.detail, u.principal));
    });
  }
  transfer(n, o) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const s = yield this.agent.getPrincipal(), u = yield this.actor.transferFrom(s, n, BigInt(o));
      if ("err" in u)
        throw new Error(Object.keys(u.err)[0]);
    });
  }
  details(n) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const o = yield this.actor.getTokenById(BigInt(n));
      if ("err" in o)
        throw new Error(Object.keys(o.err)[0]);
      const s = yield this.actor.getNftStoreCIDByIndex(BigInt(n));
      if (!s)
        throw new Error("Error tokenIndex");
      return this.serializeTokenData(o.ok, s);
    });
  }
}
ccc.default = CCC;
(function(e) {
  var n = commonjsGlobal && commonjsGlobal.__awaiter || function(We, nt, Xe, Je) {
    function qe(ye) {
      return ye instanceof Xe ? ye : new Xe(function(Ue) {
        Ue(ye);
      });
    }
    return new (Xe || (Xe = Promise))(function(ye, Ue) {
      function ze(ot) {
        try {
          ut(Je.next(ot));
        } catch (mt) {
          Ue(mt);
        }
      }
      function X(ot) {
        try {
          ut(Je.throw(ot));
        } catch (mt) {
          Ue(mt);
        }
      }
      function ut(ot) {
        ot.done ? ye(ot.value) : qe(ot.value).then(ze, X);
      }
      ut((Je = Je.apply(We, nt || [])).next());
    });
  }, o = commonjsGlobal && commonjsGlobal.__importDefault || function(We) {
    return We && We.__esModule ? We : { default: We };
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.getCachedUserNFTs = e.getBatchedNFTs = e.getAllUserNFTs = e.getAllNFTS = e.getNFTInfo = e.getNFTActor = e.getUserCollectionTokens = e.NFTRegistry = void 0;
  const s = o(axios$2.exports), u = require$$5, d = require$$4, g = o(browserPonyfill.exports), m = o(ext), w = o(ic_punks), B = o(nft_origyn), x = o(departure_labs), C = o(dip_721), v = standards, y = constants, T = o(nft_registry_did), M = o(standard_registry), D = actorFactory, V = registry, O = o(ccc), H = "ctqxp-yyaaa-aaaah-abbda-cai", q = 5, $ = {
    [v.NFT.ext]: m.default,
    [v.NFT.icpunks]: w.default,
    [v.NFT.nftOrigyn]: B.default,
    [v.NFT.departuresLabs]: x.default,
    [v.NFT.erc721]: C.default,
    [v.NFT.dip721]: C.default,
    [v.NFT.c3]: O.default
  }, re = new u.HttpAgent({ fetch: g.default, host: y.IC_HOST });
  class ce extends M.default {
    constructor(nt) {
      super(H, nt), this.getAll = () => n(this, void 0, void 0, function* () {
        return (yield this.actor.get_all()).map(V.formatMetadata);
      }), this.actor = (0, D.generateActor)({ agent: nt || re, canisterId: H, IDL: T.default });
    }
  }
  e.NFTRegistry = ce;
  const Ie = (We, nt, Xe = re, Je = () => {
  }) => n(void 0, void 0, void 0, function* () {
    try {
      const ye = yield (0, e.getNFTActor)({
        canisterId: We.principal_id.toString(),
        agent: Xe,
        standard: We.standard
      }).getUserTokens(nt), Ue = {
        name: We.name,
        canisterId: We.principal_id.toString(),
        standard: We.standard,
        description: We.description,
        icon: We.icon,
        tokens: ye.map((ze) => Object.assign(Object.assign({}, ze), { collection: We.name }))
      };
      return Je && (yield Je == null ? void 0 : Je(Ue)), Ue;
    } catch (qe) {
      return console.error(qe), {
        name: We.name,
        canisterId: We.principal_id.toString(),
        standard: We.standard,
        tokens: []
      };
    }
  });
  e.getUserCollectionTokens = Ie;
  const Pe = ({ standard: We }) => {
    const nt = We.toUpperCase(), Xe = v.NFT.dip721.toUpperCase(), Je = nt.startsWith(Xe), qe = nt.split(Xe).filter((Ue) => Ue).length > 0;
    return Je && qe ? (console.warn(`Warning! Use the term DIP721, not ${We}, suffixed and others are being deprecated and support will be dropped soon!`), v.NFT.dip721) : nt;
  }, se = ({ canisterId: We, agent: nt, standard: Xe }) => {
    const Je = Pe({
      standard: Xe
    });
    if (!(Je in $))
      throw console.error(`Standard ${Je} is not implemented`), new Error(`standard is not supported: ${Je}`);
    return new $[Je](We, nt);
  };
  e.getNFTActor = se;
  const Ce = ({ nftCanisterId: We, agent: nt = re }) => n(void 0, void 0, void 0, function* () {
    const Je = yield new ce(nt).get(We);
    return Je && Object.assign(Object.assign({}, Je), { icon: Je.thumbnail, standard: Je.details.standard });
  });
  e.getNFTInfo = Ce;
  const Ge = ({ agent: We = re } = {}) => n(void 0, void 0, void 0, function* () {
    return (yield new ce(We).getAll()).map((Je) => Object.assign(Object.assign({}, Je), { icon: Je.thumbnail, standard: Je.details.standard }));
  });
  e.getAllNFTS = Ge;
  const $e = ({ user: We, agent: nt = re }) => n(void 0, void 0, void 0, function* () {
    const Xe = yield (0, e.getAllNFTS)({ agent: nt }), Je = We instanceof d.Principal ? We : d.Principal.fromText(We);
    return (yield Promise.all(Xe.map((ye) => (0, e.getUserCollectionTokens)(ye, Je, nt)))).filter((ye) => ye.tokens.length);
  });
  e.getAllUserNFTs = $e;
  const Be = ({ principal: We, callback: nt, batchSize: Xe = q, onFinish: Je, agent: qe = re }) => n(void 0, void 0, void 0, function* () {
    const ye = yield (0, e.getAllNFTS)({ agent: qe });
    let Ue = [];
    for (let ze = 0; ze < ye.length; ze += Xe) {
      const X = ye.slice(ze, ze + Xe), ut = yield Promise.all(X.map((ot) => (0, e.getUserCollectionTokens)(ot, We, qe, nt)));
      Ue = [...Ue, ...ut];
    }
    return Je && (yield Je == null ? void 0 : Je(Ue)), Ue.filter((ze) => {
      var X;
      return (X = ze == null ? void 0 : ze.tokens) === null || X === void 0 ? void 0 : X.length;
    });
  });
  e.getBatchedNFTs = Be;
  const Me = ({ userPID: We, refresh: nt }) => n(void 0, void 0, void 0, function* () {
    const Xe = `${y.KYASSHU_URL}/dab/user/nfts/${We}`;
    return (yield s.default.get(Xe, { params: { refresh: nt } })).data;
  });
  e.getCachedUserNFTs = Me, e.default = {
    getBatchedNFTs: e.getBatchedNFTs,
    getNFTActor: e.getNFTActor,
    getNFTInfo: e.getNFTInfo,
    getAllNFTS: e.getAllNFTS,
    getAllUserNFTs: e.getAllUserNFTs,
    getCachedUserNFTs: e.getCachedUserNFTs
  };
})(nfts_registry);
var canister_registry = {}, canister_registry_did = {};
Object.defineProperty(canister_registry_did, "__esModule", { value: !0 });
canister_registry_did.init = void 0;
canister_registry_did.default = ({ IDL: e }) => {
  const n = e.Rec();
  n.fill(e.Variant({
    I64: e.Int64,
    U64: e.Nat64,
    Vec: e.Vec(n),
    Slice: e.Vec(e.Nat8),
    Text: e.Text,
    True: e.Null,
    False: e.Null,
    Float: e.Float64,
    Principal: e.Principal
  }));
  const o = e.Record({
    thumbnail: e.Text,
    name: e.Text,
    frontend: e.Opt(e.Text),
    description: e.Text,
    principal_id: e.Principal,
    details: e.Vec(e.Tuple(e.Text, n))
  }), s = e.Variant({
    NotAuthorized: e.Null,
    BadParameters: e.Null,
    Unknown: e.Text,
    NonExistentItem: e.Null
  }), u = e.Variant({
    Ok: e.Opt(e.Text),
    Err: s
  });
  return e.Service({
    add: e.Func([o], [u], []),
    get: e.Func([e.Principal], [e.Opt(o)], ["query"]),
    get_all: e.Func([], [e.Vec(o)], ["query"]),
    name: e.Func([], [e.Text], ["query"]),
    remove: e.Func([e.Principal], [u], [])
  });
};
const init$6 = () => [];
canister_registry_did.init = init$6;
(function(e) {
  var n = commonjsGlobal && commonjsGlobal.__awaiter || function(O, H, q, $) {
    function re(ce) {
      return ce instanceof q ? ce : new q(function(Ie) {
        Ie(ce);
      });
    }
    return new (q || (q = Promise))(function(ce, Ie) {
      function Pe(Ge) {
        try {
          Ce($.next(Ge));
        } catch ($e) {
          Ie($e);
        }
      }
      function se(Ge) {
        try {
          Ce($.throw(Ge));
        } catch ($e) {
          Ie($e);
        }
      }
      function Ce(Ge) {
        Ge.done ? ce(Ge.value) : re(Ge.value).then(Pe, se);
      }
      Ce(($ = $.apply(O, H || [])).next());
    });
  }, o = commonjsGlobal && commonjsGlobal.__importDefault || function(O) {
    return O && O.__esModule ? O : { default: O };
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.getAll = e.getMultipleCanisterInfo = e.getCanisterInfo = e.CanisterRegistry = void 0;
  const s = require$$5, u = o(browserPonyfill.exports), d = o(canister_registry_did), g = constants, m = o(standard_registry), w = actorFactory, B = registry, x = require$$4, C = "curr3-vaaaa-aaaah-abbdq-cai", v = new s.HttpAgent({ fetch: u.default, host: g.IC_HOST }), y = (O) => {
    if (!O)
      return O;
    const { thumbnail: H, name: q, description: $, frontend: re, details: ce } = O;
    return { url: (re == null ? void 0 : re[0]) || "", name: q, description: $, version: Number(ce.version), logo_url: H };
  };
  class T extends m.default {
    constructor(H) {
      super(C, H), this.getAll = () => n(this, void 0, void 0, function* () {
        return (yield this.actor.get_all()).map(B.formatMetadata);
      }), this.actor = (0, w.generateActor)({ agent: H || v, canisterId: C, IDL: d.default });
    }
  }
  e.CanisterRegistry = T;
  const M = ({ canisterId: O, agent: H = v }) => n(void 0, void 0, void 0, function* () {
    const $ = yield new T(H).get(x.Principal.from(O).toString()), re = y($);
    return re && Object.assign(Object.assign({}, re), { canisterId: O.toString() });
  });
  e.getCanisterInfo = M;
  const D = ({ canisterIds: O, agent: H = v }) => n(void 0, void 0, void 0, function* () {
    const q = yield Promise.all(O.map(($) => (0, e.getCanisterInfo)({ canisterId: $, agent: H })));
    return q.length === 0 ? [] : q.filter(($) => !!$);
  });
  e.getMultipleCanisterInfo = D;
  const V = (O) => n(void 0, void 0, void 0, function* () {
    return (yield new T(O).getAll()).map(y);
  });
  e.getAll = V, e.default = {
    getCanisterInfo: e.getCanisterInfo,
    getMultipleCanisterInfo: e.getMultipleCanisterInfo,
    getAll: (O) => new T(O).getAll
  };
})(canister_registry);
var token_registry = {}, token_registry_did = {};
Object.defineProperty(token_registry_did, "__esModule", { value: !0 });
token_registry_did.init = void 0;
token_registry_did.default = ({ IDL: e }) => {
  const n = e.Rec();
  n.fill(e.Variant({
    I64: e.Int64,
    U64: e.Nat64,
    Vec: e.Vec(n),
    Slice: e.Vec(e.Nat8),
    Text: e.Text,
    True: e.Null,
    False: e.Null,
    Float: e.Float64,
    Principal: e.Principal
  }));
  const o = e.Record({
    thumbnail: e.Text,
    name: e.Text,
    frontend: e.Opt(e.Text),
    description: e.Text,
    principal_id: e.Principal,
    details: e.Vec(e.Tuple(e.Text, n))
  }), s = e.Variant({
    NotAuthorized: e.Null,
    BadParameters: e.Null,
    Unknown: e.Text,
    NonExistentItem: e.Null
  }), u = e.Variant({
    Ok: e.Opt(e.Text),
    Err: s
  });
  return e.Service({
    add: e.Func([o], [u], []),
    get: e.Func([e.Principal], [e.Opt(o)], ["query"]),
    get_all: e.Func([], [e.Vec(o)], ["query"]),
    name: e.Func([], [e.Text], ["query"]),
    remove: e.Func([e.Principal], [u], []),
    set_controller: e.Func([e.Principal], [u], [])
  });
};
const init$5 = () => [];
token_registry_did.init = init$5;
var token_standards = {}, methods = {}, __awaiter$5 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
};
Object.defineProperty(methods, "__esModule", { value: !0 });
methods.parseAmountToSend = methods.getDecimalsFromMetadata = void 0;
const send$5 = (e, n) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getMetadata$5 = (e) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getBalance$5 = (e, n) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), burnXTC$5 = (e, n) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getDecimals$5 = (e) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getDecimalsFromMetadata = (e) => "fungible" in e ? e.fungible.decimals : 0;
methods.getDecimalsFromMetadata = getDecimalsFromMetadata;
const parseAmountToSend = (e, n) => BigInt(parseFloat(e) * Math.pow(10, n));
methods.parseAmountToSend = parseAmountToSend;
methods.default = {
  send: send$5,
  getMetadata: getMetadata$5,
  getBalance: getBalance$5,
  burnXTC: burnXTC$5,
  getDecimals: getDecimals$5
};
var xtcMethods = {}, __awaiter$4 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
};
Object.defineProperty(xtcMethods, "__esModule", { value: !0 });
const principal_1$4 = require$$4, methods_1$4 = methods, getMetadata$4 = (e) => __awaiter$4(void 0, void 0, void 0, function* () {
  const n = yield e._getMetadata();
  return {
    fungible: {
      symbol: n.symbol,
      decimals: n.decimals,
      name: n.name,
      logo: n.logo,
      fee: n.fee,
      totalSupply: n.totalSupply,
      owner: n.owner
    }
  };
}), send$4 = (e, { to: n, amount: o }) => __awaiter$4(void 0, void 0, void 0, function* () {
  const s = yield e._transferErc20(principal_1$4.Principal.fromText(n), o);
  if ("Ok" in s)
    return { transactionId: s.Ok.toString() };
  throw new Error(Object.keys(s.Err)[0]);
}), getBalance$4 = (e, n) => __awaiter$4(void 0, void 0, void 0, function* () {
  const o = yield getDecimals$4(e);
  return { value: (yield e._balanceOf(n)).toString(), decimals: o };
}), burnXTC$4 = (e, { to: n, amount: o }) => __awaiter$4(void 0, void 0, void 0, function* () {
  const s = yield getDecimals$4(e), u = (0, methods_1$4.parseAmountToSend)(o, s);
  return e._burn({ canister_id: n, amount: u });
}), getDecimals$4 = (e) => __awaiter$4(void 0, void 0, void 0, function* () {
  return (0, methods_1$4.getDecimalsFromMetadata)(yield getMetadata$4(e));
});
xtcMethods.default = {
  send: send$4,
  getMetadata: getMetadata$4,
  getBalance: getBalance$4,
  burnXTC: burnXTC$4,
  getDecimals: getDecimals$4
};
var extMethods = {}, __awaiter$3 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
};
Object.defineProperty(extMethods, "__esModule", { value: !0 });
const agent_1 = require$$5, principal_1$3 = require$$4, methods_1$3 = methods, getMetadata$3 = (e) => __awaiter$3(void 0, void 0, void 0, function* () {
  e._balance;
  const n = agent_1.Actor.canisterIdOf(e).toText();
  if (!(yield e._extensions()).includes("@ext/common"))
    throw new Error("The provided canister does not implement commont extension");
  const s = yield e._metadata(n);
  if ("ok" in s)
    return s.ok;
  throw new Error(Object.keys(s.err)[0]);
}), send$3 = (e, { to: n, from: o, amount: s }) => __awaiter$3(void 0, void 0, void 0, function* () {
  const u = new Array(32).fill(0), d = agent_1.Actor.canisterIdOf(e).toText(), g = {
    to: { principal: principal_1$3.Principal.fromText(n) },
    from: { principal: principal_1$3.Principal.from(o) },
    amount: s,
    token: d,
    memo: u,
    notify: !1,
    subaccount: [],
    fee: BigInt(0)
  }, m = yield e._transfer(g);
  if ("ok" in m)
    return { amount: m.ok.toString() };
  throw new Error(Object.keys(m.err)[0]);
}), getBalance$3 = (e, n) => __awaiter$3(void 0, void 0, void 0, function* () {
  const o = agent_1.Actor.canisterIdOf(e).toText(), s = yield e._balance({
    token: o,
    user: { principal: n }
  }), u = yield getDecimals$3(e);
  if ("ok" in s)
    return { value: s.ok.toString(), decimals: u };
  throw new Error(Object.keys(s.err)[0]);
}), burnXTC$3 = (e, n) => __awaiter$3(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$3 = (e) => __awaiter$3(void 0, void 0, void 0, function* () {
  return (0, methods_1$3.getDecimalsFromMetadata)(yield getMetadata$3(e));
});
extMethods.default = {
  send: send$3,
  getMetadata: getMetadata$3,
  getBalance: getBalance$3,
  burnXTC: burnXTC$3,
  getDecimals: getDecimals$3
};
var dip20Methods = {}, __awaiter$2 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
};
Object.defineProperty(dip20Methods, "__esModule", { value: !0 });
const principal_1$2 = require$$4, methods_1$2 = methods, getMetadata$2 = (e) => __awaiter$2(void 0, void 0, void 0, function* () {
  const n = yield e._getMetadata();
  return {
    fungible: {
      symbol: n.symbol,
      decimals: n.decimals,
      name: n.name,
      logo: n.logo,
      fee: n.fee,
      totalSupply: n.totalSupply,
      owner: n.owner
    }
  };
}), send$2 = (e, { to: n, amount: o }) => __awaiter$2(void 0, void 0, void 0, function* () {
  const s = yield e._transfer(principal_1$2.Principal.fromText(n), o);
  if ("Ok" in s)
    return { transactionId: s.Ok.toString() };
  throw new Error(Object.keys(s.Err)[0]);
}), getBalance$2 = (e, n) => __awaiter$2(void 0, void 0, void 0, function* () {
  const o = yield getDecimals$2(e);
  return { value: (yield e._balanceOf(n)).toString(), decimals: o };
}), burnXTC$2 = (e, n) => __awaiter$2(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$2 = (e) => __awaiter$2(void 0, void 0, void 0, function* () {
  return (0, methods_1$2.getDecimalsFromMetadata)(yield getMetadata$2(e));
});
dip20Methods.default = {
  send: send$2,
  getMetadata: getMetadata$2,
  getBalance: getBalance$2,
  burnXTC: burnXTC$2,
  getDecimals: getDecimals$2
};
var xtc_did = {};
Object.defineProperty(xtc_did, "__esModule", { value: !0 });
xtc_did.init = void 0;
xtc_did.default = ({ IDL: e }) => {
  const n = e.Variant({
    InsufficientAllowance: e.Null,
    InsufficientBalance: e.Null,
    ErrorOperationStyle: e.Null,
    Unauthorized: e.Null,
    LedgerTrap: e.Null,
    ErrorTo: e.Null,
    Other: e.Null,
    BlockUsed: e.Null,
    AmountTooSmall: e.Null
  }), o = e.Variant({ Ok: e.Nat, Err: n }), s = e.Nat64, u = e.Variant({
    InsufficientBalance: e.Null,
    InvalidTokenContract: e.Null,
    NotSufficientLiquidity: e.Null
  }), d = e.Variant({ Ok: s, Err: u }), g = e.Variant({
    FAILED: e.Null,
    SUCCEEDED: e.Null
  }), m = e.Variant({
    Approve: e.Record({ to: e.Principal, from: e.Principal }),
    Burn: e.Record({ to: e.Principal, from: e.Principal }),
    Mint: e.Record({ to: e.Principal }),
    CanisterCreated: e.Record({
      from: e.Principal,
      canister: e.Principal
    }),
    CanisterCalled: e.Record({
      from: e.Principal,
      method_name: e.Text,
      canister: e.Principal
    }),
    Transfer: e.Record({ to: e.Principal, from: e.Principal }),
    TransferFrom: e.Record({
      to: e.Principal,
      from: e.Principal,
      caller: e.Principal
    })
  }), w = e.Record({
    fee: e.Nat64,
    status: g,
    kind: m,
    cycles: e.Nat64,
    timestamp: e.Nat64
  }), B = e.Record({
    data: e.Vec(w),
    next_offset: s,
    next_canister_id: e.Opt(e.Principal)
  }), x = e.Record({
    fee: e.Nat,
    decimals: e.Nat8,
    owner: e.Principal,
    logo: e.Text,
    name: e.Text,
    totalSupply: e.Nat,
    symbol: e.Text
  }), C = e.Variant({
    transferFrom: e.Null,
    burn: e.Null,
    mint: e.Null,
    approve: e.Null,
    canisterCalled: e.Null,
    transfer: e.Null,
    canisterCreated: e.Null
  }), v = e.Int, y = e.Record({
    op: C,
    to: e.Principal,
    fee: e.Nat,
    status: g,
    from: e.Principal,
    timestamp: v,
    caller: e.Opt(e.Principal),
    index: e.Nat,
    amount: e.Nat
  }), T = e.Variant({ NotSufficientLiquidity: e.Null }), M = e.Variant({ Ok: s, Err: T }), D = e.Record({
    fee: e.Nat,
    transfers_count: e.Nat64,
    balance: e.Nat64,
    mints_count: e.Nat64,
    transfers_from_count: e.Nat64,
    canisters_created_count: e.Nat64,
    supply: e.Nat,
    burns_count: e.Nat64,
    approvals_count: e.Nat64,
    proxy_calls_count: e.Nat64,
    history_events: e.Nat64
  }), V = e.Variant({
    Ok: e.Record({ return: e.Vec(e.Nat8) }),
    Err: e.Text
  }), O = e.Variant({
    Ok: e.Record({ canister_id: e.Principal }),
    Err: e.Text
  }), H = e.Variant({ Ok: e.Null, Err: e.Text });
  return e.Service({
    allowance: e.Func([e.Principal, e.Principal], [e.Nat], ["query"]),
    approve: e.Func([e.Principal, e.Nat], [o], []),
    balance: e.Func([e.Opt(e.Principal)], [e.Nat64], []),
    balanceOf: e.Func([e.Principal], [e.Nat], ["query"]),
    burn: e.Func([e.Record({ canister_id: e.Principal, amount: e.Nat64 })], [d], []),
    decimals: e.Func([], [e.Nat8], ["query"]),
    events: e.Func([e.Record({ offset: e.Opt(e.Nat64), limit: e.Nat16 })], [B], ["query"]),
    getMetadata: e.Func([], [x], ["query"]),
    getTransaction: e.Func([e.Nat], [y], []),
    getTransactions: e.Func([e.Nat, e.Nat], [e.Vec(y)], []),
    get_transaction: e.Func([s], [e.Opt(w)], []),
    halt: e.Func([], [], []),
    historySize: e.Func([], [e.Nat], ["query"]),
    logo: e.Func([], [e.Text], ["query"]),
    mint: e.Func([e.Principal, e.Nat], [M], []),
    name: e.Func([], [e.Text], ["query"]),
    nameErc20: e.Func([], [e.Text], ["query"]),
    stats: e.Func([], [D], ["query"]),
    symbol: e.Func([], [e.Text], ["query"]),
    totalSupply: e.Func([], [e.Nat], ["query"]),
    transfer: e.Func([e.Principal, e.Nat], [o], []),
    transferErc20: e.Func([e.Principal, e.Nat], [o], []),
    transferFrom: e.Func([e.Principal, e.Principal, e.Nat], [o], []),
    wallet_balance: e.Func([], [e.Record({ amount: e.Nat64 })], ["query"]),
    wallet_call: e.Func([
      e.Record({
        args: e.Vec(e.Nat8),
        cycles: e.Nat64,
        method_name: e.Text,
        canister: e.Principal
      })
    ], [V], []),
    wallet_create_canister: e.Func([
      e.Record({
        controller: e.Opt(e.Principal),
        cycles: e.Nat64
      })
    ], [O], []),
    wallet_create_wallet: e.Func([
      e.Record({
        controller: e.Opt(e.Principal),
        cycles: e.Nat64
      })
    ], [O], []),
    wallet_send: e.Func([e.Record({ canister: e.Principal, amount: e.Nat64 })], [H], [])
  });
};
const init$4 = () => [];
xtc_did.init = init$4;
var dip_20_did = {};
Object.defineProperty(dip_20_did, "__esModule", { value: !0 });
dip_20_did.init = void 0;
dip_20_did.default = ({ IDL: e }) => {
  const n = e.Variant({
    InsufficientAllowance: e.Null,
    InsufficientBalance: e.Null,
    ErrorOperationStyle: e.Null,
    Unauthorized: e.Null,
    LedgerTrap: e.Null,
    ErrorTo: e.Null,
    Other: e.Null,
    BlockUsed: e.Null,
    AmountTooSmall: e.Null
  }), o = e.Variant({ Ok: e.Nat, Err: n }), s = e.Record({
    fee: e.Nat,
    decimals: e.Nat8,
    owner: e.Principal,
    logo: e.Text,
    name: e.Text,
    totalSupply: e.Nat,
    symbol: e.Text
  }), u = e.Record({
    holderNumber: e.Nat64,
    deployTime: e.Nat64,
    metadata: s,
    historySize: e.Nat64,
    cycles: e.Nat64,
    feeTo: e.Principal
  });
  return e.Service({
    allowance: e.Func([e.Principal, e.Principal], [e.Nat], ["query"]),
    approve: e.Func([e.Principal, e.Nat], [o], []),
    balanceOf: e.Func([e.Principal], [e.Nat], ["query"]),
    decimals: e.Func([], [e.Nat8], ["query"]),
    getAllowanceSize: e.Func([], [e.Nat64], ["query"]),
    getBlockUsed: e.Func([], [e.Vec(e.Nat64)], ["query"]),
    getHolders: e.Func([e.Nat64, e.Nat64], [e.Vec(e.Tuple(e.Principal, e.Nat))], ["query"]),
    getMetadata: e.Func([], [s], ["query"]),
    getTokenInfo: e.Func([], [u], ["query"]),
    getUserApprovals: e.Func([e.Principal], [e.Vec(e.Tuple(e.Principal, e.Nat))], ["query"]),
    historySize: e.Func([], [e.Nat64], ["query"]),
    isBlockUsed: e.Func([e.Nat64], [e.Bool], ["query"]),
    logo: e.Func([], [e.Text], ["query"]),
    mint: e.Func([e.Opt(e.Vec(e.Nat8)), e.Nat64], [o], []),
    mintFor: e.Func([e.Opt(e.Vec(e.Nat8)), e.Nat64, e.Principal], [o], []),
    name: e.Func([], [e.Text], ["query"]),
    owner: e.Func([], [e.Principal], ["query"]),
    setFee: e.Func([e.Nat], [], []),
    setFeeTo: e.Func([e.Principal], [], []),
    setGenesis: e.Func([], [o], []),
    setLogo: e.Func([e.Text], [], []),
    setName: e.Func([e.Text], [], []),
    setOwner: e.Func([e.Principal], [], []),
    symbol: e.Func([], [e.Text], ["query"]),
    totalSupply: e.Func([], [e.Nat], ["query"]),
    transfer: e.Func([e.Principal, e.Nat], [o], []),
    transferFrom: e.Func([e.Principal, e.Principal, e.Nat], [o], []),
    withdraw: e.Func([e.Nat64, e.Text], [o], [])
  });
};
const init$3 = ({ IDL: e }) => [
  e.Text,
  e.Text,
  e.Text,
  e.Nat8,
  e.Nat,
  e.Principal,
  e.Nat,
  e.Principal,
  e.Principal
];
dip_20_did.init = init$3;
var ledger_did = {};
Object.defineProperty(ledger_did, "__esModule", { value: !0 });
ledger_did.init = void 0;
ledger_did.default = ({ IDL: e }) => {
  const n = e.Text, o = e.Record({ secs: e.Nat64, nanos: e.Nat32 }), s = e.Record({
    max_message_size_bytes: e.Opt(e.Nat32),
    node_max_memory_size_bytes: e.Opt(e.Nat32),
    controller_id: e.Principal
  }), u = e.Record({ e8s: e.Nat64 });
  e.Record({
    send_whitelist: e.Vec(e.Tuple(e.Principal)),
    minting_account: n,
    transaction_window: e.Opt(o),
    max_message_size_bytes: e.Opt(e.Nat32),
    archive_options: e.Opt(s),
    initial_values: e.Vec(e.Tuple(n, u))
  });
  const d = e.Record({ account: n }), g = e.Vec(e.Nat8), m = e.Nat64, w = e.Record({
    to_subaccount: e.Opt(g),
    from_subaccount: e.Opt(g),
    to_canister: e.Principal,
    max_fee: u,
    block_height: m
  }), B = e.Nat64, x = e.Record({ timestamp_nanos: e.Nat64 }), C = e.Record({
    to: n,
    fee: u,
    memo: B,
    from_subaccount: e.Opt(g),
    created_at_time: e.Opt(x),
    amount: u
  });
  return e.Service({
    account_balance_dfx: e.Func([d], [u], ["query"]),
    notify_dfx: e.Func([w], [], []),
    send_dfx: e.Func([C], [m], [])
  });
};
const init$2 = ({ IDL: e }) => {
  const n = e.Text, o = e.Record({ secs: e.Nat64, nanos: e.Nat32 }), s = e.Record({
    max_message_size_bytes: e.Opt(e.Nat32),
    node_max_memory_size_bytes: e.Opt(e.Nat32),
    controller_id: e.Principal
  }), u = e.Record({ e8s: e.Nat64 });
  return [e.Record({
    send_whitelist: e.Vec(e.Tuple(e.Principal)),
    minting_account: n,
    transaction_window: e.Opt(o),
    max_message_size_bytes: e.Opt(e.Nat32),
    archive_options: e.Opt(s),
    initial_values: e.Vec(e.Tuple(n, u))
  })];
};
ledger_did.init = init$2;
var wicp_did = {};
Object.defineProperty(wicp_did, "__esModule", { value: !0 });
wicp_did.init = void 0;
wicp_did.default = ({ IDL: e }) => {
  const n = e.Variant({
    InsufficientAllowance: e.Null,
    InsufficientBalance: e.Null,
    ErrorOperationStyle: e.Null,
    Unauthorized: e.Null,
    LedgerTrap: e.Null,
    ErrorTo: e.Null,
    Other: e.Null,
    BlockUsed: e.Null,
    AmountTooSmall: e.Null
  }), o = e.Variant({ Ok: e.Nat, Err: n }), s = e.Record({
    fee: e.Nat,
    decimals: e.Nat8,
    owner: e.Principal,
    logo: e.Text,
    name: e.Text,
    totalSupply: e.Nat,
    symbol: e.Text
  }), u = e.Record({
    holderNumber: e.Nat64,
    deployTime: e.Nat64,
    metadata: s,
    historySize: e.Nat64,
    cycles: e.Nat64,
    feeTo: e.Principal
  });
  return e.Service({
    allowance: e.Func([e.Principal, e.Principal], [e.Nat], ["query"]),
    approve: e.Func([e.Principal, e.Nat], [o], []),
    balanceOf: e.Func([e.Principal], [e.Nat], ["query"]),
    decimals: e.Func([], [e.Nat8], ["query"]),
    getAllowanceSize: e.Func([], [e.Nat64], ["query"]),
    getHolders: e.Func([e.Nat64, e.Nat64], [e.Vec(e.Tuple(e.Principal, e.Nat))], ["query"]),
    getLogo: e.Func([], [e.Text], ["query"]),
    getMetadata: e.Func([], [s], ["query"]),
    getTokenInfo: e.Func([], [u], ["query"]),
    getUserApprovals: e.Func([e.Principal], [e.Vec(e.Tuple(e.Principal, e.Nat))], ["query"]),
    historySize: e.Func([], [e.Nat64], ["query"]),
    mint: e.Func([e.Opt(e.Vec(e.Nat8)), e.Nat64], [o], []),
    name: e.Func([], [e.Text], ["query"]),
    owner: e.Func([], [e.Principal], ["query"]),
    setFee: e.Func([e.Nat], [], []),
    setFeeTo: e.Func([e.Principal], [], []),
    setLogo: e.Func([e.Text], [], []),
    setName: e.Func([e.Text], [], []),
    setOwner: e.Func([e.Principal], [], []),
    symbol: e.Func([], [e.Text], ["query"]),
    totalSupply: e.Func([], [e.Nat], ["query"]),
    transfer: e.Func([e.Principal, e.Nat], [o], []),
    transferFrom: e.Func([e.Principal, e.Principal, e.Nat], [o], []),
    withdraw: e.Func([e.Nat64, e.Text], [o], [])
  });
};
const init$1 = ({ IDL: e }) => [
  e.Text,
  e.Text,
  e.Text,
  e.Nat8,
  e.Nat,
  e.Principal,
  e.Nat,
  e.Principal,
  e.Principal
];
wicp_did.init = init$1;
var wicpMethods = {}, __awaiter$1 = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
};
Object.defineProperty(wicpMethods, "__esModule", { value: !0 });
const principal_1$1 = require$$4, methods_1$1 = methods, getMetadata$1 = (e) => __awaiter$1(void 0, void 0, void 0, function* () {
  const n = yield e._getMetadata();
  return {
    fungible: {
      symbol: n.symbol,
      decimals: n.decimals,
      name: n.name,
      logo: n.logo,
      fee: n.fee,
      totalSupply: n.totalSupply,
      owner: n.owner
    }
  };
}), send$1 = (e, { to: n, amount: o }) => __awaiter$1(void 0, void 0, void 0, function* () {
  const s = yield e._transfer(principal_1$1.Principal.fromText(n), o);
  if ("Ok" in s)
    return { transactionId: s.Ok.toString() };
  throw new Error(Object.keys(s.Err)[0]);
}), getBalance$1 = (e, n) => __awaiter$1(void 0, void 0, void 0, function* () {
  const o = yield getDecimals$1(e);
  return { value: (yield e._balanceOf(n)).toString(), decimals: o };
}), burnXTC$1 = (e, n) => __awaiter$1(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$1 = (e) => __awaiter$1(void 0, void 0, void 0, function* () {
  return (0, methods_1$1.getDecimalsFromMetadata)(yield getMetadata$1(e));
});
wicpMethods.default = {
  send: send$1,
  getMetadata: getMetadata$1,
  getBalance: getBalance$1,
  burnXTC: burnXTC$1,
  getDecimals: getDecimals$1
};
var rosettaMethods = {}, validations = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.validateToken = e.validateCanisterId = e.validateAccountId = e.validatePrincipalId = e.isValidPrincipal = e.ALPHANUM_REGEX = e.PRINCIPAL_REGEX = e.CANISTER_MAX_LENGTH = void 0;
  const n = require$$4;
  e.CANISTER_MAX_LENGTH = 27, e.PRINCIPAL_REGEX = /(\w{5}-){10}\w{3}/, e.ALPHANUM_REGEX = /^[a-zA-Z0-9]+$/;
  const o = (m) => n.Principal.fromText(m).toText() === m;
  e.isValidPrincipal = o;
  const s = (m) => {
    try {
      return Boolean(e.PRINCIPAL_REGEX.test(m) && (0, e.isValidPrincipal)(m));
    } catch {
      return !1;
    }
  };
  e.validatePrincipalId = s;
  const u = (m) => m.length === 64 && e.ALPHANUM_REGEX.test(m);
  e.validateAccountId = u;
  const d = (m) => {
    try {
      return Boolean(m.length <= e.CANISTER_MAX_LENGTH && (0, e.isValidPrincipal)(m));
    } catch {
      return !1;
    }
  };
  e.validateCanisterId = d;
  const g = (m) => Boolean(!!m.decimal && !!m.name && !!m.symbol);
  e.validateToken = g;
})(validations);
var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(e, n, o, s) {
  function u(d) {
    return d instanceof o ? d : new o(function(g) {
      g(d);
    });
  }
  return new (o || (o = Promise))(function(d, g) {
    function m(x) {
      try {
        B(s.next(x));
      } catch (C) {
        g(C);
      }
    }
    function w(x) {
      try {
        B(s.throw(x));
      } catch (C) {
        g(C);
      }
    }
    function B(x) {
      x.done ? d(x.value) : u(x.value).then(m, w);
    }
    B((s = s.apply(e, n || [])).next());
  });
}, __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function(e) {
  return e && e.__esModule ? e : { default: e };
};
Object.defineProperty(rosettaMethods, "__esModule", { value: !0 });
const principal_1 = require$$4, cross_fetch_1 = __importDefault(browserPonyfill.exports), methods_1 = methods, account_1 = account, validations_1 = validations, DECIMALS = 8, NET_ID = {
  blockchain: "Internet Computer",
  network: "00000000000000020101"
}, ROSETTA_URL = "https://rosetta-api.internetcomputer.org", getMetadata = (e) => __awaiter(void 0, void 0, void 0, function* () {
  return {
    fungible: {
      symbol: "ICP",
      decimals: DECIMALS,
      name: "ICP",
      fee: 1e4
    }
  };
}), send = (e, { to: n, amount: o, opts: s }) => __awaiter(void 0, void 0, void 0, function* () {
  const u = {
    fee: BigInt(1e4),
    memo: BigInt(0)
  };
  return { height: yield (yield e._send_dfx({
    to: (0, validations_1.isValidPrincipal)(n) ? (0, account_1.getAccountId)(principal_1.Principal.fromText(n)) : n,
    fee: { e8s: (s == null ? void 0 : s.fee) || u.fee },
    amount: { e8s: o },
    memo: s != null && s.memo ? BigInt(s.memo) : u.memo,
    from_subaccount: [],
    created_at_time: []
  })).toString() };
}), getBalance = (e, n) => __awaiter(void 0, void 0, void 0, function* () {
  const o = (0, account_1.getAccountId)(n), s = yield getDecimals(), u = yield (0, cross_fetch_1.default)(`${ROSETTA_URL}/account/balance`, {
    method: "POST",
    body: JSON.stringify({
      network_identifier: NET_ID,
      account_identifier: {
        address: o
      }
    }),
    headers: {
      "Content-Type": "application/json",
      Accept: "*/*"
    }
  });
  if (!u.ok)
    return { value: "Error", decimals: s, error: u.statusText };
  const { balances: d } = yield u.json(), [{ value: g, currency: m }] = d;
  return { value: g, decimals: m.decimals };
}), burnXTC = (e, n) => __awaiter(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals = (e) => __awaiter(void 0, void 0, void 0, function* () {
  return (0, methods_1.getDecimalsFromMetadata)(yield getMetadata());
});
rosettaMethods.default = {
  send,
  getMetadata,
  getBalance,
  burnXTC,
  getDecimals
};
var icpStandardMethods = {}, hasRequiredIcpStandardMethods;
function requireIcpStandardMethods() {
  if (hasRequiredIcpStandardMethods)
    return icpStandardMethods;
  hasRequiredIcpStandardMethods = 1;
  var e = commonjsGlobal && commonjsGlobal.__awaiter || function(v, y, T, M) {
    function D(V) {
      return V instanceof T ? V : new T(function(O) {
        O(V);
      });
    }
    return new (T || (T = Promise))(function(V, O) {
      function H(re) {
        try {
          $(M.next(re));
        } catch (ce) {
          O(ce);
        }
      }
      function q(re) {
        try {
          $(M.throw(re));
        } catch (ce) {
          O(ce);
        }
      }
      function $(re) {
        re.done ? V(re.value) : D(re.value).then(H, q);
      }
      $((M = M.apply(v, y || [])).next());
    });
  };
  Object.defineProperty(icpStandardMethods, "__esModule", { value: !0 });
  const n = require$$4, o = require$$5, s = methods, u = account, d = validations, g = requireRegistries(), m = (v) => e(void 0, void 0, void 0, function* () {
    var y, T, M;
    const D = o.Actor.agentOf(v);
    try {
      const O = yield new g.TokenRegistry(D).get(o.Actor.canisterIdOf(v).toString()), { fee: H = 2e-3, decimals: q = 8 } = (O == null ? void 0 : O.details) || {}, $ = Number((y = H == null ? void 0 : H.toString) === null || y === void 0 ? void 0 : y.call(H)), re = Number((T = q == null ? void 0 : q.toString) === null || T === void 0 ? void 0 : T.call(q)), ce = $ * Math.pow(10, re);
      return {
        fungible: {
          symbol: ((M = O == null ? void 0 : O.details) === null || M === void 0 ? void 0 : M.symbol) || "ICP",
          name: (O == null ? void 0 : O.name) || "ICP",
          decimals: re,
          fee: ce
        }
      };
    } catch (V) {
      return console.error("Error while fetching token metadata, falling back to default values", V), {
        fungible: {
          symbol: "ICP",
          name: "ICP",
          decimals: 8,
          fee: 1e4
        }
      };
    }
  }), w = (v, { to: y, amount: T, opts: M }) => e(void 0, void 0, void 0, function* () {
    const D = yield m(v), { fee: V = 2e-3, decimals: O = BigInt(8) } = (D == null ? void 0 : D.fungible) || {}, H = {
      fee: BigInt(V * Math.pow(10, parseInt(O.toString(), 10))),
      memo: BigInt(0)
    };
    return { height: yield (yield v._send_dfx({
      to: (0, d.validatePrincipalId)(y) ? (0, u.getAccountId)(n.Principal.fromText(y)) : y,
      fee: { e8s: (M == null ? void 0 : M.fee) || H.fee },
      amount: { e8s: T },
      memo: M != null && M.memo ? BigInt(M.memo) : H.memo,
      from_subaccount: [],
      created_at_time: []
    })).toString() };
  }), B = (v, y) => e(void 0, void 0, void 0, function* () {
    try {
      const T = (0, u.getAccountId)(y);
      return { value: (yield v._account_balance_dfx({ account: T })).e8s.toString(), decimals: 8 };
    } catch {
      return {
        value: "Error",
        decimals: 8,
        error: "Error while fetching your balance"
      };
    }
  }), x = (v, y) => e(void 0, void 0, void 0, function* () {
    throw new Error("BURN NOT SUPPORTED");
  }), C = (v) => e(void 0, void 0, void 0, function* () {
    return (0, s.getDecimalsFromMetadata)(yield m(v));
  });
  return icpStandardMethods.default = {
    send: w,
    getMetadata: m,
    getBalance: B,
    burnXTC: x,
    getDecimals: C
  }, icpStandardMethods;
}
var hasRequiredToken_standards;
function requireToken_standards() {
  if (hasRequiredToken_standards)
    return token_standards;
  hasRequiredToken_standards = 1;
  var e = commonjsGlobal && commonjsGlobal.__awaiter || function(q, $, re, ce) {
    function Ie(Pe) {
      return Pe instanceof re ? Pe : new re(function(se) {
        se(Pe);
      });
    }
    return new (re || (re = Promise))(function(Pe, se) {
      function Ce(Be) {
        try {
          $e(ce.next(Be));
        } catch (Me) {
          se(Me);
        }
      }
      function Ge(Be) {
        try {
          $e(ce.throw(Be));
        } catch (Me) {
          se(Me);
        }
      }
      function $e(Be) {
        Be.done ? Pe(Be.value) : Ie(Be.value).then(Ce, Ge);
      }
      $e((ce = ce.apply(q, $ || [])).next());
    });
  }, n = commonjsGlobal && commonjsGlobal.__importDefault || function(q) {
    return q && q.__esModule ? q : { default: q };
  };
  Object.defineProperty(token_standards, "__esModule", { value: !0 }), token_standards.parseBalance = token_standards.createTokenActor = void 0;
  const o = actorFactory, s = n(methods), u = n(xtcMethods), d = n(extMethods), g = n(dip20Methods), m = n(ext_did), w = n(xtc_did), B = n(dip_20_did), x = n(ledger_did), C = standards, v = n(wicp_did), y = n(wicpMethods), T = n(rosettaMethods), M = n(requireIcpStandardMethods()), D = (q) => ({
    [C.TOKEN.xtc]: u.default,
    [C.TOKEN.ext]: d.default,
    [C.TOKEN.dip20]: g.default,
    [C.TOKEN.wicp]: y.default,
    [C.TOKEN.rosetta]: T.default,
    [C.TOKEN.icp]: M.default
  })[q] || s.default, V = (q) => {
    const $ = {
      [C.TOKEN.xtc]: w.default,
      [C.TOKEN.ext]: m.default,
      [C.TOKEN.dip20]: B.default,
      [C.TOKEN.wicp]: v.default,
      [C.TOKEN.rosetta]: x.default,
      [C.TOKEN.icp]: x.default
    }[q];
    if (!$)
      throw new Error(`Standard ${q} Not Implemented`);
    return $;
  }, O = (q, $, re) => e(void 0, void 0, void 0, function* () {
    const ce = V(re);
    return new ((0, o.createExtendedActorClass)($, D(re), q, ce))();
  });
  token_standards.createTokenActor = O;
  const H = (q) => (parseInt(q.value, 10) / Math.pow(10, q.decimals)).toString();
  return token_standards.parseBalance = H, token_standards.default = {}, token_standards;
}
var hasRequiredToken_registry;
function requireToken_registry() {
  return hasRequiredToken_registry || (hasRequiredToken_registry = 1, function(e) {
    var n = commonjsGlobal && commonjsGlobal.__awaiter || function(V, O, H, q) {
      function $(re) {
        return re instanceof H ? re : new H(function(ce) {
          ce(re);
        });
      }
      return new (H || (H = Promise))(function(re, ce) {
        function Ie(Ce) {
          try {
            se(q.next(Ce));
          } catch (Ge) {
            ce(Ge);
          }
        }
        function Pe(Ce) {
          try {
            se(q.throw(Ce));
          } catch (Ge) {
            ce(Ge);
          }
        }
        function se(Ce) {
          Ce.done ? re(Ce.value) : $(Ce.value).then(Ie, Pe);
        }
        se((q = q.apply(V, O || [])).next());
      });
    }, o = commonjsGlobal && commonjsGlobal.__importDefault || function(V) {
      return V && V.__esModule ? V : { default: V };
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.getTokens = e.TokenRegistry = e.getTokenActor = e.TOKEN_STANDARDS = void 0;
    const s = require$$5, u = o(browserPonyfill.exports), d = o(token_registry_did), g = o(standard_registry), m = actorFactory, w = registry, B = constants, x = requireToken_standards(), C = standards, v = "b7hhy-tyaaa-aaaah-abbja-cai", y = new s.HttpAgent({ fetch: u.default, host: B.IC_HOST });
    e.TOKEN_STANDARDS = Object.values(C.TOKEN);
    const T = ({ canisterId: V, agent: O, standard: H }) => {
      if (!e.TOKEN_STANDARDS.includes(H))
        throw console.error(`Standard ${H} is not implemented`), new Error(`standard is not supported: ${H}`);
      return (0, x.createTokenActor)(V, O, H);
    };
    e.getTokenActor = T;
    class M extends g.default {
      constructor(O) {
        super(v, O), this.getAll = () => n(this, void 0, void 0, function* () {
          return (yield this.actor.get_all()).map(w.formatMetadata);
        }), this.actor = (0, m.generateActor)({
          agent: O || y,
          canisterId: v,
          IDL: d.default
        });
      }
    }
    e.TokenRegistry = M;
    const D = ({ agent: V = y } = {}) => n(void 0, void 0, void 0, function* () {
      return (yield new M(V).getAll()).map((q) => Object.assign(Object.assign({}, q), { logo: q.thumbnail, name: q.name, description: q.description, website: q.frontend.length ? q.frontend[0] : "", principal_id: q.principal_id, standard: q.details.standard, total_supply: [q.details.total_supply], symbol: q.details.symbol }));
    });
    e.getTokens = D, e.default = {
      getTokenActor: e.getTokenActor,
      getTokens: e.getTokens,
      addToken: ({ agent: V, tokenInfo: O }) => n(void 0, void 0, void 0, function* () {
        return new M(V).add(O);
      }),
      removeToken: ({ agent: V, canisterId: O }) => n(void 0, void 0, void 0, function* () {
        return new M(V).remove(O);
      })
    };
  }(token_registry)), token_registry;
}
var address_book = {}, address_book_did = {};
Object.defineProperty(address_book_did, "__esModule", { value: !0 });
const addressBookIDL = ({ IDL: e }) => {
  const n = e.Variant({
    PrincipalId: e.Principal,
    AccountId: e.Text,
    Icns: e.Text
  }), o = e.Record({
    name: e.Text,
    description: e.Opt(e.Text),
    emoji: e.Opt(e.Text),
    value: n
  }), s = e.Variant({
    NotAuthorized: e.Null,
    BadParameters: e.Null,
    Unknown: e.Text,
    NonExistentItem: e.Null
  }), u = e.Variant({
    Ok: e.Null,
    Err: s
  });
  return e.Service({
    add: e.Func([o], [u], []),
    get_all: e.Func([], [e.Vec(o)], []),
    name: e.Func([], [e.Text], ["query"]),
    remove: e.Func([e.Text], [u], [])
  });
};
address_book_did.default = addressBookIDL;
(function(e) {
  var n = commonjsGlobal && commonjsGlobal.__awaiter || function(x, C, v, y) {
    function T(M) {
      return M instanceof v ? M : new v(function(D) {
        D(M);
      });
    }
    return new (v || (v = Promise))(function(M, D) {
      function V(q) {
        try {
          H(y.next(q));
        } catch ($) {
          D($);
        }
      }
      function O(q) {
        try {
          H(y.throw(q));
        } catch ($) {
          D($);
        }
      }
      function H(q) {
        q.done ? M(q.value) : T(q.value).then(V, O);
      }
      H((y = y.apply(x, C || [])).next());
    });
  }, o = commonjsGlobal && commonjsGlobal.__importDefault || function(x) {
    return x && x.__esModule ? x : { default: x };
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.removeAddress = e.addAddress = e.getAddresses = e.getAddressBookActor = void 0;
  const s = require$$5, u = o(address_book_did), d = "i73cm-daaaa-aaaah-abhea-cai", g = (x) => s.Actor.createActor(u.default, { agent: x, canisterId: d });
  e.getAddressBookActor = g;
  const m = (x) => n(void 0, void 0, void 0, function* () {
    return (yield (0, e.getAddressBookActor)(x).get_all()).map((y) => ({
      name: y.name,
      description: y.description,
      emoji: y.emoji,
      value: y.value
    }));
  });
  e.getAddresses = m;
  const w = (x, C) => n(void 0, void 0, void 0, function* () {
    return yield (0, e.getAddressBookActor)(x).add({
      name: C.name,
      description: C.description,
      emoji: C.emoji,
      value: C.value
    });
  });
  e.addAddress = w;
  const B = (x, C) => n(void 0, void 0, void 0, function* () {
    return yield (0, e.getAddressBookActor)(x).remove(C);
  });
  e.removeAddress = B, e.default = {
    getAddressBookActor: e.getAddressBookActor,
    getAddresses: e.getAddresses,
    addAddress: e.addAddress,
    removeAddress: e.removeAddress
  };
})(address_book);
var hasRequiredRegistries;
function requireRegistries() {
  return hasRequiredRegistries || (hasRequiredRegistries = 1, function(e) {
    var n = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(s, u, d, g) {
      g === void 0 && (g = d);
      var m = Object.getOwnPropertyDescriptor(u, d);
      (!m || ("get" in m ? !u.__esModule : m.writable || m.configurable)) && (m = { enumerable: !0, get: function() {
        return u[d];
      } }), Object.defineProperty(s, g, m);
    } : function(s, u, d, g) {
      g === void 0 && (g = d), s[g] = u[d];
    }), o = commonjsGlobal && commonjsGlobal.__exportStar || function(s, u) {
      for (var d in s)
        d !== "default" && !Object.prototype.hasOwnProperty.call(u, d) && n(u, s, d);
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), o(nfts_registry, e), o(canister_registry, e), o(requireToken_registry(), e), o(address_book, e);
  }(registries)), registries;
}
var nft = {};
Object.defineProperty(nft, "__esModule", { value: !0 });
var token = {};
Object.defineProperty(token, "__esModule", { value: !0 });
(function(e) {
  var n = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(B, x, C, v) {
    v === void 0 && (v = C);
    var y = Object.getOwnPropertyDescriptor(x, C);
    (!y || ("get" in y ? !x.__esModule : y.writable || y.configurable)) && (y = { enumerable: !0, get: function() {
      return x[C];
    } }), Object.defineProperty(B, v, y);
  } : function(B, x, C, v) {
    v === void 0 && (v = C), B[v] = x[C];
  }), o = commonjsGlobal && commonjsGlobal.__setModuleDefault || (Object.create ? function(B, x) {
    Object.defineProperty(B, "default", { enumerable: !0, value: x });
  } : function(B, x) {
    B.default = x;
  }), s = commonjsGlobal && commonjsGlobal.__exportStar || function(B, x) {
    for (var C in B)
      C !== "default" && !Object.prototype.hasOwnProperty.call(x, C) && n(x, B, C);
  }, u = commonjsGlobal && commonjsGlobal.__importStar || function(B) {
    if (B && B.__esModule)
      return B;
    var x = {};
    if (B != null)
      for (var C in B)
        C !== "default" && Object.prototype.hasOwnProperty.call(B, C) && n(x, B, C);
    return o(x, B), x;
  }, d = commonjsGlobal && commonjsGlobal.__importDefault || function(B) {
    return B && B.__esModule ? B : { default: B };
  };
  Object.defineProperty(e, "__esModule", { value: !0 }), e.HttpAgent = e.Principal = e.standards = e.TokenInterfaces = e.NFTInterfaces = void 0, s(requireRegistries(), e), s(nft, e), s(token, e), e.NFTInterfaces = u(nft), e.TokenInterfaces = u(token);
  var g = standards;
  Object.defineProperty(e, "standards", { enumerable: !0, get: function() {
    return d(g).default;
  } });
  var m = require$$4;
  Object.defineProperty(e, "Principal", { enumerable: !0, get: function() {
    return m.Principal;
  } });
  var w = require$$5;
  Object.defineProperty(e, "HttpAgent", { enumerable: !0, get: function() {
    return w.HttpAgent;
  } });
})(dist);
const clone = (e) => structuredClone(e), getRemoteBoxes = (e) => [...Array(tradeBoxNum).keys()].map((o) => {
  var s;
  return {
    id: o,
    item: (s = e.find((u) => u.slot === o)) != null ? s : null
  };
}), getInventoryBoxes = (e) => [...Array(inventoryBoxNum).keys()].map((o) => {
  var s;
  return {
    id: o,
    item: (s = e.find((u) => u.slot === o)) != null ? s : null
  };
}), getUserTokens = async ({
  agent: e,
  user: n
}) => {
  let o;
  try {
    o = await dist.getAllUserNFTs({
      agent: e,
      user: n
    });
  } catch (d) {
    console.log(d);
  }
  console.log("collections: ", o);
  const s = {};
  let u = 0;
  return o.forEach((d) => {
    d.name.toLowerCase().includes("cipher") || d.tokens.forEach((g) => {
      var B, x;
      let m = {
        id: u.toString(),
        canister_id: g.canister,
        collection: g.collection,
        index: g.index.toString(),
        slot: u
      };
      const w = (x = (B = g.metadata) == null ? void 0 : B.json) == null ? void 0 : x.value.TextContent;
      if (g.url.match(/\.(jpeg|jpg|gif|png)$/) != null, w) {
        const C = JSON.parse(w);
        m.name = C.name, m.url = d.icon;
      } else
        m.name = g.collection, m.url = d.icon;
      s[u] = m, u++;
    });
  }), console.log("newTokens: ", s), s;
}, getExtension = (e) => e.split(".").pop().toLowerCase(), isImage = (e) => {
  if (!e)
    return !1;
  const n = ["apng", "avif", "gif", "jpg", "jpeg", "jfif", "pjpeg", "pjp", "png", "svg", "webp", "bmp", "ico", "cur", "tif", "tiff"], o = getExtension(e);
  return n.indexOf(o) >= 0;
}, isMedia = (e) => {
  if (!e)
    return !1;
  const n = ["mp4", "mov", "wav", "mp3", "ogg", "webm", "avi"], o = getExtension(e);
  return n.indexOf(o) >= 0;
}, isModel = (e) => {
  if (!e)
    return !1;
  const n = ["glb"], o = getExtension(e);
  return n.indexOf(o) >= 0;
}, existItems = (e) => !e || !e.length ? !1 : !!e.filter((o) => {
  var s;
  return (s = o == null ? void 0 : o.item) == null ? void 0 : s.canister_id;
}).length, createStoreImpl = (e) => {
  let n;
  const o = /* @__PURE__ */ new Set(), s = (w, B) => {
    const x = typeof w == "function" ? w(n) : w;
    if (!Object.is(x, n)) {
      const C = n;
      n = (B != null ? B : typeof x != "object") ? x : Object.assign({}, n, x), o.forEach((v) => v(n, C));
    }
  }, u = () => n, m = { setState: s, getState: u, subscribe: (w) => (o.add(w), () => o.delete(w)), destroy: () => o.clear() };
  return n = e(s, u, m), m;
}, createStore = (e) => e ? createStoreImpl(e) : createStoreImpl;
var withSelector = { exports: {} }, withSelector_production_min = {}, shim = { exports: {} }, useSyncExternalStoreShim_production_min = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_production_min;
function requireUseSyncExternalStoreShim_production_min() {
  if (hasRequiredUseSyncExternalStoreShim_production_min)
    return useSyncExternalStoreShim_production_min;
  hasRequiredUseSyncExternalStoreShim_production_min = 1;
  var e = React__default;
  function n(C, v) {
    return C === v && (C !== 0 || 1 / C === 1 / v) || C !== C && v !== v;
  }
  var o = typeof Object.is == "function" ? Object.is : n, s = e.useState, u = e.useEffect, d = e.useLayoutEffect, g = e.useDebugValue;
  function m(C, v) {
    var y = v(), T = s({ inst: { value: y, getSnapshot: v } }), M = T[0].inst, D = T[1];
    return d(function() {
      M.value = y, M.getSnapshot = v, w(M) && D({ inst: M });
    }, [C, y, v]), u(function() {
      return w(M) && D({ inst: M }), C(function() {
        w(M) && D({ inst: M });
      });
    }, [C]), g(y), y;
  }
  function w(C) {
    var v = C.getSnapshot;
    C = C.value;
    try {
      var y = v();
      return !o(C, y);
    } catch {
      return !0;
    }
  }
  function B(C, v) {
    return v();
  }
  var x = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? B : m;
  return useSyncExternalStoreShim_production_min.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : x, useSyncExternalStoreShim_production_min;
}
var useSyncExternalStoreShim_development = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_development;
function requireUseSyncExternalStoreShim_development() {
  return hasRequiredUseSyncExternalStoreShim_development || (hasRequiredUseSyncExternalStoreShim_development = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = React__default, n = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function o(H) {
      {
        for (var q = arguments.length, $ = new Array(q > 1 ? q - 1 : 0), re = 1; re < q; re++)
          $[re - 1] = arguments[re];
        s("error", H, $);
      }
    }
    function s(H, q, $) {
      {
        var re = n.ReactDebugCurrentFrame, ce = re.getStackAddendum();
        ce !== "" && (q += "%s", $ = $.concat([ce]));
        var Ie = $.map(function(Pe) {
          return String(Pe);
        });
        Ie.unshift("Warning: " + q), Function.prototype.apply.call(console[H], console, Ie);
      }
    }
    function u(H, q) {
      return H === q && (H !== 0 || 1 / H === 1 / q) || H !== H && q !== q;
    }
    var d = typeof Object.is == "function" ? Object.is : u, g = e.useState, m = e.useEffect, w = e.useLayoutEffect, B = e.useDebugValue, x = !1, C = !1;
    function v(H, q, $) {
      x || e.startTransition !== void 0 && (x = !0, o("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var re = q();
      if (!C) {
        var ce = q();
        d(re, ce) || (o("The result of getSnapshot should be cached to avoid an infinite loop"), C = !0);
      }
      var Ie = g({
        inst: {
          value: re,
          getSnapshot: q
        }
      }), Pe = Ie[0].inst, se = Ie[1];
      return w(function() {
        Pe.value = re, Pe.getSnapshot = q, y(Pe) && se({
          inst: Pe
        });
      }, [H, re, q]), m(function() {
        y(Pe) && se({
          inst: Pe
        });
        var Ce = function() {
          y(Pe) && se({
            inst: Pe
          });
        };
        return H(Ce);
      }, [H]), B(re), re;
    }
    function y(H) {
      var q = H.getSnapshot, $ = H.value;
      try {
        var re = q();
        return !d($, re);
      } catch {
        return !0;
      }
    }
    function T(H, q, $) {
      return q();
    }
    var M = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", D = !M, V = D ? T : v, O = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : V;
    useSyncExternalStoreShim_development.useSyncExternalStore = O, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), useSyncExternalStoreShim_development;
}
var hasRequiredShim;
function requireShim() {
  return hasRequiredShim || (hasRequiredShim = 1, function(e) {
    process.env.NODE_ENV === "production" ? e.exports = requireUseSyncExternalStoreShim_production_min() : e.exports = requireUseSyncExternalStoreShim_development();
  }(shim)), shim.exports;
}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredWithSelector_production_min;
function requireWithSelector_production_min() {
  if (hasRequiredWithSelector_production_min)
    return withSelector_production_min;
  hasRequiredWithSelector_production_min = 1;
  var e = React__default, n = requireShim();
  function o(B, x) {
    return B === x && (B !== 0 || 1 / B === 1 / x) || B !== B && x !== x;
  }
  var s = typeof Object.is == "function" ? Object.is : o, u = n.useSyncExternalStore, d = e.useRef, g = e.useEffect, m = e.useMemo, w = e.useDebugValue;
  return withSelector_production_min.useSyncExternalStoreWithSelector = function(B, x, C, v, y) {
    var T = d(null);
    if (T.current === null) {
      var M = { hasValue: !1, value: null };
      T.current = M;
    } else
      M = T.current;
    T = m(function() {
      function V(re) {
        if (!O) {
          if (O = !0, H = re, re = v(re), y !== void 0 && M.hasValue) {
            var ce = M.value;
            if (y(ce, re))
              return q = ce;
          }
          return q = re;
        }
        if (ce = q, s(H, re))
          return ce;
        var Ie = v(re);
        return y !== void 0 && y(ce, Ie) ? ce : (H = re, q = Ie);
      }
      var O = !1, H, q, $ = C === void 0 ? null : C;
      return [function() {
        return V(x());
      }, $ === null ? void 0 : function() {
        return V($());
      }];
    }, [x, C, v, y]);
    var D = u(B, T[0], T[1]);
    return g(function() {
      M.hasValue = !0, M.value = D;
    }, [D]), w(D), D;
  }, withSelector_production_min;
}
var withSelector_development = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredWithSelector_development;
function requireWithSelector_development() {
  return hasRequiredWithSelector_development || (hasRequiredWithSelector_development = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = React__default, n = requireShim();
    function o(x, C) {
      return x === C && (x !== 0 || 1 / x === 1 / C) || x !== x && C !== C;
    }
    var s = typeof Object.is == "function" ? Object.is : o, u = n.useSyncExternalStore, d = e.useRef, g = e.useEffect, m = e.useMemo, w = e.useDebugValue;
    function B(x, C, v, y, T) {
      var M = d(null), D;
      M.current === null ? (D = {
        hasValue: !1,
        value: null
      }, M.current = D) : D = M.current;
      var V = m(function() {
        var $ = !1, re, ce, Ie = function(Ge) {
          if (!$) {
            $ = !0, re = Ge;
            var $e = y(Ge);
            if (T !== void 0 && D.hasValue) {
              var Be = D.value;
              if (T(Be, $e))
                return ce = Be, Be;
            }
            return ce = $e, $e;
          }
          var Me = re, We = ce;
          if (s(Me, Ge))
            return We;
          var nt = y(Ge);
          return T !== void 0 && T(We, nt) ? We : (re = Ge, ce = nt, nt);
        }, Pe = v === void 0 ? null : v, se = function() {
          return Ie(C());
        }, Ce = Pe === null ? void 0 : function() {
          return Ie(Pe());
        };
        return [se, Ce];
      }, [C, v, y, T]), O = V[0], H = V[1], q = u(x, O, H);
      return g(function() {
        D.hasValue = !0, D.value = q;
      }, [q]), w(q), q;
    }
    withSelector_development.useSyncExternalStoreWithSelector = B, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), withSelector_development;
}
(function(e) {
  process.env.NODE_ENV === "production" ? e.exports = requireWithSelector_production_min() : e.exports = requireWithSelector_development();
})(withSelector);
const useSyncExternalStoreExports = /* @__PURE__ */ getDefaultExportFromCjs(withSelector.exports), { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;
function useStore$1(e, n = e.getState, o) {
  const s = useSyncExternalStoreWithSelector(
    e.subscribe,
    e.getState,
    e.getServerState || e.getState,
    n,
    o
  );
  return useDebugValue(s), s;
}
const createImpl = (e) => {
  const n = typeof e == "function" ? createStore(e) : e, o = (s, u) => useStore$1(n, s, u);
  return Object.assign(o, n), o;
}, create = (e) => e ? createImpl(e) : createImpl, initRemoteBoxes = [...Array(tradeBoxNum).keys()].map((e) => ({
  id: e,
  item: null
})), initLocalBoxes = [...Array(tradeBoxNum).keys()].map((e) => ({
  id: e,
  item: null
})), initInventoryBoxes = [...Array(inventoryBoxNum).keys()].map((e) => ({
  id: e,
  type: "all",
  item: null
})), useStore = create((e) => ({
  plugActor: null,
  setPlugActor: (n) => e((o) => ({
    plugActor: n
  })),
  isCreator: !1,
  setIsCreator: (n) => e((o) => ({
    isCreator: n
  })),
  localUserId: null,
  setLocalUserId: (n) => e((o) => ({
    localUserId: n
  })),
  curTradeId: null,
  setCurTradeId: (n) => e((o) => ({
    curTradeId: n
  })),
  tradeData: null,
  setTradeData: (n) => e((o) => ({
    tradeData: n
  })),
  tradeStarted: !1,
  setTradeStarted: (n) => e((o) => ({
    tradeStarted: n
  })),
  remoteBoxes: clone(initRemoteBoxes),
  setRemoteBoxes: (n) => e((o) => ({
    remoteBoxes: n
  })),
  localBoxes: clone(initLocalBoxes),
  setLocalBoxes: (n) => e((o) => ({
    localBoxes: n
  })),
  inventoryBoxes: initInventoryBoxes,
  setInventoryBoxes: (n) => e((o) => ({
    inventoryBoxes: n
  })),
  accepted: !1,
  setAccepted: (n) => e((o) => ({
    accepted: n
  })),
  boxNumPerPage: pageBoxNum,
  setBoxNumPerPage: (n) => e((o) => ({
    boxNumPerPage: n
  })),
  curPage: 1,
  setCurPage: (n) => e((o) => ({
    curPage: n
  })),
  selItem: null,
  setSelItem: (n) => e((o) => ({
    selItem: n
  })),
  loading: !1,
  setLoading: (n) => e((o) => ({
    loading: n
  })),
  authenticated: !1,
  setAuthenticated: (n) => e((o) => ({
    authenticated: n
  })),
  principal: null,
  setPrincipal: (n) => e((o) => ({
    principal: n
  }))
}));
var ReplicaRejectCode;
(function(e) {
  e[e.SysFatal = 1] = "SysFatal", e[e.SysTransient = 2] = "SysTransient", e[e.DestinationInvalid = 3] = "DestinationInvalid", e[e.CanisterReject = 4] = "CanisterReject", e[e.CanisterError = 5] = "CanisterError";
})(ReplicaRejectCode || (ReplicaRejectCode = {}));
class AgentError extends Error {
  constructor(n) {
    super(n), this.message = n, Object.setPrototypeOf(this, AgentError.prototype);
  }
}
function concat$1(...e) {
  const n = new Uint8Array(e.reduce((s, u) => s + u.byteLength, 0));
  let o = 0;
  for (const s of e)
    n.set(new Uint8Array(s), o), o += s.byteLength;
  return n;
}
class PipeArrayBuffer {
  constructor(n, o = (n == null ? void 0 : n.byteLength) || 0) {
    this._buffer = n || new ArrayBuffer(0), this._view = new Uint8Array(this._buffer, 0, o);
  }
  get buffer() {
    return this._view.slice();
  }
  get byteLength() {
    return this._view.byteLength;
  }
  read(n) {
    const o = this._view.subarray(0, n);
    return this._view = this._view.subarray(n), o.slice().buffer;
  }
  readUint8() {
    const n = this._view[0];
    return this._view = this._view.subarray(1), n;
  }
  write(n) {
    const o = new Uint8Array(n), s = this._view.byteLength;
    this._view.byteOffset + this._view.byteLength + o.byteLength >= this._buffer.byteLength ? this.alloc(o.byteLength) : this._view = new Uint8Array(this._buffer, this._view.byteOffset, this._view.byteLength + o.byteLength), this._view.set(o, s);
  }
  get end() {
    return this._view.byteLength === 0;
  }
  alloc(n) {
    const o = new ArrayBuffer((this._buffer.byteLength + n) * 1.2 | 0), s = new Uint8Array(o, 0, this._view.byteLength + n);
    s.set(this._view), this._buffer = o, this._view = s;
  }
}
function idlHash(e) {
  const o = new TextEncoder().encode(e);
  let s = 0;
  for (const u of o)
    s = (s * 223 + u) % 2 ** 32;
  return s;
}
function idlLabelToId(e) {
  if (/^_\d+_$/.test(e) || /^_0x[0-9a-fA-F]+_$/.test(e)) {
    const n = +e.slice(1, -1);
    if (Number.isSafeInteger(n) && n >= 0 && n < 2 ** 32)
      return n;
  }
  return idlHash(e);
}
function eob() {
  throw new Error("unexpected end of buffer");
}
function safeRead(e, n) {
  return e.byteLength < n && eob(), e.read(n);
}
function safeReadUint8(e) {
  const n = e.readUint8();
  return n === void 0 && eob(), n;
}
function lebEncode(e) {
  if (typeof e == "number" && (e = BigInt(e)), e < BigInt(0))
    throw new Error("Cannot leb encode negative values.");
  const n = (e === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(e)))) + 1, o = new PipeArrayBuffer(new ArrayBuffer(n), 0);
  for (; ; ) {
    const s = Number(e & BigInt(127));
    if (e /= BigInt(128), e === BigInt(0)) {
      o.write(new Uint8Array([s]));
      break;
    } else
      o.write(new Uint8Array([s | 128]));
  }
  return o.buffer;
}
function lebDecode(e) {
  let n = BigInt(1), o = BigInt(0), s;
  do
    s = safeReadUint8(e), o += BigInt(s & 127).valueOf() * n, n *= BigInt(128);
  while (s >= 128);
  return o;
}
function slebEncode(e) {
  typeof e == "number" && (e = BigInt(e));
  const n = e < BigInt(0);
  n && (e = -e - BigInt(1));
  const o = (e === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(e)))) + 1, s = new PipeArrayBuffer(new ArrayBuffer(o), 0);
  for (; ; ) {
    const d = u(e);
    if (e /= BigInt(128), n && e === BigInt(0) && (d & 64) !== 0 || !n && e === BigInt(0) && (d & 64) === 0) {
      s.write(new Uint8Array([d]));
      break;
    } else
      s.write(new Uint8Array([d | 128]));
  }
  function u(d) {
    const g = d % BigInt(128);
    return Number(n ? BigInt(128) - g - BigInt(1) : g);
  }
  return s.buffer;
}
function slebDecode(e) {
  const n = new Uint8Array(e.buffer);
  let o = 0;
  for (; o < n.byteLength; o++)
    if (n[o] < 128) {
      if ((n[o] & 64) === 0)
        return lebDecode(e);
      break;
    }
  const s = new Uint8Array(safeRead(e, o + 1));
  let u = BigInt(0);
  for (let d = s.byteLength - 1; d >= 0; d--)
    u = u * BigInt(128) + BigInt(128 - (s[d] & 127) - 1);
  return -u - BigInt(1);
}
function writeUIntLE(e, n) {
  if (BigInt(e) < BigInt(0))
    throw new Error("Cannot write negative values.");
  return writeIntLE(e, n);
}
function writeIntLE(e, n) {
  e = BigInt(e);
  const o = new PipeArrayBuffer(new ArrayBuffer(Math.min(1, n)), 0);
  let s = 0, u = BigInt(256), d = BigInt(0), g = Number(e % u);
  for (o.write(new Uint8Array([g])); ++s < n; )
    e < 0 && d === BigInt(0) && g !== 0 && (d = BigInt(1)), g = Number((e / u - d) % BigInt(256)), o.write(new Uint8Array([g])), u *= BigInt(256);
  return o.buffer;
}
function readUIntLE(e, n) {
  let o = BigInt(safeReadUint8(e)), s = BigInt(1), u = 0;
  for (; ++u < n; ) {
    s *= BigInt(256);
    const d = BigInt(safeReadUint8(e));
    o = o + s * d;
  }
  return o;
}
function readIntLE(e, n) {
  let o = readUIntLE(e, n);
  const s = BigInt(2) ** (BigInt(8) * BigInt(n - 1) + BigInt(7));
  return o >= s && (o -= s * BigInt(2)), o;
}
function iexp2(e) {
  const n = BigInt(e);
  if (e < 0)
    throw new RangeError("Input must be non-negative");
  return BigInt(1) << n;
}
const magicNumber = "DIDL", toReadableString_max = 400;
function zipWith(e, n, o) {
  return e.map((s, u) => o(s, n[u]));
}
class TypeTable {
  constructor() {
    this._typs = [], this._idx = /* @__PURE__ */ new Map();
  }
  has(n) {
    return this._idx.has(n.name);
  }
  add(n, o) {
    const s = this._typs.length;
    this._idx.set(n.name, s), this._typs.push(o);
  }
  merge(n, o) {
    const s = this._idx.get(n.name), u = this._idx.get(o);
    if (s === void 0)
      throw new Error("Missing type index for " + n);
    if (u === void 0)
      throw new Error("Missing type index for " + o);
    this._typs[s] = this._typs[u], this._typs.splice(u, 1), this._idx.delete(o);
  }
  encode() {
    const n = lebEncode(this._typs.length), o = concat$1(...this._typs);
    return concat$1(n, o);
  }
  indexOf(n) {
    if (!this._idx.has(n))
      throw new Error("Missing type index for " + n);
    return slebEncode(this._idx.get(n) || 0);
  }
}
class Visitor {
  visitType(n, o) {
    throw new Error("Not implemented");
  }
  visitPrimitive(n, o) {
    return this.visitType(n, o);
  }
  visitEmpty(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitBool(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitNull(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitReserved(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitText(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitNumber(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitInt(n, o) {
    return this.visitNumber(n, o);
  }
  visitNat(n, o) {
    return this.visitNumber(n, o);
  }
  visitFloat(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitFixedInt(n, o) {
    return this.visitNumber(n, o);
  }
  visitFixedNat(n, o) {
    return this.visitNumber(n, o);
  }
  visitPrincipal(n, o) {
    return this.visitPrimitive(n, o);
  }
  visitConstruct(n, o) {
    return this.visitType(n, o);
  }
  visitVec(n, o, s) {
    return this.visitConstruct(n, s);
  }
  visitOpt(n, o, s) {
    return this.visitConstruct(n, s);
  }
  visitRecord(n, o, s) {
    return this.visitConstruct(n, s);
  }
  visitTuple(n, o, s) {
    const u = o.map((d, g) => [`_${g}_`, d]);
    return this.visitRecord(n, u, s);
  }
  visitVariant(n, o, s) {
    return this.visitConstruct(n, s);
  }
  visitRec(n, o, s) {
    return this.visitConstruct(o, s);
  }
  visitFunc(n, o) {
    return this.visitConstruct(n, o);
  }
  visitService(n, o) {
    return this.visitConstruct(n, o);
  }
}
class Type {
  display() {
    return this.name;
  }
  valueToString(n) {
    return toReadableString(n);
  }
  buildTypeTable(n) {
    n.has(this) || this._buildTypeTableImpl(n);
  }
}
class PrimitiveType extends Type {
  checkType(n) {
    if (this.name !== n.name)
      throw new Error(`type mismatch: type on the wire ${n.name}, expect type ${this.name}`);
    return n;
  }
  _buildTypeTableImpl(n) {
  }
}
class ConstructType extends Type {
  checkType(n) {
    if (n instanceof RecClass) {
      const o = n.getType();
      if (typeof o > "u")
        throw new Error("type mismatch with uninitialized type");
      return o;
    }
    throw new Error(`type mismatch: type on the wire ${n.name}, expect type ${this.name}`);
  }
  encodeType(n) {
    return n.indexOf(this.name);
  }
}
class EmptyClass extends PrimitiveType {
  accept(n, o) {
    return n.visitEmpty(this, o);
  }
  covariant(n) {
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue() {
    throw new Error("Empty cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Empty cannot appear as a value");
  }
  encodeType() {
    return slebEncode(-17);
  }
  decodeValue() {
    throw new Error("Empty cannot appear as an output");
  }
  get name() {
    return "empty";
  }
}
class UnknownClass extends Type {
  checkType(n) {
    throw new Error("Method not implemented for unknown.");
  }
  accept(n, o) {
    throw n.visitType(this, o);
  }
  covariant(n) {
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue() {
    throw new Error("Unknown cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Unknown cannot appear as a value");
  }
  encodeType() {
    throw new Error("Unknown cannot be serialized");
  }
  decodeValue(n, o) {
    let s = o.decodeValue(n, o);
    Object(s) !== s && (s = Object(s));
    let u;
    return o instanceof RecClass ? u = () => o.getType() : u = () => o, Object.defineProperty(s, "type", {
      value: u,
      writable: !0,
      enumerable: !1,
      configurable: !0
    }), s;
  }
  _buildTypeTableImpl() {
    throw new Error("Unknown cannot be serialized");
  }
  get name() {
    return "Unknown";
  }
}
class BoolClass extends PrimitiveType {
  accept(n, o) {
    return n.visitBool(this, o);
  }
  covariant(n) {
    if (typeof n == "boolean")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    return new Uint8Array([n ? 1 : 0]);
  }
  encodeType() {
    return slebEncode(-2);
  }
  decodeValue(n, o) {
    switch (this.checkType(o), safeReadUint8(n)) {
      case 0:
        return !1;
      case 1:
        return !0;
      default:
        throw new Error("Boolean value out of range");
    }
  }
  get name() {
    return "bool";
  }
}
class NullClass extends PrimitiveType {
  accept(n, o) {
    return n.visitNull(this, o);
  }
  covariant(n) {
    if (n === null)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue() {
    return new ArrayBuffer(0);
  }
  encodeType() {
    return slebEncode(-1);
  }
  decodeValue(n, o) {
    return this.checkType(o), null;
  }
  get name() {
    return "null";
  }
}
class ReservedClass extends PrimitiveType {
  accept(n, o) {
    return n.visitReserved(this, o);
  }
  covariant(n) {
    return !0;
  }
  encodeValue() {
    return new ArrayBuffer(0);
  }
  encodeType() {
    return slebEncode(-16);
  }
  decodeValue(n, o) {
    return o.name !== this.name && o.decodeValue(n, o), null;
  }
  get name() {
    return "reserved";
  }
}
class TextClass extends PrimitiveType {
  accept(n, o) {
    return n.visitText(this, o);
  }
  covariant(n) {
    if (typeof n == "string")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    const o = new TextEncoder().encode(n), s = lebEncode(o.byteLength);
    return concat$1(s, o);
  }
  encodeType() {
    return slebEncode(-15);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = lebDecode(n), u = safeRead(n, Number(s));
    return new TextDecoder("utf8", { fatal: !0 }).decode(u);
  }
  get name() {
    return "text";
  }
  valueToString(n) {
    return '"' + n + '"';
  }
}
class IntClass extends PrimitiveType {
  accept(n, o) {
    return n.visitInt(this, o);
  }
  covariant(n) {
    if (typeof n == "bigint" || Number.isInteger(n))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    return slebEncode(n);
  }
  encodeType() {
    return slebEncode(-4);
  }
  decodeValue(n, o) {
    return this.checkType(o), slebDecode(n);
  }
  get name() {
    return "int";
  }
  valueToString(n) {
    return n.toString();
  }
}
class NatClass extends PrimitiveType {
  accept(n, o) {
    return n.visitNat(this, o);
  }
  covariant(n) {
    if (typeof n == "bigint" && n >= BigInt(0) || Number.isInteger(n) && n >= 0)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    return lebEncode(n);
  }
  encodeType() {
    return slebEncode(-3);
  }
  decodeValue(n, o) {
    return this.checkType(o), lebDecode(n);
  }
  get name() {
    return "nat";
  }
  valueToString(n) {
    return n.toString();
  }
}
class FloatClass extends PrimitiveType {
  constructor(n) {
    if (super(), this._bits = n, n !== 32 && n !== 64)
      throw new Error("not a valid float type");
  }
  accept(n, o) {
    return n.visitFloat(this, o);
  }
  covariant(n) {
    if (typeof n == "number" || n instanceof Number)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    const o = new ArrayBuffer(this._bits / 8), s = new DataView(o);
    return this._bits === 32 ? s.setFloat32(0, n, !0) : s.setFloat64(0, n, !0), o;
  }
  encodeType() {
    const n = this._bits === 32 ? -13 : -14;
    return slebEncode(n);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = safeRead(n, this._bits / 8), u = new DataView(s);
    return this._bits === 32 ? u.getFloat32(0, !0) : u.getFloat64(0, !0);
  }
  get name() {
    return "float" + this._bits;
  }
  valueToString(n) {
    return n.toString();
  }
}
class FixedIntClass extends PrimitiveType {
  constructor(n) {
    super(), this._bits = n;
  }
  accept(n, o) {
    return n.visitFixedInt(this, o);
  }
  covariant(n) {
    const o = iexp2(this._bits - 1) * BigInt(-1), s = iexp2(this._bits - 1) - BigInt(1);
    let u = !1;
    if (typeof n == "bigint")
      u = n >= o && n <= s;
    else if (Number.isInteger(n)) {
      const d = BigInt(n);
      u = d >= o && d <= s;
    } else
      u = !1;
    if (u)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    return writeIntLE(n, this._bits / 8);
  }
  encodeType() {
    const n = Math.log2(this._bits) - 3;
    return slebEncode(-9 - n);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = readIntLE(n, this._bits / 8);
    return this._bits <= 32 ? Number(s) : s;
  }
  get name() {
    return `int${this._bits}`;
  }
  valueToString(n) {
    return n.toString();
  }
}
class FixedNatClass extends PrimitiveType {
  constructor(n) {
    super(), this._bits = n;
  }
  accept(n, o) {
    return n.visitFixedNat(this, o);
  }
  covariant(n) {
    const o = iexp2(this._bits);
    let s = !1;
    if (typeof n == "bigint" && n >= BigInt(0) ? s = n < o : Number.isInteger(n) && n >= 0 ? s = BigInt(n) < o : s = !1, s)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    return writeUIntLE(n, this._bits / 8);
  }
  encodeType() {
    const n = Math.log2(this._bits) - 3;
    return slebEncode(-5 - n);
  }
  decodeValue(n, o) {
    this.checkType(o);
    const s = readUIntLE(n, this._bits / 8);
    return this._bits <= 32 ? Number(s) : s;
  }
  get name() {
    return `nat${this._bits}`;
  }
  valueToString(n) {
    return n.toString();
  }
}
class VecClass extends ConstructType {
  constructor(n) {
    super(), this._type = n, this._blobOptimization = !1, n instanceof FixedNatClass && n._bits === 8 && (this._blobOptimization = !0);
  }
  accept(n, o) {
    return n.visitVec(this, this._type, o);
  }
  covariant(n) {
    const o = this._type instanceof FixedNatClass ? this._type._bits : this._type instanceof FixedIntClass ? this._type._bits : 0;
    if (ArrayBuffer.isView(n) && o == n.BYTES_PER_ELEMENT * 8 || Array.isArray(n) && n.every((s, u) => {
      try {
        return this._type.covariant(s);
      } catch (d) {
        throw new Error(`Invalid ${this.display()} argument: 

index ${u} -> ${d.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    const o = lebEncode(n.length);
    if (this._blobOptimization)
      return concat$1(o, new Uint8Array(n));
    if (ArrayBuffer.isView(n))
      return concat$1(o, new Uint8Array(n.buffer));
    const s = new PipeArrayBuffer(new ArrayBuffer(o.byteLength + n.length), 0);
    s.write(o);
    for (const u of n) {
      const d = this._type.encodeValue(u);
      s.write(new Uint8Array(d));
    }
    return s.buffer;
  }
  _buildTypeTableImpl(n) {
    this._type.buildTypeTable(n);
    const o = slebEncode(-19), s = this._type.encodeType(n);
    n.add(this, concat$1(o, s));
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof VecClass))
      throw new Error("Not a vector type");
    const u = Number(lebDecode(n));
    if (this._type instanceof FixedNatClass) {
      if (this._type._bits == 8)
        return new Uint8Array(n.read(u));
      if (this._type._bits == 16)
        return new Uint16Array(n.read(u * 2));
      if (this._type._bits == 32)
        return new Uint32Array(n.read(u * 4));
      if (this._type._bits == 64)
        return new BigUint64Array(n.read(u * 8));
    }
    if (this._type instanceof FixedIntClass) {
      if (this._type._bits == 8)
        return new Int8Array(n.read(u));
      if (this._type._bits == 16)
        return new Int16Array(n.read(u * 2));
      if (this._type._bits == 32)
        return new Int32Array(n.read(u * 4));
      if (this._type._bits == 64)
        return new BigInt64Array(n.read(u * 8));
    }
    const d = [];
    for (let g = 0; g < u; g++)
      d.push(this._type.decodeValue(n, s._type));
    return d;
  }
  get name() {
    return `vec ${this._type.name}`;
  }
  display() {
    return `vec ${this._type.display()}`;
  }
  valueToString(n) {
    return "vec {" + n.map((s) => this._type.valueToString(s)).join("; ") + "}";
  }
}
class OptClass extends ConstructType {
  constructor(n) {
    super(), this._type = n;
  }
  accept(n, o) {
    return n.visitOpt(this, this._type, o);
  }
  covariant(n) {
    try {
      if (Array.isArray(n) && (n.length === 0 || n.length === 1 && this._type.covariant(n[0])))
        return !0;
    } catch (o) {
      throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)} 

-> ${o.message}`);
    }
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    return n.length === 0 ? new Uint8Array([0]) : concat$1(new Uint8Array([1]), this._type.encodeValue(n[0]));
  }
  _buildTypeTableImpl(n) {
    this._type.buildTypeTable(n);
    const o = slebEncode(-18), s = this._type.encodeType(n);
    n.add(this, concat$1(o, s));
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof OptClass))
      throw new Error("Not an option type");
    switch (safeReadUint8(n)) {
      case 0:
        return [];
      case 1:
        return [this._type.decodeValue(n, s._type)];
      default:
        throw new Error("Not an option value");
    }
  }
  get name() {
    return `opt ${this._type.name}`;
  }
  display() {
    return `opt ${this._type.display()}`;
  }
  valueToString(n) {
    return n.length === 0 ? "null" : `opt ${this._type.valueToString(n[0])}`;
  }
}
class RecordClass extends ConstructType {
  constructor(n = {}) {
    super(), this._fields = Object.entries(n).sort((o, s) => idlLabelToId(o[0]) - idlLabelToId(s[0]));
  }
  accept(n, o) {
    return n.visitRecord(this, this._fields, o);
  }
  tryAsTuple() {
    const n = [];
    for (let o = 0; o < this._fields.length; o++) {
      const [s, u] = this._fields[o];
      if (s !== `_${o}_`)
        return null;
      n.push(u);
    }
    return n;
  }
  covariant(n) {
    if (typeof n == "object" && this._fields.every(([o, s]) => {
      if (!n.hasOwnProperty(o))
        throw new Error(`Record is missing key "${o}".`);
      try {
        return s.covariant(n[o]);
      } catch (u) {
        throw new Error(`Invalid ${this.display()} argument: 

field ${o} -> ${u.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    const o = this._fields.map(([u]) => n[u]), s = zipWith(this._fields, o, ([, u], d) => u.encodeValue(d));
    return concat$1(...s);
  }
  _buildTypeTableImpl(n) {
    this._fields.forEach(([d, g]) => g.buildTypeTable(n));
    const o = slebEncode(-20), s = lebEncode(this._fields.length), u = this._fields.map(([d, g]) => concat$1(lebEncode(idlLabelToId(d)), g.encodeType(n)));
    n.add(this, concat$1(o, s, concat$1(...u)));
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof RecordClass))
      throw new Error("Not a record type");
    const u = {};
    let d = 0, g = 0;
    for (; g < s._fields.length; ) {
      const [m, w] = s._fields[g];
      if (d >= this._fields.length) {
        w.decodeValue(n, w), g++;
        continue;
      }
      const [B, x] = this._fields[d], C = idlLabelToId(this._fields[d][0]), v = idlLabelToId(m);
      if (C === v)
        u[B] = x.decodeValue(n, w), d++, g++;
      else if (v > C)
        if (x instanceof OptClass || x instanceof ReservedClass)
          u[B] = [], d++;
        else
          throw new Error("Cannot find required field " + B);
      else
        w.decodeValue(n, w), g++;
    }
    for (const [m, w] of this._fields.slice(d))
      if (w instanceof OptClass || w instanceof ReservedClass)
        u[m] = [];
      else
        throw new Error("Cannot find required field " + m);
    return u;
  }
  get name() {
    return `record {${this._fields.map(([o, s]) => o + ":" + s.name).join("; ")}}`;
  }
  display() {
    return `record {${this._fields.map(([o, s]) => o + ":" + s.display()).join("; ")}}`;
  }
  valueToString(n) {
    const o = this._fields.map(([u]) => n[u]);
    return `record {${zipWith(this._fields, o, ([u, d], g) => u + "=" + d.valueToString(g)).join("; ")}}`;
  }
}
class TupleClass extends RecordClass {
  constructor(n) {
    const o = {};
    n.forEach((s, u) => o["_" + u + "_"] = s), super(o), this._components = n;
  }
  accept(n, o) {
    return n.visitTuple(this, this._components, o);
  }
  covariant(n) {
    if (Array.isArray(n) && n.length >= this._fields.length && this._components.every((o, s) => {
      try {
        return o.covariant(n[s]);
      } catch (u) {
        throw new Error(`Invalid ${this.display()} argument: 

index ${s} -> ${u.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    const o = zipWith(this._components, n, (s, u) => s.encodeValue(u));
    return concat$1(...o);
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof TupleClass))
      throw new Error("not a tuple type");
    if (s._components.length < this._components.length)
      throw new Error("tuple mismatch");
    const u = [];
    for (const [d, g] of s._components.entries())
      d >= this._components.length ? g.decodeValue(n, g) : u.push(this._components[d].decodeValue(n, g));
    return u;
  }
  display() {
    return `record {${this._components.map((o) => o.display()).join("; ")}}`;
  }
  valueToString(n) {
    return `record {${zipWith(this._components, n, (s, u) => s.valueToString(u)).join("; ")}}`;
  }
}
class VariantClass extends ConstructType {
  constructor(n = {}) {
    super(), this._fields = Object.entries(n).sort((o, s) => idlLabelToId(o[0]) - idlLabelToId(s[0]));
  }
  accept(n, o) {
    return n.visitVariant(this, this._fields, o);
  }
  covariant(n) {
    if (typeof n == "object" && Object.entries(n).length === 1 && this._fields.every(([o, s]) => {
      try {
        return !n.hasOwnProperty(o) || s.covariant(n[o]);
      } catch (u) {
        throw new Error(`Invalid ${this.display()} argument: 

variant ${o} -> ${u.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    for (let o = 0; o < this._fields.length; o++) {
      const [s, u] = this._fields[o];
      if (n.hasOwnProperty(s)) {
        const d = lebEncode(o), g = u.encodeValue(n[s]);
        return concat$1(d, g);
      }
    }
    throw Error("Variant has no data: " + n);
  }
  _buildTypeTableImpl(n) {
    this._fields.forEach(([, d]) => {
      d.buildTypeTable(n);
    });
    const o = slebEncode(-21), s = lebEncode(this._fields.length), u = this._fields.map(([d, g]) => concat$1(lebEncode(idlLabelToId(d)), g.encodeType(n)));
    n.add(this, concat$1(o, s, ...u));
  }
  decodeValue(n, o) {
    const s = this.checkType(o);
    if (!(s instanceof VariantClass))
      throw new Error("Not a variant type");
    const u = Number(lebDecode(n));
    if (u >= s._fields.length)
      throw Error("Invalid variant index: " + u);
    const [d, g] = s._fields[u];
    for (const [m, w] of this._fields)
      if (idlLabelToId(d) === idlLabelToId(m)) {
        const B = w.decodeValue(n, g);
        return { [m]: B };
      }
    throw new Error("Cannot find field hash " + d);
  }
  get name() {
    return `variant {${this._fields.map(([o, s]) => o + ":" + s.name).join("; ")}}`;
  }
  display() {
    return `variant {${this._fields.map(([o, s]) => o + (s.name === "null" ? "" : `:${s.display()}`)).join("; ")}}`;
  }
  valueToString(n) {
    for (const [o, s] of this._fields)
      if (n.hasOwnProperty(o)) {
        const u = s.valueToString(n[o]);
        return u === "null" ? `variant {${o}}` : `variant {${o}=${u}}`;
      }
    throw new Error("Variant has no data: " + n);
  }
}
class RecClass extends ConstructType {
  constructor() {
    super(...arguments), this._id = RecClass._counter++, this._type = void 0;
  }
  accept(n, o) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return n.visitRec(this, this._type, o);
  }
  fill(n) {
    this._type = n;
  }
  getType() {
    return this._type;
  }
  covariant(n) {
    if (this._type && this._type.covariant(n))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.encodeValue(n);
  }
  _buildTypeTableImpl(n) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    n.add(this, new Uint8Array([])), this._type.buildTypeTable(n), n.merge(this, this._type.name);
  }
  decodeValue(n, o) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.decodeValue(n, o);
  }
  get name() {
    return `rec_${this._id}`;
  }
  display() {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return `\u03BC${this.name}.${this._type.name}`;
  }
  valueToString(n) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.valueToString(n);
  }
}
RecClass._counter = 0;
function decodePrincipalId(e) {
  if (safeReadUint8(e) !== 1)
    throw new Error("Cannot decode principal");
  const o = Number(lebDecode(e));
  return Principal$3.fromUint8Array(new Uint8Array(safeRead(e, o)));
}
class PrincipalClass extends PrimitiveType {
  accept(n, o) {
    return n.visitPrincipal(this, o);
  }
  covariant(n) {
    if (n && n._isPrincipal)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    const o = n.toUint8Array(), s = lebEncode(o.byteLength);
    return concat$1(new Uint8Array([1]), s, o);
  }
  encodeType() {
    return slebEncode(-24);
  }
  decodeValue(n, o) {
    return this.checkType(o), decodePrincipalId(n);
  }
  get name() {
    return "principal";
  }
  valueToString(n) {
    return `${this.name} "${n.toText()}"`;
  }
}
class FuncClass extends ConstructType {
  constructor(n, o, s = []) {
    super(), this.argTypes = n, this.retTypes = o, this.annotations = s;
  }
  static argsToString(n, o) {
    if (n.length !== o.length)
      throw new Error("arity mismatch");
    return "(" + n.map((s, u) => s.valueToString(o[u])).join(", ") + ")";
  }
  accept(n, o) {
    return n.visitFunc(this, o);
  }
  covariant(n) {
    if (Array.isArray(n) && n.length === 2 && n[0] && n[0]._isPrincipal && typeof n[1] == "string")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue([n, o]) {
    const s = n.toUint8Array(), u = lebEncode(s.byteLength), d = concat$1(new Uint8Array([1]), u, s), g = new TextEncoder().encode(o), m = lebEncode(g.byteLength);
    return concat$1(new Uint8Array([1]), d, m, g);
  }
  _buildTypeTableImpl(n) {
    this.argTypes.forEach((B) => B.buildTypeTable(n)), this.retTypes.forEach((B) => B.buildTypeTable(n));
    const o = slebEncode(-22), s = lebEncode(this.argTypes.length), u = concat$1(...this.argTypes.map((B) => B.encodeType(n))), d = lebEncode(this.retTypes.length), g = concat$1(...this.retTypes.map((B) => B.encodeType(n))), m = lebEncode(this.annotations.length), w = concat$1(...this.annotations.map((B) => this.encodeAnnotation(B)));
    n.add(this, concat$1(o, s, u, d, g, m, w));
  }
  decodeValue(n) {
    if (safeReadUint8(n) !== 1)
      throw new Error("Cannot decode function reference");
    const s = decodePrincipalId(n), u = Number(lebDecode(n)), d = safeRead(n, u), m = new TextDecoder("utf8", { fatal: !0 }).decode(d);
    return [s, m];
  }
  get name() {
    const n = this.argTypes.map((u) => u.name).join(", "), o = this.retTypes.map((u) => u.name).join(", "), s = " " + this.annotations.join(" ");
    return `(${n}) -> (${o})${s}`;
  }
  valueToString([n, o]) {
    return `func "${n.toText()}".${o}`;
  }
  display() {
    const n = this.argTypes.map((u) => u.display()).join(", "), o = this.retTypes.map((u) => u.display()).join(", "), s = " " + this.annotations.join(" ");
    return `(${n}) \u2192 (${o})${s}`;
  }
  encodeAnnotation(n) {
    if (n === "query")
      return new Uint8Array([1]);
    if (n === "oneway")
      return new Uint8Array([2]);
    throw new Error("Illegal function annotation");
  }
}
class ServiceClass extends ConstructType {
  constructor(n) {
    super(), this._fields = Object.entries(n).sort((o, s) => idlLabelToId(o[0]) - idlLabelToId(s[0]));
  }
  accept(n, o) {
    return n.visitService(this, o);
  }
  covariant(n) {
    if (n && n._isPrincipal)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(n)}`);
  }
  encodeValue(n) {
    const o = n.toUint8Array(), s = lebEncode(o.length);
    return concat$1(new Uint8Array([1]), s, o);
  }
  _buildTypeTableImpl(n) {
    this._fields.forEach(([d, g]) => g.buildTypeTable(n));
    const o = slebEncode(-23), s = lebEncode(this._fields.length), u = this._fields.map(([d, g]) => {
      const m = new TextEncoder().encode(d), w = lebEncode(m.length);
      return concat$1(w, m, g.encodeType(n));
    });
    n.add(this, concat$1(o, s, ...u));
  }
  decodeValue(n) {
    return decodePrincipalId(n);
  }
  get name() {
    return `service {${this._fields.map(([o, s]) => o + ":" + s.name).join("; ")}}`;
  }
  valueToString(n) {
    return `service "${n.toText()}"`;
  }
}
function toReadableString(e) {
  const n = JSON.stringify(e, (o, s) => typeof s == "bigint" ? `BigInt(${s})` : s);
  return n && n.length > toReadableString_max ? n.substring(0, toReadableString_max - 3) + "..." : n;
}
function encode$1(e, n) {
  if (n.length < e.length)
    throw Error("Wrong number of message arguments");
  const o = new TypeTable();
  e.forEach((w) => w.buildTypeTable(o));
  const s = new TextEncoder().encode(magicNumber), u = o.encode(), d = lebEncode(n.length), g = concat$1(...e.map((w) => w.encodeType(o))), m = concat$1(...zipWith(e, n, (w, B) => {
    try {
      w.covariant(B);
    } catch (x) {
      throw new Error(x.message + `

`);
    }
    return w.encodeValue(B);
  }));
  return concat$1(s, u, d, g, m);
}
function decode$1(e, n) {
  const o = new PipeArrayBuffer(n);
  if (n.byteLength < magicNumber.length)
    throw new Error("Message length smaller than magic number");
  const s = safeRead(o, magicNumber.length), u = new TextDecoder().decode(s);
  if (u !== magicNumber)
    throw new Error("Wrong magic number: " + JSON.stringify(u));
  function d(y) {
    const T = [], M = Number(lebDecode(y));
    for (let O = 0; O < M; O++) {
      const H = Number(slebDecode(y));
      switch (H) {
        case -18:
        case -19: {
          const q = Number(slebDecode(y));
          T.push([H, q]);
          break;
        }
        case -20:
        case -21: {
          const q = [];
          let $ = Number(lebDecode(y)), re;
          for (; $--; ) {
            const ce = Number(lebDecode(y));
            if (ce >= Math.pow(2, 32))
              throw new Error("field id out of 32-bit range");
            if (typeof re == "number" && re >= ce)
              throw new Error("field id collision or not sorted");
            re = ce;
            const Ie = Number(slebDecode(y));
            q.push([ce, Ie]);
          }
          T.push([H, q]);
          break;
        }
        case -22: {
          const q = [];
          let $ = Number(lebDecode(y));
          for (; $--; )
            q.push(Number(slebDecode(y)));
          const re = [];
          let ce = Number(lebDecode(y));
          for (; ce--; )
            re.push(Number(slebDecode(y)));
          const Ie = [];
          let Pe = Number(lebDecode(y));
          for (; Pe--; )
            switch (Number(lebDecode(y))) {
              case 1: {
                Ie.push("query");
                break;
              }
              case 2: {
                Ie.push("oneway");
                break;
              }
              default:
                throw new Error("unknown annotation");
            }
          T.push([H, [q, re, Ie]]);
          break;
        }
        case -23: {
          let q = Number(lebDecode(y));
          const $ = [];
          for (; q--; ) {
            const re = Number(lebDecode(y)), ce = new TextDecoder().decode(safeRead(y, re)), Ie = slebDecode(y);
            $.push([ce, Ie]);
          }
          T.push([H, $]);
          break;
        }
        default:
          throw new Error("Illegal op_code: " + H);
      }
    }
    const D = [], V = Number(lebDecode(y));
    for (let O = 0; O < V; O++)
      D.push(Number(slebDecode(y)));
    return [T, D];
  }
  const [g, m] = d(o);
  if (m.length < e.length)
    throw new Error("Wrong number of return values");
  const w = g.map((y) => Rec());
  function B(y) {
    if (y < -24)
      throw new Error("future value not supported");
    if (y < 0)
      switch (y) {
        case -1:
          return Null;
        case -2:
          return Bool;
        case -3:
          return Nat;
        case -4:
          return Int;
        case -5:
          return Nat8;
        case -6:
          return Nat16;
        case -7:
          return Nat32;
        case -8:
          return Nat64;
        case -9:
          return Int8;
        case -10:
          return Int16;
        case -11:
          return Int32;
        case -12:
          return Int64;
        case -13:
          return Float32;
        case -14:
          return Float64;
        case -15:
          return Text;
        case -16:
          return Reserved;
        case -17:
          return Empty;
        case -24:
          return Principal;
        default:
          throw new Error("Illegal op_code: " + y);
      }
    if (y >= g.length)
      throw new Error("type index out of range");
    return w[y];
  }
  function x(y) {
    switch (y[0]) {
      case -19: {
        const T = B(y[1]);
        return Vec(T);
      }
      case -18: {
        const T = B(y[1]);
        return Opt(T);
      }
      case -20: {
        const T = {};
        for (const [V, O] of y[1]) {
          const H = `_${V}_`;
          T[H] = B(O);
        }
        const M = Record(T), D = M.tryAsTuple();
        return Array.isArray(D) ? Tuple(...D) : M;
      }
      case -21: {
        const T = {};
        for (const [M, D] of y[1]) {
          const V = `_${M}_`;
          T[V] = B(D);
        }
        return Variant(T);
      }
      case -22: {
        const [T, M, D] = y[1];
        return Func(T.map((V) => B(V)), M.map((V) => B(V)), D);
      }
      case -23: {
        const T = {}, M = y[1];
        for (const [D, V] of M) {
          let O = B(V);
          if (O instanceof RecClass && (O = O.getType()), !(O instanceof FuncClass))
            throw new Error("Illegal service definition: services can only contain functions");
          T[D] = O;
        }
        return Service(T);
      }
      default:
        throw new Error("Illegal op_code: " + y[0]);
    }
  }
  g.forEach((y, T) => {
    const M = x(y);
    w[T].fill(M);
  });
  const C = m.map((y) => B(y)), v = e.map((y, T) => y.decodeValue(o, C[T]));
  for (let y = e.length; y < C.length; y++)
    C[y].decodeValue(o, C[y]);
  if (o.byteLength > 0)
    throw new Error("decode: Left-over bytes");
  return v;
}
const Empty = new EmptyClass(), Reserved = new ReservedClass(), Unknown = new UnknownClass(), Bool = new BoolClass(), Null = new NullClass(), Text = new TextClass(), Int = new IntClass(), Nat = new NatClass(), Float32 = new FloatClass(32), Float64 = new FloatClass(64), Int8 = new FixedIntClass(8), Int16 = new FixedIntClass(16), Int32 = new FixedIntClass(32), Int64 = new FixedIntClass(64), Nat8 = new FixedNatClass(8), Nat16 = new FixedNatClass(16), Nat32 = new FixedNatClass(32), Nat64 = new FixedNatClass(64), Principal = new PrincipalClass();
function Tuple(...e) {
  return new TupleClass(e);
}
function Vec(e) {
  return new VecClass(e);
}
function Opt(e) {
  return new OptClass(e);
}
function Record(e) {
  return new RecordClass(e);
}
function Variant(e) {
  return new VariantClass(e);
}
function Rec() {
  return new RecClass();
}
function Func(e, n, o = []) {
  return new FuncClass(e, n, o);
}
function Service(e) {
  return new ServiceClass(e);
}
const IDL = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Visitor,
  Type,
  PrimitiveType,
  ConstructType,
  EmptyClass,
  UnknownClass,
  BoolClass,
  NullClass,
  ReservedClass,
  TextClass,
  IntClass,
  NatClass,
  FloatClass,
  FixedIntClass,
  FixedNatClass,
  VecClass,
  OptClass,
  RecordClass,
  TupleClass,
  VariantClass,
  RecClass,
  PrincipalClass,
  FuncClass,
  ServiceClass,
  encode: encode$1,
  decode: decode$1,
  Empty,
  Reserved,
  Unknown,
  Bool,
  Null,
  Text,
  Int,
  Nat,
  Float32,
  Float64,
  Int8,
  Int16,
  Int32,
  Int64,
  Nat8,
  Nat16,
  Nat32,
  Nat64,
  Principal,
  Tuple,
  Vec,
  Opt,
  Record,
  Variant,
  Rec,
  Func,
  Service
}, Symbol.toStringTag, { value: "Module" }));
function concat(...e) {
  const n = new Uint8Array(e.reduce((s, u) => s + u.byteLength, 0));
  let o = 0;
  for (const s of e)
    n.set(new Uint8Array(s), o), o += s.byteLength;
  return n.buffer;
}
function toHex(e) {
  return [...new Uint8Array(e)].map((n) => n.toString(16).padStart(2, "0")).join("");
}
const hexRe = new RegExp(/^([0-9A-F]{2})*$/i);
function fromHex(e) {
  if (!hexRe.test(e))
    throw new Error("Invalid hexadecimal string.");
  const n = [...e].reduce((o, s, u) => (o[u / 2 | 0] = (o[u / 2 | 0] || "") + s, o), []).map((o) => Number.parseInt(o, 16));
  return new Uint8Array(n).buffer;
}
function compare(e, n) {
  if (e.byteLength !== n.byteLength)
    return e.byteLength - n.byteLength;
  const o = new Uint8Array(e), s = new Uint8Array(n);
  for (let u = 0; u < o.length; u++)
    if (o[u] !== s[u])
      return o[u] - s[u];
  return 0;
}
function hash(e) {
  return sha256$1.exports.sha256.create().update(new Uint8Array(e)).arrayBuffer();
}
function hashValue(e) {
  if (e instanceof src$1.Tagged)
    return hashValue(e.value);
  if (typeof e == "string")
    return hashString(e);
  if (typeof e == "number")
    return hash(lebEncode(e));
  if (e instanceof ArrayBuffer || ArrayBuffer.isView(e))
    return hash(e);
  if (Array.isArray(e)) {
    const n = e.map(hashValue);
    return hash(concat(...n));
  } else {
    if (e && typeof e == "object" && e._isPrincipal)
      return hash(e.toUint8Array());
    if (typeof e == "object" && e !== null && typeof e.toHash == "function")
      return hashValue(e.toHash());
    if (typeof e == "bigint")
      return hash(lebEncode(e));
  }
  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${e}`), {
    value: e
  });
}
const hashString = (e) => {
  const n = new TextEncoder().encode(e);
  return hash(n);
};
function requestIdOf(e) {
  const s = Object.entries(e).filter(([, g]) => g !== void 0).map(([g, m]) => {
    const w = hashString(g), B = hashValue(m);
    return [w, B];
  }).sort(([g], [m]) => compare(g, m)), u = concat(...s.map((g) => concat(...g)));
  return hash(u);
}
globalThis && globalThis.__rest;
new TextEncoder().encode(`
ic-request`);
class AnonymousIdentity {
  getPrincipal() {
    return Principal$3.anonymous();
  }
  async transformRequest(n) {
    return Object.assign(Object.assign({}, n), { body: { content: n.body } });
  }
}
class PrincipalEncoder {
  get name() {
    return "Principal";
  }
  get priority() {
    return 0;
  }
  match(n) {
    return n && n._isPrincipal === !0;
  }
  encode(n) {
    return src.value.bytes(n.toUint8Array());
  }
}
class BufferEncoder {
  get name() {
    return "Buffer";
  }
  get priority() {
    return 1;
  }
  match(n) {
    return n instanceof ArrayBuffer || ArrayBuffer.isView(n);
  }
  encode(n) {
    return src.value.bytes(new Uint8Array(n));
  }
}
class BigIntEncoder {
  get name() {
    return "BigInt";
  }
  get priority() {
    return 1;
  }
  match(n) {
    return typeof n == "bigint";
  }
  encode(n) {
    return n > BigInt(0) ? src.value.tagged(2, src.value.bytes(fromHex(n.toString(16)))) : src.value.tagged(3, src.value.bytes(fromHex((BigInt("-1") * n).toString(16))));
  }
}
const serializer = src.SelfDescribeCborSerializer.withDefaultEncoders(!0);
serializer.addEncoder(new PrincipalEncoder());
serializer.addEncoder(new BufferEncoder());
serializer.addEncoder(new BigIntEncoder());
var CborTag;
(function(e) {
  e[e.Uint64LittleEndian = 71] = "Uint64LittleEndian", e[e.Semantic = 55799] = "Semantic";
})(CborTag || (CborTag = {}));
function encode(e) {
  return serializer.serialize(e);
}
function decodePositiveBigInt(e) {
  const n = e.byteLength;
  let o = BigInt(0);
  for (let s = 0; s < n; s++)
    o = o * BigInt(256) + BigInt(e[s]);
  return o;
}
class Uint8ArrayDecoder extends src$1.Decoder {
  createByteString(n) {
    return concat(...n);
  }
  createByteStringFromHeap(n, o) {
    return n === o ? new ArrayBuffer(0) : new Uint8Array(this._heap.slice(n, o));
  }
}
function decode(e) {
  const n = new Uint8Array(e);
  return new Uint8ArrayDecoder({
    size: n.byteLength,
    tags: {
      2: (s) => decodePositiveBigInt(s),
      3: (s) => -decodePositiveBigInt(s),
      [CborTag.Semantic]: (s) => s
    }
  }).decodeFirst(n);
}
var SubmitRequestType;
(function(e) {
  e.Call = "call";
})(SubmitRequestType || (SubmitRequestType = {}));
function makeNonce() {
  const e = new ArrayBuffer(16), n = new DataView(e), o = BigInt(+Date.now()), s = Math.floor(Math.random() * 4294967295), u = Math.floor(Math.random() * 4294967295);
  if (typeof n.setBigUint64 == "function")
    n.setBigUint64(0, o);
  else {
    const d = BigInt(1) << BigInt(32);
    n.setUint32(0, Number(o >> BigInt(32))), n.setUint32(4, Number(o % d));
  }
  return n.setUint32(8, s), n.setUint32(12, u), e;
}
const NANOSECONDS_PER_MILLISECONDS = BigInt(1e6), REPLICA_PERMITTED_DRIFT_MILLISECONDS = BigInt(60 * 1e3);
class Expiry {
  constructor(n) {
    this._value = (BigInt(Date.now()) + BigInt(n) - REPLICA_PERMITTED_DRIFT_MILLISECONDS) * NANOSECONDS_PER_MILLISECONDS;
  }
  toCBOR() {
    return src.value.u64(this._value.toString(16), 16);
  }
  toHash() {
    return lebEncode(this._value);
  }
}
function makeNonceTransform(e = makeNonce) {
  return async (n) => {
    n.endpoint === "call" && (n.body.nonce = e());
  };
}
var RequestStatusResponseStatus;
(function(e) {
  e.Received = "received", e.Processing = "processing", e.Replied = "replied", e.Rejected = "rejected", e.Unknown = "unknown", e.Done = "done";
})(RequestStatusResponseStatus || (RequestStatusResponseStatus = {}));
const DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1e3, IC_ROOT_KEY = "308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d9685f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484b01291091c5f87b98883463f98091a0baaae", IC0_DOMAIN = "ic0.app", IC0_SUB_DOMAIN = ".ic0.app";
class HttpDefaultFetchError extends AgentError {
  constructor(n) {
    super(n), this.message = n;
  }
}
class IdentityInvalidError extends AgentError {
  constructor(n) {
    super(n), this.message = n;
  }
}
function getDefaultFetch() {
  let e;
  if (typeof window < "u")
    if (window.fetch)
      e = window.fetch.bind(window);
    else
      throw new HttpDefaultFetchError("Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.");
  else if (typeof global < "u")
    if (global.fetch)
      e = global.fetch.bind(global);
    else
      throw new HttpDefaultFetchError("Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.");
  else
    typeof self < "u" && self.fetch && (e = self.fetch.bind(self));
  if (e)
    return e;
  throw new HttpDefaultFetchError("Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.");
}
class HttpAgent {
  constructor(n = {}) {
    if (this.rootKey = fromHex(IC_ROOT_KEY), this._pipeline = [], this._timeDiffMsecs = 0, this._rootKeyFetched = !1, this._retryTimes = 3, this._isAgent = !0, n.source) {
      if (!(n.source instanceof HttpAgent))
        throw new Error("An Agent's source can only be another HttpAgent");
      this._pipeline = [...n.source._pipeline], this._identity = n.source._identity, this._fetch = n.source._fetch, this._host = n.source._host, this._credentials = n.source._credentials;
    } else
      this._fetch = n.fetch || getDefaultFetch() || fetch.bind(global);
    if (n.host !== void 0)
      !n.host.match(/^[a-z]+:/) && typeof window < "u" ? this._host = new URL(window.location.protocol + "//" + n.host) : this._host = new URL(n.host);
    else if (n.source !== void 0)
      this._host = n.source._host;
    else {
      const o = typeof window < "u" ? window.location : void 0;
      if (!o)
        throw new Error("Must specify a host to connect to.");
      this._host = new URL(o + "");
    }
    if (n.retryTimes !== void 0 && (this._retryTimes = n.retryTimes), this._host.hostname.endsWith(IC0_SUB_DOMAIN) && (this._host.hostname = IC0_DOMAIN), n.credentials) {
      const { name: o, password: s } = n.credentials;
      this._credentials = `${o}${s ? ":" + s : ""}`;
    }
    this._identity = Promise.resolve(n.identity || new AnonymousIdentity()), n.disableNonce || this.addTransform(makeNonceTransform(makeNonce));
  }
  isLocal() {
    const n = this._host.hostname;
    return n === "127.0.0.1" || n.endsWith("localhost");
  }
  addTransform(n, o = n.priority || 0) {
    const s = this._pipeline.findIndex((u) => (u.priority || 0) < o);
    this._pipeline.splice(s >= 0 ? s : this._pipeline.length, 0, Object.assign(n, { priority: o }));
  }
  async getPrincipal() {
    if (!this._identity)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    return (await this._identity).getPrincipal();
  }
  async call(n, o, s) {
    const u = await (s !== void 0 ? await s : await this._identity);
    if (!u)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const d = Principal$3.from(n), g = o.effectiveCanisterId ? Principal$3.from(o.effectiveCanisterId) : d, m = u.getPrincipal() || Principal$3.anonymous();
    let w = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS);
    Math.abs(this._timeDiffMsecs) > 1e3 * 30 && (w = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS + this._timeDiffMsecs));
    const B = {
      request_type: SubmitRequestType.Call,
      canister_id: d,
      method_name: o.methodName,
      arg: o.arg,
      sender: m,
      ingress_expiry: w
    };
    let x = await this._transform({
      request: {
        body: null,
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "call",
      body: B
    });
    x = await u.transformRequest(x);
    const C = encode(x.body), v = this._requestAndRetry(() => this._fetch("" + new URL(`/api/v2/canister/${g.toText()}/call`, this._host), Object.assign(Object.assign({}, x.request), { body: C }))), [y, T] = await Promise.all([v, requestIdOf(B)]);
    return {
      requestId: T,
      response: {
        ok: y.ok,
        status: y.status,
        statusText: y.statusText
      }
    };
  }
  async _requestAndRetry(n, o = 0) {
    if (o > this._retryTimes && this._retryTimes !== 0)
      throw new Error(`AgentError: Exceeded configured limit of ${this._retryTimes} retry attempts. Please check your network connection or try again in a few moments`);
    const s = await n();
    if (!s.ok) {
      const u = await s.clone().text(), d = `Server returned an error:
  Code: ${s.status} (${s.statusText})
  Body: ${u}
`;
      if (this._retryTimes > o)
        return console.warn(d + "  Retrying request."), await this._requestAndRetry(n, o + 1);
      throw new Error(d);
    }
    return s;
  }
  async query(n, o, s) {
    const u = await (s !== void 0 ? await s : await this._identity);
    if (!u)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const d = typeof n == "string" ? Principal$3.fromText(n) : n, g = (u == null ? void 0 : u.getPrincipal()) || Principal$3.anonymous(), m = {
      request_type: "query",
      canister_id: d,
      method_name: o.methodName,
      arg: o.arg,
      sender: g,
      ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
    };
    let w = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read",
      body: m
    });
    w = await (u == null ? void 0 : u.transformRequest(w));
    const B = encode(w.body), x = await this._requestAndRetry(() => this._fetch("" + new URL(`/api/v2/canister/${d.toText()}/query`, this._host), Object.assign(Object.assign({}, w.request), { body: B })));
    return decode(await x.arrayBuffer());
  }
  async createReadStateRequest(n, o) {
    const s = await (o !== void 0 ? await o : await this._identity);
    if (!s)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const u = (s == null ? void 0 : s.getPrincipal()) || Principal$3.anonymous(), d = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read_state",
      body: {
        request_type: "read_state",
        paths: n.paths,
        sender: u,
        ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
      }
    });
    return s == null ? void 0 : s.transformRequest(d);
  }
  async readState(n, o, s, u) {
    const d = typeof n == "string" ? Principal$3.fromText(n) : n, g = u != null ? u : await this.createReadStateRequest(o, s), m = encode(g.body), w = await this._fetch("" + new URL(`/api/v2/canister/${d}/read_state`, this._host), Object.assign(Object.assign({}, g.request), { body: m }));
    if (!w.ok)
      throw new Error(`Server returned an error:
  Code: ${w.status} (${w.statusText})
  Body: ${await w.text()}
`);
    return decode(await w.arrayBuffer());
  }
  async syncTime(n) {
    const o = await import("./index.7313305d.js"), s = Date.now();
    try {
      n || console.log("Syncing time with the IC. No canisterId provided, so falling back to ryjl3-tyaaa-aaaaa-aaaba-cai");
      const d = (await o.request({
        canisterId: n != null ? n : Principal$3.from("ryjl3-tyaaa-aaaaa-aaaba-cai"),
        agent: this,
        paths: ["time"]
      })).get("time");
      d && (this._timeDiffMsecs = Number(d) - Number(s));
    } catch (u) {
      console.error("Caught exception while attempting to sync time:", u);
    }
  }
  async status() {
    const n = this._credentials ? {
      Authorization: "Basic " + btoa(this._credentials)
    } : {}, o = await this._requestAndRetry(() => this._fetch("" + new URL("/api/v2/status", this._host), { headers: n }));
    return decode(await o.arrayBuffer());
  }
  async fetchRootKey() {
    return this._rootKeyFetched || (this.rootKey = (await this.status()).root_key, this._rootKeyFetched = !0), this.rootKey;
  }
  invalidateIdentity() {
    this._identity = null;
  }
  replaceIdentity(n) {
    this._identity = Promise.resolve(n);
  }
  _transform(n) {
    let o = Promise.resolve(n);
    for (const s of this._pipeline)
      o = o.then((u) => s(u).then((d) => d || u));
    return o;
  }
}
var ProxyMessageKind;
(function(e) {
  e.Error = "err", e.GetPrincipal = "gp", e.GetPrincipalResponse = "gpr", e.Query = "q", e.QueryResponse = "qr", e.Call = "c", e.CallResponse = "cr", e.ReadState = "rs", e.ReadStateResponse = "rsr", e.Status = "s", e.StatusResponse = "sr";
})(ProxyMessageKind || (ProxyMessageKind = {}));
function getDefaultAgent() {
  const e = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.ic.agent : global.ic.agent : window.ic.agent;
  if (!e)
    throw new Error("No Agent could be found.");
  return e;
}
const managementCanisterIdl = ({ IDL: e }) => {
  const n = e.Principal, o = e.Record({
    controllers: e.Vec(e.Principal),
    freezing_threshold: e.Nat,
    memory_allocation: e.Nat,
    compute_allocation: e.Nat
  }), s = e.Record({
    controllers: e.Opt(e.Vec(e.Principal)),
    freezing_threshold: e.Opt(e.Nat),
    memory_allocation: e.Opt(e.Nat),
    compute_allocation: e.Opt(e.Nat)
  }), u = e.Vec(e.Nat8);
  return e.Service({
    canister_status: e.Func([e.Record({ canister_id: n })], [
      e.Record({
        status: e.Variant({
          stopped: e.Null,
          stopping: e.Null,
          running: e.Null
        }),
        memory_size: e.Nat,
        cycles: e.Nat,
        settings: o,
        module_hash: e.Opt(e.Vec(e.Nat8))
      })
    ], []),
    create_canister: e.Func([e.Record({ settings: e.Opt(s) })], [e.Record({ canister_id: n })], []),
    delete_canister: e.Func([e.Record({ canister_id: n })], [], []),
    deposit_cycles: e.Func([e.Record({ canister_id: n })], [], []),
    install_code: e.Func([
      e.Record({
        arg: e.Vec(e.Nat8),
        wasm_module: u,
        mode: e.Variant({
          reinstall: e.Null,
          upgrade: e.Null,
          install: e.Null
        }),
        canister_id: n
      })
    ], [], []),
    provisional_create_canister_with_cycles: e.Func([
      e.Record({
        settings: e.Opt(s),
        amount: e.Opt(e.Nat)
      })
    ], [e.Record({ canister_id: n })], []),
    provisional_top_up_canister: e.Func([e.Record({ canister_id: n, amount: e.Nat })], [], []),
    raw_rand: e.Func([], [e.Vec(e.Nat8)], []),
    start_canister: e.Func([e.Record({ canister_id: n })], [], []),
    stop_canister: e.Func([e.Record({ canister_id: n })], [], []),
    uninstall_code: e.Func([e.Record({ canister_id: n })], [], []),
    update_settings: e.Func([
      e.Record({
        canister_id: e.Principal,
        settings: s
      })
    ], [], [])
  });
};
function getManagementCanister(e) {
  function n(o, s, u) {
    const d = s[0];
    let g = Principal$3.fromHex("");
    return d && typeof d == "object" && d.canister_id && (g = Principal$3.from(d.canister_id)), { effectiveCanisterId: g };
  }
  return Actor.createActor(managementCanisterIdl, Object.assign(Object.assign(Object.assign({}, e), { canisterId: Principal$3.fromHex("") }), {
    callTransform: n,
    queryTransform: n
  }));
}
const wasmBytesBase64 = "";
let wasm;
const wasmBytes = decode$2(wasmBytesBase64);
function bls_init() {
  return wasm.bls_init();
}
let cachegetUint8Memory0 = null;
function getUint8Memory0() {
  return (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) && (cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer)), cachegetUint8Memory0;
}
function passArray8ToWasm0(e, n) {
  const o = n(e.length * 1);
  return getUint8Memory0().set(e, o / 1), [o, e.length];
}
function bls_verify(e, n, o) {
  const [s, u] = passArray8ToWasm0(e, wasm.__wbindgen_malloc), [d, g] = passArray8ToWasm0(n, wasm.__wbindgen_malloc), [m, w] = passArray8ToWasm0(o, wasm.__wbindgen_malloc);
  return wasm.bls_verify(s, u, d, g, m, w);
}
async function load(e, n) {
  if (typeof Response == "function" && e instanceof Response) {
    const o = await e.arrayBuffer();
    return await WebAssembly.instantiate(o, n);
  } else {
    const o = await WebAssembly.instantiate(e, n);
    return o instanceof WebAssembly.Instance ? { instance: o, module: e } : o;
  }
}
async function init() {
  const e = {}, { instance: n, module: o } = await load(wasmBytes, e);
  return wasm = n.exports, init.__wbindgen_wasm_module = o, wasm;
}
let verify;
async function blsVerify(e, n, o) {
  if (!verify) {
    if (await init(), bls_init() !== 0)
      throw new Error("Cannot initialize BLS");
    verify = (s, u, d) => bls_verify(u, d, s) === 0;
  }
  return verify(e, n, o);
}
class CertificateVerificationError extends AgentError {
  constructor(n) {
    super(`Invalid certificate: ${n}`);
  }
}
function isBufferEqual(e, n) {
  if (e.byteLength !== n.byteLength)
    return !1;
  const o = new Uint8Array(e), s = new Uint8Array(n);
  for (let u = 0; u < o.length; u++)
    if (o[u] !== s[u])
      return !1;
  return !0;
}
class Certificate {
  constructor(n, o, s, u) {
    this._rootKey = o, this._canisterId = s, this._blsVerify = u, this.cert = decode(new Uint8Array(n));
  }
  static async create(n) {
    let o = n.blsVerify;
    o || (o = blsVerify);
    const s = new Certificate(n.certificate, n.rootKey, n.canisterId, o);
    return await s.verify(), s;
  }
  lookup(n) {
    return lookup_path(n, this.cert.tree);
  }
  async verify() {
    const n = await reconstruct(this.cert.tree), o = await this._checkDelegationAndGetKey(this.cert.delegation), s = this.cert.signature, u = extractDER(o), d = concat(domain_sep("ic-state-root"), n);
    let g = !1;
    try {
      g = await this._blsVerify(new Uint8Array(u), new Uint8Array(s), new Uint8Array(d));
    } catch {
      g = !1;
    }
    if (!g)
      throw new CertificateVerificationError("Signature verification failed");
  }
  async _checkDelegationAndGetKey(n) {
    if (!n)
      return this._rootKey;
    const o = await Certificate.create({
      certificate: n.certificate,
      rootKey: this._rootKey,
      canisterId: this._canisterId
    }), s = o.lookup(["subnet", n.subnet_id, "canister_ranges"]);
    if (!s)
      throw new CertificateVerificationError(`Could not find canister ranges for subnet 0x${toHex(n.subnet_id)}`);
    if (!decode(s).map((w) => [
      Principal$3.fromUint8Array(w[0]),
      Principal$3.fromUint8Array(w[1])
    ]).some((w) => w[0].ltEq(this._canisterId) && w[1].gtEq(this._canisterId)))
      throw new CertificateVerificationError(`Canister ${this._canisterId} not in range of delegations for subnet 0x${toHex(n.subnet_id)}`);
    const m = o.lookup(["subnet", n.subnet_id, "public_key"]);
    if (!m)
      throw new Error(`Could not find subnet key for subnet 0x${toHex(n.subnet_id)}`);
    return m;
  }
}
const DER_PREFIX = fromHex("308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100"), KEY_LENGTH = 96;
function extractDER(e) {
  const n = DER_PREFIX.byteLength + KEY_LENGTH;
  if (e.byteLength !== n)
    throw new TypeError(`BLS DER-encoded public key must be ${n} bytes long`);
  const o = e.slice(0, DER_PREFIX.byteLength);
  if (!isBufferEqual(o, DER_PREFIX))
    throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${o}`);
  return e.slice(DER_PREFIX.byteLength);
}
async function reconstruct(e) {
  switch (e[0]) {
    case 0:
      return hash(domain_sep("ic-hashtree-empty"));
    case 4:
      return e[1];
    case 3:
      return hash(concat(domain_sep("ic-hashtree-leaf"), e[1]));
    case 2:
      return hash(concat(domain_sep("ic-hashtree-labeled"), e[1], await reconstruct(e[2])));
    case 1:
      return hash(concat(domain_sep("ic-hashtree-fork"), await reconstruct(e[1]), await reconstruct(e[2])));
    default:
      throw new Error("unreachable");
  }
}
function domain_sep(e) {
  const n = new Uint8Array([e.length]), o = new TextEncoder().encode(e);
  return concat(n, o);
}
function lookup_path(e, n) {
  if (e.length === 0)
    switch (n[0]) {
      case 3:
        return new Uint8Array(n[1]).buffer;
      default:
        return;
    }
  const o = typeof e[0] == "string" ? new TextEncoder().encode(e[0]) : e[0], s = find_label(o, flatten_forks(n));
  if (s)
    return lookup_path(e.slice(1), s);
}
function flatten_forks(e) {
  switch (e[0]) {
    case 0:
      return [];
    case 1:
      return flatten_forks(e[1]).concat(flatten_forks(e[2]));
    default:
      return [e];
  }
}
function find_label(e, n) {
  if (n.length !== 0) {
    for (const o of n)
      if (o[0] === 2) {
        const s = o[1];
        if (isBufferEqual(e, s))
          return o[2];
      }
  }
}
const FIVE_MINUTES_IN_MSEC = 5 * 60 * 1e3;
function defaultStrategy() {
  return chain(conditionalDelay(once$1(), 1e3), backoff(1e3, 1.2), timeout$1(FIVE_MINUTES_IN_MSEC));
}
function once$1() {
  let e = !0;
  return async () => e ? (e = !1, !0) : !1;
}
function conditionalDelay(e, n) {
  return async (o, s, u) => {
    if (await e(o, s, u))
      return new Promise((d) => setTimeout(d, n));
  };
}
function timeout$1(e) {
  const n = Date.now() + e;
  return async (o, s, u) => {
    if (Date.now() > n)
      throw new Error(`Request timed out after ${e} msec:
  Request ID: ${toHex(s)}
  Request status: ${u}
`);
  };
}
function backoff(e, n) {
  let o = e;
  return () => new Promise((s) => setTimeout(() => {
    o *= n, s();
  }, o));
}
function chain(...e) {
  return async (n, o, s) => {
    for (const u of e)
      await u(n, o, s);
  };
}
async function pollForResponse(e, n, o, s, u, d) {
  var g;
  const m = [new TextEncoder().encode("request_status"), o], w = u != null ? u : await ((g = e.createReadStateRequest) === null || g === void 0 ? void 0 : g.call(e, { paths: [m] })), B = await e.readState(n, { paths: [m] }, void 0, w);
  if (e.rootKey == null)
    throw new Error("Agent root key not initialized before polling");
  const x = await Certificate.create({
    certificate: B.certificate,
    rootKey: e.rootKey,
    canisterId: n,
    blsVerify: d
  }), C = x.lookup([...m, new TextEncoder().encode("status")]);
  let v;
  switch (typeof C > "u" ? v = RequestStatusResponseStatus.Unknown : v = new TextDecoder().decode(C), v) {
    case RequestStatusResponseStatus.Replied:
      return x.lookup([...m, "reply"]);
    case RequestStatusResponseStatus.Received:
    case RequestStatusResponseStatus.Unknown:
    case RequestStatusResponseStatus.Processing:
      return await s(n, o, v), pollForResponse(e, n, o, s, w);
    case RequestStatusResponseStatus.Rejected: {
      const y = new Uint8Array(x.lookup([...m, "reject_code"]))[0], T = new TextDecoder().decode(x.lookup([...m, "reject_message"]));
      throw new Error(`Call was rejected:
  Request ID: ${toHex(o)}
  Reject code: ${y}
  Reject text: ${T}
`);
    }
    case RequestStatusResponseStatus.Done:
      throw new Error(`Call was marked as done but we never saw the reply:
  Request ID: ${toHex(o)}
`);
  }
  throw new Error("unreachable");
}
class ActorCallError extends AgentError {
  constructor(n, o, s, u) {
    super([
      "Call failed:",
      `  Canister: ${n.toText()}`,
      `  Method: ${o} (${s})`,
      ...Object.getOwnPropertyNames(u).map((d) => `  "${d}": ${JSON.stringify(u[d])}`)
    ].join(`
`)), this.canisterId = n, this.methodName = o, this.type = s, this.props = u;
  }
}
class QueryCallRejectedError extends ActorCallError {
  constructor(n, o, s) {
    var u;
    super(n, o, "query", {
      Status: s.status,
      Code: (u = ReplicaRejectCode[s.reject_code]) !== null && u !== void 0 ? u : `Unknown Code "${s.reject_code}"`,
      Message: s.reject_message
    }), this.result = s;
  }
}
class UpdateCallRejectedError extends ActorCallError {
  constructor(n, o, s, u) {
    super(n, o, "update", {
      "Request ID": toHex(s),
      "HTTP status code": u.status.toString(),
      "HTTP status text": u.statusText
    }), this.requestId = s, this.response = u;
  }
}
var CanisterInstallMode;
(function(e) {
  e.Install = "install", e.Reinstall = "reinstall", e.Upgrade = "upgrade";
})(CanisterInstallMode || (CanisterInstallMode = {}));
const metadataSymbol = Symbol.for("ic-agent-metadata");
class Actor {
  constructor(n) {
    this[metadataSymbol] = Object.freeze(n);
  }
  static agentOf(n) {
    return n[metadataSymbol].config.agent;
  }
  static interfaceOf(n) {
    return n[metadataSymbol].service;
  }
  static canisterIdOf(n) {
    return Principal$3.from(n[metadataSymbol].config.canisterId);
  }
  static async install(n, o) {
    const s = n.mode === void 0 ? CanisterInstallMode.Install : n.mode, u = n.arg ? [...new Uint8Array(n.arg)] : [], d = [...new Uint8Array(n.module)], g = typeof o.canisterId == "string" ? Principal$3.fromText(o.canisterId) : o.canisterId;
    await getManagementCanister(o).install_code({
      mode: { [s]: null },
      arg: u,
      wasm_module: d,
      canister_id: g
    });
  }
  static async createCanister(n) {
    const { canister_id: o } = await getManagementCanister(n || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
    return o;
  }
  static async createAndInstallCanister(n, o, s) {
    const u = await this.createCanister(s);
    return await this.install(Object.assign({}, o), Object.assign(Object.assign({}, s), { canisterId: u })), this.createActor(n, Object.assign(Object.assign({}, s), { canisterId: u }));
  }
  static createActorClass(n) {
    const o = n({ IDL });
    class s extends Actor {
      constructor(d) {
        const g = typeof d.canisterId == "string" ? Principal$3.fromText(d.canisterId) : d.canisterId;
        super({
          config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), d), { canisterId: g }),
          service: o
        });
        for (const [m, w] of o._fields)
          this[m] = _createActorMethod(this, m, w, d.blsVerify);
      }
    }
    return s;
  }
  static createActor(n, o) {
    return new (this.createActorClass(n))(o);
  }
}
function decodeReturnValue(e, n) {
  const o = decode$1(e, buffer$1.Buffer.from(n));
  switch (o.length) {
    case 0:
      return;
    case 1:
      return o[0];
    default:
      return o;
  }
}
const DEFAULT_ACTOR_CONFIG = {
  pollingStrategyFactory: defaultStrategy
};
function _createActorMethod(e, n, o, s) {
  let u;
  o.annotations.includes("query") ? u = async (g, ...m) => {
    var w, B;
    g = Object.assign(Object.assign({}, g), (B = (w = e[metadataSymbol].config).queryTransform) === null || B === void 0 ? void 0 : B.call(w, n, m, Object.assign(Object.assign({}, e[metadataSymbol].config), g)));
    const x = g.agent || e[metadataSymbol].config.agent || getDefaultAgent(), C = Principal$3.from(g.canisterId || e[metadataSymbol].config.canisterId), v = encode$1(o.argTypes, m), y = await x.query(C, { methodName: n, arg: v });
    switch (y.status) {
      case "rejected":
        throw new QueryCallRejectedError(C, n, y);
      case "replied":
        return decodeReturnValue(o.retTypes, y.reply.arg);
    }
  } : u = async (g, ...m) => {
    var w, B;
    g = Object.assign(Object.assign({}, g), (B = (w = e[metadataSymbol].config).callTransform) === null || B === void 0 ? void 0 : B.call(w, n, m, Object.assign(Object.assign({}, e[metadataSymbol].config), g)));
    const x = g.agent || e[metadataSymbol].config.agent || getDefaultAgent(), { canisterId: C, effectiveCanisterId: v, pollingStrategyFactory: y } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), e[metadataSymbol].config), g), T = Principal$3.from(C), M = v !== void 0 ? Principal$3.from(v) : T, D = encode$1(o.argTypes, m), { requestId: V, response: O } = await x.call(T, {
      methodName: n,
      arg: D,
      effectiveCanisterId: M
    });
    if (!O.ok)
      throw new UpdateCallRejectedError(T, n, V, O);
    const H = y(), q = await pollForResponse(x, M, V, H, s);
    if (q !== void 0)
      return decodeReturnValue(o.retTypes, q);
    if (o.retTypes.length === 0)
      return;
    throw new Error(`Call was returned undefined, but type [${o.retTypes.join(",")}].`);
  };
  const d = (...g) => u({}, ...g);
  return d.withOptions = (g) => (...m) => u(g, ...m), d;
}
const idlFactory = ({ IDL: e }) => {
  const n = e.Record({
    token_id: e.Int,
    name: e.Text,
    canister_id: e.Principal
  }), o = e.Record({
    id: e.Text,
    host_escrow: e.Vec(n),
    host_data: e.Vec(n),
    fulfilled: e.Bool,
    host: e.Principal,
    guest_data: e.Vec(n),
    host_accept: e.Bool,
    guest_escrow: e.Vec(n),
    guest: e.Principal,
    guest_accept: e.Bool
  });
  return e.Service({
    accept: e.Func([e.Text], [o], []),
    add_item_to_escrow: e.Func([e.Text, n], [o], []),
    add_item_to_trade: e.Func([e.Text, n], [o], []),
    cancel: e.Func([e.Text], [o], []),
    create_trade: e.Func([], [o], []),
    delete_trade: e.Func([e.Text], [o], []),
    get_all_trades: e.Func([], [e.Vec(o)], ["query"]),
    get_escrow_items: e.Func([e.Text], [e.Vec(n)], ["query"]),
    get_escrow_items_self: e.Func([e.Text], [e.Vec(n)], ["query"]),
    get_trade_by_id: e.Func([e.Text], [e.Opt(o)], ["query"]),
    join_trade: e.Func([e.Text], [o], []),
    leave_trade: e.Func([e.Text], [o], []),
    remove_item_from_escrow: e.Func([e.Text, n], [o], []),
    remove_item_from_trade: e.Func([e.Text, n], [o], []),
    withdraw_from_escrow: e.Func([e.Text, n], [n], [])
  });
}, canister_id$1 = "rrkah-fqaaa-aaaaa-aaaaq-cai", createActor = (e, n = {}) => {
  const o = n.agent || new HttpAgent({ ...n.agentOptions });
  return n.agent && n.agentOptions && console.warn(
    "Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."
  ), o.fetchRootKey().catch((s) => {
    console.warn(
      "Unable to fetch root key. Check to ensure that your local replica is running"
    ), console.error(s);
  }), Actor.createActor(idlFactory, {
    agent: o,
    canisterId: e,
    ...n.actorOptions
  });
}, trade_canister = createActor(canister_id$1, {
  agentOptions: {
    host: "http://127.0.0.1:4943"
  }
});
var stylis_min = { exports: {} };
(function(e, n) {
  (function(o) {
    e.exports = o(null);
  })(function o(s) {
    var u = /^\0+/g, d = /[\0\r\f]/g, g = /: */g, m = /zoo|gra/, w = /([,: ])(transform)/g, B = /,+\s*(?![^(]*[)])/g, x = / +\s*(?![^(]*[)])/g, C = / *[\0] */g, v = /,\r+?/g, y = /([\t\r\n ])*\f?&/g, T = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g, M = /\W+/g, D = /@(k\w+)\s*(\S*)\s*/, V = /::(place)/g, O = /:(read-only)/g, H = /\s+(?=[{\];=:>])/g, q = /([[}=:>])\s+/g, $ = /(\{[^{]+?);(?=\})/g, re = /\s{2,}/g, ce = /([^\(])(:+) */g, Ie = /[svh]\w+-[tblr]{2}/, Pe = /\(\s*(.*)\s*\)/g, se = /([\s\S]*?);/g, Ce = /-self|flex-/g, Ge = /[^]*?(:[rp][el]a[\w-]+)[^]*/, $e = /stretch|:\s*\w+\-(?:conte|avail)/, Be = /([^-])(image-set\()/, Me = "-webkit-", We = "-moz-", nt = "-ms-", Xe = 59, Je = 125, qe = 123, ye = 40, Ue = 41, ze = 91, X = 93, ut = 10, ot = 13, mt = 9, ve = 64, je = 32, ie = 38, ae = 45, z = 95, be = 42, fe = 44, J = 58, R = 39, Q = 34, b = 47, U = 62, Z = 43, ne = 126, le = 0, Ne = 12, Ke = 11, Ze = 107, et = 109, Y = 115, k = 112, F = 111, ue = 105, Qe = 99, Oe = 100, Ve = 112, It = 1, vt = 1, Qt = 0, Ct = 1, Rt = 1, or = 1, tn = 0, ur = 0, Vr = 0, zr = [], $r = [], jr = 0, dn = null, vn = -2, ti = -1, Fn = 0, Yr = 1, rn = 2, Zr = 3, hn = 0, Cn = 1, In = "", xn = "", ke = "";
    function st(nr, Jt, _e, St, tt) {
      for (var Vt, L, te = 0, de = 0, Ee = 0, ge = 0, rt = 0, ht = 0, lt = 0, Ft = 0, Wt = 0, Gt = 0, Xt = 0, Sr = 0, Fr = 0, Pr = 0, $t = 0, Lt = 0, Tr = 0, mr = 0, ar = 0, Gr = _e.length, Xr = Gr - 1, _r = "", Kt = "", vr = "", Wr = "", _n = "", ci = ""; $t < Gr; ) {
        if (lt = _e.charCodeAt($t), $t === Xr && de + ge + Ee + te !== 0 && (de !== 0 && (lt = de === b ? ut : b), ge = Ee = te = 0, Gr++, Xr++), de + ge + Ee + te === 0) {
          if ($t === Xr && (Lt > 0 && (Kt = Kt.replace(d, "")), Kt.trim().length > 0)) {
            switch (lt) {
              case je:
              case mt:
              case Xe:
              case ot:
              case ut:
                break;
              default:
                Kt += _e.charAt($t);
            }
            lt = Xe;
          }
          if (Tr === 1)
            switch (lt) {
              case qe:
              case Je:
              case Xe:
              case Q:
              case R:
              case ye:
              case Ue:
              case fe:
                Tr = 0;
              case mt:
              case ot:
              case ut:
              case je:
                break;
              default:
                for (Tr = 0, ar = $t, rt = lt, $t--, lt = Xe; ar < Gr; )
                  switch (_e.charCodeAt(ar++)) {
                    case ut:
                    case ot:
                    case Xe:
                      ++$t, lt = rt, ar = Gr;
                      break;
                    case J:
                      Lt > 0 && (++$t, lt = rt);
                    case qe:
                      ar = Gr;
                  }
            }
          switch (lt) {
            case qe:
              for (rt = (Kt = Kt.trim()).charCodeAt(0), Xt = 1, ar = ++$t; $t < Gr; ) {
                switch (lt = _e.charCodeAt($t)) {
                  case qe:
                    Xt++;
                    break;
                  case Je:
                    Xt--;
                    break;
                  case b:
                    switch (ht = _e.charCodeAt($t + 1)) {
                      case be:
                      case b:
                        $t = Mr(ht, $t, Xr, _e);
                    }
                    break;
                  case ze:
                    lt++;
                  case ye:
                    lt++;
                  case Q:
                  case R:
                    for (; $t++ < Xr && _e.charCodeAt($t) !== lt; )
                      ;
                }
                if (Xt === 0)
                  break;
                $t++;
              }
              switch (vr = _e.substring(ar, $t), rt === le && (rt = (Kt = Kt.replace(u, "").trim()).charCodeAt(0)), rt) {
                case ve:
                  switch (Lt > 0 && (Kt = Kt.replace(d, "")), ht = Kt.charCodeAt(1)) {
                    case Oe:
                    case et:
                    case Y:
                    case ae:
                      Vt = Jt;
                      break;
                    default:
                      Vt = zr;
                  }
                  if (ar = (vr = st(Jt, Vt, vr, ht, tt + 1)).length, Vr > 0 && ar === 0 && (ar = Kt.length), jr > 0 && (Vt = Pt(zr, Kt, mr), L = yr(Zr, vr, Vt, Jt, vt, It, ar, ht, tt, St), Kt = Vt.join(""), L !== void 0 && (ar = (vr = L.trim()).length) === 0 && (ht = 0, vr = "")), ar > 0)
                    switch (ht) {
                      case Y:
                        Kt = Kt.replace(Pe, br);
                      case Oe:
                      case et:
                      case ae:
                        vr = Kt + "{" + vr + "}";
                        break;
                      case Ze:
                        vr = (Kt = Kt.replace(D, "$1 $2" + (Cn > 0 ? In : ""))) + "{" + vr + "}", Rt === 1 || Rt === 2 && Qr("@" + vr, 3) ? vr = "@" + Me + vr + "@" + vr : vr = "@" + vr;
                        break;
                      default:
                        vr = Kt + vr, St === Ve && (Wr += vr, vr = "");
                    }
                  else
                    vr = "";
                  break;
                default:
                  vr = st(Jt, Pt(Jt, Kt, mr), vr, St, tt + 1);
              }
              _n += vr, Sr = 0, Tr = 0, Pr = 0, Lt = 0, mr = 0, Fr = 0, Kt = "", vr = "", lt = _e.charCodeAt(++$t);
              break;
            case Je:
            case Xe:
              if ((ar = (Kt = (Lt > 0 ? Kt.replace(d, "") : Kt).trim()).length) > 1)
                switch (Pr === 0 && ((rt = Kt.charCodeAt(0)) === ae || rt > 96 && rt < 123) && (ar = (Kt = Kt.replace(" ", ":")).length), jr > 0 && (L = yr(Yr, Kt, Jt, nr, vt, It, Wr.length, St, tt, St)) !== void 0 && (ar = (Kt = L.trim()).length) === 0 && (Kt = "\0\0"), rt = Kt.charCodeAt(0), ht = Kt.charCodeAt(1), rt) {
                  case le:
                    break;
                  case ve:
                    if (ht === ue || ht === Qe) {
                      ci += Kt + _e.charAt($t);
                      break;
                    }
                  default:
                    if (Kt.charCodeAt(ar - 1) === J)
                      break;
                    Wr += wr(Kt, rt, ht, Kt.charCodeAt(2));
                }
              Sr = 0, Tr = 0, Pr = 0, Lt = 0, mr = 0, Kt = "", lt = _e.charCodeAt(++$t);
          }
        }
        switch (lt) {
          case ot:
          case ut:
            if (de + ge + Ee + te + ur === 0)
              switch (Gt) {
                case Ue:
                case R:
                case Q:
                case ve:
                case ne:
                case U:
                case be:
                case Z:
                case b:
                case ae:
                case J:
                case fe:
                case Xe:
                case qe:
                case Je:
                  break;
                default:
                  Pr > 0 && (Tr = 1);
              }
            de === b ? de = 0 : Ct + Sr === 0 && St !== Ze && Kt.length > 0 && (Lt = 1, Kt += "\0"), jr * hn > 0 && yr(Fn, Kt, Jt, nr, vt, It, Wr.length, St, tt, St), It = 1, vt++;
            break;
          case Xe:
          case Je:
            if (de + ge + Ee + te === 0) {
              It++;
              break;
            }
          default:
            switch (It++, _r = _e.charAt($t), lt) {
              case mt:
              case je:
                if (ge + te + de === 0)
                  switch (Ft) {
                    case fe:
                    case J:
                    case mt:
                    case je:
                      _r = "";
                      break;
                    default:
                      lt !== je && (_r = " ");
                  }
                break;
              case le:
                _r = "\\0";
                break;
              case Ne:
                _r = "\\f";
                break;
              case Ke:
                _r = "\\v";
                break;
              case ie:
                ge + de + te === 0 && Ct > 0 && (mr = 1, Lt = 1, _r = "\f" + _r);
                break;
              case 108:
                if (ge + de + te + Qt === 0 && Pr > 0)
                  switch ($t - Pr) {
                    case 2:
                      Ft === k && _e.charCodeAt($t - 3) === J && (Qt = Ft);
                    case 8:
                      Wt === F && (Qt = Wt);
                  }
                break;
              case J:
                ge + de + te === 0 && (Pr = $t);
                break;
              case fe:
                de + Ee + ge + te === 0 && (Lt = 1, _r += "\r");
                break;
              case Q:
              case R:
                de === 0 && (ge = ge === lt ? 0 : ge === 0 ? lt : ge);
                break;
              case ze:
                ge + de + Ee === 0 && te++;
                break;
              case X:
                ge + de + Ee === 0 && te--;
                break;
              case Ue:
                ge + de + te === 0 && Ee--;
                break;
              case ye:
                if (ge + de + te === 0) {
                  if (Sr === 0)
                    switch (2 * Ft + 3 * Wt) {
                      case 533:
                        break;
                      default:
                        Xt = 0, Sr = 1;
                    }
                  Ee++;
                }
                break;
              case ve:
                de + Ee + ge + te + Pr + Fr === 0 && (Fr = 1);
                break;
              case be:
              case b:
                if (ge + te + Ee > 0)
                  break;
                switch (de) {
                  case 0:
                    switch (2 * lt + 3 * _e.charCodeAt($t + 1)) {
                      case 235:
                        de = b;
                        break;
                      case 220:
                        ar = $t, de = be;
                    }
                    break;
                  case be:
                    lt === b && Ft === be && ar + 2 !== $t && (_e.charCodeAt(ar + 2) === 33 && (Wr += _e.substring(ar, $t + 1)), _r = "", de = 0);
                }
            }
            if (de === 0) {
              if (Ct + ge + te + Fr === 0 && St !== Ze && lt !== Xe)
                switch (lt) {
                  case fe:
                  case ne:
                  case U:
                  case Z:
                  case Ue:
                  case ye:
                    if (Sr === 0) {
                      switch (Ft) {
                        case mt:
                        case je:
                        case ut:
                        case ot:
                          _r += "\0";
                          break;
                        default:
                          _r = "\0" + _r + (lt === fe ? "" : "\0");
                      }
                      Lt = 1;
                    } else
                      switch (lt) {
                        case ye:
                          Pr + 7 === $t && Ft === 108 && (Pr = 0), Sr = ++Xt;
                          break;
                        case Ue:
                          (Sr = --Xt) == 0 && (Lt = 1, _r += "\0");
                      }
                    break;
                  case mt:
                  case je:
                    switch (Ft) {
                      case le:
                      case qe:
                      case Je:
                      case Xe:
                      case fe:
                      case Ne:
                      case mt:
                      case je:
                      case ut:
                      case ot:
                        break;
                      default:
                        Sr === 0 && (Lt = 1, _r += "\0");
                    }
                }
              Kt += _r, lt !== je && lt !== mt && (Gt = lt);
            }
        }
        Wt = Ft, Ft = lt, $t++;
      }
      if (ar = Wr.length, Vr > 0 && ar === 0 && _n.length === 0 && Jt[0].length !== 0 && (St !== et || Jt.length === 1 && (Ct > 0 ? xn : ke) === Jt[0]) && (ar = Jt.join(",").length + 2), ar > 0) {
        if (Vt = Ct === 0 && St !== Ze ? function($i) {
          for (var yi, wn, ca = 0, Qo = $i.length, So = Array(Qo); ca < Qo; ++ca) {
            for (var qa = $i[ca].split(C), ji = "", Yi = 0, Rr = 0, Tt = 0, Br = 0, fn = qa.length; Yi < fn; ++Yi)
              if (!((Rr = (wn = qa[Yi]).length) === 0 && fn > 1)) {
                if (Tt = ji.charCodeAt(ji.length - 1), Br = wn.charCodeAt(0), yi = "", Yi !== 0)
                  switch (Tt) {
                    case be:
                    case ne:
                    case U:
                    case Z:
                    case je:
                    case ye:
                      break;
                    default:
                      yi = " ";
                  }
                switch (Br) {
                  case ie:
                    wn = yi + xn;
                  case ne:
                  case U:
                  case Z:
                  case je:
                  case Ue:
                  case ye:
                    break;
                  case ze:
                    wn = yi + wn + xn;
                    break;
                  case J:
                    switch (2 * wn.charCodeAt(1) + 3 * wn.charCodeAt(2)) {
                      case 530:
                        if (or > 0) {
                          wn = yi + wn.substring(8, Rr - 1);
                          break;
                        }
                      default:
                        (Yi < 1 || qa[Yi - 1].length < 1) && (wn = yi + xn + wn);
                    }
                    break;
                  case fe:
                    yi = "";
                  default:
                    Rr > 1 && wn.indexOf(":") > 0 ? wn = yi + wn.replace(ce, "$1" + xn + "$2") : wn = yi + wn + xn;
                }
                ji += wn;
              }
            So[ca] = ji.replace(d, "").trim();
          }
          return So;
        }(Jt) : Jt, jr > 0 && (L = yr(rn, Wr, Vt, nr, vt, It, ar, St, tt, St)) !== void 0 && (Wr = L).length === 0)
          return ci + Wr + _n;
        if (Wr = Vt.join(",") + "{" + Wr + "}", Rt * Qt != 0) {
          switch (Rt === 2 && !Qr(Wr, 2) && (Qt = 0), Qt) {
            case F:
              Wr = Wr.replace(O, ":" + We + "$1") + Wr;
              break;
            case k:
              Wr = Wr.replace(V, "::" + Me + "input-$1") + Wr.replace(V, "::" + We + "$1") + Wr.replace(V, ":" + nt + "input-$1") + Wr;
          }
          Qt = 0;
        }
      }
      return ci + Wr + _n;
    }
    function Pt(nr, Jt, _e) {
      var St = Jt.trim().split(v), tt = St, Vt = St.length, L = nr.length;
      switch (L) {
        case 0:
        case 1:
          for (var te = 0, de = L === 0 ? "" : nr[0] + " "; te < Vt; ++te)
            tt[te] = lr(de, tt[te], _e, L).trim();
          break;
        default:
          te = 0;
          var Ee = 0;
          for (tt = []; te < Vt; ++te)
            for (var ge = 0; ge < L; ++ge)
              tt[Ee++] = lr(nr[ge] + " ", St[te], _e, L).trim();
      }
      return tt;
    }
    function lr(nr, Jt, _e, St) {
      var tt = Jt, Vt = tt.charCodeAt(0);
      switch (Vt < 33 && (Vt = (tt = tt.trim()).charCodeAt(0)), Vt) {
        case ie:
          switch (Ct + St) {
            case 0:
            case 1:
              if (nr.trim().length === 0)
                break;
            default:
              return tt.replace(y, "$1" + nr.trim());
          }
          break;
        case J:
          switch (tt.charCodeAt(1)) {
            case 103:
              if (or > 0 && Ct > 0)
                return tt.replace(T, "$1").replace(y, "$1" + ke);
              break;
            default:
              return nr.trim() + tt.replace(y, "$1" + nr.trim());
          }
        default:
          if (_e * Ct > 0 && tt.indexOf("\f") > 0)
            return tt.replace(y, (nr.charCodeAt(0) === J ? "" : "$1") + nr.trim());
      }
      return nr + tt;
    }
    function wr(nr, Jt, _e, St) {
      var tt, Vt = 0, L = nr + ";", te = 2 * Jt + 3 * _e + 4 * St;
      if (te === 944)
        return function(de) {
          var Ee = de.length, ge = de.indexOf(":", 9) + 1, rt = de.substring(0, ge).trim(), ht = de.substring(ge, Ee - 1).trim();
          switch (de.charCodeAt(9) * Cn) {
            case 0:
              break;
            case ae:
              if (de.charCodeAt(10) !== 110)
                break;
            default:
              for (var lt = ht.split((ht = "", B)), Ft = 0, ge = 0, Ee = lt.length; Ft < Ee; ge = 0, ++Ft) {
                for (var Wt = lt[Ft], Gt = Wt.split(x); Wt = Gt[ge]; ) {
                  var Xt = Wt.charCodeAt(0);
                  if (Cn === 1 && (Xt > ve && Xt < 90 || Xt > 96 && Xt < 123 || Xt === z || Xt === ae && Wt.charCodeAt(1) !== ae))
                    switch (isNaN(parseFloat(Wt)) + (Wt.indexOf("(") !== -1)) {
                      case 1:
                        switch (Wt) {
                          case "infinite":
                          case "alternate":
                          case "backwards":
                          case "running":
                          case "normal":
                          case "forwards":
                          case "both":
                          case "none":
                          case "linear":
                          case "ease":
                          case "ease-in":
                          case "ease-out":
                          case "ease-in-out":
                          case "paused":
                          case "reverse":
                          case "alternate-reverse":
                          case "inherit":
                          case "initial":
                          case "unset":
                          case "step-start":
                          case "step-end":
                            break;
                          default:
                            Wt += In;
                        }
                    }
                  Gt[ge++] = Wt;
                }
                ht += (Ft === 0 ? "" : ",") + Gt.join(" ");
              }
          }
          return ht = rt + ht + ";", Rt === 1 || Rt === 2 && Qr(ht, 1) ? Me + ht + ht : ht;
        }(L);
      if (Rt === 0 || Rt === 2 && !Qr(L, 1))
        return L;
      switch (te) {
        case 1015:
          return L.charCodeAt(10) === 97 ? Me + L + L : L;
        case 951:
          return L.charCodeAt(3) === 116 ? Me + L + L : L;
        case 963:
          return L.charCodeAt(5) === 110 ? Me + L + L : L;
        case 1009:
          if (L.charCodeAt(4) !== 100)
            break;
        case 969:
        case 942:
          return Me + L + L;
        case 978:
          return Me + L + We + L + L;
        case 1019:
        case 983:
          return Me + L + We + L + nt + L + L;
        case 883:
          return L.charCodeAt(8) === ae ? Me + L + L : L.indexOf("image-set(", 11) > 0 ? L.replace(Be, "$1" + Me + "$2") + L : L;
        case 932:
          if (L.charCodeAt(4) === ae)
            switch (L.charCodeAt(5)) {
              case 103:
                return Me + "box-" + L.replace("-grow", "") + Me + L + nt + L.replace("grow", "positive") + L;
              case 115:
                return Me + L + nt + L.replace("shrink", "negative") + L;
              case 98:
                return Me + L + nt + L.replace("basis", "preferred-size") + L;
            }
          return Me + L + nt + L + L;
        case 964:
          return Me + L + nt + "flex-" + L + L;
        case 1023:
          if (L.charCodeAt(8) !== 99)
            break;
          return tt = L.substring(L.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify"), Me + "box-pack" + tt + Me + L + nt + "flex-pack" + tt + L;
        case 1005:
          return m.test(L) ? L.replace(g, ":" + Me) + L.replace(g, ":" + We) + L : L;
        case 1e3:
          switch (Vt = (tt = L.substring(13).trim()).indexOf("-") + 1, tt.charCodeAt(0) + tt.charCodeAt(Vt)) {
            case 226:
              tt = L.replace(Ie, "tb");
              break;
            case 232:
              tt = L.replace(Ie, "tb-rl");
              break;
            case 220:
              tt = L.replace(Ie, "lr");
              break;
            default:
              return L;
          }
          return Me + L + nt + tt + L;
        case 1017:
          if (L.indexOf("sticky", 9) === -1)
            return L;
        case 975:
          switch (Vt = (L = nr).length - 10, te = (tt = (L.charCodeAt(Vt) === 33 ? L.substring(0, Vt) : L).substring(nr.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | tt.charCodeAt(7))) {
            case 203:
              if (tt.charCodeAt(8) < 111)
                break;
            case 115:
              L = L.replace(tt, Me + tt) + ";" + L;
              break;
            case 207:
            case 102:
              L = L.replace(tt, Me + (te > 102 ? "inline-" : "") + "box") + ";" + L.replace(tt, Me + tt) + ";" + L.replace(tt, nt + tt + "box") + ";" + L;
          }
          return L + ";";
        case 938:
          if (L.charCodeAt(5) === ae)
            switch (L.charCodeAt(6)) {
              case 105:
                return tt = L.replace("-items", ""), Me + L + Me + "box-" + tt + nt + "flex-" + tt + L;
              case 115:
                return Me + L + nt + "flex-item-" + L.replace(Ce, "") + L;
              default:
                return Me + L + nt + "flex-line-pack" + L.replace("align-content", "").replace(Ce, "") + L;
            }
          break;
        case 973:
        case 989:
          if (L.charCodeAt(3) !== ae || L.charCodeAt(4) === 122)
            break;
        case 931:
        case 953:
          if ($e.test(nr) === !0)
            return (tt = nr.substring(nr.indexOf(":") + 1)).charCodeAt(0) === 115 ? wr(nr.replace("stretch", "fill-available"), Jt, _e, St).replace(":fill-available", ":stretch") : L.replace(tt, Me + tt) + L.replace(tt, We + tt.replace("fill-", "")) + L;
          break;
        case 962:
          if (L = Me + L + (L.charCodeAt(5) === 102 ? nt + L : "") + L, _e + St === 211 && L.charCodeAt(13) === 105 && L.indexOf("transform", 10) > 0)
            return L.substring(0, L.indexOf(";", 27) + 1).replace(w, "$1" + Me + "$2") + L;
      }
      return L;
    }
    function Qr(nr, Jt) {
      var _e = nr.indexOf(Jt === 1 ? ":" : "{"), St = nr.substring(0, Jt !== 3 ? _e : 10), tt = nr.substring(_e + 1, nr.length - 1);
      return dn(Jt !== 2 ? St : St.replace(Ge, "$1"), tt, Jt);
    }
    function br(nr, Jt) {
      var _e = wr(Jt, Jt.charCodeAt(0), Jt.charCodeAt(1), Jt.charCodeAt(2));
      return _e !== Jt + ";" ? _e.replace(se, " or ($1)").substring(4) : "(" + Jt + ")";
    }
    function yr(nr, Jt, _e, St, tt, Vt, L, te, de, Ee) {
      for (var ge, rt = 0, ht = Jt; rt < jr; ++rt)
        switch (ge = $r[rt].call(ir, nr, ht, _e, St, tt, Vt, L, te, de, Ee)) {
          case void 0:
          case !1:
          case !0:
          case null:
            break;
          default:
            ht = ge;
        }
      if (ht !== Jt)
        return ht;
    }
    function Mr(nr, Jt, _e, St) {
      for (var tt = Jt + 1; tt < _e; ++tt)
        switch (St.charCodeAt(tt)) {
          case b:
            if (nr === be && St.charCodeAt(tt - 1) === be && Jt + 2 !== tt)
              return tt + 1;
            break;
          case ut:
            if (nr === b)
              return tt + 1;
        }
      return tt;
    }
    function Jr(nr) {
      for (var Jt in nr) {
        var _e = nr[Jt];
        switch (Jt) {
          case "keyframe":
            Cn = 0 | _e;
            break;
          case "global":
            or = 0 | _e;
            break;
          case "cascade":
            Ct = 0 | _e;
            break;
          case "compress":
            tn = 0 | _e;
            break;
          case "semicolon":
            ur = 0 | _e;
            break;
          case "preserve":
            Vr = 0 | _e;
            break;
          case "prefix":
            dn = null, _e ? typeof _e != "function" ? Rt = 1 : (Rt = 2, dn = _e) : Rt = 0;
        }
      }
      return Jr;
    }
    function ir(nr, Jt) {
      if (this !== void 0 && this.constructor === ir)
        return o(nr);
      var _e = nr, St = _e.charCodeAt(0);
      St < 33 && (St = (_e = _e.trim()).charCodeAt(0)), Cn > 0 && (In = _e.replace(M, St === ze ? "" : "-")), St = 1, Ct === 1 ? ke = _e : xn = _e;
      var tt, Vt = [ke];
      jr > 0 && (tt = yr(ti, Jt, Vt, Vt, vt, It, 0, 0, 0, 0)) !== void 0 && typeof tt == "string" && (Jt = tt);
      var L = st(zr, Vt, Jt, 0, 0);
      return jr > 0 && (tt = yr(vn, L, Vt, Vt, vt, It, L.length, 0, 0, 0)) !== void 0 && typeof (L = tt) != "string" && (St = 0), In = "", ke = "", xn = "", Qt = 0, vt = 1, It = 1, tn * St == 0 ? L : L.replace(d, "").replace(H, "").replace(q, "$1").replace($, "$1").replace(re, " ");
    }
    return ir.use = function nr(Jt) {
      switch (Jt) {
        case void 0:
        case null:
          jr = $r.length = 0;
          break;
        default:
          if (typeof Jt == "function")
            $r[jr++] = Jt;
          else if (typeof Jt == "object")
            for (var _e = 0, St = Jt.length; _e < St; ++_e)
              nr(Jt[_e]);
          else
            hn = 0 | !!Jt;
      }
      return nr;
    }, ir.set = Jr, s !== void 0 && Jr(s), ir;
  });
})(stylis_min);
const Stylis = stylis_min.exports;
var stylisRuleSheet = { exports: {} };
(function(e, n) {
  (function(o) {
    e.exports = o();
  })(function() {
    return function(o) {
      var s = "/*|*/", u = s + "}";
      function d(g) {
        if (g)
          try {
            o(g + "}");
          } catch {
          }
      }
      return function(m, w, B, x, C, v, y, T, M, D) {
        switch (m) {
          case 1:
            if (M === 0 && w.charCodeAt(0) === 64)
              return o(w + ";"), "";
            break;
          case 2:
            if (T === 0)
              return w + s;
            break;
          case 3:
            switch (T) {
              case 102:
              case 112:
                return o(B[0] + w), "";
              default:
                return w + (D === 0 ? s : "");
            }
          case -2:
            w.split(u).forEach(d);
        }
      };
    };
  });
})(stylisRuleSheet);
const _insertRulePlugin = stylisRuleSheet.exports;
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, reactIs = { exports: {} }, reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min;
function requireReactIs_production_min() {
  if (hasRequiredReactIs_production_min)
    return reactIs_production_min;
  hasRequiredReactIs_production_min = 1;
  var e = typeof Symbol == "function" && Symbol.for, n = e ? Symbol.for("react.element") : 60103, o = e ? Symbol.for("react.portal") : 60106, s = e ? Symbol.for("react.fragment") : 60107, u = e ? Symbol.for("react.strict_mode") : 60108, d = e ? Symbol.for("react.profiler") : 60114, g = e ? Symbol.for("react.provider") : 60109, m = e ? Symbol.for("react.context") : 60110, w = e ? Symbol.for("react.async_mode") : 60111, B = e ? Symbol.for("react.concurrent_mode") : 60111, x = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, v = e ? Symbol.for("react.suspense_list") : 60120, y = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, M = e ? Symbol.for("react.block") : 60121, D = e ? Symbol.for("react.fundamental") : 60117, V = e ? Symbol.for("react.responder") : 60118, O = e ? Symbol.for("react.scope") : 60119;
  function H($) {
    if (typeof $ == "object" && $ !== null) {
      var re = $.$$typeof;
      switch (re) {
        case n:
          switch ($ = $.type, $) {
            case w:
            case B:
            case s:
            case d:
            case u:
            case C:
              return $;
            default:
              switch ($ = $ && $.$$typeof, $) {
                case m:
                case x:
                case T:
                case y:
                case g:
                  return $;
                default:
                  return re;
              }
          }
        case o:
          return re;
      }
    }
  }
  function q($) {
    return H($) === B;
  }
  return reactIs_production_min.AsyncMode = w, reactIs_production_min.ConcurrentMode = B, reactIs_production_min.ContextConsumer = m, reactIs_production_min.ContextProvider = g, reactIs_production_min.Element = n, reactIs_production_min.ForwardRef = x, reactIs_production_min.Fragment = s, reactIs_production_min.Lazy = T, reactIs_production_min.Memo = y, reactIs_production_min.Portal = o, reactIs_production_min.Profiler = d, reactIs_production_min.StrictMode = u, reactIs_production_min.Suspense = C, reactIs_production_min.isAsyncMode = function($) {
    return q($) || H($) === w;
  }, reactIs_production_min.isConcurrentMode = q, reactIs_production_min.isContextConsumer = function($) {
    return H($) === m;
  }, reactIs_production_min.isContextProvider = function($) {
    return H($) === g;
  }, reactIs_production_min.isElement = function($) {
    return typeof $ == "object" && $ !== null && $.$$typeof === n;
  }, reactIs_production_min.isForwardRef = function($) {
    return H($) === x;
  }, reactIs_production_min.isFragment = function($) {
    return H($) === s;
  }, reactIs_production_min.isLazy = function($) {
    return H($) === T;
  }, reactIs_production_min.isMemo = function($) {
    return H($) === y;
  }, reactIs_production_min.isPortal = function($) {
    return H($) === o;
  }, reactIs_production_min.isProfiler = function($) {
    return H($) === d;
  }, reactIs_production_min.isStrictMode = function($) {
    return H($) === u;
  }, reactIs_production_min.isSuspense = function($) {
    return H($) === C;
  }, reactIs_production_min.isValidElementType = function($) {
    return typeof $ == "string" || typeof $ == "function" || $ === s || $ === B || $ === d || $ === u || $ === C || $ === v || typeof $ == "object" && $ !== null && ($.$$typeof === T || $.$$typeof === y || $.$$typeof === g || $.$$typeof === m || $.$$typeof === x || $.$$typeof === D || $.$$typeof === V || $.$$typeof === O || $.$$typeof === M);
  }, reactIs_production_min.typeOf = H, reactIs_production_min;
}
var reactIs_development = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development;
function requireReactIs_development() {
  return hasRequiredReactIs_development || (hasRequiredReactIs_development = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, n = e ? Symbol.for("react.element") : 60103, o = e ? Symbol.for("react.portal") : 60106, s = e ? Symbol.for("react.fragment") : 60107, u = e ? Symbol.for("react.strict_mode") : 60108, d = e ? Symbol.for("react.profiler") : 60114, g = e ? Symbol.for("react.provider") : 60109, m = e ? Symbol.for("react.context") : 60110, w = e ? Symbol.for("react.async_mode") : 60111, B = e ? Symbol.for("react.concurrent_mode") : 60111, x = e ? Symbol.for("react.forward_ref") : 60112, C = e ? Symbol.for("react.suspense") : 60113, v = e ? Symbol.for("react.suspense_list") : 60120, y = e ? Symbol.for("react.memo") : 60115, T = e ? Symbol.for("react.lazy") : 60116, M = e ? Symbol.for("react.block") : 60121, D = e ? Symbol.for("react.fundamental") : 60117, V = e ? Symbol.for("react.responder") : 60118, O = e ? Symbol.for("react.scope") : 60119;
    function H(z) {
      return typeof z == "string" || typeof z == "function" || z === s || z === B || z === d || z === u || z === C || z === v || typeof z == "object" && z !== null && (z.$$typeof === T || z.$$typeof === y || z.$$typeof === g || z.$$typeof === m || z.$$typeof === x || z.$$typeof === D || z.$$typeof === V || z.$$typeof === O || z.$$typeof === M);
    }
    function q(z) {
      if (typeof z == "object" && z !== null) {
        var be = z.$$typeof;
        switch (be) {
          case n:
            var fe = z.type;
            switch (fe) {
              case w:
              case B:
              case s:
              case d:
              case u:
              case C:
                return fe;
              default:
                var J = fe && fe.$$typeof;
                switch (J) {
                  case m:
                  case x:
                  case T:
                  case y:
                  case g:
                    return J;
                  default:
                    return be;
                }
            }
          case o:
            return be;
        }
      }
    }
    var $ = w, re = B, ce = m, Ie = g, Pe = n, se = x, Ce = s, Ge = T, $e = y, Be = o, Me = d, We = u, nt = C, Xe = !1;
    function Je(z) {
      return Xe || (Xe = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), qe(z) || q(z) === w;
    }
    function qe(z) {
      return q(z) === B;
    }
    function ye(z) {
      return q(z) === m;
    }
    function Ue(z) {
      return q(z) === g;
    }
    function ze(z) {
      return typeof z == "object" && z !== null && z.$$typeof === n;
    }
    function X(z) {
      return q(z) === x;
    }
    function ut(z) {
      return q(z) === s;
    }
    function ot(z) {
      return q(z) === T;
    }
    function mt(z) {
      return q(z) === y;
    }
    function ve(z) {
      return q(z) === o;
    }
    function je(z) {
      return q(z) === d;
    }
    function ie(z) {
      return q(z) === u;
    }
    function ae(z) {
      return q(z) === C;
    }
    reactIs_development.AsyncMode = $, reactIs_development.ConcurrentMode = re, reactIs_development.ContextConsumer = ce, reactIs_development.ContextProvider = Ie, reactIs_development.Element = Pe, reactIs_development.ForwardRef = se, reactIs_development.Fragment = Ce, reactIs_development.Lazy = Ge, reactIs_development.Memo = $e, reactIs_development.Portal = Be, reactIs_development.Profiler = Me, reactIs_development.StrictMode = We, reactIs_development.Suspense = nt, reactIs_development.isAsyncMode = Je, reactIs_development.isConcurrentMode = qe, reactIs_development.isContextConsumer = ye, reactIs_development.isContextProvider = Ue, reactIs_development.isElement = ze, reactIs_development.isForwardRef = X, reactIs_development.isFragment = ut, reactIs_development.isLazy = ot, reactIs_development.isMemo = mt, reactIs_development.isPortal = ve, reactIs_development.isProfiler = je, reactIs_development.isStrictMode = ie, reactIs_development.isSuspense = ae, reactIs_development.isValidElementType = H, reactIs_development.typeOf = q;
  }()), reactIs_development;
}
(function(e) {
  process.env.NODE_ENV === "production" ? e.exports = requireReactIs_production_min() : e.exports = requireReactIs_development();
})(reactIs);
var safeIsNaN = Number.isNaN || function e(n) {
  return typeof n == "number" && n !== n;
};
function isEqual(e, n) {
  return !!(e === n || safeIsNaN(e) && safeIsNaN(n));
}
function areInputsEqual(e, n) {
  if (e.length !== n.length)
    return !1;
  for (var o = 0; o < e.length; o++)
    if (!isEqual(e[o], n[o]))
      return !1;
  return !0;
}
function memoizeOne(e, n) {
  n === void 0 && (n = areInputsEqual);
  var o, s = [], u, d = !1;
  function g() {
    for (var m = [], w = 0; w < arguments.length; w++)
      m[w] = arguments[w];
    return d && o === this && n(m, s) || (u = e.apply(this, m), d = !0, o = this, s = m), u;
  }
  return g;
}
function memoize(e) {
  var n = {};
  return function(o) {
    return n[o] === void 0 && (n[o] = e(o)), n[o];
  };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, index = memoize(
  function(e) {
    return reactPropsRegex.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
);
function getType(e) {
  return Object.prototype.toString.call(e).slice(8, -1);
}
function isPlainObject$1(e) {
  return getType(e) !== "Object" ? !1 : e.constructor === Object && Object.getPrototypeOf(e) === Object.prototype;
}
function isArray(e) {
  return getType(e) === "Array";
}
function isSymbol(e) {
  return getType(e) === "Symbol";
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __spreadArrays() {
  for (var e = 0, n = 0, o = arguments.length; n < o; n++)
    e += arguments[n].length;
  for (var s = Array(e), u = 0, n = 0; n < o; n++)
    for (var d = arguments[n], g = 0, m = d.length; g < m; g++, u++)
      s[u] = d[g];
  return s;
}
function assignProp(e, n, o, s) {
  var u = s.propertyIsEnumerable(n) ? "enumerable" : "nonenumerable";
  u === "enumerable" && (e[n] = o), u === "nonenumerable" && Object.defineProperty(e, n, {
    value: o,
    enumerable: !1,
    writable: !0,
    configurable: !0
  });
}
function mergeRecursively(e, n, o) {
  if (!isPlainObject$1(n))
    return o && isArray(o) && o.forEach(function(B) {
      n = B(e, n);
    }), n;
  var s = {};
  if (isPlainObject$1(e)) {
    var u = Object.getOwnPropertyNames(e), d = Object.getOwnPropertySymbols(e);
    s = __spreadArrays(u, d).reduce(function(B, x) {
      var C = e[x];
      return (!isSymbol(x) && !Object.getOwnPropertyNames(n).includes(x) || isSymbol(x) && !Object.getOwnPropertySymbols(n).includes(x)) && assignProp(B, x, C, e), B;
    }, {});
  }
  var g = Object.getOwnPropertyNames(n), m = Object.getOwnPropertySymbols(n), w = __spreadArrays(g, m).reduce(function(B, x) {
    var C = n[x], v = isPlainObject$1(e) ? e[x] : void 0;
    return o && isArray(o) && o.forEach(function(y) {
      C = y(v, C);
    }), v !== void 0 && isPlainObject$1(C) && (C = mergeRecursively(v, C, o)), assignProp(B, x, C, n), B;
  }, s);
  return w;
}
function merge(e) {
  for (var n = [], o = 1; o < arguments.length; o++)
    n[o - 1] = arguments[o];
  var s = null, u = e;
  return isPlainObject$1(e) && e.extensions && Object.keys(e).length === 1 && (u = {}, s = e.extensions), n.reduce(function(d, g) {
    return mergeRecursively(d, g, s);
  }, u);
}
var interleave = function(e, n) {
  for (var o = [e[0]], s = 0, u = n.length; s < u; s += 1)
    o.push(n[s], e[s + 1]);
  return o;
}, _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
  return typeof e;
} : function(e) {
  return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
}, classCallCheck = function(e, n) {
  if (!(e instanceof n))
    throw new TypeError("Cannot call a class as a function");
}, createClass = function() {
  function e(n, o) {
    for (var s = 0; s < o.length; s++) {
      var u = o[s];
      u.enumerable = u.enumerable || !1, u.configurable = !0, "value" in u && (u.writable = !0), Object.defineProperty(n, u.key, u);
    }
  }
  return function(n, o, s) {
    return o && e(n.prototype, o), s && e(n, s), n;
  };
}(), _extends = Object.assign || function(e) {
  for (var n = 1; n < arguments.length; n++) {
    var o = arguments[n];
    for (var s in o)
      Object.prototype.hasOwnProperty.call(o, s) && (e[s] = o[s]);
  }
  return e;
}, inherits = function(e, n) {
  if (typeof n != "function" && n !== null)
    throw new TypeError("Super expression must either be null or a function, not " + typeof n);
  e.prototype = Object.create(n && n.prototype, {
    constructor: {
      value: e,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  }), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n);
}, objectWithoutProperties = function(e, n) {
  var o = {};
  for (var s in e)
    n.indexOf(s) >= 0 || !Object.prototype.hasOwnProperty.call(e, s) || (o[s] = e[s]);
  return o;
}, possibleConstructorReturn = function(e, n) {
  if (!e)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return n && (typeof n == "object" || typeof n == "function") ? n : e;
}, isPlainObject = function(e) {
  return (typeof e > "u" ? "undefined" : _typeof(e)) === "object" && e.constructor === Object;
}, EMPTY_ARRAY = Object.freeze([]), EMPTY_OBJECT = Object.freeze({});
function isFunction(e) {
  return typeof e == "function";
}
function getComponentName(e) {
  return (process.env.NODE_ENV !== "production" ? typeof e == "string" && e : !1) || e.displayName || e.name || "Component";
}
function isStatelessFunction(e) {
  return typeof e == "function" && !(e.prototype && e.prototype.isReactComponent);
}
function isStyledComponent(e) {
  return e && typeof e.styledComponentId == "string";
}
var SC_ATTR = typeof process < "u" && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled", SC_VERSION_ATTR = "data-styled-version", SC_STREAM_ATTR = "data-styled-streamed", IS_BROWSER = typeof window < "u" && "HTMLElement" in window, DISABLE_SPEEDY = typeof SC_DISABLE_SPEEDY == "boolean" && SC_DISABLE_SPEEDY || typeof process < "u" && (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY) || process.env.NODE_ENV !== "production", ERRORS = process.env.NODE_ENV !== "production" ? {
  1: `Cannot create styled-component for component: %s.

`,
  2: `Can't collect styles once you've consumed a \`ServerStyleSheet\`'s styles! \`ServerStyleSheet\` is a one off instance for each server-side render cycle.

- Are you trying to reuse it across renders?
- Are you accidentally calling collectStyles twice?

`,
  3: `Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.

`,
  4: `The \`StyleSheetManager\` expects a valid target or sheet prop!

- Does this error occur on the client and is your target falsy?
- Does this error occur on the server and is the sheet falsy?

`,
  5: `The clone method cannot be used on the client!

- Are you running in a client-like environment on the server?
- Are you trying to run SSR on the client?

`,
  6: `Trying to insert a new style tag, but the given Node is unmounted!

- Are you using a custom target that isn't mounted?
- Does your document not have a valid head element?
- Have you accidentally removed a style tag manually?

`,
  7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',
  8: `ThemeProvider: Please make your "theme" prop an object.

`,
  9: "Missing document `<head>`\n\n",
  10: `Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021

`,
  11: `_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.

`,
  12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",
  13: `%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.
`
} : {};
function format() {
  for (var e = arguments.length <= 0 ? void 0 : arguments[0], n = [], o = 1, s = arguments.length; o < s; o += 1)
    n.push(arguments.length <= o ? void 0 : arguments[o]);
  return n.forEach(function(u) {
    e = e.replace(/%[a-z]/, u);
  }), e;
}
var StyledComponentsError = function(e) {
  inherits(n, e);
  function n(o) {
    classCallCheck(this, n);
    for (var s = arguments.length, u = Array(s > 1 ? s - 1 : 0), d = 1; d < s; d++)
      u[d - 1] = arguments[d];
    if (process.env.NODE_ENV === "production")
      var g = possibleConstructorReturn(this, e.call(this, "An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#" + o + " for more information." + (u.length > 0 ? " Additional arguments: " + u.join(", ") : "")));
    else
      var g = possibleConstructorReturn(this, e.call(this, format.apply(void 0, [ERRORS[o]].concat(u)).trim()));
    return possibleConstructorReturn(g);
  }
  return n;
}(Error), SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm, extractComps = function(e) {
  var n = "" + (e || ""), o = [];
  return n.replace(SC_COMPONENT_ID, function(s, u, d) {
    return o.push({
      componentId: u,
      matchIndex: d
    }), s;
  }), o.map(function(s, u) {
    var d = s.componentId, g = s.matchIndex, m = o[u + 1], w = m ? n.slice(g, m.matchIndex) : n.slice(g);
    return {
      componentId: d,
      cssFromDOM: w
    };
  });
}, COMMENT_REGEX = /^\s*\/\/.*$/gm, stylisSplitter = new Stylis({
  global: !1,
  cascade: !0,
  keyframe: !1,
  prefix: !1,
  compress: !1,
  semicolon: !0
}), stylis = new Stylis({
  global: !1,
  cascade: !0,
  keyframe: !1,
  prefix: !0,
  compress: !1,
  semicolon: !1
}), parsingRules = [], returnRulesPlugin = function e(n) {
  if (n === -2) {
    var o = parsingRules;
    return parsingRules = [], o;
  }
}, parseRulesPlugin = _insertRulePlugin(function(e) {
  parsingRules.push(e);
}), _componentId = void 0, _selector = void 0, _selectorRegexp = void 0, selfReferenceReplacer = function e(n, o, s) {
  return o > 0 && s.slice(0, o).indexOf(_selector) !== -1 && s.slice(o - _selector.length, o) !== _selector ? "." + _componentId : n;
}, selfReferenceReplacementPlugin = function e(n, o, s) {
  n === 2 && s.length && s[0].lastIndexOf(_selector) > 0 && (s[0] = s[0].replace(_selectorRegexp, selfReferenceReplacer));
};
stylis.use([selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);
stylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);
var splitByRules = function e(n) {
  return stylisSplitter("", n);
};
function stringifyRules(e, n, o) {
  var s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "&", u = e.join("").replace(COMMENT_REGEX, ""), d = n && o ? o + " " + n + " { " + u + " }" : u;
  return _componentId = s, _selector = n, _selectorRegexp = new RegExp("\\" + _selector + "\\b", "g"), stylis(o || !n ? "" : n, d);
}
var getNonce = function() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : null;
}, addNameForId = function e(n, o, s) {
  if (s) {
    var u = n[o] || (n[o] = /* @__PURE__ */ Object.create(null));
    u[s] = !0;
  }
}, resetIdNames = function e(n, o) {
  n[o] = /* @__PURE__ */ Object.create(null);
}, hasNameForId = function e(n) {
  return function(o, s) {
    return n[o] !== void 0 && n[o][s];
  };
}, stringifyNames = function e(n) {
  var o = "";
  for (var s in n)
    o += Object.keys(n[s]).join(" ") + " ";
  return o.trim();
}, cloneNames = function e(n) {
  var o = /* @__PURE__ */ Object.create(null);
  for (var s in n)
    o[s] = _extends({}, n[s]);
  return o;
}, sheetForTag = function e(n) {
  if (n.sheet)
    return n.sheet;
  for (var o = n.ownerDocument.styleSheets.length, s = 0; s < o; s += 1) {
    var u = n.ownerDocument.styleSheets[s];
    if (u.ownerNode === n)
      return u;
  }
  throw new StyledComponentsError(10);
}, safeInsertRule = function e(n, o, s) {
  if (!o)
    return !1;
  var u = n.cssRules.length;
  try {
    n.insertRule(o, s <= u ? s : u);
  } catch {
    return !1;
  }
  return !0;
}, deleteRules = function e(n, o, s) {
  for (var u = o - s, d = o; d > u; d -= 1)
    n.deleteRule(d);
}, makeTextMarker = function e(n) {
  return `
/* sc-component-id: ` + n + ` */
`;
}, addUpUntilIndex = function e(n, o) {
  for (var s = 0, u = 0; u <= o; u += 1)
    s += n[u];
  return s;
}, makeStyleTag = function e(n, o, s) {
  var u = document;
  n ? u = n.ownerDocument : o && (u = o.ownerDocument);
  var d = u.createElement("style");
  d.setAttribute(SC_ATTR, ""), d.setAttribute(SC_VERSION_ATTR, "4.4.1");
  var g = getNonce();
  if (g && d.setAttribute("nonce", g), d.appendChild(u.createTextNode("")), n && !o)
    n.appendChild(d);
  else {
    if (!o || !n || !o.parentNode)
      throw new StyledComponentsError(6);
    o.parentNode.insertBefore(d, s ? o : o.nextSibling);
  }
  return d;
}, wrapAsHtmlTag = function e(n, o) {
  return function(s) {
    var u = getNonce(), d = [u && 'nonce="' + u + '"', SC_ATTR + '="' + stringifyNames(o) + '"', SC_VERSION_ATTR + '="4.4.1"', s], g = d.filter(Boolean).join(" ");
    return "<style " + g + ">" + n() + "</style>";
  };
}, wrapAsElement = function e(n, o) {
  return function() {
    var s, u = (s = {}, s[SC_ATTR] = stringifyNames(o), s[SC_VERSION_ATTR] = "4.4.1", s), d = getNonce();
    return d && (u.nonce = d), /* @__PURE__ */ jsx("style", {
      ...u,
      dangerouslySetInnerHTML: {
        __html: n()
      }
    });
  };
}, getIdsFromMarkersFactory = function e(n) {
  return function() {
    return Object.keys(n);
  };
}, makeSpeedyTag = function e(n, o) {
  var s = /* @__PURE__ */ Object.create(null), u = /* @__PURE__ */ Object.create(null), d = [], g = o !== void 0, m = !1, w = function(y) {
    var T = u[y];
    return T !== void 0 ? T : (u[y] = d.length, d.push(0), resetIdNames(s, y), u[y]);
  }, B = function(y, T, M) {
    for (var D = w(y), V = sheetForTag(n), O = addUpUntilIndex(d, D), H = 0, q = [], $ = T.length, re = 0; re < $; re += 1) {
      var ce = T[re], Ie = g;
      Ie && ce.indexOf("@import") !== -1 ? q.push(ce) : safeInsertRule(V, ce, O + H) && (Ie = !1, H += 1);
    }
    g && q.length > 0 && (m = !0, o().insertRules(y + "-import", q)), d[D] += H, addNameForId(s, y, M);
  }, x = function(y) {
    var T = u[y];
    if (T !== void 0 && n.isConnected !== !1) {
      var M = d[T], D = sheetForTag(n), V = addUpUntilIndex(d, T) - 1;
      deleteRules(D, V, M), d[T] = 0, resetIdNames(s, y), g && m && o().removeRules(y + "-import");
    }
  }, C = function() {
    var y = sheetForTag(n), T = y.cssRules, M = "";
    for (var D in u) {
      M += makeTextMarker(D);
      for (var V = u[D], O = addUpUntilIndex(d, V), H = d[V], q = O - H; q < O; q += 1) {
        var $ = T[q];
        $ !== void 0 && (M += $.cssText);
      }
    }
    return M;
  };
  return {
    clone: function() {
      throw new StyledComponentsError(5);
    },
    css: C,
    getIds: getIdsFromMarkersFactory(u),
    hasNameForId: hasNameForId(s),
    insertMarker: w,
    insertRules: B,
    removeRules: x,
    sealed: !1,
    styleTag: n,
    toElement: wrapAsElement(C, s),
    toHTML: wrapAsHtmlTag(C, s)
  };
}, makeTextNode = function e(n, o) {
  return n.createTextNode(makeTextMarker(o));
}, makeBrowserTag = function e(n, o) {
  var s = /* @__PURE__ */ Object.create(null), u = /* @__PURE__ */ Object.create(null), d = o !== void 0, g = !1, m = function(v) {
    var y = u[v];
    return y !== void 0 ? y : (u[v] = makeTextNode(n.ownerDocument, v), n.appendChild(u[v]), s[v] = /* @__PURE__ */ Object.create(null), u[v]);
  }, w = function(v, y, T) {
    for (var M = m(v), D = [], V = y.length, O = 0; O < V; O += 1) {
      var H = y[O], q = d;
      if (q && H.indexOf("@import") !== -1)
        D.push(H);
      else {
        q = !1;
        var $ = O === V - 1 ? "" : " ";
        M.appendData("" + H + $);
      }
    }
    addNameForId(s, v, T), d && D.length > 0 && (g = !0, o().insertRules(v + "-import", D));
  }, B = function(v) {
    var y = u[v];
    if (y !== void 0) {
      var T = makeTextNode(n.ownerDocument, v);
      n.replaceChild(T, y), u[v] = T, resetIdNames(s, v), d && g && o().removeRules(v + "-import");
    }
  }, x = function() {
    var v = "";
    for (var y in u)
      v += u[y].data;
    return v;
  };
  return {
    clone: function() {
      throw new StyledComponentsError(5);
    },
    css: x,
    getIds: getIdsFromMarkersFactory(u),
    hasNameForId: hasNameForId(s),
    insertMarker: m,
    insertRules: w,
    removeRules: B,
    sealed: !1,
    styleTag: n,
    toElement: wrapAsElement(x, s),
    toHTML: wrapAsHtmlTag(x, s)
  };
}, makeServerTag = function e(n, o) {
  var s = n === void 0 ? /* @__PURE__ */ Object.create(null) : n, u = o === void 0 ? /* @__PURE__ */ Object.create(null) : o, d = function(v) {
    var y = u[v];
    return y !== void 0 ? y : u[v] = [""];
  }, g = function(v, y, T) {
    var M = d(v);
    M[0] += y.join(" "), addNameForId(s, v, T);
  }, m = function(v) {
    var y = u[v];
    y !== void 0 && (y[0] = "", resetIdNames(s, v));
  }, w = function() {
    var v = "";
    for (var y in u) {
      var T = u[y][0];
      T && (v += makeTextMarker(y) + T);
    }
    return v;
  }, B = function() {
    var v = cloneNames(s), y = /* @__PURE__ */ Object.create(null);
    for (var T in u)
      y[T] = [u[T][0]];
    return e(v, y);
  }, x = {
    clone: B,
    css: w,
    getIds: getIdsFromMarkersFactory(u),
    hasNameForId: hasNameForId(s),
    insertMarker: d,
    insertRules: g,
    removeRules: m,
    sealed: !1,
    styleTag: null,
    toElement: wrapAsElement(w, s),
    toHTML: wrapAsHtmlTag(w, s)
  };
  return x;
}, makeTag = function e(n, o, s, u, d) {
  if (IS_BROWSER && !s) {
    var g = makeStyleTag(n, o, u);
    return DISABLE_SPEEDY ? makeBrowserTag(g, d) : makeSpeedyTag(g, d);
  }
  return makeServerTag();
}, rehydrate = function e(n, o, s) {
  for (var u = 0, d = s.length; u < d; u += 1) {
    var g = s[u], m = g.componentId, w = g.cssFromDOM, B = splitByRules(w);
    n.insertRules(m, B);
  }
  for (var x = 0, C = o.length; x < C; x += 1) {
    var v = o[x];
    v.parentNode && v.parentNode.removeChild(v);
  }
}, SPLIT_REGEX = /\s+/, MAX_SIZE = void 0;
IS_BROWSER ? MAX_SIZE = DISABLE_SPEEDY ? 40 : 1e3 : MAX_SIZE = -1;
var sheetRunningId = 0, master = void 0, StyleSheet = function() {
  function e() {
    var n = this, o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : IS_BROWSER ? document.head : null, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    classCallCheck(this, e), this.getImportRuleTag = function() {
      var u = n.importRuleTag;
      if (u !== void 0)
        return u;
      var d = n.tags[0], g = !0;
      return n.importRuleTag = makeTag(n.target, d ? d.styleTag : null, n.forceServer, g);
    }, sheetRunningId += 1, this.id = sheetRunningId, this.forceServer = s, this.target = s ? null : o, this.tagMap = {}, this.deferred = {}, this.rehydratedNames = {}, this.ignoreRehydratedNames = {}, this.tags = [], this.capacity = 1, this.clones = [];
  }
  return e.prototype.rehydrate = function() {
    if (!IS_BROWSER || this.forceServer)
      return this;
    var o = [], s = [], u = !1, d = document.querySelectorAll("style[" + SC_ATTR + "][" + SC_VERSION_ATTR + '="4.4.1"]'), g = d.length;
    if (!g)
      return this;
    for (var m = 0; m < g; m += 1) {
      var w = d[m];
      u || (u = !!w.getAttribute(SC_STREAM_ATTR));
      for (var B = (w.getAttribute(SC_ATTR) || "").trim().split(SPLIT_REGEX), x = B.length, C = 0, v; C < x; C += 1)
        v = B[C], this.rehydratedNames[v] = !0;
      s.push.apply(s, extractComps(w.textContent)), o.push(w);
    }
    var y = s.length;
    if (!y)
      return this;
    var T = this.makeTag(null);
    rehydrate(T, o, s), this.capacity = Math.max(1, MAX_SIZE - y), this.tags.push(T);
    for (var M = 0; M < y; M += 1)
      this.tagMap[s[M].componentId] = T;
    return this;
  }, e.reset = function() {
    var o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    master = new e(void 0, o).rehydrate();
  }, e.prototype.clone = function() {
    var o = new e(this.target, this.forceServer);
    return this.clones.push(o), o.tags = this.tags.map(function(s) {
      for (var u = s.getIds(), d = s.clone(), g = 0; g < u.length; g += 1)
        o.tagMap[u[g]] = d;
      return d;
    }), o.rehydratedNames = _extends({}, this.rehydratedNames), o.deferred = _extends({}, this.deferred), o;
  }, e.prototype.sealAllTags = function() {
    this.capacity = 1, this.tags.forEach(function(o) {
      o.sealed = !0;
    });
  }, e.prototype.makeTag = function(o) {
    var s = o ? o.styleTag : null, u = !1;
    return makeTag(this.target, s, this.forceServer, u, this.getImportRuleTag);
  }, e.prototype.getTagForId = function(o) {
    var s = this.tagMap[o];
    if (s !== void 0 && !s.sealed)
      return s;
    var u = this.tags[this.tags.length - 1];
    return this.capacity -= 1, this.capacity === 0 && (this.capacity = MAX_SIZE, u = this.makeTag(u), this.tags.push(u)), this.tagMap[o] = u;
  }, e.prototype.hasId = function(o) {
    return this.tagMap[o] !== void 0;
  }, e.prototype.hasNameForId = function(o, s) {
    if (this.ignoreRehydratedNames[o] === void 0 && this.rehydratedNames[s])
      return !0;
    var u = this.tagMap[o];
    return u !== void 0 && u.hasNameForId(o, s);
  }, e.prototype.deferredInject = function(o, s) {
    if (this.tagMap[o] === void 0) {
      for (var u = this.clones, d = 0; d < u.length; d += 1)
        u[d].deferredInject(o, s);
      this.getTagForId(o).insertMarker(o), this.deferred[o] = s;
    }
  }, e.prototype.inject = function(o, s, u) {
    for (var d = this.clones, g = 0; g < d.length; g += 1)
      d[g].inject(o, s, u);
    var m = this.getTagForId(o);
    if (this.deferred[o] !== void 0) {
      var w = this.deferred[o].concat(s);
      m.insertRules(o, w, u), this.deferred[o] = void 0;
    } else
      m.insertRules(o, s, u);
  }, e.prototype.remove = function(o) {
    var s = this.tagMap[o];
    if (s !== void 0) {
      for (var u = this.clones, d = 0; d < u.length; d += 1)
        u[d].remove(o);
      s.removeRules(o), this.ignoreRehydratedNames[o] = !0, this.deferred[o] = void 0;
    }
  }, e.prototype.toHTML = function() {
    return this.tags.map(function(o) {
      return o.toHTML();
    }).join("");
  }, e.prototype.toReactElements = function() {
    var o = this.id;
    return this.tags.map(function(s, u) {
      var d = "sc-" + o + "-" + u;
      return cloneElement(s.toElement(), {
        key: d
      });
    });
  }, createClass(e, null, [{
    key: "master",
    get: function() {
      return master || (master = new e().rehydrate());
    }
  }, {
    key: "instance",
    get: function() {
      return e.master;
    }
  }]), e;
}(), Keyframes = function() {
  function e(n, o) {
    var s = this;
    classCallCheck(this, e), this.inject = function(u) {
      u.hasNameForId(s.id, s.name) || u.inject(s.id, s.rules, s.name);
    }, this.toString = function() {
      throw new StyledComponentsError(12, String(s.name));
    }, this.name = n, this.rules = o, this.id = "sc-keyframes-" + n;
  }
  return e.prototype.getName = function() {
    return this.name;
  }, e;
}(), uppercasePattern = /([A-Z])/g, msPattern = /^ms-/;
function hyphenateStyleName(e) {
  return e.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
}
function addUnitIfNeeded(e, n) {
  return n == null || typeof n == "boolean" || n === "" ? "" : typeof n == "number" && n !== 0 && !(e in unitlessKeys) ? n + "px" : String(n).trim();
}
var isFalsish = function e(n) {
  return n == null || n === !1 || n === "";
}, objToCssArray = function e(n, o) {
  var s = [], u = Object.keys(n);
  return u.forEach(function(d) {
    if (!isFalsish(n[d])) {
      if (isPlainObject(n[d]))
        return s.push.apply(s, e(n[d], d)), s;
      if (isFunction(n[d]))
        return s.push(hyphenateStyleName(d) + ":", n[d], ";"), s;
      s.push(hyphenateStyleName(d) + ": " + addUnitIfNeeded(d, n[d]) + ";");
    }
    return s;
  }), o ? [o + " {"].concat(s, ["}"]) : s;
};
function flatten(e, n, o) {
  if (Array.isArray(e)) {
    for (var s = [], u = 0, d = e.length, g; u < d; u += 1)
      g = flatten(e[u], n, o), g !== null && (Array.isArray(g) ? s.push.apply(s, g) : s.push(g));
    return s;
  }
  if (isFalsish(e))
    return null;
  if (isStyledComponent(e))
    return "." + e.styledComponentId;
  if (isFunction(e))
    if (isStatelessFunction(e) && n) {
      var m = e(n);
      return process.env.NODE_ENV !== "production" && reactIs.exports.isElement(m) && console.warn(getComponentName(e) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), flatten(m, n, o);
    } else
      return e;
  return e instanceof Keyframes ? o ? (e.inject(o), e.getName()) : e : isPlainObject(e) ? objToCssArray(e) : e.toString();
}
function css(e) {
  for (var n = arguments.length, o = Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
    o[s - 1] = arguments[s];
  return isFunction(e) || isPlainObject(e) ? flatten(interleave(EMPTY_ARRAY, [e].concat(o))) : flatten(interleave(e, o));
}
function constructWithOptions(e, n) {
  var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT;
  if (!reactIs.exports.isValidElementType(n))
    throw new StyledComponentsError(1, String(n));
  var s = function() {
    return e(n, o, css.apply(void 0, arguments));
  };
  return s.withConfig = function(u) {
    return constructWithOptions(e, n, _extends({}, o, u));
  }, s.attrs = function(u) {
    return constructWithOptions(e, n, _extends({}, o, {
      attrs: Array.prototype.concat(o.attrs, u).filter(Boolean)
    }));
  }, s;
}
function murmurhash(e) {
  for (var n = e.length | 0, o = n | 0, s = 0, u; n >= 4; )
    u = e.charCodeAt(s) & 255 | (e.charCodeAt(++s) & 255) << 8 | (e.charCodeAt(++s) & 255) << 16 | (e.charCodeAt(++s) & 255) << 24, u = 1540483477 * (u & 65535) + ((1540483477 * (u >>> 16) & 65535) << 16), u ^= u >>> 24, u = 1540483477 * (u & 65535) + ((1540483477 * (u >>> 16) & 65535) << 16), o = 1540483477 * (o & 65535) + ((1540483477 * (o >>> 16) & 65535) << 16) ^ u, n -= 4, ++s;
  switch (n) {
    case 3:
      o ^= (e.charCodeAt(s + 2) & 255) << 16;
    case 2:
      o ^= (e.charCodeAt(s + 1) & 255) << 8;
    case 1:
      o ^= e.charCodeAt(s) & 255, o = 1540483477 * (o & 65535) + ((1540483477 * (o >>> 16) & 65535) << 16);
  }
  return o ^= o >>> 13, o = 1540483477 * (o & 65535) + ((1540483477 * (o >>> 16) & 65535) << 16), (o ^ o >>> 15) >>> 0;
}
var charsLength = 52, getAlphabeticChar = function e(n) {
  return String.fromCharCode(n + (n > 25 ? 39 : 97));
};
function generateAlphabeticName(e) {
  var n = "", o = void 0;
  for (o = e; o > charsLength; o = Math.floor(o / charsLength))
    n = getAlphabeticChar(o % charsLength) + n;
  return getAlphabeticChar(o % charsLength) + n;
}
function hasFunctionObjectKey(e) {
  for (var n in e)
    if (isFunction(e[n]))
      return !0;
  return !1;
}
function isStaticRules(e, n) {
  for (var o = 0; o < e.length; o += 1) {
    var s = e[o];
    if (Array.isArray(s) && !isStaticRules(s, n))
      return !1;
    if (isFunction(s) && !isStyledComponent(s))
      return !1;
  }
  return !n.some(function(u) {
    return isFunction(u) || hasFunctionObjectKey(u);
  });
}
var hasher = function e(n) {
  return generateAlphabeticName(murmurhash(n));
}, ComponentStyle = function() {
  function e(n, o, s) {
    classCallCheck(this, e), this.rules = n, this.isStatic = process.env.NODE_ENV === "production" && isStaticRules(n, o), this.componentId = s, StyleSheet.master.hasId(s) || StyleSheet.master.deferredInject(s, []);
  }
  return e.prototype.generateAndInjectStyles = function(o, s) {
    var u = this.isStatic, d = this.componentId, g = this.lastClassName;
    if (IS_BROWSER && u && typeof g == "string" && s.hasNameForId(d, g))
      return g;
    var m = flatten(this.rules, o, s), w = hasher(this.componentId + m.join(""));
    return s.hasNameForId(d, w) || s.inject(this.componentId, stringifyRules(m, "." + w, void 0, d), w), this.lastClassName = w, w;
  }, e.generateName = function(o) {
    return hasher(o);
  }, e;
}(), LIMIT = 200, createWarnTooManyClasses = function(e) {
  var n = {}, o = !1;
  return function(s) {
    o || (n[s] = !0, Object.keys(n).length >= LIMIT && (console.warn("Over " + LIMIT + " classes were generated for component " + e + `. 
Consider using the attrs method, together with a style object for frequently changed styles.
Example:
  const Component = styled.div.attrs(props => ({
    style: {
      background: props.background,
    },
  }))\`width: 100%;\`

  <Component />`), o = !0, n = {}));
  };
}, determineTheme = function(e, n) {
  var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT, s = o ? e.theme === o.theme : !1, u = e.theme && !s ? e.theme : n || o.theme;
  return u;
}, escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g, dashesAtEnds = /(^-|-$)/g;
function escape$1(e) {
  return e.replace(escapeRegex, "-").replace(dashesAtEnds, "");
}
function isTag(e) {
  return typeof e == "string" && (process.env.NODE_ENV !== "production" ? e.charAt(0) === e.charAt(0).toLowerCase() : !0);
}
function generateDisplayName(e) {
  return isTag(e) ? "styled." + e : "Styled(" + getComponentName(e) + ")";
}
var _TYPE_STATICS, REACT_STATICS = {
  childContextTypes: !0,
  contextTypes: !0,
  defaultProps: !0,
  displayName: !0,
  getDerivedStateFromProps: !0,
  propTypes: !0,
  type: !0
}, KNOWN_STATICS = {
  name: !0,
  length: !0,
  prototype: !0,
  caller: !0,
  callee: !0,
  arguments: !0,
  arity: !0
}, TYPE_STATICS = (_TYPE_STATICS = {}, _TYPE_STATICS[reactIs.exports.ForwardRef] = {
  $$typeof: !0,
  render: !0
}, _TYPE_STATICS), defineProperty$1 = Object.defineProperty, getOwnPropertyNames = Object.getOwnPropertyNames, _Object$getOwnPropert = Object.getOwnPropertySymbols, getOwnPropertySymbols = _Object$getOwnPropert === void 0 ? function() {
  return [];
} : _Object$getOwnPropert, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, getPrototypeOf = Object.getPrototypeOf, objectPrototype = Object.prototype, arrayPrototype = Array.prototype;
function hoistNonReactStatics(e, n, o) {
  if (typeof n != "string") {
    var s = getPrototypeOf(n);
    s && s !== objectPrototype && hoistNonReactStatics(e, s, o);
    for (var u = arrayPrototype.concat(
      getOwnPropertyNames(n),
      getOwnPropertySymbols(n)
    ), d = TYPE_STATICS[e.$$typeof] || REACT_STATICS, g = TYPE_STATICS[n.$$typeof] || REACT_STATICS, m = u.length, w = void 0, B = void 0; m--; )
      if (B = u[m], !KNOWN_STATICS[B] && !(o && o[B]) && !(g && g[B]) && !(d && d[B]) && (w = getOwnPropertyDescriptor(n, B), w))
        try {
          defineProperty$1(e, B, w);
        } catch {
        }
    return e;
  }
  return e;
}
function isDerivedReactComponent(e) {
  return !!(e && e.prototype && e.prototype.isReactComponent);
}
var once = function(e) {
  var n = !1;
  return function() {
    n || (n = !0, e.apply(void 0, arguments));
  };
}, ThemeContext = createContext(), ThemeConsumer = ThemeContext.Consumer;
(function(e) {
  inherits(n, e);
  function n(o) {
    classCallCheck(this, n);
    var s = possibleConstructorReturn(this, e.call(this, o));
    return s.getContext = memoizeOne(s.getContext.bind(s)), s.renderInner = s.renderInner.bind(s), s;
  }
  return n.prototype.render = function() {
    return this.props.children ? /* @__PURE__ */ jsx(ThemeContext.Consumer, {
      children: this.renderInner
    }) : null;
  }, n.prototype.renderInner = function(s) {
    var u = this.getContext(this.props.theme, s);
    return /* @__PURE__ */ jsx(ThemeContext.Provider, {
      value: u,
      children: this.props.children
    });
  }, n.prototype.getTheme = function(s, u) {
    if (isFunction(s)) {
      var d = s(u);
      if (process.env.NODE_ENV !== "production" && (d === null || Array.isArray(d) || (typeof d > "u" ? "undefined" : _typeof(d)) !== "object"))
        throw new StyledComponentsError(7);
      return d;
    }
    if (s === null || Array.isArray(s) || (typeof s > "u" ? "undefined" : _typeof(s)) !== "object")
      throw new StyledComponentsError(8);
    return _extends({}, u, s);
  }, n.prototype.getContext = function(s, u) {
    return this.getTheme(s, u);
  }, n;
})(Component);
var ServerStyleSheet = function() {
  function e() {
    classCallCheck(this, e), this.masterSheet = StyleSheet.master, this.instance = this.masterSheet.clone(), this.sealed = !1;
  }
  return e.prototype.seal = function() {
    if (!this.sealed) {
      var o = this.masterSheet.clones.indexOf(this.instance);
      this.masterSheet.clones.splice(o, 1), this.sealed = !0;
    }
  }, e.prototype.collectStyles = function(o) {
    if (this.sealed)
      throw new StyledComponentsError(2);
    return /* @__PURE__ */ jsx(StyleSheetManager, {
      sheet: this.instance,
      children: o
    });
  }, e.prototype.getStyleTags = function() {
    return this.seal(), this.instance.toHTML();
  }, e.prototype.getStyleElement = function() {
    return this.seal(), this.instance.toReactElements();
  }, e.prototype.interleaveWithNodeStream = function(o) {
    throw new StyledComponentsError(3);
  }, e;
}(), StyleSheetContext = createContext(), StyleSheetConsumer = StyleSheetContext.Consumer, StyleSheetManager = function(e) {
  inherits(n, e);
  function n(o) {
    classCallCheck(this, n);
    var s = possibleConstructorReturn(this, e.call(this, o));
    return s.getContext = memoizeOne(s.getContext), s;
  }
  return n.prototype.getContext = function(s, u) {
    if (s)
      return s;
    if (u)
      return new StyleSheet(u);
    throw new StyledComponentsError(4);
  }, n.prototype.render = function() {
    var s = this.props, u = s.children, d = s.sheet, g = s.target;
    return /* @__PURE__ */ jsx(StyleSheetContext.Provider, {
      value: this.getContext(d, g),
      children: process.env.NODE_ENV !== "production" ? React__default.Children.only(u) : u
    });
  }, n;
}(Component);
process.env.NODE_ENV !== "production" && (StyleSheetManager.propTypes = {
  sheet: propTypes.exports.oneOfType([propTypes.exports.instanceOf(StyleSheet), propTypes.exports.instanceOf(ServerStyleSheet)]),
  target: propTypes.exports.shape({
    appendChild: propTypes.exports.func.isRequired
  })
});
var identifiers = {};
function generateId(e, n, o) {
  var s = typeof n != "string" ? "sc" : escape$1(n), u = (identifiers[s] || 0) + 1;
  identifiers[s] = u;
  var d = s + "-" + e.generateName(s + u);
  return o ? o + "-" + d : d;
}
var StyledComponent = function(e) {
  inherits(n, e);
  function n() {
    classCallCheck(this, n);
    var o = possibleConstructorReturn(this, e.call(this));
    return o.attrs = {}, o.renderOuter = o.renderOuter.bind(o), o.renderInner = o.renderInner.bind(o), process.env.NODE_ENV !== "production" && (o.warnInnerRef = once(function(s) {
      return console.warn('The "innerRef" API has been removed in styled-components v4 in favor of React 16 ref forwarding, use "ref" instead like a typical component. "innerRef" was detected on component "' + s + '".');
    }), o.warnAttrsFnObjectKeyDeprecated = once(function(s, u) {
      return console.warn('Functions as object-form attrs({}) keys are now deprecated and will be removed in a future version of styled-components. Switch to the new attrs(props => ({})) syntax instead for easier and more powerful composition. The attrs key in question is "' + s + '" on component "' + u + '".', `
 ` + new Error().stack);
    }), o.warnNonStyledComponentAttrsObjectKey = once(function(s, u) {
      return console.warn(`It looks like you've used a non styled-component as the value for the "` + s + '" prop in an object-form attrs constructor of "' + u + `".
You should use the new function-form attrs constructor which avoids this issue: attrs(props => ({ yourStuff }))
To continue using the deprecated object syntax, you'll need to wrap your component prop in a function to make it available inside the styled component (you'll still get the deprecation warning though.)
` + ("For example, { " + s + ": () => InnerComponent } instead of { " + s + ": InnerComponent }"));
    })), o;
  }
  return n.prototype.render = function() {
    return /* @__PURE__ */ jsx(StyleSheetConsumer, {
      children: this.renderOuter
    });
  }, n.prototype.renderOuter = function() {
    var s = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : StyleSheet.master;
    return this.styleSheet = s, this.props.forwardedComponent.componentStyle.isStatic ? this.renderInner() : /* @__PURE__ */ jsx(ThemeConsumer, {
      children: this.renderInner
    });
  }, n.prototype.renderInner = function(s) {
    var u = this.props.forwardedComponent, d = u.componentStyle, g = u.defaultProps, m = u.displayName, w = u.foldedComponentIds, B = u.styledComponentId, x = u.target, C = void 0;
    d.isStatic ? C = this.generateAndInjectStyles(EMPTY_OBJECT, this.props) : C = this.generateAndInjectStyles(determineTheme(this.props, s, g) || EMPTY_OBJECT, this.props);
    var v = this.props.as || this.attrs.as || x, y = isTag(v), T = {}, M = _extends({}, this.props, this.attrs), D = void 0;
    for (D in M)
      process.env.NODE_ENV !== "production" && D === "innerRef" && y && this.warnInnerRef(m), !(D === "forwardedComponent" || D === "as") && (D === "forwardedRef" ? T.ref = M[D] : D === "forwardedAs" ? T.as = M[D] : (!y || index(D)) && (T[D] = M[D]));
    return this.props.style && this.attrs.style && (T.style = _extends({}, this.attrs.style, this.props.style)), T.className = Array.prototype.concat(w, B, C !== B ? C : null, this.props.className, this.attrs.className).filter(Boolean).join(" "), createElement(v, T);
  }, n.prototype.buildExecutionContext = function(s, u, d) {
    var g = this, m = _extends({}, u, {
      theme: s
    });
    return d.length && (this.attrs = {}, d.forEach(function(w) {
      var B = w, x = !1, C = void 0, v = void 0;
      isFunction(B) && (B = B(m), x = !0);
      for (v in B)
        C = B[v], x || isFunction(C) && !isDerivedReactComponent(C) && !isStyledComponent(C) && (process.env.NODE_ENV !== "production" && g.warnAttrsFnObjectKeyDeprecated(v, u.forwardedComponent.displayName), C = C(m), process.env.NODE_ENV !== "production" && React__default.isValidElement(C) && g.warnNonStyledComponentAttrsObjectKey(v, u.forwardedComponent.displayName)), g.attrs[v] = C, m[v] = C;
    })), m;
  }, n.prototype.generateAndInjectStyles = function(s, u) {
    var d = u.forwardedComponent, g = d.attrs, m = d.componentStyle, w = d.warnTooManyClasses;
    if (m.isStatic && !g.length)
      return m.generateAndInjectStyles(EMPTY_OBJECT, this.styleSheet);
    var B = m.generateAndInjectStyles(this.buildExecutionContext(s, u, g), this.styleSheet);
    return process.env.NODE_ENV !== "production" && w && w(B), B;
  }, n;
}(Component);
function createStyledComponent(e, n, o) {
  var s = isStyledComponent(e), u = !isTag(e), d = n.displayName, g = d === void 0 ? generateDisplayName(e) : d, m = n.componentId, w = m === void 0 ? generateId(ComponentStyle, n.displayName, n.parentComponentId) : m, B = n.ParentComponent, x = B === void 0 ? StyledComponent : B, C = n.attrs, v = C === void 0 ? EMPTY_ARRAY : C, y = n.displayName && n.componentId ? escape$1(n.displayName) + "-" + n.componentId : n.componentId || w, T = s && e.attrs ? Array.prototype.concat(e.attrs, v).filter(Boolean) : v, M = new ComponentStyle(s ? e.componentStyle.rules.concat(o) : o, T, y), D = void 0, V = function(H, q) {
    return /* @__PURE__ */ jsx(x, {
      ...H,
      forwardedComponent: D,
      forwardedRef: q
    });
  };
  return V.displayName = g, D = React__default.forwardRef(V), D.displayName = g, D.attrs = T, D.componentStyle = M, D.foldedComponentIds = s ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : EMPTY_ARRAY, D.styledComponentId = y, D.target = s ? e.target : e, D.withComponent = function(H) {
    var q = n.componentId, $ = objectWithoutProperties(n, ["componentId"]), re = q && q + "-" + (isTag(H) ? H : escape$1(getComponentName(H))), ce = _extends({}, $, {
      attrs: T,
      componentId: re,
      ParentComponent: x
    });
    return createStyledComponent(H, ce, o);
  }, Object.defineProperty(D, "defaultProps", {
    get: function() {
      return this._foldedDefaultProps;
    },
    set: function(H) {
      this._foldedDefaultProps = s ? merge(e.defaultProps, H) : H;
    }
  }), process.env.NODE_ENV !== "production" && (D.warnTooManyClasses = createWarnTooManyClasses(g)), D.toString = function() {
    return "." + D.styledComponentId;
  }, u && hoistNonReactStatics(D, e, {
    attrs: !0,
    componentStyle: !0,
    displayName: !0,
    foldedComponentIds: !0,
    styledComponentId: !0,
    target: !0,
    withComponent: !0
  }), D;
}
var domElements = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "marker",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], styled = function e(n) {
  return constructWithOptions(createStyledComponent, n);
};
domElements.forEach(function(e) {
  styled[e] = styled(e);
});
IS_BROWSER && (window.scCGSHMRCache = {});
process.env.NODE_ENV !== "production" && typeof navigator < "u" && navigator.product === "ReactNative" && console.warn(`It looks like you've imported 'styled-components' on React Native.
Perhaps you're looking to import 'styled-components/native'?
Read more about this at https://www.styled-components.com/docs/basics#react-native`);
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && typeof window < "u" && typeof navigator < "u" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Node.js") === -1 && navigator.userAgent.indexOf("jsdom") === -1 && (window["__styled-components-init__"] = window["__styled-components-init__"] || 0, window["__styled-components-init__"] === 1 && console.warn(`It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles not rendering properly, errors happening during rehydration process and makes your application bigger without a good reason.

See https://s-c.sh/2BAXzed for more info.`), window["__styled-components-init__"] += 1);
const styled$1 = styled, StyledFrame = styled$1.div`
  align-self: flex-end;
  display: flex;
  background-image: url("frame/left-top-corner.png"),
    url("frame/right-top-corner.png"), url("frame/left-bottom-corner.png"),
    url("frame/right-bottom-corner.png"), url("frame/top-horizontal-bar.png"),
    url("frame/bottom-horizontal-bar.png"), url("frame/left-vertical-bar.png"),
    url("frame/right-vertical-bar.png"), url("frame/bg2.jpg");
  background-position: left top, right top, left 1px bottom, right 1px bottom,
    left 1px, left 1px bottom, left 1px bottom, right 1px top, center top;
  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat, repeat-x,
    repeat-x, repeat-y, repeat-y, no-repeat;
  background-color: #1d2123;
  position: relative;
  padding: 8px;
`;
StyledFrame.displayName = "StyledFrame";
const Frame = ({
  className: e,
  children: n
}) => /* @__PURE__ */ jsx(StyledFrame, {
  className: e,
  children: /* @__PURE__ */ jsx("div", {
    className: "w-full h-full p-3 rounded shadow-inner bg-[url('/frame/bg.jpg')] bg-center bg-cover",
    children: n
  })
}), StyledBagBox = styled$1.div`
  ${(e) => {
  const {
    canDrop: n,
    isOver: o
  } = e;
  return css`
      position: relative;
      border: ${n ? `1px solid ${o ? "green" : "gold"}` : "1px solid #0c1e20"};
      position: relative;
      width: 6em;
      display: flex;
      height: 6em;
      align-items: center;
      justify-content: center;
      background-image: radial-gradient(#0c1e20 0%, #101010 66%);
      border-radius: 2px;
      box-shadow: 0px 0px 0px 2px #2f3639;
    `;
}}
`;
StyledBagBox.displayName = "StyledBagBox";
const RemoteBox = ({
  className: e,
  children: n
}) => /* @__PURE__ */ jsx(StyledBagBox, {
  className: e,
  isOver: !1,
  canDrop: !1,
  children: n
}), RemoteBox$1 = React__default.memo(RemoteBox), BagBox = ({
  className: e,
  children: n,
  isOver: o,
  canDrop: s
}) => /* @__PURE__ */ jsx(StyledBagBox, {
  className: e,
  isOver: o,
  canDrop: s,
  children: n
}), BagBox$1 = React__default.memo(BagBox);
var classnames$1 = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(e) {
  (function() {
    var n = {}.hasOwnProperty;
    function o() {
      for (var s = [], u = 0; u < arguments.length; u++) {
        var d = arguments[u];
        if (!!d) {
          var g = typeof d;
          if (g === "string" || g === "number")
            s.push(d);
          else if (Array.isArray(d)) {
            if (d.length) {
              var m = o.apply(null, d);
              m && s.push(m);
            }
          } else if (g === "object") {
            if (d.toString !== Object.prototype.toString && !d.toString.toString().includes("[native code]")) {
              s.push(d.toString());
              continue;
            }
            for (var w in d)
              n.call(d, w) && d[w] && s.push(w);
          }
        }
      }
      return s.join(" ");
    }
    e.exports ? (o.default = o, e.exports = o) : window.classNames = o;
  })();
})(classnames$1);
const classnames = classnames$1.exports;
var react3dViewer = { exports: {} };
/*!
 *  react-3d-viewer v1.0.12
 *  By https://github.com/dwqdaiwenqi 
 *  Github: https://github.com/dwqdaiwenqi/react-3d-viewer
 *  MIT Licensed.
 */
(function(e, n) {
  (function(o, s) {
    e.exports = s();
  })(window, function() {
    return function(o) {
      var s = {};
      function u(d) {
        if (s[d])
          return s[d].exports;
        var g = s[d] = { i: d, l: !1, exports: {} };
        return o[d].call(g.exports, g, g.exports, u), g.l = !0, g.exports;
      }
      return u.m = o, u.c = s, u.d = function(d, g, m) {
        u.o(d, g) || Object.defineProperty(d, g, { enumerable: !0, get: m });
      }, u.r = function(d) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(d, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(d, "__esModule", { value: !0 });
      }, u.t = function(d, g) {
        if (1 & g && (d = u(d)), 8 & g || 4 & g && typeof d == "object" && d && d.__esModule)
          return d;
        var m = /* @__PURE__ */ Object.create(null);
        if (u.r(m), Object.defineProperty(m, "default", { enumerable: !0, value: d }), 2 & g && typeof d != "string")
          for (var w in d)
            u.d(m, w, function(B) {
              return d[B];
            }.bind(null, w));
        return m;
      }, u.n = function(d) {
        var g = d && d.__esModule ? function() {
          return d.default;
        } : function() {
          return d;
        };
        return u.d(g, "a", g), g;
      }, u.o = function(d, g) {
        return Object.prototype.hasOwnProperty.call(d, g);
      }, u.p = "", u(u.s = 13);
    }([function(o, s, u) {
      function d() {
      }
      u.r(s), u.d(s, "WebGLRenderTargetCube", function() {
        return Da;
      }), u.d(s, "WebGLRenderTarget", function() {
        return Aa;
      }), u.d(s, "WebGLRenderer", function() {
        return uc;
      }), u.d(s, "ShaderLib", function() {
        return la;
      }), u.d(s, "UniformsLib", function() {
        return hr;
      }), u.d(s, "UniformsUtils", function() {
        return Zn;
      }), u.d(s, "ShaderChunk", function() {
        return Kr;
      }), u.d(s, "FogExp2", function() {
        return za;
      }), u.d(s, "Fog", function() {
        return Ja;
      }), u.d(s, "Scene", function() {
        return Ms;
      }), u.d(s, "Sprite", function() {
        return Ho;
      }), u.d(s, "LOD", function() {
        return qo;
      }), u.d(s, "SkinnedMesh", function() {
        return ks;
      }), u.d(s, "Skeleton", function() {
        return Do;
      }), u.d(s, "Bone", function() {
        return Ns;
      }), u.d(s, "Mesh", function() {
        return ri;
      }), u.d(s, "LineSegments", function() {
        return cn;
      }), u.d(s, "LineLoop", function() {
        return Fs;
      }), u.d(s, "Line", function() {
        return ni;
      }), u.d(s, "Points", function() {
        return Wa;
      }), u.d(s, "Group", function() {
        return La;
      }), u.d(s, "VideoTexture", function() {
        return lc;
      }), u.d(s, "DataTexture", function() {
        return ua;
      }), u.d(s, "CompressedTexture", function() {
        return Ka;
      }), u.d(s, "CubeTexture", function() {
        return zi;
      }), u.d(s, "CanvasTexture", function() {
        return $o;
      }), u.d(s, "DepthTexture", function() {
        return jo;
      }), u.d(s, "Texture", function() {
        return un;
      }), u.d(s, "CompressedTextureLoader", function() {
        return CA;
      }), u.d(s, "DataTextureLoader", function() {
        return pc;
      }), u.d(s, "CubeTextureLoader", function() {
        return gc;
      }), u.d(s, "TextureLoader", function() {
        return Os;
      }), u.d(s, "ObjectLoader", function() {
        return bA;
      }), u.d(s, "MaterialLoader", function() {
        return Xs;
      }), u.d(s, "BufferGeometryLoader", function() {
        return vc;
      }), u.d(s, "DefaultLoadingManager", function() {
        return oi;
      }), u.d(s, "LoadingManager", function() {
        return fc;
      }), u.d(s, "JSONLoader", function() {
        return Ic;
      }), u.d(s, "ImageLoader", function() {
        return ls;
      }), u.d(s, "ImageBitmapLoader", function() {
        return xc;
      }), u.d(s, "FontLoader", function() {
        return SA;
      }), u.d(s, "FileLoader", function() {
        return xi;
      }), u.d(s, "Loader", function() {
        return go;
      }), u.d(s, "LoaderUtils", function() {
        return Cc;
      }), u.d(s, "Cache", function() {
        return Ma;
      }), u.d(s, "AudioLoader", function() {
        return Qc;
      }), u.d(s, "SpotLightShadow", function() {
        return Hs;
      }), u.d(s, "SpotLight", function() {
        return qs;
      }), u.d(s, "PointLight", function() {
        return Ds;
      }), u.d(s, "RectAreaLight", function() {
        return Vs;
      }), u.d(s, "HemisphereLight", function() {
        return Us;
      }), u.d(s, "DirectionalLightShadow", function() {
        return $s;
      }), u.d(s, "DirectionalLight", function() {
        return js;
      }), u.d(s, "AmbientLight", function() {
        return Ys;
      }), u.d(s, "LightShadow", function() {
        return Na;
      }), u.d(s, "Light", function() {
        return gn;
      }), u.d(s, "StereoCamera", function() {
        return TA;
      }), u.d(s, "PerspectiveCamera", function() {
        return En;
      }), u.d(s, "OrthographicCamera", function() {
        return $a;
      }), u.d(s, "CubeCamera", function() {
        return gs;
      }), u.d(s, "ArrayCamera", function() {
        return Po;
      }), u.d(s, "Camera", function() {
        return Ni;
      }), u.d(s, "AudioListener", function() {
        return Sc;
      }), u.d(s, "PositionalAudio", function() {
        return Tc;
      }), u.d(s, "AudioContext", function() {
        return _c;
      }), u.d(s, "AudioAnalyser", function() {
        return Rc;
      }), u.d(s, "Audio", function() {
        return mo;
      }), u.d(s, "VectorKeyframeTrack", function() {
        return po;
      }), u.d(s, "StringKeyframeTrack", function() {
        return Zs;
      }), u.d(s, "QuaternionKeyframeTrack", function() {
        return ps;
      }), u.d(s, "NumberKeyframeTrack", function() {
        return fo;
      }), u.d(s, "ColorKeyframeTrack", function() {
        return Ws;
      }), u.d(s, "BooleanKeyframeTrack", function() {
        return Js;
      }), u.d(s, "PropertyMixer", function() {
        return Mc;
      }), u.d(s, "PropertyBinding", function() {
        return Vn;
      }), u.d(s, "KeyframeTrack", function() {
        return On;
      }), u.d(s, "AnimationUtils", function() {
        return Yn;
      }), u.d(s, "AnimationObjectGroup", function() {
        return NA;
      }), u.d(s, "AnimationMixer", function() {
        return kc;
      }), u.d(s, "AnimationClip", function() {
        return gi;
      }), u.d(s, "Uniform", function() {
        return tc;
      }), u.d(s, "InstancedBufferGeometry", function() {
        return Fc;
      }), u.d(s, "BufferGeometry", function() {
        return rr;
      }), u.d(s, "Geometry", function() {
        return Cr;
      }), u.d(s, "InterleavedBufferAttribute", function() {
        return Uo;
      }), u.d(s, "InstancedInterleavedBuffer", function() {
        return Gc;
      }), u.d(s, "InterleavedBuffer", function() {
        return Ea;
      }), u.d(s, "InstancedBufferAttribute", function() {
        return Oc;
      }), u.d(s, "Face3", function() {
        return Li;
      }), u.d(s, "Object3D", function() {
        return zt;
      }), u.d(s, "Raycaster", function() {
        return FA;
      }), u.d(s, "Layers", function() {
        return oc;
      }), u.d(s, "EventDispatcher", function() {
        return d;
      }), u.d(s, "Clock", function() {
        return OA;
      }), u.d(s, "QuaternionLinearInterpolant", function() {
        return Ks;
      }), u.d(s, "LinearInterpolant", function() {
        return fs;
      }), u.d(s, "DiscreteInterpolant", function() {
        return zs;
      }), u.d(s, "CubicInterpolant", function() {
        return Ls;
      }), u.d(s, "Interpolant", function() {
        return di;
      }), u.d(s, "Triangle", function() {
        return ui;
      }), u.d(s, "Math", function() {
        return Rr;
      }), u.d(s, "Spherical", function() {
        return PA;
      }), u.d(s, "Cylindrical", function() {
        return UA;
      }), u.d(s, "Plane", function() {
        return Mi;
      }), u.d(s, "Frustum", function() {
        return Rs;
      }), u.d(s, "Sphere", function() {
        return Bi;
      }), u.d(s, "Ray", function() {
        return ma;
      }), u.d(s, "Matrix4", function() {
        return Br;
      }), u.d(s, "Matrix3", function() {
        return Kn;
      }), u.d(s, "Box3", function() {
        return Vi;
      }), u.d(s, "Box2", function() {
        return Uc;
      }), u.d(s, "Line3", function() {
        return Hc;
      }), u.d(s, "Euler", function() {
        return da;
      }), u.d(s, "Vector4", function() {
        return nn;
      }), u.d(s, "Vector3", function() {
        return xe;
      }), u.d(s, "Vector2", function() {
        return Tt;
      }), u.d(s, "Quaternion", function() {
        return fn;
      }), u.d(s, "Color", function() {
        return dr;
      }), u.d(s, "ImmediateRenderObject", function() {
        return ms;
      }), u.d(s, "VertexNormalsHelper", function() {
        return Es;
      }), u.d(s, "SpotLightHelper", function() {
        return Eo;
      }), u.d(s, "SkeletonHelper", function() {
        return yo;
      }), u.d(s, "PointLightHelper", function() {
        return Bo;
      }), u.d(s, "RectAreaLightHelper", function() {
        return vo;
      }), u.d(s, "HemisphereLightHelper", function() {
        return Co;
      }), u.d(s, "GridHelper", function() {
        return ys;
      }), u.d(s, "PolarGridHelper", function() {
        return rc;
      }), u.d(s, "FaceNormalsHelper", function() {
        return Bs;
      }), u.d(s, "DirectionalLightHelper", function() {
        return Io;
      }), u.d(s, "CameraHelper", function() {
        return vs;
      }), u.d(s, "BoxHelper", function() {
        return ka;
      }), u.d(s, "Box3Helper", function() {
        return Cs;
      }), u.d(s, "PlaneHelper", function() {
        return Is;
      }), u.d(s, "ArrowHelper", function() {
        return Fa;
      }), u.d(s, "AxesHelper", function() {
        return xs;
      }), u.d(s, "Shape", function() {
        return aa;
      }), u.d(s, "Path", function() {
        return Si;
      }), u.d(s, "ShapePath", function() {
        return wc;
      }), u.d(s, "Font", function() {
        return bc;
      }), u.d(s, "CurvePath", function() {
        return Zi;
      }), u.d(s, "Curve", function() {
        return gr;
      }), u.d(s, "ImageUtils", function() {
        return ea;
      }), u.d(s, "ShapeUtils", function() {
        return Ji;
      }), u.d(s, "WebGLUtils", function() {
        return dA;
      }), u.d(s, "WireframeGeometry", function() {
        return Za;
      }), u.d(s, "ParametricGeometry", function() {
        return Yo;
      }), u.d(s, "ParametricBufferGeometry", function() {
        return Xa;
      }), u.d(s, "TetrahedronGeometry", function() {
        return Lo;
      }), u.d(s, "TetrahedronBufferGeometry", function() {
        return eo;
      }), u.d(s, "OctahedronGeometry", function() {
        return zo;
      }), u.d(s, "OctahedronBufferGeometry", function() {
        return ya;
      }), u.d(s, "IcosahedronGeometry", function() {
        return Jo;
      }), u.d(s, "IcosahedronBufferGeometry", function() {
        return to;
      }), u.d(s, "DodecahedronGeometry", function() {
        return Wo;
      }), u.d(s, "DodecahedronBufferGeometry", function() {
        return ro;
      }), u.d(s, "PolyhedronGeometry", function() {
        return Vo;
      }), u.d(s, "PolyhedronBufferGeometry", function() {
        return ii;
      }), u.d(s, "TubeGeometry", function() {
        return Ko;
      }), u.d(s, "TubeBufferGeometry", function() {
        return no;
      }), u.d(s, "TorusKnotGeometry", function() {
        return Zo;
      }), u.d(s, "TorusKnotBufferGeometry", function() {
        return io;
      }), u.d(s, "TorusGeometry", function() {
        return Xo;
      }), u.d(s, "TorusBufferGeometry", function() {
        return ao;
      }), u.d(s, "TextGeometry", function() {
        return is;
      }), u.d(s, "TextBufferGeometry", function() {
        return oo;
      }), u.d(s, "SphereGeometry", function() {
        return as;
      }), u.d(s, "SphereBufferGeometry", function() {
        return Ca;
      }), u.d(s, "RingGeometry", function() {
        return os;
      }), u.d(s, "RingBufferGeometry", function() {
        return so;
      }), u.d(s, "PlaneGeometry", function() {
        return Go;
      }), u.d(s, "PlaneBufferGeometry", function() {
        return ga;
      }), u.d(s, "LatheGeometry", function() {
        return ss;
      }), u.d(s, "LatheBufferGeometry", function() {
        return co;
      }), u.d(s, "ShapeGeometry", function() {
        return Ia;
      }), u.d(s, "ShapeBufferGeometry", function() {
        return xa;
      }), u.d(s, "ExtrudeGeometry", function() {
        return va;
      }), u.d(s, "ExtrudeBufferGeometry", function() {
        return ki;
      }), u.d(s, "EdgesGeometry", function() {
        return Ao;
      }), u.d(s, "ConeGeometry", function() {
        return cs;
      }), u.d(s, "ConeBufferGeometry", function() {
        return As;
      }), u.d(s, "CylinderGeometry", function() {
        return wa;
      }), u.d(s, "CylinderBufferGeometry", function() {
        return Wi;
      }), u.d(s, "CircleGeometry", function() {
        return us;
      }), u.d(s, "CircleBufferGeometry", function() {
        return uo;
      }), u.d(s, "BoxGeometry", function() {
        return ja;
      }), u.d(s, "BoxBufferGeometry", function() {
        return pa;
      }), u.d(s, "ShadowMaterial", function() {
        return ba;
      }), u.d(s, "SpriteMaterial", function() {
        return ia;
      }), u.d(s, "RawShaderMaterial", function() {
        return lo;
      }), u.d(s, "ShaderMaterial", function() {
        return pi;
      }), u.d(s, "PointsMaterial", function() {
        return Ci;
      }), u.d(s, "MeshPhysicalMaterial", function() {
        return _a;
      }), u.d(s, "MeshStandardMaterial", function() {
        return Fi;
      }), u.d(s, "MeshPhongMaterial", function() {
        return Ii;
      }), u.d(s, "MeshToonMaterial", function() {
        return Qa;
      }), u.d(s, "MeshNormalMaterial", function() {
        return Sa;
      }), u.d(s, "MeshLambertMaterial", function() {
        return Ta;
      }), u.d(s, "MeshDepthMaterial", function() {
        return ra;
      }), u.d(s, "MeshDistanceMaterial", function() {
        return na;
      }), u.d(s, "MeshBasicMaterial", function() {
        return Ai;
      }), u.d(s, "LineDashedMaterial", function() {
        return Ra;
      }), u.d(s, "LineBasicMaterial", function() {
        return on;
      }), u.d(s, "Material", function() {
        return Nr;
      }), u.d(s, "Float64BufferAttribute", function() {
        return Fo;
      }), u.d(s, "Float32BufferAttribute", function() {
        return jt;
      }), u.d(s, "Uint32BufferAttribute", function() {
        return fa;
      }), u.d(s, "Int32BufferAttribute", function() {
        return ko;
      }), u.d(s, "Uint16BufferAttribute", function() {
        return ha;
      }), u.d(s, "Int16BufferAttribute", function() {
        return No;
      }), u.d(s, "Uint8ClampedBufferAttribute", function() {
        return Mo;
      }), u.d(s, "Uint8BufferAttribute", function() {
        return Ro;
      }), u.d(s, "Int8BufferAttribute", function() {
        return To;
      }), u.d(s, "BufferAttribute", function() {
        return Or;
      }), u.d(s, "ArcCurve", function() {
        return ho;
      }), u.d(s, "CatmullRomCurve3", function() {
        return jn;
      }), u.d(s, "CubicBezierCurve", function() {
        return wi;
      }), u.d(s, "CubicBezierCurve3", function() {
        return Gi;
      }), u.d(s, "EllipseCurve", function() {
        return li;
      }), u.d(s, "LineCurve", function() {
        return si;
      }), u.d(s, "LineCurve3", function() {
        return bi;
      }), u.d(s, "QuadraticBezierCurve", function() {
        return _i;
      }), u.d(s, "QuadraticBezierCurve3", function() {
        return Oi;
      }), u.d(s, "SplineCurve", function() {
        return Qi;
      }), u.d(s, "REVISION", function() {
        return g;
      }), u.d(s, "MOUSE", function() {
        return m;
      }), u.d(s, "CullFaceNone", function() {
        return w;
      }), u.d(s, "CullFaceBack", function() {
        return B;
      }), u.d(s, "CullFaceFront", function() {
        return x;
      }), u.d(s, "CullFaceFrontBack", function() {
        return C;
      }), u.d(s, "FrontFaceDirectionCW", function() {
        return v;
      }), u.d(s, "FrontFaceDirectionCCW", function() {
        return y;
      }), u.d(s, "BasicShadowMap", function() {
        return T;
      }), u.d(s, "PCFShadowMap", function() {
        return M;
      }), u.d(s, "PCFSoftShadowMap", function() {
        return D;
      }), u.d(s, "FrontSide", function() {
        return V;
      }), u.d(s, "BackSide", function() {
        return O;
      }), u.d(s, "DoubleSide", function() {
        return H;
      }), u.d(s, "FlatShading", function() {
        return q;
      }), u.d(s, "SmoothShading", function() {
        return $;
      }), u.d(s, "NoColors", function() {
        return re;
      }), u.d(s, "FaceColors", function() {
        return ce;
      }), u.d(s, "VertexColors", function() {
        return Ie;
      }), u.d(s, "NoBlending", function() {
        return Pe;
      }), u.d(s, "NormalBlending", function() {
        return se;
      }), u.d(s, "AdditiveBlending", function() {
        return Ce;
      }), u.d(s, "SubtractiveBlending", function() {
        return Ge;
      }), u.d(s, "MultiplyBlending", function() {
        return $e;
      }), u.d(s, "CustomBlending", function() {
        return Be;
      }), u.d(s, "AddEquation", function() {
        return Me;
      }), u.d(s, "SubtractEquation", function() {
        return We;
      }), u.d(s, "ReverseSubtractEquation", function() {
        return nt;
      }), u.d(s, "MinEquation", function() {
        return Xe;
      }), u.d(s, "MaxEquation", function() {
        return Je;
      }), u.d(s, "ZeroFactor", function() {
        return qe;
      }), u.d(s, "OneFactor", function() {
        return ye;
      }), u.d(s, "SrcColorFactor", function() {
        return Ue;
      }), u.d(s, "OneMinusSrcColorFactor", function() {
        return ze;
      }), u.d(s, "SrcAlphaFactor", function() {
        return X;
      }), u.d(s, "OneMinusSrcAlphaFactor", function() {
        return ut;
      }), u.d(s, "DstAlphaFactor", function() {
        return ot;
      }), u.d(s, "OneMinusDstAlphaFactor", function() {
        return mt;
      }), u.d(s, "DstColorFactor", function() {
        return ve;
      }), u.d(s, "OneMinusDstColorFactor", function() {
        return je;
      }), u.d(s, "SrcAlphaSaturateFactor", function() {
        return ie;
      }), u.d(s, "NeverDepth", function() {
        return ae;
      }), u.d(s, "AlwaysDepth", function() {
        return z;
      }), u.d(s, "LessDepth", function() {
        return be;
      }), u.d(s, "LessEqualDepth", function() {
        return fe;
      }), u.d(s, "EqualDepth", function() {
        return J;
      }), u.d(s, "GreaterEqualDepth", function() {
        return R;
      }), u.d(s, "GreaterDepth", function() {
        return Q;
      }), u.d(s, "NotEqualDepth", function() {
        return b;
      }), u.d(s, "MultiplyOperation", function() {
        return U;
      }), u.d(s, "MixOperation", function() {
        return Z;
      }), u.d(s, "AddOperation", function() {
        return ne;
      }), u.d(s, "NoToneMapping", function() {
        return le;
      }), u.d(s, "LinearToneMapping", function() {
        return Ne;
      }), u.d(s, "ReinhardToneMapping", function() {
        return Ke;
      }), u.d(s, "Uncharted2ToneMapping", function() {
        return Ze;
      }), u.d(s, "CineonToneMapping", function() {
        return et;
      }), u.d(s, "UVMapping", function() {
        return Y;
      }), u.d(s, "CubeReflectionMapping", function() {
        return k;
      }), u.d(s, "CubeRefractionMapping", function() {
        return F;
      }), u.d(s, "EquirectangularReflectionMapping", function() {
        return ue;
      }), u.d(s, "EquirectangularRefractionMapping", function() {
        return Qe;
      }), u.d(s, "SphericalReflectionMapping", function() {
        return Oe;
      }), u.d(s, "CubeUVReflectionMapping", function() {
        return Ve;
      }), u.d(s, "CubeUVRefractionMapping", function() {
        return It;
      }), u.d(s, "RepeatWrapping", function() {
        return vt;
      }), u.d(s, "ClampToEdgeWrapping", function() {
        return Qt;
      }), u.d(s, "MirroredRepeatWrapping", function() {
        return Ct;
      }), u.d(s, "NearestFilter", function() {
        return Rt;
      }), u.d(s, "NearestMipMapNearestFilter", function() {
        return or;
      }), u.d(s, "NearestMipMapLinearFilter", function() {
        return tn;
      }), u.d(s, "LinearFilter", function() {
        return ur;
      }), u.d(s, "LinearMipMapNearestFilter", function() {
        return Vr;
      }), u.d(s, "LinearMipMapLinearFilter", function() {
        return zr;
      }), u.d(s, "UnsignedByteType", function() {
        return $r;
      }), u.d(s, "ByteType", function() {
        return jr;
      }), u.d(s, "ShortType", function() {
        return dn;
      }), u.d(s, "UnsignedShortType", function() {
        return vn;
      }), u.d(s, "IntType", function() {
        return ti;
      }), u.d(s, "UnsignedIntType", function() {
        return Fn;
      }), u.d(s, "FloatType", function() {
        return Yr;
      }), u.d(s, "HalfFloatType", function() {
        return rn;
      }), u.d(s, "UnsignedShort4444Type", function() {
        return Zr;
      }), u.d(s, "UnsignedShort5551Type", function() {
        return hn;
      }), u.d(s, "UnsignedShort565Type", function() {
        return Cn;
      }), u.d(s, "UnsignedInt248Type", function() {
        return In;
      }), u.d(s, "AlphaFormat", function() {
        return xn;
      }), u.d(s, "RGBFormat", function() {
        return ke;
      }), u.d(s, "RGBAFormat", function() {
        return st;
      }), u.d(s, "LuminanceFormat", function() {
        return Pt;
      }), u.d(s, "LuminanceAlphaFormat", function() {
        return lr;
      }), u.d(s, "RGBEFormat", function() {
        return wr;
      }), u.d(s, "DepthFormat", function() {
        return Qr;
      }), u.d(s, "DepthStencilFormat", function() {
        return br;
      }), u.d(s, "RGB_S3TC_DXT1_Format", function() {
        return yr;
      }), u.d(s, "RGBA_S3TC_DXT1_Format", function() {
        return Mr;
      }), u.d(s, "RGBA_S3TC_DXT3_Format", function() {
        return Jr;
      }), u.d(s, "RGBA_S3TC_DXT5_Format", function() {
        return ir;
      }), u.d(s, "RGB_PVRTC_4BPPV1_Format", function() {
        return nr;
      }), u.d(s, "RGB_PVRTC_2BPPV1_Format", function() {
        return Jt;
      }), u.d(s, "RGBA_PVRTC_4BPPV1_Format", function() {
        return _e;
      }), u.d(s, "RGBA_PVRTC_2BPPV1_Format", function() {
        return St;
      }), u.d(s, "RGB_ETC1_Format", function() {
        return tt;
      }), u.d(s, "RGBA_ASTC_4x4_Format", function() {
        return Vt;
      }), u.d(s, "RGBA_ASTC_5x4_Format", function() {
        return L;
      }), u.d(s, "RGBA_ASTC_5x5_Format", function() {
        return te;
      }), u.d(s, "RGBA_ASTC_6x5_Format", function() {
        return de;
      }), u.d(s, "RGBA_ASTC_6x6_Format", function() {
        return Ee;
      }), u.d(s, "RGBA_ASTC_8x5_Format", function() {
        return ge;
      }), u.d(s, "RGBA_ASTC_8x6_Format", function() {
        return rt;
      }), u.d(s, "RGBA_ASTC_8x8_Format", function() {
        return ht;
      }), u.d(s, "RGBA_ASTC_10x5_Format", function() {
        return lt;
      }), u.d(s, "RGBA_ASTC_10x6_Format", function() {
        return Ft;
      }), u.d(s, "RGBA_ASTC_10x8_Format", function() {
        return Wt;
      }), u.d(s, "RGBA_ASTC_10x10_Format", function() {
        return Gt;
      }), u.d(s, "RGBA_ASTC_12x10_Format", function() {
        return Xt;
      }), u.d(s, "RGBA_ASTC_12x12_Format", function() {
        return Sr;
      }), u.d(s, "LoopOnce", function() {
        return Fr;
      }), u.d(s, "LoopRepeat", function() {
        return Pr;
      }), u.d(s, "LoopPingPong", function() {
        return $t;
      }), u.d(s, "InterpolateDiscrete", function() {
        return Lt;
      }), u.d(s, "InterpolateLinear", function() {
        return Tr;
      }), u.d(s, "InterpolateSmooth", function() {
        return mr;
      }), u.d(s, "ZeroCurvatureEnding", function() {
        return ar;
      }), u.d(s, "ZeroSlopeEnding", function() {
        return Gr;
      }), u.d(s, "WrapAroundEnding", function() {
        return Xr;
      }), u.d(s, "TrianglesDrawMode", function() {
        return _r;
      }), u.d(s, "TriangleStripDrawMode", function() {
        return Kt;
      }), u.d(s, "TriangleFanDrawMode", function() {
        return vr;
      }), u.d(s, "LinearEncoding", function() {
        return Wr;
      }), u.d(s, "sRGBEncoding", function() {
        return _n;
      }), u.d(s, "GammaEncoding", function() {
        return ci;
      }), u.d(s, "RGBEEncoding", function() {
        return $i;
      }), u.d(s, "LogLuvEncoding", function() {
        return yi;
      }), u.d(s, "RGBM7Encoding", function() {
        return wn;
      }), u.d(s, "RGBM16Encoding", function() {
        return ca;
      }), u.d(s, "RGBDEncoding", function() {
        return Qo;
      }), u.d(s, "BasicDepthPacking", function() {
        return So;
      }), u.d(s, "RGBADepthPacking", function() {
        return qa;
      }), u.d(s, "TangentSpaceNormalMap", function() {
        return ji;
      }), u.d(s, "ObjectSpaceNormalMap", function() {
        return Yi;
      }), u.d(s, "CubeGeometry", function() {
        return ja;
      }), u.d(s, "Face4", function() {
        return ju;
      }), u.d(s, "LineStrip", function() {
        return Yu;
      }), u.d(s, "LinePieces", function() {
        return Vu;
      }), u.d(s, "MeshFaceMaterial", function() {
        return Lu;
      }), u.d(s, "MultiMaterial", function() {
        return zu;
      }), u.d(s, "PointCloud", function() {
        return Ju;
      }), u.d(s, "Particle", function() {
        return Wu;
      }), u.d(s, "ParticleSystem", function() {
        return Ku;
      }), u.d(s, "PointCloudMaterial", function() {
        return Zu;
      }), u.d(s, "ParticleBasicMaterial", function() {
        return Xu;
      }), u.d(s, "ParticleSystemMaterial", function() {
        return el;
      }), u.d(s, "Vertex", function() {
        return tl;
      }), u.d(s, "DynamicBufferAttribute", function() {
        return rl;
      }), u.d(s, "Int8Attribute", function() {
        return nl;
      }), u.d(s, "Uint8Attribute", function() {
        return il;
      }), u.d(s, "Uint8ClampedAttribute", function() {
        return al;
      }), u.d(s, "Int16Attribute", function() {
        return ol;
      }), u.d(s, "Uint16Attribute", function() {
        return sl;
      }), u.d(s, "Int32Attribute", function() {
        return cl;
      }), u.d(s, "Uint32Attribute", function() {
        return Al;
      }), u.d(s, "Float32Attribute", function() {
        return ul;
      }), u.d(s, "Float64Attribute", function() {
        return ll;
      }), u.d(s, "ClosedSplineCurve3", function() {
        return HA;
      }), u.d(s, "SplineCurve3", function() {
        return qA;
      }), u.d(s, "Spline", function() {
        return qc;
      }), u.d(s, "AxisHelper", function() {
        return dl;
      }), u.d(s, "BoundingBoxHelper", function() {
        return hl;
      }), u.d(s, "EdgesHelper", function() {
        return fl;
      }), u.d(s, "WireframeHelper", function() {
        return pl;
      }), u.d(s, "XHRLoader", function() {
        return gl;
      }), u.d(s, "BinaryTextureLoader", function() {
        return ml;
      }), u.d(s, "GeometryUtils", function() {
        return El;
      }), u.d(s, "Projector", function() {
        return yl;
      }), u.d(s, "CanvasRenderer", function() {
        return Bl;
      }), u.d(s, "SceneUtils", function() {
        return vl;
      }), u.d(s, "LensFlare", function() {
        return Cl;
      }), Number.EPSILON === void 0 && (Number.EPSILON = Math.pow(2, -52)), Number.isInteger === void 0 && (Number.isInteger = function(t) {
        return typeof t == "number" && isFinite(t) && Math.floor(t) === t;
      }), Math.sign === void 0 && (Math.sign = function(t) {
        return t < 0 ? -1 : t > 0 ? 1 : +t;
      }), !("name" in Function.prototype) && Object.defineProperty(Function.prototype, "name", { get: function() {
        return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
      } }), Object.assign === void 0 && (Object.assign = function(t) {
        if (t == null)
          throw new TypeError("Cannot convert undefined or null to object");
        for (var a = Object(t), A = 1; A < arguments.length; A++) {
          var l = arguments[A];
          if (l != null)
            for (var h in l)
              Object.prototype.hasOwnProperty.call(l, h) && (a[h] = l[h]);
        }
        return a;
      }), Object.assign(d.prototype, { addEventListener: function(t, a) {
        this._listeners === void 0 && (this._listeners = {});
        var A = this._listeners;
        A[t] === void 0 && (A[t] = []), A[t].indexOf(a) === -1 && A[t].push(a);
      }, hasEventListener: function(t, a) {
        if (this._listeners === void 0)
          return !1;
        var A = this._listeners;
        return A[t] !== void 0 && A[t].indexOf(a) !== -1;
      }, removeEventListener: function(t, a) {
        if (this._listeners !== void 0) {
          var A = this._listeners[t];
          if (A !== void 0) {
            var l = A.indexOf(a);
            l !== -1 && A.splice(l, 1);
          }
        }
      }, dispatchEvent: function(t) {
        if (this._listeners !== void 0) {
          var a = this._listeners[t.type];
          if (a !== void 0) {
            t.target = this;
            for (var A = a.slice(0), l = 0, h = A.length; l < h; l++)
              A[l].call(this, t);
          }
        }
      } });
      var g = "95", m = { LEFT: 0, MIDDLE: 1, RIGHT: 2 }, w = 0, B = 1, x = 2, C = 3, v = 0, y = 1, T = 0, M = 1, D = 2, V = 0, O = 1, H = 2, q = 1, $ = 2, re = 0, ce = 1, Ie = 2, Pe = 0, se = 1, Ce = 2, Ge = 3, $e = 4, Be = 5, Me = 100, We = 101, nt = 102, Xe = 103, Je = 104, qe = 200, ye = 201, Ue = 202, ze = 203, X = 204, ut = 205, ot = 206, mt = 207, ve = 208, je = 209, ie = 210, ae = 0, z = 1, be = 2, fe = 3, J = 4, R = 5, Q = 6, b = 7, U = 0, Z = 1, ne = 2, le = 0, Ne = 1, Ke = 2, Ze = 3, et = 4, Y = 300, k = 301, F = 302, ue = 303, Qe = 304, Oe = 305, Ve = 306, It = 307, vt = 1e3, Qt = 1001, Ct = 1002, Rt = 1003, or = 1004, tn = 1005, ur = 1006, Vr = 1007, zr = 1008, $r = 1009, jr = 1010, dn = 1011, vn = 1012, ti = 1013, Fn = 1014, Yr = 1015, rn = 1016, Zr = 1017, hn = 1018, Cn = 1019, In = 1020, xn = 1021, ke = 1022, st = 1023, Pt = 1024, lr = 1025, wr = st, Qr = 1026, br = 1027, yr = 33776, Mr = 33777, Jr = 33778, ir = 33779, nr = 35840, Jt = 35841, _e = 35842, St = 35843, tt = 36196, Vt = 37808, L = 37809, te = 37810, de = 37811, Ee = 37812, ge = 37813, rt = 37814, ht = 37815, lt = 37816, Ft = 37817, Wt = 37818, Gt = 37819, Xt = 37820, Sr = 37821, Fr = 2200, Pr = 2201, $t = 2202, Lt = 2300, Tr = 2301, mr = 2302, ar = 2400, Gr = 2401, Xr = 2402, _r = 0, Kt = 1, vr = 2, Wr = 3e3, _n = 3001, ci = 3007, $i = 3002, yi = 3003, wn = 3004, ca = 3005, Qo = 3006, So = 3200, qa = 3201, ji = 0, Yi = 1, Rr = { DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: function() {
        for (var t = [], a = 0; a < 256; a++)
          t[a] = (a < 16 ? "0" : "") + a.toString(16);
        return function() {
          var A = 4294967295 * Math.random() | 0, l = 4294967295 * Math.random() | 0, h = 4294967295 * Math.random() | 0, f = 4294967295 * Math.random() | 0;
          return (t[255 & A] + t[A >> 8 & 255] + t[A >> 16 & 255] + t[A >> 24 & 255] + "-" + t[255 & l] + t[l >> 8 & 255] + "-" + t[l >> 16 & 15 | 64] + t[l >> 24 & 255] + "-" + t[63 & h | 128] + t[h >> 8 & 255] + "-" + t[h >> 16 & 255] + t[h >> 24 & 255] + t[255 & f] + t[f >> 8 & 255] + t[f >> 16 & 255] + t[f >> 24 & 255]).toUpperCase();
        };
      }(), clamp: function(t, a, A) {
        return Math.max(a, Math.min(A, t));
      }, euclideanModulo: function(t, a) {
        return (t % a + a) % a;
      }, mapLinear: function(t, a, A, l, h) {
        return l + (t - a) * (h - l) / (A - a);
      }, lerp: function(t, a, A) {
        return (1 - A) * t + A * a;
      }, smoothstep: function(t, a, A) {
        return t <= a ? 0 : t >= A ? 1 : (t = (t - a) / (A - a)) * t * (3 - 2 * t);
      }, smootherstep: function(t, a, A) {
        return t <= a ? 0 : t >= A ? 1 : (t = (t - a) / (A - a)) * t * t * (t * (6 * t - 15) + 10);
      }, randInt: function(t, a) {
        return t + Math.floor(Math.random() * (a - t + 1));
      }, randFloat: function(t, a) {
        return t + Math.random() * (a - t);
      }, randFloatSpread: function(t) {
        return t * (0.5 - Math.random());
      }, degToRad: function(t) {
        return t * Rr.DEG2RAD;
      }, radToDeg: function(t) {
        return t * Rr.RAD2DEG;
      }, isPowerOfTwo: function(t) {
        return (t & t - 1) == 0 && t !== 0;
      }, ceilPowerOfTwo: function(t) {
        return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));
      }, floorPowerOfTwo: function(t) {
        return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));
      } };
      function Tt(t, a) {
        this.x = t || 0, this.y = a || 0;
      }
      function Br() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
      }
      function fn(t, a, A, l) {
        this._x = t || 0, this._y = a || 0, this._z = A || 0, this._w = l !== void 0 ? l : 1;
      }
      function xe(t, a, A) {
        this.x = t || 0, this.y = a || 0, this.z = A || 0;
      }
      function Kn() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
      }
      Object.defineProperties(Tt.prototype, { width: { get: function() {
        return this.x;
      }, set: function(t) {
        this.x = t;
      } }, height: { get: function() {
        return this.y;
      }, set: function(t) {
        this.y = t;
      } } }), Object.assign(Tt.prototype, { isVector2: !0, set: function(t, a) {
        return this.x = t, this.y = a, this;
      }, setScalar: function(t) {
        return this.x = t, this.y = t, this;
      }, setX: function(t) {
        return this.x = t, this;
      }, setY: function(t) {
        return this.y = t, this;
      }, setComponent: function(t, a) {
        switch (t) {
          case 0:
            this.x = a;
            break;
          case 1:
            this.y = a;
            break;
          default:
            throw new Error("index is out of range: " + t);
        }
        return this;
      }, getComponent: function(t) {
        switch (t) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          default:
            throw new Error("index is out of range: " + t);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y);
      }, copy: function(t) {
        return this.x = t.x, this.y = t.y, this;
      }, add: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, a)) : (this.x += t.x, this.y += t.y, this);
      }, addScalar: function(t) {
        return this.x += t, this.y += t, this;
      }, addVectors: function(t, a) {
        return this.x = t.x + a.x, this.y = t.y + a.y, this;
      }, addScaledVector: function(t, a) {
        return this.x += t.x * a, this.y += t.y * a, this;
      }, sub: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, a)) : (this.x -= t.x, this.y -= t.y, this);
      }, subScalar: function(t) {
        return this.x -= t, this.y -= t, this;
      }, subVectors: function(t, a) {
        return this.x = t.x - a.x, this.y = t.y - a.y, this;
      }, multiply: function(t) {
        return this.x *= t.x, this.y *= t.y, this;
      }, multiplyScalar: function(t) {
        return this.x *= t, this.y *= t, this;
      }, divide: function(t) {
        return this.x /= t.x, this.y /= t.y, this;
      }, divideScalar: function(t) {
        return this.multiplyScalar(1 / t);
      }, applyMatrix3: function(t) {
        var a = this.x, A = this.y, l = t.elements;
        return this.x = l[0] * a + l[3] * A + l[6], this.y = l[1] * a + l[4] * A + l[7], this;
      }, min: function(t) {
        return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this;
      }, max: function(t) {
        return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this;
      }, clamp: function(t, a) {
        return this.x = Math.max(t.x, Math.min(a.x, this.x)), this.y = Math.max(t.y, Math.min(a.y, this.y)), this;
      }, clampScalar: function() {
        var t = new Tt(), a = new Tt();
        return function(A, l) {
          return t.set(A, A), a.set(l, l), this.clamp(t, a);
        };
      }(), clampLength: function(t, a) {
        var A = this.length();
        return this.divideScalar(A || 1).multiplyScalar(Math.max(t, Math.min(a, A)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this;
      }, dot: function(t) {
        return this.x * t.x + this.y * t.y;
      }, cross: function(t) {
        return this.x * t.y - this.y * t.x;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, angle: function() {
        var t = Math.atan2(this.y, this.x);
        return t < 0 && (t += 2 * Math.PI), t;
      }, distanceTo: function(t) {
        return Math.sqrt(this.distanceToSquared(t));
      }, distanceToSquared: function(t) {
        var a = this.x - t.x, A = this.y - t.y;
        return a * a + A * A;
      }, manhattanDistanceTo: function(t) {
        return Math.abs(this.x - t.x) + Math.abs(this.y - t.y);
      }, setLength: function(t) {
        return this.normalize().multiplyScalar(t);
      }, lerp: function(t, a) {
        return this.x += (t.x - this.x) * a, this.y += (t.y - this.y) * a, this;
      }, lerpVectors: function(t, a, A) {
        return this.subVectors(a, t).multiplyScalar(A).add(t);
      }, equals: function(t) {
        return t.x === this.x && t.y === this.y;
      }, fromArray: function(t, a) {
        return a === void 0 && (a = 0), this.x = t[a], this.y = t[a + 1], this;
      }, toArray: function(t, a) {
        return t === void 0 && (t = []), a === void 0 && (a = 0), t[a] = this.x, t[a + 1] = this.y, t;
      }, fromBufferAttribute: function(t, a, A) {
        return A !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = t.getX(a), this.y = t.getY(a), this;
      }, rotateAround: function(t, a) {
        var A = Math.cos(a), l = Math.sin(a), h = this.x - t.x, f = this.y - t.y;
        return this.x = h * A - f * l + t.x, this.y = h * l + f * A + t.y, this;
      } }), Object.assign(Br.prototype, { isMatrix4: !0, set: function(t, a, A, l, h, f, p, E, I, S, G, P, N, j, ee, oe) {
        var Ae = this.elements;
        return Ae[0] = t, Ae[4] = a, Ae[8] = A, Ae[12] = l, Ae[1] = h, Ae[5] = f, Ae[9] = p, Ae[13] = E, Ae[2] = I, Ae[6] = S, Ae[10] = G, Ae[14] = P, Ae[3] = N, Ae[7] = j, Ae[11] = ee, Ae[15] = oe, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, clone: function() {
        return new Br().fromArray(this.elements);
      }, copy: function(t) {
        var a = this.elements, A = t.elements;
        return a[0] = A[0], a[1] = A[1], a[2] = A[2], a[3] = A[3], a[4] = A[4], a[5] = A[5], a[6] = A[6], a[7] = A[7], a[8] = A[8], a[9] = A[9], a[10] = A[10], a[11] = A[11], a[12] = A[12], a[13] = A[13], a[14] = A[14], a[15] = A[15], this;
      }, copyPosition: function(t) {
        var a = this.elements, A = t.elements;
        return a[12] = A[12], a[13] = A[13], a[14] = A[14], this;
      }, extractBasis: function(t, a, A) {
        return t.setFromMatrixColumn(this, 0), a.setFromMatrixColumn(this, 1), A.setFromMatrixColumn(this, 2), this;
      }, makeBasis: function(t, a, A) {
        return this.set(t.x, a.x, A.x, 0, t.y, a.y, A.y, 0, t.z, a.z, A.z, 0, 0, 0, 0, 1), this;
      }, extractRotation: function() {
        var t = new xe();
        return function(a) {
          var A = this.elements, l = a.elements, h = 1 / t.setFromMatrixColumn(a, 0).length(), f = 1 / t.setFromMatrixColumn(a, 1).length(), p = 1 / t.setFromMatrixColumn(a, 2).length();
          return A[0] = l[0] * h, A[1] = l[1] * h, A[2] = l[2] * h, A[3] = 0, A[4] = l[4] * f, A[5] = l[5] * f, A[6] = l[6] * f, A[7] = 0, A[8] = l[8] * p, A[9] = l[9] * p, A[10] = l[10] * p, A[11] = 0, A[12] = 0, A[13] = 0, A[14] = 0, A[15] = 1, this;
        };
      }(), makeRotationFromEuler: function(t) {
        t && t.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var a = this.elements, A = t.x, l = t.y, h = t.z, f = Math.cos(A), p = Math.sin(A), E = Math.cos(l), I = Math.sin(l), S = Math.cos(h), G = Math.sin(h);
        if (t.order === "XYZ") {
          var P = f * S, N = f * G, j = p * S, ee = p * G;
          a[0] = E * S, a[4] = -E * G, a[8] = I, a[1] = N + j * I, a[5] = P - ee * I, a[9] = -p * E, a[2] = ee - P * I, a[6] = j + N * I, a[10] = f * E;
        } else if (t.order === "YXZ") {
          var oe = E * S, Ae = E * G, pe = I * S, we = I * G;
          a[0] = oe + we * p, a[4] = pe * p - Ae, a[8] = f * I, a[1] = f * G, a[5] = f * S, a[9] = -p, a[2] = Ae * p - pe, a[6] = we + oe * p, a[10] = f * E;
        } else if (t.order === "ZXY")
          oe = E * S, Ae = E * G, pe = I * S, we = I * G, a[0] = oe - we * p, a[4] = -f * G, a[8] = pe + Ae * p, a[1] = Ae + pe * p, a[5] = f * S, a[9] = we - oe * p, a[2] = -f * I, a[6] = p, a[10] = f * E;
        else if (t.order === "ZYX")
          P = f * S, N = f * G, j = p * S, ee = p * G, a[0] = E * S, a[4] = j * I - N, a[8] = P * I + ee, a[1] = E * G, a[5] = ee * I + P, a[9] = N * I - j, a[2] = -I, a[6] = p * E, a[10] = f * E;
        else if (t.order === "YZX") {
          var he = f * E, Fe = f * I, He = p * E, me = p * I;
          a[0] = E * S, a[4] = me - he * G, a[8] = He * G + Fe, a[1] = G, a[5] = f * S, a[9] = -p * S, a[2] = -I * S, a[6] = Fe * G + He, a[10] = he - me * G;
        } else
          t.order === "XZY" && (he = f * E, Fe = f * I, He = p * E, me = p * I, a[0] = E * S, a[4] = -G, a[8] = I * S, a[1] = he * G + me, a[5] = f * S, a[9] = Fe * G - He, a[2] = He * G - Fe, a[6] = p * S, a[10] = me * G + he);
        return a[3] = 0, a[7] = 0, a[11] = 0, a[12] = 0, a[13] = 0, a[14] = 0, a[15] = 1, this;
      }, makeRotationFromQuaternion: function() {
        var t = new xe(0, 0, 0), a = new xe(1, 1, 1);
        return function(A) {
          return this.compose(t, A, a);
        };
      }(), lookAt: function() {
        var t = new xe(), a = new xe(), A = new xe();
        return function(l, h, f) {
          var p = this.elements;
          return A.subVectors(l, h), A.lengthSq() === 0 && (A.z = 1), A.normalize(), t.crossVectors(f, A), t.lengthSq() === 0 && (Math.abs(f.z) === 1 ? A.x += 1e-4 : A.z += 1e-4, A.normalize(), t.crossVectors(f, A)), t.normalize(), a.crossVectors(A, t), p[0] = t.x, p[4] = a.x, p[8] = A.x, p[1] = t.y, p[5] = a.y, p[9] = A.y, p[2] = t.z, p[6] = a.z, p[10] = A.z, this;
        };
      }(), multiply: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(t, a)) : this.multiplyMatrices(this, t);
      }, premultiply: function(t) {
        return this.multiplyMatrices(t, this);
      }, multiplyMatrices: function(t, a) {
        var A = t.elements, l = a.elements, h = this.elements, f = A[0], p = A[4], E = A[8], I = A[12], S = A[1], G = A[5], P = A[9], N = A[13], j = A[2], ee = A[6], oe = A[10], Ae = A[14], pe = A[3], we = A[7], he = A[11], Fe = A[15], He = l[0], me = l[4], Te = l[8], Le = l[12], De = l[1], at = l[5], Ye = l[9], At = l[13], gt = l[2], xt = l[6], Bt = l[10], qt = l[14], Ot = l[3], yt = l[7], Mt = l[11], pt = l[15];
        return h[0] = f * He + p * De + E * gt + I * Ot, h[4] = f * me + p * at + E * xt + I * yt, h[8] = f * Te + p * Ye + E * Bt + I * Mt, h[12] = f * Le + p * At + E * qt + I * pt, h[1] = S * He + G * De + P * gt + N * Ot, h[5] = S * me + G * at + P * xt + N * yt, h[9] = S * Te + G * Ye + P * Bt + N * Mt, h[13] = S * Le + G * At + P * qt + N * pt, h[2] = j * He + ee * De + oe * gt + Ae * Ot, h[6] = j * me + ee * at + oe * xt + Ae * yt, h[10] = j * Te + ee * Ye + oe * Bt + Ae * Mt, h[14] = j * Le + ee * At + oe * qt + Ae * pt, h[3] = pe * He + we * De + he * gt + Fe * Ot, h[7] = pe * me + we * at + he * xt + Fe * yt, h[11] = pe * Te + we * Ye + he * Bt + Fe * Mt, h[15] = pe * Le + we * At + he * qt + Fe * pt, this;
      }, multiplyScalar: function(t) {
        var a = this.elements;
        return a[0] *= t, a[4] *= t, a[8] *= t, a[12] *= t, a[1] *= t, a[5] *= t, a[9] *= t, a[13] *= t, a[2] *= t, a[6] *= t, a[10] *= t, a[14] *= t, a[3] *= t, a[7] *= t, a[11] *= t, a[15] *= t, this;
      }, applyToBufferAttribute: function() {
        var t = new xe();
        return function(a) {
          for (var A = 0, l = a.count; A < l; A++)
            t.x = a.getX(A), t.y = a.getY(A), t.z = a.getZ(A), t.applyMatrix4(this), a.setXYZ(A, t.x, t.y, t.z);
          return a;
        };
      }(), determinant: function() {
        var t = this.elements, a = t[0], A = t[4], l = t[8], h = t[12], f = t[1], p = t[5], E = t[9], I = t[13], S = t[2], G = t[6], P = t[10], N = t[14];
        return t[3] * (+h * E * G - l * I * G - h * p * P + A * I * P + l * p * N - A * E * N) + t[7] * (+a * E * N - a * I * P + h * f * P - l * f * N + l * I * S - h * E * S) + t[11] * (+a * I * G - a * p * N - h * f * G + A * f * N + h * p * S - A * I * S) + t[15] * (-l * p * S - a * E * G + a * p * P + l * f * G - A * f * P + A * E * S);
      }, transpose: function() {
        var t, a = this.elements;
        return t = a[1], a[1] = a[4], a[4] = t, t = a[2], a[2] = a[8], a[8] = t, t = a[6], a[6] = a[9], a[9] = t, t = a[3], a[3] = a[12], a[12] = t, t = a[7], a[7] = a[13], a[13] = t, t = a[11], a[11] = a[14], a[14] = t, this;
      }, setPosition: function(t) {
        var a = this.elements;
        return a[12] = t.x, a[13] = t.y, a[14] = t.z, this;
      }, getInverse: function(t, a) {
        var A = this.elements, l = t.elements, h = l[0], f = l[1], p = l[2], E = l[3], I = l[4], S = l[5], G = l[6], P = l[7], N = l[8], j = l[9], ee = l[10], oe = l[11], Ae = l[12], pe = l[13], we = l[14], he = l[15], Fe = j * we * P - pe * ee * P + pe * G * oe - S * we * oe - j * G * he + S * ee * he, He = Ae * ee * P - N * we * P - Ae * G * oe + I * we * oe + N * G * he - I * ee * he, me = N * pe * P - Ae * j * P + Ae * S * oe - I * pe * oe - N * S * he + I * j * he, Te = Ae * j * G - N * pe * G - Ae * S * ee + I * pe * ee + N * S * we - I * j * we, Le = h * Fe + f * He + p * me + E * Te;
        if (Le === 0) {
          var De = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
          if (a === !0)
            throw new Error(De);
          return console.warn(De), this.identity();
        }
        var at = 1 / Le;
        return A[0] = Fe * at, A[1] = (pe * ee * E - j * we * E - pe * p * oe + f * we * oe + j * p * he - f * ee * he) * at, A[2] = (S * we * E - pe * G * E + pe * p * P - f * we * P - S * p * he + f * G * he) * at, A[3] = (j * G * E - S * ee * E - j * p * P + f * ee * P + S * p * oe - f * G * oe) * at, A[4] = He * at, A[5] = (N * we * E - Ae * ee * E + Ae * p * oe - h * we * oe - N * p * he + h * ee * he) * at, A[6] = (Ae * G * E - I * we * E - Ae * p * P + h * we * P + I * p * he - h * G * he) * at, A[7] = (I * ee * E - N * G * E + N * p * P - h * ee * P - I * p * oe + h * G * oe) * at, A[8] = me * at, A[9] = (Ae * j * E - N * pe * E - Ae * f * oe + h * pe * oe + N * f * he - h * j * he) * at, A[10] = (I * pe * E - Ae * S * E + Ae * f * P - h * pe * P - I * f * he + h * S * he) * at, A[11] = (N * S * E - I * j * E - N * f * P + h * j * P + I * f * oe - h * S * oe) * at, A[12] = Te * at, A[13] = (N * pe * p - Ae * j * p + Ae * f * ee - h * pe * ee - N * f * we + h * j * we) * at, A[14] = (Ae * S * p - I * pe * p - Ae * f * G + h * pe * G + I * f * we - h * S * we) * at, A[15] = (I * j * p - N * S * p + N * f * G - h * j * G - I * f * ee + h * S * ee) * at, this;
      }, scale: function(t) {
        var a = this.elements, A = t.x, l = t.y, h = t.z;
        return a[0] *= A, a[4] *= l, a[8] *= h, a[1] *= A, a[5] *= l, a[9] *= h, a[2] *= A, a[6] *= l, a[10] *= h, a[3] *= A, a[7] *= l, a[11] *= h, this;
      }, getMaxScaleOnAxis: function() {
        var t = this.elements, a = t[0] * t[0] + t[1] * t[1] + t[2] * t[2], A = t[4] * t[4] + t[5] * t[5] + t[6] * t[6], l = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
        return Math.sqrt(Math.max(a, A, l));
      }, makeTranslation: function(t, a, A) {
        return this.set(1, 0, 0, t, 0, 1, 0, a, 0, 0, 1, A, 0, 0, 0, 1), this;
      }, makeRotationX: function(t) {
        var a = Math.cos(t), A = Math.sin(t);
        return this.set(1, 0, 0, 0, 0, a, -A, 0, 0, A, a, 0, 0, 0, 0, 1), this;
      }, makeRotationY: function(t) {
        var a = Math.cos(t), A = Math.sin(t);
        return this.set(a, 0, A, 0, 0, 1, 0, 0, -A, 0, a, 0, 0, 0, 0, 1), this;
      }, makeRotationZ: function(t) {
        var a = Math.cos(t), A = Math.sin(t);
        return this.set(a, -A, 0, 0, A, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, makeRotationAxis: function(t, a) {
        var A = Math.cos(a), l = Math.sin(a), h = 1 - A, f = t.x, p = t.y, E = t.z, I = h * f, S = h * p;
        return this.set(I * f + A, I * p - l * E, I * E + l * p, 0, I * p + l * E, S * p + A, S * E - l * f, 0, I * E - l * p, S * E + l * f, h * E * E + A, 0, 0, 0, 0, 1), this;
      }, makeScale: function(t, a, A) {
        return this.set(t, 0, 0, 0, 0, a, 0, 0, 0, 0, A, 0, 0, 0, 0, 1), this;
      }, makeShear: function(t, a, A) {
        return this.set(1, a, A, 0, t, 1, A, 0, t, a, 1, 0, 0, 0, 0, 1), this;
      }, compose: function(t, a, A) {
        var l = this.elements, h = a._x, f = a._y, p = a._z, E = a._w, I = h + h, S = f + f, G = p + p, P = h * I, N = h * S, j = h * G, ee = f * S, oe = f * G, Ae = p * G, pe = E * I, we = E * S, he = E * G, Fe = A.x, He = A.y, me = A.z;
        return l[0] = (1 - (ee + Ae)) * Fe, l[1] = (N + he) * Fe, l[2] = (j - we) * Fe, l[3] = 0, l[4] = (N - he) * He, l[5] = (1 - (P + Ae)) * He, l[6] = (oe + pe) * He, l[7] = 0, l[8] = (j + we) * me, l[9] = (oe - pe) * me, l[10] = (1 - (P + ee)) * me, l[11] = 0, l[12] = t.x, l[13] = t.y, l[14] = t.z, l[15] = 1, this;
      }, decompose: function() {
        var t = new xe(), a = new Br();
        return function(A, l, h) {
          var f = this.elements, p = t.set(f[0], f[1], f[2]).length(), E = t.set(f[4], f[5], f[6]).length(), I = t.set(f[8], f[9], f[10]).length();
          this.determinant() < 0 && (p = -p), A.x = f[12], A.y = f[13], A.z = f[14], a.copy(this);
          var S = 1 / p, G = 1 / E, P = 1 / I;
          return a.elements[0] *= S, a.elements[1] *= S, a.elements[2] *= S, a.elements[4] *= G, a.elements[5] *= G, a.elements[6] *= G, a.elements[8] *= P, a.elements[9] *= P, a.elements[10] *= P, l.setFromRotationMatrix(a), h.x = p, h.y = E, h.z = I, this;
        };
      }(), makePerspective: function(t, a, A, l, h, f) {
        f === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        var p = this.elements, E = 2 * h / (a - t), I = 2 * h / (A - l), S = (a + t) / (a - t), G = (A + l) / (A - l), P = -(f + h) / (f - h), N = -2 * f * h / (f - h);
        return p[0] = E, p[4] = 0, p[8] = S, p[12] = 0, p[1] = 0, p[5] = I, p[9] = G, p[13] = 0, p[2] = 0, p[6] = 0, p[10] = P, p[14] = N, p[3] = 0, p[7] = 0, p[11] = -1, p[15] = 0, this;
      }, makeOrthographic: function(t, a, A, l, h, f) {
        var p = this.elements, E = 1 / (a - t), I = 1 / (A - l), S = 1 / (f - h), G = (a + t) * E, P = (A + l) * I, N = (f + h) * S;
        return p[0] = 2 * E, p[4] = 0, p[8] = 0, p[12] = -G, p[1] = 0, p[5] = 2 * I, p[9] = 0, p[13] = -P, p[2] = 0, p[6] = 0, p[10] = -2 * S, p[14] = -N, p[3] = 0, p[7] = 0, p[11] = 0, p[15] = 1, this;
      }, equals: function(t) {
        for (var a = this.elements, A = t.elements, l = 0; l < 16; l++)
          if (a[l] !== A[l])
            return !1;
        return !0;
      }, fromArray: function(t, a) {
        a === void 0 && (a = 0);
        for (var A = 0; A < 16; A++)
          this.elements[A] = t[A + a];
        return this;
      }, toArray: function(t, a) {
        t === void 0 && (t = []), a === void 0 && (a = 0);
        var A = this.elements;
        return t[a] = A[0], t[a + 1] = A[1], t[a + 2] = A[2], t[a + 3] = A[3], t[a + 4] = A[4], t[a + 5] = A[5], t[a + 6] = A[6], t[a + 7] = A[7], t[a + 8] = A[8], t[a + 9] = A[9], t[a + 10] = A[10], t[a + 11] = A[11], t[a + 12] = A[12], t[a + 13] = A[13], t[a + 14] = A[14], t[a + 15] = A[15], t;
      } }), Object.assign(fn, { slerp: function(t, a, A, l) {
        return A.copy(t).slerp(a, l);
      }, slerpFlat: function(t, a, A, l, h, f, p) {
        var E = A[l + 0], I = A[l + 1], S = A[l + 2], G = A[l + 3], P = h[f + 0], N = h[f + 1], j = h[f + 2], ee = h[f + 3];
        if (G !== ee || E !== P || I !== N || S !== j) {
          var oe = 1 - p, Ae = E * P + I * N + S * j + G * ee, pe = Ae >= 0 ? 1 : -1, we = 1 - Ae * Ae;
          if (we > Number.EPSILON) {
            var he = Math.sqrt(we), Fe = Math.atan2(he, Ae * pe);
            oe = Math.sin(oe * Fe) / he, p = Math.sin(p * Fe) / he;
          }
          var He = p * pe;
          if (E = E * oe + P * He, I = I * oe + N * He, S = S * oe + j * He, G = G * oe + ee * He, oe === 1 - p) {
            var me = 1 / Math.sqrt(E * E + I * I + S * S + G * G);
            E *= me, I *= me, S *= me, G *= me;
          }
        }
        t[a] = E, t[a + 1] = I, t[a + 2] = S, t[a + 3] = G;
      } }), Object.defineProperties(fn.prototype, { x: { get: function() {
        return this._x;
      }, set: function(t) {
        this._x = t, this.onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(t) {
        this._y = t, this.onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(t) {
        this._z = t, this.onChangeCallback();
      } }, w: { get: function() {
        return this._w;
      }, set: function(t) {
        this._w = t, this.onChangeCallback();
      } } }), Object.assign(fn.prototype, { set: function(t, a, A, l) {
        return this._x = t, this._y = a, this._z = A, this._w = l, this.onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._w);
      }, copy: function(t) {
        return this._x = t.x, this._y = t.y, this._z = t.z, this._w = t.w, this.onChangeCallback(), this;
      }, setFromEuler: function(t, a) {
        if (!t || !t.isEuler)
          throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        var A = t._x, l = t._y, h = t._z, f = t.order, p = Math.cos, E = Math.sin, I = p(A / 2), S = p(l / 2), G = p(h / 2), P = E(A / 2), N = E(l / 2), j = E(h / 2);
        return f === "XYZ" ? (this._x = P * S * G + I * N * j, this._y = I * N * G - P * S * j, this._z = I * S * j + P * N * G, this._w = I * S * G - P * N * j) : f === "YXZ" ? (this._x = P * S * G + I * N * j, this._y = I * N * G - P * S * j, this._z = I * S * j - P * N * G, this._w = I * S * G + P * N * j) : f === "ZXY" ? (this._x = P * S * G - I * N * j, this._y = I * N * G + P * S * j, this._z = I * S * j + P * N * G, this._w = I * S * G - P * N * j) : f === "ZYX" ? (this._x = P * S * G - I * N * j, this._y = I * N * G + P * S * j, this._z = I * S * j - P * N * G, this._w = I * S * G + P * N * j) : f === "YZX" ? (this._x = P * S * G + I * N * j, this._y = I * N * G + P * S * j, this._z = I * S * j - P * N * G, this._w = I * S * G - P * N * j) : f === "XZY" && (this._x = P * S * G - I * N * j, this._y = I * N * G - P * S * j, this._z = I * S * j + P * N * G, this._w = I * S * G + P * N * j), a !== !1 && this.onChangeCallback(), this;
      }, setFromAxisAngle: function(t, a) {
        var A = a / 2, l = Math.sin(A);
        return this._x = t.x * l, this._y = t.y * l, this._z = t.z * l, this._w = Math.cos(A), this.onChangeCallback(), this;
      }, setFromRotationMatrix: function(t) {
        var a, A = t.elements, l = A[0], h = A[4], f = A[8], p = A[1], E = A[5], I = A[9], S = A[2], G = A[6], P = A[10], N = l + E + P;
        return N > 0 ? (a = 0.5 / Math.sqrt(N + 1), this._w = 0.25 / a, this._x = (G - I) * a, this._y = (f - S) * a, this._z = (p - h) * a) : l > E && l > P ? (a = 2 * Math.sqrt(1 + l - E - P), this._w = (G - I) / a, this._x = 0.25 * a, this._y = (h + p) / a, this._z = (f + S) / a) : E > P ? (a = 2 * Math.sqrt(1 + E - l - P), this._w = (f - S) / a, this._x = (h + p) / a, this._y = 0.25 * a, this._z = (I + G) / a) : (a = 2 * Math.sqrt(1 + P - l - E), this._w = (p - h) / a, this._x = (f + S) / a, this._y = (I + G) / a, this._z = 0.25 * a), this.onChangeCallback(), this;
      }, setFromUnitVectors: function() {
        var t, a = new xe();
        return function(A, l) {
          return a === void 0 && (a = new xe()), (t = A.dot(l) + 1) < 1e-6 ? (t = 0, Math.abs(A.x) > Math.abs(A.z) ? a.set(-A.y, A.x, 0) : a.set(0, -A.z, A.y)) : a.crossVectors(A, l), this._x = a.x, this._y = a.y, this._z = a.z, this._w = t, this.normalize();
        };
      }(), angleTo: function(t) {
        return 2 * Math.acos(Math.abs(Rr.clamp(this.dot(t), -1, 1)));
      }, rotateTowards: function(t, a) {
        var A = this.angleTo(t);
        if (A === 0)
          return this;
        var l = Math.min(1, a / A);
        return this.slerp(t, l), this;
      }, inverse: function() {
        return this.conjugate();
      }, conjugate: function() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this;
      }, dot: function(t) {
        return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w;
      }, lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
      }, length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
      }, normalize: function() {
        var t = this.length();
        return t === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (t = 1 / t, this._x = this._x * t, this._y = this._y * t, this._z = this._z * t, this._w = this._w * t), this.onChangeCallback(), this;
      }, multiply: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(t, a)) : this.multiplyQuaternions(this, t);
      }, premultiply: function(t) {
        return this.multiplyQuaternions(t, this);
      }, multiplyQuaternions: function(t, a) {
        var A = t._x, l = t._y, h = t._z, f = t._w, p = a._x, E = a._y, I = a._z, S = a._w;
        return this._x = A * S + f * p + l * I - h * E, this._y = l * S + f * E + h * p - A * I, this._z = h * S + f * I + A * E - l * p, this._w = f * S - A * p - l * E - h * I, this.onChangeCallback(), this;
      }, slerp: function(t, a) {
        if (a === 0)
          return this;
        if (a === 1)
          return this.copy(t);
        var A = this._x, l = this._y, h = this._z, f = this._w, p = f * t._w + A * t._x + l * t._y + h * t._z;
        if (p < 0 ? (this._w = -t._w, this._x = -t._x, this._y = -t._y, this._z = -t._z, p = -p) : this.copy(t), p >= 1)
          return this._w = f, this._x = A, this._y = l, this._z = h, this;
        var E = 1 - p * p;
        if (E <= Number.EPSILON) {
          var I = 1 - a;
          return this._w = I * f + a * this._w, this._x = I * A + a * this._x, this._y = I * l + a * this._y, this._z = I * h + a * this._z, this.normalize();
        }
        var S = Math.sqrt(E), G = Math.atan2(S, p), P = Math.sin((1 - a) * G) / S, N = Math.sin(a * G) / S;
        return this._w = f * P + this._w * N, this._x = A * P + this._x * N, this._y = l * P + this._y * N, this._z = h * P + this._z * N, this.onChangeCallback(), this;
      }, equals: function(t) {
        return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w;
      }, fromArray: function(t, a) {
        return a === void 0 && (a = 0), this._x = t[a], this._y = t[a + 1], this._z = t[a + 2], this._w = t[a + 3], this.onChangeCallback(), this;
      }, toArray: function(t, a) {
        return t === void 0 && (t = []), a === void 0 && (a = 0), t[a] = this._x, t[a + 1] = this._y, t[a + 2] = this._z, t[a + 3] = this._w, t;
      }, onChange: function(t) {
        return this.onChangeCallback = t, this;
      }, onChangeCallback: function() {
      } }), Object.assign(xe.prototype, { isVector3: !0, set: function(t, a, A) {
        return this.x = t, this.y = a, this.z = A, this;
      }, setScalar: function(t) {
        return this.x = t, this.y = t, this.z = t, this;
      }, setX: function(t) {
        return this.x = t, this;
      }, setY: function(t) {
        return this.y = t, this;
      }, setZ: function(t) {
        return this.z = t, this;
      }, setComponent: function(t, a) {
        switch (t) {
          case 0:
            this.x = a;
            break;
          case 1:
            this.y = a;
            break;
          case 2:
            this.z = a;
            break;
          default:
            throw new Error("index is out of range: " + t);
        }
        return this;
      }, getComponent: function(t) {
        switch (t) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          default:
            throw new Error("index is out of range: " + t);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z);
      }, copy: function(t) {
        return this.x = t.x, this.y = t.y, this.z = t.z, this;
      }, add: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, a)) : (this.x += t.x, this.y += t.y, this.z += t.z, this);
      }, addScalar: function(t) {
        return this.x += t, this.y += t, this.z += t, this;
      }, addVectors: function(t, a) {
        return this.x = t.x + a.x, this.y = t.y + a.y, this.z = t.z + a.z, this;
      }, addScaledVector: function(t, a) {
        return this.x += t.x * a, this.y += t.y * a, this.z += t.z * a, this;
      }, sub: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, a)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this);
      }, subScalar: function(t) {
        return this.x -= t, this.y -= t, this.z -= t, this;
      }, subVectors: function(t, a) {
        return this.x = t.x - a.x, this.y = t.y - a.y, this.z = t.z - a.z, this;
      }, multiply: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(t, a)) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this);
      }, multiplyScalar: function(t) {
        return this.x *= t, this.y *= t, this.z *= t, this;
      }, multiplyVectors: function(t, a) {
        return this.x = t.x * a.x, this.y = t.y * a.y, this.z = t.z * a.z, this;
      }, applyEuler: function() {
        var t = new fn();
        return function(a) {
          return a && a.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(t.setFromEuler(a));
        };
      }(), applyAxisAngle: function() {
        var t = new fn();
        return function(a, A) {
          return this.applyQuaternion(t.setFromAxisAngle(a, A));
        };
      }(), applyMatrix3: function(t) {
        var a = this.x, A = this.y, l = this.z, h = t.elements;
        return this.x = h[0] * a + h[3] * A + h[6] * l, this.y = h[1] * a + h[4] * A + h[7] * l, this.z = h[2] * a + h[5] * A + h[8] * l, this;
      }, applyMatrix4: function(t) {
        var a = this.x, A = this.y, l = this.z, h = t.elements, f = 1 / (h[3] * a + h[7] * A + h[11] * l + h[15]);
        return this.x = (h[0] * a + h[4] * A + h[8] * l + h[12]) * f, this.y = (h[1] * a + h[5] * A + h[9] * l + h[13]) * f, this.z = (h[2] * a + h[6] * A + h[10] * l + h[14]) * f, this;
      }, applyQuaternion: function(t) {
        var a = this.x, A = this.y, l = this.z, h = t.x, f = t.y, p = t.z, E = t.w, I = E * a + f * l - p * A, S = E * A + p * a - h * l, G = E * l + h * A - f * a, P = -h * a - f * A - p * l;
        return this.x = I * E + P * -h + S * -p - G * -f, this.y = S * E + P * -f + G * -h - I * -p, this.z = G * E + P * -p + I * -f - S * -h, this;
      }, project: function() {
        var t = new Br();
        return function(a) {
          return t.multiplyMatrices(a.projectionMatrix, t.getInverse(a.matrixWorld)), this.applyMatrix4(t);
        };
      }(), unproject: function() {
        var t = new Br();
        return function(a) {
          return t.multiplyMatrices(a.matrixWorld, t.getInverse(a.projectionMatrix)), this.applyMatrix4(t);
        };
      }(), transformDirection: function(t) {
        var a = this.x, A = this.y, l = this.z, h = t.elements;
        return this.x = h[0] * a + h[4] * A + h[8] * l, this.y = h[1] * a + h[5] * A + h[9] * l, this.z = h[2] * a + h[6] * A + h[10] * l, this.normalize();
      }, divide: function(t) {
        return this.x /= t.x, this.y /= t.y, this.z /= t.z, this;
      }, divideScalar: function(t) {
        return this.multiplyScalar(1 / t);
      }, min: function(t) {
        return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this;
      }, max: function(t) {
        return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this;
      }, clamp: function(t, a) {
        return this.x = Math.max(t.x, Math.min(a.x, this.x)), this.y = Math.max(t.y, Math.min(a.y, this.y)), this.z = Math.max(t.z, Math.min(a.z, this.z)), this;
      }, clampScalar: function() {
        var t = new xe(), a = new xe();
        return function(A, l) {
          return t.set(A, A, A), a.set(l, l, l), this.clamp(t, a);
        };
      }(), clampLength: function(t, a) {
        var A = this.length();
        return this.divideScalar(A || 1).multiplyScalar(Math.max(t, Math.min(a, A)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
      }, dot: function(t) {
        return this.x * t.x + this.y * t.y + this.z * t.z;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(t) {
        return this.normalize().multiplyScalar(t);
      }, lerp: function(t, a) {
        return this.x += (t.x - this.x) * a, this.y += (t.y - this.y) * a, this.z += (t.z - this.z) * a, this;
      }, lerpVectors: function(t, a, A) {
        return this.subVectors(a, t).multiplyScalar(A).add(t);
      }, cross: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(t, a)) : this.crossVectors(this, t);
      }, crossVectors: function(t, a) {
        var A = t.x, l = t.y, h = t.z, f = a.x, p = a.y, E = a.z;
        return this.x = l * E - h * p, this.y = h * f - A * E, this.z = A * p - l * f, this;
      }, projectOnVector: function(t) {
        var a = t.dot(this) / t.lengthSq();
        return this.copy(t).multiplyScalar(a);
      }, projectOnPlane: function() {
        var t = new xe();
        return function(a) {
          return t.copy(this).projectOnVector(a), this.sub(t);
        };
      }(), reflect: function() {
        var t = new xe();
        return function(a) {
          return this.sub(t.copy(a).multiplyScalar(2 * this.dot(a)));
        };
      }(), angleTo: function(t) {
        var a = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
        return Math.acos(Rr.clamp(a, -1, 1));
      }, distanceTo: function(t) {
        return Math.sqrt(this.distanceToSquared(t));
      }, distanceToSquared: function(t) {
        var a = this.x - t.x, A = this.y - t.y, l = this.z - t.z;
        return a * a + A * A + l * l;
      }, manhattanDistanceTo: function(t) {
        return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z);
      }, setFromSpherical: function(t) {
        var a = Math.sin(t.phi) * t.radius;
        return this.x = a * Math.sin(t.theta), this.y = Math.cos(t.phi) * t.radius, this.z = a * Math.cos(t.theta), this;
      }, setFromCylindrical: function(t) {
        return this.x = t.radius * Math.sin(t.theta), this.y = t.y, this.z = t.radius * Math.cos(t.theta), this;
      }, setFromMatrixPosition: function(t) {
        var a = t.elements;
        return this.x = a[12], this.y = a[13], this.z = a[14], this;
      }, setFromMatrixScale: function(t) {
        var a = this.setFromMatrixColumn(t, 0).length(), A = this.setFromMatrixColumn(t, 1).length(), l = this.setFromMatrixColumn(t, 2).length();
        return this.x = a, this.y = A, this.z = l, this;
      }, setFromMatrixColumn: function(t, a) {
        return this.fromArray(t.elements, 4 * a);
      }, equals: function(t) {
        return t.x === this.x && t.y === this.y && t.z === this.z;
      }, fromArray: function(t, a) {
        return a === void 0 && (a = 0), this.x = t[a], this.y = t[a + 1], this.z = t[a + 2], this;
      }, toArray: function(t, a) {
        return t === void 0 && (t = []), a === void 0 && (a = 0), t[a] = this.x, t[a + 1] = this.y, t[a + 2] = this.z, t;
      }, fromBufferAttribute: function(t, a, A) {
        return A !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = t.getX(a), this.y = t.getY(a), this.z = t.getZ(a), this;
      } }), Object.assign(Kn.prototype, { isMatrix3: !0, set: function(t, a, A, l, h, f, p, E, I) {
        var S = this.elements;
        return S[0] = t, S[1] = l, S[2] = p, S[3] = a, S[4] = h, S[5] = E, S[6] = A, S[7] = f, S[8] = I, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
      }, clone: function() {
        return new this.constructor().fromArray(this.elements);
      }, copy: function(t) {
        var a = this.elements, A = t.elements;
        return a[0] = A[0], a[1] = A[1], a[2] = A[2], a[3] = A[3], a[4] = A[4], a[5] = A[5], a[6] = A[6], a[7] = A[7], a[8] = A[8], this;
      }, setFromMatrix4: function(t) {
        var a = t.elements;
        return this.set(a[0], a[4], a[8], a[1], a[5], a[9], a[2], a[6], a[10]), this;
      }, applyToBufferAttribute: function() {
        var t = new xe();
        return function(a) {
          for (var A = 0, l = a.count; A < l; A++)
            t.x = a.getX(A), t.y = a.getY(A), t.z = a.getZ(A), t.applyMatrix3(this), a.setXYZ(A, t.x, t.y, t.z);
          return a;
        };
      }(), multiply: function(t) {
        return this.multiplyMatrices(this, t);
      }, premultiply: function(t) {
        return this.multiplyMatrices(t, this);
      }, multiplyMatrices: function(t, a) {
        var A = t.elements, l = a.elements, h = this.elements, f = A[0], p = A[3], E = A[6], I = A[1], S = A[4], G = A[7], P = A[2], N = A[5], j = A[8], ee = l[0], oe = l[3], Ae = l[6], pe = l[1], we = l[4], he = l[7], Fe = l[2], He = l[5], me = l[8];
        return h[0] = f * ee + p * pe + E * Fe, h[3] = f * oe + p * we + E * He, h[6] = f * Ae + p * he + E * me, h[1] = I * ee + S * pe + G * Fe, h[4] = I * oe + S * we + G * He, h[7] = I * Ae + S * he + G * me, h[2] = P * ee + N * pe + j * Fe, h[5] = P * oe + N * we + j * He, h[8] = P * Ae + N * he + j * me, this;
      }, multiplyScalar: function(t) {
        var a = this.elements;
        return a[0] *= t, a[3] *= t, a[6] *= t, a[1] *= t, a[4] *= t, a[7] *= t, a[2] *= t, a[5] *= t, a[8] *= t, this;
      }, determinant: function() {
        var t = this.elements, a = t[0], A = t[1], l = t[2], h = t[3], f = t[4], p = t[5], E = t[6], I = t[7], S = t[8];
        return a * f * S - a * p * I - A * h * S + A * p * E + l * h * I - l * f * E;
      }, getInverse: function(t, a) {
        t && t.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
        var A = t.elements, l = this.elements, h = A[0], f = A[1], p = A[2], E = A[3], I = A[4], S = A[5], G = A[6], P = A[7], N = A[8], j = N * I - S * P, ee = S * G - N * E, oe = P * E - I * G, Ae = h * j + f * ee + p * oe;
        if (Ae === 0) {
          var pe = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
          if (a === !0)
            throw new Error(pe);
          return console.warn(pe), this.identity();
        }
        var we = 1 / Ae;
        return l[0] = j * we, l[1] = (p * P - N * f) * we, l[2] = (S * f - p * I) * we, l[3] = ee * we, l[4] = (N * h - p * G) * we, l[5] = (p * E - S * h) * we, l[6] = oe * we, l[7] = (f * G - P * h) * we, l[8] = (I * h - f * E) * we, this;
      }, transpose: function() {
        var t, a = this.elements;
        return t = a[1], a[1] = a[3], a[3] = t, t = a[2], a[2] = a[6], a[6] = t, t = a[5], a[5] = a[7], a[7] = t, this;
      }, getNormalMatrix: function(t) {
        return this.setFromMatrix4(t).getInverse(this).transpose();
      }, transposeIntoArray: function(t) {
        var a = this.elements;
        return t[0] = a[0], t[1] = a[3], t[2] = a[6], t[3] = a[1], t[4] = a[4], t[5] = a[7], t[6] = a[2], t[7] = a[5], t[8] = a[8], this;
      }, setUvTransform: function(t, a, A, l, h, f, p) {
        var E = Math.cos(h), I = Math.sin(h);
        this.set(A * E, A * I, -A * (E * f + I * p) + f + t, -l * I, l * E, -l * (-I * f + E * p) + p + a, 0, 0, 1);
      }, scale: function(t, a) {
        var A = this.elements;
        return A[0] *= t, A[3] *= t, A[6] *= t, A[1] *= a, A[4] *= a, A[7] *= a, this;
      }, rotate: function(t) {
        var a = Math.cos(t), A = Math.sin(t), l = this.elements, h = l[0], f = l[3], p = l[6], E = l[1], I = l[4], S = l[7];
        return l[0] = a * h + A * E, l[3] = a * f + A * I, l[6] = a * p + A * S, l[1] = -A * h + a * E, l[4] = -A * f + a * I, l[7] = -A * p + a * S, this;
      }, translate: function(t, a) {
        var A = this.elements;
        return A[0] += t * A[2], A[3] += t * A[5], A[6] += t * A[8], A[1] += a * A[2], A[4] += a * A[5], A[7] += a * A[8], this;
      }, equals: function(t) {
        for (var a = this.elements, A = t.elements, l = 0; l < 9; l++)
          if (a[l] !== A[l])
            return !1;
        return !0;
      }, fromArray: function(t, a) {
        a === void 0 && (a = 0);
        for (var A = 0; A < 9; A++)
          this.elements[A] = t[A + a];
        return this;
      }, toArray: function(t, a) {
        t === void 0 && (t = []), a === void 0 && (a = 0);
        var A = this.elements;
        return t[a] = A[0], t[a + 1] = A[1], t[a + 2] = A[2], t[a + 3] = A[3], t[a + 4] = A[4], t[a + 5] = A[5], t[a + 6] = A[6], t[a + 7] = A[7], t[a + 8] = A[8], t;
      } });
      var ea = { getDataURL: function(t) {
        var a;
        if (t instanceof HTMLCanvasElement)
          a = t;
        else {
          typeof OffscreenCanvas < "u" ? a = new OffscreenCanvas(t.width, t.height) : ((a = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")).width = t.width, a.height = t.height);
          var A = a.getContext("2d");
          t instanceof ImageData ? A.putImageData(t, 0, 0) : A.drawImage(t, 0, 0, t.width, t.height);
        }
        return a.width > 2048 || a.height > 2048 ? a.toDataURL("image/jpeg", 0.6) : a.toDataURL("image/png");
      } }, YA = 0;
      function un(t, a, A, l, h, f, p, E, I, S) {
        Object.defineProperty(this, "id", { value: YA++ }), this.uuid = Rr.generateUUID(), this.name = "", this.image = t !== void 0 ? t : un.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = a !== void 0 ? a : un.DEFAULT_MAPPING, this.wrapS = A !== void 0 ? A : Qt, this.wrapT = l !== void 0 ? l : Qt, this.magFilter = h !== void 0 ? h : ur, this.minFilter = f !== void 0 ? f : zr, this.anisotropy = I !== void 0 ? I : 1, this.format = p !== void 0 ? p : st, this.type = E !== void 0 ? E : $r, this.offset = new Tt(0, 0), this.repeat = new Tt(1, 1), this.center = new Tt(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new Kn(), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = S !== void 0 ? S : Wr, this.version = 0, this.onUpdate = null;
      }
      function nn(t, a, A, l) {
        this.x = t || 0, this.y = a || 0, this.z = A || 0, this.w = l !== void 0 ? l : 1;
      }
      function Aa(t, a, A) {
        this.width = t, this.height = a, this.scissor = new nn(0, 0, t, a), this.scissorTest = !1, this.viewport = new nn(0, 0, t, a), (A = A || {}).minFilter === void 0 && (A.minFilter = ur), this.texture = new un(void 0, void 0, A.wrapS, A.wrapT, A.magFilter, A.minFilter, A.format, A.type, A.anisotropy, A.encoding), this.texture.generateMipmaps = A.generateMipmaps === void 0 || A.generateMipmaps, this.depthBuffer = A.depthBuffer === void 0 || A.depthBuffer, this.stencilBuffer = A.stencilBuffer === void 0 || A.stencilBuffer, this.depthTexture = A.depthTexture !== void 0 ? A.depthTexture : null;
      }
      function Da(t, a, A) {
        Aa.call(this, t, a, A), this.activeCubeFace = 0, this.activeMipMapLevel = 0;
      }
      function ua(t, a, A, l, h, f, p, E, I, S, G, P) {
        un.call(this, null, f, p, E, I, S, l, h, G, P), this.image = { data: t, width: a, height: A }, this.magFilter = I !== void 0 ? I : Rt, this.minFilter = S !== void 0 ? S : Rt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
      }
      function Vi(t, a) {
        this.min = t !== void 0 ? t : new xe(1 / 0, 1 / 0, 1 / 0), this.max = a !== void 0 ? a : new xe(-1 / 0, -1 / 0, -1 / 0);
      }
      function Bi(t, a) {
        this.center = t !== void 0 ? t : new xe(), this.radius = a !== void 0 ? a : 0;
      }
      function Mi(t, a) {
        this.normal = t !== void 0 ? t : new xe(1, 0, 0), this.constant = a !== void 0 ? a : 0;
      }
      function Rs(t, a, A, l, h, f) {
        this.planes = [t !== void 0 ? t : new Mi(), a !== void 0 ? a : new Mi(), A !== void 0 ? A : new Mi(), l !== void 0 ? l : new Mi(), h !== void 0 ? h : new Mi(), f !== void 0 ? f : new Mi()];
      }
      un.DEFAULT_IMAGE = void 0, un.DEFAULT_MAPPING = Y, un.prototype = Object.assign(Object.create(d.prototype), { constructor: un, isTexture: !0, updateMatrix: function() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.name = t.name, this.image = t.image, this.mipmaps = t.mipmaps.slice(0), this.mapping = t.mapping, this.wrapS = t.wrapS, this.wrapT = t.wrapT, this.magFilter = t.magFilter, this.minFilter = t.minFilter, this.anisotropy = t.anisotropy, this.format = t.format, this.type = t.type, this.offset.copy(t.offset), this.repeat.copy(t.repeat), this.center.copy(t.center), this.rotation = t.rotation, this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrix.copy(t.matrix), this.generateMipmaps = t.generateMipmaps, this.premultiplyAlpha = t.premultiplyAlpha, this.flipY = t.flipY, this.unpackAlignment = t.unpackAlignment, this.encoding = t.encoding, this;
      }, toJSON: function(t) {
        var a = t === void 0 || typeof t == "string";
        if (!a && t.textures[this.uuid] !== void 0)
          return t.textures[this.uuid];
        var A = { metadata: { version: 4.5, type: "Texture", generator: "Texture.toJSON" }, uuid: this.uuid, name: this.name, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY };
        if (this.image !== void 0) {
          var l = this.image;
          if (l.uuid === void 0 && (l.uuid = Rr.generateUUID()), !a && t.images[l.uuid] === void 0) {
            var h;
            if (Array.isArray(l)) {
              h = [];
              for (var f = 0, p = l.length; f < p; f++)
                h.push(ea.getDataURL(l[f]));
            } else
              h = ea.getDataURL(l);
            t.images[l.uuid] = { uuid: l.uuid, url: h };
          }
          A.image = l.uuid;
        }
        return a || (t.textures[this.uuid] = A), A;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      }, transformUv: function(t) {
        if (this.mapping === Y) {
          if (t.applyMatrix3(this.matrix), t.x < 0 || t.x > 1)
            switch (this.wrapS) {
              case vt:
                t.x = t.x - Math.floor(t.x);
                break;
              case Qt:
                t.x = t.x < 0 ? 0 : 1;
                break;
              case Ct:
                Math.abs(Math.floor(t.x) % 2) === 1 ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x);
            }
          if (t.y < 0 || t.y > 1)
            switch (this.wrapT) {
              case vt:
                t.y = t.y - Math.floor(t.y);
                break;
              case Qt:
                t.y = t.y < 0 ? 0 : 1;
                break;
              case Ct:
                Math.abs(Math.floor(t.y) % 2) === 1 ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y);
            }
          this.flipY && (t.y = 1 - t.y);
        }
      } }), Object.defineProperty(un.prototype, "needsUpdate", { set: function(t) {
        t === !0 && this.version++;
      } }), Object.assign(nn.prototype, { isVector4: !0, set: function(t, a, A, l) {
        return this.x = t, this.y = a, this.z = A, this.w = l, this;
      }, setScalar: function(t) {
        return this.x = t, this.y = t, this.z = t, this.w = t, this;
      }, setX: function(t) {
        return this.x = t, this;
      }, setY: function(t) {
        return this.y = t, this;
      }, setZ: function(t) {
        return this.z = t, this;
      }, setW: function(t) {
        return this.w = t, this;
      }, setComponent: function(t, a) {
        switch (t) {
          case 0:
            this.x = a;
            break;
          case 1:
            this.y = a;
            break;
          case 2:
            this.z = a;
            break;
          case 3:
            this.w = a;
            break;
          default:
            throw new Error("index is out of range: " + t);
        }
        return this;
      }, getComponent: function(t) {
        switch (t) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          case 3:
            return this.w;
          default:
            throw new Error("index is out of range: " + t);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z, this.w);
      }, copy: function(t) {
        return this.x = t.x, this.y = t.y, this.z = t.z, this.w = t.w !== void 0 ? t.w : 1, this;
      }, add: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, a)) : (this.x += t.x, this.y += t.y, this.z += t.z, this.w += t.w, this);
      }, addScalar: function(t) {
        return this.x += t, this.y += t, this.z += t, this.w += t, this;
      }, addVectors: function(t, a) {
        return this.x = t.x + a.x, this.y = t.y + a.y, this.z = t.z + a.z, this.w = t.w + a.w, this;
      }, addScaledVector: function(t, a) {
        return this.x += t.x * a, this.y += t.y * a, this.z += t.z * a, this.w += t.w * a, this;
      }, sub: function(t, a) {
        return a !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, a)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this.w -= t.w, this);
      }, subScalar: function(t) {
        return this.x -= t, this.y -= t, this.z -= t, this.w -= t, this;
      }, subVectors: function(t, a) {
        return this.x = t.x - a.x, this.y = t.y - a.y, this.z = t.z - a.z, this.w = t.w - a.w, this;
      }, multiplyScalar: function(t) {
        return this.x *= t, this.y *= t, this.z *= t, this.w *= t, this;
      }, applyMatrix4: function(t) {
        var a = this.x, A = this.y, l = this.z, h = this.w, f = t.elements;
        return this.x = f[0] * a + f[4] * A + f[8] * l + f[12] * h, this.y = f[1] * a + f[5] * A + f[9] * l + f[13] * h, this.z = f[2] * a + f[6] * A + f[10] * l + f[14] * h, this.w = f[3] * a + f[7] * A + f[11] * l + f[15] * h, this;
      }, divideScalar: function(t) {
        return this.multiplyScalar(1 / t);
      }, setAxisAngleFromQuaternion: function(t) {
        this.w = 2 * Math.acos(t.w);
        var a = Math.sqrt(1 - t.w * t.w);
        return a < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = t.x / a, this.y = t.y / a, this.z = t.z / a), this;
      }, setAxisAngleFromRotationMatrix: function(t) {
        var a, A, l, h, f = t.elements, p = f[0], E = f[4], I = f[8], S = f[1], G = f[5], P = f[9], N = f[2], j = f[6], ee = f[10];
        if (Math.abs(E - S) < 0.01 && Math.abs(I - N) < 0.01 && Math.abs(P - j) < 0.01) {
          if (Math.abs(E + S) < 0.1 && Math.abs(I + N) < 0.1 && Math.abs(P + j) < 0.1 && Math.abs(p + G + ee - 3) < 0.1)
            return this.set(1, 0, 0, 0), this;
          a = Math.PI;
          var oe = (p + 1) / 2, Ae = (G + 1) / 2, pe = (ee + 1) / 2, we = (E + S) / 4, he = (I + N) / 4, Fe = (P + j) / 4;
          return oe > Ae && oe > pe ? oe < 0.01 ? (A = 0, l = 0.707106781, h = 0.707106781) : (l = we / (A = Math.sqrt(oe)), h = he / A) : Ae > pe ? Ae < 0.01 ? (A = 0.707106781, l = 0, h = 0.707106781) : (A = we / (l = Math.sqrt(Ae)), h = Fe / l) : pe < 0.01 ? (A = 0.707106781, l = 0.707106781, h = 0) : (A = he / (h = Math.sqrt(pe)), l = Fe / h), this.set(A, l, h, a), this;
        }
        var He = Math.sqrt((j - P) * (j - P) + (I - N) * (I - N) + (S - E) * (S - E));
        return Math.abs(He) < 1e-3 && (He = 1), this.x = (j - P) / He, this.y = (I - N) / He, this.z = (S - E) / He, this.w = Math.acos((p + G + ee - 1) / 2), this;
      }, min: function(t) {
        return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this.w = Math.min(this.w, t.w), this;
      }, max: function(t) {
        return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this.w = Math.max(this.w, t.w), this;
      }, clamp: function(t, a) {
        return this.x = Math.max(t.x, Math.min(a.x, this.x)), this.y = Math.max(t.y, Math.min(a.y, this.y)), this.z = Math.max(t.z, Math.min(a.z, this.z)), this.w = Math.max(t.w, Math.min(a.w, this.w)), this;
      }, clampScalar: function() {
        var t, a;
        return function(A, l) {
          return t === void 0 && (t = new nn(), a = new nn()), t.set(A, A, A, A), a.set(l, l, l, l), this.clamp(t, a);
        };
      }(), clampLength: function(t, a) {
        var A = this.length();
        return this.divideScalar(A || 1).multiplyScalar(Math.max(t, Math.min(a, A)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
      }, dot: function(t) {
        return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(t) {
        return this.normalize().multiplyScalar(t);
      }, lerp: function(t, a) {
        return this.x += (t.x - this.x) * a, this.y += (t.y - this.y) * a, this.z += (t.z - this.z) * a, this.w += (t.w - this.w) * a, this;
      }, lerpVectors: function(t, a, A) {
        return this.subVectors(a, t).multiplyScalar(A).add(t);
      }, equals: function(t) {
        return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w;
      }, fromArray: function(t, a) {
        return a === void 0 && (a = 0), this.x = t[a], this.y = t[a + 1], this.z = t[a + 2], this.w = t[a + 3], this;
      }, toArray: function(t, a) {
        return t === void 0 && (t = []), a === void 0 && (a = 0), t[a] = this.x, t[a + 1] = this.y, t[a + 2] = this.z, t[a + 3] = this.w, t;
      }, fromBufferAttribute: function(t, a, A) {
        return A !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = t.getX(a), this.y = t.getY(a), this.z = t.getZ(a), this.w = t.getW(a), this;
      } }), Aa.prototype = Object.assign(Object.create(d.prototype), { constructor: Aa, isWebGLRenderTarget: !0, setSize: function(t, a) {
        this.width === t && this.height === a || (this.width = t, this.height = a, this.dispose()), this.viewport.set(0, 0, t, a), this.scissor.set(0, 0, t, a);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.width = t.width, this.height = t.height, this.viewport.copy(t.viewport), this.texture = t.texture.clone(), this.depthBuffer = t.depthBuffer, this.stencilBuffer = t.stencilBuffer, this.depthTexture = t.depthTexture, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Da.prototype = Object.create(Aa.prototype), Da.prototype.constructor = Da, Da.prototype.isWebGLRenderTargetCube = !0, ua.prototype = Object.create(un.prototype), ua.prototype.constructor = ua, ua.prototype.isDataTexture = !0, Object.assign(Vi.prototype, { isBox3: !0, set: function(t, a) {
        return this.min.copy(t), this.max.copy(a), this;
      }, setFromArray: function(t) {
        for (var a = 1 / 0, A = 1 / 0, l = 1 / 0, h = -1 / 0, f = -1 / 0, p = -1 / 0, E = 0, I = t.length; E < I; E += 3) {
          var S = t[E], G = t[E + 1], P = t[E + 2];
          S < a && (a = S), G < A && (A = G), P < l && (l = P), S > h && (h = S), G > f && (f = G), P > p && (p = P);
        }
        return this.min.set(a, A, l), this.max.set(h, f, p), this;
      }, setFromBufferAttribute: function(t) {
        for (var a = 1 / 0, A = 1 / 0, l = 1 / 0, h = -1 / 0, f = -1 / 0, p = -1 / 0, E = 0, I = t.count; E < I; E++) {
          var S = t.getX(E), G = t.getY(E), P = t.getZ(E);
          S < a && (a = S), G < A && (A = G), P < l && (l = P), S > h && (h = S), G > f && (f = G), P > p && (p = P);
        }
        return this.min.set(a, A, l), this.max.set(h, f, p), this;
      }, setFromPoints: function(t) {
        this.makeEmpty();
        for (var a = 0, A = t.length; a < A; a++)
          this.expandByPoint(t[a]);
        return this;
      }, setFromCenterAndSize: function() {
        var t = new xe();
        return function(a, A) {
          var l = t.copy(A).multiplyScalar(0.5);
          return this.min.copy(a).sub(l), this.max.copy(a).add(l), this;
        };
      }(), setFromObject: function(t) {
        return this.makeEmpty(), this.expandByObject(t);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.min.copy(t.min), this.max.copy(t.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
      }, getCenter: function(t) {
        return t === void 0 && (console.warn("THREE.Box3: .getCenter() target is now required"), t = new xe()), this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(t) {
        return t === void 0 && (console.warn("THREE.Box3: .getSize() target is now required"), t = new xe()), this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min);
      }, expandByPoint: function(t) {
        return this.min.min(t), this.max.max(t), this;
      }, expandByVector: function(t) {
        return this.min.sub(t), this.max.add(t), this;
      }, expandByScalar: function(t) {
        return this.min.addScalar(-t), this.max.addScalar(t), this;
      }, expandByObject: function() {
        var t, a, A, l = new xe();
        function h(f) {
          var p = f.geometry;
          if (p !== void 0) {
            if (p.isGeometry) {
              var E = p.vertices;
              for (a = 0, A = E.length; a < A; a++)
                l.copy(E[a]), l.applyMatrix4(f.matrixWorld), t.expandByPoint(l);
            } else if (p.isBufferGeometry) {
              var I = p.attributes.position;
              if (I !== void 0)
                for (a = 0, A = I.count; a < A; a++)
                  l.fromBufferAttribute(I, a).applyMatrix4(f.matrixWorld), t.expandByPoint(l);
            }
          }
        }
        return function(f) {
          return t = this, f.updateMatrixWorld(!0), f.traverse(h), this;
        };
      }(), containsPoint: function(t) {
        return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z);
      }, containsBox: function(t) {
        return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z;
      }, getParameter: function(t, a) {
        return a === void 0 && (console.warn("THREE.Box3: .getParameter() target is now required"), a = new xe()), a.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z));
      }, intersectsBox: function(t) {
        return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z);
      }, intersectsSphere: function() {
        var t = new xe();
        return function(a) {
          return this.clampPoint(a.center, t), t.distanceToSquared(a.center) <= a.radius * a.radius;
        };
      }(), intersectsPlane: function(t) {
        var a, A;
        return t.normal.x > 0 ? (a = t.normal.x * this.min.x, A = t.normal.x * this.max.x) : (a = t.normal.x * this.max.x, A = t.normal.x * this.min.x), t.normal.y > 0 ? (a += t.normal.y * this.min.y, A += t.normal.y * this.max.y) : (a += t.normal.y * this.max.y, A += t.normal.y * this.min.y), t.normal.z > 0 ? (a += t.normal.z * this.min.z, A += t.normal.z * this.max.z) : (a += t.normal.z * this.max.z, A += t.normal.z * this.min.z), a <= t.constant && A >= t.constant;
      }, intersectsTriangle: function() {
        var t = new xe(), a = new xe(), A = new xe(), l = new xe(), h = new xe(), f = new xe(), p = new xe(), E = new xe(), I = new xe(), S = new xe();
        function G(P) {
          var N, j;
          for (N = 0, j = P.length - 3; N <= j; N += 3) {
            p.fromArray(P, N);
            var ee = I.x * Math.abs(p.x) + I.y * Math.abs(p.y) + I.z * Math.abs(p.z), oe = t.dot(p), Ae = a.dot(p), pe = A.dot(p);
            if (Math.max(-Math.max(oe, Ae, pe), Math.min(oe, Ae, pe)) > ee)
              return !1;
          }
          return !0;
        }
        return function(P) {
          if (this.isEmpty())
            return !1;
          this.getCenter(E), I.subVectors(this.max, E), t.subVectors(P.a, E), a.subVectors(P.b, E), A.subVectors(P.c, E), l.subVectors(a, t), h.subVectors(A, a), f.subVectors(t, A);
          var N = [0, -l.z, l.y, 0, -h.z, h.y, 0, -f.z, f.y, l.z, 0, -l.x, h.z, 0, -h.x, f.z, 0, -f.x, -l.y, l.x, 0, -h.y, h.x, 0, -f.y, f.x, 0];
          return !!G(N) && !!G(N = [1, 0, 0, 0, 1, 0, 0, 0, 1]) && (S.crossVectors(l, h), G(N = [S.x, S.y, S.z]));
        };
      }(), clampPoint: function(t, a) {
        return a === void 0 && (console.warn("THREE.Box3: .clampPoint() target is now required"), a = new xe()), a.copy(t).clamp(this.min, this.max);
      }, distanceToPoint: function() {
        var t = new xe();
        return function(a) {
          return t.copy(a).clamp(this.min, this.max).sub(a).length();
        };
      }(), getBoundingSphere: function() {
        var t = new xe();
        return function(a) {
          return a === void 0 && (console.warn("THREE.Box3: .getBoundingSphere() target is now required"), a = new Bi()), this.getCenter(a.center), a.radius = 0.5 * this.getSize(t).length(), a;
        };
      }(), intersect: function(t) {
        return this.min.max(t.min), this.max.min(t.max), this.isEmpty() && this.makeEmpty(), this;
      }, union: function(t) {
        return this.min.min(t.min), this.max.max(t.max), this;
      }, applyMatrix4: function(t) {
        if (this.isEmpty())
          return this;
        var a = t.elements, A = a[0] * this.min.x, l = a[1] * this.min.x, h = a[2] * this.min.x, f = a[0] * this.max.x, p = a[1] * this.max.x, E = a[2] * this.max.x, I = a[4] * this.min.y, S = a[5] * this.min.y, G = a[6] * this.min.y, P = a[4] * this.max.y, N = a[5] * this.max.y, j = a[6] * this.max.y, ee = a[8] * this.min.z, oe = a[9] * this.min.z, Ae = a[10] * this.min.z, pe = a[8] * this.max.z, we = a[9] * this.max.z, he = a[10] * this.max.z;
        return this.min.x = Math.min(A, f) + Math.min(I, P) + Math.min(ee, pe) + a[12], this.min.y = Math.min(l, p) + Math.min(S, N) + Math.min(oe, we) + a[13], this.min.z = Math.min(h, E) + Math.min(G, j) + Math.min(Ae, he) + a[14], this.max.x = Math.max(A, f) + Math.max(I, P) + Math.max(ee, pe) + a[12], this.max.y = Math.max(l, p) + Math.max(S, N) + Math.max(oe, we) + a[13], this.max.z = Math.max(h, E) + Math.max(G, j) + Math.max(Ae, he) + a[14], this;
      }, translate: function(t) {
        return this.min.add(t), this.max.add(t), this;
      }, equals: function(t) {
        return t.min.equals(this.min) && t.max.equals(this.max);
      } }), Object.assign(Bi.prototype, { set: function(t, a) {
        return this.center.copy(t), this.radius = a, this;
      }, setFromPoints: function() {
        var t = new Vi();
        return function(a, A) {
          var l = this.center;
          A !== void 0 ? l.copy(A) : t.setFromPoints(a).getCenter(l);
          for (var h = 0, f = 0, p = a.length; f < p; f++)
            h = Math.max(h, l.distanceToSquared(a[f]));
          return this.radius = Math.sqrt(h), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.center.copy(t.center), this.radius = t.radius, this;
      }, empty: function() {
        return this.radius <= 0;
      }, containsPoint: function(t) {
        return t.distanceToSquared(this.center) <= this.radius * this.radius;
      }, distanceToPoint: function(t) {
        return t.distanceTo(this.center) - this.radius;
      }, intersectsSphere: function(t) {
        var a = this.radius + t.radius;
        return t.center.distanceToSquared(this.center) <= a * a;
      }, intersectsBox: function(t) {
        return t.intersectsSphere(this);
      }, intersectsPlane: function(t) {
        return Math.abs(t.distanceToPoint(this.center)) <= this.radius;
      }, clampPoint: function(t, a) {
        var A = this.center.distanceToSquared(t);
        return a === void 0 && (console.warn("THREE.Sphere: .clampPoint() target is now required"), a = new xe()), a.copy(t), A > this.radius * this.radius && (a.sub(this.center).normalize(), a.multiplyScalar(this.radius).add(this.center)), a;
      }, getBoundingBox: function(t) {
        return t === void 0 && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), t = new Vi()), t.set(this.center, this.center), t.expandByScalar(this.radius), t;
      }, applyMatrix4: function(t) {
        return this.center.applyMatrix4(t), this.radius = this.radius * t.getMaxScaleOnAxis(), this;
      }, translate: function(t) {
        return this.center.add(t), this;
      }, equals: function(t) {
        return t.center.equals(this.center) && t.radius === this.radius;
      } }), Object.assign(Mi.prototype, { set: function(t, a) {
        return this.normal.copy(t), this.constant = a, this;
      }, setComponents: function(t, a, A, l) {
        return this.normal.set(t, a, A), this.constant = l, this;
      }, setFromNormalAndCoplanarPoint: function(t, a) {
        return this.normal.copy(t), this.constant = -a.dot(this.normal), this;
      }, setFromCoplanarPoints: function() {
        var t = new xe(), a = new xe();
        return function(A, l, h) {
          var f = t.subVectors(h, l).cross(a.subVectors(A, l)).normalize();
          return this.setFromNormalAndCoplanarPoint(f, A), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.normal.copy(t.normal), this.constant = t.constant, this;
      }, normalize: function() {
        var t = 1 / this.normal.length();
        return this.normal.multiplyScalar(t), this.constant *= t, this;
      }, negate: function() {
        return this.constant *= -1, this.normal.negate(), this;
      }, distanceToPoint: function(t) {
        return this.normal.dot(t) + this.constant;
      }, distanceToSphere: function(t) {
        return this.distanceToPoint(t.center) - t.radius;
      }, projectPoint: function(t, a) {
        return a === void 0 && (console.warn("THREE.Plane: .projectPoint() target is now required"), a = new xe()), a.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t);
      }, intersectLine: function() {
        var t = new xe();
        return function(a, A) {
          A === void 0 && (console.warn("THREE.Plane: .intersectLine() target is now required"), A = new xe());
          var l = a.delta(t), h = this.normal.dot(l);
          if (h === 0)
            return this.distanceToPoint(a.start) === 0 ? A.copy(a.start) : void 0;
          var f = -(a.start.dot(this.normal) + this.constant) / h;
          return f < 0 || f > 1 ? void 0 : A.copy(l).multiplyScalar(f).add(a.start);
        };
      }(), intersectsLine: function(t) {
        var a = this.distanceToPoint(t.start), A = this.distanceToPoint(t.end);
        return a < 0 && A > 0 || A < 0 && a > 0;
      }, intersectsBox: function(t) {
        return t.intersectsPlane(this);
      }, intersectsSphere: function(t) {
        return t.intersectsPlane(this);
      }, coplanarPoint: function(t) {
        return t === void 0 && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), t = new xe()), t.copy(this.normal).multiplyScalar(-this.constant);
      }, applyMatrix4: function() {
        var t = new xe(), a = new Kn();
        return function(A, l) {
          var h = l || a.getNormalMatrix(A), f = this.coplanarPoint(t).applyMatrix4(A), p = this.normal.applyMatrix3(h).normalize();
          return this.constant = -f.dot(p), this;
        };
      }(), translate: function(t) {
        return this.constant -= t.dot(this.normal), this;
      }, equals: function(t) {
        return t.normal.equals(this.normal) && t.constant === this.constant;
      } }), Object.assign(Rs.prototype, { set: function(t, a, A, l, h, f) {
        var p = this.planes;
        return p[0].copy(t), p[1].copy(a), p[2].copy(A), p[3].copy(l), p[4].copy(h), p[5].copy(f), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        for (var a = this.planes, A = 0; A < 6; A++)
          a[A].copy(t.planes[A]);
        return this;
      }, setFromMatrix: function(t) {
        var a = this.planes, A = t.elements, l = A[0], h = A[1], f = A[2], p = A[3], E = A[4], I = A[5], S = A[6], G = A[7], P = A[8], N = A[9], j = A[10], ee = A[11], oe = A[12], Ae = A[13], pe = A[14], we = A[15];
        return a[0].setComponents(p - l, G - E, ee - P, we - oe).normalize(), a[1].setComponents(p + l, G + E, ee + P, we + oe).normalize(), a[2].setComponents(p + h, G + I, ee + N, we + Ae).normalize(), a[3].setComponents(p - h, G - I, ee - N, we - Ae).normalize(), a[4].setComponents(p - f, G - S, ee - j, we - pe).normalize(), a[5].setComponents(p + f, G + S, ee + j, we + pe).normalize(), this;
      }, intersectsObject: function() {
        var t = new Bi();
        return function(a) {
          var A = a.geometry;
          return A.boundingSphere === null && A.computeBoundingSphere(), t.copy(A.boundingSphere).applyMatrix4(a.matrixWorld), this.intersectsSphere(t);
        };
      }(), intersectsSprite: function() {
        var t = new Bi();
        return function(a) {
          return t.center.set(0, 0, 0), t.radius = 0.7071067811865476, t.applyMatrix4(a.matrixWorld), this.intersectsSphere(t);
        };
      }(), intersectsSphere: function(t) {
        for (var a = this.planes, A = t.center, l = -t.radius, h = 0; h < 6; h++)
          if (a[h].distanceToPoint(A) < l)
            return !1;
        return !0;
      }, intersectsBox: function() {
        var t = new xe();
        return function(a) {
          for (var A = this.planes, l = 0; l < 6; l++) {
            var h = A[l];
            if (t.x = h.normal.x > 0 ? a.max.x : a.min.x, t.y = h.normal.y > 0 ? a.max.y : a.min.y, t.z = h.normal.z > 0 ? a.max.z : a.min.z, h.distanceToPoint(t) < 0)
              return !1;
          }
          return !0;
        };
      }(), containsPoint: function(t) {
        for (var a = this.planes, A = 0; A < 6; A++)
          if (a[A].distanceToPoint(t) < 0)
            return !1;
        return !0;
      } });
      var Kr = { alphamap_fragment: `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif
`, alphamap_pars_fragment: `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif
`, alphatest_fragment: `#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif
`, aomap_fragment: `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( PHYSICAL )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif
`, aomap_pars_fragment: `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, begin_vertex: `
vec3 transformed = vec3( position );
`, beginnormal_vertex: `
vec3 objectNormal = vec3( normal );
`, bsdfs: `float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	if( decayExponent > 0.0 ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		return distanceFalloff * maxDistanceCutoffFactor;
#else
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
#endif
	}
	return 1.0;
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;
	return specularColor * AB.x + AB.y;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
`, bumpmap_pars_fragment: `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif
`, clipping_planes_fragment: `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	#endif
#endif
`, clipping_planes_pars_fragment: `#if NUM_CLIPPING_PLANES > 0
	#if ! defined( PHYSICAL ) && ! defined( PHONG )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif
`, clipping_planes_pars_vertex: `#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	varying vec3 vViewPosition;
#endif
`, clipping_planes_vertex: `#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	vViewPosition = - mvPosition.xyz;
#endif
`, color_fragment: `#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`, color_pars_fragment: `#ifdef USE_COLOR
	varying vec3 vColor;
#endif
`, color_pars_vertex: `#ifdef USE_COLOR
	varying vec3 vColor;
#endif`, color_vertex: `#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`, common: `#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#define saturate(a) clamp( a, 0.0, 1.0 )
#define whiteCompliment(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
`, cube_uv_reflection_fragment: `#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_textureSize (1024.0)
int getFaceFromDirection(vec3 direction) {
	vec3 absDirection = abs(direction);
	int face = -1;
	if( absDirection.x > absDirection.z ) {
		if(absDirection.x > absDirection.y )
			face = direction.x > 0.0 ? 0 : 3;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	else {
		if(absDirection.z > absDirection.y )
			face = direction.z > 0.0 ? 2 : 5;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	return face;
}
#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)
#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))
vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {
	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);
	float dxRoughness = dFdx(roughness);
	float dyRoughness = dFdy(roughness);
	vec3 dx = dFdx( vec * scale * dxRoughness );
	vec3 dy = dFdy( vec * scale * dyRoughness );
	float d = max( dot( dx, dx ), dot( dy, dy ) );
	d = clamp(d, 1.0, cubeUV_rangeClamp);
	float mipLevel = 0.5 * log2(d);
	return vec2(floor(mipLevel), fract(mipLevel));
}
#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)
#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)
vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {
	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;
	float a = 16.0 * cubeUV_rcpTextureSize;
	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );
	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;
	float powScale = exp2_packed.x * exp2_packed.y;
	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;
	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;
	bool bRes = mipLevel == 0.0;
	scale =  bRes && (scale < a) ? a : scale;
	vec3 r;
	vec2 offset;
	int face = getFaceFromDirection(direction);
	float rcpPowScale = 1.0 / powScale;
	if( face == 0) {
		r = vec3(direction.x, -direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 1) {
		r = vec3(direction.y, direction.x, direction.z);
		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 2) {
		r = vec3(direction.z, direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 3) {
		r = vec3(direction.x, direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else if( face == 4) {
		r = vec3(direction.y, direction.x, -direction.z);
		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else {
		r = vec3(direction.z, -direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	r = normalize(r);
	float texelOffset = 0.5 * cubeUV_rcpTextureSize;
	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;
	vec2 base = offset + vec2( texelOffset );
	return base + s * ( scale - 2.0 * texelOffset );
}
#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)
vec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {
	float roughnessVal = roughness* cubeUV_maxLods3;
	float r1 = floor(roughnessVal);
	float r2 = r1 + 1.0;
	float t = fract(roughnessVal);
	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);
	float s = mipInfo.y;
	float level0 = mipInfo.x;
	float level1 = level0 + 1.0;
	level1 = level1 > 5.0 ? 5.0 : level1;
	level0 += min( floor( s + 0.5 ), 5.0 );
	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);
	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));
	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);
	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));
	vec4 result = mix(color10, color20, t);
	return vec4(result.rgb, 1.0);
}
#endif
`, defaultnormal_vertex: `vec3 transformedNormal = normalMatrix * objectNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
`, displacementmap_pars_vertex: `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif
`, displacementmap_vertex: `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );
#endif
`, emissivemap_fragment: `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif
`, emissivemap_pars_fragment: `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif
`, encodings_fragment: `  gl_FragColor = linearToOutputTexel( gl_FragColor );
`, encodings_pars_fragment: `
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.xyz * value.w * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M            = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float D      = max( maxRange / maxRGB, 1.0 );
	D            = min( floor( D ) / 255.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;
	Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract(Le);
	vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;
	return vec4( max(vRGB, 0.0), 1.0 );
}
`, envmap_fragment: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToVertex, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	envColor = envMapTexelToLinear( envColor );
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif
`, envmap_pars_fragment: `#if defined( USE_ENVMAP ) || defined( PHYSICAL )
	uniform float reflectivity;
	uniform float envMapIntensity;
#endif
#ifdef USE_ENVMAP
	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )
		varying vec3 vWorldPosition;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif
`, envmap_pars_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif
`, envmap_physical_pars_fragment: `#if defined( USE_ENVMAP ) && defined( PHYSICAL )
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );
		#else
			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif
`, envmap_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif
`, fog_vertex: `
#ifdef USE_FOG
fogDepth = -mvPosition.z;
#endif`, fog_pars_vertex: `#ifdef USE_FOG
  varying float fogDepth;
#endif
`, fog_fragment: `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif
`, fog_pars_fragment: `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif
`, gradientmap_pars_fragment: `#ifdef TOON
	uniform sampler2D gradientMap;
	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
		float dotNL = dot( normal, lightDirection );
		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
		#ifdef USE_GRADIENTMAP
			return texture2D( gradientMap, coord ).rgb;
		#else
			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
		#endif
	}
#endif
`, lightmap_fragment: `#ifdef USE_LIGHTMAP
	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
#endif
`, lightmap_pars_fragment: `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, lights_lambert_vertex: `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif
`, lights_pars_begin: `uniform vec3 ambientLightColor;
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
		float shadowCameraNear;
		float shadowCameraFar;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif
`, lights_phong_fragment: `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`, lights_phong_pars_fragment: `varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	#ifdef TOON
		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#else
		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
		vec3 irradiance = dotNL * directLight.color;
	#endif
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)
`, lights_physical_fragment: `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );
#ifdef STANDARD
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );
#endif
`, lights_physical_pars_fragment: `struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
	#ifndef STANDARD
		float clearCoat;
		float clearCoatRoughness;
	#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearCoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos - halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos + halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos + halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos - halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifndef STANDARD
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );
	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	#ifndef STANDARD
		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	#ifndef STANDARD
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		float dotNL = dotNV;
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );
	#ifndef STANDARD
		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )
#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}
`, lights_fragment_begin: `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = normalize( vViewPosition );
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearCoatRadiance = vec3( 0.0 );
#endif
`, lights_fragment_maps: `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )
		irradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );
	#ifndef STANDARD
		clearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );
	#endif
#endif
`, lights_fragment_end: `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );
#endif
`, logdepthbuf_fragment: `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, logdepthbuf_pars_fragment: `#ifdef USE_LOGDEPTHBUF
	uniform float logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
#endif
`, logdepthbuf_pars_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
	uniform float logDepthBufFC;
#endif`, logdepthbuf_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
	#else
		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
		gl_Position.z *= gl_Position.w;
	#endif
#endif
`, map_fragment: `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif
`, map_pars_fragment: `#ifdef USE_MAP
	uniform sampler2D map;
#endif
`, map_particle_fragment: `#ifdef USE_MAP
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
`, map_particle_pars_fragment: `#ifdef USE_MAP
	uniform mat3 uvTransform;
	uniform sampler2D map;
#endif
`, metalnessmap_fragment: `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif
`, metalnessmap_pars_fragment: `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, morphnormal_vertex: `#ifdef USE_MORPHNORMALS
	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];
	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];
	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];
	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];
#endif
`, morphtarget_pars_vertex: `#ifdef USE_MORPHTARGETS
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`, morphtarget_vertex: `#ifdef USE_MORPHTARGETS
	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];
	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];
	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];
	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];
	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];
	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];
	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];
	#endif
#endif
`, normal_fragment_begin: `#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
#endif
`, normal_fragment_maps: `#ifdef USE_NORMALMAP
	#ifdef OBJECTSPACE_NORMALMAP
		normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
		#ifdef FLIP_SIDED
			normal = - normal;
		#endif
		#ifdef DOUBLE_SIDED
			normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		normal = normalize( normalMatrix * normal );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif
`, normalmap_pars_fragment: `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
	#ifdef OBJECTSPACE_NORMALMAP
		uniform mat3 normalMatrix;
	#else
		vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {
			vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
			vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
			vec2 st0 = dFdx( vUv.st );
			vec2 st1 = dFdy( vUv.st );
			float scale = sign( st1.t * st0.s - st0.t * st1.s );
			vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
			vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
			vec3 N = normalize( surf_norm );
			mat3 tsn = mat3( S, T, N );
			vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
			mapN.xy *= normalScale;
			mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			return normalize( tsn * mapN );
		}
	#endif
#endif
`, packing: `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}
`, premultiplied_alpha_fragment: `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif
`, project_vertex: `vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
gl_Position = projectionMatrix * mvPosition;
`, dithering_fragment: `#if defined( DITHERING )
  gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif
`, dithering_pars_fragment: `#if defined( DITHERING )
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif
`, roughnessmap_fragment: `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif
`, roughnessmap_pars_fragment: `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, shadowmap_pars_fragment: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = floor( uv * size + 0.5 ) / size;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif
`, shadowmap_pars_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
#endif
`, shadowmap_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif
`, shadowmask_pars_fragment: `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}
`, skinbase_vertex: `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, skinning_pars_vertex: `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif
`, skinning_vertex: `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif
`, skinnormal_vertex: `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
#endif
`, specularmap_fragment: `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, specularmap_pars_fragment: `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, tonemapping_fragment: `#if defined( TONE_MAPPING )
  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif
`, tonemapping_pars_fragment: `#ifndef saturate
	#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
`, uv_pars_fragment: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
#endif`, uv_pars_vertex: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
`, uv_vertex: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, uv2_pars_fragment: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, uv2_pars_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
#endif`, uv2_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = uv2;
#endif`, worldpos_vertex: `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
#endif
`, cube_frag: `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldPosition;
void main() {
	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );
	gl_FragColor.a *= opacity;
}
`, cube_vert: `varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}
`, depth_frag: `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}
`, depth_vert: `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`, distanceRGBA_frag: `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}
`, distanceRGBA_vert: `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}
`, equirect_frag: `uniform sampler2D tEquirect;
varying vec3 vWorldPosition;
#include <common>
void main() {
	vec3 direction = normalize( vWorldPosition );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	gl_FragColor = texture2D( tEquirect, sampleUV );
}
`, equirect_vert: `varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}
`, linedashed_frag: `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, linedashed_vert: `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
`, meshbasic_frag: `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, meshbasic_vert: `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}
`, meshlambert_frag: `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshlambert_vert: `#define LAMBERT
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, meshphong_frag: `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshphong_vert: `#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, meshphysical_frag: `#define PHYSICAL
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifndef STANDARD
	uniform float clearCoat;
	uniform float clearCoatRoughness;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshphysical_vert: `#define PHYSICAL
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, normal_frag: `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}
`, normal_vert: `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	vViewPosition = - mvPosition.xyz;
#endif
}
`, points_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, points_vert: `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#ifdef USE_SIZEATTENUATION
		gl_PointSize = size * ( scale / - mvPosition.z );
	#else
		gl_PointSize = size;
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}
`, shadow_frag: `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <fog_fragment>
}
`, shadow_vert: `#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, sprite_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, sprite_vert: `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	vec4 mvPosition;
	mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
` }, Zn = { merge: function(t) {
        for (var a = {}, A = 0; A < t.length; A++) {
          var l = this.clone(t[A]);
          for (var h in l)
            a[h] = l[h];
        }
        return a;
      }, clone: function(t) {
        var a = {};
        for (var A in t)
          for (var l in a[A] = {}, t[A]) {
            var h = t[A][l];
            h && (h.isColor || h.isMatrix3 || h.isMatrix4 || h.isVector2 || h.isVector3 || h.isVector4 || h.isTexture) ? a[A][l] = h.clone() : Array.isArray(h) ? a[A][l] = h.slice() : a[A][l] = h;
          }
        return a;
      } }, VA = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 };
      function dr(t, a, A) {
        return a === void 0 && A === void 0 ? this.set(t) : this.setRGB(t, a, A);
      }
      Object.assign(dr.prototype, { isColor: !0, r: 1, g: 1, b: 1, set: function(t) {
        return t && t.isColor ? this.copy(t) : typeof t == "number" ? this.setHex(t) : typeof t == "string" && this.setStyle(t), this;
      }, setScalar: function(t) {
        return this.r = t, this.g = t, this.b = t, this;
      }, setHex: function(t) {
        return t = Math.floor(t), this.r = (t >> 16 & 255) / 255, this.g = (t >> 8 & 255) / 255, this.b = (255 & t) / 255, this;
      }, setRGB: function(t, a, A) {
        return this.r = t, this.g = a, this.b = A, this;
      }, setHSL: function() {
        function t(a, A, l) {
          return l < 0 && (l += 1), l > 1 && (l -= 1), l < 1 / 6 ? a + 6 * (A - a) * l : l < 0.5 ? A : l < 2 / 3 ? a + 6 * (A - a) * (2 / 3 - l) : a;
        }
        return function(a, A, l) {
          if (a = Rr.euclideanModulo(a, 1), A = Rr.clamp(A, 0, 1), l = Rr.clamp(l, 0, 1), A === 0)
            this.r = this.g = this.b = l;
          else {
            var h = l <= 0.5 ? l * (1 + A) : l + A - l * A, f = 2 * l - h;
            this.r = t(f, h, a + 1 / 3), this.g = t(f, h, a), this.b = t(f, h, a - 1 / 3);
          }
          return this;
        };
      }(), setStyle: function(t) {
        function a(P) {
          P !== void 0 && parseFloat(P) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.");
        }
        var A;
        if (A = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
          var l, h = A[1], f = A[2];
          switch (h) {
            case "rgb":
            case "rgba":
              if (l = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f))
                return this.r = Math.min(255, parseInt(l[1], 10)) / 255, this.g = Math.min(255, parseInt(l[2], 10)) / 255, this.b = Math.min(255, parseInt(l[3], 10)) / 255, a(l[5]), this;
              if (l = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f))
                return this.r = Math.min(100, parseInt(l[1], 10)) / 100, this.g = Math.min(100, parseInt(l[2], 10)) / 100, this.b = Math.min(100, parseInt(l[3], 10)) / 100, a(l[5]), this;
              break;
            case "hsl":
            case "hsla":
              if (l = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f)) {
                var p = parseFloat(l[1]) / 360, E = parseInt(l[2], 10) / 100, I = parseInt(l[3], 10) / 100;
                return a(l[5]), this.setHSL(p, E, I);
              }
          }
        } else if (A = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
          var S, G = (S = A[1]).length;
          if (G === 3)
            return this.r = parseInt(S.charAt(0) + S.charAt(0), 16) / 255, this.g = parseInt(S.charAt(1) + S.charAt(1), 16) / 255, this.b = parseInt(S.charAt(2) + S.charAt(2), 16) / 255, this;
          if (G === 6)
            return this.r = parseInt(S.charAt(0) + S.charAt(1), 16) / 255, this.g = parseInt(S.charAt(2) + S.charAt(3), 16) / 255, this.b = parseInt(S.charAt(4) + S.charAt(5), 16) / 255, this;
        }
        return t && t.length > 0 && ((S = VA[t]) !== void 0 ? this.setHex(S) : console.warn("THREE.Color: Unknown color " + t)), this;
      }, clone: function() {
        return new this.constructor(this.r, this.g, this.b);
      }, copy: function(t) {
        return this.r = t.r, this.g = t.g, this.b = t.b, this;
      }, copyGammaToLinear: function(t, a) {
        return a === void 0 && (a = 2), this.r = Math.pow(t.r, a), this.g = Math.pow(t.g, a), this.b = Math.pow(t.b, a), this;
      }, copyLinearToGamma: function(t, a) {
        a === void 0 && (a = 2);
        var A = a > 0 ? 1 / a : 1;
        return this.r = Math.pow(t.r, A), this.g = Math.pow(t.g, A), this.b = Math.pow(t.b, A), this;
      }, convertGammaToLinear: function(t) {
        return this.copyGammaToLinear(this, t), this;
      }, convertLinearToGamma: function(t) {
        return this.copyLinearToGamma(this, t), this;
      }, copySRGBToLinear: function() {
        function t(a) {
          return a < 0.04045 ? 0.0773993808 * a : Math.pow(0.9478672986 * a + 0.0521327014, 2.4);
        }
        return function(a) {
          return this.r = t(a.r), this.g = t(a.g), this.b = t(a.b), this;
        };
      }(), copyLinearToSRGB: function() {
        function t(a) {
          return a < 31308e-7 ? 12.92 * a : 1.055 * Math.pow(a, 0.41666) - 0.055;
        }
        return function(a) {
          return this.r = t(a.r), this.g = t(a.g), this.b = t(a.b), this;
        };
      }(), convertSRGBToLinear: function() {
        return this.copySRGBToLinear(this), this;
      }, convertLinearToSRGB: function() {
        return this.copyLinearToSRGB(this), this;
      }, getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;
      }, getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
      }, getHSL: function(t) {
        t === void 0 && (console.warn("THREE.Color: .getHSL() target is now required"), t = { h: 0, s: 0, l: 0 });
        var a, A, l = this.r, h = this.g, f = this.b, p = Math.max(l, h, f), E = Math.min(l, h, f), I = (E + p) / 2;
        if (E === p)
          a = 0, A = 0;
        else {
          var S = p - E;
          switch (A = I <= 0.5 ? S / (p + E) : S / (2 - p - E), p) {
            case l:
              a = (h - f) / S + (h < f ? 6 : 0);
              break;
            case h:
              a = (f - l) / S + 2;
              break;
            case f:
              a = (l - h) / S + 4;
          }
          a /= 6;
        }
        return t.h = a, t.s = A, t.l = I, t;
      }, getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")";
      }, offsetHSL: function() {
        var t = {};
        return function(a, A, l) {
          return this.getHSL(t), t.h += a, t.s += A, t.l += l, this.setHSL(t.h, t.s, t.l), this;
        };
      }(), add: function(t) {
        return this.r += t.r, this.g += t.g, this.b += t.b, this;
      }, addColors: function(t, a) {
        return this.r = t.r + a.r, this.g = t.g + a.g, this.b = t.b + a.b, this;
      }, addScalar: function(t) {
        return this.r += t, this.g += t, this.b += t, this;
      }, sub: function(t) {
        return this.r = Math.max(0, this.r - t.r), this.g = Math.max(0, this.g - t.g), this.b = Math.max(0, this.b - t.b), this;
      }, multiply: function(t) {
        return this.r *= t.r, this.g *= t.g, this.b *= t.b, this;
      }, multiplyScalar: function(t) {
        return this.r *= t, this.g *= t, this.b *= t, this;
      }, lerp: function(t, a) {
        return this.r += (t.r - this.r) * a, this.g += (t.g - this.g) * a, this.b += (t.b - this.b) * a, this;
      }, equals: function(t) {
        return t.r === this.r && t.g === this.g && t.b === this.b;
      }, fromArray: function(t, a) {
        return a === void 0 && (a = 0), this.r = t[a], this.g = t[a + 1], this.b = t[a + 2], this;
      }, toArray: function(t, a) {
        return t === void 0 && (t = []), a === void 0 && (a = 0), t[a] = this.r, t[a + 1] = this.g, t[a + 2] = this.b, t;
      }, toJSON: function() {
        return this.getHex();
      } });
      var hr = { common: { diffuse: { value: new dr(15658734) }, opacity: { value: 1 }, map: { value: null }, uvTransform: { value: new Kn() }, alphaMap: { value: null } }, specularmap: { specularMap: { value: null } }, envmap: { envMap: { value: null }, flipEnvMap: { value: -1 }, reflectivity: { value: 1 }, refractionRatio: { value: 0.98 }, maxMipLevel: { value: 0 } }, aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } }, lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } }, emissivemap: { emissiveMap: { value: null } }, bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } }, normalmap: { normalMap: { value: null }, normalScale: { value: new Tt(1, 1) } }, displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } }, roughnessmap: { roughnessMap: { value: null } }, metalnessmap: { metalnessMap: { value: null } }, gradientmap: { gradientMap: { value: null } }, fog: { fogDensity: { value: 25e-5 }, fogNear: { value: 1 }, fogFar: { value: 2e3 }, fogColor: { value: new dr(16777215) } }, lights: { ambientLightColor: { value: [] }, directionalLights: { value: [], properties: { direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, directionalShadowMap: { value: [] }, directionalShadowMatrix: { value: [] }, spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, spotShadowMap: { value: [] }, spotShadowMatrix: { value: [] }, pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {} } }, pointShadowMap: { value: [] }, pointShadowMatrix: { value: [] }, hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } }, rectAreaLights: { value: [], properties: { color: {}, position: {}, width: {}, height: {} } } }, points: { diffuse: { value: new dr(15658734) }, opacity: { value: 1 }, size: { value: 1 }, scale: { value: 1 }, map: { value: null }, uvTransform: { value: new Kn() } }, sprite: { diffuse: { value: new dr(15658734) }, opacity: { value: 1 }, center: { value: new Tt(0.5, 0.5) }, rotation: { value: 0 }, map: { value: null }, uvTransform: { value: new Kn() } } }, la = { basic: { uniforms: Zn.merge([hr.common, hr.specularmap, hr.envmap, hr.aomap, hr.lightmap, hr.fog]), vertexShader: Kr.meshbasic_vert, fragmentShader: Kr.meshbasic_frag }, lambert: { uniforms: Zn.merge([hr.common, hr.specularmap, hr.envmap, hr.aomap, hr.lightmap, hr.emissivemap, hr.fog, hr.lights, { emissive: { value: new dr(0) } }]), vertexShader: Kr.meshlambert_vert, fragmentShader: Kr.meshlambert_frag }, phong: { uniforms: Zn.merge([hr.common, hr.specularmap, hr.envmap, hr.aomap, hr.lightmap, hr.emissivemap, hr.bumpmap, hr.normalmap, hr.displacementmap, hr.gradientmap, hr.fog, hr.lights, { emissive: { value: new dr(0) }, specular: { value: new dr(1118481) }, shininess: { value: 30 } }]), vertexShader: Kr.meshphong_vert, fragmentShader: Kr.meshphong_frag }, standard: { uniforms: Zn.merge([hr.common, hr.envmap, hr.aomap, hr.lightmap, hr.emissivemap, hr.bumpmap, hr.normalmap, hr.displacementmap, hr.roughnessmap, hr.metalnessmap, hr.fog, hr.lights, { emissive: { value: new dr(0) }, roughness: { value: 0.5 }, metalness: { value: 0.5 }, envMapIntensity: { value: 1 } }]), vertexShader: Kr.meshphysical_vert, fragmentShader: Kr.meshphysical_frag }, points: { uniforms: Zn.merge([hr.points, hr.fog]), vertexShader: Kr.points_vert, fragmentShader: Kr.points_frag }, dashed: { uniforms: Zn.merge([hr.common, hr.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } }]), vertexShader: Kr.linedashed_vert, fragmentShader: Kr.linedashed_frag }, depth: { uniforms: Zn.merge([hr.common, hr.displacementmap]), vertexShader: Kr.depth_vert, fragmentShader: Kr.depth_frag }, normal: { uniforms: Zn.merge([hr.common, hr.bumpmap, hr.normalmap, hr.displacementmap, { opacity: { value: 1 } }]), vertexShader: Kr.normal_vert, fragmentShader: Kr.normal_frag }, sprite: { uniforms: Zn.merge([hr.sprite, hr.fog]), vertexShader: Kr.sprite_vert, fragmentShader: Kr.sprite_frag }, cube: { uniforms: { tCube: { value: null }, tFlip: { value: -1 }, opacity: { value: 1 } }, vertexShader: Kr.cube_vert, fragmentShader: Kr.cube_frag }, equirect: { uniforms: { tEquirect: { value: null } }, vertexShader: Kr.equirect_vert, fragmentShader: Kr.equirect_frag }, distanceRGBA: { uniforms: Zn.merge([hr.common, hr.displacementmap, { referencePosition: { value: new xe() }, nearDistance: { value: 1 }, farDistance: { value: 1e3 } }]), vertexShader: Kr.distanceRGBA_vert, fragmentShader: Kr.distanceRGBA_frag }, shadow: { uniforms: Zn.merge([hr.lights, hr.fog, { color: { value: new dr(0) }, opacity: { value: 1 } }]), vertexShader: Kr.shadow_vert, fragmentShader: Kr.shadow_frag } };
      function ac() {
        var t = null, a = !1, A = null;
        function l(h, f) {
          a !== !1 && (A(h, f), t.requestAnimationFrame(l));
        }
        return { start: function() {
          a !== !0 && A !== null && (t.requestAnimationFrame(l), a = !0);
        }, stop: function() {
          a = !1;
        }, setAnimationLoop: function(h) {
          A = h;
        }, setContext: function(h) {
          t = h;
        } };
      }
      function LA(t) {
        var a = /* @__PURE__ */ new WeakMap();
        return { get: function(A) {
          return A.isInterleavedBufferAttribute && (A = A.data), a.get(A);
        }, remove: function(A) {
          A.isInterleavedBufferAttribute && (A = A.data);
          var l = a.get(A);
          l && (t.deleteBuffer(l.buffer), a.delete(A));
        }, update: function(A, l) {
          A.isInterleavedBufferAttribute && (A = A.data);
          var h = a.get(A);
          h === void 0 ? a.set(A, function(f, p) {
            var E = f.array, I = f.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW, S = t.createBuffer();
            t.bindBuffer(p, S), t.bufferData(p, E, I), f.onUploadCallback();
            var G = t.FLOAT;
            return E instanceof Float32Array ? G = t.FLOAT : E instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : E instanceof Uint16Array ? G = t.UNSIGNED_SHORT : E instanceof Int16Array ? G = t.SHORT : E instanceof Uint32Array ? G = t.UNSIGNED_INT : E instanceof Int32Array ? G = t.INT : E instanceof Int8Array ? G = t.BYTE : E instanceof Uint8Array && (G = t.UNSIGNED_BYTE), { buffer: S, type: G, bytesPerElement: E.BYTES_PER_ELEMENT, version: f.version };
          }(A, l)) : h.version < A.version && (function(f, p, E) {
            var I = p.array, S = p.updateRange;
            t.bindBuffer(E, f), p.dynamic === !1 ? t.bufferData(E, I, t.STATIC_DRAW) : S.count === -1 ? t.bufferSubData(E, 0, I) : S.count === 0 ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (t.bufferSubData(E, S.offset * I.BYTES_PER_ELEMENT, I.subarray(S.offset, S.offset + S.count)), S.count = -1);
          }(h.buffer, A, l), h.version = A.version);
        } };
      }
      function da(t, a, A, l) {
        this._x = t || 0, this._y = a || 0, this._z = A || 0, this._order = l || da.DefaultOrder;
      }
      function oc() {
        this.mask = 1;
      }
      la.physical = { uniforms: Zn.merge([la.standard.uniforms, { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } }]), vertexShader: Kr.meshphysical_vert, fragmentShader: Kr.meshphysical_frag }, da.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], da.DefaultOrder = "XYZ", Object.defineProperties(da.prototype, { x: { get: function() {
        return this._x;
      }, set: function(t) {
        this._x = t, this.onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(t) {
        this._y = t, this.onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(t) {
        this._z = t, this.onChangeCallback();
      } }, order: { get: function() {
        return this._order;
      }, set: function(t) {
        this._order = t, this.onChangeCallback();
      } } }), Object.assign(da.prototype, { isEuler: !0, set: function(t, a, A, l) {
        return this._x = t, this._y = a, this._z = A, this._order = l || this._order, this.onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._order);
      }, copy: function(t) {
        return this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this.onChangeCallback(), this;
      }, setFromRotationMatrix: function(t, a, A) {
        var l = Rr.clamp, h = t.elements, f = h[0], p = h[4], E = h[8], I = h[1], S = h[5], G = h[9], P = h[2], N = h[6], j = h[10];
        return (a = a || this._order) === "XYZ" ? (this._y = Math.asin(l(E, -1, 1)), Math.abs(E) < 0.99999 ? (this._x = Math.atan2(-G, j), this._z = Math.atan2(-p, f)) : (this._x = Math.atan2(N, S), this._z = 0)) : a === "YXZ" ? (this._x = Math.asin(-l(G, -1, 1)), Math.abs(G) < 0.99999 ? (this._y = Math.atan2(E, j), this._z = Math.atan2(I, S)) : (this._y = Math.atan2(-P, f), this._z = 0)) : a === "ZXY" ? (this._x = Math.asin(l(N, -1, 1)), Math.abs(N) < 0.99999 ? (this._y = Math.atan2(-P, j), this._z = Math.atan2(-p, S)) : (this._y = 0, this._z = Math.atan2(I, f))) : a === "ZYX" ? (this._y = Math.asin(-l(P, -1, 1)), Math.abs(P) < 0.99999 ? (this._x = Math.atan2(N, j), this._z = Math.atan2(I, f)) : (this._x = 0, this._z = Math.atan2(-p, S))) : a === "YZX" ? (this._z = Math.asin(l(I, -1, 1)), Math.abs(I) < 0.99999 ? (this._x = Math.atan2(-G, S), this._y = Math.atan2(-P, f)) : (this._x = 0, this._y = Math.atan2(E, j))) : a === "XZY" ? (this._z = Math.asin(-l(p, -1, 1)), Math.abs(p) < 0.99999 ? (this._x = Math.atan2(N, S), this._y = Math.atan2(E, f)) : (this._x = Math.atan2(-G, j), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + a), this._order = a, A !== !1 && this.onChangeCallback(), this;
      }, setFromQuaternion: function() {
        var t = new Br();
        return function(a, A, l) {
          return t.makeRotationFromQuaternion(a), this.setFromRotationMatrix(t, A, l);
        };
      }(), setFromVector3: function(t, a) {
        return this.set(t.x, t.y, t.z, a || this._order);
      }, reorder: function() {
        var t = new fn();
        return function(a) {
          return t.setFromEuler(this), this.setFromQuaternion(t, a);
        };
      }(), equals: function(t) {
        return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order;
      }, fromArray: function(t) {
        return this._x = t[0], this._y = t[1], this._z = t[2], t[3] !== void 0 && (this._order = t[3]), this.onChangeCallback(), this;
      }, toArray: function(t, a) {
        return t === void 0 && (t = []), a === void 0 && (a = 0), t[a] = this._x, t[a + 1] = this._y, t[a + 2] = this._z, t[a + 3] = this._order, t;
      }, toVector3: function(t) {
        return t ? t.set(this._x, this._y, this._z) : new xe(this._x, this._y, this._z);
      }, onChange: function(t) {
        return this.onChangeCallback = t, this;
      }, onChangeCallback: function() {
      } }), Object.assign(oc.prototype, { set: function(t) {
        this.mask = 1 << t | 0;
      }, enable: function(t) {
        this.mask |= 1 << t | 0;
      }, toggle: function(t) {
        this.mask ^= 1 << t | 0;
      }, disable: function(t) {
        this.mask &= ~(1 << t | 0);
      }, test: function(t) {
        return (this.mask & t.mask) != 0;
      } });
      var zA = 0;
      function zt() {
        Object.defineProperty(this, "id", { value: zA++ }), this.uuid = Rr.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = zt.DefaultUp.clone();
        var t = new xe(), a = new da(), A = new fn(), l = new xe(1, 1, 1);
        a.onChange(function() {
          A.setFromEuler(a, !1);
        }), A.onChange(function() {
          a.setFromQuaternion(A, void 0, !1);
        }), Object.defineProperties(this, { position: { enumerable: !0, value: t }, rotation: { enumerable: !0, value: a }, quaternion: { enumerable: !0, value: A }, scale: { enumerable: !0, value: l }, modelViewMatrix: { value: new Br() }, normalMatrix: { value: new Kn() } }), this.matrix = new Br(), this.matrixWorld = new Br(), this.matrixAutoUpdate = zt.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new oc(), this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {};
      }
      function Ni() {
        zt.call(this), this.type = "Camera", this.matrixWorldInverse = new Br(), this.projectionMatrix = new Br();
      }
      function $a(t, a, A, l, h, f) {
        Ni.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = t, this.right = a, this.top = A, this.bottom = l, this.near = h !== void 0 ? h : 0.1, this.far = f !== void 0 ? f : 2e3, this.updateProjectionMatrix();
      }
      function Li(t, a, A, l, h, f) {
        this.a = t, this.b = a, this.c = A, this.normal = l && l.isVector3 ? l : new xe(), this.vertexNormals = Array.isArray(l) ? l : [], this.color = h && h.isColor ? h : new dr(), this.vertexColors = Array.isArray(h) ? h : [], this.materialIndex = f !== void 0 ? f : 0;
      }
      zt.DefaultUp = new xe(0, 1, 0), zt.DefaultMatrixAutoUpdate = !0, zt.prototype = Object.assign(Object.create(d.prototype), { constructor: zt, isObject3D: !0, onBeforeRender: function() {
      }, onAfterRender: function() {
      }, applyMatrix: function(t) {
        this.matrix.multiplyMatrices(t, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale);
      }, applyQuaternion: function(t) {
        return this.quaternion.premultiply(t), this;
      }, setRotationFromAxisAngle: function(t, a) {
        this.quaternion.setFromAxisAngle(t, a);
      }, setRotationFromEuler: function(t) {
        this.quaternion.setFromEuler(t, !0);
      }, setRotationFromMatrix: function(t) {
        this.quaternion.setFromRotationMatrix(t);
      }, setRotationFromQuaternion: function(t) {
        this.quaternion.copy(t);
      }, rotateOnAxis: function() {
        var t = new fn();
        return function(a, A) {
          return t.setFromAxisAngle(a, A), this.quaternion.multiply(t), this;
        };
      }(), rotateOnWorldAxis: function() {
        var t = new fn();
        return function(a, A) {
          return t.setFromAxisAngle(a, A), this.quaternion.premultiply(t), this;
        };
      }(), rotateX: function() {
        var t = new xe(1, 0, 0);
        return function(a) {
          return this.rotateOnAxis(t, a);
        };
      }(), rotateY: function() {
        var t = new xe(0, 1, 0);
        return function(a) {
          return this.rotateOnAxis(t, a);
        };
      }(), rotateZ: function() {
        var t = new xe(0, 0, 1);
        return function(a) {
          return this.rotateOnAxis(t, a);
        };
      }(), translateOnAxis: function() {
        var t = new xe();
        return function(a, A) {
          return t.copy(a).applyQuaternion(this.quaternion), this.position.add(t.multiplyScalar(A)), this;
        };
      }(), translateX: function() {
        var t = new xe(1, 0, 0);
        return function(a) {
          return this.translateOnAxis(t, a);
        };
      }(), translateY: function() {
        var t = new xe(0, 1, 0);
        return function(a) {
          return this.translateOnAxis(t, a);
        };
      }(), translateZ: function() {
        var t = new xe(0, 0, 1);
        return function(a) {
          return this.translateOnAxis(t, a);
        };
      }(), localToWorld: function(t) {
        return t.applyMatrix4(this.matrixWorld);
      }, worldToLocal: function() {
        var t = new Br();
        return function(a) {
          return a.applyMatrix4(t.getInverse(this.matrixWorld));
        };
      }(), lookAt: function() {
        var t = new Br(), a = new xe();
        return function(A, l, h) {
          A.isVector3 ? a.copy(A) : a.set(A, l, h), this.isCamera ? t.lookAt(this.position, a, this.up) : t.lookAt(a, this.position, this.up), this.quaternion.setFromRotationMatrix(t);
        };
      }(), add: function(t) {
        if (arguments.length > 1) {
          for (var a = 0; a < arguments.length; a++)
            this.add(arguments[a]);
          return this;
        }
        return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t), this) : (t && t.isObject3D ? (t.parent !== null && t.parent.remove(t), t.parent = this, t.dispatchEvent({ type: "added" }), this.children.push(t)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t), this);
      }, remove: function(t) {
        if (arguments.length > 1) {
          for (var a = 0; a < arguments.length; a++)
            this.remove(arguments[a]);
          return this;
        }
        var A = this.children.indexOf(t);
        return A !== -1 && (t.parent = null, t.dispatchEvent({ type: "removed" }), this.children.splice(A, 1)), this;
      }, getObjectById: function(t) {
        return this.getObjectByProperty("id", t);
      }, getObjectByName: function(t) {
        return this.getObjectByProperty("name", t);
      }, getObjectByProperty: function(t, a) {
        if (this[t] === a)
          return this;
        for (var A = 0, l = this.children.length; A < l; A++) {
          var h = this.children[A].getObjectByProperty(t, a);
          if (h !== void 0)
            return h;
        }
      }, getWorldPosition: function(t) {
        return t === void 0 && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), t = new xe()), this.updateMatrixWorld(!0), t.setFromMatrixPosition(this.matrixWorld);
      }, getWorldQuaternion: function() {
        var t = new xe(), a = new xe();
        return function(A) {
          return A === void 0 && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), A = new fn()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, A, a), A;
        };
      }(), getWorldScale: function() {
        var t = new xe(), a = new fn();
        return function(A) {
          return A === void 0 && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), A = new xe()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, a, A), A;
        };
      }(), getWorldDirection: function() {
        var t = new fn();
        return function(a) {
          return a === void 0 && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), a = new xe()), this.getWorldQuaternion(t), a.set(0, 0, 1).applyQuaternion(t);
        };
      }(), raycast: function() {
      }, traverse: function(t) {
        t(this);
        for (var a = this.children, A = 0, l = a.length; A < l; A++)
          a[A].traverse(t);
      }, traverseVisible: function(t) {
        if (this.visible !== !1) {
          t(this);
          for (var a = this.children, A = 0, l = a.length; A < l; A++)
            a[A].traverseVisible(t);
        }
      }, traverseAncestors: function(t) {
        var a = this.parent;
        a !== null && (t(a), a.traverseAncestors(t));
      }, updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
      }, updateMatrixWorld: function(t) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || t) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, t = !0);
        for (var a = this.children, A = 0, l = a.length; A < l; A++)
          a[A].updateMatrixWorld(t);
      }, toJSON: function(t) {
        var a = t === void 0 || typeof t == "string", A = {};
        a && (t = { geometries: {}, materials: {}, textures: {}, images: {}, shapes: {} }, A.metadata = { version: 4.5, type: "Object", generator: "Object3D.toJSON" });
        var l = {};
        function h(Ae, pe) {
          return Ae[pe.uuid] === void 0 && (Ae[pe.uuid] = pe.toJSON(t)), pe.uuid;
        }
        if (l.uuid = this.uuid, l.type = this.type, this.name !== "" && (l.name = this.name), this.castShadow === !0 && (l.castShadow = !0), this.receiveShadow === !0 && (l.receiveShadow = !0), this.visible === !1 && (l.visible = !1), this.frustumCulled === !1 && (l.frustumCulled = !1), this.renderOrder !== 0 && (l.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (l.userData = this.userData), l.layers = this.layers.mask, l.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (l.matrixAutoUpdate = !1), this.isMesh || this.isLine || this.isPoints) {
          l.geometry = h(t.geometries, this.geometry);
          var f = this.geometry.parameters;
          if (f !== void 0 && f.shapes !== void 0) {
            var p = f.shapes;
            if (Array.isArray(p))
              for (var E = 0, I = p.length; E < I; E++) {
                var S = p[E];
                h(t.shapes, S);
              }
            else
              h(t.shapes, p);
          }
        }
        if (this.material !== void 0)
          if (Array.isArray(this.material)) {
            var G = [];
            for (E = 0, I = this.material.length; E < I; E++)
              G.push(h(t.materials, this.material[E]));
            l.material = G;
          } else
            l.material = h(t.materials, this.material);
        if (this.children.length > 0)
          for (l.children = [], E = 0; E < this.children.length; E++)
            l.children.push(this.children[E].toJSON(t).object);
        if (a) {
          var P = oe(t.geometries), N = oe(t.materials), j = oe(t.textures), ee = oe(t.images);
          p = oe(t.shapes), P.length > 0 && (A.geometries = P), N.length > 0 && (A.materials = N), j.length > 0 && (A.textures = j), ee.length > 0 && (A.images = ee), p.length > 0 && (A.shapes = p);
        }
        return A.object = l, A;
        function oe(Ae) {
          var pe = [];
          for (var we in Ae) {
            var he = Ae[we];
            delete he.metadata, pe.push(he);
          }
          return pe;
        }
      }, clone: function(t) {
        return new this.constructor().copy(this, t);
      }, copy: function(t, a) {
        if (a === void 0 && (a = !0), this.name = t.name, this.up.copy(t.up), this.position.copy(t.position), this.quaternion.copy(t.quaternion), this.scale.copy(t.scale), this.matrix.copy(t.matrix), this.matrixWorld.copy(t.matrixWorld), this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate, this.layers.mask = t.layers.mask, this.visible = t.visible, this.castShadow = t.castShadow, this.receiveShadow = t.receiveShadow, this.frustumCulled = t.frustumCulled, this.renderOrder = t.renderOrder, this.userData = JSON.parse(JSON.stringify(t.userData)), a === !0)
          for (var A = 0; A < t.children.length; A++) {
            var l = t.children[A];
            this.add(l.clone());
          }
        return this;
      } }), Ni.prototype = Object.assign(Object.create(zt.prototype), { constructor: Ni, isCamera: !0, copy: function(t, a) {
        return zt.prototype.copy.call(this, t, a), this.matrixWorldInverse.copy(t.matrixWorldInverse), this.projectionMatrix.copy(t.projectionMatrix), this;
      }, getWorldDirection: function() {
        var t = new fn();
        return function(a) {
          return a === void 0 && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), a = new xe()), this.getWorldQuaternion(t), a.set(0, 0, -1).applyQuaternion(t);
        };
      }(), updateMatrixWorld: function(t) {
        zt.prototype.updateMatrixWorld.call(this, t), this.matrixWorldInverse.getInverse(this.matrixWorld);
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), $a.prototype = Object.assign(Object.create(Ni.prototype), { constructor: $a, isOrthographicCamera: !0, copy: function(t, a) {
        return Ni.prototype.copy.call(this, t, a), this.left = t.left, this.right = t.right, this.top = t.top, this.bottom = t.bottom, this.near = t.near, this.far = t.far, this.zoom = t.zoom, this.view = t.view === null ? null : Object.assign({}, t.view), this;
      }, setViewOffset: function(t, a, A, l, h, f) {
        this.view === null && (this.view = { enabled: !0, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = !0, this.view.fullWidth = t, this.view.fullHeight = a, this.view.offsetX = A, this.view.offsetY = l, this.view.width = h, this.view.height = f, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var t = (this.right - this.left) / (2 * this.zoom), a = (this.top - this.bottom) / (2 * this.zoom), A = (this.right + this.left) / 2, l = (this.top + this.bottom) / 2, h = A - t, f = A + t, p = l + a, E = l - a;
        if (this.view !== null && this.view.enabled) {
          var I = this.zoom / (this.view.width / this.view.fullWidth), S = this.zoom / (this.view.height / this.view.fullHeight), G = (this.right - this.left) / this.view.width, P = (this.top - this.bottom) / this.view.height;
          f = (h += G * (this.view.offsetX / I)) + G * (this.view.width / I), E = (p -= P * (this.view.offsetY / S)) - P * (this.view.height / S);
        }
        this.projectionMatrix.makeOrthographic(h, f, p, E, this.near, this.far);
      }, toJSON: function(t) {
        var a = zt.prototype.toJSON.call(this, t);
        return a.object.zoom = this.zoom, a.object.left = this.left, a.object.right = this.right, a.object.top = this.top, a.object.bottom = this.bottom, a.object.near = this.near, a.object.far = this.far, this.view !== null && (a.object.view = Object.assign({}, this.view)), a;
      } }), Object.assign(Li.prototype, { clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        this.a = t.a, this.b = t.b, this.c = t.c, this.normal.copy(t.normal), this.color.copy(t.color), this.materialIndex = t.materialIndex;
        for (var a = 0, A = t.vertexNormals.length; a < A; a++)
          this.vertexNormals[a] = t.vertexNormals[a].clone();
        for (a = 0, A = t.vertexColors.length; a < A; a++)
          this.vertexColors[a] = t.vertexColors[a].clone();
        return this;
      } });
      var JA = 0;
      function Cr() {
        Object.defineProperty(this, "id", { value: JA += 2 }), this.uuid = Rr.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = !1, this.verticesNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1;
      }
      function Or(t, a, A) {
        if (Array.isArray(t))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = t, this.itemSize = a, this.count = t !== void 0 ? t.length / a : 0, this.normalized = A === !0, this.dynamic = !1, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function To(t, a, A) {
        Or.call(this, new Int8Array(t), a, A);
      }
      function Ro(t, a, A) {
        Or.call(this, new Uint8Array(t), a, A);
      }
      function Mo(t, a, A) {
        Or.call(this, new Uint8ClampedArray(t), a, A);
      }
      function No(t, a, A) {
        Or.call(this, new Int16Array(t), a, A);
      }
      function ha(t, a, A) {
        Or.call(this, new Uint16Array(t), a, A);
      }
      function ko(t, a, A) {
        Or.call(this, new Int32Array(t), a, A);
      }
      function fa(t, a, A) {
        Or.call(this, new Uint32Array(t), a, A);
      }
      function jt(t, a, A) {
        Or.call(this, new Float32Array(t), a, A);
      }
      function Fo(t, a, A) {
        Or.call(this, new Float64Array(t), a, A);
      }
      function Dc() {
        this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1;
      }
      function $c(t) {
        if (t.length === 0)
          return -1 / 0;
        for (var a = t[0], A = 1, l = t.length; A < l; ++A)
          t[A] > a && (a = t[A]);
        return a;
      }
      Cr.prototype = Object.assign(Object.create(d.prototype), { constructor: Cr, isGeometry: !0, applyMatrix: function(t) {
        for (var a = new Kn().getNormalMatrix(t), A = 0, l = this.vertices.length; A < l; A++)
          this.vertices[A].applyMatrix4(t);
        for (A = 0, l = this.faces.length; A < l; A++) {
          var h = this.faces[A];
          h.normal.applyMatrix3(a).normalize();
          for (var f = 0, p = h.vertexNormals.length; f < p; f++)
            h.vertexNormals[f].applyMatrix3(a).normalize();
        }
        return this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this;
      }, rotateX: function() {
        var t = new Br();
        return function(a) {
          return t.makeRotationX(a), this.applyMatrix(t), this;
        };
      }(), rotateY: function() {
        var t = new Br();
        return function(a) {
          return t.makeRotationY(a), this.applyMatrix(t), this;
        };
      }(), rotateZ: function() {
        var t = new Br();
        return function(a) {
          return t.makeRotationZ(a), this.applyMatrix(t), this;
        };
      }(), translate: function() {
        var t = new Br();
        return function(a, A, l) {
          return t.makeTranslation(a, A, l), this.applyMatrix(t), this;
        };
      }(), scale: function() {
        var t = new Br();
        return function(a, A, l) {
          return t.makeScale(a, A, l), this.applyMatrix(t), this;
        };
      }(), lookAt: function() {
        var t = new zt();
        return function(a) {
          t.lookAt(a), t.updateMatrix(), this.applyMatrix(t.matrix);
        };
      }(), fromBufferGeometry: function(t) {
        var a = this, A = t.index !== null ? t.index.array : void 0, l = t.attributes, h = l.position.array, f = l.normal !== void 0 ? l.normal.array : void 0, p = l.color !== void 0 ? l.color.array : void 0, E = l.uv !== void 0 ? l.uv.array : void 0, I = l.uv2 !== void 0 ? l.uv2.array : void 0;
        I !== void 0 && (this.faceVertexUvs[1] = []);
        for (var S = [], G = [], P = [], N = 0, j = 0; N < h.length; N += 3, j += 2)
          a.vertices.push(new xe(h[N], h[N + 1], h[N + 2])), f !== void 0 && S.push(new xe(f[N], f[N + 1], f[N + 2])), p !== void 0 && a.colors.push(new dr(p[N], p[N + 1], p[N + 2])), E !== void 0 && G.push(new Tt(E[j], E[j + 1])), I !== void 0 && P.push(new Tt(I[j], I[j + 1]));
        function ee(he, Fe, He, me) {
          var Te = new Li(he, Fe, He, f !== void 0 ? [S[he].clone(), S[Fe].clone(), S[He].clone()] : [], p !== void 0 ? [a.colors[he].clone(), a.colors[Fe].clone(), a.colors[He].clone()] : [], me);
          a.faces.push(Te), E !== void 0 && a.faceVertexUvs[0].push([G[he].clone(), G[Fe].clone(), G[He].clone()]), I !== void 0 && a.faceVertexUvs[1].push([P[he].clone(), P[Fe].clone(), P[He].clone()]);
        }
        var oe = t.groups;
        if (oe.length > 0)
          for (N = 0; N < oe.length; N++)
            for (var Ae = oe[N], pe = Ae.start, we = (j = pe, pe + Ae.count); j < we; j += 3)
              A !== void 0 ? ee(A[j], A[j + 1], A[j + 2], Ae.materialIndex) : ee(j, j + 1, j + 2, Ae.materialIndex);
        else if (A !== void 0)
          for (N = 0; N < A.length; N += 3)
            ee(A[N], A[N + 1], A[N + 2]);
        else
          for (N = 0; N < h.length / 3; N += 3)
            ee(N, N + 1, N + 2);
        return this.computeFaceNormals(), t.boundingBox !== null && (this.boundingBox = t.boundingBox.clone()), t.boundingSphere !== null && (this.boundingSphere = t.boundingSphere.clone()), this;
      }, center: function() {
        var t = new xe();
        return function() {
          return this.computeBoundingBox(), this.boundingBox.getCenter(t).negate(), this.translate(t.x, t.y, t.z), this;
        };
      }(), normalize: function() {
        this.computeBoundingSphere();
        var t = this.boundingSphere.center, a = this.boundingSphere.radius, A = a === 0 ? 1 : 1 / a, l = new Br();
        return l.set(A, 0, 0, -A * t.x, 0, A, 0, -A * t.y, 0, 0, A, -A * t.z, 0, 0, 0, 1), this.applyMatrix(l), this;
      }, computeFaceNormals: function() {
        for (var t = new xe(), a = new xe(), A = 0, l = this.faces.length; A < l; A++) {
          var h = this.faces[A], f = this.vertices[h.a], p = this.vertices[h.b], E = this.vertices[h.c];
          t.subVectors(E, p), a.subVectors(f, p), t.cross(a), t.normalize(), h.normal.copy(t);
        }
      }, computeVertexNormals: function(t) {
        var a, A, l, h, f, p;
        for (t === void 0 && (t = !0), p = new Array(this.vertices.length), a = 0, A = this.vertices.length; a < A; a++)
          p[a] = new xe();
        if (t) {
          var E, I, S, G = new xe(), P = new xe();
          for (l = 0, h = this.faces.length; l < h; l++)
            f = this.faces[l], E = this.vertices[f.a], I = this.vertices[f.b], S = this.vertices[f.c], G.subVectors(S, I), P.subVectors(E, I), G.cross(P), p[f.a].add(G), p[f.b].add(G), p[f.c].add(G);
        } else
          for (this.computeFaceNormals(), l = 0, h = this.faces.length; l < h; l++)
            p[(f = this.faces[l]).a].add(f.normal), p[f.b].add(f.normal), p[f.c].add(f.normal);
        for (a = 0, A = this.vertices.length; a < A; a++)
          p[a].normalize();
        for (l = 0, h = this.faces.length; l < h; l++) {
          var N = (f = this.faces[l]).vertexNormals;
          N.length === 3 ? (N[0].copy(p[f.a]), N[1].copy(p[f.b]), N[2].copy(p[f.c])) : (N[0] = p[f.a].clone(), N[1] = p[f.b].clone(), N[2] = p[f.c].clone());
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      }, computeFlatVertexNormals: function() {
        var t, a, A;
        for (this.computeFaceNormals(), t = 0, a = this.faces.length; t < a; t++) {
          var l = (A = this.faces[t]).vertexNormals;
          l.length === 3 ? (l[0].copy(A.normal), l[1].copy(A.normal), l[2].copy(A.normal)) : (l[0] = A.normal.clone(), l[1] = A.normal.clone(), l[2] = A.normal.clone());
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      }, computeMorphNormals: function() {
        var t, a, A, l, h;
        for (A = 0, l = this.faces.length; A < l; A++)
          for ((h = this.faces[A]).__originalFaceNormal ? h.__originalFaceNormal.copy(h.normal) : h.__originalFaceNormal = h.normal.clone(), h.__originalVertexNormals || (h.__originalVertexNormals = []), t = 0, a = h.vertexNormals.length; t < a; t++)
            h.__originalVertexNormals[t] ? h.__originalVertexNormals[t].copy(h.vertexNormals[t]) : h.__originalVertexNormals[t] = h.vertexNormals[t].clone();
        var f = new Cr();
        for (f.faces = this.faces, t = 0, a = this.morphTargets.length; t < a; t++) {
          if (!this.morphNormals[t]) {
            this.morphNormals[t] = {}, this.morphNormals[t].faceNormals = [], this.morphNormals[t].vertexNormals = [];
            var p = this.morphNormals[t].faceNormals, E = this.morphNormals[t].vertexNormals;
            for (A = 0, l = this.faces.length; A < l; A++)
              I = new xe(), S = { a: new xe(), b: new xe(), c: new xe() }, p.push(I), E.push(S);
          }
          var I, S, G = this.morphNormals[t];
          for (f.vertices = this.morphTargets[t].vertices, f.computeFaceNormals(), f.computeVertexNormals(), A = 0, l = this.faces.length; A < l; A++)
            h = this.faces[A], I = G.faceNormals[A], S = G.vertexNormals[A], I.copy(h.normal), S.a.copy(h.vertexNormals[0]), S.b.copy(h.vertexNormals[1]), S.c.copy(h.vertexNormals[2]);
        }
        for (A = 0, l = this.faces.length; A < l; A++)
          (h = this.faces[A]).normal = h.__originalFaceNormal, h.vertexNormals = h.__originalVertexNormals;
      }, computeBoundingBox: function() {
        this.boundingBox === null && (this.boundingBox = new Vi()), this.boundingBox.setFromPoints(this.vertices);
      }, computeBoundingSphere: function() {
        this.boundingSphere === null && (this.boundingSphere = new Bi()), this.boundingSphere.setFromPoints(this.vertices);
      }, merge: function(t, a, A) {
        if (t && t.isGeometry) {
          var l, h = this.vertices.length, f = this.vertices, p = t.vertices, E = this.faces, I = t.faces, S = this.faceVertexUvs[0], G = t.faceVertexUvs[0], P = this.colors, N = t.colors;
          A === void 0 && (A = 0), a !== void 0 && (l = new Kn().getNormalMatrix(a));
          for (var j = 0, ee = p.length; j < ee; j++) {
            var oe = p[j].clone();
            a !== void 0 && oe.applyMatrix4(a), f.push(oe);
          }
          for (j = 0, ee = N.length; j < ee; j++)
            P.push(N[j].clone());
          for (j = 0, ee = I.length; j < ee; j++) {
            var Ae, pe, we, he = I[j], Fe = he.vertexNormals, He = he.vertexColors;
            (Ae = new Li(he.a + h, he.b + h, he.c + h)).normal.copy(he.normal), l !== void 0 && Ae.normal.applyMatrix3(l).normalize();
            for (var me = 0, Te = Fe.length; me < Te; me++)
              pe = Fe[me].clone(), l !== void 0 && pe.applyMatrix3(l).normalize(), Ae.vertexNormals.push(pe);
            for (Ae.color.copy(he.color), me = 0, Te = He.length; me < Te; me++)
              we = He[me], Ae.vertexColors.push(we.clone());
            Ae.materialIndex = he.materialIndex + A, E.push(Ae);
          }
          for (j = 0, ee = G.length; j < ee; j++) {
            var Le = G[j], De = [];
            if (Le !== void 0) {
              for (me = 0, Te = Le.length; me < Te; me++)
                De.push(Le[me].clone());
              S.push(De);
            }
          }
        } else
          console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t);
      }, mergeMesh: function(t) {
        t && t.isMesh ? (t.matrixAutoUpdate && t.updateMatrix(), this.merge(t.geometry, t.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t);
      }, mergeVertices: function() {
        var t, a, A, l, h, f, p, E, I = {}, S = [], G = [], P = Math.pow(10, 4);
        for (A = 0, l = this.vertices.length; A < l; A++)
          t = this.vertices[A], I[a = Math.round(t.x * P) + "_" + Math.round(t.y * P) + "_" + Math.round(t.z * P)] === void 0 ? (I[a] = A, S.push(this.vertices[A]), G[A] = S.length - 1) : G[A] = G[I[a]];
        var N = [];
        for (A = 0, l = this.faces.length; A < l; A++) {
          (h = this.faces[A]).a = G[h.a], h.b = G[h.b], h.c = G[h.c], f = [h.a, h.b, h.c];
          for (var j = 0; j < 3; j++)
            if (f[j] === f[(j + 1) % 3]) {
              N.push(A);
              break;
            }
        }
        for (A = N.length - 1; A >= 0; A--) {
          var ee = N[A];
          for (this.faces.splice(ee, 1), p = 0, E = this.faceVertexUvs.length; p < E; p++)
            this.faceVertexUvs[p].splice(ee, 1);
        }
        var oe = this.vertices.length - S.length;
        return this.vertices = S, oe;
      }, setFromPoints: function(t) {
        this.vertices = [];
        for (var a = 0, A = t.length; a < A; a++) {
          var l = t[a];
          this.vertices.push(new xe(l.x, l.y, l.z || 0));
        }
        return this;
      }, sortFacesByMaterialIndex: function() {
        for (var t = this.faces, a = t.length, A = 0; A < a; A++)
          t[A]._id = A;
        t.sort(function(I, S) {
          return I.materialIndex - S.materialIndex;
        });
        var l, h, f = this.faceVertexUvs[0], p = this.faceVertexUvs[1];
        for (f && f.length === a && (l = []), p && p.length === a && (h = []), A = 0; A < a; A++) {
          var E = t[A]._id;
          l && l.push(f[E]), h && h.push(p[E]);
        }
        l && (this.faceVertexUvs[0] = l), h && (this.faceVertexUvs[1] = h);
      }, toJSON: function() {
        var t = { metadata: { version: 4.5, type: "Geometry", generator: "Geometry.toJSON" } };
        if (t.uuid = this.uuid, t.type = this.type, this.name !== "" && (t.name = this.name), this.parameters !== void 0) {
          var a = this.parameters;
          for (var A in a)
            a[A] !== void 0 && (t[A] = a[A]);
          return t;
        }
        for (var l = [], h = 0; h < this.vertices.length; h++) {
          var f = this.vertices[h];
          l.push(f.x, f.y, f.z);
        }
        var p = [], E = [], I = {}, S = [], G = {}, P = [], N = {};
        for (h = 0; h < this.faces.length; h++) {
          var j = this.faces[h], ee = this.faceVertexUvs[0][h] !== void 0, oe = j.normal.length() > 0, Ae = j.vertexNormals.length > 0, pe = j.color.r !== 1 || j.color.g !== 1 || j.color.b !== 1, we = j.vertexColors.length > 0, he = 0;
          if (he = Te(he = Te(he = Te(he = Te(he = Te(he = Te(he = Te(he = Te(he, 0, 0), 1, !0), 2, !1), 3, ee), 4, oe), 5, Ae), 6, pe), 7, we), p.push(he), p.push(j.a, j.b, j.c), p.push(j.materialIndex), ee) {
            var Fe = this.faceVertexUvs[0][h];
            p.push(at(Fe[0]), at(Fe[1]), at(Fe[2]));
          }
          if (oe && p.push(Le(j.normal)), Ae) {
            var He = j.vertexNormals;
            p.push(Le(He[0]), Le(He[1]), Le(He[2]));
          }
          if (pe && p.push(De(j.color)), we) {
            var me = j.vertexColors;
            p.push(De(me[0]), De(me[1]), De(me[2]));
          }
        }
        function Te(Ye, At, gt) {
          return gt ? Ye | 1 << At : Ye & ~(1 << At);
        }
        function Le(Ye) {
          var At = Ye.x.toString() + Ye.y.toString() + Ye.z.toString();
          return I[At] !== void 0 || (I[At] = E.length / 3, E.push(Ye.x, Ye.y, Ye.z)), I[At];
        }
        function De(Ye) {
          var At = Ye.r.toString() + Ye.g.toString() + Ye.b.toString();
          return G[At] !== void 0 || (G[At] = S.length, S.push(Ye.getHex())), G[At];
        }
        function at(Ye) {
          var At = Ye.x.toString() + Ye.y.toString();
          return N[At] !== void 0 || (N[At] = P.length / 2, P.push(Ye.x, Ye.y)), N[At];
        }
        return t.data = {}, t.data.vertices = l, t.data.normals = E, S.length > 0 && (t.data.colors = S), P.length > 0 && (t.data.uvs = [P]), t.data.faces = p, t;
      }, clone: function() {
        return new Cr().copy(this);
      }, copy: function(t) {
        var a, A, l, h, f, p;
        this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = t.name;
        var E = t.vertices;
        for (a = 0, A = E.length; a < A; a++)
          this.vertices.push(E[a].clone());
        var I = t.colors;
        for (a = 0, A = I.length; a < A; a++)
          this.colors.push(I[a].clone());
        var S = t.faces;
        for (a = 0, A = S.length; a < A; a++)
          this.faces.push(S[a].clone());
        for (a = 0, A = t.faceVertexUvs.length; a < A; a++) {
          var G = t.faceVertexUvs[a];
          for (this.faceVertexUvs[a] === void 0 && (this.faceVertexUvs[a] = []), l = 0, h = G.length; l < h; l++) {
            var P = G[l], N = [];
            for (f = 0, p = P.length; f < p; f++) {
              var j = P[f];
              N.push(j.clone());
            }
            this.faceVertexUvs[a].push(N);
          }
        }
        var ee = t.morphTargets;
        for (a = 0, A = ee.length; a < A; a++) {
          var oe = {};
          if (oe.name = ee[a].name, ee[a].vertices !== void 0)
            for (oe.vertices = [], l = 0, h = ee[a].vertices.length; l < h; l++)
              oe.vertices.push(ee[a].vertices[l].clone());
          if (ee[a].normals !== void 0)
            for (oe.normals = [], l = 0, h = ee[a].normals.length; l < h; l++)
              oe.normals.push(ee[a].normals[l].clone());
          this.morphTargets.push(oe);
        }
        var Ae = t.morphNormals;
        for (a = 0, A = Ae.length; a < A; a++) {
          var pe = {};
          if (Ae[a].vertexNormals !== void 0)
            for (pe.vertexNormals = [], l = 0, h = Ae[a].vertexNormals.length; l < h; l++) {
              var we = Ae[a].vertexNormals[l], he = {};
              he.a = we.a.clone(), he.b = we.b.clone(), he.c = we.c.clone(), pe.vertexNormals.push(he);
            }
          if (Ae[a].faceNormals !== void 0)
            for (pe.faceNormals = [], l = 0, h = Ae[a].faceNormals.length; l < h; l++)
              pe.faceNormals.push(Ae[a].faceNormals[l].clone());
          this.morphNormals.push(pe);
        }
        var Fe = t.skinWeights;
        for (a = 0, A = Fe.length; a < A; a++)
          this.skinWeights.push(Fe[a].clone());
        var He = t.skinIndices;
        for (a = 0, A = He.length; a < A; a++)
          this.skinIndices.push(He[a].clone());
        var me = t.lineDistances;
        for (a = 0, A = me.length; a < A; a++)
          this.lineDistances.push(me[a]);
        var Te = t.boundingBox;
        Te !== null && (this.boundingBox = Te.clone());
        var Le = t.boundingSphere;
        return Le !== null && (this.boundingSphere = Le.clone()), this.elementsNeedUpdate = t.elementsNeedUpdate, this.verticesNeedUpdate = t.verticesNeedUpdate, this.uvsNeedUpdate = t.uvsNeedUpdate, this.normalsNeedUpdate = t.normalsNeedUpdate, this.colorsNeedUpdate = t.colorsNeedUpdate, this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate, this.groupsNeedUpdate = t.groupsNeedUpdate, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Object.defineProperty(Or.prototype, "needsUpdate", { set: function(t) {
        t === !0 && this.version++;
      } }), Object.assign(Or.prototype, { isBufferAttribute: !0, onUploadCallback: function() {
      }, setArray: function(t) {
        if (Array.isArray(t))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        return this.count = t !== void 0 ? t.length / this.itemSize : 0, this.array = t, this;
      }, setDynamic: function(t) {
        return this.dynamic = t, this;
      }, copy: function(t) {
        return this.name = t.name, this.array = new t.array.constructor(t.array), this.itemSize = t.itemSize, this.count = t.count, this.normalized = t.normalized, this.dynamic = t.dynamic, this;
      }, copyAt: function(t, a, A) {
        t *= this.itemSize, A *= a.itemSize;
        for (var l = 0, h = this.itemSize; l < h; l++)
          this.array[t + l] = a.array[A + l];
        return this;
      }, copyArray: function(t) {
        return this.array.set(t), this;
      }, copyColorsArray: function(t) {
        for (var a = this.array, A = 0, l = 0, h = t.length; l < h; l++) {
          var f = t[l];
          f === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", l), f = new dr()), a[A++] = f.r, a[A++] = f.g, a[A++] = f.b;
        }
        return this;
      }, copyVector2sArray: function(t) {
        for (var a = this.array, A = 0, l = 0, h = t.length; l < h; l++) {
          var f = t[l];
          f === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", l), f = new Tt()), a[A++] = f.x, a[A++] = f.y;
        }
        return this;
      }, copyVector3sArray: function(t) {
        for (var a = this.array, A = 0, l = 0, h = t.length; l < h; l++) {
          var f = t[l];
          f === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", l), f = new xe()), a[A++] = f.x, a[A++] = f.y, a[A++] = f.z;
        }
        return this;
      }, copyVector4sArray: function(t) {
        for (var a = this.array, A = 0, l = 0, h = t.length; l < h; l++) {
          var f = t[l];
          f === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", l), f = new nn()), a[A++] = f.x, a[A++] = f.y, a[A++] = f.z, a[A++] = f.w;
        }
        return this;
      }, set: function(t, a) {
        return a === void 0 && (a = 0), this.array.set(t, a), this;
      }, getX: function(t) {
        return this.array[t * this.itemSize];
      }, setX: function(t, a) {
        return this.array[t * this.itemSize] = a, this;
      }, getY: function(t) {
        return this.array[t * this.itemSize + 1];
      }, setY: function(t, a) {
        return this.array[t * this.itemSize + 1] = a, this;
      }, getZ: function(t) {
        return this.array[t * this.itemSize + 2];
      }, setZ: function(t, a) {
        return this.array[t * this.itemSize + 2] = a, this;
      }, getW: function(t) {
        return this.array[t * this.itemSize + 3];
      }, setW: function(t, a) {
        return this.array[t * this.itemSize + 3] = a, this;
      }, setXY: function(t, a, A) {
        return t *= this.itemSize, this.array[t + 0] = a, this.array[t + 1] = A, this;
      }, setXYZ: function(t, a, A, l) {
        return t *= this.itemSize, this.array[t + 0] = a, this.array[t + 1] = A, this.array[t + 2] = l, this;
      }, setXYZW: function(t, a, A, l, h) {
        return t *= this.itemSize, this.array[t + 0] = a, this.array[t + 1] = A, this.array[t + 2] = l, this.array[t + 3] = h, this;
      }, onUpload: function(t) {
        return this.onUploadCallback = t, this;
      }, clone: function() {
        return new this.constructor(this.array, this.itemSize).copy(this);
      } }), To.prototype = Object.create(Or.prototype), To.prototype.constructor = To, Ro.prototype = Object.create(Or.prototype), Ro.prototype.constructor = Ro, Mo.prototype = Object.create(Or.prototype), Mo.prototype.constructor = Mo, No.prototype = Object.create(Or.prototype), No.prototype.constructor = No, ha.prototype = Object.create(Or.prototype), ha.prototype.constructor = ha, ko.prototype = Object.create(Or.prototype), ko.prototype.constructor = ko, fa.prototype = Object.create(Or.prototype), fa.prototype.constructor = fa, jt.prototype = Object.create(Or.prototype), jt.prototype.constructor = jt, Fo.prototype = Object.create(Or.prototype), Fo.prototype.constructor = Fo, Object.assign(Dc.prototype, { computeGroups: function(t) {
        for (var a, A = [], l = void 0, h = t.faces, f = 0; f < h.length; f++) {
          var p = h[f];
          p.materialIndex !== l && (l = p.materialIndex, a !== void 0 && (a.count = 3 * f - a.start, A.push(a)), a = { start: 3 * f, materialIndex: l });
        }
        a !== void 0 && (a.count = 3 * f - a.start, A.push(a)), this.groups = A;
      }, fromGeometry: function(t) {
        var a, A = t.faces, l = t.vertices, h = t.faceVertexUvs, f = h[0] && h[0].length > 0, p = h[1] && h[1].length > 0, E = t.morphTargets, I = E.length;
        if (I > 0) {
          a = [];
          for (var S = 0; S < I; S++)
            a[S] = [];
          this.morphTargets.position = a;
        }
        var G, P = t.morphNormals, N = P.length;
        if (N > 0) {
          for (G = [], S = 0; S < N; S++)
            G[S] = [];
          this.morphTargets.normal = G;
        }
        var j = t.skinIndices, ee = t.skinWeights, oe = j.length === l.length, Ae = ee.length === l.length;
        for (l.length > 0 && A.length === 0 && console.error("THREE.DirectGeometry: Faceless geometries are not supported."), S = 0; S < A.length; S++) {
          var pe = A[S];
          this.vertices.push(l[pe.a], l[pe.b], l[pe.c]);
          var we = pe.vertexNormals;
          if (we.length === 3)
            this.normals.push(we[0], we[1], we[2]);
          else {
            var he = pe.normal;
            this.normals.push(he, he, he);
          }
          var Fe, He = pe.vertexColors;
          if (He.length === 3)
            this.colors.push(He[0], He[1], He[2]);
          else {
            var me = pe.color;
            this.colors.push(me, me, me);
          }
          f === !0 && ((Fe = h[0][S]) !== void 0 ? this.uvs.push(Fe[0], Fe[1], Fe[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", S), this.uvs.push(new Tt(), new Tt(), new Tt()))), p === !0 && ((Fe = h[1][S]) !== void 0 ? this.uvs2.push(Fe[0], Fe[1], Fe[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", S), this.uvs2.push(new Tt(), new Tt(), new Tt())));
          for (var Te = 0; Te < I; Te++) {
            var Le = E[Te].vertices;
            a[Te].push(Le[pe.a], Le[pe.b], Le[pe.c]);
          }
          for (Te = 0; Te < N; Te++) {
            var De = P[Te].vertexNormals[S];
            G[Te].push(De.a, De.b, De.c);
          }
          oe && this.skinIndices.push(j[pe.a], j[pe.b], j[pe.c]), Ae && this.skinWeights.push(ee[pe.a], ee[pe.b], ee[pe.c]);
        }
        return this.computeGroups(t), this.verticesNeedUpdate = t.verticesNeedUpdate, this.normalsNeedUpdate = t.normalsNeedUpdate, this.colorsNeedUpdate = t.colorsNeedUpdate, this.uvsNeedUpdate = t.uvsNeedUpdate, this.groupsNeedUpdate = t.groupsNeedUpdate, this;
      } });
      var WA = 1;
      function rr() {
        Object.defineProperty(this, "id", { value: WA += 2 }), this.uuid = Rr.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = { start: 0, count: 1 / 0 }, this.userData = {};
      }
      function ja(t, a, A, l, h, f) {
        Cr.call(this), this.type = "BoxGeometry", this.parameters = { width: t, height: a, depth: A, widthSegments: l, heightSegments: h, depthSegments: f }, this.fromBufferGeometry(new pa(t, a, A, l, h, f)), this.mergeVertices();
      }
      function pa(t, a, A, l, h, f) {
        rr.call(this), this.type = "BoxBufferGeometry", this.parameters = { width: t, height: a, depth: A, widthSegments: l, heightSegments: h, depthSegments: f };
        var p = this;
        t = t || 1, a = a || 1, A = A || 1, l = Math.floor(l) || 1, h = Math.floor(h) || 1;
        var E = [], I = [], S = [], G = [], P = 0, N = 0;
        function j(ee, oe, Ae, pe, we, he, Fe, He, me, Te, Le) {
          var De, at, Ye = he / me, At = Fe / Te, gt = he / 2, xt = Fe / 2, Bt = He / 2, qt = me + 1, Ot = Te + 1, yt = 0, Mt = 0, pt = new xe();
          for (at = 0; at < Ot; at++) {
            var er = at * At - xt;
            for (De = 0; De < qt; De++) {
              var Ut = De * Ye - gt;
              pt[ee] = Ut * pe, pt[oe] = er * we, pt[Ae] = Bt, I.push(pt.x, pt.y, pt.z), pt[ee] = 0, pt[oe] = 0, pt[Ae] = He > 0 ? 1 : -1, S.push(pt.x, pt.y, pt.z), G.push(De / me), G.push(1 - at / Te), yt += 1;
            }
          }
          for (at = 0; at < Te; at++)
            for (De = 0; De < me; De++) {
              var fr = P + De + qt * at, Ir = P + De + qt * (at + 1), An = P + (De + 1) + qt * (at + 1), Qn = P + (De + 1) + qt * at;
              E.push(fr, Ir, Qn), E.push(Ir, An, Qn), Mt += 6;
            }
          p.addGroup(N, Mt, Le), N += Mt, P += yt;
        }
        j("z", "y", "x", -1, -1, A, a, t, f = Math.floor(f) || 1, h, 0), j("z", "y", "x", 1, -1, A, a, -t, f, h, 1), j("x", "z", "y", 1, 1, t, A, a, l, f, 2), j("x", "z", "y", 1, -1, t, A, -a, l, f, 3), j("x", "y", "z", 1, -1, t, a, A, l, h, 4), j("x", "y", "z", -1, -1, t, a, -A, l, h, 5), this.setIndex(E), this.addAttribute("position", new jt(I, 3)), this.addAttribute("normal", new jt(S, 3)), this.addAttribute("uv", new jt(G, 2));
      }
      function Go(t, a, A, l) {
        Cr.call(this), this.type = "PlaneGeometry", this.parameters = { width: t, height: a, widthSegments: A, heightSegments: l }, this.fromBufferGeometry(new ga(t, a, A, l)), this.mergeVertices();
      }
      function ga(t, a, A, l) {
        rr.call(this), this.type = "PlaneBufferGeometry", this.parameters = { width: t, height: a, widthSegments: A, heightSegments: l };
        var h, f, p = (t = t || 1) / 2, E = (a = a || 1) / 2, I = Math.floor(A) || 1, S = Math.floor(l) || 1, G = I + 1, P = S + 1, N = t / I, j = a / S, ee = [], oe = [], Ae = [], pe = [];
        for (f = 0; f < P; f++) {
          var we = f * j - E;
          for (h = 0; h < G; h++) {
            var he = h * N - p;
            oe.push(he, -we, 0), Ae.push(0, 0, 1), pe.push(h / I), pe.push(1 - f / S);
          }
        }
        for (f = 0; f < S; f++)
          for (h = 0; h < I; h++) {
            var Fe = h + G * f, He = h + G * (f + 1), me = h + 1 + G * (f + 1), Te = h + 1 + G * f;
            ee.push(Fe, He, Te), ee.push(He, me, Te);
          }
        this.setIndex(ee), this.addAttribute("position", new jt(oe, 3)), this.addAttribute("normal", new jt(Ae, 3)), this.addAttribute("uv", new jt(pe, 2));
      }
      rr.prototype = Object.assign(Object.create(d.prototype), { constructor: rr, isBufferGeometry: !0, getIndex: function() {
        return this.index;
      }, setIndex: function(t) {
        Array.isArray(t) ? this.index = new ($c(t) > 65535 ? fa : ha)(t, 1) : this.index = t;
      }, addAttribute: function(t, a) {
        return a && a.isBufferAttribute || a && a.isInterleavedBufferAttribute ? t === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(a), this) : (this.attributes[t] = a, this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.addAttribute(t, new Or(arguments[1], arguments[2])));
      }, getAttribute: function(t) {
        return this.attributes[t];
      }, removeAttribute: function(t) {
        return delete this.attributes[t], this;
      }, addGroup: function(t, a, A) {
        this.groups.push({ start: t, count: a, materialIndex: A !== void 0 ? A : 0 });
      }, clearGroups: function() {
        this.groups = [];
      }, setDrawRange: function(t, a) {
        this.drawRange.start = t, this.drawRange.count = a;
      }, applyMatrix: function(t) {
        var a = this.attributes.position;
        a !== void 0 && (t.applyToBufferAttribute(a), a.needsUpdate = !0);
        var A = this.attributes.normal;
        return A !== void 0 && (new Kn().getNormalMatrix(t).applyToBufferAttribute(A), A.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
      }, rotateX: function() {
        var t = new Br();
        return function(a) {
          return t.makeRotationX(a), this.applyMatrix(t), this;
        };
      }(), rotateY: function() {
        var t = new Br();
        return function(a) {
          return t.makeRotationY(a), this.applyMatrix(t), this;
        };
      }(), rotateZ: function() {
        var t = new Br();
        return function(a) {
          return t.makeRotationZ(a), this.applyMatrix(t), this;
        };
      }(), translate: function() {
        var t = new Br();
        return function(a, A, l) {
          return t.makeTranslation(a, A, l), this.applyMatrix(t), this;
        };
      }(), scale: function() {
        var t = new Br();
        return function(a, A, l) {
          return t.makeScale(a, A, l), this.applyMatrix(t), this;
        };
      }(), lookAt: function() {
        var t = new zt();
        return function(a) {
          t.lookAt(a), t.updateMatrix(), this.applyMatrix(t.matrix);
        };
      }(), center: function() {
        var t = new xe();
        return function() {
          return this.computeBoundingBox(), this.boundingBox.getCenter(t).negate(), this.translate(t.x, t.y, t.z), this;
        };
      }(), setFromObject: function(t) {
        var a = t.geometry;
        if (t.isPoints || t.isLine) {
          var A = new jt(3 * a.vertices.length, 3), l = new jt(3 * a.colors.length, 3);
          if (this.addAttribute("position", A.copyVector3sArray(a.vertices)), this.addAttribute("color", l.copyColorsArray(a.colors)), a.lineDistances && a.lineDistances.length === a.vertices.length) {
            var h = new jt(a.lineDistances.length, 1);
            this.addAttribute("lineDistance", h.copyArray(a.lineDistances));
          }
          a.boundingSphere !== null && (this.boundingSphere = a.boundingSphere.clone()), a.boundingBox !== null && (this.boundingBox = a.boundingBox.clone());
        } else
          t.isMesh && a && a.isGeometry && this.fromGeometry(a);
        return this;
      }, setFromPoints: function(t) {
        for (var a = [], A = 0, l = t.length; A < l; A++) {
          var h = t[A];
          a.push(h.x, h.y, h.z || 0);
        }
        return this.addAttribute("position", new jt(a, 3)), this;
      }, updateFromObject: function(t) {
        var a, A = t.geometry;
        if (t.isMesh) {
          var l = A.__directGeometry;
          if (A.elementsNeedUpdate === !0 && (l = void 0, A.elementsNeedUpdate = !1), l === void 0)
            return this.fromGeometry(A);
          l.verticesNeedUpdate = A.verticesNeedUpdate, l.normalsNeedUpdate = A.normalsNeedUpdate, l.colorsNeedUpdate = A.colorsNeedUpdate, l.uvsNeedUpdate = A.uvsNeedUpdate, l.groupsNeedUpdate = A.groupsNeedUpdate, A.verticesNeedUpdate = !1, A.normalsNeedUpdate = !1, A.colorsNeedUpdate = !1, A.uvsNeedUpdate = !1, A.groupsNeedUpdate = !1, A = l;
        }
        return A.verticesNeedUpdate === !0 && ((a = this.attributes.position) !== void 0 && (a.copyVector3sArray(A.vertices), a.needsUpdate = !0), A.verticesNeedUpdate = !1), A.normalsNeedUpdate === !0 && ((a = this.attributes.normal) !== void 0 && (a.copyVector3sArray(A.normals), a.needsUpdate = !0), A.normalsNeedUpdate = !1), A.colorsNeedUpdate === !0 && ((a = this.attributes.color) !== void 0 && (a.copyColorsArray(A.colors), a.needsUpdate = !0), A.colorsNeedUpdate = !1), A.uvsNeedUpdate && ((a = this.attributes.uv) !== void 0 && (a.copyVector2sArray(A.uvs), a.needsUpdate = !0), A.uvsNeedUpdate = !1), A.lineDistancesNeedUpdate && ((a = this.attributes.lineDistance) !== void 0 && (a.copyArray(A.lineDistances), a.needsUpdate = !0), A.lineDistancesNeedUpdate = !1), A.groupsNeedUpdate && (A.computeGroups(t.geometry), this.groups = A.groups, A.groupsNeedUpdate = !1), this;
      }, fromGeometry: function(t) {
        return t.__directGeometry = new Dc().fromGeometry(t), this.fromDirectGeometry(t.__directGeometry);
      }, fromDirectGeometry: function(t) {
        var a = new Float32Array(3 * t.vertices.length);
        if (this.addAttribute("position", new Or(a, 3).copyVector3sArray(t.vertices)), t.normals.length > 0) {
          var A = new Float32Array(3 * t.normals.length);
          this.addAttribute("normal", new Or(A, 3).copyVector3sArray(t.normals));
        }
        if (t.colors.length > 0) {
          var l = new Float32Array(3 * t.colors.length);
          this.addAttribute("color", new Or(l, 3).copyColorsArray(t.colors));
        }
        if (t.uvs.length > 0) {
          var h = new Float32Array(2 * t.uvs.length);
          this.addAttribute("uv", new Or(h, 2).copyVector2sArray(t.uvs));
        }
        if (t.uvs2.length > 0) {
          var f = new Float32Array(2 * t.uvs2.length);
          this.addAttribute("uv2", new Or(f, 2).copyVector2sArray(t.uvs2));
        }
        for (var p in this.groups = t.groups, t.morphTargets) {
          for (var E = [], I = t.morphTargets[p], S = 0, G = I.length; S < G; S++) {
            var P = I[S], N = new jt(3 * P.length, 3);
            E.push(N.copyVector3sArray(P));
          }
          this.morphAttributes[p] = E;
        }
        if (t.skinIndices.length > 0) {
          var j = new jt(4 * t.skinIndices.length, 4);
          this.addAttribute("skinIndex", j.copyVector4sArray(t.skinIndices));
        }
        if (t.skinWeights.length > 0) {
          var ee = new jt(4 * t.skinWeights.length, 4);
          this.addAttribute("skinWeight", ee.copyVector4sArray(t.skinWeights));
        }
        return t.boundingSphere !== null && (this.boundingSphere = t.boundingSphere.clone()), t.boundingBox !== null && (this.boundingBox = t.boundingBox.clone()), this;
      }, computeBoundingBox: function() {
        this.boundingBox === null && (this.boundingBox = new Vi());
        var t = this.attributes.position;
        t !== void 0 ? this.boundingBox.setFromBufferAttribute(t) : this.boundingBox.makeEmpty(), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
      }, computeBoundingSphere: function() {
        var t = new Vi(), a = new xe();
        return function() {
          this.boundingSphere === null && (this.boundingSphere = new Bi());
          var A = this.attributes.position;
          if (A) {
            var l = this.boundingSphere.center;
            t.setFromBufferAttribute(A), t.getCenter(l);
            for (var h = 0, f = 0, p = A.count; f < p; f++)
              a.x = A.getX(f), a.y = A.getY(f), a.z = A.getZ(f), h = Math.max(h, l.distanceToSquared(a));
            this.boundingSphere.radius = Math.sqrt(h), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
          }
        };
      }(), computeFaceNormals: function() {
      }, computeVertexNormals: function() {
        var t = this.index, a = this.attributes, A = this.groups;
        if (a.position) {
          var l = a.position.array;
          if (a.normal === void 0)
            this.addAttribute("normal", new Or(new Float32Array(l.length), 3));
          else
            for (var h = a.normal.array, f = 0, p = h.length; f < p; f++)
              h[f] = 0;
          var E, I, S, G = a.normal.array, P = new xe(), N = new xe(), j = new xe(), ee = new xe(), oe = new xe();
          if (t) {
            var Ae = t.array;
            A.length === 0 && this.addGroup(0, Ae.length);
            for (var pe = 0, we = A.length; pe < we; ++pe) {
              var he = A[pe], Fe = he.start;
              for (f = Fe, p = Fe + he.count; f < p; f += 3)
                E = 3 * Ae[f + 0], I = 3 * Ae[f + 1], S = 3 * Ae[f + 2], P.fromArray(l, E), N.fromArray(l, I), j.fromArray(l, S), ee.subVectors(j, N), oe.subVectors(P, N), ee.cross(oe), G[E] += ee.x, G[E + 1] += ee.y, G[E + 2] += ee.z, G[I] += ee.x, G[I + 1] += ee.y, G[I + 2] += ee.z, G[S] += ee.x, G[S + 1] += ee.y, G[S + 2] += ee.z;
            }
          } else
            for (f = 0, p = l.length; f < p; f += 9)
              P.fromArray(l, f), N.fromArray(l, f + 3), j.fromArray(l, f + 6), ee.subVectors(j, N), oe.subVectors(P, N), ee.cross(oe), G[f] = ee.x, G[f + 1] = ee.y, G[f + 2] = ee.z, G[f + 3] = ee.x, G[f + 4] = ee.y, G[f + 5] = ee.z, G[f + 6] = ee.x, G[f + 7] = ee.y, G[f + 8] = ee.z;
          this.normalizeNormals(), a.normal.needsUpdate = !0;
        }
      }, merge: function(t, a) {
        if (t && t.isBufferGeometry) {
          a === void 0 && (a = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
          var A = this.attributes;
          for (var l in A)
            if (t.attributes[l] !== void 0)
              for (var h = A[l].array, f = t.attributes[l], p = f.array, E = 0, I = f.itemSize * a; E < p.length; E++, I++)
                h[I] = p[E];
          return this;
        }
        console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t);
      }, normalizeNormals: function() {
        var t = new xe();
        return function() {
          for (var a = this.attributes.normal, A = 0, l = a.count; A < l; A++)
            t.x = a.getX(A), t.y = a.getY(A), t.z = a.getZ(A), t.normalize(), a.setXYZ(A, t.x, t.y, t.z);
        };
      }(), toNonIndexed: function() {
        if (this.index === null)
          return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
        var t = new rr(), a = this.index.array, A = this.attributes;
        for (var l in A) {
          for (var h = A[l], f = h.array, p = h.itemSize, E = new f.constructor(a.length * p), I = 0, S = 0, G = 0, P = a.length; G < P; G++) {
            I = a[G] * p;
            for (var N = 0; N < p; N++)
              E[S++] = f[I++];
          }
          t.addAttribute(l, new Or(E, p));
        }
        var j = this.groups;
        for (G = 0, P = j.length; G < P; G++) {
          var ee = j[G];
          t.addGroup(ee.start, ee.count, ee.materialIndex);
        }
        return t;
      }, toJSON: function() {
        var t = { metadata: { version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON" } };
        if (t.uuid = this.uuid, t.type = this.type, this.name !== "" && (t.name = this.name), Object.keys(this.userData).length > 0 && (t.userData = this.userData), this.parameters !== void 0) {
          var a = this.parameters;
          for (var A in a)
            a[A] !== void 0 && (t[A] = a[A]);
          return t;
        }
        t.data = { attributes: {} };
        var l = this.index;
        if (l !== null) {
          var h = Array.prototype.slice.call(l.array);
          t.data.index = { type: l.array.constructor.name, array: h };
        }
        var f = this.attributes;
        for (var A in f) {
          var p = f[A];
          h = Array.prototype.slice.call(p.array), t.data.attributes[A] = { itemSize: p.itemSize, type: p.array.constructor.name, array: h, normalized: p.normalized };
        }
        var E = this.groups;
        E.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(E)));
        var I = this.boundingSphere;
        return I !== null && (t.data.boundingSphere = { center: I.center.toArray(), radius: I.radius }), t;
      }, clone: function() {
        return new rr().copy(this);
      }, copy: function(t) {
        var a, A, l;
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = t.name;
        var h = t.index;
        h !== null && this.setIndex(h.clone());
        var f = t.attributes;
        for (a in f) {
          var p = f[a];
          this.addAttribute(a, p.clone());
        }
        var E = t.morphAttributes;
        for (a in E) {
          var I = [], S = E[a];
          for (A = 0, l = S.length; A < l; A++)
            I.push(S[A].clone());
          this.morphAttributes[a] = I;
        }
        var G = t.groups;
        for (A = 0, l = G.length; A < l; A++) {
          var P = G[A];
          this.addGroup(P.start, P.count, P.materialIndex);
        }
        var N = t.boundingBox;
        N !== null && (this.boundingBox = N.clone());
        var j = t.boundingSphere;
        return j !== null && (this.boundingSphere = j.clone()), this.drawRange.start = t.drawRange.start, this.drawRange.count = t.drawRange.count, this.userData = t.userData, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), ja.prototype = Object.create(Cr.prototype), ja.prototype.constructor = ja, pa.prototype = Object.create(rr.prototype), pa.prototype.constructor = pa, Go.prototype = Object.create(Cr.prototype), Go.prototype.constructor = Go, ga.prototype = Object.create(rr.prototype), ga.prototype.constructor = ga;
      var KA = 0;
      function Nr() {
        Object.defineProperty(this, "id", { value: KA++ }), this.uuid = Rr.generateUUID(), this.name = "", this.type = "Material", this.fog = !0, this.lights = !0, this.blending = se, this.side = V, this.flatShading = !1, this.vertexColors = re, this.opacity = 1, this.transparent = !1, this.blendSrc = X, this.blendDst = ut, this.blendEquation = Me, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = fe, this.depthTest = !0, this.depthWrite = !0, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaTest = 0, this.premultipliedAlpha = !1, this.overdraw = 0, this.visible = !0, this.userData = {}, this.needsUpdate = !0;
      }
      function Ai(t) {
        Nr.call(this), this.type = "MeshBasicMaterial", this.color = new dr(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = U, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.lights = !1, this.setValues(t);
      }
      function pi(t) {
        Nr.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, this.fragmentShader = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = { derivatives: !1, fragDepth: !1, drawBuffers: !1, shaderTextureLOD: !1 }, this.defaultAttributeValues = { color: [1, 1, 1], uv: [0, 0], uv2: [0, 0] }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, t !== void 0 && (t.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(t));
      }
      function ma(t, a) {
        this.origin = t !== void 0 ? t : new xe(), this.direction = a !== void 0 ? a : new xe();
      }
      function ui(t, a, A) {
        this.a = t !== void 0 ? t : new xe(), this.b = a !== void 0 ? a : new xe(), this.c = A !== void 0 ? A : new xe();
      }
      function ri(t, a) {
        zt.call(this), this.type = "Mesh", this.geometry = t !== void 0 ? t : new rr(), this.material = a !== void 0 ? a : new Ai({ color: 16777215 * Math.random() }), this.drawMode = _r, this.updateMorphTargets();
      }
      function ZA(t, a) {
        return Math.abs(a[1]) - Math.abs(t[1]);
      }
      function zi(t, a, A, l, h, f, p, E, I, S) {
        t = t !== void 0 ? t : [], a = a !== void 0 ? a : k, un.call(this, t, a, A, l, h, f, p, E, I, S), this.flipY = !1;
      }
      Nr.prototype = Object.assign(Object.create(d.prototype), { constructor: Nr, isMaterial: !0, onBeforeCompile: function() {
      }, setValues: function(t) {
        if (t !== void 0)
          for (var a in t) {
            var A = t[a];
            if (A !== void 0)
              if (a !== "shading") {
                var l = this[a];
                l !== void 0 ? l && l.isColor ? l.set(A) : l && l.isVector3 && A && A.isVector3 ? l.copy(A) : this[a] = a === "overdraw" ? Number(A) : A : console.warn("THREE." + this.type + ": '" + a + "' is not a property of this material.");
              } else
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = A === q;
            else
              console.warn("THREE.Material: '" + a + "' parameter is undefined.");
          }
      }, toJSON: function(t) {
        var a = t === void 0 || typeof t == "string";
        a && (t = { textures: {}, images: {} });
        var A = { metadata: { version: 4.5, type: "Material", generator: "Material.toJSON" } };
        function l(p) {
          var E = [];
          for (var I in p) {
            var S = p[I];
            delete S.metadata, E.push(S);
          }
          return E;
        }
        if (A.uuid = this.uuid, A.type = this.type, this.name !== "" && (A.name = this.name), this.color && this.color.isColor && (A.color = this.color.getHex()), this.roughness !== void 0 && (A.roughness = this.roughness), this.metalness !== void 0 && (A.metalness = this.metalness), this.emissive && this.emissive.isColor && (A.emissive = this.emissive.getHex()), this.emissiveIntensity !== 1 && (A.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (A.specular = this.specular.getHex()), this.shininess !== void 0 && (A.shininess = this.shininess), this.clearCoat !== void 0 && (A.clearCoat = this.clearCoat), this.clearCoatRoughness !== void 0 && (A.clearCoatRoughness = this.clearCoatRoughness), this.map && this.map.isTexture && (A.map = this.map.toJSON(t).uuid), this.alphaMap && this.alphaMap.isTexture && (A.alphaMap = this.alphaMap.toJSON(t).uuid), this.lightMap && this.lightMap.isTexture && (A.lightMap = this.lightMap.toJSON(t).uuid), this.aoMap && this.aoMap.isTexture && (A.aoMap = this.aoMap.toJSON(t).uuid, A.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (A.bumpMap = this.bumpMap.toJSON(t).uuid, A.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (A.normalMap = this.normalMap.toJSON(t).uuid, A.normalMapType = this.normalMapType, A.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (A.displacementMap = this.displacementMap.toJSON(t).uuid, A.displacementScale = this.displacementScale, A.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (A.roughnessMap = this.roughnessMap.toJSON(t).uuid), this.metalnessMap && this.metalnessMap.isTexture && (A.metalnessMap = this.metalnessMap.toJSON(t).uuid), this.emissiveMap && this.emissiveMap.isTexture && (A.emissiveMap = this.emissiveMap.toJSON(t).uuid), this.specularMap && this.specularMap.isTexture && (A.specularMap = this.specularMap.toJSON(t).uuid), this.envMap && this.envMap.isTexture && (A.envMap = this.envMap.toJSON(t).uuid, A.reflectivity = this.reflectivity), this.gradientMap && this.gradientMap.isTexture && (A.gradientMap = this.gradientMap.toJSON(t).uuid), this.size !== void 0 && (A.size = this.size), this.sizeAttenuation !== void 0 && (A.sizeAttenuation = this.sizeAttenuation), this.blending !== se && (A.blending = this.blending), this.flatShading === !0 && (A.flatShading = this.flatShading), this.side !== V && (A.side = this.side), this.vertexColors !== re && (A.vertexColors = this.vertexColors), this.opacity < 1 && (A.opacity = this.opacity), this.transparent === !0 && (A.transparent = this.transparent), A.depthFunc = this.depthFunc, A.depthTest = this.depthTest, A.depthWrite = this.depthWrite, this.rotation !== 0 && (A.rotation = this.rotation), this.linewidth !== 1 && (A.linewidth = this.linewidth), this.dashSize !== void 0 && (A.dashSize = this.dashSize), this.gapSize !== void 0 && (A.gapSize = this.gapSize), this.scale !== void 0 && (A.scale = this.scale), this.dithering === !0 && (A.dithering = !0), this.alphaTest > 0 && (A.alphaTest = this.alphaTest), this.premultipliedAlpha === !0 && (A.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (A.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (A.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (A.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (A.wireframeLinejoin = this.wireframeLinejoin), this.morphTargets === !0 && (A.morphTargets = !0), this.skinning === !0 && (A.skinning = !0), this.visible === !1 && (A.visible = !1), JSON.stringify(this.userData) !== "{}" && (A.userData = this.userData), a) {
          var h = l(t.textures), f = l(t.images);
          h.length > 0 && (A.textures = h), f.length > 0 && (A.images = f);
        }
        return A;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        this.name = t.name, this.fog = t.fog, this.lights = t.lights, this.blending = t.blending, this.side = t.side, this.flatShading = t.flatShading, this.vertexColors = t.vertexColors, this.opacity = t.opacity, this.transparent = t.transparent, this.blendSrc = t.blendSrc, this.blendDst = t.blendDst, this.blendEquation = t.blendEquation, this.blendSrcAlpha = t.blendSrcAlpha, this.blendDstAlpha = t.blendDstAlpha, this.blendEquationAlpha = t.blendEquationAlpha, this.depthFunc = t.depthFunc, this.depthTest = t.depthTest, this.depthWrite = t.depthWrite, this.colorWrite = t.colorWrite, this.precision = t.precision, this.polygonOffset = t.polygonOffset, this.polygonOffsetFactor = t.polygonOffsetFactor, this.polygonOffsetUnits = t.polygonOffsetUnits, this.dithering = t.dithering, this.alphaTest = t.alphaTest, this.premultipliedAlpha = t.premultipliedAlpha, this.overdraw = t.overdraw, this.visible = t.visible, this.userData = JSON.parse(JSON.stringify(t.userData)), this.clipShadows = t.clipShadows, this.clipIntersection = t.clipIntersection;
        var a = t.clippingPlanes, A = null;
        if (a !== null) {
          var l = a.length;
          A = new Array(l);
          for (var h = 0; h !== l; ++h)
            A[h] = a[h].clone();
        }
        return this.clippingPlanes = A, this.shadowSide = t.shadowSide, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Ai.prototype = Object.create(Nr.prototype), Ai.prototype.constructor = Ai, Ai.prototype.isMeshBasicMaterial = !0, Ai.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this;
      }, pi.prototype = Object.create(Nr.prototype), pi.prototype.constructor = pi, pi.prototype.isShaderMaterial = !0, pi.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.fragmentShader = t.fragmentShader, this.vertexShader = t.vertexShader, this.uniforms = Zn.clone(t.uniforms), this.defines = Object.assign({}, t.defines), this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.lights = t.lights, this.clipping = t.clipping, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this.extensions = t.extensions, this;
      }, pi.prototype.toJSON = function(t) {
        var a = Nr.prototype.toJSON.call(this, t);
        return a.uniforms = this.uniforms, a.vertexShader = this.vertexShader, a.fragmentShader = this.fragmentShader, a;
      }, Object.assign(ma.prototype, { set: function(t, a) {
        return this.origin.copy(t), this.direction.copy(a), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.origin.copy(t.origin), this.direction.copy(t.direction), this;
      }, at: function(t, a) {
        return a === void 0 && (console.warn("THREE.Ray: .at() target is now required"), a = new xe()), a.copy(this.direction).multiplyScalar(t).add(this.origin);
      }, lookAt: function(t) {
        return this.direction.copy(t).sub(this.origin).normalize(), this;
      }, recast: function() {
        var t = new xe();
        return function(a) {
          return this.origin.copy(this.at(a, t)), this;
        };
      }(), closestPointToPoint: function(t, a) {
        a === void 0 && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), a = new xe()), a.subVectors(t, this.origin);
        var A = a.dot(this.direction);
        return A < 0 ? a.copy(this.origin) : a.copy(this.direction).multiplyScalar(A).add(this.origin);
      }, distanceToPoint: function(t) {
        return Math.sqrt(this.distanceSqToPoint(t));
      }, distanceSqToPoint: function() {
        var t = new xe();
        return function(a) {
          var A = t.subVectors(a, this.origin).dot(this.direction);
          return A < 0 ? this.origin.distanceToSquared(a) : (t.copy(this.direction).multiplyScalar(A).add(this.origin), t.distanceToSquared(a));
        };
      }(), distanceSqToSegment: function() {
        var t = new xe(), a = new xe(), A = new xe();
        return function(l, h, f, p) {
          t.copy(l).add(h).multiplyScalar(0.5), a.copy(h).sub(l).normalize(), A.copy(this.origin).sub(t);
          var E, I, S, G, P = 0.5 * l.distanceTo(h), N = -this.direction.dot(a), j = A.dot(this.direction), ee = -A.dot(a), oe = A.lengthSq(), Ae = Math.abs(1 - N * N);
          if (Ae > 0)
            if (I = N * j - ee, G = P * Ae, (E = N * ee - j) >= 0)
              if (I >= -G)
                if (I <= G) {
                  var pe = 1 / Ae;
                  S = (E *= pe) * (E + N * (I *= pe) + 2 * j) + I * (N * E + I + 2 * ee) + oe;
                } else
                  I = P, S = -(E = Math.max(0, -(N * I + j))) * E + I * (I + 2 * ee) + oe;
              else
                I = -P, S = -(E = Math.max(0, -(N * I + j))) * E + I * (I + 2 * ee) + oe;
            else
              I <= -G ? S = -(E = Math.max(0, -(-N * P + j))) * E + (I = E > 0 ? -P : Math.min(Math.max(-P, -ee), P)) * (I + 2 * ee) + oe : I <= G ? (E = 0, S = (I = Math.min(Math.max(-P, -ee), P)) * (I + 2 * ee) + oe) : S = -(E = Math.max(0, -(N * P + j))) * E + (I = E > 0 ? P : Math.min(Math.max(-P, -ee), P)) * (I + 2 * ee) + oe;
          else
            I = N > 0 ? -P : P, S = -(E = Math.max(0, -(N * I + j))) * E + I * (I + 2 * ee) + oe;
          return f && f.copy(this.direction).multiplyScalar(E).add(this.origin), p && p.copy(a).multiplyScalar(I).add(t), S;
        };
      }(), intersectSphere: function() {
        var t = new xe();
        return function(a, A) {
          t.subVectors(a.center, this.origin);
          var l = t.dot(this.direction), h = t.dot(t) - l * l, f = a.radius * a.radius;
          if (h > f)
            return null;
          var p = Math.sqrt(f - h), E = l - p, I = l + p;
          return E < 0 && I < 0 ? null : E < 0 ? this.at(I, A) : this.at(E, A);
        };
      }(), intersectsSphere: function(t) {
        return this.distanceToPoint(t.center) <= t.radius;
      }, distanceToPlane: function(t) {
        var a = t.normal.dot(this.direction);
        if (a === 0)
          return t.distanceToPoint(this.origin) === 0 ? 0 : null;
        var A = -(this.origin.dot(t.normal) + t.constant) / a;
        return A >= 0 ? A : null;
      }, intersectPlane: function(t, a) {
        var A = this.distanceToPlane(t);
        return A === null ? null : this.at(A, a);
      }, intersectsPlane: function(t) {
        var a = t.distanceToPoint(this.origin);
        return a === 0 || t.normal.dot(this.direction) * a < 0;
      }, intersectBox: function(t, a) {
        var A, l, h, f, p, E, I = 1 / this.direction.x, S = 1 / this.direction.y, G = 1 / this.direction.z, P = this.origin;
        return I >= 0 ? (A = (t.min.x - P.x) * I, l = (t.max.x - P.x) * I) : (A = (t.max.x - P.x) * I, l = (t.min.x - P.x) * I), S >= 0 ? (h = (t.min.y - P.y) * S, f = (t.max.y - P.y) * S) : (h = (t.max.y - P.y) * S, f = (t.min.y - P.y) * S), A > f || h > l ? null : ((h > A || A != A) && (A = h), (f < l || l != l) && (l = f), G >= 0 ? (p = (t.min.z - P.z) * G, E = (t.max.z - P.z) * G) : (p = (t.max.z - P.z) * G, E = (t.min.z - P.z) * G), A > E || p > l ? null : ((p > A || A != A) && (A = p), (E < l || l != l) && (l = E), l < 0 ? null : this.at(A >= 0 ? A : l, a)));
      }, intersectsBox: function() {
        var t = new xe();
        return function(a) {
          return this.intersectBox(a, t) !== null;
        };
      }(), intersectTriangle: function() {
        var t = new xe(), a = new xe(), A = new xe(), l = new xe();
        return function(h, f, p, E, I) {
          a.subVectors(f, h), A.subVectors(p, h), l.crossVectors(a, A);
          var S, G = this.direction.dot(l);
          if (G > 0) {
            if (E)
              return null;
            S = 1;
          } else {
            if (!(G < 0))
              return null;
            S = -1, G = -G;
          }
          t.subVectors(this.origin, h);
          var P = S * this.direction.dot(A.crossVectors(t, A));
          if (P < 0)
            return null;
          var N = S * this.direction.dot(a.cross(t));
          if (N < 0 || P + N > G)
            return null;
          var j = -S * t.dot(l);
          return j < 0 ? null : this.at(j / G, I);
        };
      }(), applyMatrix4: function(t) {
        return this.origin.applyMatrix4(t), this.direction.transformDirection(t), this;
      }, equals: function(t) {
        return t.origin.equals(this.origin) && t.direction.equals(this.direction);
      } }), Object.assign(ui, { getNormal: function() {
        var t = new xe();
        return function(a, A, l, h) {
          h === void 0 && (console.warn("THREE.Triangle: .getNormal() target is now required"), h = new xe()), h.subVectors(l, A), t.subVectors(a, A), h.cross(t);
          var f = h.lengthSq();
          return f > 0 ? h.multiplyScalar(1 / Math.sqrt(f)) : h.set(0, 0, 0);
        };
      }(), getBarycoord: function() {
        var t = new xe(), a = new xe(), A = new xe();
        return function(l, h, f, p, E) {
          t.subVectors(p, h), a.subVectors(f, h), A.subVectors(l, h);
          var I = t.dot(t), S = t.dot(a), G = t.dot(A), P = a.dot(a), N = a.dot(A), j = I * P - S * S;
          if (E === void 0 && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), E = new xe()), j === 0)
            return E.set(-2, -1, -1);
          var ee = 1 / j, oe = (P * G - S * N) * ee, Ae = (I * N - S * G) * ee;
          return E.set(1 - oe - Ae, Ae, oe);
        };
      }(), containsPoint: function() {
        var t = new xe();
        return function(a, A, l, h) {
          return ui.getBarycoord(a, A, l, h, t), t.x >= 0 && t.y >= 0 && t.x + t.y <= 1;
        };
      }() }), Object.assign(ui.prototype, { set: function(t, a, A) {
        return this.a.copy(t), this.b.copy(a), this.c.copy(A), this;
      }, setFromPointsAndIndices: function(t, a, A, l) {
        return this.a.copy(t[a]), this.b.copy(t[A]), this.c.copy(t[l]), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this;
      }, getArea: function() {
        var t = new xe(), a = new xe();
        return function() {
          return t.subVectors(this.c, this.b), a.subVectors(this.a, this.b), 0.5 * t.cross(a).length();
        };
      }(), getMidpoint: function(t) {
        return t === void 0 && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), t = new xe()), t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
      }, getNormal: function(t) {
        return ui.getNormal(this.a, this.b, this.c, t);
      }, getPlane: function(t) {
        return t === void 0 && (console.warn("THREE.Triangle: .getPlane() target is now required"), t = new xe()), t.setFromCoplanarPoints(this.a, this.b, this.c);
      }, getBarycoord: function(t, a) {
        return ui.getBarycoord(t, this.a, this.b, this.c, a);
      }, containsPoint: function(t) {
        return ui.containsPoint(t, this.a, this.b, this.c);
      }, intersectsBox: function(t) {
        return t.intersectsTriangle(this);
      }, closestPointToPoint: function() {
        var t = new xe(), a = new xe(), A = new xe(), l = new xe(), h = new xe(), f = new xe();
        return function(p, E) {
          E === void 0 && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), E = new xe());
          var I, S, G = this.a, P = this.b, N = this.c;
          t.subVectors(P, G), a.subVectors(N, G), l.subVectors(p, G);
          var j = t.dot(l), ee = a.dot(l);
          if (j <= 0 && ee <= 0)
            return E.copy(G);
          h.subVectors(p, P);
          var oe = t.dot(h), Ae = a.dot(h);
          if (oe >= 0 && Ae <= oe)
            return E.copy(P);
          var pe = j * Ae - oe * ee;
          if (pe <= 0 && j >= 0 && oe <= 0)
            return I = j / (j - oe), E.copy(G).addScaledVector(t, I);
          f.subVectors(p, N);
          var we = t.dot(f), he = a.dot(f);
          if (he >= 0 && we <= he)
            return E.copy(N);
          var Fe = we * ee - j * he;
          if (Fe <= 0 && ee >= 0 && he <= 0)
            return S = ee / (ee - he), E.copy(G).addScaledVector(a, S);
          var He = oe * he - we * Ae;
          if (He <= 0 && Ae - oe >= 0 && we - he >= 0)
            return A.subVectors(N, P), S = (Ae - oe) / (Ae - oe + (we - he)), E.copy(P).addScaledVector(A, S);
          var me = 1 / (He + Fe + pe);
          return I = Fe * me, S = pe * me, E.copy(G).addScaledVector(t, I).addScaledVector(a, S);
        };
      }(), equals: function(t) {
        return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c);
      } }), ri.prototype = Object.assign(Object.create(zt.prototype), { constructor: ri, isMesh: !0, setDrawMode: function(t) {
        this.drawMode = t;
      }, copy: function(t) {
        return zt.prototype.copy.call(this, t), this.drawMode = t.drawMode, t.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = t.morphTargetInfluences.slice()), t.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, t.morphTargetDictionary)), this;
      }, updateMorphTargets: function() {
        var t, a, A, l = this.geometry;
        if (l.isBufferGeometry) {
          var h = l.morphAttributes, f = Object.keys(h);
          if (f.length > 0) {
            var p = h[f[0]];
            if (p !== void 0)
              for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, t = 0, a = p.length; t < a; t++)
                A = p[t].name || String(t), this.morphTargetInfluences.push(0), this.morphTargetDictionary[A] = t;
          }
        } else {
          var E = l.morphTargets;
          if (E !== void 0 && E.length > 0)
            for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, t = 0, a = E.length; t < a; t++)
              A = E[t].name || String(t), this.morphTargetInfluences.push(0), this.morphTargetDictionary[A] = t;
        }
      }, raycast: function() {
        var t = new Br(), a = new ma(), A = new Bi(), l = new xe(), h = new xe(), f = new xe(), p = new xe(), E = new xe(), I = new xe(), S = new Tt(), G = new Tt(), P = new Tt(), N = new xe(), j = new xe(), ee = new xe();
        function oe(we, he, Fe, He, me, Te, Le) {
          return ui.getBarycoord(we, he, Fe, He, N), me.multiplyScalar(N.x), Te.multiplyScalar(N.y), Le.multiplyScalar(N.z), me.add(Te).add(Le), me.clone();
        }
        function Ae(we, he, Fe, He, me, Te, Le, De) {
          if ((he.side === O ? He.intersectTriangle(Le, Te, me, !0, De) : He.intersectTriangle(me, Te, Le, he.side !== H, De)) === null)
            return null;
          ee.copy(De), ee.applyMatrix4(we.matrixWorld);
          var at = Fe.ray.origin.distanceTo(ee);
          return at < Fe.near || at > Fe.far ? null : { distance: at, point: ee.clone(), object: we };
        }
        function pe(we, he, Fe, He, me, Te, Le, De, at) {
          l.fromBufferAttribute(me, Le), h.fromBufferAttribute(me, De), f.fromBufferAttribute(me, at);
          var Ye = Ae(we, he, Fe, He, l, h, f, j);
          if (Ye) {
            Te && (S.fromBufferAttribute(Te, Le), G.fromBufferAttribute(Te, De), P.fromBufferAttribute(Te, at), Ye.uv = oe(j, l, h, f, S, G, P));
            var At = new Li(Le, De, at);
            ui.getNormal(l, h, f, At.normal), Ye.face = At;
          }
          return Ye;
        }
        return function(we, he) {
          var Fe, He = this.geometry, me = this.material, Te = this.matrixWorld;
          if (me !== void 0 && (He.boundingSphere === null && He.computeBoundingSphere(), A.copy(He.boundingSphere), A.applyMatrix4(Te), we.ray.intersectsSphere(A) !== !1 && (t.getInverse(Te), a.copy(we.ray).applyMatrix4(t), He.boundingBox === null || a.intersectsBox(He.boundingBox) !== !1))) {
            if (He.isBufferGeometry) {
              var Le, De, at, Ye, At, gt, xt, Bt, qt, Ot = He.index, yt = He.attributes.position, Mt = He.attributes.uv, pt = He.groups, er = He.drawRange;
              if (Ot !== null)
                if (Array.isArray(me))
                  for (Ye = 0, gt = pt.length; Ye < gt; Ye++)
                    for (qt = me[(Bt = pt[Ye]).materialIndex], At = Math.max(Bt.start, er.start), xt = Math.min(Bt.start + Bt.count, er.start + er.count); At < xt; At += 3)
                      Le = Ot.getX(At), De = Ot.getX(At + 1), at = Ot.getX(At + 2), (Fe = pe(this, qt, we, a, yt, Mt, Le, De, at)) && (Fe.faceIndex = Math.floor(At / 3), he.push(Fe));
                else
                  for (Ye = Math.max(0, er.start), gt = Math.min(Ot.count, er.start + er.count); Ye < gt; Ye += 3)
                    Le = Ot.getX(Ye), De = Ot.getX(Ye + 1), at = Ot.getX(Ye + 2), (Fe = pe(this, me, we, a, yt, Mt, Le, De, at)) && (Fe.faceIndex = Math.floor(Ye / 3), he.push(Fe));
              else if (yt !== void 0)
                if (Array.isArray(me))
                  for (Ye = 0, gt = pt.length; Ye < gt; Ye++)
                    for (qt = me[(Bt = pt[Ye]).materialIndex], At = Math.max(Bt.start, er.start), xt = Math.min(Bt.start + Bt.count, er.start + er.count); At < xt; At += 3)
                      (Fe = pe(this, qt, we, a, yt, Mt, Le = At, De = At + 1, at = At + 2)) && (Fe.faceIndex = Math.floor(At / 3), he.push(Fe));
                else
                  for (Ye = Math.max(0, er.start), gt = Math.min(yt.count, er.start + er.count); Ye < gt; Ye += 3)
                    (Fe = pe(this, me, we, a, yt, Mt, Le = Ye, De = Ye + 1, at = Ye + 2)) && (Fe.faceIndex = Math.floor(Ye / 3), he.push(Fe));
            } else if (He.isGeometry) {
              var Ut, fr, Ir, An, Qn = Array.isArray(me), an = He.vertices, Ht = He.faces, Dr = He.faceVertexUvs[0];
              Dr.length > 0 && (An = Dr);
              for (var yn = 0, Ln = Ht.length; yn < Ln; yn++) {
                var bn = Ht[yn], ei = Qn ? me[bn.materialIndex] : me;
                if (ei !== void 0) {
                  if (Ut = an[bn.a], fr = an[bn.b], Ir = an[bn.c], ei.morphTargets === !0) {
                    var Tn = He.morphTargets, Ti = this.morphTargetInfluences;
                    l.set(0, 0, 0), h.set(0, 0, 0), f.set(0, 0, 0);
                    for (var Ri = 0, Pn = Tn.length; Ri < Pn; Ri++) {
                      var Rn = Ti[Ri];
                      if (Rn !== 0) {
                        var oa = Tn[Ri].vertices;
                        l.addScaledVector(p.subVectors(oa[bn.a], Ut), Rn), h.addScaledVector(E.subVectors(oa[bn.b], fr), Rn), f.addScaledVector(I.subVectors(oa[bn.c], Ir), Rn);
                      }
                    }
                    l.add(Ut), h.add(fr), f.add(Ir), Ut = l, fr = h, Ir = f;
                  }
                  if (Fe = Ae(this, ei, we, a, Ut, fr, Ir, j)) {
                    if (An && An[yn]) {
                      var zn = An[yn];
                      S.copy(zn[0]), G.copy(zn[1]), P.copy(zn[2]), Fe.uv = oe(j, Ut, fr, Ir, S, G, P);
                    }
                    Fe.face = bn, Fe.faceIndex = yn, he.push(Fe);
                  }
                }
              }
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), zi.prototype = Object.create(un.prototype), zi.prototype.constructor = zi, zi.prototype.isCubeTexture = !0, Object.defineProperty(zi.prototype, "images", { get: function() {
        return this.image;
      }, set: function(t) {
        this.image = t;
      } });
      var jc = new un(), Yc = new zi();
      function Vc() {
        this.seq = [], this.map = {};
      }
      var Lc = [], zc = [], Jc = new Float32Array(16), Wc = new Float32Array(9), Kc = new Float32Array(4);
      function Ya(t, a, A) {
        var l = t[0];
        if (l <= 0 || l > 0)
          return t;
        var h = a * A, f = Lc[h];
        if (f === void 0 && (f = new Float32Array(h), Lc[h] = f), a !== 0) {
          l.toArray(f, 0);
          for (var p = 1, E = 0; p !== a; ++p)
            E += A, t[p].toArray(f, E);
        }
        return f;
      }
      function pn(t, a) {
        if (t.length !== a.length)
          return !1;
        for (var A = 0, l = t.length; A < l; A++)
          if (t[A] !== a[A])
            return !1;
        return !0;
      }
      function Gn(t, a) {
        for (var A = 0, l = a.length; A < l; A++)
          t[A] = a[A];
      }
      function Zc(t, a) {
        var A = zc[a];
        A === void 0 && (A = new Int32Array(a), zc[a] = A);
        for (var l = 0; l !== a; ++l)
          A[l] = t.allocTextureUnit();
        return A;
      }
      function XA(t, a) {
        var A = this.cache;
        A[0] !== a && (t.uniform1f(this.addr, a), A[0] = a);
      }
      function eu(t, a) {
        var A = this.cache;
        A[0] !== a && (t.uniform1i(this.addr, a), A[0] = a);
      }
      function tu(t, a) {
        var A = this.cache;
        if (a.x !== void 0)
          A[0] === a.x && A[1] === a.y || (t.uniform2f(this.addr, a.x, a.y), A[0] = a.x, A[1] = a.y);
        else {
          if (pn(A, a))
            return;
          t.uniform2fv(this.addr, a), Gn(A, a);
        }
      }
      function ru(t, a) {
        var A = this.cache;
        if (a.x !== void 0)
          A[0] === a.x && A[1] === a.y && A[2] === a.z || (t.uniform3f(this.addr, a.x, a.y, a.z), A[0] = a.x, A[1] = a.y, A[2] = a.z);
        else if (a.r !== void 0)
          A[0] === a.r && A[1] === a.g && A[2] === a.b || (t.uniform3f(this.addr, a.r, a.g, a.b), A[0] = a.r, A[1] = a.g, A[2] = a.b);
        else {
          if (pn(A, a))
            return;
          t.uniform3fv(this.addr, a), Gn(A, a);
        }
      }
      function nu(t, a) {
        var A = this.cache;
        if (a.x !== void 0)
          A[0] === a.x && A[1] === a.y && A[2] === a.z && A[3] === a.w || (t.uniform4f(this.addr, a.x, a.y, a.z, a.w), A[0] = a.x, A[1] = a.y, A[2] = a.z, A[3] = a.w);
        else {
          if (pn(A, a))
            return;
          t.uniform4fv(this.addr, a), Gn(A, a);
        }
      }
      function iu(t, a) {
        var A = this.cache, l = a.elements;
        if (l === void 0) {
          if (pn(A, a))
            return;
          t.uniformMatrix2fv(this.addr, !1, a), Gn(A, a);
        } else {
          if (pn(A, l))
            return;
          Kc.set(l), t.uniformMatrix2fv(this.addr, !1, Kc), Gn(A, l);
        }
      }
      function au(t, a) {
        var A = this.cache, l = a.elements;
        if (l === void 0) {
          if (pn(A, a))
            return;
          t.uniformMatrix3fv(this.addr, !1, a), Gn(A, a);
        } else {
          if (pn(A, l))
            return;
          Wc.set(l), t.uniformMatrix3fv(this.addr, !1, Wc), Gn(A, l);
        }
      }
      function ou(t, a) {
        var A = this.cache, l = a.elements;
        if (l === void 0) {
          if (pn(A, a))
            return;
          t.uniformMatrix4fv(this.addr, !1, a), Gn(A, a);
        } else {
          if (pn(A, l))
            return;
          Jc.set(l), t.uniformMatrix4fv(this.addr, !1, Jc), Gn(A, l);
        }
      }
      function su(t, a, A) {
        var l = this.cache, h = A.allocTextureUnit();
        l[0] !== h && (t.uniform1i(this.addr, h), l[0] = h), A.setTexture2D(a || jc, h);
      }
      function cu(t, a, A) {
        var l = this.cache, h = A.allocTextureUnit();
        l[0] !== h && (t.uniform1i(this.addr, h), l[0] = h), A.setTextureCube(a || Yc, h);
      }
      function Xc(t, a) {
        var A = this.cache;
        pn(A, a) || (t.uniform2iv(this.addr, a), Gn(A, a));
      }
      function eA(t, a) {
        var A = this.cache;
        pn(A, a) || (t.uniform3iv(this.addr, a), Gn(A, a));
      }
      function tA(t, a) {
        var A = this.cache;
        pn(A, a) || (t.uniform4iv(this.addr, a), Gn(A, a));
      }
      function Au(t, a) {
        var A = this.cache;
        pn(A, a) || (t.uniform1fv(this.addr, a), Gn(A, a));
      }
      function uu(t, a) {
        var A = this.cache;
        pn(A, a) || (t.uniform1iv(this.addr, a), Gn(A, a));
      }
      function lu(t, a) {
        var A = this.cache, l = Ya(a, this.size, 2);
        pn(A, l) || (t.uniform2fv(this.addr, l), this.updateCache(l));
      }
      function du(t, a) {
        var A = this.cache, l = Ya(a, this.size, 3);
        pn(A, l) || (t.uniform3fv(this.addr, l), this.updateCache(l));
      }
      function hu(t, a) {
        var A = this.cache, l = Ya(a, this.size, 4);
        pn(A, l) || (t.uniform4fv(this.addr, l), this.updateCache(l));
      }
      function fu(t, a) {
        var A = this.cache, l = Ya(a, this.size, 4);
        pn(A, l) || (t.uniformMatrix2fv(this.addr, !1, l), this.updateCache(l));
      }
      function pu(t, a) {
        var A = this.cache, l = Ya(a, this.size, 9);
        pn(A, l) || (t.uniformMatrix3fv(this.addr, !1, l), this.updateCache(l));
      }
      function gu(t, a) {
        var A = this.cache, l = Ya(a, this.size, 16);
        pn(A, l) || (t.uniformMatrix4fv(this.addr, !1, l), this.updateCache(l));
      }
      function mu(t, a, A) {
        var l = this.cache, h = a.length, f = Zc(A, h);
        pn(l, f) === !1 && (t.uniform1iv(this.addr, f), Gn(l, f));
        for (var p = 0; p !== h; ++p)
          A.setTexture2D(a[p] || jc, f[p]);
      }
      function Eu(t, a, A) {
        var l = this.cache, h = a.length, f = Zc(A, h);
        pn(l, f) === !1 && (t.uniform1iv(this.addr, f), Gn(l, f));
        for (var p = 0; p !== h; ++p)
          A.setTextureCube(a[p] || Yc, f[p]);
      }
      function yu(t, a, A) {
        this.id = t, this.addr = A, this.cache = [], this.setValue = function(l) {
          switch (l) {
            case 5126:
              return XA;
            case 35664:
              return tu;
            case 35665:
              return ru;
            case 35666:
              return nu;
            case 35674:
              return iu;
            case 35675:
              return au;
            case 35676:
              return ou;
            case 35678:
            case 36198:
              return su;
            case 35680:
              return cu;
            case 5124:
            case 35670:
              return eu;
            case 35667:
            case 35671:
              return Xc;
            case 35668:
            case 35672:
              return eA;
            case 35669:
            case 35673:
              return tA;
          }
        }(a.type);
      }
      function rA(t, a, A) {
        this.id = t, this.addr = A, this.cache = [], this.size = a.size, this.setValue = function(l) {
          switch (l) {
            case 5126:
              return Au;
            case 35664:
              return lu;
            case 35665:
              return du;
            case 35666:
              return hu;
            case 35674:
              return fu;
            case 35675:
              return pu;
            case 35676:
              return gu;
            case 35678:
              return mu;
            case 35680:
              return Eu;
            case 5124:
            case 35670:
              return uu;
            case 35667:
            case 35671:
              return Xc;
            case 35668:
            case 35672:
              return eA;
            case 35669:
            case 35673:
              return tA;
          }
        }(a.type);
      }
      function nA(t) {
        this.id = t, Vc.call(this);
      }
      rA.prototype.updateCache = function(t) {
        var a = this.cache;
        t instanceof Float32Array && a.length !== t.length && (this.cache = new Float32Array(t.length)), Gn(a, t);
      }, nA.prototype.setValue = function(t, a, A) {
        for (var l = this.seq, h = 0, f = l.length; h !== f; ++h) {
          var p = l[h];
          p.setValue(t, a[p.id], A);
        }
      };
      var sc = /([\w\d_]+)(\])?(\[|\.)?/g;
      function iA(t, a) {
        t.seq.push(a), t.map[a.id] = a;
      }
      function Bu(t, a, A) {
        var l = t.name, h = l.length;
        for (sc.lastIndex = 0; ; ) {
          var f = sc.exec(l), p = sc.lastIndex, E = f[1], I = f[2] === "]", S = f[3];
          if (I && (E |= 0), S === void 0 || S === "[" && p + 2 === h) {
            iA(A, S === void 0 ? new yu(E, t, a) : new rA(E, t, a));
            break;
          }
          var G = A.map[E];
          G === void 0 && iA(A, G = new nA(E)), A = G;
        }
      }
      function ta(t, a, A) {
        Vc.call(this), this.renderer = A;
        for (var l = t.getProgramParameter(a, t.ACTIVE_UNIFORMS), h = 0; h < l; ++h) {
          var f = t.getActiveUniform(a, h);
          Bu(f, t.getUniformLocation(a, f.name), this);
        }
      }
      function aA(t, a, A) {
        var l = t.createShader(a);
        return t.shaderSource(l, A), t.compileShader(l), t.getShaderParameter(l, t.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."), t.getShaderInfoLog(l) !== "" && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", a === t.VERTEX_SHADER ? "vertex" : "fragment", t.getShaderInfoLog(l), function(h) {
          for (var f = h.split(`
`), p = 0; p < f.length; p++)
            f[p] = p + 1 + ": " + f[p];
          return f.join(`
`);
        }(A)), l;
      }
      ta.prototype.setValue = function(t, a, A) {
        var l = this.map[a];
        l !== void 0 && l.setValue(t, A, this.renderer);
      }, ta.prototype.setOptional = function(t, a, A) {
        var l = a[A];
        l !== void 0 && this.setValue(t, A, l);
      }, ta.upload = function(t, a, A, l) {
        for (var h = 0, f = a.length; h !== f; ++h) {
          var p = a[h], E = A[p.id];
          E.needsUpdate !== !1 && p.setValue(t, E.value, l);
        }
      }, ta.seqWithValue = function(t, a) {
        for (var A = [], l = 0, h = t.length; l !== h; ++l) {
          var f = t[l];
          f.id in a && A.push(f);
        }
        return A;
      };
      var vu = 0;
      function oA(t) {
        switch (t) {
          case Wr:
            return ["Linear", "( value )"];
          case _n:
            return ["sRGB", "( value )"];
          case $i:
            return ["RGBE", "( value )"];
          case wn:
            return ["RGBM", "( value, 7.0 )"];
          case ca:
            return ["RGBM", "( value, 16.0 )"];
          case Qo:
            return ["RGBD", "( value, 256.0 )"];
          case ci:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
          default:
            throw new Error("unsupported encoding: " + t);
        }
      }
      function cc(t, a) {
        var A = oA(a);
        return "vec4 " + t + "( vec4 value ) { return " + A[0] + "ToLinear" + A[1] + "; }";
      }
      function Oo(t) {
        return t !== "";
      }
      function sA(t, a) {
        return t.replace(/NUM_DIR_LIGHTS/g, a.numDirLights).replace(/NUM_SPOT_LIGHTS/g, a.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, a.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, a.numPointLights).replace(/NUM_HEMI_LIGHTS/g, a.numHemiLights);
      }
      function cA(t, a) {
        return t.replace(/NUM_CLIPPING_PLANES/g, a.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, a.numClippingPlanes - a.numClipIntersection);
      }
      function Ac(t) {
        return t.replace(/^[ \t]*#include +<([\w\d./]+)>/gm, function(a, A) {
          var l = Kr[A];
          if (l === void 0)
            throw new Error("Can not resolve #include <" + A + ">");
          return Ac(l);
        });
      }
      function AA(t) {
        return t.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(a, A, l, h) {
          for (var f = "", p = parseInt(A); p < parseInt(l); p++)
            f += h.replace(/\[ i \]/g, "[ " + p + " ]");
          return f;
        });
      }
      function Cu(t, a, A, l, h, f, p) {
        var E = t.context, I = l.defines, S = h.vertexShader, G = h.fragmentShader, P = "SHADOWMAP_TYPE_BASIC";
        f.shadowMapType === M ? P = "SHADOWMAP_TYPE_PCF" : f.shadowMapType === D && (P = "SHADOWMAP_TYPE_PCF_SOFT");
        var N = "ENVMAP_TYPE_CUBE", j = "ENVMAP_MODE_REFLECTION", ee = "ENVMAP_BLENDING_MULTIPLY";
        if (f.envMap) {
          switch (l.envMap.mapping) {
            case k:
            case F:
              N = "ENVMAP_TYPE_CUBE";
              break;
            case Ve:
            case It:
              N = "ENVMAP_TYPE_CUBE_UV";
              break;
            case ue:
            case Qe:
              N = "ENVMAP_TYPE_EQUIREC";
              break;
            case Oe:
              N = "ENVMAP_TYPE_SPHERE";
          }
          switch (l.envMap.mapping) {
            case F:
            case Qe:
              j = "ENVMAP_MODE_REFRACTION";
          }
          switch (l.combine) {
            case U:
              ee = "ENVMAP_BLENDING_MULTIPLY";
              break;
            case Z:
              ee = "ENVMAP_BLENDING_MIX";
              break;
            case ne:
              ee = "ENVMAP_BLENDING_ADD";
          }
        }
        var oe, Ae, pe = t.gammaFactor > 0 ? t.gammaFactor : 1, we = p.isWebGL2 ? "" : function(yt, Mt, pt) {
          return [(yt = yt || {}).derivatives || Mt.envMapCubeUV || Mt.bumpMap || Mt.normalMap && !Mt.objectSpaceNormalMap || Mt.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (yt.fragDepth || Mt.logarithmicDepthBuffer) && pt.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", yt.drawBuffers && pt.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (yt.shaderTextureLOD || Mt.envMap) && pt.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Oo).join(`
`);
        }(l.extensions, f, a), he = function(yt) {
          var Mt = [];
          for (var pt in yt) {
            var er = yt[pt];
            er !== !1 && Mt.push("#define " + pt + " " + er);
          }
          return Mt.join(`
`);
        }(I), Fe = E.createProgram();
        if (l.isRawShaderMaterial ? ((oe = [he].filter(Oo).join(`
`)).length > 0 && (oe += `
`), (Ae = [we, he].filter(Oo).join(`
`)).length > 0 && (Ae += `
`)) : (oe = ["precision " + f.precision + " float;", "precision " + f.precision + " int;", "#define SHADER_NAME " + h.name, he, f.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + pe, "#define MAX_BONES " + f.maxBones, f.useFog && f.fog ? "#define USE_FOG" : "", f.useFog && f.fogExp ? "#define FOG_EXP2" : "", f.map ? "#define USE_MAP" : "", f.envMap ? "#define USE_ENVMAP" : "", f.envMap ? "#define " + j : "", f.lightMap ? "#define USE_LIGHTMAP" : "", f.aoMap ? "#define USE_AOMAP" : "", f.emissiveMap ? "#define USE_EMISSIVEMAP" : "", f.bumpMap ? "#define USE_BUMPMAP" : "", f.normalMap ? "#define USE_NORMALMAP" : "", f.normalMap && f.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", f.displacementMap && f.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", f.specularMap ? "#define USE_SPECULARMAP" : "", f.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", f.metalnessMap ? "#define USE_METALNESSMAP" : "", f.alphaMap ? "#define USE_ALPHAMAP" : "", f.vertexColors ? "#define USE_COLOR" : "", f.flatShading ? "#define FLAT_SHADED" : "", f.skinning ? "#define USE_SKINNING" : "", f.useVertexTexture ? "#define BONE_TEXTURE" : "", f.morphTargets ? "#define USE_MORPHTARGETS" : "", f.morphNormals && f.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", f.doubleSided ? "#define DOUBLE_SIDED" : "", f.flipSided ? "#define FLIP_SIDED" : "", f.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", f.shadowMapEnabled ? "#define " + P : "", f.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", f.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", f.logarithmicDepthBuffer && (p.isWebGL2 || a.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", `
`].filter(Oo).join(`
`), Ae = [we, "precision " + f.precision + " float;", "precision " + f.precision + " int;", "#define SHADER_NAME " + h.name, he, f.alphaTest ? "#define ALPHATEST " + f.alphaTest + (f.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + pe, f.useFog && f.fog ? "#define USE_FOG" : "", f.useFog && f.fogExp ? "#define FOG_EXP2" : "", f.map ? "#define USE_MAP" : "", f.envMap ? "#define USE_ENVMAP" : "", f.envMap ? "#define " + N : "", f.envMap ? "#define " + j : "", f.envMap ? "#define " + ee : "", f.lightMap ? "#define USE_LIGHTMAP" : "", f.aoMap ? "#define USE_AOMAP" : "", f.emissiveMap ? "#define USE_EMISSIVEMAP" : "", f.bumpMap ? "#define USE_BUMPMAP" : "", f.normalMap ? "#define USE_NORMALMAP" : "", f.normalMap && f.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", f.specularMap ? "#define USE_SPECULARMAP" : "", f.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", f.metalnessMap ? "#define USE_METALNESSMAP" : "", f.alphaMap ? "#define USE_ALPHAMAP" : "", f.vertexColors ? "#define USE_COLOR" : "", f.gradientMap ? "#define USE_GRADIENTMAP" : "", f.flatShading ? "#define FLAT_SHADED" : "", f.doubleSided ? "#define DOUBLE_SIDED" : "", f.flipSided ? "#define FLIP_SIDED" : "", f.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", f.shadowMapEnabled ? "#define " + P : "", f.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", f.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", f.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", f.logarithmicDepthBuffer && (p.isWebGL2 || a.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", f.envMap && (p.isWebGL2 || a.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", f.toneMapping !== le ? "#define TONE_MAPPING" : "", f.toneMapping !== le ? Kr.tonemapping_pars_fragment : "", f.toneMapping !== le ? function(yt, Mt) {
          var pt;
          switch (Mt) {
            case Ne:
              pt = "Linear";
              break;
            case Ke:
              pt = "Reinhard";
              break;
            case Ze:
              pt = "Uncharted2";
              break;
            case et:
              pt = "OptimizedCineon";
              break;
            default:
              throw new Error("unsupported toneMapping: " + Mt);
          }
          return "vec3 " + yt + "( vec3 color ) { return " + pt + "ToneMapping( color ); }";
        }("toneMapping", f.toneMapping) : "", f.dithering ? "#define DITHERING" : "", f.outputEncoding || f.mapEncoding || f.envMapEncoding || f.emissiveMapEncoding ? Kr.encodings_pars_fragment : "", f.mapEncoding ? cc("mapTexelToLinear", f.mapEncoding) : "", f.envMapEncoding ? cc("envMapTexelToLinear", f.envMapEncoding) : "", f.emissiveMapEncoding ? cc("emissiveMapTexelToLinear", f.emissiveMapEncoding) : "", f.outputEncoding ? function(yt, Mt) {
          var pt = oA(Mt);
          return "vec4 " + yt + "( vec4 value ) { return LinearTo" + pt[0] + pt[1] + "; }";
        }("linearToOutputTexel", f.outputEncoding) : "", f.depthPacking ? "#define DEPTH_PACKING " + l.depthPacking : "", `
`].filter(Oo).join(`
`)), S = cA(S = sA(S = Ac(S), f), f), G = cA(G = sA(G = Ac(G), f), f), S = AA(S), G = AA(G), p.isWebGL2 && !l.isRawShaderMaterial) {
          var He = !1, me = /^\s*#version\s+300\s+es\s*\n/;
          l.isShaderMaterial && S.match(me) !== null && G.match(me) !== null && (He = !0, S = S.replace(me, ""), G = G.replace(me, "")), oe = [`#version 300 es
`, "#define attribute in", "#define varying out", "#define texture2D texture"].join(`
`) + `
` + oe, Ae = [`#version 300 es
`, "#define varying in", He ? "" : "out highp vec4 pc_fragColor;", He ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join(`
`) + `
` + Ae;
        }
        var Te = oe + S, Le = Ae + G, De = aA(E, E.VERTEX_SHADER, Te), at = aA(E, E.FRAGMENT_SHADER, Le);
        E.attachShader(Fe, De), E.attachShader(Fe, at), l.index0AttributeName !== void 0 ? E.bindAttribLocation(Fe, 0, l.index0AttributeName) : f.morphTargets === !0 && E.bindAttribLocation(Fe, 0, "position"), E.linkProgram(Fe);
        var Ye, At, gt = E.getProgramInfoLog(Fe).trim(), xt = E.getShaderInfoLog(De).trim(), Bt = E.getShaderInfoLog(at).trim(), qt = !0, Ot = !0;
        return E.getProgramParameter(Fe, E.LINK_STATUS) === !1 ? (qt = !1, console.error("THREE.WebGLProgram: shader error: ", E.getError(), "gl.VALIDATE_STATUS", E.getProgramParameter(Fe, E.VALIDATE_STATUS), "gl.getProgramInfoLog", gt, xt, Bt)) : gt !== "" ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", gt) : xt !== "" && Bt !== "" || (Ot = !1), Ot && (this.diagnostics = { runnable: qt, material: l, programLog: gt, vertexShader: { log: xt, prefix: oe }, fragmentShader: { log: Bt, prefix: Ae } }), E.deleteShader(De), E.deleteShader(at), this.getUniforms = function() {
          return Ye === void 0 && (Ye = new ta(E, Fe, t)), Ye;
        }, this.getAttributes = function() {
          return At === void 0 && (At = function(yt, Mt) {
            for (var pt = {}, er = yt.getProgramParameter(Mt, yt.ACTIVE_ATTRIBUTES), Ut = 0; Ut < er; Ut++) {
              var fr = yt.getActiveAttrib(Mt, Ut).name;
              pt[fr] = yt.getAttribLocation(Mt, fr);
            }
            return pt;
          }(E, Fe)), At;
        }, this.destroy = function() {
          E.deleteProgram(Fe), this.program = void 0;
        }, Object.defineProperties(this, { uniforms: { get: function() {
          return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."), this.getUniforms();
        } }, attributes: { get: function() {
          return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."), this.getAttributes();
        } } }), this.name = h.name, this.id = vu++, this.code = A, this.usedTimes = 1, this.program = Fe, this.vertexShader = De, this.fragmentShader = at, this;
      }
      function Iu(t, a, A) {
        var l = [], h = { MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "phong", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite" }, f = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
        function p(E, I) {
          var S;
          return E ? E.isTexture ? S = E.encoding : E.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), S = E.texture.encoding) : S = Wr, S === Wr && I && (S = ci), S;
        }
        this.getParameters = function(E, I, S, G, P, N, j) {
          var ee = h[E.type], oe = j.isSkinnedMesh ? function(we) {
            var he = we.skeleton.bones;
            if (A.floatVertexTextures)
              return 1024;
            var Fe = A.maxVertexUniforms, He = Math.floor((Fe - 20) / 4), me = Math.min(He, he.length);
            return me < he.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + he.length + " bones. This GPU supports " + me + "."), 0) : me;
          }(j) : 0, Ae = A.precision;
          E.precision !== null && (Ae = A.getMaxPrecision(E.precision)) !== E.precision && console.warn("THREE.WebGLProgram.getParameters:", E.precision, "not supported, using", Ae, "instead.");
          var pe = t.getRenderTarget();
          return { shaderID: ee, precision: Ae, supportsVertexTextures: A.vertexTextures, outputEncoding: p(pe ? pe.texture : null, t.gammaOutput), map: !!E.map, mapEncoding: p(E.map, t.gammaInput), envMap: !!E.envMap, envMapMode: E.envMap && E.envMap.mapping, envMapEncoding: p(E.envMap, t.gammaInput), envMapCubeUV: !!E.envMap && (E.envMap.mapping === Ve || E.envMap.mapping === It), lightMap: !!E.lightMap, aoMap: !!E.aoMap, emissiveMap: !!E.emissiveMap, emissiveMapEncoding: p(E.emissiveMap, t.gammaInput), bumpMap: !!E.bumpMap, normalMap: !!E.normalMap, objectSpaceNormalMap: E.normalMapType === Yi, displacementMap: !!E.displacementMap, roughnessMap: !!E.roughnessMap, metalnessMap: !!E.metalnessMap, specularMap: !!E.specularMap, alphaMap: !!E.alphaMap, gradientMap: !!E.gradientMap, combine: E.combine, vertexColors: E.vertexColors, fog: !!G, useFog: E.fog, fogExp: G && G.isFogExp2, flatShading: E.flatShading, sizeAttenuation: E.sizeAttenuation, logarithmicDepthBuffer: A.logarithmicDepthBuffer, skinning: E.skinning && oe > 0, maxBones: oe, useVertexTexture: A.floatVertexTextures, morphTargets: E.morphTargets, morphNormals: E.morphNormals, maxMorphTargets: t.maxMorphTargets, maxMorphNormals: t.maxMorphNormals, numDirLights: I.directional.length, numPointLights: I.point.length, numSpotLights: I.spot.length, numRectAreaLights: I.rectArea.length, numHemiLights: I.hemi.length, numClippingPlanes: P, numClipIntersection: N, dithering: E.dithering, shadowMapEnabled: t.shadowMap.enabled && j.receiveShadow && S.length > 0, shadowMapType: t.shadowMap.type, toneMapping: t.toneMapping, physicallyCorrectLights: t.physicallyCorrectLights, premultipliedAlpha: E.premultipliedAlpha, alphaTest: E.alphaTest, doubleSided: E.side === H, flipSided: E.side === O, depthPacking: E.depthPacking !== void 0 && E.depthPacking };
        }, this.getProgramCode = function(E, I) {
          var S = [];
          if (I.shaderID ? S.push(I.shaderID) : (S.push(E.fragmentShader), S.push(E.vertexShader)), E.defines !== void 0)
            for (var G in E.defines)
              S.push(G), S.push(E.defines[G]);
          for (var P = 0; P < f.length; P++)
            S.push(I[f[P]]);
          return S.push(E.onBeforeCompile.toString()), S.push(t.gammaOutput), S.join();
        }, this.acquireProgram = function(E, I, S, G) {
          for (var P, N = 0, j = l.length; N < j; N++) {
            var ee = l[N];
            if (ee.code === G) {
              ++(P = ee).usedTimes;
              break;
            }
          }
          return P === void 0 && (P = new Cu(t, a, G, E, I, S, A), l.push(P)), P;
        }, this.releaseProgram = function(E) {
          if (--E.usedTimes == 0) {
            var I = l.indexOf(E);
            l[I] = l[l.length - 1], l.pop(), E.destroy();
          }
        }, this.programs = l;
      }
      function xu(t, a) {
        return t.renderOrder !== a.renderOrder ? t.renderOrder - a.renderOrder : t.program && a.program && t.program !== a.program ? t.program.id - a.program.id : t.material.id !== a.material.id ? t.material.id - a.material.id : t.z !== a.z ? t.z - a.z : t.id - a.id;
      }
      function wu(t, a) {
        return t.renderOrder !== a.renderOrder ? t.renderOrder - a.renderOrder : t.z !== a.z ? a.z - t.z : t.id - a.id;
      }
      function bu() {
        var t = {};
        return { get: function(a, A) {
          var l = a.id + "," + A.id, h = t[l];
          return h === void 0 && (h = new function() {
            var f = [], p = 0, E = [], I = [];
            return { opaque: E, transparent: I, init: function() {
              p = 0, E.length = 0, I.length = 0;
            }, push: function(S, G, P, N, j) {
              var ee = f[p];
              ee === void 0 ? (ee = { id: S.id, object: S, geometry: G, material: P, program: P.program, renderOrder: S.renderOrder, z: N, group: j }, f[p] = ee) : (ee.id = S.id, ee.object = S, ee.geometry = G, ee.material = P, ee.program = P.program, ee.renderOrder = S.renderOrder, ee.z = N, ee.group = j), (P.transparent === !0 ? I : E).push(ee), p++;
            }, sort: function() {
              E.length > 1 && E.sort(xu), I.length > 1 && I.sort(wu);
            } };
          }(), t[l] = h), h;
        }, dispose: function() {
          t = {};
        } };
      }
      var Va, _u = 0;
      function Qu() {
        var t = new function() {
          var f = {};
          return { get: function(p) {
            if (f[p.id] !== void 0)
              return f[p.id];
            var E;
            switch (p.type) {
              case "DirectionalLight":
                E = { direction: new xe(), color: new dr(), shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Tt() };
                break;
              case "SpotLight":
                E = { position: new xe(), direction: new xe(), color: new dr(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Tt() };
                break;
              case "PointLight":
                E = { position: new xe(), color: new dr(), distance: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Tt(), shadowCameraNear: 1, shadowCameraFar: 1e3 };
                break;
              case "HemisphereLight":
                E = { direction: new xe(), skyColor: new dr(), groundColor: new dr() };
                break;
              case "RectAreaLight":
                E = { color: new dr(), position: new xe(), halfWidth: new xe(), halfHeight: new xe() };
            }
            return f[p.id] = E, E;
          } };
        }(), a = { id: _u++, hash: { stateID: -1, directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, shadowsLength: -1 }, ambient: [0, 0, 0], directional: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], point: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [] }, A = new xe(), l = new Br(), h = new Br();
        return { setup: function(f, p, E) {
          for (var I = 0, S = 0, G = 0, P = 0, N = 0, j = 0, ee = 0, oe = 0, Ae = E.matrixWorldInverse, pe = 0, we = f.length; pe < we; pe++) {
            var he = f[pe], Fe = he.color, He = he.intensity, me = he.distance, Te = he.shadow && he.shadow.map ? he.shadow.map.texture : null;
            if (he.isAmbientLight)
              I += Fe.r * He, S += Fe.g * He, G += Fe.b * He;
            else if (he.isDirectionalLight) {
              if ((De = t.get(he)).color.copy(he.color).multiplyScalar(he.intensity), De.direction.setFromMatrixPosition(he.matrixWorld), A.setFromMatrixPosition(he.target.matrixWorld), De.direction.sub(A), De.direction.transformDirection(Ae), De.shadow = he.castShadow, he.castShadow) {
                var Le = he.shadow;
                De.shadowBias = Le.bias, De.shadowRadius = Le.radius, De.shadowMapSize = Le.mapSize;
              }
              a.directionalShadowMap[P] = Te, a.directionalShadowMatrix[P] = he.shadow.matrix, a.directional[P] = De, P++;
            } else if (he.isSpotLight)
              (De = t.get(he)).position.setFromMatrixPosition(he.matrixWorld), De.position.applyMatrix4(Ae), De.color.copy(Fe).multiplyScalar(He), De.distance = me, De.direction.setFromMatrixPosition(he.matrixWorld), A.setFromMatrixPosition(he.target.matrixWorld), De.direction.sub(A), De.direction.transformDirection(Ae), De.coneCos = Math.cos(he.angle), De.penumbraCos = Math.cos(he.angle * (1 - he.penumbra)), De.decay = he.distance === 0 ? 0 : he.decay, De.shadow = he.castShadow, he.castShadow && (Le = he.shadow, De.shadowBias = Le.bias, De.shadowRadius = Le.radius, De.shadowMapSize = Le.mapSize), a.spotShadowMap[j] = Te, a.spotShadowMatrix[j] = he.shadow.matrix, a.spot[j] = De, j++;
            else if (he.isRectAreaLight)
              (De = t.get(he)).color.copy(Fe).multiplyScalar(He), De.position.setFromMatrixPosition(he.matrixWorld), De.position.applyMatrix4(Ae), h.identity(), l.copy(he.matrixWorld), l.premultiply(Ae), h.extractRotation(l), De.halfWidth.set(0.5 * he.width, 0, 0), De.halfHeight.set(0, 0.5 * he.height, 0), De.halfWidth.applyMatrix4(h), De.halfHeight.applyMatrix4(h), a.rectArea[ee] = De, ee++;
            else if (he.isPointLight)
              (De = t.get(he)).position.setFromMatrixPosition(he.matrixWorld), De.position.applyMatrix4(Ae), De.color.copy(he.color).multiplyScalar(he.intensity), De.distance = he.distance, De.decay = he.distance === 0 ? 0 : he.decay, De.shadow = he.castShadow, he.castShadow && (Le = he.shadow, De.shadowBias = Le.bias, De.shadowRadius = Le.radius, De.shadowMapSize = Le.mapSize, De.shadowCameraNear = Le.camera.near, De.shadowCameraFar = Le.camera.far), a.pointShadowMap[N] = Te, a.pointShadowMatrix[N] = he.shadow.matrix, a.point[N] = De, N++;
            else if (he.isHemisphereLight) {
              var De;
              (De = t.get(he)).direction.setFromMatrixPosition(he.matrixWorld), De.direction.transformDirection(Ae), De.direction.normalize(), De.skyColor.copy(he.color).multiplyScalar(He), De.groundColor.copy(he.groundColor).multiplyScalar(He), a.hemi[oe] = De, oe++;
            }
          }
          a.ambient[0] = I, a.ambient[1] = S, a.ambient[2] = G, a.directional.length = P, a.spot.length = j, a.rectArea.length = ee, a.point.length = N, a.hemi.length = oe, a.hash.stateID = a.id, a.hash.directionalLength = P, a.hash.pointLength = N, a.hash.spotLength = j, a.hash.rectAreaLength = ee, a.hash.hemiLength = oe, a.hash.shadowsLength = p.length;
        }, state: a };
      }
      function uA() {
        var t = new Qu(), a = [], A = [];
        return { init: function() {
          a.length = 0, A.length = 0;
        }, state: { lightsArray: a, shadowsArray: A, lights: t }, setupLights: function(l) {
          t.setup(a, A, l);
        }, pushLight: function(l) {
          a.push(l);
        }, pushShadow: function(l) {
          A.push(l);
        } };
      }
      function ra(t) {
        Nr.call(this), this.type = "MeshDepthMaterial", this.depthPacking = So, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.setValues(t);
      }
      function na(t) {
        Nr.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new xe(), this.nearDistance = 1, this.farDistance = 1e3, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.lights = !1, this.setValues(t);
      }
      function lA(t, a, A) {
        for (var l = new Rs(), h = new Br(), f = new Tt(), p = new Tt(A, A), E = new xe(), I = new xe(), S = 1, G = 2, P = 1 + (S | G), N = new Array(P), j = new Array(P), ee = {}, oe = { 0: O, 1: V, 2: H }, Ae = [new xe(1, 0, 0), new xe(-1, 0, 0), new xe(0, 0, 1), new xe(0, 0, -1), new xe(0, 1, 0), new xe(0, -1, 0)], pe = [new xe(0, 1, 0), new xe(0, 1, 0), new xe(0, 1, 0), new xe(0, 1, 0), new xe(0, 0, 1), new xe(0, 0, -1)], we = [new nn(), new nn(), new nn(), new nn(), new nn(), new nn()], he = 0; he !== P; ++he) {
          var Fe = (he & S) != 0, He = (he & G) != 0, me = new ra({ depthPacking: qa, morphTargets: Fe, skinning: He });
          N[he] = me;
          var Te = new na({ morphTargets: Fe, skinning: He });
          j[he] = Te;
        }
        var Le = this;
        function De(Ye, At, gt, xt, Bt, qt) {
          var Ot = Ye.geometry, yt = null, Mt = N, pt = Ye.customDepthMaterial;
          if (gt && (Mt = j, pt = Ye.customDistanceMaterial), pt)
            yt = pt;
          else {
            var er = !1;
            At.morphTargets && (Ot && Ot.isBufferGeometry ? er = Ot.morphAttributes && Ot.morphAttributes.position && Ot.morphAttributes.position.length > 0 : Ot && Ot.isGeometry && (er = Ot.morphTargets && Ot.morphTargets.length > 0)), Ye.isSkinnedMesh && At.skinning === !1 && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", Ye);
            var Ut = Ye.isSkinnedMesh && At.skinning, fr = 0;
            er && (fr |= S), Ut && (fr |= G), yt = Mt[fr];
          }
          if (t.localClippingEnabled && At.clipShadows === !0 && At.clippingPlanes.length !== 0) {
            var Ir = yt.uuid, An = At.uuid, Qn = ee[Ir];
            Qn === void 0 && (Qn = {}, ee[Ir] = Qn);
            var an = Qn[An];
            an === void 0 && (an = yt.clone(), Qn[An] = an), yt = an;
          }
          return yt.visible = At.visible, yt.wireframe = At.wireframe, yt.side = At.shadowSide != null ? At.shadowSide : oe[At.side], yt.clipShadows = At.clipShadows, yt.clippingPlanes = At.clippingPlanes, yt.clipIntersection = At.clipIntersection, yt.wireframeLinewidth = At.wireframeLinewidth, yt.linewidth = At.linewidth, gt && yt.isMeshDistanceMaterial && (yt.referencePosition.copy(xt), yt.nearDistance = Bt, yt.farDistance = qt), yt;
        }
        function at(Ye, At, gt, xt) {
          if (Ye.visible !== !1) {
            if (Ye.layers.test(At.layers) && (Ye.isMesh || Ye.isLine || Ye.isPoints) && Ye.castShadow && (!Ye.frustumCulled || l.intersectsObject(Ye))) {
              Ye.modelViewMatrix.multiplyMatrices(gt.matrixWorldInverse, Ye.matrixWorld);
              var Bt = a.update(Ye), qt = Ye.material;
              if (Array.isArray(qt))
                for (var Ot = Bt.groups, yt = 0, Mt = Ot.length; yt < Mt; yt++) {
                  var pt = Ot[yt], er = qt[pt.materialIndex];
                  if (er && er.visible) {
                    var Ut = De(Ye, er, xt, I, gt.near, gt.far);
                    t.renderBufferDirect(gt, null, Bt, Ut, Ye, pt);
                  }
                }
              else
                qt.visible && (Ut = De(Ye, qt, xt, I, gt.near, gt.far), t.renderBufferDirect(gt, null, Bt, Ut, Ye, null));
            }
            for (var fr = Ye.children, Ir = 0, An = fr.length; Ir < An; Ir++)
              at(fr[Ir], At, gt, xt);
          }
        }
        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = M, this.render = function(Ye, At, gt) {
          if (Le.enabled !== !1 && (Le.autoUpdate !== !1 || Le.needsUpdate !== !1) && Ye.length !== 0) {
            var xt, Bt = t.context, qt = t.state;
            qt.disable(Bt.BLEND), qt.buffers.color.setClear(1, 1, 1, 1), qt.buffers.depth.setTest(!0), qt.setScissorTest(!1);
            for (var Ot = 0, yt = Ye.length; Ot < yt; Ot++) {
              var Mt = Ye[Ot], pt = Mt.shadow, er = Mt && Mt.isPointLight;
              if (pt !== void 0) {
                var Ut = pt.camera;
                if (f.copy(pt.mapSize), f.min(p), er) {
                  var fr = f.x, Ir = f.y;
                  we[0].set(2 * fr, Ir, fr, Ir), we[1].set(0, Ir, fr, Ir), we[2].set(3 * fr, Ir, fr, Ir), we[3].set(fr, Ir, fr, Ir), we[4].set(3 * fr, 0, fr, Ir), we[5].set(fr, 0, fr, Ir), f.x *= 4, f.y *= 2;
                }
                if (pt.map === null) {
                  var An = { minFilter: Rt, magFilter: Rt, format: st };
                  pt.map = new Aa(f.x, f.y, An), pt.map.texture.name = Mt.name + ".shadowMap", Ut.updateProjectionMatrix();
                }
                pt.isSpotLightShadow && pt.update(Mt);
                var Qn = pt.map, an = pt.matrix;
                I.setFromMatrixPosition(Mt.matrixWorld), Ut.position.copy(I), er ? (xt = 6, an.makeTranslation(-I.x, -I.y, -I.z)) : (xt = 1, E.setFromMatrixPosition(Mt.target.matrixWorld), Ut.lookAt(E), Ut.updateMatrixWorld(), an.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), an.multiply(Ut.projectionMatrix), an.multiply(Ut.matrixWorldInverse)), t.setRenderTarget(Qn), t.clear();
                for (var Ht = 0; Ht < xt; Ht++) {
                  if (er) {
                    E.copy(Ut.position), E.add(Ae[Ht]), Ut.up.copy(pe[Ht]), Ut.lookAt(E), Ut.updateMatrixWorld();
                    var Dr = we[Ht];
                    qt.viewport(Dr);
                  }
                  h.multiplyMatrices(Ut.projectionMatrix, Ut.matrixWorldInverse), l.setFromMatrix(h), at(At, gt, Ut, er);
                }
              } else
                console.warn("THREE.WebGLShadowMap:", Mt, "has no shadow.");
            }
            Le.needsUpdate = !1;
          }
        };
      }
      function Su(t, a, A, l, h, f, p) {
        var E, I = {};
        function S(me, Te) {
          if (me.width > Te || me.height > Te) {
            if ("data" in me)
              return void console.warn("THREE.WebGLRenderer: image in DataTexture is too big (" + me.width + "x" + me.height + ").");
            var Le = Te / Math.max(me.width, me.height), De = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            return De.width = Math.floor(me.width * Le), De.height = Math.floor(me.height * Le), De.getContext("2d").drawImage(me, 0, 0, me.width, me.height, 0, 0, De.width, De.height), console.warn("THREE.WebGLRenderer: image is too big (" + me.width + "x" + me.height + "). Resized to " + De.width + "x" + De.height), De;
          }
          return me;
        }
        function G(me) {
          return Rr.isPowerOfTwo(me.width) && Rr.isPowerOfTwo(me.height);
        }
        function P(me, Te) {
          return me.generateMipmaps && Te && me.minFilter !== Rt && me.minFilter !== ur;
        }
        function N(me, Te, Le, De) {
          t.generateMipmap(me), l.get(Te).__maxMipLevel = Math.log(Math.max(Le, De)) * Math.LOG2E;
        }
        function j(me, Te) {
          if (!h.isWebGL2)
            return me;
          if (me === t.RGB) {
            if (Te === t.FLOAT)
              return t.RGB32F;
            if (Te === t.HALF_FLOAT)
              return t.RGB16F;
            if (Te === t.UNSIGNED_BYTE)
              return t.RGB8;
          }
          if (me === t.RGBA) {
            if (Te === t.FLOAT)
              return t.RGBA32F;
            if (Te === t.HALF_FLOAT)
              return t.RGBA16F;
            if (Te === t.UNSIGNED_BYTE)
              return t.RGBA8;
          }
          return me;
        }
        function ee(me) {
          return me === Rt || me === or || me === tn ? t.NEAREST : t.LINEAR;
        }
        function oe(me) {
          var Te = me.target;
          Te.removeEventListener("dispose", oe), function(Le) {
            var De = l.get(Le);
            if (Le.image && De.__image__webglTextureCube)
              t.deleteTexture(De.__image__webglTextureCube);
            else {
              if (De.__webglInit === void 0)
                return;
              t.deleteTexture(De.__webglTexture);
            }
            l.remove(Le);
          }(Te), Te.isVideoTexture && delete I[Te.id], p.memory.textures--;
        }
        function Ae(me) {
          var Te = me.target;
          Te.removeEventListener("dispose", Ae), function(Le) {
            var De = l.get(Le), at = l.get(Le.texture);
            if (!!Le) {
              if (at.__webglTexture !== void 0 && t.deleteTexture(at.__webglTexture), Le.depthTexture && Le.depthTexture.dispose(), Le.isWebGLRenderTargetCube)
                for (var Ye = 0; Ye < 6; Ye++)
                  t.deleteFramebuffer(De.__webglFramebuffer[Ye]), De.__webglDepthbuffer && t.deleteRenderbuffer(De.__webglDepthbuffer[Ye]);
              else
                t.deleteFramebuffer(De.__webglFramebuffer), De.__webglDepthbuffer && t.deleteRenderbuffer(De.__webglDepthbuffer);
              l.remove(Le.texture), l.remove(Le);
            }
          }(Te), p.memory.textures--;
        }
        function pe(me, Te) {
          var Le = l.get(me);
          if (me.isVideoTexture && function(at) {
            var Ye = at.id, At = p.render.frame;
            I[Ye] !== At && (I[Ye] = At, at.update());
          }(me), me.version > 0 && Le.__version !== me.version) {
            var De = me.image;
            if (De === void 0)
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else {
              if (De.complete !== !1)
                return void function(at, Ye, At) {
                  at.__webglInit === void 0 && (at.__webglInit = !0, Ye.addEventListener("dispose", oe), at.__webglTexture = t.createTexture(), p.memory.textures++), A.activeTexture(t.TEXTURE0 + At), A.bindTexture(t.TEXTURE_2D, at.__webglTexture), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, Ye.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, Ye.premultiplyAlpha), t.pixelStorei(t.UNPACK_ALIGNMENT, Ye.unpackAlignment);
                  var gt = S(Ye.image, h.maxTextureSize);
                  (function(Ut) {
                    return !h.isWebGL2 && (Ut.wrapS !== Qt || Ut.wrapT !== Qt || Ut.minFilter !== Rt && Ut.minFilter !== ur);
                  })(Ye) && G(gt) === !1 && (gt = function(Ut) {
                    return Ut instanceof HTMLImageElement || Ut instanceof HTMLCanvasElement || Ut instanceof ImageBitmap ? (E === void 0 && (E = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), E.width = Rr.floorPowerOfTwo(Ut.width), E.height = Rr.floorPowerOfTwo(Ut.height), E.getContext("2d").drawImage(Ut, 0, 0, E.width, E.height), console.warn("THREE.WebGLRenderer: image is not power of two (" + Ut.width + "x" + Ut.height + "). Resized to " + E.width + "x" + E.height), E) : Ut;
                  }(gt));
                  var xt = G(gt), Bt = f.convert(Ye.format), qt = f.convert(Ye.type), Ot = j(Bt, qt);
                  we(t.TEXTURE_2D, Ye, xt);
                  var yt, Mt = Ye.mipmaps;
                  if (Ye.isDepthTexture) {
                    if (Ot = t.DEPTH_COMPONENT, Ye.type === Yr) {
                      if (!h.isWebGL2)
                        throw new Error("Float Depth Texture only supported in WebGL2.0");
                      Ot = t.DEPTH_COMPONENT32F;
                    } else
                      h.isWebGL2 && (Ot = t.DEPTH_COMPONENT16);
                    Ye.format === Qr && Ot === t.DEPTH_COMPONENT && Ye.type !== vn && Ye.type !== Fn && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), Ye.type = vn, qt = f.convert(Ye.type)), Ye.format === br && (Ot = t.DEPTH_STENCIL, Ye.type !== In && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), Ye.type = In, qt = f.convert(Ye.type))), A.texImage2D(t.TEXTURE_2D, 0, Ot, gt.width, gt.height, 0, Bt, qt, null);
                  } else if (Ye.isDataTexture)
                    if (Mt.length > 0 && xt) {
                      for (var pt = 0, er = Mt.length; pt < er; pt++)
                        yt = Mt[pt], A.texImage2D(t.TEXTURE_2D, pt, Ot, yt.width, yt.height, 0, Bt, qt, yt.data);
                      Ye.generateMipmaps = !1, at.__maxMipLevel = Mt.length - 1;
                    } else
                      A.texImage2D(t.TEXTURE_2D, 0, Ot, gt.width, gt.height, 0, Bt, qt, gt.data), at.__maxMipLevel = 0;
                  else if (Ye.isCompressedTexture) {
                    for (var pt = 0, er = Mt.length; pt < er; pt++)
                      yt = Mt[pt], Ye.format !== st && Ye.format !== ke ? A.getCompressedTextureFormats().indexOf(Bt) > -1 ? A.compressedTexImage2D(t.TEXTURE_2D, pt, Ot, yt.width, yt.height, 0, yt.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : A.texImage2D(t.TEXTURE_2D, pt, Ot, yt.width, yt.height, 0, Bt, qt, yt.data);
                    at.__maxMipLevel = Mt.length - 1;
                  } else if (Mt.length > 0 && xt) {
                    for (var pt = 0, er = Mt.length; pt < er; pt++)
                      yt = Mt[pt], A.texImage2D(t.TEXTURE_2D, pt, Ot, Bt, qt, yt);
                    Ye.generateMipmaps = !1, at.__maxMipLevel = Mt.length - 1;
                  } else
                    A.texImage2D(t.TEXTURE_2D, 0, Ot, Bt, qt, gt), at.__maxMipLevel = 0;
                  P(Ye, xt) && N(t.TEXTURE_2D, Ye, gt.width, gt.height), at.__version = Ye.version, Ye.onUpdate && Ye.onUpdate(Ye);
                }(Le, me, Te);
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            }
          }
          A.activeTexture(t.TEXTURE0 + Te), A.bindTexture(t.TEXTURE_2D, Le.__webglTexture);
        }
        function we(me, Te, Le) {
          var De;
          if (Le ? (t.texParameteri(me, t.TEXTURE_WRAP_S, f.convert(Te.wrapS)), t.texParameteri(me, t.TEXTURE_WRAP_T, f.convert(Te.wrapT)), t.texParameteri(me, t.TEXTURE_MAG_FILTER, f.convert(Te.magFilter)), t.texParameteri(me, t.TEXTURE_MIN_FILTER, f.convert(Te.minFilter))) : (t.texParameteri(me, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(me, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), Te.wrapS === Qt && Te.wrapT === Qt || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), t.texParameteri(me, t.TEXTURE_MAG_FILTER, ee(Te.magFilter)), t.texParameteri(me, t.TEXTURE_MIN_FILTER, ee(Te.minFilter)), Te.minFilter !== Rt && Te.minFilter !== ur && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), De = a.get("EXT_texture_filter_anisotropic")) {
            if (Te.type === Yr && a.get("OES_texture_float_linear") === null || Te.type === rn && (h.isWebGL2 || a.get("OES_texture_half_float_linear")) === null)
              return;
            (Te.anisotropy > 1 || l.get(Te).__currentAnisotropy) && (t.texParameterf(me, De.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(Te.anisotropy, h.getMaxAnisotropy())), l.get(Te).__currentAnisotropy = Te.anisotropy);
          }
        }
        function he(me, Te, Le, De) {
          var at = f.convert(Te.texture.format), Ye = f.convert(Te.texture.type), At = j(at, Ye);
          A.texImage2D(De, 0, At, Te.width, Te.height, 0, at, Ye, null), t.bindFramebuffer(t.FRAMEBUFFER, me), t.framebufferTexture2D(t.FRAMEBUFFER, Le, De, l.get(Te.texture).__webglTexture, 0), t.bindFramebuffer(t.FRAMEBUFFER, null);
        }
        function Fe(me, Te) {
          t.bindRenderbuffer(t.RENDERBUFFER, me), Te.depthBuffer && !Te.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, Te.width, Te.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, me)) : Te.depthBuffer && Te.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, Te.width, Te.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, me)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, Te.width, Te.height), t.bindRenderbuffer(t.RENDERBUFFER, null);
        }
        function He(me) {
          var Te = l.get(me), Le = me.isWebGLRenderTargetCube === !0;
          if (me.depthTexture) {
            if (Le)
              throw new Error("target.depthTexture not supported in Cube render targets");
            (function(at, Ye) {
              if (Ye && Ye.isWebGLRenderTargetCube)
                throw new Error("Depth Texture with cube render targets is not supported");
              if (t.bindFramebuffer(t.FRAMEBUFFER, at), !Ye.depthTexture || !Ye.depthTexture.isDepthTexture)
                throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
              l.get(Ye.depthTexture).__webglTexture && Ye.depthTexture.image.width === Ye.width && Ye.depthTexture.image.height === Ye.height || (Ye.depthTexture.image.width = Ye.width, Ye.depthTexture.image.height = Ye.height, Ye.depthTexture.needsUpdate = !0), pe(Ye.depthTexture, 0);
              var At = l.get(Ye.depthTexture).__webglTexture;
              if (Ye.depthTexture.format === Qr)
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, At, 0);
              else {
                if (Ye.depthTexture.format !== br)
                  throw new Error("Unknown depthTexture format");
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, At, 0);
              }
            })(Te.__webglFramebuffer, me);
          } else if (Le) {
            Te.__webglDepthbuffer = [];
            for (var De = 0; De < 6; De++)
              t.bindFramebuffer(t.FRAMEBUFFER, Te.__webglFramebuffer[De]), Te.__webglDepthbuffer[De] = t.createRenderbuffer(), Fe(Te.__webglDepthbuffer[De], me);
          } else
            t.bindFramebuffer(t.FRAMEBUFFER, Te.__webglFramebuffer), Te.__webglDepthbuffer = t.createRenderbuffer(), Fe(Te.__webglDepthbuffer, me);
          t.bindFramebuffer(t.FRAMEBUFFER, null);
        }
        this.setTexture2D = pe, this.setTextureCube = function(me, Te) {
          var Le = l.get(me);
          if (me.image.length === 6)
            if (me.version > 0 && Le.__version !== me.version) {
              Le.__image__webglTextureCube || (me.addEventListener("dispose", oe), Le.__image__webglTextureCube = t.createTexture(), p.memory.textures++), A.activeTexture(t.TEXTURE0 + Te), A.bindTexture(t.TEXTURE_CUBE_MAP, Le.__image__webglTextureCube), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, me.flipY);
              for (var De = me && me.isCompressedTexture, at = me.image[0] && me.image[0].isDataTexture, Ye = [], At = 0; At < 6; At++)
                Ye[At] = De || at ? at ? me.image[At].image : me.image[At] : S(me.image[At], h.maxCubemapSize);
              var gt = Ye[0], xt = G(gt), Bt = f.convert(me.format), qt = f.convert(me.type), Ot = j(Bt, qt);
              for (we(t.TEXTURE_CUBE_MAP, me, xt), At = 0; At < 6; At++)
                if (De)
                  for (var yt, Mt = Ye[At].mipmaps, pt = 0, er = Mt.length; pt < er; pt++)
                    yt = Mt[pt], me.format !== st && me.format !== ke ? A.getCompressedTextureFormats().indexOf(Bt) > -1 ? A.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + At, pt, Ot, yt.width, yt.height, 0, yt.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : A.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + At, pt, Ot, yt.width, yt.height, 0, Bt, qt, yt.data);
                else
                  at ? A.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + At, 0, Ot, Ye[At].width, Ye[At].height, 0, Bt, qt, Ye[At].data) : A.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + At, 0, Ot, Bt, qt, Ye[At]);
              Le.__maxMipLevel = De ? Mt.length - 1 : 0, P(me, xt) && N(t.TEXTURE_CUBE_MAP, me, gt.width, gt.height), Le.__version = me.version, me.onUpdate && me.onUpdate(me);
            } else
              A.activeTexture(t.TEXTURE0 + Te), A.bindTexture(t.TEXTURE_CUBE_MAP, Le.__image__webglTextureCube);
        }, this.setTextureCubeDynamic = function(me, Te) {
          A.activeTexture(t.TEXTURE0 + Te), A.bindTexture(t.TEXTURE_CUBE_MAP, l.get(me).__webglTexture);
        }, this.setupRenderTarget = function(me) {
          var Te = l.get(me), Le = l.get(me.texture);
          me.addEventListener("dispose", Ae), Le.__webglTexture = t.createTexture(), p.memory.textures++;
          var De = me.isWebGLRenderTargetCube === !0, at = G(me);
          if (De) {
            Te.__webglFramebuffer = [];
            for (var Ye = 0; Ye < 6; Ye++)
              Te.__webglFramebuffer[Ye] = t.createFramebuffer();
          } else
            Te.__webglFramebuffer = t.createFramebuffer();
          if (De) {
            for (A.bindTexture(t.TEXTURE_CUBE_MAP, Le.__webglTexture), we(t.TEXTURE_CUBE_MAP, me.texture, at), Ye = 0; Ye < 6; Ye++)
              he(Te.__webglFramebuffer[Ye], me, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + Ye);
            P(me.texture, at) && N(t.TEXTURE_CUBE_MAP, me.texture, me.width, me.height), A.bindTexture(t.TEXTURE_CUBE_MAP, null);
          } else
            A.bindTexture(t.TEXTURE_2D, Le.__webglTexture), we(t.TEXTURE_2D, me.texture, at), he(Te.__webglFramebuffer, me, t.COLOR_ATTACHMENT0, t.TEXTURE_2D), P(me.texture, at) && N(t.TEXTURE_2D, me.texture, me.width, me.height), A.bindTexture(t.TEXTURE_2D, null);
          me.depthBuffer && He(me);
        }, this.updateRenderTargetMipmap = function(me) {
          var Te = me.texture;
          if (P(Te, G(me))) {
            var Le = me.isWebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D, De = l.get(Te).__webglTexture;
            A.bindTexture(Le, De), N(Le, Te, me.width, me.height), A.bindTexture(Le, null);
          }
        };
      }
      function dA(t, a, A) {
        return { convert: function(l) {
          var h;
          if (l === vt)
            return t.REPEAT;
          if (l === Qt)
            return t.CLAMP_TO_EDGE;
          if (l === Ct)
            return t.MIRRORED_REPEAT;
          if (l === Rt)
            return t.NEAREST;
          if (l === or)
            return t.NEAREST_MIPMAP_NEAREST;
          if (l === tn)
            return t.NEAREST_MIPMAP_LINEAR;
          if (l === ur)
            return t.LINEAR;
          if (l === Vr)
            return t.LINEAR_MIPMAP_NEAREST;
          if (l === zr)
            return t.LINEAR_MIPMAP_LINEAR;
          if (l === $r)
            return t.UNSIGNED_BYTE;
          if (l === Zr)
            return t.UNSIGNED_SHORT_4_4_4_4;
          if (l === hn)
            return t.UNSIGNED_SHORT_5_5_5_1;
          if (l === Cn)
            return t.UNSIGNED_SHORT_5_6_5;
          if (l === jr)
            return t.BYTE;
          if (l === dn)
            return t.SHORT;
          if (l === vn)
            return t.UNSIGNED_SHORT;
          if (l === ti)
            return t.INT;
          if (l === Fn)
            return t.UNSIGNED_INT;
          if (l === Yr)
            return t.FLOAT;
          if (l === rn) {
            if (A.isWebGL2)
              return t.HALF_FLOAT;
            if ((h = a.get("OES_texture_half_float")) !== null)
              return h.HALF_FLOAT_OES;
          }
          if (l === xn)
            return t.ALPHA;
          if (l === ke)
            return t.RGB;
          if (l === st)
            return t.RGBA;
          if (l === Pt)
            return t.LUMINANCE;
          if (l === lr)
            return t.LUMINANCE_ALPHA;
          if (l === Qr)
            return t.DEPTH_COMPONENT;
          if (l === br)
            return t.DEPTH_STENCIL;
          if (l === Me)
            return t.FUNC_ADD;
          if (l === We)
            return t.FUNC_SUBTRACT;
          if (l === nt)
            return t.FUNC_REVERSE_SUBTRACT;
          if (l === qe)
            return t.ZERO;
          if (l === ye)
            return t.ONE;
          if (l === Ue)
            return t.SRC_COLOR;
          if (l === ze)
            return t.ONE_MINUS_SRC_COLOR;
          if (l === X)
            return t.SRC_ALPHA;
          if (l === ut)
            return t.ONE_MINUS_SRC_ALPHA;
          if (l === ot)
            return t.DST_ALPHA;
          if (l === mt)
            return t.ONE_MINUS_DST_ALPHA;
          if (l === ve)
            return t.DST_COLOR;
          if (l === je)
            return t.ONE_MINUS_DST_COLOR;
          if (l === ie)
            return t.SRC_ALPHA_SATURATE;
          if ((l === yr || l === Mr || l === Jr || l === ir) && (h = a.get("WEBGL_compressed_texture_s3tc")) !== null) {
            if (l === yr)
              return h.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (l === Mr)
              return h.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (l === Jr)
              return h.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (l === ir)
              return h.COMPRESSED_RGBA_S3TC_DXT5_EXT;
          }
          if ((l === nr || l === Jt || l === _e || l === St) && (h = a.get("WEBGL_compressed_texture_pvrtc")) !== null) {
            if (l === nr)
              return h.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (l === Jt)
              return h.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (l === _e)
              return h.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (l === St)
              return h.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
          }
          if (l === tt && (h = a.get("WEBGL_compressed_texture_etc1")) !== null)
            return h.COMPRESSED_RGB_ETC1_WEBGL;
          if ((l === Vt || l === L || l === te || l === de || l === Ee || l === ge || l === rt || l === ht || l === lt || l === Ft || l === Wt || l === Gt || l === Xt || l === Sr) && (h = a.get("WEBGL_compressed_texture_astc")) !== null)
            return l;
          if (l === Xe || l === Je) {
            if (A.isWebGL2) {
              if (l === Xe)
                return t.MIN;
              if (l === Je)
                return t.MAX;
            }
            if ((h = a.get("EXT_blend_minmax")) !== null) {
              if (l === Xe)
                return h.MIN_EXT;
              if (l === Je)
                return h.MAX_EXT;
            }
          }
          if (l === In) {
            if (A.isWebGL2)
              return t.UNSIGNED_INT_24_8;
            if ((h = a.get("WEBGL_depth_texture")) !== null)
              return h.UNSIGNED_INT_24_8_WEBGL;
          }
          return 0;
        } };
      }
      function La() {
        zt.call(this), this.type = "Group";
      }
      function En(t, a, A, l) {
        Ni.call(this), this.type = "PerspectiveCamera", this.fov = t !== void 0 ? t : 50, this.zoom = 1, this.near = A !== void 0 ? A : 0.1, this.far = l !== void 0 ? l : 2e3, this.focus = 10, this.aspect = a !== void 0 ? a : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
      }
      function Po(t) {
        En.call(this), this.cameras = t || [];
      }
      function hA(t) {
        var a = this, A = null, l = null, h = null, f = [], p = new Br(), E = new Br();
        typeof window < "u" && "VRFrameData" in window && (l = new window.VRFrameData(), window.addEventListener("vrdisplaypresentchange", pe, !1));
        var I = new Br(), S = new fn(), G = new xe(), P = new En();
        P.bounds = new nn(0, 0, 0.5, 1), P.layers.enable(1);
        var N = new En();
        N.bounds = new nn(0.5, 0, 0.5, 1), N.layers.enable(2);
        var j, ee, oe = new Po([P, N]);
        function Ae() {
          return A !== null && A.isPresenting === !0;
        }
        function pe() {
          if (Ae()) {
            var He = A.getEyeParameters("left"), me = He.renderWidth, Te = He.renderHeight;
            ee = t.getPixelRatio(), j = t.getSize(), t.setDrawingBufferSize(2 * me, Te, 1), Fe.start();
          } else
            a.enabled && (t.setDrawingBufferSize(j.width, j.height, ee), Fe.stop());
        }
        oe.layers.enable(1), oe.layers.enable(2);
        var we = [];
        function he(He) {
          for (var me = navigator.getGamepads && navigator.getGamepads(), Te = 0, Le = 0, De = me.length; Te < De; Te++) {
            var at = me[Te];
            if (at && (at.id === "Daydream Controller" || at.id === "Gear VR Controller" || at.id === "Oculus Go Controller" || at.id === "OpenVR Gamepad" || at.id.startsWith("Oculus Touch") || at.id.startsWith("Spatial Controller"))) {
              if (Le === He)
                return at;
              Le++;
            }
          }
        }
        this.enabled = !1, this.userHeight = 1.6, this.getController = function(He) {
          var me = f[He];
          return me === void 0 && ((me = new La()).matrixAutoUpdate = !1, me.visible = !1, f[He] = me), me;
        }, this.getDevice = function() {
          return A;
        }, this.setDevice = function(He) {
          He !== void 0 && (A = He), Fe.setContext(He);
        }, this.setPoseTarget = function(He) {
          He !== void 0 && (h = He);
        }, this.getCamera = function(He) {
          if (A === null)
            return He.position.set(0, a.userHeight, 0), He;
          A.depthNear = He.near, A.depthFar = He.far, A.getFrameData(l);
          var me = A.stageParameters;
          me ? p.fromArray(me.sittingToStandingTransform) : p.makeTranslation(0, a.userHeight, 0);
          var Te = l.pose, Le = h !== null ? h : He;
          if (Le.matrix.copy(p), Le.matrix.decompose(Le.position, Le.quaternion, Le.scale), Te.orientation !== null && (S.fromArray(Te.orientation), Le.quaternion.multiply(S)), Te.position !== null && (S.setFromRotationMatrix(p), G.fromArray(Te.position), G.applyQuaternion(S), Le.position.add(G)), Le.updateMatrixWorld(), A.isPresenting === !1)
            return He;
          P.near = He.near, N.near = He.near, P.far = He.far, N.far = He.far, oe.matrixWorld.copy(He.matrixWorld), oe.matrixWorldInverse.copy(He.matrixWorldInverse), P.matrixWorldInverse.fromArray(l.leftViewMatrix), N.matrixWorldInverse.fromArray(l.rightViewMatrix), E.getInverse(p), P.matrixWorldInverse.multiply(E), N.matrixWorldInverse.multiply(E);
          var De = Le.parent;
          De !== null && (I.getInverse(De.matrixWorld), P.matrixWorldInverse.multiply(I), N.matrixWorldInverse.multiply(I)), P.matrixWorld.getInverse(P.matrixWorldInverse), N.matrixWorld.getInverse(N.matrixWorldInverse), P.projectionMatrix.fromArray(l.leftProjectionMatrix), N.projectionMatrix.fromArray(l.rightProjectionMatrix), oe.projectionMatrix.copy(P.projectionMatrix);
          var at = A.getLayers();
          if (at.length) {
            var Ye = at[0];
            Ye.leftBounds !== null && Ye.leftBounds.length === 4 && P.bounds.fromArray(Ye.leftBounds), Ye.rightBounds !== null && Ye.rightBounds.length === 4 && N.bounds.fromArray(Ye.rightBounds);
          }
          return function() {
            for (var At = 0; At < f.length; At++) {
              var gt = f[At], xt = he(At);
              if (xt !== void 0 && xt.pose !== void 0) {
                if (xt.pose === null)
                  return;
                var Bt = xt.pose;
                Bt.hasPosition === !1 && gt.position.set(0.2, -0.6, -0.05), Bt.position !== null && gt.position.fromArray(Bt.position), Bt.orientation !== null && gt.quaternion.fromArray(Bt.orientation), gt.matrix.compose(gt.position, gt.quaternion, gt.scale), gt.matrix.premultiply(p), gt.matrix.decompose(gt.position, gt.quaternion, gt.scale), gt.matrixWorldNeedsUpdate = !0, gt.visible = !0;
                var qt = xt.id === "Daydream Controller" ? 0 : 1;
                we[At] !== xt.buttons[qt].pressed && (we[At] = xt.buttons[qt].pressed, we[At] === !0 ? gt.dispatchEvent({ type: "selectstart" }) : (gt.dispatchEvent({ type: "selectend" }), gt.dispatchEvent({ type: "select" })));
              } else
                gt.visible = !1;
            }
          }(), oe;
        }, this.getStandingMatrix = function() {
          return p;
        }, this.isPresenting = Ae;
        var Fe = new ac();
        this.setAnimationLoop = function(He) {
          Fe.setAnimationLoop(He);
        }, this.submitFrame = function() {
          Ae() && A.submitFrame();
        }, this.dispose = function() {
          typeof window < "u" && window.removeEventListener("vrdisplaypresentchange", pe);
        };
      }
      function uc(t) {
        console.log("THREE.WebGLRenderer", g);
        var a = (t = t || {}).canvas !== void 0 ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), A = t.context !== void 0 ? t.context : null, l = t.alpha !== void 0 && t.alpha, h = t.depth === void 0 || t.depth, f = t.stencil === void 0 || t.stencil, p = t.antialias !== void 0 && t.antialias, E = t.premultipliedAlpha === void 0 || t.premultipliedAlpha, I = t.preserveDrawingBuffer !== void 0 && t.preserveDrawingBuffer, S = t.powerPreference !== void 0 ? t.powerPreference : "default", G = null, P = null;
        this.domElement = a, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.physicallyCorrectLights = !1, this.toneMapping = Ne, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
        var N, j, ee, oe, Ae, pe, we, he, Fe, He, me, Te, Le, De, at, Ye, At, gt, xt = this, Bt = !1, qt = null, Ot = null, yt = null, Mt = -1, pt = { geometry: null, program: null, wireframe: !1 }, er = null, Ut = null, fr = new nn(), Ir = new nn(), An = null, Qn = 0, an = a.width, Ht = a.height, Dr = 1, yn = new nn(0, 0, an, Ht), Ln = new nn(0, 0, an, Ht), bn = !1, ei = new Rs(), Tn = new function() {
          var W = this, Se = null, Re = 0, it = !1, dt = !1, Zt = new Mi(), Et = new Kn(), ft = { value: null, needsUpdate: !1 };
          function Yt() {
            ft.value !== Se && (ft.value = Se, ft.needsUpdate = Re > 0), W.numPlanes = Re, W.numIntersection = 0;
          }
          function bt(wt, cr, Ar, tr) {
            var Nt = wt !== null ? wt.length : 0, sr = null;
            if (Nt !== 0) {
              if (sr = ft.value, tr !== !0 || sr === null) {
                var xr = Ar + 4 * Nt, pr = cr.matrixWorldInverse;
                Et.getNormalMatrix(pr), (sr === null || sr.length < xr) && (sr = new Float32Array(xr));
                for (var Er = 0, Hr = Ar; Er !== Nt; ++Er, Hr += 4)
                  Zt.copy(wt[Er]).applyMatrix4(pr, Et), Zt.normal.toArray(sr, Hr), sr[Hr + 3] = Zt.constant;
              }
              ft.value = sr, ft.needsUpdate = !0;
            }
            return W.numPlanes = Nt, sr;
          }
          this.uniform = ft, this.numPlanes = 0, this.numIntersection = 0, this.init = function(wt, cr, Ar) {
            var tr = wt.length !== 0 || cr || Re !== 0 || it;
            return it = cr, Se = bt(wt, Ar, 0), Re = wt.length, tr;
          }, this.beginShadows = function() {
            dt = !0, bt(null);
          }, this.endShadows = function() {
            dt = !1, Yt();
          }, this.setState = function(wt, cr, Ar, tr, Nt, sr) {
            if (!it || wt === null || wt.length === 0 || dt && !Ar)
              dt ? bt(null) : Yt();
            else {
              var xr = dt ? 0 : Re, pr = 4 * xr, Er = Nt.clippingState || null;
              ft.value = Er, Er = bt(wt, tr, pr, sr);
              for (var Hr = 0; Hr !== pr; ++Hr)
                Er[Hr] = Se[Hr];
              Nt.clippingState = Er, this.numIntersection = cr ? this.numPlanes : 0, this.numPlanes += xr;
            }
          };
        }(), Ti = !1, Ri = !1, Pn = new Br(), Rn = new xe();
        function oa() {
          return Ot === null ? Dr : 1;
        }
        try {
          var zn = { alpha: l, depth: h, stencil: f, antialias: p, premultipliedAlpha: E, preserveDrawingBuffer: I, powerPreference: S };
          if (a.addEventListener("webglcontextlost", sn, !1), a.addEventListener("webglcontextrestored", Bn, !1), (N = A || a.getContext("webgl", zn) || a.getContext("experimental-webgl", zn)) === null)
            throw a.getContext("webgl") !== null ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
          N.getShaderPrecisionFormat === void 0 && (N.getShaderPrecisionFormat = function() {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
        } catch (W) {
          console.error("THREE.WebGLRenderer: " + W.message);
        }
        function mi() {
          j = new function(W) {
            var Se = {};
            return { get: function(Re) {
              if (Se[Re] !== void 0)
                return Se[Re];
              var it;
              switch (Re) {
                case "WEBGL_depth_texture":
                  it = W.getExtension("WEBGL_depth_texture") || W.getExtension("MOZ_WEBGL_depth_texture") || W.getExtension("WEBKIT_WEBGL_depth_texture");
                  break;
                case "EXT_texture_filter_anisotropic":
                  it = W.getExtension("EXT_texture_filter_anisotropic") || W.getExtension("MOZ_EXT_texture_filter_anisotropic") || W.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                  break;
                case "WEBGL_compressed_texture_s3tc":
                  it = W.getExtension("WEBGL_compressed_texture_s3tc") || W.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || W.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                  break;
                case "WEBGL_compressed_texture_pvrtc":
                  it = W.getExtension("WEBGL_compressed_texture_pvrtc") || W.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                  break;
                default:
                  it = W.getExtension(Re);
              }
              return it === null && console.warn("THREE.WebGLRenderer: " + Re + " extension not supported."), Se[Re] = it, it;
            } };
          }(N), (ee = new function(W, Se, Re) {
            var it;
            function dt(Hr) {
              if (Hr === "highp") {
                if (W.getShaderPrecisionFormat(W.VERTEX_SHADER, W.HIGH_FLOAT).precision > 0 && W.getShaderPrecisionFormat(W.FRAGMENT_SHADER, W.HIGH_FLOAT).precision > 0)
                  return "highp";
                Hr = "mediump";
              }
              return Hr === "mediump" && W.getShaderPrecisionFormat(W.VERTEX_SHADER, W.MEDIUM_FLOAT).precision > 0 && W.getShaderPrecisionFormat(W.FRAGMENT_SHADER, W.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
            }
            var Zt = typeof WebGL2RenderingContext < "u" && W instanceof WebGL2RenderingContext, Et = Re.precision !== void 0 ? Re.precision : "highp", ft = dt(Et);
            ft !== Et && (console.warn("THREE.WebGLRenderer:", Et, "not supported, using", ft, "instead."), Et = ft);
            var Yt = Re.logarithmicDepthBuffer === !0, bt = W.getParameter(W.MAX_TEXTURE_IMAGE_UNITS), wt = W.getParameter(W.MAX_VERTEX_TEXTURE_IMAGE_UNITS), cr = W.getParameter(W.MAX_TEXTURE_SIZE), Ar = W.getParameter(W.MAX_CUBE_MAP_TEXTURE_SIZE), tr = W.getParameter(W.MAX_VERTEX_ATTRIBS), Nt = W.getParameter(W.MAX_VERTEX_UNIFORM_VECTORS), sr = W.getParameter(W.MAX_VARYING_VECTORS), xr = W.getParameter(W.MAX_FRAGMENT_UNIFORM_VECTORS), pr = wt > 0, Er = Zt || !!Se.get("OES_texture_float");
            return { isWebGL2: Zt, getMaxAnisotropy: function() {
              if (it !== void 0)
                return it;
              var Hr = Se.get("EXT_texture_filter_anisotropic");
              return it = Hr !== null ? W.getParameter(Hr.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;
            }, getMaxPrecision: dt, precision: Et, logarithmicDepthBuffer: Yt, maxTextures: bt, maxVertexTextures: wt, maxTextureSize: cr, maxCubemapSize: Ar, maxAttributes: tr, maxVertexUniforms: Nt, maxVaryings: sr, maxFragmentUniforms: xr, vertexTextures: pr, floatFragmentTextures: Er, floatVertexTextures: pr && Er };
          }(N, j, t)).isWebGL2 || (j.get("WEBGL_depth_texture"), j.get("OES_texture_float"), j.get("OES_texture_half_float"), j.get("OES_texture_half_float_linear"), j.get("OES_standard_derivatives"), j.get("OES_element_index_uint"), j.get("ANGLE_instanced_arrays")), j.get("OES_texture_float_linear"), gt = new dA(N, j, ee), (oe = new function(W, Se, Re, it) {
            var dt = new function() {
              var ct = !1, qr = new nn(), Lr = null, kn = new nn(0, 0, 0, 0);
              return { setMask: function(kr) {
                Lr === kr || ct || (W.colorMask(kr, kr, kr, kr), Lr = kr);
              }, setLocked: function(kr) {
                ct = kr;
              }, setClear: function(kr, $n, fi, Wn, Ts) {
                Ts === !0 && (kr *= Wn, $n *= Wn, fi *= Wn), qr.set(kr, $n, fi, Wn), kn.equals(qr) === !1 && (W.clearColor(kr, $n, fi, Wn), kn.copy(qr));
              }, reset: function() {
                ct = !1, Lr = null, kn.set(-1, 0, 0, 0);
              } };
            }(), Zt = new function() {
              var ct = !1, qr = null, Lr = null, kn = null;
              return { setTest: function(kr) {
                kr ? Nn(W.DEPTH_TEST) : qi(W.DEPTH_TEST);
              }, setMask: function(kr) {
                qr === kr || ct || (W.depthMask(kr), qr = kr);
              }, setFunc: function(kr) {
                if (Lr !== kr) {
                  if (kr)
                    switch (kr) {
                      case ae:
                        W.depthFunc(W.NEVER);
                        break;
                      case z:
                        W.depthFunc(W.ALWAYS);
                        break;
                      case be:
                        W.depthFunc(W.LESS);
                        break;
                      case fe:
                        W.depthFunc(W.LEQUAL);
                        break;
                      case J:
                        W.depthFunc(W.EQUAL);
                        break;
                      case R:
                        W.depthFunc(W.GEQUAL);
                        break;
                      case Q:
                        W.depthFunc(W.GREATER);
                        break;
                      case b:
                        W.depthFunc(W.NOTEQUAL);
                        break;
                      default:
                        W.depthFunc(W.LEQUAL);
                    }
                  else
                    W.depthFunc(W.LEQUAL);
                  Lr = kr;
                }
              }, setLocked: function(kr) {
                ct = kr;
              }, setClear: function(kr) {
                kn !== kr && (W.clearDepth(kr), kn = kr);
              }, reset: function() {
                ct = !1, qr = null, Lr = null, kn = null;
              } };
            }(), Et = new function() {
              var ct = !1, qr = null, Lr = null, kn = null, kr = null, $n = null, fi = null, Wn = null, Ts = null;
              return { setTest: function(Sn) {
                Sn ? Nn(W.STENCIL_TEST) : qi(W.STENCIL_TEST);
              }, setMask: function(Sn) {
                qr === Sn || ct || (W.stencilMask(Sn), qr = Sn);
              }, setFunc: function(Sn, Ua, Ha) {
                Lr === Sn && kn === Ua && kr === Ha || (W.stencilFunc(Sn, Ua, Ha), Lr = Sn, kn = Ua, kr = Ha);
              }, setOp: function(Sn, Ua, Ha) {
                $n === Sn && fi === Ua && Wn === Ha || (W.stencilOp(Sn, Ua, Ha), $n = Sn, fi = Ua, Wn = Ha);
              }, setLocked: function(Sn) {
                ct = Sn;
              }, setClear: function(Sn) {
                Ts !== Sn && (W.clearStencil(Sn), Ts = Sn);
              }, reset: function() {
                ct = !1, qr = null, Lr = null, kn = null, kr = null, $n = null, fi = null, Wn = null, Ts = null;
              } };
            }(), ft = W.getParameter(W.MAX_VERTEX_ATTRIBS), Yt = new Uint8Array(ft), bt = new Uint8Array(ft), wt = new Uint8Array(ft), cr = {}, Ar = null, tr = null, Nt = null, sr = null, xr = null, pr = null, Er = null, Hr = null, mn = null, Dt = !1, kt = null, Hi = null, xo = null, Dn = null, Ei = null, Oa = W.getParameter(W.MAX_COMBINED_TEXTURE_IMAGE_UNITS), Xi = !1, sa = 0, Jn = W.getParameter(W.VERSION);
            Jn.indexOf("WebGL") !== -1 ? (sa = parseFloat(/^WebGL\ ([0-9])/.exec(Jn)[1]), Xi = sa >= 1) : Jn.indexOf("OpenGL ES") !== -1 && (sa = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(Jn)[1]), Xi = sa >= 2);
            var Mn = null, wo = {}, _s = new nn(), Pa = new nn();
            function Qs(ct, qr, Lr) {
              var kn = new Uint8Array(4), kr = W.createTexture();
              W.bindTexture(ct, kr), W.texParameteri(ct, W.TEXTURE_MIN_FILTER, W.NEAREST), W.texParameteri(ct, W.TEXTURE_MAG_FILTER, W.NEAREST);
              for (var $n = 0; $n < Lr; $n++)
                W.texImage2D(qr + $n, 0, W.RGBA, 1, 1, 0, W.RGBA, W.UNSIGNED_BYTE, kn);
              return kr;
            }
            var bo = {};
            function Ss(ct, qr) {
              Yt[ct] = 1, bt[ct] === 0 && (W.enableVertexAttribArray(ct), bt[ct] = 1), wt[ct] !== qr && ((it.isWebGL2 ? W : Se.get("ANGLE_instanced_arrays"))[it.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](ct, qr), wt[ct] = qr);
            }
            function Nn(ct) {
              cr[ct] !== !0 && (W.enable(ct), cr[ct] = !0);
            }
            function qi(ct) {
              cr[ct] !== !1 && (W.disable(ct), cr[ct] = !1);
            }
            function _o(ct, qr, Lr, kn, kr, $n, fi, Wn) {
              if (ct !== Pe ? Nn(W.BLEND) : qi(W.BLEND), ct !== Be) {
                if (ct !== Nt || Wn !== Dt)
                  switch (ct) {
                    case Ce:
                      Wn ? (W.blendEquationSeparate(W.FUNC_ADD, W.FUNC_ADD), W.blendFuncSeparate(W.ONE, W.ONE, W.ONE, W.ONE)) : (W.blendEquation(W.FUNC_ADD), W.blendFunc(W.SRC_ALPHA, W.ONE));
                      break;
                    case Ge:
                      Wn ? (W.blendEquationSeparate(W.FUNC_ADD, W.FUNC_ADD), W.blendFuncSeparate(W.ZERO, W.ZERO, W.ONE_MINUS_SRC_COLOR, W.ONE_MINUS_SRC_ALPHA)) : (W.blendEquation(W.FUNC_ADD), W.blendFunc(W.ZERO, W.ONE_MINUS_SRC_COLOR));
                      break;
                    case $e:
                      Wn ? (W.blendEquationSeparate(W.FUNC_ADD, W.FUNC_ADD), W.blendFuncSeparate(W.ZERO, W.SRC_COLOR, W.ZERO, W.SRC_ALPHA)) : (W.blendEquation(W.FUNC_ADD), W.blendFunc(W.ZERO, W.SRC_COLOR));
                      break;
                    default:
                      Wn ? (W.blendEquationSeparate(W.FUNC_ADD, W.FUNC_ADD), W.blendFuncSeparate(W.ONE, W.ONE_MINUS_SRC_ALPHA, W.ONE, W.ONE_MINUS_SRC_ALPHA)) : (W.blendEquationSeparate(W.FUNC_ADD, W.FUNC_ADD), W.blendFuncSeparate(W.SRC_ALPHA, W.ONE_MINUS_SRC_ALPHA, W.ONE, W.ONE_MINUS_SRC_ALPHA));
                  }
                sr = null, xr = null, pr = null, Er = null, Hr = null, mn = null;
              } else
                kr = kr || qr, $n = $n || Lr, fi = fi || kn, qr === sr && kr === Er || (W.blendEquationSeparate(Re.convert(qr), Re.convert(kr)), sr = qr, Er = kr), Lr === xr && kn === pr && $n === Hr && fi === mn || (W.blendFuncSeparate(Re.convert(Lr), Re.convert(kn), Re.convert($n), Re.convert(fi)), xr = Lr, pr = kn, Hr = $n, mn = fi);
              Nt = ct, Dt = Wn;
            }
            function Di(ct) {
              kt !== ct && (ct ? W.frontFace(W.CW) : W.frontFace(W.CCW), kt = ct);
            }
            function DA(ct) {
              ct !== w ? (Nn(W.CULL_FACE), ct !== Hi && (ct === B ? W.cullFace(W.BACK) : ct === x ? W.cullFace(W.FRONT) : W.cullFace(W.FRONT_AND_BACK))) : qi(W.CULL_FACE), Hi = ct;
            }
            function $A(ct, qr, Lr) {
              ct ? (Nn(W.POLYGON_OFFSET_FILL), Dn === qr && Ei === Lr || (W.polygonOffset(qr, Lr), Dn = qr, Ei = Lr)) : qi(W.POLYGON_OFFSET_FILL);
            }
            function jA(ct) {
              ct === void 0 && (ct = W.TEXTURE0 + Oa - 1), Mn !== ct && (W.activeTexture(ct), Mn = ct);
            }
            return bo[W.TEXTURE_2D] = Qs(W.TEXTURE_2D, W.TEXTURE_2D, 1), bo[W.TEXTURE_CUBE_MAP] = Qs(W.TEXTURE_CUBE_MAP, W.TEXTURE_CUBE_MAP_POSITIVE_X, 6), dt.setClear(0, 0, 0, 1), Zt.setClear(1), Et.setClear(0), Nn(W.DEPTH_TEST), Zt.setFunc(fe), Di(!1), DA(B), Nn(W.CULL_FACE), Nn(W.BLEND), _o(se), { buffers: { color: dt, depth: Zt, stencil: Et }, initAttributes: function() {
              for (var ct = 0, qr = Yt.length; ct < qr; ct++)
                Yt[ct] = 0;
            }, enableAttribute: function(ct) {
              Ss(ct, 0);
            }, enableAttributeAndDivisor: Ss, disableUnusedAttributes: function() {
              for (var ct = 0, qr = bt.length; ct !== qr; ++ct)
                bt[ct] !== Yt[ct] && (W.disableVertexAttribArray(ct), bt[ct] = 0);
            }, enable: Nn, disable: qi, getCompressedTextureFormats: function() {
              if (Ar === null && (Ar = [], Se.get("WEBGL_compressed_texture_pvrtc") || Se.get("WEBGL_compressed_texture_s3tc") || Se.get("WEBGL_compressed_texture_etc1") || Se.get("WEBGL_compressed_texture_astc")))
                for (var ct = W.getParameter(W.COMPRESSED_TEXTURE_FORMATS), qr = 0; qr < ct.length; qr++)
                  Ar.push(ct[qr]);
              return Ar;
            }, useProgram: function(ct) {
              return tr !== ct && (W.useProgram(ct), tr = ct, !0);
            }, setBlending: _o, setMaterial: function(ct, qr) {
              ct.side === H ? qi(W.CULL_FACE) : Nn(W.CULL_FACE);
              var Lr = ct.side === O;
              qr && (Lr = !Lr), Di(Lr), ct.blending === se && ct.transparent === !1 ? _o(Pe) : _o(ct.blending, ct.blendEquation, ct.blendSrc, ct.blendDst, ct.blendEquationAlpha, ct.blendSrcAlpha, ct.blendDstAlpha, ct.premultipliedAlpha), Zt.setFunc(ct.depthFunc), Zt.setTest(ct.depthTest), Zt.setMask(ct.depthWrite), dt.setMask(ct.colorWrite), $A(ct.polygonOffset, ct.polygonOffsetFactor, ct.polygonOffsetUnits);
            }, setFlipSided: Di, setCullFace: DA, setLineWidth: function(ct) {
              ct !== xo && (Xi && W.lineWidth(ct), xo = ct);
            }, setPolygonOffset: $A, setScissorTest: function(ct) {
              ct ? Nn(W.SCISSOR_TEST) : qi(W.SCISSOR_TEST);
            }, activeTexture: jA, bindTexture: function(ct, qr) {
              Mn === null && jA();
              var Lr = wo[Mn];
              Lr === void 0 && (Lr = { type: void 0, texture: void 0 }, wo[Mn] = Lr), Lr.type === ct && Lr.texture === qr || (W.bindTexture(ct, qr || bo[ct]), Lr.type = ct, Lr.texture = qr);
            }, compressedTexImage2D: function() {
              try {
                W.compressedTexImage2D.apply(W, arguments);
              } catch (ct) {
                console.error("THREE.WebGLState:", ct);
              }
            }, texImage2D: function() {
              try {
                W.texImage2D.apply(W, arguments);
              } catch (ct) {
                console.error("THREE.WebGLState:", ct);
              }
            }, scissor: function(ct) {
              _s.equals(ct) === !1 && (W.scissor(ct.x, ct.y, ct.z, ct.w), _s.copy(ct));
            }, viewport: function(ct) {
              Pa.equals(ct) === !1 && (W.viewport(ct.x, ct.y, ct.z, ct.w), Pa.copy(ct));
            }, reset: function() {
              for (var ct = 0; ct < bt.length; ct++)
                bt[ct] === 1 && (W.disableVertexAttribArray(ct), bt[ct] = 0);
              cr = {}, Ar = null, Mn = null, wo = {}, tr = null, Nt = null, kt = null, Hi = null, dt.reset(), Zt.reset(), Et.reset();
            } };
          }(N, j, gt, ee)).scissor(Ir.copy(Ln).multiplyScalar(Dr)), oe.viewport(fr.copy(yn).multiplyScalar(Dr)), Ae = new function(W) {
            var Se = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
            return { memory: { geometries: 0, textures: 0 }, render: Se, programs: null, autoReset: !0, reset: function() {
              Se.frame++, Se.calls = 0, Se.triangles = 0, Se.points = 0, Se.lines = 0;
            }, update: function(Re, it, dt) {
              switch (dt = dt || 1, Se.calls++, it) {
                case W.TRIANGLES:
                  Se.triangles += dt * (Re / 3);
                  break;
                case W.TRIANGLE_STRIP:
                case W.TRIANGLE_FAN:
                  Se.triangles += dt * (Re - 2);
                  break;
                case W.LINES:
                  Se.lines += dt * (Re / 2);
                  break;
                case W.LINE_STRIP:
                  Se.lines += dt * (Re - 1);
                  break;
                case W.LINE_LOOP:
                  Se.lines += dt * Re;
                  break;
                case W.POINTS:
                  Se.points += dt * Re;
                  break;
                default:
                  console.error("THREE.WebGLInfo: Unknown draw mode:", it);
              }
            } };
          }(N), pe = new function() {
            var W = /* @__PURE__ */ new WeakMap();
            return { get: function(Se) {
              var Re = W.get(Se);
              return Re === void 0 && (Re = {}, W.set(Se, Re)), Re;
            }, remove: function(Se) {
              W.delete(Se);
            }, update: function(Se, Re, it) {
              W.get(Se)[Re] = it;
            }, dispose: function() {
              W = /* @__PURE__ */ new WeakMap();
            } };
          }(), we = new Su(N, j, oe, pe, ee, gt, Ae), he = new LA(N), Fe = new function(W, Se, Re) {
            var it = {}, dt = {};
            function Zt(Et) {
              var ft = Et.target, Yt = it[ft.id];
              for (var bt in Yt.index !== null && Se.remove(Yt.index), Yt.attributes)
                Se.remove(Yt.attributes[bt]);
              ft.removeEventListener("dispose", Zt), delete it[ft.id];
              var wt = dt[Yt.id];
              wt && (Se.remove(wt), delete dt[Yt.id]), Re.memory.geometries--;
            }
            return { get: function(Et, ft) {
              var Yt = it[ft.id];
              return Yt || (ft.addEventListener("dispose", Zt), ft.isBufferGeometry ? Yt = ft : ft.isGeometry && (ft._bufferGeometry === void 0 && (ft._bufferGeometry = new rr().setFromObject(Et)), Yt = ft._bufferGeometry), it[ft.id] = Yt, Re.memory.geometries++, Yt);
            }, update: function(Et) {
              var ft = Et.index, Yt = Et.attributes;
              for (var bt in ft !== null && Se.update(ft, W.ELEMENT_ARRAY_BUFFER), Yt)
                Se.update(Yt[bt], W.ARRAY_BUFFER);
              var wt = Et.morphAttributes;
              for (var bt in wt)
                for (var cr = wt[bt], Ar = 0, tr = cr.length; Ar < tr; Ar++)
                  Se.update(cr[Ar], W.ARRAY_BUFFER);
            }, getWireframeAttribute: function(Et) {
              var ft = dt[Et.id];
              if (ft)
                return ft;
              var Yt, bt = [], wt = Et.index, cr = Et.attributes;
              if (wt !== null)
                for (var Ar = 0, tr = (Yt = wt.array).length; Ar < tr; Ar += 3) {
                  var Nt = Yt[Ar + 0], sr = Yt[Ar + 1], xr = Yt[Ar + 2];
                  bt.push(Nt, sr, sr, xr, xr, Nt);
                }
              else
                for (Ar = 0, tr = (Yt = cr.position.array).length / 3 - 1; Ar < tr; Ar += 3)
                  Nt = Ar + 0, sr = Ar + 1, xr = Ar + 2, bt.push(Nt, sr, sr, xr, xr, Nt);
              return ft = new ($c(bt) > 65535 ? fa : ha)(bt, 1), Se.update(ft, W.ELEMENT_ARRAY_BUFFER), dt[Et.id] = ft, ft;
            } };
          }(N, he, Ae), He = new function(W, Se) {
            var Re = {};
            return { update: function(it) {
              var dt = Se.render.frame, Zt = it.geometry, Et = W.get(it, Zt);
              return Re[Et.id] !== dt && (Zt.isGeometry && Et.updateFromObject(it), W.update(Et), Re[Et.id] = dt), Et;
            }, dispose: function() {
              Re = {};
            } };
          }(Fe, Ae), at = new function(W) {
            var Se = {}, Re = new Float32Array(8);
            return { update: function(it, dt, Zt, Et) {
              var ft = it.morphTargetInfluences, Yt = ft.length, bt = Se[dt.id];
              if (bt === void 0) {
                bt = [];
                for (var wt = 0; wt < Yt; wt++)
                  bt[wt] = [wt, 0];
                Se[dt.id] = bt;
              }
              var cr = Zt.morphTargets && dt.morphAttributes.position, Ar = Zt.morphNormals && dt.morphAttributes.normal;
              for (wt = 0; wt < Yt; wt++)
                (tr = bt[wt])[1] !== 0 && (cr && dt.removeAttribute("morphTarget" + wt), Ar && dt.removeAttribute("morphNormal" + wt));
              for (wt = 0; wt < Yt; wt++)
                (tr = bt[wt])[0] = wt, tr[1] = ft[wt];
              for (bt.sort(ZA), wt = 0; wt < 8; wt++) {
                var tr;
                if (tr = bt[wt]) {
                  var Nt = tr[0], sr = tr[1];
                  if (sr) {
                    cr && dt.addAttribute("morphTarget" + wt, cr[Nt]), Ar && dt.addAttribute("morphNormal" + wt, Ar[Nt]), Re[wt] = sr;
                    continue;
                  }
                }
                Re[wt] = 0;
              }
              Et.getUniforms().setValue(W, "morphTargetInfluences", Re);
            } };
          }(N), me = new Iu(xt, j, ee), Te = new bu(), Le = new function() {
            var W = {};
            return { get: function(Se, Re) {
              var it;
              return W[Se.id] === void 0 ? (it = new uA(), W[Se.id] = {}, W[Se.id][Re.id] = it) : W[Se.id][Re.id] === void 0 ? (it = new uA(), W[Se.id][Re.id] = it) : it = W[Se.id][Re.id], it;
            }, dispose: function() {
              W = {};
            } };
          }(), De = new function(W, Se, Re, it) {
            var dt, Zt, Et, ft = new dr(0), Yt = 0;
            function bt(wt, cr) {
              Se.buffers.color.setClear(wt.r, wt.g, wt.b, cr, it);
            }
            return { getClearColor: function() {
              return ft;
            }, setClearColor: function(wt, cr) {
              ft.set(wt), bt(ft, Yt = cr !== void 0 ? cr : 1);
            }, getClearAlpha: function() {
              return Yt;
            }, setClearAlpha: function(wt) {
              bt(ft, Yt = wt);
            }, render: function(wt, cr, Ar, tr) {
              var Nt = cr.background;
              Nt === null ? bt(ft, Yt) : Nt && Nt.isColor && (bt(Nt, 1), tr = !0), (W.autoClear || tr) && W.clear(W.autoClearColor, W.autoClearDepth, W.autoClearStencil), Nt && Nt.isCubeTexture ? (Et === void 0 && ((Et = new ri(new pa(1, 1, 1), new pi({ uniforms: la.cube.uniforms, vertexShader: la.cube.vertexShader, fragmentShader: la.cube.fragmentShader, side: O, depthTest: !0, depthWrite: !1, fog: !1 }))).geometry.removeAttribute("normal"), Et.geometry.removeAttribute("uv"), Et.onBeforeRender = function(sr, xr, pr) {
                this.matrixWorld.copyPosition(pr.matrixWorld);
              }, Re.update(Et)), Et.material.uniforms.tCube.value = Nt, wt.push(Et, Et.geometry, Et.material, 0, null)) : Nt && Nt.isTexture && (dt === void 0 && (dt = new $a(-1, 1, 1, -1, 0, 1), Zt = new ri(new ga(2, 2), new Ai({ depthTest: !1, depthWrite: !1, fog: !1 })), Re.update(Zt)), Zt.material.map = Nt, W.renderBufferDirect(dt, null, Zt.geometry, Zt.material, Zt, null));
            } };
          }(xt, oe, He, E), Ye = new function(W, Se, Re, it) {
            var dt;
            this.setMode = function(Zt) {
              dt = Zt;
            }, this.render = function(Zt, Et) {
              W.drawArrays(dt, Zt, Et), Re.update(Et, dt);
            }, this.renderInstances = function(Zt, Et, ft) {
              var Yt;
              if (it.isWebGL2)
                Yt = W;
              else if ((Yt = Se.get("ANGLE_instanced_arrays")) === null)
                return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
              Yt[it.isWebGL2 ? "drawArraysInstanced" : "drawArraysInstancedANGLE"](dt, Et, ft, Zt.maxInstancedCount), Re.update(ft, dt, Zt.maxInstancedCount);
            };
          }(N, j, Ae, ee), At = new function(W, Se, Re, it) {
            var dt, Zt, Et;
            this.setMode = function(ft) {
              dt = ft;
            }, this.setIndex = function(ft) {
              Zt = ft.type, Et = ft.bytesPerElement;
            }, this.render = function(ft, Yt) {
              W.drawElements(dt, Yt, Zt, ft * Et), Re.update(Yt, dt);
            }, this.renderInstances = function(ft, Yt, bt) {
              var wt;
              if (it.isWebGL2)
                wt = W;
              else if ((wt = Se.get("ANGLE_instanced_arrays")) === null)
                return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
              wt[it.isWebGL2 ? "drawElementsInstanced" : "drawElementsInstancedANGLE"](dt, bt, Zt, Yt * Et, ft.maxInstancedCount), Re.update(bt, dt, ft.maxInstancedCount);
            };
          }(N, j, Ae, ee), Ae.programs = me.programs, xt.context = N, xt.capabilities = ee, xt.extensions = j, xt.properties = pe, xt.renderLists = Te, xt.state = oe, xt.info = Ae;
        }
        mi();
        var Ur = "xr" in navigator ? new function(W) {
          var Se = W.context, Re = null, it = null, dt = null, Zt = null, Et = [], ft = [];
          function Yt() {
            return it !== null && dt !== null;
          }
          var bt = new En();
          bt.layers.enable(1), bt.viewport = new nn();
          var wt = new En();
          wt.layers.enable(2), wt.viewport = new nn();
          var cr = new Po([bt, wt]);
          function Ar(pr) {
            var Er = Et[ft.indexOf(pr.inputSource)];
            Er && Er.dispatchEvent({ type: pr.type });
          }
          function tr() {
            W.setFramebuffer(null), xr.stop();
          }
          function Nt(pr, Er) {
            Er === null ? pr.matrixWorld.copy(pr.matrix) : pr.matrixWorld.multiplyMatrices(Er.matrixWorld, pr.matrix), pr.matrixWorldInverse.getInverse(pr.matrixWorld);
          }
          cr.layers.enable(1), cr.layers.enable(2), this.enabled = !1, this.getController = function(pr) {
            var Er = Et[pr];
            return Er === void 0 && ((Er = new La()).matrixAutoUpdate = !1, Er.visible = !1, Et[pr] = Er), Er;
          }, this.getDevice = function() {
            return Re;
          }, this.setDevice = function(pr) {
            pr !== void 0 && (Re = pr), pr instanceof XRDevice && Se.setCompatibleXRDevice(pr);
          }, this.setSession = function(pr, Er) {
            (it = pr) !== null && (it.addEventListener("select", Ar), it.addEventListener("selectstart", Ar), it.addEventListener("selectend", Ar), it.addEventListener("end", tr), it.baseLayer = new XRWebGLLayer(it, Se), it.requestFrameOfReference(Er.frameOfReferenceType).then(function(Hr) {
              dt = Hr, W.setFramebuffer(it.baseLayer.framebuffer), xr.setContext(it), xr.start();
            }), ft = it.getInputSources(), it.addEventListener("inputsourceschange", function() {
              ft = it.getInputSources(), console.log(ft);
            }));
          }, this.getCamera = function(pr) {
            if (Yt()) {
              var Er = pr.parent, Hr = cr.cameras;
              Nt(cr, Er);
              for (var mn = 0; mn < Hr.length; mn++)
                Nt(Hr[mn], Er);
              pr.matrixWorld.copy(cr.matrixWorld);
              for (var Dt = pr.children, kt = (mn = 0, Dt.length); mn < kt; mn++)
                Dt[mn].updateMatrixWorld(!0);
              return cr;
            }
            return pr;
          }, this.isPresenting = Yt;
          var sr = null, xr = new ac();
          xr.setAnimationLoop(function(pr, Er) {
            if ((Zt = Er.getDevicePose(dt)) !== null)
              for (var Hr = it.baseLayer, mn = Er.views, Dt = 0; Dt < mn.length; Dt++) {
                var kt = mn[Dt], Hi = Hr.getViewport(kt), xo = Zt.getViewMatrix(kt), Dn = cr.cameras[Dt];
                Dn.matrix.fromArray(xo).getInverse(Dn.matrix), Dn.projectionMatrix.fromArray(kt.projectionMatrix), Dn.viewport.set(Hi.x, Hi.y, Hi.width, Hi.height), Dt === 0 && (cr.matrix.copy(Dn.matrix), cr.projectionMatrix.copy(Dn.projectionMatrix));
              }
            for (Dt = 0; Dt < Et.length; Dt++) {
              var Ei = Et[Dt], Oa = ft[Dt];
              if (Oa) {
                var Xi = Er.getInputPose(Oa, dt);
                if (Xi !== null) {
                  Ei.matrix.elements = Xi.pointerMatrix, Ei.matrix.decompose(Ei.position, Ei.rotation, Ei.scale), Ei.visible = !0;
                  continue;
                }
              }
              Ei.visible = !1;
            }
            sr && sr(pr);
          }), this.setAnimationLoop = function(pr) {
            sr = pr;
          }, this.dispose = function() {
          }, this.getStandingMatrix = function() {
            return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."), new THREE.Matrix4();
          }, this.submitFrame = function() {
          };
        }(xt) : new hA(xt);
        this.vr = Ur;
        var en = new lA(xt, He, ee.maxTextureSize);
        function sn(W) {
          W.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), Bt = !0;
        }
        function Bn() {
          console.log("THREE.WebGLRenderer: Context Restored."), Bt = !1, mi();
        }
        function ln(W) {
          var Se = W.target;
          Se.removeEventListener("dispose", ln), function(Re) {
            Un(Re), pe.remove(Re);
          }(Se);
        }
        function Un(W) {
          var Se = pe.get(W).program;
          W.program = void 0, Se !== void 0 && me.releaseProgram(Se);
        }
        this.shadowMap = en, this.getContext = function() {
          return N;
        }, this.getContextAttributes = function() {
          return N.getContextAttributes();
        }, this.forceContextLoss = function() {
          var W = j.get("WEBGL_lose_context");
          W && W.loseContext();
        }, this.forceContextRestore = function() {
          var W = j.get("WEBGL_lose_context");
          W && W.restoreContext();
        }, this.getPixelRatio = function() {
          return Dr;
        }, this.setPixelRatio = function(W) {
          W !== void 0 && (Dr = W, this.setSize(an, Ht, !1));
        }, this.getSize = function() {
          return { width: an, height: Ht };
        }, this.setSize = function(W, Se, Re) {
          Ur.isPresenting() ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (an = W, Ht = Se, a.width = W * Dr, a.height = Se * Dr, Re !== !1 && (a.style.width = W + "px", a.style.height = Se + "px"), this.setViewport(0, 0, W, Se));
        }, this.getDrawingBufferSize = function() {
          return { width: an * Dr, height: Ht * Dr };
        }, this.setDrawingBufferSize = function(W, Se, Re) {
          an = W, Ht = Se, Dr = Re, a.width = W * Re, a.height = Se * Re, this.setViewport(0, 0, W, Se);
        }, this.getCurrentViewport = function() {
          return fr;
        }, this.setViewport = function(W, Se, Re, it) {
          yn.set(W, Ht - Se - it, Re, it), oe.viewport(fr.copy(yn).multiplyScalar(Dr));
        }, this.setScissor = function(W, Se, Re, it) {
          Ln.set(W, Ht - Se - it, Re, it), oe.scissor(Ir.copy(Ln).multiplyScalar(Dr));
        }, this.setScissorTest = function(W) {
          oe.setScissorTest(bn = W);
        }, this.getClearColor = function() {
          return De.getClearColor();
        }, this.setClearColor = function() {
          De.setClearColor.apply(De, arguments);
        }, this.getClearAlpha = function() {
          return De.getClearAlpha();
        }, this.setClearAlpha = function() {
          De.setClearAlpha.apply(De, arguments);
        }, this.clear = function(W, Se, Re) {
          var it = 0;
          (W === void 0 || W) && (it |= N.COLOR_BUFFER_BIT), (Se === void 0 || Se) && (it |= N.DEPTH_BUFFER_BIT), (Re === void 0 || Re) && (it |= N.STENCIL_BUFFER_BIT), N.clear(it);
        }, this.clearColor = function() {
          this.clear(!0, !1, !1);
        }, this.clearDepth = function() {
          this.clear(!1, !0, !1);
        }, this.clearStencil = function() {
          this.clear(!1, !1, !0);
        }, this.clearTarget = function(W, Se, Re, it) {
          this.setRenderTarget(W), this.clear(Se, Re, it);
        }, this.dispose = function() {
          a.removeEventListener("webglcontextlost", sn, !1), a.removeEventListener("webglcontextrestored", Bn, !1), Te.dispose(), Le.dispose(), pe.dispose(), He.dispose(), Ur.dispose(), qn.stop();
        }, this.renderBufferImmediate = function(W, Se) {
          oe.initAttributes();
          var Re = pe.get(W);
          W.hasPositions && !Re.position && (Re.position = N.createBuffer()), W.hasNormals && !Re.normal && (Re.normal = N.createBuffer()), W.hasUvs && !Re.uv && (Re.uv = N.createBuffer()), W.hasColors && !Re.color && (Re.color = N.createBuffer());
          var it = Se.getAttributes();
          W.hasPositions && (N.bindBuffer(N.ARRAY_BUFFER, Re.position), N.bufferData(N.ARRAY_BUFFER, W.positionArray, N.DYNAMIC_DRAW), oe.enableAttribute(it.position), N.vertexAttribPointer(it.position, 3, N.FLOAT, !1, 0, 0)), W.hasNormals && (N.bindBuffer(N.ARRAY_BUFFER, Re.normal), N.bufferData(N.ARRAY_BUFFER, W.normalArray, N.DYNAMIC_DRAW), oe.enableAttribute(it.normal), N.vertexAttribPointer(it.normal, 3, N.FLOAT, !1, 0, 0)), W.hasUvs && (N.bindBuffer(N.ARRAY_BUFFER, Re.uv), N.bufferData(N.ARRAY_BUFFER, W.uvArray, N.DYNAMIC_DRAW), oe.enableAttribute(it.uv), N.vertexAttribPointer(it.uv, 2, N.FLOAT, !1, 0, 0)), W.hasColors && (N.bindBuffer(N.ARRAY_BUFFER, Re.color), N.bufferData(N.ARRAY_BUFFER, W.colorArray, N.DYNAMIC_DRAW), oe.enableAttribute(it.color), N.vertexAttribPointer(it.color, 3, N.FLOAT, !1, 0, 0)), oe.disableUnusedAttributes(), N.drawArrays(N.TRIANGLES, 0, W.count), W.count = 0;
        }, this.renderBufferDirect = function(W, Se, Re, it, dt, Zt) {
          var Et = dt.isMesh && dt.normalMatrix.determinant() < 0;
          oe.setMaterial(it, Et);
          var ft = nc(W, Se, it, dt), Yt = !1;
          pt.geometry === Re.id && pt.program === ft.id && pt.wireframe === (it.wireframe === !0) || (pt.geometry = Re.id, pt.program = ft.id, pt.wireframe = it.wireframe === !0, Yt = !0), dt.morphTargetInfluences && (at.update(dt, Re, it, ft), Yt = !0);
          var bt, wt = Re.index, cr = Re.attributes.position, Ar = 1;
          it.wireframe === !0 && (wt = Fe.getWireframeAttribute(Re), Ar = 2);
          var tr = Ye;
          wt !== null && (bt = he.get(wt), (tr = At).setIndex(bt)), Yt && (function(Hi, xo, Dn) {
            if (Dn && Dn.isInstancedBufferGeometry & !ee.isWebGL2 && j.get("ANGLE_instanced_arrays") === null)
              return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            oe.initAttributes();
            var Ei = Dn.attributes, Oa = xo.getAttributes(), Xi = Hi.defaultAttributeValues;
            for (var sa in Oa) {
              var Jn = Oa[sa];
              if (Jn >= 0) {
                var Mn = Ei[sa];
                if (Mn !== void 0) {
                  var wo = Mn.normalized, _s = Mn.itemSize, Pa = he.get(Mn);
                  if (Pa === void 0)
                    continue;
                  var Qs = Pa.buffer, bo = Pa.type, Ss = Pa.bytesPerElement;
                  if (Mn.isInterleavedBufferAttribute) {
                    var Nn = Mn.data, qi = Nn.stride, _o = Mn.offset;
                    Nn && Nn.isInstancedInterleavedBuffer ? (oe.enableAttributeAndDivisor(Jn, Nn.meshPerAttribute), Dn.maxInstancedCount === void 0 && (Dn.maxInstancedCount = Nn.meshPerAttribute * Nn.count)) : oe.enableAttribute(Jn), N.bindBuffer(N.ARRAY_BUFFER, Qs), N.vertexAttribPointer(Jn, _s, bo, wo, qi * Ss, _o * Ss);
                  } else
                    Mn.isInstancedBufferAttribute ? (oe.enableAttributeAndDivisor(Jn, Mn.meshPerAttribute), Dn.maxInstancedCount === void 0 && (Dn.maxInstancedCount = Mn.meshPerAttribute * Mn.count)) : oe.enableAttribute(Jn), N.bindBuffer(N.ARRAY_BUFFER, Qs), N.vertexAttribPointer(Jn, _s, bo, wo, 0, 0);
                } else if (Xi !== void 0) {
                  var Di = Xi[sa];
                  if (Di !== void 0)
                    switch (Di.length) {
                      case 2:
                        N.vertexAttrib2fv(Jn, Di);
                        break;
                      case 3:
                        N.vertexAttrib3fv(Jn, Di);
                        break;
                      case 4:
                        N.vertexAttrib4fv(Jn, Di);
                        break;
                      default:
                        N.vertexAttrib1fv(Jn, Di);
                    }
                }
              }
            }
            oe.disableUnusedAttributes();
          }(it, ft, Re), wt !== null && N.bindBuffer(N.ELEMENT_ARRAY_BUFFER, bt.buffer));
          var Nt = 1 / 0;
          wt !== null ? Nt = wt.count : cr !== void 0 && (Nt = cr.count);
          var sr = Re.drawRange.start * Ar, xr = Re.drawRange.count * Ar, pr = Zt !== null ? Zt.start * Ar : 0, Er = Zt !== null ? Zt.count * Ar : 1 / 0, Hr = Math.max(sr, pr), mn = Math.min(Nt, sr + xr, pr + Er) - 1, Dt = Math.max(0, mn - Hr + 1);
          if (Dt !== 0) {
            if (dt.isMesh)
              if (it.wireframe === !0)
                oe.setLineWidth(it.wireframeLinewidth * oa()), tr.setMode(N.LINES);
              else
                switch (dt.drawMode) {
                  case _r:
                    tr.setMode(N.TRIANGLES);
                    break;
                  case Kt:
                    tr.setMode(N.TRIANGLE_STRIP);
                    break;
                  case vr:
                    tr.setMode(N.TRIANGLE_FAN);
                }
            else if (dt.isLine) {
              var kt = it.linewidth;
              kt === void 0 && (kt = 1), oe.setLineWidth(kt * oa()), dt.isLineSegments ? tr.setMode(N.LINES) : dt.isLineLoop ? tr.setMode(N.LINE_LOOP) : tr.setMode(N.LINE_STRIP);
            } else
              dt.isPoints ? tr.setMode(N.POINTS) : dt.isSprite && tr.setMode(N.TRIANGLES);
            Re && Re.isInstancedBufferGeometry ? Re.maxInstancedCount > 0 && tr.renderInstances(Re, Hr, Dt) : tr.render(Hr, Dt);
          }
        }, this.compile = function(W, Se) {
          (P = Le.get(W, Se)).init(), W.traverse(function(Re) {
            Re.isLight && (P.pushLight(Re), Re.castShadow && P.pushShadow(Re));
          }), P.setupLights(Se), W.traverse(function(Re) {
            if (Re.material)
              if (Array.isArray(Re.material))
                for (var it = 0; it < Re.material.length; it++)
                  Ga(Re.material[it], W.fog, Re);
              else
                Ga(Re.material, W.fog, Re);
          });
        };
        var Hn = null, qn = new ac();
        function hi(W, Se, Re, it) {
          for (var dt = 0, Zt = W.length; dt < Zt; dt++) {
            var Et = W[dt], ft = Et.object, Yt = Et.geometry, bt = it === void 0 ? Et.material : it, wt = Et.group;
            if (Re.isArrayCamera) {
              Ut = Re;
              for (var cr = Re.cameras, Ar = 0, tr = cr.length; Ar < tr; Ar++) {
                var Nt = cr[Ar];
                if (ft.layers.test(Nt.layers)) {
                  if ("viewport" in Nt)
                    oe.viewport(fr.copy(Nt.viewport));
                  else {
                    var sr = Nt.bounds, xr = sr.x * an, pr = sr.y * Ht, Er = sr.z * an, Hr = sr.w * Ht;
                    oe.viewport(fr.set(xr, pr, Er, Hr).multiplyScalar(Dr));
                  }
                  Pi(ft, Se, Nt, Yt, bt, wt);
                }
              }
            } else
              Ut = null, Pi(ft, Se, Re, Yt, bt, wt);
          }
        }
        function Pi(W, Se, Re, it, dt, Zt) {
          if (W.onBeforeRender(xt, Se, Re, it, dt, Zt), P = Le.get(Se, Ut || Re), W.modelViewMatrix.multiplyMatrices(Re.matrixWorldInverse, W.matrixWorld), W.normalMatrix.getNormalMatrix(W.modelViewMatrix), W.isImmediateRenderObject) {
            oe.setMaterial(dt);
            var Et = nc(Re, Se.fog, dt, W);
            pt.geometry = null, pt.program = null, pt.wireframe = !1, function(ft, Yt) {
              ft.render(function(bt) {
                xt.renderBufferImmediate(bt, Yt);
              });
            }(W, Et);
          } else
            xt.renderBufferDirect(Re, Se.fog, it, dt, W, Zt);
          W.onAfterRender(xt, Se, Re, it, dt, Zt), P = Le.get(Se, Ut || Re);
        }
        function Ga(W, Se, Re) {
          var it = pe.get(W), dt = P.state.lights, Zt = P.state.shadowsArray, Et = it.lightsHash, ft = dt.state.hash, Yt = me.getParameters(W, dt.state, Zt, Se, Tn.numPlanes, Tn.numIntersection, Re), bt = me.getProgramCode(W, Yt), wt = it.program, cr = !0;
          if (wt === void 0)
            W.addEventListener("dispose", ln);
          else if (wt.code !== bt)
            Un(W);
          else if (Et.stateID !== ft.stateID || Et.directionalLength !== ft.directionalLength || Et.pointLength !== ft.pointLength || Et.spotLength !== ft.spotLength || Et.rectAreaLength !== ft.rectAreaLength || Et.hemiLength !== ft.hemiLength || Et.shadowsLength !== ft.shadowsLength)
            Et.stateID = ft.stateID, Et.directionalLength = ft.directionalLength, Et.pointLength = ft.pointLength, Et.spotLength = ft.spotLength, Et.rectAreaLength = ft.rectAreaLength, Et.hemiLength = ft.hemiLength, Et.shadowsLength = ft.shadowsLength, cr = !1;
          else {
            if (Yt.shaderID !== void 0)
              return;
            cr = !1;
          }
          if (cr) {
            if (Yt.shaderID) {
              var Ar = la[Yt.shaderID];
              it.shader = { name: W.type, uniforms: Zn.clone(Ar.uniforms), vertexShader: Ar.vertexShader, fragmentShader: Ar.fragmentShader };
            } else
              it.shader = { name: W.type, uniforms: W.uniforms, vertexShader: W.vertexShader, fragmentShader: W.fragmentShader };
            W.onBeforeCompile(it.shader, xt), bt = me.getProgramCode(W, Yt), wt = me.acquireProgram(W, it.shader, Yt, bt), it.program = wt, W.program = wt;
          }
          var tr = wt.getAttributes();
          if (W.morphTargets) {
            W.numSupportedMorphTargets = 0;
            for (var Nt = 0; Nt < xt.maxMorphTargets; Nt++)
              tr["morphTarget" + Nt] >= 0 && W.numSupportedMorphTargets++;
          }
          if (W.morphNormals)
            for (W.numSupportedMorphNormals = 0, Nt = 0; Nt < xt.maxMorphNormals; Nt++)
              tr["morphNormal" + Nt] >= 0 && W.numSupportedMorphNormals++;
          var sr = it.shader.uniforms;
          (W.isShaderMaterial || W.isRawShaderMaterial) && W.clipping !== !0 || (it.numClippingPlanes = Tn.numPlanes, it.numIntersection = Tn.numIntersection, sr.clippingPlanes = Tn.uniform), it.fog = Se, Et === void 0 && (it.lightsHash = Et = {}), Et.stateID = ft.stateID, Et.directionalLength = ft.directionalLength, Et.pointLength = ft.pointLength, Et.spotLength = ft.spotLength, Et.rectAreaLength = ft.rectAreaLength, Et.hemiLength = ft.hemiLength, Et.shadowsLength = ft.shadowsLength, W.lights && (sr.ambientLightColor.value = dt.state.ambient, sr.directionalLights.value = dt.state.directional, sr.spotLights.value = dt.state.spot, sr.rectAreaLights.value = dt.state.rectArea, sr.pointLights.value = dt.state.point, sr.hemisphereLights.value = dt.state.hemi, sr.directionalShadowMap.value = dt.state.directionalShadowMap, sr.directionalShadowMatrix.value = dt.state.directionalShadowMatrix, sr.spotShadowMap.value = dt.state.spotShadowMap, sr.spotShadowMatrix.value = dt.state.spotShadowMatrix, sr.pointShadowMap.value = dt.state.pointShadowMap, sr.pointShadowMatrix.value = dt.state.pointShadowMatrix);
          var xr = it.program.getUniforms(), pr = ta.seqWithValue(xr.seq, sr);
          it.uniformsList = pr;
        }
        function nc(W, Se, Re, it) {
          Qn = 0;
          var dt = pe.get(Re), Zt = P.state.lights, Et = dt.lightsHash, ft = Zt.state.hash;
          if (Ti && (Ri || W !== er)) {
            var Yt = W === er && Re.id === Mt;
            Tn.setState(Re.clippingPlanes, Re.clipIntersection, Re.clipShadows, W, dt, Yt);
          }
          Re.needsUpdate === !1 && (dt.program === void 0 || Re.fog && dt.fog !== Se ? Re.needsUpdate = !0 : (!Re.lights || Et.stateID === ft.stateID && Et.directionalLength === ft.directionalLength && Et.pointLength === ft.pointLength && Et.spotLength === ft.spotLength && Et.rectAreaLength === ft.rectAreaLength && Et.hemiLength === ft.hemiLength && Et.shadowsLength === ft.shadowsLength) && (dt.numClippingPlanes === void 0 || dt.numClippingPlanes === Tn.numPlanes && dt.numIntersection === Tn.numIntersection) || (Re.needsUpdate = !0)), Re.needsUpdate && (Ga(Re, Se, it), Re.needsUpdate = !1);
          var bt = !1, wt = !1, cr = !1, Ar = dt.program, tr = Ar.getUniforms(), Nt = dt.shader.uniforms;
          if (oe.useProgram(Ar.program) && (bt = !0, wt = !0, cr = !0), Re.id !== Mt && (Mt = Re.id, wt = !0), bt || W !== er) {
            if (tr.setValue(N, "projectionMatrix", W.projectionMatrix), ee.logarithmicDepthBuffer && tr.setValue(N, "logDepthBufFC", 2 / (Math.log(W.far + 1) / Math.LN2)), er !== (Ut || W) && (er = Ut || W, wt = !0, cr = !0), Re.isShaderMaterial || Re.isMeshPhongMaterial || Re.isMeshStandardMaterial || Re.envMap) {
              var sr = tr.map.cameraPosition;
              sr !== void 0 && sr.setValue(N, Rn.setFromMatrixPosition(W.matrixWorld));
            }
            (Re.isMeshPhongMaterial || Re.isMeshLambertMaterial || Re.isMeshBasicMaterial || Re.isMeshStandardMaterial || Re.isShaderMaterial || Re.skinning) && tr.setValue(N, "viewMatrix", W.matrixWorldInverse);
          }
          if (Re.skinning) {
            tr.setOptional(N, it, "bindMatrix"), tr.setOptional(N, it, "bindMatrixInverse");
            var xr = it.skeleton;
            if (xr) {
              var pr = xr.bones;
              if (ee.floatVertexTextures) {
                if (xr.boneTexture === void 0) {
                  var Er = Math.sqrt(4 * pr.length);
                  Er = Rr.ceilPowerOfTwo(Er), Er = Math.max(Er, 4);
                  var Hr = new Float32Array(Er * Er * 4);
                  Hr.set(xr.boneMatrices);
                  var mn = new ua(Hr, Er, Er, st, Yr);
                  mn.needsUpdate = !0, xr.boneMatrices = Hr, xr.boneTexture = mn, xr.boneTextureSize = Er;
                }
                tr.setValue(N, "boneTexture", xr.boneTexture), tr.setValue(N, "boneTextureSize", xr.boneTextureSize);
              } else
                tr.setOptional(N, xr, "boneMatrices");
            }
          }
          return wt && (tr.setValue(N, "toneMappingExposure", xt.toneMappingExposure), tr.setValue(N, "toneMappingWhitePoint", xt.toneMappingWhitePoint), Re.lights && function(Dt, kt) {
            Dt.ambientLightColor.needsUpdate = kt, Dt.directionalLights.needsUpdate = kt, Dt.pointLights.needsUpdate = kt, Dt.spotLights.needsUpdate = kt, Dt.rectAreaLights.needsUpdate = kt, Dt.hemisphereLights.needsUpdate = kt;
          }(Nt, cr), Se && Re.fog && function(Dt, kt) {
            Dt.fogColor.value = kt.color, kt.isFog ? (Dt.fogNear.value = kt.near, Dt.fogFar.value = kt.far) : kt.isFogExp2 && (Dt.fogDensity.value = kt.density);
          }(Nt, Se), Re.isMeshBasicMaterial ? Ui(Nt, Re) : Re.isMeshLambertMaterial ? (Ui(Nt, Re), function(Dt, kt) {
            kt.emissiveMap && (Dt.emissiveMap.value = kt.emissiveMap);
          }(Nt, Re)) : Re.isMeshPhongMaterial ? (Ui(Nt, Re), Re.isMeshToonMaterial ? function(Dt, kt) {
            ws(Dt, kt), kt.gradientMap && (Dt.gradientMap.value = kt.gradientMap);
          }(Nt, Re) : ws(Nt, Re)) : Re.isMeshStandardMaterial ? (Ui(Nt, Re), Re.isMeshPhysicalMaterial ? function(Dt, kt) {
            bs(Dt, kt), Dt.reflectivity.value = kt.reflectivity, Dt.clearCoat.value = kt.clearCoat, Dt.clearCoatRoughness.value = kt.clearCoatRoughness;
          }(Nt, Re) : bs(Nt, Re)) : Re.isMeshDepthMaterial ? (Ui(Nt, Re), function(Dt, kt) {
            kt.displacementMap && (Dt.displacementMap.value = kt.displacementMap, Dt.displacementScale.value = kt.displacementScale, Dt.displacementBias.value = kt.displacementBias);
          }(Nt, Re)) : Re.isMeshDistanceMaterial ? (Ui(Nt, Re), function(Dt, kt) {
            kt.displacementMap && (Dt.displacementMap.value = kt.displacementMap, Dt.displacementScale.value = kt.displacementScale, Dt.displacementBias.value = kt.displacementBias), Dt.referencePosition.value.copy(kt.referencePosition), Dt.nearDistance.value = kt.nearDistance, Dt.farDistance.value = kt.farDistance;
          }(Nt, Re)) : Re.isMeshNormalMaterial ? (Ui(Nt, Re), function(Dt, kt) {
            kt.bumpMap && (Dt.bumpMap.value = kt.bumpMap, Dt.bumpScale.value = kt.bumpScale, kt.side === O && (Dt.bumpScale.value *= -1)), kt.normalMap && (Dt.normalMap.value = kt.normalMap, Dt.normalScale.value.copy(kt.normalScale), kt.side === O && Dt.normalScale.value.negate()), kt.displacementMap && (Dt.displacementMap.value = kt.displacementMap, Dt.displacementScale.value = kt.displacementScale, Dt.displacementBias.value = kt.displacementBias);
          }(Nt, Re)) : Re.isLineBasicMaterial ? (function(Dt, kt) {
            Dt.diffuse.value = kt.color, Dt.opacity.value = kt.opacity;
          }(Nt, Re), Re.isLineDashedMaterial && function(Dt, kt) {
            Dt.dashSize.value = kt.dashSize, Dt.totalSize.value = kt.dashSize + kt.gapSize, Dt.scale.value = kt.scale;
          }(Nt, Re)) : Re.isPointsMaterial ? function(Dt, kt) {
            Dt.diffuse.value = kt.color, Dt.opacity.value = kt.opacity, Dt.size.value = kt.size * Dr, Dt.scale.value = 0.5 * Ht, Dt.map.value = kt.map, kt.map !== null && (kt.map.matrixAutoUpdate === !0 && kt.map.updateMatrix(), Dt.uvTransform.value.copy(kt.map.matrix));
          }(Nt, Re) : Re.isSpriteMaterial ? function(Dt, kt) {
            Dt.diffuse.value = kt.color, Dt.opacity.value = kt.opacity, Dt.rotation.value = kt.rotation, Dt.map.value = kt.map, kt.map !== null && (kt.map.matrixAutoUpdate === !0 && kt.map.updateMatrix(), Dt.uvTransform.value.copy(kt.map.matrix));
          }(Nt, Re) : Re.isShadowMaterial && (Nt.color.value = Re.color, Nt.opacity.value = Re.opacity), Nt.ltc_1 !== void 0 && (Nt.ltc_1.value = hr.LTC_1), Nt.ltc_2 !== void 0 && (Nt.ltc_2.value = hr.LTC_2), ta.upload(N, dt.uniformsList, Nt, xt)), Re.isShaderMaterial && Re.uniformsNeedUpdate === !0 && (ta.upload(N, dt.uniformsList, Nt, xt), Re.uniformsNeedUpdate = !1), Re.isSpriteMaterial && tr.setValue(N, "center", it.center), tr.setValue(N, "modelViewMatrix", it.modelViewMatrix), tr.setValue(N, "normalMatrix", it.normalMatrix), tr.setValue(N, "modelMatrix", it.matrixWorld), Ar;
        }
        function Ui(W, Se) {
          var Re;
          W.opacity.value = Se.opacity, Se.color && (W.diffuse.value = Se.color), Se.emissive && W.emissive.value.copy(Se.emissive).multiplyScalar(Se.emissiveIntensity), Se.map && (W.map.value = Se.map), Se.alphaMap && (W.alphaMap.value = Se.alphaMap), Se.specularMap && (W.specularMap.value = Se.specularMap), Se.envMap && (W.envMap.value = Se.envMap, W.flipEnvMap.value = Se.envMap && Se.envMap.isCubeTexture ? -1 : 1, W.reflectivity.value = Se.reflectivity, W.refractionRatio.value = Se.refractionRatio, W.maxMipLevel.value = pe.get(Se.envMap).__maxMipLevel), Se.lightMap && (W.lightMap.value = Se.lightMap, W.lightMapIntensity.value = Se.lightMapIntensity), Se.aoMap && (W.aoMap.value = Se.aoMap, W.aoMapIntensity.value = Se.aoMapIntensity), Se.map ? Re = Se.map : Se.specularMap ? Re = Se.specularMap : Se.displacementMap ? Re = Se.displacementMap : Se.normalMap ? Re = Se.normalMap : Se.bumpMap ? Re = Se.bumpMap : Se.roughnessMap ? Re = Se.roughnessMap : Se.metalnessMap ? Re = Se.metalnessMap : Se.alphaMap ? Re = Se.alphaMap : Se.emissiveMap && (Re = Se.emissiveMap), Re !== void 0 && (Re.isWebGLRenderTarget && (Re = Re.texture), Re.matrixAutoUpdate === !0 && Re.updateMatrix(), W.uvTransform.value.copy(Re.matrix));
        }
        function ws(W, Se) {
          W.specular.value = Se.specular, W.shininess.value = Math.max(Se.shininess, 1e-4), Se.emissiveMap && (W.emissiveMap.value = Se.emissiveMap), Se.bumpMap && (W.bumpMap.value = Se.bumpMap, W.bumpScale.value = Se.bumpScale, Se.side === O && (W.bumpScale.value *= -1)), Se.normalMap && (W.normalMap.value = Se.normalMap, W.normalScale.value.copy(Se.normalScale), Se.side === O && W.normalScale.value.negate()), Se.displacementMap && (W.displacementMap.value = Se.displacementMap, W.displacementScale.value = Se.displacementScale, W.displacementBias.value = Se.displacementBias);
        }
        function bs(W, Se) {
          W.roughness.value = Se.roughness, W.metalness.value = Se.metalness, Se.roughnessMap && (W.roughnessMap.value = Se.roughnessMap), Se.metalnessMap && (W.metalnessMap.value = Se.metalnessMap), Se.emissiveMap && (W.emissiveMap.value = Se.emissiveMap), Se.bumpMap && (W.bumpMap.value = Se.bumpMap, W.bumpScale.value = Se.bumpScale, Se.side === O && (W.bumpScale.value *= -1)), Se.normalMap && (W.normalMap.value = Se.normalMap, W.normalScale.value.copy(Se.normalScale), Se.side === O && W.normalScale.value.negate()), Se.displacementMap && (W.displacementMap.value = Se.displacementMap, W.displacementScale.value = Se.displacementScale, W.displacementBias.value = Se.displacementBias), Se.envMap && (W.envMapIntensity.value = Se.envMapIntensity);
        }
        qn.setAnimationLoop(function(W) {
          Ur.isPresenting() || Hn && Hn(W);
        }), typeof window < "u" && qn.setContext(window), this.setAnimationLoop = function(W) {
          Hn = W, Ur.setAnimationLoop(W), qn.start();
        }, this.render = function(W, Se, Re, it) {
          if (Se && Se.isCamera) {
            if (!Bt) {
              pt.geometry = null, pt.program = null, pt.wireframe = !1, Mt = -1, er = null, W.autoUpdate === !0 && W.updateMatrixWorld(), Se.parent === null && Se.updateMatrixWorld(), Ur.enabled && (Se = Ur.getCamera(Se)), (P = Le.get(W, Se)).init(), W.onBeforeRender(xt, W, Se, Re), Pn.multiplyMatrices(Se.projectionMatrix, Se.matrixWorldInverse), ei.setFromMatrix(Pn), Ri = this.localClippingEnabled, Ti = Tn.init(this.clippingPlanes, Ri, Se), (G = Te.get(W, Se)).init(), function Yt(bt, wt, cr) {
                if (bt.visible !== !1) {
                  var Ar = bt.layers.test(wt.layers);
                  if (Ar) {
                    if (bt.isLight)
                      P.pushLight(bt), bt.castShadow && P.pushShadow(bt);
                    else if (bt.isSprite) {
                      if (!bt.frustumCulled || ei.intersectsSprite(bt)) {
                        cr && Rn.setFromMatrixPosition(bt.matrixWorld).applyMatrix4(Pn);
                        var tr = He.update(bt), Nt = bt.material;
                        G.push(bt, tr, Nt, Rn.z, null);
                      }
                    } else if (bt.isImmediateRenderObject)
                      cr && Rn.setFromMatrixPosition(bt.matrixWorld).applyMatrix4(Pn), G.push(bt, null, bt.material, Rn.z, null);
                    else if ((bt.isMesh || bt.isLine || bt.isPoints) && (bt.isSkinnedMesh && bt.skeleton.update(), !bt.frustumCulled || ei.intersectsObject(bt))) {
                      cr && Rn.setFromMatrixPosition(bt.matrixWorld).applyMatrix4(Pn);
                      var tr = He.update(bt), Nt = bt.material;
                      if (Array.isArray(Nt))
                        for (var sr = tr.groups, xr = 0, pr = sr.length; xr < pr; xr++) {
                          var Er = sr[xr], Hr = Nt[Er.materialIndex];
                          Hr && Hr.visible && G.push(bt, tr, Hr, Rn.z, Er);
                        }
                      else
                        Nt.visible && G.push(bt, tr, Nt, Rn.z, null);
                    }
                  }
                  for (var mn = bt.children, xr = 0, pr = mn.length; xr < pr; xr++)
                    Yt(mn[xr], wt, cr);
                }
              }(W, Se, xt.sortObjects), xt.sortObjects === !0 && G.sort(), Ti && Tn.beginShadows();
              var dt = P.state.shadowsArray;
              en.render(dt, W, Se), P.setupLights(Se), Ti && Tn.endShadows(), this.info.autoReset && this.info.reset(), Re === void 0 && (Re = null), this.setRenderTarget(Re), De.render(G, W, Se, it);
              var Zt = G.opaque, Et = G.transparent;
              if (W.overrideMaterial) {
                var ft = W.overrideMaterial;
                Zt.length && hi(Zt, W, Se, ft), Et.length && hi(Et, W, Se, ft);
              } else
                Zt.length && hi(Zt, W, Se), Et.length && hi(Et, W, Se);
              Re && we.updateRenderTargetMipmap(Re), oe.buffers.depth.setTest(!0), oe.buffers.depth.setMask(!0), oe.buffers.color.setMask(!0), oe.setPolygonOffset(!1), W.onAfterRender(xt, W, Se), Ur.enabled && Ur.submitFrame(), G = null, P = null;
            }
          } else
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        }, this.allocTextureUnit = function() {
          var W = Qn;
          return W >= ee.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + W + " texture units while this GPU supports only " + ee.maxTextures), Qn += 1, W;
        }, this.setTexture2D = function() {
          var W = !1;
          return function(Se, Re) {
            Se && Se.isWebGLRenderTarget && (W || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."), W = !0), Se = Se.texture), we.setTexture2D(Se, Re);
          };
        }(), this.setTexture = function() {
          var W = !1;
          return function(Se, Re) {
            W || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."), W = !0), we.setTexture2D(Se, Re);
          };
        }(), this.setTextureCube = function() {
          var W = !1;
          return function(Se, Re) {
            Se && Se.isWebGLRenderTargetCube && (W || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."), W = !0), Se = Se.texture), Se && Se.isCubeTexture || Array.isArray(Se.image) && Se.image.length === 6 ? we.setTextureCube(Se, Re) : we.setTextureCubeDynamic(Se, Re);
          };
        }(), this.setFramebuffer = function(W) {
          qt = W;
        }, this.getRenderTarget = function() {
          return Ot;
        }, this.setRenderTarget = function(W) {
          Ot = W, W && pe.get(W).__webglFramebuffer === void 0 && we.setupRenderTarget(W);
          var Se = qt, Re = !1;
          if (W) {
            var it = pe.get(W).__webglFramebuffer;
            W.isWebGLRenderTargetCube ? (Se = it[W.activeCubeFace], Re = !0) : Se = it, fr.copy(W.viewport), Ir.copy(W.scissor), An = W.scissorTest;
          } else
            fr.copy(yn).multiplyScalar(Dr), Ir.copy(Ln).multiplyScalar(Dr), An = bn;
          if (yt !== Se && (N.bindFramebuffer(N.FRAMEBUFFER, Se), yt = Se), oe.viewport(fr), oe.scissor(Ir), oe.setScissorTest(An), Re) {
            var dt = pe.get(W.texture);
            N.framebufferTexture2D(N.FRAMEBUFFER, N.COLOR_ATTACHMENT0, N.TEXTURE_CUBE_MAP_POSITIVE_X + W.activeCubeFace, dt.__webglTexture, W.activeMipMapLevel);
          }
        }, this.readRenderTargetPixels = function(W, Se, Re, it, dt, Zt) {
          if (W && W.isWebGLRenderTarget) {
            var Et = pe.get(W).__webglFramebuffer;
            if (Et) {
              var ft = !1;
              Et !== yt && (N.bindFramebuffer(N.FRAMEBUFFER, Et), ft = !0);
              try {
                var Yt = W.texture, bt = Yt.format, wt = Yt.type;
                if (bt !== st && gt.convert(bt) !== N.getParameter(N.IMPLEMENTATION_COLOR_READ_FORMAT))
                  return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                if (!(wt === $r || gt.convert(wt) === N.getParameter(N.IMPLEMENTATION_COLOR_READ_TYPE) || wt === Yr && (ee.isWebGL2 || j.get("OES_texture_float") || j.get("WEBGL_color_buffer_float")) || wt === rn && (ee.isWebGL2 ? j.get("EXT_color_buffer_float") : j.get("EXT_color_buffer_half_float"))))
                  return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                N.checkFramebufferStatus(N.FRAMEBUFFER) === N.FRAMEBUFFER_COMPLETE ? Se >= 0 && Se <= W.width - it && Re >= 0 && Re <= W.height - dt && N.readPixels(Se, Re, it, dt, gt.convert(bt), gt.convert(wt), Zt) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
              } finally {
                ft && N.bindFramebuffer(N.FRAMEBUFFER, yt);
              }
            }
          } else
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
        }, this.copyFramebufferToTexture = function(W, Se, Re) {
          var it = Se.image.width, dt = Se.image.height, Zt = gt.convert(Se.format);
          this.setTexture2D(Se, 0), N.copyTexImage2D(N.TEXTURE_2D, Re || 0, Zt, W.x, W.y, it, dt, 0);
        }, this.copyTextureToTexture = function(W, Se, Re, it) {
          var dt = Se.image.width, Zt = Se.image.height, Et = gt.convert(Re.format), ft = gt.convert(Re.type);
          this.setTexture2D(Re, 0), Se.isDataTexture ? N.texSubImage2D(N.TEXTURE_2D, it || 0, W.x, W.y, dt, Zt, Et, ft, Se.image.data) : N.texSubImage2D(N.TEXTURE_2D, it || 0, W.x, W.y, Et, ft, Se.image);
        };
      }
      function za(t, a) {
        this.name = "", this.color = new dr(t), this.density = a !== void 0 ? a : 25e-5;
      }
      function Ja(t, a, A) {
        this.name = "", this.color = new dr(t), this.near = a !== void 0 ? a : 1, this.far = A !== void 0 ? A : 1e3;
      }
      function Ms() {
        zt.call(this), this.type = "Scene", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0;
      }
      function Ea(t, a) {
        this.array = t, this.stride = a, this.count = t !== void 0 ? t.length / a : 0, this.dynamic = !1, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function Uo(t, a, A, l) {
        this.data = t, this.itemSize = a, this.offset = A, this.normalized = l === !0;
      }
      function ia(t) {
        Nr.call(this), this.type = "SpriteMaterial", this.color = new dr(16777215), this.map = null, this.rotation = 0, this.lights = !1, this.transparent = !0, this.setValues(t);
      }
      function Ho(t) {
        if (zt.call(this), this.type = "Sprite", Va === void 0) {
          Va = new rr();
          var a = new Ea(new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]), 5);
          Va.setIndex([0, 1, 2, 0, 2, 3]), Va.addAttribute("position", new Uo(a, 3, 0, !1)), Va.addAttribute("uv", new Uo(a, 2, 3, !1));
        }
        this.geometry = Va, this.material = t !== void 0 ? t : new ia(), this.center = new Tt(0.5, 0.5);
      }
      function qo() {
        zt.call(this), this.type = "LOD", Object.defineProperties(this, { levels: { enumerable: !0, value: [] } });
      }
      function Do(t, a) {
        if (t = t || [], this.bones = t.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), a === void 0)
          this.calculateInverses();
        else if (this.bones.length === a.length)
          this.boneInverses = a.slice(0);
        else {
          console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
          for (var A = 0, l = this.bones.length; A < l; A++)
            this.boneInverses.push(new Br());
        }
      }
      function Ns() {
        zt.call(this), this.type = "Bone";
      }
      function ks(t, a) {
        ri.call(this, t, a), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new Br(), this.bindMatrixInverse = new Br();
        var A = new Do(this.initBones());
        this.bind(A, this.matrixWorld), this.normalizeSkinWeights();
      }
      function on(t) {
        Nr.call(this), this.type = "LineBasicMaterial", this.color = new dr(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.lights = !1, this.setValues(t);
      }
      function ni(t, a, A) {
        A === 1 && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), zt.call(this), this.type = "Line", this.geometry = t !== void 0 ? t : new rr(), this.material = a !== void 0 ? a : new on({ color: 16777215 * Math.random() });
      }
      function cn(t, a) {
        ni.call(this, t, a), this.type = "LineSegments";
      }
      function Fs(t, a) {
        ni.call(this, t, a), this.type = "LineLoop";
      }
      function Ci(t) {
        Nr.call(this), this.type = "PointsMaterial", this.color = new dr(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.morphTargets = !1, this.lights = !1, this.setValues(t);
      }
      function Wa(t, a) {
        zt.call(this), this.type = "Points", this.geometry = t !== void 0 ? t : new rr(), this.material = a !== void 0 ? a : new Ci({ color: 16777215 * Math.random() });
      }
      function lc(t, a, A, l, h, f, p, E, I) {
        un.call(this, t, a, A, l, h, f, p, E, I), this.generateMipmaps = !1;
      }
      function Ka(t, a, A, l, h, f, p, E, I, S, G, P) {
        un.call(this, null, f, p, E, I, S, l, h, G, P), this.image = { width: a, height: A }, this.mipmaps = t, this.flipY = !1, this.generateMipmaps = !1;
      }
      function $o(t, a, A, l, h, f, p, E, I) {
        un.call(this, t, a, A, l, h, f, p, E, I), this.needsUpdate = !0;
      }
      function jo(t, a, A, l, h, f, p, E, I, S) {
        if ((S = S !== void 0 ? S : Qr) !== Qr && S !== br)
          throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        A === void 0 && S === Qr && (A = vn), A === void 0 && S === br && (A = In), un.call(this, null, l, h, f, p, E, S, A, I), this.image = { width: t, height: a }, this.magFilter = p !== void 0 ? p : Rt, this.minFilter = E !== void 0 ? E : Rt, this.flipY = !1, this.generateMipmaps = !1;
      }
      function Za(t) {
        rr.call(this), this.type = "WireframeGeometry";
        var a, A, l, h, f, p, E, I, S, G, P = [], N = [0, 0], j = {}, ee = ["a", "b", "c"];
        if (t && t.isGeometry) {
          var oe = t.faces;
          for (a = 0, l = oe.length; a < l; a++) {
            var Ae = oe[a];
            for (A = 0; A < 3; A++)
              E = Ae[ee[A]], I = Ae[ee[(A + 1) % 3]], N[0] = Math.min(E, I), N[1] = Math.max(E, I), j[S = N[0] + "," + N[1]] === void 0 && (j[S] = { index1: N[0], index2: N[1] });
          }
          for (S in j)
            p = j[S], G = t.vertices[p.index1], P.push(G.x, G.y, G.z), G = t.vertices[p.index2], P.push(G.x, G.y, G.z);
        } else if (t && t.isBufferGeometry) {
          var pe, we, he, Fe, He, me, Te;
          if (G = new xe(), t.index !== null) {
            for (pe = t.attributes.position, we = t.index, (he = t.groups).length === 0 && (he = [{ start: 0, count: we.count, materialIndex: 0 }]), h = 0, f = he.length; h < f; ++h)
              for (a = He = (Fe = he[h]).start, l = He + Fe.count; a < l; a += 3)
                for (A = 0; A < 3; A++)
                  E = we.getX(a + A), I = we.getX(a + (A + 1) % 3), N[0] = Math.min(E, I), N[1] = Math.max(E, I), j[S = N[0] + "," + N[1]] === void 0 && (j[S] = { index1: N[0], index2: N[1] });
            for (S in j)
              p = j[S], G.fromBufferAttribute(pe, p.index1), P.push(G.x, G.y, G.z), G.fromBufferAttribute(pe, p.index2), P.push(G.x, G.y, G.z);
          } else
            for (a = 0, l = (pe = t.attributes.position).count / 3; a < l; a++)
              for (A = 0; A < 3; A++)
                me = 3 * a + A, G.fromBufferAttribute(pe, me), P.push(G.x, G.y, G.z), Te = 3 * a + (A + 1) % 3, G.fromBufferAttribute(pe, Te), P.push(G.x, G.y, G.z);
        }
        this.addAttribute("position", new jt(P, 3));
      }
      function Yo(t, a, A) {
        Cr.call(this), this.type = "ParametricGeometry", this.parameters = { func: t, slices: a, stacks: A }, this.fromBufferGeometry(new Xa(t, a, A)), this.mergeVertices();
      }
      function Xa(t, a, A) {
        rr.call(this), this.type = "ParametricBufferGeometry", this.parameters = { func: t, slices: a, stacks: A };
        var l, h, f = [], p = [], E = [], I = [], S = new xe(), G = new xe(), P = new xe(), N = new xe(), j = new xe();
        t.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        var ee = a + 1;
        for (l = 0; l <= A; l++) {
          var oe = l / A;
          for (h = 0; h <= a; h++) {
            var Ae = h / a;
            t(Ae, oe, G), p.push(G.x, G.y, G.z), Ae - 1e-5 >= 0 ? (t(Ae - 1e-5, oe, P), N.subVectors(G, P)) : (t(Ae + 1e-5, oe, P), N.subVectors(P, G)), oe - 1e-5 >= 0 ? (t(Ae, oe - 1e-5, P), j.subVectors(G, P)) : (t(Ae, oe + 1e-5, P), j.subVectors(P, G)), S.crossVectors(N, j).normalize(), E.push(S.x, S.y, S.z), I.push(Ae, oe);
          }
        }
        for (l = 0; l < A; l++)
          for (h = 0; h < a; h++) {
            var pe = l * ee + h, we = l * ee + h + 1, he = (l + 1) * ee + h + 1, Fe = (l + 1) * ee + h;
            f.push(pe, we, Fe), f.push(we, he, Fe);
          }
        this.setIndex(f), this.addAttribute("position", new jt(p, 3)), this.addAttribute("normal", new jt(E, 3)), this.addAttribute("uv", new jt(I, 2));
      }
      function Vo(t, a, A, l) {
        Cr.call(this), this.type = "PolyhedronGeometry", this.parameters = { vertices: t, indices: a, radius: A, detail: l }, this.fromBufferGeometry(new ii(t, a, A, l)), this.mergeVertices();
      }
      function ii(t, a, A, l) {
        rr.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = { vertices: t, indices: a, radius: A, detail: l }, A = A || 1;
        var h = [], f = [];
        function p(N, j, ee, oe) {
          var Ae, pe, we = Math.pow(2, oe), he = [];
          for (Ae = 0; Ae <= we; Ae++) {
            he[Ae] = [];
            var Fe = N.clone().lerp(ee, Ae / we), He = j.clone().lerp(ee, Ae / we), me = we - Ae;
            for (pe = 0; pe <= me; pe++)
              he[Ae][pe] = pe === 0 && Ae === we ? Fe : Fe.clone().lerp(He, pe / me);
          }
          for (Ae = 0; Ae < we; Ae++)
            for (pe = 0; pe < 2 * (we - Ae) - 1; pe++) {
              var Te = Math.floor(pe / 2);
              pe % 2 == 0 ? (E(he[Ae][Te + 1]), E(he[Ae + 1][Te]), E(he[Ae][Te])) : (E(he[Ae][Te + 1]), E(he[Ae + 1][Te + 1]), E(he[Ae + 1][Te]));
            }
        }
        function E(N) {
          h.push(N.x, N.y, N.z);
        }
        function I(N, j) {
          var ee = 3 * N;
          j.x = t[ee + 0], j.y = t[ee + 1], j.z = t[ee + 2];
        }
        function S(N, j, ee, oe) {
          oe < 0 && N.x === 1 && (f[j] = N.x - 1), ee.x === 0 && ee.z === 0 && (f[j] = oe / 2 / Math.PI + 0.5);
        }
        function G(N) {
          return Math.atan2(N.z, -N.x);
        }
        function P(N) {
          return Math.atan2(-N.y, Math.sqrt(N.x * N.x + N.z * N.z));
        }
        (function(N) {
          for (var j = new xe(), ee = new xe(), oe = new xe(), Ae = 0; Ae < a.length; Ae += 3)
            I(a[Ae + 0], j), I(a[Ae + 1], ee), I(a[Ae + 2], oe), p(j, ee, oe, N);
        })(l = l || 0), function(N) {
          for (var j = new xe(), ee = 0; ee < h.length; ee += 3)
            j.x = h[ee + 0], j.y = h[ee + 1], j.z = h[ee + 2], j.normalize().multiplyScalar(N), h[ee + 0] = j.x, h[ee + 1] = j.y, h[ee + 2] = j.z;
        }(A), function() {
          for (var N = new xe(), j = 0; j < h.length; j += 3) {
            N.x = h[j + 0], N.y = h[j + 1], N.z = h[j + 2];
            var ee = G(N) / 2 / Math.PI + 0.5, oe = P(N) / Math.PI + 0.5;
            f.push(ee, 1 - oe);
          }
          (function() {
            for (var Ae = new xe(), pe = new xe(), we = new xe(), he = new xe(), Fe = new Tt(), He = new Tt(), me = new Tt(), Te = 0, Le = 0; Te < h.length; Te += 9, Le += 6) {
              Ae.set(h[Te + 0], h[Te + 1], h[Te + 2]), pe.set(h[Te + 3], h[Te + 4], h[Te + 5]), we.set(h[Te + 6], h[Te + 7], h[Te + 8]), Fe.set(f[Le + 0], f[Le + 1]), He.set(f[Le + 2], f[Le + 3]), me.set(f[Le + 4], f[Le + 5]), he.copy(Ae).add(pe).add(we).divideScalar(3);
              var De = G(he);
              S(Fe, Le + 0, Ae, De), S(He, Le + 2, pe, De), S(me, Le + 4, we, De);
            }
          })(), function() {
            for (var Ae = 0; Ae < f.length; Ae += 6) {
              var pe = f[Ae + 0], we = f[Ae + 2], he = f[Ae + 4], Fe = Math.max(pe, we, he), He = Math.min(pe, we, he);
              Fe > 0.9 && He < 0.1 && (pe < 0.2 && (f[Ae + 0] += 1), we < 0.2 && (f[Ae + 2] += 1), he < 0.2 && (f[Ae + 4] += 1));
            }
          }();
        }(), this.addAttribute("position", new jt(h, 3)), this.addAttribute("normal", new jt(h.slice(), 3)), this.addAttribute("uv", new jt(f, 2)), l === 0 ? this.computeVertexNormals() : this.normalizeNormals();
      }
      function Lo(t, a) {
        Cr.call(this), this.type = "TetrahedronGeometry", this.parameters = { radius: t, detail: a }, this.fromBufferGeometry(new eo(t, a)), this.mergeVertices();
      }
      function eo(t, a) {
        ii.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], t, a), this.type = "TetrahedronBufferGeometry", this.parameters = { radius: t, detail: a };
      }
      function zo(t, a) {
        Cr.call(this), this.type = "OctahedronGeometry", this.parameters = { radius: t, detail: a }, this.fromBufferGeometry(new ya(t, a)), this.mergeVertices();
      }
      function ya(t, a) {
        ii.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], t, a), this.type = "OctahedronBufferGeometry", this.parameters = { radius: t, detail: a };
      }
      function Jo(t, a) {
        Cr.call(this), this.type = "IcosahedronGeometry", this.parameters = { radius: t, detail: a }, this.fromBufferGeometry(new to(t, a)), this.mergeVertices();
      }
      function to(t, a) {
        var A = (1 + Math.sqrt(5)) / 2, l = [-1, A, 0, 1, A, 0, -1, -A, 0, 1, -A, 0, 0, -1, A, 0, 1, A, 0, -1, -A, 0, 1, -A, A, 0, -1, A, 0, 1, -A, 0, -1, -A, 0, 1];
        ii.call(this, l, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], t, a), this.type = "IcosahedronBufferGeometry", this.parameters = { radius: t, detail: a };
      }
      function Wo(t, a) {
        Cr.call(this), this.type = "DodecahedronGeometry", this.parameters = { radius: t, detail: a }, this.fromBufferGeometry(new ro(t, a)), this.mergeVertices();
      }
      function ro(t, a) {
        var A = (1 + Math.sqrt(5)) / 2, l = 1 / A, h = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -l, -A, 0, -l, A, 0, l, -A, 0, l, A, -l, -A, 0, -l, A, 0, l, -A, 0, l, A, 0, -A, 0, -l, A, 0, -l, -A, 0, l, A, 0, l];
        ii.call(this, h, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], t, a), this.type = "DodecahedronBufferGeometry", this.parameters = { radius: t, detail: a };
      }
      function Ko(t, a, A, l, h, f) {
        Cr.call(this), this.type = "TubeGeometry", this.parameters = { path: t, tubularSegments: a, radius: A, radialSegments: l, closed: h }, f !== void 0 && console.warn("THREE.TubeGeometry: taper has been removed.");
        var p = new no(t, a, A, l, h);
        this.tangents = p.tangents, this.normals = p.normals, this.binormals = p.binormals, this.fromBufferGeometry(p), this.mergeVertices();
      }
      function no(t, a, A, l, h) {
        rr.call(this), this.type = "TubeBufferGeometry", this.parameters = { path: t, tubularSegments: a, radius: A, radialSegments: l, closed: h }, a = a || 64, A = A || 1, l = l || 8, h = h || !1;
        var f = t.computeFrenetFrames(a, h);
        this.tangents = f.tangents, this.normals = f.normals, this.binormals = f.binormals;
        var p, E, I = new xe(), S = new xe(), G = new Tt(), P = new xe(), N = [], j = [], ee = [], oe = [];
        function Ae(pe) {
          P = t.getPointAt(pe / a, P);
          var we = f.normals[pe], he = f.binormals[pe];
          for (E = 0; E <= l; E++) {
            var Fe = E / l * Math.PI * 2, He = Math.sin(Fe), me = -Math.cos(Fe);
            S.x = me * we.x + He * he.x, S.y = me * we.y + He * he.y, S.z = me * we.z + He * he.z, S.normalize(), j.push(S.x, S.y, S.z), I.x = P.x + A * S.x, I.y = P.y + A * S.y, I.z = P.z + A * S.z, N.push(I.x, I.y, I.z);
          }
        }
        (function() {
          for (p = 0; p < a; p++)
            Ae(p);
          Ae(h === !1 ? a : 0), function() {
            for (p = 0; p <= a; p++)
              for (E = 0; E <= l; E++)
                G.x = p / a, G.y = E / l, ee.push(G.x, G.y);
          }(), function() {
            for (E = 1; E <= a; E++)
              for (p = 1; p <= l; p++) {
                var pe = (l + 1) * (E - 1) + (p - 1), we = (l + 1) * E + (p - 1), he = (l + 1) * E + p, Fe = (l + 1) * (E - 1) + p;
                oe.push(pe, we, Fe), oe.push(we, he, Fe);
              }
          }();
        })(), this.setIndex(oe), this.addAttribute("position", new jt(N, 3)), this.addAttribute("normal", new jt(j, 3)), this.addAttribute("uv", new jt(ee, 2));
      }
      function Zo(t, a, A, l, h, f, p) {
        Cr.call(this), this.type = "TorusKnotGeometry", this.parameters = { radius: t, tube: a, tubularSegments: A, radialSegments: l, p: h, q: f }, p !== void 0 && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new io(t, a, A, l, h, f)), this.mergeVertices();
      }
      function io(t, a, A, l, h, f) {
        rr.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = { radius: t, tube: a, tubularSegments: A, radialSegments: l, p: h, q: f }, t = t || 1, a = a || 0.4, A = Math.floor(A) || 64, l = Math.floor(l) || 8, h = h || 2, f = f || 3;
        var p, E, I = [], S = [], G = [], P = [], N = new xe(), j = new xe(), ee = new xe(), oe = new xe(), Ae = new xe(), pe = new xe(), we = new xe();
        for (p = 0; p <= A; ++p) {
          var he = p / A * h * Math.PI * 2;
          for (Ye(he, h, f, t, ee), Ye(he + 0.01, h, f, t, oe), pe.subVectors(oe, ee), we.addVectors(oe, ee), Ae.crossVectors(pe, we), we.crossVectors(Ae, pe), Ae.normalize(), we.normalize(), E = 0; E <= l; ++E) {
            var Fe = E / l * Math.PI * 2, He = -a * Math.cos(Fe), me = a * Math.sin(Fe);
            N.x = ee.x + (He * we.x + me * Ae.x), N.y = ee.y + (He * we.y + me * Ae.y), N.z = ee.z + (He * we.z + me * Ae.z), S.push(N.x, N.y, N.z), j.subVectors(N, ee).normalize(), G.push(j.x, j.y, j.z), P.push(p / A), P.push(E / l);
          }
        }
        for (E = 1; E <= A; E++)
          for (p = 1; p <= l; p++) {
            var Te = (l + 1) * (E - 1) + (p - 1), Le = (l + 1) * E + (p - 1), De = (l + 1) * E + p, at = (l + 1) * (E - 1) + p;
            I.push(Te, Le, at), I.push(Le, De, at);
          }
        function Ye(At, gt, xt, Bt, qt) {
          var Ot = Math.cos(At), yt = Math.sin(At), Mt = xt / gt * At, pt = Math.cos(Mt);
          qt.x = Bt * (2 + pt) * 0.5 * Ot, qt.y = Bt * (2 + pt) * yt * 0.5, qt.z = Bt * Math.sin(Mt) * 0.5;
        }
        this.setIndex(I), this.addAttribute("position", new jt(S, 3)), this.addAttribute("normal", new jt(G, 3)), this.addAttribute("uv", new jt(P, 2));
      }
      function Xo(t, a, A, l, h) {
        Cr.call(this), this.type = "TorusGeometry", this.parameters = { radius: t, tube: a, radialSegments: A, tubularSegments: l, arc: h }, this.fromBufferGeometry(new ao(t, a, A, l, h)), this.mergeVertices();
      }
      function ao(t, a, A, l, h) {
        rr.call(this), this.type = "TorusBufferGeometry", this.parameters = { radius: t, tube: a, radialSegments: A, tubularSegments: l, arc: h }, t = t || 1, a = a || 0.4, A = Math.floor(A) || 8, l = Math.floor(l) || 6, h = h || 2 * Math.PI;
        var f, p, E = [], I = [], S = [], G = [], P = new xe(), N = new xe(), j = new xe();
        for (f = 0; f <= A; f++)
          for (p = 0; p <= l; p++) {
            var ee = p / l * h, oe = f / A * Math.PI * 2;
            N.x = (t + a * Math.cos(oe)) * Math.cos(ee), N.y = (t + a * Math.cos(oe)) * Math.sin(ee), N.z = a * Math.sin(oe), I.push(N.x, N.y, N.z), P.x = t * Math.cos(ee), P.y = t * Math.sin(ee), j.subVectors(N, P).normalize(), S.push(j.x, j.y, j.z), G.push(p / l), G.push(f / A);
          }
        for (f = 1; f <= A; f++)
          for (p = 1; p <= l; p++) {
            var Ae = (l + 1) * f + p - 1, pe = (l + 1) * (f - 1) + p - 1, we = (l + 1) * (f - 1) + p, he = (l + 1) * f + p;
            E.push(Ae, pe, he), E.push(pe, we, he);
          }
        this.setIndex(E), this.addAttribute("position", new jt(I, 3)), this.addAttribute("normal", new jt(S, 3)), this.addAttribute("uv", new jt(G, 2));
      }
      ra.prototype = Object.create(Nr.prototype), ra.prototype.constructor = ra, ra.prototype.isMeshDepthMaterial = !0, ra.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.depthPacking = t.depthPacking, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this;
      }, na.prototype = Object.create(Nr.prototype), na.prototype.constructor = na, na.prototype.isMeshDistanceMaterial = !0, na.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.referencePosition.copy(t.referencePosition), this.nearDistance = t.nearDistance, this.farDistance = t.farDistance, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this;
      }, La.prototype = Object.assign(Object.create(zt.prototype), { constructor: La, isGroup: !0 }), En.prototype = Object.assign(Object.create(Ni.prototype), { constructor: En, isPerspectiveCamera: !0, copy: function(t, a) {
        return Ni.prototype.copy.call(this, t, a), this.fov = t.fov, this.zoom = t.zoom, this.near = t.near, this.far = t.far, this.focus = t.focus, this.aspect = t.aspect, this.view = t.view === null ? null : Object.assign({}, t.view), this.filmGauge = t.filmGauge, this.filmOffset = t.filmOffset, this;
      }, setFocalLength: function(t) {
        var a = 0.5 * this.getFilmHeight() / t;
        this.fov = 2 * Rr.RAD2DEG * Math.atan(a), this.updateProjectionMatrix();
      }, getFocalLength: function() {
        var t = Math.tan(0.5 * Rr.DEG2RAD * this.fov);
        return 0.5 * this.getFilmHeight() / t;
      }, getEffectiveFOV: function() {
        return 2 * Rr.RAD2DEG * Math.atan(Math.tan(0.5 * Rr.DEG2RAD * this.fov) / this.zoom);
      }, getFilmWidth: function() {
        return this.filmGauge * Math.min(this.aspect, 1);
      }, getFilmHeight: function() {
        return this.filmGauge / Math.max(this.aspect, 1);
      }, setViewOffset: function(t, a, A, l, h, f) {
        this.aspect = t / a, this.view === null && (this.view = { enabled: !0, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = !0, this.view.fullWidth = t, this.view.fullHeight = a, this.view.offsetX = A, this.view.offsetY = l, this.view.width = h, this.view.height = f, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var t = this.near, a = t * Math.tan(0.5 * Rr.DEG2RAD * this.fov) / this.zoom, A = 2 * a, l = this.aspect * A, h = -0.5 * l, f = this.view;
        if (this.view !== null && this.view.enabled) {
          var p = f.fullWidth, E = f.fullHeight;
          h += f.offsetX * l / p, a -= f.offsetY * A / E, l *= f.width / p, A *= f.height / E;
        }
        var I = this.filmOffset;
        I !== 0 && (h += t * I / this.getFilmWidth()), this.projectionMatrix.makePerspective(h, h + l, a, a - A, t, this.far);
      }, toJSON: function(t) {
        var a = zt.prototype.toJSON.call(this, t);
        return a.object.fov = this.fov, a.object.zoom = this.zoom, a.object.near = this.near, a.object.far = this.far, a.object.focus = this.focus, a.object.aspect = this.aspect, this.view !== null && (a.object.view = Object.assign({}, this.view)), a.object.filmGauge = this.filmGauge, a.object.filmOffset = this.filmOffset, a;
      } }), Po.prototype = Object.assign(Object.create(En.prototype), { constructor: Po, isArrayCamera: !0 }), za.prototype.isFogExp2 = !0, za.prototype.clone = function() {
        return new za(this.color, this.density);
      }, za.prototype.toJSON = function() {
        return { type: "FogExp2", color: this.color.getHex(), density: this.density };
      }, Ja.prototype.isFog = !0, Ja.prototype.clone = function() {
        return new Ja(this.color, this.near, this.far);
      }, Ja.prototype.toJSON = function() {
        return { type: "Fog", color: this.color.getHex(), near: this.near, far: this.far };
      }, Ms.prototype = Object.assign(Object.create(zt.prototype), { constructor: Ms, copy: function(t, a) {
        return zt.prototype.copy.call(this, t, a), t.background !== null && (this.background = t.background.clone()), t.fog !== null && (this.fog = t.fog.clone()), t.overrideMaterial !== null && (this.overrideMaterial = t.overrideMaterial.clone()), this.autoUpdate = t.autoUpdate, this.matrixAutoUpdate = t.matrixAutoUpdate, this;
      }, toJSON: function(t) {
        var a = zt.prototype.toJSON.call(this, t);
        return this.background !== null && (a.object.background = this.background.toJSON(t)), this.fog !== null && (a.object.fog = this.fog.toJSON()), a;
      } }), Object.defineProperty(Ea.prototype, "needsUpdate", { set: function(t) {
        t === !0 && this.version++;
      } }), Object.assign(Ea.prototype, { isInterleavedBuffer: !0, onUploadCallback: function() {
      }, setArray: function(t) {
        if (Array.isArray(t))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        return this.count = t !== void 0 ? t.length / this.stride : 0, this.array = t, this;
      }, setDynamic: function(t) {
        return this.dynamic = t, this;
      }, copy: function(t) {
        return this.array = new t.array.constructor(t.array), this.count = t.count, this.stride = t.stride, this.dynamic = t.dynamic, this;
      }, copyAt: function(t, a, A) {
        t *= this.stride, A *= a.stride;
        for (var l = 0, h = this.stride; l < h; l++)
          this.array[t + l] = a.array[A + l];
        return this;
      }, set: function(t, a) {
        return a === void 0 && (a = 0), this.array.set(t, a), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, onUpload: function(t) {
        return this.onUploadCallback = t, this;
      } }), Object.defineProperties(Uo.prototype, { count: { get: function() {
        return this.data.count;
      } }, array: { get: function() {
        return this.data.array;
      } } }), Object.assign(Uo.prototype, { isInterleavedBufferAttribute: !0, setX: function(t, a) {
        return this.data.array[t * this.data.stride + this.offset] = a, this;
      }, setY: function(t, a) {
        return this.data.array[t * this.data.stride + this.offset + 1] = a, this;
      }, setZ: function(t, a) {
        return this.data.array[t * this.data.stride + this.offset + 2] = a, this;
      }, setW: function(t, a) {
        return this.data.array[t * this.data.stride + this.offset + 3] = a, this;
      }, getX: function(t) {
        return this.data.array[t * this.data.stride + this.offset];
      }, getY: function(t) {
        return this.data.array[t * this.data.stride + this.offset + 1];
      }, getZ: function(t) {
        return this.data.array[t * this.data.stride + this.offset + 2];
      }, getW: function(t) {
        return this.data.array[t * this.data.stride + this.offset + 3];
      }, setXY: function(t, a, A) {
        return t = t * this.data.stride + this.offset, this.data.array[t + 0] = a, this.data.array[t + 1] = A, this;
      }, setXYZ: function(t, a, A, l) {
        return t = t * this.data.stride + this.offset, this.data.array[t + 0] = a, this.data.array[t + 1] = A, this.data.array[t + 2] = l, this;
      }, setXYZW: function(t, a, A, l, h) {
        return t = t * this.data.stride + this.offset, this.data.array[t + 0] = a, this.data.array[t + 1] = A, this.data.array[t + 2] = l, this.data.array[t + 3] = h, this;
      } }), ia.prototype = Object.create(Nr.prototype), ia.prototype.constructor = ia, ia.prototype.isSpriteMaterial = !0, ia.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.rotation = t.rotation, this;
      }, Ho.prototype = Object.assign(Object.create(zt.prototype), { constructor: Ho, isSprite: !0, raycast: function() {
        var t = new xe(), a = new xe(), A = new xe(), l = new Tt(), h = new Tt(), f = new Br(), p = new xe(), E = new xe(), I = new xe();
        function S(G, P, N, j, ee, oe) {
          l.subVectors(G, N).addScalar(0.5).multiply(j), ee !== void 0 ? (h.x = oe * l.x - ee * l.y, h.y = ee * l.x + oe * l.y) : h.copy(l), G.copy(P), G.x += h.x, G.y += h.y, G.applyMatrix4(f);
        }
        return function(G, P) {
          a.setFromMatrixScale(this.matrixWorld), f.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld), A.setFromMatrixPosition(this.modelViewMatrix);
          var N, j, ee = this.material.rotation;
          ee !== 0 && (j = Math.cos(ee), N = Math.sin(ee));
          var oe = this.center;
          S(p.set(-0.5, -0.5, 0), A, oe, a, N, j), S(E.set(0.5, -0.5, 0), A, oe, a, N, j), S(I.set(0.5, 0.5, 0), A, oe, a, N, j);
          var Ae = G.ray.intersectTriangle(p, E, I, !1, t);
          if (Ae !== null || (S(E.set(-0.5, 0.5, 0), A, oe, a, N, j), (Ae = G.ray.intersectTriangle(p, I, E, !1, t)) !== null)) {
            var pe = G.ray.origin.distanceTo(t);
            pe < G.near || pe > G.far || P.push({ distance: pe, point: t.clone(), face: null, object: this });
          }
        };
      }(), clone: function() {
        return new this.constructor(this.material).copy(this);
      }, copy: function(t) {
        return zt.prototype.copy.call(this, t), t.center !== void 0 && this.center.copy(t.center), this;
      } }), qo.prototype = Object.assign(Object.create(zt.prototype), { constructor: qo, copy: function(t) {
        zt.prototype.copy.call(this, t, !1);
        for (var a = t.levels, A = 0, l = a.length; A < l; A++) {
          var h = a[A];
          this.addLevel(h.object.clone(), h.distance);
        }
        return this;
      }, addLevel: function(t, a) {
        a === void 0 && (a = 0), a = Math.abs(a);
        for (var A = this.levels, l = 0; l < A.length && !(a < A[l].distance); l++)
          ;
        A.splice(l, 0, { distance: a, object: t }), this.add(t);
      }, getObjectForDistance: function(t) {
        for (var a = this.levels, A = 1, l = a.length; A < l && !(t < a[A].distance); A++)
          ;
        return a[A - 1].object;
      }, raycast: function() {
        var t = new xe();
        return function(a, A) {
          t.setFromMatrixPosition(this.matrixWorld);
          var l = a.ray.origin.distanceTo(t);
          this.getObjectForDistance(l).raycast(a, A);
        };
      }(), update: function() {
        var t = new xe(), a = new xe();
        return function(A) {
          var l = this.levels;
          if (l.length > 1) {
            t.setFromMatrixPosition(A.matrixWorld), a.setFromMatrixPosition(this.matrixWorld);
            var h = t.distanceTo(a);
            l[0].object.visible = !0;
            for (var f = 1, p = l.length; f < p && h >= l[f].distance; f++)
              l[f - 1].object.visible = !1, l[f].object.visible = !0;
            for (; f < p; f++)
              l[f].object.visible = !1;
          }
        };
      }(), toJSON: function(t) {
        var a = zt.prototype.toJSON.call(this, t);
        a.object.levels = [];
        for (var A = this.levels, l = 0, h = A.length; l < h; l++) {
          var f = A[l];
          a.object.levels.push({ object: f.object.uuid, distance: f.distance });
        }
        return a;
      } }), Object.assign(Do.prototype, { calculateInverses: function() {
        this.boneInverses = [];
        for (var t = 0, a = this.bones.length; t < a; t++) {
          var A = new Br();
          this.bones[t] && A.getInverse(this.bones[t].matrixWorld), this.boneInverses.push(A);
        }
      }, pose: function() {
        var t, a, A;
        for (a = 0, A = this.bones.length; a < A; a++)
          (t = this.bones[a]) && t.matrixWorld.getInverse(this.boneInverses[a]);
        for (a = 0, A = this.bones.length; a < A; a++)
          (t = this.bones[a]) && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld), t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld), t.matrix.decompose(t.position, t.quaternion, t.scale));
      }, update: function() {
        var t = new Br(), a = new Br();
        return function() {
          for (var A = this.bones, l = this.boneInverses, h = this.boneMatrices, f = this.boneTexture, p = 0, E = A.length; p < E; p++) {
            var I = A[p] ? A[p].matrixWorld : a;
            t.multiplyMatrices(I, l[p]), t.toArray(h, 16 * p);
          }
          f !== void 0 && (f.needsUpdate = !0);
        };
      }(), clone: function() {
        return new Do(this.bones, this.boneInverses);
      }, getBoneByName: function(t) {
        for (var a = 0, A = this.bones.length; a < A; a++) {
          var l = this.bones[a];
          if (l.name === t)
            return l;
        }
      } }), Ns.prototype = Object.assign(Object.create(zt.prototype), { constructor: Ns, isBone: !0 }), ks.prototype = Object.assign(Object.create(ri.prototype), { constructor: ks, isSkinnedMesh: !0, initBones: function() {
        var t, a, A, l, h = [];
        if (this.geometry && this.geometry.bones !== void 0) {
          for (A = 0, l = this.geometry.bones.length; A < l; A++)
            a = this.geometry.bones[A], t = new Ns(), h.push(t), t.name = a.name, t.position.fromArray(a.pos), t.quaternion.fromArray(a.rotq), a.scl !== void 0 && t.scale.fromArray(a.scl);
          for (A = 0, l = this.geometry.bones.length; A < l; A++)
            (a = this.geometry.bones[A]).parent !== -1 && a.parent !== null && h[a.parent] !== void 0 ? h[a.parent].add(h[A]) : this.add(h[A]);
        }
        return this.updateMatrixWorld(!0), h;
      }, bind: function(t, a) {
        this.skeleton = t, a === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), a = this.matrixWorld), this.bindMatrix.copy(a), this.bindMatrixInverse.getInverse(a);
      }, pose: function() {
        this.skeleton.pose();
      }, normalizeSkinWeights: function() {
        var t, a;
        if (this.geometry && this.geometry.isGeometry)
          for (a = 0; a < this.geometry.skinWeights.length; a++) {
            var A = this.geometry.skinWeights[a];
            (t = 1 / A.manhattanLength()) !== 1 / 0 ? A.multiplyScalar(t) : A.set(1, 0, 0, 0);
          }
        else if (this.geometry && this.geometry.isBufferGeometry) {
          var l = new nn(), h = this.geometry.attributes.skinWeight;
          for (a = 0; a < h.count; a++)
            l.x = h.getX(a), l.y = h.getY(a), l.z = h.getZ(a), l.w = h.getW(a), (t = 1 / l.manhattanLength()) !== 1 / 0 ? l.multiplyScalar(t) : l.set(1, 0, 0, 0), h.setXYZW(a, l.x, l.y, l.z, l.w);
        }
      }, updateMatrixWorld: function(t) {
        ri.prototype.updateMatrixWorld.call(this, t), this.bindMode === "attached" ? this.bindMatrixInverse.getInverse(this.matrixWorld) : this.bindMode === "detached" ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
      }, clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), on.prototype = Object.create(Nr.prototype), on.prototype.constructor = on, on.prototype.isLineBasicMaterial = !0, on.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.color.copy(t.color), this.linewidth = t.linewidth, this.linecap = t.linecap, this.linejoin = t.linejoin, this;
      }, ni.prototype = Object.assign(Object.create(zt.prototype), { constructor: ni, isLine: !0, computeLineDistances: function() {
        var t = new xe(), a = new xe();
        return function() {
          var A = this.geometry;
          if (A.isBufferGeometry)
            if (A.index === null) {
              for (var l = A.attributes.position, h = [0], f = 1, p = l.count; f < p; f++)
                t.fromBufferAttribute(l, f - 1), a.fromBufferAttribute(l, f), h[f] = h[f - 1], h[f] += t.distanceTo(a);
              A.addAttribute("lineDistance", new jt(h, 1));
            } else
              console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
          else if (A.isGeometry) {
            var E = A.vertices;
            for ((h = A.lineDistances)[0] = 0, f = 1, p = E.length; f < p; f++)
              h[f] = h[f - 1], h[f] += E[f - 1].distanceTo(E[f]);
          }
          return this;
        };
      }(), raycast: function() {
        var t = new Br(), a = new ma(), A = new Bi();
        return function(l, h) {
          var f = l.linePrecision, p = f * f, E = this.geometry, I = this.matrixWorld;
          if (E.boundingSphere === null && E.computeBoundingSphere(), A.copy(E.boundingSphere), A.applyMatrix4(I), l.ray.intersectsSphere(A) !== !1) {
            t.getInverse(I), a.copy(l.ray).applyMatrix4(t);
            var S = new xe(), G = new xe(), P = new xe(), N = new xe(), j = this && this.isLineSegments ? 2 : 1;
            if (E.isBufferGeometry) {
              var ee = E.index, oe = E.attributes.position.array;
              if (ee !== null)
                for (var Ae = ee.array, pe = 0, we = Ae.length - 1; pe < we; pe += j) {
                  var he = Ae[pe], Fe = Ae[pe + 1];
                  S.fromArray(oe, 3 * he), G.fromArray(oe, 3 * Fe), !(a.distanceSqToSegment(S, G, N, P) > p) && (N.applyMatrix4(this.matrixWorld), (Te = l.ray.origin.distanceTo(N)) < l.near || Te > l.far || h.push({ distance: Te, point: P.clone().applyMatrix4(this.matrixWorld), index: pe, face: null, faceIndex: null, object: this }));
                }
              else
                for (pe = 0, we = oe.length / 3 - 1; pe < we; pe += j)
                  S.fromArray(oe, 3 * pe), G.fromArray(oe, 3 * pe + 3), !(a.distanceSqToSegment(S, G, N, P) > p) && (N.applyMatrix4(this.matrixWorld), (Te = l.ray.origin.distanceTo(N)) < l.near || Te > l.far || h.push({ distance: Te, point: P.clone().applyMatrix4(this.matrixWorld), index: pe, face: null, faceIndex: null, object: this }));
            } else if (E.isGeometry) {
              var He = E.vertices, me = He.length;
              for (pe = 0; pe < me - 1; pe += j) {
                var Te;
                a.distanceSqToSegment(He[pe], He[pe + 1], N, P) > p || (N.applyMatrix4(this.matrixWorld), (Te = l.ray.origin.distanceTo(N)) < l.near || Te > l.far || h.push({ distance: Te, point: P.clone().applyMatrix4(this.matrixWorld), index: pe, face: null, faceIndex: null, object: this }));
              }
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), cn.prototype = Object.assign(Object.create(ni.prototype), { constructor: cn, isLineSegments: !0, computeLineDistances: function() {
        var t = new xe(), a = new xe();
        return function() {
          var A = this.geometry;
          if (A.isBufferGeometry)
            if (A.index === null) {
              for (var l = A.attributes.position, h = [], f = 0, p = l.count; f < p; f += 2)
                t.fromBufferAttribute(l, f), a.fromBufferAttribute(l, f + 1), h[f] = f === 0 ? 0 : h[f - 1], h[f + 1] = h[f] + t.distanceTo(a);
              A.addAttribute("lineDistance", new jt(h, 1));
            } else
              console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
          else if (A.isGeometry) {
            var E = A.vertices;
            for (h = A.lineDistances, f = 0, p = E.length; f < p; f += 2)
              t.copy(E[f]), a.copy(E[f + 1]), h[f] = f === 0 ? 0 : h[f - 1], h[f + 1] = h[f] + t.distanceTo(a);
          }
          return this;
        };
      }() }), Fs.prototype = Object.assign(Object.create(ni.prototype), { constructor: Fs, isLineLoop: !0 }), Ci.prototype = Object.create(Nr.prototype), Ci.prototype.constructor = Ci, Ci.prototype.isPointsMaterial = !0, Ci.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.size = t.size, this.sizeAttenuation = t.sizeAttenuation, this.morphTargets = t.morphTargets, this;
      }, Wa.prototype = Object.assign(Object.create(zt.prototype), { constructor: Wa, isPoints: !0, raycast: function() {
        var t = new Br(), a = new ma(), A = new Bi();
        return function(l, h) {
          var f = this, p = this.geometry, E = this.matrixWorld, I = l.params.Points.threshold;
          if (p.boundingSphere === null && p.computeBoundingSphere(), A.copy(p.boundingSphere), A.applyMatrix4(E), A.radius += I, l.ray.intersectsSphere(A) !== !1) {
            t.getInverse(E), a.copy(l.ray).applyMatrix4(t);
            var S = I / ((this.scale.x + this.scale.y + this.scale.z) / 3), G = S * S, P = new xe(), N = new xe();
            if (p.isBufferGeometry) {
              var j = p.index, ee = p.attributes.position.array;
              if (j !== null)
                for (var oe = j.array, Ae = 0, pe = oe.length; Ae < pe; Ae++) {
                  var we = oe[Ae];
                  P.fromArray(ee, 3 * we), He(P, we);
                }
              else {
                Ae = 0;
                for (var he = ee.length / 3; Ae < he; Ae++)
                  P.fromArray(ee, 3 * Ae), He(P, Ae);
              }
            } else {
              var Fe = p.vertices;
              for (Ae = 0, he = Fe.length; Ae < he; Ae++)
                He(Fe[Ae], Ae);
            }
          }
          function He(me, Te) {
            var Le = a.distanceSqToPoint(me);
            if (Le < G) {
              a.closestPointToPoint(me, N), N.applyMatrix4(E);
              var De = l.ray.origin.distanceTo(N);
              if (De < l.near || De > l.far)
                return;
              h.push({ distance: De, distanceToRay: Math.sqrt(Le), point: N.clone(), index: Te, face: null, object: f });
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), lc.prototype = Object.assign(Object.create(un.prototype), { constructor: lc, isVideoTexture: !0, update: function() {
        var t = this.image;
        t.readyState >= t.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
      } }), Ka.prototype = Object.create(un.prototype), Ka.prototype.constructor = Ka, Ka.prototype.isCompressedTexture = !0, $o.prototype = Object.create(un.prototype), $o.prototype.constructor = $o, $o.prototype.isCanvasTexture = !0, jo.prototype = Object.create(un.prototype), jo.prototype.constructor = jo, jo.prototype.isDepthTexture = !0, Za.prototype = Object.create(rr.prototype), Za.prototype.constructor = Za, Yo.prototype = Object.create(Cr.prototype), Yo.prototype.constructor = Yo, Xa.prototype = Object.create(rr.prototype), Xa.prototype.constructor = Xa, Vo.prototype = Object.create(Cr.prototype), Vo.prototype.constructor = Vo, ii.prototype = Object.create(rr.prototype), ii.prototype.constructor = ii, Lo.prototype = Object.create(Cr.prototype), Lo.prototype.constructor = Lo, eo.prototype = Object.create(ii.prototype), eo.prototype.constructor = eo, zo.prototype = Object.create(Cr.prototype), zo.prototype.constructor = zo, ya.prototype = Object.create(ii.prototype), ya.prototype.constructor = ya, Jo.prototype = Object.create(Cr.prototype), Jo.prototype.constructor = Jo, to.prototype = Object.create(ii.prototype), to.prototype.constructor = to, Wo.prototype = Object.create(Cr.prototype), Wo.prototype.constructor = Wo, ro.prototype = Object.create(ii.prototype), ro.prototype.constructor = ro, Ko.prototype = Object.create(Cr.prototype), Ko.prototype.constructor = Ko, no.prototype = Object.create(rr.prototype), no.prototype.constructor = no, Zo.prototype = Object.create(Cr.prototype), Zo.prototype.constructor = Zo, io.prototype = Object.create(rr.prototype), io.prototype.constructor = io, Xo.prototype = Object.create(Cr.prototype), Xo.prototype.constructor = Xo, ao.prototype = Object.create(rr.prototype), ao.prototype.constructor = ao;
      var Tu = function(t, a, A) {
        A = A || 2;
        var l, h, f, p, E, I, S, G = a && a.length, P = G ? a[0] * A : t.length, N = fA(t, 0, P, A, !0), j = [];
        if (!N)
          return j;
        if (G && (N = function(oe, Ae, pe, we) {
          var he, Fe, He, me, Te, Le = [];
          for (he = 0, Fe = Ae.length; he < Fe; he++)
            He = Ae[he] * we, me = he < Fe - 1 ? Ae[he + 1] * we : oe.length, (Te = fA(oe, He, me, we, !1)) === Te.next && (Te.steiner = !0), Le.push(Ou(Te));
          for (Le.sort(Fu), he = 0; he < Le.length; he++)
            Gu(Le[he], pe), pe = es(pe, pe.next);
          return pe;
        }(t, a, N, A)), t.length > 80 * A) {
          l = f = t[0], h = p = t[1];
          for (var ee = A; ee < P; ee += A)
            E = t[ee], I = t[ee + 1], E < l && (l = E), I < h && (h = I), E > f && (f = E), I > p && (p = I);
          S = (S = Math.max(f - l, p - h)) !== 0 ? 1 / S : 0;
        }
        return ts(N, j, A, l, h, S), j;
      };
      function fA(t, a, A, l, h) {
        var f, p;
        if (h === function(E, I, S, G) {
          for (var P = 0, N = I, j = S - G; N < S; N += G)
            P += (E[j] - E[N]) * (E[N + 1] + E[j + 1]), j = N;
          return P;
        }(t, a, A, l) > 0)
          for (f = a; f < A; f += l)
            p = mA(f, t[f], t[f + 1], p);
        else
          for (f = A - l; f >= a; f -= l)
            p = mA(f, t[f], t[f + 1], p);
        return p && Ba(p, p.next) && (ns(p), p = p.next), p;
      }
      function es(t, a) {
        if (!t)
          return t;
        a || (a = t);
        var A, l = t;
        do
          if (A = !1, l.steiner || !Ba(l, l.next) && Xn(l.prev, l, l.next) !== 0)
            l = l.next;
          else {
            if (ns(l), (l = a = l.prev) === l.next)
              break;
            A = !0;
          }
        while (A || l !== a);
        return a;
      }
      function ts(t, a, A, l, h, f, p) {
        if (t) {
          !p && f && function(G, P, N, j) {
            var ee = G;
            do
              ee.z === null && (ee.z = dc(ee.x, ee.y, P, N, j)), ee.prevZ = ee.prev, ee.nextZ = ee.next, ee = ee.next;
            while (ee !== G);
            ee.prevZ.nextZ = null, ee.prevZ = null, function(oe) {
              var Ae, pe, we, he, Fe, He, me, Te, Le = 1;
              do {
                for (pe = oe, oe = null, Fe = null, He = 0; pe; ) {
                  for (He++, we = pe, me = 0, Ae = 0; Ae < Le && (me++, we = we.nextZ); Ae++)
                    ;
                  for (Te = Le; me > 0 || Te > 0 && we; )
                    me !== 0 && (Te === 0 || !we || pe.z <= we.z) ? (he = pe, pe = pe.nextZ, me--) : (he = we, we = we.nextZ, Te--), Fe ? Fe.nextZ = he : oe = he, he.prevZ = Fe, Fe = he;
                  pe = we;
                }
                Fe.nextZ = null, Le *= 2;
              } while (He > 1);
            }(ee);
          }(t, l, h, f);
          for (var E, I, S = t; t.prev !== t.next; )
            if (E = t.prev, I = t.next, f ? Mu(t, l, h, f) : Ru(t))
              a.push(E.i / A), a.push(t.i / A), a.push(I.i / A), ns(t), t = I.next, S = I.next;
            else if ((t = I) === S) {
              p ? p === 1 ? ts(t = Nu(t, a, A), a, A, l, h, f, 2) : p === 2 && ku(t, a, A, l, h, f) : ts(es(t), a, A, l, h, f, 1);
              break;
            }
        }
      }
      function Ru(t) {
        var a = t.prev, A = t, l = t.next;
        if (Xn(a, A, l) >= 0)
          return !1;
        for (var h = t.next.next; h !== t.prev; ) {
          if (Gs(a.x, a.y, A.x, A.y, l.x, l.y, h.x, h.y) && Xn(h.prev, h, h.next) >= 0)
            return !1;
          h = h.next;
        }
        return !0;
      }
      function Mu(t, a, A, l) {
        var h = t.prev, f = t, p = t.next;
        if (Xn(h, f, p) >= 0)
          return !1;
        for (var E = h.x < f.x ? h.x < p.x ? h.x : p.x : f.x < p.x ? f.x : p.x, I = h.y < f.y ? h.y < p.y ? h.y : p.y : f.y < p.y ? f.y : p.y, S = h.x > f.x ? h.x > p.x ? h.x : p.x : f.x > p.x ? f.x : p.x, G = h.y > f.y ? h.y > p.y ? h.y : p.y : f.y > p.y ? f.y : p.y, P = dc(E, I, a, A, l), N = dc(S, G, a, A, l), j = t.nextZ; j && j.z <= N; ) {
          if (j !== t.prev && j !== t.next && Gs(h.x, h.y, f.x, f.y, p.x, p.y, j.x, j.y) && Xn(j.prev, j, j.next) >= 0)
            return !1;
          j = j.nextZ;
        }
        for (j = t.prevZ; j && j.z >= P; ) {
          if (j !== t.prev && j !== t.next && Gs(h.x, h.y, f.x, f.y, p.x, p.y, j.x, j.y) && Xn(j.prev, j, j.next) >= 0)
            return !1;
          j = j.prevZ;
        }
        return !0;
      }
      function Nu(t, a, A) {
        var l = t;
        do {
          var h = l.prev, f = l.next.next;
          !Ba(h, f) && pA(h, l, l.next, f) && rs(h, f) && rs(f, h) && (a.push(h.i / A), a.push(l.i / A), a.push(f.i / A), ns(l), ns(l.next), l = t = f), l = l.next;
        } while (l !== t);
        return l;
      }
      function ku(t, a, A, l, h, f) {
        var p = t;
        do {
          for (var E = p.next.next; E !== p.prev; ) {
            if (p.i !== E.i && Pu(p, E)) {
              var I = gA(p, E);
              return p = es(p, p.next), I = es(I, I.next), ts(p, a, A, l, h, f), void ts(I, a, A, l, h, f);
            }
            E = E.next;
          }
          p = p.next;
        } while (p !== t);
      }
      function Fu(t, a) {
        return t.x - a.x;
      }
      function Gu(t, a) {
        if (a = function(l, h) {
          var f, p = h, E = l.x, I = l.y, S = -1 / 0;
          do {
            if (I <= p.y && I >= p.next.y && p.next.y !== p.y) {
              var G = p.x + (I - p.y) * (p.next.x - p.x) / (p.next.y - p.y);
              if (G <= E && G > S) {
                if (S = G, G === E) {
                  if (I === p.y)
                    return p;
                  if (I === p.next.y)
                    return p.next;
                }
                f = p.x < p.next.x ? p : p.next;
              }
            }
            p = p.next;
          } while (p !== h);
          if (!f)
            return null;
          if (E === S)
            return f.prev;
          var P, N = f, j = f.x, ee = f.y, oe = 1 / 0;
          for (p = f.next; p !== N; )
            E >= p.x && p.x >= j && E !== p.x && Gs(I < ee ? E : S, I, j, ee, I < ee ? S : E, I, p.x, p.y) && ((P = Math.abs(I - p.y) / (E - p.x)) < oe || P === oe && p.x > f.x) && rs(p, l) && (f = p, oe = P), p = p.next;
          return f;
        }(t, a)) {
          var A = gA(a, t);
          es(A, A.next);
        }
      }
      function dc(t, a, A, l, h) {
        return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - A) * h) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (a = 1431655765 & ((a = 858993459 & ((a = 252645135 & ((a = 16711935 & ((a = 32767 * (a - l) * h) | a << 8)) | a << 4)) | a << 2)) | a << 1)) << 1;
      }
      function Ou(t) {
        var a = t, A = t;
        do
          a.x < A.x && (A = a), a = a.next;
        while (a !== t);
        return A;
      }
      function Gs(t, a, A, l, h, f, p, E) {
        return (h - p) * (a - E) - (t - p) * (f - E) >= 0 && (t - p) * (l - E) - (A - p) * (a - E) >= 0 && (A - p) * (f - E) - (h - p) * (l - E) >= 0;
      }
      function Pu(t, a) {
        return t.next.i !== a.i && t.prev.i !== a.i && !function(A, l) {
          var h = A;
          do {
            if (h.i !== A.i && h.next.i !== A.i && h.i !== l.i && h.next.i !== l.i && pA(h, h.next, A, l))
              return !0;
            h = h.next;
          } while (h !== A);
          return !1;
        }(t, a) && rs(t, a) && rs(a, t) && function(A, l) {
          var h = A, f = !1, p = (A.x + l.x) / 2, E = (A.y + l.y) / 2;
          do
            h.y > E != h.next.y > E && h.next.y !== h.y && p < (h.next.x - h.x) * (E - h.y) / (h.next.y - h.y) + h.x && (f = !f), h = h.next;
          while (h !== A);
          return f;
        }(t, a);
      }
      function Xn(t, a, A) {
        return (a.y - t.y) * (A.x - a.x) - (a.x - t.x) * (A.y - a.y);
      }
      function Ba(t, a) {
        return t.x === a.x && t.y === a.y;
      }
      function pA(t, a, A, l) {
        return !!(Ba(t, a) && Ba(A, l) || Ba(t, l) && Ba(A, a)) || Xn(t, a, A) > 0 != Xn(t, a, l) > 0 && Xn(A, l, t) > 0 != Xn(A, l, a) > 0;
      }
      function rs(t, a) {
        return Xn(t.prev, t, t.next) < 0 ? Xn(t, a, t.next) >= 0 && Xn(t, t.prev, a) >= 0 : Xn(t, a, t.prev) < 0 || Xn(t, t.next, a) < 0;
      }
      function gA(t, a) {
        var A = new hc(t.i, t.x, t.y), l = new hc(a.i, a.x, a.y), h = t.next, f = a.prev;
        return t.next = a, a.prev = t, A.next = h, h.prev = A, l.next = A, A.prev = l, f.next = l, l.prev = f, l;
      }
      function mA(t, a, A, l) {
        var h = new hc(t, a, A);
        return l ? (h.next = l.next, h.prev = l, l.next.prev = h, l.next = h) : (h.prev = h, h.next = h), h;
      }
      function ns(t) {
        t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);
      }
      function hc(t, a, A) {
        this.i = t, this.x = a, this.y = A, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
      }
      var Ji = { area: function(t) {
        for (var a = t.length, A = 0, l = a - 1, h = 0; h < a; l = h++)
          A += t[l].x * t[h].y - t[h].x * t[l].y;
        return 0.5 * A;
      }, isClockWise: function(t) {
        return Ji.area(t) < 0;
      }, triangulateShape: function(t, a) {
        var A = [], l = [], h = [];
        EA(t), yA(A, t);
        var f = t.length;
        a.forEach(EA);
        for (var p = 0; p < a.length; p++)
          l.push(f), f += a[p].length, yA(A, a[p]);
        var E = Tu(A, l);
        for (p = 0; p < E.length; p += 3)
          h.push(E.slice(p, p + 3));
        return h;
      } };
      function EA(t) {
        var a = t.length;
        a > 2 && t[a - 1].equals(t[0]) && t.pop();
      }
      function yA(t, a) {
        for (var A = 0; A < a.length; A++)
          t.push(a[A].x), t.push(a[A].y);
      }
      function va(t, a) {
        Cr.call(this), this.type = "ExtrudeGeometry", this.parameters = { shapes: t, options: a }, this.fromBufferGeometry(new ki(t, a)), this.mergeVertices();
      }
      function ki(t, a) {
        rr.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = { shapes: t, options: a };
        for (var A = this, l = [], h = [], f = 0, p = (t = Array.isArray(t) ? t : [t]).length; f < p; f++)
          E(t[f]);
        function E(I) {
          var S = [], G = a.curveSegments !== void 0 ? a.curveSegments : 12, P = a.steps !== void 0 ? a.steps : 1, N = a.depth !== void 0 ? a.depth : 100, j = a.bevelEnabled === void 0 || a.bevelEnabled, ee = a.bevelThickness !== void 0 ? a.bevelThickness : 6, oe = a.bevelSize !== void 0 ? a.bevelSize : ee - 2, Ae = a.bevelSegments !== void 0 ? a.bevelSegments : 3, pe = a.extrudePath, we = a.UVGenerator !== void 0 ? a.UVGenerator : Uu;
          a.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), N = a.amount);
          var he, Fe, He, me, Te, Le, De, at, Ye = !1;
          pe && (he = pe.getSpacedPoints(P), Ye = !0, j = !1, Fe = pe.computeFrenetFrames(P, !1), He = new xe(), me = new xe(), Te = new xe()), j || (Ae = 0, ee = 0, oe = 0);
          var At = I.extractPoints(G), gt = At.shape, xt = At.holes;
          if (!Ji.isClockWise(gt))
            for (gt = gt.reverse(), De = 0, at = xt.length; De < at; De++)
              Le = xt[De], Ji.isClockWise(Le) && (xt[De] = Le.reverse());
          var Bt = Ji.triangulateShape(gt, xt), qt = gt;
          for (De = 0, at = xt.length; De < at; De++)
            Le = xt[De], gt = gt.concat(Le);
          function Ot(Ur, en, sn) {
            return en || console.error("THREE.ExtrudeGeometry: vec does not exist"), en.clone().multiplyScalar(sn).add(Ur);
          }
          var yt, Mt, pt, er, Ut, fr, Ir = gt.length, An = Bt.length;
          function Qn(Ur, en, sn) {
            var Bn, ln, Un, Hn = Ur.x - en.x, qn = Ur.y - en.y, hi = sn.x - Ur.x, Pi = sn.y - Ur.y, Ga = Hn * Hn + qn * qn, nc = Hn * Pi - qn * hi;
            if (Math.abs(nc) > Number.EPSILON) {
              var Ui = Math.sqrt(Ga), ws = Math.sqrt(hi * hi + Pi * Pi), bs = en.x - qn / Ui, W = en.y + Hn / Ui, Se = ((sn.x - Pi / ws - bs) * Pi - (sn.y + hi / ws - W) * hi) / (Hn * Pi - qn * hi), Re = (Bn = bs + Hn * Se - Ur.x) * Bn + (ln = W + qn * Se - Ur.y) * ln;
              if (Re <= 2)
                return new Tt(Bn, ln);
              Un = Math.sqrt(Re / 2);
            } else {
              var it = !1;
              Hn > Number.EPSILON ? hi > Number.EPSILON && (it = !0) : Hn < -Number.EPSILON ? hi < -Number.EPSILON && (it = !0) : Math.sign(qn) === Math.sign(Pi) && (it = !0), it ? (Bn = -qn, ln = Hn, Un = Math.sqrt(Ga)) : (Bn = Hn, ln = qn, Un = Math.sqrt(Ga / 2));
            }
            return new Tt(Bn / Un, ln / Un);
          }
          for (var an = [], Ht = 0, Dr = qt.length, yn = Dr - 1, Ln = Ht + 1; Ht < Dr; Ht++, yn++, Ln++)
            yn === Dr && (yn = 0), Ln === Dr && (Ln = 0), an[Ht] = Qn(qt[Ht], qt[yn], qt[Ln]);
          var bn, ei, Tn = [], Ti = an.concat();
          for (De = 0, at = xt.length; De < at; De++) {
            for (Le = xt[De], bn = [], Ht = 0, yn = (Dr = Le.length) - 1, Ln = Ht + 1; Ht < Dr; Ht++, yn++, Ln++)
              yn === Dr && (yn = 0), Ln === Dr && (Ln = 0), bn[Ht] = Qn(Le[Ht], Le[yn], Le[Ln]);
            Tn.push(bn), Ti = Ti.concat(bn);
          }
          for (yt = 0; yt < Ae; yt++) {
            for (pt = yt / Ae, er = ee * Math.cos(pt * Math.PI / 2), Mt = oe * Math.sin(pt * Math.PI / 2), Ht = 0, Dr = qt.length; Ht < Dr; Ht++)
              Pn((Ut = Ot(qt[Ht], an[Ht], Mt)).x, Ut.y, -er);
            for (De = 0, at = xt.length; De < at; De++)
              for (Le = xt[De], bn = Tn[De], Ht = 0, Dr = Le.length; Ht < Dr; Ht++)
                Pn((Ut = Ot(Le[Ht], bn[Ht], Mt)).x, Ut.y, -er);
          }
          for (Mt = oe, Ht = 0; Ht < Ir; Ht++)
            Ut = j ? Ot(gt[Ht], Ti[Ht], Mt) : gt[Ht], Ye ? (me.copy(Fe.normals[0]).multiplyScalar(Ut.x), He.copy(Fe.binormals[0]).multiplyScalar(Ut.y), Te.copy(he[0]).add(me).add(He), Pn(Te.x, Te.y, Te.z)) : Pn(Ut.x, Ut.y, 0);
          for (ei = 1; ei <= P; ei++)
            for (Ht = 0; Ht < Ir; Ht++)
              Ut = j ? Ot(gt[Ht], Ti[Ht], Mt) : gt[Ht], Ye ? (me.copy(Fe.normals[ei]).multiplyScalar(Ut.x), He.copy(Fe.binormals[ei]).multiplyScalar(Ut.y), Te.copy(he[ei]).add(me).add(He), Pn(Te.x, Te.y, Te.z)) : Pn(Ut.x, Ut.y, N / P * ei);
          for (yt = Ae - 1; yt >= 0; yt--) {
            for (pt = yt / Ae, er = ee * Math.cos(pt * Math.PI / 2), Mt = oe * Math.sin(pt * Math.PI / 2), Ht = 0, Dr = qt.length; Ht < Dr; Ht++)
              Pn((Ut = Ot(qt[Ht], an[Ht], Mt)).x, Ut.y, N + er);
            for (De = 0, at = xt.length; De < at; De++)
              for (Le = xt[De], bn = Tn[De], Ht = 0, Dr = Le.length; Ht < Dr; Ht++)
                Ut = Ot(Le[Ht], bn[Ht], Mt), Ye ? Pn(Ut.x, Ut.y + he[P - 1].y, he[P - 1].x + er) : Pn(Ut.x, Ut.y, N + er);
          }
          function Ri(Ur, en) {
            var sn, Bn;
            for (Ht = Ur.length; --Ht >= 0; ) {
              sn = Ht, (Bn = Ht - 1) < 0 && (Bn = Ur.length - 1);
              var ln = 0, Un = P + 2 * Ae;
              for (ln = 0; ln < Un; ln++) {
                var Hn = Ir * ln, qn = Ir * (ln + 1);
                oa(en + sn + Hn, en + Bn + Hn, en + Bn + qn, en + sn + qn);
              }
            }
          }
          function Pn(Ur, en, sn) {
            S.push(Ur), S.push(en), S.push(sn);
          }
          function Rn(Ur, en, sn) {
            zn(Ur), zn(en), zn(sn);
            var Bn = l.length / 3, ln = we.generateTopUV(A, l, Bn - 3, Bn - 2, Bn - 1);
            mi(ln[0]), mi(ln[1]), mi(ln[2]);
          }
          function oa(Ur, en, sn, Bn) {
            zn(Ur), zn(en), zn(Bn), zn(en), zn(sn), zn(Bn);
            var ln = l.length / 3, Un = we.generateSideWallUV(A, l, ln - 6, ln - 3, ln - 2, ln - 1);
            mi(Un[0]), mi(Un[1]), mi(Un[3]), mi(Un[1]), mi(Un[2]), mi(Un[3]);
          }
          function zn(Ur) {
            l.push(S[3 * Ur + 0]), l.push(S[3 * Ur + 1]), l.push(S[3 * Ur + 2]);
          }
          function mi(Ur) {
            h.push(Ur.x), h.push(Ur.y);
          }
          (function() {
            var Ur = l.length / 3;
            if (j) {
              var en = 0, sn = Ir * en;
              for (Ht = 0; Ht < An; Ht++)
                Rn((fr = Bt[Ht])[2] + sn, fr[1] + sn, fr[0] + sn);
              for (sn = Ir * (en = P + 2 * Ae), Ht = 0; Ht < An; Ht++)
                Rn((fr = Bt[Ht])[0] + sn, fr[1] + sn, fr[2] + sn);
            } else {
              for (Ht = 0; Ht < An; Ht++)
                Rn((fr = Bt[Ht])[2], fr[1], fr[0]);
              for (Ht = 0; Ht < An; Ht++)
                Rn((fr = Bt[Ht])[0] + Ir * P, fr[1] + Ir * P, fr[2] + Ir * P);
            }
            A.addGroup(Ur, l.length / 3 - Ur, 0);
          })(), function() {
            var Ur = l.length / 3, en = 0;
            for (Ri(qt, en), en += qt.length, De = 0, at = xt.length; De < at; De++)
              Ri(Le = xt[De], en), en += Le.length;
            A.addGroup(Ur, l.length / 3 - Ur, 1);
          }();
        }
        this.addAttribute("position", new jt(l, 3)), this.addAttribute("uv", new jt(h, 2)), this.computeVertexNormals();
      }
      va.prototype = Object.create(Cr.prototype), va.prototype.constructor = va, va.prototype.toJSON = function() {
        var t = Cr.prototype.toJSON.call(this);
        return BA(this.parameters.shapes, this.parameters.options, t);
      }, ki.prototype = Object.create(rr.prototype), ki.prototype.constructor = ki, ki.prototype.toJSON = function() {
        var t = rr.prototype.toJSON.call(this);
        return BA(this.parameters.shapes, this.parameters.options, t);
      };
      var Uu = { generateTopUV: function(t, a, A, l, h) {
        var f = a[3 * A], p = a[3 * A + 1], E = a[3 * l], I = a[3 * l + 1], S = a[3 * h], G = a[3 * h + 1];
        return [new Tt(f, p), new Tt(E, I), new Tt(S, G)];
      }, generateSideWallUV: function(t, a, A, l, h, f) {
        var p = a[3 * A], E = a[3 * A + 1], I = a[3 * A + 2], S = a[3 * l], G = a[3 * l + 1], P = a[3 * l + 2], N = a[3 * h], j = a[3 * h + 1], ee = a[3 * h + 2], oe = a[3 * f], Ae = a[3 * f + 1], pe = a[3 * f + 2];
        return Math.abs(E - G) < 0.01 ? [new Tt(p, 1 - I), new Tt(S, 1 - P), new Tt(N, 1 - ee), new Tt(oe, 1 - pe)] : [new Tt(E, 1 - I), new Tt(G, 1 - P), new Tt(j, 1 - ee), new Tt(Ae, 1 - pe)];
      } };
      function BA(t, a, A) {
        if (A.shapes = [], Array.isArray(t))
          for (var l = 0, h = t.length; l < h; l++) {
            var f = t[l];
            A.shapes.push(f.uuid);
          }
        else
          A.shapes.push(t.uuid);
        return a.extrudePath !== void 0 && (A.options.extrudePath = a.extrudePath.toJSON()), A;
      }
      function is(t, a) {
        Cr.call(this), this.type = "TextGeometry", this.parameters = { text: t, parameters: a }, this.fromBufferGeometry(new oo(t, a)), this.mergeVertices();
      }
      function oo(t, a) {
        var A = (a = a || {}).font;
        if (!A || !A.isFont)
          return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new Cr();
        var l = A.generateShapes(t, a.size);
        a.depth = a.height !== void 0 ? a.height : 50, a.bevelThickness === void 0 && (a.bevelThickness = 10), a.bevelSize === void 0 && (a.bevelSize = 8), a.bevelEnabled === void 0 && (a.bevelEnabled = !1), ki.call(this, l, a), this.type = "TextBufferGeometry";
      }
      function as(t, a, A, l, h, f, p) {
        Cr.call(this), this.type = "SphereGeometry", this.parameters = { radius: t, widthSegments: a, heightSegments: A, phiStart: l, phiLength: h, thetaStart: f, thetaLength: p }, this.fromBufferGeometry(new Ca(t, a, A, l, h, f, p)), this.mergeVertices();
      }
      function Ca(t, a, A, l, h, f, p) {
        rr.call(this), this.type = "SphereBufferGeometry", this.parameters = { radius: t, widthSegments: a, heightSegments: A, phiStart: l, phiLength: h, thetaStart: f, thetaLength: p }, t = t || 1, a = Math.max(3, Math.floor(a) || 8), A = Math.max(2, Math.floor(A) || 6), l = l !== void 0 ? l : 0, h = h !== void 0 ? h : 2 * Math.PI;
        var E, I, S = (f = f !== void 0 ? f : 0) + (p = p !== void 0 ? p : Math.PI), G = 0, P = [], N = new xe(), j = new xe(), ee = [], oe = [], Ae = [], pe = [];
        for (I = 0; I <= A; I++) {
          var we = [], he = I / A;
          for (E = 0; E <= a; E++) {
            var Fe = E / a;
            N.x = -t * Math.cos(l + Fe * h) * Math.sin(f + he * p), N.y = t * Math.cos(f + he * p), N.z = t * Math.sin(l + Fe * h) * Math.sin(f + he * p), oe.push(N.x, N.y, N.z), j.set(N.x, N.y, N.z).normalize(), Ae.push(j.x, j.y, j.z), pe.push(Fe, 1 - he), we.push(G++);
          }
          P.push(we);
        }
        for (I = 0; I < A; I++)
          for (E = 0; E < a; E++) {
            var He = P[I][E + 1], me = P[I][E], Te = P[I + 1][E], Le = P[I + 1][E + 1];
            (I !== 0 || f > 0) && ee.push(He, me, Le), (I !== A - 1 || S < Math.PI) && ee.push(me, Te, Le);
          }
        this.setIndex(ee), this.addAttribute("position", new jt(oe, 3)), this.addAttribute("normal", new jt(Ae, 3)), this.addAttribute("uv", new jt(pe, 2));
      }
      function os(t, a, A, l, h, f) {
        Cr.call(this), this.type = "RingGeometry", this.parameters = { innerRadius: t, outerRadius: a, thetaSegments: A, phiSegments: l, thetaStart: h, thetaLength: f }, this.fromBufferGeometry(new so(t, a, A, l, h, f)), this.mergeVertices();
      }
      function so(t, a, A, l, h, f) {
        rr.call(this), this.type = "RingBufferGeometry", this.parameters = { innerRadius: t, outerRadius: a, thetaSegments: A, phiSegments: l, thetaStart: h, thetaLength: f }, t = t || 0.5, a = a || 1, h = h !== void 0 ? h : 0, f = f !== void 0 ? f : 2 * Math.PI, A = A !== void 0 ? Math.max(3, A) : 8;
        var p, E, I, S = [], G = [], P = [], N = [], j = t, ee = (a - t) / (l = l !== void 0 ? Math.max(1, l) : 1), oe = new xe(), Ae = new Tt();
        for (E = 0; E <= l; E++) {
          for (I = 0; I <= A; I++)
            p = h + I / A * f, oe.x = j * Math.cos(p), oe.y = j * Math.sin(p), G.push(oe.x, oe.y, oe.z), P.push(0, 0, 1), Ae.x = (oe.x / a + 1) / 2, Ae.y = (oe.y / a + 1) / 2, N.push(Ae.x, Ae.y);
          j += ee;
        }
        for (E = 0; E < l; E++) {
          var pe = E * (A + 1);
          for (I = 0; I < A; I++) {
            var we = p = I + pe, he = p + A + 1, Fe = p + A + 2, He = p + 1;
            S.push(we, he, He), S.push(he, Fe, He);
          }
        }
        this.setIndex(S), this.addAttribute("position", new jt(G, 3)), this.addAttribute("normal", new jt(P, 3)), this.addAttribute("uv", new jt(N, 2));
      }
      function ss(t, a, A, l) {
        Cr.call(this), this.type = "LatheGeometry", this.parameters = { points: t, segments: a, phiStart: A, phiLength: l }, this.fromBufferGeometry(new co(t, a, A, l)), this.mergeVertices();
      }
      function co(t, a, A, l) {
        rr.call(this), this.type = "LatheBufferGeometry", this.parameters = { points: t, segments: a, phiStart: A, phiLength: l }, a = Math.floor(a) || 12, A = A || 0, l = l || 2 * Math.PI, l = Rr.clamp(l, 0, 2 * Math.PI);
        var h, f, p, E = [], I = [], S = [], G = 1 / a, P = new xe(), N = new Tt();
        for (f = 0; f <= a; f++) {
          var j = A + f * G * l, ee = Math.sin(j), oe = Math.cos(j);
          for (p = 0; p <= t.length - 1; p++)
            P.x = t[p].x * ee, P.y = t[p].y, P.z = t[p].x * oe, I.push(P.x, P.y, P.z), N.x = f / a, N.y = p / (t.length - 1), S.push(N.x, N.y);
        }
        for (f = 0; f < a; f++)
          for (p = 0; p < t.length - 1; p++) {
            var Ae = h = p + f * t.length, pe = h + t.length, we = h + t.length + 1, he = h + 1;
            E.push(Ae, pe, he), E.push(pe, we, he);
          }
        if (this.setIndex(E), this.addAttribute("position", new jt(I, 3)), this.addAttribute("uv", new jt(S, 2)), this.computeVertexNormals(), l === 2 * Math.PI) {
          var Fe = this.attributes.normal.array, He = new xe(), me = new xe(), Te = new xe();
          for (h = a * t.length * 3, f = 0, p = 0; f < t.length; f++, p += 3)
            He.x = Fe[p + 0], He.y = Fe[p + 1], He.z = Fe[p + 2], me.x = Fe[h + p + 0], me.y = Fe[h + p + 1], me.z = Fe[h + p + 2], Te.addVectors(He, me).normalize(), Fe[p + 0] = Fe[h + p + 0] = Te.x, Fe[p + 1] = Fe[h + p + 1] = Te.y, Fe[p + 2] = Fe[h + p + 2] = Te.z;
        }
      }
      function Ia(t, a) {
        Cr.call(this), this.type = "ShapeGeometry", typeof a == "object" && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), a = a.curveSegments), this.parameters = { shapes: t, curveSegments: a }, this.fromBufferGeometry(new xa(t, a)), this.mergeVertices();
      }
      function xa(t, a) {
        rr.call(this), this.type = "ShapeBufferGeometry", this.parameters = { shapes: t, curveSegments: a }, a = a || 12;
        var A = [], l = [], h = [], f = [], p = 0, E = 0;
        if (Array.isArray(t) === !1)
          S(t);
        else
          for (var I = 0; I < t.length; I++)
            S(t[I]), this.addGroup(p, E, I), p += E, E = 0;
        function S(G) {
          var P, N, j, ee = l.length / 3, oe = G.extractPoints(a), Ae = oe.shape, pe = oe.holes;
          if (Ji.isClockWise(Ae) === !1)
            for (Ae = Ae.reverse(), P = 0, N = pe.length; P < N; P++)
              j = pe[P], Ji.isClockWise(j) === !0 && (pe[P] = j.reverse());
          var we = Ji.triangulateShape(Ae, pe);
          for (P = 0, N = pe.length; P < N; P++)
            j = pe[P], Ae = Ae.concat(j);
          for (P = 0, N = Ae.length; P < N; P++) {
            var he = Ae[P];
            l.push(he.x, he.y, 0), h.push(0, 0, 1), f.push(he.x, he.y);
          }
          for (P = 0, N = we.length; P < N; P++) {
            var Fe = we[P], He = Fe[0] + ee, me = Fe[1] + ee, Te = Fe[2] + ee;
            A.push(He, me, Te), E += 3;
          }
        }
        this.setIndex(A), this.addAttribute("position", new jt(l, 3)), this.addAttribute("normal", new jt(h, 3)), this.addAttribute("uv", new jt(f, 2));
      }
      function vA(t, a) {
        if (a.shapes = [], Array.isArray(t))
          for (var A = 0, l = t.length; A < l; A++) {
            var h = t[A];
            a.shapes.push(h.uuid);
          }
        else
          a.shapes.push(t.uuid);
        return a;
      }
      function Ao(t, a) {
        rr.call(this), this.type = "EdgesGeometry", this.parameters = { thresholdAngle: a }, a = a !== void 0 ? a : 1;
        var A, l, h, f, p = [], E = Math.cos(Rr.DEG2RAD * a), I = [0, 0], S = {}, G = ["a", "b", "c"];
        t.isBufferGeometry ? (f = new Cr()).fromBufferGeometry(t) : f = t.clone(), f.mergeVertices(), f.computeFaceNormals();
        for (var P = f.vertices, N = f.faces, j = 0, ee = N.length; j < ee; j++)
          for (var oe = N[j], Ae = 0; Ae < 3; Ae++)
            A = oe[G[Ae]], l = oe[G[(Ae + 1) % 3]], I[0] = Math.min(A, l), I[1] = Math.max(A, l), S[h = I[0] + "," + I[1]] === void 0 ? S[h] = { index1: I[0], index2: I[1], face1: j, face2: void 0 } : S[h].face2 = j;
        for (h in S) {
          var pe = S[h];
          if (pe.face2 === void 0 || N[pe.face1].normal.dot(N[pe.face2].normal) <= E) {
            var we = P[pe.index1];
            p.push(we.x, we.y, we.z), we = P[pe.index2], p.push(we.x, we.y, we.z);
          }
        }
        this.addAttribute("position", new jt(p, 3));
      }
      function wa(t, a, A, l, h, f, p, E) {
        Cr.call(this), this.type = "CylinderGeometry", this.parameters = { radiusTop: t, radiusBottom: a, height: A, radialSegments: l, heightSegments: h, openEnded: f, thetaStart: p, thetaLength: E }, this.fromBufferGeometry(new Wi(t, a, A, l, h, f, p, E)), this.mergeVertices();
      }
      function Wi(t, a, A, l, h, f, p, E) {
        rr.call(this), this.type = "CylinderBufferGeometry", this.parameters = { radiusTop: t, radiusBottom: a, height: A, radialSegments: l, heightSegments: h, openEnded: f, thetaStart: p, thetaLength: E };
        var I = this;
        t = t !== void 0 ? t : 1, a = a !== void 0 ? a : 1, A = A || 1, l = Math.floor(l) || 8, h = Math.floor(h) || 1, f = f !== void 0 && f, p = p !== void 0 ? p : 0, E = E !== void 0 ? E : 2 * Math.PI;
        var S = [], G = [], P = [], N = [], j = 0, ee = [], oe = A / 2, Ae = 0;
        function pe(we) {
          var he, Fe, He, me = new Tt(), Te = new xe(), Le = 0, De = we === !0 ? t : a, at = we === !0 ? 1 : -1;
          for (Fe = j, he = 1; he <= l; he++)
            G.push(0, oe * at, 0), P.push(0, at, 0), N.push(0.5, 0.5), j++;
          for (He = j, he = 0; he <= l; he++) {
            var Ye = he / l * E + p, At = Math.cos(Ye), gt = Math.sin(Ye);
            Te.x = De * gt, Te.y = oe * at, Te.z = De * At, G.push(Te.x, Te.y, Te.z), P.push(0, at, 0), me.x = 0.5 * At + 0.5, me.y = 0.5 * gt * at + 0.5, N.push(me.x, me.y), j++;
          }
          for (he = 0; he < l; he++) {
            var xt = Fe + he, Bt = He + he;
            we === !0 ? S.push(Bt, Bt + 1, xt) : S.push(Bt + 1, Bt, xt), Le += 3;
          }
          I.addGroup(Ae, Le, we === !0 ? 1 : 2), Ae += Le;
        }
        (function() {
          var we, he, Fe = new xe(), He = new xe(), me = 0, Te = (a - t) / A;
          for (he = 0; he <= h; he++) {
            var Le = [], De = he / h, at = De * (a - t) + t;
            for (we = 0; we <= l; we++) {
              var Ye = we / l, At = Ye * E + p, gt = Math.sin(At), xt = Math.cos(At);
              He.x = at * gt, He.y = -De * A + oe, He.z = at * xt, G.push(He.x, He.y, He.z), Fe.set(gt, Te, xt).normalize(), P.push(Fe.x, Fe.y, Fe.z), N.push(Ye, 1 - De), Le.push(j++);
            }
            ee.push(Le);
          }
          for (we = 0; we < l; we++)
            for (he = 0; he < h; he++) {
              var Bt = ee[he][we], qt = ee[he + 1][we], Ot = ee[he + 1][we + 1], yt = ee[he][we + 1];
              S.push(Bt, qt, yt), S.push(qt, Ot, yt), me += 6;
            }
          I.addGroup(Ae, me, 0), Ae += me;
        })(), f === !1 && (t > 0 && pe(!0), a > 0 && pe(!1)), this.setIndex(S), this.addAttribute("position", new jt(G, 3)), this.addAttribute("normal", new jt(P, 3)), this.addAttribute("uv", new jt(N, 2));
      }
      function cs(t, a, A, l, h, f, p) {
        wa.call(this, 0, t, a, A, l, h, f, p), this.type = "ConeGeometry", this.parameters = { radius: t, height: a, radialSegments: A, heightSegments: l, openEnded: h, thetaStart: f, thetaLength: p };
      }
      function As(t, a, A, l, h, f, p) {
        Wi.call(this, 0, t, a, A, l, h, f, p), this.type = "ConeBufferGeometry", this.parameters = { radius: t, height: a, radialSegments: A, heightSegments: l, openEnded: h, thetaStart: f, thetaLength: p };
      }
      function us(t, a, A, l) {
        Cr.call(this), this.type = "CircleGeometry", this.parameters = { radius: t, segments: a, thetaStart: A, thetaLength: l }, this.fromBufferGeometry(new uo(t, a, A, l)), this.mergeVertices();
      }
      function uo(t, a, A, l) {
        rr.call(this), this.type = "CircleBufferGeometry", this.parameters = { radius: t, segments: a, thetaStart: A, thetaLength: l }, t = t || 1, a = a !== void 0 ? Math.max(3, a) : 8, A = A !== void 0 ? A : 0, l = l !== void 0 ? l : 2 * Math.PI;
        var h, f, p = [], E = [], I = [], S = [], G = new xe(), P = new Tt();
        for (E.push(0, 0, 0), I.push(0, 0, 1), S.push(0.5, 0.5), f = 0, h = 3; f <= a; f++, h += 3) {
          var N = A + f / a * l;
          G.x = t * Math.cos(N), G.y = t * Math.sin(N), E.push(G.x, G.y, G.z), I.push(0, 0, 1), P.x = (E[h] / t + 1) / 2, P.y = (E[h + 1] / t + 1) / 2, S.push(P.x, P.y);
        }
        for (h = 1; h <= a; h++)
          p.push(h, h + 1, 0);
        this.setIndex(p), this.addAttribute("position", new jt(E, 3)), this.addAttribute("normal", new jt(I, 3)), this.addAttribute("uv", new jt(S, 2));
      }
      is.prototype = Object.create(Cr.prototype), is.prototype.constructor = is, oo.prototype = Object.create(ki.prototype), oo.prototype.constructor = oo, as.prototype = Object.create(Cr.prototype), as.prototype.constructor = as, Ca.prototype = Object.create(rr.prototype), Ca.prototype.constructor = Ca, os.prototype = Object.create(Cr.prototype), os.prototype.constructor = os, so.prototype = Object.create(rr.prototype), so.prototype.constructor = so, ss.prototype = Object.create(Cr.prototype), ss.prototype.constructor = ss, co.prototype = Object.create(rr.prototype), co.prototype.constructor = co, Ia.prototype = Object.create(Cr.prototype), Ia.prototype.constructor = Ia, Ia.prototype.toJSON = function() {
        var t = Cr.prototype.toJSON.call(this);
        return vA(this.parameters.shapes, t);
      }, xa.prototype = Object.create(rr.prototype), xa.prototype.constructor = xa, xa.prototype.toJSON = function() {
        var t = rr.prototype.toJSON.call(this);
        return vA(this.parameters.shapes, t);
      }, Ao.prototype = Object.create(rr.prototype), Ao.prototype.constructor = Ao, wa.prototype = Object.create(Cr.prototype), wa.prototype.constructor = wa, Wi.prototype = Object.create(rr.prototype), Wi.prototype.constructor = Wi, cs.prototype = Object.create(wa.prototype), cs.prototype.constructor = cs, As.prototype = Object.create(Wi.prototype), As.prototype.constructor = As, us.prototype = Object.create(Cr.prototype), us.prototype.constructor = us, uo.prototype = Object.create(rr.prototype), uo.prototype.constructor = uo;
      var ai = Object.freeze({ WireframeGeometry: Za, ParametricGeometry: Yo, ParametricBufferGeometry: Xa, TetrahedronGeometry: Lo, TetrahedronBufferGeometry: eo, OctahedronGeometry: zo, OctahedronBufferGeometry: ya, IcosahedronGeometry: Jo, IcosahedronBufferGeometry: to, DodecahedronGeometry: Wo, DodecahedronBufferGeometry: ro, PolyhedronGeometry: Vo, PolyhedronBufferGeometry: ii, TubeGeometry: Ko, TubeBufferGeometry: no, TorusKnotGeometry: Zo, TorusKnotBufferGeometry: io, TorusGeometry: Xo, TorusBufferGeometry: ao, TextGeometry: is, TextBufferGeometry: oo, SphereGeometry: as, SphereBufferGeometry: Ca, RingGeometry: os, RingBufferGeometry: so, PlaneGeometry: Go, PlaneBufferGeometry: ga, LatheGeometry: ss, LatheBufferGeometry: co, ShapeGeometry: Ia, ShapeBufferGeometry: xa, ExtrudeGeometry: va, ExtrudeBufferGeometry: ki, EdgesGeometry: Ao, ConeGeometry: cs, ConeBufferGeometry: As, CylinderGeometry: wa, CylinderBufferGeometry: Wi, CircleGeometry: us, CircleBufferGeometry: uo, BoxGeometry: ja, BoxBufferGeometry: pa });
      function ba(t) {
        Nr.call(this), this.type = "ShadowMaterial", this.color = new dr(0), this.transparent = !0, this.setValues(t);
      }
      function lo(t) {
        pi.call(this, t), this.type = "RawShaderMaterial";
      }
      function Fi(t) {
        Nr.call(this), this.defines = { STANDARD: "" }, this.type = "MeshStandardMaterial", this.color = new dr(16777215), this.roughness = 0.5, this.metalness = 0.5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new dr(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ji, this.normalScale = new Tt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t);
      }
      function _a(t) {
        Fi.call(this), this.defines = { PHYSICAL: "" }, this.type = "MeshPhysicalMaterial", this.reflectivity = 0.5, this.clearCoat = 0, this.clearCoatRoughness = 0, this.setValues(t);
      }
      function Ii(t) {
        Nr.call(this), this.type = "MeshPhongMaterial", this.color = new dr(16777215), this.specular = new dr(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new dr(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ji, this.normalScale = new Tt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = U, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t);
      }
      function Qa(t) {
        Ii.call(this), this.defines = { TOON: "" }, this.type = "MeshToonMaterial", this.gradientMap = null, this.setValues(t);
      }
      function Sa(t) {
        Nr.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = ji, this.normalScale = new Tt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t);
      }
      function Ta(t) {
        Nr.call(this), this.type = "MeshLambertMaterial", this.color = new dr(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new dr(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = U, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t);
      }
      function Ra(t) {
        on.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(t);
      }
      ba.prototype = Object.create(Nr.prototype), ba.prototype.constructor = ba, ba.prototype.isShadowMaterial = !0, ba.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.color.copy(t.color), this;
      }, lo.prototype = Object.create(pi.prototype), lo.prototype.constructor = lo, lo.prototype.isRawShaderMaterial = !0, Fi.prototype = Object.create(Nr.prototype), Fi.prototype.constructor = Fi, Fi.prototype.isMeshStandardMaterial = !0, Fi.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.defines = { STANDARD: "" }, this.color.copy(t.color), this.roughness = t.roughness, this.metalness = t.metalness, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.roughnessMap = t.roughnessMap, this.metalnessMap = t.metalnessMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.envMapIntensity = t.envMapIntensity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this;
      }, _a.prototype = Object.create(Fi.prototype), _a.prototype.constructor = _a, _a.prototype.isMeshPhysicalMaterial = !0, _a.prototype.copy = function(t) {
        return Fi.prototype.copy.call(this, t), this.defines = { PHYSICAL: "" }, this.reflectivity = t.reflectivity, this.clearCoat = t.clearCoat, this.clearCoatRoughness = t.clearCoatRoughness, this;
      }, Ii.prototype = Object.create(Nr.prototype), Ii.prototype.constructor = Ii, Ii.prototype.isMeshPhongMaterial = !0, Ii.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.color.copy(t.color), this.specular.copy(t.specular), this.shininess = t.shininess, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this;
      }, Qa.prototype = Object.create(Ii.prototype), Qa.prototype.constructor = Qa, Qa.prototype.isMeshToonMaterial = !0, Qa.prototype.copy = function(t) {
        return Ii.prototype.copy.call(this, t), this.gradientMap = t.gradientMap, this;
      }, Sa.prototype = Object.create(Nr.prototype), Sa.prototype.constructor = Sa, Sa.prototype.isMeshNormalMaterial = !0, Sa.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this;
      }, Ta.prototype = Object.create(Nr.prototype), Ta.prototype.constructor = Ta, Ta.prototype.isMeshLambertMaterial = !0, Ta.prototype.copy = function(t) {
        return Nr.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this;
      }, Ra.prototype = Object.create(on.prototype), Ra.prototype.constructor = Ra, Ra.prototype.isLineDashedMaterial = !0, Ra.prototype.copy = function(t) {
        return on.prototype.copy.call(this, t), this.scale = t.scale, this.dashSize = t.dashSize, this.gapSize = t.gapSize, this;
      };
      var Hu = Object.freeze({ ShadowMaterial: ba, SpriteMaterial: ia, RawShaderMaterial: lo, ShaderMaterial: pi, PointsMaterial: Ci, MeshPhysicalMaterial: _a, MeshStandardMaterial: Fi, MeshPhongMaterial: Ii, MeshToonMaterial: Qa, MeshNormalMaterial: Sa, MeshLambertMaterial: Ta, MeshDepthMaterial: ra, MeshDistanceMaterial: na, MeshBasicMaterial: Ai, LineDashedMaterial: Ra, LineBasicMaterial: on, Material: Nr }), Ma = { enabled: !1, files: {}, add: function(t, a) {
        this.enabled !== !1 && (this.files[t] = a);
      }, get: function(t) {
        if (this.enabled !== !1)
          return this.files[t];
      }, remove: function(t) {
        delete this.files[t];
      }, clear: function() {
        this.files = {};
      } };
      function fc(t, a, A) {
        var l = this, h = !1, f = 0, p = 0, E = void 0;
        this.onStart = void 0, this.onLoad = t, this.onProgress = a, this.onError = A, this.itemStart = function(I) {
          p++, h === !1 && l.onStart !== void 0 && l.onStart(I, f, p), h = !0;
        }, this.itemEnd = function(I) {
          f++, l.onProgress !== void 0 && l.onProgress(I, f, p), f === p && (h = !1, l.onLoad !== void 0 && l.onLoad());
        }, this.itemError = function(I) {
          l.onError !== void 0 && l.onError(I);
        }, this.resolveURL = function(I) {
          return E ? E(I) : I;
        }, this.setURLModifier = function(I) {
          return E = I, this;
        };
      }
      var oi = new fc(), Ki = {};
      function xi(t) {
        this.manager = t !== void 0 ? t : oi;
      }
      function CA(t) {
        this.manager = t !== void 0 ? t : oi, this._parser = null;
      }
      function pc(t) {
        this.manager = t !== void 0 ? t : oi, this._parser = null;
      }
      function ls(t) {
        this.manager = t !== void 0 ? t : oi;
      }
      function gc(t) {
        this.manager = t !== void 0 ? t : oi;
      }
      function Os(t) {
        this.manager = t !== void 0 ? t : oi;
      }
      function gr() {
        this.type = "Curve", this.arcLengthDivisions = 200;
      }
      function li(t, a, A, l, h, f, p, E) {
        gr.call(this), this.type = "EllipseCurve", this.aX = t || 0, this.aY = a || 0, this.xRadius = A || 1, this.yRadius = l || 1, this.aStartAngle = h || 0, this.aEndAngle = f || 2 * Math.PI, this.aClockwise = p || !1, this.aRotation = E || 0;
      }
      function ho(t, a, A, l, h, f) {
        li.call(this, t, a, A, A, l, h, f), this.type = "ArcCurve";
      }
      function mc() {
        var t = 0, a = 0, A = 0, l = 0;
        function h(f, p, E, I) {
          t = f, a = E, A = -3 * f + 3 * p - 2 * E - I, l = 2 * f - 2 * p + E + I;
        }
        return { initCatmullRom: function(f, p, E, I, S) {
          h(p, E, S * (E - f), S * (I - p));
        }, initNonuniformCatmullRom: function(f, p, E, I, S, G, P) {
          var N = (p - f) / S - (E - f) / (S + G) + (E - p) / G, j = (E - p) / G - (I - p) / (G + P) + (I - E) / P;
          h(p, E, N *= G, j *= G);
        }, calc: function(f) {
          var p = f * f;
          return t + a * f + A * p + l * (p * f);
        } };
      }
      Object.assign(xi.prototype, { load: function(t, a, A, l) {
        t === void 0 && (t = ""), this.path !== void 0 && (t = this.path + t), t = this.manager.resolveURL(t);
        var h = this, f = Ma.get(t);
        if (f !== void 0)
          return h.manager.itemStart(t), setTimeout(function() {
            a && a(f), h.manager.itemEnd(t);
          }, 0), f;
        if (Ki[t] === void 0) {
          var p = t.match(/^data:(.*?)(;base64)?,(.*)$/);
          if (p) {
            var E = p[1], I = !!p[2], S = p[3];
            S = window.decodeURIComponent(S), I && (S = window.atob(S));
            try {
              var G, P = (this.responseType || "").toLowerCase();
              switch (P) {
                case "arraybuffer":
                case "blob":
                  for (var N = new Uint8Array(S.length), j = 0; j < S.length; j++)
                    N[j] = S.charCodeAt(j);
                  G = P === "blob" ? new Blob([N.buffer], { type: E }) : N.buffer;
                  break;
                case "document":
                  var ee = new DOMParser();
                  G = ee.parseFromString(S, E);
                  break;
                case "json":
                  G = JSON.parse(S);
                  break;
                default:
                  G = S;
              }
              window.setTimeout(function() {
                a && a(G), h.manager.itemEnd(t);
              }, 0);
            } catch (pe) {
              window.setTimeout(function() {
                l && l(pe), h.manager.itemEnd(t), h.manager.itemError(t);
              }, 0);
            }
          } else {
            Ki[t] = [], Ki[t].push({ onLoad: a, onProgress: A, onError: l });
            var oe = new XMLHttpRequest();
            for (var Ae in oe.open("GET", t, !0), oe.addEventListener("load", function(pe) {
              var we = this.response;
              Ma.add(t, we);
              var he = Ki[t];
              if (delete Ki[t], this.status === 200 || this.status === 0) {
                this.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received.");
                for (var Fe = 0, He = he.length; Fe < He; Fe++)
                  (me = he[Fe]).onLoad && me.onLoad(we);
                h.manager.itemEnd(t);
              } else {
                for (Fe = 0, He = he.length; Fe < He; Fe++) {
                  var me;
                  (me = he[Fe]).onError && me.onError(pe);
                }
                h.manager.itemEnd(t), h.manager.itemError(t);
              }
            }, !1), oe.addEventListener("progress", function(pe) {
              for (var we = Ki[t], he = 0, Fe = we.length; he < Fe; he++) {
                var He = we[he];
                He.onProgress && He.onProgress(pe);
              }
            }, !1), oe.addEventListener("error", function(pe) {
              var we = Ki[t];
              delete Ki[t];
              for (var he = 0, Fe = we.length; he < Fe; he++) {
                var He = we[he];
                He.onError && He.onError(pe);
              }
              h.manager.itemEnd(t), h.manager.itemError(t);
            }, !1), this.responseType !== void 0 && (oe.responseType = this.responseType), this.withCredentials !== void 0 && (oe.withCredentials = this.withCredentials), oe.overrideMimeType && oe.overrideMimeType(this.mimeType !== void 0 ? this.mimeType : "text/plain"), this.requestHeader)
              oe.setRequestHeader(Ae, this.requestHeader[Ae]);
            oe.send(null);
          }
          return h.manager.itemStart(t), oe;
        }
        Ki[t].push({ onLoad: a, onProgress: A, onError: l });
      }, setPath: function(t) {
        return this.path = t, this;
      }, setResponseType: function(t) {
        return this.responseType = t, this;
      }, setWithCredentials: function(t) {
        return this.withCredentials = t, this;
      }, setMimeType: function(t) {
        return this.mimeType = t, this;
      }, setRequestHeader: function(t) {
        return this.requestHeader = t, this;
      } }), Object.assign(CA.prototype, { load: function(t, a, A, l) {
        var h = this, f = [], p = new Ka();
        p.image = f;
        var E = new xi(this.manager);
        function I(N) {
          E.load(t[N], function(j) {
            var ee = h._parser(j, !0);
            f[N] = { width: ee.width, height: ee.height, format: ee.format, mipmaps: ee.mipmaps }, (S += 1) === 6 && (ee.mipmapCount === 1 && (p.minFilter = ur), p.format = ee.format, p.needsUpdate = !0, a && a(p));
          }, A, l);
        }
        if (E.setPath(this.path), E.setResponseType("arraybuffer"), Array.isArray(t))
          for (var S = 0, G = 0, P = t.length; G < P; ++G)
            I(G);
        else
          E.load(t, function(N) {
            var j = h._parser(N, !0);
            if (j.isCubemap)
              for (var ee = j.mipmaps.length / j.mipmapCount, oe = 0; oe < ee; oe++) {
                f[oe] = { mipmaps: [] };
                for (var Ae = 0; Ae < j.mipmapCount; Ae++)
                  f[oe].mipmaps.push(j.mipmaps[oe * j.mipmapCount + Ae]), f[oe].format = j.format, f[oe].width = j.width, f[oe].height = j.height;
              }
            else
              p.image.width = j.width, p.image.height = j.height, p.mipmaps = j.mipmaps;
            j.mipmapCount === 1 && (p.minFilter = ur), p.format = j.format, p.needsUpdate = !0, a && a(p);
          }, A, l);
        return p;
      }, setPath: function(t) {
        return this.path = t, this;
      } }), Object.assign(pc.prototype, { load: function(t, a, A, l) {
        var h = this, f = new ua(), p = new xi(this.manager);
        return p.setResponseType("arraybuffer"), p.load(t, function(E) {
          var I = h._parser(E);
          I && (I.image !== void 0 ? f.image = I.image : I.data !== void 0 && (f.image.width = I.width, f.image.height = I.height, f.image.data = I.data), f.wrapS = I.wrapS !== void 0 ? I.wrapS : Qt, f.wrapT = I.wrapT !== void 0 ? I.wrapT : Qt, f.magFilter = I.magFilter !== void 0 ? I.magFilter : ur, f.minFilter = I.minFilter !== void 0 ? I.minFilter : zr, f.anisotropy = I.anisotropy !== void 0 ? I.anisotropy : 1, I.format !== void 0 && (f.format = I.format), I.type !== void 0 && (f.type = I.type), I.mipmaps !== void 0 && (f.mipmaps = I.mipmaps), I.mipmapCount === 1 && (f.minFilter = ur), f.needsUpdate = !0, a && a(f, I));
        }, A, l), f;
      } }), Object.assign(ls.prototype, { crossOrigin: "anonymous", load: function(t, a, A, l) {
        t === void 0 && (t = ""), this.path !== void 0 && (t = this.path + t), t = this.manager.resolveURL(t);
        var h = this, f = Ma.get(t);
        if (f !== void 0)
          return h.manager.itemStart(t), setTimeout(function() {
            a && a(f), h.manager.itemEnd(t);
          }, 0), f;
        var p = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
        function E() {
          p.removeEventListener("load", E, !1), p.removeEventListener("error", I, !1), Ma.add(t, this), a && a(this), h.manager.itemEnd(t);
        }
        function I(S) {
          p.removeEventListener("load", E, !1), p.removeEventListener("error", I, !1), l && l(S), h.manager.itemEnd(t), h.manager.itemError(t);
        }
        return p.addEventListener("load", E, !1), p.addEventListener("error", I, !1), t.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (p.crossOrigin = this.crossOrigin), h.manager.itemStart(t), p.src = t, p;
      }, setCrossOrigin: function(t) {
        return this.crossOrigin = t, this;
      }, setPath: function(t) {
        return this.path = t, this;
      } }), Object.assign(gc.prototype, { crossOrigin: "anonymous", load: function(t, a, A, l) {
        var h = new zi(), f = new ls(this.manager);
        f.setCrossOrigin(this.crossOrigin), f.setPath(this.path);
        var p = 0;
        function E(S) {
          f.load(t[S], function(G) {
            h.images[S] = G, ++p === 6 && (h.needsUpdate = !0, a && a(h));
          }, void 0, l);
        }
        for (var I = 0; I < t.length; ++I)
          E(I);
        return h;
      }, setCrossOrigin: function(t) {
        return this.crossOrigin = t, this;
      }, setPath: function(t) {
        return this.path = t, this;
      } }), Object.assign(Os.prototype, { crossOrigin: "anonymous", load: function(t, a, A, l) {
        var h = new un(), f = new ls(this.manager);
        return f.setCrossOrigin(this.crossOrigin), f.setPath(this.path), f.load(t, function(p) {
          h.image = p;
          var E = t.search(/\.(jpg|jpeg)$/) > 0 || t.search(/^data\:image\/jpeg/) === 0;
          h.format = E ? ke : st, h.needsUpdate = !0, a !== void 0 && a(h);
        }, A, l), h;
      }, setCrossOrigin: function(t) {
        return this.crossOrigin = t, this;
      }, setPath: function(t) {
        return this.path = t, this;
      } }), Object.assign(gr.prototype, { getPoint: function() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
      }, getPointAt: function(t, a) {
        var A = this.getUtoTmapping(t);
        return this.getPoint(A, a);
      }, getPoints: function(t) {
        t === void 0 && (t = 5);
        for (var a = [], A = 0; A <= t; A++)
          a.push(this.getPoint(A / t));
        return a;
      }, getSpacedPoints: function(t) {
        t === void 0 && (t = 5);
        for (var a = [], A = 0; A <= t; A++)
          a.push(this.getPointAt(A / t));
        return a;
      }, getLength: function() {
        var t = this.getLengths();
        return t[t.length - 1];
      }, getLengths: function(t) {
        if (t === void 0 && (t = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
          return this.cacheArcLengths;
        this.needsUpdate = !1;
        var a, A, l = [], h = this.getPoint(0), f = 0;
        for (l.push(0), A = 1; A <= t; A++)
          f += (a = this.getPoint(A / t)).distanceTo(h), l.push(f), h = a;
        return this.cacheArcLengths = l, l;
      }, updateArcLengths: function() {
        this.needsUpdate = !0, this.getLengths();
      }, getUtoTmapping: function(t, a) {
        var A, l = this.getLengths(), h = 0, f = l.length;
        A = a || t * l[f - 1];
        for (var p, E = 0, I = f - 1; E <= I; )
          if ((p = l[h = Math.floor(E + (I - E) / 2)] - A) < 0)
            E = h + 1;
          else {
            if (!(p > 0)) {
              I = h;
              break;
            }
            I = h - 1;
          }
        if (l[h = I] === A)
          return h / (f - 1);
        var S = l[h];
        return (h + (A - S) / (l[h + 1] - S)) / (f - 1);
      }, getTangent: function(t) {
        var a = t - 1e-4, A = t + 1e-4;
        a < 0 && (a = 0), A > 1 && (A = 1);
        var l = this.getPoint(a);
        return this.getPoint(A).clone().sub(l).normalize();
      }, getTangentAt: function(t) {
        var a = this.getUtoTmapping(t);
        return this.getTangent(a);
      }, computeFrenetFrames: function(t, a) {
        var A, l, h, f = new xe(), p = [], E = [], I = [], S = new xe(), G = new Br();
        for (A = 0; A <= t; A++)
          l = A / t, p[A] = this.getTangentAt(l), p[A].normalize();
        E[0] = new xe(), I[0] = new xe();
        var P = Number.MAX_VALUE, N = Math.abs(p[0].x), j = Math.abs(p[0].y), ee = Math.abs(p[0].z);
        for (N <= P && (P = N, f.set(1, 0, 0)), j <= P && (P = j, f.set(0, 1, 0)), ee <= P && f.set(0, 0, 1), S.crossVectors(p[0], f).normalize(), E[0].crossVectors(p[0], S), I[0].crossVectors(p[0], E[0]), A = 1; A <= t; A++)
          E[A] = E[A - 1].clone(), I[A] = I[A - 1].clone(), S.crossVectors(p[A - 1], p[A]), S.length() > Number.EPSILON && (S.normalize(), h = Math.acos(Rr.clamp(p[A - 1].dot(p[A]), -1, 1)), E[A].applyMatrix4(G.makeRotationAxis(S, h))), I[A].crossVectors(p[A], E[A]);
        if (a === !0)
          for (h = Math.acos(Rr.clamp(E[0].dot(E[t]), -1, 1)), h /= t, p[0].dot(S.crossVectors(E[0], E[t])) > 0 && (h = -h), A = 1; A <= t; A++)
            E[A].applyMatrix4(G.makeRotationAxis(p[A], h * A)), I[A].crossVectors(p[A], E[A]);
        return { tangents: p, normals: E, binormals: I };
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.arcLengthDivisions = t.arcLengthDivisions, this;
      }, toJSON: function() {
        var t = { metadata: { version: 4.5, type: "Curve", generator: "Curve.toJSON" } };
        return t.arcLengthDivisions = this.arcLengthDivisions, t.type = this.type, t;
      }, fromJSON: function(t) {
        return this.arcLengthDivisions = t.arcLengthDivisions, this;
      } }), li.prototype = Object.create(gr.prototype), li.prototype.constructor = li, li.prototype.isEllipseCurve = !0, li.prototype.getPoint = function(t, a) {
        for (var A = a || new Tt(), l = 2 * Math.PI, h = this.aEndAngle - this.aStartAngle, f = Math.abs(h) < Number.EPSILON; h < 0; )
          h += l;
        for (; h > l; )
          h -= l;
        h < Number.EPSILON && (h = f ? 0 : l), this.aClockwise !== !0 || f || (h === l ? h = -l : h -= l);
        var p = this.aStartAngle + t * h, E = this.aX + this.xRadius * Math.cos(p), I = this.aY + this.yRadius * Math.sin(p);
        if (this.aRotation !== 0) {
          var S = Math.cos(this.aRotation), G = Math.sin(this.aRotation), P = E - this.aX, N = I - this.aY;
          E = P * S - N * G + this.aX, I = P * G + N * S + this.aY;
        }
        return A.set(E, I);
      }, li.prototype.copy = function(t) {
        return gr.prototype.copy.call(this, t), this.aX = t.aX, this.aY = t.aY, this.xRadius = t.xRadius, this.yRadius = t.yRadius, this.aStartAngle = t.aStartAngle, this.aEndAngle = t.aEndAngle, this.aClockwise = t.aClockwise, this.aRotation = t.aRotation, this;
      }, li.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        return t.aX = this.aX, t.aY = this.aY, t.xRadius = this.xRadius, t.yRadius = this.yRadius, t.aStartAngle = this.aStartAngle, t.aEndAngle = this.aEndAngle, t.aClockwise = this.aClockwise, t.aRotation = this.aRotation, t;
      }, li.prototype.fromJSON = function(t) {
        return gr.prototype.fromJSON.call(this, t), this.aX = t.aX, this.aY = t.aY, this.xRadius = t.xRadius, this.yRadius = t.yRadius, this.aStartAngle = t.aStartAngle, this.aEndAngle = t.aEndAngle, this.aClockwise = t.aClockwise, this.aRotation = t.aRotation, this;
      }, ho.prototype = Object.create(li.prototype), ho.prototype.constructor = ho, ho.prototype.isArcCurve = !0;
      var Ps = new xe(), Ec = new mc(), yc = new mc(), Bc = new mc();
      function jn(t, a, A, l) {
        gr.call(this), this.type = "CatmullRomCurve3", this.points = t || [], this.closed = a || !1, this.curveType = A || "centripetal", this.tension = l || 0.5;
      }
      function IA(t, a, A, l, h) {
        var f = 0.5 * (l - a), p = 0.5 * (h - A), E = t * t;
        return (2 * A - 2 * l + f + p) * (t * E) + (-3 * A + 3 * l - 2 * f - p) * E + f * t + A;
      }
      function ds(t, a, A, l) {
        return function(h, f) {
          var p = 1 - h;
          return p * p * f;
        }(t, a) + function(h, f) {
          return 2 * (1 - h) * h * f;
        }(t, A) + function(h, f) {
          return h * h * f;
        }(t, l);
      }
      function hs(t, a, A, l, h) {
        return function(f, p) {
          var E = 1 - f;
          return E * E * E * p;
        }(t, a) + function(f, p) {
          var E = 1 - f;
          return 3 * E * E * f * p;
        }(t, A) + function(f, p) {
          return 3 * (1 - f) * f * f * p;
        }(t, l) + function(f, p) {
          return f * f * f * p;
        }(t, h);
      }
      function wi(t, a, A, l) {
        gr.call(this), this.type = "CubicBezierCurve", this.v0 = t || new Tt(), this.v1 = a || new Tt(), this.v2 = A || new Tt(), this.v3 = l || new Tt();
      }
      function Gi(t, a, A, l) {
        gr.call(this), this.type = "CubicBezierCurve3", this.v0 = t || new xe(), this.v1 = a || new xe(), this.v2 = A || new xe(), this.v3 = l || new xe();
      }
      function si(t, a) {
        gr.call(this), this.type = "LineCurve", this.v1 = t || new Tt(), this.v2 = a || new Tt();
      }
      function bi(t, a) {
        gr.call(this), this.type = "LineCurve3", this.v1 = t || new xe(), this.v2 = a || new xe();
      }
      function _i(t, a, A) {
        gr.call(this), this.type = "QuadraticBezierCurve", this.v0 = t || new Tt(), this.v1 = a || new Tt(), this.v2 = A || new Tt();
      }
      function Oi(t, a, A) {
        gr.call(this), this.type = "QuadraticBezierCurve3", this.v0 = t || new xe(), this.v1 = a || new xe(), this.v2 = A || new xe();
      }
      function Qi(t) {
        gr.call(this), this.type = "SplineCurve", this.points = t || [];
      }
      jn.prototype = Object.create(gr.prototype), jn.prototype.constructor = jn, jn.prototype.isCatmullRomCurve3 = !0, jn.prototype.getPoint = function(t, a) {
        var A, l, h, f, p = a || new xe(), E = this.points, I = E.length, S = (I - (this.closed ? 0 : 1)) * t, G = Math.floor(S), P = S - G;
        if (this.closed ? G += G > 0 ? 0 : (Math.floor(Math.abs(G) / I) + 1) * I : P === 0 && G === I - 1 && (G = I - 2, P = 1), this.closed || G > 0 ? A = E[(G - 1) % I] : (Ps.subVectors(E[0], E[1]).add(E[0]), A = Ps), l = E[G % I], h = E[(G + 1) % I], this.closed || G + 2 < I ? f = E[(G + 2) % I] : (Ps.subVectors(E[I - 1], E[I - 2]).add(E[I - 1]), f = Ps), this.curveType === "centripetal" || this.curveType === "chordal") {
          var N = this.curveType === "chordal" ? 0.5 : 0.25, j = Math.pow(A.distanceToSquared(l), N), ee = Math.pow(l.distanceToSquared(h), N), oe = Math.pow(h.distanceToSquared(f), N);
          ee < 1e-4 && (ee = 1), j < 1e-4 && (j = ee), oe < 1e-4 && (oe = ee), Ec.initNonuniformCatmullRom(A.x, l.x, h.x, f.x, j, ee, oe), yc.initNonuniformCatmullRom(A.y, l.y, h.y, f.y, j, ee, oe), Bc.initNonuniformCatmullRom(A.z, l.z, h.z, f.z, j, ee, oe);
        } else
          this.curveType === "catmullrom" && (Ec.initCatmullRom(A.x, l.x, h.x, f.x, this.tension), yc.initCatmullRom(A.y, l.y, h.y, f.y, this.tension), Bc.initCatmullRom(A.z, l.z, h.z, f.z, this.tension));
        return p.set(Ec.calc(P), yc.calc(P), Bc.calc(P)), p;
      }, jn.prototype.copy = function(t) {
        gr.prototype.copy.call(this, t), this.points = [];
        for (var a = 0, A = t.points.length; a < A; a++) {
          var l = t.points[a];
          this.points.push(l.clone());
        }
        return this.closed = t.closed, this.curveType = t.curveType, this.tension = t.tension, this;
      }, jn.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        t.points = [];
        for (var a = 0, A = this.points.length; a < A; a++) {
          var l = this.points[a];
          t.points.push(l.toArray());
        }
        return t.closed = this.closed, t.curveType = this.curveType, t.tension = this.tension, t;
      }, jn.prototype.fromJSON = function(t) {
        gr.prototype.fromJSON.call(this, t), this.points = [];
        for (var a = 0, A = t.points.length; a < A; a++) {
          var l = t.points[a];
          this.points.push(new xe().fromArray(l));
        }
        return this.closed = t.closed, this.curveType = t.curveType, this.tension = t.tension, this;
      }, wi.prototype = Object.create(gr.prototype), wi.prototype.constructor = wi, wi.prototype.isCubicBezierCurve = !0, wi.prototype.getPoint = function(t, a) {
        var A = a || new Tt(), l = this.v0, h = this.v1, f = this.v2, p = this.v3;
        return A.set(hs(t, l.x, h.x, f.x, p.x), hs(t, l.y, h.y, f.y, p.y)), A;
      }, wi.prototype.copy = function(t) {
        return gr.prototype.copy.call(this, t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this.v3.copy(t.v3), this;
      }, wi.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t.v3 = this.v3.toArray(), t;
      }, wi.prototype.fromJSON = function(t) {
        return gr.prototype.fromJSON.call(this, t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this.v3.fromArray(t.v3), this;
      }, Gi.prototype = Object.create(gr.prototype), Gi.prototype.constructor = Gi, Gi.prototype.isCubicBezierCurve3 = !0, Gi.prototype.getPoint = function(t, a) {
        var A = a || new xe(), l = this.v0, h = this.v1, f = this.v2, p = this.v3;
        return A.set(hs(t, l.x, h.x, f.x, p.x), hs(t, l.y, h.y, f.y, p.y), hs(t, l.z, h.z, f.z, p.z)), A;
      }, Gi.prototype.copy = function(t) {
        return gr.prototype.copy.call(this, t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this.v3.copy(t.v3), this;
      }, Gi.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t.v3 = this.v3.toArray(), t;
      }, Gi.prototype.fromJSON = function(t) {
        return gr.prototype.fromJSON.call(this, t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this.v3.fromArray(t.v3), this;
      }, si.prototype = Object.create(gr.prototype), si.prototype.constructor = si, si.prototype.isLineCurve = !0, si.prototype.getPoint = function(t, a) {
        var A = a || new Tt();
        return t === 1 ? A.copy(this.v2) : (A.copy(this.v2).sub(this.v1), A.multiplyScalar(t).add(this.v1)), A;
      }, si.prototype.getPointAt = function(t, a) {
        return this.getPoint(t, a);
      }, si.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize();
      }, si.prototype.copy = function(t) {
        return gr.prototype.copy.call(this, t), this.v1.copy(t.v1), this.v2.copy(t.v2), this;
      }, si.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t;
      }, si.prototype.fromJSON = function(t) {
        return gr.prototype.fromJSON.call(this, t), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this;
      }, bi.prototype = Object.create(gr.prototype), bi.prototype.constructor = bi, bi.prototype.isLineCurve3 = !0, bi.prototype.getPoint = function(t, a) {
        var A = a || new xe();
        return t === 1 ? A.copy(this.v2) : (A.copy(this.v2).sub(this.v1), A.multiplyScalar(t).add(this.v1)), A;
      }, bi.prototype.getPointAt = function(t, a) {
        return this.getPoint(t, a);
      }, bi.prototype.copy = function(t) {
        return gr.prototype.copy.call(this, t), this.v1.copy(t.v1), this.v2.copy(t.v2), this;
      }, bi.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t;
      }, bi.prototype.fromJSON = function(t) {
        return gr.prototype.fromJSON.call(this, t), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this;
      }, _i.prototype = Object.create(gr.prototype), _i.prototype.constructor = _i, _i.prototype.isQuadraticBezierCurve = !0, _i.prototype.getPoint = function(t, a) {
        var A = a || new Tt(), l = this.v0, h = this.v1, f = this.v2;
        return A.set(ds(t, l.x, h.x, f.x), ds(t, l.y, h.y, f.y)), A;
      }, _i.prototype.copy = function(t) {
        return gr.prototype.copy.call(this, t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this;
      }, _i.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t;
      }, _i.prototype.fromJSON = function(t) {
        return gr.prototype.fromJSON.call(this, t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this;
      }, Oi.prototype = Object.create(gr.prototype), Oi.prototype.constructor = Oi, Oi.prototype.isQuadraticBezierCurve3 = !0, Oi.prototype.getPoint = function(t, a) {
        var A = a || new xe(), l = this.v0, h = this.v1, f = this.v2;
        return A.set(ds(t, l.x, h.x, f.x), ds(t, l.y, h.y, f.y), ds(t, l.z, h.z, f.z)), A;
      }, Oi.prototype.copy = function(t) {
        return gr.prototype.copy.call(this, t), this.v0.copy(t.v0), this.v1.copy(t.v1), this.v2.copy(t.v2), this;
      }, Oi.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(), t.v1 = this.v1.toArray(), t.v2 = this.v2.toArray(), t;
      }, Oi.prototype.fromJSON = function(t) {
        return gr.prototype.fromJSON.call(this, t), this.v0.fromArray(t.v0), this.v1.fromArray(t.v1), this.v2.fromArray(t.v2), this;
      }, Qi.prototype = Object.create(gr.prototype), Qi.prototype.constructor = Qi, Qi.prototype.isSplineCurve = !0, Qi.prototype.getPoint = function(t, a) {
        var A = a || new Tt(), l = this.points, h = (l.length - 1) * t, f = Math.floor(h), p = h - f, E = l[f === 0 ? f : f - 1], I = l[f], S = l[f > l.length - 2 ? l.length - 1 : f + 1], G = l[f > l.length - 3 ? l.length - 1 : f + 2];
        return A.set(IA(p, E.x, I.x, S.x, G.x), IA(p, E.y, I.y, S.y, G.y)), A;
      }, Qi.prototype.copy = function(t) {
        gr.prototype.copy.call(this, t), this.points = [];
        for (var a = 0, A = t.points.length; a < A; a++) {
          var l = t.points[a];
          this.points.push(l.clone());
        }
        return this;
      }, Qi.prototype.toJSON = function() {
        var t = gr.prototype.toJSON.call(this);
        t.points = [];
        for (var a = 0, A = this.points.length; a < A; a++) {
          var l = this.points[a];
          t.points.push(l.toArray());
        }
        return t;
      }, Qi.prototype.fromJSON = function(t) {
        gr.prototype.fromJSON.call(this, t), this.points = [];
        for (var a = 0, A = t.points.length; a < A; a++) {
          var l = t.points[a];
          this.points.push(new Tt().fromArray(l));
        }
        return this;
      };
      var xA = Object.freeze({ ArcCurve: ho, CatmullRomCurve3: jn, CubicBezierCurve: wi, CubicBezierCurve3: Gi, EllipseCurve: li, LineCurve: si, LineCurve3: bi, QuadraticBezierCurve: _i, QuadraticBezierCurve3: Oi, SplineCurve: Qi });
      function Zi() {
        gr.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = !1;
      }
      function Si(t) {
        Zi.call(this), this.type = "Path", this.currentPoint = new Tt(), t && this.setFromPoints(t);
      }
      function aa(t) {
        Si.call(this, t), this.uuid = Rr.generateUUID(), this.type = "Shape", this.holes = [];
      }
      function gn(t, a) {
        zt.call(this), this.type = "Light", this.color = new dr(t), this.intensity = a !== void 0 ? a : 1, this.receiveShadow = void 0;
      }
      function Us(t, a, A) {
        gn.call(this, t, A), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(zt.DefaultUp), this.updateMatrix(), this.groundColor = new dr(a);
      }
      function Na(t) {
        this.camera = t, this.bias = 0, this.radius = 1, this.mapSize = new Tt(512, 512), this.map = null, this.matrix = new Br();
      }
      function Hs() {
        Na.call(this, new En(50, 1, 0.5, 500));
      }
      function qs(t, a, A, l, h, f) {
        gn.call(this, t, a), this.type = "SpotLight", this.position.copy(zt.DefaultUp), this.updateMatrix(), this.target = new zt(), Object.defineProperty(this, "power", { get: function() {
          return this.intensity * Math.PI;
        }, set: function(p) {
          this.intensity = p / Math.PI;
        } }), this.distance = A !== void 0 ? A : 0, this.angle = l !== void 0 ? l : Math.PI / 3, this.penumbra = h !== void 0 ? h : 0, this.decay = f !== void 0 ? f : 1, this.shadow = new Hs();
      }
      function Ds(t, a, A, l) {
        gn.call(this, t, a), this.type = "PointLight", Object.defineProperty(this, "power", { get: function() {
          return 4 * this.intensity * Math.PI;
        }, set: function(h) {
          this.intensity = h / (4 * Math.PI);
        } }), this.distance = A !== void 0 ? A : 0, this.decay = l !== void 0 ? l : 1, this.shadow = new Na(new En(90, 1, 0.5, 500));
      }
      function $s() {
        Na.call(this, new $a(-5, 5, 5, -5, 0.5, 500));
      }
      function js(t, a) {
        gn.call(this, t, a), this.type = "DirectionalLight", this.position.copy(zt.DefaultUp), this.updateMatrix(), this.target = new zt(), this.shadow = new $s();
      }
      function Ys(t, a) {
        gn.call(this, t, a), this.type = "AmbientLight", this.castShadow = void 0;
      }
      function Vs(t, a, A, l) {
        gn.call(this, t, a), this.type = "RectAreaLight", this.width = A !== void 0 ? A : 10, this.height = l !== void 0 ? l : 10;
      }
      Zi.prototype = Object.assign(Object.create(gr.prototype), { constructor: Zi, add: function(t) {
        this.curves.push(t);
      }, closePath: function() {
        var t = this.curves[0].getPoint(0), a = this.curves[this.curves.length - 1].getPoint(1);
        t.equals(a) || this.curves.push(new si(a, t));
      }, getPoint: function(t) {
        for (var a = t * this.getLength(), A = this.getCurveLengths(), l = 0; l < A.length; ) {
          if (A[l] >= a) {
            var h = A[l] - a, f = this.curves[l], p = f.getLength(), E = p === 0 ? 0 : 1 - h / p;
            return f.getPointAt(E);
          }
          l++;
        }
        return null;
      }, getLength: function() {
        var t = this.getCurveLengths();
        return t[t.length - 1];
      }, updateArcLengths: function() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
      }, getCurveLengths: function() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
          return this.cacheLengths;
        for (var t = [], a = 0, A = 0, l = this.curves.length; A < l; A++)
          a += this.curves[A].getLength(), t.push(a);
        return this.cacheLengths = t, t;
      }, getSpacedPoints: function(t) {
        t === void 0 && (t = 40);
        for (var a = [], A = 0; A <= t; A++)
          a.push(this.getPoint(A / t));
        return this.autoClose && a.push(a[0]), a;
      }, getPoints: function(t) {
        t = t || 12;
        for (var a, A = [], l = 0, h = this.curves; l < h.length; l++)
          for (var f = h[l], p = f && f.isEllipseCurve ? 2 * t : f && (f.isLineCurve || f.isLineCurve3) ? 1 : f && f.isSplineCurve ? t * f.points.length : t, E = f.getPoints(p), I = 0; I < E.length; I++) {
            var S = E[I];
            a && a.equals(S) || (A.push(S), a = S);
          }
        return this.autoClose && A.length > 1 && !A[A.length - 1].equals(A[0]) && A.push(A[0]), A;
      }, copy: function(t) {
        gr.prototype.copy.call(this, t), this.curves = [];
        for (var a = 0, A = t.curves.length; a < A; a++) {
          var l = t.curves[a];
          this.curves.push(l.clone());
        }
        return this.autoClose = t.autoClose, this;
      }, toJSON: function() {
        var t = gr.prototype.toJSON.call(this);
        t.autoClose = this.autoClose, t.curves = [];
        for (var a = 0, A = this.curves.length; a < A; a++) {
          var l = this.curves[a];
          t.curves.push(l.toJSON());
        }
        return t;
      }, fromJSON: function(t) {
        gr.prototype.fromJSON.call(this, t), this.autoClose = t.autoClose, this.curves = [];
        for (var a = 0, A = t.curves.length; a < A; a++) {
          var l = t.curves[a];
          this.curves.push(new xA[l.type]().fromJSON(l));
        }
        return this;
      } }), Si.prototype = Object.assign(Object.create(Zi.prototype), { constructor: Si, setFromPoints: function(t) {
        this.moveTo(t[0].x, t[0].y);
        for (var a = 1, A = t.length; a < A; a++)
          this.lineTo(t[a].x, t[a].y);
      }, moveTo: function(t, a) {
        this.currentPoint.set(t, a);
      }, lineTo: function(t, a) {
        var A = new si(this.currentPoint.clone(), new Tt(t, a));
        this.curves.push(A), this.currentPoint.set(t, a);
      }, quadraticCurveTo: function(t, a, A, l) {
        var h = new _i(this.currentPoint.clone(), new Tt(t, a), new Tt(A, l));
        this.curves.push(h), this.currentPoint.set(A, l);
      }, bezierCurveTo: function(t, a, A, l, h, f) {
        var p = new wi(this.currentPoint.clone(), new Tt(t, a), new Tt(A, l), new Tt(h, f));
        this.curves.push(p), this.currentPoint.set(h, f);
      }, splineThru: function(t) {
        var a = new Qi([this.currentPoint.clone()].concat(t));
        this.curves.push(a), this.currentPoint.copy(t[t.length - 1]);
      }, arc: function(t, a, A, l, h, f) {
        var p = this.currentPoint.x, E = this.currentPoint.y;
        this.absarc(t + p, a + E, A, l, h, f);
      }, absarc: function(t, a, A, l, h, f) {
        this.absellipse(t, a, A, A, l, h, f);
      }, ellipse: function(t, a, A, l, h, f, p, E) {
        var I = this.currentPoint.x, S = this.currentPoint.y;
        this.absellipse(t + I, a + S, A, l, h, f, p, E);
      }, absellipse: function(t, a, A, l, h, f, p, E) {
        var I = new li(t, a, A, l, h, f, p, E);
        if (this.curves.length > 0) {
          var S = I.getPoint(0);
          S.equals(this.currentPoint) || this.lineTo(S.x, S.y);
        }
        this.curves.push(I);
        var G = I.getPoint(1);
        this.currentPoint.copy(G);
      }, copy: function(t) {
        return Zi.prototype.copy.call(this, t), this.currentPoint.copy(t.currentPoint), this;
      }, toJSON: function() {
        var t = Zi.prototype.toJSON.call(this);
        return t.currentPoint = this.currentPoint.toArray(), t;
      }, fromJSON: function(t) {
        return Zi.prototype.fromJSON.call(this, t), this.currentPoint.fromArray(t.currentPoint), this;
      } }), aa.prototype = Object.assign(Object.create(Si.prototype), { constructor: aa, getPointsHoles: function(t) {
        for (var a = [], A = 0, l = this.holes.length; A < l; A++)
          a[A] = this.holes[A].getPoints(t);
        return a;
      }, extractPoints: function(t) {
        return { shape: this.getPoints(t), holes: this.getPointsHoles(t) };
      }, copy: function(t) {
        Si.prototype.copy.call(this, t), this.holes = [];
        for (var a = 0, A = t.holes.length; a < A; a++) {
          var l = t.holes[a];
          this.holes.push(l.clone());
        }
        return this;
      }, toJSON: function() {
        var t = Si.prototype.toJSON.call(this);
        t.uuid = this.uuid, t.holes = [];
        for (var a = 0, A = this.holes.length; a < A; a++) {
          var l = this.holes[a];
          t.holes.push(l.toJSON());
        }
        return t;
      }, fromJSON: function(t) {
        Si.prototype.fromJSON.call(this, t), this.uuid = t.uuid, this.holes = [];
        for (var a = 0, A = t.holes.length; a < A; a++) {
          var l = t.holes[a];
          this.holes.push(new Si().fromJSON(l));
        }
        return this;
      } }), gn.prototype = Object.assign(Object.create(zt.prototype), { constructor: gn, isLight: !0, copy: function(t) {
        return zt.prototype.copy.call(this, t), this.color.copy(t.color), this.intensity = t.intensity, this;
      }, toJSON: function(t) {
        var a = zt.prototype.toJSON.call(this, t);
        return a.object.color = this.color.getHex(), a.object.intensity = this.intensity, this.groundColor !== void 0 && (a.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (a.object.distance = this.distance), this.angle !== void 0 && (a.object.angle = this.angle), this.decay !== void 0 && (a.object.decay = this.decay), this.penumbra !== void 0 && (a.object.penumbra = this.penumbra), this.shadow !== void 0 && (a.object.shadow = this.shadow.toJSON()), a;
      } }), Us.prototype = Object.assign(Object.create(gn.prototype), { constructor: Us, isHemisphereLight: !0, copy: function(t) {
        return gn.prototype.copy.call(this, t), this.groundColor.copy(t.groundColor), this;
      } }), Object.assign(Na.prototype, { copy: function(t) {
        return this.camera = t.camera.clone(), this.bias = t.bias, this.radius = t.radius, this.mapSize.copy(t.mapSize), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, toJSON: function() {
        var t = {};
        return this.bias !== 0 && (t.bias = this.bias), this.radius !== 1 && (t.radius = this.radius), this.mapSize.x === 512 && this.mapSize.y === 512 || (t.mapSize = this.mapSize.toArray()), t.camera = this.camera.toJSON(!1).object, delete t.camera.matrix, t;
      } }), Hs.prototype = Object.assign(Object.create(Na.prototype), { constructor: Hs, isSpotLightShadow: !0, update: function(t) {
        var a = this.camera, A = 2 * Rr.RAD2DEG * t.angle, l = this.mapSize.width / this.mapSize.height, h = t.distance || a.far;
        A === a.fov && l === a.aspect && h === a.far || (a.fov = A, a.aspect = l, a.far = h, a.updateProjectionMatrix());
      } }), qs.prototype = Object.assign(Object.create(gn.prototype), { constructor: qs, isSpotLight: !0, copy: function(t) {
        return gn.prototype.copy.call(this, t), this.distance = t.distance, this.angle = t.angle, this.penumbra = t.penumbra, this.decay = t.decay, this.target = t.target.clone(), this.shadow = t.shadow.clone(), this;
      } }), Ds.prototype = Object.assign(Object.create(gn.prototype), { constructor: Ds, isPointLight: !0, copy: function(t) {
        return gn.prototype.copy.call(this, t), this.distance = t.distance, this.decay = t.decay, this.shadow = t.shadow.clone(), this;
      } }), $s.prototype = Object.assign(Object.create(Na.prototype), { constructor: $s }), js.prototype = Object.assign(Object.create(gn.prototype), { constructor: js, isDirectionalLight: !0, copy: function(t) {
        return gn.prototype.copy.call(this, t), this.target = t.target.clone(), this.shadow = t.shadow.clone(), this;
      } }), Ys.prototype = Object.assign(Object.create(gn.prototype), { constructor: Ys, isAmbientLight: !0 }), Vs.prototype = Object.assign(Object.create(gn.prototype), { constructor: Vs, isRectAreaLight: !0, copy: function(t) {
        return gn.prototype.copy.call(this, t), this.width = t.width, this.height = t.height, this;
      }, toJSON: function(t) {
        var a = gn.prototype.toJSON.call(this, t);
        return a.object.width = this.width, a.object.height = this.height, a;
      } });
      var Yn = { arraySlice: function(t, a, A) {
        return Yn.isTypedArray(t) ? new t.constructor(t.subarray(a, A !== void 0 ? A : t.length)) : t.slice(a, A);
      }, convertArray: function(t, a, A) {
        return !t || !A && t.constructor === a ? t : typeof a.BYTES_PER_ELEMENT == "number" ? new a(t) : Array.prototype.slice.call(t);
      }, isTypedArray: function(t) {
        return ArrayBuffer.isView(t) && !(t instanceof DataView);
      }, getKeyframeOrder: function(t) {
        for (var a = t.length, A = new Array(a), l = 0; l !== a; ++l)
          A[l] = l;
        return A.sort(function(h, f) {
          return t[h] - t[f];
        }), A;
      }, sortedArray: function(t, a, A) {
        for (var l = t.length, h = new t.constructor(l), f = 0, p = 0; p !== l; ++f)
          for (var E = A[f] * a, I = 0; I !== a; ++I)
            h[p++] = t[E + I];
        return h;
      }, flattenJSON: function(t, a, A, l) {
        for (var h = 1, f = t[0]; f !== void 0 && f[l] === void 0; )
          f = t[h++];
        if (f !== void 0) {
          var p = f[l];
          if (p !== void 0)
            if (Array.isArray(p))
              do
                (p = f[l]) !== void 0 && (a.push(f.time), A.push.apply(A, p)), f = t[h++];
              while (f !== void 0);
            else if (p.toArray !== void 0)
              do
                (p = f[l]) !== void 0 && (a.push(f.time), p.toArray(A, A.length)), f = t[h++];
              while (f !== void 0);
            else
              do
                (p = f[l]) !== void 0 && (a.push(f.time), A.push(p)), f = t[h++];
              while (f !== void 0);
        }
      } };
      function di(t, a, A, l) {
        this.parameterPositions = t, this._cachedIndex = 0, this.resultBuffer = l !== void 0 ? l : new a.constructor(A), this.sampleValues = a, this.valueSize = A;
      }
      function Ls(t, a, A, l) {
        di.call(this, t, a, A, l), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0;
      }
      function fs(t, a, A, l) {
        di.call(this, t, a, A, l);
      }
      function zs(t, a, A, l) {
        di.call(this, t, a, A, l);
      }
      function On(t, a, A, l) {
        if (t === void 0)
          throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (a === void 0 || a.length === 0)
          throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t);
        this.name = t, this.times = Yn.convertArray(a, this.TimeBufferType), this.values = Yn.convertArray(A, this.ValueBufferType), this.setInterpolation(l || this.DefaultInterpolation);
      }
      function Js(t, a, A) {
        On.call(this, t, a, A);
      }
      function Ws(t, a, A, l) {
        On.call(this, t, a, A, l);
      }
      function fo(t, a, A, l) {
        On.call(this, t, a, A, l);
      }
      function Ks(t, a, A, l) {
        di.call(this, t, a, A, l);
      }
      function ps(t, a, A, l) {
        On.call(this, t, a, A, l);
      }
      function Zs(t, a, A, l) {
        On.call(this, t, a, A, l);
      }
      function po(t, a, A, l) {
        On.call(this, t, a, A, l);
      }
      function gi(t, a, A) {
        this.name = t, this.tracks = A, this.duration = a !== void 0 ? a : -1, this.uuid = Rr.generateUUID(), this.duration < 0 && this.resetDuration();
      }
      function qu(t) {
        if (t.type === void 0)
          throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var a = function(h) {
          switch (h.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return fo;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return po;
            case "color":
              return Ws;
            case "quaternion":
              return ps;
            case "bool":
            case "boolean":
              return Js;
            case "string":
              return Zs;
          }
          throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + h);
        }(t.type);
        if (t.times === void 0) {
          var A = [], l = [];
          Yn.flattenJSON(t.keys, A, l, "value"), t.times = A, t.values = l;
        }
        return a.parse !== void 0 ? a.parse(t) : new a(t.name, t.times, t.values, t.interpolation);
      }
      function Xs(t) {
        this.manager = t !== void 0 ? t : oi, this.textures = {};
      }
      function vc(t) {
        this.manager = t !== void 0 ? t : oi;
      }
      Object.assign(di.prototype, { evaluate: function(t) {
        var a = this.parameterPositions, A = this._cachedIndex, l = a[A], h = a[A - 1];
        e: {
          t: {
            var f;
            r: {
              n:
                if (!(t < l)) {
                  for (var p = A + 2; ; ) {
                    if (l === void 0) {
                      if (t < h)
                        break n;
                      return A = a.length, this._cachedIndex = A, this.afterEnd_(A - 1, t, h);
                    }
                    if (A === p)
                      break;
                    if (h = l, t < (l = a[++A]))
                      break t;
                  }
                  f = a.length;
                  break r;
                }
              if (t >= h)
                break e;
              var E = a[1];
              for (t < E && (A = 2, h = E), p = A - 2; ; ) {
                if (h === void 0)
                  return this._cachedIndex = 0, this.beforeStart_(0, t, l);
                if (A === p)
                  break;
                if (l = h, t >= (h = a[--A - 1]))
                  break t;
              }
              f = A, A = 0;
            }
            for (; A < f; ) {
              var I = A + f >>> 1;
              t < a[I] ? f = I : A = I + 1;
            }
            if (l = a[A], (h = a[A - 1]) === void 0)
              return this._cachedIndex = 0, this.beforeStart_(0, t, l);
            if (l === void 0)
              return A = a.length, this._cachedIndex = A, this.afterEnd_(A - 1, h, t);
          }
          this._cachedIndex = A, this.intervalChanged_(A, h, l);
        }
        return this.interpolate_(A, h, t, l);
      }, settings: null, DefaultSettings_: {}, getSettings_: function() {
        return this.settings || this.DefaultSettings_;
      }, copySampleValue_: function(t) {
        for (var a = this.resultBuffer, A = this.sampleValues, l = this.valueSize, h = t * l, f = 0; f !== l; ++f)
          a[f] = A[h + f];
        return a;
      }, interpolate_: function() {
        throw new Error("call to abstract method");
      }, intervalChanged_: function() {
      } }), Object.assign(di.prototype, { beforeStart_: di.prototype.copySampleValue_, afterEnd_: di.prototype.copySampleValue_ }), Ls.prototype = Object.assign(Object.create(di.prototype), { constructor: Ls, DefaultSettings_: { endingStart: ar, endingEnd: ar }, intervalChanged_: function(t, a, A) {
        var l = this.parameterPositions, h = t - 2, f = t + 1, p = l[h], E = l[f];
        if (p === void 0)
          switch (this.getSettings_().endingStart) {
            case Gr:
              h = t, p = 2 * a - A;
              break;
            case Xr:
              p = a + l[h = l.length - 2] - l[h + 1];
              break;
            default:
              h = t, p = A;
          }
        if (E === void 0)
          switch (this.getSettings_().endingEnd) {
            case Gr:
              f = t, E = 2 * A - a;
              break;
            case Xr:
              f = 1, E = A + l[1] - l[0];
              break;
            default:
              f = t - 1, E = a;
          }
        var I = 0.5 * (A - a), S = this.valueSize;
        this._weightPrev = I / (a - p), this._weightNext = I / (E - A), this._offsetPrev = h * S, this._offsetNext = f * S;
      }, interpolate_: function(t, a, A, l) {
        for (var h = this.resultBuffer, f = this.sampleValues, p = this.valueSize, E = t * p, I = E - p, S = this._offsetPrev, G = this._offsetNext, P = this._weightPrev, N = this._weightNext, j = (A - a) / (l - a), ee = j * j, oe = ee * j, Ae = -P * oe + 2 * P * ee - P * j, pe = (1 + P) * oe + (-1.5 - 2 * P) * ee + (-0.5 + P) * j + 1, we = (-1 - N) * oe + (1.5 + N) * ee + 0.5 * j, he = N * oe - N * ee, Fe = 0; Fe !== p; ++Fe)
          h[Fe] = Ae * f[S + Fe] + pe * f[I + Fe] + we * f[E + Fe] + he * f[G + Fe];
        return h;
      } }), fs.prototype = Object.assign(Object.create(di.prototype), { constructor: fs, interpolate_: function(t, a, A, l) {
        for (var h = this.resultBuffer, f = this.sampleValues, p = this.valueSize, E = t * p, I = E - p, S = (A - a) / (l - a), G = 1 - S, P = 0; P !== p; ++P)
          h[P] = f[I + P] * G + f[E + P] * S;
        return h;
      } }), zs.prototype = Object.assign(Object.create(di.prototype), { constructor: zs, interpolate_: function(t) {
        return this.copySampleValue_(t - 1);
      } }), Object.assign(On, { toJSON: function(t) {
        var a, A = t.constructor;
        if (A.toJSON !== void 0)
          a = A.toJSON(t);
        else {
          a = { name: t.name, times: Yn.convertArray(t.times, Array), values: Yn.convertArray(t.values, Array) };
          var l = t.getInterpolation();
          l !== t.DefaultInterpolation && (a.interpolation = l);
        }
        return a.type = t.ValueTypeName, a;
      } }), Object.assign(On.prototype, { constructor: On, TimeBufferType: Float32Array, ValueBufferType: Float32Array, DefaultInterpolation: Tr, InterpolantFactoryMethodDiscrete: function(t) {
        return new zs(this.times, this.values, this.getValueSize(), t);
      }, InterpolantFactoryMethodLinear: function(t) {
        return new fs(this.times, this.values, this.getValueSize(), t);
      }, InterpolantFactoryMethodSmooth: function(t) {
        return new Ls(this.times, this.values, this.getValueSize(), t);
      }, setInterpolation: function(t) {
        var a;
        switch (t) {
          case Lt:
            a = this.InterpolantFactoryMethodDiscrete;
            break;
          case Tr:
            a = this.InterpolantFactoryMethodLinear;
            break;
          case mr:
            a = this.InterpolantFactoryMethodSmooth;
        }
        if (a === void 0) {
          var A = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
          if (this.createInterpolant === void 0) {
            if (t === this.DefaultInterpolation)
              throw new Error(A);
            this.setInterpolation(this.DefaultInterpolation);
          }
          return console.warn("THREE.KeyframeTrack:", A), this;
        }
        return this.createInterpolant = a, this;
      }, getInterpolation: function() {
        switch (this.createInterpolant) {
          case this.InterpolantFactoryMethodDiscrete:
            return Lt;
          case this.InterpolantFactoryMethodLinear:
            return Tr;
          case this.InterpolantFactoryMethodSmooth:
            return mr;
        }
      }, getValueSize: function() {
        return this.values.length / this.times.length;
      }, shift: function(t) {
        if (t !== 0)
          for (var a = this.times, A = 0, l = a.length; A !== l; ++A)
            a[A] += t;
        return this;
      }, scale: function(t) {
        if (t !== 1)
          for (var a = this.times, A = 0, l = a.length; A !== l; ++A)
            a[A] *= t;
        return this;
      }, trim: function(t, a) {
        for (var A = this.times, l = A.length, h = 0, f = l - 1; h !== l && A[h] < t; )
          ++h;
        for (; f !== -1 && A[f] > a; )
          --f;
        if (++f, h !== 0 || f !== l) {
          h >= f && (h = (f = Math.max(f, 1)) - 1);
          var p = this.getValueSize();
          this.times = Yn.arraySlice(A, h, f), this.values = Yn.arraySlice(this.values, h * p, f * p);
        }
        return this;
      }, validate: function() {
        var t = !0, a = this.getValueSize();
        a - Math.floor(a) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), t = !1);
        var A = this.times, l = this.values, h = A.length;
        h === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), t = !1);
        for (var f = null, p = 0; p !== h; p++) {
          var E = A[p];
          if (typeof E == "number" && isNaN(E)) {
            console.error("THREE.KeyframeTrack: Time is not a valid number.", this, p, E), t = !1;
            break;
          }
          if (f !== null && f > E) {
            console.error("THREE.KeyframeTrack: Out of order keys.", this, p, E, f), t = !1;
            break;
          }
          f = E;
        }
        if (l !== void 0 && Yn.isTypedArray(l)) {
          p = 0;
          for (var I = l.length; p !== I; ++p) {
            var S = l[p];
            if (isNaN(S)) {
              console.error("THREE.KeyframeTrack: Value is not a valid number.", this, p, S), t = !1;
              break;
            }
          }
        }
        return t;
      }, optimize: function() {
        for (var t = this.times, a = this.values, A = this.getValueSize(), l = this.getInterpolation() === mr, h = 1, f = t.length - 1, p = 1; p < f; ++p) {
          var E = !1, I = t[p];
          if (I !== t[p + 1] && (p !== 1 || I !== I[0]))
            if (l)
              E = !0;
            else
              for (var S = p * A, G = S - A, P = S + A, N = 0; N !== A; ++N) {
                var j = a[S + N];
                if (j !== a[G + N] || j !== a[P + N]) {
                  E = !0;
                  break;
                }
              }
          if (E) {
            if (p !== h) {
              t[h] = t[p];
              var ee = p * A, oe = h * A;
              for (N = 0; N !== A; ++N)
                a[oe + N] = a[ee + N];
            }
            ++h;
          }
        }
        if (f > 0) {
          for (t[h] = t[f], ee = f * A, oe = h * A, N = 0; N !== A; ++N)
            a[oe + N] = a[ee + N];
          ++h;
        }
        return h !== t.length && (this.times = Yn.arraySlice(t, 0, h), this.values = Yn.arraySlice(a, 0, h * A)), this;
      } }), Js.prototype = Object.assign(Object.create(On.prototype), { constructor: Js, ValueTypeName: "bool", ValueBufferType: Array, DefaultInterpolation: Lt, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), Ws.prototype = Object.assign(Object.create(On.prototype), { constructor: Ws, ValueTypeName: "color" }), fo.prototype = Object.assign(Object.create(On.prototype), { constructor: fo, ValueTypeName: "number" }), Ks.prototype = Object.assign(Object.create(di.prototype), { constructor: Ks, interpolate_: function(t, a, A, l) {
        for (var h = this.resultBuffer, f = this.sampleValues, p = this.valueSize, E = t * p, I = (A - a) / (l - a), S = E + p; E !== S; E += 4)
          fn.slerpFlat(h, 0, f, E - p, f, E, I);
        return h;
      } }), ps.prototype = Object.assign(Object.create(On.prototype), { constructor: ps, ValueTypeName: "quaternion", DefaultInterpolation: Tr, InterpolantFactoryMethodLinear: function(t) {
        return new Ks(this.times, this.values, this.getValueSize(), t);
      }, InterpolantFactoryMethodSmooth: void 0 }), Zs.prototype = Object.assign(Object.create(On.prototype), { constructor: Zs, ValueTypeName: "string", ValueBufferType: Array, DefaultInterpolation: Lt, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), po.prototype = Object.assign(Object.create(On.prototype), { constructor: po, ValueTypeName: "vector" }), Object.assign(gi, { parse: function(t) {
        for (var a = [], A = t.tracks, l = 1 / (t.fps || 1), h = 0, f = A.length; h !== f; ++h)
          a.push(qu(A[h]).scale(l));
        return new gi(t.name, t.duration, a);
      }, toJSON: function(t) {
        for (var a = [], A = t.tracks, l = { name: t.name, duration: t.duration, tracks: a, uuid: t.uuid }, h = 0, f = A.length; h !== f; ++h)
          a.push(On.toJSON(A[h]));
        return l;
      }, CreateFromMorphTargetSequence: function(t, a, A, l) {
        for (var h = a.length, f = [], p = 0; p < h; p++) {
          var E = [], I = [];
          E.push((p + h - 1) % h, p, (p + 1) % h), I.push(0, 1, 0);
          var S = Yn.getKeyframeOrder(E);
          E = Yn.sortedArray(E, 1, S), I = Yn.sortedArray(I, 1, S), l || E[0] !== 0 || (E.push(h), I.push(I[0])), f.push(new fo(".morphTargetInfluences[" + a[p].name + "]", E, I).scale(1 / A));
        }
        return new gi(t, -1, f);
      }, findByName: function(t, a) {
        var A = t;
        if (!Array.isArray(t)) {
          var l = t;
          A = l.geometry && l.geometry.animations || l.animations;
        }
        for (var h = 0; h < A.length; h++)
          if (A[h].name === a)
            return A[h];
        return null;
      }, CreateClipsFromMorphTargetSequences: function(t, a, A) {
        for (var l = {}, h = /^([\w-]*?)([\d]+)$/, f = 0, p = t.length; f < p; f++) {
          var E = t[f], I = E.name.match(h);
          if (I && I.length > 1) {
            var S = l[P = I[1]];
            S || (l[P] = S = []), S.push(E);
          }
        }
        var G = [];
        for (var P in l)
          G.push(gi.CreateFromMorphTargetSequence(P, l[P], a, A));
        return G;
      }, parseAnimation: function(t, a) {
        if (!t)
          return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        for (var A = function(we, he, Fe, He, me) {
          if (Fe.length !== 0) {
            var Te = [], Le = [];
            Yn.flattenJSON(Fe, Te, Le, He), Te.length !== 0 && me.push(new we(he, Te, Le));
          }
        }, l = [], h = t.name || "default", f = t.length || -1, p = t.fps || 30, E = t.hierarchy || [], I = 0; I < E.length; I++) {
          var S = E[I].keys;
          if (S && S.length !== 0)
            if (S[0].morphTargets) {
              for (var G = {}, P = 0; P < S.length; P++)
                if (S[P].morphTargets)
                  for (var N = 0; N < S[P].morphTargets.length; N++)
                    G[S[P].morphTargets[N]] = -1;
              for (var j in G) {
                var ee = [], oe = [];
                for (N = 0; N !== S[P].morphTargets.length; ++N) {
                  var Ae = S[P];
                  ee.push(Ae.time), oe.push(Ae.morphTarget === j ? 1 : 0);
                }
                l.push(new fo(".morphTargetInfluence[" + j + "]", ee, oe));
              }
              f = G.length * (p || 1);
            } else {
              var pe = ".bones[" + a[I].name + "]";
              A(po, pe + ".position", S, "pos", l), A(ps, pe + ".quaternion", S, "rot", l), A(po, pe + ".scale", S, "scl", l);
            }
        }
        return l.length === 0 ? null : new gi(h, f, l);
      } }), Object.assign(gi.prototype, { resetDuration: function() {
        for (var t = 0, a = 0, A = this.tracks.length; a !== A; ++a) {
          var l = this.tracks[a];
          t = Math.max(t, l.times[l.times.length - 1]);
        }
        return this.duration = t, this;
      }, trim: function() {
        for (var t = 0; t < this.tracks.length; t++)
          this.tracks[t].trim(0, this.duration);
        return this;
      }, validate: function() {
        for (var t = !0, a = 0; a < this.tracks.length; a++)
          t = t && this.tracks[a].validate();
        return t;
      }, optimize: function() {
        for (var t = 0; t < this.tracks.length; t++)
          this.tracks[t].optimize();
        return this;
      } }), Object.assign(Xs.prototype, { load: function(t, a, A, l) {
        var h = this;
        new xi(h.manager).load(t, function(f) {
          a(h.parse(JSON.parse(f)));
        }, A, l);
      }, setTextures: function(t) {
        this.textures = t;
      }, parse: function(t) {
        var a = this.textures;
        function A(f) {
          return a[f] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", f), a[f];
        }
        var l = new Hu[t.type]();
        if (t.uuid !== void 0 && (l.uuid = t.uuid), t.name !== void 0 && (l.name = t.name), t.color !== void 0 && l.color.setHex(t.color), t.roughness !== void 0 && (l.roughness = t.roughness), t.metalness !== void 0 && (l.metalness = t.metalness), t.emissive !== void 0 && l.emissive.setHex(t.emissive), t.specular !== void 0 && l.specular.setHex(t.specular), t.shininess !== void 0 && (l.shininess = t.shininess), t.clearCoat !== void 0 && (l.clearCoat = t.clearCoat), t.clearCoatRoughness !== void 0 && (l.clearCoatRoughness = t.clearCoatRoughness), t.uniforms !== void 0 && (l.uniforms = t.uniforms), t.vertexShader !== void 0 && (l.vertexShader = t.vertexShader), t.fragmentShader !== void 0 && (l.fragmentShader = t.fragmentShader), t.vertexColors !== void 0 && (l.vertexColors = t.vertexColors), t.fog !== void 0 && (l.fog = t.fog), t.flatShading !== void 0 && (l.flatShading = t.flatShading), t.blending !== void 0 && (l.blending = t.blending), t.side !== void 0 && (l.side = t.side), t.opacity !== void 0 && (l.opacity = t.opacity), t.transparent !== void 0 && (l.transparent = t.transparent), t.alphaTest !== void 0 && (l.alphaTest = t.alphaTest), t.depthTest !== void 0 && (l.depthTest = t.depthTest), t.depthWrite !== void 0 && (l.depthWrite = t.depthWrite), t.colorWrite !== void 0 && (l.colorWrite = t.colorWrite), t.wireframe !== void 0 && (l.wireframe = t.wireframe), t.wireframeLinewidth !== void 0 && (l.wireframeLinewidth = t.wireframeLinewidth), t.wireframeLinecap !== void 0 && (l.wireframeLinecap = t.wireframeLinecap), t.wireframeLinejoin !== void 0 && (l.wireframeLinejoin = t.wireframeLinejoin), t.rotation !== void 0 && (l.rotation = t.rotation), t.linewidth !== 1 && (l.linewidth = t.linewidth), t.dashSize !== void 0 && (l.dashSize = t.dashSize), t.gapSize !== void 0 && (l.gapSize = t.gapSize), t.scale !== void 0 && (l.scale = t.scale), t.polygonOffset !== void 0 && (l.polygonOffset = t.polygonOffset), t.polygonOffsetFactor !== void 0 && (l.polygonOffsetFactor = t.polygonOffsetFactor), t.polygonOffsetUnits !== void 0 && (l.polygonOffsetUnits = t.polygonOffsetUnits), t.skinning !== void 0 && (l.skinning = t.skinning), t.morphTargets !== void 0 && (l.morphTargets = t.morphTargets), t.dithering !== void 0 && (l.dithering = t.dithering), t.visible !== void 0 && (l.visible = t.visible), t.userData !== void 0 && (l.userData = t.userData), t.shading !== void 0 && (l.flatShading = t.shading === 1), t.size !== void 0 && (l.size = t.size), t.sizeAttenuation !== void 0 && (l.sizeAttenuation = t.sizeAttenuation), t.map !== void 0 && (l.map = A(t.map)), t.alphaMap !== void 0 && (l.alphaMap = A(t.alphaMap), l.transparent = !0), t.bumpMap !== void 0 && (l.bumpMap = A(t.bumpMap)), t.bumpScale !== void 0 && (l.bumpScale = t.bumpScale), t.normalMap !== void 0 && (l.normalMap = A(t.normalMap)), t.normalMapType !== void 0 && (l.normalMapType = t.normalMapType), t.normalScale !== void 0) {
          var h = t.normalScale;
          Array.isArray(h) === !1 && (h = [h, h]), l.normalScale = new Tt().fromArray(h);
        }
        return t.displacementMap !== void 0 && (l.displacementMap = A(t.displacementMap)), t.displacementScale !== void 0 && (l.displacementScale = t.displacementScale), t.displacementBias !== void 0 && (l.displacementBias = t.displacementBias), t.roughnessMap !== void 0 && (l.roughnessMap = A(t.roughnessMap)), t.metalnessMap !== void 0 && (l.metalnessMap = A(t.metalnessMap)), t.emissiveMap !== void 0 && (l.emissiveMap = A(t.emissiveMap)), t.emissiveIntensity !== void 0 && (l.emissiveIntensity = t.emissiveIntensity), t.specularMap !== void 0 && (l.specularMap = A(t.specularMap)), t.envMap !== void 0 && (l.envMap = A(t.envMap)), t.reflectivity !== void 0 && (l.reflectivity = t.reflectivity), t.lightMap !== void 0 && (l.lightMap = A(t.lightMap)), t.lightMapIntensity !== void 0 && (l.lightMapIntensity = t.lightMapIntensity), t.aoMap !== void 0 && (l.aoMap = A(t.aoMap)), t.aoMapIntensity !== void 0 && (l.aoMapIntensity = t.aoMapIntensity), t.gradientMap !== void 0 && (l.gradientMap = A(t.gradientMap)), l;
      } }), Object.assign(vc.prototype, { load: function(t, a, A, l) {
        var h = this;
        new xi(h.manager).load(t, function(f) {
          a(h.parse(JSON.parse(f)));
        }, A, l);
      }, parse: function(t) {
        var a = new rr(), A = t.data.index;
        if (A !== void 0) {
          var l = new wA[A.type](A.array);
          a.setIndex(new Or(l, 1));
        }
        var h = t.data.attributes;
        for (var f in h) {
          var p = h[f];
          l = new wA[p.type](p.array), a.addAttribute(f, new Or(l, p.itemSize, p.normalized));
        }
        var E = t.data.groups || t.data.drawcalls || t.data.offsets;
        if (E !== void 0)
          for (var I = 0, S = E.length; I !== S; ++I) {
            var G = E[I];
            a.addGroup(G.start, G.count, G.materialIndex);
          }
        var P = t.data.boundingSphere;
        if (P !== void 0) {
          var N = new xe();
          P.center !== void 0 && N.fromArray(P.center), a.boundingSphere = new Bi(N, P.radius);
        }
        return a;
      } });
      var wA = { Int8Array, Uint8Array, Uint8ClampedArray: typeof Uint8ClampedArray < "u" ? Uint8ClampedArray : Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array };
      function go() {
      }
      go.Handlers = { handlers: [], add: function(t, a) {
        this.handlers.push(t, a);
      }, get: function(t) {
        for (var a = this.handlers, A = 0, l = a.length; A < l; A += 2) {
          var h = a[A], f = a[A + 1];
          if (h.test(t))
            return f;
        }
        return null;
      } }, Object.assign(go.prototype, { crossOrigin: "anonymous", onLoadStart: function() {
      }, onLoadProgress: function() {
      }, onLoadComplete: function() {
      }, initMaterials: function(t, a, A) {
        for (var l = [], h = 0; h < t.length; ++h)
          l[h] = this.createMaterial(t[h], a, A);
        return l;
      }, createMaterial: function() {
        var t = { NoBlending: Pe, NormalBlending: se, AdditiveBlending: Ce, SubtractiveBlending: Ge, MultiplyBlending: $e, CustomBlending: Be }, a = new dr(), A = new Os(), l = new Xs();
        return function(h, f, p) {
          var E = {};
          function I(N, j, ee, oe, Ae) {
            var pe, we = f + N, he = go.Handlers.get(we);
            he !== null ? pe = he.load(we) : (A.setCrossOrigin(p), pe = A.load(we)), j !== void 0 && (pe.repeat.fromArray(j), j[0] !== 1 && (pe.wrapS = vt), j[1] !== 1 && (pe.wrapT = vt)), ee !== void 0 && pe.offset.fromArray(ee), oe !== void 0 && (oe[0] === "repeat" && (pe.wrapS = vt), oe[0] === "mirror" && (pe.wrapS = Ct), oe[1] === "repeat" && (pe.wrapT = vt), oe[1] === "mirror" && (pe.wrapT = Ct)), Ae !== void 0 && (pe.anisotropy = Ae);
            var Fe = Rr.generateUUID();
            return E[Fe] = pe, Fe;
          }
          var S = { uuid: Rr.generateUUID(), type: "MeshLambertMaterial" };
          for (var G in h) {
            var P = h[G];
            switch (G) {
              case "DbgColor":
              case "DbgIndex":
              case "opticalDensity":
              case "illumination":
                break;
              case "DbgName":
                S.name = P;
                break;
              case "blending":
                S.blending = t[P];
                break;
              case "colorAmbient":
              case "mapAmbient":
                console.warn("THREE.Loader.createMaterial:", G, "is no longer supported.");
                break;
              case "colorDiffuse":
                S.color = a.fromArray(P).getHex();
                break;
              case "colorSpecular":
                S.specular = a.fromArray(P).getHex();
                break;
              case "colorEmissive":
                S.emissive = a.fromArray(P).getHex();
                break;
              case "specularCoef":
                S.shininess = P;
                break;
              case "shading":
                P.toLowerCase() === "basic" && (S.type = "MeshBasicMaterial"), P.toLowerCase() === "phong" && (S.type = "MeshPhongMaterial"), P.toLowerCase() === "standard" && (S.type = "MeshStandardMaterial");
                break;
              case "mapDiffuse":
                S.map = I(P, h.mapDiffuseRepeat, h.mapDiffuseOffset, h.mapDiffuseWrap, h.mapDiffuseAnisotropy);
                break;
              case "mapDiffuseRepeat":
              case "mapDiffuseOffset":
              case "mapDiffuseWrap":
              case "mapDiffuseAnisotropy":
                break;
              case "mapEmissive":
                S.emissiveMap = I(P, h.mapEmissiveRepeat, h.mapEmissiveOffset, h.mapEmissiveWrap, h.mapEmissiveAnisotropy);
                break;
              case "mapEmissiveRepeat":
              case "mapEmissiveOffset":
              case "mapEmissiveWrap":
              case "mapEmissiveAnisotropy":
                break;
              case "mapLight":
                S.lightMap = I(P, h.mapLightRepeat, h.mapLightOffset, h.mapLightWrap, h.mapLightAnisotropy);
                break;
              case "mapLightRepeat":
              case "mapLightOffset":
              case "mapLightWrap":
              case "mapLightAnisotropy":
                break;
              case "mapAO":
                S.aoMap = I(P, h.mapAORepeat, h.mapAOOffset, h.mapAOWrap, h.mapAOAnisotropy);
                break;
              case "mapAORepeat":
              case "mapAOOffset":
              case "mapAOWrap":
              case "mapAOAnisotropy":
                break;
              case "mapBump":
                S.bumpMap = I(P, h.mapBumpRepeat, h.mapBumpOffset, h.mapBumpWrap, h.mapBumpAnisotropy);
                break;
              case "mapBumpScale":
                S.bumpScale = P;
                break;
              case "mapBumpRepeat":
              case "mapBumpOffset":
              case "mapBumpWrap":
              case "mapBumpAnisotropy":
                break;
              case "mapNormal":
                S.normalMap = I(P, h.mapNormalRepeat, h.mapNormalOffset, h.mapNormalWrap, h.mapNormalAnisotropy);
                break;
              case "mapNormalFactor":
                S.normalScale = P;
                break;
              case "mapNormalRepeat":
              case "mapNormalOffset":
              case "mapNormalWrap":
              case "mapNormalAnisotropy":
                break;
              case "mapSpecular":
                S.specularMap = I(P, h.mapSpecularRepeat, h.mapSpecularOffset, h.mapSpecularWrap, h.mapSpecularAnisotropy);
                break;
              case "mapSpecularRepeat":
              case "mapSpecularOffset":
              case "mapSpecularWrap":
              case "mapSpecularAnisotropy":
                break;
              case "mapMetalness":
                S.metalnessMap = I(P, h.mapMetalnessRepeat, h.mapMetalnessOffset, h.mapMetalnessWrap, h.mapMetalnessAnisotropy);
                break;
              case "mapMetalnessRepeat":
              case "mapMetalnessOffset":
              case "mapMetalnessWrap":
              case "mapMetalnessAnisotropy":
                break;
              case "mapRoughness":
                S.roughnessMap = I(P, h.mapRoughnessRepeat, h.mapRoughnessOffset, h.mapRoughnessWrap, h.mapRoughnessAnisotropy);
                break;
              case "mapRoughnessRepeat":
              case "mapRoughnessOffset":
              case "mapRoughnessWrap":
              case "mapRoughnessAnisotropy":
                break;
              case "mapAlpha":
                S.alphaMap = I(P, h.mapAlphaRepeat, h.mapAlphaOffset, h.mapAlphaWrap, h.mapAlphaAnisotropy);
                break;
              case "mapAlphaRepeat":
              case "mapAlphaOffset":
              case "mapAlphaWrap":
              case "mapAlphaAnisotropy":
                break;
              case "flipSided":
                S.side = O;
                break;
              case "doubleSided":
                S.side = H;
                break;
              case "transparency":
                console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"), S.opacity = P;
                break;
              case "depthTest":
              case "depthWrite":
              case "colorWrite":
              case "opacity":
              case "reflectivity":
              case "transparent":
              case "visible":
              case "wireframe":
                S[G] = P;
                break;
              case "vertexColors":
                P === !0 && (S.vertexColors = Ie), P === "face" && (S.vertexColors = ce);
                break;
              default:
                console.error("THREE.Loader.createMaterial: Unsupported", G, P);
            }
          }
          return S.type === "MeshBasicMaterial" && delete S.emissive, S.type !== "MeshPhongMaterial" && delete S.specular, S.opacity < 1 && (S.transparent = !0), l.setTextures(E), l.parse(S);
        };
      }() });
      var Cc = { decodeText: function(t) {
        if (typeof TextDecoder < "u")
          return new TextDecoder().decode(t);
        for (var a = "", A = 0, l = t.length; A < l; A++)
          a += String.fromCharCode(t[A]);
        return decodeURIComponent(escape(a));
      }, extractUrlBase: function(t) {
        var a = t.lastIndexOf("/");
        return a === -1 ? "./" : t.substr(0, a + 1);
      } };
      function Ic(t) {
        typeof t == "boolean" && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."), t = void 0), this.manager = t !== void 0 ? t : oi, this.withCredentials = !1;
      }
      function bA(t) {
        this.manager = t !== void 0 ? t : oi, this.texturePath = "";
      }
      Object.assign(Ic.prototype, { crossOrigin: "anonymous", load: function(t, a, A, l) {
        var h = this, f = this.texturePath && typeof this.texturePath == "string" ? this.texturePath : Cc.extractUrlBase(t), p = new xi(this.manager);
        p.setWithCredentials(this.withCredentials), p.load(t, function(E) {
          var I = JSON.parse(E), S = I.metadata;
          if (S !== void 0) {
            var G = S.type;
            if (G !== void 0 && G.toLowerCase() === "object")
              return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.");
          }
          var P = h.parse(I, f);
          a(P.geometry, P.materials);
        }, A, l);
      }, setCrossOrigin: function(t) {
        return this.crossOrigin = t, this;
      }, setTexturePath: function(t) {
        return this.texturePath = t, this;
      }, parse: function() {
        return function(t, a) {
          t.data !== void 0 && (t = t.data), t.scale !== void 0 ? t.scale = 1 / t.scale : t.scale = 1;
          var A = new Cr();
          return function(l, h) {
            function f(er, Ut) {
              return er & 1 << Ut;
            }
            var p, E, I, S, G, P, N, j, ee, oe, Ae, pe, we, he, Fe, He, me, Te, Le, De, at, Ye, At, gt, xt, Bt = l.faces, qt = l.vertices, Ot = l.normals, yt = l.colors, Mt = l.scale, pt = 0;
            if (l.uvs !== void 0) {
              for (p = 0; p < l.uvs.length; p++)
                l.uvs[p].length && pt++;
              for (p = 0; p < pt; p++)
                h.faceVertexUvs[p] = [];
            }
            for (S = 0, G = qt.length; S < G; )
              (Te = new xe()).x = qt[S++] * Mt, Te.y = qt[S++] * Mt, Te.z = qt[S++] * Mt, h.vertices.push(Te);
            for (S = 0, G = Bt.length; S < G; )
              if (Ae = f(oe = Bt[S++], 0), pe = f(oe, 1), we = f(oe, 3), he = f(oe, 4), Fe = f(oe, 5), He = f(oe, 6), me = f(oe, 7), Ae) {
                if ((De = new Li()).a = Bt[S], De.b = Bt[S + 1], De.c = Bt[S + 3], (at = new Li()).a = Bt[S + 1], at.b = Bt[S + 2], at.c = Bt[S + 3], S += 4, pe && (ee = Bt[S++], De.materialIndex = ee, at.materialIndex = ee), I = h.faces.length, we)
                  for (p = 0; p < pt; p++)
                    for (gt = l.uvs[p], h.faceVertexUvs[p][I] = [], h.faceVertexUvs[p][I + 1] = [], E = 0; E < 4; E++)
                      xt = new Tt(gt[2 * (j = Bt[S++])], gt[2 * j + 1]), E !== 2 && h.faceVertexUvs[p][I].push(xt), E !== 0 && h.faceVertexUvs[p][I + 1].push(xt);
                if (he && (N = 3 * Bt[S++], De.normal.set(Ot[N++], Ot[N++], Ot[N]), at.normal.copy(De.normal)), Fe)
                  for (p = 0; p < 4; p++)
                    N = 3 * Bt[S++], At = new xe(Ot[N++], Ot[N++], Ot[N]), p !== 2 && De.vertexNormals.push(At), p !== 0 && at.vertexNormals.push(At);
                if (He && (Ye = yt[P = Bt[S++]], De.color.setHex(Ye), at.color.setHex(Ye)), me)
                  for (p = 0; p < 4; p++)
                    Ye = yt[P = Bt[S++]], p !== 2 && De.vertexColors.push(new dr(Ye)), p !== 0 && at.vertexColors.push(new dr(Ye));
                h.faces.push(De), h.faces.push(at);
              } else {
                if ((Le = new Li()).a = Bt[S++], Le.b = Bt[S++], Le.c = Bt[S++], pe && (ee = Bt[S++], Le.materialIndex = ee), I = h.faces.length, we)
                  for (p = 0; p < pt; p++)
                    for (gt = l.uvs[p], h.faceVertexUvs[p][I] = [], E = 0; E < 3; E++)
                      xt = new Tt(gt[2 * (j = Bt[S++])], gt[2 * j + 1]), h.faceVertexUvs[p][I].push(xt);
                if (he && (N = 3 * Bt[S++], Le.normal.set(Ot[N++], Ot[N++], Ot[N])), Fe)
                  for (p = 0; p < 3; p++)
                    N = 3 * Bt[S++], At = new xe(Ot[N++], Ot[N++], Ot[N]), Le.vertexNormals.push(At);
                if (He && (P = Bt[S++], Le.color.setHex(yt[P])), me)
                  for (p = 0; p < 3; p++)
                    P = Bt[S++], Le.vertexColors.push(new dr(yt[P]));
                h.faces.push(Le);
              }
          }(t, A), function(l, h) {
            var f = l.influencesPerVertex !== void 0 ? l.influencesPerVertex : 2;
            if (l.skinWeights)
              for (var p = 0, E = l.skinWeights.length; p < E; p += f) {
                var I = l.skinWeights[p], S = f > 1 ? l.skinWeights[p + 1] : 0, G = f > 2 ? l.skinWeights[p + 2] : 0, P = f > 3 ? l.skinWeights[p + 3] : 0;
                h.skinWeights.push(new nn(I, S, G, P));
              }
            if (l.skinIndices)
              for (p = 0, E = l.skinIndices.length; p < E; p += f) {
                var N = l.skinIndices[p], j = f > 1 ? l.skinIndices[p + 1] : 0, ee = f > 2 ? l.skinIndices[p + 2] : 0, oe = f > 3 ? l.skinIndices[p + 3] : 0;
                h.skinIndices.push(new nn(N, j, ee, oe));
              }
            h.bones = l.bones, h.bones && h.bones.length > 0 && (h.skinWeights.length !== h.skinIndices.length || h.skinIndices.length !== h.vertices.length) && console.warn("When skinning, number of vertices (" + h.vertices.length + "), skinIndices (" + h.skinIndices.length + "), and skinWeights (" + h.skinWeights.length + ") should match.");
          }(t, A), function(l, h) {
            var f = l.scale;
            if (l.morphTargets !== void 0)
              for (var p = 0, E = l.morphTargets.length; p < E; p++) {
                h.morphTargets[p] = {}, h.morphTargets[p].name = l.morphTargets[p].name, h.morphTargets[p].vertices = [];
                for (var I = h.morphTargets[p].vertices, S = l.morphTargets[p].vertices, G = 0, P = S.length; G < P; G += 3) {
                  var N = new xe();
                  N.x = S[G] * f, N.y = S[G + 1] * f, N.z = S[G + 2] * f, I.push(N);
                }
              }
            if (l.morphColors !== void 0 && l.morphColors.length > 0) {
              console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
              var j = h.faces, ee = l.morphColors[0].colors;
              for (p = 0, E = j.length; p < E; p++)
                j[p].color.fromArray(ee, 3 * p);
            }
          }(t, A), function(l, h) {
            var f = [], p = [];
            l.animation !== void 0 && p.push(l.animation), l.animations !== void 0 && (l.animations.length ? p = p.concat(l.animations) : p.push(l.animations));
            for (var E = 0; E < p.length; E++) {
              var I = gi.parseAnimation(p[E], h.bones);
              I && f.push(I);
            }
            if (h.morphTargets) {
              var S = gi.CreateClipsFromMorphTargetSequences(h.morphTargets, 10);
              f = f.concat(S);
            }
            f.length > 0 && (h.animations = f);
          }(t, A), A.computeFaceNormals(), A.computeBoundingSphere(), t.materials === void 0 || t.materials.length === 0 ? { geometry: A } : { geometry: A, materials: go.prototype.initMaterials(t.materials, a, this.crossOrigin) };
        };
      }() }), Object.assign(bA.prototype, { crossOrigin: "anonymous", load: function(t, a, A, l) {
        this.texturePath === "" && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
        var h = this;
        new xi(h.manager).load(t, function(f) {
          var p = null;
          try {
            p = JSON.parse(f);
          } catch (I) {
            return l !== void 0 && l(I), void console.error("THREE:ObjectLoader: Can't parse " + t + ".", I.message);
          }
          var E = p.metadata;
          E !== void 0 && E.type !== void 0 && E.type.toLowerCase() !== "geometry" ? h.parse(p, a) : console.error("THREE.ObjectLoader: Can't load " + t + ". Use THREE.JSONLoader instead.");
        }, A, l);
      }, setTexturePath: function(t) {
        return this.texturePath = t, this;
      }, setCrossOrigin: function(t) {
        return this.crossOrigin = t, this;
      }, parse: function(t, a) {
        var A = this.parseShape(t.shapes), l = this.parseGeometries(t.geometries, A), h = this.parseImages(t.images, function() {
          a !== void 0 && a(E);
        }), f = this.parseTextures(t.textures, h), p = this.parseMaterials(t.materials, f), E = this.parseObject(t.object, l, p);
        return t.animations && (E.animations = this.parseAnimations(t.animations)), t.images !== void 0 && t.images.length !== 0 || a !== void 0 && a(E), E;
      }, parseShape: function(t) {
        var a = {};
        if (t !== void 0)
          for (var A = 0, l = t.length; A < l; A++) {
            var h = new aa().fromJSON(t[A]);
            a[h.uuid] = h;
          }
        return a;
      }, parseGeometries: function(t, a) {
        var A = {};
        if (t !== void 0)
          for (var l = new Ic(), h = new vc(), f = 0, p = t.length; f < p; f++) {
            var E, I = t[f];
            switch (I.type) {
              case "PlaneGeometry":
              case "PlaneBufferGeometry":
                E = new ai[I.type](I.width, I.height, I.widthSegments, I.heightSegments);
                break;
              case "BoxGeometry":
              case "BoxBufferGeometry":
              case "CubeGeometry":
                E = new ai[I.type](I.width, I.height, I.depth, I.widthSegments, I.heightSegments, I.depthSegments);
                break;
              case "CircleGeometry":
              case "CircleBufferGeometry":
                E = new ai[I.type](I.radius, I.segments, I.thetaStart, I.thetaLength);
                break;
              case "CylinderGeometry":
              case "CylinderBufferGeometry":
                E = new ai[I.type](I.radiusTop, I.radiusBottom, I.height, I.radialSegments, I.heightSegments, I.openEnded, I.thetaStart, I.thetaLength);
                break;
              case "ConeGeometry":
              case "ConeBufferGeometry":
                E = new ai[I.type](I.radius, I.height, I.radialSegments, I.heightSegments, I.openEnded, I.thetaStart, I.thetaLength);
                break;
              case "SphereGeometry":
              case "SphereBufferGeometry":
                E = new ai[I.type](I.radius, I.widthSegments, I.heightSegments, I.phiStart, I.phiLength, I.thetaStart, I.thetaLength);
                break;
              case "DodecahedronGeometry":
              case "DodecahedronBufferGeometry":
              case "IcosahedronGeometry":
              case "IcosahedronBufferGeometry":
              case "OctahedronGeometry":
              case "OctahedronBufferGeometry":
              case "TetrahedronGeometry":
              case "TetrahedronBufferGeometry":
                E = new ai[I.type](I.radius, I.detail);
                break;
              case "RingGeometry":
              case "RingBufferGeometry":
                E = new ai[I.type](I.innerRadius, I.outerRadius, I.thetaSegments, I.phiSegments, I.thetaStart, I.thetaLength);
                break;
              case "TorusGeometry":
              case "TorusBufferGeometry":
                E = new ai[I.type](I.radius, I.tube, I.radialSegments, I.tubularSegments, I.arc);
                break;
              case "TorusKnotGeometry":
              case "TorusKnotBufferGeometry":
                E = new ai[I.type](I.radius, I.tube, I.tubularSegments, I.radialSegments, I.p, I.q);
                break;
              case "LatheGeometry":
              case "LatheBufferGeometry":
                E = new ai[I.type](I.points, I.segments, I.phiStart, I.phiLength);
                break;
              case "PolyhedronGeometry":
              case "PolyhedronBufferGeometry":
                E = new ai[I.type](I.vertices, I.indices, I.radius, I.details);
                break;
              case "ShapeGeometry":
              case "ShapeBufferGeometry":
                for (var S = [], G = 0, P = I.shapes.length; G < P; G++) {
                  var N = a[I.shapes[G]];
                  S.push(N);
                }
                E = new ai[I.type](S, I.curveSegments);
                break;
              case "ExtrudeGeometry":
              case "ExtrudeBufferGeometry":
                for (S = [], G = 0, P = I.shapes.length; G < P; G++)
                  N = a[I.shapes[G]], S.push(N);
                var j = I.options.extrudePath;
                j !== void 0 && (I.options.extrudePath = new xA[j.type]().fromJSON(j)), E = new ai[I.type](S, I.options);
                break;
              case "BufferGeometry":
                E = h.parse(I);
                break;
              case "Geometry":
                E = l.parse(I, this.texturePath).geometry;
                break;
              default:
                console.warn('THREE.ObjectLoader: Unsupported geometry type "' + I.type + '"');
                continue;
            }
            E.uuid = I.uuid, I.name !== void 0 && (E.name = I.name), E.isBufferGeometry === !0 && I.userData !== void 0 && (E.userData = I.userData), A[I.uuid] = E;
          }
        return A;
      }, parseMaterials: function(t, a) {
        var A = {};
        if (t !== void 0) {
          var l = new Xs();
          l.setTextures(a);
          for (var h = 0, f = t.length; h < f; h++) {
            var p = t[h];
            if (p.type === "MultiMaterial") {
              for (var E = [], I = 0; I < p.materials.length; I++)
                E.push(l.parse(p.materials[I]));
              A[p.uuid] = E;
            } else
              A[p.uuid] = l.parse(p);
          }
        }
        return A;
      }, parseAnimations: function(t) {
        for (var a = [], A = 0; A < t.length; A++) {
          var l = t[A], h = gi.parse(l);
          l.uuid !== void 0 && (h.uuid = l.uuid), a.push(h);
        }
        return a;
      }, parseImages: function(t, a) {
        var A = this, l = {};
        function h(ee) {
          return A.manager.itemStart(ee), f.load(ee, function() {
            A.manager.itemEnd(ee);
          }, void 0, function() {
            A.manager.itemEnd(ee), A.manager.itemError(ee);
          });
        }
        if (t !== void 0 && t.length > 0) {
          var f = new ls(new fc(a));
          f.setCrossOrigin(this.crossOrigin);
          for (var p = 0, E = t.length; p < E; p++) {
            var I = t[p], S = I.url;
            if (Array.isArray(S)) {
              l[I.uuid] = [];
              for (var G = 0, P = S.length; G < P; G++) {
                var N = S[G], j = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(N) ? N : A.texturePath + N;
                l[I.uuid].push(h(j));
              }
            } else
              j = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(I.url) ? I.url : A.texturePath + I.url, l[I.uuid] = h(j);
          }
        }
        return l;
      }, parseTextures: function(t, a) {
        function A(I, S) {
          return typeof I == "number" ? I : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", I), S[I]);
        }
        var l = {};
        if (t !== void 0)
          for (var h = 0, f = t.length; h < f; h++) {
            var p, E = t[h];
            E.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', E.uuid), a[E.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", E.image), (p = Array.isArray(a[E.image]) ? new zi(a[E.image]) : new un(a[E.image])).needsUpdate = !0, p.uuid = E.uuid, E.name !== void 0 && (p.name = E.name), E.mapping !== void 0 && (p.mapping = A(E.mapping, Du)), E.offset !== void 0 && p.offset.fromArray(E.offset), E.repeat !== void 0 && p.repeat.fromArray(E.repeat), E.center !== void 0 && p.center.fromArray(E.center), E.rotation !== void 0 && (p.rotation = E.rotation), E.wrap !== void 0 && (p.wrapS = A(E.wrap[0], _A), p.wrapT = A(E.wrap[1], _A)), E.format !== void 0 && (p.format = E.format), E.minFilter !== void 0 && (p.minFilter = A(E.minFilter, QA)), E.magFilter !== void 0 && (p.magFilter = A(E.magFilter, QA)), E.anisotropy !== void 0 && (p.anisotropy = E.anisotropy), E.flipY !== void 0 && (p.flipY = E.flipY), l[E.uuid] = p;
          }
        return l;
      }, parseObject: function(t, a, A) {
        var l;
        function h(ee) {
          return a[ee] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", ee), a[ee];
        }
        function f(ee) {
          if (ee !== void 0) {
            if (Array.isArray(ee)) {
              for (var oe = [], Ae = 0, pe = ee.length; Ae < pe; Ae++) {
                var we = ee[Ae];
                A[we] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", we), oe.push(A[we]);
              }
              return oe;
            }
            return A[ee] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", ee), A[ee];
          }
        }
        switch (t.type) {
          case "Scene":
            l = new Ms(), t.background !== void 0 && Number.isInteger(t.background) && (l.background = new dr(t.background)), t.fog !== void 0 && (t.fog.type === "Fog" ? l.fog = new Ja(t.fog.color, t.fog.near, t.fog.far) : t.fog.type === "FogExp2" && (l.fog = new za(t.fog.color, t.fog.density)));
            break;
          case "PerspectiveCamera":
            l = new En(t.fov, t.aspect, t.near, t.far), t.focus !== void 0 && (l.focus = t.focus), t.zoom !== void 0 && (l.zoom = t.zoom), t.filmGauge !== void 0 && (l.filmGauge = t.filmGauge), t.filmOffset !== void 0 && (l.filmOffset = t.filmOffset), t.view !== void 0 && (l.view = Object.assign({}, t.view));
            break;
          case "OrthographicCamera":
            l = new $a(t.left, t.right, t.top, t.bottom, t.near, t.far), t.zoom !== void 0 && (l.zoom = t.zoom), t.view !== void 0 && (l.view = Object.assign({}, t.view));
            break;
          case "AmbientLight":
            l = new Ys(t.color, t.intensity);
            break;
          case "DirectionalLight":
            l = new js(t.color, t.intensity);
            break;
          case "PointLight":
            l = new Ds(t.color, t.intensity, t.distance, t.decay);
            break;
          case "RectAreaLight":
            l = new Vs(t.color, t.intensity, t.width, t.height);
            break;
          case "SpotLight":
            l = new qs(t.color, t.intensity, t.distance, t.angle, t.penumbra, t.decay);
            break;
          case "HemisphereLight":
            l = new Us(t.color, t.groundColor, t.intensity);
            break;
          case "SkinnedMesh":
            console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
          case "Mesh":
            var p = h(t.geometry), E = f(t.material);
            l = p.bones && p.bones.length > 0 ? new ks(p, E) : new ri(p, E);
            break;
          case "LOD":
            l = new qo();
            break;
          case "Line":
            l = new ni(h(t.geometry), f(t.material), t.mode);
            break;
          case "LineLoop":
            l = new Fs(h(t.geometry), f(t.material));
            break;
          case "LineSegments":
            l = new cn(h(t.geometry), f(t.material));
            break;
          case "PointCloud":
          case "Points":
            l = new Wa(h(t.geometry), f(t.material));
            break;
          case "Sprite":
            l = new Ho(f(t.material));
            break;
          case "Group":
            l = new La();
            break;
          default:
            l = new zt();
        }
        if (l.uuid = t.uuid, t.name !== void 0 && (l.name = t.name), t.matrix !== void 0 ? (l.matrix.fromArray(t.matrix), t.matrixAutoUpdate !== void 0 && (l.matrixAutoUpdate = t.matrixAutoUpdate), l.matrixAutoUpdate && l.matrix.decompose(l.position, l.quaternion, l.scale)) : (t.position !== void 0 && l.position.fromArray(t.position), t.rotation !== void 0 && l.rotation.fromArray(t.rotation), t.quaternion !== void 0 && l.quaternion.fromArray(t.quaternion), t.scale !== void 0 && l.scale.fromArray(t.scale)), t.castShadow !== void 0 && (l.castShadow = t.castShadow), t.receiveShadow !== void 0 && (l.receiveShadow = t.receiveShadow), t.shadow && (t.shadow.bias !== void 0 && (l.shadow.bias = t.shadow.bias), t.shadow.radius !== void 0 && (l.shadow.radius = t.shadow.radius), t.shadow.mapSize !== void 0 && l.shadow.mapSize.fromArray(t.shadow.mapSize), t.shadow.camera !== void 0 && (l.shadow.camera = this.parseObject(t.shadow.camera))), t.visible !== void 0 && (l.visible = t.visible), t.frustumCulled !== void 0 && (l.frustumCulled = t.frustumCulled), t.renderOrder !== void 0 && (l.renderOrder = t.renderOrder), t.userData !== void 0 && (l.userData = t.userData), t.layers !== void 0 && (l.layers.mask = t.layers), t.children !== void 0)
          for (var I = t.children, S = 0; S < I.length; S++)
            l.add(this.parseObject(I[S], a, A));
        if (t.type === "LOD")
          for (var G = t.levels, P = 0; P < G.length; P++) {
            var N = G[P], j = l.getObjectByProperty("uuid", N.object);
            j !== void 0 && l.addLevel(j, N.distance);
          }
        return l;
      } });
      var ec, Du = { UVMapping: Y, CubeReflectionMapping: k, CubeRefractionMapping: F, EquirectangularReflectionMapping: ue, EquirectangularRefractionMapping: Qe, SphericalReflectionMapping: Oe, CubeUVReflectionMapping: Ve, CubeUVRefractionMapping: It }, _A = { RepeatWrapping: vt, ClampToEdgeWrapping: Qt, MirroredRepeatWrapping: Ct }, QA = { NearestFilter: Rt, NearestMipMapNearestFilter: or, NearestMipMapLinearFilter: tn, LinearFilter: ur, LinearMipMapNearestFilter: Vr, LinearMipMapLinearFilter: zr };
      function xc(t) {
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.manager = t !== void 0 ? t : oi, this.options = void 0;
      }
      function wc() {
        this.type = "ShapePath", this.color = new dr(), this.subPaths = [], this.currentPath = null;
      }
      function bc(t) {
        this.type = "Font", this.data = t;
      }
      function $u(t, a, A, l, h) {
        var f = h.glyphs[t] || h.glyphs["?"];
        if (f) {
          var p, E, I, S, G, P, N, j, ee = new wc();
          if (f.o)
            for (var oe = f._cachedOutline || (f._cachedOutline = f.o.split(" ")), Ae = 0, pe = oe.length; Ae < pe; )
              switch (oe[Ae++]) {
                case "m":
                  p = oe[Ae++] * a + A, E = oe[Ae++] * a + l, ee.moveTo(p, E);
                  break;
                case "l":
                  p = oe[Ae++] * a + A, E = oe[Ae++] * a + l, ee.lineTo(p, E);
                  break;
                case "q":
                  I = oe[Ae++] * a + A, S = oe[Ae++] * a + l, G = oe[Ae++] * a + A, P = oe[Ae++] * a + l, ee.quadraticCurveTo(G, P, I, S);
                  break;
                case "b":
                  I = oe[Ae++] * a + A, S = oe[Ae++] * a + l, G = oe[Ae++] * a + A, P = oe[Ae++] * a + l, N = oe[Ae++] * a + A, j = oe[Ae++] * a + l, ee.bezierCurveTo(G, P, N, j, I, S);
              }
          return { offsetX: f.ha * a, path: ee };
        }
      }
      function SA(t) {
        this.manager = t !== void 0 ? t : oi;
      }
      xc.prototype = { constructor: xc, setOptions: function(t) {
        return this.options = t, this;
      }, load: function(t, a, A, l) {
        t === void 0 && (t = ""), this.path !== void 0 && (t = this.path + t), t = this.manager.resolveURL(t);
        var h = this, f = Ma.get(t);
        if (f !== void 0)
          return h.manager.itemStart(t), setTimeout(function() {
            a && a(f), h.manager.itemEnd(t);
          }, 0), f;
        fetch(t).then(function(p) {
          return p.blob();
        }).then(function(p) {
          return createImageBitmap(p, h.options);
        }).then(function(p) {
          Ma.add(t, p), a && a(p), h.manager.itemEnd(t);
        }).catch(function(p) {
          l && l(p), h.manager.itemEnd(t), h.manager.itemError(t);
        });
      }, setCrossOrigin: function() {
        return this;
      }, setPath: function(t) {
        return this.path = t, this;
      } }, Object.assign(wc.prototype, { moveTo: function(t, a) {
        this.currentPath = new Si(), this.subPaths.push(this.currentPath), this.currentPath.moveTo(t, a);
      }, lineTo: function(t, a) {
        this.currentPath.lineTo(t, a);
      }, quadraticCurveTo: function(t, a, A, l) {
        this.currentPath.quadraticCurveTo(t, a, A, l);
      }, bezierCurveTo: function(t, a, A, l, h, f) {
        this.currentPath.bezierCurveTo(t, a, A, l, h, f);
      }, splineThru: function(t) {
        this.currentPath.splineThru(t);
      }, toShapes: function(t, a) {
        function A(Bt) {
          for (var qt = [], Ot = 0, yt = Bt.length; Ot < yt; Ot++) {
            var Mt = Bt[Ot], pt = new aa();
            pt.curves = Mt.curves, qt.push(pt);
          }
          return qt;
        }
        function l(Bt, qt) {
          for (var Ot = qt.length, yt = !1, Mt = Ot - 1, pt = 0; pt < Ot; Mt = pt++) {
            var er = qt[Mt], Ut = qt[pt], fr = Ut.x - er.x, Ir = Ut.y - er.y;
            if (Math.abs(Ir) > Number.EPSILON) {
              if (Ir < 0 && (er = qt[pt], fr = -fr, Ut = qt[Mt], Ir = -Ir), Bt.y < er.y || Bt.y > Ut.y)
                continue;
              if (Bt.y === er.y) {
                if (Bt.x === er.x)
                  return !0;
              } else {
                var An = Ir * (Bt.x - er.x) - fr * (Bt.y - er.y);
                if (An === 0)
                  return !0;
                if (An < 0)
                  continue;
                yt = !yt;
              }
            } else {
              if (Bt.y !== er.y)
                continue;
              if (Ut.x <= Bt.x && Bt.x <= er.x || er.x <= Bt.x && Bt.x <= Ut.x)
                return !0;
            }
          }
          return yt;
        }
        var h = Ji.isClockWise, f = this.subPaths;
        if (f.length === 0)
          return [];
        if (a === !0)
          return A(f);
        var p, E, I, S = [];
        if (f.length === 1)
          return E = f[0], (I = new aa()).curves = E.curves, S.push(I), S;
        var G = !h(f[0].getPoints());
        G = t ? !G : G;
        var P, N, j = [], ee = [], oe = [], Ae = 0;
        ee[Ae] = void 0, oe[Ae] = [];
        for (var pe = 0, we = f.length; pe < we; pe++)
          p = h(P = (E = f[pe]).getPoints()), (p = t ? !p : p) ? (!G && ee[Ae] && Ae++, ee[Ae] = { s: new aa(), p: P }, ee[Ae].s.curves = E.curves, G && Ae++, oe[Ae] = []) : oe[Ae].push({ h: E, p: P[0] });
        if (!ee[0])
          return A(f);
        if (ee.length > 1) {
          for (var he = !1, Fe = [], He = 0, me = ee.length; He < me; He++)
            j[He] = [];
          for (He = 0, me = ee.length; He < me; He++)
            for (var Te = oe[He], Le = 0; Le < Te.length; Le++) {
              for (var De = Te[Le], at = !0, Ye = 0; Ye < ee.length; Ye++)
                l(De.p, ee[Ye].p) && (He !== Ye && Fe.push({ froms: He, tos: Ye, hole: Le }), at ? (at = !1, j[Ye].push(De)) : he = !0);
              at && j[He].push(De);
            }
          Fe.length > 0 && (he || (oe = j));
        }
        pe = 0;
        for (var At = ee.length; pe < At; pe++) {
          I = ee[pe].s, S.push(I);
          for (var gt = 0, xt = (N = oe[pe]).length; gt < xt; gt++)
            I.holes.push(N[gt].h);
        }
        return S;
      } }), Object.assign(bc.prototype, { isFont: !0, generateShapes: function(t, a) {
        a === void 0 && (a = 100);
        for (var A = [], l = function(p, E, I) {
          for (var S = Array.from ? Array.from(p) : String(p).split(""), G = E / I.resolution, P = (I.boundingBox.yMax - I.boundingBox.yMin + I.underlineThickness) * G, N = [], j = 0, ee = 0, oe = 0; oe < S.length; oe++) {
            var Ae = S[oe];
            if (Ae === `
`)
              j = 0, ee -= P;
            else {
              var pe = $u(Ae, G, j, ee, I);
              j += pe.offsetX, N.push(pe.path);
            }
          }
          return N;
        }(t, a, this.data), h = 0, f = l.length; h < f; h++)
          Array.prototype.push.apply(A, l[h].toShapes());
        return A;
      } }), Object.assign(SA.prototype, { load: function(t, a, A, l) {
        var h = this, f = new xi(this.manager);
        f.setPath(this.path), f.load(t, function(p) {
          var E;
          try {
            E = JSON.parse(p);
          } catch {
            console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), E = JSON.parse(p.substring(65, p.length - 2));
          }
          var I = h.parse(E);
          a && a(I);
        }, A, l);
      }, parse: function(t) {
        return new bc(t);
      }, setPath: function(t) {
        return this.path = t, this;
      } });
      var _c = { getContext: function() {
        return ec === void 0 && (ec = new (window.AudioContext || window.webkitAudioContext)()), ec;
      }, setContext: function(t) {
        ec = t;
      } };
      function Qc(t) {
        this.manager = t !== void 0 ? t : oi;
      }
      function TA() {
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = 0.064, this.cameraL = new En(), this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new En(), this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1;
      }
      function gs(t, a, A) {
        zt.call(this), this.type = "CubeCamera";
        var l = new En(90, 1, t, a);
        l.up.set(0, -1, 0), l.lookAt(new xe(1, 0, 0)), this.add(l);
        var h = new En(90, 1, t, a);
        h.up.set(0, -1, 0), h.lookAt(new xe(-1, 0, 0)), this.add(h);
        var f = new En(90, 1, t, a);
        f.up.set(0, 0, 1), f.lookAt(new xe(0, 1, 0)), this.add(f);
        var p = new En(90, 1, t, a);
        p.up.set(0, 0, -1), p.lookAt(new xe(0, -1, 0)), this.add(p);
        var E = new En(90, 1, t, a);
        E.up.set(0, -1, 0), E.lookAt(new xe(0, 0, 1)), this.add(E);
        var I = new En(90, 1, t, a);
        I.up.set(0, -1, 0), I.lookAt(new xe(0, 0, -1)), this.add(I);
        var S = { format: ke, magFilter: ur, minFilter: ur };
        this.renderTarget = new Da(A, A, S), this.renderTarget.texture.name = "CubeCamera", this.update = function(G, P) {
          this.parent === null && this.updateMatrixWorld();
          var N = this.renderTarget, j = N.texture.generateMipmaps;
          N.texture.generateMipmaps = !1, N.activeCubeFace = 0, G.render(P, l, N), N.activeCubeFace = 1, G.render(P, h, N), N.activeCubeFace = 2, G.render(P, f, N), N.activeCubeFace = 3, G.render(P, p, N), N.activeCubeFace = 4, G.render(P, E, N), N.texture.generateMipmaps = j, N.activeCubeFace = 5, G.render(P, I, N), G.setRenderTarget(null);
        }, this.clear = function(G, P, N, j) {
          for (var ee = this.renderTarget, oe = 0; oe < 6; oe++)
            ee.activeCubeFace = oe, G.setRenderTarget(ee), G.clear(P, N, j);
          G.setRenderTarget(null);
        };
      }
      function Sc() {
        zt.call(this), this.type = "AudioListener", this.context = _c.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null;
      }
      function mo(t) {
        zt.call(this), this.type = "Audio", this.context = t.context, this.gain = this.context.createGain(), this.gain.connect(t.getInput()), this.autoplay = !1, this.buffer = null, this.loop = !1, this.startTime = 0, this.offset = 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this.filters = [];
      }
      function Tc(t) {
        mo.call(this, t), this.panner = this.context.createPanner(), this.panner.connect(this.gain);
      }
      function Rc(t, a) {
        this.analyser = t.context.createAnalyser(), this.analyser.fftSize = a !== void 0 ? a : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), t.getOutput().connect(this.analyser);
      }
      function Mc(t, a, A) {
        this.binding = t, this.valueSize = A;
        var l, h = Float64Array;
        switch (a) {
          case "quaternion":
            l = this._slerp;
            break;
          case "string":
          case "bool":
            h = Array, l = this._select;
            break;
          default:
            l = this._lerp;
        }
        this.buffer = new h(4 * A), this._mixBufferRegion = l, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0;
      }
      Object.assign(Qc.prototype, { load: function(t, a, A, l) {
        var h = new xi(this.manager);
        h.setResponseType("arraybuffer"), h.load(t, function(f) {
          var p = f.slice(0);
          _c.getContext().decodeAudioData(p, function(E) {
            a(E);
          });
        }, A, l);
      } }), Object.assign(TA.prototype, { update: function() {
        var t, a, A, l, h, f, p, E, I = new Br(), S = new Br();
        return function(G) {
          if (t !== this || a !== G.focus || A !== G.fov || l !== G.aspect * this.aspect || h !== G.near || f !== G.far || p !== G.zoom || E !== this.eyeSep) {
            t = this, a = G.focus, A = G.fov, l = G.aspect * this.aspect, h = G.near, f = G.far, p = G.zoom;
            var P, N, j = G.projectionMatrix.clone(), ee = (E = this.eyeSep / 2) * h / a, oe = h * Math.tan(Rr.DEG2RAD * A * 0.5) / p;
            S.elements[12] = -E, I.elements[12] = E, P = -oe * l + ee, N = oe * l + ee, j.elements[0] = 2 * h / (N - P), j.elements[8] = (N + P) / (N - P), this.cameraL.projectionMatrix.copy(j), P = -oe * l - ee, N = oe * l - ee, j.elements[0] = 2 * h / (N - P), j.elements[8] = (N + P) / (N - P), this.cameraR.projectionMatrix.copy(j);
          }
          this.cameraL.matrixWorld.copy(G.matrixWorld).multiply(S), this.cameraR.matrixWorld.copy(G.matrixWorld).multiply(I);
        };
      }() }), gs.prototype = Object.create(zt.prototype), gs.prototype.constructor = gs, Sc.prototype = Object.assign(Object.create(zt.prototype), { constructor: Sc, getInput: function() {
        return this.gain;
      }, removeFilter: function() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
      }, getFilter: function() {
        return this.filter;
      }, setFilter: function(t) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = t, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
      }, getMasterVolume: function() {
        return this.gain.gain.value;
      }, setMasterVolume: function(t) {
        return this.gain.gain.setTargetAtTime(t, this.context.currentTime, 0.01), this;
      }, updateMatrixWorld: function() {
        var t = new xe(), a = new fn(), A = new xe(), l = new xe();
        return function(h) {
          zt.prototype.updateMatrixWorld.call(this, h);
          var f = this.context.listener, p = this.up;
          this.matrixWorld.decompose(t, a, A), l.set(0, 0, -1).applyQuaternion(a), f.positionX ? (f.positionX.setValueAtTime(t.x, this.context.currentTime), f.positionY.setValueAtTime(t.y, this.context.currentTime), f.positionZ.setValueAtTime(t.z, this.context.currentTime), f.forwardX.setValueAtTime(l.x, this.context.currentTime), f.forwardY.setValueAtTime(l.y, this.context.currentTime), f.forwardZ.setValueAtTime(l.z, this.context.currentTime), f.upX.setValueAtTime(p.x, this.context.currentTime), f.upY.setValueAtTime(p.y, this.context.currentTime), f.upZ.setValueAtTime(p.z, this.context.currentTime)) : (f.setPosition(t.x, t.y, t.z), f.setOrientation(l.x, l.y, l.z, p.x, p.y, p.z));
        };
      }() }), mo.prototype = Object.assign(Object.create(zt.prototype), { constructor: mo, getOutput: function() {
        return this.gain;
      }, setNodeSource: function(t) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = t, this.connect(), this;
      }, setMediaElementSource: function(t) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(t), this.connect(), this;
      }, setBuffer: function(t) {
        return this.buffer = t, this.sourceType = "buffer", this.autoplay && this.play(), this;
      }, play: function() {
        if (this.isPlaying !== !0) {
          if (this.hasPlaybackControl !== !1) {
            var t = this.context.createBufferSource();
            return t.buffer = this.buffer, t.loop = this.loop, t.onended = this.onEnded.bind(this), t.playbackRate.setValueAtTime(this.playbackRate, this.startTime), this.startTime = this.context.currentTime, t.start(this.startTime, this.offset), this.isPlaying = !0, this.source = t, this.connect();
          }
          console.warn("THREE.Audio: this Audio has no playback control.");
        } else
          console.warn("THREE.Audio: Audio is already playing.");
      }, pause: function() {
        if (this.hasPlaybackControl !== !1)
          return this.isPlaying === !0 && (this.source.stop(), this.source.onended = null, this.offset += (this.context.currentTime - this.startTime) * this.playbackRate, this.isPlaying = !1), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, stop: function() {
        if (this.hasPlaybackControl !== !1)
          return this.source.stop(), this.source.onended = null, this.offset = 0, this.isPlaying = !1, this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, connect: function() {
        if (this.filters.length > 0) {
          this.source.connect(this.filters[0]);
          for (var t = 1, a = this.filters.length; t < a; t++)
            this.filters[t - 1].connect(this.filters[t]);
          this.filters[this.filters.length - 1].connect(this.getOutput());
        } else
          this.source.connect(this.getOutput());
        return this;
      }, disconnect: function() {
        if (this.filters.length > 0) {
          this.source.disconnect(this.filters[0]);
          for (var t = 1, a = this.filters.length; t < a; t++)
            this.filters[t - 1].disconnect(this.filters[t]);
          this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else
          this.source.disconnect(this.getOutput());
        return this;
      }, getFilters: function() {
        return this.filters;
      }, setFilters: function(t) {
        return t || (t = []), this.isPlaying === !0 ? (this.disconnect(), this.filters = t, this.connect()) : this.filters = t, this;
      }, getFilter: function() {
        return this.getFilters()[0];
      }, setFilter: function(t) {
        return this.setFilters(t ? [t] : []);
      }, setPlaybackRate: function(t) {
        if (this.hasPlaybackControl !== !1)
          return this.playbackRate = t, this.isPlaying === !0 && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getPlaybackRate: function() {
        return this.playbackRate;
      }, onEnded: function() {
        this.isPlaying = !1;
      }, getLoop: function() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
      }, setLoop: function(t) {
        if (this.hasPlaybackControl !== !1)
          return this.loop = t, this.isPlaying === !0 && (this.source.loop = this.loop), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getVolume: function() {
        return this.gain.gain.value;
      }, setVolume: function(t) {
        return this.gain.gain.setTargetAtTime(t, this.context.currentTime, 0.01), this;
      } }), Tc.prototype = Object.assign(Object.create(mo.prototype), { constructor: Tc, getOutput: function() {
        return this.panner;
      }, getRefDistance: function() {
        return this.panner.refDistance;
      }, setRefDistance: function(t) {
        return this.panner.refDistance = t, this;
      }, getRolloffFactor: function() {
        return this.panner.rolloffFactor;
      }, setRolloffFactor: function(t) {
        return this.panner.rolloffFactor = t, this;
      }, getDistanceModel: function() {
        return this.panner.distanceModel;
      }, setDistanceModel: function(t) {
        return this.panner.distanceModel = t, this;
      }, getMaxDistance: function() {
        return this.panner.maxDistance;
      }, setMaxDistance: function(t) {
        return this.panner.maxDistance = t, this;
      }, setDirectionalCone: function(t, a, A) {
        return this.panner.coneInnerAngle = t, this.panner.coneOuterAngle = a, this.panner.coneOuterGain = A, this;
      }, updateMatrixWorld: function() {
        var t = new xe(), a = new fn(), A = new xe(), l = new xe();
        return function(h) {
          zt.prototype.updateMatrixWorld.call(this, h);
          var f = this.panner;
          this.matrixWorld.decompose(t, a, A), l.set(0, 0, 1).applyQuaternion(a), f.setPosition(t.x, t.y, t.z), f.setOrientation(l.x, l.y, l.z);
        };
      }() }), Object.assign(Rc.prototype, { getFrequencyData: function() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
      }, getAverageFrequency: function() {
        for (var t = 0, a = this.getFrequencyData(), A = 0; A < a.length; A++)
          t += a[A];
        return t / a.length;
      } }), Object.assign(Mc.prototype, { accumulate: function(t, a) {
        var A = this.buffer, l = this.valueSize, h = t * l + l, f = this.cumulativeWeight;
        if (f === 0) {
          for (var p = 0; p !== l; ++p)
            A[h + p] = A[p];
          f = a;
        } else {
          var E = a / (f += a);
          this._mixBufferRegion(A, h, 0, E, l);
        }
        this.cumulativeWeight = f;
      }, apply: function(t) {
        var a = this.valueSize, A = this.buffer, l = t * a + a, h = this.cumulativeWeight, f = this.binding;
        if (this.cumulativeWeight = 0, h < 1) {
          var p = 3 * a;
          this._mixBufferRegion(A, l, p, 1 - h, a);
        }
        for (var E = a, I = a + a; E !== I; ++E)
          if (A[E] !== A[E + a]) {
            f.setValue(A, l);
            break;
          }
      }, saveOriginalState: function() {
        var t = this.binding, a = this.buffer, A = this.valueSize, l = 3 * A;
        t.getValue(a, l);
        for (var h = A, f = l; h !== f; ++h)
          a[h] = a[l + h % A];
        this.cumulativeWeight = 0;
      }, restoreOriginalState: function() {
        var t = 3 * this.valueSize;
        this.binding.setValue(this.buffer, t);
      }, _select: function(t, a, A, l, h) {
        if (l >= 0.5)
          for (var f = 0; f !== h; ++f)
            t[a + f] = t[A + f];
      }, _slerp: function(t, a, A, l) {
        fn.slerpFlat(t, a, t, a, t, A, l);
      }, _lerp: function(t, a, A, l, h) {
        for (var f = 1 - l, p = 0; p !== h; ++p) {
          var E = a + p;
          t[E] = t[E] * f + t[A + p] * l;
        }
      } });
      var Nc, RA;
      function MA(t, a, A) {
        var l = A || Vn.parseTrackName(a);
        this._targetGroup = t, this._bindings = t.subscribe_(a, l);
      }
      function Vn(t, a, A) {
        this.path = a, this.parsedPath = A || Vn.parseTrackName(a), this.node = Vn.findNode(t, this.parsedPath.nodeName) || t, this.rootNode = t;
      }
      function NA() {
        this.uuid = Rr.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        var t = {};
        this._indicesByUUID = t;
        for (var a = 0, A = arguments.length; a !== A; ++a)
          t[arguments[a].uuid] = a;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        var l = this;
        this.stats = { objects: { get total() {
          return l._objects.length;
        }, get inUse() {
          return this.total - l.nCachedObjects_;
        } }, get bindingsPerObject() {
          return l._bindings.length;
        } };
      }
      function kA(t, a, A) {
        this._mixer = t, this._clip = a, this._localRoot = A || null;
        for (var l = a.tracks, h = l.length, f = new Array(h), p = { endingStart: ar, endingEnd: ar }, E = 0; E !== h; ++E) {
          var I = l[E].createInterpolant(null);
          f[E] = I, I.settings = p;
        }
        this._interpolantSettings = p, this._interpolants = f, this._propertyBindings = new Array(h), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Pr, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
      }
      function kc(t) {
        this._root = t, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
      }
      function tc(t) {
        typeof t == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), t = arguments[1]), this.value = t;
      }
      function Fc() {
        rr.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0;
      }
      function Gc(t, a, A) {
        Ea.call(this, t, a), this.meshPerAttribute = A || 1;
      }
      function Oc(t, a, A) {
        Or.call(this, t, a), this.meshPerAttribute = A || 1;
      }
      function FA(t, a, A, l) {
        this.ray = new ma(t, a), this.near = A || 0, this.far = l || 1 / 0, this.params = { Mesh: {}, Line: {}, LOD: {}, Points: { threshold: 1 }, Sprite: {} }, Object.defineProperties(this.params, { PointCloud: { get: function() {
          return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points;
        } } });
      }
      function GA(t, a) {
        return t.distance - a.distance;
      }
      function Pc(t, a, A, l) {
        if (t.visible !== !1 && (t.raycast(a, A), l === !0))
          for (var h = t.children, f = 0, p = h.length; f < p; f++)
            Pc(h[f], a, A, !0);
      }
      function OA(t) {
        this.autoStart = t === void 0 || t, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
      }
      function PA(t, a, A) {
        return this.radius = t !== void 0 ? t : 1, this.phi = a !== void 0 ? a : 0, this.theta = A !== void 0 ? A : 0, this;
      }
      function UA(t, a, A) {
        return this.radius = t !== void 0 ? t : 1, this.theta = a !== void 0 ? a : 0, this.y = A !== void 0 ? A : 0, this;
      }
      function Uc(t, a) {
        this.min = t !== void 0 ? t : new Tt(1 / 0, 1 / 0), this.max = a !== void 0 ? a : new Tt(-1 / 0, -1 / 0);
      }
      function Hc(t, a) {
        this.start = t !== void 0 ? t : new xe(), this.end = a !== void 0 ? a : new xe();
      }
      function ms(t) {
        zt.call(this), this.material = t, this.render = function() {
        };
      }
      function Es(t, a, A, l) {
        this.object = t, this.size = a !== void 0 ? a : 1;
        var h = A !== void 0 ? A : 16711680, f = l !== void 0 ? l : 1, p = 0, E = this.object.geometry;
        E && E.isGeometry ? p = 3 * E.faces.length : E && E.isBufferGeometry && (p = E.attributes.normal.count);
        var I = new rr(), S = new jt(2 * p * 3, 3);
        I.addAttribute("position", S), cn.call(this, I, new on({ color: h, linewidth: f })), this.matrixAutoUpdate = !1, this.update();
      }
      function Eo(t, a) {
        zt.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = a;
        for (var A = new rr(), l = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], h = 0, f = 1; h < 32; h++, f++) {
          var p = h / 32 * Math.PI * 2, E = f / 32 * Math.PI * 2;
          l.push(Math.cos(p), Math.sin(p), 1, Math.cos(E), Math.sin(E), 1);
        }
        A.addAttribute("position", new jt(l, 3));
        var I = new on({ fog: !1 });
        this.cone = new cn(A, I), this.add(this.cone), this.update();
      }
      function yo(t) {
        for (var a = function G(P) {
          var N = [];
          P && P.isBone && N.push(P);
          for (var j = 0; j < P.children.length; j++)
            N.push.apply(N, G(P.children[j]));
          return N;
        }(t), A = new rr(), l = [], h = [], f = new dr(0, 0, 1), p = new dr(0, 1, 0), E = 0; E < a.length; E++) {
          var I = a[E];
          I.parent && I.parent.isBone && (l.push(0, 0, 0), l.push(0, 0, 0), h.push(f.r, f.g, f.b), h.push(p.r, p.g, p.b));
        }
        A.addAttribute("position", new jt(l, 3)), A.addAttribute("color", new jt(h, 3));
        var S = new on({ vertexColors: Ie, depthTest: !1, depthWrite: !1, transparent: !0 });
        cn.call(this, A, S), this.root = t, this.bones = a, this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1;
      }
      function Bo(t, a, A) {
        this.light = t, this.light.updateMatrixWorld(), this.color = A;
        var l = new Ca(a, 4, 2), h = new Ai({ wireframe: !0, fog: !1 });
        ri.call(this, l, h), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
      }
      function vo(t, a) {
        zt.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = a;
        var A = new on({ fog: !1 }), l = new rr();
        l.addAttribute("position", new Or(new Float32Array(15), 3)), this.line = new ni(l, A), this.add(this.line), this.update();
      }
      function Co(t, a, A) {
        zt.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = A;
        var l = new ya(a);
        l.rotateY(0.5 * Math.PI), this.material = new Ai({ wireframe: !0, fog: !1 }), this.color === void 0 && (this.material.vertexColors = Ie);
        var h = l.getAttribute("position"), f = new Float32Array(3 * h.count);
        l.addAttribute("color", new Or(f, 3)), this.add(new ri(l, this.material)), this.update();
      }
      function ys(t, a, A, l) {
        t = t || 10, a = a || 10, A = new dr(A !== void 0 ? A : 4473924), l = new dr(l !== void 0 ? l : 8947848);
        for (var h = a / 2, f = t / a, p = t / 2, E = [], I = [], S = 0, G = 0, P = -p; S <= a; S++, P += f) {
          E.push(-p, 0, P, p, 0, P), E.push(P, 0, -p, P, 0, p);
          var N = S === h ? A : l;
          N.toArray(I, G), G += 3, N.toArray(I, G), G += 3, N.toArray(I, G), G += 3, N.toArray(I, G), G += 3;
        }
        var j = new rr();
        j.addAttribute("position", new jt(E, 3)), j.addAttribute("color", new jt(I, 3));
        var ee = new on({ vertexColors: Ie });
        cn.call(this, j, ee);
      }
      function rc(t, a, A, l, h, f) {
        t = t || 10, a = a || 16, A = A || 8, l = l || 64, h = new dr(h !== void 0 ? h : 4473924), f = new dr(f !== void 0 ? f : 8947848);
        var p, E, I, S, G, P, N, j = [], ee = [];
        for (S = 0; S <= a; S++)
          I = S / a * (2 * Math.PI), p = Math.sin(I) * t, E = Math.cos(I) * t, j.push(0, 0, 0), j.push(p, 0, E), N = 1 & S ? h : f, ee.push(N.r, N.g, N.b), ee.push(N.r, N.g, N.b);
        for (S = 0; S <= A; S++)
          for (N = 1 & S ? h : f, P = t - t / A * S, G = 0; G < l; G++)
            I = G / l * (2 * Math.PI), p = Math.sin(I) * P, E = Math.cos(I) * P, j.push(p, 0, E), ee.push(N.r, N.g, N.b), I = (G + 1) / l * (2 * Math.PI), p = Math.sin(I) * P, E = Math.cos(I) * P, j.push(p, 0, E), ee.push(N.r, N.g, N.b);
        var oe = new rr();
        oe.addAttribute("position", new jt(j, 3)), oe.addAttribute("color", new jt(ee, 3));
        var Ae = new on({ vertexColors: Ie });
        cn.call(this, oe, Ae);
      }
      function Bs(t, a, A, l) {
        this.object = t, this.size = a !== void 0 ? a : 1;
        var h = A !== void 0 ? A : 16776960, f = l !== void 0 ? l : 1, p = 0, E = this.object.geometry;
        E && E.isGeometry ? p = E.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
        var I = new rr(), S = new jt(2 * p * 3, 3);
        I.addAttribute("position", S), cn.call(this, I, new on({ color: h, linewidth: f })), this.matrixAutoUpdate = !1, this.update();
      }
      function Io(t, a, A) {
        zt.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.color = A, a === void 0 && (a = 1);
        var l = new rr();
        l.addAttribute("position", new jt([-a, a, 0, a, a, 0, a, -a, 0, -a, -a, 0, -a, a, 0], 3));
        var h = new on({ fog: !1 });
        this.lightPlane = new ni(l, h), this.add(this.lightPlane), (l = new rr()).addAttribute("position", new jt([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new ni(l, h), this.add(this.targetLine), this.update();
      }
      function vs(t) {
        var a = new rr(), A = new on({ color: 16777215, vertexColors: ce }), l = [], h = [], f = {}, p = new dr(16755200), E = new dr(16711680), I = new dr(43775), S = new dr(16777215), G = new dr(3355443);
        function P(j, ee, oe) {
          N(j, oe), N(ee, oe);
        }
        function N(j, ee) {
          l.push(0, 0, 0), h.push(ee.r, ee.g, ee.b), f[j] === void 0 && (f[j] = []), f[j].push(l.length / 3 - 1);
        }
        P("n1", "n2", p), P("n2", "n4", p), P("n4", "n3", p), P("n3", "n1", p), P("f1", "f2", p), P("f2", "f4", p), P("f4", "f3", p), P("f3", "f1", p), P("n1", "f1", p), P("n2", "f2", p), P("n3", "f3", p), P("n4", "f4", p), P("p", "n1", E), P("p", "n2", E), P("p", "n3", E), P("p", "n4", E), P("u1", "u2", I), P("u2", "u3", I), P("u3", "u1", I), P("c", "t", S), P("p", "c", G), P("cn1", "cn2", G), P("cn3", "cn4", G), P("cf1", "cf2", G), P("cf3", "cf4", G), a.addAttribute("position", new jt(l, 3)), a.addAttribute("color", new jt(h, 3)), cn.call(this, a, A), this.camera = t, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = f, this.update();
      }
      function ka(t, a) {
        this.object = t, a === void 0 && (a = 16776960);
        var A = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), l = new Float32Array(24), h = new rr();
        h.setIndex(new Or(A, 1)), h.addAttribute("position", new Or(l, 3)), cn.call(this, h, new on({ color: a })), this.matrixAutoUpdate = !1, this.update();
      }
      function Cs(t, a) {
        this.type = "Box3Helper", this.box = t;
        var A = a !== void 0 ? a : 16776960, l = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), h = new rr();
        h.setIndex(new Or(l, 1)), h.addAttribute("position", new jt([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), cn.call(this, h, new on({ color: A })), this.geometry.computeBoundingSphere();
      }
      function Is(t, a, A) {
        this.type = "PlaneHelper", this.plane = t, this.size = a === void 0 ? 1 : a;
        var l = A !== void 0 ? A : 16776960, h = new rr();
        h.addAttribute("position", new jt([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), h.computeBoundingSphere(), ni.call(this, h, new on({ color: l }));
        var f = new rr();
        f.addAttribute("position", new jt([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), f.computeBoundingSphere(), this.add(new ri(f, new Ai({ color: l, opacity: 0.2, transparent: !0, depthWrite: !1 })));
      }
      function Fa(t, a, A, l, h, f) {
        zt.call(this), l === void 0 && (l = 16776960), A === void 0 && (A = 1), h === void 0 && (h = 0.2 * A), f === void 0 && (f = 0.2 * h), Nc === void 0 && ((Nc = new rr()).addAttribute("position", new jt([0, 0, 0, 0, 1, 0], 3)), (RA = new Wi(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)), this.position.copy(a), this.line = new ni(Nc, new on({ color: l })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new ri(RA, new Ai({ color: l })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(t), this.setLength(A, h, f);
      }
      function xs(t) {
        var a = [0, 0, 0, t = t || 1, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t], A = new rr();
        A.addAttribute("position", new jt(a, 3)), A.addAttribute("color", new jt([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1], 3));
        var l = new on({ vertexColors: Ie });
        cn.call(this, A, l);
      }
      function ju(t, a, A, l, h, f, p) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new Li(t, a, A, h, f, p);
      }
      Object.assign(MA.prototype, { getValue: function(t, a) {
        this.bind();
        var A = this._targetGroup.nCachedObjects_, l = this._bindings[A];
        l !== void 0 && l.getValue(t, a);
      }, setValue: function(t, a) {
        for (var A = this._bindings, l = this._targetGroup.nCachedObjects_, h = A.length; l !== h; ++l)
          A[l].setValue(t, a);
      }, bind: function() {
        for (var t = this._bindings, a = this._targetGroup.nCachedObjects_, A = t.length; a !== A; ++a)
          t[a].bind();
      }, unbind: function() {
        for (var t = this._bindings, a = this._targetGroup.nCachedObjects_, A = t.length; a !== A; ++a)
          t[a].unbind();
      } }), Object.assign(Vn, { Composite: MA, create: function(t, a, A) {
        return t && t.isAnimationObjectGroup ? new Vn.Composite(t, a, A) : new Vn(t, a, A);
      }, sanitizeNodeName: function() {
        var t = new RegExp("[\\[\\]\\.:\\/]", "g");
        return function(a) {
          return a.replace(/\s/g, "_").replace(t, "");
        };
      }(), parseTrackName: function() {
        var t = "[^\\[\\]\\.:\\/]", a = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]", A = /((?:WC+[\/:])*)/.source.replace("WC", t), l = /(WCOD+)?/.source.replace("WCOD", a), h = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", t), f = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", t), p = new RegExp("^" + A + l + h + f + "$"), E = ["material", "materials", "bones"];
        return function(I) {
          var S = p.exec(I);
          if (!S)
            throw new Error("PropertyBinding: Cannot parse trackName: " + I);
          var G = { nodeName: S[2], objectName: S[3], objectIndex: S[4], propertyName: S[5], propertyIndex: S[6] }, P = G.nodeName && G.nodeName.lastIndexOf(".");
          if (P !== void 0 && P !== -1) {
            var N = G.nodeName.substring(P + 1);
            E.indexOf(N) !== -1 && (G.nodeName = G.nodeName.substring(0, P), G.objectName = N);
          }
          if (G.propertyName === null || G.propertyName.length === 0)
            throw new Error("PropertyBinding: can not parse propertyName from trackName: " + I);
          return G;
        };
      }(), findNode: function(t, a) {
        if (!a || a === "" || a === "root" || a === "." || a === -1 || a === t.name || a === t.uuid)
          return t;
        if (t.skeleton) {
          var A = t.skeleton.getBoneByName(a);
          if (A !== void 0)
            return A;
        }
        if (t.children) {
          var l = function(f) {
            for (var p = 0; p < f.length; p++) {
              var E = f[p];
              if (E.name === a || E.uuid === a)
                return E;
              var I = l(E.children);
              if (I)
                return I;
            }
            return null;
          }, h = l(t.children);
          if (h)
            return h;
        }
        return null;
      } }), Object.assign(Vn.prototype, { _getValue_unavailable: function() {
      }, _setValue_unavailable: function() {
      }, BindingType: { Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3 }, Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 }, GetterByBindingType: [function(t, a) {
        t[a] = this.node[this.propertyName];
      }, function(t, a) {
        for (var A = this.resolvedProperty, l = 0, h = A.length; l !== h; ++l)
          t[a++] = A[l];
      }, function(t, a) {
        t[a] = this.resolvedProperty[this.propertyIndex];
      }, function(t, a) {
        this.resolvedProperty.toArray(t, a);
      }], SetterByBindingTypeAndVersioning: [[function(t, a) {
        this.targetObject[this.propertyName] = t[a];
      }, function(t, a) {
        this.targetObject[this.propertyName] = t[a], this.targetObject.needsUpdate = !0;
      }, function(t, a) {
        this.targetObject[this.propertyName] = t[a], this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(t, a) {
        for (var A = this.resolvedProperty, l = 0, h = A.length; l !== h; ++l)
          A[l] = t[a++];
      }, function(t, a) {
        for (var A = this.resolvedProperty, l = 0, h = A.length; l !== h; ++l)
          A[l] = t[a++];
        this.targetObject.needsUpdate = !0;
      }, function(t, a) {
        for (var A = this.resolvedProperty, l = 0, h = A.length; l !== h; ++l)
          A[l] = t[a++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(t, a) {
        this.resolvedProperty[this.propertyIndex] = t[a];
      }, function(t, a) {
        this.resolvedProperty[this.propertyIndex] = t[a], this.targetObject.needsUpdate = !0;
      }, function(t, a) {
        this.resolvedProperty[this.propertyIndex] = t[a], this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(t, a) {
        this.resolvedProperty.fromArray(t, a);
      }, function(t, a) {
        this.resolvedProperty.fromArray(t, a), this.targetObject.needsUpdate = !0;
      }, function(t, a) {
        this.resolvedProperty.fromArray(t, a), this.targetObject.matrixWorldNeedsUpdate = !0;
      }]], getValue: function(t, a) {
        this.bind(), this.getValue(t, a);
      }, setValue: function(t, a) {
        this.bind(), this.setValue(t, a);
      }, bind: function() {
        var t = this.node, a = this.parsedPath, A = a.objectName, l = a.propertyName, h = a.propertyIndex;
        if (t || (t = Vn.findNode(this.rootNode, a.nodeName) || this.rootNode, this.node = t), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, t) {
          if (A) {
            var f = a.objectIndex;
            switch (A) {
              case "materials":
                if (!t.material)
                  return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                if (!t.material.materials)
                  return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                t = t.material.materials;
                break;
              case "bones":
                if (!t.skeleton)
                  return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                t = t.skeleton.bones;
                for (var p = 0; p < t.length; p++)
                  if (t[p].name === f) {
                    f = p;
                    break;
                  }
                break;
              default:
                if (t[A] === void 0)
                  return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                t = t[A];
            }
            if (f !== void 0) {
              if (t[f] === void 0)
                return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
              t = t[f];
            }
          }
          var E = t[l];
          if (E !== void 0) {
            var I = this.Versioning.None;
            t.needsUpdate !== void 0 ? (I = this.Versioning.NeedsUpdate, this.targetObject = t) : t.matrixWorldNeedsUpdate !== void 0 && (I = this.Versioning.MatrixWorldNeedsUpdate, this.targetObject = t);
            var S = this.BindingType.Direct;
            if (h !== void 0) {
              if (l === "morphTargetInfluences") {
                if (!t.geometry)
                  return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                if (t.geometry.isBufferGeometry) {
                  if (!t.geometry.morphAttributes)
                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                  for (p = 0; p < this.node.geometry.morphAttributes.position.length; p++)
                    if (t.geometry.morphAttributes.position[p].name === h) {
                      h = p;
                      break;
                    }
                } else {
                  if (!t.geometry.morphTargets)
                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                  for (p = 0; p < this.node.geometry.morphTargets.length; p++)
                    if (t.geometry.morphTargets[p].name === h) {
                      h = p;
                      break;
                    }
                }
              }
              S = this.BindingType.ArrayElement, this.resolvedProperty = E, this.propertyIndex = h;
            } else
              E.fromArray !== void 0 && E.toArray !== void 0 ? (S = this.BindingType.HasFromToArray, this.resolvedProperty = E) : Array.isArray(E) ? (S = this.BindingType.EntireArray, this.resolvedProperty = E) : this.propertyName = l;
            this.getValue = this.GetterByBindingType[S], this.setValue = this.SetterByBindingTypeAndVersioning[S][I];
          } else {
            var G = a.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + G + "." + l + " but it wasn't found.", t);
          }
        } else
          console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
      }, unbind: function() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
      } }), Object.assign(Vn.prototype, { _getValue_unbound: Vn.prototype.getValue, _setValue_unbound: Vn.prototype.setValue }), Object.assign(NA.prototype, { isAnimationObjectGroup: !0, add: function() {
        for (var t = this._objects, a = t.length, A = this.nCachedObjects_, l = this._indicesByUUID, h = this._paths, f = this._parsedPaths, p = this._bindings, E = p.length, I = void 0, S = 0, G = arguments.length; S !== G; ++S) {
          var P = arguments[S], N = P.uuid, j = l[N];
          if (j === void 0) {
            j = a++, l[N] = j, t.push(P);
            for (var ee = 0, oe = E; ee !== oe; ++ee)
              p[ee].push(new Vn(P, h[ee], f[ee]));
          } else if (j < A) {
            I = t[j];
            var Ae = --A, pe = t[Ae];
            for (l[pe.uuid] = j, t[j] = pe, l[N] = Ae, t[Ae] = P, ee = 0, oe = E; ee !== oe; ++ee) {
              var we = p[ee], he = we[Ae], Fe = we[j];
              we[j] = he, Fe === void 0 && (Fe = new Vn(P, h[ee], f[ee])), we[Ae] = Fe;
            }
          } else
            t[j] !== I && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = A;
      }, remove: function() {
        for (var t = this._objects, a = this.nCachedObjects_, A = this._indicesByUUID, l = this._bindings, h = l.length, f = 0, p = arguments.length; f !== p; ++f) {
          var E = arguments[f], I = E.uuid, S = A[I];
          if (S !== void 0 && S >= a) {
            var G = a++, P = t[G];
            A[P.uuid] = S, t[S] = P, A[I] = G, t[G] = E;
            for (var N = 0, j = h; N !== j; ++N) {
              var ee = l[N], oe = ee[G], Ae = ee[S];
              ee[S] = oe, ee[G] = Ae;
            }
          }
        }
        this.nCachedObjects_ = a;
      }, uncache: function() {
        for (var t = this._objects, a = t.length, A = this.nCachedObjects_, l = this._indicesByUUID, h = this._bindings, f = h.length, p = 0, E = arguments.length; p !== E; ++p) {
          var I = arguments[p].uuid, S = l[I];
          if (S !== void 0)
            if (delete l[I], S < A) {
              var G = --A, P = t[G], N = t[pe = --a];
              l[P.uuid] = S, t[S] = P, l[N.uuid] = G, t[G] = N, t.pop();
              for (var j = 0, ee = f; j !== ee; ++j) {
                var oe = (we = h[j])[G], Ae = we[pe];
                we[S] = oe, we[G] = Ae, we.pop();
              }
            } else {
              var pe;
              for (l[(N = t[pe = --a]).uuid] = S, t[S] = N, t.pop(), j = 0, ee = f; j !== ee; ++j) {
                var we;
                (we = h[j])[S] = we[pe], we.pop();
              }
            }
        }
        this.nCachedObjects_ = A;
      }, subscribe_: function(t, a) {
        var A = this._bindingsIndicesByPath, l = A[t], h = this._bindings;
        if (l !== void 0)
          return h[l];
        var f = this._paths, p = this._parsedPaths, E = this._objects, I = E.length, S = this.nCachedObjects_, G = new Array(I);
        l = h.length, A[t] = l, f.push(t), p.push(a), h.push(G);
        for (var P = S, N = E.length; P !== N; ++P) {
          var j = E[P];
          G[P] = new Vn(j, t, a);
        }
        return G;
      }, unsubscribe_: function(t) {
        var a = this._bindingsIndicesByPath, A = a[t];
        if (A !== void 0) {
          var l = this._paths, h = this._parsedPaths, f = this._bindings, p = f.length - 1, E = f[p];
          a[t[p]] = A, f[A] = E, f.pop(), h[A] = h[p], h.pop(), l[A] = l[p], l.pop();
        }
      } }), Object.assign(kA.prototype, { play: function() {
        return this._mixer._activateAction(this), this;
      }, stop: function() {
        return this._mixer._deactivateAction(this), this.reset();
      }, reset: function() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
      }, isRunning: function() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
      }, isScheduled: function() {
        return this._mixer._isActiveAction(this);
      }, startAt: function(t) {
        return this._startTime = t, this;
      }, setLoop: function(t, a) {
        return this.loop = t, this.repetitions = a, this;
      }, setEffectiveWeight: function(t) {
        return this.weight = t, this._effectiveWeight = this.enabled ? t : 0, this.stopFading();
      }, getEffectiveWeight: function() {
        return this._effectiveWeight;
      }, fadeIn: function(t) {
        return this._scheduleFading(t, 0, 1);
      }, fadeOut: function(t) {
        return this._scheduleFading(t, 1, 0);
      }, crossFadeFrom: function(t, a, A) {
        if (t.fadeOut(a), this.fadeIn(a), A) {
          var l = this._clip.duration, h = t._clip.duration, f = h / l, p = l / h;
          t.warp(1, f, a), this.warp(p, 1, a);
        }
        return this;
      }, crossFadeTo: function(t, a, A) {
        return t.crossFadeFrom(this, a, A);
      }, stopFading: function() {
        var t = this._weightInterpolant;
        return t !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this;
      }, setEffectiveTimeScale: function(t) {
        return this.timeScale = t, this._effectiveTimeScale = this.paused ? 0 : t, this.stopWarping();
      }, getEffectiveTimeScale: function() {
        return this._effectiveTimeScale;
      }, setDuration: function(t) {
        return this.timeScale = this._clip.duration / t, this.stopWarping();
      }, syncWith: function(t) {
        return this.time = t.time, this.timeScale = t.timeScale, this.stopWarping();
      }, halt: function(t) {
        return this.warp(this._effectiveTimeScale, 0, t);
      }, warp: function(t, a, A) {
        var l = this._mixer, h = l.time, f = this._timeScaleInterpolant, p = this.timeScale;
        f === null && (f = l._lendControlInterpolant(), this._timeScaleInterpolant = f);
        var E = f.parameterPositions, I = f.sampleValues;
        return E[0] = h, E[1] = h + A, I[0] = t / p, I[1] = a / p, this;
      }, stopWarping: function() {
        var t = this._timeScaleInterpolant;
        return t !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this;
      }, getMixer: function() {
        return this._mixer;
      }, getClip: function() {
        return this._clip;
      }, getRoot: function() {
        return this._localRoot || this._mixer._root;
      }, _update: function(t, a, A, l) {
        if (this.enabled) {
          var h = this._startTime;
          if (h !== null) {
            var f = (t - h) * A;
            if (f < 0 || A === 0)
              return;
            this._startTime = null, a = A * f;
          }
          a *= this._updateTimeScale(t);
          var p = this._updateTime(a), E = this._updateWeight(t);
          if (E > 0)
            for (var I = this._interpolants, S = this._propertyBindings, G = 0, P = I.length; G !== P; ++G)
              I[G].evaluate(p), S[G].accumulate(l, E);
        } else
          this._updateWeight(t);
      }, _updateWeight: function(t) {
        var a = 0;
        if (this.enabled) {
          a = this.weight;
          var A = this._weightInterpolant;
          if (A !== null) {
            var l = A.evaluate(t)[0];
            a *= l, t > A.parameterPositions[1] && (this.stopFading(), l === 0 && (this.enabled = !1));
          }
        }
        return this._effectiveWeight = a, a;
      }, _updateTimeScale: function(t) {
        var a = 0;
        if (!this.paused) {
          a = this.timeScale;
          var A = this._timeScaleInterpolant;
          A !== null && (a *= A.evaluate(t)[0], t > A.parameterPositions[1] && (this.stopWarping(), a === 0 ? this.paused = !0 : this.timeScale = a));
        }
        return this._effectiveTimeScale = a, a;
      }, _updateTime: function(t) {
        var a = this.time + t, A = this._clip.duration, l = this.loop, h = this._loopCount, f = l === $t;
        if (t === 0)
          return h === -1 ? a : f && (1 & h) == 1 ? A - a : a;
        if (l === Fr) {
          h === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
          e: {
            if (a >= A)
              a = A;
            else {
              if (!(a < 0))
                break e;
              a = 0;
            }
            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this._mixer.dispatchEvent({ type: "finished", action: this, direction: t < 0 ? -1 : 1 });
          }
        } else {
          if (h === -1 && (t >= 0 ? (h = 0, this._setEndings(!0, this.repetitions === 0, f)) : this._setEndings(this.repetitions === 0, !0, f)), a >= A || a < 0) {
            var p = Math.floor(a / A);
            a -= A * p, h += Math.abs(p);
            var E = this.repetitions - h;
            if (E <= 0)
              this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, a = t > 0 ? A : 0, this._mixer.dispatchEvent({ type: "finished", action: this, direction: t > 0 ? 1 : -1 });
            else {
              if (E === 1) {
                var I = t < 0;
                this._setEndings(I, !I, f);
              } else
                this._setEndings(!1, !1, f);
              this._loopCount = h, this._mixer.dispatchEvent({ type: "loop", action: this, loopDelta: p });
            }
          }
          if (f && (1 & h) == 1)
            return this.time = a, A - a;
        }
        return this.time = a, a;
      }, _setEndings: function(t, a, A) {
        var l = this._interpolantSettings;
        A ? (l.endingStart = Gr, l.endingEnd = Gr) : (l.endingStart = t ? this.zeroSlopeAtStart ? Gr : ar : Xr, l.endingEnd = a ? this.zeroSlopeAtEnd ? Gr : ar : Xr);
      }, _scheduleFading: function(t, a, A) {
        var l = this._mixer, h = l.time, f = this._weightInterpolant;
        f === null && (f = l._lendControlInterpolant(), this._weightInterpolant = f);
        var p = f.parameterPositions, E = f.sampleValues;
        return p[0] = h, E[0] = a, p[1] = h + t, E[1] = A, this;
      } }), kc.prototype = Object.assign(Object.create(d.prototype), { constructor: kc, _bindAction: function(t, a) {
        var A = t._localRoot || this._root, l = t._clip.tracks, h = l.length, f = t._propertyBindings, p = t._interpolants, E = A.uuid, I = this._bindingsByRootAndName, S = I[E];
        S === void 0 && (S = {}, I[E] = S);
        for (var G = 0; G !== h; ++G) {
          var P = l[G], N = P.name, j = S[N];
          if (j !== void 0)
            f[G] = j;
          else {
            if ((j = f[G]) !== void 0) {
              j._cacheIndex === null && (++j.referenceCount, this._addInactiveBinding(j, E, N));
              continue;
            }
            var ee = a && a._propertyBindings[G].binding.parsedPath;
            ++(j = new Mc(Vn.create(A, N, ee), P.ValueTypeName, P.getValueSize())).referenceCount, this._addInactiveBinding(j, E, N), f[G] = j;
          }
          p[G].resultBuffer = j.buffer;
        }
      }, _activateAction: function(t) {
        if (!this._isActiveAction(t)) {
          if (t._cacheIndex === null) {
            var a = (t._localRoot || this._root).uuid, A = t._clip.uuid, l = this._actionsByClip[A];
            this._bindAction(t, l && l.knownActions[0]), this._addInactiveAction(t, A, a);
          }
          for (var h = t._propertyBindings, f = 0, p = h.length; f !== p; ++f) {
            var E = h[f];
            E.useCount++ == 0 && (this._lendBinding(E), E.saveOriginalState());
          }
          this._lendAction(t);
        }
      }, _deactivateAction: function(t) {
        if (this._isActiveAction(t)) {
          for (var a = t._propertyBindings, A = 0, l = a.length; A !== l; ++A) {
            var h = a[A];
            --h.useCount == 0 && (h.restoreOriginalState(), this._takeBackBinding(h));
          }
          this._takeBackAction(t);
        }
      }, _initMemoryManager: function() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        var t = this;
        this.stats = { actions: { get total() {
          return t._actions.length;
        }, get inUse() {
          return t._nActiveActions;
        } }, bindings: { get total() {
          return t._bindings.length;
        }, get inUse() {
          return t._nActiveBindings;
        } }, controlInterpolants: { get total() {
          return t._controlInterpolants.length;
        }, get inUse() {
          return t._nActiveControlInterpolants;
        } } };
      }, _isActiveAction: function(t) {
        var a = t._cacheIndex;
        return a !== null && a < this._nActiveActions;
      }, _addInactiveAction: function(t, a, A) {
        var l = this._actions, h = this._actionsByClip, f = h[a];
        if (f === void 0)
          f = { knownActions: [t], actionByRoot: {} }, t._byClipCacheIndex = 0, h[a] = f;
        else {
          var p = f.knownActions;
          t._byClipCacheIndex = p.length, p.push(t);
        }
        t._cacheIndex = l.length, l.push(t), f.actionByRoot[A] = t;
      }, _removeInactiveAction: function(t) {
        var a = this._actions, A = a[a.length - 1], l = t._cacheIndex;
        A._cacheIndex = l, a[l] = A, a.pop(), t._cacheIndex = null;
        var h = t._clip.uuid, f = this._actionsByClip, p = f[h], E = p.knownActions, I = E[E.length - 1], S = t._byClipCacheIndex;
        I._byClipCacheIndex = S, E[S] = I, E.pop(), t._byClipCacheIndex = null, delete p.actionByRoot[(t._localRoot || this._root).uuid], E.length === 0 && delete f[h], this._removeInactiveBindingsForAction(t);
      }, _removeInactiveBindingsForAction: function(t) {
        for (var a = t._propertyBindings, A = 0, l = a.length; A !== l; ++A) {
          var h = a[A];
          --h.referenceCount == 0 && this._removeInactiveBinding(h);
        }
      }, _lendAction: function(t) {
        var a = this._actions, A = t._cacheIndex, l = this._nActiveActions++, h = a[l];
        t._cacheIndex = l, a[l] = t, h._cacheIndex = A, a[A] = h;
      }, _takeBackAction: function(t) {
        var a = this._actions, A = t._cacheIndex, l = --this._nActiveActions, h = a[l];
        t._cacheIndex = l, a[l] = t, h._cacheIndex = A, a[A] = h;
      }, _addInactiveBinding: function(t, a, A) {
        var l = this._bindingsByRootAndName, h = l[a], f = this._bindings;
        h === void 0 && (h = {}, l[a] = h), h[A] = t, t._cacheIndex = f.length, f.push(t);
      }, _removeInactiveBinding: function(t) {
        var a = this._bindings, A = t.binding, l = A.rootNode.uuid, h = A.path, f = this._bindingsByRootAndName, p = f[l], E = a[a.length - 1], I = t._cacheIndex;
        E._cacheIndex = I, a[I] = E, a.pop(), delete p[h];
        e: {
          for (var S in p)
            break e;
          delete f[l];
        }
      }, _lendBinding: function(t) {
        var a = this._bindings, A = t._cacheIndex, l = this._nActiveBindings++, h = a[l];
        t._cacheIndex = l, a[l] = t, h._cacheIndex = A, a[A] = h;
      }, _takeBackBinding: function(t) {
        var a = this._bindings, A = t._cacheIndex, l = --this._nActiveBindings, h = a[l];
        t._cacheIndex = l, a[l] = t, h._cacheIndex = A, a[A] = h;
      }, _lendControlInterpolant: function() {
        var t = this._controlInterpolants, a = this._nActiveControlInterpolants++, A = t[a];
        return A === void 0 && ((A = new fs(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = a, t[a] = A), A;
      }, _takeBackControlInterpolant: function(t) {
        var a = this._controlInterpolants, A = t.__cacheIndex, l = --this._nActiveControlInterpolants, h = a[l];
        t.__cacheIndex = l, a[l] = t, h.__cacheIndex = A, a[A] = h;
      }, _controlInterpolantsResultBuffer: new Float32Array(1), clipAction: function(t, a) {
        var A = a || this._root, l = A.uuid, h = typeof t == "string" ? gi.findByName(A, t) : t, f = h !== null ? h.uuid : t, p = this._actionsByClip[f], E = null;
        if (p !== void 0) {
          var I = p.actionByRoot[l];
          if (I !== void 0)
            return I;
          E = p.knownActions[0], h === null && (h = E._clip);
        }
        if (h === null)
          return null;
        var S = new kA(this, h, a);
        return this._bindAction(S, E), this._addInactiveAction(S, f, l), S;
      }, existingAction: function(t, a) {
        var A = a || this._root, l = A.uuid, h = typeof t == "string" ? gi.findByName(A, t) : t, f = h ? h.uuid : t, p = this._actionsByClip[f];
        return p !== void 0 && p.actionByRoot[l] || null;
      }, stopAllAction: function() {
        var t = this._actions, a = this._nActiveActions, A = this._bindings, l = this._nActiveBindings;
        this._nActiveActions = 0, this._nActiveBindings = 0;
        for (var h = 0; h !== a; ++h)
          t[h].reset();
        for (h = 0; h !== l; ++h)
          A[h].useCount = 0;
        return this;
      }, update: function(t) {
        t *= this.timeScale;
        for (var a = this._actions, A = this._nActiveActions, l = this.time += t, h = Math.sign(t), f = this._accuIndex ^= 1, p = 0; p !== A; ++p)
          a[p]._update(l, t, h, f);
        var E = this._bindings, I = this._nActiveBindings;
        for (p = 0; p !== I; ++p)
          E[p].apply(f);
        return this;
      }, getRoot: function() {
        return this._root;
      }, uncacheClip: function(t) {
        var a = this._actions, A = t.uuid, l = this._actionsByClip, h = l[A];
        if (h !== void 0) {
          for (var f = h.knownActions, p = 0, E = f.length; p !== E; ++p) {
            var I = f[p];
            this._deactivateAction(I);
            var S = I._cacheIndex, G = a[a.length - 1];
            I._cacheIndex = null, I._byClipCacheIndex = null, G._cacheIndex = S, a[S] = G, a.pop(), this._removeInactiveBindingsForAction(I);
          }
          delete l[A];
        }
      }, uncacheRoot: function(t) {
        var a = t.uuid, A = this._actionsByClip;
        for (var l in A) {
          var h = A[l].actionByRoot[a];
          h !== void 0 && (this._deactivateAction(h), this._removeInactiveAction(h));
        }
        var f = this._bindingsByRootAndName[a];
        if (f !== void 0)
          for (var p in f) {
            var E = f[p];
            E.restoreOriginalState(), this._removeInactiveBinding(E);
          }
      }, uncacheAction: function(t, a) {
        var A = this.existingAction(t, a);
        A !== null && (this._deactivateAction(A), this._removeInactiveAction(A));
      } }), tc.prototype.clone = function() {
        return new tc(this.value.clone === void 0 ? this.value : this.value.clone());
      }, Fc.prototype = Object.assign(Object.create(rr.prototype), { constructor: Fc, isInstancedBufferGeometry: !0, copy: function(t) {
        return rr.prototype.copy.call(this, t), this.maxInstancedCount = t.maxInstancedCount, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), Gc.prototype = Object.assign(Object.create(Ea.prototype), { constructor: Gc, isInstancedInterleavedBuffer: !0, copy: function(t) {
        return Ea.prototype.copy.call(this, t), this.meshPerAttribute = t.meshPerAttribute, this;
      } }), Oc.prototype = Object.assign(Object.create(Or.prototype), { constructor: Oc, isInstancedBufferAttribute: !0, copy: function(t) {
        return Or.prototype.copy.call(this, t), this.meshPerAttribute = t.meshPerAttribute, this;
      } }), Object.assign(FA.prototype, { linePrecision: 1, set: function(t, a) {
        this.ray.set(t, a);
      }, setFromCamera: function(t, a) {
        a && a.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(a.matrixWorld), this.ray.direction.set(t.x, t.y, 0.5).unproject(a).sub(this.ray.origin).normalize()) : a && a.isOrthographicCamera ? (this.ray.origin.set(t.x, t.y, (a.near + a.far) / (a.near - a.far)).unproject(a), this.ray.direction.set(0, 0, -1).transformDirection(a.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.");
      }, intersectObject: function(t, a, A) {
        var l = A || [];
        return Pc(t, this, l, a), l.sort(GA), l;
      }, intersectObjects: function(t, a, A) {
        var l = A || [];
        if (Array.isArray(t) === !1)
          return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), l;
        for (var h = 0, f = t.length; h < f; h++)
          Pc(t[h], this, l, a);
        return l.sort(GA), l;
      } }), Object.assign(OA.prototype, { start: function() {
        this.startTime = (typeof performance > "u" ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
      }, stop: function() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
      }, getElapsedTime: function() {
        return this.getDelta(), this.elapsedTime;
      }, getDelta: function() {
        var t = 0;
        if (this.autoStart && !this.running)
          return this.start(), 0;
        if (this.running) {
          var a = (typeof performance > "u" ? Date : performance).now();
          t = (a - this.oldTime) / 1e3, this.oldTime = a, this.elapsedTime += t;
        }
        return t;
      } }), Object.assign(PA.prototype, { set: function(t, a, A) {
        return this.radius = t, this.phi = a, this.theta = A, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.radius = t.radius, this.phi = t.phi, this.theta = t.theta, this;
      }, makeSafe: function() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
      }, setFromVector3: function(t) {
        return this.radius = t.length(), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(t.x, t.z), this.phi = Math.acos(Rr.clamp(t.y / this.radius, -1, 1))), this;
      } }), Object.assign(UA.prototype, { set: function(t, a, A) {
        return this.radius = t, this.theta = a, this.y = A, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.radius = t.radius, this.theta = t.theta, this.y = t.y, this;
      }, setFromVector3: function(t) {
        return this.radius = Math.sqrt(t.x * t.x + t.z * t.z), this.theta = Math.atan2(t.x, t.z), this.y = t.y, this;
      } }), Object.assign(Uc.prototype, { set: function(t, a) {
        return this.min.copy(t), this.max.copy(a), this;
      }, setFromPoints: function(t) {
        this.makeEmpty();
        for (var a = 0, A = t.length; a < A; a++)
          this.expandByPoint(t[a]);
        return this;
      }, setFromCenterAndSize: function() {
        var t = new Tt();
        return function(a, A) {
          var l = t.copy(A).multiplyScalar(0.5);
          return this.min.copy(a).sub(l), this.max.copy(a).add(l), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.min.copy(t.min), this.max.copy(t.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
      }, getCenter: function(t) {
        return t === void 0 && (console.warn("THREE.Box2: .getCenter() target is now required"), t = new Tt()), this.isEmpty() ? t.set(0, 0) : t.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(t) {
        return t === void 0 && (console.warn("THREE.Box2: .getSize() target is now required"), t = new Tt()), this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min);
      }, expandByPoint: function(t) {
        return this.min.min(t), this.max.max(t), this;
      }, expandByVector: function(t) {
        return this.min.sub(t), this.max.add(t), this;
      }, expandByScalar: function(t) {
        return this.min.addScalar(-t), this.max.addScalar(t), this;
      }, containsPoint: function(t) {
        return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y);
      }, containsBox: function(t) {
        return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y;
      }, getParameter: function(t, a) {
        return a === void 0 && (console.warn("THREE.Box2: .getParameter() target is now required"), a = new Tt()), a.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y));
      }, intersectsBox: function(t) {
        return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y);
      }, clampPoint: function(t, a) {
        return a === void 0 && (console.warn("THREE.Box2: .clampPoint() target is now required"), a = new Tt()), a.copy(t).clamp(this.min, this.max);
      }, distanceToPoint: function() {
        var t = new Tt();
        return function(a) {
          return t.copy(a).clamp(this.min, this.max).sub(a).length();
        };
      }(), intersect: function(t) {
        return this.min.max(t.min), this.max.min(t.max), this;
      }, union: function(t) {
        return this.min.min(t.min), this.max.max(t.max), this;
      }, translate: function(t) {
        return this.min.add(t), this.max.add(t), this;
      }, equals: function(t) {
        return t.min.equals(this.min) && t.max.equals(this.max);
      } }), Object.assign(Hc.prototype, { set: function(t, a) {
        return this.start.copy(t), this.end.copy(a), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(t) {
        return this.start.copy(t.start), this.end.copy(t.end), this;
      }, getCenter: function(t) {
        return t === void 0 && (console.warn("THREE.Line3: .getCenter() target is now required"), t = new xe()), t.addVectors(this.start, this.end).multiplyScalar(0.5);
      }, delta: function(t) {
        return t === void 0 && (console.warn("THREE.Line3: .delta() target is now required"), t = new xe()), t.subVectors(this.end, this.start);
      }, distanceSq: function() {
        return this.start.distanceToSquared(this.end);
      }, distance: function() {
        return this.start.distanceTo(this.end);
      }, at: function(t, a) {
        return a === void 0 && (console.warn("THREE.Line3: .at() target is now required"), a = new xe()), this.delta(a).multiplyScalar(t).add(this.start);
      }, closestPointToPointParameter: function() {
        var t = new xe(), a = new xe();
        return function(A, l) {
          t.subVectors(A, this.start), a.subVectors(this.end, this.start);
          var h = a.dot(a), f = a.dot(t) / h;
          return l && (f = Rr.clamp(f, 0, 1)), f;
        };
      }(), closestPointToPoint: function(t, a, A) {
        var l = this.closestPointToPointParameter(t, a);
        return A === void 0 && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), A = new xe()), this.delta(A).multiplyScalar(l).add(this.start);
      }, applyMatrix4: function(t) {
        return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this;
      }, equals: function(t) {
        return t.start.equals(this.start) && t.end.equals(this.end);
      } }), ms.prototype = Object.create(zt.prototype), ms.prototype.constructor = ms, ms.prototype.isImmediateRenderObject = !0, Es.prototype = Object.create(cn.prototype), Es.prototype.constructor = Es, Es.prototype.update = function() {
        var t = new xe(), a = new xe(), A = new Kn();
        return function() {
          var l = ["a", "b", "c"];
          this.object.updateMatrixWorld(!0), A.getNormalMatrix(this.object.matrixWorld);
          var h = this.object.matrixWorld, f = this.geometry.attributes.position, p = this.object.geometry;
          if (p && p.isGeometry)
            for (var E = p.vertices, I = p.faces, S = 0, G = 0, P = I.length; G < P; G++)
              for (var N = I[G], j = 0, ee = N.vertexNormals.length; j < ee; j++) {
                var oe = E[N[l[j]]], Ae = N.vertexNormals[j];
                t.copy(oe).applyMatrix4(h), a.copy(Ae).applyMatrix3(A).normalize().multiplyScalar(this.size).add(t), f.setXYZ(S, t.x, t.y, t.z), S += 1, f.setXYZ(S, a.x, a.y, a.z), S += 1;
              }
          else if (p && p.isBufferGeometry) {
            var pe = p.attributes.position, we = p.attributes.normal;
            for (S = 0, j = 0, ee = pe.count; j < ee; j++)
              t.set(pe.getX(j), pe.getY(j), pe.getZ(j)).applyMatrix4(h), a.set(we.getX(j), we.getY(j), we.getZ(j)), a.applyMatrix3(A).normalize().multiplyScalar(this.size).add(t), f.setXYZ(S, t.x, t.y, t.z), S += 1, f.setXYZ(S, a.x, a.y, a.z), S += 1;
          }
          f.needsUpdate = !0;
        };
      }(), Eo.prototype = Object.create(zt.prototype), Eo.prototype.constructor = Eo, Eo.prototype.dispose = function() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
      }, Eo.prototype.update = function() {
        var t = new xe(), a = new xe();
        return function() {
          this.light.updateMatrixWorld();
          var A = this.light.distance ? this.light.distance : 1e3, l = A * Math.tan(this.light.angle);
          this.cone.scale.set(l, l, A), t.setFromMatrixPosition(this.light.matrixWorld), a.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(a.sub(t)), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
        };
      }(), yo.prototype = Object.create(cn.prototype), yo.prototype.constructor = yo, yo.prototype.updateMatrixWorld = function() {
        var t = new xe(), a = new Br(), A = new Br();
        return function(l) {
          var h = this.bones, f = this.geometry, p = f.getAttribute("position");
          A.getInverse(this.root.matrixWorld);
          for (var E = 0, I = 0; E < h.length; E++) {
            var S = h[E];
            S.parent && S.parent.isBone && (a.multiplyMatrices(A, S.matrixWorld), t.setFromMatrixPosition(a), p.setXYZ(I, t.x, t.y, t.z), a.multiplyMatrices(A, S.parent.matrixWorld), t.setFromMatrixPosition(a), p.setXYZ(I + 1, t.x, t.y, t.z), I += 2);
          }
          f.getAttribute("position").needsUpdate = !0, zt.prototype.updateMatrixWorld.call(this, l);
        };
      }(), Bo.prototype = Object.create(ri.prototype), Bo.prototype.constructor = Bo, Bo.prototype.dispose = function() {
        this.geometry.dispose(), this.material.dispose();
      }, Bo.prototype.update = function() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
      }, vo.prototype = Object.create(zt.prototype), vo.prototype.constructor = vo, vo.prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, vo.prototype.update = function() {
        var t = 0.5 * this.light.width, a = 0.5 * this.light.height, A = this.line.geometry.attributes.position, l = A.array;
        l[0] = t, l[1] = -a, l[2] = 0, l[3] = t, l[4] = a, l[5] = 0, l[6] = -t, l[7] = a, l[8] = 0, l[9] = -t, l[10] = -a, l[11] = 0, l[12] = t, l[13] = -a, l[14] = 0, A.needsUpdate = !0, this.color !== void 0 ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color);
      }, Co.prototype = Object.create(zt.prototype), Co.prototype.constructor = Co, Co.prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, Co.prototype.update = function() {
        var t = new xe(), a = new dr(), A = new dr();
        return function() {
          var l = this.children[0];
          if (this.color !== void 0)
            this.material.color.set(this.color);
          else {
            var h = l.geometry.getAttribute("color");
            a.copy(this.light.color), A.copy(this.light.groundColor);
            for (var f = 0, p = h.count; f < p; f++) {
              var E = f < p / 2 ? a : A;
              h.setXYZ(f, E.r, E.g, E.b);
            }
            h.needsUpdate = !0;
          }
          l.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate());
        };
      }(), ys.prototype = Object.create(cn.prototype), ys.prototype.constructor = ys, rc.prototype = Object.create(cn.prototype), rc.prototype.constructor = rc, Bs.prototype = Object.create(cn.prototype), Bs.prototype.constructor = Bs, Bs.prototype.update = function() {
        var t = new xe(), a = new xe(), A = new Kn();
        return function() {
          this.object.updateMatrixWorld(!0), A.getNormalMatrix(this.object.matrixWorld);
          for (var l = this.object.matrixWorld, h = this.geometry.attributes.position, f = this.object.geometry, p = f.vertices, E = f.faces, I = 0, S = 0, G = E.length; S < G; S++) {
            var P = E[S], N = P.normal;
            t.copy(p[P.a]).add(p[P.b]).add(p[P.c]).divideScalar(3).applyMatrix4(l), a.copy(N).applyMatrix3(A).normalize().multiplyScalar(this.size).add(t), h.setXYZ(I, t.x, t.y, t.z), I += 1, h.setXYZ(I, a.x, a.y, a.z), I += 1;
          }
          h.needsUpdate = !0;
        };
      }(), Io.prototype = Object.create(zt.prototype), Io.prototype.constructor = Io, Io.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
      }, Io.prototype.update = function() {
        var t = new xe(), a = new xe(), A = new xe();
        return function() {
          t.setFromMatrixPosition(this.light.matrixWorld), a.setFromMatrixPosition(this.light.target.matrixWorld), A.subVectors(a, t), this.lightPlane.lookAt(A), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(A), this.targetLine.scale.z = A.length();
        };
      }(), vs.prototype = Object.create(cn.prototype), vs.prototype.constructor = vs, vs.prototype.update = function() {
        var t, a, A = new xe(), l = new Ni();
        function h(f, p, E, I) {
          A.set(p, E, I).unproject(l);
          var S = a[f];
          if (S !== void 0)
            for (var G = t.getAttribute("position"), P = 0, N = S.length; P < N; P++)
              G.setXYZ(S[P], A.x, A.y, A.z);
        }
        return function() {
          t = this.geometry, a = this.pointMap, l.projectionMatrix.copy(this.camera.projectionMatrix), h("c", 0, 0, -1), h("t", 0, 0, 1), h("n1", -1, -1, -1), h("n2", 1, -1, -1), h("n3", -1, 1, -1), h("n4", 1, 1, -1), h("f1", -1, -1, 1), h("f2", 1, -1, 1), h("f3", -1, 1, 1), h("f4", 1, 1, 1), h("u1", 0.7, 1.1, -1), h("u2", -0.7, 1.1, -1), h("u3", 0, 2, -1), h("cf1", -1, 0, 1), h("cf2", 1, 0, 1), h("cf3", 0, -1, 1), h("cf4", 0, 1, 1), h("cn1", -1, 0, -1), h("cn2", 1, 0, -1), h("cn3", 0, -1, -1), h("cn4", 0, 1, -1), t.getAttribute("position").needsUpdate = !0;
        };
      }(), ka.prototype = Object.create(cn.prototype), ka.prototype.constructor = ka, ka.prototype.update = function() {
        var t = new Vi();
        return function(a) {
          if (a !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && t.setFromObject(this.object), !t.isEmpty()) {
            var A = t.min, l = t.max, h = this.geometry.attributes.position, f = h.array;
            f[0] = l.x, f[1] = l.y, f[2] = l.z, f[3] = A.x, f[4] = l.y, f[5] = l.z, f[6] = A.x, f[7] = A.y, f[8] = l.z, f[9] = l.x, f[10] = A.y, f[11] = l.z, f[12] = l.x, f[13] = l.y, f[14] = A.z, f[15] = A.x, f[16] = l.y, f[17] = A.z, f[18] = A.x, f[19] = A.y, f[20] = A.z, f[21] = l.x, f[22] = A.y, f[23] = A.z, h.needsUpdate = !0, this.geometry.computeBoundingSphere();
          }
        };
      }(), ka.prototype.setFromObject = function(t) {
        return this.object = t, this.update(), this;
      }, Cs.prototype = Object.create(cn.prototype), Cs.prototype.constructor = Cs, Cs.prototype.updateMatrixWorld = function(t) {
        var a = this.box;
        a.isEmpty() || (a.getCenter(this.position), a.getSize(this.scale), this.scale.multiplyScalar(0.5), zt.prototype.updateMatrixWorld.call(this, t));
      }, Is.prototype = Object.create(ni.prototype), Is.prototype.constructor = Is, Is.prototype.updateMatrixWorld = function(t) {
        var a = -this.plane.constant;
        Math.abs(a) < 1e-8 && (a = 1e-8), this.scale.set(0.5 * this.size, 0.5 * this.size, a), this.children[0].material.side = a < 0 ? O : V, this.lookAt(this.plane.normal), zt.prototype.updateMatrixWorld.call(this, t);
      }, Fa.prototype = Object.create(zt.prototype), Fa.prototype.constructor = Fa, Fa.prototype.setDirection = function() {
        var t, a = new xe();
        return function(A) {
          A.y > 0.99999 ? this.quaternion.set(0, 0, 0, 1) : A.y < -0.99999 ? this.quaternion.set(1, 0, 0, 0) : (a.set(A.z, 0, -A.x).normalize(), t = Math.acos(A.y), this.quaternion.setFromAxisAngle(a, t));
        };
      }(), Fa.prototype.setLength = function(t, a, A) {
        a === void 0 && (a = 0.2 * t), A === void 0 && (A = 0.2 * a), this.line.scale.set(1, Math.max(0, t - a), 1), this.line.updateMatrix(), this.cone.scale.set(A, a, A), this.cone.position.y = t, this.cone.updateMatrix();
      }, Fa.prototype.setColor = function(t) {
        this.line.material.color.copy(t), this.cone.material.color.copy(t);
      }, xs.prototype = Object.create(cn.prototype), xs.prototype.constructor = xs;
      var Yu = 0, Vu = 1;
      function Lu(t) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), t;
      }
      function zu(t) {
        return t === void 0 && (t = []), console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), t.isMultiMaterial = !0, t.materials = t, t.clone = function() {
          return t.slice();
        }, t;
      }
      function Ju(t, a) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new Wa(t, a);
      }
      function Wu(t) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new Ho(t);
      }
      function Ku(t, a) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new Wa(t, a);
      }
      function Zu(t) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new Ci(t);
      }
      function Xu(t) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new Ci(t);
      }
      function el(t) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new Ci(t);
      }
      function tl(t, a, A) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new xe(t, a, A);
      }
      function rl(t, a) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new Or(t, a).setDynamic(!0);
      }
      function nl(t, a) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new To(t, a);
      }
      function il(t, a) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new Ro(t, a);
      }
      function al(t, a) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Mo(t, a);
      }
      function ol(t, a) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new No(t, a);
      }
      function sl(t, a) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new ha(t, a);
      }
      function cl(t, a) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new ko(t, a);
      }
      function Al(t, a) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new fa(t, a);
      }
      function ul(t, a) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new jt(t, a);
      }
      function ll(t, a) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new Fo(t, a);
      }
      function HA(t) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), jn.call(this, t), this.type = "catmullrom", this.closed = !0;
      }
      function qA(t) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), jn.call(this, t), this.type = "catmullrom";
      }
      function qc(t) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), jn.call(this, t), this.type = "catmullrom";
      }
      function dl(t) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new xs(t);
      }
      function hl(t, a) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new ka(t, a);
      }
      function fl(t, a) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new cn(new Ao(t.geometry), new on({ color: a !== void 0 ? a : 16777215 }));
      }
      function pl(t, a) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new cn(new Za(t.geometry), new on({ color: a !== void 0 ? a : 16777215 }));
      }
      function gl(t) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new xi(t);
      }
      function ml(t) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new pc(t);
      }
      gr.create = function(t, a) {
        return console.log("THREE.Curve.create() has been deprecated"), t.prototype = Object.create(gr.prototype), t.prototype.constructor = t, t.prototype.getPoint = a, t;
      }, Object.assign(Zi.prototype, { createPointsGeometry: function(t) {
        console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var a = this.getPoints(t);
        return this.createGeometry(a);
      }, createSpacedPointsGeometry: function(t) {
        console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var a = this.getSpacedPoints(t);
        return this.createGeometry(a);
      }, createGeometry: function(t) {
        console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        for (var a = new Cr(), A = 0, l = t.length; A < l; A++) {
          var h = t[A];
          a.vertices.push(new xe(h.x, h.y, h.z || 0));
        }
        return a;
      } }), Object.assign(Si.prototype, { fromPoints: function(t) {
        console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(t);
      } }), HA.prototype = Object.create(jn.prototype), qA.prototype = Object.create(jn.prototype), qc.prototype = Object.create(jn.prototype), Object.assign(qc.prototype, { initFromArray: function() {
        console.error("THREE.Spline: .initFromArray() has been removed.");
      }, getControlPointsArray: function() {
        console.error("THREE.Spline: .getControlPointsArray() has been removed.");
      }, reparametrizeByArcLength: function() {
        console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.");
      } }), ys.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
      }, yo.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
      }, Object.assign(go.prototype, { extractUrlBase: function(t) {
        return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Cc.extractUrlBase(t);
      } }), Object.assign(Uc.prototype, { center: function(t) {
        return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(t);
      }, empty: function() {
        return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(t) {
        return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t);
      }, size: function(t) {
        return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(t);
      } }), Object.assign(Vi.prototype, { center: function(t) {
        return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(t);
      }, empty: function() {
        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(t) {
        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t);
      }, isIntersectionSphere: function(t) {
        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t);
      }, size: function(t) {
        return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(t);
      } }), Hc.prototype.center = function(t) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(t);
      }, Object.assign(Rr, { random16: function() {
        return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random();
      }, nearestPowerOfTwo: function(t) {
        return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), Rr.floorPowerOfTwo(t);
      }, nextPowerOfTwo: function(t) {
        return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), Rr.ceilPowerOfTwo(t);
      } }), Object.assign(Kn.prototype, { flattenToArrayOffset: function(t, a) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(t, a);
      }, multiplyVector3: function(t) {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), t.applyMatrix3(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
      }, applyToBuffer: function(t) {
        return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(t);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
      } }), Object.assign(Br.prototype, { extractPosition: function(t) {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(t);
      }, flattenToArrayOffset: function(t, a) {
        return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(t, a);
      }, getPosition: function() {
        var t;
        return function() {
          return t === void 0 && (t = new xe()), console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), t.setFromMatrixColumn(this, 3);
        };
      }(), setRotationFromQuaternion: function(t) {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(t);
      }, multiplyToArray: function() {
        console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
      }, multiplyVector3: function(t) {
        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this);
      }, multiplyVector4: function(t) {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
      }, rotateAxis: function(t) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), t.transformDirection(this);
      }, crossVector: function(t) {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this);
      }, translate: function() {
        console.error("THREE.Matrix4: .translate() has been removed.");
      }, rotateX: function() {
        console.error("THREE.Matrix4: .rotateX() has been removed.");
      }, rotateY: function() {
        console.error("THREE.Matrix4: .rotateY() has been removed.");
      }, rotateZ: function() {
        console.error("THREE.Matrix4: .rotateZ() has been removed.");
      }, rotateByAxis: function() {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
      }, applyToBuffer: function(t) {
        return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(t);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
      }, makeFrustum: function(t, a, A, l, h, f) {
        return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(t, a, l, A, h, f);
      } }), Mi.prototype.isIntersectionLine = function(t) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(t);
      }, fn.prototype.multiplyVector3 = function(t) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), t.applyQuaternion(this);
      }, Object.assign(ma.prototype, { isIntersectionBox: function(t) {
        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t);
      }, isIntersectionPlane: function(t) {
        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(t);
      }, isIntersectionSphere: function(t) {
        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t);
      } }), Object.assign(ui.prototype, { area: function() {
        return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
      }, barycoordFromPoint: function(t, a) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(t, a);
      }, midpoint: function(t) {
        return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(t);
      }, normal: function(t) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(t);
      }, plane: function(t) {
        return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(t);
      } }), Object.assign(ui, { barycoordFromPoint: function(t, a, A, l, h) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), ui.getBarycoord(t, a, A, l, h);
      }, normal: function(t, a, A, l) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), ui.getNormal(t, a, A, l);
      } }), Object.assign(aa.prototype, { extractAllPoints: function(t) {
        return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(t);
      }, extrude: function(t) {
        return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new va(this, t);
      }, makeGeometry: function(t) {
        return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Ia(this, t);
      } }), Object.assign(Tt.prototype, { fromAttribute: function(t, a, A) {
        return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t, a, A);
      }, distanceToManhattan: function(t) {
        return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(t);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(xe.prototype, { setEulerFromRotationMatrix: function() {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
      }, setEulerFromQuaternion: function() {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
      }, getPositionFromMatrix: function(t) {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(t);
      }, getScaleFromMatrix: function(t) {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(t);
      }, getColumnFromMatrix: function(t, a) {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(a, t);
      }, applyProjection: function(t) {
        return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(t);
      }, fromAttribute: function(t, a, A) {
        return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t, a, A);
      }, distanceToManhattan: function(t) {
        return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(t);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(nn.prototype, { fromAttribute: function(t, a, A) {
        return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(t, a, A);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(Cr.prototype, { computeTangents: function() {
        console.error("THREE.Geometry: .computeTangents() has been removed.");
      }, computeLineDistances: function() {
        console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.");
      } }), Object.assign(zt.prototype, { getChildByName: function(t) {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(t);
      }, renderDepth: function() {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
      }, translate: function(t, a) {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(a, t);
      }, getWorldRotation: function() {
        console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
      } }), Object.defineProperties(zt.prototype, { eulerOrder: { get: function() {
        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
      }, set: function(t) {
        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = t;
      } }, useQuaternion: { get: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      }, set: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      } } }), Object.defineProperties(qo.prototype, { objects: { get: function() {
        return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels;
      } } }), Object.defineProperty(Do.prototype, "useVertexTexture", { get: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      }, set: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      } }), Object.defineProperty(gr.prototype, "__arcLengthDivisions", { get: function() {
        return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions;
      }, set: function(t) {
        console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = t;
      } }), En.prototype.setLens = function(t, a) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), a !== void 0 && (this.filmGauge = a), this.setFocalLength(t);
      }, Object.defineProperties(gn.prototype, { onlyShadow: { set: function() {
        console.warn("THREE.Light: .onlyShadow has been removed.");
      } }, shadowCameraFov: { set: function(t) {
        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = t;
      } }, shadowCameraLeft: { set: function(t) {
        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = t;
      } }, shadowCameraRight: { set: function(t) {
        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = t;
      } }, shadowCameraTop: { set: function(t) {
        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = t;
      } }, shadowCameraBottom: { set: function(t) {
        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = t;
      } }, shadowCameraNear: { set: function(t) {
        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = t;
      } }, shadowCameraFar: { set: function(t) {
        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = t;
      } }, shadowCameraVisible: { set: function() {
        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
      } }, shadowBias: { set: function(t) {
        console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = t;
      } }, shadowDarkness: { set: function() {
        console.warn("THREE.Light: .shadowDarkness has been removed.");
      } }, shadowMapWidth: { set: function(t) {
        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = t;
      } }, shadowMapHeight: { set: function(t) {
        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = t;
      } } }), Object.defineProperties(Or.prototype, { length: { get: function() {
        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
      } }, copyIndicesArray: function() {
        console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
      } }), Object.assign(rr.prototype, { addIndex: function(t) {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(t);
      }, addDrawCall: function(t, a, A) {
        A !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(t, a);
      }, clearDrawCalls: function() {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
      }, computeTangents: function() {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
      }, computeOffsets: function() {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
      } }), Object.defineProperties(rr.prototype, { drawcalls: { get: function() {
        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
      } }, offsets: { get: function() {
        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
      } } }), Object.assign(ki.prototype, { getArrays: function() {
        console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.");
      }, addShapeList: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.");
      }, addShape: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.");
      } }), Object.defineProperties(tc.prototype, { dynamic: { set: function() {
        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");
      } }, onUpdate: { value: function() {
        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
      } } }), Object.defineProperties(Nr.prototype, { wrapAround: { get: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      }, set: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      } }, wrapRGB: { get: function() {
        return console.warn("THREE.Material: .wrapRGB has been removed."), new dr();
      } }, shading: { get: function() {
        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
      }, set: function(t) {
        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = t === q;
      } } }), Object.defineProperties(Ii.prototype, { metal: { get: function() {
        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1;
      }, set: function() {
        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
      } } }), Object.defineProperties(pi.prototype, { derivatives: { get: function() {
        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
      }, set: function(t) {
        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = t;
      } } }), Object.assign(uc.prototype, { animate: function(t) {
        console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(t);
      }, getCurrentRenderTarget: function() {
        return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
      }, getMaxAnisotropy: function() {
        return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
      }, getPrecision: function() {
        return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
      }, resetGLState: function() {
        return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
      }, supportsFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
      }, supportsHalfFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
      }, supportsStandardDerivatives: function() {
        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
      }, supportsCompressedTextureS3TC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
      }, supportsCompressedTexturePVRTC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
      }, supportsBlendMinMax: function() {
        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
      }, supportsVertexTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
      }, supportsInstancedArrays: function() {
        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
      }, enableScissorTest: function(t) {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(t);
      }, initMaterial: function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
      }, addPrePlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
      }, addPostPlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
      }, updateShadowMap: function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
      }, setFaceCulling: function() {
        console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
      } }), Object.defineProperties(uc.prototype, { shadowMapEnabled: { get: function() {
        return this.shadowMap.enabled;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = t;
      } }, shadowMapType: { get: function() {
        return this.shadowMap.type;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = t;
      } }, shadowMapCullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(lA.prototype, { cullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      } }, renderReverseSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      } }, renderSingleSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(Aa.prototype, { wrapS: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = t;
      } }, wrapT: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = t;
      } }, magFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = t;
      } }, minFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = t;
      } }, anisotropy: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = t;
      } }, offset: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = t;
      } }, repeat: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = t;
      } }, format: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = t;
      } }, type: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = t;
      } }, generateMipmaps: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
      }, set: function(t) {
        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = t;
      } } }), Object.defineProperties(hA.prototype, { standing: { set: function() {
        console.warn("THREE.WebVRManager: .standing has been removed.");
      } } }), mo.prototype.load = function(t) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var a = this;
        return new Qc().load(t, function(A) {
          a.setBuffer(A);
        }), this;
      }, Rc.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
      }, gs.prototype.updateCubeMap = function(t, a) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(t, a);
      };
      var El = { merge: function(t, a, A) {
        var l;
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."), a.isMesh && (a.matrixAutoUpdate && a.updateMatrix(), l = a.matrix, a = a.geometry), t.merge(a, l, A);
      }, center: function(t) {
        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), t.center();
      } };
      function yl() {
        console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."), this.projectVector = function(t, a) {
          console.warn("THREE.Projector: .projectVector() is now vector.project()."), t.project(a);
        }, this.unprojectVector = function(t, a) {
          console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), t.unproject(a);
        }, this.pickingRay = function() {
          console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
        };
      }
      function Bl() {
        console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"), this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), this.clear = function() {
        }, this.render = function() {
        }, this.setClearColor = function() {
        }, this.setSize = function() {
        };
      }
      ea.crossOrigin = void 0, ea.loadTexture = function(t, a, A, l) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var h = new Os();
        h.setCrossOrigin(this.crossOrigin);
        var f = h.load(t, A, void 0, l);
        return a && (f.mapping = a), f;
      }, ea.loadTextureCube = function(t, a, A, l) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var h = new gc();
        h.setCrossOrigin(this.crossOrigin);
        var f = h.load(t, A, void 0, l);
        return a && (f.mapping = a), f;
      }, ea.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
      }, ea.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
      };
      var vl = { createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      } };
      function Cl() {
        console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js");
      }
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 });
      var d, g, m = function() {
        function D(V, O) {
          for (var H = 0; H < O.length; H++) {
            var q = O[H];
            q.enumerable = q.enumerable || !1, q.configurable = !0, "value" in q && (q.writable = !0), Object.defineProperty(V, q.key, q);
          }
        }
        return function(V, O, H) {
          return O && D(V.prototype, O), H && D(V, H), V;
        };
      }(), w = v(u(5)), B = function(D) {
        if (D && D.__esModule)
          return D;
        var V = {};
        if (D != null)
          for (var O in D)
            Object.prototype.hasOwnProperty.call(D, O) && (V[O] = D[O]);
        return V.default = D, V;
      }(u(0)), x = u(4), C = v(u(3));
      function v(D) {
        return D && D.__esModule ? D : { default: D };
      }
      var y = { directionligth: { create: function() {
        var D = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, V = D.color, O = D.position, H = D.castShadow, q = new B.DirectionalLight(new B.Color(V), 0.95);
        return q.position.set(O.x, O.y, O.z), q.castShadow = H, q;
      } }, ambientlight: { create: function() {
        var D = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}).color;
        return new B.AmbientLight(new B.Color(D));
      } }, spotlight: { create: function() {
      } } }, T = function D(V) {
        if (V instanceof B.Mesh) {
          var O = V.geometry;
          if (O) {
            O.boundingBox || O.computeBoundingBox();
            var H = O.boundingBox;
            return V.updateMatrix(), H.applyMatrix4(V.matrix), H;
          }
          return new B.Box3(new B.Vector3(), new B.Vector3());
        }
        var q, $ = V.children.length, re = new B.Box3(new B.Vector3(), new B.Vector3());
        for (q = 0; q < $; q++) {
          var ce = D(V.children[q]);
          ce.min.x < re.min.x && (re.min.x = ce.min.x), ce.max.x > re.max.x && (re.max.x = ce.max.x), ce.min.y < re.min.y && (re.min.y = ce.min.y), ce.max.y > re.max.y && (re.max.y = ce.max.y), ce.min.z < re.min.z && (re.min.z = ce.min.z), ce.max.z > re.max.z && (re.max.z = ce.max.z);
        }
        return V.updateMatrix(), re.applyMatrix4(V.matrix), re;
      }, M = (g = d = function(D) {
        function V(O) {
          (function(q, $) {
            if (!(q instanceof $))
              throw new TypeError("Cannot call a class as a function");
          })(this, V);
          var H = function(q, $) {
            if (!q)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !$ || typeof $ != "object" && typeof $ != "function" ? q : $;
          }(this, (V.__proto__ || Object.getPrototypeOf(V)).call(this, O));
          return H.obj3d, H.src, H.state = { lights: [] }, H.lights = [], H.group = new B.Group(), H;
        }
        return function(O, H) {
          if (typeof H != "function" && H !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof H);
          O.prototype = Object.create(H && H.prototype, { constructor: { value: O, enumerable: !1, writable: !0, configurable: !0 } }), H && (Object.setPrototypeOf ? Object.setPrototypeOf(O, H) : O.__proto__ = H);
        }(V, w.default.Component), m(V, [{ key: "render", value: function() {
          var O = this;
          return this.state.lights, w.default.createElement("div", { ref: function(H) {
            return O.$container = H;
          }, "data-loader": this.props.loader, style: this.style() });
        } }, { key: "componentDidUpdate", value: function() {
          var O = this;
          if (!this.obj3d)
            return !1;
          var H = this.props, q = H.src, $ = (H.background, H.width), re = H.height;
          this.camera.aspect = $ / re, this.camera.updateProjectionMatrix(), this.renderer.setSize($, re);
          var ce = this.props, Ie = ce.enableKeys, Pe = ce.enableRotate, se = ce.enableZoom, Ce = ce.enabled;
          Object.assign(this.orbit_controls, { enableKeys: Ie, enablePan: !0, enableRotate: Pe, enableZoom: se, enabled: Ce }), this.src !== void 0 && this.src != q && (this.src = q, this.remove3dModel(), this.load3dModel()), this.lights.forEach(function(Ge) {
            return O.scene.remove(Ge);
          }), this.lights = [], this.addLight("ambientlight", x.AmbientLight.defaultProps), this.need_children_lights ? this.addChildrenLights() : this.addLight("directionligth", x.DirectionLight.defaultProps);
        } }, { key: "componentWillUnmount", value: function() {
          this.tick.animate = !1;
        } }, { key: "componentDidMount", value: function() {
          var O = this, H = this.props, q = H.width, $ = H.height, re = H.antialias, ce = H.background;
          this.scene = new B.Scene(), this.camera = new B.PerspectiveCamera(45, q / $, 0.1, 8888), this.renderer = new B.WebGLRenderer({ antialias: re }), this.renderer.setClearColor(new B.Color(ce)), this.renderer.setSize(q, $), this.$container.appendChild(this.renderer.domElement), this.scene.add(this.group), this.camera.position.set(0, 0, 0.1), this.createDefaultLight();
          var Ie = this.props, Pe = Ie.position, se = Ie.rotation, Ce = Ie.scale;
          this.group.position.copy(new B.Vector3(Pe.x, Pe.y, Pe.z)), this.group.rotation.set(se.x, se.y, se.z), this.group.scale.set(Ce.x, Ce.y, Ce.z), this.load3dModel(), this.tick = (0, C.default)(function() {
            if (O.renderer.render(O.scene, O.camera), O.obj3d) {
              O.group.children.length || O.group.add(O.obj3d);
              var Ge = O.props, $e = Ge.position, Be = Ge.rotation, Me = Ge.scale;
              O.group.position.copy(new B.Vector3($e.x, $e.y, $e.z)), O.group.rotation.set(Be.x, Be.y, Be.z), O.group.scale.set(Me.x, Me.y, Me.z);
            }
          });
        } }, { key: "initControl", value: function() {
          var O = this.props, H = O.enableKeys, q = O.enableRotate, $ = O.enableZoom, re = O.enabled;
          this.orbit_controls = new B.OrbitControls(this.camera, this.renderer.domElement), Object.assign(this.orbit_controls, { enableKeys: H, enablePan: !0, enableRotate: q, enableZoom: $, enabled: re }), this.orbit_controls.update();
        } }, { key: "remove3dModel", value: function() {
          this.obj3d && this.scene.remove(this.obj3d);
        } }, { key: "load3dModel", value: function() {
        } }, { key: "style", value: function() {
          var O = this.props, H = O.width, q = O.height;
          return Object.assign({}, { width: H + "px", height: q + "px" });
        } }, { key: "computeBoundingBox", value: function(O) {
          if (O instanceof B.Mesh) {
            var H = O.geometry;
            if (H) {
              H.boundingBox || H.computeBoundingBox();
              var q = H.boundingBox;
              return O.updateMatrix(), q.applyMatrix4(O.matrix), q;
            }
            return new B.Box3(new B.Vector3(), new B.Vector3());
          }
          var $, re = O.children.length, ce = new B.Box3(new B.Vector3(), new B.Vector3());
          for ($ = 0; $ < re; $++) {
            var Ie = T(O.children[$]);
            Ie.min.x < ce.min.x && (ce.min.x = Ie.min.x), Ie.max.x > ce.max.x && (ce.max.x = Ie.max.x), Ie.min.y < ce.min.y && (ce.min.y = Ie.min.y), Ie.max.y > ce.max.y && (ce.max.y = Ie.max.y), Ie.min.z < ce.min.z && (ce.min.z = Ie.min.z), Ie.max.z > ce.max.z && (ce.max.z = Ie.max.z);
          }
          return O.updateMatrix(), ce.applyMatrix4(O.matrix), ce;
        } }, { key: "traverseScene", value: function() {
        } }, { key: "createEnvironment", value: function() {
        } }, { key: "addLight", value: function(O, H) {
          if (/directionligth|ambientlight|spotlight/.test(O)) {
            var q = y[O].create(H);
            return this.scene.add(q), this.lights.push(q), q;
          }
        } }, { key: "addChildrenLights", value: function() {
          var O = this;
          this.lights.forEach(function(H) {
            O.scene.remove(H);
          }), this.lights = [], this.array_children.map(function(H) {
            var q = H.props, $ = q.__constructor;
            O.addLight($, q);
          });
        } }, { key: "createDefaultLight", value: function() {
          this.addLight("ambientlight", x.AmbientLight.defaultProps), this.need_children_lights ? this.addChildrenLights() : this.addLight("directionligth", x.DirectionLight.defaultProps);
        } }, { key: "array_children", get: function() {
          return this.props.children ? this.props.children instanceof Array ? this.props.children : [this.props.children] : [];
        } }, { key: "need_children_lights", get: function() {
          return !!this.array_children.filter(function(O) {
            return /directionligth|ambientlight|spotlight/.test(O.props.__constructor);
          }).length;
        } }]), V;
      }(), d.defaultProps = { width: 500, height: 500, antialias: !0, loader: "", baseUrl: "", texPath: "", position: { x: 0, y: 0, z: 0 }, scale: { x: 1, y: 1, z: 1 }, rotation: { x: 0, y: 0, z: 0 }, background: "rgb(255,255,255)", enableKeys: !0, enableRotate: !0, enableZoom: !0, enabled: !0 }, g);
      s.default = M;
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 }), s.GLTFLoader = s.ColladaLoader = s.OBJLoader = s.MTLLoader = s.OrbitControls = void 0;
      var d = function(C) {
        if (C && C.__esModule)
          return C;
        var v = {};
        if (C != null)
          for (var y in C)
            Object.prototype.hasOwnProperty.call(C, y) && (v[y] = C[y]);
        return v.default = C, v;
      }(u(0));
      d.OrbitControls = function(C, v) {
        this.object = C, this.domElement = v !== void 0 ? v : document, this.enabled = !0, this.target = new d.Vector3(), this.minDistance = 0, this.maxDistance = 1 / 0, this.minZoom = 0, this.maxZoom = 1 / 0, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -1 / 0, this.maxAzimuthAngle = 1 / 0, this.enableDamping = !1, this.dampingFactor = 0.25, this.enableZoom = !0, this.zoomSpeed = 1, this.enableRotate = !0, this.rotateSpeed = 1, this.enablePan = !0, this.keyPanSpeed = 7, this.autoRotate = !1, this.autoRotateSpeed = 2, this.enableKeys = !0, this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }, this.mouseButtons = { ORBIT: d.MOUSE.LEFT, ZOOM: d.MOUSE.MIDDLE, PAN: d.MOUSE.RIGHT }, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function() {
          return q.phi;
        }, this.getAzimuthalAngle = function() {
          return q.theta;
        }, this.reset = function() {
          y.target.copy(y.target0), y.object.position.copy(y.position0), y.object.zoom = y.zoom0, y.object.updateProjectionMatrix(), y.dispatchEvent(T), y.update(), O = V.NONE;
        }, this.update = function() {
          var J = new d.Vector3(), R = new d.Quaternion().setFromUnitVectors(C.up, new d.Vector3(0, 1, 0)), Q = R.clone().inverse(), b = new d.Vector3(), U = new d.Quaternion();
          return function() {
            var Z = y.object.position;
            return J.copy(Z).sub(y.target), J.applyQuaternion(R), q.setFromVector3(J), y.autoRotate && O === V.NONE && Je(2 * Math.PI / 60 / 60 * y.autoRotateSpeed), q.theta += $.theta, q.phi += $.phi, q.theta = Math.max(y.minAzimuthAngle, Math.min(y.maxAzimuthAngle, q.theta)), q.phi = Math.max(y.minPolarAngle, Math.min(y.maxPolarAngle, q.phi)), q.makeSafe(), q.radius *= re, q.radius = Math.max(y.minDistance, Math.min(y.maxDistance, q.radius)), y.target.add(ce), J.setFromSpherical(q), J.applyQuaternion(Q), Z.copy(y.target).add(J), y.object.lookAt(y.target), y.enableDamping === !0 ? ($.theta *= 1 - y.dampingFactor, $.phi *= 1 - y.dampingFactor) : $.set(0, 0, 0), re = 1, ce.set(0, 0, 0), !!(Ie || b.distanceToSquared(y.object.position) > H || 8 * (1 - U.dot(y.object.quaternion)) > H) && (y.dispatchEvent(T), b.copy(y.object.position), U.copy(y.object.quaternion), Ie = !1, !0);
          };
        }(), this.dispose = function() {
          y.domElement.removeEventListener("contextmenu", fe, !1), y.domElement.removeEventListener("mousedown", ot, !1), y.domElement.removeEventListener("wheel", je, !1), y.domElement.removeEventListener("touchstart", ae, !1), y.domElement.removeEventListener("touchend", be, !1), y.domElement.removeEventListener("touchmove", z, !1), document.removeEventListener("mousemove", mt, !1), document.removeEventListener("mouseup", ve, !1), window.removeEventListener("keydown", ie, !1);
        };
        var y = this, T = { type: "change" }, M = { type: "start" }, D = { type: "end" }, V = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 }, O = V.NONE, H = 1e-6, q = new d.Spherical(), $ = new d.Spherical(), re = 1, ce = new d.Vector3(), Ie = !1, Pe = new d.Vector2(), se = new d.Vector2(), Ce = new d.Vector2(), Ge = new d.Vector2(), $e = new d.Vector2(), Be = new d.Vector2(), Me = new d.Vector2(), We = new d.Vector2(), nt = new d.Vector2();
        function Xe() {
          return Math.pow(0.95, y.zoomSpeed);
        }
        function Je(J) {
          $.theta -= J;
        }
        function qe(J) {
          $.phi -= J;
        }
        var ye = function() {
          var J = new d.Vector3();
          return function(R, Q) {
            J.setFromMatrixColumn(Q, 0), J.multiplyScalar(-R), ce.add(J);
          };
        }(), Ue = function() {
          var J = new d.Vector3();
          return function(R, Q) {
            J.setFromMatrixColumn(Q, 1), J.multiplyScalar(R), ce.add(J);
          };
        }(), ze = function() {
          var J = new d.Vector3();
          return function(R, Q) {
            var b = y.domElement === document ? y.domElement.body : y.domElement;
            if (y.object instanceof d.PerspectiveCamera) {
              var U = y.object.position;
              J.copy(U).sub(y.target);
              var Z = J.length();
              Z *= Math.tan(y.object.fov / 2 * Math.PI / 180), ye(2 * R * Z / b.clientHeight, y.object.matrix), Ue(2 * Q * Z / b.clientHeight, y.object.matrix);
            } else
              y.object instanceof d.OrthographicCamera ? (ye(R * (y.object.right - y.object.left) / y.object.zoom / b.clientWidth, y.object.matrix), Ue(Q * (y.object.top - y.object.bottom) / y.object.zoom / b.clientHeight, y.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), y.enablePan = !1);
          };
        }();
        function X(J) {
          y.object instanceof d.PerspectiveCamera ? re /= J : y.object instanceof d.OrthographicCamera ? (y.object.zoom = Math.max(y.minZoom, Math.min(y.maxZoom, y.object.zoom * J)), y.object.updateProjectionMatrix(), Ie = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), y.enableZoom = !1);
        }
        function ut(J) {
          y.object instanceof d.PerspectiveCamera ? re *= J : y.object instanceof d.OrthographicCamera ? (y.object.zoom = Math.max(y.minZoom, Math.min(y.maxZoom, y.object.zoom / J)), y.object.updateProjectionMatrix(), Ie = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), y.enableZoom = !1);
        }
        function ot(J) {
          if (y.enabled !== !1) {
            if (J.preventDefault(), J.button === y.mouseButtons.ORBIT) {
              if (y.enableRotate === !1)
                return;
              (function(R) {
                Pe.set(R.clientX, R.clientY);
              })(J), O = V.ROTATE;
            } else if (J.button === y.mouseButtons.ZOOM) {
              if (y.enableZoom === !1)
                return;
              (function(R) {
                Me.set(R.clientX, R.clientY);
              })(J), O = V.DOLLY;
            } else if (J.button === y.mouseButtons.PAN) {
              if (y.enablePan === !1)
                return;
              (function(R) {
                Ge.set(R.clientX, R.clientY);
              })(J), O = V.PAN;
            }
            O !== V.NONE && (document.addEventListener("mousemove", mt, !1), document.addEventListener("mouseup", ve, !1), y.dispatchEvent(M));
          }
        }
        function mt(J) {
          if (y.enabled !== !1) {
            if (J.preventDefault(), O === V.ROTATE) {
              if (y.enableRotate === !1)
                return;
              (function(R) {
                se.set(R.clientX, R.clientY), Ce.subVectors(se, Pe);
                var Q = y.domElement === document ? y.domElement.body : y.domElement;
                Je(2 * Math.PI * Ce.x / Q.clientWidth * y.rotateSpeed), qe(2 * Math.PI * Ce.y / Q.clientHeight * y.rotateSpeed), Pe.copy(se), y.update();
              })(J);
            } else if (O === V.DOLLY) {
              if (y.enableZoom === !1)
                return;
              (function(R) {
                We.set(R.clientX, R.clientY), nt.subVectors(We, Me), nt.y > 0 ? X(Xe()) : nt.y < 0 && ut(Xe()), Me.copy(We), y.update();
              })(J);
            } else if (O === V.PAN) {
              if (y.enablePan === !1)
                return;
              (function(R) {
                $e.set(R.clientX, R.clientY), Be.subVectors($e, Ge), ze(Be.x, Be.y), Ge.copy($e), y.update();
              })(J);
            }
          }
        }
        function ve(J) {
          y.enabled !== !1 && (document.removeEventListener("mousemove", mt, !1), document.removeEventListener("mouseup", ve, !1), y.dispatchEvent(D), O = V.NONE);
        }
        function je(J) {
          y.enabled === !1 || y.enableZoom === !1 || O !== V.NONE && O !== V.ROTATE || (J.preventDefault(), J.stopPropagation(), function(R) {
            R.deltaY < 0 ? ut(Xe()) : R.deltaY > 0 && X(Xe()), y.update();
          }(J), y.dispatchEvent(M), y.dispatchEvent(D));
        }
        function ie(J) {
          y.enabled !== !1 && y.enableKeys !== !1 && y.enablePan !== !1 && function(R) {
            switch (R.keyCode) {
              case y.keys.UP:
                ze(0, y.keyPanSpeed), y.update();
                break;
              case y.keys.BOTTOM:
                ze(0, -y.keyPanSpeed), y.update();
                break;
              case y.keys.LEFT:
                ze(y.keyPanSpeed, 0), y.update();
                break;
              case y.keys.RIGHT:
                ze(-y.keyPanSpeed, 0), y.update();
            }
          }(J);
        }
        function ae(J) {
          if (y.enabled !== !1) {
            switch (J.touches.length) {
              case 1:
                if (y.enableRotate === !1)
                  return;
                (function(R) {
                  Pe.set(R.touches[0].pageX, R.touches[0].pageY);
                })(J), O = V.TOUCH_ROTATE;
                break;
              case 2:
                if (y.enableZoom === !1)
                  return;
                (function(R) {
                  var Q = R.touches[0].pageX - R.touches[1].pageX, b = R.touches[0].pageY - R.touches[1].pageY, U = Math.sqrt(Q * Q + b * b);
                  Me.set(0, U);
                })(J), O = V.TOUCH_DOLLY;
                break;
              case 3:
                if (y.enablePan === !1)
                  return;
                (function(R) {
                  Ge.set(R.touches[0].pageX, R.touches[0].pageY);
                })(J), O = V.TOUCH_PAN;
                break;
              default:
                O = V.NONE;
            }
            O !== V.NONE && y.dispatchEvent(M);
          }
        }
        function z(J) {
          if (y.enabled !== !1)
            switch (J.preventDefault(), J.stopPropagation(), J.touches.length) {
              case 1:
                if (y.enableRotate === !1 || O !== V.TOUCH_ROTATE)
                  return;
                (function(R) {
                  se.set(R.touches[0].pageX, R.touches[0].pageY), Ce.subVectors(se, Pe);
                  var Q = y.domElement === document ? y.domElement.body : y.domElement;
                  Je(2 * Math.PI * Ce.x / Q.clientWidth * y.rotateSpeed), qe(2 * Math.PI * Ce.y / Q.clientHeight * y.rotateSpeed), Pe.copy(se), y.update();
                })(J);
                break;
              case 2:
                if (y.enableZoom === !1 || O !== V.TOUCH_DOLLY)
                  return;
                (function(R) {
                  var Q = R.touches[0].pageX - R.touches[1].pageX, b = R.touches[0].pageY - R.touches[1].pageY, U = Math.sqrt(Q * Q + b * b);
                  We.set(0, U), nt.subVectors(We, Me), nt.y > 0 ? ut(Xe()) : nt.y < 0 && X(Xe()), Me.copy(We), y.update();
                })(J);
                break;
              case 3:
                if (y.enablePan === !1 || O !== V.TOUCH_PAN)
                  return;
                (function(R) {
                  $e.set(R.touches[0].pageX, R.touches[0].pageY), Be.subVectors($e, Ge), ze(Be.x, Be.y), Ge.copy($e), y.update();
                })(J);
                break;
              default:
                O = V.NONE;
            }
        }
        function be(J) {
          y.enabled !== !1 && (y.dispatchEvent(D), O = V.NONE);
        }
        function fe(J) {
          J.preventDefault();
        }
        y.domElement.addEventListener("contextmenu", fe, !1), y.domElement.addEventListener("mousedown", ot, !1), y.domElement.addEventListener("wheel", je, !1), y.domElement.addEventListener("touchstart", ae, !1), y.domElement.addEventListener("touchend", be, !1), y.domElement.addEventListener("touchmove", z, !1), window.addEventListener("keydown", ie, !1), this.update();
      }, d.OrbitControls.prototype = Object.create(d.EventDispatcher.prototype), d.OrbitControls.prototype.constructor = d.OrbitControls, Object.defineProperties(d.OrbitControls.prototype, { center: { get: function() {
        return console.warn("THREE.OrbitControls: .center has been renamed to .target"), this.target;
      } }, noZoom: { get: function() {
        return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), !this.enableZoom;
      }, set: function(C) {
        console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), this.enableZoom = !C;
      } }, noRotate: { get: function() {
        return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), !this.enableRotate;
      }, set: function(C) {
        console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), this.enableRotate = !C;
      } }, noPan: { get: function() {
        return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), !this.enablePan;
      }, set: function(C) {
        console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), this.enablePan = !C;
      } }, noKeys: { get: function() {
        return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), !this.enableKeys;
      }, set: function(C) {
        console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), this.enableKeys = !C;
      } }, staticMoving: { get: function() {
        return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), !this.enableDamping;
      }, set: function(C) {
        console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), this.enableDamping = !C;
      } }, dynamicDampingFactor: { get: function() {
        return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor;
      }, set: function(C) {
        console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor = C;
      } } }), d.MTLLoader = function(C) {
        this.manager = C !== void 0 ? C : d.DefaultLoadingManager;
      }, d.MTLLoader.prototype = { constructor: d.MTLLoader, load: function(C, v, y, T) {
        var M = this, D = new d.FileLoader(this.manager);
        D.setPath(this.path), D.load(C, function(V) {
          v(M.parse(V));
        }, y, T);
      }, setPath: function(C) {
        this.path = C;
      }, setTexturePath: function(C) {
        this.texturePath = C;
      }, setBaseUrl: function(C) {
        console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead."), this.setTexturePath(C);
      }, setCrossOrigin: function(C) {
        this.crossOrigin = C;
      }, setMaterialOptions: function(C) {
        this.materialOptions = C;
      }, parse: function(C) {
        for (var v = C.split(`
`), y = {}, T = /\s+/, M = {}, D = 0; D < v.length; D++) {
          var V = v[D];
          if ((V = V.trim()).length !== 0 && V.charAt(0) !== "#") {
            var O = V.indexOf(" "), H = O >= 0 ? V.substring(0, O) : V;
            H = H.toLowerCase();
            var q = O >= 0 ? V.substring(O + 1) : "";
            if (q = q.trim(), H === "newmtl")
              y = { name: q }, M[q] = y;
            else if (y)
              if (H === "ka" || H === "kd" || H === "ks") {
                var $ = q.split(T, 3);
                y[H] = [parseFloat($[0]), parseFloat($[1]), parseFloat($[2])];
              } else
                y[H] = q;
          }
        }
        var re = new d.MTLLoader.MaterialCreator(this.texturePath || this.path, this.materialOptions);
        return re.setCrossOrigin(this.crossOrigin), re.setManager(this.manager), re.setMaterials(M), re;
      } }, d.MTLLoader.MaterialCreator = function(C, v) {
        this.baseUrl = C || "", this.options = v, this.materialsInfo = {}, this.materials = {}, this.materialsArray = [], this.nameLookup = {}, this.side = this.options && this.options.side ? this.options.side : d.FrontSide, this.wrap = this.options && this.options.wrap ? this.options.wrap : d.RepeatWrapping;
      }, d.MTLLoader.MaterialCreator.prototype = { constructor: d.MTLLoader.MaterialCreator, crossOrigin: "Anonymous", setCrossOrigin: function(C) {
        this.crossOrigin = C;
      }, setManager: function(C) {
        this.manager = C;
      }, setMaterials: function(C) {
        this.materialsInfo = this.convert(C), this.materials = {}, this.materialsArray = [], this.nameLookup = {};
      }, convert: function(C) {
        if (!this.options)
          return C;
        var v = {};
        for (var y in C) {
          var T = C[y], M = {};
          for (var D in v[y] = M, T) {
            var V = !0, O = T[D], H = D.toLowerCase();
            switch (H) {
              case "kd":
              case "ka":
              case "ks":
                this.options && this.options.normalizeRGB && (O = [O[0] / 255, O[1] / 255, O[2] / 255]), this.options && this.options.ignoreZeroRGBs && O[0] === 0 && O[1] === 0 && O[2] === 0 && (V = !1);
            }
            V && (M[H] = O);
          }
        }
        return v;
      }, preload: function() {
        for (var C in this.materialsInfo)
          this.create(C);
      }, getIndex: function(C) {
        return this.nameLookup[C];
      }, getAsArray: function() {
        var C = 0;
        for (var v in this.materialsInfo)
          this.materialsArray[C] = this.create(v), this.nameLookup[v] = C, C++;
        return this.materialsArray;
      }, create: function(C) {
        return this.materials[C] === void 0 && this.createMaterial_(C), this.materials[C];
      }, createMaterial_: function(C) {
        var v = this, y = this.materialsInfo[C], T = { name: C, side: this.side };
        function M(H, q) {
          if (!T[H]) {
            var $ = v.getTextureParams(q, T), re = v.loadTexture(function(ce, Ie) {
              return typeof Ie != "string" || Ie === "" ? "" : /^https?:\/\//i.test(Ie) ? Ie : ce + Ie;
            }(v.baseUrl, $.url));
            re.repeat.copy($.scale), re.offset.copy($.offset), re.wrapS = v.wrap, re.wrapT = v.wrap, T[H] = re;
          }
        }
        for (var D in y) {
          var V, O = y[D];
          if (O !== "")
            switch (D.toLowerCase()) {
              case "kd":
                T.color = new d.Color().fromArray(O);
                break;
              case "ks":
                T.specular = new d.Color().fromArray(O);
                break;
              case "map_kd":
                M("map", O);
                break;
              case "map_ks":
                M("specularMap", O);
                break;
              case "norm":
                M("normalMap", O);
                break;
              case "map_bump":
              case "bump":
                M("bumpMap", O);
                break;
              case "ns":
                T.shininess = parseFloat(O);
                break;
              case "d":
                (V = parseFloat(O)) < 1 && (T.opacity = V, T.transparent = !0);
                break;
              case "tr":
                (V = parseFloat(O)) > 0 && (T.opacity = 1 - V, T.transparent = !0);
            }
        }
        return this.materials[C] = new d.MeshPhongMaterial(T), this.materials[C];
      }, getTextureParams: function(C, v) {
        var y, T = { scale: new d.Vector2(1, 1), offset: new d.Vector2(0, 0) }, M = C.split(/\s+/);
        return (y = M.indexOf("-bm")) >= 0 && (v.bumpScale = parseFloat(M[y + 1]), M.splice(y, 2)), (y = M.indexOf("-s")) >= 0 && (T.scale.set(parseFloat(M[y + 1]), parseFloat(M[y + 2])), M.splice(y, 4)), (y = M.indexOf("-o")) >= 0 && (T.offset.set(parseFloat(M[y + 1]), parseFloat(M[y + 2])), M.splice(y, 4)), T.url = M.join(" ").trim(), T;
      }, loadTexture: function(C, v, y, T, M) {
        var D, V = d.Loader.Handlers.get(C), O = this.manager !== void 0 ? this.manager : d.DefaultLoadingManager;
        return V === null && (V = new d.TextureLoader(O)), V.setCrossOrigin && V.setCrossOrigin(this.crossOrigin), D = V.load(C, y, T, M), v !== void 0 && (D.mapping = v), D;
      } }, d.OBJLoader = function() {
        var C = /^[og]\s*(.+)?/, v = /^mtllib /, y = /^usemtl /;
        function T(M) {
          this.manager = M !== void 0 ? M : d.DefaultLoadingManager, this.materials = null;
        }
        return T.prototype = { constructor: T, load: function(M, D, V, O) {
          var H = this, q = new d.FileLoader(H.manager);
          q.setPath(this.path), q.load(M, function($) {
            D(H.parse($));
          }, V, O);
        }, setPath: function(M) {
          this.path = M;
        }, setMaterials: function(M) {
          return this.materials = M, this;
        }, parse: function(M) {
          console.time("OBJLoader");
          var D = new function() {
            var U = { objects: [], object: {}, vertices: [], normals: [], colors: [], uvs: [], materialLibraries: [], startObject: function(Z, ne) {
              if (this.object && this.object.fromDeclaration === !1)
                return this.object.name = Z, void (this.object.fromDeclaration = ne !== !1);
              var le = this.object && typeof this.object.currentMaterial == "function" ? this.object.currentMaterial() : void 0;
              if (this.object && typeof this.object._finalize == "function" && this.object._finalize(!0), this.object = { name: Z || "", fromDeclaration: ne !== !1, geometry: { vertices: [], normals: [], colors: [], uvs: [] }, materials: [], smooth: !0, startMaterial: function(Ke, Ze) {
                var et = this._finalize(!1);
                et && (et.inherited || et.groupCount <= 0) && this.materials.splice(et.index, 1);
                var Y = { index: this.materials.length, name: Ke || "", mtllib: Array.isArray(Ze) && Ze.length > 0 ? Ze[Ze.length - 1] : "", smooth: et !== void 0 ? et.smooth : this.smooth, groupStart: et !== void 0 ? et.groupEnd : 0, groupEnd: -1, groupCount: -1, inherited: !1, clone: function(k) {
                  var F = { index: typeof k == "number" ? k : this.index, name: this.name, mtllib: this.mtllib, smooth: this.smooth, groupStart: 0, groupEnd: -1, groupCount: -1, inherited: !1 };
                  return F.clone = this.clone.bind(F), F;
                } };
                return this.materials.push(Y), Y;
              }, currentMaterial: function() {
                if (this.materials.length > 0)
                  return this.materials[this.materials.length - 1];
              }, _finalize: function(Ke) {
                var Ze = this.currentMaterial();
                if (Ze && Ze.groupEnd === -1 && (Ze.groupEnd = this.geometry.vertices.length / 3, Ze.groupCount = Ze.groupEnd - Ze.groupStart, Ze.inherited = !1), Ke && this.materials.length > 1)
                  for (var et = this.materials.length - 1; et >= 0; et--)
                    this.materials[et].groupCount <= 0 && this.materials.splice(et, 1);
                return Ke && this.materials.length === 0 && this.materials.push({ name: "", smooth: this.smooth }), Ze;
              } }, le && le.name && typeof le.clone == "function") {
                var Ne = le.clone(0);
                Ne.inherited = !0, this.object.materials.push(Ne);
              }
              this.objects.push(this.object);
            }, finalize: function() {
              this.object && typeof this.object._finalize == "function" && this.object._finalize(!0);
            }, parseVertexIndex: function(Z, ne) {
              var le = parseInt(Z, 10);
              return 3 * (le >= 0 ? le - 1 : le + ne / 3);
            }, parseNormalIndex: function(Z, ne) {
              var le = parseInt(Z, 10);
              return 3 * (le >= 0 ? le - 1 : le + ne / 3);
            }, parseUVIndex: function(Z, ne) {
              var le = parseInt(Z, 10);
              return 2 * (le >= 0 ? le - 1 : le + ne / 2);
            }, addVertex: function(Z, ne, le) {
              var Ne = this.vertices, Ke = this.object.geometry.vertices;
              Ke.push(Ne[Z + 0], Ne[Z + 1], Ne[Z + 2]), Ke.push(Ne[ne + 0], Ne[ne + 1], Ne[ne + 2]), Ke.push(Ne[le + 0], Ne[le + 1], Ne[le + 2]);
            }, addVertexLine: function(Z) {
              var ne = this.vertices;
              this.object.geometry.vertices.push(ne[Z + 0], ne[Z + 1], ne[Z + 2]);
            }, addNormal: function(Z, ne, le) {
              var Ne = this.normals, Ke = this.object.geometry.normals;
              Ke.push(Ne[Z + 0], Ne[Z + 1], Ne[Z + 2]), Ke.push(Ne[ne + 0], Ne[ne + 1], Ne[ne + 2]), Ke.push(Ne[le + 0], Ne[le + 1], Ne[le + 2]);
            }, addColor: function(Z, ne, le) {
              var Ne = this.colors, Ke = this.object.geometry.colors;
              Ke.push(Ne[Z + 0], Ne[Z + 1], Ne[Z + 2]), Ke.push(Ne[ne + 0], Ne[ne + 1], Ne[ne + 2]), Ke.push(Ne[le + 0], Ne[le + 1], Ne[le + 2]);
            }, addUV: function(Z, ne, le) {
              var Ne = this.uvs, Ke = this.object.geometry.uvs;
              Ke.push(Ne[Z + 0], Ne[Z + 1]), Ke.push(Ne[ne + 0], Ne[ne + 1]), Ke.push(Ne[le + 0], Ne[le + 1]);
            }, addUVLine: function(Z) {
              var ne = this.uvs;
              this.object.geometry.uvs.push(ne[Z + 0], ne[Z + 1]);
            }, addFace: function(Z, ne, le, Ne, Ke, Ze, et, Y, k) {
              var F = this.vertices.length, ue = this.parseVertexIndex(Z, F), Qe = this.parseVertexIndex(ne, F), Oe = this.parseVertexIndex(le, F);
              if (this.addVertex(ue, Qe, Oe), Ne !== void 0) {
                var Ve = this.uvs.length;
                ue = this.parseUVIndex(Ne, Ve), Qe = this.parseUVIndex(Ke, Ve), Oe = this.parseUVIndex(Ze, Ve), this.addUV(ue, Qe, Oe);
              }
              if (et !== void 0) {
                var It = this.normals.length;
                ue = this.parseNormalIndex(et, It), Qe = et === Y ? ue : this.parseNormalIndex(Y, It), Oe = et === k ? ue : this.parseNormalIndex(k, It), this.addNormal(ue, Qe, Oe);
              }
              this.colors.length > 0 && this.addColor(ue, Qe, Oe);
            }, addLineGeometry: function(Z, ne) {
              this.object.geometry.type = "Line";
              for (var le = this.vertices.length, Ne = this.uvs.length, Ke = 0, Ze = Z.length; Ke < Ze; Ke++)
                this.addVertexLine(this.parseVertexIndex(Z[Ke], le));
              var et = 0;
              for (Ze = ne.length; et < Ze; et++)
                this.addUVLine(this.parseUVIndex(ne[et], Ne));
            } };
            return U.startObject("", !1), U;
          }();
          M.indexOf(`\r
`) !== -1 && (M = M.replace(/\r\n/g, `
`)), M.indexOf(`\\
`) !== -1 && (M = M.replace(/\\\n/g, ""));
          for (var V = M.split(`
`), O = "", H = "", q = [], $ = typeof "".trimLeft == "function", re = 0, ce = V.length; re < ce; re++)
            if (O = V[re], (O = $ ? O.trimLeft() : O.trim()).length !== 0 && (H = O.charAt(0)) !== "#")
              if (H === "v") {
                var Ie = O.split(/\s+/);
                switch (Ie[0]) {
                  case "v":
                    D.vertices.push(parseFloat(Ie[1]), parseFloat(Ie[2]), parseFloat(Ie[3])), Ie.length === 8 && D.colors.push(parseFloat(Ie[4]), parseFloat(Ie[5]), parseFloat(Ie[6]));
                    break;
                  case "vn":
                    D.normals.push(parseFloat(Ie[1]), parseFloat(Ie[2]), parseFloat(Ie[3]));
                    break;
                  case "vt":
                    D.uvs.push(parseFloat(Ie[1]), parseFloat(Ie[2]));
                }
              } else if (H === "f") {
                for (var Pe = O.substr(1).trim().split(/\s+/), se = [], Ce = 0, Ge = Pe.length; Ce < Ge; Ce++) {
                  var $e = Pe[Ce];
                  if ($e.length > 0) {
                    var Be = $e.split("/");
                    se.push(Be);
                  }
                }
                var Me = se[0];
                for (Ce = 1, Ge = se.length - 1; Ce < Ge; Ce++) {
                  var We = se[Ce], nt = se[Ce + 1];
                  D.addFace(Me[0], We[0], nt[0], Me[1], We[1], nt[1], Me[2], We[2], nt[2]);
                }
              } else if (H === "l") {
                var Xe = O.substring(1).trim().split(" "), Je = [], qe = [];
                if (O.indexOf("/") === -1)
                  Je = Xe;
                else
                  for (var ye = 0, Ue = Xe.length; ye < Ue; ye++) {
                    var ze = Xe[ye].split("/");
                    ze[0] !== "" && Je.push(ze[0]), ze[1] !== "" && qe.push(ze[1]);
                  }
                D.addLineGeometry(Je, qe);
              } else if ((q = C.exec(O)) !== null) {
                var X = (" " + q[0].substr(1).trim()).substr(1);
                D.startObject(X);
              } else if (y.test(O))
                D.object.startMaterial(O.substring(7).trim(), D.materialLibraries);
              else if (v.test(O))
                D.materialLibraries.push(O.substring(7).trim());
              else {
                if (H !== "s") {
                  if (O === "\0")
                    continue;
                  throw new Error('THREE.OBJLoader: Unexpected line: "' + O + '"');
                }
                if ((q = O.split(" ")).length > 1) {
                  var ut = q[1].trim().toLowerCase();
                  D.object.smooth = ut !== "0" && ut !== "off";
                } else
                  D.object.smooth = !0;
                (Q = D.object.currentMaterial()) && (Q.smooth = D.object.smooth);
              }
          D.finalize();
          var ot = new d.Group();
          for (ot.materialLibraries = [].concat(D.materialLibraries), re = 0, ce = D.objects.length; re < ce; re++) {
            var mt = D.objects[re], ve = mt.geometry, je = mt.materials, ie = ve.type === "Line";
            if (ve.vertices.length !== 0) {
              var ae = new d.BufferGeometry();
              ae.addAttribute("position", new d.Float32BufferAttribute(ve.vertices, 3)), ve.normals.length > 0 ? ae.addAttribute("normal", new d.Float32BufferAttribute(ve.normals, 3)) : ae.computeVertexNormals(), ve.colors.length > 0 && ae.addAttribute("color", new d.Float32BufferAttribute(ve.colors, 3)), ve.uvs.length > 0 && ae.addAttribute("uv", new d.Float32BufferAttribute(ve.uvs, 2));
              for (var z, be = [], fe = 0, J = je.length; fe < J; fe++) {
                var R = je[fe], Q = void 0;
                if (this.materials !== null && (Q = this.materials.create(R.name), ie && Q && !(Q instanceof d.LineBasicMaterial))) {
                  var b = new d.LineBasicMaterial();
                  b.copy(Q), Q = b;
                }
                Q || ((Q = ie ? new d.LineBasicMaterial() : new d.MeshPhongMaterial()).name = R.name), Q.flatShading = !R.smooth, be.push(Q);
              }
              if (be.length > 1) {
                for (fe = 0, J = je.length; fe < J; fe++)
                  R = je[fe], ae.addGroup(R.groupStart, R.groupCount, fe);
                z = ie ? new d.LineSegments(ae, be) : new d.Mesh(ae, be);
              } else
                z = ie ? new d.LineSegments(ae, be[0]) : new d.Mesh(ae, be[0]);
              z.name = mt.name, ot.add(z);
            }
          }
          return console.timeEnd("OBJLoader"), ot;
        } }, T;
      }(), d.ColladaLoader = function(C) {
        this.manager = C !== void 0 ? C : d.DefaultLoadingManager;
      }, d.ColladaLoader.prototype = { constructor: d.ColladaLoader, crossOrigin: "anonymous", load: function(C, v, y, T) {
        var M = this, D = M.path === void 0 ? d.LoaderUtils.extractUrlBase(C) : M.path;
        new d.FileLoader(M.manager).load(C, function(V) {
          v(M.parse(V, D));
        }, y, T);
      }, setPath: function(C) {
        return this.path = C, this;
      }, options: { set convertUpAxis(C) {
        console.warn("THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.");
      } }, setCrossOrigin: function(C) {
        return this.crossOrigin = C, this;
      }, parse: function(C, v) {
        function y(L, te) {
          for (var de = [], Ee = L.childNodes, ge = 0, rt = Ee.length; ge < rt; ge++) {
            var ht = Ee[ge];
            ht.nodeName === te && de.push(ht);
          }
          return de;
        }
        function T(L) {
          if (L.length === 0)
            return [];
          for (var te = L.trim().split(/\s+/), de = new Array(te.length), Ee = 0, ge = te.length; Ee < ge; Ee++)
            de[Ee] = te[Ee];
          return de;
        }
        function M(L) {
          if (L.length === 0)
            return [];
          for (var te = L.trim().split(/\s+/), de = new Array(te.length), Ee = 0, ge = te.length; Ee < ge; Ee++)
            de[Ee] = parseFloat(te[Ee]);
          return de;
        }
        function D(L) {
          if (L.length === 0)
            return [];
          for (var te = L.trim().split(/\s+/), de = new Array(te.length), Ee = 0, ge = te.length; Ee < ge; Ee++)
            de[Ee] = parseInt(te[Ee]);
          return de;
        }
        function V(L) {
          return L.substring(1);
        }
        function O(L) {
          return Object.keys(L).length === 0;
        }
        function H(L, te, de, Ee) {
          var ge = y(L, te)[0];
          if (ge !== void 0)
            for (var rt = y(ge, de), ht = 0; ht < rt.length; ht++)
              Ee(rt[ht]);
        }
        function q(L, te) {
          for (var de in L)
            L[de].build = te(L[de]);
        }
        function $(L, te) {
          return L.build !== void 0 || (L.build = te(L)), L.build;
        }
        function re(L) {
          for (var te = { inputs: {} }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "input":
                  var rt = V(ge.getAttribute("source")), ht = ge.getAttribute("semantic");
                  te.inputs[ht] = rt;
              }
          }
          return te;
        }
        function ce(L) {
          var te = {}, de = L.getAttribute("target").split("/"), Ee = de.shift(), ge = de.shift(), rt = ge.indexOf("(") !== -1, ht = ge.indexOf(".") !== -1;
          if (ht)
            ge = (de = ge.split(".")).shift(), te.member = de.shift();
          else if (rt) {
            var lt = ge.split("(");
            ge = lt.shift();
            for (var Ft = 0; Ft < lt.length; Ft++)
              lt[Ft] = parseInt(lt[Ft].replace(/\)/, ""));
            te.indices = lt;
          }
          return te.id = Ee, te.sid = ge, te.arraySyntax = rt, te.memberSyntax = ht, te.sampler = V(L.getAttribute("source")), te;
        }
        function Ie(L) {
          var te = [], de = L.channels, Ee = L.samplers, ge = L.sources;
          for (var rt in de)
            if (de.hasOwnProperty(rt)) {
              var ht = de[rt], lt = Ee[ht.sampler], Ft = lt.inputs.INPUT, Wt = lt.inputs.OUTPUT;
              Be(se(ht, ge[Ft], ge[Wt]), te);
            }
          return te;
        }
        function Pe(L) {
          return $(tt.animations[L], Ie);
        }
        function se(L, te, de) {
          var Ee, ge, rt, ht, lt, Ft, Wt = tt.nodes[L.id], Gt = wr(Wt.id), Xt = Wt.transforms[L.sid], Sr = Wt.matrix.clone().transpose(), Fr = {};
          switch (Xt) {
            case "matrix":
              for (rt = 0, ht = te.array.length; rt < ht; rt++)
                if (Ee = te.array[rt], ge = rt * de.stride, Fr[Ee] === void 0 && (Fr[Ee] = {}), L.arraySyntax === !0) {
                  var Pr = de.array[ge], $t = L.indices[0] + 4 * L.indices[1];
                  Fr[Ee][$t] = Pr;
                } else
                  for (lt = 0, Ft = de.stride; lt < Ft; lt++)
                    Fr[Ee][lt] = de.array[ge + lt];
              break;
            case "translate":
            case "rotate":
            case "scale":
              console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.', Xt);
          }
          var Lt = function(Tr, mr) {
            var ar = [];
            for (var Gr in Tr)
              ar.push({ time: parseFloat(Gr), value: Tr[Gr] });
            ar.sort(function(_r, Kt) {
              return _r.time - Kt.time;
            });
            for (var Xr = 0; Xr < 16; Xr++)
              Me(ar, Xr, mr.elements[Xr]);
            return ar;
          }(Fr, Sr);
          return { name: Gt.uuid, keyframes: Lt };
        }
        var Ce = new d.Vector3(), Ge = new d.Vector3(), $e = new d.Quaternion();
        function Be(L, te) {
          for (var de = L.keyframes, Ee = L.name, ge = [], rt = [], ht = [], lt = [], Ft = 0, Wt = de.length; Ft < Wt; Ft++) {
            var Gt = de[Ft], Xt = Gt.time, Sr = Gt.value;
            rn.fromArray(Sr).transpose(), rn.decompose(Ce, $e, Ge), ge.push(Xt), rt.push(Ce.x, Ce.y, Ce.z), ht.push($e.x, $e.y, $e.z, $e.w), lt.push(Ge.x, Ge.y, Ge.z);
          }
          return rt.length > 0 && te.push(new d.VectorKeyframeTrack(Ee + ".position", ge, rt)), ht.length > 0 && te.push(new d.QuaternionKeyframeTrack(Ee + ".quaternion", ge, ht)), lt.length > 0 && te.push(new d.VectorKeyframeTrack(Ee + ".scale", ge, lt)), te;
        }
        function Me(L, te, de) {
          var Ee, ge, rt, ht = !0;
          for (ge = 0, rt = L.length; ge < rt; ge++)
            (Ee = L[ge]).value[te] === void 0 ? Ee.value[te] = null : ht = !1;
          if (ht === !0)
            for (ge = 0, rt = L.length; ge < rt; ge++)
              (Ee = L[ge]).value[te] = de;
          else
            (function(lt, Ft) {
              for (var Wt, Gt, Xt = 0, Sr = lt.length; Xt < Sr; Xt++) {
                var Fr = lt[Xt];
                if (Fr.value[Ft] === null) {
                  if (Wt = We(lt, Xt, Ft), Gt = nt(lt, Xt, Ft), Wt === null) {
                    Fr.value[Ft] = Gt.value[Ft];
                    continue;
                  }
                  if (Gt === null) {
                    Fr.value[Ft] = Wt.value[Ft];
                    continue;
                  }
                  Xe(Fr, Wt, Gt, Ft);
                }
              }
            })(L, te);
        }
        function We(L, te, de) {
          for (; te >= 0; ) {
            var Ee = L[te];
            if (Ee.value[de] !== null)
              return Ee;
            te--;
          }
          return null;
        }
        function nt(L, te, de) {
          for (; te < L.length; ) {
            var Ee = L[te];
            if (Ee.value[de] !== null)
              return Ee;
            te++;
          }
          return null;
        }
        function Xe(L, te, de, Ee) {
          de.time - te.time != 0 ? L.value[Ee] = (L.time - te.time) * (de.value[Ee] - te.value[Ee]) / (de.time - te.time) + te.value[Ee] : L.value[Ee] = te.value[Ee];
        }
        function Je(L) {
          for (var te = [], de = L.name, Ee = L.end - L.start || -1, ge = L.animations, rt = 0, ht = ge.length; rt < ht; rt++)
            for (var lt = Pe(ge[rt]), Ft = 0, Wt = lt.length; Ft < Wt; Ft++)
              te.push(lt[Ft]);
          return new d.AnimationClip(de, Ee, te);
        }
        function qe(L) {
          return $(tt.clips[L], Je);
        }
        function ye(L) {
          for (var te = { sources: {} }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "bind_shape_matrix":
                  te.bindShapeMatrix = M(ge.textContent);
                  break;
                case "source":
                  var rt = ge.getAttribute("id");
                  te.sources[rt] = Oe(ge);
                  break;
                case "joints":
                  te.joints = Ue(ge);
                  break;
                case "vertex_weights":
                  te.vertexWeights = ze(ge);
              }
          }
          return te;
        }
        function Ue(L) {
          for (var te = { inputs: {} }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "input":
                  var rt = ge.getAttribute("semantic"), ht = V(ge.getAttribute("source"));
                  te.inputs[rt] = ht;
              }
          }
          return te;
        }
        function ze(L) {
          for (var te = { inputs: {} }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "input":
                  var rt = ge.getAttribute("semantic"), ht = V(ge.getAttribute("source")), lt = parseInt(ge.getAttribute("offset"));
                  te.inputs[rt] = { id: ht, offset: lt };
                  break;
                case "vcount":
                  te.vcount = D(ge.textContent);
                  break;
                case "v":
                  te.v = D(ge.textContent);
              }
          }
          return te;
        }
        function X(L) {
          var te = { id: L.id }, de = tt.geometries[te.id];
          return L.skin !== void 0 && (te.skin = function(Ee) {
            var ge, rt, ht, lt = { joints: [], indices: { array: [], stride: 4 }, weights: { array: [], stride: 4 } }, Ft = Ee.sources, Wt = Ee.vertexWeights, Gt = Wt.vcount, Xt = Wt.v, Sr = Wt.inputs.JOINT.offset, Fr = Wt.inputs.WEIGHT.offset, Pr = Ee.sources[Ee.joints.inputs.JOINT], $t = Ee.sources[Ee.joints.inputs.INV_BIND_MATRIX], Lt = Ft[Wt.inputs.WEIGHT.id].array, Tr = 0;
            for (ge = 0, ht = Gt.length; ge < ht; ge++) {
              var mr = Gt[ge], ar = [];
              for (rt = 0; rt < mr; rt++) {
                var Gr = Xt[Tr + Sr], Xr = Xt[Tr + Fr], _r = Lt[Xr];
                ar.push({ index: Gr, weight: _r }), Tr += 2;
              }
              for (ar.sort(_n), rt = 0; rt < 4; rt++) {
                var Kt = ar[rt];
                Kt !== void 0 ? (lt.indices.array.push(Kt.index), lt.weights.array.push(Kt.weight)) : (lt.indices.array.push(0), lt.weights.array.push(0));
              }
            }
            for (Ee.bindShapeMatrix ? lt.bindMatrix = new d.Matrix4().fromArray(Ee.bindShapeMatrix).transpose() : lt.bindMatrix = new d.Matrix4().transpose(), ge = 0, ht = Pr.array.length; ge < ht; ge++) {
              var vr = Pr.array[ge], Wr = new d.Matrix4().fromArray($t.array, ge * $t.stride).transpose();
              lt.joints.push({ name: vr, boneInverse: Wr });
            }
            return lt;
            function _n(ci, $i) {
              return $i.weight - ci.weight;
            }
          }(L.skin), de.sources.skinIndices = te.skin.indices, de.sources.skinWeights = te.skin.weights), te;
        }
        function ut(L) {
          return $(tt.controllers[L], X);
        }
        function ot(L) {
          return L.build !== void 0 ? L.build : L.init_from;
        }
        function mt(L) {
          var te = tt.images[L];
          return te !== void 0 ? $(te, ot) : (console.warn("THREE.ColladaLoader: Couldn't find image with ID:", L), null);
        }
        function ve(L) {
          for (var te = { surfaces: {}, samplers: {} }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "newparam":
                  je(ge, te);
                  break;
                case "technique":
                  te.technique = z(ge);
                  break;
                case "extra":
                  te.extra = b(ge);
              }
          }
          return te;
        }
        function je(L, te) {
          for (var de = L.getAttribute("sid"), Ee = 0, ge = L.childNodes.length; Ee < ge; Ee++) {
            var rt = L.childNodes[Ee];
            if (rt.nodeType === 1)
              switch (rt.nodeName) {
                case "surface":
                  te.surfaces[de] = ie(rt);
                  break;
                case "sampler2D":
                  te.samplers[de] = ae(rt);
              }
          }
        }
        function ie(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "init_from":
                  te.init_from = ge.textContent;
              }
          }
          return te;
        }
        function ae(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "source":
                  te.source = ge.textContent;
              }
          }
          return te;
        }
        function z(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "constant":
                case "lambert":
                case "blinn":
                case "phong":
                  te.type = ge.nodeName, te.parameters = be(ge);
              }
          }
          return te;
        }
        function be(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "emission":
                case "diffuse":
                case "specular":
                case "shininess":
                case "transparency":
                  te[ge.nodeName] = fe(ge);
                  break;
                case "transparent":
                  te[ge.nodeName] = { opaque: ge.getAttribute("opaque"), data: fe(ge) };
              }
          }
          return te;
        }
        function fe(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "color":
                  te[ge.nodeName] = M(ge.textContent);
                  break;
                case "float":
                  te[ge.nodeName] = parseFloat(ge.textContent);
                  break;
                case "texture":
                  te[ge.nodeName] = { id: ge.getAttribute("texture"), extra: J(ge) };
              }
          }
          return te;
        }
        function J(L) {
          for (var te = { technique: {} }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "extra":
                  R(ge, te);
              }
          }
          return te;
        }
        function R(L, te) {
          for (var de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "technique":
                  Q(ge, te);
              }
          }
        }
        function Q(L, te) {
          for (var de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "repeatU":
                case "repeatV":
                case "offsetU":
                case "offsetV":
                  te.technique[ge.nodeName] = parseFloat(ge.textContent);
                  break;
                case "wrapU":
                case "wrapV":
                  ge.textContent.toUpperCase() === "TRUE" ? te.technique[ge.nodeName] = 1 : ge.textContent.toUpperCase() === "FALSE" ? te.technique[ge.nodeName] = 0 : te.technique[ge.nodeName] = parseInt(ge.textContent);
              }
          }
        }
        function b(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "technique":
                  te.technique = U(ge);
              }
          }
          return te;
        }
        function U(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "double_sided":
                  te[ge.nodeName] = parseInt(ge.textContent);
              }
          }
          return te;
        }
        function Z(L) {
          return L;
        }
        function ne(L) {
          var te, de = function(Sr) {
            return $(tt.effects[Sr], Z);
          }(L.url), Ee = de.profile.technique, ge = de.profile.extra;
          switch (Ee.type) {
            case "phong":
            case "blinn":
              te = new d.MeshPhongMaterial();
              break;
            case "lambert":
              te = new d.MeshLambertMaterial();
              break;
            default:
              te = new d.MeshBasicMaterial();
          }
          function rt(Sr) {
            var Fr = de.profile.samplers[Sr.id], Pr = null;
            if (Fr !== void 0 ? Pr = mt(de.profile.surfaces[Fr.source].init_from) : (console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."), Pr = mt(Sr.id)), Pr !== null) {
              var $t = nr.load(Pr), Lt = Sr.extra;
              if (Lt !== void 0 && Lt.technique !== void 0 && O(Lt.technique) === !1) {
                var Tr = Lt.technique;
                $t.wrapS = Tr.wrapU ? d.RepeatWrapping : d.ClampToEdgeWrapping, $t.wrapT = Tr.wrapV ? d.RepeatWrapping : d.ClampToEdgeWrapping, $t.offset.set(Tr.offsetU || 0, Tr.offsetV || 0), $t.repeat.set(Tr.repeatU || 1, Tr.repeatV || 1);
              } else
                $t.wrapS = d.RepeatWrapping, $t.wrapT = d.RepeatWrapping;
              return $t;
            }
            return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:", Sr.id), null;
          }
          te.name = L.name;
          var ht = Ee.parameters;
          for (var lt in ht) {
            var Ft = ht[lt];
            switch (lt) {
              case "diffuse":
                Ft.color && te.color.fromArray(Ft.color), Ft.texture && (te.map = rt(Ft.texture));
                break;
              case "specular":
                Ft.color && te.specular && te.specular.fromArray(Ft.color), Ft.texture && (te.specularMap = rt(Ft.texture));
                break;
              case "shininess":
                Ft.float && te.shininess && (te.shininess = Ft.float);
                break;
              case "emission":
                Ft.color && te.emissive && te.emissive.fromArray(Ft.color), Ft.texture && (te.emissiveMap = rt(Ft.texture));
            }
          }
          var Wt = ht.transparent, Gt = ht.transparency;
          if (Gt === void 0 && Wt && (Gt = { float: 1 }), Wt === void 0 && Gt && (Wt = { opaque: "A_ONE", data: { color: [1, 1, 1, 1] } }), Wt && Gt)
            if (Wt.data.texture)
              te.transparent = !0;
            else {
              var Xt = Wt.data.color;
              switch (Wt.opaque) {
                case "A_ONE":
                  te.opacity = Xt[3] * Gt.float;
                  break;
                case "RGB_ZERO":
                  te.opacity = 1 - Xt[0] * Gt.float;
                  break;
                case "A_ZERO":
                  te.opacity = 1 - Xt[3] * Gt.float;
                  break;
                case "RGB_ONE":
                  te.opacity = Xt[0] * Gt.float;
                  break;
                default:
                  console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.', Wt.opaque);
              }
              te.opacity < 1 && (te.transparent = !0);
            }
          return ge !== void 0 && ge.technique !== void 0 && ge.technique.double_sided === 1 && (te.side = d.DoubleSide), te;
        }
        function le(L) {
          return $(tt.materials[L], ne);
        }
        function Ne(L) {
          for (var te = 0; te < L.childNodes.length; te++) {
            var de = L.childNodes[te];
            switch (de.nodeName) {
              case "technique_common":
                return Ke(de);
            }
          }
          return {};
        }
        function Ke(L) {
          for (var te = {}, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            switch (Ee.nodeName) {
              case "perspective":
              case "orthographic":
                te.technique = Ee.nodeName, te.parameters = Ze(Ee);
            }
          }
          return te;
        }
        function Ze(L) {
          for (var te = {}, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            switch (Ee.nodeName) {
              case "xfov":
              case "yfov":
              case "xmag":
              case "ymag":
              case "znear":
              case "zfar":
              case "aspect_ratio":
                te[Ee.nodeName] = parseFloat(Ee.textContent);
            }
          }
          return te;
        }
        function et(L) {
          var te;
          switch (L.optics.technique) {
            case "perspective":
              te = new d.PerspectiveCamera(L.optics.parameters.yfov, L.optics.parameters.aspect_ratio, L.optics.parameters.znear, L.optics.parameters.zfar);
              break;
            case "orthographic":
              var de = L.optics.parameters.ymag, Ee = L.optics.parameters.xmag, ge = L.optics.parameters.aspect_ratio;
              Ee = Ee === void 0 ? de * ge : Ee, de = de === void 0 ? Ee / ge : de, Ee *= 0.5, de *= 0.5, te = new d.OrthographicCamera(-Ee, Ee, de, -de, L.optics.parameters.znear, L.optics.parameters.zfar);
              break;
            default:
              te = new d.PerspectiveCamera();
          }
          return te.name = L.name, te;
        }
        function Y(L) {
          var te = tt.cameras[L];
          return te !== void 0 ? $(te, et) : (console.warn("THREE.ColladaLoader: Couldn't find camera with ID:", L), null);
        }
        function k(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "directional":
                case "point":
                case "spot":
                case "ambient":
                  te.technique = ge.nodeName, te.parameters = F(ge);
              }
          }
          return te;
        }
        function F(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "color":
                  var rt = M(ge.textContent);
                  te.color = new d.Color().fromArray(rt);
                  break;
                case "falloff_angle":
                  te.falloffAngle = parseFloat(ge.textContent);
                  break;
                case "quadratic_attenuation":
                  var ht = parseFloat(ge.textContent);
                  te.distance = ht ? Math.sqrt(1 / ht) : 0;
              }
          }
          return te;
        }
        function ue(L) {
          var te;
          switch (L.technique) {
            case "directional":
              te = new d.DirectionalLight();
              break;
            case "point":
              te = new d.PointLight();
              break;
            case "spot":
              te = new d.SpotLight();
              break;
            case "ambient":
              te = new d.AmbientLight();
          }
          return L.parameters.color && te.color.copy(L.parameters.color), L.parameters.distance && (te.distance = L.parameters.distance), te;
        }
        function Qe(L) {
          var te = tt.lights[L];
          return te !== void 0 ? $(te, ue) : (console.warn("THREE.ColladaLoader: Couldn't find light with ID:", L), null);
        }
        function Oe(L) {
          for (var te = { array: [], stride: 3 }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "float_array":
                  te.array = M(Ee.textContent);
                  break;
                case "Name_array":
                  te.array = T(Ee.textContent);
                  break;
                case "technique_common":
                  var ge = y(Ee, "accessor")[0];
                  ge !== void 0 && (te.stride = parseInt(ge.getAttribute("stride")));
              }
          }
          return te;
        }
        function Ve(L) {
          for (var te = {}, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            Ee.nodeType === 1 && (te[Ee.getAttribute("semantic")] = V(Ee.getAttribute("source")));
          }
          return te;
        }
        function It(L) {
          for (var te = { type: L.nodeName, material: L.getAttribute("material"), count: parseInt(L.getAttribute("count")), inputs: {}, stride: 0, hasUV: !1 }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "input":
                  var rt = V(ge.getAttribute("source")), ht = ge.getAttribute("semantic"), lt = parseInt(ge.getAttribute("offset"));
                  te.inputs[ht] = { id: rt, offset: lt }, te.stride = Math.max(te.stride, lt + 1), ht === "TEXCOORD" && (te.hasUV = !0);
                  break;
                case "vcount":
                  te.vcount = D(ge.textContent);
                  break;
                case "p":
                  te.p = D(ge.textContent);
              }
          }
          return te;
        }
        function vt(L) {
          for (var te = 0, de = 0, Ee = L.length; de < Ee; de++)
            L[de].hasUV === !0 && te++;
          te > 0 && te < L.length && (L.uvsNeedsFix = !0);
        }
        function Qt(L) {
          var te = {}, de = L.sources, Ee = L.vertices, ge = L.primitives;
          if (ge.length === 0)
            return {};
          var rt = function(Ft) {
            for (var Wt = {}, Gt = 0; Gt < Ft.length; Gt++) {
              var Xt = Ft[Gt];
              Wt[Xt.type] === void 0 && (Wt[Xt.type] = []), Wt[Xt.type].push(Xt);
            }
            return Wt;
          }(ge);
          for (var ht in rt) {
            var lt = rt[ht];
            vt(lt), te[ht] = Ct(lt, de, Ee);
          }
          return te;
        }
        function Ct(L, te, de) {
          for (var Ee = {}, ge = { array: [], stride: 0 }, rt = { array: [], stride: 0 }, ht = { array: [], stride: 0 }, lt = { array: [], stride: 0 }, Ft = [], Wt = 4, Gt = [], Xt = 4, Sr = new d.BufferGeometry(), Fr = [], Pr = 0, $t = 0; $t < L.length; $t++) {
            var Lt = L[$t], Tr = Lt.inputs, mr = 0;
            switch (Lt.type) {
              case "lines":
              case "linestrips":
                mr = 2 * Lt.count;
                break;
              case "triangles":
                mr = 3 * Lt.count;
                break;
              case "polylist":
                for (var ar = 0; ar < Lt.count; ar++) {
                  var Gr = Lt.vcount[ar];
                  switch (Gr) {
                    case 3:
                      mr += 3;
                      break;
                    case 4:
                      mr += 6;
                      break;
                    default:
                      mr += 3 * (Gr - 2);
                  }
                }
                break;
              default:
                console.warn("THREE.ColladaLoader: Unknow primitive type:", Lt.type);
            }
            for (var Xr in Sr.addGroup(Pr, mr, $t), Pr += mr, Lt.material && Fr.push(Lt.material), Tr) {
              var _r = Tr[Xr];
              switch (Xr) {
                case "VERTEX":
                  for (var Kt in de) {
                    var vr = de[Kt];
                    switch (Kt) {
                      case "POSITION":
                        var Wr = ge.array.length;
                        if (Rt(Lt, te[vr], _r.offset, ge.array), ge.stride = te[vr].stride, te.skinWeights && te.skinIndices && (Rt(Lt, te.skinIndices, _r.offset, Ft), Rt(Lt, te.skinWeights, _r.offset, Gt)), Lt.hasUV === !1 && L.uvsNeedsFix === !0) {
                          mr = (ge.array.length - Wr) / ge.stride;
                          for (var _n = 0; _n < mr; _n++)
                            ht.array.push(0, 0);
                        }
                        break;
                      case "NORMAL":
                        Rt(Lt, te[vr], _r.offset, rt.array), rt.stride = te[vr].stride;
                        break;
                      case "COLOR":
                        Rt(Lt, te[vr], _r.offset, lt.array), lt.stride = te[vr].stride;
                        break;
                      case "TEXCOORD":
                        Rt(Lt, te[vr], _r.offset, ht.array), ht.stride = te[vr].stride;
                        break;
                      default:
                        console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.', Kt);
                    }
                  }
                  break;
                case "NORMAL":
                  Rt(Lt, te[_r.id], _r.offset, rt.array), rt.stride = te[_r.id].stride;
                  break;
                case "COLOR":
                  Rt(Lt, te[_r.id], _r.offset, lt.array), lt.stride = te[_r.id].stride;
                  break;
                case "TEXCOORD":
                  Rt(Lt, te[_r.id], _r.offset, ht.array), ht.stride = te[_r.id].stride;
              }
            }
          }
          return ge.array.length > 0 && Sr.addAttribute("position", new d.Float32BufferAttribute(ge.array, ge.stride)), rt.array.length > 0 && Sr.addAttribute("normal", new d.Float32BufferAttribute(rt.array, rt.stride)), lt.array.length > 0 && Sr.addAttribute("color", new d.Float32BufferAttribute(lt.array, lt.stride)), ht.array.length > 0 && Sr.addAttribute("uv", new d.Float32BufferAttribute(ht.array, ht.stride)), Ft.length > 0 && Sr.addAttribute("skinIndex", new d.Float32BufferAttribute(Ft, Wt)), Gt.length > 0 && Sr.addAttribute("skinWeight", new d.Float32BufferAttribute(Gt, Xt)), Ee.data = Sr, Ee.type = L[0].type, Ee.materialKeys = Fr, Ee;
        }
        function Rt(L, te, de, Ee) {
          var ge = L.p, rt = L.stride, ht = L.vcount;
          function lt(ar) {
            for (var Gr = ge[ar + de] * Wt, Xr = Gr + Wt; Gr < Xr; Gr++)
              Ee.push(Ft[Gr]);
          }
          var Ft = te.array, Wt = te.stride;
          if (L.vcount !== void 0)
            for (var Gt = 0, Xt = 0, Sr = ht.length; Xt < Sr; Xt++) {
              var Fr = ht[Xt];
              if (Fr === 4) {
                var Pr = Gt + 1 * rt, $t = Gt + 2 * rt, Lt = Gt + 3 * rt;
                lt(Gt + 0 * rt), lt(Pr), lt(Lt), lt(Pr), lt($t), lt(Lt);
              } else if (Fr === 3)
                Pr = Gt + 1 * rt, $t = Gt + 2 * rt, lt(Gt + 0 * rt), lt(Pr), lt($t);
              else if (Fr > 4)
                for (var Tr = 1, mr = Fr - 2; Tr <= mr; Tr++)
                  Pr = Gt + rt * Tr, $t = Gt + rt * (Tr + 1), lt(Gt + 0 * rt), lt(Pr), lt($t);
              Gt += rt * Fr;
            }
          else
            for (Xt = 0, Sr = ge.length; Xt < Sr; Xt += rt)
              lt(Xt);
        }
        function or(L) {
          return $(tt.geometries[L], Qt);
        }
        function tn(L) {
          return L.build !== void 0 ? L.build : L;
        }
        function ur(L, te) {
          for (var de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "joint":
                  te.joints[Ee.getAttribute("sid")] = Vr(Ee);
                  break;
                case "link":
                  te.links.push($r(Ee));
              }
          }
        }
        function Vr(L) {
          for (var te, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "prismatic":
                case "revolute":
                  te = zr(Ee);
              }
          }
          return te;
        }
        function zr(L, te) {
          te = { sid: L.getAttribute("sid"), name: L.getAttribute("name") || "", axis: new d.Vector3(), limits: { min: 0, max: 0 }, type: L.nodeName, static: !1, zeroPosition: 0, middlePosition: 0 };
          for (var de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "axis":
                  var ge = M(Ee.textContent);
                  te.axis.fromArray(ge);
                  break;
                case "limits":
                  var rt = Ee.getElementsByTagName("max")[0], ht = Ee.getElementsByTagName("min")[0];
                  te.limits.max = parseFloat(rt.textContent), te.limits.min = parseFloat(ht.textContent);
              }
          }
          return te.limits.min >= te.limits.max && (te.static = !0), te.middlePosition = (te.limits.min + te.limits.max) / 2, te;
        }
        function $r(L) {
          for (var te = { sid: L.getAttribute("sid"), name: L.getAttribute("name") || "", attachments: [], transforms: [] }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "attachment_full":
                  te.attachments.push(jr(Ee));
                  break;
                case "matrix":
                case "translate":
                case "rotate":
                  te.transforms.push(dn(Ee));
              }
          }
          return te;
        }
        function jr(L) {
          for (var te = { joint: L.getAttribute("joint").split("/").pop(), transforms: [], links: [] }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "link":
                  te.links.push($r(Ee));
                  break;
                case "matrix":
                case "translate":
                case "rotate":
                  te.transforms.push(dn(Ee));
              }
          }
          return te;
        }
        function dn(L) {
          var te = { type: L.nodeName }, de = M(L.textContent);
          switch (te.type) {
            case "matrix":
              te.obj = new d.Matrix4(), te.obj.fromArray(de).transpose();
              break;
            case "translate":
              te.obj = new d.Vector3(), te.obj.fromArray(de);
              break;
            case "rotate":
              te.obj = new d.Vector3(), te.obj.fromArray(de), te.angle = d.Math.degToRad(de[3]);
          }
          return te;
        }
        function vn(L, te) {
          for (var de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "technique_common":
                  ti(Ee, te);
              }
          }
        }
        function ti(L, te) {
          for (var de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "inertia":
                  te.inertia = M(Ee.textContent);
                  break;
                case "mass":
                  te.mass = M(Ee.textContent)[0];
              }
          }
        }
        function Fn(L) {
          for (var te = { target: L.getAttribute("target").split("/").pop() }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "axis":
                  var ge = Ee.getElementsByTagName("param")[0];
                  te.axis = ge.textContent;
                  var rt = te.axis.split("inst_").pop().split("axis")[0];
                  te.jointIndex = rt.substr(0, rt.length - 1);
              }
          }
          return te;
        }
        function Yr(L) {
          return L.build !== void 0 ? L.build : L;
        }
        var rn = new d.Matrix4(), Zr = new d.Vector3();
        function hn(L) {
          for (var te = { name: L.getAttribute("name") || "", type: L.getAttribute("type"), id: L.getAttribute("id"), sid: L.getAttribute("sid"), matrix: new d.Matrix4(), nodes: [], instanceCameras: [], instanceControllers: [], instanceLights: [], instanceGeometries: [], instanceNodes: [], transforms: {} }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "node":
                  te.nodes.push(Ee.getAttribute("id")), hn(Ee);
                  break;
                case "instance_camera":
                  te.instanceCameras.push(V(Ee.getAttribute("url")));
                  break;
                case "instance_controller":
                  te.instanceControllers.push(Cn(Ee));
                  break;
                case "instance_light":
                  te.instanceLights.push(V(Ee.getAttribute("url")));
                  break;
                case "instance_geometry":
                  te.instanceGeometries.push(Cn(Ee));
                  break;
                case "instance_node":
                  te.instanceNodes.push(V(Ee.getAttribute("url")));
                  break;
                case "matrix":
                  var ge = M(Ee.textContent);
                  te.matrix.multiply(rn.fromArray(ge).transpose()), te.transforms[Ee.getAttribute("sid")] = Ee.nodeName;
                  break;
                case "translate":
                  ge = M(Ee.textContent), Zr.fromArray(ge), te.matrix.multiply(rn.makeTranslation(Zr.x, Zr.y, Zr.z)), te.transforms[Ee.getAttribute("sid")] = Ee.nodeName;
                  break;
                case "rotate":
                  ge = M(Ee.textContent);
                  var rt = d.Math.degToRad(ge[3]);
                  te.matrix.multiply(rn.makeRotationAxis(Zr.fromArray(ge), rt)), te.transforms[Ee.getAttribute("sid")] = Ee.nodeName;
                  break;
                case "scale":
                  ge = M(Ee.textContent), te.matrix.scale(Zr.fromArray(ge)), te.transforms[Ee.getAttribute("sid")] = Ee.nodeName;
                  break;
                case "extra":
                  break;
                default:
                  console.log(Ee);
              }
          }
          return tt.nodes[te.id] = te, te;
        }
        function Cn(L) {
          for (var te = { id: V(L.getAttribute("url")), materials: {}, skeletons: [] }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            switch (Ee.nodeName) {
              case "bind_material":
                for (var ge = Ee.getElementsByTagName("instance_material"), rt = 0; rt < ge.length; rt++) {
                  var ht = ge[rt], lt = ht.getAttribute("symbol"), Ft = ht.getAttribute("target");
                  te.materials[lt] = V(Ft);
                }
                break;
              case "skeleton":
                te.skeletons.push(V(Ee.textContent));
            }
          }
          return te;
        }
        function In(L, te) {
          var de, Ee, ge = [], rt = [];
          for (de = 0; de < L.length; de++) {
            var ht = L[de];
            if (lr(ht))
              xn(wr(ht), te, ge);
            else if (br(ht))
              for (var lt = tt.visualScenes[ht].children, Ft = 0; Ft < lt.length; Ft++) {
                var Wt = lt[Ft];
                Wt.type === "JOINT" && xn(wr(Wt.id), te, ge);
              }
            else
              console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:", ht);
          }
          for (de = 0; de < te.length; de++)
            for (Ft = 0; Ft < ge.length; Ft++)
              if ((Ee = ge[Ft]).bone.name === te[de].name) {
                rt[de] = Ee, Ee.processed = !0;
                break;
              }
          for (de = 0; de < ge.length; de++)
            (Ee = ge[de]).processed === !1 && (rt.push(Ee), Ee.processed = !0);
          var Gt = [], Xt = [];
          for (de = 0; de < rt.length; de++)
            Ee = rt[de], Gt.push(Ee.bone), Xt.push(Ee.boneInverse);
          return new d.Skeleton(Gt, Xt);
        }
        function xn(L, te, de) {
          L.traverse(function(Ee) {
            if (Ee.isBone === !0) {
              for (var ge, rt = 0; rt < te.length; rt++) {
                var ht = te[rt];
                if (ht.name === Ee.name) {
                  ge = ht.boneInverse;
                  break;
                }
              }
              ge === void 0 && (ge = new d.Matrix4()), de.push({ bone: Ee, boneInverse: ge, processed: !1 });
            }
          });
        }
        function ke(L) {
          for (var te = [], de = L.matrix, Ee = L.nodes, ge = L.type, rt = L.instanceCameras, ht = L.instanceControllers, lt = L.instanceLights, Ft = L.instanceGeometries, Wt = L.instanceNodes, Gt = 0, Xt = Ee.length; Gt < Xt; Gt++)
            te.push(wr(Ee[Gt]));
          for (Gt = 0, Xt = rt.length; Gt < Xt; Gt++) {
            var Sr = Y(rt[Gt]);
            Sr !== null && te.push(Sr.clone());
          }
          for (Gt = 0, Xt = ht.length; Gt < Xt; Gt++)
            for (var Fr = ut((Gr = ht[Gt]).id), Pr = Pt(or(Fr.id), Gr.materials), $t = In(Gr.skeletons, Fr.skin.joints), Lt = 0, Tr = Pr.length; Lt < Tr; Lt++) {
              var mr;
              (mr = Pr[Lt]).isSkinnedMesh && (mr.bind($t, Fr.skin.bindMatrix), mr.normalizeSkinWeights()), te.push(mr);
            }
          for (Gt = 0, Xt = lt.length; Gt < Xt; Gt++) {
            var ar = Qe(lt[Gt]);
            ar !== null && te.push(ar.clone());
          }
          for (Gt = 0, Xt = Ft.length; Gt < Xt; Gt++) {
            var Gr;
            for (Lt = 0, Tr = (Pr = Pt(or((Gr = Ft[Gt]).id), Gr.materials)).length; Lt < Tr; Lt++)
              te.push(Pr[Lt]);
          }
          for (Gt = 0, Xt = Wt.length; Gt < Xt; Gt++)
            te.push(wr(Wt[Gt]).clone());
          if (Ee.length === 0 && te.length === 1)
            mr = te[0];
          else
            for (mr = ge === "JOINT" ? new d.Bone() : new d.Group(), Gt = 0; Gt < te.length; Gt++)
              mr.add(te[Gt]);
          return mr.name === "" && (mr.name = ge === "JOINT" ? L.sid : L.name), mr.matrix.copy(de), mr.matrix.decompose(mr.position, mr.quaternion, mr.scale), mr;
        }
        function st(L, te) {
          for (var de = [], Ee = 0, ge = L.length; Ee < ge; Ee++) {
            var rt = te[L[Ee]];
            de.push(le(rt));
          }
          return de;
        }
        function Pt(L, te) {
          var de = [];
          for (var Ee in L) {
            var ge = L[Ee], rt = st(ge.materialKeys, te);
            rt.length === 0 && (Ee === "lines" || Ee === "linestrips" ? rt.push(new d.LineBasicMaterial()) : rt.push(new d.MeshPhongMaterial()));
            var ht = ge.data.attributes.skinIndex !== void 0;
            if (ht)
              for (var lt = 0, Ft = rt.length; lt < Ft; lt++)
                rt[lt].skinning = !0;
            var Wt, Gt = rt.length === 1 ? rt[0] : rt;
            switch (Ee) {
              case "lines":
                Wt = new d.LineSegments(ge.data, Gt);
                break;
              case "linestrips":
                Wt = new d.Line(ge.data, Gt);
                break;
              case "triangles":
              case "polylist":
                Wt = ht ? new d.SkinnedMesh(ge.data, Gt) : new d.Mesh(ge.data, Gt);
            }
            de.push(Wt);
          }
          return de;
        }
        function lr(L) {
          return tt.nodes[L] !== void 0;
        }
        function wr(L) {
          return $(tt.nodes[L], ke);
        }
        function Qr(L) {
          var te = new d.Group();
          te.name = L.name;
          for (var de = L.children, Ee = 0; Ee < de.length; Ee++) {
            var ge = de[Ee];
            te.add(wr(ge.id));
          }
          return te;
        }
        function br(L) {
          return tt.visualScenes[L] !== void 0;
        }
        function yr(L) {
          return $(tt.visualScenes[L], Qr);
        }
        if (C.length === 0)
          return { scene: new d.Scene() };
        var Mr = y(new DOMParser().parseFromString(C, "application/xml"), "COLLADA")[0], Jr = Mr.getAttribute("version");
        console.log("THREE.ColladaLoader: File version", Jr);
        var ir = function(L) {
          return { unit: function(te) {
            return te !== void 0 && te.hasAttribute("meter") === !0 ? parseFloat(te.getAttribute("meter")) : 1;
          }(y(L, "unit")[0]), upAxis: function(te) {
            return te !== void 0 ? te.textContent : "Y_UP";
          }(y(L, "up_axis")[0]) };
        }(y(Mr, "asset")[0]), nr = new d.TextureLoader(this.manager);
        nr.setPath(v).setCrossOrigin(this.crossOrigin);
        var Jt = [], _e = {}, St = 0, tt = { animations: {}, clips: {}, controllers: {}, images: {}, effects: {}, materials: {}, cameras: {}, lights: {}, geometries: {}, nodes: {}, visualScenes: {}, kinematicsModels: {}, physicsModels: {}, kinematicsScenes: {} };
        H(Mr, "library_animations", "animation", function(L) {
          for (var te = { sources: {}, samplers: {}, channels: {} }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge, rt = L.childNodes[de];
            if (rt.nodeType === 1)
              switch (rt.nodeName) {
                case "source":
                  ge = rt.getAttribute("id"), te.sources[ge] = Oe(rt);
                  break;
                case "sampler":
                  ge = rt.getAttribute("id"), te.samplers[ge] = re(rt);
                  break;
                case "channel":
                  ge = rt.getAttribute("target"), te.channels[ge] = ce(rt);
                  break;
                default:
                  console.log(rt);
              }
          }
          tt.animations[L.getAttribute("id")] = te;
        }), H(Mr, "library_animation_clips", "animation_clip", function(L) {
          for (var te = { name: L.getAttribute("id") || "default", start: parseFloat(L.getAttribute("start") || 0), end: parseFloat(L.getAttribute("end") || 0), animations: [] }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "instance_animation":
                  te.animations.push(V(ge.getAttribute("url")));
              }
          }
          tt.clips[L.getAttribute("id")] = te;
        }), H(Mr, "library_controllers", "controller", function(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "skin":
                  te.id = V(ge.getAttribute("source")), te.skin = ye(ge);
                  break;
                case "morph":
                  te.id = V(ge.getAttribute("source")), console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");
              }
          }
          tt.controllers[L.getAttribute("id")] = te;
        }), H(Mr, "library_images", "image", function(L) {
          var te = { init_from: y(L, "init_from")[0].textContent };
          tt.images[L.getAttribute("id")] = te;
        }), H(Mr, "library_effects", "effect", function(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "profile_COMMON":
                  te.profile = ve(ge);
              }
          }
          tt.effects[L.getAttribute("id")] = te;
        }), H(Mr, "library_materials", "material", function(L) {
          for (var te = { name: L.getAttribute("name") }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "instance_effect":
                  te.url = V(ge.getAttribute("url"));
              }
          }
          tt.materials[L.getAttribute("id")] = te;
        }), H(Mr, "library_cameras", "camera", function(L) {
          for (var te = { name: L.getAttribute("name") }, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "optics":
                  te.optics = Ne(ge);
              }
          }
          tt.cameras[L.getAttribute("id")] = te;
        }), H(Mr, "library_lights", "light", function(L) {
          for (var te = {}, de = 0, Ee = L.childNodes.length; de < Ee; de++) {
            var ge = L.childNodes[de];
            if (ge.nodeType === 1)
              switch (ge.nodeName) {
                case "technique_common":
                  te = k(ge);
              }
          }
          tt.lights[L.getAttribute("id")] = te;
        }), H(Mr, "library_geometries", "geometry", function(L) {
          var te = { name: L.getAttribute("name"), sources: {}, vertices: {}, primitives: [] }, de = y(L, "mesh")[0];
          if (de !== void 0) {
            for (var Ee = 0; Ee < de.childNodes.length; Ee++) {
              var ge = de.childNodes[Ee];
              if (ge.nodeType === 1) {
                var rt = ge.getAttribute("id");
                switch (ge.nodeName) {
                  case "source":
                    te.sources[rt] = Oe(ge);
                    break;
                  case "vertices":
                    te.vertices = Ve(ge);
                    break;
                  case "polygons":
                    console.warn("THREE.ColladaLoader: Unsupported primitive type: ", ge.nodeName);
                    break;
                  case "lines":
                  case "linestrips":
                  case "polylist":
                  case "triangles":
                    te.primitives.push(It(ge));
                    break;
                  default:
                    console.log(ge);
                }
              }
            }
            tt.geometries[L.getAttribute("id")] = te;
          }
        }), H(Mr, "library_nodes", "node", hn), H(Mr, "library_visual_scenes", "visual_scene", function(L) {
          var te = { name: L.getAttribute("name"), children: [] };
          (function(ge) {
            for (var rt = ge.getElementsByTagName("node"), ht = 0; ht < rt.length; ht++) {
              var lt = rt[ht];
              lt.hasAttribute("id") === !1 && lt.setAttribute("id", "three_default_" + St++);
            }
          })(L);
          for (var de = y(L, "node"), Ee = 0; Ee < de.length; Ee++)
            te.children.push(hn(de[Ee]));
          tt.visualScenes[L.getAttribute("id")] = te;
        }), H(Mr, "library_kinematics_models", "kinematics_model", function(L) {
          for (var te = { name: L.getAttribute("name") || "", joints: {}, links: [] }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "technique_common":
                  ur(Ee, te);
              }
          }
          tt.kinematicsModels[L.getAttribute("id")] = te;
        }), H(Mr, "library_physics_models", "physics_model", function(L) {
          for (var te = { name: L.getAttribute("name") || "", rigidBodies: {} }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "rigid_body":
                  te.rigidBodies[Ee.getAttribute("name")] = {}, vn(Ee, te.rigidBodies[Ee.getAttribute("name")]);
              }
          }
          tt.physicsModels[L.getAttribute("id")] = te;
        }), H(Mr, "scene", "instance_kinematics_scene", function(L) {
          for (var te = { bindJointAxis: [] }, de = 0; de < L.childNodes.length; de++) {
            var Ee = L.childNodes[de];
            if (Ee.nodeType === 1)
              switch (Ee.nodeName) {
                case "bind_joint_axis":
                  te.bindJointAxis.push(Fn(Ee));
              }
          }
          tt.kinematicsScenes[V(L.getAttribute("url"))] = te;
        }), q(tt.animations, Ie), q(tt.clips, Je), q(tt.controllers, X), q(tt.images, ot), q(tt.effects, Z), q(tt.materials, ne), q(tt.cameras, et), q(tt.lights, ue), q(tt.geometries, Qt), q(tt.visualScenes, Qr), function() {
          var L = tt.clips;
          if (O(L) === !0) {
            if (O(tt.animations) === !1) {
              var te = [];
              for (var de in tt.animations)
                for (var Ee = Pe(de), ge = 0, rt = Ee.length; ge < rt; ge++)
                  te.push(Ee[ge]);
              Jt.push(new d.AnimationClip("default", -1, te));
            }
          } else
            for (var de in L)
              Jt.push(qe(de));
        }(), function() {
          var L = Object.keys(tt.kinematicsModels)[0], te = Object.keys(tt.kinematicsScenes)[0], de = Object.keys(tt.visualScenes)[0];
          if (L !== void 0 && te !== void 0) {
            for (var Ee = function($t) {
              return $(tt.kinematicsModels[$t], tn);
            }(L), ge = function($t) {
              return $(tt.kinematicsScenes[$t], Yr);
            }(te), rt = yr(de), ht = ge.bindJointAxis, lt = {}, Ft = 0, Wt = ht.length; Ft < Wt; Ft++) {
              var Gt = ht[Ft], Xt = Mr.querySelector('[sid="' + Gt.target + '"]');
              if (Xt) {
                var Sr = Xt.parentElement;
                Pr(Gt.jointIndex, Sr);
              }
            }
            var Fr = new d.Matrix4();
            _e = { joints: Ee && Ee.joints, getJointValue: function($t) {
              var Lt = lt[$t];
              if (Lt)
                return Lt.position;
              console.warn("THREE.ColladaLoader: Joint " + $t + " doesn't exist.");
            }, setJointValue: function($t, Lt) {
              var Tr = lt[$t];
              if (Tr) {
                var mr = Tr.joint;
                if (Lt > mr.limits.max || Lt < mr.limits.min)
                  console.warn("THREE.ColladaLoader: Joint " + $t + " value " + Lt + " outside of limits (min: " + mr.limits.min + ", max: " + mr.limits.max + ").");
                else if (mr.static)
                  console.warn("THREE.ColladaLoader: Joint " + $t + " is static.");
                else {
                  var ar = Tr.object, Gr = mr.axis, Xr = Tr.transforms;
                  rn.identity();
                  for (var _r = 0; _r < Xr.length; _r++) {
                    var Kt = Xr[_r];
                    if (Kt.sid && Kt.sid.indexOf($t) !== -1)
                      switch (mr.type) {
                        case "revolute":
                          rn.multiply(Fr.makeRotationAxis(Gr, d.Math.degToRad(Lt)));
                          break;
                        case "prismatic":
                          rn.multiply(Fr.makeTranslation(Gr.x * Lt, Gr.y * Lt, Gr.z * Lt));
                          break;
                        default:
                          console.warn("THREE.ColladaLoader: Unknown joint type: " + mr.type);
                      }
                    else
                      switch (Kt.type) {
                        case "matrix":
                          rn.multiply(Kt.obj);
                          break;
                        case "translate":
                          rn.multiply(Fr.makeTranslation(Kt.obj.x, Kt.obj.y, Kt.obj.z));
                          break;
                        case "scale":
                          rn.scale(Kt.obj);
                          break;
                        case "rotate":
                          rn.multiply(Fr.makeRotationAxis(Kt.obj, Kt.angle));
                      }
                  }
                  ar.matrix.copy(rn), ar.matrix.decompose(ar.position, ar.quaternion, ar.scale), lt[$t].position = Lt;
                }
              } else
                console.log("THREE.ColladaLoader: " + $t + " does not exist.");
            } };
          }
          function Pr($t, Lt) {
            var Tr = Lt.getAttribute("name"), mr = Ee.joints[$t];
            rt.traverse(function(ar) {
              ar.name === Tr && (lt[$t] = { object: ar, transforms: function(Gr) {
                for (var Xr = [], _r = Mr.querySelector('[id="' + Gr.id + '"]'), Kt = 0; Kt < _r.childNodes.length; Kt++) {
                  var vr = _r.childNodes[Kt];
                  if (vr.nodeType === 1)
                    switch (vr.nodeName) {
                      case "matrix":
                        var _n = M(vr.textContent), Wr = new d.Matrix4().fromArray(_n).transpose();
                        Xr.push({ sid: vr.getAttribute("sid"), type: vr.nodeName, obj: Wr });
                        break;
                      case "translate":
                      case "scale":
                        var _n = M(vr.textContent), ci = new d.Vector3().fromArray(_n);
                        Xr.push({ sid: vr.getAttribute("sid"), type: vr.nodeName, obj: ci });
                        break;
                      case "rotate":
                        var _n = M(vr.textContent), ci = new d.Vector3().fromArray(_n), $i = d.Math.degToRad(_n[3]);
                        Xr.push({ sid: vr.getAttribute("sid"), type: vr.nodeName, obj: ci, angle: $i });
                    }
                }
                return Xr;
              }(Lt), joint: mr, position: mr.zeroPosition });
            });
          }
        }();
        var Vt = function(L) {
          return yr(V(y(L, "instance_visual_scene")[0].getAttribute("url")));
        }(y(Mr, "scene")[0]);
        return ir.upAxis === "Z_UP" && Vt.quaternion.setFromEuler(new d.Euler(-Math.PI / 2, 0, 0)), Vt.scale.multiplyScalar(ir.unit), { animations: Jt, kinematics: _e, library: tt, scene: Vt };
      } }, d.GLTFLoader = function() {
        function C(J) {
          this.manager = J !== void 0 ? J : d.DefaultLoadingManager, this.dracoLoader = null;
        }
        C.prototype = { constructor: C, crossOrigin: "anonymous", load: function(J, R, Q, b) {
          var U = this, Z = this.path !== void 0 ? this.path : d.LoaderUtils.extractUrlBase(J), ne = new d.FileLoader(U.manager);
          ne.setResponseType("arraybuffer"), ne.load(J, function(le) {
            try {
              U.parse(le, Z, R, b);
            } catch (Ne) {
              if (b === void 0)
                throw Ne;
              b(Ne);
            }
          }, Q, b);
        }, setCrossOrigin: function(J) {
          return this.crossOrigin = J, this;
        }, setPath: function(J) {
          return this.path = J, this;
        }, setDRACOLoader: function(J) {
          return this.dracoLoader = J, this;
        }, parse: function(J, R, Q, b) {
          var U, Z = {};
          if (typeof J == "string")
            U = J;
          else if (d.LoaderUtils.decodeText(new Uint8Array(J, 0, 4)) === D) {
            try {
              Z[v.KHR_BINARY_GLTF] = new function(et) {
                this.name = v.KHR_BINARY_GLTF, this.content = null, this.body = null;
                var Y = new DataView(et, 0, V);
                if (this.header = { magic: d.LoaderUtils.decodeText(new Uint8Array(et.slice(0, 4))), version: Y.getUint32(4, !0), length: Y.getUint32(8, !0) }, this.header.magic !== D)
                  throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");
                if (this.header.version < 2)
                  throw new Error("THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");
                for (var k = new DataView(et, V), F = 0; F < k.byteLength; ) {
                  var ue = k.getUint32(F, !0);
                  F += 4;
                  var Qe = k.getUint32(F, !0);
                  if (F += 4, Qe === O.JSON) {
                    var Oe = new Uint8Array(et, V + F, ue);
                    this.content = d.LoaderUtils.decodeText(Oe);
                  } else if (Qe === O.BIN) {
                    var Ve = V + F;
                    this.body = et.slice(Ve, Ve + ue);
                  }
                  F += ue;
                }
                if (this.content === null)
                  throw new Error("THREE.GLTFLoader: JSON content not found.");
              }(J);
            } catch (et) {
              return void (b && b(et));
            }
            U = Z[v.KHR_BINARY_GLTF].content;
          } else
            U = d.LoaderUtils.decodeText(new Uint8Array(J));
          var ne = JSON.parse(U);
          if (ne.asset === void 0 || ne.asset.version[0] < 2)
            b && b(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead."));
          else {
            if (ne.extensionsUsed)
              for (var le = 0; le < ne.extensionsUsed.length; ++le) {
                var Ne = ne.extensionsUsed[le], Ke = ne.extensionsRequired || [];
                switch (Ne) {
                  case v.KHR_LIGHTS:
                    Z[Ne] = new T(ne);
                    break;
                  case v.KHR_MATERIALS_UNLIT:
                    Z[Ne] = new M();
                    break;
                  case v.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:
                    Z[Ne] = new q();
                    break;
                  case v.KHR_DRACO_MESH_COMPRESSION:
                    Z[Ne] = new H(ne, this.dracoLoader);
                    break;
                  case v.MSFT_TEXTURE_DDS:
                    Z[v.MSFT_TEXTURE_DDS] = new y();
                    break;
                  default:
                    Ke.indexOf(Ne) >= 0 && console.warn('THREE.GLTFLoader: Unknown extension "' + Ne + '".');
                }
              }
            var Ze = new be(ne, Z, { path: R || this.path || "", crossOrigin: this.crossOrigin, manager: this.manager });
            Ze.parse(function(et, Y, k, F, ue) {
              var Qe = { scene: et, scenes: Y, cameras: k, animations: F, asset: ue.asset, parser: Ze, userData: {} };
              ot(Z, Qe, ue), Q(Qe);
            }, b);
          }
        } };
        var v = { KHR_BINARY_GLTF: "KHR_binary_glTF", KHR_DRACO_MESH_COMPRESSION: "KHR_draco_mesh_compression", KHR_LIGHTS: "KHR_lights", KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: "KHR_materials_pbrSpecularGlossiness", KHR_MATERIALS_UNLIT: "KHR_materials_unlit", MSFT_TEXTURE_DDS: "MSFT_texture_dds" };
        function y() {
          if (!d.DDSLoader)
            throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader");
          this.name = v.MSFT_TEXTURE_DDS, this.ddsLoader = new d.DDSLoader();
        }
        function T(J) {
          this.name = v.KHR_LIGHTS, this.lights = {};
          var R = (J.extensions && J.extensions[v.KHR_LIGHTS] || {}).lights || {};
          for (var Q in R) {
            var b, U = R[Q], Z = new d.Color().fromArray(U.color);
            switch (U.type) {
              case "directional":
                (b = new d.DirectionalLight(Z)).target.position.set(0, 0, 1), b.add(b.target);
                break;
              case "point":
                b = new d.PointLight(Z);
                break;
              case "spot":
                b = new d.SpotLight(Z), U.spot = U.spot || {}, U.spot.innerConeAngle = U.spot.innerConeAngle !== void 0 ? U.spot.innerConeAngle : 0, U.spot.outerConeAngle = U.spot.outerConeAngle !== void 0 ? U.spot.outerConeAngle : Math.PI / 4, b.angle = U.spot.outerConeAngle, b.penumbra = 1 - U.spot.innerConeAngle / U.spot.outerConeAngle, b.target.position.set(0, 0, 1), b.add(b.target);
                break;
              case "ambient":
                b = new d.AmbientLight(Z);
            }
            b && (b.decay = 2, U.intensity !== void 0 && (b.intensity = U.intensity), b.name = U.name || "light_" + Q, this.lights[Q] = b);
          }
        }
        function M(J) {
          this.name = v.KHR_MATERIALS_UNLIT;
        }
        M.prototype.getMaterialType = function(J) {
          return d.MeshBasicMaterial;
        }, M.prototype.extendParams = function(J, R, Q) {
          var b = [];
          J.color = new d.Color(1, 1, 1), J.opacity = 1;
          var U = R.pbrMetallicRoughness;
          if (U) {
            if (Array.isArray(U.baseColorFactor)) {
              var Z = U.baseColorFactor;
              J.color.fromArray(Z), J.opacity = Z[3];
            }
            U.baseColorTexture !== void 0 && b.push(Q.assignTexture(J, "map", U.baseColorTexture.index));
          }
          return Promise.all(b);
        };
        var D = "glTF", V = 12, O = { JSON: 1313821514, BIN: 5130562 };
        function H(J, R) {
          if (!R)
            throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");
          this.name = v.KHR_DRACO_MESH_COMPRESSION, this.json = J, this.dracoLoader = R;
        }
        function q() {
          return { name: v.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS, specularGlossinessParams: ["color", "map", "lightMap", "lightMapIntensity", "aoMap", "aoMapIntensity", "emissive", "emissiveIntensity", "emissiveMap", "bumpMap", "bumpScale", "normalMap", "displacementMap", "displacementScale", "displacementBias", "specularMap", "specular", "glossinessMap", "glossiness", "alphaMap", "envMap", "envMapIntensity", "refractionRatio"], getMaterialType: function() {
            return d.ShaderMaterial;
          }, extendParams: function(J, R, Q) {
            var b = R.extensions[this.name], U = d.ShaderLib.standard, Z = d.UniformsUtils.clone(U.uniforms), ne = ["#ifdef USE_SPECULARMAP", "	uniform sampler2D specularMap;", "#endif"].join(`
`), le = ["#ifdef USE_GLOSSINESSMAP", "	uniform sampler2D glossinessMap;", "#endif"].join(`
`), Ne = ["vec3 specularFactor = specular;", "#ifdef USE_SPECULARMAP", "	vec4 texelSpecular = texture2D( specularMap, vUv );", "	texelSpecular = sRGBToLinear( texelSpecular );", "	// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture", "	specularFactor *= texelSpecular.rgb;", "#endif"].join(`
`), Ke = ["float glossinessFactor = glossiness;", "#ifdef USE_GLOSSINESSMAP", "	vec4 texelGlossiness = texture2D( glossinessMap, vUv );", "	// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture", "	glossinessFactor *= texelGlossiness.a;", "#endif"].join(`
`), Ze = ["PhysicalMaterial material;", "material.diffuseColor = diffuseColor.rgb;", "material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );", "material.specularColor = specularFactor.rgb;"].join(`
`), et = U.fragmentShader.replace("uniform float roughness;", "uniform vec3 specular;").replace("uniform float metalness;", "uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>", ne).replace("#include <metalnessmap_pars_fragment>", le).replace("#include <roughnessmap_fragment>", Ne).replace("#include <metalnessmap_fragment>", Ke).replace("#include <lights_physical_fragment>", Ze);
            delete Z.roughness, delete Z.metalness, delete Z.roughnessMap, delete Z.metalnessMap, Z.specular = { value: new d.Color().setHex(1118481) }, Z.glossiness = { value: 0.5 }, Z.specularMap = { value: null }, Z.glossinessMap = { value: null }, J.vertexShader = U.vertexShader, J.fragmentShader = et, J.uniforms = Z, J.defines = { STANDARD: "" }, J.color = new d.Color(1, 1, 1), J.opacity = 1;
            var Y = [];
            if (Array.isArray(b.diffuseFactor)) {
              var k = b.diffuseFactor;
              J.color.fromArray(k), J.opacity = k[3];
            }
            if (b.diffuseTexture !== void 0 && Y.push(Q.assignTexture(J, "map", b.diffuseTexture.index)), J.emissive = new d.Color(0, 0, 0), J.glossiness = b.glossinessFactor !== void 0 ? b.glossinessFactor : 1, J.specular = new d.Color(1, 1, 1), Array.isArray(b.specularFactor) && J.specular.fromArray(b.specularFactor), b.specularGlossinessTexture !== void 0) {
              var F = b.specularGlossinessTexture.index;
              Y.push(Q.assignTexture(J, "glossinessMap", F)), Y.push(Q.assignTexture(J, "specularMap", F));
            }
            return Promise.all(Y);
          }, createMaterial: function(J) {
            var R = new d.ShaderMaterial({ defines: J.defines, vertexShader: J.vertexShader, fragmentShader: J.fragmentShader, uniforms: J.uniforms, fog: !0, lights: !0, opacity: J.opacity, transparent: J.transparent });
            return R.isGLTFSpecularGlossinessMaterial = !0, R.color = J.color, R.map = J.map === void 0 ? null : J.map, R.lightMap = null, R.lightMapIntensity = 1, R.aoMap = J.aoMap === void 0 ? null : J.aoMap, R.aoMapIntensity = 1, R.emissive = J.emissive, R.emissiveIntensity = 1, R.emissiveMap = J.emissiveMap === void 0 ? null : J.emissiveMap, R.bumpMap = J.bumpMap === void 0 ? null : J.bumpMap, R.bumpScale = 1, R.normalMap = J.normalMap === void 0 ? null : J.normalMap, J.normalScale && (R.normalScale = J.normalScale), R.displacementMap = null, R.displacementScale = 1, R.displacementBias = 0, R.specularMap = J.specularMap === void 0 ? null : J.specularMap, R.specular = J.specular, R.glossinessMap = J.glossinessMap === void 0 ? null : J.glossinessMap, R.glossiness = J.glossiness, R.alphaMap = null, R.envMap = J.envMap === void 0 ? null : J.envMap, R.envMapIntensity = 1, R.refractionRatio = 0.98, R.extensions.derivatives = !0, R;
          }, cloneMaterial: function(J) {
            var R = J.clone();
            R.isGLTFSpecularGlossinessMaterial = !0;
            for (var Q = this.specularGlossinessParams, b = 0, U = Q.length; b < U; b++)
              R[Q[b]] = J[Q[b]];
            return R;
          }, refreshUniforms: function(J, R, Q, b, U, Z) {
            if (U.isGLTFSpecularGlossinessMaterial === !0) {
              var ne, le = U.uniforms, Ne = U.defines;
              le.opacity.value = U.opacity, le.diffuse.value.copy(U.color), le.emissive.value.copy(U.emissive).multiplyScalar(U.emissiveIntensity), le.map.value = U.map, le.specularMap.value = U.specularMap, le.alphaMap.value = U.alphaMap, le.lightMap.value = U.lightMap, le.lightMapIntensity.value = U.lightMapIntensity, le.aoMap.value = U.aoMap, le.aoMapIntensity.value = U.aoMapIntensity, U.map ? ne = U.map : U.specularMap ? ne = U.specularMap : U.displacementMap ? ne = U.displacementMap : U.normalMap ? ne = U.normalMap : U.bumpMap ? ne = U.bumpMap : U.glossinessMap ? ne = U.glossinessMap : U.alphaMap ? ne = U.alphaMap : U.emissiveMap && (ne = U.emissiveMap), ne !== void 0 && (ne.isWebGLRenderTarget && (ne = ne.texture), ne.matrixAutoUpdate === !0 && ne.updateMatrix(), le.uvTransform.value.copy(ne.matrix)), le.envMap.value = U.envMap, le.envMapIntensity.value = U.envMapIntensity, le.flipEnvMap.value = U.envMap && U.envMap.isCubeTexture ? -1 : 1, le.refractionRatio.value = U.refractionRatio, le.specular.value.copy(U.specular), le.glossiness.value = U.glossiness, le.glossinessMap.value = U.glossinessMap, le.emissiveMap.value = U.emissiveMap, le.bumpMap.value = U.bumpMap, le.normalMap.value = U.normalMap, le.displacementMap.value = U.displacementMap, le.displacementScale.value = U.displacementScale, le.displacementBias.value = U.displacementBias, le.glossinessMap.value !== null && Ne.USE_GLOSSINESSMAP === void 0 && (Ne.USE_GLOSSINESSMAP = "", Ne.USE_ROUGHNESSMAP = ""), le.glossinessMap.value === null && Ne.USE_GLOSSINESSMAP !== void 0 && (delete Ne.USE_GLOSSINESSMAP, delete Ne.USE_ROUGHNESSMAP);
            }
          } };
        }
        function $(J, R, Q, b) {
          d.Interpolant.call(this, J, R, Q, b);
        }
        H.prototype.decodePrimitive = function(J, R) {
          var Q = this.json, b = this.dracoLoader, U = J.extensions[this.name].bufferView, Z = J.extensions[this.name].attributes, ne = {}, le = {}, Ne = {};
          for (var Ke in Z)
            Ke in Je && (ne[Je[Ke]] = Z[Ke]);
          for (Ke in J.attributes)
            if (Je[Ke] !== void 0 && Z[Ke] !== void 0) {
              var Ze = Q.accessors[J.attributes[Ke]], et = $e[Ze.componentType];
              Ne[Je[Ke]] = et, le[Je[Ke]] = Ze.normalized === !0;
            }
          return R.getDependency("bufferView", U).then(function(Y) {
            return new Promise(function(k) {
              b.decodeDracoFile(Y, function(F) {
                for (var ue in F.attributes) {
                  var Qe = F.attributes[ue], Oe = le[ue];
                  Oe !== void 0 && (Qe.normalized = Oe);
                }
                k(F);
              }, ne, Ne);
            });
          });
        }, $.prototype = Object.create(d.Interpolant.prototype), $.prototype.constructor = $, $.prototype.interpolate_ = function(J, R, Q, b) {
          for (var U = this.resultBuffer, Z = this.sampleValues, ne = this.valueSize, le = 2 * ne, Ne = 3 * ne, Ke = b - R, Ze = (Q - R) / Ke, et = Ze * Ze, Y = et * Ze, k = J * Ne, F = k - Ne, ue = 2 * Y - 3 * et + 1, Qe = Y - 2 * et + Ze, Oe = -2 * Y + 3 * et, Ve = Y - et, It = 0; It !== ne; It++) {
            var vt = Z[F + It + ne], Qt = Z[F + It + le] * Ke, Ct = Z[k + It + ne], Rt = Z[k + It] * Ke;
            U[It] = ue * vt + Qe * Qt + Oe * Ct + Ve * Rt;
          }
          return U;
        };
        var re = 0, ce = 1, Ie = 2, Pe = 3, se = 4, Ce = 5, Ge = 6, $e = (d.Matrix3, d.Matrix4, d.Vector2, d.Vector3, d.Vector4, d.Texture, { 5120: Int8Array, 5121: Uint8Array, 5122: Int16Array, 5123: Uint16Array, 5125: Uint32Array, 5126: Float32Array }), Be = { 9728: d.NearestFilter, 9729: d.LinearFilter, 9984: d.NearestMipMapNearestFilter, 9985: d.LinearMipMapNearestFilter, 9986: d.NearestMipMapLinearFilter, 9987: d.LinearMipMapLinearFilter }, Me = { 33071: d.ClampToEdgeWrapping, 33648: d.MirroredRepeatWrapping, 10497: d.RepeatWrapping }, We = { 6406: d.AlphaFormat, 6407: d.RGBFormat, 6408: d.RGBAFormat, 6409: d.LuminanceFormat, 6410: d.LuminanceAlphaFormat }, nt = { 5121: d.UnsignedByteType, 32819: d.UnsignedShort4444Type, 32820: d.UnsignedShort5551Type, 33635: d.UnsignedShort565Type }, Xe = (d.BackSide, d.FrontSide, d.NeverDepth, d.LessDepth, d.EqualDepth, d.LessEqualDepth, d.GreaterEqualDepth, d.NotEqualDepth, d.GreaterEqualDepth, d.AlwaysDepth, d.AddEquation, d.SubtractEquation, d.ReverseSubtractEquation, d.ZeroFactor, d.OneFactor, d.SrcColorFactor, d.OneMinusSrcColorFactor, d.SrcAlphaFactor, d.OneMinusSrcAlphaFactor, d.DstAlphaFactor, d.OneMinusDstAlphaFactor, d.DstColorFactor, d.OneMinusDstColorFactor, d.SrcAlphaSaturateFactor, { SCALAR: 1, VEC2: 2, VEC3: 3, VEC4: 4, MAT2: 4, MAT3: 9, MAT4: 16 }), Je = { POSITION: "position", NORMAL: "normal", TEXCOORD_0: "uv", TEXCOORD0: "uv", TEXCOORD: "uv", TEXCOORD_1: "uv2", COLOR_0: "color", COLOR0: "color", COLOR: "color", WEIGHTS_0: "skinWeight", WEIGHT: "skinWeight", JOINTS_0: "skinIndex", JOINT: "skinIndex" }, qe = { scale: "scale", translation: "position", rotation: "quaternion", weights: "morphTargetInfluences" }, ye = { CUBICSPLINE: d.InterpolateSmooth, LINEAR: d.InterpolateLinear, STEP: d.InterpolateDiscrete }, Ue = "OPAQUE", ze = "MASK", X = "BLEND";
        function ut(J, R) {
          return typeof J != "string" || J === "" ? "" : /^(https?:)?\/\//i.test(J) || /^data:.*,.*$/i.test(J) || /^blob:.*$/i.test(J) ? J : R + J;
        }
        function ot(J, R, Q) {
          for (var b in Q.extensions)
            J[b] === void 0 && (R.userData.gltfExtensions = R.userData.gltfExtensions || {}, R.userData.gltfExtensions[b] = Q.extensions[b]);
        }
        function mt(J, R) {
          if (J.updateMorphTargets(), R.weights !== void 0)
            for (var Q = 0, b = R.weights.length; Q < b; Q++)
              J.morphTargetInfluences[Q] = R.weights[Q];
          if (R.extras && Array.isArray(R.extras.targetNames)) {
            var U = R.extras.targetNames;
            if (J.morphTargetInfluences.length === U.length)
              for (J.morphTargetDictionary = {}, Q = 0, b = U.length; Q < b; Q++)
                J.morphTargetDictionary[U[Q]] = Q;
            else
              console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.");
          }
        }
        function ve(J, R) {
          return J.indices === R.indices && je(J.attributes, R.attributes);
        }
        function je(J, R) {
          if (Object.keys(J).length !== Object.keys(R).length)
            return !1;
          for (var Q in J)
            if (J[Q] !== R[Q])
              return !1;
          return !0;
        }
        function ie(J, R) {
          if (J.length !== R.length)
            return !1;
          for (var Q = 0, b = J.length; Q < b; Q++)
            if (J[Q] !== R[Q])
              return !1;
          return !0;
        }
        function ae(J, R) {
          for (var Q = 0, b = J.length; Q < b; Q++) {
            var U = J[Q];
            if (ve(U.primitive, R))
              return U.promise;
          }
          return null;
        }
        function z(J) {
          if (J.isInterleavedBufferAttribute) {
            for (var R = J.count, Q = J.itemSize, b = J.array.slice(0, R * Q), U = 0; U < R; ++U)
              b[U] = J.getX(U), Q >= 2 && (b[U + 1] = J.getY(U)), Q >= 3 && (b[U + 2] = J.getZ(U)), Q >= 4 && (b[U + 3] = J.getW(U));
            return new d.BufferAttribute(b, Q, J.normalized);
          }
          return J.clone();
        }
        function be(J, R, Q) {
          this.json = J || {}, this.extensions = R || {}, this.options = Q || {}, this.cache = new function() {
            var b = {};
            return { get: function(U) {
              return b[U];
            }, add: function(U, Z) {
              b[U] = Z;
            }, remove: function(U) {
              delete b[U];
            }, removeAll: function() {
              b = {};
            } };
          }(), this.primitiveCache = [], this.multiplePrimitivesCache = [], this.multiPassGeometryCache = [], this.textureLoader = new d.TextureLoader(this.options.manager), this.textureLoader.setCrossOrigin(this.options.crossOrigin), this.fileLoader = new d.FileLoader(this.options.manager), this.fileLoader.setResponseType("arraybuffer");
        }
        function fe(J, R, Q) {
          var b = R.attributes;
          for (var U in b) {
            var Z = Je[U], ne = Q[b[U]];
            Z && (Z in J.attributes || J.addAttribute(Z, ne));
          }
          R.indices === void 0 || J.index || J.setIndex(Q[R.indices]), R.targets !== void 0 && function(le, Ne, Ke) {
            for (var Ze = !1, et = !1, Y = 0, k = Ne.length; Y < k && ((Qe = Ne[Y]).POSITION !== void 0 && (Ze = !0), Qe.NORMAL !== void 0 && (et = !0), !Ze || !et); Y++)
              ;
            if (Ze || et) {
              var F = [], ue = [];
              for (Y = 0, k = Ne.length; Y < k; Y++) {
                var Qe = Ne[Y], Oe = "morphTarget" + Y;
                if (Ze) {
                  if (Qe.POSITION !== void 0) {
                    var Ve = z(Ke[Qe.POSITION]);
                    Ve.name = Oe;
                    for (var It = le.attributes.position, vt = 0, Qt = Ve.count; vt < Qt; vt++)
                      Ve.setXYZ(vt, Ve.getX(vt) + It.getX(vt), Ve.getY(vt) + It.getY(vt), Ve.getZ(vt) + It.getZ(vt));
                  } else
                    Ve = le.attributes.position;
                  F.push(Ve);
                }
                if (et) {
                  if (Qe.NORMAL !== void 0) {
                    var Ct;
                    (Ct = z(Ke[Qe.NORMAL])).name = Oe;
                    var Rt = le.attributes.normal;
                    for (vt = 0, Qt = Ct.count; vt < Qt; vt++)
                      Ct.setXYZ(vt, Ct.getX(vt) + Rt.getX(vt), Ct.getY(vt) + Rt.getY(vt), Ct.getZ(vt) + Rt.getZ(vt));
                  } else
                    Ct = le.attributes.normal;
                  ue.push(Ct);
                }
              }
              Ze && (le.morphAttributes.position = F), et && (le.morphAttributes.normal = ue);
            }
          }(J, R.targets, Q), R.extras !== void 0 && (J.userData = R.extras);
        }
        return be.prototype.parse = function(J, R) {
          var Q = this.json;
          this.cache.removeAll(), this.markDefs(), this.getMultiDependencies(["scene", "animation", "camera"]).then(function(b) {
            var U = b.scenes || [], Z = U[Q.scene || 0], ne = b.animations || [], le = b.cameras || [];
            J(Z, U, le, ne, Q);
          }).catch(R);
        }, be.prototype.markDefs = function() {
          for (var J = this.json.nodes || [], R = this.json.skins || [], Q = this.json.meshes || [], b = {}, U = {}, Z = 0, ne = R.length; Z < ne; Z++)
            for (var le = R[Z].joints, Ne = 0, Ke = le.length; Ne < Ke; Ne++)
              J[le[Ne]].isBone = !0;
          for (var Ze = 0, et = J.length; Ze < et; Ze++) {
            var Y = J[Ze];
            Y.mesh !== void 0 && (b[Y.mesh] === void 0 && (b[Y.mesh] = U[Y.mesh] = 0), b[Y.mesh]++, Y.skin !== void 0 && (Q[Y.mesh].isSkinnedMesh = !0));
          }
          this.json.meshReferences = b, this.json.meshUses = U;
        }, be.prototype.getDependency = function(J, R) {
          var Q = J + ":" + R, b = this.cache.get(Q);
          if (!b) {
            switch (J) {
              case "scene":
                b = this.loadScene(R);
                break;
              case "node":
                b = this.loadNode(R);
                break;
              case "mesh":
                b = this.loadMesh(R);
                break;
              case "accessor":
                b = this.loadAccessor(R);
                break;
              case "bufferView":
                b = this.loadBufferView(R);
                break;
              case "buffer":
                b = this.loadBuffer(R);
                break;
              case "material":
                b = this.loadMaterial(R);
                break;
              case "texture":
                b = this.loadTexture(R);
                break;
              case "skin":
                b = this.loadSkin(R);
                break;
              case "animation":
                b = this.loadAnimation(R);
                break;
              case "camera":
                b = this.loadCamera(R);
                break;
              default:
                throw new Error("Unknown type: " + J);
            }
            this.cache.add(Q, b);
          }
          return b;
        }, be.prototype.getDependencies = function(J) {
          var R = this.cache.get(J);
          if (!R) {
            var Q = this, b = this.json[J + (J === "mesh" ? "es" : "s")] || [];
            R = Promise.all(b.map(function(U, Z) {
              return Q.getDependency(J, Z);
            })), this.cache.add(J, R);
          }
          return R;
        }, be.prototype.getMultiDependencies = function(J) {
          for (var R = {}, Q = [], b = 0, U = J.length; b < U; b++) {
            var Z = J[b], ne = this.getDependencies(Z);
            ne = ne.then(function(le, Ne) {
              R[le] = Ne;
            }.bind(this, Z + (Z === "mesh" ? "es" : "s"))), Q.push(ne);
          }
          return Promise.all(Q).then(function() {
            return R;
          });
        }, be.prototype.loadBuffer = function(J) {
          var R = this.json.buffers[J], Q = this.fileLoader;
          if (R.type && R.type !== "arraybuffer")
            throw new Error("THREE.GLTFLoader: " + R.type + " buffer type is not supported.");
          if (R.uri === void 0 && J === 0)
            return Promise.resolve(this.extensions[v.KHR_BINARY_GLTF].body);
          var b = this.options;
          return new Promise(function(U, Z) {
            Q.load(ut(R.uri, b.path), U, void 0, function() {
              Z(new Error('THREE.GLTFLoader: Failed to load buffer "' + R.uri + '".'));
            });
          });
        }, be.prototype.loadBufferView = function(J) {
          var R = this.json.bufferViews[J];
          return this.getDependency("buffer", R.buffer).then(function(Q) {
            var b = R.byteLength || 0, U = R.byteOffset || 0;
            return Q.slice(U, U + b);
          });
        }, be.prototype.loadAccessor = function(J) {
          var R = this, Q = this.json, b = this.json.accessors[J];
          if (b.bufferView === void 0 && b.sparse === void 0)
            return null;
          var U = [];
          return b.bufferView !== void 0 ? U.push(this.getDependency("bufferView", b.bufferView)) : U.push(null), b.sparse !== void 0 && (U.push(this.getDependency("bufferView", b.sparse.indices.bufferView)), U.push(this.getDependency("bufferView", b.sparse.values.bufferView))), Promise.all(U).then(function(Z) {
            var ne, le, Ne = Z[0], Ke = Xe[b.type], Ze = $e[b.componentType], et = Ze.BYTES_PER_ELEMENT, Y = et * Ke, k = b.byteOffset || 0, F = Q.bufferViews[b.bufferView].byteStride, ue = b.normalized === !0;
            if (F && F !== Y) {
              var Qe = "InterleavedBuffer:" + b.bufferView + ":" + b.componentType, Oe = R.cache.get(Qe);
              Oe || (ne = new Ze(Ne), Oe = new d.InterleavedBuffer(ne, F / et), R.cache.add(Qe, Oe)), le = new d.InterleavedBufferAttribute(Oe, Ke, k / et, ue);
            } else
              ne = Ne === null ? new Ze(b.count * Ke) : new Ze(Ne, k, b.count * Ke), le = new d.BufferAttribute(ne, Ke, ue);
            if (b.sparse !== void 0) {
              var Ve = Xe.SCALAR, It = $e[b.sparse.indices.componentType], vt = b.sparse.indices.byteOffset || 0, Qt = b.sparse.values.byteOffset || 0, Ct = new It(Z[1], vt, b.sparse.count * Ve), Rt = new Ze(Z[2], Qt, b.sparse.count * Ke);
              Ne !== null && le.setArray(le.array.slice());
              for (var or = 0, tn = Ct.length; or < tn; or++) {
                var ur = Ct[or];
                if (le.setX(ur, Rt[or * Ke]), Ke >= 2 && le.setY(ur, Rt[or * Ke + 1]), Ke >= 3 && le.setZ(ur, Rt[or * Ke + 2]), Ke >= 4 && le.setW(ur, Rt[or * Ke + 3]), Ke >= 5)
                  throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.");
              }
            }
            return le;
          });
        }, be.prototype.loadTexture = function(J) {
          var R, Q = this, b = this.json, U = this.options, Z = this.textureLoader, ne = window.URL || window.webkitURL, le = b.textures[J], Ne = le.extensions || {}, Ke = (R = Ne[v.MSFT_TEXTURE_DDS] ? b.images[Ne[v.MSFT_TEXTURE_DDS].source] : b.images[le.source]).uri, Ze = !1;
          return R.bufferView !== void 0 && (Ke = Q.getDependency("bufferView", R.bufferView).then(function(et) {
            Ze = !0;
            var Y = new Blob([et], { type: R.mimeType });
            return Ke = ne.createObjectURL(Y);
          })), Promise.resolve(Ke).then(function(et) {
            var Y = d.Loader.Handlers.get(et);
            return Y || (Y = Ne[v.MSFT_TEXTURE_DDS] ? Q.extensions[v.MSFT_TEXTURE_DDS].ddsLoader : Z), new Promise(function(k, F) {
              Y.load(ut(et, U.path), k, void 0, F);
            });
          }).then(function(et) {
            Ze === !0 && ne.revokeObjectURL(Ke), et.flipY = !1, le.name !== void 0 && (et.name = le.name), Ne[v.MSFT_TEXTURE_DDS] || (et.format = le.format !== void 0 ? We[le.format] : d.RGBAFormat), le.internalFormat !== void 0 && et.format !== We[le.internalFormat] && console.warn("THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."), et.type = le.type !== void 0 ? nt[le.type] : d.UnsignedByteType;
            var Y = (b.samplers || {})[le.sampler] || {};
            return et.magFilter = Be[Y.magFilter] || d.LinearFilter, et.minFilter = Be[Y.minFilter] || d.LinearMipMapLinearFilter, et.wrapS = Me[Y.wrapS] || d.RepeatWrapping, et.wrapT = Me[Y.wrapT] || d.RepeatWrapping, et;
          });
        }, be.prototype.assignTexture = function(J, R, Q) {
          return this.getDependency("texture", Q).then(function(b) {
            J[R] = b;
          });
        }, be.prototype.loadMaterial = function(J) {
          this.json;
          var R, Q = this.extensions, b = this.json.materials[J], U = {}, Z = b.extensions || {}, ne = [];
          if (Z[v.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {
            var le = Q[v.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];
            R = le.getMaterialType(b), ne.push(le.extendParams(U, b, this));
          } else if (Z[v.KHR_MATERIALS_UNLIT]) {
            var Ne = Q[v.KHR_MATERIALS_UNLIT];
            R = Ne.getMaterialType(b), ne.push(Ne.extendParams(U, b, this));
          } else {
            R = d.MeshStandardMaterial;
            var Ke = b.pbrMetallicRoughness || {};
            if (U.color = new d.Color(1, 1, 1), U.opacity = 1, Array.isArray(Ke.baseColorFactor)) {
              var Ze = Ke.baseColorFactor;
              U.color.fromArray(Ze), U.opacity = Ze[3];
            }
            if (Ke.baseColorTexture !== void 0 && ne.push(this.assignTexture(U, "map", Ke.baseColorTexture.index)), U.metalness = Ke.metallicFactor !== void 0 ? Ke.metallicFactor : 1, U.roughness = Ke.roughnessFactor !== void 0 ? Ke.roughnessFactor : 1, Ke.metallicRoughnessTexture !== void 0) {
              var et = Ke.metallicRoughnessTexture.index;
              ne.push(this.assignTexture(U, "metalnessMap", et)), ne.push(this.assignTexture(U, "roughnessMap", et));
            }
          }
          b.doubleSided === !0 && (U.side = d.DoubleSide);
          var Y = b.alphaMode || Ue;
          return Y === X ? U.transparent = !0 : (U.transparent = !1, Y === ze && (U.alphaTest = b.alphaCutoff !== void 0 ? b.alphaCutoff : 0.5)), b.normalTexture !== void 0 && R !== d.MeshBasicMaterial && (ne.push(this.assignTexture(U, "normalMap", b.normalTexture.index)), U.normalScale = new d.Vector2(1, 1), b.normalTexture.scale !== void 0 && U.normalScale.set(b.normalTexture.scale, b.normalTexture.scale)), b.occlusionTexture !== void 0 && R !== d.MeshBasicMaterial && (ne.push(this.assignTexture(U, "aoMap", b.occlusionTexture.index)), b.occlusionTexture.strength !== void 0 && (U.aoMapIntensity = b.occlusionTexture.strength)), b.emissiveFactor !== void 0 && R !== d.MeshBasicMaterial && (U.emissive = new d.Color().fromArray(b.emissiveFactor)), b.emissiveTexture !== void 0 && R !== d.MeshBasicMaterial && ne.push(this.assignTexture(U, "emissiveMap", b.emissiveTexture.index)), Promise.all(ne).then(function() {
            var k;
            return k = R === d.ShaderMaterial ? Q[v.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(U) : new R(U), b.name !== void 0 && (k.name = b.name), k.normalScale && (k.normalScale.y = -k.normalScale.y), k.map && (k.map.encoding = d.sRGBEncoding), k.emissiveMap && (k.emissiveMap.encoding = d.sRGBEncoding), k.specularMap && (k.specularMap.encoding = d.sRGBEncoding), b.extras && (k.userData = b.extras), b.extensions && ot(Q, k, b), k;
          });
        }, be.prototype.loadGeometries = function(J) {
          var R, Q = this, b = this.extensions, U = this.primitiveCache, Z = function(ne) {
            if (ne.length < 2)
              return !1;
            var le = ne[0], Ne = le.targets || [];
            if (le.indices === void 0)
              return !1;
            for (var Ke = 1, Ze = ne.length; Ke < Ze; Ke++) {
              var et = ne[Ke];
              if (le.mode !== et.mode || et.indices === void 0 || !je(le.attributes, et.attributes))
                return !1;
              var Y = et.targets || [];
              if (Ne.length !== Y.length)
                return !1;
              for (var k = 0, F = Ne.length; k < F; k++)
                if (!je(Ne[k], Y[k]))
                  return !1;
            }
            return !0;
          }(J);
          return Z && (R = J, J = [J[0]]), this.getDependencies("accessor").then(function(ne) {
            for (var le = [], Ne = 0, Ke = J.length; Ne < Ke; Ne++) {
              var Ze = J[Ne], et = ae(U, Ze);
              if (et)
                le.push(et);
              else if (Ze.extensions && Ze.extensions[v.KHR_DRACO_MESH_COMPRESSION]) {
                var Y = b[v.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(Ze, Q).then(function(F) {
                  return fe(F, Ze, ne), F;
                });
                U.push({ primitive: Ze, promise: Y }), le.push(Y);
              } else {
                var k = new d.BufferGeometry();
                fe(k, Ze, ne), Y = Promise.resolve(k), U.push({ primitive: Ze, promise: Y }), le.push(Y);
              }
            }
            return Promise.all(le).then(function(F) {
              if (Z) {
                var ue = F[0];
                if ((ur = function(Vr, zr, $r) {
                  for (var jr = 0, dn = Vr.length; jr < dn; jr++) {
                    var vn = Vr[jr];
                    if (zr === vn.baseGeometry && ie($r, vn.primitives))
                      return vn.geometry;
                  }
                  return null;
                }(tn = Q.multiPassGeometryCache, ue, R)) !== null)
                  return [ur.geometry];
                var Qe = new d.BufferGeometry();
                for (var Oe in Qe.name = ue.name, Qe.userData = ue.userData, ue.attributes)
                  Qe.addAttribute(Oe, ue.attributes[Oe]);
                for (var Oe in ue.morphAttributes)
                  Qe.morphAttributes[Oe] = ue.morphAttributes[Oe];
                for (var Ve = [], It = 0, vt = 0, Qt = R.length; vt < Qt; vt++) {
                  for (var Ct = ne[R[vt].indices], Rt = 0, or = Ct.count; Rt < or; Rt++)
                    Ve.push(Ct.array[Rt]);
                  Qe.addGroup(It, Ct.count, vt), It += Ct.count;
                }
                return Qe.setIndex(Ve), tn.push({ geometry: Qe, baseGeometry: ue, primitives: R }), [Qe];
              }
              if (F.length > 1 && d.BufferGeometryUtils !== void 0) {
                for (vt = 1, Qt = J.length; vt < Qt; vt++)
                  if (J[0].mode !== J[vt].mode)
                    return F;
                var tn, ur;
                if (ur = function(Vr, zr) {
                  for (var $r = 0, jr = Vr.length; $r < jr; $r++) {
                    var dn = Vr[$r];
                    if (ie(zr, dn.baseGeometries))
                      return dn.geometry;
                  }
                  return null;
                }(tn = Q.multiplePrimitivesCache, F)) {
                  if (ur.geometry !== null)
                    return [ur.geometry];
                } else if (Qe = d.BufferGeometryUtils.mergeBufferGeometries(F, !0), tn.push({ geometry: Qe, baseGeometries: F }), Qe !== null)
                  return [Qe];
              }
              return F;
            });
          });
        }, be.prototype.loadMesh = function(J) {
          var R = this, Q = (this.json, this.extensions), b = this.json.meshes[J];
          return this.getMultiDependencies(["accessor", "material"]).then(function(U) {
            for (var Z = b.primitives, ne = [], le = 0, Ne = Z.length; le < Ne; le++)
              ne[le] = Z[le].material === void 0 ? new d.MeshStandardMaterial({ color: 16777215, emissive: 0, metalness: 1, roughness: 1, transparent: !1, depthTest: !0, side: d.FrontSide }) : U.materials[Z[le].material];
            return R.loadGeometries(Z).then(function(Ke) {
              for (var Ze = Ke.length === 1 && Ke[0].groups.length > 0, et = [], Y = 0, k = Ke.length; Y < k; Y++) {
                var F, ue = Ke[Y], Qe = Z[Y], Oe = Ze ? ne : ne[Y];
                if (Qe.mode === se || Qe.mode === Ce || Qe.mode === Ge || Qe.mode === void 0)
                  F = b.isSkinnedMesh === !0 ? new d.SkinnedMesh(ue, Oe) : new d.Mesh(ue, Oe), Qe.mode === Ce ? F.drawMode = d.TriangleStripDrawMode : Qe.mode === Ge && (F.drawMode = d.TriangleFanDrawMode);
                else if (Qe.mode === ce)
                  F = new d.LineSegments(ue, Oe);
                else if (Qe.mode === Pe)
                  F = new d.Line(ue, Oe);
                else if (Qe.mode === Ie)
                  F = new d.LineLoop(ue, Oe);
                else {
                  if (Qe.mode !== re)
                    throw new Error("THREE.GLTFLoader: Primitive mode unsupported: " + Qe.mode);
                  F = new d.Points(ue, Oe);
                }
                Object.keys(F.geometry.morphAttributes).length > 0 && mt(F, b), F.name = b.name || "mesh_" + J, Ke.length > 1 && (F.name += "_" + Y), b.extras !== void 0 && (F.userData = b.extras), et.push(F);
                for (var Ve = Ze ? F.material : [F.material], It = ue.attributes.color !== void 0, vt = ue.attributes.normal === void 0, Qt = F.isSkinnedMesh === !0, Ct = Object.keys(ue.morphAttributes).length > 0, Rt = Ct && ue.morphAttributes.normal !== void 0, or = 0, tn = Ve.length; or < tn; or++) {
                  if (Oe = Ve[or], F.isPoints) {
                    var ur = "PointsMaterial:" + Oe.uuid, Vr = R.cache.get(ur);
                    Vr || (Vr = new d.PointsMaterial(), d.Material.prototype.copy.call(Vr, Oe), Vr.color.copy(Oe.color), Vr.map = Oe.map, Vr.lights = !1, R.cache.add(ur, Vr)), Oe = Vr;
                  } else if (F.isLine) {
                    ur = "LineBasicMaterial:" + Oe.uuid;
                    var zr = R.cache.get(ur);
                    zr || (zr = new d.LineBasicMaterial(), d.Material.prototype.copy.call(zr, Oe), zr.color.copy(Oe.color), zr.lights = !1, R.cache.add(ur, zr)), Oe = zr;
                  }
                  if (It || vt || Qt || Ct) {
                    ur = "ClonedMaterial:" + Oe.uuid + ":", Oe.isGLTFSpecularGlossinessMaterial && (ur += "specular-glossiness:"), Qt && (ur += "skinning:"), It && (ur += "vertex-colors:"), vt && (ur += "flat-shading:"), Ct && (ur += "morph-targets:"), Rt && (ur += "morph-normals:");
                    var $r = R.cache.get(ur);
                    $r || ($r = Oe.isGLTFSpecularGlossinessMaterial ? Q[v.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(Oe) : Oe.clone(), Qt && ($r.skinning = !0), It && ($r.vertexColors = d.VertexColors), vt && ($r.flatShading = !0), Ct && ($r.morphTargets = !0), Rt && ($r.morphNormals = !0), R.cache.add(ur, $r)), Oe = $r;
                  }
                  Ve[or] = Oe, Oe.aoMap && ue.attributes.uv2 === void 0 && ue.attributes.uv !== void 0 && (console.log("THREE.GLTFLoader: Duplicating UVs to support aoMap."), ue.addAttribute("uv2", new d.BufferAttribute(ue.attributes.uv.array, 2))), Oe.isGLTFSpecularGlossinessMaterial && (F.onBeforeRender = Q[v.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms);
                }
                F.material = Ze ? Ve : Ve[0];
              }
              if (et.length === 1)
                return et[0];
              var jr = new d.Group();
              for (Y = 0, k = et.length; Y < k; Y++)
                jr.add(et[Y]);
              return jr;
            });
          });
        }, be.prototype.loadCamera = function(J) {
          var R, Q = this.json.cameras[J], b = Q[Q.type];
          if (b)
            return Q.type === "perspective" ? R = new d.PerspectiveCamera(d.Math.radToDeg(b.yfov), b.aspectRatio || 1, b.znear || 1, b.zfar || 2e6) : Q.type === "orthographic" && (R = new d.OrthographicCamera(b.xmag / -2, b.xmag / 2, b.ymag / 2, b.ymag / -2, b.znear, b.zfar)), Q.name !== void 0 && (R.name = Q.name), Q.extras && (R.userData = Q.extras), Promise.resolve(R);
          console.warn("THREE.GLTFLoader: Missing camera parameters.");
        }, be.prototype.loadSkin = function(J) {
          var R = this.json.skins[J], Q = { joints: R.joints };
          return R.inverseBindMatrices === void 0 ? Promise.resolve(Q) : this.getDependency("accessor", R.inverseBindMatrices).then(function(b) {
            return Q.inverseBindMatrices = b, Q;
          });
        }, be.prototype.loadAnimation = function(J) {
          this.json;
          var R = this.json.animations[J];
          return this.getMultiDependencies(["accessor", "node"]).then(function(Q) {
            for (var b = [], U = 0, Z = R.channels.length; U < Z; U++) {
              var ne = R.channels[U], le = R.samplers[ne.sampler];
              if (le) {
                var Ne = ne.target, Ke = Ne.node !== void 0 ? Ne.node : Ne.id, Ze = R.parameters !== void 0 ? R.parameters[le.input] : le.input, et = R.parameters !== void 0 ? R.parameters[le.output] : le.output, Y = Q.accessors[Ze], k = Q.accessors[et], F = Q.nodes[Ke];
                if (F) {
                  var ue;
                  switch (F.updateMatrix(), F.matrixAutoUpdate = !0, qe[Ne.path]) {
                    case qe.weights:
                      ue = d.NumberKeyframeTrack;
                      break;
                    case qe.rotation:
                      ue = d.QuaternionKeyframeTrack;
                      break;
                    case qe.position:
                    case qe.scale:
                    default:
                      ue = d.VectorKeyframeTrack;
                  }
                  var Qe = F.name ? F.name : F.uuid, Oe = le.interpolation !== void 0 ? ye[le.interpolation] : d.InterpolateLinear, Ve = [];
                  qe[Ne.path] === qe.weights ? F.traverse(function(Ct) {
                    Ct.isMesh === !0 && Ct.morphTargetInfluences && Ve.push(Ct.name ? Ct.name : Ct.uuid);
                  }) : Ve.push(Qe);
                  for (var It = 0, vt = Ve.length; It < vt; It++) {
                    var Qt = new ue(Ve[It] + "." + qe[Ne.path], d.AnimationUtils.arraySlice(Y.array, 0), d.AnimationUtils.arraySlice(k.array, 0), Oe);
                    le.interpolation === "CUBICSPLINE" && (Qt.createInterpolant = function(Ct) {
                      return new $(this.times, this.values, this.getValueSize() / 3, Ct);
                    }, Qt.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = !0), b.push(Qt);
                  }
                }
              }
            }
            return Ke = R.name !== void 0 ? R.name : "animation_" + J, new d.AnimationClip(Ke, void 0, b);
          });
        }, be.prototype.loadNode = function(J) {
          this.json;
          var R = this.extensions, Q = this.json.meshReferences, b = this.json.meshUses, U = this.json.nodes[J];
          return this.getMultiDependencies(["mesh", "skin", "camera", "light"]).then(function(Z) {
            var ne;
            if (U.isBone === !0)
              ne = new d.Bone();
            else if (U.mesh !== void 0) {
              var le = Z.meshes[U.mesh];
              if (ne = le.clone(), le.isGroup === !0)
                for (var Ne = 0, Ke = le.children.length; Ne < Ke; Ne++) {
                  var Ze = le.children[Ne];
                  Ze.material && Ze.material.isGLTFSpecularGlossinessMaterial === !0 && (ne.children[Ne].onBeforeRender = Ze.onBeforeRender);
                }
              else
                le.material && le.material.isGLTFSpecularGlossinessMaterial === !0 && (ne.onBeforeRender = le.onBeforeRender);
              Q[U.mesh] > 1 && (ne.name += "_instance_" + b[U.mesh]++);
            } else
              U.camera !== void 0 ? ne = Z.cameras[U.camera] : U.extensions && U.extensions[v.KHR_LIGHTS] && U.extensions[v.KHR_LIGHTS].light !== void 0 ? ne = R[v.KHR_LIGHTS].lights[U.extensions[v.KHR_LIGHTS].light] : ne = new d.Object3D();
            if (U.name !== void 0 && (ne.name = d.PropertyBinding.sanitizeNodeName(U.name)), U.extras && (ne.userData = U.extras), U.extensions && ot(R, ne, U), U.matrix !== void 0) {
              var et = new d.Matrix4();
              et.fromArray(U.matrix), ne.applyMatrix(et);
            } else
              U.translation !== void 0 && ne.position.fromArray(U.translation), U.rotation !== void 0 && ne.quaternion.fromArray(U.rotation), U.scale !== void 0 && ne.scale.fromArray(U.scale);
            return ne;
          });
        }, be.prototype.loadScene = function() {
          function J(R, Q, b, U, Z) {
            var ne = U[R], le = b.nodes[R];
            if (le.skin !== void 0)
              for (var Ne = ne.isGroup === !0 ? ne.children : [ne], Ke = 0, Ze = Ne.length; Ke < Ze; Ke++) {
                for (var et = Ne[Ke], Y = Z[le.skin], k = [], F = [], ue = 0, Qe = Y.joints.length; ue < Qe; ue++) {
                  var Oe = Y.joints[ue], Ve = U[Oe];
                  if (Ve) {
                    k.push(Ve);
                    var It = new d.Matrix4();
                    Y.inverseBindMatrices !== void 0 && It.fromArray(Y.inverseBindMatrices.array, 16 * ue), F.push(It);
                  } else
                    console.warn('THREE.GLTFLoader: Joint "%s" could not be found.', Oe);
                }
                et.bind(new d.Skeleton(k, F), et.matrixWorld);
              }
            if (Q.add(ne), le.children) {
              var vt = le.children;
              for (Ke = 0, Ze = vt.length; Ke < Ze; Ke++)
                J(vt[Ke], ne, b, U, Z);
            }
          }
          return function(R) {
            var Q = this.json, b = this.extensions, U = this.json.scenes[R];
            return this.getMultiDependencies(["node", "skin"]).then(function(Z) {
              var ne = new d.Scene();
              U.name !== void 0 && (ne.name = U.name), U.extras && (ne.userData = U.extras), U.extensions && ot(b, ne, U);
              for (var le = U.nodes || [], Ne = 0, Ke = le.length; Ne < Ke; Ne++)
                J(le[Ne], ne, Q, Z.nodes, Z.skins);
              if (U.extensions && U.extensions[v.KHR_LIGHTS] && U.extensions[v.KHR_LIGHTS].light !== void 0) {
                var Ze = b[v.KHR_LIGHTS].lights;
                ne.add(Ze[U.extensions[v.KHR_LIGHTS].light]);
              }
              return ne;
            });
          };
        }(), C;
      }();
      var g = d.MTLLoader, m = d.OBJLoader, w = d.OrbitControls, B = d.ColladaLoader, x = d.GLTFLoader;
      s.OrbitControls = w, s.MTLLoader = g, s.OBJLoader = m, s.ColladaLoader = B, s.GLTFLoader = x;
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 }), s.default = function(d, g) {
        var m = { animate: !0, name: "" }, w = [Object.assign(Object.create(m), { fuc: d, name: g })];
        return function B() {
          requestAnimationFrame(B), w.forEach(function(x) {
            var C = x.fuc, v = x.animate;
            v && C.call(x, Date.now());
          });
        }(), s.default = function(B, x) {
          var C = Object.assign(Object.create(m), { fuc: B, name: x });
          return w.push(C), C;
        }, w[0];
      };
    }, function(o, s, u) {
      var d, g, m, w, B = function() {
        function O(H, q) {
          for (var $ = 0; $ < q.length; $++) {
            var re = q[$];
            re.enumerable = re.enumerable || !1, re.configurable = !0, "value" in re && (re.writable = !0), Object.defineProperty(H, re.key, re);
          }
        }
        return function(H, q, $) {
          return q && O(H.prototype, q), $ && O(H, $), H;
        };
      }(), x = u(5), C = function(O) {
        return O && O.__esModule ? O : { default: O };
      }(x), v = function(O) {
        if (O && O.__esModule)
          return O;
        var H = {};
        if (O != null)
          for (var q in O)
            Object.prototype.hasOwnProperty.call(O, q) && (H[q] = O[q]);
        return H.default = O, H;
      }(u(0));
      function y(O, H) {
        if (!(O instanceof H))
          throw new TypeError("Cannot call a class as a function");
      }
      function T(O, H) {
        if (!O)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !H || typeof H != "object" && typeof H != "function" ? O : H;
      }
      function M(O, H) {
        if (typeof H != "function" && H !== null)
          throw new TypeError("Super expression must either be null or a function, not " + typeof H);
        O.prototype = Object.create(H && H.prototype, { constructor: { value: O, enumerable: !1, writable: !0, configurable: !0 } }), H && (Object.setPrototypeOf ? Object.setPrototypeOf(O, H) : O.__proto__ = H);
      }
      var D = (g = d = function(O) {
        function H() {
          return y(this, H), T(this, (H.__proto__ || Object.getPrototypeOf(H)).apply(this, arguments));
        }
        return M(H, x.Component), B(H, [{ key: "render", value: function() {
          return C.default.createElement(C.default.Fragment, null, " ");
        } }]), H;
      }(), d.defaultProps = { color: "rgb(30,30,30)", __constructor: "ambientlight" }, g), V = (w = m = function(O) {
        function H() {
          return y(this, H), T(this, (H.__proto__ || Object.getPrototypeOf(H)).apply(this, arguments));
        }
        return M(H, x.Component), B(H, [{ key: "render", value: function() {
          return C.default.createElement(C.default.Fragment, null, " ");
        } }]), H;
      }(), m.defaultProps = { color: 16777215, __constructor: "directionligth", position: new v.Vector3(-30, 30, 30), castShadow: !0 }, w);
      o.exports = { AmbientLight: D, DirectionLight: V };
    }, function(o, s, u) {
      o.exports = u(12);
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 });
      var d, g, m = function() {
        function C(v, y) {
          for (var T = 0; T < y.length; T++) {
            var M = y[T];
            M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(v, M.key, M);
          }
        }
        return function(v, y, T) {
          return y && C(v.prototype, y), T && C(v, T), v;
        };
      }(), w = function(C) {
        if (C && C.__esModule)
          return C;
        var v = {};
        if (C != null)
          for (var y in C)
            Object.prototype.hasOwnProperty.call(C, y) && (v[y] = C[y]);
        return v.default = C, v;
      }(u(0)), B = (u(2), function(C) {
        return C && C.__esModule ? C : { default: C };
      }(u(1))), x = (g = d = function(C) {
        function v(y) {
          return function(T, M) {
            if (!(T instanceof M))
              throw new TypeError("Cannot call a class as a function");
          }(this, v), function(T, M) {
            if (!T)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !M || typeof M != "object" && typeof M != "function" ? T : M;
          }(this, (v.__proto__ || Object.getPrototypeOf(v)).call(this, y));
        }
        return function(y, T) {
          if (typeof T != "function" && T !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof T);
          y.prototype = Object.create(T && T.prototype, { constructor: { value: y, enumerable: !1, writable: !0, configurable: !0 } }), T && (Object.setPrototypeOf ? Object.setPrototypeOf(y, T) : y.__proto__ = T);
        }(v, B.default), m(v, [{ key: "load3dModel", value: function() {
          var y = this, T = this.props, M = T.src;
          if (T.texPath, !M)
            return !1;
          new w.GLTFLoader().load(M, function(D) {
            y.obj3d = D.scene;
            var V = {};
            if (D.scene.traverse(function($) {
              $ instanceof w.Camera && (V.cameras || (V.cameras = []), V.cameras.push($)), $ instanceof w.Light && (V.lights || (V.lights = []), V.lights.push($));
            }), V.cameras && V.cameras.length)
              y.camera = V.cameras[0], y.camera.position.copy(y.camera.position.clone().add(new w.Vector3(0, 0, 0.01)));
            else {
              var O = y.computeBoundingBox(D.scene), H = O.max, q = O.max.z - O.min.z;
              y.camera.position.set(H.x, H.y, H.z + 0.6 * q);
            }
            V.lights && V.lights.length, y.initControl(), y.props.onLoad && y.props.onLoad();
          }, function(D) {
            y.props.onProgress && y.props.onProgress(D);
          }, function() {
            console.log("An error happened");
          });
        } }]), v;
      }(), d.defaultProps = Object.assign({}, B.default.defaultProps, { loader: "gltf" }), g);
      s.default = x;
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 });
      var d, g, m = function() {
        function C(v, y) {
          for (var T = 0; T < y.length; T++) {
            var M = y[T];
            M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(v, M.key, M);
          }
        }
        return function(v, y, T) {
          return y && C(v.prototype, y), T && C(v, T), v;
        };
      }(), w = function(C) {
        if (C && C.__esModule)
          return C;
        var v = {};
        if (C != null)
          for (var y in C)
            Object.prototype.hasOwnProperty.call(C, y) && (v[y] = C[y]);
        return v.default = C, v;
      }(u(0)), B = (u(2), function(C) {
        return C && C.__esModule ? C : { default: C };
      }(u(1))), x = (g = d = function(C) {
        function v(y) {
          return function(T, M) {
            if (!(T instanceof M))
              throw new TypeError("Cannot call a class as a function");
          }(this, v), function(T, M) {
            if (!T)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !M || typeof M != "object" && typeof M != "function" ? T : M;
          }(this, (v.__proto__ || Object.getPrototypeOf(v)).call(this, y));
        }
        return function(y, T) {
          if (typeof T != "function" && T !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof T);
          y.prototype = Object.create(T && T.prototype, { constructor: { value: y, enumerable: !1, writable: !0, configurable: !0 } }), T && (Object.setPrototypeOf ? Object.setPrototypeOf(y, T) : y.__proto__ = T);
        }(v, B.default), m(v, [{ key: "load3dModel", value: function() {
          var y = this, T = this.props, M = T.src;
          if (T.texPath, !M)
            return !1;
          new w.ColladaLoader().load(M, function(D) {
            y.obj3d = D.scene;
            var V = {};
            if (D.scene.traverse(function(q) {
              q instanceof w.Camera && (V.cameras || (V.cameras = []), V.cameras.push(q)), q instanceof w.Light && (V.lights || (V.lights = []), V.lights.push(q));
            }), V.cameras && V.cameras.length)
              y.camera = V.cameras[0], y.camera.position.copy(y.camera.position.clone().add(new w.Vector3(0, 0, 0.01)));
            else {
              var O = y.computeBoundingBox(D.scene), H = O.max;
              O.max.z, O.min.z, y.camera.position.set(H.x, H.y, H.z);
            }
            V.lights && V.lights.length, y.initControl(), y.props.onLoad && y.props.onLoad();
          }, function(D) {
            y.props.onProgress && y.props.onProgress(D);
          }, function() {
            console.log("An error happened");
          });
        } }]), v;
      }(), d.defaultProps = Object.assign({}, B.default.defaultProps, { loader: "collada" }), g);
      s.default = x;
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 });
      var d, g, m = function() {
        function C(v, y) {
          for (var T = 0; T < y.length; T++) {
            var M = y[T];
            M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(v, M.key, M);
          }
        }
        return function(v, y, T) {
          return y && C(v.prototype, y), T && C(v, T), v;
        };
      }(), w = function(C) {
        if (C && C.__esModule)
          return C;
        var v = {};
        if (C != null)
          for (var y in C)
            Object.prototype.hasOwnProperty.call(C, y) && (v[y] = C[y]);
        return v.default = C, v;
      }(u(0)), B = (u(2), function(C) {
        return C && C.__esModule ? C : { default: C };
      }(u(1))), x = (g = d = function(C) {
        function v(y) {
          return function(T, M) {
            if (!(T instanceof M))
              throw new TypeError("Cannot call a class as a function");
          }(this, v), function(T, M) {
            if (!T)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !M || typeof M != "object" && typeof M != "function" ? T : M;
          }(this, (v.__proto__ || Object.getPrototypeOf(v)).call(this, y));
        }
        return function(y, T) {
          if (typeof T != "function" && T !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof T);
          y.prototype = Object.create(T && T.prototype, { constructor: { value: y, enumerable: !1, writable: !0, configurable: !0 } }), T && (Object.setPrototypeOf ? Object.setPrototypeOf(y, T) : y.__proto__ = T);
        }(v, B.default), m(v, [{ key: "load3dModel", value: function() {
          var y = this, T = this.props, M = T.src, D = T.mtl, V = T.texPath;
          if (!M || !D)
            return !1;
          var O = new w.MTLLoader(), H = new w.OBJLoader();
          O.setTexturePath(V), O.load(D, function(q) {
            q.preload(), H.setMaterials(q).load(M, function($) {
              var re = y.computeBoundingBox($), ce = re.max, Ie = re.max.z - re.min.z;
              y.camera.position.set(0, 0, ce.z + 1.5 * Ie), y.initControl(), y.obj3d = $, y.props.onLoad && y.props.onLoad();
            }, function($) {
              y.props.onProgress && y.props.onProgress($);
            });
          });
        } }]), v;
      }(), d.defaultProps = Object.assign({}, B.default.defaultProps, { loader: "objmtl" }), g);
      s.default = x;
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 });
      var d, g, m = function() {
        function C(v, y) {
          for (var T = 0; T < y.length; T++) {
            var M = y[T];
            M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(v, M.key, M);
          }
        }
        return function(v, y, T) {
          return y && C(v.prototype, y), T && C(v, T), v;
        };
      }(), w = function(C) {
        if (C && C.__esModule)
          return C;
        var v = {};
        if (C != null)
          for (var y in C)
            Object.prototype.hasOwnProperty.call(C, y) && (v[y] = C[y]);
        return v.default = C, v;
      }(u(0)), B = (u(2), function(C) {
        return C && C.__esModule ? C : { default: C };
      }(u(1))), x = (g = d = function(C) {
        function v(y) {
          return function(T, M) {
            if (!(T instanceof M))
              throw new TypeError("Cannot call a class as a function");
          }(this, v), function(T, M) {
            if (!T)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !M || typeof M != "object" && typeof M != "function" ? T : M;
          }(this, (v.__proto__ || Object.getPrototypeOf(v)).call(this, y));
        }
        return function(y, T) {
          if (typeof T != "function" && T !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof T);
          y.prototype = Object.create(T && T.prototype, { constructor: { value: y, enumerable: !1, writable: !0, configurable: !0 } }), T && (Object.setPrototypeOf ? Object.setPrototypeOf(y, T) : y.__proto__ = T);
        }(v, B.default), m(v, [{ key: "load3dModel", value: function() {
          var y = this, T = this.props, M = T.src;
          if (T.texPath, !M)
            return !1;
          new w.OBJLoader().load(M, function(D) {
            var V = y.computeBoundingBox(D), O = V.max, H = V.max.z - V.min.z;
            y.camera.position.set(0, 0, O.z + 1.5 * H), y.initControl(), y.obj3d = D, y.props.onLoad && y.props.onLoad();
          }, function(D) {
            y.props.onProgress && y.props.onProgress(D);
          });
        } }]), v;
      }(), d.defaultProps = Object.assign({}, B.default.defaultProps, { loader: "obj" }), g);
      s.default = x;
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 });
      var d, g, m = function() {
        function C(v, y) {
          for (var T = 0; T < y.length; T++) {
            var M = y[T];
            M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(v, M.key, M);
          }
        }
        return function(v, y, T) {
          return y && C(v.prototype, y), T && C(v, T), v;
        };
      }(), w = function(C) {
        if (C && C.__esModule)
          return C;
        var v = {};
        if (C != null)
          for (var y in C)
            Object.prototype.hasOwnProperty.call(C, y) && (v[y] = C[y]);
        return v.default = C, v;
      }(u(0)), B = (u(2), function(C) {
        return C && C.__esModule ? C : { default: C };
      }(u(1))), x = (g = d = function(C) {
        function v(y) {
          return function(T, M) {
            if (!(T instanceof M))
              throw new TypeError("Cannot call a class as a function");
          }(this, v), function(T, M) {
            if (!T)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !M || typeof M != "object" && typeof M != "function" ? T : M;
          }(this, (v.__proto__ || Object.getPrototypeOf(v)).call(this, y));
        }
        return function(y, T) {
          if (typeof T != "function" && T !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof T);
          y.prototype = Object.create(T && T.prototype, { constructor: { value: y, enumerable: !1, writable: !0, configurable: !0 } }), T && (Object.setPrototypeOf ? Object.setPrototypeOf(y, T) : y.__proto__ = T);
        }(v, B.default), m(v, [{ key: "load3dModel", value: function() {
          var y = this, T = this.props, M = T.src, D = T.onProgress, V = T.onLoad, O = T.texPath, H = new w.JSONLoader();
          H.setTexturePath(O), H.load(M, function(q, $) {
            var re = new w.Mesh(q, $);
            q.computeBoundingBox();
            var ce = q.boundingSphere, Ie = ce.center, Pe = ce.radius, se = Ie.clone().multiplyScalar(-1);
            re.geometry.applyMatrix(new w.Matrix4().makeTranslation(se.x, se.y, se.z));
            var Ce = y.computeBoundingBox(re).max;
            y.camera.position.set(Ce.x, Ce.y, Ce.z), y.camera.position.copy(se.clone().add(new w.Vector3(0, 0, 1.666 * Pe))), y.initControl(), y.obj3d = re, V && V();
          }, function(q) {
            D && D(q);
          });
        } }]), v;
      }(), d.defaultProps = Object.assign({}, B.default.defaultProps, { loader: "json" }), g);
      s.default = x;
    }, function(o, s, u) {
      /*
      object-assign
      (c) Sindre Sorhus
      @license MIT
      */
      var d = Object.getOwnPropertySymbols, g = Object.prototype.hasOwnProperty, m = Object.prototype.propertyIsEnumerable;
      o.exports = function() {
        try {
          if (!Object.assign)
            return !1;
          var w = new String("abc");
          if (w[5] = "de", Object.getOwnPropertyNames(w)[0] === "5")
            return !1;
          for (var B = {}, x = 0; x < 10; x++)
            B["_" + String.fromCharCode(x)] = x;
          if (Object.getOwnPropertyNames(B).map(function(v) {
            return B[v];
          }).join("") !== "0123456789")
            return !1;
          var C = {};
          return "abcdefghijklmnopqrst".split("").forEach(function(v) {
            C[v] = v;
          }), Object.keys(Object.assign({}, C)).join("") === "abcdefghijklmnopqrst";
        } catch {
          return !1;
        }
      }() ? Object.assign : function(w, B) {
        for (var x, C, v = function(D) {
          if (D == null)
            throw new TypeError("Object.assign cannot be called with null or undefined");
          return Object(D);
        }(w), y = 1; y < arguments.length; y++) {
          for (var T in x = Object(arguments[y]))
            g.call(x, T) && (v[T] = x[T]);
          if (d) {
            C = d(x);
            for (var M = 0; M < C.length; M++)
              m.call(x, C[M]) && (v[C[M]] = x[C[M]]);
          }
        }
        return v;
      };
    }, function(o, s, u) {
      /** @license React v16.7.0
      * react.production.min.js
      *
      * Copyright (c) Facebook, Inc. and its affiliates.
      *
      * This source code is licensed under the MIT license found in the
      * LICENSE file in the root directory of this source tree.
      */
      var d = u(11), g = typeof Symbol == "function" && Symbol.for, m = g ? Symbol.for("react.element") : 60103, w = g ? Symbol.for("react.portal") : 60106, B = g ? Symbol.for("react.fragment") : 60107, x = g ? Symbol.for("react.strict_mode") : 60108, C = g ? Symbol.for("react.profiler") : 60114, v = g ? Symbol.for("react.provider") : 60109, y = g ? Symbol.for("react.context") : 60110, T = g ? Symbol.for("react.concurrent_mode") : 60111, M = g ? Symbol.for("react.forward_ref") : 60112, D = g ? Symbol.for("react.suspense") : 60113, V = g ? Symbol.for("react.memo") : 60115, O = g ? Symbol.for("react.lazy") : 60116, H = typeof Symbol == "function" && Symbol.iterator;
      function q(ve) {
        for (var je = arguments.length - 1, ie = "https://reactjs.org/docs/error-decoder.html?invariant=" + ve, ae = 0; ae < je; ae++)
          ie += "&args[]=" + encodeURIComponent(arguments[ae + 1]);
        (function(z, be, fe, J, R, Q, b, U) {
          if (!z) {
            if (z = void 0, be === void 0)
              z = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            else {
              var Z = [fe, J, R, Q, b, U], ne = 0;
              (z = Error(be.replace(/%s/g, function() {
                return Z[ne++];
              }))).name = "Invariant Violation";
            }
            throw z.framesToPop = 1, z;
          }
        })(!1, "Minified React error #" + ve + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", ie);
      }
      var $ = { isMounted: function() {
        return !1;
      }, enqueueForceUpdate: function() {
      }, enqueueReplaceState: function() {
      }, enqueueSetState: function() {
      } }, re = {};
      function ce(ve, je, ie) {
        this.props = ve, this.context = je, this.refs = re, this.updater = ie || $;
      }
      function Ie() {
      }
      function Pe(ve, je, ie) {
        this.props = ve, this.context = je, this.refs = re, this.updater = ie || $;
      }
      ce.prototype.isReactComponent = {}, ce.prototype.setState = function(ve, je) {
        typeof ve != "object" && typeof ve != "function" && ve != null && q("85"), this.updater.enqueueSetState(this, ve, je, "setState");
      }, ce.prototype.forceUpdate = function(ve) {
        this.updater.enqueueForceUpdate(this, ve, "forceUpdate");
      }, Ie.prototype = ce.prototype;
      var se = Pe.prototype = new Ie();
      se.constructor = Pe, d(se, ce.prototype), se.isPureReactComponent = !0;
      var Ce = { current: null, currentDispatcher: null }, Ge = Object.prototype.hasOwnProperty, $e = { key: !0, ref: !0, __self: !0, __source: !0 };
      function Be(ve, je, ie) {
        var ae = void 0, z = {}, be = null, fe = null;
        if (je != null)
          for (ae in je.ref !== void 0 && (fe = je.ref), je.key !== void 0 && (be = "" + je.key), je)
            Ge.call(je, ae) && !$e.hasOwnProperty(ae) && (z[ae] = je[ae]);
        var J = arguments.length - 2;
        if (J === 1)
          z.children = ie;
        else if (1 < J) {
          for (var R = Array(J), Q = 0; Q < J; Q++)
            R[Q] = arguments[Q + 2];
          z.children = R;
        }
        if (ve && ve.defaultProps)
          for (ae in J = ve.defaultProps)
            z[ae] === void 0 && (z[ae] = J[ae]);
        return { $$typeof: m, type: ve, key: be, ref: fe, props: z, _owner: Ce.current };
      }
      function Me(ve) {
        return typeof ve == "object" && ve !== null && ve.$$typeof === m;
      }
      var We = /\/+/g, nt = [];
      function Xe(ve, je, ie, ae) {
        if (nt.length) {
          var z = nt.pop();
          return z.result = ve, z.keyPrefix = je, z.func = ie, z.context = ae, z.count = 0, z;
        }
        return { result: ve, keyPrefix: je, func: ie, context: ae, count: 0 };
      }
      function Je(ve) {
        ve.result = null, ve.keyPrefix = null, ve.func = null, ve.context = null, ve.count = 0, 10 > nt.length && nt.push(ve);
      }
      function qe(ve, je, ie) {
        return ve == null ? 0 : function ae(z, be, fe, J) {
          var R = typeof z;
          R !== "undefined" && R !== "boolean" || (z = null);
          var Q = !1;
          if (z === null)
            Q = !0;
          else
            switch (R) {
              case "string":
              case "number":
                Q = !0;
                break;
              case "object":
                switch (z.$$typeof) {
                  case m:
                  case w:
                    Q = !0;
                }
            }
          if (Q)
            return fe(J, z, be === "" ? "." + ye(z, 0) : be), 1;
          if (Q = 0, be = be === "" ? "." : be + ":", Array.isArray(z))
            for (var b = 0; b < z.length; b++) {
              var U = be + ye(R = z[b], b);
              Q += ae(R, U, fe, J);
            }
          else if (U = z === null || typeof z != "object" ? null : typeof (U = H && z[H] || z["@@iterator"]) == "function" ? U : null, typeof U == "function")
            for (z = U.call(z), b = 0; !(R = z.next()).done; )
              Q += ae(R = R.value, U = be + ye(R, b++), fe, J);
          else
            R === "object" && q("31", (fe = "" + z) == "[object Object]" ? "object with keys {" + Object.keys(z).join(", ") + "}" : fe, "");
          return Q;
        }(ve, "", je, ie);
      }
      function ye(ve, je) {
        return typeof ve == "object" && ve !== null && ve.key != null ? function(ie) {
          var ae = { "=": "=0", ":": "=2" };
          return "$" + ("" + ie).replace(/[=:]/g, function(z) {
            return ae[z];
          });
        }(ve.key) : je.toString(36);
      }
      function Ue(ve, je) {
        ve.func.call(ve.context, je, ve.count++);
      }
      function ze(ve, je, ie) {
        var ae = ve.result, z = ve.keyPrefix;
        ve = ve.func.call(ve.context, je, ve.count++), Array.isArray(ve) ? X(ve, ae, ie, function(be) {
          return be;
        }) : ve != null && (Me(ve) && (ve = function(be, fe) {
          return { $$typeof: m, type: be.type, key: fe, ref: be.ref, props: be.props, _owner: be._owner };
        }(ve, z + (!ve.key || je && je.key === ve.key ? "" : ("" + ve.key).replace(We, "$&/") + "/") + ie)), ae.push(ve));
      }
      function X(ve, je, ie, ae, z) {
        var be = "";
        ie != null && (be = ("" + ie).replace(We, "$&/") + "/"), qe(ve, ze, je = Xe(je, be, ae, z)), Je(je);
      }
      var ut = { Children: { map: function(ve, je, ie) {
        if (ve == null)
          return ve;
        var ae = [];
        return X(ve, ae, null, je, ie), ae;
      }, forEach: function(ve, je, ie) {
        if (ve == null)
          return ve;
        qe(ve, Ue, je = Xe(null, null, je, ie)), Je(je);
      }, count: function(ve) {
        return qe(ve, function() {
          return null;
        }, null);
      }, toArray: function(ve) {
        var je = [];
        return X(ve, je, null, function(ie) {
          return ie;
        }), je;
      }, only: function(ve) {
        return Me(ve) || q("143"), ve;
      } }, createRef: function() {
        return { current: null };
      }, Component: ce, PureComponent: Pe, createContext: function(ve, je) {
        return je === void 0 && (je = null), (ve = { $$typeof: y, _calculateChangedBits: je, _currentValue: ve, _currentValue2: ve, _threadCount: 0, Provider: null, Consumer: null }).Provider = { $$typeof: v, _context: ve }, ve.Consumer = ve;
      }, forwardRef: function(ve) {
        return { $$typeof: M, render: ve };
      }, lazy: function(ve) {
        return { $$typeof: O, _ctor: ve, _status: -1, _result: null };
      }, memo: function(ve, je) {
        return { $$typeof: V, type: ve, compare: je === void 0 ? null : je };
      }, Fragment: B, StrictMode: x, Suspense: D, createElement: Be, cloneElement: function(ve, je, ie) {
        ve == null && q("267", ve);
        var ae = void 0, z = d({}, ve.props), be = ve.key, fe = ve.ref, J = ve._owner;
        if (je != null) {
          je.ref !== void 0 && (fe = je.ref, J = Ce.current), je.key !== void 0 && (be = "" + je.key);
          var R = void 0;
          for (ae in ve.type && ve.type.defaultProps && (R = ve.type.defaultProps), je)
            Ge.call(je, ae) && !$e.hasOwnProperty(ae) && (z[ae] = je[ae] === void 0 && R !== void 0 ? R[ae] : je[ae]);
        }
        if ((ae = arguments.length - 2) === 1)
          z.children = ie;
        else if (1 < ae) {
          R = Array(ae);
          for (var Q = 0; Q < ae; Q++)
            R[Q] = arguments[Q + 2];
          z.children = R;
        }
        return { $$typeof: m, type: ve.type, key: be, ref: fe, props: z, _owner: J };
      }, createFactory: function(ve) {
        var je = Be.bind(null, ve);
        return je.type = ve, je;
      }, isValidElement: Me, version: "16.7.0", unstable_ConcurrentMode: T, unstable_Profiler: C, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: Ce, assign: d } }, ot = { default: ut }, mt = ot && ut || ot;
      o.exports = mt.default || mt;
    }, function(o, s, u) {
      Object.defineProperty(s, "__esModule", { value: !0 });
      var d = u(1);
      Object.defineProperty(s, "Model", { enumerable: !0, get: function() {
        return y(d).default;
      } });
      var g = u(10);
      Object.defineProperty(s, "JSONModel", { enumerable: !0, get: function() {
        return y(g).default;
      } });
      var m = u(9);
      Object.defineProperty(s, "OBJModel", { enumerable: !0, get: function() {
        return y(m).default;
      } });
      var w = u(8);
      Object.defineProperty(s, "MTLModel", { enumerable: !0, get: function() {
        return y(w).default;
      } });
      var B = u(7);
      Object.defineProperty(s, "DAEModel", { enumerable: !0, get: function() {
        return y(B).default;
      } });
      var x = u(6);
      Object.defineProperty(s, "GLTFModel", { enumerable: !0, get: function() {
        return y(x).default;
      } });
      var C = u(3);
      Object.defineProperty(s, "Tick", { enumerable: !0, get: function() {
        return y(C).default;
      } });
      var v = u(4);
      function y(T) {
        return T && T.__esModule ? T : { default: T };
      }
      Object.defineProperty(s, "DirectionLight", { enumerable: !0, get: function() {
        return v.DirectionLight;
      } }), Object.defineProperty(s, "AmbientLight", { enumerable: !0, get: function() {
        return v.AmbientLight;
      } });
    }]);
  });
})(react3dViewer);
const StyledBagItem = styled$1.div`
  ${(e) => {
  const {
    isDragging: n
  } = e;
  return css`
      width: 6em;
      height: 6em;
      border: 0 !important;
      opacity: ${n ? 0 : 1};
      cursor: grab;
      img,
      video {
        max-width: 100%;
      }
    `;
}}
`;
StyledBagItem.displayName = "StyledBagItem";
const PresentationalBagItem = ({
  drag: e,
  isDragging: n,
  item: o
}) => {
  const {
    setSelItem: s
  } = useStore(), u = React__default.useRef(null), d = (g) => {
    switch (g.detail) {
      case 1:
        console.log("handling click"), window && window.openInWebaverse ? (console.log("webaverse click!"), window.openInWebaverse(o), s(o)) : (console.log("single click for item select"), s(o));
        break;
      case 2:
        console.log("handling double click");
        break;
      case 3:
        console.log("handling triple click");
        break;
      default:
        console.log("handling default click");
        break;
    }
  };
  return React__default.useEffect(() => {
    const g = setInterval(() => {
      const m = u && u.current && u.current.$container;
      m && m.children && m.children.length > 1 && m.removeChild(m.firstChild);
    }, 1);
    return () => {
      clearInterval(g);
    };
  }, []), o && /* @__PURE__ */ jsxs(StyledBagItem, {
    className: "flex items-center justify-center class_model",
    ref: e,
    isDragging: n,
    onClick: d,
    children: [(isImage(o && o.url) || !isImage(o && o.url) && !isMedia(o && o.url) && !isModel(o && o.url)) && /* @__PURE__ */ jsx("span", {
      onClick: d,
      children: /* @__PURE__ */ jsx("img", {
        crossOrigin: "anonymous",
        referrerPolicy: "no-referer-on-downgrade",
        className: "w-full h-full",
        src: o.url,
        onClick: d
      })
    }), isMedia(o && o.url) && /* @__PURE__ */ jsx("span", {
      onClick: d,
      children: /* @__PURE__ */ jsx("video", {
        crossOrigin: "anonymous",
        referrerPolicy: "no-referer-on-downgrade",
        className: "w-full h-full",
        src: o.url,
        autoPlay: !0,
        loop: !0,
        muted: !0
      })
    }), isModel(o && o.url) && /* @__PURE__ */ jsx(react3dViewer.exports.GLTFModel, {
      ref: u,
      width: 96,
      height: 96,
      src: o.url,
      enabled: !1,
      position: {
        x: -0.15,
        y: -0.3,
        z: -0.3
      },
      onClick: d
    })]
  });
}, BagItem = ({
  item: e,
  isForTrade: n,
  index: o,
  tradeBoxes: s,
  updateTradeBoxes: u,
  tradeLayer: d
}) => {
  const g = React__default.useRef(null), {
    plugActor: m,
    tradeData: w,
    localUserId: B
  } = useStore();
  e || (e = {}), e.isForTrade = n;
  const [{
    handlerId: x
  }, C] = useDrop({
    accept: itemTypes.LAYER1,
    canDrop(M, D) {
      return d !== "remote";
    },
    collect(M) {
      return {
        handlerId: M.getHandlerId()
      };
    },
    drop(M, D) {
      if (!g.current || e.canister_id || !w)
        return;
      const V = M.index, O = o, H = clone(M.item);
      H.slot = O;
      const q = clone(M.tradeBoxes), $ = clone(e);
      $.slot = V;
      const re = clone(s);
      console.log("cloneDragTradeItem: ", H), M.tradeLayer === "inventory" && d === "local" && (async () => {
        const ce = await m.add_item_to_trade(B, w.id, H);
        console.log("add_item_to_trade res: ", ce);
      })(), M.tradeLayer === "local" && d === "inventory" && (async () => {
        const ce = await m.remove_item_from_trade(B, w.id, H.id);
        console.log("remove_item_from_trade res: ", ce);
      })(), d === M.tradeLayer ? (q[V].item = $, q[O].item = H, u(q)) : (q[V].item = $, re[O].item = H, M.updateTradeBoxes(q), u(re));
    }
  }), [{
    isDragging: v
  }, y] = useDrag({
    type: itemTypes.LAYER1,
    canDrag: !!e.canister_id,
    item: () => ({
      index: o,
      tradeBoxes: s,
      updateTradeBoxes: u,
      item: e,
      tradeLayer: d
    }),
    collect: (M) => ({
      isDragging: M.isDragging()
    })
  }), T = v ? 0 : 1;
  return y(C(g)), /* @__PURE__ */ jsx("div", {
    className: classnames({
      opacity: T
    }),
    ref: g,
    "data-handler-id": x,
    children: /* @__PURE__ */ jsx(PresentationalBagItem, {
      drag: y,
      isDragging: v,
      item: e
    })
  });
}, Loading = () => {
  const {
    loading: e
  } = useStore();
  return e ? /* @__PURE__ */ jsx("div", {
    className: classnames("absolute top-0 bottom-0 left-0 right-0 z-10 flex justify-center items-center opacity-30 bg-white", {
      hidden: !e
    }),
    children: /* @__PURE__ */ jsx("div", {
      className: "w-32 h-32 border-8 rounded-full border-t-green-900 animate-spin"
    })
  }) : null;
}, ItemDetails = () => {
  const {
    selItem: e
  } = useStore(), n = React__default.useRef(null);
  return React__default.useEffect(() => {
    const o = setInterval(() => {
      var u, d;
      const s = (u = n == null ? void 0 : n.current) == null ? void 0 : u.$container;
      ((d = s == null ? void 0 : s.children) == null ? void 0 : d.length) > 1 && s.removeChild(s.firstChild);
    }, 1);
    return () => {
      clearInterval(o);
    };
  }, []), e ? /* @__PURE__ */ jsxs("div", {
    className: "absolute bottom-0 right-0 z-10 flex flex-col w-1/4 gap-1 p-4 bg-black-100",
    children: [/* @__PURE__ */ jsxs("div", {
      className: "flex flex-col gap-1 font-bold text-red-900",
      children: [/* @__PURE__ */ jsx("div", {
        children: e == null ? void 0 : e.collection
      }), /* @__PURE__ */ jsx("div", {
        children: "#7849"
      })]
    }), /* @__PURE__ */ jsxs("div", {
      className: "flex items-center justify-center w-full p-4 bg-black",
      children: [isImage(e == null ? void 0 : e.url) && !isImage(e && e.url) && !isMedia(e && e.url) && !isModel(e && e.url) && /* @__PURE__ */ jsx("img", {
        className: "w-4/5",
        src: e.url
      }), !1, !1]
    })]
  }) : /* @__PURE__ */ jsx(Fragment, {});
}, {
  ic
} = window, plug = ic == null ? void 0 : ic.plug, canister_id = "lj532-6iaaa-aaaah-qcc7a-cai", whitelist = [canister_id, "vlhm2-4iaaa-aaaam-qaatq-cai", "ryjl3-tyaaa-aaaaa-aaaba-cai"], url = new URL(window.location.href), tradeId = url.searchParams.get("tradeId");
tradeId && console.log("I'm joiner. tradeId: ", tradeId);
let inventoryTokens = [], partner;
const updatePartner = (e) => {
  partner = e;
}, host = "https://mainnet.dfinity.network", timeout = 12e4, Trade = () => {
  const {
    isCreator: e,
    setIsCreator: n,
    tradeData: o,
    setTradeData: s,
    remoteBoxes: u,
    setRemoteBoxes: d,
    localBoxes: g,
    setLocalBoxes: m,
    inventoryBoxes: w,
    setInventoryBoxes: B,
    plugActor: x,
    setPlugActor: C,
    tradeStarted: v,
    setTradeStarted: y,
    accepted: T,
    setAccepted: M,
    curPage: D,
    setCurPage: V,
    setLoading: O,
    localUserId: H,
    setLocalUserId: q,
    curTradeId: $,
    setCurTradeId: re,
    principal: ce,
    setPrincipal: Ie,
    authenticated: Pe,
    setAuthenticated: se
  } = useStore(), Ce = async () => {
    try {
      if (plug && await plug.requestConnect({
        whitelist,
        host,
        timeout
      })) {
        const qe = await plug.agent.getPrincipal();
        Ie(qe), se(!0);
      }
    } catch (Je) {
      console.log("Error", Je);
    }
  }, Ge = ce ? window.ic.plug.principalId : "<none>";
  React__default.useEffect(() => {
    (async () => {
      if (!ce)
        return;
      O(!0);
      const Je = window.ic.plug.principalId;
      console.log("local user: ", Je), q(Je);
      const qe = Object.values(await getUserTokens({
        agent: plug.agent,
        user: Je
      }));
      inventoryTokens = clone(qe), B(getInventoryBoxes(inventoryTokens)), tradeId && Be(), O(!1);
    })();
  }, [ce]), React__default.useEffect(() => {
    (async () => {
      if (!x || !H)
        return;
      O(!0), console.log("plugActor: ", x);
      let Je;
      tradeId ? (console.log("***** TRADE DETECTED *****"), Je = await x.get_trade_by_id(tradeId), n(!1)) : (Je = await x.create_trade(), n(!0)), console.log("trade: ", Je), re(Je.id), s(Je), y(!0), O(!1);
    })();
  }, [x]), React__default.useEffect(() => {
    var ot, mt;
    const Je = (mt = (ot = window == null ? void 0 : window.ic) == null ? void 0 : ot.plug) == null ? void 0 : mt.principalId;
    if (!Je)
      return;
    const qe = Principal$3.fromUint8Array(o.host._arr).toText(), ye = Principal$3.fromUint8Array(o.guest._arr).toText(), Ue = Je === qe, ze = Je === ye;
    let X = [];
    if (Ue)
      X = o.host_data;
    else if (ze)
      X = o.guest_data;
    else
      throw new Error("User is not host or guest");
    if (g.length === X.length)
      return;
    let ut = !1;
    for (let ve = 0; ve < g.length; ve++) {
      const je = g[ve];
      if (X.findIndex((ae) => ae.id === je.id) === -1 && je.item) {
        const ae = je.item;
        console.log("***** ADDING ITEM", ae), console.log("***** tradeData", o);
        const z = Number(ae.index);
        console.log("tradeData.id, {name: item.collection, canister: Principal.fromText(item.canister), token_id"), console.log(o.id, {
          name: ae.metadata.name,
          canister_id: ae.canister,
          token_id: z
        }), x.add_item_to_trade(o.id, {
          name: ae.collection,
          canister_id: Principal$3.fromText(ae.canister),
          token_id: z
        }).then((be) => {
          console.log("tradeResponse", be), updateTradeData(be[0]);
        }), ut = !0;
      }
    }
    if (!ut) {
      let ve = !1;
      for (let je = 0; je < X.length; je++) {
        const ie = X[je];
        if (g.findIndex((z) => z.id === ie.id) === -1)
          return x.remove_item_from_trade(tradeId, ie.id), ve = !0;
      }
      if (!ve)
        throw new Error("something went wrong");
    }
  }, [g]), React__default.useEffect(() => {
    if (!x || !o || partner)
      return;
    const Je = setInterval(async () => {
      const qe = await x.get_trade_by_id(o.id);
      console.log("rtTrade: ", qe);
      const ye = Principal$3.fromUint8Array(qe[0].guest._arr).toText();
      ye !== null && ye !== "" && ye !== nullPrincipal && ye !== nullPartner && (updatePartner(ye), clearInterval(Je), console.log("Trade partner found! guest: ", ye));
    }, 1e3);
  }, [x, o]), React__default.useEffect(() => {
    (async () => {
      if (!x && !$ && !o)
        return;
      O(!0);
      const Je = o.host, qe = o.guest;
      if (!e && qe !== nullPrincipalId && qe !== H)
        return console.error("Trade already initialized to another wallet: ", qe);
      if (e && qe !== nullPrincipalId && qe !== H && qe !== Je && qe !== partner && (console.log("trade partner found(guest): ", qe), updatePartner(qe)), !e && Je !== nullPrincipalId && Je !== H && Je !== partner && (console.log("trade partner found(host): ", Je), await x.join_trade($), updatePartner(Je)), e) {
        const ye = getRemoteBoxes(o.guest_data);
        console.log("guest_data: ", o.guest_data), console.log("remoteBoxes: ", ye), d(ye);
      } else {
        const ye = getRemoteBoxes(o.host_data);
        console.log("host_data: ", o.host_data), console.log("remoteBoxes: ", ye), d(ye);
      }
      O(!1);
    })();
  }, [o]), React__default.useEffect(() => {
    if (!x)
      return;
    const Je = setInterval(async () => {
      const qe = await x.get_trade_by_id($);
      s(qe);
    }, 10);
    return () => {
      clearInterval(Je);
    };
  }, [$]), React__default.useEffect(() => {
    if (!x || !o || !partner)
      return;
    const Je = setInterval(async () => {
      const qe = await x.get_trade_by_id(o.id);
      if (JSON.stringify(qe[0]) === JSON.stringify(o))
        return;
      console.log("updated!"), updateTradeData(qe[0]);
      const ye = window.ic.plug.principalId.toText(), Ue = Principal$3.fromUint8Array(qe[0].host._arr).toText(), ze = Principal$3.fromUint8Array(qe[0].guest._arr).toText();
      if (!(ye === Ue) && !(ye === ze))
        throw new Error("User is not in this trade!");
      if (Ue !== o.host)
        throw new Error("host changed!");
      if (ze !== o.guest)
        throw new Error("guest changed!");
    }, 1e3);
    return () => clearInterval(Je);
  }, [x, o, partner]);
  const $e = async () => {
    console.log("connecting..."), Ce();
  }, Be = async () => {
    C(trade_canister);
  }, Me = () => {
    !x || (x.accept(o.id), M(!0), console.log("Trade accepted!"));
  }, We = () => {
    !x || (x.cancel(o.id), M(!1), console.log("Trade canceled!"));
  }, nt = () => {
    D <= 1 || V(D - 1);
  }, Xe = () => {
    const Je = Math.ceil(inventoryBoxNum / pageBoxNum);
    D >= Je || V(D + 1);
  };
  return /* @__PURE__ */ jsx("div", {
    className: "w-full h-full",
    children: /* @__PURE__ */ jsxs(DndProvider, {
      backend: HTML5Backend,
      children: [/* @__PURE__ */ jsx(ItemDetails, {}), /* @__PURE__ */ jsxs("div", {
        className: "absolute top-0 left-0 w-3/4 h-full",
        children: [/* @__PURE__ */ jsx(Loading, {}), !Pe && /* @__PURE__ */ jsx(Frame, {
          className: "absolute w-full h-full",
          children: /* @__PURE__ */ jsx("div", {
            className: "flex items-center justify-center w-full h-full",
            children: /* @__PURE__ */ jsx(Button$1, {
              variant: "contained",
              onClick: $e,
              children: "Connect"
            })
          })
        }), Pe && !o && /* @__PURE__ */ jsxs(React__default.Fragment, {
          children: [/* @__PURE__ */ jsx(Frame, {
            className: "absolute w-full",
            children: /* @__PURE__ */ jsxs("div", {
              className: "flex items-center justify-center w-full h-full",
              children: [!v && /* @__PURE__ */ jsx(Button$1, {
                variant: "contained",
                onClick: Be,
                children: "Start Trade"
              }), v && !o && /* @__PURE__ */ jsx(Button$1, {
                variant: "disabled",
                children: "Starting..."
              })]
            })
          }), /* @__PURE__ */ jsxs("div", {
            className: "absolute w-full h-full overflow-auto",
            children: [Pe && o && /* @__PURE__ */ jsxs(React__default.Fragment, {
              children: [/* @__PURE__ */ jsx(Frame, {
                children: /* @__PURE__ */ jsxs("div", {
                  className: "flex flex-col gap-2",
                  children: [/* @__PURE__ */ jsxs("div", {
                    className: "flex items-center justify-between",
                    children: [/* @__PURE__ */ jsx("div", {
                      className: "text-2xl",
                      children: "Their Trade"
                    }), /* @__PURE__ */ jsx("div", {
                      className: "text-xl text-blue-900",
                      children: e && o.guest_accept || !e && o.host_accept ? "TRADE ACCEPTED" : ""
                    })]
                  }), /* @__PURE__ */ jsx("div", {
                    className: "flex flex-wrap gap-3",
                    children: u.map((Je, qe) => /* @__PURE__ */ jsx(RemoteBox$1, {
                      children: /* @__PURE__ */ jsx(BagItem, {
                        item: clone(Je.item),
                        index: qe,
                        tradeBoxes: clone(u),
                        updateTradeBoxes: d,
                        tradeLayer: "remote"
                      }, `remote_${Je.id}`)
                    }, Je.id))
                  })]
                })
              }), /* @__PURE__ */ jsx(Frame, {
                children: /* @__PURE__ */ jsxs("div", {
                  className: "flex flex-col gap-2",
                  children: [/* @__PURE__ */ jsx("div", {
                    className: "text-2xl",
                    children: "Your Trade"
                  }), /* @__PURE__ */ jsx("div", {
                    className: "flex flex-wrap gap-3",
                    children: g.map((Je, qe) => /* @__PURE__ */ jsx(BagBox$1, {
                      children: /* @__PURE__ */ jsx(BagItem, {
                        isForTrade: !0,
                        item: clone(Je.item),
                        index: qe,
                        tradeBoxes: clone(g),
                        updateTradeBoxes: m,
                        tradeLayer: "local"
                      }, `local_${Je.id}`)
                    }, Je.id))
                  })]
                })
              }), /* @__PURE__ */ jsx(Frame, {
                children: /* @__PURE__ */ jsxs("div", {
                  className: "flex flex-wrap items-center justify-center w-full h-full gap-8",
                  children: [/* @__PURE__ */ jsx(Button$1, {
                    variant: "contained",
                    onClick: Me,
                    disabled: T || !existItems(g),
                    color: "success",
                    children: "Accept"
                  }), /* @__PURE__ */ jsxs("div", {
                    className: "flex items-center justify-center gap-2",
                    children: [/* @__PURE__ */ jsx("label", {
                      htmlFor: "icp",
                      children: "ICP: "
                    }), /* @__PURE__ */ jsx("input", {
                      className: "w-32 p-0.5 text-xl border rounded opacity-30 bg-amber-900",
                      id: "icp",
                      type: "number"
                    })]
                  }), /* @__PURE__ */ jsx(Button$1, {
                    variant: "contained",
                    onClick: We,
                    disabled: !T && existItems(g),
                    color: "error",
                    children: "Cancel"
                  })]
                })
              })]
            }), ce && /* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-col gap-2",
                children: [/* @__PURE__ */ jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [/* @__PURE__ */ jsx("div", {
                    className: "text-2xl",
                    children: "Inventory"
                  }), /* @__PURE__ */ jsxs("div", {
                    className: "flex items-center gap-2 text-xl",
                    children: [/* @__PURE__ */ jsx("div", {
                      className: "cursor-pointer",
                      onClick: nt,
                      children: "<"
                    }), /* @__PURE__ */ jsx("div", {
                      className: "text-blue-900",
                      children: D
                    }), /* @__PURE__ */ jsx("div", {
                      className: "cursor-pointer",
                      onClick: Xe,
                      children: ">"
                    })]
                  })]
                }), /* @__PURE__ */ jsx("div", {
                  className: "flex flex-wrap gap-3",
                  children: w.slice((D - 1) * pageBoxNum, D * pageBoxNum).map((Je, qe) => /* @__PURE__ */ jsx(BagBox$1, {
                    children: /* @__PURE__ */ jsx(BagItem, {
                      item: clone(Je.item),
                      index: (D - 1) * pageBoxNum + qe,
                      tradeBoxes: clone(w),
                      updateTradeBoxes: B,
                      tradeLayer: "inventory"
                    }, `inventory_${Je.id}`)
                  }, Je.id))
                })]
              })
            })]
          })]
        })]
      }), /* @__PURE__ */ jsx("div", {
        className: "absolute top-0 right-0 w-1/4 h-full",
        children: /* @__PURE__ */ jsx(Frame, {
          className: "h-full",
          children: /* @__PURE__ */ jsxs("div", {
            className: "p-2",
            children: [/* @__PURE__ */ jsx("b", {
              children: "CONNECTION STATUS"
            }), /* @__PURE__ */ jsx("br", {}), Pe && ce ? "Connected with " + Ge : "Waiting for IC wallet connection...", /* @__PURE__ */ jsx("br", {}), /* @__PURE__ */ jsx("br", {}), v && o && !partner && !tradeId && /* @__PURE__ */ jsxs(Fragment, {
              children: [/* @__PURE__ */ jsx("b", {
                children: " WAITING FOR TRADE PARTNER... "
              }), /* @__PURE__ */ jsx("br", {}), "Send this link to your trade partner", /* @__PURE__ */ jsx("br", {}), /* @__PURE__ */ jsxs("a", {
                className: "text-blue-900",
                href: `${url.host}/?tradeId=${o.id}`,
                children: [url.host, "/?tradeId=", o.id]
              })]
            }), v && o && partner && /* @__PURE__ */ jsxs(Fragment, {
              children: ["Trading with ", partner]
            })]
          })
        })
      })]
    })
  });
};
styleInject(css$2);
const App = ({
  type: e
}) => /* @__PURE__ */ jsx("div", {
  className: "body",
  children: /* @__PURE__ */ jsx("div", {
    className: "fixed top-0 bottom-0 left-0 right-0",
    children: /* @__PURE__ */ jsx(Trade, {
      type: e
    })
  })
});
export {
  AgentError as A,
  Certificate as C,
  PipeArrayBuffer as P,
  Principal$3 as a,
  App as b,
  decode as d,
  lebDecode as l,
  toHex as t
};
