import * as React from "react";
import React__default, { useLayoutEffect, forwardRef, useContext, createContext, createElement, Fragment as Fragment$1, useRef, Children, isValidElement, cloneElement, memo, useEffect, useState, useCallback, useMemo, useDebugValue, Component } from "react";
const css$2 = `*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width: 640px){.container{max-width:640px}}@media (min-width: 768px){.container{max-width:768px}}@media (min-width: 1024px){.container{max-width:1024px}}@media (min-width: 1280px){.container{max-width:1280px}}@media (min-width: 1536px){.container{max-width:1536px}}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.top-0{top:0px}.bottom-0{bottom:0px}.left-0{left:0px}.right-0{right:0px}.z-10{z-index:10}.flex{display:flex}.hidden{display:none}.h-full{height:100%}.h-32{height:8rem}.w-full{width:100%}.w-1\\/4{width:25%}.w-4\\/5{width:80%}.w-32{width:8rem}.w-3\\/4{width:75%}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes spin{to{transform:rotate(360deg)}}.animate-spin{animation:spin 1s linear infinite}.cursor-pointer{cursor:pointer}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-8{gap:2rem}.overflow-auto{overflow:auto}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.border{border-width:1px}.border-8{border-width:8px}.border-t-green-900{--tw-border-opacity: 1;border-top-color:rgb(20 83 45 / var(--tw-border-opacity))}.bg-black{--tw-bg-opacity: 1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-amber-900{--tw-bg-opacity: 1;background-color:rgb(120 53 15 / var(--tw-bg-opacity))}.bg-\\[url\\(\\'\\/frame\\/bg\\.jpg\\'\\)\\]{background-image:url(/frame/bg.jpg)}.bg-cover{background-size:cover}.bg-center{background-position:center}.p-3{padding:.75rem}.p-4{padding:1rem}.p-0\\.5{padding:.125rem}.p-0{padding:0}.p-2{padding:.5rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.font-bold{font-weight:700}.text-red-900{--tw-text-opacity: 1;color:rgb(127 29 29 / var(--tw-text-opacity))}.text-blue-900{--tw-text-opacity: 1;color:rgb(30 58 138 / var(--tw-text-opacity))}.opacity-30{opacity:.3}.shadow-inner{--tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / .05);--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}*{box-sizing:border-box}.body{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;margin:0;font-family:Roboto,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;height:100%;width:100%;background-color:#000}.body:before{content:"";background-repeat:repeat;position:fixed;top:0;left:0;width:100%;height:100%;z-index:-1}code{font-family:source-code-pro,Menlo,Monaco,Consolas,Courier New,monospace}ul{list-style-type:none;margin:0;padding:0}#root{width:100vw;height:100vh;margin:0;border:0}
`;
function styleInject(Q, ee) {
  ee === void 0 && (ee = {});
  var ne = ee.insertAt;
  if (!(!Q || typeof document > "u")) {
    var ie = document.head || document.getElementsByTagName("head")[0], ae = document.createElement("style");
    ae.type = "text/css", ne === "top" && ie.firstChild ? ie.insertBefore(ae, ie.firstChild) : ie.appendChild(ae), ae.styleSheet ? ae.styleSheet.cssText = Q : ae.appendChild(document.createTextNode(Q));
  }
}
const common = {
  black: "#000",
  white: "#fff"
}, common$1 = common, red = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
}, red$1 = red, purple = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
}, purple$1 = purple, blue = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
}, blue$1 = blue, lightBlue = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
}, lightBlue$1 = lightBlue, green = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
}, green$1 = green, orange = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
}, orange$1 = orange, grey = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, grey$1 = grey;
function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function(Q) {
    for (var ee = 1; ee < arguments.length; ee++) {
      var ne = arguments[ee];
      for (var ie in ne)
        Object.prototype.hasOwnProperty.call(ne, ie) && (Q[ie] = ne[ie]);
    }
    return Q;
  }, _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(Q, ee) {
  if (Q == null)
    return {};
  var ne = {}, ie = Object.keys(Q), ae, ce;
  for (ce = 0; ce < ie.length; ce++)
    ae = ie[ce], !(ee.indexOf(ae) >= 0) && (ne[ae] = Q[ae]);
  return ne;
}
function memoize$3(Q) {
  var ee = /* @__PURE__ */ Object.create(null);
  return function(ne) {
    return ee[ne] === void 0 && (ee[ne] = Q(ne)), ee[ne];
  };
}
var reactPropsRegex$1 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, isPropValid = /* @__PURE__ */ memoize$3(
  function(Q) {
    return reactPropsRegex$1.test(Q) || Q.charCodeAt(0) === 111 && Q.charCodeAt(1) === 110 && Q.charCodeAt(2) < 91;
  }
);
function sheetForTag$1(Q) {
  if (Q.sheet)
    return Q.sheet;
  for (var ee = 0; ee < document.styleSheets.length; ee++)
    if (document.styleSheets[ee].ownerNode === Q)
      return document.styleSheets[ee];
}
function createStyleElement(Q) {
  var ee = document.createElement("style");
  return ee.setAttribute("data-emotion", Q.key), Q.nonce !== void 0 && ee.setAttribute("nonce", Q.nonce), ee.appendChild(document.createTextNode("")), ee.setAttribute("data-s", ""), ee;
}
var StyleSheet$1 = /* @__PURE__ */ function() {
  function Q(ne) {
    var ie = this;
    this._insertTag = function(ae) {
      var ce;
      ie.tags.length === 0 ? ie.insertionPoint ? ce = ie.insertionPoint.nextSibling : ie.prepend ? ce = ie.container.firstChild : ce = ie.before : ce = ie.tags[ie.tags.length - 1].nextSibling, ie.container.insertBefore(ae, ce), ie.tags.push(ae);
    }, this.isSpeedy = ne.speedy === void 0 ? process.env.NODE_ENV === "production" : ne.speedy, this.tags = [], this.ctr = 0, this.nonce = ne.nonce, this.key = ne.key, this.container = ne.container, this.prepend = ne.prepend, this.insertionPoint = ne.insertionPoint, this.before = null;
  }
  var ee = Q.prototype;
  return ee.hydrate = function(ie) {
    ie.forEach(this._insertTag);
  }, ee.insert = function(ie) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(createStyleElement(this));
    var ae = this.tags[this.tags.length - 1];
    if (process.env.NODE_ENV !== "production") {
      var ce = ie.charCodeAt(0) === 64 && ie.charCodeAt(1) === 105;
      ce && this._alreadyInsertedOrderInsensitiveRule && console.error(`You're attempting to insert the following rule:
` + ie + "\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules."), this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !ce;
    }
    if (this.isSpeedy) {
      var le = sheetForTag$1(ae);
      try {
        le.insertRule(ie, le.cssRules.length);
      } catch (de) {
        process.env.NODE_ENV !== "production" && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(ie) && console.error('There was a problem inserting the following rule: "' + ie + '"', de);
      }
    } else
      ae.appendChild(document.createTextNode(ie));
    this.ctr++;
  }, ee.flush = function() {
    this.tags.forEach(function(ie) {
      return ie.parentNode && ie.parentNode.removeChild(ie);
    }), this.tags = [], this.ctr = 0, process.env.NODE_ENV !== "production" && (this._alreadyInsertedOrderInsensitiveRule = !1);
  }, Q;
}(), MS = "-ms-", MOZ = "-moz-", WEBKIT = "-webkit-", COMMENT = "comm", RULESET = "rule", DECLARATION = "decl", IMPORT = "@import", KEYFRAMES = "@keyframes", abs = Math.abs, from = String.fromCharCode, assign = Object.assign;
function hash$2(Q, ee) {
  return charat(Q, 0) ^ 45 ? (((ee << 2 ^ charat(Q, 0)) << 2 ^ charat(Q, 1)) << 2 ^ charat(Q, 2)) << 2 ^ charat(Q, 3) : 0;
}
function trim$1(Q) {
  return Q.trim();
}
function match(Q, ee) {
  return (Q = ee.exec(Q)) ? Q[0] : Q;
}
function replace(Q, ee, ne) {
  return Q.replace(ee, ne);
}
function indexof(Q, ee) {
  return Q.indexOf(ee);
}
function charat(Q, ee) {
  return Q.charCodeAt(ee) | 0;
}
function substr(Q, ee, ne) {
  return Q.slice(ee, ne);
}
function strlen(Q) {
  return Q.length;
}
function sizeof(Q) {
  return Q.length;
}
function append(Q, ee) {
  return ee.push(Q), Q;
}
function combine(Q, ee) {
  return Q.map(ee).join("");
}
var line = 1, column = 1, length = 0, position$1 = 0, character = 0, characters = "";
function node(Q, ee, ne, ie, ae, ce, le) {
  return { value: Q, root: ee, parent: ne, type: ie, props: ae, children: ce, line, column, length: le, return: "" };
}
function copy(Q, ee) {
  return assign(node("", null, null, "", null, null, 0), Q, { length: -Q.length }, ee);
}
function char() {
  return character;
}
function prev() {
  return character = position$1 > 0 ? charat(characters, --position$1) : 0, column--, character === 10 && (column = 1, line--), character;
}
function next() {
  return character = position$1 < length ? charat(characters, position$1++) : 0, column++, character === 10 && (column = 1, line++), character;
}
function peek() {
  return charat(characters, position$1);
}
function caret() {
  return position$1;
}
function slice(Q, ee) {
  return substr(characters, Q, ee);
}
function token$1(Q) {
  switch (Q) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(Q) {
  return line = column = 1, length = strlen(characters = Q), position$1 = 0, [];
}
function dealloc(Q) {
  return characters = "", Q;
}
function delimit(Q) {
  return trim$1(slice(position$1 - 1, delimiter(Q === 91 ? Q + 2 : Q === 40 ? Q + 1 : Q)));
}
function whitespace(Q) {
  for (; (character = peek()) && character < 33; )
    next();
  return token$1(Q) > 2 || token$1(character) > 3 ? "" : " ";
}
function escaping(Q, ee) {
  for (; --ee && next() && !(character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97); )
    ;
  return slice(Q, caret() + (ee < 6 && peek() == 32 && next() == 32));
}
function delimiter(Q) {
  for (; next(); )
    switch (character) {
      case Q:
        return position$1;
      case 34:
      case 39:
        Q !== 34 && Q !== 39 && delimiter(character);
        break;
      case 40:
        Q === 41 && delimiter(Q);
        break;
      case 92:
        next();
        break;
    }
  return position$1;
}
function commenter(Q, ee) {
  for (; next() && Q + character !== 47 + 10; )
    if (Q + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(ee, position$1 - 1) + "*" + from(Q === 47 ? Q : next());
}
function identifier(Q) {
  for (; !token$1(peek()); )
    next();
  return slice(Q, position$1);
}
function compile(Q) {
  return dealloc(parse("", null, null, null, [""], Q = alloc(Q), 0, [0], Q));
}
function parse(Q, ee, ne, ie, ae, ce, le, de, ye) {
  for (var fe = 0, Be = 0, Ee = le, me = 0, ge = 0, we = 0, be = 1, Oe = 1, He = 1, Se = 0, Ge = "", Fe = ae, Pe = ce, Je = ie, tt = Ge; Oe; )
    switch (we = Se, Se = next()) {
      case 40:
        if (we != 108 && charat(tt, Ee - 1) == 58) {
          indexof(tt += replace(delimit(Se), "&", "&\f"), "&\f") != -1 && (He = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        tt += delimit(Se);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        tt += whitespace(we);
        break;
      case 92:
        tt += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), ee, ne), ye);
            break;
          default:
            tt += "/";
        }
        break;
      case 123 * be:
        de[fe++] = strlen(tt) * He;
      case 125 * be:
      case 59:
      case 0:
        switch (Se) {
          case 0:
          case 125:
            Oe = 0;
          case 59 + Be:
            ge > 0 && strlen(tt) - Ee && append(ge > 32 ? declaration(tt + ";", ie, ne, Ee - 1) : declaration(replace(tt, " ", "") + ";", ie, ne, Ee - 2), ye);
            break;
          case 59:
            tt += ";";
          default:
            if (append(Je = ruleset(tt, ee, ne, fe, Be, ae, de, Ge, Fe = [], Pe = [], Ee), ce), Se === 123)
              if (Be === 0)
                parse(tt, ee, Je, Je, Fe, ce, Ee, de, Pe);
              else
                switch (me === 99 && charat(tt, 3) === 110 ? 100 : me) {
                  case 100:
                  case 109:
                  case 115:
                    parse(Q, Je, Je, ie && append(ruleset(Q, Je, Je, 0, 0, ae, de, Ge, ae, Fe = [], Ee), Pe), ae, Pe, Ee, de, ie ? Fe : Pe);
                    break;
                  default:
                    parse(tt, Je, Je, Je, [""], Pe, 0, de, Pe);
                }
        }
        fe = Be = ge = 0, be = He = 1, Ge = tt = "", Ee = le;
        break;
      case 58:
        Ee = 1 + strlen(tt), ge = we;
      default:
        if (be < 1) {
          if (Se == 123)
            --be;
          else if (Se == 125 && be++ == 0 && prev() == 125)
            continue;
        }
        switch (tt += from(Se), Se * be) {
          case 38:
            He = Be > 0 ? 1 : (tt += "\f", -1);
            break;
          case 44:
            de[fe++] = (strlen(tt) - 1) * He, He = 1;
            break;
          case 64:
            peek() === 45 && (tt += delimit(next())), me = peek(), Be = Ee = strlen(Ge = tt += identifier(caret())), Se++;
            break;
          case 45:
            we === 45 && strlen(tt) == 2 && (be = 0);
        }
    }
  return ce;
}
function ruleset(Q, ee, ne, ie, ae, ce, le, de, ye, fe, Be) {
  for (var Ee = ae - 1, me = ae === 0 ? ce : [""], ge = sizeof(me), we = 0, be = 0, Oe = 0; we < ie; ++we)
    for (var He = 0, Se = substr(Q, Ee + 1, Ee = abs(be = le[we])), Ge = Q; He < ge; ++He)
      (Ge = trim$1(be > 0 ? me[He] + " " + Se : replace(Se, /&\f/g, me[He]))) && (ye[Oe++] = Ge);
  return node(Q, ee, ne, ae === 0 ? RULESET : de, ye, fe, Be);
}
function comment(Q, ee, ne) {
  return node(Q, ee, ne, COMMENT, from(char()), substr(Q, 2, -2), 0);
}
function declaration(Q, ee, ne, ie) {
  return node(Q, ee, ne, DECLARATION, substr(Q, 0, ie), substr(Q, ie + 1, -1), ie);
}
function serialize(Q, ee) {
  for (var ne = "", ie = sizeof(Q), ae = 0; ae < ie; ae++)
    ne += ee(Q[ae], ae, Q, ee) || "";
  return ne;
}
function stringify(Q, ee, ne, ie) {
  switch (Q.type) {
    case IMPORT:
    case DECLARATION:
      return Q.return = Q.return || Q.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return Q.return = Q.value + "{" + serialize(Q.children, ie) + "}";
    case RULESET:
      Q.value = Q.props.join(",");
  }
  return strlen(ne = serialize(Q.children, ie)) ? Q.return = Q.value + "{" + ne + "}" : "";
}
function middleware(Q) {
  var ee = sizeof(Q);
  return function(ne, ie, ae, ce) {
    for (var le = "", de = 0; de < ee; de++)
      le += Q[de](ne, ie, ae, ce) || "";
    return le;
  };
}
function rulesheet(Q) {
  return function(ee) {
    ee.root || (ee = ee.return) && Q(ee);
  };
}
var identifierWithPointTracking = function(ee, ne, ie) {
  for (var ae = 0, ce = 0; ae = ce, ce = peek(), ae === 38 && ce === 12 && (ne[ie] = 1), !token$1(ce); )
    next();
  return slice(ee, position$1);
}, toRules = function(ee, ne) {
  var ie = -1, ae = 44;
  do
    switch (token$1(ae)) {
      case 0:
        ae === 38 && peek() === 12 && (ne[ie] = 1), ee[ie] += identifierWithPointTracking(position$1 - 1, ne, ie);
        break;
      case 2:
        ee[ie] += delimit(ae);
        break;
      case 4:
        if (ae === 44) {
          ee[++ie] = peek() === 58 ? "&\f" : "", ne[ie] = ee[ie].length;
          break;
        }
      default:
        ee[ie] += from(ae);
    }
  while (ae = next());
  return ee;
}, getRules = function(ee, ne) {
  return dealloc(toRules(alloc(ee), ne));
}, fixedElements = /* @__PURE__ */ new WeakMap(), compat = function(ee) {
  if (!(ee.type !== "rule" || !ee.parent || ee.length < 1)) {
    for (var ne = ee.value, ie = ee.parent, ae = ee.column === ie.column && ee.line === ie.line; ie.type !== "rule"; )
      if (ie = ie.parent, !ie)
        return;
    if (!(ee.props.length === 1 && ne.charCodeAt(0) !== 58 && !fixedElements.get(ie)) && !ae) {
      fixedElements.set(ee, !0);
      for (var ce = [], le = getRules(ne, ce), de = ie.props, ye = 0, fe = 0; ye < le.length; ye++)
        for (var Be = 0; Be < de.length; Be++, fe++)
          ee.props[fe] = ce[ye] ? le[ye].replace(/&\f/g, de[Be]) : de[Be] + " " + le[ye];
    }
  }
}, removeLabel = function(ee) {
  if (ee.type === "decl") {
    var ne = ee.value;
    ne.charCodeAt(0) === 108 && ne.charCodeAt(2) === 98 && (ee.return = "", ee.value = "");
  }
}, ignoreFlag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason", isIgnoringComment = function(ee) {
  return ee.type === "comm" && ee.children.indexOf(ignoreFlag) > -1;
}, createUnsafeSelectorsAlarm = function(ee) {
  return function(ne, ie, ae) {
    if (!(ne.type !== "rule" || ee.compat)) {
      var ce = ne.value.match(/(:first|:nth|:nth-last)-child/g);
      if (ce) {
        for (var le = ne.parent === ae[0], de = le ? ae[0].children : ae, ye = de.length - 1; ye >= 0; ye--) {
          var fe = de[ye];
          if (fe.line < ne.line)
            break;
          if (fe.column < ne.column) {
            if (isIgnoringComment(fe))
              return;
            break;
          }
        }
        ce.forEach(function(Be) {
          console.error('The pseudo class "' + Be + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + Be.split("-child")[0] + '-of-type".');
        });
      }
    }
  };
}, isImportRule = function(ee) {
  return ee.type.charCodeAt(1) === 105 && ee.type.charCodeAt(0) === 64;
}, isPrependedWithRegularRules = function(ee, ne) {
  for (var ie = ee - 1; ie >= 0; ie--)
    if (!isImportRule(ne[ie]))
      return !0;
  return !1;
}, nullifyElement = function(ee) {
  ee.type = "", ee.value = "", ee.return = "", ee.children = "", ee.props = "";
}, incorrectImportAlarm = function(ee, ne, ie) {
  !isImportRule(ee) || (ee.parent ? (console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles."), nullifyElement(ee)) : isPrependedWithRegularRules(ne, ie) && (console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules."), nullifyElement(ee)));
};
function prefix(Q, ee) {
  switch (hash$2(Q, ee)) {
    case 5103:
      return WEBKIT + "print-" + Q + Q;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + Q + Q;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + Q + MOZ + Q + MS + Q + Q;
    case 6828:
    case 4268:
      return WEBKIT + Q + MS + Q + Q;
    case 6165:
      return WEBKIT + Q + MS + "flex-" + Q + Q;
    case 5187:
      return WEBKIT + Q + replace(Q, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + Q;
    case 5443:
      return WEBKIT + Q + MS + "flex-item-" + replace(Q, /flex-|-self/, "") + Q;
    case 4675:
      return WEBKIT + Q + MS + "flex-line-pack" + replace(Q, /align-content|flex-|-self/, "") + Q;
    case 5548:
      return WEBKIT + Q + MS + replace(Q, "shrink", "negative") + Q;
    case 5292:
      return WEBKIT + Q + MS + replace(Q, "basis", "preferred-size") + Q;
    case 6060:
      return WEBKIT + "box-" + replace(Q, "-grow", "") + WEBKIT + Q + MS + replace(Q, "grow", "positive") + Q;
    case 4554:
      return WEBKIT + replace(Q, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + Q;
    case 6187:
      return replace(replace(replace(Q, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), Q, "") + Q;
    case 5495:
    case 3959:
      return replace(Q, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(Q, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + Q + Q;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(Q, /(.+)-inline(.+)/, WEBKIT + "$1$2") + Q;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(Q) - 1 - ee > 6)
        switch (charat(Q, ee + 1)) {
          case 109:
            if (charat(Q, ee + 4) !== 45)
              break;
          case 102:
            return replace(Q, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(Q, ee + 3) == 108 ? "$3" : "$2-$3")) + Q;
          case 115:
            return ~indexof(Q, "stretch") ? prefix(replace(Q, "stretch", "fill-available"), ee) + Q : Q;
        }
      break;
    case 4949:
      if (charat(Q, ee + 1) !== 115)
        break;
    case 6444:
      switch (charat(Q, strlen(Q) - 3 - (~indexof(Q, "!important") && 10))) {
        case 107:
          return replace(Q, ":", ":" + WEBKIT) + Q;
        case 101:
          return replace(Q, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(Q, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + Q;
      }
      break;
    case 5936:
      switch (charat(Q, ee + 11)) {
        case 114:
          return WEBKIT + Q + MS + replace(Q, /[svh]\w+-[tblr]{2}/, "tb") + Q;
        case 108:
          return WEBKIT + Q + MS + replace(Q, /[svh]\w+-[tblr]{2}/, "tb-rl") + Q;
        case 45:
          return WEBKIT + Q + MS + replace(Q, /[svh]\w+-[tblr]{2}/, "lr") + Q;
      }
      return WEBKIT + Q + MS + Q + Q;
  }
  return Q;
}
var prefixer = function(ee, ne, ie, ae) {
  if (ee.length > -1 && !ee.return)
    switch (ee.type) {
      case DECLARATION:
        ee.return = prefix(ee.value, ee.length);
        break;
      case KEYFRAMES:
        return serialize([copy(ee, {
          value: replace(ee.value, "@", "@" + WEBKIT)
        })], ae);
      case RULESET:
        if (ee.length)
          return combine(ee.props, function(ce) {
            switch (match(ce, /(::plac\w+|:read-\w+)/)) {
              case ":read-only":
              case ":read-write":
                return serialize([copy(ee, {
                  props: [replace(ce, /:(read-\w+)/, ":" + MOZ + "$1")]
                })], ae);
              case "::placeholder":
                return serialize([copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, ":" + WEBKIT + "input-$1")]
                }), copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, ":" + MOZ + "$1")]
                }), copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, MS + "input-$1")]
                })], ae);
            }
            return "";
          });
    }
}, defaultStylisPlugins = [prefixer], createCache = function(ee) {
  var ne = ee.key;
  if (process.env.NODE_ENV !== "production" && !ne)
    throw new Error(`You have to configure \`key\` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.
If multiple caches share the same key they might "fight" for each other's style elements.`);
  if (ne === "css") {
    var ie = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(ie, function(be) {
      var Oe = be.getAttribute("data-emotion");
      Oe.indexOf(" ") !== -1 && (document.head.appendChild(be), be.setAttribute("data-s", ""));
    });
  }
  var ae = ee.stylisPlugins || defaultStylisPlugins;
  if (process.env.NODE_ENV !== "production" && /[^a-z-]/.test(ne))
    throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + ne + '" was passed');
  var ce = {}, le, de = [];
  le = ee.container || document.head, Array.prototype.forEach.call(
    document.querySelectorAll('style[data-emotion^="' + ne + ' "]'),
    function(be) {
      for (var Oe = be.getAttribute("data-emotion").split(" "), He = 1; He < Oe.length; He++)
        ce[Oe[He]] = !0;
      de.push(be);
    }
  );
  var ye, fe = [compat, removeLabel];
  process.env.NODE_ENV !== "production" && fe.push(createUnsafeSelectorsAlarm({
    get compat() {
      return we.compat;
    }
  }), incorrectImportAlarm);
  {
    var Be, Ee = [stringify, process.env.NODE_ENV !== "production" ? function(be) {
      be.root || (be.return ? Be.insert(be.return) : be.value && be.type !== COMMENT && Be.insert(be.value + "{}"));
    } : rulesheet(function(be) {
      Be.insert(be);
    })], me = middleware(fe.concat(ae, Ee)), ge = function(Oe) {
      return serialize(compile(Oe), me);
    };
    ye = function(Oe, He, Se, Ge) {
      Be = Se, process.env.NODE_ENV !== "production" && He.map !== void 0 && (Be = {
        insert: function(Pe) {
          Se.insert(Pe + He.map);
        }
      }), ge(Oe ? Oe + "{" + He.styles + "}" : He.styles), Ge && (we.inserted[He.name] = !0);
    };
  }
  var we = {
    key: ne,
    sheet: new StyleSheet$1({
      key: ne,
      container: le,
      nonce: ee.nonce,
      speedy: ee.speedy,
      prepend: ee.prepend,
      insertionPoint: ee.insertionPoint
    }),
    nonce: ee.nonce,
    inserted: ce,
    registered: {},
    insert: ye
  };
  return we.sheet.hydrate(de), we;
}, commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function getDefaultExportFromCjs(Q) {
  return Q && Q.__esModule && Object.prototype.hasOwnProperty.call(Q, "default") ? Q.default : Q;
}
function getAugmentedNamespace(Q) {
  var ee = Q.default;
  if (typeof ee == "function") {
    var ne = function() {
      return ee.apply(this, arguments);
    };
    ne.prototype = ee.prototype;
  } else
    ne = {};
  return Object.defineProperty(ne, "__esModule", { value: !0 }), Object.keys(Q).forEach(function(ie) {
    var ae = Object.getOwnPropertyDescriptor(Q, ie);
    Object.defineProperty(ne, ie, ae.get ? ae : {
      enumerable: !0,
      get: function() {
        return Q[ie];
      }
    });
  }), ne;
}
var reactIs$4 = { exports: {} }, reactIs_production_min$3 = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$3;
function requireReactIs_production_min$3() {
  if (hasRequiredReactIs_production_min$3)
    return reactIs_production_min$3;
  hasRequiredReactIs_production_min$3 = 1;
  var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, fe = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, we = Q ? Symbol.for("react.lazy") : 60116, be = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
  function Ge(Pe) {
    if (typeof Pe == "object" && Pe !== null) {
      var Je = Pe.$$typeof;
      switch (Je) {
        case ee:
          switch (Pe = Pe.type, Pe) {
            case ye:
            case fe:
            case ie:
            case ce:
            case ae:
            case Ee:
              return Pe;
            default:
              switch (Pe = Pe && Pe.$$typeof, Pe) {
                case de:
                case Be:
                case we:
                case ge:
                case le:
                  return Pe;
                default:
                  return Je;
              }
          }
        case ne:
          return Je;
      }
    }
  }
  function Fe(Pe) {
    return Ge(Pe) === fe;
  }
  return reactIs_production_min$3.AsyncMode = ye, reactIs_production_min$3.ConcurrentMode = fe, reactIs_production_min$3.ContextConsumer = de, reactIs_production_min$3.ContextProvider = le, reactIs_production_min$3.Element = ee, reactIs_production_min$3.ForwardRef = Be, reactIs_production_min$3.Fragment = ie, reactIs_production_min$3.Lazy = we, reactIs_production_min$3.Memo = ge, reactIs_production_min$3.Portal = ne, reactIs_production_min$3.Profiler = ce, reactIs_production_min$3.StrictMode = ae, reactIs_production_min$3.Suspense = Ee, reactIs_production_min$3.isAsyncMode = function(Pe) {
    return Fe(Pe) || Ge(Pe) === ye;
  }, reactIs_production_min$3.isConcurrentMode = Fe, reactIs_production_min$3.isContextConsumer = function(Pe) {
    return Ge(Pe) === de;
  }, reactIs_production_min$3.isContextProvider = function(Pe) {
    return Ge(Pe) === le;
  }, reactIs_production_min$3.isElement = function(Pe) {
    return typeof Pe == "object" && Pe !== null && Pe.$$typeof === ee;
  }, reactIs_production_min$3.isForwardRef = function(Pe) {
    return Ge(Pe) === Be;
  }, reactIs_production_min$3.isFragment = function(Pe) {
    return Ge(Pe) === ie;
  }, reactIs_production_min$3.isLazy = function(Pe) {
    return Ge(Pe) === we;
  }, reactIs_production_min$3.isMemo = function(Pe) {
    return Ge(Pe) === ge;
  }, reactIs_production_min$3.isPortal = function(Pe) {
    return Ge(Pe) === ne;
  }, reactIs_production_min$3.isProfiler = function(Pe) {
    return Ge(Pe) === ce;
  }, reactIs_production_min$3.isStrictMode = function(Pe) {
    return Ge(Pe) === ae;
  }, reactIs_production_min$3.isSuspense = function(Pe) {
    return Ge(Pe) === Ee;
  }, reactIs_production_min$3.isValidElementType = function(Pe) {
    return typeof Pe == "string" || typeof Pe == "function" || Pe === ie || Pe === fe || Pe === ce || Pe === ae || Pe === Ee || Pe === me || typeof Pe == "object" && Pe !== null && (Pe.$$typeof === we || Pe.$$typeof === ge || Pe.$$typeof === le || Pe.$$typeof === de || Pe.$$typeof === Be || Pe.$$typeof === Oe || Pe.$$typeof === He || Pe.$$typeof === Se || Pe.$$typeof === be);
  }, reactIs_production_min$3.typeOf = Ge, reactIs_production_min$3;
}
var reactIs_development$3 = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$3;
function requireReactIs_development$3() {
  return hasRequiredReactIs_development$3 || (hasRequiredReactIs_development$3 = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, fe = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, we = Q ? Symbol.for("react.lazy") : 60116, be = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
    function Ge($e) {
      return typeof $e == "string" || typeof $e == "function" || $e === ie || $e === fe || $e === ce || $e === ae || $e === Ee || $e === me || typeof $e == "object" && $e !== null && ($e.$$typeof === we || $e.$$typeof === ge || $e.$$typeof === le || $e.$$typeof === de || $e.$$typeof === Be || $e.$$typeof === Oe || $e.$$typeof === He || $e.$$typeof === Se || $e.$$typeof === be);
    }
    function Fe($e) {
      if (typeof $e == "object" && $e !== null) {
        var Bt = $e.$$typeof;
        switch (Bt) {
          case ee:
            var ct = $e.type;
            switch (ct) {
              case ye:
              case fe:
              case ie:
              case ce:
              case ae:
              case Ee:
                return ct;
              default:
                var je = ct && ct.$$typeof;
                switch (je) {
                  case de:
                  case Be:
                  case we:
                  case ge:
                  case le:
                    return je;
                  default:
                    return Bt;
                }
            }
          case ne:
            return Bt;
        }
      }
    }
    var Pe = ye, Je = fe, tt = de, ft = le, Tt = ee, Xe = Be, ht = ie, Qt = we, Gt = ge, pt = ne, xt = ce, Yt = ae, Jt = Ee, Ht = !1;
    function Lt($e) {
      return Ht || (Ht = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), Pt($e) || Fe($e) === ye;
    }
    function Pt($e) {
      return Fe($e) === fe;
    }
    function yt($e) {
      return Fe($e) === de;
    }
    function kt($e) {
      return Fe($e) === le;
    }
    function $t($e) {
      return typeof $e == "object" && $e !== null && $e.$$typeof === ee;
    }
    function Le($e) {
      return Fe($e) === Be;
    }
    function or($e) {
      return Fe($e) === ie;
    }
    function tr($e) {
      return Fe($e) === we;
    }
    function lr($e) {
      return Fe($e) === ge;
    }
    function gt($e) {
      return Fe($e) === ne;
    }
    function Ut($e) {
      return Fe($e) === ce;
    }
    function Ze($e) {
      return Fe($e) === ae;
    }
    function rt($e) {
      return Fe($e) === Ee;
    }
    reactIs_development$3.AsyncMode = Pe, reactIs_development$3.ConcurrentMode = Je, reactIs_development$3.ContextConsumer = tt, reactIs_development$3.ContextProvider = ft, reactIs_development$3.Element = Tt, reactIs_development$3.ForwardRef = Xe, reactIs_development$3.Fragment = ht, reactIs_development$3.Lazy = Qt, reactIs_development$3.Memo = Gt, reactIs_development$3.Portal = pt, reactIs_development$3.Profiler = xt, reactIs_development$3.StrictMode = Yt, reactIs_development$3.Suspense = Jt, reactIs_development$3.isAsyncMode = Lt, reactIs_development$3.isConcurrentMode = Pt, reactIs_development$3.isContextConsumer = yt, reactIs_development$3.isContextProvider = kt, reactIs_development$3.isElement = $t, reactIs_development$3.isForwardRef = Le, reactIs_development$3.isFragment = or, reactIs_development$3.isLazy = tr, reactIs_development$3.isMemo = lr, reactIs_development$3.isPortal = gt, reactIs_development$3.isProfiler = Ut, reactIs_development$3.isStrictMode = Ze, reactIs_development$3.isSuspense = rt, reactIs_development$3.isValidElementType = Ge, reactIs_development$3.typeOf = Fe;
  }()), reactIs_development$3;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReactIs_production_min$3() : Q.exports = requireReactIs_development$3();
})(reactIs$4);
var reactIs$3 = reactIs$4.exports, FORWARD_REF_STATICS = {
  $$typeof: !0,
  render: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0
}, MEMO_STATICS = {
  $$typeof: !0,
  compare: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0,
  type: !0
}, TYPE_STATICS$1 = {};
TYPE_STATICS$1[reactIs$3.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS$1[reactIs$3.Memo] = MEMO_STATICS;
var isBrowser$1 = !0;
function getRegisteredStyles(Q, ee, ne) {
  var ie = "";
  return ne.split(" ").forEach(function(ae) {
    Q[ae] !== void 0 ? ee.push(Q[ae] + ";") : ie += ae + " ";
  }), ie;
}
var registerStyles = function(ee, ne, ie) {
  var ae = ee.key + "-" + ne.name;
  (ie === !1 || isBrowser$1 === !1) && ee.registered[ae] === void 0 && (ee.registered[ae] = ne.styles);
}, insertStyles = function(ee, ne, ie) {
  registerStyles(ee, ne, ie);
  var ae = ee.key + "-" + ne.name;
  if (ee.inserted[ne.name] === void 0) {
    var ce = ne;
    do
      ee.insert(ne === ce ? "." + ae : "", ce, ee.sheet, !0), ce = ce.next;
    while (ce !== void 0);
  }
};
function murmur2(Q) {
  for (var ee = 0, ne, ie = 0, ae = Q.length; ae >= 4; ++ie, ae -= 4)
    ne = Q.charCodeAt(ie) & 255 | (Q.charCodeAt(++ie) & 255) << 8 | (Q.charCodeAt(++ie) & 255) << 16 | (Q.charCodeAt(++ie) & 255) << 24, ne = (ne & 65535) * 1540483477 + ((ne >>> 16) * 59797 << 16), ne ^= ne >>> 24, ee = (ne & 65535) * 1540483477 + ((ne >>> 16) * 59797 << 16) ^ (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16);
  switch (ae) {
    case 3:
      ee ^= (Q.charCodeAt(ie + 2) & 255) << 16;
    case 2:
      ee ^= (Q.charCodeAt(ie + 1) & 255) << 8;
    case 1:
      ee ^= Q.charCodeAt(ie) & 255, ee = (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16);
  }
  return ee ^= ee >>> 13, ee = (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16), ((ee ^ ee >>> 15) >>> 0).toString(36);
}
var unitlessKeys$1 = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, ILLEGAL_ESCAPE_SEQUENCE_ERROR$1 = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`, UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).", hyphenateRegex = /[A-Z]|^ms/g, animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g, isCustomProperty = function(ee) {
  return ee.charCodeAt(1) === 45;
}, isProcessableValue = function(ee) {
  return ee != null && typeof ee != "boolean";
}, processStyleName = /* @__PURE__ */ memoize$3(function(Q) {
  return isCustomProperty(Q) ? Q : Q.replace(hyphenateRegex, "-$&").toLowerCase();
}), processStyleValue = function(ee, ne) {
  switch (ee) {
    case "animation":
    case "animationName":
      if (typeof ne == "string")
        return ne.replace(animationRegex, function(ie, ae, ce) {
          return cursor = {
            name: ae,
            styles: ce,
            next: cursor
          }, ae;
        });
  }
  return unitlessKeys$1[ee] !== 1 && !isCustomProperty(ee) && typeof ne == "number" && ne !== 0 ? ne + "px" : ne;
};
if (process.env.NODE_ENV !== "production") {
  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/, contentValues = ["normal", "none", "initial", "inherit", "unset"], oldProcessStyleValue = processStyleValue, msPattern$1 = /^-ms-/, hyphenPattern = /-(.)/g, hyphenatedCache = {};
  processStyleValue = function(ee, ne) {
    if (ee === "content" && (typeof ne != "string" || contentValues.indexOf(ne) === -1 && !contentValuePattern.test(ne) && (ne.charAt(0) !== ne.charAt(ne.length - 1) || ne.charAt(0) !== '"' && ne.charAt(0) !== "'")))
      throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + ne + "\"'`");
    var ie = oldProcessStyleValue(ee, ne);
    return ie !== "" && !isCustomProperty(ee) && ee.indexOf("-") !== -1 && hyphenatedCache[ee] === void 0 && (hyphenatedCache[ee] = !0, console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + ee.replace(msPattern$1, "ms-").replace(hyphenPattern, function(ae, ce) {
      return ce.toUpperCase();
    }) + "?")), ie;
  };
}
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(Q, ee, ne) {
  if (ne == null)
    return "";
  if (ne.__emotion_styles !== void 0) {
    if (process.env.NODE_ENV !== "production" && ne.toString() === "NO_COMPONENT_SELECTOR")
      throw new Error(noComponentSelectorMessage);
    return ne;
  }
  switch (typeof ne) {
    case "boolean":
      return "";
    case "object": {
      if (ne.anim === 1)
        return cursor = {
          name: ne.name,
          styles: ne.styles,
          next: cursor
        }, ne.name;
      if (ne.styles !== void 0) {
        var ie = ne.next;
        if (ie !== void 0)
          for (; ie !== void 0; )
            cursor = {
              name: ie.name,
              styles: ie.styles,
              next: cursor
            }, ie = ie.next;
        var ae = ne.styles + ";";
        return process.env.NODE_ENV !== "production" && ne.map !== void 0 && (ae += ne.map), ae;
      }
      return createStringFromObject(Q, ee, ne);
    }
    case "function": {
      if (Q !== void 0) {
        var ce = cursor, le = ne(Q);
        return cursor = ce, handleInterpolation(Q, ee, le);
      } else
        process.env.NODE_ENV !== "production" && console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
      break;
    }
    case "string":
      if (process.env.NODE_ENV !== "production") {
        var de = [], ye = ne.replace(animationRegex, function(Be, Ee, me) {
          var ge = "animation" + de.length;
          return de.push("const " + ge + " = keyframes`" + me.replace(/^@keyframes animation-\w+/, "") + "`"), "${" + ge + "}";
        });
        de.length && console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(de, ["`" + ye + "`"]).join(`
`) + `

You should wrap it with \`css\` like this:

` + ("css`" + ye + "`"));
      }
      break;
  }
  if (ee == null)
    return ne;
  var fe = ee[ne];
  return fe !== void 0 ? fe : ne;
}
function createStringFromObject(Q, ee, ne) {
  var ie = "";
  if (Array.isArray(ne))
    for (var ae = 0; ae < ne.length; ae++)
      ie += handleInterpolation(Q, ee, ne[ae]) + ";";
  else
    for (var ce in ne) {
      var le = ne[ce];
      if (typeof le != "object")
        ee != null && ee[le] !== void 0 ? ie += ce + "{" + ee[le] + "}" : isProcessableValue(le) && (ie += processStyleName(ce) + ":" + processStyleValue(ce, le) + ";");
      else {
        if (ce === "NO_COMPONENT_SELECTOR" && process.env.NODE_ENV !== "production")
          throw new Error(noComponentSelectorMessage);
        if (Array.isArray(le) && typeof le[0] == "string" && (ee == null || ee[le[0]] === void 0))
          for (var de = 0; de < le.length; de++)
            isProcessableValue(le[de]) && (ie += processStyleName(ce) + ":" + processStyleValue(ce, le[de]) + ";");
        else {
          var ye = handleInterpolation(Q, ee, le);
          switch (ce) {
            case "animation":
            case "animationName": {
              ie += processStyleName(ce) + ":" + ye + ";";
              break;
            }
            default:
              process.env.NODE_ENV !== "production" && ce === "undefined" && console.error(UNDEFINED_AS_OBJECT_KEY_ERROR), ie += ce + "{" + ye + "}";
          }
        }
      }
    }
  return ie;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g, sourceMapPattern;
process.env.NODE_ENV !== "production" && (sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g);
var cursor, serializeStyles = function(ee, ne, ie) {
  if (ee.length === 1 && typeof ee[0] == "object" && ee[0] !== null && ee[0].styles !== void 0)
    return ee[0];
  var ae = !0, ce = "";
  cursor = void 0;
  var le = ee[0];
  le == null || le.raw === void 0 ? (ae = !1, ce += handleInterpolation(ie, ne, le)) : (process.env.NODE_ENV !== "production" && le[0] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1), ce += le[0]);
  for (var de = 1; de < ee.length; de++)
    ce += handleInterpolation(ie, ne, ee[de]), ae && (process.env.NODE_ENV !== "production" && le[de] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1), ce += le[de]);
  var ye;
  process.env.NODE_ENV !== "production" && (ce = ce.replace(sourceMapPattern, function(me) {
    return ye = me, "";
  })), labelPattern.lastIndex = 0;
  for (var fe = "", Be; (Be = labelPattern.exec(ce)) !== null; )
    fe += "-" + Be[1];
  var Ee = murmur2(ce) + fe;
  return process.env.NODE_ENV !== "production" ? {
    name: Ee,
    styles: ce,
    map: ye,
    next: cursor,
    toString: function() {
      return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
    }
  } : {
    name: Ee,
    styles: ce,
    next: cursor
  };
}, syncFallback = function(ee) {
  return ee();
}, useInsertionEffect = React["useInsertionEffect"] ? React["useInsertionEffect"] : !1, useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback, useInsertionEffectWithLayoutFallback = useInsertionEffect || useLayoutEffect, hasOwnProperty = {}.hasOwnProperty, EmotionCacheContext = /* @__PURE__ */ createContext(
  typeof HTMLElement < "u" ? /* @__PURE__ */ createCache({
    key: "css"
  }) : null
);
process.env.NODE_ENV !== "production" && (EmotionCacheContext.displayName = "EmotionCacheContext");
EmotionCacheContext.Provider;
var withEmotionCache = function(ee) {
  return /* @__PURE__ */ forwardRef(function(ne, ie) {
    var ae = useContext(EmotionCacheContext);
    return ee(ne, ae, ie);
  });
}, ThemeContext$3 = /* @__PURE__ */ createContext({});
process.env.NODE_ENV !== "production" && (ThemeContext$3.displayName = "EmotionThemeContext");
var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__", Insertion$2 = function(ee) {
  var ne = ee.cache, ie = ee.serialized, ae = ee.isStringTag;
  return registerStyles(ne, ie, ae), useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(ne, ie, ae);
  }), null;
}, Emotion = /* @__PURE__ */ withEmotionCache(function(Q, ee, ne) {
  var ie = Q.css;
  typeof ie == "string" && ee.registered[ie] !== void 0 && (ie = ee.registered[ie]);
  var ae = Q[typePropName], ce = [ie], le = "";
  typeof Q.className == "string" ? le = getRegisteredStyles(ee.registered, ce, Q.className) : Q.className != null && (le = Q.className + " ");
  var de = serializeStyles(ce, void 0, useContext(ThemeContext$3));
  if (process.env.NODE_ENV !== "production" && de.name.indexOf("-") === -1) {
    var ye = Q[labelPropName];
    ye && (de = serializeStyles([de, "label:" + ye + ";"]));
  }
  le += ee.key + "-" + de.name;
  var fe = {};
  for (var Be in Q)
    hasOwnProperty.call(Q, Be) && Be !== "css" && Be !== typePropName && (process.env.NODE_ENV === "production" || Be !== labelPropName) && (fe[Be] = Q[Be]);
  return fe.ref = ne, fe.className = le, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion$2, {
    cache: ee,
    serialized: de,
    isStringTag: typeof ae == "string"
  }), /* @__PURE__ */ createElement(ae, fe));
});
process.env.NODE_ENV !== "production" && (Emotion.displayName = "EmotionCssPropInternal");
var pkg = {
  name: "@emotion/react",
  version: "11.10.5",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  exports: {
    ".": {
      module: {
        worker: "./dist/emotion-react.worker.esm.js",
        browser: "./dist/emotion-react.browser.esm.js",
        default: "./dist/emotion-react.esm.js"
      },
      default: "./dist/emotion-react.cjs.js"
    },
    "./jsx-runtime": {
      module: {
        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
        default: "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
      },
      default: "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
    },
    "./_isolated-hnrs": {
      module: {
        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
        default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
      },
      default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
    },
    "./jsx-dev-runtime": {
      module: {
        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
        default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
      },
      default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
    },
    "./package.json": "./package.json",
    "./types/css-prop": "./types/css-prop.d.ts",
    "./macro": "./macro.js"
  },
  types: "types/index.d.ts",
  files: [
    "src",
    "dist",
    "jsx-runtime",
    "jsx-dev-runtime",
    "_isolated-hnrs",
    "types/*.d.ts",
    "macro.js",
    "macro.d.ts",
    "macro.js.flow"
  ],
  sideEffects: !1,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.18.3",
    "@emotion/babel-plugin": "^11.10.5",
    "@emotion/cache": "^11.10.5",
    "@emotion/serialize": "^1.1.1",
    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.0",
    "@emotion/utils": "^1.2.0",
    "@emotion/weak-memoize": "^0.3.0",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    "@babel/core": "^7.0.0",
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@babel/core": {
      optional: !0
    },
    "@types/react": {
      optional: !0
    }
  },
  devDependencies: {
    "@babel/core": "^7.18.5",
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.10.5",
    "@emotion/css-prettifier": "1.1.1",
    "@emotion/server": "11.10.0",
    "@emotion/styled": "11.10.5",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^4.5.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: [
      "./index.js",
      "./jsx-runtime.js",
      "./jsx-dev-runtime.js",
      "./_isolated-hnrs.js"
    ],
    umdName: "emotionReact",
    exports: {
      envConditions: [
        "browser",
        "worker"
      ],
      extra: {
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": "./macro.js"
      }
    }
  }
}, warnedAboutCssPropForGlobal = !1, Global = /* @__PURE__ */ withEmotionCache(function(Q, ee) {
  process.env.NODE_ENV !== "production" && !warnedAboutCssPropForGlobal && (Q.className || Q.css) && (console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?"), warnedAboutCssPropForGlobal = !0);
  var ne = Q.styles, ie = serializeStyles([ne], void 0, useContext(ThemeContext$3)), ae = useRef();
  return useInsertionEffectWithLayoutFallback(function() {
    var ce = ee.key + "-global", le = new ee.sheet.constructor({
      key: ce,
      nonce: ee.sheet.nonce,
      container: ee.sheet.container,
      speedy: ee.sheet.isSpeedy
    }), de = !1, ye = document.querySelector('style[data-emotion="' + ce + " " + ie.name + '"]');
    return ee.sheet.tags.length && (le.before = ee.sheet.tags[0]), ye !== null && (de = !0, ye.setAttribute("data-emotion", ce), le.hydrate([ye])), ae.current = [le, de], function() {
      le.flush();
    };
  }, [ee]), useInsertionEffectWithLayoutFallback(function() {
    var ce = ae.current, le = ce[0], de = ce[1];
    if (de) {
      ce[1] = !1;
      return;
    }
    if (ie.next !== void 0 && insertStyles(ee, ie.next, !0), le.tags.length) {
      var ye = le.tags[le.tags.length - 1].nextElementSibling;
      le.before = ye, le.flush();
    }
    ee.insert("", ie, le, !1);
  }, [ee, ie.name]), null;
});
process.env.NODE_ENV !== "production" && (Global.displayName = "EmotionGlobal");
function css$1() {
  for (var Q = arguments.length, ee = new Array(Q), ne = 0; ne < Q; ne++)
    ee[ne] = arguments[ne];
  return serializeStyles(ee);
}
var keyframes = function() {
  var ee = css$1.apply(void 0, arguments), ne = "animation-" + ee.name;
  return {
    name: ne,
    styles: "@keyframes " + ne + "{" + ee.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}, classnames$2 = function Q(ee) {
  for (var ne = ee.length, ie = 0, ae = ""; ie < ne; ie++) {
    var ce = ee[ie];
    if (ce != null) {
      var le = void 0;
      switch (typeof ce) {
        case "boolean":
          break;
        case "object": {
          if (Array.isArray(ce))
            le = Q(ce);
          else {
            process.env.NODE_ENV !== "production" && ce.styles !== void 0 && ce.name !== void 0 && console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component."), le = "";
            for (var de in ce)
              ce[de] && de && (le && (le += " "), le += de);
          }
          break;
        }
        default:
          le = ce;
      }
      le && (ae && (ae += " "), ae += le);
    }
  }
  return ae;
};
function merge$3(Q, ee, ne) {
  var ie = [], ae = getRegisteredStyles(Q, ie, ne);
  return ie.length < 2 ? ne : ae + ee(ie);
}
var Insertion$1 = function(ee) {
  var ne = ee.cache, ie = ee.serializedArr;
  return useInsertionEffectAlwaysWithSyncFallback(function() {
    for (var ae = 0; ae < ie.length; ae++)
      insertStyles(ne, ie[ae], !1);
  }), null;
}, ClassNames = /* @__PURE__ */ withEmotionCache(function(Q, ee) {
  var ne = !1, ie = [], ae = function() {
    if (ne && process.env.NODE_ENV !== "production")
      throw new Error("css can only be used during render");
    for (var fe = arguments.length, Be = new Array(fe), Ee = 0; Ee < fe; Ee++)
      Be[Ee] = arguments[Ee];
    var me = serializeStyles(Be, ee.registered);
    return ie.push(me), registerStyles(ee, me, !1), ee.key + "-" + me.name;
  }, ce = function() {
    if (ne && process.env.NODE_ENV !== "production")
      throw new Error("cx can only be used during render");
    for (var fe = arguments.length, Be = new Array(fe), Ee = 0; Ee < fe; Ee++)
      Be[Ee] = arguments[Ee];
    return merge$3(ee.registered, ae, classnames$2(Be));
  }, le = {
    css: ae,
    cx: ce,
    theme: useContext(ThemeContext$3)
  }, de = Q.children(le);
  return ne = !0, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion$1, {
    cache: ee,
    serializedArr: ie
  }), de);
});
process.env.NODE_ENV !== "production" && (ClassNames.displayName = "EmotionClassNames");
if (process.env.NODE_ENV !== "production") {
  var isBrowser = !0, isTestEnv = typeof jest < "u" || typeof vi < "u";
  if (isBrowser && !isTestEnv) {
    var globalContext = typeof globalThis < "u" ? globalThis : isBrowser ? window : global, globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";
    globalContext[globalKey] && console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used."), globalContext[globalKey] = !0;
  }
}
var testOmitPropsOnStringTag = isPropValid, testOmitPropsOnComponent = function(ee) {
  return ee !== "theme";
}, getDefaultShouldForwardProp = function(ee) {
  return typeof ee == "string" && ee.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
}, composeShouldForwardProps = function(ee, ne, ie) {
  var ae;
  if (ne) {
    var ce = ne.shouldForwardProp;
    ae = ee.__emotion_forwardProp && ce ? function(le) {
      return ee.__emotion_forwardProp(le) && ce(le);
    } : ce;
  }
  return typeof ae != "function" && ie && (ae = ee.__emotion_forwardProp), ae;
}, ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`, Insertion = function(ee) {
  var ne = ee.cache, ie = ee.serialized, ae = ee.isStringTag;
  return registerStyles(ne, ie, ae), useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(ne, ie, ae);
  }), null;
}, createStyled$1 = function Q(ee, ne) {
  if (process.env.NODE_ENV !== "production" && ee === void 0)
    throw new Error(`You are trying to create a styled element with an undefined component.
You may have forgotten to import it.`);
  var ie = ee.__emotion_real === ee, ae = ie && ee.__emotion_base || ee, ce, le;
  ne !== void 0 && (ce = ne.label, le = ne.target);
  var de = composeShouldForwardProps(ee, ne, ie), ye = de || getDefaultShouldForwardProp(ae), fe = !ye("as");
  return function() {
    var Be = arguments, Ee = ie && ee.__emotion_styles !== void 0 ? ee.__emotion_styles.slice(0) : [];
    if (ce !== void 0 && Ee.push("label:" + ce + ";"), Be[0] == null || Be[0].raw === void 0)
      Ee.push.apply(Ee, Be);
    else {
      process.env.NODE_ENV !== "production" && Be[0][0] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR), Ee.push(Be[0][0]);
      for (var me = Be.length, ge = 1; ge < me; ge++)
        process.env.NODE_ENV !== "production" && Be[0][ge] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR), Ee.push(Be[ge], Be[0][ge]);
    }
    var we = withEmotionCache(function(be, Oe, He) {
      var Se = fe && be.as || ae, Ge = "", Fe = [], Pe = be;
      if (be.theme == null) {
        Pe = {};
        for (var Je in be)
          Pe[Je] = be[Je];
        Pe.theme = useContext(ThemeContext$3);
      }
      typeof be.className == "string" ? Ge = getRegisteredStyles(Oe.registered, Fe, be.className) : be.className != null && (Ge = be.className + " ");
      var tt = serializeStyles(Ee.concat(Fe), Oe.registered, Pe);
      Ge += Oe.key + "-" + tt.name, le !== void 0 && (Ge += " " + le);
      var ft = fe && de === void 0 ? getDefaultShouldForwardProp(Se) : ye, Tt = {};
      for (var Xe in be)
        fe && Xe === "as" || ft(Xe) && (Tt[Xe] = be[Xe]);
      return Tt.className = Ge, Tt.ref = He, /* @__PURE__ */ createElement(Fragment$1, null, /* @__PURE__ */ createElement(Insertion, {
        cache: Oe,
        serialized: tt,
        isStringTag: typeof Se == "string"
      }), /* @__PURE__ */ createElement(Se, Tt));
    });
    return we.displayName = ce !== void 0 ? ce : "Styled(" + (typeof ae == "string" ? ae : ae.displayName || ae.name || "Component") + ")", we.defaultProps = ee.defaultProps, we.__emotion_real = we, we.__emotion_base = ae, we.__emotion_styles = Ee, we.__emotion_forwardProp = de, Object.defineProperty(we, "toString", {
      value: function() {
        return le === void 0 && process.env.NODE_ENV !== "production" ? "NO_COMPONENT_SELECTOR" : "." + le;
      }
    }), we.withComponent = function(be, Oe) {
      return Q(be, _extends$1({}, ne, Oe, {
        shouldForwardProp: composeShouldForwardProps(we, Oe, !0)
      })).apply(void 0, Ee);
    }, we;
  };
}, tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], newStyled = createStyled$1.bind();
tags.forEach(function(Q) {
  newStyled[Q] = newStyled(Q);
});
const emStyled = newStyled;
var propTypes = { exports: {} }, reactIs$2 = { exports: {} }, reactIs_production_min$2 = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$2;
function requireReactIs_production_min$2() {
  if (hasRequiredReactIs_production_min$2)
    return reactIs_production_min$2;
  hasRequiredReactIs_production_min$2 = 1;
  var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, fe = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, we = Q ? Symbol.for("react.lazy") : 60116, be = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
  function Ge(Pe) {
    if (typeof Pe == "object" && Pe !== null) {
      var Je = Pe.$$typeof;
      switch (Je) {
        case ee:
          switch (Pe = Pe.type, Pe) {
            case ye:
            case fe:
            case ie:
            case ce:
            case ae:
            case Ee:
              return Pe;
            default:
              switch (Pe = Pe && Pe.$$typeof, Pe) {
                case de:
                case Be:
                case we:
                case ge:
                case le:
                  return Pe;
                default:
                  return Je;
              }
          }
        case ne:
          return Je;
      }
    }
  }
  function Fe(Pe) {
    return Ge(Pe) === fe;
  }
  return reactIs_production_min$2.AsyncMode = ye, reactIs_production_min$2.ConcurrentMode = fe, reactIs_production_min$2.ContextConsumer = de, reactIs_production_min$2.ContextProvider = le, reactIs_production_min$2.Element = ee, reactIs_production_min$2.ForwardRef = Be, reactIs_production_min$2.Fragment = ie, reactIs_production_min$2.Lazy = we, reactIs_production_min$2.Memo = ge, reactIs_production_min$2.Portal = ne, reactIs_production_min$2.Profiler = ce, reactIs_production_min$2.StrictMode = ae, reactIs_production_min$2.Suspense = Ee, reactIs_production_min$2.isAsyncMode = function(Pe) {
    return Fe(Pe) || Ge(Pe) === ye;
  }, reactIs_production_min$2.isConcurrentMode = Fe, reactIs_production_min$2.isContextConsumer = function(Pe) {
    return Ge(Pe) === de;
  }, reactIs_production_min$2.isContextProvider = function(Pe) {
    return Ge(Pe) === le;
  }, reactIs_production_min$2.isElement = function(Pe) {
    return typeof Pe == "object" && Pe !== null && Pe.$$typeof === ee;
  }, reactIs_production_min$2.isForwardRef = function(Pe) {
    return Ge(Pe) === Be;
  }, reactIs_production_min$2.isFragment = function(Pe) {
    return Ge(Pe) === ie;
  }, reactIs_production_min$2.isLazy = function(Pe) {
    return Ge(Pe) === we;
  }, reactIs_production_min$2.isMemo = function(Pe) {
    return Ge(Pe) === ge;
  }, reactIs_production_min$2.isPortal = function(Pe) {
    return Ge(Pe) === ne;
  }, reactIs_production_min$2.isProfiler = function(Pe) {
    return Ge(Pe) === ce;
  }, reactIs_production_min$2.isStrictMode = function(Pe) {
    return Ge(Pe) === ae;
  }, reactIs_production_min$2.isSuspense = function(Pe) {
    return Ge(Pe) === Ee;
  }, reactIs_production_min$2.isValidElementType = function(Pe) {
    return typeof Pe == "string" || typeof Pe == "function" || Pe === ie || Pe === fe || Pe === ce || Pe === ae || Pe === Ee || Pe === me || typeof Pe == "object" && Pe !== null && (Pe.$$typeof === we || Pe.$$typeof === ge || Pe.$$typeof === le || Pe.$$typeof === de || Pe.$$typeof === Be || Pe.$$typeof === Oe || Pe.$$typeof === He || Pe.$$typeof === Se || Pe.$$typeof === be);
  }, reactIs_production_min$2.typeOf = Ge, reactIs_production_min$2;
}
var reactIs_development$2 = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$2;
function requireReactIs_development$2() {
  return hasRequiredReactIs_development$2 || (hasRequiredReactIs_development$2 = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, fe = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, we = Q ? Symbol.for("react.lazy") : 60116, be = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
    function Ge($e) {
      return typeof $e == "string" || typeof $e == "function" || $e === ie || $e === fe || $e === ce || $e === ae || $e === Ee || $e === me || typeof $e == "object" && $e !== null && ($e.$$typeof === we || $e.$$typeof === ge || $e.$$typeof === le || $e.$$typeof === de || $e.$$typeof === Be || $e.$$typeof === Oe || $e.$$typeof === He || $e.$$typeof === Se || $e.$$typeof === be);
    }
    function Fe($e) {
      if (typeof $e == "object" && $e !== null) {
        var Bt = $e.$$typeof;
        switch (Bt) {
          case ee:
            var ct = $e.type;
            switch (ct) {
              case ye:
              case fe:
              case ie:
              case ce:
              case ae:
              case Ee:
                return ct;
              default:
                var je = ct && ct.$$typeof;
                switch (je) {
                  case de:
                  case Be:
                  case we:
                  case ge:
                  case le:
                    return je;
                  default:
                    return Bt;
                }
            }
          case ne:
            return Bt;
        }
      }
    }
    var Pe = ye, Je = fe, tt = de, ft = le, Tt = ee, Xe = Be, ht = ie, Qt = we, Gt = ge, pt = ne, xt = ce, Yt = ae, Jt = Ee, Ht = !1;
    function Lt($e) {
      return Ht || (Ht = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), Pt($e) || Fe($e) === ye;
    }
    function Pt($e) {
      return Fe($e) === fe;
    }
    function yt($e) {
      return Fe($e) === de;
    }
    function kt($e) {
      return Fe($e) === le;
    }
    function $t($e) {
      return typeof $e == "object" && $e !== null && $e.$$typeof === ee;
    }
    function Le($e) {
      return Fe($e) === Be;
    }
    function or($e) {
      return Fe($e) === ie;
    }
    function tr($e) {
      return Fe($e) === we;
    }
    function lr($e) {
      return Fe($e) === ge;
    }
    function gt($e) {
      return Fe($e) === ne;
    }
    function Ut($e) {
      return Fe($e) === ce;
    }
    function Ze($e) {
      return Fe($e) === ae;
    }
    function rt($e) {
      return Fe($e) === Ee;
    }
    reactIs_development$2.AsyncMode = Pe, reactIs_development$2.ConcurrentMode = Je, reactIs_development$2.ContextConsumer = tt, reactIs_development$2.ContextProvider = ft, reactIs_development$2.Element = Tt, reactIs_development$2.ForwardRef = Xe, reactIs_development$2.Fragment = ht, reactIs_development$2.Lazy = Qt, reactIs_development$2.Memo = Gt, reactIs_development$2.Portal = pt, reactIs_development$2.Profiler = xt, reactIs_development$2.StrictMode = Yt, reactIs_development$2.Suspense = Jt, reactIs_development$2.isAsyncMode = Lt, reactIs_development$2.isConcurrentMode = Pt, reactIs_development$2.isContextConsumer = yt, reactIs_development$2.isContextProvider = kt, reactIs_development$2.isElement = $t, reactIs_development$2.isForwardRef = Le, reactIs_development$2.isFragment = or, reactIs_development$2.isLazy = tr, reactIs_development$2.isMemo = lr, reactIs_development$2.isPortal = gt, reactIs_development$2.isProfiler = Ut, reactIs_development$2.isStrictMode = Ze, reactIs_development$2.isSuspense = rt, reactIs_development$2.isValidElementType = Ge, reactIs_development$2.typeOf = Fe;
  }()), reactIs_development$2;
}
var hasRequiredReactIs;
function requireReactIs() {
  return hasRequiredReactIs || (hasRequiredReactIs = 1, function(Q) {
    process.env.NODE_ENV === "production" ? Q.exports = requireReactIs_production_min$2() : Q.exports = requireReactIs_development$2();
  }(reactIs$2)), reactIs$2.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var objectAssign, hasRequiredObjectAssign;
function requireObjectAssign() {
  if (hasRequiredObjectAssign)
    return objectAssign;
  hasRequiredObjectAssign = 1;
  var Q = Object.getOwnPropertySymbols, ee = Object.prototype.hasOwnProperty, ne = Object.prototype.propertyIsEnumerable;
  function ie(ce) {
    if (ce == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(ce);
  }
  function ae() {
    try {
      if (!Object.assign)
        return !1;
      var ce = new String("abc");
      if (ce[5] = "de", Object.getOwnPropertyNames(ce)[0] === "5")
        return !1;
      for (var le = {}, de = 0; de < 10; de++)
        le["_" + String.fromCharCode(de)] = de;
      var ye = Object.getOwnPropertyNames(le).map(function(Be) {
        return le[Be];
      });
      if (ye.join("") !== "0123456789")
        return !1;
      var fe = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(Be) {
        fe[Be] = Be;
      }), Object.keys(Object.assign({}, fe)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return objectAssign = ae() ? Object.assign : function(ce, le) {
    for (var de, ye = ie(ce), fe, Be = 1; Be < arguments.length; Be++) {
      de = Object(arguments[Be]);
      for (var Ee in de)
        ee.call(de, Ee) && (ye[Ee] = de[Ee]);
      if (Q) {
        fe = Q(de);
        for (var me = 0; me < fe.length; me++)
          ne.call(de, fe[me]) && (ye[fe[me]] = de[fe[me]]);
      }
    }
    return ye;
  }, objectAssign;
}
var ReactPropTypesSecret_1, hasRequiredReactPropTypesSecret;
function requireReactPropTypesSecret() {
  if (hasRequiredReactPropTypesSecret)
    return ReactPropTypesSecret_1;
  hasRequiredReactPropTypesSecret = 1;
  var Q = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return ReactPropTypesSecret_1 = Q, ReactPropTypesSecret_1;
}
var has, hasRequiredHas;
function requireHas() {
  return hasRequiredHas || (hasRequiredHas = 1, has = Function.call.bind(Object.prototype.hasOwnProperty)), has;
}
var checkPropTypes_1, hasRequiredCheckPropTypes;
function requireCheckPropTypes() {
  if (hasRequiredCheckPropTypes)
    return checkPropTypes_1;
  hasRequiredCheckPropTypes = 1;
  var Q = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var ee = requireReactPropTypesSecret(), ne = {}, ie = requireHas();
    Q = function(ce) {
      var le = "Warning: " + ce;
      typeof console < "u" && console.error(le);
      try {
        throw new Error(le);
      } catch {
      }
    };
  }
  function ae(ce, le, de, ye, fe) {
    if (process.env.NODE_ENV !== "production") {
      for (var Be in ce)
        if (ie(ce, Be)) {
          var Ee;
          try {
            if (typeof ce[Be] != "function") {
              var me = Error(
                (ye || "React class") + ": " + de + " type `" + Be + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ce[Be] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw me.name = "Invariant Violation", me;
            }
            Ee = ce[Be](le, Be, ye, de, null, ee);
          } catch (we) {
            Ee = we;
          }
          if (Ee && !(Ee instanceof Error) && Q(
            (ye || "React class") + ": type specification of " + de + " `" + Be + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof Ee + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), Ee instanceof Error && !(Ee.message in ne)) {
            ne[Ee.message] = !0;
            var ge = fe ? fe() : "";
            Q(
              "Failed " + de + " type: " + Ee.message + (ge != null ? ge : "")
            );
          }
        }
    }
  }
  return ae.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (ne = {});
  }, checkPropTypes_1 = ae, checkPropTypes_1;
}
var factoryWithTypeCheckers, hasRequiredFactoryWithTypeCheckers;
function requireFactoryWithTypeCheckers() {
  if (hasRequiredFactoryWithTypeCheckers)
    return factoryWithTypeCheckers;
  hasRequiredFactoryWithTypeCheckers = 1;
  var Q = requireReactIs(), ee = requireObjectAssign(), ne = requireReactPropTypesSecret(), ie = requireHas(), ae = requireCheckPropTypes(), ce = function() {
  };
  process.env.NODE_ENV !== "production" && (ce = function(de) {
    var ye = "Warning: " + de;
    typeof console < "u" && console.error(ye);
    try {
      throw new Error(ye);
    } catch {
    }
  });
  function le() {
    return null;
  }
  return factoryWithTypeCheckers = function(de, ye) {
    var fe = typeof Symbol == "function" && Symbol.iterator, Be = "@@iterator";
    function Ee(Pt) {
      var yt = Pt && (fe && Pt[fe] || Pt[Be]);
      if (typeof yt == "function")
        return yt;
    }
    var me = "<<anonymous>>", ge = {
      array: He("array"),
      bigint: He("bigint"),
      bool: He("boolean"),
      func: He("function"),
      number: He("number"),
      object: He("object"),
      string: He("string"),
      symbol: He("symbol"),
      any: Se(),
      arrayOf: Ge,
      element: Fe(),
      elementType: Pe(),
      instanceOf: Je,
      node: Xe(),
      objectOf: ft,
      oneOf: tt,
      oneOfType: Tt,
      shape: Qt,
      exact: Gt
    };
    function we(Pt, yt) {
      return Pt === yt ? Pt !== 0 || 1 / Pt === 1 / yt : Pt !== Pt && yt !== yt;
    }
    function be(Pt, yt) {
      this.message = Pt, this.data = yt && typeof yt == "object" ? yt : {}, this.stack = "";
    }
    be.prototype = Error.prototype;
    function Oe(Pt) {
      if (process.env.NODE_ENV !== "production")
        var yt = {}, kt = 0;
      function $t(or, tr, lr, gt, Ut, Ze, rt) {
        if (gt = gt || me, Ze = Ze || lr, rt !== ne) {
          if (ye) {
            var $e = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw $e.name = "Invariant Violation", $e;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var Bt = gt + ":" + lr;
            !yt[Bt] && kt < 3 && (ce(
              "You are manually calling a React.PropTypes validation function for the `" + Ze + "` prop on `" + gt + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), yt[Bt] = !0, kt++);
          }
        }
        return tr[lr] == null ? or ? tr[lr] === null ? new be("The " + Ut + " `" + Ze + "` is marked as required " + ("in `" + gt + "`, but its value is `null`.")) : new be("The " + Ut + " `" + Ze + "` is marked as required in " + ("`" + gt + "`, but its value is `undefined`.")) : null : Pt(tr, lr, gt, Ut, Ze);
      }
      var Le = $t.bind(null, !1);
      return Le.isRequired = $t.bind(null, !0), Le;
    }
    function He(Pt) {
      function yt(kt, $t, Le, or, tr, lr) {
        var gt = kt[$t], Ut = Yt(gt);
        if (Ut !== Pt) {
          var Ze = Jt(gt);
          return new be(
            "Invalid " + or + " `" + tr + "` of type " + ("`" + Ze + "` supplied to `" + Le + "`, expected ") + ("`" + Pt + "`."),
            { expectedType: Pt }
          );
        }
        return null;
      }
      return Oe(yt);
    }
    function Se() {
      return Oe(le);
    }
    function Ge(Pt) {
      function yt(kt, $t, Le, or, tr) {
        if (typeof Pt != "function")
          return new be("Property `" + tr + "` of component `" + Le + "` has invalid PropType notation inside arrayOf.");
        var lr = kt[$t];
        if (!Array.isArray(lr)) {
          var gt = Yt(lr);
          return new be("Invalid " + or + " `" + tr + "` of type " + ("`" + gt + "` supplied to `" + Le + "`, expected an array."));
        }
        for (var Ut = 0; Ut < lr.length; Ut++) {
          var Ze = Pt(lr, Ut, Le, or, tr + "[" + Ut + "]", ne);
          if (Ze instanceof Error)
            return Ze;
        }
        return null;
      }
      return Oe(yt);
    }
    function Fe() {
      function Pt(yt, kt, $t, Le, or) {
        var tr = yt[kt];
        if (!de(tr)) {
          var lr = Yt(tr);
          return new be("Invalid " + Le + " `" + or + "` of type " + ("`" + lr + "` supplied to `" + $t + "`, expected a single ReactElement."));
        }
        return null;
      }
      return Oe(Pt);
    }
    function Pe() {
      function Pt(yt, kt, $t, Le, or) {
        var tr = yt[kt];
        if (!Q.isValidElementType(tr)) {
          var lr = Yt(tr);
          return new be("Invalid " + Le + " `" + or + "` of type " + ("`" + lr + "` supplied to `" + $t + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return Oe(Pt);
    }
    function Je(Pt) {
      function yt(kt, $t, Le, or, tr) {
        if (!(kt[$t] instanceof Pt)) {
          var lr = Pt.name || me, gt = Lt(kt[$t]);
          return new be("Invalid " + or + " `" + tr + "` of type " + ("`" + gt + "` supplied to `" + Le + "`, expected ") + ("instance of `" + lr + "`."));
        }
        return null;
      }
      return Oe(yt);
    }
    function tt(Pt) {
      if (!Array.isArray(Pt))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? ce(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : ce("Invalid argument supplied to oneOf, expected an array.")), le;
      function yt(kt, $t, Le, or, tr) {
        for (var lr = kt[$t], gt = 0; gt < Pt.length; gt++)
          if (we(lr, Pt[gt]))
            return null;
        var Ut = JSON.stringify(Pt, function(rt, $e) {
          var Bt = Jt($e);
          return Bt === "symbol" ? String($e) : $e;
        });
        return new be("Invalid " + or + " `" + tr + "` of value `" + String(lr) + "` " + ("supplied to `" + Le + "`, expected one of " + Ut + "."));
      }
      return Oe(yt);
    }
    function ft(Pt) {
      function yt(kt, $t, Le, or, tr) {
        if (typeof Pt != "function")
          return new be("Property `" + tr + "` of component `" + Le + "` has invalid PropType notation inside objectOf.");
        var lr = kt[$t], gt = Yt(lr);
        if (gt !== "object")
          return new be("Invalid " + or + " `" + tr + "` of type " + ("`" + gt + "` supplied to `" + Le + "`, expected an object."));
        for (var Ut in lr)
          if (ie(lr, Ut)) {
            var Ze = Pt(lr, Ut, Le, or, tr + "." + Ut, ne);
            if (Ze instanceof Error)
              return Ze;
          }
        return null;
      }
      return Oe(yt);
    }
    function Tt(Pt) {
      if (!Array.isArray(Pt))
        return process.env.NODE_ENV !== "production" && ce("Invalid argument supplied to oneOfType, expected an instance of array."), le;
      for (var yt = 0; yt < Pt.length; yt++) {
        var kt = Pt[yt];
        if (typeof kt != "function")
          return ce(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + Ht(kt) + " at index " + yt + "."
          ), le;
      }
      function $t(Le, or, tr, lr, gt) {
        for (var Ut = [], Ze = 0; Ze < Pt.length; Ze++) {
          var rt = Pt[Ze], $e = rt(Le, or, tr, lr, gt, ne);
          if ($e == null)
            return null;
          $e.data && ie($e.data, "expectedType") && Ut.push($e.data.expectedType);
        }
        var Bt = Ut.length > 0 ? ", expected one of type [" + Ut.join(", ") + "]" : "";
        return new be("Invalid " + lr + " `" + gt + "` supplied to " + ("`" + tr + "`" + Bt + "."));
      }
      return Oe($t);
    }
    function Xe() {
      function Pt(yt, kt, $t, Le, or) {
        return pt(yt[kt]) ? null : new be("Invalid " + Le + " `" + or + "` supplied to " + ("`" + $t + "`, expected a ReactNode."));
      }
      return Oe(Pt);
    }
    function ht(Pt, yt, kt, $t, Le) {
      return new be(
        (Pt || "React class") + ": " + yt + " type `" + kt + "." + $t + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + Le + "`."
      );
    }
    function Qt(Pt) {
      function yt(kt, $t, Le, or, tr) {
        var lr = kt[$t], gt = Yt(lr);
        if (gt !== "object")
          return new be("Invalid " + or + " `" + tr + "` of type `" + gt + "` " + ("supplied to `" + Le + "`, expected `object`."));
        for (var Ut in Pt) {
          var Ze = Pt[Ut];
          if (typeof Ze != "function")
            return ht(Le, or, tr, Ut, Jt(Ze));
          var rt = Ze(lr, Ut, Le, or, tr + "." + Ut, ne);
          if (rt)
            return rt;
        }
        return null;
      }
      return Oe(yt);
    }
    function Gt(Pt) {
      function yt(kt, $t, Le, or, tr) {
        var lr = kt[$t], gt = Yt(lr);
        if (gt !== "object")
          return new be("Invalid " + or + " `" + tr + "` of type `" + gt + "` " + ("supplied to `" + Le + "`, expected `object`."));
        var Ut = ee({}, kt[$t], Pt);
        for (var Ze in Ut) {
          var rt = Pt[Ze];
          if (ie(Pt, Ze) && typeof rt != "function")
            return ht(Le, or, tr, Ze, Jt(rt));
          if (!rt)
            return new be(
              "Invalid " + or + " `" + tr + "` key `" + Ze + "` supplied to `" + Le + "`.\nBad object: " + JSON.stringify(kt[$t], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(Pt), null, "  ")
            );
          var $e = rt(lr, Ze, Le, or, tr + "." + Ze, ne);
          if ($e)
            return $e;
        }
        return null;
      }
      return Oe(yt);
    }
    function pt(Pt) {
      switch (typeof Pt) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !Pt;
        case "object":
          if (Array.isArray(Pt))
            return Pt.every(pt);
          if (Pt === null || de(Pt))
            return !0;
          var yt = Ee(Pt);
          if (yt) {
            var kt = yt.call(Pt), $t;
            if (yt !== Pt.entries) {
              for (; !($t = kt.next()).done; )
                if (!pt($t.value))
                  return !1;
            } else
              for (; !($t = kt.next()).done; ) {
                var Le = $t.value;
                if (Le && !pt(Le[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function xt(Pt, yt) {
      return Pt === "symbol" ? !0 : yt ? yt["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && yt instanceof Symbol : !1;
    }
    function Yt(Pt) {
      var yt = typeof Pt;
      return Array.isArray(Pt) ? "array" : Pt instanceof RegExp ? "object" : xt(yt, Pt) ? "symbol" : yt;
    }
    function Jt(Pt) {
      if (typeof Pt > "u" || Pt === null)
        return "" + Pt;
      var yt = Yt(Pt);
      if (yt === "object") {
        if (Pt instanceof Date)
          return "date";
        if (Pt instanceof RegExp)
          return "regexp";
      }
      return yt;
    }
    function Ht(Pt) {
      var yt = Jt(Pt);
      switch (yt) {
        case "array":
        case "object":
          return "an " + yt;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + yt;
        default:
          return yt;
      }
    }
    function Lt(Pt) {
      return !Pt.constructor || !Pt.constructor.name ? me : Pt.constructor.name;
    }
    return ge.checkPropTypes = ae, ge.resetWarningCache = ae.resetWarningCache, ge.PropTypes = ge, ge;
  }, factoryWithTypeCheckers;
}
var factoryWithThrowingShims, hasRequiredFactoryWithThrowingShims;
function requireFactoryWithThrowingShims() {
  if (hasRequiredFactoryWithThrowingShims)
    return factoryWithThrowingShims;
  hasRequiredFactoryWithThrowingShims = 1;
  var Q = requireReactPropTypesSecret();
  function ee() {
  }
  function ne() {
  }
  return ne.resetWarningCache = ee, factoryWithThrowingShims = function() {
    function ie(le, de, ye, fe, Be, Ee) {
      if (Ee !== Q) {
        var me = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw me.name = "Invariant Violation", me;
      }
    }
    ie.isRequired = ie;
    function ae() {
      return ie;
    }
    var ce = {
      array: ie,
      bigint: ie,
      bool: ie,
      func: ie,
      number: ie,
      object: ie,
      string: ie,
      symbol: ie,
      any: ie,
      arrayOf: ae,
      element: ie,
      elementType: ie,
      instanceOf: ae,
      node: ie,
      objectOf: ae,
      oneOf: ae,
      oneOfType: ae,
      shape: ae,
      exact: ae,
      checkPropTypes: ne,
      resetWarningCache: ee
    };
    return ce.PropTypes = ce, ce;
  }, factoryWithThrowingShims;
}
if (process.env.NODE_ENV !== "production") {
  var ReactIs = requireReactIs(), throwOnDirectAccess = !0;
  propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
} else
  propTypes.exports = requireFactoryWithThrowingShims()();
var jsxRuntime = { exports: {} }, reactJsxRuntime_production_min = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_production_min;
function requireReactJsxRuntime_production_min() {
  if (hasRequiredReactJsxRuntime_production_min)
    return reactJsxRuntime_production_min;
  hasRequiredReactJsxRuntime_production_min = 1;
  var Q = React__default, ee = Symbol.for("react.element"), ne = Symbol.for("react.fragment"), ie = Object.prototype.hasOwnProperty, ae = Q.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, ce = { key: !0, ref: !0, __self: !0, __source: !0 };
  function le(de, ye, fe) {
    var Be, Ee = {}, me = null, ge = null;
    fe !== void 0 && (me = "" + fe), ye.key !== void 0 && (me = "" + ye.key), ye.ref !== void 0 && (ge = ye.ref);
    for (Be in ye)
      ie.call(ye, Be) && !ce.hasOwnProperty(Be) && (Ee[Be] = ye[Be]);
    if (de && de.defaultProps)
      for (Be in ye = de.defaultProps, ye)
        Ee[Be] === void 0 && (Ee[Be] = ye[Be]);
    return { $$typeof: ee, type: de, key: me, ref: ge, props: Ee, _owner: ae.current };
  }
  return reactJsxRuntime_production_min.Fragment = ne, reactJsxRuntime_production_min.jsx = le, reactJsxRuntime_production_min.jsxs = le, reactJsxRuntime_production_min;
}
var reactJsxRuntime_development = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_development;
function requireReactJsxRuntime_development() {
  return hasRequiredReactJsxRuntime_development || (hasRequiredReactJsxRuntime_development = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = React__default, ee = Symbol.for("react.element"), ne = Symbol.for("react.portal"), ie = Symbol.for("react.fragment"), ae = Symbol.for("react.strict_mode"), ce = Symbol.for("react.profiler"), le = Symbol.for("react.provider"), de = Symbol.for("react.context"), ye = Symbol.for("react.forward_ref"), fe = Symbol.for("react.suspense"), Be = Symbol.for("react.suspense_list"), Ee = Symbol.for("react.memo"), me = Symbol.for("react.lazy"), ge = Symbol.for("react.offscreen"), we = Symbol.iterator, be = "@@iterator";
    function Oe(Rt) {
      if (Rt === null || typeof Rt != "object")
        return null;
      var rr = we && Rt[we] || Rt[be];
      return typeof rr == "function" ? rr : null;
    }
    var He = Q.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function Se(Rt) {
      {
        for (var rr = arguments.length, Mr = new Array(rr > 1 ? rr - 1 : 0), an = 1; an < rr; an++)
          Mr[an - 1] = arguments[an];
        Ge("error", Rt, Mr);
      }
    }
    function Ge(Rt, rr, Mr) {
      {
        var an = He.ReactDebugCurrentFrame, Bn = an.getStackAddendum();
        Bn !== "" && (rr += "%s", Mr = Mr.concat([Bn]));
        var In = Mr.map(function(vn) {
          return String(vn);
        });
        In.unshift("Warning: " + rr), Function.prototype.apply.call(console[Rt], console, In);
      }
    }
    var Fe = !1, Pe = !1, Je = !1, tt = !1, ft = !1, Tt;
    Tt = Symbol.for("react.module.reference");
    function Xe(Rt) {
      return !!(typeof Rt == "string" || typeof Rt == "function" || Rt === ie || Rt === ce || ft || Rt === ae || Rt === fe || Rt === Be || tt || Rt === ge || Fe || Pe || Je || typeof Rt == "object" && Rt !== null && (Rt.$$typeof === me || Rt.$$typeof === Ee || Rt.$$typeof === le || Rt.$$typeof === de || Rt.$$typeof === ye || Rt.$$typeof === Tt || Rt.getModuleId !== void 0));
    }
    function ht(Rt, rr, Mr) {
      var an = Rt.displayName;
      if (an)
        return an;
      var Bn = rr.displayName || rr.name || "";
      return Bn !== "" ? Mr + "(" + Bn + ")" : Mr;
    }
    function Qt(Rt) {
      return Rt.displayName || "Context";
    }
    function Gt(Rt) {
      if (Rt == null)
        return null;
      if (typeof Rt.tag == "number" && Se("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof Rt == "function")
        return Rt.displayName || Rt.name || null;
      if (typeof Rt == "string")
        return Rt;
      switch (Rt) {
        case ie:
          return "Fragment";
        case ne:
          return "Portal";
        case ce:
          return "Profiler";
        case ae:
          return "StrictMode";
        case fe:
          return "Suspense";
        case Be:
          return "SuspenseList";
      }
      if (typeof Rt == "object")
        switch (Rt.$$typeof) {
          case de:
            var rr = Rt;
            return Qt(rr) + ".Consumer";
          case le:
            var Mr = Rt;
            return Qt(Mr._context) + ".Provider";
          case ye:
            return ht(Rt, Rt.render, "ForwardRef");
          case Ee:
            var an = Rt.displayName || null;
            return an !== null ? an : Gt(Rt.type) || "Memo";
          case me: {
            var Bn = Rt, In = Bn._payload, vn = Bn._init;
            try {
              return Gt(vn(In));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var pt = Object.assign, xt = 0, Yt, Jt, Ht, Lt, Pt, yt, kt;
    function $t() {
    }
    $t.__reactDisabledLog = !0;
    function Le() {
      {
        if (xt === 0) {
          Yt = console.log, Jt = console.info, Ht = console.warn, Lt = console.error, Pt = console.group, yt = console.groupCollapsed, kt = console.groupEnd;
          var Rt = {
            configurable: !0,
            enumerable: !0,
            value: $t,
            writable: !0
          };
          Object.defineProperties(console, {
            info: Rt,
            log: Rt,
            warn: Rt,
            error: Rt,
            group: Rt,
            groupCollapsed: Rt,
            groupEnd: Rt
          });
        }
        xt++;
      }
    }
    function or() {
      {
        if (xt--, xt === 0) {
          var Rt = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: pt({}, Rt, {
              value: Yt
            }),
            info: pt({}, Rt, {
              value: Jt
            }),
            warn: pt({}, Rt, {
              value: Ht
            }),
            error: pt({}, Rt, {
              value: Lt
            }),
            group: pt({}, Rt, {
              value: Pt
            }),
            groupCollapsed: pt({}, Rt, {
              value: yt
            }),
            groupEnd: pt({}, Rt, {
              value: kt
            })
          });
        }
        xt < 0 && Se("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var tr = He.ReactCurrentDispatcher, lr;
    function gt(Rt, rr, Mr) {
      {
        if (lr === void 0)
          try {
            throw Error();
          } catch (Bn) {
            var an = Bn.stack.trim().match(/\n( *(at )?)/);
            lr = an && an[1] || "";
          }
        return `
` + lr + Rt;
      }
    }
    var Ut = !1, Ze;
    {
      var rt = typeof WeakMap == "function" ? WeakMap : Map;
      Ze = new rt();
    }
    function $e(Rt, rr) {
      if (!Rt || Ut)
        return "";
      {
        var Mr = Ze.get(Rt);
        if (Mr !== void 0)
          return Mr;
      }
      var an;
      Ut = !0;
      var Bn = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var In;
      In = tr.current, tr.current = null, Le();
      try {
        if (rr) {
          var vn = function() {
            throw Error();
          };
          if (Object.defineProperty(vn.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(vn, []);
            } catch (Ir) {
              an = Ir;
            }
            Reflect.construct(Rt, [], vn);
          } else {
            try {
              vn.call();
            } catch (Ir) {
              an = Ir;
            }
            Rt.call(vn.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Ir) {
            an = Ir;
          }
          Rt();
        }
      } catch (Ir) {
        if (Ir && an && typeof Ir.stack == "string") {
          for (var fn = Ir.stack.split(`
`), _n = an.stack.split(`
`), jn = fn.length - 1, Zr = _n.length - 1; jn >= 1 && Zr >= 0 && fn[jn] !== _n[Zr]; )
            Zr--;
          for (; jn >= 1 && Zr >= 0; jn--, Zr--)
            if (fn[jn] !== _n[Zr]) {
              if (jn !== 1 || Zr !== 1)
                do
                  if (jn--, Zr--, Zr < 0 || fn[jn] !== _n[Zr]) {
                    var Kr = `
` + fn[jn].replace(" at new ", " at ");
                    return Rt.displayName && Kr.includes("<anonymous>") && (Kr = Kr.replace("<anonymous>", Rt.displayName)), typeof Rt == "function" && Ze.set(Rt, Kr), Kr;
                  }
                while (jn >= 1 && Zr >= 0);
              break;
            }
        }
      } finally {
        Ut = !1, tr.current = In, or(), Error.prepareStackTrace = Bn;
      }
      var $r = Rt ? Rt.displayName || Rt.name : "", vt = $r ? gt($r) : "";
      return typeof Rt == "function" && Ze.set(Rt, vt), vt;
    }
    function Bt(Rt, rr, Mr) {
      return $e(Rt, !1);
    }
    function ct(Rt) {
      var rr = Rt.prototype;
      return !!(rr && rr.isReactComponent);
    }
    function je(Rt, rr, Mr) {
      if (Rt == null)
        return "";
      if (typeof Rt == "function")
        return $e(Rt, ct(Rt));
      if (typeof Rt == "string")
        return gt(Rt);
      switch (Rt) {
        case fe:
          return gt("Suspense");
        case Be:
          return gt("SuspenseList");
      }
      if (typeof Rt == "object")
        switch (Rt.$$typeof) {
          case ye:
            return Bt(Rt.render);
          case Ee:
            return je(Rt.type, rr, Mr);
          case me: {
            var an = Rt, Bn = an._payload, In = an._init;
            try {
              return je(In(Bn), rr, Mr);
            } catch {
            }
          }
        }
      return "";
    }
    var _e = Object.prototype.hasOwnProperty, Ie = {}, Ce = He.ReactDebugCurrentFrame;
    function ke(Rt) {
      if (Rt) {
        var rr = Rt._owner, Mr = je(Rt.type, Rt._source, rr ? rr.type : null);
        Ce.setExtraStackFrame(Mr);
      } else
        Ce.setExtraStackFrame(null);
    }
    function Ve(Rt, rr, Mr, an, Bn) {
      {
        var In = Function.call.bind(_e);
        for (var vn in Rt)
          if (In(Rt, vn)) {
            var fn = void 0;
            try {
              if (typeof Rt[vn] != "function") {
                var _n = Error((an || "React class") + ": " + Mr + " type `" + vn + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof Rt[vn] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw _n.name = "Invariant Violation", _n;
              }
              fn = Rt[vn](rr, vn, an, Mr, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (jn) {
              fn = jn;
            }
            fn && !(fn instanceof Error) && (ke(Bn), Se("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", an || "React class", Mr, vn, typeof fn), ke(null)), fn instanceof Error && !(fn.message in Ie) && (Ie[fn.message] = !0, ke(Bn), Se("Failed %s type: %s", Mr, fn.message), ke(null));
          }
      }
    }
    var Ke = Array.isArray;
    function ot(Rt) {
      return Ke(Rt);
    }
    function St(Rt) {
      {
        var rr = typeof Symbol == "function" && Symbol.toStringTag, Mr = rr && Rt[Symbol.toStringTag] || Rt.constructor.name || "Object";
        return Mr;
      }
    }
    function Vt(Rt) {
      try {
        return zt(Rt), !1;
      } catch {
        return !0;
      }
    }
    function zt(Rt) {
      return "" + Rt;
    }
    function Wt(Rt) {
      if (Vt(Rt))
        return Se("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", St(Rt)), zt(Rt);
    }
    var qe = He.ReactCurrentOwner, Te = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Re, it, Ct;
    Ct = {};
    function Nt(Rt) {
      if (_e.call(Rt, "ref")) {
        var rr = Object.getOwnPropertyDescriptor(Rt, "ref").get;
        if (rr && rr.isReactWarning)
          return !1;
      }
      return Rt.ref !== void 0;
    }
    function Dt(Rt) {
      if (_e.call(Rt, "key")) {
        var rr = Object.getOwnPropertyDescriptor(Rt, "key").get;
        if (rr && rr.isReactWarning)
          return !1;
      }
      return Rt.key !== void 0;
    }
    function Er(Rt, rr) {
      if (typeof Rt.ref == "string" && qe.current && rr && qe.current.stateNode !== rr) {
        var Mr = Gt(qe.current.type);
        Ct[Mr] || (Se('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', Gt(qe.current.type), Rt.ref), Ct[Mr] = !0);
      }
    }
    function gr(Rt, rr) {
      {
        var Mr = function() {
          Re || (Re = !0, Se("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", rr));
        };
        Mr.isReactWarning = !0, Object.defineProperty(Rt, "key", {
          get: Mr,
          configurable: !0
        });
      }
    }
    function Cr(Rt, rr) {
      {
        var Mr = function() {
          it || (it = !0, Se("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", rr));
        };
        Mr.isReactWarning = !0, Object.defineProperty(Rt, "ref", {
          get: Mr,
          configurable: !0
        });
      }
    }
    var mr = function(Rt, rr, Mr, an, Bn, In, vn) {
      var fn = {
        $$typeof: ee,
        type: Rt,
        key: rr,
        ref: Mr,
        props: vn,
        _owner: In
      };
      return fn._store = {}, Object.defineProperty(fn._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(fn, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: an
      }), Object.defineProperty(fn, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: Bn
      }), Object.freeze && (Object.freeze(fn.props), Object.freeze(fn)), fn;
    };
    function wr(Rt, rr, Mr, an, Bn) {
      {
        var In, vn = {}, fn = null, _n = null;
        Mr !== void 0 && (Wt(Mr), fn = "" + Mr), Dt(rr) && (Wt(rr.key), fn = "" + rr.key), Nt(rr) && (_n = rr.ref, Er(rr, Bn));
        for (In in rr)
          _e.call(rr, In) && !Te.hasOwnProperty(In) && (vn[In] = rr[In]);
        if (Rt && Rt.defaultProps) {
          var jn = Rt.defaultProps;
          for (In in jn)
            vn[In] === void 0 && (vn[In] = jn[In]);
        }
        if (fn || _n) {
          var Zr = typeof Rt == "function" ? Rt.displayName || Rt.name || "Unknown" : Rt;
          fn && gr(vn, Zr), _n && Cr(vn, Zr);
        }
        return mr(Rt, fn, _n, Bn, an, qe.current, vn);
      }
    }
    var en = He.ReactCurrentOwner, Wn = He.ReactDebugCurrentFrame;
    function on(Rt) {
      if (Rt) {
        var rr = Rt._owner, Mr = je(Rt.type, Rt._source, rr ? rr.type : null);
        Wn.setExtraStackFrame(Mr);
      } else
        Wn.setExtraStackFrame(null);
    }
    var qn;
    qn = !1;
    function $n(Rt) {
      return typeof Rt == "object" && Rt !== null && Rt.$$typeof === ee;
    }
    function Pn() {
      {
        if (en.current) {
          var Rt = Gt(en.current.type);
          if (Rt)
            return `

Check the render method of \`` + Rt + "`.";
        }
        return "";
      }
    }
    function Un(Rt) {
      {
        if (Rt !== void 0) {
          var rr = Rt.fileName.replace(/^.*[\\\/]/, ""), Mr = Rt.lineNumber;
          return `

Check your code at ` + rr + ":" + Mr + ".";
        }
        return "";
      }
    }
    var ai = {};
    function pi(Rt) {
      {
        var rr = Pn();
        if (!rr) {
          var Mr = typeof Rt == "string" ? Rt : Rt.displayName || Rt.name;
          Mr && (rr = `

Check the top-level render call using <` + Mr + ">.");
        }
        return rr;
      }
    }
    function Wi(Rt, rr) {
      {
        if (!Rt._store || Rt._store.validated || Rt.key != null)
          return;
        Rt._store.validated = !0;
        var Mr = pi(rr);
        if (ai[Mr])
          return;
        ai[Mr] = !0;
        var an = "";
        Rt && Rt._owner && Rt._owner !== en.current && (an = " It was passed a child from " + Gt(Rt._owner.type) + "."), on(Rt), Se('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', Mr, an), on(null);
      }
    }
    function Ti(Rt, rr) {
      {
        if (typeof Rt != "object")
          return;
        if (ot(Rt))
          for (var Mr = 0; Mr < Rt.length; Mr++) {
            var an = Rt[Mr];
            $n(an) && Wi(an, rr);
          }
        else if ($n(Rt))
          Rt._store && (Rt._store.validated = !0);
        else if (Rt) {
          var Bn = Oe(Rt);
          if (typeof Bn == "function" && Bn !== Rt.entries)
            for (var In = Bn.call(Rt), vn; !(vn = In.next()).done; )
              $n(vn.value) && Wi(vn.value, rr);
        }
      }
    }
    function Hn(Rt) {
      {
        var rr = Rt.type;
        if (rr == null || typeof rr == "string")
          return;
        var Mr;
        if (typeof rr == "function")
          Mr = rr.propTypes;
        else if (typeof rr == "object" && (rr.$$typeof === ye || rr.$$typeof === Ee))
          Mr = rr.propTypes;
        else
          return;
        if (Mr) {
          var an = Gt(rr);
          Ve(Mr, Rt.props, "prop", an, Rt);
        } else if (rr.PropTypes !== void 0 && !qn) {
          qn = !0;
          var Bn = Gt(rr);
          Se("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", Bn || "Unknown");
        }
        typeof rr.getDefaultProps == "function" && !rr.getDefaultProps.isReactClassApproved && Se("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Kn(Rt) {
      {
        for (var rr = Object.keys(Rt.props), Mr = 0; Mr < rr.length; Mr++) {
          var an = rr[Mr];
          if (an !== "children" && an !== "key") {
            on(Rt), Se("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", an), on(null);
            break;
          }
        }
        Rt.ref !== null && (on(Rt), Se("Invalid attribute `ref` supplied to `React.Fragment`."), on(null));
      }
    }
    function Ln(Rt, rr, Mr, an, Bn, In) {
      {
        var vn = Xe(Rt);
        if (!vn) {
          var fn = "";
          (Rt === void 0 || typeof Rt == "object" && Rt !== null && Object.keys(Rt).length === 0) && (fn += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var _n = Un(Bn);
          _n ? fn += _n : fn += Pn();
          var jn;
          Rt === null ? jn = "null" : ot(Rt) ? jn = "array" : Rt !== void 0 && Rt.$$typeof === ee ? (jn = "<" + (Gt(Rt.type) || "Unknown") + " />", fn = " Did you accidentally export a JSX literal instead of a component?") : jn = typeof Rt, Se("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", jn, fn);
        }
        var Zr = wr(Rt, rr, Mr, Bn, In);
        if (Zr == null)
          return Zr;
        if (vn) {
          var Kr = rr.children;
          if (Kr !== void 0)
            if (an)
              if (ot(Kr)) {
                for (var $r = 0; $r < Kr.length; $r++)
                  Ti(Kr[$r], Rt);
                Object.freeze && Object.freeze(Kr);
              } else
                Se("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Ti(Kr, Rt);
        }
        return Rt === ie ? Kn(Zr) : Hn(Zr), Zr;
      }
    }
    function si(Rt, rr, Mr) {
      return Ln(Rt, rr, Mr, !0);
    }
    function gi(Rt, rr, Mr) {
      return Ln(Rt, rr, Mr, !1);
    }
    var mi = gi, Ei = si;
    reactJsxRuntime_development.Fragment = ie, reactJsxRuntime_development.jsx = mi, reactJsxRuntime_development.jsxs = Ei;
  }()), reactJsxRuntime_development;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReactJsxRuntime_production_min() : Q.exports = requireReactJsxRuntime_development();
})(jsxRuntime);
const Fragment = jsxRuntime.exports.Fragment, jsx = jsxRuntime.exports.jsx, jsxs = jsxRuntime.exports.jsxs;
/** @license MUI v5.10.14
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function styled$4(Q, ee) {
  const ne = emStyled(Q, ee);
  return process.env.NODE_ENV !== "production" ? (...ie) => {
    const ae = typeof Q == "string" ? `"${Q}"` : "component";
    return ie.length === 0 ? console.error([`MUI: Seems like you called \`styled(${ae})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : ie.some((ce) => ce === void 0) && console.error(`MUI: the styled(${ae})(...args) API requires all its args to be defined.`), ne(...ie);
  } : ne;
}
const internal_processStyles = (Q, ee) => {
  Array.isArray(Q.__emotion_styles) && (Q.__emotion_styles = ee(Q.__emotion_styles));
}, responsivePropType = process.env.NODE_ENV !== "production" ? propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string, propTypes.exports.object, propTypes.exports.array]) : {}, responsivePropType$1 = responsivePropType;
function chainPropTypes(Q, ee) {
  return process.env.NODE_ENV === "production" ? () => null : function(...ie) {
    return Q(...ie) || ee(...ie);
  };
}
function isPlainObject$4(Q) {
  return Q !== null && typeof Q == "object" && Q.constructor === Object;
}
function deepmerge(Q, ee, ne = {
  clone: !0
}) {
  const ie = ne.clone ? _extends$1({}, Q) : Q;
  return isPlainObject$4(Q) && isPlainObject$4(ee) && Object.keys(ee).forEach((ae) => {
    ae !== "__proto__" && (isPlainObject$4(ee[ae]) && ae in Q && isPlainObject$4(Q[ae]) ? ie[ae] = deepmerge(Q[ae], ee[ae], ne) : ie[ae] = ee[ae]);
  }), ie;
}
function isClassComponent(Q) {
  const {
    prototype: ee = {}
  } = Q;
  return Boolean(ee.isReactComponent);
}
function elementTypeAcceptingRef(Q, ee, ne, ie, ae) {
  const ce = Q[ee], le = ae || ee;
  if (ce == null || typeof window > "u")
    return null;
  let de;
  return typeof ce == "function" && !isClassComponent(ce) && (de = "Did you accidentally provide a plain function component instead?"), de !== void 0 ? new Error(`Invalid ${ie} \`${le}\` supplied to \`${ne}\`. Expected an element type that can hold a ref. ${de} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const elementTypeAcceptingRef$1 = chainPropTypes(propTypes.exports.elementType, elementTypeAcceptingRef);
function formatMuiErrorMessage(Q) {
  let ee = "https://mui.com/production-error/?code=" + Q;
  for (let ne = 1; ne < arguments.length; ne += 1)
    ee += "&args[]=" + encodeURIComponent(arguments[ne]);
  return "Minified MUI error #" + Q + "; visit " + ee + " for the full message.";
}
var reactIs$1 = { exports: {} }, reactIs_production_min$1 = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$1;
function requireReactIs_production_min$1() {
  if (hasRequiredReactIs_production_min$1)
    return reactIs_production_min$1;
  hasRequiredReactIs_production_min$1 = 1;
  var Q = Symbol.for("react.element"), ee = Symbol.for("react.portal"), ne = Symbol.for("react.fragment"), ie = Symbol.for("react.strict_mode"), ae = Symbol.for("react.profiler"), ce = Symbol.for("react.provider"), le = Symbol.for("react.context"), de = Symbol.for("react.server_context"), ye = Symbol.for("react.forward_ref"), fe = Symbol.for("react.suspense"), Be = Symbol.for("react.suspense_list"), Ee = Symbol.for("react.memo"), me = Symbol.for("react.lazy"), ge = Symbol.for("react.offscreen"), we;
  we = Symbol.for("react.module.reference");
  function be(Oe) {
    if (typeof Oe == "object" && Oe !== null) {
      var He = Oe.$$typeof;
      switch (He) {
        case Q:
          switch (Oe = Oe.type, Oe) {
            case ne:
            case ae:
            case ie:
            case fe:
            case Be:
              return Oe;
            default:
              switch (Oe = Oe && Oe.$$typeof, Oe) {
                case de:
                case le:
                case ye:
                case me:
                case Ee:
                case ce:
                  return Oe;
                default:
                  return He;
              }
          }
        case ee:
          return He;
      }
    }
  }
  return reactIs_production_min$1.ContextConsumer = le, reactIs_production_min$1.ContextProvider = ce, reactIs_production_min$1.Element = Q, reactIs_production_min$1.ForwardRef = ye, reactIs_production_min$1.Fragment = ne, reactIs_production_min$1.Lazy = me, reactIs_production_min$1.Memo = Ee, reactIs_production_min$1.Portal = ee, reactIs_production_min$1.Profiler = ae, reactIs_production_min$1.StrictMode = ie, reactIs_production_min$1.Suspense = fe, reactIs_production_min$1.SuspenseList = Be, reactIs_production_min$1.isAsyncMode = function() {
    return !1;
  }, reactIs_production_min$1.isConcurrentMode = function() {
    return !1;
  }, reactIs_production_min$1.isContextConsumer = function(Oe) {
    return be(Oe) === le;
  }, reactIs_production_min$1.isContextProvider = function(Oe) {
    return be(Oe) === ce;
  }, reactIs_production_min$1.isElement = function(Oe) {
    return typeof Oe == "object" && Oe !== null && Oe.$$typeof === Q;
  }, reactIs_production_min$1.isForwardRef = function(Oe) {
    return be(Oe) === ye;
  }, reactIs_production_min$1.isFragment = function(Oe) {
    return be(Oe) === ne;
  }, reactIs_production_min$1.isLazy = function(Oe) {
    return be(Oe) === me;
  }, reactIs_production_min$1.isMemo = function(Oe) {
    return be(Oe) === Ee;
  }, reactIs_production_min$1.isPortal = function(Oe) {
    return be(Oe) === ee;
  }, reactIs_production_min$1.isProfiler = function(Oe) {
    return be(Oe) === ae;
  }, reactIs_production_min$1.isStrictMode = function(Oe) {
    return be(Oe) === ie;
  }, reactIs_production_min$1.isSuspense = function(Oe) {
    return be(Oe) === fe;
  }, reactIs_production_min$1.isSuspenseList = function(Oe) {
    return be(Oe) === Be;
  }, reactIs_production_min$1.isValidElementType = function(Oe) {
    return typeof Oe == "string" || typeof Oe == "function" || Oe === ne || Oe === ae || Oe === ie || Oe === fe || Oe === Be || Oe === ge || typeof Oe == "object" && Oe !== null && (Oe.$$typeof === me || Oe.$$typeof === Ee || Oe.$$typeof === ce || Oe.$$typeof === le || Oe.$$typeof === ye || Oe.$$typeof === we || Oe.getModuleId !== void 0);
  }, reactIs_production_min$1.typeOf = be, reactIs_production_min$1;
}
var reactIs_development$1 = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$1;
function requireReactIs_development$1() {
  return hasRequiredReactIs_development$1 || (hasRequiredReactIs_development$1 = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = Symbol.for("react.element"), ee = Symbol.for("react.portal"), ne = Symbol.for("react.fragment"), ie = Symbol.for("react.strict_mode"), ae = Symbol.for("react.profiler"), ce = Symbol.for("react.provider"), le = Symbol.for("react.context"), de = Symbol.for("react.server_context"), ye = Symbol.for("react.forward_ref"), fe = Symbol.for("react.suspense"), Be = Symbol.for("react.suspense_list"), Ee = Symbol.for("react.memo"), me = Symbol.for("react.lazy"), ge = Symbol.for("react.offscreen"), we = !1, be = !1, Oe = !1, He = !1, Se = !1, Ge;
    Ge = Symbol.for("react.module.reference");
    function Fe(ct) {
      return !!(typeof ct == "string" || typeof ct == "function" || ct === ne || ct === ae || Se || ct === ie || ct === fe || ct === Be || He || ct === ge || we || be || Oe || typeof ct == "object" && ct !== null && (ct.$$typeof === me || ct.$$typeof === Ee || ct.$$typeof === ce || ct.$$typeof === le || ct.$$typeof === ye || ct.$$typeof === Ge || ct.getModuleId !== void 0));
    }
    function Pe(ct) {
      if (typeof ct == "object" && ct !== null) {
        var je = ct.$$typeof;
        switch (je) {
          case Q:
            var _e = ct.type;
            switch (_e) {
              case ne:
              case ae:
              case ie:
              case fe:
              case Be:
                return _e;
              default:
                var Ie = _e && _e.$$typeof;
                switch (Ie) {
                  case de:
                  case le:
                  case ye:
                  case me:
                  case Ee:
                  case ce:
                    return Ie;
                  default:
                    return je;
                }
            }
          case ee:
            return je;
        }
      }
    }
    var Je = le, tt = ce, ft = Q, Tt = ye, Xe = ne, ht = me, Qt = Ee, Gt = ee, pt = ae, xt = ie, Yt = fe, Jt = Be, Ht = !1, Lt = !1;
    function Pt(ct) {
      return Ht || (Ht = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function yt(ct) {
      return Lt || (Lt = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function kt(ct) {
      return Pe(ct) === le;
    }
    function $t(ct) {
      return Pe(ct) === ce;
    }
    function Le(ct) {
      return typeof ct == "object" && ct !== null && ct.$$typeof === Q;
    }
    function or(ct) {
      return Pe(ct) === ye;
    }
    function tr(ct) {
      return Pe(ct) === ne;
    }
    function lr(ct) {
      return Pe(ct) === me;
    }
    function gt(ct) {
      return Pe(ct) === Ee;
    }
    function Ut(ct) {
      return Pe(ct) === ee;
    }
    function Ze(ct) {
      return Pe(ct) === ae;
    }
    function rt(ct) {
      return Pe(ct) === ie;
    }
    function $e(ct) {
      return Pe(ct) === fe;
    }
    function Bt(ct) {
      return Pe(ct) === Be;
    }
    reactIs_development$1.ContextConsumer = Je, reactIs_development$1.ContextProvider = tt, reactIs_development$1.Element = ft, reactIs_development$1.ForwardRef = Tt, reactIs_development$1.Fragment = Xe, reactIs_development$1.Lazy = ht, reactIs_development$1.Memo = Qt, reactIs_development$1.Portal = Gt, reactIs_development$1.Profiler = pt, reactIs_development$1.StrictMode = xt, reactIs_development$1.Suspense = Yt, reactIs_development$1.SuspenseList = Jt, reactIs_development$1.isAsyncMode = Pt, reactIs_development$1.isConcurrentMode = yt, reactIs_development$1.isContextConsumer = kt, reactIs_development$1.isContextProvider = $t, reactIs_development$1.isElement = Le, reactIs_development$1.isForwardRef = or, reactIs_development$1.isFragment = tr, reactIs_development$1.isLazy = lr, reactIs_development$1.isMemo = gt, reactIs_development$1.isPortal = Ut, reactIs_development$1.isProfiler = Ze, reactIs_development$1.isStrictMode = rt, reactIs_development$1.isSuspense = $e, reactIs_development$1.isSuspenseList = Bt, reactIs_development$1.isValidElementType = Fe, reactIs_development$1.typeOf = Pe;
  }()), reactIs_development$1;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReactIs_production_min$1() : Q.exports = requireReactIs_development$1();
})(reactIs$1);
const fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function getFunctionName(Q) {
  const ee = `${Q}`.match(fnNameMatchRegex);
  return ee && ee[1] || "";
}
function getFunctionComponentName(Q, ee = "") {
  return Q.displayName || Q.name || getFunctionName(Q) || ee;
}
function getWrappedName(Q, ee, ne) {
  const ie = getFunctionComponentName(ee);
  return Q.displayName || (ie !== "" ? `${ne}(${ie})` : ne);
}
function getDisplayName(Q) {
  if (Q != null) {
    if (typeof Q == "string")
      return Q;
    if (typeof Q == "function")
      return getFunctionComponentName(Q, "Component");
    if (typeof Q == "object")
      switch (Q.$$typeof) {
        case reactIs$1.exports.ForwardRef:
          return getWrappedName(Q, Q.render, "ForwardRef");
        case reactIs$1.exports.Memo:
          return getWrappedName(Q, Q.type, "memo");
        default:
          return;
      }
  }
}
const refType = propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object]), refType$1 = refType;
function capitalize(Q) {
  if (typeof Q != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : formatMuiErrorMessage(7));
  return Q.charAt(0).toUpperCase() + Q.slice(1);
}
function setRef$1(Q, ee) {
  typeof Q == "function" ? Q(ee) : Q && (Q.current = ee);
}
const useEnhancedEffect = typeof window < "u" ? React.useLayoutEffect : React.useEffect, useEnhancedEffect$1 = useEnhancedEffect;
function useEventCallback(Q) {
  const ee = React.useRef(Q);
  return useEnhancedEffect$1(() => {
    ee.current = Q;
  }), React.useCallback((...ne) => (0, ee.current)(...ne), []);
}
function useForkRef(...Q) {
  return React.useMemo(() => Q.every((ee) => ee == null) ? null : (ee) => {
    Q.forEach((ne) => {
      setRef$1(ne, ee);
    });
  }, Q);
}
let hadKeyboardEvent = !0, hadFocusVisibleRecently = !1, hadFocusVisibleRecentlyTimeout;
const inputTypesWhitelist = {
  text: !0,
  search: !0,
  url: !0,
  tel: !0,
  email: !0,
  password: !0,
  number: !0,
  date: !0,
  month: !0,
  week: !0,
  time: !0,
  datetime: !0,
  "datetime-local": !0
};
function focusTriggersKeyboardModality(Q) {
  const {
    type: ee,
    tagName: ne
  } = Q;
  return !!(ne === "INPUT" && inputTypesWhitelist[ee] && !Q.readOnly || ne === "TEXTAREA" && !Q.readOnly || Q.isContentEditable);
}
function handleKeyDown(Q) {
  Q.metaKey || Q.altKey || Q.ctrlKey || (hadKeyboardEvent = !0);
}
function handlePointerDown() {
  hadKeyboardEvent = !1;
}
function handleVisibilityChange() {
  this.visibilityState === "hidden" && hadFocusVisibleRecently && (hadKeyboardEvent = !0);
}
function prepare(Q) {
  Q.addEventListener("keydown", handleKeyDown, !0), Q.addEventListener("mousedown", handlePointerDown, !0), Q.addEventListener("pointerdown", handlePointerDown, !0), Q.addEventListener("touchstart", handlePointerDown, !0), Q.addEventListener("visibilitychange", handleVisibilityChange, !0);
}
function isFocusVisible(Q) {
  const {
    target: ee
  } = Q;
  try {
    return ee.matches(":focus-visible");
  } catch {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(ee);
}
function useIsFocusVisible() {
  const Q = React.useCallback((ae) => {
    ae != null && prepare(ae.ownerDocument);
  }, []), ee = React.useRef(!1);
  function ne() {
    return ee.current ? (hadFocusVisibleRecently = !0, window.clearTimeout(hadFocusVisibleRecentlyTimeout), hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
      hadFocusVisibleRecently = !1;
    }, 100), ee.current = !1, !0) : !1;
  }
  function ie(ae) {
    return isFocusVisible(ae) ? (ee.current = !0, !0) : !1;
  }
  return {
    isFocusVisibleRef: ee,
    onFocus: ie,
    onBlur: ne,
    ref: Q
  };
}
function resolveProps(Q, ee) {
  const ne = _extends$1({}, ee);
  return Object.keys(Q).forEach((ie) => {
    ne[ie] === void 0 && (ne[ie] = Q[ie]);
  }), ne;
}
function composeClasses(Q, ee, ne) {
  const ie = {};
  return Object.keys(Q).forEach(
    (ae) => {
      ie[ae] = Q[ae].reduce((ce, le) => (le && (ce.push(ee(le)), ne && ne[le] && ce.push(ne[le])), ce), []).join(" ");
    }
  ), ie;
}
const defaultGenerator = (Q) => Q, createClassNameGenerator = () => {
  let Q = defaultGenerator;
  return {
    configure(ee) {
      Q = ee;
    },
    generate(ee) {
      return Q(ee);
    },
    reset() {
      Q = defaultGenerator;
    }
  };
}, ClassNameGenerator = createClassNameGenerator(), ClassNameGenerator$1 = ClassNameGenerator, globalStateClassesMapping = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  required: "required",
  selected: "selected"
};
function generateUtilityClass(Q, ee, ne = "Mui") {
  const ie = globalStateClassesMapping[ee];
  return ie ? `${ne}-${ie}` : `${ClassNameGenerator$1.generate(Q)}-${ee}`;
}
function generateUtilityClasses(Q, ee, ne = "Mui") {
  const ie = {};
  return ee.forEach((ae) => {
    ie[ae] = generateUtilityClass(Q, ae, ne);
  }), ie;
}
function merge$2(Q, ee) {
  return ee ? deepmerge(Q, ee, {
    clone: !1
  }) : Q;
}
const values$1 = {
  xs: 0,
  sm: 600,
  md: 900,
  lg: 1200,
  xl: 1536
}, defaultBreakpoints = {
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (Q) => `@media (min-width:${values$1[Q]}px)`
};
function handleBreakpoints(Q, ee, ne) {
  const ie = Q.theme || {};
  if (Array.isArray(ee)) {
    const ce = ie.breakpoints || defaultBreakpoints;
    return ee.reduce((le, de, ye) => (le[ce.up(ce.keys[ye])] = ne(ee[ye]), le), {});
  }
  if (typeof ee == "object") {
    const ce = ie.breakpoints || defaultBreakpoints;
    return Object.keys(ee).reduce((le, de) => {
      if (Object.keys(ce.values || values$1).indexOf(de) !== -1) {
        const ye = ce.up(de);
        le[ye] = ne(ee[de], de);
      } else {
        const ye = de;
        le[ye] = ee[ye];
      }
      return le;
    }, {});
  }
  return ne(ee);
}
function createEmptyBreakpointObject(Q = {}) {
  var ee;
  return ((ee = Q.keys) == null ? void 0 : ee.reduce((ie, ae) => {
    const ce = Q.up(ae);
    return ie[ce] = {}, ie;
  }, {})) || {};
}
function removeUnusedBreakpoints(Q, ee) {
  return Q.reduce((ne, ie) => {
    const ae = ne[ie];
    return (!ae || Object.keys(ae).length === 0) && delete ne[ie], ne;
  }, ee);
}
function getPath(Q, ee, ne = !0) {
  if (!ee || typeof ee != "string")
    return null;
  if (Q && Q.vars && ne) {
    const ie = `vars.${ee}`.split(".").reduce((ae, ce) => ae && ae[ce] ? ae[ce] : null, Q);
    if (ie != null)
      return ie;
  }
  return ee.split(".").reduce((ie, ae) => ie && ie[ae] != null ? ie[ae] : null, Q);
}
function getValue$1(Q, ee, ne, ie = ne) {
  let ae;
  return typeof Q == "function" ? ae = Q(ne) : Array.isArray(Q) ? ae = Q[ne] || ie : ae = getPath(Q, ne) || ie, ee && (ae = ee(ae, ie)), ae;
}
function style$1(Q) {
  const {
    prop: ee,
    cssProperty: ne = Q.prop,
    themeKey: ie,
    transform: ae
  } = Q, ce = (le) => {
    if (le[ee] == null)
      return null;
    const de = le[ee], ye = le.theme, fe = getPath(ye, ie) || {};
    return handleBreakpoints(le, de, (Ee) => {
      let me = getValue$1(fe, ae, Ee);
      return Ee === me && typeof Ee == "string" && (me = getValue$1(fe, ae, `${ee}${Ee === "default" ? "" : capitalize(Ee)}`, Ee)), ne === !1 ? me : {
        [ne]: me
      };
    });
  };
  return ce.propTypes = process.env.NODE_ENV !== "production" ? {
    [ee]: responsivePropType$1
  } : {}, ce.filterProps = [ee], ce;
}
function compose(...Q) {
  const ee = Q.reduce((ie, ae) => (ae.filterProps.forEach((ce) => {
    ie[ce] = ae;
  }), ie), {}), ne = (ie) => Object.keys(ie).reduce((ae, ce) => ee[ce] ? merge$2(ae, ee[ce](ie)) : ae, {});
  return ne.propTypes = process.env.NODE_ENV !== "production" ? Q.reduce((ie, ae) => Object.assign(ie, ae.propTypes), {}) : {}, ne.filterProps = Q.reduce((ie, ae) => ie.concat(ae.filterProps), []), ne;
}
function memoize$2(Q) {
  const ee = {};
  return (ne) => (ee[ne] === void 0 && (ee[ne] = Q(ne)), ee[ne]);
}
const properties = {
  m: "margin",
  p: "padding"
}, directions = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, aliases = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, getCssProperties = memoize$2((Q) => {
  if (Q.length > 2)
    if (aliases[Q])
      Q = aliases[Q];
    else
      return [Q];
  const [ee, ne] = Q.split(""), ie = properties[ee], ae = directions[ne] || "";
  return Array.isArray(ae) ? ae.map((ce) => ie + ce) : [ie + ae];
}), marginKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], paddingKeys = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], spacingKeys = [...marginKeys, ...paddingKeys];
function createUnaryUnit(Q, ee, ne, ie) {
  var ae;
  const ce = (ae = getPath(Q, ee, !1)) != null ? ae : ne;
  return typeof ce == "number" ? (le) => typeof le == "string" ? le : (process.env.NODE_ENV !== "production" && typeof le != "number" && console.error(`MUI: Expected ${ie} argument to be a number or a string, got ${le}.`), ce * le) : Array.isArray(ce) ? (le) => typeof le == "string" ? le : (process.env.NODE_ENV !== "production" && (Number.isInteger(le) ? le > ce.length - 1 && console.error([`MUI: The value provided (${le}) overflows.`, `The supported values are: ${JSON.stringify(ce)}.`, `${le} > ${ce.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${ee}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${ee}\` as a number.`].join(`
`))), ce[le]) : typeof ce == "function" ? ce : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${ee}\` value (${ce}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function createUnarySpacing(Q) {
  return createUnaryUnit(Q, "spacing", 8, "spacing");
}
function getValue(Q, ee) {
  if (typeof ee == "string" || ee == null)
    return ee;
  const ne = Math.abs(ee), ie = Q(ne);
  return ee >= 0 ? ie : typeof ie == "number" ? -ie : `-${ie}`;
}
function getStyleFromPropValue(Q, ee) {
  return (ne) => Q.reduce((ie, ae) => (ie[ae] = getValue(ee, ne), ie), {});
}
function resolveCssProperty(Q, ee, ne, ie) {
  if (ee.indexOf(ne) === -1)
    return null;
  const ae = getCssProperties(ne), ce = getStyleFromPropValue(ae, ie), le = Q[ne];
  return handleBreakpoints(Q, le, ce);
}
function style(Q, ee) {
  const ne = createUnarySpacing(Q.theme);
  return Object.keys(Q).map((ie) => resolveCssProperty(Q, ee, ie, ne)).reduce(merge$2, {});
}
process.env.NODE_ENV !== "production" && marginKeys.reduce((Q, ee) => (Q[ee] = responsivePropType$1, Q), {});
process.env.NODE_ENV !== "production" && paddingKeys.reduce((Q, ee) => (Q[ee] = responsivePropType$1, Q), {});
function spacing(Q) {
  return style(Q, spacingKeys);
}
spacing.propTypes = process.env.NODE_ENV !== "production" ? spacingKeys.reduce((Q, ee) => (Q[ee] = responsivePropType$1, Q), {}) : {};
spacing.filterProps = spacingKeys;
function getBorder(Q) {
  return typeof Q != "number" ? Q : `${Q}px solid`;
}
const border = style$1({
  prop: "border",
  themeKey: "borders",
  transform: getBorder
}), borderTop = style$1({
  prop: "borderTop",
  themeKey: "borders",
  transform: getBorder
}), borderRight = style$1({
  prop: "borderRight",
  themeKey: "borders",
  transform: getBorder
}), borderBottom = style$1({
  prop: "borderBottom",
  themeKey: "borders",
  transform: getBorder
}), borderLeft = style$1({
  prop: "borderLeft",
  themeKey: "borders",
  transform: getBorder
}), borderColor = style$1({
  prop: "borderColor",
  themeKey: "palette"
}), borderTopColor = style$1({
  prop: "borderTopColor",
  themeKey: "palette"
}), borderRightColor = style$1({
  prop: "borderRightColor",
  themeKey: "palette"
}), borderBottomColor = style$1({
  prop: "borderBottomColor",
  themeKey: "palette"
}), borderLeftColor = style$1({
  prop: "borderLeftColor",
  themeKey: "palette"
}), borderRadius = (Q) => {
  if (Q.borderRadius !== void 0 && Q.borderRadius !== null) {
    const ee = createUnaryUnit(Q.theme, "shape.borderRadius", 4, "borderRadius"), ne = (ie) => ({
      borderRadius: getValue(ee, ie)
    });
    return handleBreakpoints(Q, Q.borderRadius, ne);
  }
  return null;
};
borderRadius.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: responsivePropType$1
} : {};
borderRadius.filterProps = ["borderRadius"];
const borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius), borders$1 = borders, displayPrint = style$1({
  prop: "displayPrint",
  cssProperty: !1,
  transform: (Q) => ({
    "@media print": {
      display: Q
    }
  })
}), displayRaw = style$1({
  prop: "display"
}), overflow = style$1({
  prop: "overflow"
}), textOverflow = style$1({
  prop: "textOverflow"
}), visibility = style$1({
  prop: "visibility"
}), whiteSpace = style$1({
  prop: "whiteSpace"
}), display = compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace), flexBasis = style$1({
  prop: "flexBasis"
}), flexDirection = style$1({
  prop: "flexDirection"
}), flexWrap = style$1({
  prop: "flexWrap"
}), justifyContent = style$1({
  prop: "justifyContent"
}), alignItems = style$1({
  prop: "alignItems"
}), alignContent = style$1({
  prop: "alignContent"
}), order = style$1({
  prop: "order"
}), flex = style$1({
  prop: "flex"
}), flexGrow = style$1({
  prop: "flexGrow"
}), flexShrink = style$1({
  prop: "flexShrink"
}), alignSelf = style$1({
  prop: "alignSelf"
}), justifyItems = style$1({
  prop: "justifyItems"
}), justifySelf = style$1({
  prop: "justifySelf"
}), flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf), flexbox$1 = flexbox, gap = (Q) => {
  if (Q.gap !== void 0 && Q.gap !== null) {
    const ee = createUnaryUnit(Q.theme, "spacing", 8, "gap"), ne = (ie) => ({
      gap: getValue(ee, ie)
    });
    return handleBreakpoints(Q, Q.gap, ne);
  }
  return null;
};
gap.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: responsivePropType$1
} : {};
gap.filterProps = ["gap"];
const columnGap = (Q) => {
  if (Q.columnGap !== void 0 && Q.columnGap !== null) {
    const ee = createUnaryUnit(Q.theme, "spacing", 8, "columnGap"), ne = (ie) => ({
      columnGap: getValue(ee, ie)
    });
    return handleBreakpoints(Q, Q.columnGap, ne);
  }
  return null;
};
columnGap.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: responsivePropType$1
} : {};
columnGap.filterProps = ["columnGap"];
const rowGap = (Q) => {
  if (Q.rowGap !== void 0 && Q.rowGap !== null) {
    const ee = createUnaryUnit(Q.theme, "spacing", 8, "rowGap"), ne = (ie) => ({
      rowGap: getValue(ee, ie)
    });
    return handleBreakpoints(Q, Q.rowGap, ne);
  }
  return null;
};
rowGap.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: responsivePropType$1
} : {};
rowGap.filterProps = ["rowGap"];
const gridColumn = style$1({
  prop: "gridColumn"
}), gridRow = style$1({
  prop: "gridRow"
}), gridAutoFlow = style$1({
  prop: "gridAutoFlow"
}), gridAutoColumns = style$1({
  prop: "gridAutoColumns"
}), gridAutoRows = style$1({
  prop: "gridAutoRows"
}), gridTemplateColumns = style$1({
  prop: "gridTemplateColumns"
}), gridTemplateRows = style$1({
  prop: "gridTemplateRows"
}), gridTemplateAreas = style$1({
  prop: "gridTemplateAreas"
}), gridArea = style$1({
  prop: "gridArea"
}), grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea), grid$1 = grid;
function transform$1(Q, ee) {
  return ee === "grey" ? ee : Q;
}
const color = style$1({
  prop: "color",
  themeKey: "palette",
  transform: transform$1
}), bgcolor = style$1({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: transform$1
}), backgroundColor = style$1({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: transform$1
}), palette = compose(color, bgcolor, backgroundColor), palette$1 = palette, position = style$1({
  prop: "position"
}), zIndex$2 = style$1({
  prop: "zIndex",
  themeKey: "zIndex"
}), top = style$1({
  prop: "top"
}), right = style$1({
  prop: "right"
}), bottom = style$1({
  prop: "bottom"
}), left = style$1({
  prop: "left"
}), positions = compose(position, zIndex$2, top, right, bottom, left), boxShadow = style$1({
  prop: "boxShadow",
  themeKey: "shadows"
}), shadows$2 = boxShadow;
function transform(Q) {
  return Q <= 1 && Q !== 0 ? `${Q * 100}%` : Q;
}
const width = style$1({
  prop: "width",
  transform
}), maxWidth = (Q) => {
  if (Q.maxWidth !== void 0 && Q.maxWidth !== null) {
    const ee = (ne) => {
      var ie, ae, ce;
      return {
        maxWidth: ((ie = Q.theme) == null || (ae = ie.breakpoints) == null || (ce = ae.values) == null ? void 0 : ce[ne]) || values$1[ne] || transform(ne)
      };
    };
    return handleBreakpoints(Q, Q.maxWidth, ee);
  }
  return null;
};
maxWidth.filterProps = ["maxWidth"];
const minWidth = style$1({
  prop: "minWidth",
  transform
}), height = style$1({
  prop: "height",
  transform
}), maxHeight = style$1({
  prop: "maxHeight",
  transform
}), minHeight = style$1({
  prop: "minHeight",
  transform
});
style$1({
  prop: "size",
  cssProperty: "width",
  transform
});
style$1({
  prop: "size",
  cssProperty: "height",
  transform
});
const boxSizing = style$1({
  prop: "boxSizing"
}), sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing), sizing$1 = sizing, fontFamily = style$1({
  prop: "fontFamily",
  themeKey: "typography"
}), fontSize = style$1({
  prop: "fontSize",
  themeKey: "typography"
}), fontStyle = style$1({
  prop: "fontStyle",
  themeKey: "typography"
}), fontWeight = style$1({
  prop: "fontWeight",
  themeKey: "typography"
}), letterSpacing = style$1({
  prop: "letterSpacing"
}), textTransform = style$1({
  prop: "textTransform"
}), lineHeight = style$1({
  prop: "lineHeight"
}), textAlign = style$1({
  prop: "textAlign"
}), typographyVariant = style$1({
  prop: "typography",
  cssProperty: !1,
  themeKey: "typography"
}), typography = compose(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign, textTransform), typography$1 = typography, filterPropsMapping = {
  borders: borders$1.filterProps,
  display: display.filterProps,
  flexbox: flexbox$1.filterProps,
  grid: grid$1.filterProps,
  positions: positions.filterProps,
  palette: palette$1.filterProps,
  shadows: shadows$2.filterProps,
  sizing: sizing$1.filterProps,
  spacing: spacing.filterProps,
  typography: typography$1.filterProps
}, styleFunctionMapping = {
  borders: borders$1,
  display,
  flexbox: flexbox$1,
  grid: grid$1,
  positions,
  palette: palette$1,
  shadows: shadows$2,
  sizing: sizing$1,
  spacing,
  typography: typography$1
};
Object.keys(filterPropsMapping).reduce((Q, ee) => (filterPropsMapping[ee].forEach((ne) => {
  Q[ne] = styleFunctionMapping[ee];
}), Q), {});
function objectsHaveSameKeys(...Q) {
  const ee = Q.reduce((ie, ae) => ie.concat(Object.keys(ae)), []), ne = new Set(ee);
  return Q.every((ie) => ne.size === Object.keys(ie).length);
}
function callIfFn(Q, ee) {
  return typeof Q == "function" ? Q(ee) : Q;
}
function unstable_createStyleFunctionSx(Q = styleFunctionMapping) {
  const ee = Object.keys(Q).reduce((ae, ce) => (Q[ce].filterProps.forEach((le) => {
    ae[le] = Q[ce];
  }), ae), {});
  function ne(ae, ce, le) {
    const de = {
      [ae]: ce,
      theme: le
    }, ye = ee[ae];
    return ye ? ye(de) : {
      [ae]: ce
    };
  }
  function ie(ae) {
    const {
      sx: ce,
      theme: le = {}
    } = ae || {};
    if (!ce)
      return null;
    function de(ye) {
      let fe = ye;
      if (typeof ye == "function")
        fe = ye(le);
      else if (typeof ye != "object")
        return ye;
      if (!fe)
        return null;
      const Be = createEmptyBreakpointObject(le.breakpoints), Ee = Object.keys(Be);
      let me = Be;
      return Object.keys(fe).forEach((ge) => {
        const we = callIfFn(fe[ge], le);
        if (we != null)
          if (typeof we == "object")
            if (ee[ge])
              me = merge$2(me, ne(ge, we, le));
            else {
              const be = handleBreakpoints({
                theme: le
              }, we, (Oe) => ({
                [ge]: Oe
              }));
              objectsHaveSameKeys(be, we) ? me[ge] = ie({
                sx: we,
                theme: le
              }) : me = merge$2(me, be);
            }
          else
            me = merge$2(me, ne(ge, we, le));
      }), removeUnusedBreakpoints(Ee, me);
    }
    return Array.isArray(ce) ? ce.map(de) : de(ce);
  }
  return ie;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = ["sx"];
const defaultStyleFunctionSx = styleFunctionSx;
function r$1(Q) {
  var ee, ne, ie = "";
  if (typeof Q == "string" || typeof Q == "number")
    ie += Q;
  else if (typeof Q == "object")
    if (Array.isArray(Q))
      for (ee = 0; ee < Q.length; ee++)
        Q[ee] && (ne = r$1(Q[ee])) && (ie && (ie += " "), ie += ne);
    else
      for (ee in Q)
        Q[ee] && (ie && (ie += " "), ie += ee);
  return ie;
}
function clsx() {
  for (var Q, ee, ne = 0, ie = ""; ne < arguments.length; )
    (Q = arguments[ne++]) && (ee = r$1(Q)) && (ie && (ie += " "), ie += ee);
  return ie;
}
const _excluded$a = ["values", "unit", "step"], sortBreakpointsValues = (Q) => {
  const ee = Object.keys(Q).map((ne) => ({
    key: ne,
    val: Q[ne]
  })) || [];
  return ee.sort((ne, ie) => ne.val - ie.val), ee.reduce((ne, ie) => _extends$1({}, ne, {
    [ie.key]: ie.val
  }), {});
};
function createBreakpoints(Q) {
  const {
    values: ee = {
      xs: 0,
      sm: 600,
      md: 900,
      lg: 1200,
      xl: 1536
    },
    unit: ne = "px",
    step: ie = 5
  } = Q, ae = _objectWithoutPropertiesLoose$1(Q, _excluded$a), ce = sortBreakpointsValues(ee), le = Object.keys(ce);
  function de(me) {
    return `@media (min-width:${typeof ee[me] == "number" ? ee[me] : me}${ne})`;
  }
  function ye(me) {
    return `@media (max-width:${(typeof ee[me] == "number" ? ee[me] : me) - ie / 100}${ne})`;
  }
  function fe(me, ge) {
    const we = le.indexOf(ge);
    return `@media (min-width:${typeof ee[me] == "number" ? ee[me] : me}${ne}) and (max-width:${(we !== -1 && typeof ee[le[we]] == "number" ? ee[le[we]] : ge) - ie / 100}${ne})`;
  }
  function Be(me) {
    return le.indexOf(me) + 1 < le.length ? fe(me, le[le.indexOf(me) + 1]) : de(me);
  }
  function Ee(me) {
    const ge = le.indexOf(me);
    return ge === 0 ? de(le[1]) : ge === le.length - 1 ? ye(le[ge]) : fe(me, le[le.indexOf(me) + 1]).replace("@media", "@media not all and");
  }
  return _extends$1({
    keys: le,
    values: ce,
    up: de,
    down: ye,
    between: fe,
    only: Be,
    not: Ee,
    unit: ne
  }, ae);
}
const shape = {
  borderRadius: 4
}, shape$1 = shape;
function createSpacing(Q = 8) {
  if (Q.mui)
    return Q;
  const ee = createUnarySpacing({
    spacing: Q
  }), ne = (...ie) => (process.env.NODE_ENV !== "production" && (ie.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${ie.length}`)), (ie.length === 0 ? [1] : ie).map((ce) => {
    const le = ee(ce);
    return typeof le == "number" ? `${le}px` : le;
  }).join(" "));
  return ne.mui = !0, ne;
}
const _excluded$9 = ["breakpoints", "palette", "spacing", "shape"];
function createTheme$1(Q = {}, ...ee) {
  const {
    breakpoints: ne = {},
    palette: ie = {},
    spacing: ae,
    shape: ce = {}
  } = Q, le = _objectWithoutPropertiesLoose$1(Q, _excluded$9), de = createBreakpoints(ne), ye = createSpacing(ae);
  let fe = deepmerge({
    breakpoints: de,
    direction: "ltr",
    components: {},
    palette: _extends$1({
      mode: "light"
    }, ie),
    spacing: ye,
    shape: _extends$1({}, shape$1, ce)
  }, le);
  return fe = ee.reduce((Be, Ee) => deepmerge(Be, Ee), fe), fe;
}
const ThemeContext$1 = /* @__PURE__ */ React.createContext(null);
process.env.NODE_ENV !== "production" && (ThemeContext$1.displayName = "ThemeContext");
const ThemeContext$2 = ThemeContext$1;
function useTheme$2() {
  const Q = React.useContext(ThemeContext$2);
  return process.env.NODE_ENV !== "production" && React.useDebugValue(Q), Q;
}
function isObjectEmpty(Q) {
  return Object.keys(Q).length === 0;
}
function useTheme$1(Q = null) {
  const ee = useTheme$2();
  return !ee || isObjectEmpty(ee) ? Q : ee;
}
const systemDefaultTheme$1 = createTheme$1();
function useTheme(Q = systemDefaultTheme$1) {
  return useTheme$1(Q);
}
const _excluded$8 = ["variant"];
function isEmpty$1(Q) {
  return Q.length === 0;
}
function propsToClassKey(Q) {
  const {
    variant: ee
  } = Q, ne = _objectWithoutPropertiesLoose$1(Q, _excluded$8);
  let ie = ee || "";
  return Object.keys(ne).sort().forEach((ae) => {
    ae === "color" ? ie += isEmpty$1(ie) ? Q[ae] : capitalize(Q[ae]) : ie += `${isEmpty$1(ie) ? ae : capitalize(ae)}${capitalize(Q[ae].toString())}`;
  }), ie;
}
const _excluded$7 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"], _excluded2 = ["theme"], _excluded3 = ["theme"];
function isEmpty(Q) {
  return Object.keys(Q).length === 0;
}
function isStringTag(Q) {
  return typeof Q == "string" && Q.charCodeAt(0) > 96;
}
const getStyleOverrides = (Q, ee) => ee.components && ee.components[Q] && ee.components[Q].styleOverrides ? ee.components[Q].styleOverrides : null, getVariantStyles = (Q, ee) => {
  let ne = [];
  ee && ee.components && ee.components[Q] && ee.components[Q].variants && (ne = ee.components[Q].variants);
  const ie = {};
  return ne.forEach((ae) => {
    const ce = propsToClassKey(ae.props);
    ie[ce] = ae.style;
  }), ie;
}, variantsResolver = (Q, ee, ne, ie) => {
  var ae, ce;
  const {
    ownerState: le = {}
  } = Q, de = [], ye = ne == null || (ae = ne.components) == null || (ce = ae[ie]) == null ? void 0 : ce.variants;
  return ye && ye.forEach((fe) => {
    let Be = !0;
    Object.keys(fe.props).forEach((Ee) => {
      le[Ee] !== fe.props[Ee] && Q[Ee] !== fe.props[Ee] && (Be = !1);
    }), Be && de.push(ee[propsToClassKey(fe.props)]);
  }), de;
};
function shouldForwardProp(Q) {
  return Q !== "ownerState" && Q !== "theme" && Q !== "sx" && Q !== "as";
}
const systemDefaultTheme = createTheme$1(), lowercaseFirstLetter = (Q) => Q.charAt(0).toLowerCase() + Q.slice(1);
function createStyled(Q = {}) {
  const {
    defaultTheme: ee = systemDefaultTheme,
    rootShouldForwardProp: ne = shouldForwardProp,
    slotShouldForwardProp: ie = shouldForwardProp,
    styleFunctionSx: ae = defaultStyleFunctionSx
  } = Q, ce = (le) => {
    const de = isEmpty(le.theme) ? ee : le.theme;
    return ae(_extends$1({}, le, {
      theme: de
    }));
  };
  return ce.__mui_systemSx = !0, (le, de = {}) => {
    internal_processStyles(le, (Fe) => Fe.filter((Pe) => !(Pe != null && Pe.__mui_systemSx)));
    const {
      name: ye,
      slot: fe,
      skipVariantsResolver: Be,
      skipSx: Ee,
      overridesResolver: me
    } = de, ge = _objectWithoutPropertiesLoose$1(de, _excluded$7), we = Be !== void 0 ? Be : fe && fe !== "Root" || !1, be = Ee || !1;
    let Oe;
    process.env.NODE_ENV !== "production" && ye && (Oe = `${ye}-${lowercaseFirstLetter(fe || "Root")}`);
    let He = shouldForwardProp;
    fe === "Root" ? He = ne : fe ? He = ie : isStringTag(le) && (He = void 0);
    const Se = styled$4(le, _extends$1({
      shouldForwardProp: He,
      label: Oe
    }, ge)), Ge = (Fe, ...Pe) => {
      const Je = Pe ? Pe.map((Xe) => typeof Xe == "function" && Xe.__emotion_real !== Xe ? (ht) => {
        let {
          theme: Qt
        } = ht, Gt = _objectWithoutPropertiesLoose$1(ht, _excluded2);
        return Xe(_extends$1({
          theme: isEmpty(Qt) ? ee : Qt
        }, Gt));
      } : Xe) : [];
      let tt = Fe;
      ye && me && Je.push((Xe) => {
        const ht = isEmpty(Xe.theme) ? ee : Xe.theme, Qt = getStyleOverrides(ye, ht);
        if (Qt) {
          const Gt = {};
          return Object.entries(Qt).forEach(([pt, xt]) => {
            Gt[pt] = typeof xt == "function" ? xt(_extends$1({}, Xe, {
              theme: ht
            })) : xt;
          }), me(Xe, Gt);
        }
        return null;
      }), ye && !we && Je.push((Xe) => {
        const ht = isEmpty(Xe.theme) ? ee : Xe.theme;
        return variantsResolver(Xe, getVariantStyles(ye, ht), ht, ye);
      }), be || Je.push(ce);
      const ft = Je.length - Pe.length;
      if (Array.isArray(Fe) && ft > 0) {
        const Xe = new Array(ft).fill("");
        tt = [...Fe, ...Xe], tt.raw = [...Fe.raw, ...Xe];
      } else
        typeof Fe == "function" && Fe.__emotion_real !== Fe && (tt = (Xe) => {
          let {
            theme: ht
          } = Xe, Qt = _objectWithoutPropertiesLoose$1(Xe, _excluded3);
          return Fe(_extends$1({
            theme: isEmpty(ht) ? ee : ht
          }, Qt));
        });
      const Tt = Se(tt, ...Je);
      if (process.env.NODE_ENV !== "production") {
        let Xe;
        ye && (Xe = `${ye}${fe || ""}`), Xe === void 0 && (Xe = `Styled(${getDisplayName(le)})`), Tt.displayName = Xe;
      }
      return Tt;
    };
    return Se.withConfig && (Ge.withConfig = Se.withConfig), Ge;
  };
}
function getThemeProps(Q) {
  const {
    theme: ee,
    name: ne,
    props: ie
  } = Q;
  return !ee || !ee.components || !ee.components[ne] || !ee.components[ne].defaultProps ? ie : resolveProps(ee.components[ne].defaultProps, ie);
}
function useThemeProps$1({
  props: Q,
  name: ee,
  defaultTheme: ne
}) {
  const ie = useTheme(ne);
  return getThemeProps({
    theme: ie,
    name: ee,
    props: Q
  });
}
function clamp(Q, ee = 0, ne = 1) {
  return process.env.NODE_ENV !== "production" && (Q < ee || Q > ne) && console.error(`MUI: The value provided ${Q} is out of range [${ee}, ${ne}].`), Math.min(Math.max(ee, Q), ne);
}
function hexToRgb(Q) {
  Q = Q.slice(1);
  const ee = new RegExp(`.{1,${Q.length >= 6 ? 2 : 1}}`, "g");
  let ne = Q.match(ee);
  return ne && ne[0].length === 1 && (ne = ne.map((ie) => ie + ie)), ne ? `rgb${ne.length === 4 ? "a" : ""}(${ne.map((ie, ae) => ae < 3 ? parseInt(ie, 16) : Math.round(parseInt(ie, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function decomposeColor(Q) {
  if (Q.type)
    return Q;
  if (Q.charAt(0) === "#")
    return decomposeColor(hexToRgb(Q));
  const ee = Q.indexOf("("), ne = Q.substring(0, ee);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(ne) === -1)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${Q}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : formatMuiErrorMessage(9, Q));
  let ie = Q.substring(ee + 1, Q.length - 1), ae;
  if (ne === "color") {
    if (ie = ie.split(" "), ae = ie.shift(), ie.length === 4 && ie[3].charAt(0) === "/" && (ie[3] = ie[3].slice(1)), ["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(ae) === -1)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${ae}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : formatMuiErrorMessage(10, ae));
  } else
    ie = ie.split(",");
  return ie = ie.map((ce) => parseFloat(ce)), {
    type: ne,
    values: ie,
    colorSpace: ae
  };
}
function recomposeColor(Q) {
  const {
    type: ee,
    colorSpace: ne
  } = Q;
  let {
    values: ie
  } = Q;
  return ee.indexOf("rgb") !== -1 ? ie = ie.map((ae, ce) => ce < 3 ? parseInt(ae, 10) : ae) : ee.indexOf("hsl") !== -1 && (ie[1] = `${ie[1]}%`, ie[2] = `${ie[2]}%`), ee.indexOf("color") !== -1 ? ie = `${ne} ${ie.join(" ")}` : ie = `${ie.join(", ")}`, `${ee}(${ie})`;
}
function hslToRgb(Q) {
  Q = decomposeColor(Q);
  const {
    values: ee
  } = Q, ne = ee[0], ie = ee[1] / 100, ae = ee[2] / 100, ce = ie * Math.min(ae, 1 - ae), le = (fe, Be = (fe + ne / 30) % 12) => ae - ce * Math.max(Math.min(Be - 3, 9 - Be, 1), -1);
  let de = "rgb";
  const ye = [Math.round(le(0) * 255), Math.round(le(8) * 255), Math.round(le(4) * 255)];
  return Q.type === "hsla" && (de += "a", ye.push(ee[3])), recomposeColor({
    type: de,
    values: ye
  });
}
function getLuminance(Q) {
  Q = decomposeColor(Q);
  let ee = Q.type === "hsl" || Q.type === "hsla" ? decomposeColor(hslToRgb(Q)).values : Q.values;
  return ee = ee.map((ne) => (Q.type !== "color" && (ne /= 255), ne <= 0.03928 ? ne / 12.92 : ((ne + 0.055) / 1.055) ** 2.4)), Number((0.2126 * ee[0] + 0.7152 * ee[1] + 0.0722 * ee[2]).toFixed(3));
}
function getContrastRatio(Q, ee) {
  const ne = getLuminance(Q), ie = getLuminance(ee);
  return (Math.max(ne, ie) + 0.05) / (Math.min(ne, ie) + 0.05);
}
function alpha(Q, ee) {
  return Q = decomposeColor(Q), ee = clamp(ee), (Q.type === "rgb" || Q.type === "hsl") && (Q.type += "a"), Q.type === "color" ? Q.values[3] = `/${ee}` : Q.values[3] = ee, recomposeColor(Q);
}
function darken(Q, ee) {
  if (Q = decomposeColor(Q), ee = clamp(ee), Q.type.indexOf("hsl") !== -1)
    Q.values[2] *= 1 - ee;
  else if (Q.type.indexOf("rgb") !== -1 || Q.type.indexOf("color") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Q.values[ne] *= 1 - ee;
  return recomposeColor(Q);
}
function lighten(Q, ee) {
  if (Q = decomposeColor(Q), ee = clamp(ee), Q.type.indexOf("hsl") !== -1)
    Q.values[2] += (100 - Q.values[2]) * ee;
  else if (Q.type.indexOf("rgb") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Q.values[ne] += (255 - Q.values[ne]) * ee;
  else if (Q.type.indexOf("color") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Q.values[ne] += (1 - Q.values[ne]) * ee;
  return recomposeColor(Q);
}
function createMixins(Q, ee) {
  return _extends$1({
    toolbar: {
      minHeight: 56,
      [Q.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [Q.up("sm")]: {
        minHeight: 64
      }
    }
  }, ee);
}
const _excluded$6 = ["mode", "contrastThreshold", "tonalOffset"], light = {
  text: {
    primary: "rgba(0, 0, 0, 0.87)",
    secondary: "rgba(0, 0, 0, 0.6)",
    disabled: "rgba(0, 0, 0, 0.38)"
  },
  divider: "rgba(0, 0, 0, 0.12)",
  background: {
    paper: common$1.white,
    default: common$1.white
  },
  action: {
    active: "rgba(0, 0, 0, 0.54)",
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    disabled: "rgba(0, 0, 0, 0.26)",
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
}, dark = {
  text: {
    primary: common$1.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: "#121212",
    default: "#121212"
  },
  action: {
    active: common$1.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(Q, ee, ne, ie) {
  const ae = ie.light || ie, ce = ie.dark || ie * 1.5;
  Q[ee] || (Q.hasOwnProperty(ne) ? Q[ee] = Q[ne] : ee === "light" ? Q.light = lighten(Q.main, ae) : ee === "dark" && (Q.dark = darken(Q.main, ce)));
}
function getDefaultPrimary(Q = "light") {
  return Q === "dark" ? {
    main: blue$1[200],
    light: blue$1[50],
    dark: blue$1[400]
  } : {
    main: blue$1[700],
    light: blue$1[400],
    dark: blue$1[800]
  };
}
function getDefaultSecondary(Q = "light") {
  return Q === "dark" ? {
    main: purple$1[200],
    light: purple$1[50],
    dark: purple$1[400]
  } : {
    main: purple$1[500],
    light: purple$1[300],
    dark: purple$1[700]
  };
}
function getDefaultError(Q = "light") {
  return Q === "dark" ? {
    main: red$1[500],
    light: red$1[300],
    dark: red$1[700]
  } : {
    main: red$1[700],
    light: red$1[400],
    dark: red$1[800]
  };
}
function getDefaultInfo(Q = "light") {
  return Q === "dark" ? {
    main: lightBlue$1[400],
    light: lightBlue$1[300],
    dark: lightBlue$1[700]
  } : {
    main: lightBlue$1[700],
    light: lightBlue$1[500],
    dark: lightBlue$1[900]
  };
}
function getDefaultSuccess(Q = "light") {
  return Q === "dark" ? {
    main: green$1[400],
    light: green$1[300],
    dark: green$1[700]
  } : {
    main: green$1[800],
    light: green$1[500],
    dark: green$1[900]
  };
}
function getDefaultWarning(Q = "light") {
  return Q === "dark" ? {
    main: orange$1[400],
    light: orange$1[300],
    dark: orange$1[700]
  } : {
    main: "#ed6c02",
    light: orange$1[500],
    dark: orange$1[900]
  };
}
function createPalette(Q) {
  const {
    mode: ee = "light",
    contrastThreshold: ne = 3,
    tonalOffset: ie = 0.2
  } = Q, ae = _objectWithoutPropertiesLoose$1(Q, _excluded$6), ce = Q.primary || getDefaultPrimary(ee), le = Q.secondary || getDefaultSecondary(ee), de = Q.error || getDefaultError(ee), ye = Q.info || getDefaultInfo(ee), fe = Q.success || getDefaultSuccess(ee), Be = Q.warning || getDefaultWarning(ee);
  function Ee(be) {
    const Oe = getContrastRatio(be, dark.text.primary) >= ne ? dark.text.primary : light.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const He = getContrastRatio(be, Oe);
      He < 3 && console.error([`MUI: The contrast ratio of ${He}:1 for ${Oe} on ${be}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return Oe;
  }
  const me = ({
    color: be,
    name: Oe,
    mainShade: He = 500,
    lightShade: Se = 300,
    darkShade: Ge = 700
  }) => {
    if (be = _extends$1({}, be), !be.main && be[He] && (be.main = be[He]), !be.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${Oe ? ` (${Oe})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${He}\` property.` : formatMuiErrorMessage(11, Oe ? ` (${Oe})` : "", He));
    if (typeof be.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${Oe ? ` (${Oe})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(be.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : formatMuiErrorMessage(12, Oe ? ` (${Oe})` : "", JSON.stringify(be.main)));
    return addLightOrDark(be, "light", Se, ie), addLightOrDark(be, "dark", Ge, ie), be.contrastText || (be.contrastText = Ee(be.main)), be;
  }, ge = {
    dark,
    light
  };
  return process.env.NODE_ENV !== "production" && (ge[ee] || console.error(`MUI: The palette mode \`${ee}\` is not supported.`)), deepmerge(_extends$1({
    common: _extends$1({}, common$1),
    mode: ee,
    primary: me({
      color: ce,
      name: "primary"
    }),
    secondary: me({
      color: le,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    error: me({
      color: de,
      name: "error"
    }),
    warning: me({
      color: Be,
      name: "warning"
    }),
    info: me({
      color: ye,
      name: "info"
    }),
    success: me({
      color: fe,
      name: "success"
    }),
    grey: grey$1,
    contrastThreshold: ne,
    getContrastText: Ee,
    augmentColor: me,
    tonalOffset: ie
  }, ge[ee]), ae);
}
const _excluded$5 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
function round(Q) {
  return Math.round(Q * 1e5) / 1e5;
}
const caseAllCaps = {
  textTransform: "uppercase"
}, defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(Q, ee) {
  const ne = typeof ee == "function" ? ee(Q) : ee, {
    fontFamily: ie = defaultFontFamily,
    fontSize: ae = 14,
    fontWeightLight: ce = 300,
    fontWeightRegular: le = 400,
    fontWeightMedium: de = 500,
    fontWeightBold: ye = 700,
    htmlFontSize: fe = 16,
    allVariants: Be,
    pxToRem: Ee
  } = ne, me = _objectWithoutPropertiesLoose$1(ne, _excluded$5);
  process.env.NODE_ENV !== "production" && (typeof ae != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof fe != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const ge = ae / 14, we = Ee || ((He) => `${He / fe * ge}rem`), be = (He, Se, Ge, Fe, Pe) => _extends$1({
    fontFamily: ie,
    fontWeight: He,
    fontSize: we(Se),
    lineHeight: Ge
  }, ie === defaultFontFamily ? {
    letterSpacing: `${round(Fe / Se)}em`
  } : {}, Pe, Be), Oe = {
    h1: be(ce, 96, 1.167, -1.5),
    h2: be(ce, 60, 1.2, -0.5),
    h3: be(le, 48, 1.167, 0),
    h4: be(le, 34, 1.235, 0.25),
    h5: be(le, 24, 1.334, 0),
    h6: be(de, 20, 1.6, 0.15),
    subtitle1: be(le, 16, 1.75, 0.15),
    subtitle2: be(de, 14, 1.57, 0.1),
    body1: be(le, 16, 1.5, 0.15),
    body2: be(le, 14, 1.43, 0.15),
    button: be(de, 14, 1.75, 0.4, caseAllCaps),
    caption: be(le, 12, 1.66, 0.4),
    overline: be(le, 12, 2.66, 1, caseAllCaps)
  };
  return deepmerge(_extends$1({
    htmlFontSize: fe,
    pxToRem: we,
    fontFamily: ie,
    fontSize: ae,
    fontWeightLight: ce,
    fontWeightRegular: le,
    fontWeightMedium: de,
    fontWeightBold: ye
  }, Oe), me, {
    clone: !1
  });
}
const shadowKeyUmbraOpacity = 0.2, shadowKeyPenumbraOpacity = 0.14, shadowAmbientShadowOpacity = 0.12;
function createShadow(...Q) {
  return [`${Q[0]}px ${Q[1]}px ${Q[2]}px ${Q[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${Q[4]}px ${Q[5]}px ${Q[6]}px ${Q[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${Q[8]}px ${Q[9]}px ${Q[10]}px ${Q[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
}
const shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], shadows$1 = shadows, _excluded$4 = ["duration", "easing", "delay"], easing = {
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  standard: 300,
  complex: 375,
  enteringScreen: 225,
  leavingScreen: 195
};
function formatMs(Q) {
  return `${Math.round(Q)}ms`;
}
function getAutoHeightDuration(Q) {
  if (!Q)
    return 0;
  const ee = Q / 36;
  return Math.round((4 + 15 * ee ** 0.25 + ee / 5) * 10);
}
function createTransitions(Q) {
  const ee = _extends$1({}, easing, Q.easing), ne = _extends$1({}, duration, Q.duration);
  return _extends$1({
    getAutoHeightDuration,
    create: (ae = ["all"], ce = {}) => {
      const {
        duration: le = ne.standard,
        easing: de = ee.easeInOut,
        delay: ye = 0
      } = ce, fe = _objectWithoutPropertiesLoose$1(ce, _excluded$4);
      if (process.env.NODE_ENV !== "production") {
        const Be = (me) => typeof me == "string", Ee = (me) => !isNaN(parseFloat(me));
        !Be(ae) && !Array.isArray(ae) && console.error('MUI: Argument "props" must be a string or Array.'), !Ee(le) && !Be(le) && console.error(`MUI: Argument "duration" must be a number or a string but found ${le}.`), Be(de) || console.error('MUI: Argument "easing" must be a string.'), !Ee(ye) && !Be(ye) && console.error('MUI: Argument "delay" must be a number or a string.'), Object.keys(fe).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(fe).join(",")}].`);
      }
      return (Array.isArray(ae) ? ae : [ae]).map((Be) => `${Be} ${typeof le == "string" ? le : formatMs(le)} ${de} ${typeof ye == "string" ? ye : formatMs(ye)}`).join(",");
    }
  }, Q, {
    easing: ee,
    duration: ne
  });
}
const zIndex = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
}, zIndex$1 = zIndex, _excluded$3 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
function createTheme(Q = {}, ...ee) {
  const {
    mixins: ne = {},
    palette: ie = {},
    transitions: ae = {},
    typography: ce = {}
  } = Q, le = _objectWithoutPropertiesLoose$1(Q, _excluded$3);
  if (Q.vars)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name." : formatMuiErrorMessage(18));
  const de = createPalette(ie), ye = createTheme$1(Q);
  let fe = deepmerge(ye, {
    mixins: createMixins(ye.breakpoints, ne),
    palette: de,
    shadows: shadows$1.slice(),
    typography: createTypography(de, ce),
    transitions: createTransitions(ae),
    zIndex: _extends$1({}, zIndex$1)
  });
  if (fe = deepmerge(fe, le), fe = ee.reduce((Be, Ee) => deepmerge(Be, Ee), fe), process.env.NODE_ENV !== "production") {
    const Be = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], Ee = (me, ge) => {
      let we;
      for (we in me) {
        const be = me[we];
        if (Be.indexOf(we) !== -1 && Object.keys(be).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const Oe = generateUtilityClass("", we);
            console.error([`MUI: The \`${ge}\` component increases the CSS specificity of the \`${we}\` internal state.`, "You can not override it like this: ", JSON.stringify(me, null, 2), "", `Instead, you need to use the '&.${Oe}' syntax:`, JSON.stringify({
              root: {
                [`&.${Oe}`]: be
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          me[we] = {};
        }
      }
    };
    Object.keys(fe.components).forEach((me) => {
      const ge = fe.components[me].styleOverrides;
      ge && me.indexOf("Mui") === 0 && Ee(ge, me);
    });
  }
  return fe;
}
const defaultTheme = createTheme(), defaultTheme$1 = defaultTheme;
function useThemeProps({
  props: Q,
  name: ee
}) {
  return useThemeProps$1({
    props: Q,
    name: ee,
    defaultTheme: defaultTheme$1
  });
}
const rootShouldForwardProp = (Q) => shouldForwardProp(Q) && Q !== "classes", styled$2 = createStyled({
  defaultTheme: defaultTheme$1,
  rootShouldForwardProp
}), styled$3 = styled$2;
function _setPrototypeOf(Q, ee) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(ie, ae) {
    return ie.__proto__ = ae, ie;
  }, _setPrototypeOf(Q, ee);
}
function _inheritsLoose(Q, ee) {
  Q.prototype = Object.create(ee.prototype), Q.prototype.constructor = Q, _setPrototypeOf(Q, ee);
}
const TransitionGroupContext = React__default.createContext(null);
function _assertThisInitialized(Q) {
  if (Q === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return Q;
}
function getChildMapping(Q, ee) {
  var ne = function(ce) {
    return ee && isValidElement(ce) ? ee(ce) : ce;
  }, ie = /* @__PURE__ */ Object.create(null);
  return Q && Children.map(Q, function(ae) {
    return ae;
  }).forEach(function(ae) {
    ie[ae.key] = ne(ae);
  }), ie;
}
function mergeChildMappings(Q, ee) {
  Q = Q || {}, ee = ee || {};
  function ne(Be) {
    return Be in ee ? ee[Be] : Q[Be];
  }
  var ie = /* @__PURE__ */ Object.create(null), ae = [];
  for (var ce in Q)
    ce in ee ? ae.length && (ie[ce] = ae, ae = []) : ae.push(ce);
  var le, de = {};
  for (var ye in ee) {
    if (ie[ye])
      for (le = 0; le < ie[ye].length; le++) {
        var fe = ie[ye][le];
        de[ie[ye][le]] = ne(fe);
      }
    de[ye] = ne(ye);
  }
  for (le = 0; le < ae.length; le++)
    de[ae[le]] = ne(ae[le]);
  return de;
}
function getProp(Q, ee, ne) {
  return ne[ee] != null ? ne[ee] : Q.props[ee];
}
function getInitialChildMapping(Q, ee) {
  return getChildMapping(Q.children, function(ne) {
    return cloneElement(ne, {
      onExited: ee.bind(null, ne),
      in: !0,
      appear: getProp(ne, "appear", Q),
      enter: getProp(ne, "enter", Q),
      exit: getProp(ne, "exit", Q)
    });
  });
}
function getNextChildMapping(Q, ee, ne) {
  var ie = getChildMapping(Q.children), ae = mergeChildMappings(ee, ie);
  return Object.keys(ae).forEach(function(ce) {
    var le = ae[ce];
    if (!!isValidElement(le)) {
      var de = ce in ee, ye = ce in ie, fe = ee[ce], Be = isValidElement(fe) && !fe.props.in;
      ye && (!de || Be) ? ae[ce] = cloneElement(le, {
        onExited: ne.bind(null, le),
        in: !0,
        exit: getProp(le, "exit", Q),
        enter: getProp(le, "enter", Q)
      }) : !ye && de && !Be ? ae[ce] = cloneElement(le, {
        in: !1
      }) : ye && de && isValidElement(fe) && (ae[ce] = cloneElement(le, {
        onExited: ne.bind(null, le),
        in: fe.props.in,
        exit: getProp(le, "exit", Q),
        enter: getProp(le, "enter", Q)
      }));
    }
  }), ae;
}
var values = Object.values || function(Q) {
  return Object.keys(Q).map(function(ee) {
    return Q[ee];
  });
}, defaultProps = {
  component: "div",
  childFactory: function(ee) {
    return ee;
  }
}, TransitionGroup = /* @__PURE__ */ function(Q) {
  _inheritsLoose(ee, Q);
  function ee(ie, ae) {
    var ce;
    ce = Q.call(this, ie, ae) || this;
    var le = ce.handleExited.bind(_assertThisInitialized(ce));
    return ce.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: le,
      firstRender: !0
    }, ce;
  }
  var ne = ee.prototype;
  return ne.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, ne.componentWillUnmount = function() {
    this.mounted = !1;
  }, ee.getDerivedStateFromProps = function(ae, ce) {
    var le = ce.children, de = ce.handleExited, ye = ce.firstRender;
    return {
      children: ye ? getInitialChildMapping(ae, de) : getNextChildMapping(ae, le, de),
      firstRender: !1
    };
  }, ne.handleExited = function(ae, ce) {
    var le = getChildMapping(this.props.children);
    ae.key in le || (ae.props.onExited && ae.props.onExited(ce), this.mounted && this.setState(function(de) {
      var ye = _extends$1({}, de.children);
      return delete ye[ae.key], {
        children: ye
      };
    }));
  }, ne.render = function() {
    var ae = this.props, ce = ae.component, le = ae.childFactory, de = _objectWithoutPropertiesLoose$1(ae, ["component", "childFactory"]), ye = this.state.contextValue, fe = values(this.state.children).map(le);
    return delete de.appear, delete de.enter, delete de.exit, ce === null ? /* @__PURE__ */ jsx(TransitionGroupContext.Provider, {
      value: ye,
      children: fe
    }) : /* @__PURE__ */ jsx(TransitionGroupContext.Provider, {
      value: ye,
      children: /* @__PURE__ */ jsx(ce, {
        ...de,
        children: fe
      })
    });
  }, ee;
}(React__default.Component);
TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  component: propTypes.exports.any,
  children: propTypes.exports.node,
  appear: propTypes.exports.bool,
  enter: propTypes.exports.bool,
  exit: propTypes.exports.bool,
  childFactory: propTypes.exports.func
} : {};
TransitionGroup.defaultProps = defaultProps;
const TransitionGroup$1 = TransitionGroup;
function Ripple(Q) {
  const {
    className: ee,
    classes: ne,
    pulsate: ie = !1,
    rippleX: ae,
    rippleY: ce,
    rippleSize: le,
    in: de,
    onExited: ye,
    timeout: fe
  } = Q, [Be, Ee] = React.useState(!1), me = clsx(ee, ne.ripple, ne.rippleVisible, ie && ne.ripplePulsate), ge = {
    width: le,
    height: le,
    top: -(le / 2) + ce,
    left: -(le / 2) + ae
  }, we = clsx(ne.child, Be && ne.childLeaving, ie && ne.childPulsate);
  return !de && !Be && Ee(!0), React.useEffect(() => {
    if (!de && ye != null) {
      const be = setTimeout(ye, fe);
      return () => {
        clearTimeout(be);
      };
    }
  }, [ye, de, fe]), /* @__PURE__ */ jsx("span", {
    className: me,
    style: ge,
    children: /* @__PURE__ */ jsx("span", {
      className: we
    })
  });
}
process.env.NODE_ENV !== "production" && (Ripple.propTypes = {
  classes: propTypes.exports.object.isRequired,
  className: propTypes.exports.string,
  in: propTypes.exports.bool,
  onExited: propTypes.exports.func,
  pulsate: propTypes.exports.bool,
  rippleSize: propTypes.exports.number,
  rippleX: propTypes.exports.number,
  rippleY: propTypes.exports.number,
  timeout: propTypes.exports.number.isRequired
});
const touchRippleClasses = generateUtilityClasses("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), touchRippleClasses$1 = touchRippleClasses, _excluded$2 = ["center", "classes", "className"];
let _ = (Q) => Q, _t, _t2, _t3, _t4;
const DURATION = 550, DELAY_RIPPLE = 80, enterKeyframe = keyframes(_t || (_t = _`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)), exitKeyframe = keyframes(_t2 || (_t2 = _`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)), pulsateKeyframe = keyframes(_t3 || (_t3 = _`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)), TouchRippleRoot = styled$3("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), TouchRippleRipple = styled$3(Ripple, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(_t4 || (_t4 = _`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses$1.rippleVisible, enterKeyframe, DURATION, ({
  theme: Q
}) => Q.transitions.easing.easeInOut, touchRippleClasses$1.ripplePulsate, ({
  theme: Q
}) => Q.transitions.duration.shorter, touchRippleClasses$1.child, touchRippleClasses$1.childLeaving, exitKeyframe, DURATION, ({
  theme: Q
}) => Q.transitions.easing.easeInOut, touchRippleClasses$1.childPulsate, pulsateKeyframe, ({
  theme: Q
}) => Q.transitions.easing.easeInOut), TouchRipple = /* @__PURE__ */ React.forwardRef(function(ee, ne) {
  const ie = useThemeProps({
    props: ee,
    name: "MuiTouchRipple"
  }), {
    center: ae = !1,
    classes: ce = {},
    className: le
  } = ie, de = _objectWithoutPropertiesLoose$1(ie, _excluded$2), [ye, fe] = React.useState([]), Be = React.useRef(0), Ee = React.useRef(null);
  React.useEffect(() => {
    Ee.current && (Ee.current(), Ee.current = null);
  }, [ye]);
  const me = React.useRef(!1), ge = React.useRef(null), we = React.useRef(null), be = React.useRef(null);
  React.useEffect(() => () => {
    clearTimeout(ge.current);
  }, []);
  const Oe = React.useCallback((Fe) => {
    const {
      pulsate: Pe,
      rippleX: Je,
      rippleY: tt,
      rippleSize: ft,
      cb: Tt
    } = Fe;
    fe((Xe) => [...Xe, /* @__PURE__ */ jsx(TouchRippleRipple, {
      classes: {
        ripple: clsx(ce.ripple, touchRippleClasses$1.ripple),
        rippleVisible: clsx(ce.rippleVisible, touchRippleClasses$1.rippleVisible),
        ripplePulsate: clsx(ce.ripplePulsate, touchRippleClasses$1.ripplePulsate),
        child: clsx(ce.child, touchRippleClasses$1.child),
        childLeaving: clsx(ce.childLeaving, touchRippleClasses$1.childLeaving),
        childPulsate: clsx(ce.childPulsate, touchRippleClasses$1.childPulsate)
      },
      timeout: DURATION,
      pulsate: Pe,
      rippleX: Je,
      rippleY: tt,
      rippleSize: ft
    }, Be.current)]), Be.current += 1, Ee.current = Tt;
  }, [ce]), He = React.useCallback((Fe = {}, Pe = {}, Je = () => {
  }) => {
    const {
      pulsate: tt = !1,
      center: ft = ae || Pe.pulsate,
      fakeElement: Tt = !1
    } = Pe;
    if ((Fe == null ? void 0 : Fe.type) === "mousedown" && me.current) {
      me.current = !1;
      return;
    }
    (Fe == null ? void 0 : Fe.type) === "touchstart" && (me.current = !0);
    const Xe = Tt ? null : be.current, ht = Xe ? Xe.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let Qt, Gt, pt;
    if (ft || Fe === void 0 || Fe.clientX === 0 && Fe.clientY === 0 || !Fe.clientX && !Fe.touches)
      Qt = Math.round(ht.width / 2), Gt = Math.round(ht.height / 2);
    else {
      const {
        clientX: xt,
        clientY: Yt
      } = Fe.touches && Fe.touches.length > 0 ? Fe.touches[0] : Fe;
      Qt = Math.round(xt - ht.left), Gt = Math.round(Yt - ht.top);
    }
    if (ft)
      pt = Math.sqrt((2 * ht.width ** 2 + ht.height ** 2) / 3), pt % 2 === 0 && (pt += 1);
    else {
      const xt = Math.max(Math.abs((Xe ? Xe.clientWidth : 0) - Qt), Qt) * 2 + 2, Yt = Math.max(Math.abs((Xe ? Xe.clientHeight : 0) - Gt), Gt) * 2 + 2;
      pt = Math.sqrt(xt ** 2 + Yt ** 2);
    }
    Fe != null && Fe.touches ? we.current === null && (we.current = () => {
      Oe({
        pulsate: tt,
        rippleX: Qt,
        rippleY: Gt,
        rippleSize: pt,
        cb: Je
      });
    }, ge.current = setTimeout(() => {
      we.current && (we.current(), we.current = null);
    }, DELAY_RIPPLE)) : Oe({
      pulsate: tt,
      rippleX: Qt,
      rippleY: Gt,
      rippleSize: pt,
      cb: Je
    });
  }, [ae, Oe]), Se = React.useCallback(() => {
    He({}, {
      pulsate: !0
    });
  }, [He]), Ge = React.useCallback((Fe, Pe) => {
    if (clearTimeout(ge.current), (Fe == null ? void 0 : Fe.type) === "touchend" && we.current) {
      we.current(), we.current = null, ge.current = setTimeout(() => {
        Ge(Fe, Pe);
      });
      return;
    }
    we.current = null, fe((Je) => Je.length > 0 ? Je.slice(1) : Je), Ee.current = Pe;
  }, []);
  return React.useImperativeHandle(ne, () => ({
    pulsate: Se,
    start: He,
    stop: Ge
  }), [Se, He, Ge]), /* @__PURE__ */ jsx(TouchRippleRoot, _extends$1({
    className: clsx(touchRippleClasses$1.root, ce.root, le),
    ref: be
  }, de, {
    children: /* @__PURE__ */ jsx(TransitionGroup$1, {
      component: null,
      exit: !0,
      children: ye
    })
  }));
});
process.env.NODE_ENV !== "production" && (TouchRipple.propTypes = {
  center: propTypes.exports.bool,
  classes: propTypes.exports.object,
  className: propTypes.exports.string
});
const TouchRipple$1 = TouchRipple;
function getButtonBaseUtilityClass(Q) {
  return generateUtilityClass("MuiButtonBase", Q);
}
const buttonBaseClasses = generateUtilityClasses("MuiButtonBase", ["root", "disabled", "focusVisible"]), buttonBaseClasses$1 = buttonBaseClasses, _excluded$1 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"], useUtilityClasses$1 = (Q) => {
  const {
    disabled: ee,
    focusVisible: ne,
    focusVisibleClassName: ie,
    classes: ae
  } = Q, le = composeClasses({
    root: ["root", ee && "disabled", ne && "focusVisible"]
  }, getButtonBaseUtilityClass, ae);
  return ne && ie && (le.root += ` ${ie}`), le;
}, ButtonBaseRoot = styled$3("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (Q, ee) => ee.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  outline: 0,
  border: 0,
  margin: 0,
  borderRadius: 0,
  padding: 0,
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  WebkitAppearance: "none",
  textDecoration: "none",
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
  },
  [`&.${buttonBaseClasses$1.disabled}`]: {
    pointerEvents: "none",
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), ButtonBase = /* @__PURE__ */ React.forwardRef(function(ee, ne) {
  const ie = useThemeProps({
    props: ee,
    name: "MuiButtonBase"
  }), {
    action: ae,
    centerRipple: ce = !1,
    children: le,
    className: de,
    component: ye = "button",
    disabled: fe = !1,
    disableRipple: Be = !1,
    disableTouchRipple: Ee = !1,
    focusRipple: me = !1,
    LinkComponent: ge = "a",
    onBlur: we,
    onClick: be,
    onContextMenu: Oe,
    onDragLeave: He,
    onFocus: Se,
    onFocusVisible: Ge,
    onKeyDown: Fe,
    onKeyUp: Pe,
    onMouseDown: Je,
    onMouseLeave: tt,
    onMouseUp: ft,
    onTouchEnd: Tt,
    onTouchMove: Xe,
    onTouchStart: ht,
    tabIndex: Qt = 0,
    TouchRippleProps: Gt,
    touchRippleRef: pt,
    type: xt
  } = ie, Yt = _objectWithoutPropertiesLoose$1(ie, _excluded$1), Jt = React.useRef(null), Ht = React.useRef(null), Lt = useForkRef(Ht, pt), {
    isFocusVisibleRef: Pt,
    onFocus: yt,
    onBlur: kt,
    ref: $t
  } = useIsFocusVisible(), [Le, or] = React.useState(!1);
  fe && Le && or(!1), React.useImperativeHandle(ae, () => ({
    focusVisible: () => {
      or(!0), Jt.current.focus();
    }
  }), []);
  const [tr, lr] = React.useState(!1);
  React.useEffect(() => {
    lr(!0);
  }, []);
  const gt = tr && !Be && !fe;
  React.useEffect(() => {
    Le && me && !Be && tr && Ht.current.pulsate();
  }, [Be, me, Le, tr]);
  function Ut(Re, it, Ct = Ee) {
    return useEventCallback((Nt) => (it && it(Nt), !Ct && Ht.current && Ht.current[Re](Nt), !0));
  }
  const Ze = Ut("start", Je), rt = Ut("stop", Oe), $e = Ut("stop", He), Bt = Ut("stop", ft), ct = Ut("stop", (Re) => {
    Le && Re.preventDefault(), tt && tt(Re);
  }), je = Ut("start", ht), _e = Ut("stop", Tt), Ie = Ut("stop", Xe), Ce = Ut("stop", (Re) => {
    kt(Re), Pt.current === !1 && or(!1), we && we(Re);
  }, !1), ke = useEventCallback((Re) => {
    Jt.current || (Jt.current = Re.currentTarget), yt(Re), Pt.current === !0 && (or(!0), Ge && Ge(Re)), Se && Se(Re);
  }), Ve = () => {
    const Re = Jt.current;
    return ye && ye !== "button" && !(Re.tagName === "A" && Re.href);
  }, Ke = React.useRef(!1), ot = useEventCallback((Re) => {
    me && !Ke.current && Le && Ht.current && Re.key === " " && (Ke.current = !0, Ht.current.stop(Re, () => {
      Ht.current.start(Re);
    })), Re.target === Re.currentTarget && Ve() && Re.key === " " && Re.preventDefault(), Fe && Fe(Re), Re.target === Re.currentTarget && Ve() && Re.key === "Enter" && !fe && (Re.preventDefault(), be && be(Re));
  }), St = useEventCallback((Re) => {
    me && Re.key === " " && Ht.current && Le && !Re.defaultPrevented && (Ke.current = !1, Ht.current.stop(Re, () => {
      Ht.current.pulsate(Re);
    })), Pe && Pe(Re), be && Re.target === Re.currentTarget && Ve() && Re.key === " " && !Re.defaultPrevented && be(Re);
  });
  let Vt = ye;
  Vt === "button" && (Yt.href || Yt.to) && (Vt = ge);
  const zt = {};
  Vt === "button" ? (zt.type = xt === void 0 ? "button" : xt, zt.disabled = fe) : (!Yt.href && !Yt.to && (zt.role = "button"), fe && (zt["aria-disabled"] = fe));
  const Wt = useForkRef(ne, $t, Jt);
  process.env.NODE_ENV !== "production" && React.useEffect(() => {
    gt && !Ht.current && console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join(`
`));
  }, [gt]);
  const qe = _extends$1({}, ie, {
    centerRipple: ce,
    component: ye,
    disabled: fe,
    disableRipple: Be,
    disableTouchRipple: Ee,
    focusRipple: me,
    tabIndex: Qt,
    focusVisible: Le
  }), Te = useUtilityClasses$1(qe);
  return /* @__PURE__ */ jsxs(ButtonBaseRoot, _extends$1({
    as: Vt,
    className: clsx(Te.root, de),
    ownerState: qe,
    onBlur: Ce,
    onClick: be,
    onContextMenu: rt,
    onFocus: ke,
    onKeyDown: ot,
    onKeyUp: St,
    onMouseDown: Ze,
    onMouseLeave: ct,
    onMouseUp: Bt,
    onDragLeave: $e,
    onTouchEnd: _e,
    onTouchMove: Ie,
    onTouchStart: je,
    ref: Wt,
    tabIndex: fe ? -1 : Qt,
    type: xt
  }, zt, Yt, {
    children: [le, gt ? /* @__PURE__ */ jsx(TouchRipple$1, _extends$1({
      ref: Lt,
      center: ce
    }, Gt)) : null]
  }));
});
process.env.NODE_ENV !== "production" && (ButtonBase.propTypes = {
  action: refType$1,
  centerRipple: propTypes.exports.bool,
  children: propTypes.exports.node,
  classes: propTypes.exports.object,
  className: propTypes.exports.string,
  component: elementTypeAcceptingRef$1,
  disabled: propTypes.exports.bool,
  disableRipple: propTypes.exports.bool,
  disableTouchRipple: propTypes.exports.bool,
  focusRipple: propTypes.exports.bool,
  focusVisibleClassName: propTypes.exports.string,
  href: propTypes.exports.any,
  LinkComponent: propTypes.exports.elementType,
  onBlur: propTypes.exports.func,
  onClick: propTypes.exports.func,
  onContextMenu: propTypes.exports.func,
  onDragLeave: propTypes.exports.func,
  onFocus: propTypes.exports.func,
  onFocusVisible: propTypes.exports.func,
  onKeyDown: propTypes.exports.func,
  onKeyUp: propTypes.exports.func,
  onMouseDown: propTypes.exports.func,
  onMouseLeave: propTypes.exports.func,
  onMouseUp: propTypes.exports.func,
  onTouchEnd: propTypes.exports.func,
  onTouchMove: propTypes.exports.func,
  onTouchStart: propTypes.exports.func,
  sx: propTypes.exports.oneOfType([propTypes.exports.arrayOf(propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object, propTypes.exports.bool])), propTypes.exports.func, propTypes.exports.object]),
  tabIndex: propTypes.exports.number,
  TouchRippleProps: propTypes.exports.object,
  touchRippleRef: propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.shape({
    current: propTypes.exports.shape({
      pulsate: propTypes.exports.func.isRequired,
      start: propTypes.exports.func.isRequired,
      stop: propTypes.exports.func.isRequired
    })
  })]),
  type: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "reset", "submit"]), propTypes.exports.string])
});
const ButtonBase$1 = ButtonBase;
function getButtonUtilityClass(Q) {
  return generateUtilityClass("MuiButton", Q);
}
const buttonClasses = generateUtilityClasses("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]), buttonClasses$1 = buttonClasses, ButtonGroupContext = /* @__PURE__ */ React.createContext({});
process.env.NODE_ENV !== "production" && (ButtonGroupContext.displayName = "ButtonGroupContext");
const ButtonGroupContext$1 = ButtonGroupContext, _excluded = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"], useUtilityClasses = (Q) => {
  const {
    color: ee,
    disableElevation: ne,
    fullWidth: ie,
    size: ae,
    variant: ce,
    classes: le
  } = Q, de = {
    root: ["root", ce, `${ce}${capitalize(ee)}`, `size${capitalize(ae)}`, `${ce}Size${capitalize(ae)}`, ee === "inherit" && "colorInherit", ne && "disableElevation", ie && "fullWidth"],
    label: ["label"],
    startIcon: ["startIcon", `iconSize${capitalize(ae)}`],
    endIcon: ["endIcon", `iconSize${capitalize(ae)}`]
  }, ye = composeClasses(de, getButtonUtilityClass, le);
  return _extends$1({}, le, ye);
}, commonIconStyles = (Q) => _extends$1({}, Q.size === "small" && {
  "& > *:nth-of-type(1)": {
    fontSize: 18
  }
}, Q.size === "medium" && {
  "& > *:nth-of-type(1)": {
    fontSize: 20
  }
}, Q.size === "large" && {
  "& > *:nth-of-type(1)": {
    fontSize: 22
  }
}), ButtonRoot = styled$3(ButtonBase$1, {
  shouldForwardProp: (Q) => rootShouldForwardProp(Q) || Q === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (Q, ee) => {
    const {
      ownerState: ne
    } = Q;
    return [ee.root, ee[ne.variant], ee[`${ne.variant}${capitalize(ne.color)}`], ee[`size${capitalize(ne.size)}`], ee[`${ne.variant}Size${capitalize(ne.size)}`], ne.color === "inherit" && ee.colorInherit, ne.disableElevation && ee.disableElevation, ne.fullWidth && ee.fullWidth];
  }
})(({
  theme: Q,
  ownerState: ee
}) => {
  var ne, ie;
  return _extends$1({}, Q.typography.button, {
    minWidth: 64,
    padding: "6px 16px",
    borderRadius: (Q.vars || Q).shape.borderRadius,
    transition: Q.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: Q.transitions.duration.short
    }),
    "&:hover": _extends$1({
      textDecoration: "none",
      backgroundColor: Q.vars ? `rgba(${Q.vars.palette.text.primaryChannel} / ${Q.vars.palette.action.hoverOpacity})` : alpha(Q.palette.text.primary, Q.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "text" && ee.color !== "inherit" && {
      backgroundColor: Q.vars ? `rgba(${Q.vars.palette[ee.color].mainChannel} / ${Q.vars.palette.action.hoverOpacity})` : alpha(Q.palette[ee.color].main, Q.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "outlined" && ee.color !== "inherit" && {
      border: `1px solid ${(Q.vars || Q).palette[ee.color].main}`,
      backgroundColor: Q.vars ? `rgba(${Q.vars.palette[ee.color].mainChannel} / ${Q.vars.palette.action.hoverOpacity})` : alpha(Q.palette[ee.color].main, Q.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "contained" && {
      backgroundColor: (Q.vars || Q).palette.grey.A100,
      boxShadow: (Q.vars || Q).shadows[4],
      "@media (hover: none)": {
        boxShadow: (Q.vars || Q).shadows[2],
        backgroundColor: (Q.vars || Q).palette.grey[300]
      }
    }, ee.variant === "contained" && ee.color !== "inherit" && {
      backgroundColor: (Q.vars || Q).palette[ee.color].dark,
      "@media (hover: none)": {
        backgroundColor: (Q.vars || Q).palette[ee.color].main
      }
    }),
    "&:active": _extends$1({}, ee.variant === "contained" && {
      boxShadow: (Q.vars || Q).shadows[8]
    }),
    [`&.${buttonClasses$1.focusVisible}`]: _extends$1({}, ee.variant === "contained" && {
      boxShadow: (Q.vars || Q).shadows[6]
    }),
    [`&.${buttonClasses$1.disabled}`]: _extends$1({
      color: (Q.vars || Q).palette.action.disabled
    }, ee.variant === "outlined" && {
      border: `1px solid ${(Q.vars || Q).palette.action.disabledBackground}`
    }, ee.variant === "outlined" && ee.color === "secondary" && {
      border: `1px solid ${(Q.vars || Q).palette.action.disabled}`
    }, ee.variant === "contained" && {
      color: (Q.vars || Q).palette.action.disabled,
      boxShadow: (Q.vars || Q).shadows[0],
      backgroundColor: (Q.vars || Q).palette.action.disabledBackground
    })
  }, ee.variant === "text" && {
    padding: "6px 8px"
  }, ee.variant === "text" && ee.color !== "inherit" && {
    color: (Q.vars || Q).palette[ee.color].main
  }, ee.variant === "outlined" && {
    padding: "5px 15px",
    border: "1px solid currentColor"
  }, ee.variant === "outlined" && ee.color !== "inherit" && {
    color: (Q.vars || Q).palette[ee.color].main,
    border: Q.vars ? `1px solid rgba(${Q.vars.palette[ee.color].mainChannel} / 0.5)` : `1px solid ${alpha(Q.palette[ee.color].main, 0.5)}`
  }, ee.variant === "contained" && {
    color: Q.vars ? Q.vars.palette.text.primary : (ne = (ie = Q.palette).getContrastText) == null ? void 0 : ne.call(ie, Q.palette.grey[300]),
    backgroundColor: (Q.vars || Q).palette.grey[300],
    boxShadow: (Q.vars || Q).shadows[2]
  }, ee.variant === "contained" && ee.color !== "inherit" && {
    color: (Q.vars || Q).palette[ee.color].contrastText,
    backgroundColor: (Q.vars || Q).palette[ee.color].main
  }, ee.color === "inherit" && {
    color: "inherit",
    borderColor: "currentColor"
  }, ee.size === "small" && ee.variant === "text" && {
    padding: "4px 5px",
    fontSize: Q.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "text" && {
    padding: "8px 11px",
    fontSize: Q.typography.pxToRem(15)
  }, ee.size === "small" && ee.variant === "outlined" && {
    padding: "3px 9px",
    fontSize: Q.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "outlined" && {
    padding: "7px 21px",
    fontSize: Q.typography.pxToRem(15)
  }, ee.size === "small" && ee.variant === "contained" && {
    padding: "4px 10px",
    fontSize: Q.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "contained" && {
    padding: "8px 22px",
    fontSize: Q.typography.pxToRem(15)
  }, ee.fullWidth && {
    width: "100%"
  });
}, ({
  ownerState: Q
}) => Q.disableElevation && {
  boxShadow: "none",
  "&:hover": {
    boxShadow: "none"
  },
  [`&.${buttonClasses$1.focusVisible}`]: {
    boxShadow: "none"
  },
  "&:active": {
    boxShadow: "none"
  },
  [`&.${buttonClasses$1.disabled}`]: {
    boxShadow: "none"
  }
}), ButtonStartIcon = styled$3("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (Q, ee) => {
    const {
      ownerState: ne
    } = Q;
    return [ee.startIcon, ee[`iconSize${capitalize(ne.size)}`]];
  }
})(({
  ownerState: Q
}) => _extends$1({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4
}, Q.size === "small" && {
  marginLeft: -2
}, commonIconStyles(Q))), ButtonEndIcon = styled$3("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (Q, ee) => {
    const {
      ownerState: ne
    } = Q;
    return [ee.endIcon, ee[`iconSize${capitalize(ne.size)}`]];
  }
})(({
  ownerState: Q
}) => _extends$1({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8
}, Q.size === "small" && {
  marginRight: -2
}, commonIconStyles(Q))), Button = /* @__PURE__ */ React.forwardRef(function(ee, ne) {
  const ie = React.useContext(ButtonGroupContext$1), ae = resolveProps(ie, ee), ce = useThemeProps({
    props: ae,
    name: "MuiButton"
  }), {
    children: le,
    color: de = "primary",
    component: ye = "button",
    className: fe,
    disabled: Be = !1,
    disableElevation: Ee = !1,
    disableFocusRipple: me = !1,
    endIcon: ge,
    focusVisibleClassName: we,
    fullWidth: be = !1,
    size: Oe = "medium",
    startIcon: He,
    type: Se,
    variant: Ge = "text"
  } = ce, Fe = _objectWithoutPropertiesLoose$1(ce, _excluded), Pe = _extends$1({}, ce, {
    color: de,
    component: ye,
    disabled: Be,
    disableElevation: Ee,
    disableFocusRipple: me,
    fullWidth: be,
    size: Oe,
    type: Se,
    variant: Ge
  }), Je = useUtilityClasses(Pe), tt = He && /* @__PURE__ */ jsx(ButtonStartIcon, {
    className: Je.startIcon,
    ownerState: Pe,
    children: He
  }), ft = ge && /* @__PURE__ */ jsx(ButtonEndIcon, {
    className: Je.endIcon,
    ownerState: Pe,
    children: ge
  });
  return /* @__PURE__ */ jsxs(ButtonRoot, _extends$1({
    ownerState: Pe,
    className: clsx(ie.className, Je.root, fe),
    component: ye,
    disabled: Be,
    focusRipple: !me,
    focusVisibleClassName: clsx(Je.focusVisible, we),
    ref: ne,
    type: Se
  }, Fe, {
    classes: Je,
    children: [tt, le, ft]
  }));
});
process.env.NODE_ENV !== "production" && (Button.propTypes = {
  children: propTypes.exports.node,
  classes: propTypes.exports.object,
  className: propTypes.exports.string,
  color: propTypes.exports.oneOfType([propTypes.exports.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), propTypes.exports.string]),
  component: propTypes.exports.elementType,
  disabled: propTypes.exports.bool,
  disableElevation: propTypes.exports.bool,
  disableFocusRipple: propTypes.exports.bool,
  disableRipple: propTypes.exports.bool,
  endIcon: propTypes.exports.node,
  focusVisibleClassName: propTypes.exports.string,
  fullWidth: propTypes.exports.bool,
  href: propTypes.exports.string,
  size: propTypes.exports.oneOfType([propTypes.exports.oneOf(["small", "medium", "large"]), propTypes.exports.string]),
  startIcon: propTypes.exports.node,
  sx: propTypes.exports.oneOfType([propTypes.exports.arrayOf(propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object, propTypes.exports.bool])), propTypes.exports.func, propTypes.exports.object]),
  type: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "reset", "submit"]), propTypes.exports.string]),
  variant: propTypes.exports.oneOfType([propTypes.exports.oneOf(["contained", "outlined", "text"]), propTypes.exports.string])
});
const Button$1 = Button, DndContext = createContext({
  dragDropManager: void 0
});
function formatProdErrorMessage(Q) {
  return "Minified Redux error #" + Q + "; visit https://redux.js.org/Errors?code=" + Q + " for the full message or use the non-minified dev environment for full errors. ";
}
var $$observable = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}(), randomString = function() {
  return Math.random().toString(36).substring(7).split("").join(".");
}, ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};
function isPlainObject$3(Q) {
  if (typeof Q != "object" || Q === null)
    return !1;
  for (var ee = Q; Object.getPrototypeOf(ee) !== null; )
    ee = Object.getPrototypeOf(ee);
  return Object.getPrototypeOf(Q) === ee;
}
function miniKindOf(Q) {
  if (Q === void 0)
    return "undefined";
  if (Q === null)
    return "null";
  var ee = typeof Q;
  switch (ee) {
    case "boolean":
    case "string":
    case "number":
    case "symbol":
    case "function":
      return ee;
  }
  if (Array.isArray(Q))
    return "array";
  if (isDate$1(Q))
    return "date";
  if (isError(Q))
    return "error";
  var ne = ctorName(Q);
  switch (ne) {
    case "Symbol":
    case "Promise":
    case "WeakMap":
    case "WeakSet":
    case "Map":
    case "Set":
      return ne;
  }
  return ee.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function ctorName(Q) {
  return typeof Q.constructor == "function" ? Q.constructor.name : null;
}
function isError(Q) {
  return Q instanceof Error || typeof Q.message == "string" && Q.constructor && typeof Q.constructor.stackTraceLimit == "number";
}
function isDate$1(Q) {
  return Q instanceof Date ? !0 : typeof Q.toDateString == "function" && typeof Q.getDate == "function" && typeof Q.setDate == "function";
}
function kindOf(Q) {
  var ee = typeof Q;
  return process.env.NODE_ENV !== "production" && (ee = miniKindOf(Q)), ee;
}
function createStore$1(Q, ee, ne) {
  var ie;
  if (typeof ee == "function" && typeof ne == "function" || typeof ne == "function" && typeof arguments[3] == "function")
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(0) : "It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
  if (typeof ee == "function" && typeof ne > "u" && (ne = ee, ee = void 0), typeof ne < "u") {
    if (typeof ne != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(1) : "Expected the enhancer to be a function. Instead, received: '" + kindOf(ne) + "'");
    return ne(createStore$1)(Q, ee);
  }
  if (typeof Q != "function")
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(2) : "Expected the root reducer to be a function. Instead, received: '" + kindOf(Q) + "'");
  var ae = Q, ce = ee, le = [], de = le, ye = !1;
  function fe() {
    de === le && (de = le.slice());
  }
  function Be() {
    if (ye)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(3) : "You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
    return ce;
  }
  function Ee(be) {
    if (typeof be != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(4) : "Expected the listener to be a function. Instead, received: '" + kindOf(be) + "'");
    if (ye)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(5) : "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
    var Oe = !0;
    return fe(), de.push(be), function() {
      if (!!Oe) {
        if (ye)
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(6) : "You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
        Oe = !1, fe();
        var Se = de.indexOf(be);
        de.splice(Se, 1), le = null;
      }
    };
  }
  function me(be) {
    if (!isPlainObject$3(be))
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(be) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    if (typeof be.type > "u")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    if (ye)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(9) : "Reducers may not dispatch actions.");
    try {
      ye = !0, ce = ae(ce, be);
    } finally {
      ye = !1;
    }
    for (var Oe = le = de, He = 0; He < Oe.length; He++) {
      var Se = Oe[He];
      Se();
    }
    return be;
  }
  function ge(be) {
    if (typeof be != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(10) : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(be));
    ae = be, me({
      type: ActionTypes.REPLACE
    });
  }
  function we() {
    var be, Oe = Ee;
    return be = {
      subscribe: function(Se) {
        if (typeof Se != "object" || Se === null)
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(11) : "Expected the observer to be an object. Instead, received: '" + kindOf(Se) + "'");
        function Ge() {
          Se.next && Se.next(Be());
        }
        Ge();
        var Fe = Oe(Ge);
        return {
          unsubscribe: Fe
        };
      }
    }, be[$$observable] = function() {
      return this;
    }, be;
  }
  return me({
    type: ActionTypes.INIT
  }), ie = {
    dispatch: me,
    subscribe: Ee,
    getState: Be,
    replaceReducer: ge
  }, ie[$$observable] = we, ie;
}
function warning(Q) {
  typeof console < "u" && typeof console.error == "function" && console.error(Q);
  try {
    throw new Error(Q);
  } catch {
  }
}
function isCrushed() {
}
process.env.NODE_ENV !== "production" && typeof isCrushed.name == "string" && isCrushed.name !== "isCrushed" && warning('You are currently using minified code outside of NODE_ENV === "production". This means that you are running a slower development build of Redux. You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) to ensure you have the correct code for your production build.');
function invariant(Q, ee, ...ne) {
  if (isProduction() && ee === void 0)
    throw new Error("invariant requires an error message argument");
  if (!Q) {
    let ie;
    if (ee === void 0)
      ie = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
    else {
      let ae = 0;
      ie = new Error(ee.replace(/%s/g, function() {
        return ne[ae++];
      })), ie.name = "Invariant Violation";
    }
    throw ie.framesToPop = 1, ie;
  }
}
function isProduction() {
  return typeof process < "u" && process.env.NODE_ENV === "production";
}
function get(Q, ee, ne) {
  return ee.split(".").reduce(
    (ie, ae) => ie && ie[ae] ? ie[ae] : ne || null,
    Q
  );
}
function without$1(Q, ee) {
  return Q.filter(
    (ne) => ne !== ee
  );
}
function isObject$1(Q) {
  return typeof Q == "object";
}
function xor(Q, ee) {
  const ne = /* @__PURE__ */ new Map(), ie = (ce) => {
    ne.set(ce, ne.has(ce) ? ne.get(ce) + 1 : 1);
  };
  Q.forEach(ie), ee.forEach(ie);
  const ae = [];
  return ne.forEach((ce, le) => {
    ce === 1 && ae.push(le);
  }), ae;
}
function intersection(Q, ee) {
  return Q.filter(
    (ne) => ee.indexOf(ne) > -1
  );
}
const INIT_COORDS = "dnd-core/INIT_COORDS", BEGIN_DRAG = "dnd-core/BEGIN_DRAG", PUBLISH_DRAG_SOURCE = "dnd-core/PUBLISH_DRAG_SOURCE", HOVER = "dnd-core/HOVER", DROP = "dnd-core/DROP", END_DRAG = "dnd-core/END_DRAG";
function setClientOffset(Q, ee) {
  return {
    type: INIT_COORDS,
    payload: {
      sourceClientOffset: ee || null,
      clientOffset: Q || null
    }
  };
}
const ResetCoordinatesAction = {
  type: INIT_COORDS,
  payload: {
    clientOffset: null,
    sourceClientOffset: null
  }
};
function createBeginDrag(Q) {
  return function(ne = [], ie = {
    publishSource: !0
  }) {
    const { publishSource: ae = !0, clientOffset: ce, getSourceClientOffset: le } = ie, de = Q.getMonitor(), ye = Q.getRegistry();
    Q.dispatch(setClientOffset(ce)), verifyInvariants$1(ne, de, ye);
    const fe = getDraggableSource(ne, de);
    if (fe == null) {
      Q.dispatch(ResetCoordinatesAction);
      return;
    }
    let Be = null;
    if (ce) {
      if (!le)
        throw new Error("getSourceClientOffset must be defined");
      verifyGetSourceClientOffsetIsFunction(le), Be = le(fe);
    }
    Q.dispatch(setClientOffset(ce, Be));
    const me = ye.getSource(fe).beginDrag(de, fe);
    if (me == null)
      return;
    verifyItemIsObject(me), ye.pinSource(fe);
    const ge = ye.getSourceType(fe);
    return {
      type: BEGIN_DRAG,
      payload: {
        itemType: ge,
        item: me,
        sourceId: fe,
        clientOffset: ce || null,
        sourceClientOffset: Be || null,
        isSourcePublic: !!ae
      }
    };
  };
}
function verifyInvariants$1(Q, ee, ne) {
  invariant(!ee.isDragging(), "Cannot call beginDrag while dragging."), Q.forEach(function(ie) {
    invariant(ne.getSource(ie), "Expected sourceIds to be registered.");
  });
}
function verifyGetSourceClientOffsetIsFunction(Q) {
  invariant(typeof Q == "function", "When clientOffset is provided, getSourceClientOffset must be a function.");
}
function verifyItemIsObject(Q) {
  invariant(isObject$1(Q), "Item must be an object.");
}
function getDraggableSource(Q, ee) {
  let ne = null;
  for (let ie = Q.length - 1; ie >= 0; ie--)
    if (ee.canDragSource(Q[ie])) {
      ne = Q[ie];
      break;
    }
  return ne;
}
function _defineProperty$4(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread$4(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty$4(Q, ae, ne[ae]);
    });
  }
  return Q;
}
function createDrop(Q) {
  return function(ne = {}) {
    const ie = Q.getMonitor(), ae = Q.getRegistry();
    verifyInvariants(ie), getDroppableTargets(ie).forEach((le, de) => {
      const ye = determineDropResult(le, de, ae, ie), fe = {
        type: DROP,
        payload: {
          dropResult: _objectSpread$4({}, ne, ye)
        }
      };
      Q.dispatch(fe);
    });
  };
}
function verifyInvariants(Q) {
  invariant(Q.isDragging(), "Cannot call drop while not dragging."), invariant(!Q.didDrop(), "Cannot call drop twice during one drag operation.");
}
function determineDropResult(Q, ee, ne, ie) {
  const ae = ne.getTarget(Q);
  let ce = ae ? ae.drop(ie, Q) : void 0;
  return verifyDropResultType(ce), typeof ce > "u" && (ce = ee === 0 ? {} : ie.getDropResult()), ce;
}
function verifyDropResultType(Q) {
  invariant(typeof Q > "u" || isObject$1(Q), "Drop result must either be an object or undefined.");
}
function getDroppableTargets(Q) {
  const ee = Q.getTargetIds().filter(Q.canDropOnTarget, Q);
  return ee.reverse(), ee;
}
function createEndDrag(Q) {
  return function() {
    const ne = Q.getMonitor(), ie = Q.getRegistry();
    verifyIsDragging(ne);
    const ae = ne.getSourceId();
    return ae != null && (ie.getSource(ae, !0).endDrag(ne, ae), ie.unpinSource()), {
      type: END_DRAG
    };
  };
}
function verifyIsDragging(Q) {
  invariant(Q.isDragging(), "Cannot call endDrag while not dragging.");
}
function matchesType(Q, ee) {
  return ee === null ? Q === null : Array.isArray(Q) ? Q.some(
    (ne) => ne === ee
  ) : Q === ee;
}
function createHover(Q) {
  return function(ne, { clientOffset: ie } = {}) {
    verifyTargetIdsIsArray(ne);
    const ae = ne.slice(0), ce = Q.getMonitor(), le = Q.getRegistry(), de = ce.getItemType();
    return removeNonMatchingTargetIds(ae, le, de), checkInvariants(ae, ce, le), hoverAllTargets(ae, ce, le), {
      type: HOVER,
      payload: {
        targetIds: ae,
        clientOffset: ie || null
      }
    };
  };
}
function verifyTargetIdsIsArray(Q) {
  invariant(Array.isArray(Q), "Expected targetIds to be an array.");
}
function checkInvariants(Q, ee, ne) {
  invariant(ee.isDragging(), "Cannot call hover while not dragging."), invariant(!ee.didDrop(), "Cannot call hover after drop.");
  for (let ie = 0; ie < Q.length; ie++) {
    const ae = Q[ie];
    invariant(Q.lastIndexOf(ae) === ie, "Expected targetIds to be unique in the passed array.");
    const ce = ne.getTarget(ae);
    invariant(ce, "Expected targetIds to be registered.");
  }
}
function removeNonMatchingTargetIds(Q, ee, ne) {
  for (let ie = Q.length - 1; ie >= 0; ie--) {
    const ae = Q[ie], ce = ee.getTargetType(ae);
    matchesType(ce, ne) || Q.splice(ie, 1);
  }
}
function hoverAllTargets(Q, ee, ne) {
  Q.forEach(function(ie) {
    ne.getTarget(ie).hover(ee, ie);
  });
}
function createPublishDragSource(Q) {
  return function() {
    if (Q.getMonitor().isDragging())
      return {
        type: PUBLISH_DRAG_SOURCE
      };
  };
}
function createDragDropActions(Q) {
  return {
    beginDrag: createBeginDrag(Q),
    publishDragSource: createPublishDragSource(Q),
    hover: createHover(Q),
    drop: createDrop(Q),
    endDrag: createEndDrag(Q)
  };
}
class DragDropManagerImpl {
  receiveBackend(ee) {
    this.backend = ee;
  }
  getMonitor() {
    return this.monitor;
  }
  getBackend() {
    return this.backend;
  }
  getRegistry() {
    return this.monitor.registry;
  }
  getActions() {
    const ee = this, { dispatch: ne } = this.store;
    function ie(ce) {
      return (...le) => {
        const de = ce.apply(ee, le);
        typeof de < "u" && ne(de);
      };
    }
    const ae = createDragDropActions(this);
    return Object.keys(ae).reduce((ce, le) => {
      const de = ae[le];
      return ce[le] = ie(de), ce;
    }, {});
  }
  dispatch(ee) {
    this.store.dispatch(ee);
  }
  constructor(ee, ne) {
    this.isSetUp = !1, this.handleRefCountChange = () => {
      const ie = this.store.getState().refCount > 0;
      this.backend && (ie && !this.isSetUp ? (this.backend.setup(), this.isSetUp = !0) : !ie && this.isSetUp && (this.backend.teardown(), this.isSetUp = !1));
    }, this.store = ee, this.monitor = ne, ee.subscribe(this.handleRefCountChange);
  }
}
function add(Q, ee) {
  return {
    x: Q.x + ee.x,
    y: Q.y + ee.y
  };
}
function subtract(Q, ee) {
  return {
    x: Q.x - ee.x,
    y: Q.y - ee.y
  };
}
function getSourceClientOffset(Q) {
  const { clientOffset: ee, initialClientOffset: ne, initialSourceClientOffset: ie } = Q;
  return !ee || !ne || !ie ? null : subtract(add(ee, ie), ne);
}
function getDifferenceFromInitialOffset(Q) {
  const { clientOffset: ee, initialClientOffset: ne } = Q;
  return !ee || !ne ? null : subtract(ee, ne);
}
const NONE = [], ALL = [];
NONE.__IS_NONE__ = !0;
ALL.__IS_ALL__ = !0;
function areDirty(Q, ee) {
  return Q === NONE ? !1 : Q === ALL || typeof ee > "u" ? !0 : intersection(ee, Q).length > 0;
}
class DragDropMonitorImpl {
  subscribeToStateChange(ee, ne = {}) {
    const { handlerIds: ie } = ne;
    invariant(typeof ee == "function", "listener must be a function."), invariant(typeof ie > "u" || Array.isArray(ie), "handlerIds, when specified, must be an array of strings.");
    let ae = this.store.getState().stateId;
    const ce = () => {
      const le = this.store.getState(), de = le.stateId;
      try {
        de === ae || de === ae + 1 && !areDirty(le.dirtyHandlerIds, ie) || ee();
      } finally {
        ae = de;
      }
    };
    return this.store.subscribe(ce);
  }
  subscribeToOffsetChange(ee) {
    invariant(typeof ee == "function", "listener must be a function.");
    let ne = this.store.getState().dragOffset;
    const ie = () => {
      const ae = this.store.getState().dragOffset;
      ae !== ne && (ne = ae, ee());
    };
    return this.store.subscribe(ie);
  }
  canDragSource(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getSource(ee);
    return invariant(ne, `Expected to find a valid source. sourceId=${ee}`), this.isDragging() ? !1 : ne.canDrag(this, ee);
  }
  canDropOnTarget(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getTarget(ee);
    if (invariant(ne, `Expected to find a valid target. targetId=${ee}`), !this.isDragging() || this.didDrop())
      return !1;
    const ie = this.registry.getTargetType(ee), ae = this.getItemType();
    return matchesType(ie, ae) && ne.canDrop(this, ee);
  }
  isDragging() {
    return Boolean(this.getItemType());
  }
  isDraggingSource(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getSource(ee, !0);
    if (invariant(ne, `Expected to find a valid source. sourceId=${ee}`), !this.isDragging() || !this.isSourcePublic())
      return !1;
    const ie = this.registry.getSourceType(ee), ae = this.getItemType();
    return ie !== ae ? !1 : ne.isDragging(this, ee);
  }
  isOverTarget(ee, ne = {
    shallow: !1
  }) {
    if (!ee)
      return !1;
    const { shallow: ie } = ne;
    if (!this.isDragging())
      return !1;
    const ae = this.registry.getTargetType(ee), ce = this.getItemType();
    if (ce && !matchesType(ae, ce))
      return !1;
    const le = this.getTargetIds();
    if (!le.length)
      return !1;
    const de = le.indexOf(ee);
    return ie ? de === le.length - 1 : de > -1;
  }
  getItemType() {
    return this.store.getState().dragOperation.itemType;
  }
  getItem() {
    return this.store.getState().dragOperation.item;
  }
  getSourceId() {
    return this.store.getState().dragOperation.sourceId;
  }
  getTargetIds() {
    return this.store.getState().dragOperation.targetIds;
  }
  getDropResult() {
    return this.store.getState().dragOperation.dropResult;
  }
  didDrop() {
    return this.store.getState().dragOperation.didDrop;
  }
  isSourcePublic() {
    return Boolean(this.store.getState().dragOperation.isSourcePublic);
  }
  getInitialClientOffset() {
    return this.store.getState().dragOffset.initialClientOffset;
  }
  getInitialSourceClientOffset() {
    return this.store.getState().dragOffset.initialSourceClientOffset;
  }
  getClientOffset() {
    return this.store.getState().dragOffset.clientOffset;
  }
  getSourceClientOffset() {
    return getSourceClientOffset(this.store.getState().dragOffset);
  }
  getDifferenceFromInitialOffset() {
    return getDifferenceFromInitialOffset(this.store.getState().dragOffset);
  }
  constructor(ee, ne) {
    this.store = ee, this.registry = ne;
  }
}
const scope = typeof global < "u" ? global : self, BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;
function makeRequestCallFromTimer(Q) {
  return function() {
    const ne = setTimeout(ae, 0), ie = setInterval(ae, 50);
    function ae() {
      clearTimeout(ne), clearInterval(ie), Q();
    }
  };
}
function makeRequestCallFromMutationObserver(Q) {
  let ee = 1;
  const ne = new BrowserMutationObserver(Q), ie = document.createTextNode("");
  return ne.observe(ie, {
    characterData: !0
  }), function() {
    ee = -ee, ie.data = ee;
  };
}
const makeRequestCall = typeof BrowserMutationObserver == "function" ? makeRequestCallFromMutationObserver : makeRequestCallFromTimer;
class AsapQueue {
  enqueueTask(ee) {
    const { queue: ne, requestFlush: ie } = this;
    ne.length || (ie(), this.flushing = !0), ne[ne.length] = ee;
  }
  constructor() {
    this.queue = [], this.pendingErrors = [], this.flushing = !1, this.index = 0, this.capacity = 1024, this.flush = () => {
      const { queue: ee } = this;
      for (; this.index < ee.length; ) {
        const ne = this.index;
        if (this.index++, ee[ne].call(), this.index > this.capacity) {
          for (let ie = 0, ae = ee.length - this.index; ie < ae; ie++)
            ee[ie] = ee[ie + this.index];
          ee.length -= this.index, this.index = 0;
        }
      }
      ee.length = 0, this.index = 0, this.flushing = !1;
    }, this.registerPendingError = (ee) => {
      this.pendingErrors.push(ee), this.requestErrorThrow();
    }, this.requestFlush = makeRequestCall(this.flush), this.requestErrorThrow = makeRequestCallFromTimer(() => {
      if (this.pendingErrors.length)
        throw this.pendingErrors.shift();
    });
  }
}
class RawTask {
  call() {
    try {
      this.task && this.task();
    } catch (ee) {
      this.onError(ee);
    } finally {
      this.task = null, this.release(this);
    }
  }
  constructor(ee, ne) {
    this.onError = ee, this.release = ne, this.task = null;
  }
}
class TaskFactory {
  create(ee) {
    const ne = this.freeTasks, ie = ne.length ? ne.pop() : new RawTask(
      this.onError,
      (ae) => ne[ne.length] = ae
    );
    return ie.task = ee, ie;
  }
  constructor(ee) {
    this.onError = ee, this.freeTasks = [];
  }
}
const asapQueue = new AsapQueue(), taskFactory = new TaskFactory(asapQueue.registerPendingError);
function asap(Q) {
  asapQueue.enqueueTask(taskFactory.create(Q));
}
const ADD_SOURCE = "dnd-core/ADD_SOURCE", ADD_TARGET = "dnd-core/ADD_TARGET", REMOVE_SOURCE = "dnd-core/REMOVE_SOURCE", REMOVE_TARGET = "dnd-core/REMOVE_TARGET";
function addSource(Q) {
  return {
    type: ADD_SOURCE,
    payload: {
      sourceId: Q
    }
  };
}
function addTarget(Q) {
  return {
    type: ADD_TARGET,
    payload: {
      targetId: Q
    }
  };
}
function removeSource(Q) {
  return {
    type: REMOVE_SOURCE,
    payload: {
      sourceId: Q
    }
  };
}
function removeTarget(Q) {
  return {
    type: REMOVE_TARGET,
    payload: {
      targetId: Q
    }
  };
}
function validateSourceContract(Q) {
  invariant(typeof Q.canDrag == "function", "Expected canDrag to be a function."), invariant(typeof Q.beginDrag == "function", "Expected beginDrag to be a function."), invariant(typeof Q.endDrag == "function", "Expected endDrag to be a function.");
}
function validateTargetContract(Q) {
  invariant(typeof Q.canDrop == "function", "Expected canDrop to be a function."), invariant(typeof Q.hover == "function", "Expected hover to be a function."), invariant(typeof Q.drop == "function", "Expected beginDrag to be a function.");
}
function validateType(Q, ee) {
  if (ee && Array.isArray(Q)) {
    Q.forEach(
      (ne) => validateType(ne, !1)
    );
    return;
  }
  invariant(typeof Q == "string" || typeof Q == "symbol", ee ? "Type can only be a string, a symbol, or an array of either." : "Type can only be a string or a symbol.");
}
var HandlerRole;
(function(Q) {
  Q.SOURCE = "SOURCE", Q.TARGET = "TARGET";
})(HandlerRole || (HandlerRole = {}));
let nextUniqueId = 0;
function getNextUniqueId() {
  return nextUniqueId++;
}
function getNextHandlerId(Q) {
  const ee = getNextUniqueId().toString();
  switch (Q) {
    case HandlerRole.SOURCE:
      return `S${ee}`;
    case HandlerRole.TARGET:
      return `T${ee}`;
    default:
      throw new Error(`Unknown Handler Role: ${Q}`);
  }
}
function parseRoleFromHandlerId(Q) {
  switch (Q[0]) {
    case "S":
      return HandlerRole.SOURCE;
    case "T":
      return HandlerRole.TARGET;
    default:
      throw new Error(`Cannot parse handler ID: ${Q}`);
  }
}
function mapContainsValue(Q, ee) {
  const ne = Q.entries();
  let ie = !1;
  do {
    const { done: ae, value: [, ce] } = ne.next();
    if (ce === ee)
      return !0;
    ie = !!ae;
  } while (!ie);
  return !1;
}
class HandlerRegistryImpl {
  addSource(ee, ne) {
    validateType(ee), validateSourceContract(ne);
    const ie = this.addHandler(HandlerRole.SOURCE, ee, ne);
    return this.store.dispatch(addSource(ie)), ie;
  }
  addTarget(ee, ne) {
    validateType(ee, !0), validateTargetContract(ne);
    const ie = this.addHandler(HandlerRole.TARGET, ee, ne);
    return this.store.dispatch(addTarget(ie)), ie;
  }
  containsHandler(ee) {
    return mapContainsValue(this.dragSources, ee) || mapContainsValue(this.dropTargets, ee);
  }
  getSource(ee, ne = !1) {
    return invariant(this.isSourceId(ee), "Expected a valid source ID."), ne && ee === this.pinnedSourceId ? this.pinnedSource : this.dragSources.get(ee);
  }
  getTarget(ee) {
    return invariant(this.isTargetId(ee), "Expected a valid target ID."), this.dropTargets.get(ee);
  }
  getSourceType(ee) {
    return invariant(this.isSourceId(ee), "Expected a valid source ID."), this.types.get(ee);
  }
  getTargetType(ee) {
    return invariant(this.isTargetId(ee), "Expected a valid target ID."), this.types.get(ee);
  }
  isSourceId(ee) {
    return parseRoleFromHandlerId(ee) === HandlerRole.SOURCE;
  }
  isTargetId(ee) {
    return parseRoleFromHandlerId(ee) === HandlerRole.TARGET;
  }
  removeSource(ee) {
    invariant(this.getSource(ee), "Expected an existing source."), this.store.dispatch(removeSource(ee)), asap(() => {
      this.dragSources.delete(ee), this.types.delete(ee);
    });
  }
  removeTarget(ee) {
    invariant(this.getTarget(ee), "Expected an existing target."), this.store.dispatch(removeTarget(ee)), this.dropTargets.delete(ee), this.types.delete(ee);
  }
  pinSource(ee) {
    const ne = this.getSource(ee);
    invariant(ne, "Expected an existing source."), this.pinnedSourceId = ee, this.pinnedSource = ne;
  }
  unpinSource() {
    invariant(this.pinnedSource, "No source is pinned at the time."), this.pinnedSourceId = null, this.pinnedSource = null;
  }
  addHandler(ee, ne, ie) {
    const ae = getNextHandlerId(ee);
    return this.types.set(ae, ne), ee === HandlerRole.SOURCE ? this.dragSources.set(ae, ie) : ee === HandlerRole.TARGET && this.dropTargets.set(ae, ie), ae;
  }
  constructor(ee) {
    this.types = /* @__PURE__ */ new Map(), this.dragSources = /* @__PURE__ */ new Map(), this.dropTargets = /* @__PURE__ */ new Map(), this.pinnedSourceId = null, this.pinnedSource = null, this.store = ee;
  }
}
const strictEquality = (Q, ee) => Q === ee;
function areCoordsEqual(Q, ee) {
  return !Q && !ee ? !0 : !Q || !ee ? !1 : Q.x === ee.x && Q.y === ee.y;
}
function areArraysEqual(Q, ee, ne = strictEquality) {
  if (Q.length !== ee.length)
    return !1;
  for (let ie = 0; ie < Q.length; ++ie)
    if (!ne(Q[ie], ee[ie]))
      return !1;
  return !0;
}
function reduce$5(Q = NONE, ee) {
  switch (ee.type) {
    case HOVER:
      break;
    case ADD_SOURCE:
    case ADD_TARGET:
    case REMOVE_TARGET:
    case REMOVE_SOURCE:
      return NONE;
    case BEGIN_DRAG:
    case PUBLISH_DRAG_SOURCE:
    case END_DRAG:
    case DROP:
    default:
      return ALL;
  }
  const { targetIds: ne = [], prevTargetIds: ie = [] } = ee.payload, ae = xor(ne, ie);
  if (!(ae.length > 0 || !areArraysEqual(ne, ie)))
    return NONE;
  const le = ie[ie.length - 1], de = ne[ne.length - 1];
  return le !== de && (le && ae.push(le), de && ae.push(de)), ae;
}
function _defineProperty$3(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread$3(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty$3(Q, ae, ne[ae]);
    });
  }
  return Q;
}
const initialState$1 = {
  initialSourceClientOffset: null,
  initialClientOffset: null,
  clientOffset: null
};
function reduce$4(Q = initialState$1, ee) {
  const { payload: ne } = ee;
  switch (ee.type) {
    case INIT_COORDS:
    case BEGIN_DRAG:
      return {
        initialSourceClientOffset: ne.sourceClientOffset,
        initialClientOffset: ne.clientOffset,
        clientOffset: ne.clientOffset
      };
    case HOVER:
      return areCoordsEqual(Q.clientOffset, ne.clientOffset) ? Q : _objectSpread$3({}, Q, {
        clientOffset: ne.clientOffset
      });
    case END_DRAG:
    case DROP:
      return initialState$1;
    default:
      return Q;
  }
}
function _defineProperty$2(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread$2(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty$2(Q, ae, ne[ae]);
    });
  }
  return Q;
}
const initialState = {
  itemType: null,
  item: null,
  sourceId: null,
  targetIds: [],
  dropResult: null,
  didDrop: !1,
  isSourcePublic: null
};
function reduce$3(Q = initialState, ee) {
  const { payload: ne } = ee;
  switch (ee.type) {
    case BEGIN_DRAG:
      return _objectSpread$2({}, Q, {
        itemType: ne.itemType,
        item: ne.item,
        sourceId: ne.sourceId,
        isSourcePublic: ne.isSourcePublic,
        dropResult: null,
        didDrop: !1
      });
    case PUBLISH_DRAG_SOURCE:
      return _objectSpread$2({}, Q, {
        isSourcePublic: !0
      });
    case HOVER:
      return _objectSpread$2({}, Q, {
        targetIds: ne.targetIds
      });
    case REMOVE_TARGET:
      return Q.targetIds.indexOf(ne.targetId) === -1 ? Q : _objectSpread$2({}, Q, {
        targetIds: without$1(Q.targetIds, ne.targetId)
      });
    case DROP:
      return _objectSpread$2({}, Q, {
        dropResult: ne.dropResult,
        didDrop: !0,
        targetIds: []
      });
    case END_DRAG:
      return _objectSpread$2({}, Q, {
        itemType: null,
        item: null,
        sourceId: null,
        dropResult: null,
        didDrop: !1,
        isSourcePublic: null,
        targetIds: []
      });
    default:
      return Q;
  }
}
function reduce$2(Q = 0, ee) {
  switch (ee.type) {
    case ADD_SOURCE:
    case ADD_TARGET:
      return Q + 1;
    case REMOVE_SOURCE:
    case REMOVE_TARGET:
      return Q - 1;
    default:
      return Q;
  }
}
function reduce$1(Q = 0) {
  return Q + 1;
}
function _defineProperty$1(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread$1(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty$1(Q, ae, ne[ae]);
    });
  }
  return Q;
}
function reduce(Q = {}, ee) {
  return {
    dirtyHandlerIds: reduce$5(Q.dirtyHandlerIds, {
      type: ee.type,
      payload: _objectSpread$1({}, ee.payload, {
        prevTargetIds: get(Q, "dragOperation.targetIds", [])
      })
    }),
    dragOffset: reduce$4(Q.dragOffset, ee),
    refCount: reduce$2(Q.refCount, ee),
    dragOperation: reduce$3(Q.dragOperation, ee),
    stateId: reduce$1(Q.stateId)
  };
}
function createDragDropManager(Q, ee = void 0, ne = {}, ie = !1) {
  const ae = makeStoreInstance(ie), ce = new DragDropMonitorImpl(ae, new HandlerRegistryImpl(ae)), le = new DragDropManagerImpl(ae, ce), de = Q(le, ee, ne);
  return le.receiveBackend(de), le;
}
function makeStoreInstance(Q) {
  const ee = typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION__;
  return createStore$1(reduce, Q && ee && ee({
    name: "dnd-core",
    instanceId: "dnd-core"
  }));
}
function _objectWithoutProperties(Q, ee) {
  if (Q == null)
    return {};
  var ne = _objectWithoutPropertiesLoose(Q, ee), ie, ae;
  if (Object.getOwnPropertySymbols) {
    var ce = Object.getOwnPropertySymbols(Q);
    for (ae = 0; ae < ce.length; ae++)
      ie = ce[ae], !(ee.indexOf(ie) >= 0) && (!Object.prototype.propertyIsEnumerable.call(Q, ie) || (ne[ie] = Q[ie]));
  }
  return ne;
}
function _objectWithoutPropertiesLoose(Q, ee) {
  if (Q == null)
    return {};
  var ne = {}, ie = Object.keys(Q), ae, ce;
  for (ce = 0; ce < ie.length; ce++)
    ae = ie[ce], !(ee.indexOf(ae) >= 0) && (ne[ae] = Q[ae]);
  return ne;
}
let refCount = 0;
const INSTANCE_SYM = Symbol.for("__REACT_DND_CONTEXT_INSTANCE__");
var DndProvider = /* @__PURE__ */ memo(function(ee) {
  var { children: ne } = ee, ie = _objectWithoutProperties(ee, [
    "children"
  ]);
  const [ae, ce] = getDndContextValue(ie);
  return useEffect(() => {
    if (ce) {
      const le = getGlobalContext();
      return ++refCount, () => {
        --refCount === 0 && (le[INSTANCE_SYM] = null);
      };
    }
  }, []), /* @__PURE__ */ jsx(DndContext.Provider, {
    value: ae,
    children: ne
  });
});
function getDndContextValue(Q) {
  if ("manager" in Q)
    return [
      {
        dragDropManager: Q.manager
      },
      !1
    ];
  const ee = createSingletonDndContext(Q.backend, Q.context, Q.options, Q.debugMode), ne = !Q.context;
  return [
    ee,
    ne
  ];
}
function createSingletonDndContext(Q, ee = getGlobalContext(), ne, ie) {
  const ae = ee;
  return ae[INSTANCE_SYM] || (ae[INSTANCE_SYM] = {
    dragDropManager: createDragDropManager(Q, ee, ne, ie)
  }), ae[INSTANCE_SYM];
}
function getGlobalContext() {
  return typeof global < "u" ? global : window;
}
var fastDeepEqual = function Q(ee, ne) {
  if (ee === ne)
    return !0;
  if (ee && ne && typeof ee == "object" && typeof ne == "object") {
    if (ee.constructor !== ne.constructor)
      return !1;
    var ie, ae, ce;
    if (Array.isArray(ee)) {
      if (ie = ee.length, ie != ne.length)
        return !1;
      for (ae = ie; ae-- !== 0; )
        if (!Q(ee[ae], ne[ae]))
          return !1;
      return !0;
    }
    if (ee.constructor === RegExp)
      return ee.source === ne.source && ee.flags === ne.flags;
    if (ee.valueOf !== Object.prototype.valueOf)
      return ee.valueOf() === ne.valueOf();
    if (ee.toString !== Object.prototype.toString)
      return ee.toString() === ne.toString();
    if (ce = Object.keys(ee), ie = ce.length, ie !== Object.keys(ne).length)
      return !1;
    for (ae = ie; ae-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(ne, ce[ae]))
        return !1;
    for (ae = ie; ae-- !== 0; ) {
      var le = ce[ae];
      if (!Q(ee[le], ne[le]))
        return !1;
    }
    return !0;
  }
  return ee !== ee && ne !== ne;
};
const useIsomorphicLayoutEffect = typeof window < "u" ? useLayoutEffect : useEffect;
function useCollector(Q, ee, ne) {
  const [ie, ae] = useState(
    () => ee(Q)
  ), ce = useCallback(() => {
    const le = ee(Q);
    fastDeepEqual(ie, le) || (ae(le), ne && ne());
  }, [
    ie,
    Q,
    ne
  ]);
  return useIsomorphicLayoutEffect(ce), [
    ie,
    ce
  ];
}
function useMonitorOutput(Q, ee, ne) {
  const [ie, ae] = useCollector(Q, ee, ne);
  return useIsomorphicLayoutEffect(function() {
    const le = Q.getHandlerId();
    if (le != null)
      return Q.subscribeToStateChange(ae, {
        handlerIds: [
          le
        ]
      });
  }, [
    Q,
    ae
  ]), ie;
}
function useCollectedProps(Q, ee, ne) {
  return useMonitorOutput(
    ee,
    Q || (() => ({})),
    () => ne.reconnect()
  );
}
function useOptionalFactory(Q, ee) {
  const ne = [
    ...ee || []
  ];
  return ee == null && typeof Q != "function" && ne.push(Q), useMemo(() => typeof Q == "function" ? Q() : Q, ne);
}
function useConnectDragSource(Q) {
  return useMemo(
    () => Q.hooks.dragSource(),
    [
      Q
    ]
  );
}
function useConnectDragPreview(Q) {
  return useMemo(
    () => Q.hooks.dragPreview(),
    [
      Q
    ]
  );
}
let isCallingCanDrag = !1, isCallingIsDragging = !1;
class DragSourceMonitorImpl {
  receiveHandlerId(ee) {
    this.sourceId = ee;
  }
  getHandlerId() {
    return this.sourceId;
  }
  canDrag() {
    invariant(!isCallingCanDrag, "You may not call monitor.canDrag() inside your canDrag() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");
    try {
      return isCallingCanDrag = !0, this.internalMonitor.canDragSource(this.sourceId);
    } finally {
      isCallingCanDrag = !1;
    }
  }
  isDragging() {
    if (!this.sourceId)
      return !1;
    invariant(!isCallingIsDragging, "You may not call monitor.isDragging() inside your isDragging() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");
    try {
      return isCallingIsDragging = !0, this.internalMonitor.isDraggingSource(this.sourceId);
    } finally {
      isCallingIsDragging = !1;
    }
  }
  subscribeToStateChange(ee, ne) {
    return this.internalMonitor.subscribeToStateChange(ee, ne);
  }
  isDraggingSource(ee) {
    return this.internalMonitor.isDraggingSource(ee);
  }
  isOverTarget(ee, ne) {
    return this.internalMonitor.isOverTarget(ee, ne);
  }
  getTargetIds() {
    return this.internalMonitor.getTargetIds();
  }
  isSourcePublic() {
    return this.internalMonitor.isSourcePublic();
  }
  getSourceId() {
    return this.internalMonitor.getSourceId();
  }
  subscribeToOffsetChange(ee) {
    return this.internalMonitor.subscribeToOffsetChange(ee);
  }
  canDragSource(ee) {
    return this.internalMonitor.canDragSource(ee);
  }
  canDropOnTarget(ee) {
    return this.internalMonitor.canDropOnTarget(ee);
  }
  getItemType() {
    return this.internalMonitor.getItemType();
  }
  getItem() {
    return this.internalMonitor.getItem();
  }
  getDropResult() {
    return this.internalMonitor.getDropResult();
  }
  didDrop() {
    return this.internalMonitor.didDrop();
  }
  getInitialClientOffset() {
    return this.internalMonitor.getInitialClientOffset();
  }
  getInitialSourceClientOffset() {
    return this.internalMonitor.getInitialSourceClientOffset();
  }
  getSourceClientOffset() {
    return this.internalMonitor.getSourceClientOffset();
  }
  getClientOffset() {
    return this.internalMonitor.getClientOffset();
  }
  getDifferenceFromInitialOffset() {
    return this.internalMonitor.getDifferenceFromInitialOffset();
  }
  constructor(ee) {
    this.sourceId = null, this.internalMonitor = ee.getMonitor();
  }
}
let isCallingCanDrop = !1;
class DropTargetMonitorImpl {
  receiveHandlerId(ee) {
    this.targetId = ee;
  }
  getHandlerId() {
    return this.targetId;
  }
  subscribeToStateChange(ee, ne) {
    return this.internalMonitor.subscribeToStateChange(ee, ne);
  }
  canDrop() {
    if (!this.targetId)
      return !1;
    invariant(!isCallingCanDrop, "You may not call monitor.canDrop() inside your canDrop() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor");
    try {
      return isCallingCanDrop = !0, this.internalMonitor.canDropOnTarget(this.targetId);
    } finally {
      isCallingCanDrop = !1;
    }
  }
  isOver(ee) {
    return this.targetId ? this.internalMonitor.isOverTarget(this.targetId, ee) : !1;
  }
  getItemType() {
    return this.internalMonitor.getItemType();
  }
  getItem() {
    return this.internalMonitor.getItem();
  }
  getDropResult() {
    return this.internalMonitor.getDropResult();
  }
  didDrop() {
    return this.internalMonitor.didDrop();
  }
  getInitialClientOffset() {
    return this.internalMonitor.getInitialClientOffset();
  }
  getInitialSourceClientOffset() {
    return this.internalMonitor.getInitialSourceClientOffset();
  }
  getSourceClientOffset() {
    return this.internalMonitor.getSourceClientOffset();
  }
  getClientOffset() {
    return this.internalMonitor.getClientOffset();
  }
  getDifferenceFromInitialOffset() {
    return this.internalMonitor.getDifferenceFromInitialOffset();
  }
  constructor(ee) {
    this.targetId = null, this.internalMonitor = ee.getMonitor();
  }
}
function registerTarget(Q, ee, ne) {
  const ie = ne.getRegistry(), ae = ie.addTarget(Q, ee);
  return [
    ae,
    () => ie.removeTarget(ae)
  ];
}
function registerSource(Q, ee, ne) {
  const ie = ne.getRegistry(), ae = ie.addSource(Q, ee);
  return [
    ae,
    () => ie.removeSource(ae)
  ];
}
function shallowEqual(Q, ee, ne, ie) {
  let ae = ne ? ne.call(ie, Q, ee) : void 0;
  if (ae !== void 0)
    return !!ae;
  if (Q === ee)
    return !0;
  if (typeof Q != "object" || !Q || typeof ee != "object" || !ee)
    return !1;
  const ce = Object.keys(Q), le = Object.keys(ee);
  if (ce.length !== le.length)
    return !1;
  const de = Object.prototype.hasOwnProperty.bind(ee);
  for (let ye = 0; ye < ce.length; ye++) {
    const fe = ce[ye];
    if (!de(fe))
      return !1;
    const Be = Q[fe], Ee = ee[fe];
    if (ae = ne ? ne.call(ie, Be, Ee, fe) : void 0, ae === !1 || ae === void 0 && Be !== Ee)
      return !1;
  }
  return !0;
}
function isRef(Q) {
  return Q !== null && typeof Q == "object" && Object.prototype.hasOwnProperty.call(Q, "current");
}
function throwIfCompositeComponentElement(Q) {
  if (typeof Q.type == "string")
    return;
  const ee = Q.type.displayName || Q.type.name || "the component";
  throw new Error(`Only native element nodes can now be passed to React DnD connectors.You can either wrap ${ee} into a <div>, or turn it into a drag source or a drop target itself.`);
}
function wrapHookToRecognizeElement(Q) {
  return (ee = null, ne = null) => {
    if (!isValidElement(ee)) {
      const ce = ee;
      return Q(ce, ne), ce;
    }
    const ie = ee;
    return throwIfCompositeComponentElement(ie), cloneWithRef(ie, ne ? (ce) => Q(ce, ne) : Q);
  };
}
function wrapConnectorHooks(Q) {
  const ee = {};
  return Object.keys(Q).forEach((ne) => {
    const ie = Q[ne];
    if (ne.endsWith("Ref"))
      ee[ne] = Q[ne];
    else {
      const ae = wrapHookToRecognizeElement(ie);
      ee[ne] = () => ae;
    }
  }), ee;
}
function setRef(Q, ee) {
  typeof Q == "function" ? Q(ee) : Q.current = ee;
}
function cloneWithRef(Q, ee) {
  const ne = Q.ref;
  return invariant(typeof ne != "string", "Cannot connect React DnD to an element with an existing string ref. Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs"), ne ? cloneElement(Q, {
    ref: (ie) => {
      setRef(ne, ie), setRef(ee, ie);
    }
  }) : cloneElement(Q, {
    ref: ee
  });
}
class SourceConnector {
  receiveHandlerId(ee) {
    this.handlerId !== ee && (this.handlerId = ee, this.reconnect());
  }
  get connectTarget() {
    return this.dragSource;
  }
  get dragSourceOptions() {
    return this.dragSourceOptionsInternal;
  }
  set dragSourceOptions(ee) {
    this.dragSourceOptionsInternal = ee;
  }
  get dragPreviewOptions() {
    return this.dragPreviewOptionsInternal;
  }
  set dragPreviewOptions(ee) {
    this.dragPreviewOptionsInternal = ee;
  }
  reconnect() {
    const ee = this.reconnectDragSource();
    this.reconnectDragPreview(ee);
  }
  reconnectDragSource() {
    const ee = this.dragSource, ne = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();
    return ne && this.disconnectDragSource(), this.handlerId ? ee ? (ne && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDragSource = ee, this.lastConnectedDragSourceOptions = this.dragSourceOptions, this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, ee, this.dragSourceOptions)), ne) : (this.lastConnectedDragSource = ee, ne) : ne;
  }
  reconnectDragPreview(ee = !1) {
    const ne = this.dragPreview, ie = ee || this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();
    if (ie && this.disconnectDragPreview(), !!this.handlerId) {
      if (!ne) {
        this.lastConnectedDragPreview = ne;
        return;
      }
      ie && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDragPreview = ne, this.lastConnectedDragPreviewOptions = this.dragPreviewOptions, this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, ne, this.dragPreviewOptions));
    }
  }
  didHandlerIdChange() {
    return this.lastConnectedHandlerId !== this.handlerId;
  }
  didConnectedDragSourceChange() {
    return this.lastConnectedDragSource !== this.dragSource;
  }
  didConnectedDragPreviewChange() {
    return this.lastConnectedDragPreview !== this.dragPreview;
  }
  didDragSourceOptionsChange() {
    return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);
  }
  didDragPreviewOptionsChange() {
    return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);
  }
  disconnectDragSource() {
    this.dragSourceUnsubscribe && (this.dragSourceUnsubscribe(), this.dragSourceUnsubscribe = void 0);
  }
  disconnectDragPreview() {
    this.dragPreviewUnsubscribe && (this.dragPreviewUnsubscribe(), this.dragPreviewUnsubscribe = void 0, this.dragPreviewNode = null, this.dragPreviewRef = null);
  }
  get dragSource() {
    return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;
  }
  get dragPreview() {
    return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;
  }
  clearDragSource() {
    this.dragSourceNode = null, this.dragSourceRef = null;
  }
  clearDragPreview() {
    this.dragPreviewNode = null, this.dragPreviewRef = null;
  }
  constructor(ee) {
    this.hooks = wrapConnectorHooks({
      dragSource: (ne, ie) => {
        this.clearDragSource(), this.dragSourceOptions = ie || null, isRef(ne) ? this.dragSourceRef = ne : this.dragSourceNode = ne, this.reconnectDragSource();
      },
      dragPreview: (ne, ie) => {
        this.clearDragPreview(), this.dragPreviewOptions = ie || null, isRef(ne) ? this.dragPreviewRef = ne : this.dragPreviewNode = ne, this.reconnectDragPreview();
      }
    }), this.handlerId = null, this.dragSourceRef = null, this.dragSourceOptionsInternal = null, this.dragPreviewRef = null, this.dragPreviewOptionsInternal = null, this.lastConnectedHandlerId = null, this.lastConnectedDragSource = null, this.lastConnectedDragSourceOptions = null, this.lastConnectedDragPreview = null, this.lastConnectedDragPreviewOptions = null, this.backend = ee;
  }
}
class TargetConnector {
  get connectTarget() {
    return this.dropTarget;
  }
  reconnect() {
    const ee = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();
    ee && this.disconnectDropTarget();
    const ne = this.dropTarget;
    if (!!this.handlerId) {
      if (!ne) {
        this.lastConnectedDropTarget = ne;
        return;
      }
      ee && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDropTarget = ne, this.lastConnectedDropTargetOptions = this.dropTargetOptions, this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, ne, this.dropTargetOptions));
    }
  }
  receiveHandlerId(ee) {
    ee !== this.handlerId && (this.handlerId = ee, this.reconnect());
  }
  get dropTargetOptions() {
    return this.dropTargetOptionsInternal;
  }
  set dropTargetOptions(ee) {
    this.dropTargetOptionsInternal = ee;
  }
  didHandlerIdChange() {
    return this.lastConnectedHandlerId !== this.handlerId;
  }
  didDropTargetChange() {
    return this.lastConnectedDropTarget !== this.dropTarget;
  }
  didOptionsChange() {
    return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);
  }
  disconnectDropTarget() {
    this.unsubscribeDropTarget && (this.unsubscribeDropTarget(), this.unsubscribeDropTarget = void 0);
  }
  get dropTarget() {
    return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;
  }
  clearDropTarget() {
    this.dropTargetRef = null, this.dropTargetNode = null;
  }
  constructor(ee) {
    this.hooks = wrapConnectorHooks({
      dropTarget: (ne, ie) => {
        this.clearDropTarget(), this.dropTargetOptions = ie, isRef(ne) ? this.dropTargetRef = ne : this.dropTargetNode = ne, this.reconnect();
      }
    }), this.handlerId = null, this.dropTargetRef = null, this.dropTargetOptionsInternal = null, this.lastConnectedHandlerId = null, this.lastConnectedDropTarget = null, this.lastConnectedDropTargetOptions = null, this.backend = ee;
  }
}
function useDragDropManager() {
  const { dragDropManager: Q } = useContext(DndContext);
  return invariant(Q != null, "Expected drag drop context"), Q;
}
function useDragSourceConnector(Q, ee) {
  const ne = useDragDropManager(), ie = useMemo(
    () => new SourceConnector(ne.getBackend()),
    [
      ne
    ]
  );
  return useIsomorphicLayoutEffect(() => (ie.dragSourceOptions = Q || null, ie.reconnect(), () => ie.disconnectDragSource()), [
    ie,
    Q
  ]), useIsomorphicLayoutEffect(() => (ie.dragPreviewOptions = ee || null, ie.reconnect(), () => ie.disconnectDragPreview()), [
    ie,
    ee
  ]), ie;
}
function useDragSourceMonitor() {
  const Q = useDragDropManager();
  return useMemo(
    () => new DragSourceMonitorImpl(Q),
    [
      Q
    ]
  );
}
class DragSourceImpl {
  beginDrag() {
    const ee = this.spec, ne = this.monitor;
    let ie = null;
    return typeof ee.item == "object" ? ie = ee.item : typeof ee.item == "function" ? ie = ee.item(ne) : ie = {}, ie != null ? ie : null;
  }
  canDrag() {
    const ee = this.spec, ne = this.monitor;
    return typeof ee.canDrag == "boolean" ? ee.canDrag : typeof ee.canDrag == "function" ? ee.canDrag(ne) : !0;
  }
  isDragging(ee, ne) {
    const ie = this.spec, ae = this.monitor, { isDragging: ce } = ie;
    return ce ? ce(ae) : ne === ee.getSourceId();
  }
  endDrag() {
    const ee = this.spec, ne = this.monitor, ie = this.connector, { end: ae } = ee;
    ae && ae(ne.getItem(), ne), ie.reconnect();
  }
  constructor(ee, ne, ie) {
    this.spec = ee, this.monitor = ne, this.connector = ie;
  }
}
function useDragSource(Q, ee, ne) {
  const ie = useMemo(
    () => new DragSourceImpl(Q, ee, ne),
    [
      ee,
      ne
    ]
  );
  return useEffect(() => {
    ie.spec = Q;
  }, [
    Q
  ]), ie;
}
function useDragType(Q) {
  return useMemo(() => {
    const ee = Q.type;
    return invariant(ee != null, "spec.type must be defined"), ee;
  }, [
    Q
  ]);
}
function useRegisteredDragSource(Q, ee, ne) {
  const ie = useDragDropManager(), ae = useDragSource(Q, ee, ne), ce = useDragType(Q);
  useIsomorphicLayoutEffect(function() {
    if (ce != null) {
      const [de, ye] = registerSource(ce, ae, ie);
      return ee.receiveHandlerId(de), ne.receiveHandlerId(de), ye;
    }
  }, [
    ie,
    ee,
    ne,
    ae,
    ce
  ]);
}
function useDrag(Q, ee) {
  const ne = useOptionalFactory(Q, ee);
  invariant(!ne.begin, "useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)");
  const ie = useDragSourceMonitor(), ae = useDragSourceConnector(ne.options, ne.previewOptions);
  return useRegisteredDragSource(ne, ie, ae), [
    useCollectedProps(ne.collect, ie, ae),
    useConnectDragSource(ae),
    useConnectDragPreview(ae)
  ];
}
function useConnectDropTarget(Q) {
  return useMemo(
    () => Q.hooks.dropTarget(),
    [
      Q
    ]
  );
}
function useDropTargetConnector(Q) {
  const ee = useDragDropManager(), ne = useMemo(
    () => new TargetConnector(ee.getBackend()),
    [
      ee
    ]
  );
  return useIsomorphicLayoutEffect(() => (ne.dropTargetOptions = Q || null, ne.reconnect(), () => ne.disconnectDropTarget()), [
    Q
  ]), ne;
}
function useDropTargetMonitor() {
  const Q = useDragDropManager();
  return useMemo(
    () => new DropTargetMonitorImpl(Q),
    [
      Q
    ]
  );
}
function useAccept(Q) {
  const { accept: ee } = Q;
  return useMemo(() => (invariant(Q.accept != null, "accept must be defined"), Array.isArray(ee) ? ee : [
    ee
  ]), [
    ee
  ]);
}
class DropTargetImpl {
  canDrop() {
    const ee = this.spec, ne = this.monitor;
    return ee.canDrop ? ee.canDrop(ne.getItem(), ne) : !0;
  }
  hover() {
    const ee = this.spec, ne = this.monitor;
    ee.hover && ee.hover(ne.getItem(), ne);
  }
  drop() {
    const ee = this.spec, ne = this.monitor;
    if (ee.drop)
      return ee.drop(ne.getItem(), ne);
  }
  constructor(ee, ne) {
    this.spec = ee, this.monitor = ne;
  }
}
function useDropTarget(Q, ee) {
  const ne = useMemo(
    () => new DropTargetImpl(Q, ee),
    [
      ee
    ]
  );
  return useEffect(() => {
    ne.spec = Q;
  }, [
    Q
  ]), ne;
}
function useRegisteredDropTarget(Q, ee, ne) {
  const ie = useDragDropManager(), ae = useDropTarget(Q, ee), ce = useAccept(Q);
  useIsomorphicLayoutEffect(function() {
    const [de, ye] = registerTarget(ce, ae, ie);
    return ee.receiveHandlerId(de), ne.receiveHandlerId(de), ye;
  }, [
    ie,
    ee,
    ae,
    ne,
    ce.map(
      (le) => le.toString()
    ).join("|")
  ]);
}
function useDrop(Q, ee) {
  const ne = useOptionalFactory(Q, ee), ie = useDropTargetMonitor(), ae = useDropTargetConnector(ne.options);
  return useRegisteredDropTarget(ne, ie, ae), [
    useCollectedProps(ne.collect, ie, ae),
    useConnectDropTarget(ae)
  ];
}
function memoize$1(Q) {
  let ee = null;
  return () => (ee == null && (ee = Q()), ee);
}
function without(Q, ee) {
  return Q.filter(
    (ne) => ne !== ee
  );
}
function union(Q, ee) {
  const ne = /* @__PURE__ */ new Set(), ie = (ce) => ne.add(ce);
  Q.forEach(ie), ee.forEach(ie);
  const ae = [];
  return ne.forEach(
    (ce) => ae.push(ce)
  ), ae;
}
class EnterLeaveCounter {
  enter(ee) {
    const ne = this.entered.length, ie = (ae) => this.isNodeInDocument(ae) && (!ae.contains || ae.contains(ee));
    return this.entered = union(this.entered.filter(ie), [
      ee
    ]), ne === 0 && this.entered.length > 0;
  }
  leave(ee) {
    const ne = this.entered.length;
    return this.entered = without(this.entered.filter(this.isNodeInDocument), ee), ne > 0 && this.entered.length === 0;
  }
  reset() {
    this.entered = [];
  }
  constructor(ee) {
    this.entered = [], this.isNodeInDocument = ee;
  }
}
class NativeDragSource {
  initializeExposedProperties() {
    Object.keys(this.config.exposeProperties).forEach((ee) => {
      Object.defineProperty(this.item, ee, {
        configurable: !0,
        enumerable: !0,
        get() {
          return console.warn(`Browser doesn't allow reading "${ee}" until the drop event.`), null;
        }
      });
    });
  }
  loadDataTransfer(ee) {
    if (ee) {
      const ne = {};
      Object.keys(this.config.exposeProperties).forEach((ie) => {
        const ae = this.config.exposeProperties[ie];
        ae != null && (ne[ie] = {
          value: ae(ee, this.config.matchesTypes),
          configurable: !0,
          enumerable: !0
        });
      }), Object.defineProperties(this.item, ne);
    }
  }
  canDrag() {
    return !0;
  }
  beginDrag() {
    return this.item;
  }
  isDragging(ee, ne) {
    return ne === ee.getSourceId();
  }
  endDrag() {
  }
  constructor(ee) {
    this.config = ee, this.item = {}, this.initializeExposedProperties();
  }
}
const FILE = "__NATIVE_FILE__", URL$4 = "__NATIVE_URL__", TEXT = "__NATIVE_TEXT__", HTML = "__NATIVE_HTML__", NativeTypes = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  FILE,
  URL: URL$4,
  TEXT,
  HTML
}, Symbol.toStringTag, { value: "Module" }));
function getDataFromDataTransfer(Q, ee, ne) {
  const ie = ee.reduce(
    (ae, ce) => ae || Q.getData(ce),
    ""
  );
  return ie != null ? ie : ne;
}
const nativeTypesConfig = {
  [FILE]: {
    exposeProperties: {
      files: (Q) => Array.prototype.slice.call(Q.files),
      items: (Q) => Q.items,
      dataTransfer: (Q) => Q
    },
    matchesTypes: [
      "Files"
    ]
  },
  [HTML]: {
    exposeProperties: {
      html: (Q, ee) => getDataFromDataTransfer(Q, ee, ""),
      dataTransfer: (Q) => Q
    },
    matchesTypes: [
      "Html",
      "text/html"
    ]
  },
  [URL$4]: {
    exposeProperties: {
      urls: (Q, ee) => getDataFromDataTransfer(Q, ee, "").split(`
`),
      dataTransfer: (Q) => Q
    },
    matchesTypes: [
      "Url",
      "text/uri-list"
    ]
  },
  [TEXT]: {
    exposeProperties: {
      text: (Q, ee) => getDataFromDataTransfer(Q, ee, ""),
      dataTransfer: (Q) => Q
    },
    matchesTypes: [
      "Text",
      "text/plain"
    ]
  }
};
function createNativeDragSource(Q, ee) {
  const ne = nativeTypesConfig[Q];
  if (!ne)
    throw new Error(`native type ${Q} has no configuration`);
  const ie = new NativeDragSource(ne);
  return ie.loadDataTransfer(ee), ie;
}
function matchNativeItemType(Q) {
  if (!Q)
    return null;
  const ee = Array.prototype.slice.call(Q.types || []);
  return Object.keys(nativeTypesConfig).filter((ne) => {
    const ie = nativeTypesConfig[ne];
    return ie != null && ie.matchesTypes ? ie.matchesTypes.some(
      (ae) => ee.indexOf(ae) > -1
    ) : !1;
  })[0] || null;
}
const isFirefox = memoize$1(
  () => /firefox/i.test(navigator.userAgent)
), isSafari = memoize$1(
  () => Boolean(window.safari)
);
class MonotonicInterpolant {
  interpolate(ee) {
    const { xs: ne, ys: ie, c1s: ae, c2s: ce, c3s: le } = this;
    let de = ne.length - 1;
    if (ee === ne[de])
      return ie[de];
    let ye = 0, fe = le.length - 1, Be;
    for (; ye <= fe; ) {
      Be = Math.floor(0.5 * (ye + fe));
      const ge = ne[Be];
      if (ge < ee)
        ye = Be + 1;
      else if (ge > ee)
        fe = Be - 1;
      else
        return ie[Be];
    }
    de = Math.max(0, fe);
    const Ee = ee - ne[de], me = Ee * Ee;
    return ie[de] + ae[de] * Ee + ce[de] * me + le[de] * Ee * me;
  }
  constructor(ee, ne) {
    const { length: ie } = ee, ae = [];
    for (let ge = 0; ge < ie; ge++)
      ae.push(ge);
    ae.sort(
      (ge, we) => ee[ge] < ee[we] ? -1 : 1
    );
    const ce = [], le = [];
    let de, ye;
    for (let ge = 0; ge < ie - 1; ge++)
      de = ee[ge + 1] - ee[ge], ye = ne[ge + 1] - ne[ge], ce.push(de), le.push(ye / de);
    const fe = [
      le[0]
    ];
    for (let ge = 0; ge < ce.length - 1; ge++) {
      const we = le[ge], be = le[ge + 1];
      if (we * be <= 0)
        fe.push(0);
      else {
        de = ce[ge];
        const Oe = ce[ge + 1], He = de + Oe;
        fe.push(3 * He / ((He + Oe) / we + (He + de) / be));
      }
    }
    fe.push(le[le.length - 1]);
    const Be = [], Ee = [];
    let me;
    for (let ge = 0; ge < fe.length - 1; ge++) {
      me = le[ge];
      const we = fe[ge], be = 1 / ce[ge], Oe = we + fe[ge + 1] - me - me;
      Be.push((me - we - Oe) * be), Ee.push(Oe * be * be);
    }
    this.xs = ee, this.ys = ne, this.c1s = fe, this.c2s = Be, this.c3s = Ee;
  }
}
const ELEMENT_NODE = 1;
function getNodeClientOffset(Q) {
  const ee = Q.nodeType === ELEMENT_NODE ? Q : Q.parentElement;
  if (!ee)
    return null;
  const { top: ne, left: ie } = ee.getBoundingClientRect();
  return {
    x: ie,
    y: ne
  };
}
function getEventClientOffset(Q) {
  return {
    x: Q.clientX,
    y: Q.clientY
  };
}
function isImageNode(Q) {
  var ee;
  return Q.nodeName === "IMG" && (isFirefox() || !(!((ee = document.documentElement) === null || ee === void 0) && ee.contains(Q)));
}
function getDragPreviewSize(Q, ee, ne, ie) {
  let ae = Q ? ee.width : ne, ce = Q ? ee.height : ie;
  return isSafari() && Q && (ce /= window.devicePixelRatio, ae /= window.devicePixelRatio), {
    dragPreviewWidth: ae,
    dragPreviewHeight: ce
  };
}
function getDragPreviewOffset(Q, ee, ne, ie, ae) {
  const ce = isImageNode(ee), de = getNodeClientOffset(ce ? Q : ee), ye = {
    x: ne.x - de.x,
    y: ne.y - de.y
  }, { offsetWidth: fe, offsetHeight: Be } = Q, { anchorX: Ee, anchorY: me } = ie, { dragPreviewWidth: ge, dragPreviewHeight: we } = getDragPreviewSize(ce, ee, fe, Be), be = () => {
    let Je = new MonotonicInterpolant([
      0,
      0.5,
      1
    ], [
      ye.y,
      ye.y / Be * we,
      ye.y + we - Be
    ]).interpolate(me);
    return isSafari() && ce && (Je += (window.devicePixelRatio - 1) * we), Je;
  }, Oe = () => new MonotonicInterpolant([
    0,
    0.5,
    1
  ], [
    ye.x,
    ye.x / fe * ge,
    ye.x + ge - fe
  ]).interpolate(Ee), { offsetX: He, offsetY: Se } = ae, Ge = He === 0 || He, Fe = Se === 0 || Se;
  return {
    x: Ge ? He : Oe(),
    y: Fe ? Se : be()
  };
}
class OptionsReader {
  get window() {
    if (this.globalContext)
      return this.globalContext;
    if (typeof window < "u")
      return window;
  }
  get document() {
    var ee;
    return !((ee = this.globalContext) === null || ee === void 0) && ee.document ? this.globalContext.document : this.window ? this.window.document : void 0;
  }
  get rootElement() {
    var ee;
    return ((ee = this.optionsArgs) === null || ee === void 0 ? void 0 : ee.rootElement) || this.window;
  }
  constructor(ee, ne) {
    this.ownerDocument = null, this.globalContext = ee, this.optionsArgs = ne;
  }
}
function _defineProperty(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty(Q, ae, ne[ae]);
    });
  }
  return Q;
}
class HTML5BackendImpl {
  profile() {
    var ee, ne;
    return {
      sourcePreviewNodes: this.sourcePreviewNodes.size,
      sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,
      sourceNodeOptions: this.sourceNodeOptions.size,
      sourceNodes: this.sourceNodes.size,
      dragStartSourceIds: ((ee = this.dragStartSourceIds) === null || ee === void 0 ? void 0 : ee.length) || 0,
      dropTargetIds: this.dropTargetIds.length,
      dragEnterTargetIds: this.dragEnterTargetIds.length,
      dragOverTargetIds: ((ne = this.dragOverTargetIds) === null || ne === void 0 ? void 0 : ne.length) || 0
    };
  }
  get window() {
    return this.options.window;
  }
  get document() {
    return this.options.document;
  }
  get rootElement() {
    return this.options.rootElement;
  }
  setup() {
    const ee = this.rootElement;
    if (ee !== void 0) {
      if (ee.__isReactDndBackendSetUp)
        throw new Error("Cannot have two HTML5 backends at the same time.");
      ee.__isReactDndBackendSetUp = !0, this.addEventListeners(ee);
    }
  }
  teardown() {
    const ee = this.rootElement;
    if (ee !== void 0 && (ee.__isReactDndBackendSetUp = !1, this.removeEventListeners(this.rootElement), this.clearCurrentDragSourceNode(), this.asyncEndDragFrameId)) {
      var ne;
      (ne = this.window) === null || ne === void 0 || ne.cancelAnimationFrame(this.asyncEndDragFrameId);
    }
  }
  connectDragPreview(ee, ne, ie) {
    return this.sourcePreviewNodeOptions.set(ee, ie), this.sourcePreviewNodes.set(ee, ne), () => {
      this.sourcePreviewNodes.delete(ee), this.sourcePreviewNodeOptions.delete(ee);
    };
  }
  connectDragSource(ee, ne, ie) {
    this.sourceNodes.set(ee, ne), this.sourceNodeOptions.set(ee, ie);
    const ae = (le) => this.handleDragStart(le, ee), ce = (le) => this.handleSelectStart(le);
    return ne.setAttribute("draggable", "true"), ne.addEventListener("dragstart", ae), ne.addEventListener("selectstart", ce), () => {
      this.sourceNodes.delete(ee), this.sourceNodeOptions.delete(ee), ne.removeEventListener("dragstart", ae), ne.removeEventListener("selectstart", ce), ne.setAttribute("draggable", "false");
    };
  }
  connectDropTarget(ee, ne) {
    const ie = (le) => this.handleDragEnter(le, ee), ae = (le) => this.handleDragOver(le, ee), ce = (le) => this.handleDrop(le, ee);
    return ne.addEventListener("dragenter", ie), ne.addEventListener("dragover", ae), ne.addEventListener("drop", ce), () => {
      ne.removeEventListener("dragenter", ie), ne.removeEventListener("dragover", ae), ne.removeEventListener("drop", ce);
    };
  }
  addEventListeners(ee) {
    !ee.addEventListener || (ee.addEventListener("dragstart", this.handleTopDragStart), ee.addEventListener("dragstart", this.handleTopDragStartCapture, !0), ee.addEventListener("dragend", this.handleTopDragEndCapture, !0), ee.addEventListener("dragenter", this.handleTopDragEnter), ee.addEventListener("dragenter", this.handleTopDragEnterCapture, !0), ee.addEventListener("dragleave", this.handleTopDragLeaveCapture, !0), ee.addEventListener("dragover", this.handleTopDragOver), ee.addEventListener("dragover", this.handleTopDragOverCapture, !0), ee.addEventListener("drop", this.handleTopDrop), ee.addEventListener("drop", this.handleTopDropCapture, !0));
  }
  removeEventListeners(ee) {
    !ee.removeEventListener || (ee.removeEventListener("dragstart", this.handleTopDragStart), ee.removeEventListener("dragstart", this.handleTopDragStartCapture, !0), ee.removeEventListener("dragend", this.handleTopDragEndCapture, !0), ee.removeEventListener("dragenter", this.handleTopDragEnter), ee.removeEventListener("dragenter", this.handleTopDragEnterCapture, !0), ee.removeEventListener("dragleave", this.handleTopDragLeaveCapture, !0), ee.removeEventListener("dragover", this.handleTopDragOver), ee.removeEventListener("dragover", this.handleTopDragOverCapture, !0), ee.removeEventListener("drop", this.handleTopDrop), ee.removeEventListener("drop", this.handleTopDropCapture, !0));
  }
  getCurrentSourceNodeOptions() {
    const ee = this.monitor.getSourceId(), ne = this.sourceNodeOptions.get(ee);
    return _objectSpread({
      dropEffect: this.altKeyPressed ? "copy" : "move"
    }, ne || {});
  }
  getCurrentDropEffect() {
    return this.isDraggingNativeItem() ? "copy" : this.getCurrentSourceNodeOptions().dropEffect;
  }
  getCurrentSourcePreviewNodeOptions() {
    const ee = this.monitor.getSourceId(), ne = this.sourcePreviewNodeOptions.get(ee);
    return _objectSpread({
      anchorX: 0.5,
      anchorY: 0.5,
      captureDraggingState: !1
    }, ne || {});
  }
  isDraggingNativeItem() {
    const ee = this.monitor.getItemType();
    return Object.keys(NativeTypes).some(
      (ne) => NativeTypes[ne] === ee
    );
  }
  beginDragNativeItem(ee, ne) {
    this.clearCurrentDragSourceNode(), this.currentNativeSource = createNativeDragSource(ee, ne), this.currentNativeHandle = this.registry.addSource(ee, this.currentNativeSource), this.actions.beginDrag([
      this.currentNativeHandle
    ]);
  }
  setCurrentDragSourceNode(ee) {
    this.clearCurrentDragSourceNode(), this.currentDragSourceNode = ee;
    const ne = 1e3;
    this.mouseMoveTimeoutTimer = setTimeout(() => {
      var ie;
      return (ie = this.rootElement) === null || ie === void 0 ? void 0 : ie.addEventListener("mousemove", this.endDragIfSourceWasRemovedFromDOM, !0);
    }, ne);
  }
  clearCurrentDragSourceNode() {
    if (this.currentDragSourceNode) {
      if (this.currentDragSourceNode = null, this.rootElement) {
        var ee;
        (ee = this.window) === null || ee === void 0 || ee.clearTimeout(this.mouseMoveTimeoutTimer || void 0), this.rootElement.removeEventListener("mousemove", this.endDragIfSourceWasRemovedFromDOM, !0);
      }
      return this.mouseMoveTimeoutTimer = null, !0;
    }
    return !1;
  }
  handleDragStart(ee, ne) {
    ee.defaultPrevented || (this.dragStartSourceIds || (this.dragStartSourceIds = []), this.dragStartSourceIds.unshift(ne));
  }
  handleDragEnter(ee, ne) {
    this.dragEnterTargetIds.unshift(ne);
  }
  handleDragOver(ee, ne) {
    this.dragOverTargetIds === null && (this.dragOverTargetIds = []), this.dragOverTargetIds.unshift(ne);
  }
  handleDrop(ee, ne) {
    this.dropTargetIds.unshift(ne);
  }
  constructor(ee, ne, ie) {
    this.sourcePreviewNodes = /* @__PURE__ */ new Map(), this.sourcePreviewNodeOptions = /* @__PURE__ */ new Map(), this.sourceNodes = /* @__PURE__ */ new Map(), this.sourceNodeOptions = /* @__PURE__ */ new Map(), this.dragStartSourceIds = null, this.dropTargetIds = [], this.dragEnterTargetIds = [], this.currentNativeSource = null, this.currentNativeHandle = null, this.currentDragSourceNode = null, this.altKeyPressed = !1, this.mouseMoveTimeoutTimer = null, this.asyncEndDragFrameId = null, this.dragOverTargetIds = null, this.lastClientOffset = null, this.hoverRafId = null, this.getSourceClientOffset = (ae) => {
      const ce = this.sourceNodes.get(ae);
      return ce && getNodeClientOffset(ce) || null;
    }, this.endDragNativeItem = () => {
      !this.isDraggingNativeItem() || (this.actions.endDrag(), this.currentNativeHandle && this.registry.removeSource(this.currentNativeHandle), this.currentNativeHandle = null, this.currentNativeSource = null);
    }, this.isNodeInDocument = (ae) => Boolean(ae && this.document && this.document.body && this.document.body.contains(ae)), this.endDragIfSourceWasRemovedFromDOM = () => {
      const ae = this.currentDragSourceNode;
      ae == null || this.isNodeInDocument(ae) || (this.clearCurrentDragSourceNode() && this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover());
    }, this.scheduleHover = (ae) => {
      this.hoverRafId === null && typeof requestAnimationFrame < "u" && (this.hoverRafId = requestAnimationFrame(() => {
        this.monitor.isDragging() && this.actions.hover(ae || [], {
          clientOffset: this.lastClientOffset
        }), this.hoverRafId = null;
      }));
    }, this.cancelHover = () => {
      this.hoverRafId !== null && typeof cancelAnimationFrame < "u" && (cancelAnimationFrame(this.hoverRafId), this.hoverRafId = null);
    }, this.handleTopDragStartCapture = () => {
      this.clearCurrentDragSourceNode(), this.dragStartSourceIds = [];
    }, this.handleTopDragStart = (ae) => {
      if (ae.defaultPrevented)
        return;
      const { dragStartSourceIds: ce } = this;
      this.dragStartSourceIds = null;
      const le = getEventClientOffset(ae);
      this.monitor.isDragging() && (this.actions.endDrag(), this.cancelHover()), this.actions.beginDrag(ce || [], {
        publishSource: !1,
        getSourceClientOffset: this.getSourceClientOffset,
        clientOffset: le
      });
      const { dataTransfer: de } = ae, ye = matchNativeItemType(de);
      if (this.monitor.isDragging()) {
        if (de && typeof de.setDragImage == "function") {
          const Be = this.monitor.getSourceId(), Ee = this.sourceNodes.get(Be), me = this.sourcePreviewNodes.get(Be) || Ee;
          if (me) {
            const { anchorX: ge, anchorY: we, offsetX: be, offsetY: Oe } = this.getCurrentSourcePreviewNodeOptions(), Ge = getDragPreviewOffset(Ee, me, le, {
              anchorX: ge,
              anchorY: we
            }, {
              offsetX: be,
              offsetY: Oe
            });
            de.setDragImage(me, Ge.x, Ge.y);
          }
        }
        try {
          de == null || de.setData("application/json", {});
        } catch {
        }
        this.setCurrentDragSourceNode(ae.target);
        const { captureDraggingState: fe } = this.getCurrentSourcePreviewNodeOptions();
        fe ? this.actions.publishDragSource() : setTimeout(
          () => this.actions.publishDragSource(),
          0
        );
      } else if (ye)
        this.beginDragNativeItem(ye);
      else {
        if (de && !de.types && (ae.target && !ae.target.hasAttribute || !ae.target.hasAttribute("draggable")))
          return;
        ae.preventDefault();
      }
    }, this.handleTopDragEndCapture = () => {
      this.clearCurrentDragSourceNode() && this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover();
    }, this.handleTopDragEnterCapture = (ae) => {
      if (this.dragEnterTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(ae.dataTransfer);
      }
      if (!this.enterLeaveCounter.enter(ae.target) || this.monitor.isDragging())
        return;
      const { dataTransfer: de } = ae, ye = matchNativeItemType(de);
      ye && this.beginDragNativeItem(ye, de);
    }, this.handleTopDragEnter = (ae) => {
      const { dragEnterTargetIds: ce } = this;
      if (this.dragEnterTargetIds = [], !this.monitor.isDragging())
        return;
      this.altKeyPressed = ae.altKey, ce.length > 0 && this.actions.hover(ce, {
        clientOffset: getEventClientOffset(ae)
      }), ce.some(
        (de) => this.monitor.canDropOnTarget(de)
      ) && (ae.preventDefault(), ae.dataTransfer && (ae.dataTransfer.dropEffect = this.getCurrentDropEffect()));
    }, this.handleTopDragOverCapture = (ae) => {
      if (this.dragOverTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(ae.dataTransfer);
      }
    }, this.handleTopDragOver = (ae) => {
      const { dragOverTargetIds: ce } = this;
      if (this.dragOverTargetIds = [], !this.monitor.isDragging()) {
        ae.preventDefault(), ae.dataTransfer && (ae.dataTransfer.dropEffect = "none");
        return;
      }
      this.altKeyPressed = ae.altKey, this.lastClientOffset = getEventClientOffset(ae), this.scheduleHover(ce), (ce || []).some(
        (de) => this.monitor.canDropOnTarget(de)
      ) ? (ae.preventDefault(), ae.dataTransfer && (ae.dataTransfer.dropEffect = this.getCurrentDropEffect())) : this.isDraggingNativeItem() ? ae.preventDefault() : (ae.preventDefault(), ae.dataTransfer && (ae.dataTransfer.dropEffect = "none"));
    }, this.handleTopDragLeaveCapture = (ae) => {
      this.isDraggingNativeItem() && ae.preventDefault(), this.enterLeaveCounter.leave(ae.target) && (this.isDraggingNativeItem() && setTimeout(
        () => this.endDragNativeItem(),
        0
      ), this.cancelHover());
    }, this.handleTopDropCapture = (ae) => {
      if (this.dropTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        ae.preventDefault(), (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(ae.dataTransfer);
      } else
        matchNativeItemType(ae.dataTransfer) && ae.preventDefault();
      this.enterLeaveCounter.reset();
    }, this.handleTopDrop = (ae) => {
      const { dropTargetIds: ce } = this;
      this.dropTargetIds = [], this.actions.hover(ce, {
        clientOffset: getEventClientOffset(ae)
      }), this.actions.drop({
        dropEffect: this.getCurrentDropEffect()
      }), this.isDraggingNativeItem() ? this.endDragNativeItem() : this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover();
    }, this.handleSelectStart = (ae) => {
      const ce = ae.target;
      typeof ce.dragDrop == "function" && (ce.tagName === "INPUT" || ce.tagName === "SELECT" || ce.tagName === "TEXTAREA" || ce.isContentEditable || (ae.preventDefault(), ce.dragDrop()));
    }, this.options = new OptionsReader(ne, ie), this.actions = ee.getActions(), this.monitor = ee.getMonitor(), this.registry = ee.getRegistry(), this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);
  }
}
const HTML5Backend = function(ee, ne, ie) {
  return new HTML5BackendImpl(ee, ne, ie);
};
var __awaiter$d = globalThis && globalThis.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __generator = globalThis && globalThis.__generator || function(Q, ee) {
  var ne = {
    label: 0,
    sent: function() {
      if (ce[0] & 1)
        throw ce[1];
      return ce[1];
    },
    trys: [],
    ops: []
  }, ie, ae, ce, le;
  return le = {
    next: de(0),
    throw: de(1),
    return: de(2)
  }, typeof Symbol == "function" && (le[Symbol.iterator] = function() {
    return this;
  }), le;
  function de(fe) {
    return function(Be) {
      return ye([fe, Be]);
    };
  }
  function ye(fe) {
    if (ie)
      throw new TypeError("Generator is already executing.");
    for (; ne; )
      try {
        if (ie = 1, ae && (ce = fe[0] & 2 ? ae.return : fe[0] ? ae.throw || ((ce = ae.return) && ce.call(ae), 0) : ae.next) && !(ce = ce.call(ae, fe[1])).done)
          return ce;
        switch (ae = 0, ce && (fe = [fe[0] & 2, ce.value]), fe[0]) {
          case 0:
          case 1:
            ce = fe;
            break;
          case 4:
            return ne.label++, {
              value: fe[1],
              done: !1
            };
          case 5:
            ne.label++, ae = fe[1], fe = [0];
            continue;
          case 7:
            fe = ne.ops.pop(), ne.trys.pop();
            continue;
          default:
            if (ce = ne.trys, !(ce = ce.length > 0 && ce[ce.length - 1]) && (fe[0] === 6 || fe[0] === 2)) {
              ne = 0;
              continue;
            }
            if (fe[0] === 3 && (!ce || fe[1] > ce[0] && fe[1] < ce[3])) {
              ne.label = fe[1];
              break;
            }
            if (fe[0] === 6 && ne.label < ce[1]) {
              ne.label = ce[1], ce = fe;
              break;
            }
            if (ce && ne.label < ce[2]) {
              ne.label = ce[2], ne.ops.push(fe);
              break;
            }
            ce[2] && ne.ops.pop(), ne.trys.pop();
            continue;
        }
        fe = ee.call(Q, ne);
      } catch (Be) {
        fe = [6, Be], ae = 0;
      } finally {
        ie = ce = 0;
      }
    if (fe[0] & 5)
      throw fe[1];
    return {
      value: fe[0] ? fe[1] : void 0,
      done: !0
    };
  }
}, ic = window.ic, plug = ic == null ? void 0 : ic.plug, context = createContext({
  authenticated: !1,
  principal: null,
  agent: plug == null ? void 0 : plug.agent,
  login: function() {
  },
  logout: function() {
  },
  createActor: plug == null ? void 0 : plug.createActor,
  requestBalance: plug == null ? void 0 : plug.requestBalance,
  requestTransfer: plug == null ? void 0 : plug.requestTransfer,
  batchTransactions: plug == null ? void 0 : plug.batchTransactions,
  plug
}), Provider = context.Provider, PlugProvider = function(Q) {
  var ee = Q.children, ne = Q.LoggedOut, ie = Q.host, ae = ie === void 0 ? "https://mainnet.dfinity.network" : ie, ce = Q.whitelist, le = ce === void 0 ? [] : ce, de = Q.timeout, ye = de === void 0 ? 12e4 : de, fe = useState(!1), Be = fe[0], Ee = fe[1], me = useState(null), ge = me[0], we = me[1], be = useCallback(function() {
    return __awaiter$d(void 0, void 0, void 0, function() {
      var Se, Ge;
      return __generator(this, function(Fe) {
        switch (Fe.label) {
          case 0:
            return Fe.trys.push([0, 4, , 5]), plug ? [4, plug.requestConnect({
              whitelist: le,
              host: ae,
              timeout: ye
            })] : [3, 3];
          case 1:
            return Se = Fe.sent(), Se ? [4, plug.agent.getPrincipal()] : [3, 3];
          case 2:
            Ge = Fe.sent(), we(Ge), Ee(!0), Fe.label = 3;
          case 3:
            return [3, 5];
          case 4:
            return Fe.sent(), Ee(!1), [3, 5];
          case 5:
            return [2];
        }
      });
    });
  }, [ae, le, ye]), Oe = useCallback(function() {
    window.location.reload();
  }, []), He = useMemo(function() {
    return {
      authenticated: Be,
      agent: plug == null ? void 0 : plug.agent,
      login: be,
      logout: Oe,
      principal: ge,
      createActor: function(Se) {
        return plug == null ? void 0 : plug.createActor(Se);
      },
      requestBalance: plug == null ? void 0 : plug.requestBalance,
      requestTransfer: plug == null ? void 0 : plug.requestTransfer,
      batchTransactions: plug == null ? void 0 : plug.batchTransactions,
      plug
    };
  }, [Be, plug, be, Oe, ge]);
  return !Be && ne ? /* @__PURE__ */ jsx(Provider, {
    value: He,
    children: ne || null
  }) : /* @__PURE__ */ jsx(Provider, {
    value: He,
    children: ee
  });
}, usePlug = function() {
  var Q = useContext(context);
  return Q;
}, e = "colors", t = "sizes", r = "space", n = { gap: r, gridGap: r, columnGap: r, gridColumnGap: r, rowGap: r, gridRowGap: r, inset: r, insetBlock: r, insetBlockEnd: r, insetBlockStart: r, insetInline: r, insetInlineEnd: r, insetInlineStart: r, margin: r, marginTop: r, marginRight: r, marginBottom: r, marginLeft: r, marginBlock: r, marginBlockEnd: r, marginBlockStart: r, marginInline: r, marginInlineEnd: r, marginInlineStart: r, padding: r, paddingTop: r, paddingRight: r, paddingBottom: r, paddingLeft: r, paddingBlock: r, paddingBlockEnd: r, paddingBlockStart: r, paddingInline: r, paddingInlineEnd: r, paddingInlineStart: r, top: r, right: r, bottom: r, left: r, scrollMargin: r, scrollMarginTop: r, scrollMarginRight: r, scrollMarginBottom: r, scrollMarginLeft: r, scrollMarginX: r, scrollMarginY: r, scrollMarginBlock: r, scrollMarginBlockEnd: r, scrollMarginBlockStart: r, scrollMarginInline: r, scrollMarginInlineEnd: r, scrollMarginInlineStart: r, scrollPadding: r, scrollPaddingTop: r, scrollPaddingRight: r, scrollPaddingBottom: r, scrollPaddingLeft: r, scrollPaddingX: r, scrollPaddingY: r, scrollPaddingBlock: r, scrollPaddingBlockEnd: r, scrollPaddingBlockStart: r, scrollPaddingInline: r, scrollPaddingInlineEnd: r, scrollPaddingInlineStart: r, fontSize: "fontSizes", background: e, backgroundColor: e, backgroundImage: e, borderImage: e, border: e, borderBlock: e, borderBlockEnd: e, borderBlockStart: e, borderBottom: e, borderBottomColor: e, borderColor: e, borderInline: e, borderInlineEnd: e, borderInlineStart: e, borderLeft: e, borderLeftColor: e, borderRight: e, borderRightColor: e, borderTop: e, borderTopColor: e, caretColor: e, color: e, columnRuleColor: e, fill: e, outline: e, outlineColor: e, stroke: e, textDecorationColor: e, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t, minBlockSize: t, maxBlockSize: t, inlineSize: t, minInlineSize: t, maxInlineSize: t, width: t, minWidth: t, maxWidth: t, height: t, minHeight: t, maxHeight: t, flexBasis: t, gridTemplateColumns: t, gridTemplateRows: t, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" }, i$1 = (Q, ee) => typeof ee == "function" ? { "()": Function.prototype.toString.call(ee) } : ee, o = () => {
  const Q = /* @__PURE__ */ Object.create(null);
  return (ee, ne, ...ie) => {
    const ae = ((ce) => JSON.stringify(ce, i$1))(ee);
    return ae in Q ? Q[ae] : Q[ae] = ne(ee, ...ie);
  };
}, l = Symbol.for("sxs.internal"), s = (Q, ee) => Object.defineProperties(Q, Object.getOwnPropertyDescriptors(ee)), a = (Q) => {
  for (const ee in Q)
    return !0;
  return !1;
}, { hasOwnProperty: c$1 } = Object.prototype, d = (Q) => Q.includes("-") ? Q : Q.replace(/[A-Z]/g, (ee) => "-" + ee.toLowerCase()), g = /\s+(?![^()]*\))/, p = (Q) => (ee) => Q(...typeof ee == "string" ? String(ee).split(g) : [ee]), u = { appearance: (Q) => ({ WebkitAppearance: Q, appearance: Q }), backfaceVisibility: (Q) => ({ WebkitBackfaceVisibility: Q, backfaceVisibility: Q }), backdropFilter: (Q) => ({ WebkitBackdropFilter: Q, backdropFilter: Q }), backgroundClip: (Q) => ({ WebkitBackgroundClip: Q, backgroundClip: Q }), boxDecorationBreak: (Q) => ({ WebkitBoxDecorationBreak: Q, boxDecorationBreak: Q }), clipPath: (Q) => ({ WebkitClipPath: Q, clipPath: Q }), content: (Q) => ({ content: Q.includes('"') || Q.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(Q) ? Q : `"${Q}"` }), hyphens: (Q) => ({ WebkitHyphens: Q, hyphens: Q }), maskImage: (Q) => ({ WebkitMaskImage: Q, maskImage: Q }), maskSize: (Q) => ({ WebkitMaskSize: Q, maskSize: Q }), tabSize: (Q) => ({ MozTabSize: Q, tabSize: Q }), textSizeAdjust: (Q) => ({ WebkitTextSizeAdjust: Q, textSizeAdjust: Q }), userSelect: (Q) => ({ WebkitUserSelect: Q, userSelect: Q }), marginBlock: p((Q, ee) => ({ marginBlockStart: Q, marginBlockEnd: ee || Q })), marginInline: p((Q, ee) => ({ marginInlineStart: Q, marginInlineEnd: ee || Q })), maxSize: p((Q, ee) => ({ maxBlockSize: Q, maxInlineSize: ee || Q })), minSize: p((Q, ee) => ({ minBlockSize: Q, minInlineSize: ee || Q })), paddingBlock: p((Q, ee) => ({ paddingBlockStart: Q, paddingBlockEnd: ee || Q })), paddingInline: p((Q, ee) => ({ paddingInlineStart: Q, paddingInlineEnd: ee || Q })) }, h = /([\d.]+)([^]*)/, f = (Q, ee) => Q.length ? Q.reduce((ne, ie) => (ne.push(...ee.map((ae) => ae.includes("&") ? ae.replace(/&/g, /[ +>|~]/.test(ie) && /&.*&/.test(ae) ? `:is(${ie})` : ie) : ie + " " + ae)), ne), []) : ee, m = (Q, ee) => Q in b && typeof ee == "string" ? ee.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (ne, ie, ae, ce) => ie + (ae === "stretch" ? `-moz-available${ce};${d(Q)}:${ie}-webkit-fill-available` : `-moz-fit-content${ce};${d(Q)}:${ie}fit-content`) + ce) : String(ee), b = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 }, S = (Q) => Q ? Q + "-" : "", k = (Q, ee, ne) => Q.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (ie, ae, ce, le, de) => le == "$" == !!ce ? ie : (ae || le == "--" ? "calc(" : "") + "var(--" + (le === "$" ? S(ee) + (de.includes("$") ? "" : S(ne)) + de.replace(/\$/g, "-") : de) + ")" + (ae || le == "--" ? "*" + (ae || "") + (ce || "1") + ")" : "")), y = /\s*,\s*(?![^()]*\))/, B = Object.prototype.toString, $ = (Q, ee, ne, ie, ae) => {
  let ce, le, de;
  const ye = (fe, Be, Ee) => {
    let me, ge;
    const we = (be) => {
      for (me in be) {
        const Se = me.charCodeAt(0) === 64, Ge = Se && Array.isArray(be[me]) ? be[me] : [be[me]];
        for (ge of Ge) {
          const Fe = /[A-Z]/.test(He = me) ? He : He.replace(/-[^]/g, (Je) => Je[1].toUpperCase()), Pe = typeof ge == "object" && ge && ge.toString === B && (!ie.utils[Fe] || !Be.length);
          if (Fe in ie.utils && !Pe) {
            const Je = ie.utils[Fe];
            if (Je !== le) {
              le = Je, we(Je(ge)), le = null;
              continue;
            }
          } else if (Fe in u) {
            const Je = u[Fe];
            if (Je !== de) {
              de = Je, we(Je(ge)), de = null;
              continue;
            }
          }
          if (Se && (Oe = me.slice(1) in ie.media ? "@media " + ie.media[me.slice(1)] : me, me = Oe.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (Je, tt, ft, Tt, Xe, ht) => {
            const Qt = h.test(tt), Gt = 0.0625 * (Qt ? -1 : 1), [pt, xt] = Qt ? [Tt, tt] : [tt, Tt];
            return "(" + (ft[0] === "=" ? "" : ft[0] === ">" === Qt ? "max-" : "min-") + pt + ":" + (ft[0] !== "=" && ft.length === 1 ? xt.replace(h, (Yt, Jt, Ht) => Number(Jt) + Gt * (ft === ">" ? 1 : -1) + Ht) : xt) + (Xe ? ") and (" + (Xe[0] === ">" ? "min-" : "max-") + pt + ":" + (Xe.length === 1 ? ht.replace(h, (Yt, Jt, Ht) => Number(Jt) + Gt * (Xe === ">" ? -1 : 1) + Ht) : ht) : "") + ")";
          })), Pe) {
            const Je = Se ? Ee.concat(me) : [...Ee], tt = Se ? [...Be] : f(Be, me.split(y));
            ce !== void 0 && ae(x(...ce)), ce = void 0, ye(ge, tt, Je);
          } else
            ce === void 0 && (ce = [[], Be, Ee]), me = Se || me.charCodeAt(0) !== 36 ? me : `--${S(ie.prefix)}${me.slice(1).replace(/\$/g, "-")}`, ge = Pe ? ge : typeof ge == "number" ? ge && Fe in I ? String(ge) + "px" : String(ge) : k(m(Fe, ge == null ? "" : ge), ie.prefix, ie.themeMap[Fe]), ce[0].push(`${Se ? `${me} ` : `${d(me)}:`}${ge}`);
        }
      }
      var Oe, He;
    };
    we(fe), ce !== void 0 && ae(x(...ce)), ce = void 0;
  };
  ye(Q, ee, ne);
}, x = (Q, ee, ne) => `${ne.map((ie) => `${ie}{`).join("")}${ee.length ? `${ee.join(",")}{` : ""}${Q.join(";")}${ee.length ? "}" : ""}${Array(ne.length ? ne.length + 1 : 0).join("}")}`, I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 }, R = (Q) => String.fromCharCode(Q + (Q > 25 ? 39 : 97)), z = (Q) => ((ee) => {
  let ne, ie = "";
  for (ne = Math.abs(ee); ne > 52; ne = ne / 52 | 0)
    ie = R(ne % 52) + ie;
  return R(ne % 52) + ie;
})(((ee, ne) => {
  let ie = ne.length;
  for (; ie; )
    ee = 33 * ee ^ ne.charCodeAt(--ie);
  return ee;
})(5381, JSON.stringify(Q)) >>> 0), W = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"], j = (Q) => {
  if (Q.href && !Q.href.startsWith(location.origin))
    return !1;
  try {
    return !!Q.cssRules;
  } catch {
    return !1;
  }
}, E = (Q) => {
  let ee;
  const ne = () => {
    const { cssRules: ae } = ee.sheet;
    return [].map.call(ae, (ce, le) => {
      const { cssText: de } = ce;
      let ye = "";
      if (de.startsWith("--sxs"))
        return "";
      if (ae[le - 1] && (ye = ae[le - 1].cssText).startsWith("--sxs")) {
        if (!ce.cssRules.length)
          return "";
        for (const fe in ee.rules)
          if (ee.rules[fe].group === ce)
            return `--sxs{--sxs:${[...ee.rules[fe].cache].join(" ")}}${de}`;
        return ce.cssRules.length ? `${ye}${de}` : "";
      }
      return de;
    }).join("");
  }, ie = () => {
    if (ee) {
      const { rules: de, sheet: ye } = ee;
      if (!ye.deleteRule) {
        for (; Object(Object(ye.cssRules)[0]).type === 3; )
          ye.cssRules.splice(0, 1);
        ye.cssRules = [];
      }
      for (const fe in de)
        delete de[fe];
    }
    const ae = Object(Q).styleSheets || [];
    for (const de of ae)
      if (j(de)) {
        for (let ye = 0, fe = de.cssRules; fe[ye]; ++ye) {
          const Be = Object(fe[ye]);
          if (Be.type !== 1)
            continue;
          const Ee = Object(fe[ye + 1]);
          if (Ee.type !== 4)
            continue;
          ++ye;
          const { cssText: me } = Be;
          if (!me.startsWith("--sxs"))
            continue;
          const ge = me.slice(14, -3).trim().split(/\s+/), we = W[ge[0]];
          we && (ee || (ee = { sheet: de, reset: ie, rules: {}, toString: ne }), ee.rules[we] = { group: Ee, index: ye, cache: new Set(ge) });
        }
        if (ee)
          break;
      }
    if (!ee) {
      const de = (ye, fe) => ({ type: fe, cssRules: [], insertRule(Be, Ee) {
        this.cssRules.splice(Ee, 0, de(Be, { import: 3, undefined: 1 }[(Be.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return ye === "@media{}" ? `@media{${[].map.call(this.cssRules, (Be) => Be.cssText).join("")}}` : ye;
      } });
      ee = { sheet: Q ? (Q.head || Q).appendChild(document.createElement("style")).sheet : de("", "text/css"), rules: {}, reset: ie, toString: ne };
    }
    const { sheet: ce, rules: le } = ee;
    for (let de = W.length - 1; de >= 0; --de) {
      const ye = W[de];
      if (!le[ye]) {
        const fe = W[de + 1], Be = le[fe] ? le[fe].index : ce.cssRules.length;
        ce.insertRule("@media{}", Be), ce.insertRule(`--sxs{--sxs:${de}}`, Be), le[ye] = { group: ce.cssRules[Be + 1], index: Be, cache: /* @__PURE__ */ new Set([de]) };
      }
      v(le[ye]);
    }
  };
  return ie(), ee;
}, v = (Q) => {
  const ee = Q.group;
  let ne = ee.cssRules.length;
  Q.apply = (ie) => {
    try {
      ee.insertRule(ie, ne), ++ne;
    } catch {
    }
  };
}, T = Symbol(), w = o(), M = (Q, ee) => w(Q, () => (...ne) => {
  let ie = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const ae of ne)
    if (ae != null)
      if (ae[l]) {
        ie.type == null && (ie.type = ae[l].type);
        for (const ce of ae[l].composers)
          ie.composers.add(ce);
      } else
        ae.constructor !== Object || ae.$$typeof ? ie.type == null && (ie.type = ae) : ie.composers.add(C(ae, Q));
  return ie.type == null && (ie.type = "span"), ie.composers.size || ie.composers.add(["PJLV", {}, [], [], {}, []]), P(Q, ie, ee);
}), C = ({ variants: Q, compoundVariants: ee, defaultVariants: ne, ...ie }, ae) => {
  const ce = `${S(ae.prefix)}c-${z(ie)}`, le = [], de = [], ye = /* @__PURE__ */ Object.create(null), fe = [];
  for (const me in ne)
    ye[me] = String(ne[me]);
  if (typeof Q == "object" && Q)
    for (const me in Q) {
      Be = ye, Ee = me, c$1.call(Be, Ee) || (ye[me] = "undefined");
      const ge = Q[me];
      for (const we in ge) {
        const be = { [me]: String(we) };
        String(we) === "undefined" && fe.push(me);
        const Oe = ge[we], He = [be, Oe, !a(Oe)];
        le.push(He);
      }
    }
  var Be, Ee;
  if (typeof ee == "object" && ee)
    for (const me of ee) {
      let { css: ge, ...we } = me;
      ge = typeof ge == "object" && ge || {};
      for (const Oe in we)
        we[Oe] = String(we[Oe]);
      const be = [we, ge, !a(ge)];
      de.push(be);
    }
  return [ce, ie, le, de, ye, fe];
}, P = (Q, ee, ne) => {
  const [ie, ae, ce, le] = L(ee.composers), de = typeof ee.type == "function" || ee.type.$$typeof ? ((Ee) => {
    function me() {
      for (let ge = 0; ge < me[T].length; ge++) {
        const [we, be] = me[T][ge];
        Ee.rules[we].apply(be);
      }
      return me[T] = [], null;
    }
    return me[T] = [], me.rules = {}, W.forEach((ge) => me.rules[ge] = { apply: (we) => me[T].push([ge, we]) }), me;
  })(ne) : null, ye = (de || ne).rules, fe = `.${ie}${ae.length > 1 ? `:where(.${ae.slice(1).join(".")})` : ""}`, Be = (Ee) => {
    Ee = typeof Ee == "object" && Ee || A;
    const { css: me, ...ge } = Ee, we = {};
    for (const He in ce)
      if (delete ge[He], He in Ee) {
        let Se = Ee[He];
        typeof Se == "object" && Se ? we[He] = { "@initial": ce[He], ...Se } : (Se = String(Se), we[He] = Se !== "undefined" || le.has(He) ? Se : ce[He]);
      } else
        we[He] = ce[He];
    const be = /* @__PURE__ */ new Set([...ae]);
    for (const [He, Se, Ge, Fe] of ee.composers) {
      ne.rules.styled.cache.has(He) || (ne.rules.styled.cache.add(He), $(Se, [`.${He}`], [], Q, (tt) => {
        ye.styled.apply(tt);
      }));
      const Pe = O(Ge, we, Q.media), Je = O(Fe, we, Q.media, !0);
      for (const tt of Pe)
        if (tt !== void 0)
          for (const [ft, Tt, Xe] of tt) {
            const ht = `${He}-${z(Tt)}-${ft}`;
            be.add(ht);
            const Qt = (Xe ? ne.rules.resonevar : ne.rules.onevar).cache, Gt = Xe ? ye.resonevar : ye.onevar;
            Qt.has(ht) || (Qt.add(ht), $(Tt, [`.${ht}`], [], Q, (pt) => {
              Gt.apply(pt);
            }));
          }
      for (const tt of Je)
        if (tt !== void 0)
          for (const [ft, Tt] of tt) {
            const Xe = `${He}-${z(Tt)}-${ft}`;
            be.add(Xe), ne.rules.allvar.cache.has(Xe) || (ne.rules.allvar.cache.add(Xe), $(Tt, [`.${Xe}`], [], Q, (ht) => {
              ye.allvar.apply(ht);
            }));
          }
    }
    if (typeof me == "object" && me) {
      const He = `${ie}-i${z(me)}-css`;
      be.add(He), ne.rules.inline.cache.has(He) || (ne.rules.inline.cache.add(He), $(me, [`.${He}`], [], Q, (Se) => {
        ye.inline.apply(Se);
      }));
    }
    for (const He of String(Ee.className || "").trim().split(/\s+/))
      He && be.add(He);
    const Oe = ge.className = [...be].join(" ");
    return { type: ee.type, className: Oe, selector: fe, props: ge, toString: () => Oe, deferredInjector: de };
  };
  return s(Be, { className: ie, selector: fe, [l]: ee, toString: () => (ne.rules.styled.cache.has(ie) || Be(), ie) });
}, L = (Q) => {
  let ee = "";
  const ne = [], ie = {}, ae = [];
  for (const [ce, , , , le, de] of Q) {
    ee === "" && (ee = ce), ne.push(ce), ae.push(...de);
    for (const ye in le) {
      const fe = le[ye];
      (ie[ye] === void 0 || fe !== "undefined" || de.includes(fe)) && (ie[ye] = fe);
    }
  }
  return [ee, ne, ie, new Set(ae)];
}, O = (Q, ee, ne, ie) => {
  const ae = [];
  e:
    for (let [ce, le, de] of Q) {
      if (de)
        continue;
      let ye, fe = 0, Be = !1;
      for (ye in ce) {
        const Ee = ce[ye];
        let me = ee[ye];
        if (me !== Ee) {
          if (typeof me != "object" || !me)
            continue e;
          {
            let ge, we, be = 0;
            for (const Oe in me) {
              if (Ee === String(me[Oe])) {
                if (Oe !== "@initial") {
                  const He = Oe.slice(1);
                  (we = we || []).push(He in ne ? ne[He] : Oe.replace(/^@media ?/, "")), Be = !0;
                }
                fe += be, ge = !0;
              }
              ++be;
            }
            if (we && we.length && (le = { ["@media " + we.join(", ")]: le }), !ge)
              continue e;
          }
        }
      }
      (ae[fe] = ae[fe] || []).push([ie ? "cv" : `${ye}-${ce[ye]}`, le, Be]);
    }
  return ae;
}, A = {}, N = o(), D = (Q, ee) => N(Q, () => (...ne) => {
  const ie = () => {
    for (let ae of ne) {
      ae = typeof ae == "object" && ae || {};
      let ce = z(ae);
      if (!ee.rules.global.cache.has(ce)) {
        if (ee.rules.global.cache.add(ce), "@import" in ae) {
          let le = [].indexOf.call(ee.sheet.cssRules, ee.rules.themed.group) - 1;
          for (let de of [].concat(ae["@import"]))
            de = de.includes('"') || de.includes("'") ? de : `"${de}"`, ee.sheet.insertRule(`@import ${de};`, le++);
          delete ae["@import"];
        }
        $(ae, [], [], Q, (le) => {
          ee.rules.global.apply(le);
        });
      }
    }
    return "";
  };
  return s(ie, { toString: ie });
}), H = o(), V = (Q, ee) => H(Q, () => (ne) => {
  const ie = `${S(Q.prefix)}k-${z(ne)}`, ae = () => {
    if (!ee.rules.global.cache.has(ie)) {
      ee.rules.global.cache.add(ie);
      const ce = [];
      $(ne, [], [], Q, (de) => ce.push(de));
      const le = `@keyframes ${ie}{${ce.join("")}}`;
      ee.rules.global.apply(le);
    }
    return ie;
  };
  return s(ae, { get name() {
    return ae();
  }, toString: ae });
}), G = class {
  constructor(Q, ee, ne, ie) {
    this.token = Q == null ? "" : String(Q), this.value = ee == null ? "" : String(ee), this.scale = ne == null ? "" : String(ne), this.prefix = ie == null ? "" : String(ie);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
}, F = o(), J = (Q, ee) => F(Q, () => (ne, ie) => {
  ie = typeof ne == "object" && ne || Object(ie);
  const ae = `.${ne = (ne = typeof ne == "string" ? ne : "") || `${S(Q.prefix)}t-${z(ie)}`}`, ce = {}, le = [];
  for (const ye in ie) {
    ce[ye] = {};
    for (const fe in ie[ye]) {
      const Be = `--${S(Q.prefix)}${ye}-${fe}`, Ee = k(String(ie[ye][fe]), Q.prefix, ye);
      ce[ye][fe] = new G(fe, Ee, ye, Q.prefix), le.push(`${Be}:${Ee}`);
    }
  }
  const de = () => {
    if (le.length && !ee.rules.themed.cache.has(ne)) {
      ee.rules.themed.cache.add(ne);
      const ye = `${ie === Q.theme ? ":root," : ""}.${ne}{${le.join(";")}}`;
      ee.rules.themed.apply(ye);
    }
    return ne;
  };
  return { ...ce, get className() {
    return de();
  }, selector: ae, toString: de };
}), U = o(), X, Y = o(), q = (Q) => {
  const ee = ((ne) => {
    let ie = !1;
    const ae = U(ne, (ce) => {
      ie = !0;
      const le = "prefix" in (ce = typeof ce == "object" && ce || {}) ? String(ce.prefix) : "", de = typeof ce.media == "object" && ce.media || {}, ye = typeof ce.root == "object" ? ce.root || null : globalThis.document || null, fe = typeof ce.theme == "object" && ce.theme || {}, Be = { prefix: le, media: de, theme: fe, themeMap: typeof ce.themeMap == "object" && ce.themeMap || { ...n }, utils: typeof ce.utils == "object" && ce.utils || {} }, Ee = E(ye), me = { css: M(Be, Ee), globalCss: D(Be, Ee), keyframes: V(Be, Ee), createTheme: J(Be, Ee), reset() {
        Ee.reset(), me.theme.toString();
      }, theme: {}, sheet: Ee, config: Be, prefix: le, getCssText: Ee.toString, toString: Ee.toString };
      return String(me.theme = me.createTheme(fe)), me;
    });
    return ie || ae.reset(), ae;
  })(Q);
  return ee.styled = (({ config: ne, sheet: ie }) => Y(ne, () => {
    const ae = M(ne, ie);
    return (...ce) => {
      const le = ae(...ce), de = le[l].type, ye = React__default.forwardRef((fe, Be) => {
        const Ee = fe && fe.as || de, { props: me, deferredInjector: ge } = le(fe);
        return delete me.as, me.ref = Be, ge ? React__default.createElement(React__default.Fragment, null, React__default.createElement(Ee, me), React__default.createElement(ge, null)) : React__default.createElement(Ee, me);
      });
      return ye.className = le.className, ye.displayName = `Styled.${de.displayName || de.name || de}`, ye.selector = le.selector, ye.toString = () => le.selector, ye[l] = le[l], ye;
    };
  }))(ee), ee;
}, K = () => X || (X = q()), re = (...Q) => K().styled(...Q);
globalThis && globalThis.__awaiter;
globalThis && globalThis.__generator;
re("button", {
  border: "none",
  background: "linear-gradient(93.07deg, #FFD719 0.61%, #F754D4 33.98%, #1FD1EC 65.84%, #48FA6B 97.7%)",
  padding: "2px",
  borderRadius: "10px",
  cursor: "pointer",
  transition: "transform 0.3s",
  "&:hover": {
    transform: "scale(1.03)"
  },
  "& > div": {
    display: "flex",
    flexDirection: "row",
    alignItems: "center",
    background: "white",
    padding: "5px 12px",
    borderRadius: "10px",
    fontSize: "16px",
    fontWeight: 600
  },
  "& .dark": {
    background: "#111827",
    color: "white"
  },
  "& img": {
    marginRight: "9px"
  },
  variants: {
    dark: {
      true: {
        "& > div": {
          background: "#111827",
          color: "white"
        }
      }
    }
  }
});
globalThis && globalThis.__awaiter;
globalThis && globalThis.__generator;
const alphabet$1 = "abcdefghijklmnopqrstuvwxyz234567", lookupTable$1 = /* @__PURE__ */ Object.create(null);
for (let Q = 0; Q < alphabet$1.length; Q++)
  lookupTable$1[alphabet$1[Q]] = Q;
lookupTable$1[0] = lookupTable$1.o;
lookupTable$1[1] = lookupTable$1.i;
function encode$6(Q) {
  let ee = 0, ne = 0, ie = "";
  function ae(ce) {
    return ee < 0 ? ne |= ce >> -ee : ne = ce << ee & 248, ee > 3 ? (ee -= 8, 1) : (ee < 4 && (ie += alphabet$1[ne >> 3], ee += 5), 0);
  }
  for (let ce = 0; ce < Q.length; )
    ce += ae(Q[ce]);
  return ie + (ee < 0 ? alphabet$1[ne >> 3] : "");
}
function decode$6(Q) {
  let ee = 0, ne = 0;
  const ie = new Uint8Array(Q.length * 4 / 3 | 0);
  let ae = 0;
  function ce(le) {
    let de = lookupTable$1[le.toLowerCase()];
    if (de === void 0)
      throw new Error(`Invalid character: ${JSON.stringify(le)}`);
    de <<= 3, ne |= de >>> ee, ee += 5, ee >= 8 && (ie[ae++] = ne, ee -= 8, ee > 0 ? ne = de << 5 - ee & 255 : ne = 0);
  }
  for (const le of Q)
    ce(le);
  return ie.slice(0, ae);
}
const lookUpTable$1 = new Uint32Array([
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
]);
function getCrc32$1(Q) {
  const ee = new Uint8Array(Q);
  let ne = -1;
  for (let ie = 0; ie < ee.length; ie++) {
    const ce = (ee[ie] ^ ne) & 255;
    ne = lookUpTable$1[ce] ^ ne >>> 8;
  }
  return (ne ^ -1) >>> 0;
}
var sha256$1 = { exports: {} };
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
(function(module) {
  (function() {
    var ERROR = "input is invalid type", WINDOW = typeof window == "object", root = WINDOW ? window : {};
    root.JS_SHA256_NO_WINDOW && (WINDOW = !1);
    var WEB_WORKER = !WINDOW && typeof self == "object", NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
    NODE_JS ? root = commonjsGlobal : WEB_WORKER && (root = self);
    var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && !0 && module.exports, ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", HEX_CHARS = "0123456789abcdef".split(""), EXTRA = [-2147483648, 8388608, 32768, 128], SHIFT = [24, 16, 8, 0], K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ], OUTPUT_TYPES = ["hex", "array", "digest", "arrayBuffer"], blocks = [];
    (root.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(Q) {
      return Object.prototype.toString.call(Q) === "[object Array]";
    }), ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(Q) {
      return typeof Q == "object" && Q.buffer && Q.buffer.constructor === ArrayBuffer;
    });
    var createOutputMethod = function(Q, ee) {
      return function(ne) {
        return new Sha256(ee, !0).update(ne)[Q]();
      };
    }, createMethod = function(Q) {
      var ee = createOutputMethod("hex", Q);
      NODE_JS && (ee = nodeWrap(ee, Q)), ee.create = function() {
        return new Sha256(Q);
      }, ee.update = function(ae) {
        return ee.create().update(ae);
      };
      for (var ne = 0; ne < OUTPUT_TYPES.length; ++ne) {
        var ie = OUTPUT_TYPES[ne];
        ee[ie] = createOutputMethod(ie, Q);
      }
      return ee;
    }, nodeWrap = function(method, is224) {
      var crypto = eval("require('crypto')"), Buffer = eval("require('buffer').Buffer"), algorithm = is224 ? "sha224" : "sha256", nodeMethod = function(Q) {
        if (typeof Q == "string")
          return crypto.createHash(algorithm).update(Q, "utf8").digest("hex");
        if (Q == null)
          throw new Error(ERROR);
        return Q.constructor === ArrayBuffer && (Q = new Uint8Array(Q)), Array.isArray(Q) || ArrayBuffer.isView(Q) || Q.constructor === Buffer ? crypto.createHash(algorithm).update(new Buffer(Q)).digest("hex") : method(Q);
      };
      return nodeMethod;
    }, createHmacOutputMethod = function(Q, ee) {
      return function(ne, ie) {
        return new HmacSha256(ne, ee, !0).update(ie)[Q]();
      };
    }, createHmacMethod = function(Q) {
      var ee = createHmacOutputMethod("hex", Q);
      ee.create = function(ae) {
        return new HmacSha256(ae, Q);
      }, ee.update = function(ae, ce) {
        return ee.create(ae).update(ce);
      };
      for (var ne = 0; ne < OUTPUT_TYPES.length; ++ne) {
        var ie = OUTPUT_TYPES[ne];
        ee[ie] = createHmacOutputMethod(ie, Q);
      }
      return ee;
    };
    function Sha256(Q, ee) {
      ee ? (blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], Q ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = Q;
    }
    Sha256.prototype.update = function(Q) {
      if (!this.finalized) {
        var ee, ne = typeof Q;
        if (ne !== "string") {
          if (ne === "object") {
            if (Q === null)
              throw new Error(ERROR);
            if (ARRAY_BUFFER && Q.constructor === ArrayBuffer)
              Q = new Uint8Array(Q);
            else if (!Array.isArray(Q) && (!ARRAY_BUFFER || !ArrayBuffer.isView(Q)))
              throw new Error(ERROR);
          } else
            throw new Error(ERROR);
          ee = !0;
        }
        for (var ie, ae = 0, ce, le = Q.length, de = this.blocks; ae < le; ) {
          if (this.hashed && (this.hashed = !1, de[0] = this.block, de[16] = de[1] = de[2] = de[3] = de[4] = de[5] = de[6] = de[7] = de[8] = de[9] = de[10] = de[11] = de[12] = de[13] = de[14] = de[15] = 0), ee)
            for (ce = this.start; ae < le && ce < 64; ++ae)
              de[ce >> 2] |= Q[ae] << SHIFT[ce++ & 3];
          else
            for (ce = this.start; ae < le && ce < 64; ++ae)
              ie = Q.charCodeAt(ae), ie < 128 ? de[ce >> 2] |= ie << SHIFT[ce++ & 3] : ie < 2048 ? (de[ce >> 2] |= (192 | ie >> 6) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]) : ie < 55296 || ie >= 57344 ? (de[ce >> 2] |= (224 | ie >> 12) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie >> 6 & 63) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]) : (ie = 65536 + ((ie & 1023) << 10 | Q.charCodeAt(++ae) & 1023), de[ce >> 2] |= (240 | ie >> 18) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie >> 12 & 63) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie >> 6 & 63) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]);
          this.lastByteIndex = ce, this.bytes += ce - this.start, ce >= 64 ? (this.block = de[16], this.start = ce - 64, this.hash(), this.hashed = !0) : this.start = ce;
        }
        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
      }
    }, Sha256.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = !0;
        var Q = this.blocks, ee = this.lastByteIndex;
        Q[16] = this.block, Q[ee >> 2] |= EXTRA[ee & 3], this.block = Q[16], ee >= 56 && (this.hashed || this.hash(), Q[0] = this.block, Q[16] = Q[1] = Q[2] = Q[3] = Q[4] = Q[5] = Q[6] = Q[7] = Q[8] = Q[9] = Q[10] = Q[11] = Q[12] = Q[13] = Q[14] = Q[15] = 0), Q[14] = this.hBytes << 3 | this.bytes >>> 29, Q[15] = this.bytes << 3, this.hash();
      }
    }, Sha256.prototype.hash = function() {
      var Q = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, ae = this.h4, ce = this.h5, le = this.h6, de = this.h7, ye = this.blocks, fe, Be, Ee, me, ge, we, be, Oe, He, Se, Ge;
      for (fe = 16; fe < 64; ++fe)
        ge = ye[fe - 15], Be = (ge >>> 7 | ge << 25) ^ (ge >>> 18 | ge << 14) ^ ge >>> 3, ge = ye[fe - 2], Ee = (ge >>> 17 | ge << 15) ^ (ge >>> 19 | ge << 13) ^ ge >>> 10, ye[fe] = ye[fe - 16] + Be + ye[fe - 7] + Ee << 0;
      for (Ge = ee & ne, fe = 0; fe < 64; fe += 4)
        this.first ? (this.is224 ? (Oe = 300032, ge = ye[0] - 1413257819, de = ge - 150054599 << 0, ie = ge + 24177077 << 0) : (Oe = 704751109, ge = ye[0] - 210244248, de = ge - 1521486534 << 0, ie = ge + 143694565 << 0), this.first = !1) : (Be = (Q >>> 2 | Q << 30) ^ (Q >>> 13 | Q << 19) ^ (Q >>> 22 | Q << 10), Ee = (ae >>> 6 | ae << 26) ^ (ae >>> 11 | ae << 21) ^ (ae >>> 25 | ae << 7), Oe = Q & ee, me = Oe ^ Q & ne ^ Ge, be = ae & ce ^ ~ae & le, ge = de + Ee + be + K[fe] + ye[fe], we = Be + me, de = ie + ge << 0, ie = ge + we << 0), Be = (ie >>> 2 | ie << 30) ^ (ie >>> 13 | ie << 19) ^ (ie >>> 22 | ie << 10), Ee = (de >>> 6 | de << 26) ^ (de >>> 11 | de << 21) ^ (de >>> 25 | de << 7), He = ie & Q, me = He ^ ie & ee ^ Oe, be = de & ae ^ ~de & ce, ge = le + Ee + be + K[fe + 1] + ye[fe + 1], we = Be + me, le = ne + ge << 0, ne = ge + we << 0, Be = (ne >>> 2 | ne << 30) ^ (ne >>> 13 | ne << 19) ^ (ne >>> 22 | ne << 10), Ee = (le >>> 6 | le << 26) ^ (le >>> 11 | le << 21) ^ (le >>> 25 | le << 7), Se = ne & ie, me = Se ^ ne & Q ^ He, be = le & de ^ ~le & ae, ge = ce + Ee + be + K[fe + 2] + ye[fe + 2], we = Be + me, ce = ee + ge << 0, ee = ge + we << 0, Be = (ee >>> 2 | ee << 30) ^ (ee >>> 13 | ee << 19) ^ (ee >>> 22 | ee << 10), Ee = (ce >>> 6 | ce << 26) ^ (ce >>> 11 | ce << 21) ^ (ce >>> 25 | ce << 7), Ge = ee & ne, me = Ge ^ ee & ie ^ Se, be = ce & le ^ ~ce & de, ge = ae + Ee + be + K[fe + 3] + ye[fe + 3], we = Be + me, ae = Q + ge << 0, Q = ge + we << 0;
      this.h0 = this.h0 + Q << 0, this.h1 = this.h1 + ee << 0, this.h2 = this.h2 + ne << 0, this.h3 = this.h3 + ie << 0, this.h4 = this.h4 + ae << 0, this.h5 = this.h5 + ce << 0, this.h6 = this.h6 + le << 0, this.h7 = this.h7 + de << 0;
    }, Sha256.prototype.hex = function() {
      this.finalize();
      var Q = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, ae = this.h4, ce = this.h5, le = this.h6, de = this.h7, ye = HEX_CHARS[Q >> 28 & 15] + HEX_CHARS[Q >> 24 & 15] + HEX_CHARS[Q >> 20 & 15] + HEX_CHARS[Q >> 16 & 15] + HEX_CHARS[Q >> 12 & 15] + HEX_CHARS[Q >> 8 & 15] + HEX_CHARS[Q >> 4 & 15] + HEX_CHARS[Q & 15] + HEX_CHARS[ee >> 28 & 15] + HEX_CHARS[ee >> 24 & 15] + HEX_CHARS[ee >> 20 & 15] + HEX_CHARS[ee >> 16 & 15] + HEX_CHARS[ee >> 12 & 15] + HEX_CHARS[ee >> 8 & 15] + HEX_CHARS[ee >> 4 & 15] + HEX_CHARS[ee & 15] + HEX_CHARS[ne >> 28 & 15] + HEX_CHARS[ne >> 24 & 15] + HEX_CHARS[ne >> 20 & 15] + HEX_CHARS[ne >> 16 & 15] + HEX_CHARS[ne >> 12 & 15] + HEX_CHARS[ne >> 8 & 15] + HEX_CHARS[ne >> 4 & 15] + HEX_CHARS[ne & 15] + HEX_CHARS[ie >> 28 & 15] + HEX_CHARS[ie >> 24 & 15] + HEX_CHARS[ie >> 20 & 15] + HEX_CHARS[ie >> 16 & 15] + HEX_CHARS[ie >> 12 & 15] + HEX_CHARS[ie >> 8 & 15] + HEX_CHARS[ie >> 4 & 15] + HEX_CHARS[ie & 15] + HEX_CHARS[ae >> 28 & 15] + HEX_CHARS[ae >> 24 & 15] + HEX_CHARS[ae >> 20 & 15] + HEX_CHARS[ae >> 16 & 15] + HEX_CHARS[ae >> 12 & 15] + HEX_CHARS[ae >> 8 & 15] + HEX_CHARS[ae >> 4 & 15] + HEX_CHARS[ae & 15] + HEX_CHARS[ce >> 28 & 15] + HEX_CHARS[ce >> 24 & 15] + HEX_CHARS[ce >> 20 & 15] + HEX_CHARS[ce >> 16 & 15] + HEX_CHARS[ce >> 12 & 15] + HEX_CHARS[ce >> 8 & 15] + HEX_CHARS[ce >> 4 & 15] + HEX_CHARS[ce & 15] + HEX_CHARS[le >> 28 & 15] + HEX_CHARS[le >> 24 & 15] + HEX_CHARS[le >> 20 & 15] + HEX_CHARS[le >> 16 & 15] + HEX_CHARS[le >> 12 & 15] + HEX_CHARS[le >> 8 & 15] + HEX_CHARS[le >> 4 & 15] + HEX_CHARS[le & 15];
      return this.is224 || (ye += HEX_CHARS[de >> 28 & 15] + HEX_CHARS[de >> 24 & 15] + HEX_CHARS[de >> 20 & 15] + HEX_CHARS[de >> 16 & 15] + HEX_CHARS[de >> 12 & 15] + HEX_CHARS[de >> 8 & 15] + HEX_CHARS[de >> 4 & 15] + HEX_CHARS[de & 15]), ye;
    }, Sha256.prototype.toString = Sha256.prototype.hex, Sha256.prototype.digest = function() {
      this.finalize();
      var Q = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, ae = this.h4, ce = this.h5, le = this.h6, de = this.h7, ye = [
        Q >> 24 & 255,
        Q >> 16 & 255,
        Q >> 8 & 255,
        Q & 255,
        ee >> 24 & 255,
        ee >> 16 & 255,
        ee >> 8 & 255,
        ee & 255,
        ne >> 24 & 255,
        ne >> 16 & 255,
        ne >> 8 & 255,
        ne & 255,
        ie >> 24 & 255,
        ie >> 16 & 255,
        ie >> 8 & 255,
        ie & 255,
        ae >> 24 & 255,
        ae >> 16 & 255,
        ae >> 8 & 255,
        ae & 255,
        ce >> 24 & 255,
        ce >> 16 & 255,
        ce >> 8 & 255,
        ce & 255,
        le >> 24 & 255,
        le >> 16 & 255,
        le >> 8 & 255,
        le & 255
      ];
      return this.is224 || ye.push(de >> 24 & 255, de >> 16 & 255, de >> 8 & 255, de & 255), ye;
    }, Sha256.prototype.array = Sha256.prototype.digest, Sha256.prototype.arrayBuffer = function() {
      this.finalize();
      var Q = new ArrayBuffer(this.is224 ? 28 : 32), ee = new DataView(Q);
      return ee.setUint32(0, this.h0), ee.setUint32(4, this.h1), ee.setUint32(8, this.h2), ee.setUint32(12, this.h3), ee.setUint32(16, this.h4), ee.setUint32(20, this.h5), ee.setUint32(24, this.h6), this.is224 || ee.setUint32(28, this.h7), Q;
    };
    function HmacSha256(Q, ee, ne) {
      var ie, ae = typeof Q;
      if (ae === "string") {
        var ce = [], le = Q.length, de = 0, ye;
        for (ie = 0; ie < le; ++ie)
          ye = Q.charCodeAt(ie), ye < 128 ? ce[de++] = ye : ye < 2048 ? (ce[de++] = 192 | ye >> 6, ce[de++] = 128 | ye & 63) : ye < 55296 || ye >= 57344 ? (ce[de++] = 224 | ye >> 12, ce[de++] = 128 | ye >> 6 & 63, ce[de++] = 128 | ye & 63) : (ye = 65536 + ((ye & 1023) << 10 | Q.charCodeAt(++ie) & 1023), ce[de++] = 240 | ye >> 18, ce[de++] = 128 | ye >> 12 & 63, ce[de++] = 128 | ye >> 6 & 63, ce[de++] = 128 | ye & 63);
        Q = ce;
      } else if (ae === "object") {
        if (Q === null)
          throw new Error(ERROR);
        if (ARRAY_BUFFER && Q.constructor === ArrayBuffer)
          Q = new Uint8Array(Q);
        else if (!Array.isArray(Q) && (!ARRAY_BUFFER || !ArrayBuffer.isView(Q)))
          throw new Error(ERROR);
      } else
        throw new Error(ERROR);
      Q.length > 64 && (Q = new Sha256(ee, !0).update(Q).array());
      var fe = [], Be = [];
      for (ie = 0; ie < 64; ++ie) {
        var Ee = Q[ie] || 0;
        fe[ie] = 92 ^ Ee, Be[ie] = 54 ^ Ee;
      }
      Sha256.call(this, ee, ne), this.update(Be), this.oKeyPad = fe, this.inner = !0, this.sharedMemory = ne;
    }
    HmacSha256.prototype = new Sha256(), HmacSha256.prototype.finalize = function() {
      if (Sha256.prototype.finalize.call(this), this.inner) {
        this.inner = !1;
        var Q = this.array();
        Sha256.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(Q), Sha256.prototype.finalize.call(this);
      }
    };
    var exports = createMethod();
    exports.sha256 = exports, exports.sha224 = createMethod(!0), exports.sha256.hmac = createHmacMethod(), exports.sha224.hmac = createHmacMethod(!0), COMMON_JS ? module.exports = exports : (root.sha256 = exports.sha256, root.sha224 = exports.sha224);
  })();
})(sha256$1);
function sha224$2(Q) {
  const ee = sha256$1.exports.sha224.create();
  return ee.update(Q), new Uint8Array(ee.array());
}
const SELF_AUTHENTICATING_SUFFIX$1 = 2, ANONYMOUS_SUFFIX$1 = 4, MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = "aaaaa-aa", fromHexString$1 = (Q) => {
  var ee;
  return new Uint8Array(((ee = Q.match(/.{1,2}/g)) !== null && ee !== void 0 ? ee : []).map((ne) => parseInt(ne, 16)));
}, toHexString$1 = (Q) => Q.reduce((ee, ne) => ee + ne.toString(16).padStart(2, "0"), "");
class Principal$3 {
  constructor(ee) {
    this._arr = ee, this._isPrincipal = !0;
  }
  static anonymous() {
    return new this(new Uint8Array([ANONYMOUS_SUFFIX$1]));
  }
  static managementCanister() {
    return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);
  }
  static selfAuthenticating(ee) {
    const ne = sha224$2(ee);
    return new this(new Uint8Array([...ne, SELF_AUTHENTICATING_SUFFIX$1]));
  }
  static from(ee) {
    if (typeof ee == "string")
      return Principal$3.fromText(ee);
    if (typeof ee == "object" && ee !== null && ee._isPrincipal === !0)
      return new Principal$3(ee._arr);
    throw new Error(`Impossible to convert ${JSON.stringify(ee)} to Principal.`);
  }
  static fromHex(ee) {
    return new this(fromHexString$1(ee));
  }
  static fromText(ee) {
    const ne = ee.toLowerCase().replace(/-/g, "");
    let ie = decode$6(ne);
    ie = ie.slice(4, ie.length);
    const ae = new this(ie);
    if (ae.toText() !== ee)
      throw new Error(`Principal "${ae.toText()}" does not have a valid checksum (original value "${ee}" may not be a valid Principal ID).`);
    return ae;
  }
  static fromUint8Array(ee) {
    return new this(ee);
  }
  isAnonymous() {
    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX$1;
  }
  toUint8Array() {
    return this._arr;
  }
  toHex() {
    return toHexString$1(this._arr).toUpperCase();
  }
  toText() {
    const ee = new ArrayBuffer(4);
    new DataView(ee).setUint32(0, getCrc32$1(this._arr));
    const ie = new Uint8Array(ee), ae = Uint8Array.from(this._arr), ce = new Uint8Array([...ie, ...ae]), de = encode$6(ce).match(/.{1,5}/g);
    if (!de)
      throw new Error();
    return de.join("-");
  }
  toString() {
    return this.toText();
  }
  compareTo(ee) {
    for (let ne = 0; ne < Math.min(this._arr.length, ee._arr.length); ne++) {
      if (this._arr[ne] < ee._arr[ne])
        return "lt";
      if (this._arr[ne] > ee._arr[ne])
        return "gt";
    }
    return this._arr.length < ee._arr.length ? "lt" : this._arr.length > ee._arr.length ? "gt" : "eq";
  }
  ltEq(ee) {
    const ne = this.compareTo(ee);
    return ne == "lt" || ne == "eq";
  }
  gtEq(ee) {
    const ne = this.compareTo(ee);
    return ne == "gt" || ne == "eq";
  }
}
const tradeBoxNum = 6, inventoryBoxNum = 45, pageBoxNum = 18, itemTypes = {
  LAYER1: "layer1"
}, nullPrincipalId = Principal$3.fromText("rrkah-fqaaa-aaaaa-aaaaq-cai");
var dist = {}, registries = {}, nfts_registry = {}, axios$2 = { exports: {} }, axios$1 = { exports: {} }, bind$2 = function Q(ee, ne) {
  return function() {
    for (var ae = new Array(arguments.length), ce = 0; ce < ae.length; ce++)
      ae[ce] = arguments[ce];
    return ee.apply(ne, ae);
  };
}, bind$1 = bind$2, toString = Object.prototype.toString;
function isArray$1(Q) {
  return toString.call(Q) === "[object Array]";
}
function isUndefined(Q) {
  return typeof Q > "u";
}
function isBuffer(Q) {
  return Q !== null && !isUndefined(Q) && Q.constructor !== null && !isUndefined(Q.constructor) && typeof Q.constructor.isBuffer == "function" && Q.constructor.isBuffer(Q);
}
function isArrayBuffer(Q) {
  return toString.call(Q) === "[object ArrayBuffer]";
}
function isFormData(Q) {
  return typeof FormData < "u" && Q instanceof FormData;
}
function isArrayBufferView(Q) {
  var ee;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ee = ArrayBuffer.isView(Q) : ee = Q && Q.buffer && Q.buffer instanceof ArrayBuffer, ee;
}
function isString(Q) {
  return typeof Q == "string";
}
function isNumber(Q) {
  return typeof Q == "number";
}
function isObject(Q) {
  return Q !== null && typeof Q == "object";
}
function isPlainObject$2(Q) {
  if (toString.call(Q) !== "[object Object]")
    return !1;
  var ee = Object.getPrototypeOf(Q);
  return ee === null || ee === Object.prototype;
}
function isDate(Q) {
  return toString.call(Q) === "[object Date]";
}
function isFile(Q) {
  return toString.call(Q) === "[object File]";
}
function isBlob(Q) {
  return toString.call(Q) === "[object Blob]";
}
function isFunction$1(Q) {
  return toString.call(Q) === "[object Function]";
}
function isStream(Q) {
  return isObject(Q) && isFunction$1(Q.pipe);
}
function isURLSearchParams(Q) {
  return typeof URLSearchParams < "u" && Q instanceof URLSearchParams;
}
function trim(Q) {
  return Q.trim ? Q.trim() : Q.replace(/^\s+|\s+$/g, "");
}
function isStandardBrowserEnv() {
  return typeof navigator < "u" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS") ? !1 : typeof window < "u" && typeof document < "u";
}
function forEach(Q, ee) {
  if (!(Q === null || typeof Q > "u"))
    if (typeof Q != "object" && (Q = [Q]), isArray$1(Q))
      for (var ne = 0, ie = Q.length; ne < ie; ne++)
        ee.call(null, Q[ne], ne, Q);
    else
      for (var ae in Q)
        Object.prototype.hasOwnProperty.call(Q, ae) && ee.call(null, Q[ae], ae, Q);
}
function merge$1() {
  var Q = {};
  function ee(ae, ce) {
    isPlainObject$2(Q[ce]) && isPlainObject$2(ae) ? Q[ce] = merge$1(Q[ce], ae) : isPlainObject$2(ae) ? Q[ce] = merge$1({}, ae) : isArray$1(ae) ? Q[ce] = ae.slice() : Q[ce] = ae;
  }
  for (var ne = 0, ie = arguments.length; ne < ie; ne++)
    forEach(arguments[ne], ee);
  return Q;
}
function extend(Q, ee, ne) {
  return forEach(ee, function(ae, ce) {
    ne && typeof ae == "function" ? Q[ce] = bind$1(ae, ne) : Q[ce] = ae;
  }), Q;
}
function stripBOM(Q) {
  return Q.charCodeAt(0) === 65279 && (Q = Q.slice(1)), Q;
}
var utils$c = {
  isArray: isArray$1,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isObject,
  isPlainObject: isPlainObject$2,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isFunction: isFunction$1,
  isStream,
  isURLSearchParams,
  isStandardBrowserEnv,
  forEach,
  merge: merge$1,
  extend,
  trim,
  stripBOM
}, utils$b = utils$c;
function encode$5(Q) {
  return encodeURIComponent(Q).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
var buildURL$1 = function Q(ee, ne, ie) {
  if (!ne)
    return ee;
  var ae;
  if (ie)
    ae = ie(ne);
  else if (utils$b.isURLSearchParams(ne))
    ae = ne.toString();
  else {
    var ce = [];
    utils$b.forEach(ne, function(ye, fe) {
      ye === null || typeof ye > "u" || (utils$b.isArray(ye) ? fe = fe + "[]" : ye = [ye], utils$b.forEach(ye, function(Ee) {
        utils$b.isDate(Ee) ? Ee = Ee.toISOString() : utils$b.isObject(Ee) && (Ee = JSON.stringify(Ee)), ce.push(encode$5(fe) + "=" + encode$5(Ee));
      }));
    }), ae = ce.join("&");
  }
  if (ae) {
    var le = ee.indexOf("#");
    le !== -1 && (ee = ee.slice(0, le)), ee += (ee.indexOf("?") === -1 ? "?" : "&") + ae;
  }
  return ee;
}, utils$a = utils$c;
function InterceptorManager$1() {
  this.handlers = [];
}
InterceptorManager$1.prototype.use = function Q(ee, ne, ie) {
  return this.handlers.push({
    fulfilled: ee,
    rejected: ne,
    synchronous: ie ? ie.synchronous : !1,
    runWhen: ie ? ie.runWhen : null
  }), this.handlers.length - 1;
};
InterceptorManager$1.prototype.eject = function Q(ee) {
  this.handlers[ee] && (this.handlers[ee] = null);
};
InterceptorManager$1.prototype.forEach = function Q(ee) {
  utils$a.forEach(this.handlers, function(ie) {
    ie !== null && ee(ie);
  });
};
var InterceptorManager_1 = InterceptorManager$1, utils$9 = utils$c, normalizeHeaderName = function Q(ee, ne) {
  utils$9.forEach(ee, function(ae, ce) {
    ce !== ne && ce.toUpperCase() === ne.toUpperCase() && (ee[ne] = ae, delete ee[ce]);
  });
}, enhanceError = function Q(ee, ne, ie, ae, ce) {
  return ee.config = ne, ie && (ee.code = ie), ee.request = ae, ee.response = ce, ee.isAxiosError = !0, ee.toJSON = function() {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }, ee;
}, createError, hasRequiredCreateError;
function requireCreateError() {
  if (hasRequiredCreateError)
    return createError;
  hasRequiredCreateError = 1;
  var Q = enhanceError;
  return createError = function(ne, ie, ae, ce, le) {
    var de = new Error(ne);
    return Q(de, ie, ae, ce, le);
  }, createError;
}
var settle, hasRequiredSettle;
function requireSettle() {
  if (hasRequiredSettle)
    return settle;
  hasRequiredSettle = 1;
  var Q = requireCreateError();
  return settle = function(ne, ie, ae) {
    var ce = ae.config.validateStatus;
    !ae.status || !ce || ce(ae.status) ? ne(ae) : ie(Q(
      "Request failed with status code " + ae.status,
      ae.config,
      null,
      ae.request,
      ae
    ));
  }, settle;
}
var cookies, hasRequiredCookies;
function requireCookies() {
  if (hasRequiredCookies)
    return cookies;
  hasRequiredCookies = 1;
  var Q = utils$c;
  return cookies = Q.isStandardBrowserEnv() ? function() {
    return {
      write: function(ie, ae, ce, le, de, ye) {
        var fe = [];
        fe.push(ie + "=" + encodeURIComponent(ae)), Q.isNumber(ce) && fe.push("expires=" + new Date(ce).toGMTString()), Q.isString(le) && fe.push("path=" + le), Q.isString(de) && fe.push("domain=" + de), ye === !0 && fe.push("secure"), document.cookie = fe.join("; ");
      },
      read: function(ie) {
        var ae = document.cookie.match(new RegExp("(^|;\\s*)(" + ie + ")=([^;]*)"));
        return ae ? decodeURIComponent(ae[3]) : null;
      },
      remove: function(ie) {
        this.write(ie, "", Date.now() - 864e5);
      }
    };
  }() : function() {
    return {
      write: function() {
      },
      read: function() {
        return null;
      },
      remove: function() {
      }
    };
  }(), cookies;
}
var isAbsoluteURL, hasRequiredIsAbsoluteURL;
function requireIsAbsoluteURL() {
  return hasRequiredIsAbsoluteURL || (hasRequiredIsAbsoluteURL = 1, isAbsoluteURL = function(ee) {
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(ee);
  }), isAbsoluteURL;
}
var combineURLs, hasRequiredCombineURLs;
function requireCombineURLs() {
  return hasRequiredCombineURLs || (hasRequiredCombineURLs = 1, combineURLs = function(ee, ne) {
    return ne ? ee.replace(/\/+$/, "") + "/" + ne.replace(/^\/+/, "") : ee;
  }), combineURLs;
}
var buildFullPath, hasRequiredBuildFullPath;
function requireBuildFullPath() {
  if (hasRequiredBuildFullPath)
    return buildFullPath;
  hasRequiredBuildFullPath = 1;
  var Q = requireIsAbsoluteURL(), ee = requireCombineURLs();
  return buildFullPath = function(ie, ae) {
    return ie && !Q(ae) ? ee(ie, ae) : ae;
  }, buildFullPath;
}
var parseHeaders, hasRequiredParseHeaders;
function requireParseHeaders() {
  if (hasRequiredParseHeaders)
    return parseHeaders;
  hasRequiredParseHeaders = 1;
  var Q = utils$c, ee = [
    "age",
    "authorization",
    "content-length",
    "content-type",
    "etag",
    "expires",
    "from",
    "host",
    "if-modified-since",
    "if-unmodified-since",
    "last-modified",
    "location",
    "max-forwards",
    "proxy-authorization",
    "referer",
    "retry-after",
    "user-agent"
  ];
  return parseHeaders = function(ie) {
    var ae = {}, ce, le, de;
    return ie && Q.forEach(ie.split(`
`), function(fe) {
      if (de = fe.indexOf(":"), ce = Q.trim(fe.substr(0, de)).toLowerCase(), le = Q.trim(fe.substr(de + 1)), ce) {
        if (ae[ce] && ee.indexOf(ce) >= 0)
          return;
        ce === "set-cookie" ? ae[ce] = (ae[ce] ? ae[ce] : []).concat([le]) : ae[ce] = ae[ce] ? ae[ce] + ", " + le : le;
      }
    }), ae;
  }, parseHeaders;
}
var isURLSameOrigin, hasRequiredIsURLSameOrigin;
function requireIsURLSameOrigin() {
  if (hasRequiredIsURLSameOrigin)
    return isURLSameOrigin;
  hasRequiredIsURLSameOrigin = 1;
  var Q = utils$c;
  return isURLSameOrigin = Q.isStandardBrowserEnv() ? function() {
    var ne = /(msie|trident)/i.test(navigator.userAgent), ie = document.createElement("a"), ae;
    function ce(le) {
      var de = le;
      return ne && (ie.setAttribute("href", de), de = ie.href), ie.setAttribute("href", de), {
        href: ie.href,
        protocol: ie.protocol ? ie.protocol.replace(/:$/, "") : "",
        host: ie.host,
        search: ie.search ? ie.search.replace(/^\?/, "") : "",
        hash: ie.hash ? ie.hash.replace(/^#/, "") : "",
        hostname: ie.hostname,
        port: ie.port,
        pathname: ie.pathname.charAt(0) === "/" ? ie.pathname : "/" + ie.pathname
      };
    }
    return ae = ce(window.location.href), function(de) {
      var ye = Q.isString(de) ? ce(de) : de;
      return ye.protocol === ae.protocol && ye.host === ae.host;
    };
  }() : function() {
    return function() {
      return !0;
    };
  }(), isURLSameOrigin;
}
var Cancel_1, hasRequiredCancel;
function requireCancel() {
  if (hasRequiredCancel)
    return Cancel_1;
  hasRequiredCancel = 1;
  function Q(ee) {
    this.message = ee;
  }
  return Q.prototype.toString = function() {
    return "Cancel" + (this.message ? ": " + this.message : "");
  }, Q.prototype.__CANCEL__ = !0, Cancel_1 = Q, Cancel_1;
}
var xhr, hasRequiredXhr;
function requireXhr() {
  if (hasRequiredXhr)
    return xhr;
  hasRequiredXhr = 1;
  var Q = utils$c, ee = requireSettle(), ne = requireCookies(), ie = buildURL$1, ae = requireBuildFullPath(), ce = requireParseHeaders(), le = requireIsURLSameOrigin(), de = requireCreateError(), ye = requireDefaults(), fe = requireCancel();
  return xhr = function(Ee) {
    return new Promise(function(ge, we) {
      var be = Ee.data, Oe = Ee.headers, He = Ee.responseType, Se;
      function Ge() {
        Ee.cancelToken && Ee.cancelToken.unsubscribe(Se), Ee.signal && Ee.signal.removeEventListener("abort", Se);
      }
      Q.isFormData(be) && delete Oe["Content-Type"];
      var Fe = new XMLHttpRequest();
      if (Ee.auth) {
        var Pe = Ee.auth.username || "", Je = Ee.auth.password ? unescape(encodeURIComponent(Ee.auth.password)) : "";
        Oe.Authorization = "Basic " + btoa(Pe + ":" + Je);
      }
      var tt = ae(Ee.baseURL, Ee.url);
      Fe.open(Ee.method.toUpperCase(), ie(tt, Ee.params, Ee.paramsSerializer), !0), Fe.timeout = Ee.timeout;
      function ft() {
        if (!!Fe) {
          var Xe = "getAllResponseHeaders" in Fe ? ce(Fe.getAllResponseHeaders()) : null, ht = !He || He === "text" || He === "json" ? Fe.responseText : Fe.response, Qt = {
            data: ht,
            status: Fe.status,
            statusText: Fe.statusText,
            headers: Xe,
            config: Ee,
            request: Fe
          };
          ee(function(pt) {
            ge(pt), Ge();
          }, function(pt) {
            we(pt), Ge();
          }, Qt), Fe = null;
        }
      }
      if ("onloadend" in Fe ? Fe.onloadend = ft : Fe.onreadystatechange = function() {
        !Fe || Fe.readyState !== 4 || Fe.status === 0 && !(Fe.responseURL && Fe.responseURL.indexOf("file:") === 0) || setTimeout(ft);
      }, Fe.onabort = function() {
        !Fe || (we(de("Request aborted", Ee, "ECONNABORTED", Fe)), Fe = null);
      }, Fe.onerror = function() {
        we(de("Network Error", Ee, null, Fe)), Fe = null;
      }, Fe.ontimeout = function() {
        var ht = Ee.timeout ? "timeout of " + Ee.timeout + "ms exceeded" : "timeout exceeded", Qt = Ee.transitional || ye.transitional;
        Ee.timeoutErrorMessage && (ht = Ee.timeoutErrorMessage), we(de(
          ht,
          Ee,
          Qt.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED",
          Fe
        )), Fe = null;
      }, Q.isStandardBrowserEnv()) {
        var Tt = (Ee.withCredentials || le(tt)) && Ee.xsrfCookieName ? ne.read(Ee.xsrfCookieName) : void 0;
        Tt && (Oe[Ee.xsrfHeaderName] = Tt);
      }
      "setRequestHeader" in Fe && Q.forEach(Oe, function(ht, Qt) {
        typeof be > "u" && Qt.toLowerCase() === "content-type" ? delete Oe[Qt] : Fe.setRequestHeader(Qt, ht);
      }), Q.isUndefined(Ee.withCredentials) || (Fe.withCredentials = !!Ee.withCredentials), He && He !== "json" && (Fe.responseType = Ee.responseType), typeof Ee.onDownloadProgress == "function" && Fe.addEventListener("progress", Ee.onDownloadProgress), typeof Ee.onUploadProgress == "function" && Fe.upload && Fe.upload.addEventListener("progress", Ee.onUploadProgress), (Ee.cancelToken || Ee.signal) && (Se = function(Xe) {
        !Fe || (we(!Xe || Xe && Xe.type ? new fe("canceled") : Xe), Fe.abort(), Fe = null);
      }, Ee.cancelToken && Ee.cancelToken.subscribe(Se), Ee.signal && (Ee.signal.aborted ? Se() : Ee.signal.addEventListener("abort", Se))), be || (be = null), Fe.send(be);
    });
  }, xhr;
}
var defaults_1, hasRequiredDefaults;
function requireDefaults() {
  if (hasRequiredDefaults)
    return defaults_1;
  hasRequiredDefaults = 1;
  var Q = utils$c, ee = normalizeHeaderName, ne = enhanceError, ie = {
    "Content-Type": "application/x-www-form-urlencoded"
  };
  function ae(ye, fe) {
    !Q.isUndefined(ye) && Q.isUndefined(ye["Content-Type"]) && (ye["Content-Type"] = fe);
  }
  function ce() {
    var ye;
    return (typeof XMLHttpRequest < "u" || typeof process < "u" && Object.prototype.toString.call(process) === "[object process]") && (ye = requireXhr()), ye;
  }
  function le(ye, fe, Be) {
    if (Q.isString(ye))
      try {
        return (fe || JSON.parse)(ye), Q.trim(ye);
      } catch (Ee) {
        if (Ee.name !== "SyntaxError")
          throw Ee;
      }
    return (Be || JSON.stringify)(ye);
  }
  var de = {
    transitional: {
      silentJSONParsing: !0,
      forcedJSONParsing: !0,
      clarifyTimeoutError: !1
    },
    adapter: ce(),
    transformRequest: [function(fe, Be) {
      return ee(Be, "Accept"), ee(Be, "Content-Type"), Q.isFormData(fe) || Q.isArrayBuffer(fe) || Q.isBuffer(fe) || Q.isStream(fe) || Q.isFile(fe) || Q.isBlob(fe) ? fe : Q.isArrayBufferView(fe) ? fe.buffer : Q.isURLSearchParams(fe) ? (ae(Be, "application/x-www-form-urlencoded;charset=utf-8"), fe.toString()) : Q.isObject(fe) || Be && Be["Content-Type"] === "application/json" ? (ae(Be, "application/json"), le(fe)) : fe;
    }],
    transformResponse: [function(fe) {
      var Be = this.transitional || de.transitional, Ee = Be && Be.silentJSONParsing, me = Be && Be.forcedJSONParsing, ge = !Ee && this.responseType === "json";
      if (ge || me && Q.isString(fe) && fe.length)
        try {
          return JSON.parse(fe);
        } catch (we) {
          if (ge)
            throw we.name === "SyntaxError" ? ne(we, this, "E_JSON_PARSE") : we;
        }
      return fe;
    }],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: function(fe) {
      return fe >= 200 && fe < 300;
    },
    headers: {
      common: {
        Accept: "application/json, text/plain, */*"
      }
    }
  };
  return Q.forEach(["delete", "get", "head"], function(fe) {
    de.headers[fe] = {};
  }), Q.forEach(["post", "put", "patch"], function(fe) {
    de.headers[fe] = Q.merge(ie);
  }), defaults_1 = de, defaults_1;
}
var utils$8 = utils$c, defaults$2 = requireDefaults(), transformData$1 = function Q(ee, ne, ie) {
  var ae = this || defaults$2;
  return utils$8.forEach(ie, function(le) {
    ee = le.call(ae, ee, ne);
  }), ee;
}, isCancel$1, hasRequiredIsCancel;
function requireIsCancel() {
  return hasRequiredIsCancel || (hasRequiredIsCancel = 1, isCancel$1 = function(ee) {
    return !!(ee && ee.__CANCEL__);
  }), isCancel$1;
}
var utils$7 = utils$c, transformData = transformData$1, isCancel = requireIsCancel(), defaults$1 = requireDefaults(), Cancel = requireCancel();
function throwIfCancellationRequested(Q) {
  if (Q.cancelToken && Q.cancelToken.throwIfRequested(), Q.signal && Q.signal.aborted)
    throw new Cancel("canceled");
}
var dispatchRequest$1 = function Q(ee) {
  throwIfCancellationRequested(ee), ee.headers = ee.headers || {}, ee.data = transformData.call(
    ee,
    ee.data,
    ee.headers,
    ee.transformRequest
  ), ee.headers = utils$7.merge(
    ee.headers.common || {},
    ee.headers[ee.method] || {},
    ee.headers
  ), utils$7.forEach(
    ["delete", "get", "head", "post", "put", "patch", "common"],
    function(ae) {
      delete ee.headers[ae];
    }
  );
  var ne = ee.adapter || defaults$1.adapter;
  return ne(ee).then(function(ae) {
    return throwIfCancellationRequested(ee), ae.data = transformData.call(
      ee,
      ae.data,
      ae.headers,
      ee.transformResponse
    ), ae;
  }, function(ae) {
    return isCancel(ae) || (throwIfCancellationRequested(ee), ae && ae.response && (ae.response.data = transformData.call(
      ee,
      ae.response.data,
      ae.response.headers,
      ee.transformResponse
    ))), Promise.reject(ae);
  });
}, utils$6 = utils$c, mergeConfig$2 = function Q(ee, ne) {
  ne = ne || {};
  var ie = {};
  function ae(Be, Ee) {
    return utils$6.isPlainObject(Be) && utils$6.isPlainObject(Ee) ? utils$6.merge(Be, Ee) : utils$6.isPlainObject(Ee) ? utils$6.merge({}, Ee) : utils$6.isArray(Ee) ? Ee.slice() : Ee;
  }
  function ce(Be) {
    if (utils$6.isUndefined(ne[Be])) {
      if (!utils$6.isUndefined(ee[Be]))
        return ae(void 0, ee[Be]);
    } else
      return ae(ee[Be], ne[Be]);
  }
  function le(Be) {
    if (!utils$6.isUndefined(ne[Be]))
      return ae(void 0, ne[Be]);
  }
  function de(Be) {
    if (utils$6.isUndefined(ne[Be])) {
      if (!utils$6.isUndefined(ee[Be]))
        return ae(void 0, ee[Be]);
    } else
      return ae(void 0, ne[Be]);
  }
  function ye(Be) {
    if (Be in ne)
      return ae(ee[Be], ne[Be]);
    if (Be in ee)
      return ae(void 0, ee[Be]);
  }
  var fe = {
    url: le,
    method: le,
    data: le,
    baseURL: de,
    transformRequest: de,
    transformResponse: de,
    paramsSerializer: de,
    timeout: de,
    timeoutMessage: de,
    withCredentials: de,
    adapter: de,
    responseType: de,
    xsrfCookieName: de,
    xsrfHeaderName: de,
    onUploadProgress: de,
    onDownloadProgress: de,
    decompress: de,
    maxContentLength: de,
    maxBodyLength: de,
    transport: de,
    httpAgent: de,
    httpsAgent: de,
    cancelToken: de,
    socketPath: de,
    responseEncoding: de,
    validateStatus: ye
  };
  return utils$6.forEach(Object.keys(ee).concat(Object.keys(ne)), function(Ee) {
    var me = fe[Ee] || ce, ge = me(Ee);
    utils$6.isUndefined(ge) && me !== ye || (ie[Ee] = ge);
  }), ie;
}, data, hasRequiredData;
function requireData() {
  return hasRequiredData || (hasRequiredData = 1, data = {
    version: "0.24.0"
  }), data;
}
var VERSION = requireData().version, validators$1 = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach(function(Q, ee) {
  validators$1[Q] = function(ie) {
    return typeof ie === Q || "a" + (ee < 1 ? "n " : " ") + Q;
  };
});
var deprecatedWarnings = {};
validators$1.transitional = function Q(ee, ne, ie) {
  function ae(ce, le) {
    return "[Axios v" + VERSION + "] Transitional option '" + ce + "'" + le + (ie ? ". " + ie : "");
  }
  return function(ce, le, de) {
    if (ee === !1)
      throw new Error(ae(le, " has been removed" + (ne ? " in " + ne : "")));
    return ne && !deprecatedWarnings[le] && (deprecatedWarnings[le] = !0, console.warn(
      ae(
        le,
        " has been deprecated since v" + ne + " and will be removed in the near future"
      )
    )), ee ? ee(ce, le, de) : !0;
  };
};
function assertOptions(Q, ee, ne) {
  if (typeof Q != "object")
    throw new TypeError("options must be an object");
  for (var ie = Object.keys(Q), ae = ie.length; ae-- > 0; ) {
    var ce = ie[ae], le = ee[ce];
    if (le) {
      var de = Q[ce], ye = de === void 0 || le(de, ce, Q);
      if (ye !== !0)
        throw new TypeError("option " + ce + " must be " + ye);
      continue;
    }
    if (ne !== !0)
      throw Error("Unknown option " + ce);
  }
}
var validator$1 = {
  assertOptions,
  validators: validators$1
}, utils$5 = utils$c, buildURL = buildURL$1, InterceptorManager = InterceptorManager_1, dispatchRequest = dispatchRequest$1, mergeConfig$1 = mergeConfig$2, validator = validator$1, validators = validator.validators;
function Axios$1(Q) {
  this.defaults = Q, this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}
Axios$1.prototype.request = function Q(ee) {
  typeof ee == "string" ? (ee = arguments[1] || {}, ee.url = arguments[0]) : ee = ee || {}, ee = mergeConfig$1(this.defaults, ee), ee.method ? ee.method = ee.method.toLowerCase() : this.defaults.method ? ee.method = this.defaults.method.toLowerCase() : ee.method = "get";
  var ne = ee.transitional;
  ne !== void 0 && validator.assertOptions(ne, {
    silentJSONParsing: validators.transitional(validators.boolean),
    forcedJSONParsing: validators.transitional(validators.boolean),
    clarifyTimeoutError: validators.transitional(validators.boolean)
  }, !1);
  var ie = [], ae = !0;
  this.interceptors.request.forEach(function(me) {
    typeof me.runWhen == "function" && me.runWhen(ee) === !1 || (ae = ae && me.synchronous, ie.unshift(me.fulfilled, me.rejected));
  });
  var ce = [];
  this.interceptors.response.forEach(function(me) {
    ce.push(me.fulfilled, me.rejected);
  });
  var le;
  if (!ae) {
    var de = [dispatchRequest, void 0];
    for (Array.prototype.unshift.apply(de, ie), de = de.concat(ce), le = Promise.resolve(ee); de.length; )
      le = le.then(de.shift(), de.shift());
    return le;
  }
  for (var ye = ee; ie.length; ) {
    var fe = ie.shift(), Be = ie.shift();
    try {
      ye = fe(ye);
    } catch (Ee) {
      Be(Ee);
      break;
    }
  }
  try {
    le = dispatchRequest(ye);
  } catch (Ee) {
    return Promise.reject(Ee);
  }
  for (; ce.length; )
    le = le.then(ce.shift(), ce.shift());
  return le;
};
Axios$1.prototype.getUri = function Q(ee) {
  return ee = mergeConfig$1(this.defaults, ee), buildURL(ee.url, ee.params, ee.paramsSerializer).replace(/^\?/, "");
};
utils$5.forEach(["delete", "get", "head", "options"], function Q(ee) {
  Axios$1.prototype[ee] = function(ne, ie) {
    return this.request(mergeConfig$1(ie || {}, {
      method: ee,
      url: ne,
      data: (ie || {}).data
    }));
  };
});
utils$5.forEach(["post", "put", "patch"], function Q(ee) {
  Axios$1.prototype[ee] = function(ne, ie, ae) {
    return this.request(mergeConfig$1(ae || {}, {
      method: ee,
      url: ne,
      data: ie
    }));
  };
});
var Axios_1 = Axios$1, CancelToken_1, hasRequiredCancelToken;
function requireCancelToken() {
  if (hasRequiredCancelToken)
    return CancelToken_1;
  hasRequiredCancelToken = 1;
  var Q = requireCancel();
  function ee(ne) {
    if (typeof ne != "function")
      throw new TypeError("executor must be a function.");
    var ie;
    this.promise = new Promise(function(le) {
      ie = le;
    });
    var ae = this;
    this.promise.then(function(ce) {
      if (!!ae._listeners) {
        var le, de = ae._listeners.length;
        for (le = 0; le < de; le++)
          ae._listeners[le](ce);
        ae._listeners = null;
      }
    }), this.promise.then = function(ce) {
      var le, de = new Promise(function(ye) {
        ae.subscribe(ye), le = ye;
      }).then(ce);
      return de.cancel = function() {
        ae.unsubscribe(le);
      }, de;
    }, ne(function(le) {
      ae.reason || (ae.reason = new Q(le), ie(ae.reason));
    });
  }
  return ee.prototype.throwIfRequested = function() {
    if (this.reason)
      throw this.reason;
  }, ee.prototype.subscribe = function(ie) {
    if (this.reason) {
      ie(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(ie) : this._listeners = [ie];
  }, ee.prototype.unsubscribe = function(ie) {
    if (!!this._listeners) {
      var ae = this._listeners.indexOf(ie);
      ae !== -1 && this._listeners.splice(ae, 1);
    }
  }, ee.source = function() {
    var ie, ae = new ee(function(le) {
      ie = le;
    });
    return {
      token: ae,
      cancel: ie
    };
  }, CancelToken_1 = ee, CancelToken_1;
}
var spread, hasRequiredSpread;
function requireSpread() {
  return hasRequiredSpread || (hasRequiredSpread = 1, spread = function(ee) {
    return function(ie) {
      return ee.apply(null, ie);
    };
  }), spread;
}
var isAxiosError, hasRequiredIsAxiosError;
function requireIsAxiosError() {
  return hasRequiredIsAxiosError || (hasRequiredIsAxiosError = 1, isAxiosError = function(ee) {
    return typeof ee == "object" && ee.isAxiosError === !0;
  }), isAxiosError;
}
var utils$4 = utils$c, bind = bind$2, Axios = Axios_1, mergeConfig = mergeConfig$2, defaults = requireDefaults();
function createInstance(Q) {
  var ee = new Axios(Q), ne = bind(Axios.prototype.request, ee);
  return utils$4.extend(ne, Axios.prototype, ee), utils$4.extend(ne, ee), ne.create = function(ae) {
    return createInstance(mergeConfig(Q, ae));
  }, ne;
}
var axios = createInstance(defaults);
axios.Axios = Axios;
axios.Cancel = requireCancel();
axios.CancelToken = requireCancelToken();
axios.isCancel = requireIsCancel();
axios.VERSION = requireData().version;
axios.all = function Q(ee) {
  return Promise.all(ee);
};
axios.spread = requireSpread();
axios.isAxiosError = requireIsAxiosError();
axios$1.exports = axios;
axios$1.exports.default = axios;
(function(Q) {
  Q.exports = axios$1.exports;
})(axios$2);
var buffer$1 = {}, base64Js = {};
base64Js.byteLength = byteLength;
base64Js.toByteArray = toByteArray;
base64Js.fromByteArray = fromByteArray;
var lookup = [], revLookup = [], Arr = typeof Uint8Array < "u" ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var i = 0, len = code.length; i < len; ++i)
  lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i;
revLookup["-".charCodeAt(0)] = 62;
revLookup["_".charCodeAt(0)] = 63;
function getLens(Q) {
  var ee = Q.length;
  if (ee % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var ne = Q.indexOf("=");
  ne === -1 && (ne = ee);
  var ie = ne === ee ? 0 : 4 - ne % 4;
  return [ne, ie];
}
function byteLength(Q) {
  var ee = getLens(Q), ne = ee[0], ie = ee[1];
  return (ne + ie) * 3 / 4 - ie;
}
function _byteLength(Q, ee, ne) {
  return (ee + ne) * 3 / 4 - ne;
}
function toByteArray(Q) {
  var ee, ne = getLens(Q), ie = ne[0], ae = ne[1], ce = new Arr(_byteLength(Q, ie, ae)), le = 0, de = ae > 0 ? ie - 4 : ie, ye;
  for (ye = 0; ye < de; ye += 4)
    ee = revLookup[Q.charCodeAt(ye)] << 18 | revLookup[Q.charCodeAt(ye + 1)] << 12 | revLookup[Q.charCodeAt(ye + 2)] << 6 | revLookup[Q.charCodeAt(ye + 3)], ce[le++] = ee >> 16 & 255, ce[le++] = ee >> 8 & 255, ce[le++] = ee & 255;
  return ae === 2 && (ee = revLookup[Q.charCodeAt(ye)] << 2 | revLookup[Q.charCodeAt(ye + 1)] >> 4, ce[le++] = ee & 255), ae === 1 && (ee = revLookup[Q.charCodeAt(ye)] << 10 | revLookup[Q.charCodeAt(ye + 1)] << 4 | revLookup[Q.charCodeAt(ye + 2)] >> 2, ce[le++] = ee >> 8 & 255, ce[le++] = ee & 255), ce;
}
function tripletToBase64(Q) {
  return lookup[Q >> 18 & 63] + lookup[Q >> 12 & 63] + lookup[Q >> 6 & 63] + lookup[Q & 63];
}
function encodeChunk(Q, ee, ne) {
  for (var ie, ae = [], ce = ee; ce < ne; ce += 3)
    ie = (Q[ce] << 16 & 16711680) + (Q[ce + 1] << 8 & 65280) + (Q[ce + 2] & 255), ae.push(tripletToBase64(ie));
  return ae.join("");
}
function fromByteArray(Q) {
  for (var ee, ne = Q.length, ie = ne % 3, ae = [], ce = 16383, le = 0, de = ne - ie; le < de; le += ce)
    ae.push(encodeChunk(Q, le, le + ce > de ? de : le + ce));
  return ie === 1 ? (ee = Q[ne - 1], ae.push(
    lookup[ee >> 2] + lookup[ee << 4 & 63] + "=="
  )) : ie === 2 && (ee = (Q[ne - 2] << 8) + Q[ne - 1], ae.push(
    lookup[ee >> 10] + lookup[ee >> 4 & 63] + lookup[ee << 2 & 63] + "="
  )), ae.join("");
}
var ieee754$1 = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
ieee754$1.read = function(Q, ee, ne, ie, ae) {
  var ce, le, de = ae * 8 - ie - 1, ye = (1 << de) - 1, fe = ye >> 1, Be = -7, Ee = ne ? ae - 1 : 0, me = ne ? -1 : 1, ge = Q[ee + Ee];
  for (Ee += me, ce = ge & (1 << -Be) - 1, ge >>= -Be, Be += de; Be > 0; ce = ce * 256 + Q[ee + Ee], Ee += me, Be -= 8)
    ;
  for (le = ce & (1 << -Be) - 1, ce >>= -Be, Be += ie; Be > 0; le = le * 256 + Q[ee + Ee], Ee += me, Be -= 8)
    ;
  if (ce === 0)
    ce = 1 - fe;
  else {
    if (ce === ye)
      return le ? NaN : (ge ? -1 : 1) * (1 / 0);
    le = le + Math.pow(2, ie), ce = ce - fe;
  }
  return (ge ? -1 : 1) * le * Math.pow(2, ce - ie);
};
ieee754$1.write = function(Q, ee, ne, ie, ae, ce) {
  var le, de, ye, fe = ce * 8 - ae - 1, Be = (1 << fe) - 1, Ee = Be >> 1, me = ae === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, ge = ie ? 0 : ce - 1, we = ie ? 1 : -1, be = ee < 0 || ee === 0 && 1 / ee < 0 ? 1 : 0;
  for (ee = Math.abs(ee), isNaN(ee) || ee === 1 / 0 ? (de = isNaN(ee) ? 1 : 0, le = Be) : (le = Math.floor(Math.log(ee) / Math.LN2), ee * (ye = Math.pow(2, -le)) < 1 && (le--, ye *= 2), le + Ee >= 1 ? ee += me / ye : ee += me * Math.pow(2, 1 - Ee), ee * ye >= 2 && (le++, ye /= 2), le + Ee >= Be ? (de = 0, le = Be) : le + Ee >= 1 ? (de = (ee * ye - 1) * Math.pow(2, ae), le = le + Ee) : (de = ee * Math.pow(2, Ee - 1) * Math.pow(2, ae), le = 0)); ae >= 8; Q[ne + ge] = de & 255, ge += we, de /= 256, ae -= 8)
    ;
  for (le = le << ae | de, fe += ae; fe > 0; Q[ne + ge] = le & 255, ge += we, le /= 256, fe -= 8)
    ;
  Q[ne + ge - we] |= be * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(Q) {
  const ee = base64Js, ne = ieee754$1, ie = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  Q.Buffer = de, Q.SlowBuffer = Se, Q.INSPECT_MAX_BYTES = 50;
  const ae = 2147483647;
  Q.kMaxLength = ae, de.TYPED_ARRAY_SUPPORT = ce(), !de.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function ce() {
    try {
      const qe = new Uint8Array(1), Te = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(Te, Uint8Array.prototype), Object.setPrototypeOf(qe, Te), qe.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(de.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (!!de.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(de.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (!!de.isBuffer(this))
        return this.byteOffset;
    }
  });
  function le(qe) {
    if (qe > ae)
      throw new RangeError('The value "' + qe + '" is invalid for option "size"');
    const Te = new Uint8Array(qe);
    return Object.setPrototypeOf(Te, de.prototype), Te;
  }
  function de(qe, Te, Re) {
    if (typeof qe == "number") {
      if (typeof Te == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return Ee(qe);
    }
    return ye(qe, Te, Re);
  }
  de.poolSize = 8192;
  function ye(qe, Te, Re) {
    if (typeof qe == "string")
      return me(qe, Te);
    if (ArrayBuffer.isView(qe))
      return we(qe);
    if (qe == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof qe
      );
    if (ot(qe, ArrayBuffer) || qe && ot(qe.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (ot(qe, SharedArrayBuffer) || qe && ot(qe.buffer, SharedArrayBuffer)))
      return be(qe, Te, Re);
    if (typeof qe == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    const it = qe.valueOf && qe.valueOf();
    if (it != null && it !== qe)
      return de.from(it, Te, Re);
    const Ct = Oe(qe);
    if (Ct)
      return Ct;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof qe[Symbol.toPrimitive] == "function")
      return de.from(qe[Symbol.toPrimitive]("string"), Te, Re);
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof qe
    );
  }
  de.from = function(qe, Te, Re) {
    return ye(qe, Te, Re);
  }, Object.setPrototypeOf(de.prototype, Uint8Array.prototype), Object.setPrototypeOf(de, Uint8Array);
  function fe(qe) {
    if (typeof qe != "number")
      throw new TypeError('"size" argument must be of type number');
    if (qe < 0)
      throw new RangeError('The value "' + qe + '" is invalid for option "size"');
  }
  function Be(qe, Te, Re) {
    return fe(qe), qe <= 0 ? le(qe) : Te !== void 0 ? typeof Re == "string" ? le(qe).fill(Te, Re) : le(qe).fill(Te) : le(qe);
  }
  de.alloc = function(qe, Te, Re) {
    return Be(qe, Te, Re);
  };
  function Ee(qe) {
    return fe(qe), le(qe < 0 ? 0 : He(qe) | 0);
  }
  de.allocUnsafe = function(qe) {
    return Ee(qe);
  }, de.allocUnsafeSlow = function(qe) {
    return Ee(qe);
  };
  function me(qe, Te) {
    if ((typeof Te != "string" || Te === "") && (Te = "utf8"), !de.isEncoding(Te))
      throw new TypeError("Unknown encoding: " + Te);
    const Re = Ge(qe, Te) | 0;
    let it = le(Re);
    const Ct = it.write(qe, Te);
    return Ct !== Re && (it = it.slice(0, Ct)), it;
  }
  function ge(qe) {
    const Te = qe.length < 0 ? 0 : He(qe.length) | 0, Re = le(Te);
    for (let it = 0; it < Te; it += 1)
      Re[it] = qe[it] & 255;
    return Re;
  }
  function we(qe) {
    if (ot(qe, Uint8Array)) {
      const Te = new Uint8Array(qe);
      return be(Te.buffer, Te.byteOffset, Te.byteLength);
    }
    return ge(qe);
  }
  function be(qe, Te, Re) {
    if (Te < 0 || qe.byteLength < Te)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (qe.byteLength < Te + (Re || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let it;
    return Te === void 0 && Re === void 0 ? it = new Uint8Array(qe) : Re === void 0 ? it = new Uint8Array(qe, Te) : it = new Uint8Array(qe, Te, Re), Object.setPrototypeOf(it, de.prototype), it;
  }
  function Oe(qe) {
    if (de.isBuffer(qe)) {
      const Te = He(qe.length) | 0, Re = le(Te);
      return Re.length === 0 || qe.copy(Re, 0, 0, Te), Re;
    }
    if (qe.length !== void 0)
      return typeof qe.length != "number" || St(qe.length) ? le(0) : ge(qe);
    if (qe.type === "Buffer" && Array.isArray(qe.data))
      return ge(qe.data);
  }
  function He(qe) {
    if (qe >= ae)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + ae.toString(16) + " bytes");
    return qe | 0;
  }
  function Se(qe) {
    return +qe != qe && (qe = 0), de.alloc(+qe);
  }
  de.isBuffer = function(Te) {
    return Te != null && Te._isBuffer === !0 && Te !== de.prototype;
  }, de.compare = function(Te, Re) {
    if (ot(Te, Uint8Array) && (Te = de.from(Te, Te.offset, Te.byteLength)), ot(Re, Uint8Array) && (Re = de.from(Re, Re.offset, Re.byteLength)), !de.isBuffer(Te) || !de.isBuffer(Re))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (Te === Re)
      return 0;
    let it = Te.length, Ct = Re.length;
    for (let Nt = 0, Dt = Math.min(it, Ct); Nt < Dt; ++Nt)
      if (Te[Nt] !== Re[Nt]) {
        it = Te[Nt], Ct = Re[Nt];
        break;
      }
    return it < Ct ? -1 : Ct < it ? 1 : 0;
  }, de.isEncoding = function(Te) {
    switch (String(Te).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, de.concat = function(Te, Re) {
    if (!Array.isArray(Te))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (Te.length === 0)
      return de.alloc(0);
    let it;
    if (Re === void 0)
      for (Re = 0, it = 0; it < Te.length; ++it)
        Re += Te[it].length;
    const Ct = de.allocUnsafe(Re);
    let Nt = 0;
    for (it = 0; it < Te.length; ++it) {
      let Dt = Te[it];
      if (ot(Dt, Uint8Array))
        Nt + Dt.length > Ct.length ? (de.isBuffer(Dt) || (Dt = de.from(Dt)), Dt.copy(Ct, Nt)) : Uint8Array.prototype.set.call(
          Ct,
          Dt,
          Nt
        );
      else if (de.isBuffer(Dt))
        Dt.copy(Ct, Nt);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Nt += Dt.length;
    }
    return Ct;
  };
  function Ge(qe, Te) {
    if (de.isBuffer(qe))
      return qe.length;
    if (ArrayBuffer.isView(qe) || ot(qe, ArrayBuffer))
      return qe.byteLength;
    if (typeof qe != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof qe
      );
    const Re = qe.length, it = arguments.length > 2 && arguments[2] === !0;
    if (!it && Re === 0)
      return 0;
    let Ct = !1;
    for (; ; )
      switch (Te) {
        case "ascii":
        case "latin1":
        case "binary":
          return Re;
        case "utf8":
        case "utf-8":
          return Ie(qe).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Re * 2;
        case "hex":
          return Re >>> 1;
        case "base64":
          return Ve(qe).length;
        default:
          if (Ct)
            return it ? -1 : Ie(qe).length;
          Te = ("" + Te).toLowerCase(), Ct = !0;
      }
  }
  de.byteLength = Ge;
  function Fe(qe, Te, Re) {
    let it = !1;
    if ((Te === void 0 || Te < 0) && (Te = 0), Te > this.length || ((Re === void 0 || Re > this.length) && (Re = this.length), Re <= 0) || (Re >>>= 0, Te >>>= 0, Re <= Te))
      return "";
    for (qe || (qe = "utf8"); ; )
      switch (qe) {
        case "hex":
          return Lt(this, Te, Re);
        case "utf8":
        case "utf-8":
          return pt(this, Te, Re);
        case "ascii":
          return Jt(this, Te, Re);
        case "latin1":
        case "binary":
          return Ht(this, Te, Re);
        case "base64":
          return Gt(this, Te, Re);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Pt(this, Te, Re);
        default:
          if (it)
            throw new TypeError("Unknown encoding: " + qe);
          qe = (qe + "").toLowerCase(), it = !0;
      }
  }
  de.prototype._isBuffer = !0;
  function Pe(qe, Te, Re) {
    const it = qe[Te];
    qe[Te] = qe[Re], qe[Re] = it;
  }
  de.prototype.swap16 = function() {
    const Te = this.length;
    if (Te % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let Re = 0; Re < Te; Re += 2)
      Pe(this, Re, Re + 1);
    return this;
  }, de.prototype.swap32 = function() {
    const Te = this.length;
    if (Te % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let Re = 0; Re < Te; Re += 4)
      Pe(this, Re, Re + 3), Pe(this, Re + 1, Re + 2);
    return this;
  }, de.prototype.swap64 = function() {
    const Te = this.length;
    if (Te % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let Re = 0; Re < Te; Re += 8)
      Pe(this, Re, Re + 7), Pe(this, Re + 1, Re + 6), Pe(this, Re + 2, Re + 5), Pe(this, Re + 3, Re + 4);
    return this;
  }, de.prototype.toString = function() {
    const Te = this.length;
    return Te === 0 ? "" : arguments.length === 0 ? pt(this, 0, Te) : Fe.apply(this, arguments);
  }, de.prototype.toLocaleString = de.prototype.toString, de.prototype.equals = function(Te) {
    if (!de.isBuffer(Te))
      throw new TypeError("Argument must be a Buffer");
    return this === Te ? !0 : de.compare(this, Te) === 0;
  }, de.prototype.inspect = function() {
    let Te = "";
    const Re = Q.INSPECT_MAX_BYTES;
    return Te = this.toString("hex", 0, Re).replace(/(.{2})/g, "$1 ").trim(), this.length > Re && (Te += " ... "), "<Buffer " + Te + ">";
  }, ie && (de.prototype[ie] = de.prototype.inspect), de.prototype.compare = function(Te, Re, it, Ct, Nt) {
    if (ot(Te, Uint8Array) && (Te = de.from(Te, Te.offset, Te.byteLength)), !de.isBuffer(Te))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Te
      );
    if (Re === void 0 && (Re = 0), it === void 0 && (it = Te ? Te.length : 0), Ct === void 0 && (Ct = 0), Nt === void 0 && (Nt = this.length), Re < 0 || it > Te.length || Ct < 0 || Nt > this.length)
      throw new RangeError("out of range index");
    if (Ct >= Nt && Re >= it)
      return 0;
    if (Ct >= Nt)
      return -1;
    if (Re >= it)
      return 1;
    if (Re >>>= 0, it >>>= 0, Ct >>>= 0, Nt >>>= 0, this === Te)
      return 0;
    let Dt = Nt - Ct, Er = it - Re;
    const gr = Math.min(Dt, Er), Cr = this.slice(Ct, Nt), mr = Te.slice(Re, it);
    for (let wr = 0; wr < gr; ++wr)
      if (Cr[wr] !== mr[wr]) {
        Dt = Cr[wr], Er = mr[wr];
        break;
      }
    return Dt < Er ? -1 : Er < Dt ? 1 : 0;
  };
  function Je(qe, Te, Re, it, Ct) {
    if (qe.length === 0)
      return -1;
    if (typeof Re == "string" ? (it = Re, Re = 0) : Re > 2147483647 ? Re = 2147483647 : Re < -2147483648 && (Re = -2147483648), Re = +Re, St(Re) && (Re = Ct ? 0 : qe.length - 1), Re < 0 && (Re = qe.length + Re), Re >= qe.length) {
      if (Ct)
        return -1;
      Re = qe.length - 1;
    } else if (Re < 0)
      if (Ct)
        Re = 0;
      else
        return -1;
    if (typeof Te == "string" && (Te = de.from(Te, it)), de.isBuffer(Te))
      return Te.length === 0 ? -1 : tt(qe, Te, Re, it, Ct);
    if (typeof Te == "number")
      return Te = Te & 255, typeof Uint8Array.prototype.indexOf == "function" ? Ct ? Uint8Array.prototype.indexOf.call(qe, Te, Re) : Uint8Array.prototype.lastIndexOf.call(qe, Te, Re) : tt(qe, [Te], Re, it, Ct);
    throw new TypeError("val must be string, number or Buffer");
  }
  function tt(qe, Te, Re, it, Ct) {
    let Nt = 1, Dt = qe.length, Er = Te.length;
    if (it !== void 0 && (it = String(it).toLowerCase(), it === "ucs2" || it === "ucs-2" || it === "utf16le" || it === "utf-16le")) {
      if (qe.length < 2 || Te.length < 2)
        return -1;
      Nt = 2, Dt /= 2, Er /= 2, Re /= 2;
    }
    function gr(mr, wr) {
      return Nt === 1 ? mr[wr] : mr.readUInt16BE(wr * Nt);
    }
    let Cr;
    if (Ct) {
      let mr = -1;
      for (Cr = Re; Cr < Dt; Cr++)
        if (gr(qe, Cr) === gr(Te, mr === -1 ? 0 : Cr - mr)) {
          if (mr === -1 && (mr = Cr), Cr - mr + 1 === Er)
            return mr * Nt;
        } else
          mr !== -1 && (Cr -= Cr - mr), mr = -1;
    } else
      for (Re + Er > Dt && (Re = Dt - Er), Cr = Re; Cr >= 0; Cr--) {
        let mr = !0;
        for (let wr = 0; wr < Er; wr++)
          if (gr(qe, Cr + wr) !== gr(Te, wr)) {
            mr = !1;
            break;
          }
        if (mr)
          return Cr;
      }
    return -1;
  }
  de.prototype.includes = function(Te, Re, it) {
    return this.indexOf(Te, Re, it) !== -1;
  }, de.prototype.indexOf = function(Te, Re, it) {
    return Je(this, Te, Re, it, !0);
  }, de.prototype.lastIndexOf = function(Te, Re, it) {
    return Je(this, Te, Re, it, !1);
  };
  function ft(qe, Te, Re, it) {
    Re = Number(Re) || 0;
    const Ct = qe.length - Re;
    it ? (it = Number(it), it > Ct && (it = Ct)) : it = Ct;
    const Nt = Te.length;
    it > Nt / 2 && (it = Nt / 2);
    let Dt;
    for (Dt = 0; Dt < it; ++Dt) {
      const Er = parseInt(Te.substr(Dt * 2, 2), 16);
      if (St(Er))
        return Dt;
      qe[Re + Dt] = Er;
    }
    return Dt;
  }
  function Tt(qe, Te, Re, it) {
    return Ke(Ie(Te, qe.length - Re), qe, Re, it);
  }
  function Xe(qe, Te, Re, it) {
    return Ke(Ce(Te), qe, Re, it);
  }
  function ht(qe, Te, Re, it) {
    return Ke(Ve(Te), qe, Re, it);
  }
  function Qt(qe, Te, Re, it) {
    return Ke(ke(Te, qe.length - Re), qe, Re, it);
  }
  de.prototype.write = function(Te, Re, it, Ct) {
    if (Re === void 0)
      Ct = "utf8", it = this.length, Re = 0;
    else if (it === void 0 && typeof Re == "string")
      Ct = Re, it = this.length, Re = 0;
    else if (isFinite(Re))
      Re = Re >>> 0, isFinite(it) ? (it = it >>> 0, Ct === void 0 && (Ct = "utf8")) : (Ct = it, it = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    const Nt = this.length - Re;
    if ((it === void 0 || it > Nt) && (it = Nt), Te.length > 0 && (it < 0 || Re < 0) || Re > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    Ct || (Ct = "utf8");
    let Dt = !1;
    for (; ; )
      switch (Ct) {
        case "hex":
          return ft(this, Te, Re, it);
        case "utf8":
        case "utf-8":
          return Tt(this, Te, Re, it);
        case "ascii":
        case "latin1":
        case "binary":
          return Xe(this, Te, Re, it);
        case "base64":
          return ht(this, Te, Re, it);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Qt(this, Te, Re, it);
        default:
          if (Dt)
            throw new TypeError("Unknown encoding: " + Ct);
          Ct = ("" + Ct).toLowerCase(), Dt = !0;
      }
  }, de.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function Gt(qe, Te, Re) {
    return Te === 0 && Re === qe.length ? ee.fromByteArray(qe) : ee.fromByteArray(qe.slice(Te, Re));
  }
  function pt(qe, Te, Re) {
    Re = Math.min(qe.length, Re);
    const it = [];
    let Ct = Te;
    for (; Ct < Re; ) {
      const Nt = qe[Ct];
      let Dt = null, Er = Nt > 239 ? 4 : Nt > 223 ? 3 : Nt > 191 ? 2 : 1;
      if (Ct + Er <= Re) {
        let gr, Cr, mr, wr;
        switch (Er) {
          case 1:
            Nt < 128 && (Dt = Nt);
            break;
          case 2:
            gr = qe[Ct + 1], (gr & 192) === 128 && (wr = (Nt & 31) << 6 | gr & 63, wr > 127 && (Dt = wr));
            break;
          case 3:
            gr = qe[Ct + 1], Cr = qe[Ct + 2], (gr & 192) === 128 && (Cr & 192) === 128 && (wr = (Nt & 15) << 12 | (gr & 63) << 6 | Cr & 63, wr > 2047 && (wr < 55296 || wr > 57343) && (Dt = wr));
            break;
          case 4:
            gr = qe[Ct + 1], Cr = qe[Ct + 2], mr = qe[Ct + 3], (gr & 192) === 128 && (Cr & 192) === 128 && (mr & 192) === 128 && (wr = (Nt & 15) << 18 | (gr & 63) << 12 | (Cr & 63) << 6 | mr & 63, wr > 65535 && wr < 1114112 && (Dt = wr));
        }
      }
      Dt === null ? (Dt = 65533, Er = 1) : Dt > 65535 && (Dt -= 65536, it.push(Dt >>> 10 & 1023 | 55296), Dt = 56320 | Dt & 1023), it.push(Dt), Ct += Er;
    }
    return Yt(it);
  }
  const xt = 4096;
  function Yt(qe) {
    const Te = qe.length;
    if (Te <= xt)
      return String.fromCharCode.apply(String, qe);
    let Re = "", it = 0;
    for (; it < Te; )
      Re += String.fromCharCode.apply(
        String,
        qe.slice(it, it += xt)
      );
    return Re;
  }
  function Jt(qe, Te, Re) {
    let it = "";
    Re = Math.min(qe.length, Re);
    for (let Ct = Te; Ct < Re; ++Ct)
      it += String.fromCharCode(qe[Ct] & 127);
    return it;
  }
  function Ht(qe, Te, Re) {
    let it = "";
    Re = Math.min(qe.length, Re);
    for (let Ct = Te; Ct < Re; ++Ct)
      it += String.fromCharCode(qe[Ct]);
    return it;
  }
  function Lt(qe, Te, Re) {
    const it = qe.length;
    (!Te || Te < 0) && (Te = 0), (!Re || Re < 0 || Re > it) && (Re = it);
    let Ct = "";
    for (let Nt = Te; Nt < Re; ++Nt)
      Ct += Vt[qe[Nt]];
    return Ct;
  }
  function Pt(qe, Te, Re) {
    const it = qe.slice(Te, Re);
    let Ct = "";
    for (let Nt = 0; Nt < it.length - 1; Nt += 2)
      Ct += String.fromCharCode(it[Nt] + it[Nt + 1] * 256);
    return Ct;
  }
  de.prototype.slice = function(Te, Re) {
    const it = this.length;
    Te = ~~Te, Re = Re === void 0 ? it : ~~Re, Te < 0 ? (Te += it, Te < 0 && (Te = 0)) : Te > it && (Te = it), Re < 0 ? (Re += it, Re < 0 && (Re = 0)) : Re > it && (Re = it), Re < Te && (Re = Te);
    const Ct = this.subarray(Te, Re);
    return Object.setPrototypeOf(Ct, de.prototype), Ct;
  };
  function yt(qe, Te, Re) {
    if (qe % 1 !== 0 || qe < 0)
      throw new RangeError("offset is not uint");
    if (qe + Te > Re)
      throw new RangeError("Trying to access beyond buffer length");
  }
  de.prototype.readUintLE = de.prototype.readUIntLE = function(Te, Re, it) {
    Te = Te >>> 0, Re = Re >>> 0, it || yt(Te, Re, this.length);
    let Ct = this[Te], Nt = 1, Dt = 0;
    for (; ++Dt < Re && (Nt *= 256); )
      Ct += this[Te + Dt] * Nt;
    return Ct;
  }, de.prototype.readUintBE = de.prototype.readUIntBE = function(Te, Re, it) {
    Te = Te >>> 0, Re = Re >>> 0, it || yt(Te, Re, this.length);
    let Ct = this[Te + --Re], Nt = 1;
    for (; Re > 0 && (Nt *= 256); )
      Ct += this[Te + --Re] * Nt;
    return Ct;
  }, de.prototype.readUint8 = de.prototype.readUInt8 = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 1, this.length), this[Te];
  }, de.prototype.readUint16LE = de.prototype.readUInt16LE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 2, this.length), this[Te] | this[Te + 1] << 8;
  }, de.prototype.readUint16BE = de.prototype.readUInt16BE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 2, this.length), this[Te] << 8 | this[Te + 1];
  }, de.prototype.readUint32LE = de.prototype.readUInt32LE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 4, this.length), (this[Te] | this[Te + 1] << 8 | this[Te + 2] << 16) + this[Te + 3] * 16777216;
  }, de.prototype.readUint32BE = de.prototype.readUInt32BE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 4, this.length), this[Te] * 16777216 + (this[Te + 1] << 16 | this[Te + 2] << 8 | this[Te + 3]);
  }, de.prototype.readBigUInt64LE = zt(function(Te) {
    Te = Te >>> 0, Bt(Te, "offset");
    const Re = this[Te], it = this[Te + 7];
    (Re === void 0 || it === void 0) && ct(Te, this.length - 8);
    const Ct = Re + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 24, Nt = this[++Te] + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + it * 2 ** 24;
    return BigInt(Ct) + (BigInt(Nt) << BigInt(32));
  }), de.prototype.readBigUInt64BE = zt(function(Te) {
    Te = Te >>> 0, Bt(Te, "offset");
    const Re = this[Te], it = this[Te + 7];
    (Re === void 0 || it === void 0) && ct(Te, this.length - 8);
    const Ct = Re * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + this[++Te], Nt = this[++Te] * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + it;
    return (BigInt(Ct) << BigInt(32)) + BigInt(Nt);
  }), de.prototype.readIntLE = function(Te, Re, it) {
    Te = Te >>> 0, Re = Re >>> 0, it || yt(Te, Re, this.length);
    let Ct = this[Te], Nt = 1, Dt = 0;
    for (; ++Dt < Re && (Nt *= 256); )
      Ct += this[Te + Dt] * Nt;
    return Nt *= 128, Ct >= Nt && (Ct -= Math.pow(2, 8 * Re)), Ct;
  }, de.prototype.readIntBE = function(Te, Re, it) {
    Te = Te >>> 0, Re = Re >>> 0, it || yt(Te, Re, this.length);
    let Ct = Re, Nt = 1, Dt = this[Te + --Ct];
    for (; Ct > 0 && (Nt *= 256); )
      Dt += this[Te + --Ct] * Nt;
    return Nt *= 128, Dt >= Nt && (Dt -= Math.pow(2, 8 * Re)), Dt;
  }, de.prototype.readInt8 = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 1, this.length), this[Te] & 128 ? (255 - this[Te] + 1) * -1 : this[Te];
  }, de.prototype.readInt16LE = function(Te, Re) {
    Te = Te >>> 0, Re || yt(Te, 2, this.length);
    const it = this[Te] | this[Te + 1] << 8;
    return it & 32768 ? it | 4294901760 : it;
  }, de.prototype.readInt16BE = function(Te, Re) {
    Te = Te >>> 0, Re || yt(Te, 2, this.length);
    const it = this[Te + 1] | this[Te] << 8;
    return it & 32768 ? it | 4294901760 : it;
  }, de.prototype.readInt32LE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 4, this.length), this[Te] | this[Te + 1] << 8 | this[Te + 2] << 16 | this[Te + 3] << 24;
  }, de.prototype.readInt32BE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 4, this.length), this[Te] << 24 | this[Te + 1] << 16 | this[Te + 2] << 8 | this[Te + 3];
  }, de.prototype.readBigInt64LE = zt(function(Te) {
    Te = Te >>> 0, Bt(Te, "offset");
    const Re = this[Te], it = this[Te + 7];
    (Re === void 0 || it === void 0) && ct(Te, this.length - 8);
    const Ct = this[Te + 4] + this[Te + 5] * 2 ** 8 + this[Te + 6] * 2 ** 16 + (it << 24);
    return (BigInt(Ct) << BigInt(32)) + BigInt(Re + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 24);
  }), de.prototype.readBigInt64BE = zt(function(Te) {
    Te = Te >>> 0, Bt(Te, "offset");
    const Re = this[Te], it = this[Te + 7];
    (Re === void 0 || it === void 0) && ct(Te, this.length - 8);
    const Ct = (Re << 24) + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + this[++Te];
    return (BigInt(Ct) << BigInt(32)) + BigInt(this[++Te] * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + it);
  }), de.prototype.readFloatLE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 4, this.length), ne.read(this, Te, !0, 23, 4);
  }, de.prototype.readFloatBE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 4, this.length), ne.read(this, Te, !1, 23, 4);
  }, de.prototype.readDoubleLE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 8, this.length), ne.read(this, Te, !0, 52, 8);
  }, de.prototype.readDoubleBE = function(Te, Re) {
    return Te = Te >>> 0, Re || yt(Te, 8, this.length), ne.read(this, Te, !1, 52, 8);
  };
  function kt(qe, Te, Re, it, Ct, Nt) {
    if (!de.isBuffer(qe))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (Te > Ct || Te < Nt)
      throw new RangeError('"value" argument is out of bounds');
    if (Re + it > qe.length)
      throw new RangeError("Index out of range");
  }
  de.prototype.writeUintLE = de.prototype.writeUIntLE = function(Te, Re, it, Ct) {
    if (Te = +Te, Re = Re >>> 0, it = it >>> 0, !Ct) {
      const Er = Math.pow(2, 8 * it) - 1;
      kt(this, Te, Re, it, Er, 0);
    }
    let Nt = 1, Dt = 0;
    for (this[Re] = Te & 255; ++Dt < it && (Nt *= 256); )
      this[Re + Dt] = Te / Nt & 255;
    return Re + it;
  }, de.prototype.writeUintBE = de.prototype.writeUIntBE = function(Te, Re, it, Ct) {
    if (Te = +Te, Re = Re >>> 0, it = it >>> 0, !Ct) {
      const Er = Math.pow(2, 8 * it) - 1;
      kt(this, Te, Re, it, Er, 0);
    }
    let Nt = it - 1, Dt = 1;
    for (this[Re + Nt] = Te & 255; --Nt >= 0 && (Dt *= 256); )
      this[Re + Nt] = Te / Dt & 255;
    return Re + it;
  }, de.prototype.writeUint8 = de.prototype.writeUInt8 = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 1, 255, 0), this[Re] = Te & 255, Re + 1;
  }, de.prototype.writeUint16LE = de.prototype.writeUInt16LE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 2, 65535, 0), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, Re + 2;
  }, de.prototype.writeUint16BE = de.prototype.writeUInt16BE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 2, 65535, 0), this[Re] = Te >>> 8, this[Re + 1] = Te & 255, Re + 2;
  }, de.prototype.writeUint32LE = de.prototype.writeUInt32LE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 4, 4294967295, 0), this[Re + 3] = Te >>> 24, this[Re + 2] = Te >>> 16, this[Re + 1] = Te >>> 8, this[Re] = Te & 255, Re + 4;
  }, de.prototype.writeUint32BE = de.prototype.writeUInt32BE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 4, 4294967295, 0), this[Re] = Te >>> 24, this[Re + 1] = Te >>> 16, this[Re + 2] = Te >>> 8, this[Re + 3] = Te & 255, Re + 4;
  };
  function $t(qe, Te, Re, it, Ct) {
    $e(Te, it, Ct, qe, Re, 7);
    let Nt = Number(Te & BigInt(4294967295));
    qe[Re++] = Nt, Nt = Nt >> 8, qe[Re++] = Nt, Nt = Nt >> 8, qe[Re++] = Nt, Nt = Nt >> 8, qe[Re++] = Nt;
    let Dt = Number(Te >> BigInt(32) & BigInt(4294967295));
    return qe[Re++] = Dt, Dt = Dt >> 8, qe[Re++] = Dt, Dt = Dt >> 8, qe[Re++] = Dt, Dt = Dt >> 8, qe[Re++] = Dt, Re;
  }
  function Le(qe, Te, Re, it, Ct) {
    $e(Te, it, Ct, qe, Re, 7);
    let Nt = Number(Te & BigInt(4294967295));
    qe[Re + 7] = Nt, Nt = Nt >> 8, qe[Re + 6] = Nt, Nt = Nt >> 8, qe[Re + 5] = Nt, Nt = Nt >> 8, qe[Re + 4] = Nt;
    let Dt = Number(Te >> BigInt(32) & BigInt(4294967295));
    return qe[Re + 3] = Dt, Dt = Dt >> 8, qe[Re + 2] = Dt, Dt = Dt >> 8, qe[Re + 1] = Dt, Dt = Dt >> 8, qe[Re] = Dt, Re + 8;
  }
  de.prototype.writeBigUInt64LE = zt(function(Te, Re = 0) {
    return $t(this, Te, Re, BigInt(0), BigInt("0xffffffffffffffff"));
  }), de.prototype.writeBigUInt64BE = zt(function(Te, Re = 0) {
    return Le(this, Te, Re, BigInt(0), BigInt("0xffffffffffffffff"));
  }), de.prototype.writeIntLE = function(Te, Re, it, Ct) {
    if (Te = +Te, Re = Re >>> 0, !Ct) {
      const gr = Math.pow(2, 8 * it - 1);
      kt(this, Te, Re, it, gr - 1, -gr);
    }
    let Nt = 0, Dt = 1, Er = 0;
    for (this[Re] = Te & 255; ++Nt < it && (Dt *= 256); )
      Te < 0 && Er === 0 && this[Re + Nt - 1] !== 0 && (Er = 1), this[Re + Nt] = (Te / Dt >> 0) - Er & 255;
    return Re + it;
  }, de.prototype.writeIntBE = function(Te, Re, it, Ct) {
    if (Te = +Te, Re = Re >>> 0, !Ct) {
      const gr = Math.pow(2, 8 * it - 1);
      kt(this, Te, Re, it, gr - 1, -gr);
    }
    let Nt = it - 1, Dt = 1, Er = 0;
    for (this[Re + Nt] = Te & 255; --Nt >= 0 && (Dt *= 256); )
      Te < 0 && Er === 0 && this[Re + Nt + 1] !== 0 && (Er = 1), this[Re + Nt] = (Te / Dt >> 0) - Er & 255;
    return Re + it;
  }, de.prototype.writeInt8 = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 1, 127, -128), Te < 0 && (Te = 255 + Te + 1), this[Re] = Te & 255, Re + 1;
  }, de.prototype.writeInt16LE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 2, 32767, -32768), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, Re + 2;
  }, de.prototype.writeInt16BE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 2, 32767, -32768), this[Re] = Te >>> 8, this[Re + 1] = Te & 255, Re + 2;
  }, de.prototype.writeInt32LE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 4, 2147483647, -2147483648), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, this[Re + 2] = Te >>> 16, this[Re + 3] = Te >>> 24, Re + 4;
  }, de.prototype.writeInt32BE = function(Te, Re, it) {
    return Te = +Te, Re = Re >>> 0, it || kt(this, Te, Re, 4, 2147483647, -2147483648), Te < 0 && (Te = 4294967295 + Te + 1), this[Re] = Te >>> 24, this[Re + 1] = Te >>> 16, this[Re + 2] = Te >>> 8, this[Re + 3] = Te & 255, Re + 4;
  }, de.prototype.writeBigInt64LE = zt(function(Te, Re = 0) {
    return $t(this, Te, Re, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), de.prototype.writeBigInt64BE = zt(function(Te, Re = 0) {
    return Le(this, Te, Re, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  function or(qe, Te, Re, it, Ct, Nt) {
    if (Re + it > qe.length)
      throw new RangeError("Index out of range");
    if (Re < 0)
      throw new RangeError("Index out of range");
  }
  function tr(qe, Te, Re, it, Ct) {
    return Te = +Te, Re = Re >>> 0, Ct || or(qe, Te, Re, 4), ne.write(qe, Te, Re, it, 23, 4), Re + 4;
  }
  de.prototype.writeFloatLE = function(Te, Re, it) {
    return tr(this, Te, Re, !0, it);
  }, de.prototype.writeFloatBE = function(Te, Re, it) {
    return tr(this, Te, Re, !1, it);
  };
  function lr(qe, Te, Re, it, Ct) {
    return Te = +Te, Re = Re >>> 0, Ct || or(qe, Te, Re, 8), ne.write(qe, Te, Re, it, 52, 8), Re + 8;
  }
  de.prototype.writeDoubleLE = function(Te, Re, it) {
    return lr(this, Te, Re, !0, it);
  }, de.prototype.writeDoubleBE = function(Te, Re, it) {
    return lr(this, Te, Re, !1, it);
  }, de.prototype.copy = function(Te, Re, it, Ct) {
    if (!de.isBuffer(Te))
      throw new TypeError("argument should be a Buffer");
    if (it || (it = 0), !Ct && Ct !== 0 && (Ct = this.length), Re >= Te.length && (Re = Te.length), Re || (Re = 0), Ct > 0 && Ct < it && (Ct = it), Ct === it || Te.length === 0 || this.length === 0)
      return 0;
    if (Re < 0)
      throw new RangeError("targetStart out of bounds");
    if (it < 0 || it >= this.length)
      throw new RangeError("Index out of range");
    if (Ct < 0)
      throw new RangeError("sourceEnd out of bounds");
    Ct > this.length && (Ct = this.length), Te.length - Re < Ct - it && (Ct = Te.length - Re + it);
    const Nt = Ct - it;
    return this === Te && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(Re, it, Ct) : Uint8Array.prototype.set.call(
      Te,
      this.subarray(it, Ct),
      Re
    ), Nt;
  }, de.prototype.fill = function(Te, Re, it, Ct) {
    if (typeof Te == "string") {
      if (typeof Re == "string" ? (Ct = Re, Re = 0, it = this.length) : typeof it == "string" && (Ct = it, it = this.length), Ct !== void 0 && typeof Ct != "string")
        throw new TypeError("encoding must be a string");
      if (typeof Ct == "string" && !de.isEncoding(Ct))
        throw new TypeError("Unknown encoding: " + Ct);
      if (Te.length === 1) {
        const Dt = Te.charCodeAt(0);
        (Ct === "utf8" && Dt < 128 || Ct === "latin1") && (Te = Dt);
      }
    } else
      typeof Te == "number" ? Te = Te & 255 : typeof Te == "boolean" && (Te = Number(Te));
    if (Re < 0 || this.length < Re || this.length < it)
      throw new RangeError("Out of range index");
    if (it <= Re)
      return this;
    Re = Re >>> 0, it = it === void 0 ? this.length : it >>> 0, Te || (Te = 0);
    let Nt;
    if (typeof Te == "number")
      for (Nt = Re; Nt < it; ++Nt)
        this[Nt] = Te;
    else {
      const Dt = de.isBuffer(Te) ? Te : de.from(Te, Ct), Er = Dt.length;
      if (Er === 0)
        throw new TypeError('The value "' + Te + '" is invalid for argument "value"');
      for (Nt = 0; Nt < it - Re; ++Nt)
        this[Nt + Re] = Dt[Nt % Er];
    }
    return this;
  };
  const gt = {};
  function Ut(qe, Te, Re) {
    gt[qe] = class extends Re {
      constructor() {
        super(), Object.defineProperty(this, "message", {
          value: Te.apply(this, arguments),
          writable: !0,
          configurable: !0
        }), this.name = `${this.name} [${qe}]`, this.stack, delete this.name;
      }
      get code() {
        return qe;
      }
      set code(Ct) {
        Object.defineProperty(this, "code", {
          configurable: !0,
          enumerable: !0,
          value: Ct,
          writable: !0
        });
      }
      toString() {
        return `${this.name} [${qe}]: ${this.message}`;
      }
    };
  }
  Ut(
    "ERR_BUFFER_OUT_OF_BOUNDS",
    function(qe) {
      return qe ? `${qe} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    },
    RangeError
  ), Ut(
    "ERR_INVALID_ARG_TYPE",
    function(qe, Te) {
      return `The "${qe}" argument must be of type number. Received type ${typeof Te}`;
    },
    TypeError
  ), Ut(
    "ERR_OUT_OF_RANGE",
    function(qe, Te, Re) {
      let it = `The value of "${qe}" is out of range.`, Ct = Re;
      return Number.isInteger(Re) && Math.abs(Re) > 2 ** 32 ? Ct = Ze(String(Re)) : typeof Re == "bigint" && (Ct = String(Re), (Re > BigInt(2) ** BigInt(32) || Re < -(BigInt(2) ** BigInt(32))) && (Ct = Ze(Ct)), Ct += "n"), it += ` It must be ${Te}. Received ${Ct}`, it;
    },
    RangeError
  );
  function Ze(qe) {
    let Te = "", Re = qe.length;
    const it = qe[0] === "-" ? 1 : 0;
    for (; Re >= it + 4; Re -= 3)
      Te = `_${qe.slice(Re - 3, Re)}${Te}`;
    return `${qe.slice(0, Re)}${Te}`;
  }
  function rt(qe, Te, Re) {
    Bt(Te, "offset"), (qe[Te] === void 0 || qe[Te + Re] === void 0) && ct(Te, qe.length - (Re + 1));
  }
  function $e(qe, Te, Re, it, Ct, Nt) {
    if (qe > Re || qe < Te) {
      const Dt = typeof Te == "bigint" ? "n" : "";
      let Er;
      throw Nt > 3 ? Te === 0 || Te === BigInt(0) ? Er = `>= 0${Dt} and < 2${Dt} ** ${(Nt + 1) * 8}${Dt}` : Er = `>= -(2${Dt} ** ${(Nt + 1) * 8 - 1}${Dt}) and < 2 ** ${(Nt + 1) * 8 - 1}${Dt}` : Er = `>= ${Te}${Dt} and <= ${Re}${Dt}`, new gt.ERR_OUT_OF_RANGE("value", Er, qe);
    }
    rt(it, Ct, Nt);
  }
  function Bt(qe, Te) {
    if (typeof qe != "number")
      throw new gt.ERR_INVALID_ARG_TYPE(Te, "number", qe);
  }
  function ct(qe, Te, Re) {
    throw Math.floor(qe) !== qe ? (Bt(qe, Re), new gt.ERR_OUT_OF_RANGE(Re || "offset", "an integer", qe)) : Te < 0 ? new gt.ERR_BUFFER_OUT_OF_BOUNDS() : new gt.ERR_OUT_OF_RANGE(
      Re || "offset",
      `>= ${Re ? 1 : 0} and <= ${Te}`,
      qe
    );
  }
  const je = /[^+/0-9A-Za-z-_]/g;
  function _e(qe) {
    if (qe = qe.split("=")[0], qe = qe.trim().replace(je, ""), qe.length < 2)
      return "";
    for (; qe.length % 4 !== 0; )
      qe = qe + "=";
    return qe;
  }
  function Ie(qe, Te) {
    Te = Te || 1 / 0;
    let Re;
    const it = qe.length;
    let Ct = null;
    const Nt = [];
    for (let Dt = 0; Dt < it; ++Dt) {
      if (Re = qe.charCodeAt(Dt), Re > 55295 && Re < 57344) {
        if (!Ct) {
          if (Re > 56319) {
            (Te -= 3) > -1 && Nt.push(239, 191, 189);
            continue;
          } else if (Dt + 1 === it) {
            (Te -= 3) > -1 && Nt.push(239, 191, 189);
            continue;
          }
          Ct = Re;
          continue;
        }
        if (Re < 56320) {
          (Te -= 3) > -1 && Nt.push(239, 191, 189), Ct = Re;
          continue;
        }
        Re = (Ct - 55296 << 10 | Re - 56320) + 65536;
      } else
        Ct && (Te -= 3) > -1 && Nt.push(239, 191, 189);
      if (Ct = null, Re < 128) {
        if ((Te -= 1) < 0)
          break;
        Nt.push(Re);
      } else if (Re < 2048) {
        if ((Te -= 2) < 0)
          break;
        Nt.push(
          Re >> 6 | 192,
          Re & 63 | 128
        );
      } else if (Re < 65536) {
        if ((Te -= 3) < 0)
          break;
        Nt.push(
          Re >> 12 | 224,
          Re >> 6 & 63 | 128,
          Re & 63 | 128
        );
      } else if (Re < 1114112) {
        if ((Te -= 4) < 0)
          break;
        Nt.push(
          Re >> 18 | 240,
          Re >> 12 & 63 | 128,
          Re >> 6 & 63 | 128,
          Re & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Nt;
  }
  function Ce(qe) {
    const Te = [];
    for (let Re = 0; Re < qe.length; ++Re)
      Te.push(qe.charCodeAt(Re) & 255);
    return Te;
  }
  function ke(qe, Te) {
    let Re, it, Ct;
    const Nt = [];
    for (let Dt = 0; Dt < qe.length && !((Te -= 2) < 0); ++Dt)
      Re = qe.charCodeAt(Dt), it = Re >> 8, Ct = Re % 256, Nt.push(Ct), Nt.push(it);
    return Nt;
  }
  function Ve(qe) {
    return ee.toByteArray(_e(qe));
  }
  function Ke(qe, Te, Re, it) {
    let Ct;
    for (Ct = 0; Ct < it && !(Ct + Re >= Te.length || Ct >= qe.length); ++Ct)
      Te[Ct + Re] = qe[Ct];
    return Ct;
  }
  function ot(qe, Te) {
    return qe instanceof Te || qe != null && qe.constructor != null && qe.constructor.name != null && qe.constructor.name === Te.name;
  }
  function St(qe) {
    return qe !== qe;
  }
  const Vt = function() {
    const qe = "0123456789abcdef", Te = new Array(256);
    for (let Re = 0; Re < 16; ++Re) {
      const it = Re * 16;
      for (let Ct = 0; Ct < 16; ++Ct)
        Te[it + Ct] = qe[Re] + qe[Ct];
    }
    return Te;
  }();
  function zt(qe) {
    return typeof BigInt > "u" ? Wt : qe;
  }
  function Wt() {
    throw new Error("BigInt not supported");
  }
})(buffer$1);
var ReplicaRejectCode$1;
(function(Q) {
  Q[Q.SysFatal = 1] = "SysFatal", Q[Q.SysTransient = 2] = "SysTransient", Q[Q.DestinationInvalid = 3] = "DestinationInvalid", Q[Q.CanisterReject = 4] = "CanisterReject", Q[Q.CanisterError = 5] = "CanisterError";
})(ReplicaRejectCode$1 || (ReplicaRejectCode$1 = {}));
const alphabet = "abcdefghijklmnopqrstuvwxyz234567", lookupTable = /* @__PURE__ */ Object.create(null);
for (let Q = 0; Q < alphabet.length; Q++)
  lookupTable[alphabet[Q]] = Q;
lookupTable[0] = lookupTable.o;
lookupTable[1] = lookupTable.i;
function encode$4(Q) {
  let ee = 0, ne = 0, ie = "";
  function ae(ce) {
    return ee < 0 ? ne |= ce >> -ee : ne = ce << ee & 248, ee > 3 ? (ee -= 8, 1) : (ee < 4 && (ie += alphabet[ne >> 3], ee += 5), 0);
  }
  for (let ce = 0; ce < Q.length; )
    ce += ae(Q[ce]);
  return ie + (ee < 0 ? alphabet[ne >> 3] : "");
}
function decode$5(Q) {
  let ee = 0, ne = 0;
  const ie = new Uint8Array(Q.length * 4 / 3 | 0);
  let ae = 0;
  function ce(le) {
    let de = lookupTable[le.toLowerCase()];
    if (de === void 0)
      throw new Error(`Invalid character: ${JSON.stringify(le)}`);
    de <<= 3, ne |= de >>> ee, ee += 5, ee >= 8 && (ie[ae++] = ne, ee -= 8, ee > 0 ? ne = de << 5 - ee & 255 : ne = 0);
  }
  for (const le of Q)
    ce(le);
  return ie.slice(0, ae);
}
const lookUpTable = new Uint32Array([
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
]);
function getCrc32(Q) {
  const ee = new Uint8Array(Q);
  let ne = -1;
  for (let ie = 0; ie < ee.length; ie++) {
    const ce = (ee[ie] ^ ne) & 255;
    ne = lookUpTable[ce] ^ ne >>> 8;
  }
  return (ne ^ -1) >>> 0;
}
function sha224$1(Q) {
  const ee = sha256$1.exports.sha224.create();
  return ee.update(Q), new Uint8Array(ee.array());
}
const SELF_AUTHENTICATING_SUFFIX = 2, ANONYMOUS_SUFFIX = 4, fromHexString = (Q) => {
  var ee;
  return new Uint8Array(((ee = Q.match(/.{1,2}/g)) !== null && ee !== void 0 ? ee : []).map((ne) => parseInt(ne, 16)));
}, toHexString = (Q) => Q.reduce((ee, ne) => ee + ne.toString(16).padStart(2, "0"), "");
class Principal$2 {
  constructor(ee) {
    this._arr = ee, this._isPrincipal = !0;
  }
  static anonymous() {
    return new this(new Uint8Array([ANONYMOUS_SUFFIX]));
  }
  static selfAuthenticating(ee) {
    const ne = sha224$1(ee);
    return new this(new Uint8Array([...ne, SELF_AUTHENTICATING_SUFFIX]));
  }
  static from(ee) {
    if (typeof ee == "string")
      return Principal$2.fromText(ee);
    if (typeof ee == "object" && ee !== null && ee._isPrincipal === !0)
      return new Principal$2(ee._arr);
    throw new Error(`Impossible to convert ${JSON.stringify(ee)} to Principal.`);
  }
  static fromHex(ee) {
    return new this(fromHexString(ee));
  }
  static fromText(ee) {
    const ne = ee.toLowerCase().replace(/-/g, "");
    let ie = decode$5(ne);
    ie = ie.slice(4, ie.length);
    const ae = new this(ie);
    if (ae.toText() !== ee)
      throw new Error(`Principal "${ae.toText()}" does not have a valid checksum.`);
    return ae;
  }
  static fromUint8Array(ee) {
    return new this(ee);
  }
  isAnonymous() {
    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;
  }
  toUint8Array() {
    return this._arr;
  }
  toHex() {
    return toHexString(this._arr).toUpperCase();
  }
  toText() {
    const ee = new ArrayBuffer(4);
    new DataView(ee).setUint32(0, getCrc32(this._arr));
    const ie = Uint8Array.from(buffer$1.Buffer.from(ee)), ae = Uint8Array.from(this._arr), ce = new Uint8Array([...ie, ...ae]), de = encode$4(ce).match(/.{1,5}/g);
    if (!de)
      throw new Error();
    return de.join("-");
  }
  toString() {
    return this.toText();
  }
}
const esm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Principal: Principal$2
}, Symbol.toStringTag, { value: "Module" }));
var src$1 = {}, buffer = {};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(Q) {
  var ee = base64Js, ne = ieee754$1, ie = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  Q.Buffer = de, Q.SlowBuffer = Se, Q.INSPECT_MAX_BYTES = 50;
  var ae = 2147483647;
  Q.kMaxLength = ae, de.TYPED_ARRAY_SUPPORT = ce(), !de.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function ce() {
    try {
      var _e = new Uint8Array(1), Ie = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(Ie, Uint8Array.prototype), Object.setPrototypeOf(_e, Ie), _e.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(de.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (!!de.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(de.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (!!de.isBuffer(this))
        return this.byteOffset;
    }
  });
  function le(_e) {
    if (_e > ae)
      throw new RangeError('The value "' + _e + '" is invalid for option "size"');
    var Ie = new Uint8Array(_e);
    return Object.setPrototypeOf(Ie, de.prototype), Ie;
  }
  function de(_e, Ie, Ce) {
    if (typeof _e == "number") {
      if (typeof Ie == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return Ee(_e);
    }
    return ye(_e, Ie, Ce);
  }
  de.poolSize = 8192;
  function ye(_e, Ie, Ce) {
    if (typeof _e == "string")
      return me(_e, Ie);
    if (ArrayBuffer.isView(_e))
      return we(_e);
    if (_e == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _e
      );
    if (Bt(_e, ArrayBuffer) || _e && Bt(_e.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Bt(_e, SharedArrayBuffer) || _e && Bt(_e.buffer, SharedArrayBuffer)))
      return be(_e, Ie, Ce);
    if (typeof _e == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    var ke = _e.valueOf && _e.valueOf();
    if (ke != null && ke !== _e)
      return de.from(ke, Ie, Ce);
    var Ve = Oe(_e);
    if (Ve)
      return Ve;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof _e[Symbol.toPrimitive] == "function")
      return de.from(
        _e[Symbol.toPrimitive]("string"),
        Ie,
        Ce
      );
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _e
    );
  }
  de.from = function(_e, Ie, Ce) {
    return ye(_e, Ie, Ce);
  }, Object.setPrototypeOf(de.prototype, Uint8Array.prototype), Object.setPrototypeOf(de, Uint8Array);
  function fe(_e) {
    if (typeof _e != "number")
      throw new TypeError('"size" argument must be of type number');
    if (_e < 0)
      throw new RangeError('The value "' + _e + '" is invalid for option "size"');
  }
  function Be(_e, Ie, Ce) {
    return fe(_e), _e <= 0 ? le(_e) : Ie !== void 0 ? typeof Ce == "string" ? le(_e).fill(Ie, Ce) : le(_e).fill(Ie) : le(_e);
  }
  de.alloc = function(_e, Ie, Ce) {
    return Be(_e, Ie, Ce);
  };
  function Ee(_e) {
    return fe(_e), le(_e < 0 ? 0 : He(_e) | 0);
  }
  de.allocUnsafe = function(_e) {
    return Ee(_e);
  }, de.allocUnsafeSlow = function(_e) {
    return Ee(_e);
  };
  function me(_e, Ie) {
    if ((typeof Ie != "string" || Ie === "") && (Ie = "utf8"), !de.isEncoding(Ie))
      throw new TypeError("Unknown encoding: " + Ie);
    var Ce = Ge(_e, Ie) | 0, ke = le(Ce), Ve = ke.write(_e, Ie);
    return Ve !== Ce && (ke = ke.slice(0, Ve)), ke;
  }
  function ge(_e) {
    for (var Ie = _e.length < 0 ? 0 : He(_e.length) | 0, Ce = le(Ie), ke = 0; ke < Ie; ke += 1)
      Ce[ke] = _e[ke] & 255;
    return Ce;
  }
  function we(_e) {
    if (Bt(_e, Uint8Array)) {
      var Ie = new Uint8Array(_e);
      return be(Ie.buffer, Ie.byteOffset, Ie.byteLength);
    }
    return ge(_e);
  }
  function be(_e, Ie, Ce) {
    if (Ie < 0 || _e.byteLength < Ie)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (_e.byteLength < Ie + (Ce || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    var ke;
    return Ie === void 0 && Ce === void 0 ? ke = new Uint8Array(_e) : Ce === void 0 ? ke = new Uint8Array(_e, Ie) : ke = new Uint8Array(_e, Ie, Ce), Object.setPrototypeOf(ke, de.prototype), ke;
  }
  function Oe(_e) {
    if (de.isBuffer(_e)) {
      var Ie = He(_e.length) | 0, Ce = le(Ie);
      return Ce.length === 0 || _e.copy(Ce, 0, 0, Ie), Ce;
    }
    if (_e.length !== void 0)
      return typeof _e.length != "number" || ct(_e.length) ? le(0) : ge(_e);
    if (_e.type === "Buffer" && Array.isArray(_e.data))
      return ge(_e.data);
  }
  function He(_e) {
    if (_e >= ae)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + ae.toString(16) + " bytes");
    return _e | 0;
  }
  function Se(_e) {
    return +_e != _e && (_e = 0), de.alloc(+_e);
  }
  de.isBuffer = function(Ie) {
    return Ie != null && Ie._isBuffer === !0 && Ie !== de.prototype;
  }, de.compare = function(Ie, Ce) {
    if (Bt(Ie, Uint8Array) && (Ie = de.from(Ie, Ie.offset, Ie.byteLength)), Bt(Ce, Uint8Array) && (Ce = de.from(Ce, Ce.offset, Ce.byteLength)), !de.isBuffer(Ie) || !de.isBuffer(Ce))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (Ie === Ce)
      return 0;
    for (var ke = Ie.length, Ve = Ce.length, Ke = 0, ot = Math.min(ke, Ve); Ke < ot; ++Ke)
      if (Ie[Ke] !== Ce[Ke]) {
        ke = Ie[Ke], Ve = Ce[Ke];
        break;
      }
    return ke < Ve ? -1 : Ve < ke ? 1 : 0;
  }, de.isEncoding = function(Ie) {
    switch (String(Ie).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, de.concat = function(Ie, Ce) {
    if (!Array.isArray(Ie))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (Ie.length === 0)
      return de.alloc(0);
    var ke;
    if (Ce === void 0)
      for (Ce = 0, ke = 0; ke < Ie.length; ++ke)
        Ce += Ie[ke].length;
    var Ve = de.allocUnsafe(Ce), Ke = 0;
    for (ke = 0; ke < Ie.length; ++ke) {
      var ot = Ie[ke];
      if (Bt(ot, Uint8Array))
        Ke + ot.length > Ve.length ? de.from(ot).copy(Ve, Ke) : Uint8Array.prototype.set.call(
          Ve,
          ot,
          Ke
        );
      else if (de.isBuffer(ot))
        ot.copy(Ve, Ke);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Ke += ot.length;
    }
    return Ve;
  };
  function Ge(_e, Ie) {
    if (de.isBuffer(_e))
      return _e.length;
    if (ArrayBuffer.isView(_e) || Bt(_e, ArrayBuffer))
      return _e.byteLength;
    if (typeof _e != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof _e
      );
    var Ce = _e.length, ke = arguments.length > 2 && arguments[2] === !0;
    if (!ke && Ce === 0)
      return 0;
    for (var Ve = !1; ; )
      switch (Ie) {
        case "ascii":
        case "latin1":
        case "binary":
          return Ce;
        case "utf8":
        case "utf-8":
          return gt(_e).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Ce * 2;
        case "hex":
          return Ce >>> 1;
        case "base64":
          return rt(_e).length;
        default:
          if (Ve)
            return ke ? -1 : gt(_e).length;
          Ie = ("" + Ie).toLowerCase(), Ve = !0;
      }
  }
  de.byteLength = Ge;
  function Fe(_e, Ie, Ce) {
    var ke = !1;
    if ((Ie === void 0 || Ie < 0) && (Ie = 0), Ie > this.length || ((Ce === void 0 || Ce > this.length) && (Ce = this.length), Ce <= 0) || (Ce >>>= 0, Ie >>>= 0, Ce <= Ie))
      return "";
    for (_e || (_e = "utf8"); ; )
      switch (_e) {
        case "hex":
          return Lt(this, Ie, Ce);
        case "utf8":
        case "utf-8":
          return pt(this, Ie, Ce);
        case "ascii":
          return Jt(this, Ie, Ce);
        case "latin1":
        case "binary":
          return Ht(this, Ie, Ce);
        case "base64":
          return Gt(this, Ie, Ce);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Pt(this, Ie, Ce);
        default:
          if (ke)
            throw new TypeError("Unknown encoding: " + _e);
          _e = (_e + "").toLowerCase(), ke = !0;
      }
  }
  de.prototype._isBuffer = !0;
  function Pe(_e, Ie, Ce) {
    var ke = _e[Ie];
    _e[Ie] = _e[Ce], _e[Ce] = ke;
  }
  de.prototype.swap16 = function() {
    var Ie = this.length;
    if (Ie % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var Ce = 0; Ce < Ie; Ce += 2)
      Pe(this, Ce, Ce + 1);
    return this;
  }, de.prototype.swap32 = function() {
    var Ie = this.length;
    if (Ie % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var Ce = 0; Ce < Ie; Ce += 4)
      Pe(this, Ce, Ce + 3), Pe(this, Ce + 1, Ce + 2);
    return this;
  }, de.prototype.swap64 = function() {
    var Ie = this.length;
    if (Ie % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var Ce = 0; Ce < Ie; Ce += 8)
      Pe(this, Ce, Ce + 7), Pe(this, Ce + 1, Ce + 6), Pe(this, Ce + 2, Ce + 5), Pe(this, Ce + 3, Ce + 4);
    return this;
  }, de.prototype.toString = function() {
    var Ie = this.length;
    return Ie === 0 ? "" : arguments.length === 0 ? pt(this, 0, Ie) : Fe.apply(this, arguments);
  }, de.prototype.toLocaleString = de.prototype.toString, de.prototype.equals = function(Ie) {
    if (!de.isBuffer(Ie))
      throw new TypeError("Argument must be a Buffer");
    return this === Ie ? !0 : de.compare(this, Ie) === 0;
  }, de.prototype.inspect = function() {
    var Ie = "", Ce = Q.INSPECT_MAX_BYTES;
    return Ie = this.toString("hex", 0, Ce).replace(/(.{2})/g, "$1 ").trim(), this.length > Ce && (Ie += " ... "), "<Buffer " + Ie + ">";
  }, ie && (de.prototype[ie] = de.prototype.inspect), de.prototype.compare = function(Ie, Ce, ke, Ve, Ke) {
    if (Bt(Ie, Uint8Array) && (Ie = de.from(Ie, Ie.offset, Ie.byteLength)), !de.isBuffer(Ie))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Ie
      );
    if (Ce === void 0 && (Ce = 0), ke === void 0 && (ke = Ie ? Ie.length : 0), Ve === void 0 && (Ve = 0), Ke === void 0 && (Ke = this.length), Ce < 0 || ke > Ie.length || Ve < 0 || Ke > this.length)
      throw new RangeError("out of range index");
    if (Ve >= Ke && Ce >= ke)
      return 0;
    if (Ve >= Ke)
      return -1;
    if (Ce >= ke)
      return 1;
    if (Ce >>>= 0, ke >>>= 0, Ve >>>= 0, Ke >>>= 0, this === Ie)
      return 0;
    for (var ot = Ke - Ve, St = ke - Ce, Vt = Math.min(ot, St), zt = this.slice(Ve, Ke), Wt = Ie.slice(Ce, ke), qe = 0; qe < Vt; ++qe)
      if (zt[qe] !== Wt[qe]) {
        ot = zt[qe], St = Wt[qe];
        break;
      }
    return ot < St ? -1 : St < ot ? 1 : 0;
  };
  function Je(_e, Ie, Ce, ke, Ve) {
    if (_e.length === 0)
      return -1;
    if (typeof Ce == "string" ? (ke = Ce, Ce = 0) : Ce > 2147483647 ? Ce = 2147483647 : Ce < -2147483648 && (Ce = -2147483648), Ce = +Ce, ct(Ce) && (Ce = Ve ? 0 : _e.length - 1), Ce < 0 && (Ce = _e.length + Ce), Ce >= _e.length) {
      if (Ve)
        return -1;
      Ce = _e.length - 1;
    } else if (Ce < 0)
      if (Ve)
        Ce = 0;
      else
        return -1;
    if (typeof Ie == "string" && (Ie = de.from(Ie, ke)), de.isBuffer(Ie))
      return Ie.length === 0 ? -1 : tt(_e, Ie, Ce, ke, Ve);
    if (typeof Ie == "number")
      return Ie = Ie & 255, typeof Uint8Array.prototype.indexOf == "function" ? Ve ? Uint8Array.prototype.indexOf.call(_e, Ie, Ce) : Uint8Array.prototype.lastIndexOf.call(_e, Ie, Ce) : tt(_e, [Ie], Ce, ke, Ve);
    throw new TypeError("val must be string, number or Buffer");
  }
  function tt(_e, Ie, Ce, ke, Ve) {
    var Ke = 1, ot = _e.length, St = Ie.length;
    if (ke !== void 0 && (ke = String(ke).toLowerCase(), ke === "ucs2" || ke === "ucs-2" || ke === "utf16le" || ke === "utf-16le")) {
      if (_e.length < 2 || Ie.length < 2)
        return -1;
      Ke = 2, ot /= 2, St /= 2, Ce /= 2;
    }
    function Vt(Re, it) {
      return Ke === 1 ? Re[it] : Re.readUInt16BE(it * Ke);
    }
    var zt;
    if (Ve) {
      var Wt = -1;
      for (zt = Ce; zt < ot; zt++)
        if (Vt(_e, zt) === Vt(Ie, Wt === -1 ? 0 : zt - Wt)) {
          if (Wt === -1 && (Wt = zt), zt - Wt + 1 === St)
            return Wt * Ke;
        } else
          Wt !== -1 && (zt -= zt - Wt), Wt = -1;
    } else
      for (Ce + St > ot && (Ce = ot - St), zt = Ce; zt >= 0; zt--) {
        for (var qe = !0, Te = 0; Te < St; Te++)
          if (Vt(_e, zt + Te) !== Vt(Ie, Te)) {
            qe = !1;
            break;
          }
        if (qe)
          return zt;
      }
    return -1;
  }
  de.prototype.includes = function(Ie, Ce, ke) {
    return this.indexOf(Ie, Ce, ke) !== -1;
  }, de.prototype.indexOf = function(Ie, Ce, ke) {
    return Je(this, Ie, Ce, ke, !0);
  }, de.prototype.lastIndexOf = function(Ie, Ce, ke) {
    return Je(this, Ie, Ce, ke, !1);
  };
  function ft(_e, Ie, Ce, ke) {
    Ce = Number(Ce) || 0;
    var Ve = _e.length - Ce;
    ke ? (ke = Number(ke), ke > Ve && (ke = Ve)) : ke = Ve;
    var Ke = Ie.length;
    ke > Ke / 2 && (ke = Ke / 2);
    for (var ot = 0; ot < ke; ++ot) {
      var St = parseInt(Ie.substr(ot * 2, 2), 16);
      if (ct(St))
        return ot;
      _e[Ce + ot] = St;
    }
    return ot;
  }
  function Tt(_e, Ie, Ce, ke) {
    return $e(gt(Ie, _e.length - Ce), _e, Ce, ke);
  }
  function Xe(_e, Ie, Ce, ke) {
    return $e(Ut(Ie), _e, Ce, ke);
  }
  function ht(_e, Ie, Ce, ke) {
    return $e(rt(Ie), _e, Ce, ke);
  }
  function Qt(_e, Ie, Ce, ke) {
    return $e(Ze(Ie, _e.length - Ce), _e, Ce, ke);
  }
  de.prototype.write = function(Ie, Ce, ke, Ve) {
    if (Ce === void 0)
      Ve = "utf8", ke = this.length, Ce = 0;
    else if (ke === void 0 && typeof Ce == "string")
      Ve = Ce, ke = this.length, Ce = 0;
    else if (isFinite(Ce))
      Ce = Ce >>> 0, isFinite(ke) ? (ke = ke >>> 0, Ve === void 0 && (Ve = "utf8")) : (Ve = ke, ke = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    var Ke = this.length - Ce;
    if ((ke === void 0 || ke > Ke) && (ke = Ke), Ie.length > 0 && (ke < 0 || Ce < 0) || Ce > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    Ve || (Ve = "utf8");
    for (var ot = !1; ; )
      switch (Ve) {
        case "hex":
          return ft(this, Ie, Ce, ke);
        case "utf8":
        case "utf-8":
          return Tt(this, Ie, Ce, ke);
        case "ascii":
        case "latin1":
        case "binary":
          return Xe(this, Ie, Ce, ke);
        case "base64":
          return ht(this, Ie, Ce, ke);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Qt(this, Ie, Ce, ke);
        default:
          if (ot)
            throw new TypeError("Unknown encoding: " + Ve);
          Ve = ("" + Ve).toLowerCase(), ot = !0;
      }
  }, de.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function Gt(_e, Ie, Ce) {
    return Ie === 0 && Ce === _e.length ? ee.fromByteArray(_e) : ee.fromByteArray(_e.slice(Ie, Ce));
  }
  function pt(_e, Ie, Ce) {
    Ce = Math.min(_e.length, Ce);
    for (var ke = [], Ve = Ie; Ve < Ce; ) {
      var Ke = _e[Ve], ot = null, St = Ke > 239 ? 4 : Ke > 223 ? 3 : Ke > 191 ? 2 : 1;
      if (Ve + St <= Ce) {
        var Vt, zt, Wt, qe;
        switch (St) {
          case 1:
            Ke < 128 && (ot = Ke);
            break;
          case 2:
            Vt = _e[Ve + 1], (Vt & 192) === 128 && (qe = (Ke & 31) << 6 | Vt & 63, qe > 127 && (ot = qe));
            break;
          case 3:
            Vt = _e[Ve + 1], zt = _e[Ve + 2], (Vt & 192) === 128 && (zt & 192) === 128 && (qe = (Ke & 15) << 12 | (Vt & 63) << 6 | zt & 63, qe > 2047 && (qe < 55296 || qe > 57343) && (ot = qe));
            break;
          case 4:
            Vt = _e[Ve + 1], zt = _e[Ve + 2], Wt = _e[Ve + 3], (Vt & 192) === 128 && (zt & 192) === 128 && (Wt & 192) === 128 && (qe = (Ke & 15) << 18 | (Vt & 63) << 12 | (zt & 63) << 6 | Wt & 63, qe > 65535 && qe < 1114112 && (ot = qe));
        }
      }
      ot === null ? (ot = 65533, St = 1) : ot > 65535 && (ot -= 65536, ke.push(ot >>> 10 & 1023 | 55296), ot = 56320 | ot & 1023), ke.push(ot), Ve += St;
    }
    return Yt(ke);
  }
  var xt = 4096;
  function Yt(_e) {
    var Ie = _e.length;
    if (Ie <= xt)
      return String.fromCharCode.apply(String, _e);
    for (var Ce = "", ke = 0; ke < Ie; )
      Ce += String.fromCharCode.apply(
        String,
        _e.slice(ke, ke += xt)
      );
    return Ce;
  }
  function Jt(_e, Ie, Ce) {
    var ke = "";
    Ce = Math.min(_e.length, Ce);
    for (var Ve = Ie; Ve < Ce; ++Ve)
      ke += String.fromCharCode(_e[Ve] & 127);
    return ke;
  }
  function Ht(_e, Ie, Ce) {
    var ke = "";
    Ce = Math.min(_e.length, Ce);
    for (var Ve = Ie; Ve < Ce; ++Ve)
      ke += String.fromCharCode(_e[Ve]);
    return ke;
  }
  function Lt(_e, Ie, Ce) {
    var ke = _e.length;
    (!Ie || Ie < 0) && (Ie = 0), (!Ce || Ce < 0 || Ce > ke) && (Ce = ke);
    for (var Ve = "", Ke = Ie; Ke < Ce; ++Ke)
      Ve += je[_e[Ke]];
    return Ve;
  }
  function Pt(_e, Ie, Ce) {
    for (var ke = _e.slice(Ie, Ce), Ve = "", Ke = 0; Ke < ke.length - 1; Ke += 2)
      Ve += String.fromCharCode(ke[Ke] + ke[Ke + 1] * 256);
    return Ve;
  }
  de.prototype.slice = function(Ie, Ce) {
    var ke = this.length;
    Ie = ~~Ie, Ce = Ce === void 0 ? ke : ~~Ce, Ie < 0 ? (Ie += ke, Ie < 0 && (Ie = 0)) : Ie > ke && (Ie = ke), Ce < 0 ? (Ce += ke, Ce < 0 && (Ce = 0)) : Ce > ke && (Ce = ke), Ce < Ie && (Ce = Ie);
    var Ve = this.subarray(Ie, Ce);
    return Object.setPrototypeOf(Ve, de.prototype), Ve;
  };
  function yt(_e, Ie, Ce) {
    if (_e % 1 !== 0 || _e < 0)
      throw new RangeError("offset is not uint");
    if (_e + Ie > Ce)
      throw new RangeError("Trying to access beyond buffer length");
  }
  de.prototype.readUintLE = de.prototype.readUIntLE = function(Ie, Ce, ke) {
    Ie = Ie >>> 0, Ce = Ce >>> 0, ke || yt(Ie, Ce, this.length);
    for (var Ve = this[Ie], Ke = 1, ot = 0; ++ot < Ce && (Ke *= 256); )
      Ve += this[Ie + ot] * Ke;
    return Ve;
  }, de.prototype.readUintBE = de.prototype.readUIntBE = function(Ie, Ce, ke) {
    Ie = Ie >>> 0, Ce = Ce >>> 0, ke || yt(Ie, Ce, this.length);
    for (var Ve = this[Ie + --Ce], Ke = 1; Ce > 0 && (Ke *= 256); )
      Ve += this[Ie + --Ce] * Ke;
    return Ve;
  }, de.prototype.readUint8 = de.prototype.readUInt8 = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 1, this.length), this[Ie];
  }, de.prototype.readUint16LE = de.prototype.readUInt16LE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 2, this.length), this[Ie] | this[Ie + 1] << 8;
  }, de.prototype.readUint16BE = de.prototype.readUInt16BE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 2, this.length), this[Ie] << 8 | this[Ie + 1];
  }, de.prototype.readUint32LE = de.prototype.readUInt32LE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 4, this.length), (this[Ie] | this[Ie + 1] << 8 | this[Ie + 2] << 16) + this[Ie + 3] * 16777216;
  }, de.prototype.readUint32BE = de.prototype.readUInt32BE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 4, this.length), this[Ie] * 16777216 + (this[Ie + 1] << 16 | this[Ie + 2] << 8 | this[Ie + 3]);
  }, de.prototype.readIntLE = function(Ie, Ce, ke) {
    Ie = Ie >>> 0, Ce = Ce >>> 0, ke || yt(Ie, Ce, this.length);
    for (var Ve = this[Ie], Ke = 1, ot = 0; ++ot < Ce && (Ke *= 256); )
      Ve += this[Ie + ot] * Ke;
    return Ke *= 128, Ve >= Ke && (Ve -= Math.pow(2, 8 * Ce)), Ve;
  }, de.prototype.readIntBE = function(Ie, Ce, ke) {
    Ie = Ie >>> 0, Ce = Ce >>> 0, ke || yt(Ie, Ce, this.length);
    for (var Ve = Ce, Ke = 1, ot = this[Ie + --Ve]; Ve > 0 && (Ke *= 256); )
      ot += this[Ie + --Ve] * Ke;
    return Ke *= 128, ot >= Ke && (ot -= Math.pow(2, 8 * Ce)), ot;
  }, de.prototype.readInt8 = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 1, this.length), this[Ie] & 128 ? (255 - this[Ie] + 1) * -1 : this[Ie];
  }, de.prototype.readInt16LE = function(Ie, Ce) {
    Ie = Ie >>> 0, Ce || yt(Ie, 2, this.length);
    var ke = this[Ie] | this[Ie + 1] << 8;
    return ke & 32768 ? ke | 4294901760 : ke;
  }, de.prototype.readInt16BE = function(Ie, Ce) {
    Ie = Ie >>> 0, Ce || yt(Ie, 2, this.length);
    var ke = this[Ie + 1] | this[Ie] << 8;
    return ke & 32768 ? ke | 4294901760 : ke;
  }, de.prototype.readInt32LE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 4, this.length), this[Ie] | this[Ie + 1] << 8 | this[Ie + 2] << 16 | this[Ie + 3] << 24;
  }, de.prototype.readInt32BE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 4, this.length), this[Ie] << 24 | this[Ie + 1] << 16 | this[Ie + 2] << 8 | this[Ie + 3];
  }, de.prototype.readFloatLE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 4, this.length), ne.read(this, Ie, !0, 23, 4);
  }, de.prototype.readFloatBE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 4, this.length), ne.read(this, Ie, !1, 23, 4);
  }, de.prototype.readDoubleLE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 8, this.length), ne.read(this, Ie, !0, 52, 8);
  }, de.prototype.readDoubleBE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || yt(Ie, 8, this.length), ne.read(this, Ie, !1, 52, 8);
  };
  function kt(_e, Ie, Ce, ke, Ve, Ke) {
    if (!de.isBuffer(_e))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (Ie > Ve || Ie < Ke)
      throw new RangeError('"value" argument is out of bounds');
    if (Ce + ke > _e.length)
      throw new RangeError("Index out of range");
  }
  de.prototype.writeUintLE = de.prototype.writeUIntLE = function(Ie, Ce, ke, Ve) {
    if (Ie = +Ie, Ce = Ce >>> 0, ke = ke >>> 0, !Ve) {
      var Ke = Math.pow(2, 8 * ke) - 1;
      kt(this, Ie, Ce, ke, Ke, 0);
    }
    var ot = 1, St = 0;
    for (this[Ce] = Ie & 255; ++St < ke && (ot *= 256); )
      this[Ce + St] = Ie / ot & 255;
    return Ce + ke;
  }, de.prototype.writeUintBE = de.prototype.writeUIntBE = function(Ie, Ce, ke, Ve) {
    if (Ie = +Ie, Ce = Ce >>> 0, ke = ke >>> 0, !Ve) {
      var Ke = Math.pow(2, 8 * ke) - 1;
      kt(this, Ie, Ce, ke, Ke, 0);
    }
    var ot = ke - 1, St = 1;
    for (this[Ce + ot] = Ie & 255; --ot >= 0 && (St *= 256); )
      this[Ce + ot] = Ie / St & 255;
    return Ce + ke;
  }, de.prototype.writeUint8 = de.prototype.writeUInt8 = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 1, 255, 0), this[Ce] = Ie & 255, Ce + 1;
  }, de.prototype.writeUint16LE = de.prototype.writeUInt16LE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 2, 65535, 0), this[Ce] = Ie & 255, this[Ce + 1] = Ie >>> 8, Ce + 2;
  }, de.prototype.writeUint16BE = de.prototype.writeUInt16BE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 2, 65535, 0), this[Ce] = Ie >>> 8, this[Ce + 1] = Ie & 255, Ce + 2;
  }, de.prototype.writeUint32LE = de.prototype.writeUInt32LE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 4, 4294967295, 0), this[Ce + 3] = Ie >>> 24, this[Ce + 2] = Ie >>> 16, this[Ce + 1] = Ie >>> 8, this[Ce] = Ie & 255, Ce + 4;
  }, de.prototype.writeUint32BE = de.prototype.writeUInt32BE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 4, 4294967295, 0), this[Ce] = Ie >>> 24, this[Ce + 1] = Ie >>> 16, this[Ce + 2] = Ie >>> 8, this[Ce + 3] = Ie & 255, Ce + 4;
  }, de.prototype.writeIntLE = function(Ie, Ce, ke, Ve) {
    if (Ie = +Ie, Ce = Ce >>> 0, !Ve) {
      var Ke = Math.pow(2, 8 * ke - 1);
      kt(this, Ie, Ce, ke, Ke - 1, -Ke);
    }
    var ot = 0, St = 1, Vt = 0;
    for (this[Ce] = Ie & 255; ++ot < ke && (St *= 256); )
      Ie < 0 && Vt === 0 && this[Ce + ot - 1] !== 0 && (Vt = 1), this[Ce + ot] = (Ie / St >> 0) - Vt & 255;
    return Ce + ke;
  }, de.prototype.writeIntBE = function(Ie, Ce, ke, Ve) {
    if (Ie = +Ie, Ce = Ce >>> 0, !Ve) {
      var Ke = Math.pow(2, 8 * ke - 1);
      kt(this, Ie, Ce, ke, Ke - 1, -Ke);
    }
    var ot = ke - 1, St = 1, Vt = 0;
    for (this[Ce + ot] = Ie & 255; --ot >= 0 && (St *= 256); )
      Ie < 0 && Vt === 0 && this[Ce + ot + 1] !== 0 && (Vt = 1), this[Ce + ot] = (Ie / St >> 0) - Vt & 255;
    return Ce + ke;
  }, de.prototype.writeInt8 = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 1, 127, -128), Ie < 0 && (Ie = 255 + Ie + 1), this[Ce] = Ie & 255, Ce + 1;
  }, de.prototype.writeInt16LE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 2, 32767, -32768), this[Ce] = Ie & 255, this[Ce + 1] = Ie >>> 8, Ce + 2;
  }, de.prototype.writeInt16BE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 2, 32767, -32768), this[Ce] = Ie >>> 8, this[Ce + 1] = Ie & 255, Ce + 2;
  }, de.prototype.writeInt32LE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 4, 2147483647, -2147483648), this[Ce] = Ie & 255, this[Ce + 1] = Ie >>> 8, this[Ce + 2] = Ie >>> 16, this[Ce + 3] = Ie >>> 24, Ce + 4;
  }, de.prototype.writeInt32BE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || kt(this, Ie, Ce, 4, 2147483647, -2147483648), Ie < 0 && (Ie = 4294967295 + Ie + 1), this[Ce] = Ie >>> 24, this[Ce + 1] = Ie >>> 16, this[Ce + 2] = Ie >>> 8, this[Ce + 3] = Ie & 255, Ce + 4;
  };
  function $t(_e, Ie, Ce, ke, Ve, Ke) {
    if (Ce + ke > _e.length)
      throw new RangeError("Index out of range");
    if (Ce < 0)
      throw new RangeError("Index out of range");
  }
  function Le(_e, Ie, Ce, ke, Ve) {
    return Ie = +Ie, Ce = Ce >>> 0, Ve || $t(_e, Ie, Ce, 4), ne.write(_e, Ie, Ce, ke, 23, 4), Ce + 4;
  }
  de.prototype.writeFloatLE = function(Ie, Ce, ke) {
    return Le(this, Ie, Ce, !0, ke);
  }, de.prototype.writeFloatBE = function(Ie, Ce, ke) {
    return Le(this, Ie, Ce, !1, ke);
  };
  function or(_e, Ie, Ce, ke, Ve) {
    return Ie = +Ie, Ce = Ce >>> 0, Ve || $t(_e, Ie, Ce, 8), ne.write(_e, Ie, Ce, ke, 52, 8), Ce + 8;
  }
  de.prototype.writeDoubleLE = function(Ie, Ce, ke) {
    return or(this, Ie, Ce, !0, ke);
  }, de.prototype.writeDoubleBE = function(Ie, Ce, ke) {
    return or(this, Ie, Ce, !1, ke);
  }, de.prototype.copy = function(Ie, Ce, ke, Ve) {
    if (!de.isBuffer(Ie))
      throw new TypeError("argument should be a Buffer");
    if (ke || (ke = 0), !Ve && Ve !== 0 && (Ve = this.length), Ce >= Ie.length && (Ce = Ie.length), Ce || (Ce = 0), Ve > 0 && Ve < ke && (Ve = ke), Ve === ke || Ie.length === 0 || this.length === 0)
      return 0;
    if (Ce < 0)
      throw new RangeError("targetStart out of bounds");
    if (ke < 0 || ke >= this.length)
      throw new RangeError("Index out of range");
    if (Ve < 0)
      throw new RangeError("sourceEnd out of bounds");
    Ve > this.length && (Ve = this.length), Ie.length - Ce < Ve - ke && (Ve = Ie.length - Ce + ke);
    var Ke = Ve - ke;
    return this === Ie && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(Ce, ke, Ve) : Uint8Array.prototype.set.call(
      Ie,
      this.subarray(ke, Ve),
      Ce
    ), Ke;
  }, de.prototype.fill = function(Ie, Ce, ke, Ve) {
    if (typeof Ie == "string") {
      if (typeof Ce == "string" ? (Ve = Ce, Ce = 0, ke = this.length) : typeof ke == "string" && (Ve = ke, ke = this.length), Ve !== void 0 && typeof Ve != "string")
        throw new TypeError("encoding must be a string");
      if (typeof Ve == "string" && !de.isEncoding(Ve))
        throw new TypeError("Unknown encoding: " + Ve);
      if (Ie.length === 1) {
        var Ke = Ie.charCodeAt(0);
        (Ve === "utf8" && Ke < 128 || Ve === "latin1") && (Ie = Ke);
      }
    } else
      typeof Ie == "number" ? Ie = Ie & 255 : typeof Ie == "boolean" && (Ie = Number(Ie));
    if (Ce < 0 || this.length < Ce || this.length < ke)
      throw new RangeError("Out of range index");
    if (ke <= Ce)
      return this;
    Ce = Ce >>> 0, ke = ke === void 0 ? this.length : ke >>> 0, Ie || (Ie = 0);
    var ot;
    if (typeof Ie == "number")
      for (ot = Ce; ot < ke; ++ot)
        this[ot] = Ie;
    else {
      var St = de.isBuffer(Ie) ? Ie : de.from(Ie, Ve), Vt = St.length;
      if (Vt === 0)
        throw new TypeError('The value "' + Ie + '" is invalid for argument "value"');
      for (ot = 0; ot < ke - Ce; ++ot)
        this[ot + Ce] = St[ot % Vt];
    }
    return this;
  };
  var tr = /[^+/0-9A-Za-z-_]/g;
  function lr(_e) {
    if (_e = _e.split("=")[0], _e = _e.trim().replace(tr, ""), _e.length < 2)
      return "";
    for (; _e.length % 4 !== 0; )
      _e = _e + "=";
    return _e;
  }
  function gt(_e, Ie) {
    Ie = Ie || 1 / 0;
    for (var Ce, ke = _e.length, Ve = null, Ke = [], ot = 0; ot < ke; ++ot) {
      if (Ce = _e.charCodeAt(ot), Ce > 55295 && Ce < 57344) {
        if (!Ve) {
          if (Ce > 56319) {
            (Ie -= 3) > -1 && Ke.push(239, 191, 189);
            continue;
          } else if (ot + 1 === ke) {
            (Ie -= 3) > -1 && Ke.push(239, 191, 189);
            continue;
          }
          Ve = Ce;
          continue;
        }
        if (Ce < 56320) {
          (Ie -= 3) > -1 && Ke.push(239, 191, 189), Ve = Ce;
          continue;
        }
        Ce = (Ve - 55296 << 10 | Ce - 56320) + 65536;
      } else
        Ve && (Ie -= 3) > -1 && Ke.push(239, 191, 189);
      if (Ve = null, Ce < 128) {
        if ((Ie -= 1) < 0)
          break;
        Ke.push(Ce);
      } else if (Ce < 2048) {
        if ((Ie -= 2) < 0)
          break;
        Ke.push(
          Ce >> 6 | 192,
          Ce & 63 | 128
        );
      } else if (Ce < 65536) {
        if ((Ie -= 3) < 0)
          break;
        Ke.push(
          Ce >> 12 | 224,
          Ce >> 6 & 63 | 128,
          Ce & 63 | 128
        );
      } else if (Ce < 1114112) {
        if ((Ie -= 4) < 0)
          break;
        Ke.push(
          Ce >> 18 | 240,
          Ce >> 12 & 63 | 128,
          Ce >> 6 & 63 | 128,
          Ce & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Ke;
  }
  function Ut(_e) {
    for (var Ie = [], Ce = 0; Ce < _e.length; ++Ce)
      Ie.push(_e.charCodeAt(Ce) & 255);
    return Ie;
  }
  function Ze(_e, Ie) {
    for (var Ce, ke, Ve, Ke = [], ot = 0; ot < _e.length && !((Ie -= 2) < 0); ++ot)
      Ce = _e.charCodeAt(ot), ke = Ce >> 8, Ve = Ce % 256, Ke.push(Ve), Ke.push(ke);
    return Ke;
  }
  function rt(_e) {
    return ee.toByteArray(lr(_e));
  }
  function $e(_e, Ie, Ce, ke) {
    for (var Ve = 0; Ve < ke && !(Ve + Ce >= Ie.length || Ve >= _e.length); ++Ve)
      Ie[Ve + Ce] = _e[Ve];
    return Ve;
  }
  function Bt(_e, Ie) {
    return _e instanceof Ie || _e != null && _e.constructor != null && _e.constructor.name != null && _e.constructor.name === Ie.name;
  }
  function ct(_e) {
    return _e !== _e;
  }
  var je = function() {
    for (var _e = "0123456789abcdef", Ie = new Array(256), Ce = 0; Ce < 16; ++Ce)
      for (var ke = Ce * 16, Ve = 0; Ve < 16; ++Ve)
        Ie[ke + Ve] = _e[Ce] + _e[Ve];
    return Ie;
  }();
})(buffer);
var bignumber = { exports: {} };
(function(Q) {
  (function(ee) {
    var ne, ie = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, ae = Math.ceil, ce = Math.floor, le = "[BigNumber Error] ", de = le + "Number primitive has more than 15 significant digits: ", ye = 1e14, fe = 14, Be = 9007199254740991, Ee = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], me = 1e7, ge = 1e9;
    function we(Je) {
      var tt, ft, Tt, Xe = Le.prototype = { constructor: Le, toString: null, valueOf: null }, ht = new Le(1), Qt = 20, Gt = 4, pt = -7, xt = 21, Yt = -1e7, Jt = 1e7, Ht = !1, Lt = 1, Pt = 0, yt = {
        prefix: "",
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ",",
        decimalSeparator: ".",
        fractionGroupSize: 0,
        fractionGroupSeparator: "\xA0",
        suffix: ""
      }, kt = "0123456789abcdefghijklmnopqrstuvwxyz", $t = !0;
      function Le(Ze, rt) {
        var $e, Bt, ct, je, _e, Ie, Ce, ke, Ve = this;
        if (!(Ve instanceof Le))
          return new Le(Ze, rt);
        if (rt == null) {
          if (Ze && Ze._isBigNumber === !0) {
            Ve.s = Ze.s, !Ze.c || Ze.e > Jt ? Ve.c = Ve.e = null : Ze.e < Yt ? Ve.c = [Ve.e = 0] : (Ve.e = Ze.e, Ve.c = Ze.c.slice());
            return;
          }
          if ((Ie = typeof Ze == "number") && Ze * 0 == 0) {
            if (Ve.s = 1 / Ze < 0 ? (Ze = -Ze, -1) : 1, Ze === ~~Ze) {
              for (je = 0, _e = Ze; _e >= 10; _e /= 10, je++)
                ;
              je > Jt ? Ve.c = Ve.e = null : (Ve.e = je, Ve.c = [Ze]);
              return;
            }
            ke = String(Ze);
          } else {
            if (!ie.test(ke = String(Ze)))
              return Tt(Ve, ke, Ie);
            Ve.s = ke.charCodeAt(0) == 45 ? (ke = ke.slice(1), -1) : 1;
          }
          (je = ke.indexOf(".")) > -1 && (ke = ke.replace(".", "")), (_e = ke.search(/e/i)) > 0 ? (je < 0 && (je = _e), je += +ke.slice(_e + 1), ke = ke.substring(0, _e)) : je < 0 && (je = ke.length);
        } else {
          if (Se(rt, 2, kt.length, "Base"), rt == 10 && $t)
            return Ve = new Le(Ze), gt(Ve, Qt + Ve.e + 1, Gt);
          if (ke = String(Ze), Ie = typeof Ze == "number") {
            if (Ze * 0 != 0)
              return Tt(Ve, ke, Ie, rt);
            if (Ve.s = 1 / Ze < 0 ? (ke = ke.slice(1), -1) : 1, Le.DEBUG && ke.replace(/^0\.0*|\./, "").length > 15)
              throw Error(de + Ze);
          } else
            Ve.s = ke.charCodeAt(0) === 45 ? (ke = ke.slice(1), -1) : 1;
          for ($e = kt.slice(0, rt), je = _e = 0, Ce = ke.length; _e < Ce; _e++)
            if ($e.indexOf(Bt = ke.charAt(_e)) < 0) {
              if (Bt == ".") {
                if (_e > je) {
                  je = Ce;
                  continue;
                }
              } else if (!ct && (ke == ke.toUpperCase() && (ke = ke.toLowerCase()) || ke == ke.toLowerCase() && (ke = ke.toUpperCase()))) {
                ct = !0, _e = -1, je = 0;
                continue;
              }
              return Tt(Ve, String(Ze), Ie, rt);
            }
          Ie = !1, ke = ft(ke, rt, 10, Ve.s), (je = ke.indexOf(".")) > -1 ? ke = ke.replace(".", "") : je = ke.length;
        }
        for (_e = 0; ke.charCodeAt(_e) === 48; _e++)
          ;
        for (Ce = ke.length; ke.charCodeAt(--Ce) === 48; )
          ;
        if (ke = ke.slice(_e, ++Ce)) {
          if (Ce -= _e, Ie && Le.DEBUG && Ce > 15 && (Ze > Be || Ze !== ce(Ze)))
            throw Error(de + Ve.s * Ze);
          if ((je = je - _e - 1) > Jt)
            Ve.c = Ve.e = null;
          else if (je < Yt)
            Ve.c = [Ve.e = 0];
          else {
            if (Ve.e = je, Ve.c = [], _e = (je + 1) % fe, je < 0 && (_e += fe), _e < Ce) {
              for (_e && Ve.c.push(+ke.slice(0, _e)), Ce -= fe; _e < Ce; )
                Ve.c.push(+ke.slice(_e, _e += fe));
              _e = fe - (ke = ke.slice(_e)).length;
            } else
              _e -= Ce;
            for (; _e--; ke += "0")
              ;
            Ve.c.push(+ke);
          }
        } else
          Ve.c = [Ve.e = 0];
      }
      Le.clone = we, Le.ROUND_UP = 0, Le.ROUND_DOWN = 1, Le.ROUND_CEIL = 2, Le.ROUND_FLOOR = 3, Le.ROUND_HALF_UP = 4, Le.ROUND_HALF_DOWN = 5, Le.ROUND_HALF_EVEN = 6, Le.ROUND_HALF_CEIL = 7, Le.ROUND_HALF_FLOOR = 8, Le.EUCLID = 9, Le.config = Le.set = function(Ze) {
        var rt, $e;
        if (Ze != null)
          if (typeof Ze == "object") {
            if (Ze.hasOwnProperty(rt = "DECIMAL_PLACES") && ($e = Ze[rt], Se($e, 0, ge, rt), Qt = $e), Ze.hasOwnProperty(rt = "ROUNDING_MODE") && ($e = Ze[rt], Se($e, 0, 8, rt), Gt = $e), Ze.hasOwnProperty(rt = "EXPONENTIAL_AT") && ($e = Ze[rt], $e && $e.pop ? (Se($e[0], -ge, 0, rt), Se($e[1], 0, ge, rt), pt = $e[0], xt = $e[1]) : (Se($e, -ge, ge, rt), pt = -(xt = $e < 0 ? -$e : $e))), Ze.hasOwnProperty(rt = "RANGE"))
              if ($e = Ze[rt], $e && $e.pop)
                Se($e[0], -ge, -1, rt), Se($e[1], 1, ge, rt), Yt = $e[0], Jt = $e[1];
              else if (Se($e, -ge, ge, rt), $e)
                Yt = -(Jt = $e < 0 ? -$e : $e);
              else
                throw Error(le + rt + " cannot be zero: " + $e);
            if (Ze.hasOwnProperty(rt = "CRYPTO"))
              if ($e = Ze[rt], $e === !!$e)
                if ($e)
                  if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes))
                    Ht = $e;
                  else
                    throw Ht = !$e, Error(le + "crypto unavailable");
                else
                  Ht = $e;
              else
                throw Error(le + rt + " not true or false: " + $e);
            if (Ze.hasOwnProperty(rt = "MODULO_MODE") && ($e = Ze[rt], Se($e, 0, 9, rt), Lt = $e), Ze.hasOwnProperty(rt = "POW_PRECISION") && ($e = Ze[rt], Se($e, 0, ge, rt), Pt = $e), Ze.hasOwnProperty(rt = "FORMAT"))
              if ($e = Ze[rt], typeof $e == "object")
                yt = $e;
              else
                throw Error(le + rt + " not an object: " + $e);
            if (Ze.hasOwnProperty(rt = "ALPHABET"))
              if ($e = Ze[rt], typeof $e == "string" && !/^.?$|[+\-.\s]|(.).*\1/.test($e))
                $t = $e.slice(0, 10) == "0123456789", kt = $e;
              else
                throw Error(le + rt + " invalid: " + $e);
          } else
            throw Error(le + "Object expected: " + Ze);
        return {
          DECIMAL_PLACES: Qt,
          ROUNDING_MODE: Gt,
          EXPONENTIAL_AT: [pt, xt],
          RANGE: [Yt, Jt],
          CRYPTO: Ht,
          MODULO_MODE: Lt,
          POW_PRECISION: Pt,
          FORMAT: yt,
          ALPHABET: kt
        };
      }, Le.isBigNumber = function(Ze) {
        if (!Ze || Ze._isBigNumber !== !0)
          return !1;
        if (!Le.DEBUG)
          return !0;
        var rt, $e, Bt = Ze.c, ct = Ze.e, je = Ze.s;
        e:
          if ({}.toString.call(Bt) == "[object Array]") {
            if ((je === 1 || je === -1) && ct >= -ge && ct <= ge && ct === ce(ct)) {
              if (Bt[0] === 0) {
                if (ct === 0 && Bt.length === 1)
                  return !0;
                break e;
              }
              if (rt = (ct + 1) % fe, rt < 1 && (rt += fe), String(Bt[0]).length == rt) {
                for (rt = 0; rt < Bt.length; rt++)
                  if ($e = Bt[rt], $e < 0 || $e >= ye || $e !== ce($e))
                    break e;
                if ($e !== 0)
                  return !0;
              }
            }
          } else if (Bt === null && ct === null && (je === null || je === 1 || je === -1))
            return !0;
        throw Error(le + "Invalid BigNumber: " + Ze);
      }, Le.maximum = Le.max = function() {
        return tr(arguments, Xe.lt);
      }, Le.minimum = Le.min = function() {
        return tr(arguments, Xe.gt);
      }, Le.random = function() {
        var Ze = 9007199254740992, rt = Math.random() * Ze & 2097151 ? function() {
          return ce(Math.random() * Ze);
        } : function() {
          return (Math.random() * 1073741824 | 0) * 8388608 + (Math.random() * 8388608 | 0);
        };
        return function($e) {
          var Bt, ct, je, _e, Ie, Ce = 0, ke = [], Ve = new Le(ht);
          if ($e == null ? $e = Qt : Se($e, 0, ge), _e = ae($e / fe), Ht)
            if (crypto.getRandomValues) {
              for (Bt = crypto.getRandomValues(new Uint32Array(_e *= 2)); Ce < _e; )
                Ie = Bt[Ce] * 131072 + (Bt[Ce + 1] >>> 11), Ie >= 9e15 ? (ct = crypto.getRandomValues(new Uint32Array(2)), Bt[Ce] = ct[0], Bt[Ce + 1] = ct[1]) : (ke.push(Ie % 1e14), Ce += 2);
              Ce = _e / 2;
            } else if (crypto.randomBytes) {
              for (Bt = crypto.randomBytes(_e *= 7); Ce < _e; )
                Ie = (Bt[Ce] & 31) * 281474976710656 + Bt[Ce + 1] * 1099511627776 + Bt[Ce + 2] * 4294967296 + Bt[Ce + 3] * 16777216 + (Bt[Ce + 4] << 16) + (Bt[Ce + 5] << 8) + Bt[Ce + 6], Ie >= 9e15 ? crypto.randomBytes(7).copy(Bt, Ce) : (ke.push(Ie % 1e14), Ce += 7);
              Ce = _e / 7;
            } else
              throw Ht = !1, Error(le + "crypto unavailable");
          if (!Ht)
            for (; Ce < _e; )
              Ie = rt(), Ie < 9e15 && (ke[Ce++] = Ie % 1e14);
          for (_e = ke[--Ce], $e %= fe, _e && $e && (Ie = Ee[fe - $e], ke[Ce] = ce(_e / Ie) * Ie); ke[Ce] === 0; ke.pop(), Ce--)
            ;
          if (Ce < 0)
            ke = [je = 0];
          else {
            for (je = -1; ke[0] === 0; ke.splice(0, 1), je -= fe)
              ;
            for (Ce = 1, Ie = ke[0]; Ie >= 10; Ie /= 10, Ce++)
              ;
            Ce < fe && (je -= fe - Ce);
          }
          return Ve.e = je, Ve.c = ke, Ve;
        };
      }(), Le.sum = function() {
        for (var Ze = 1, rt = arguments, $e = new Le(rt[0]); Ze < rt.length; )
          $e = $e.plus(rt[Ze++]);
        return $e;
      }, ft = function() {
        var Ze = "0123456789";
        function rt($e, Bt, ct, je) {
          for (var _e, Ie = [0], Ce, ke = 0, Ve = $e.length; ke < Ve; ) {
            for (Ce = Ie.length; Ce--; Ie[Ce] *= Bt)
              ;
            for (Ie[0] += je.indexOf($e.charAt(ke++)), _e = 0; _e < Ie.length; _e++)
              Ie[_e] > ct - 1 && (Ie[_e + 1] == null && (Ie[_e + 1] = 0), Ie[_e + 1] += Ie[_e] / ct | 0, Ie[_e] %= ct);
          }
          return Ie.reverse();
        }
        return function($e, Bt, ct, je, _e) {
          var Ie, Ce, ke, Ve, Ke, ot, St, Vt, zt = $e.indexOf("."), Wt = Qt, qe = Gt;
          for (zt >= 0 && (Ve = Pt, Pt = 0, $e = $e.replace(".", ""), Vt = new Le(Bt), ot = Vt.pow($e.length - zt), Pt = Ve, Vt.c = rt(
            Pe(Oe(ot.c), ot.e, "0"),
            10,
            ct,
            Ze
          ), Vt.e = Vt.c.length), St = rt($e, Bt, ct, _e ? (Ie = kt, Ze) : (Ie = Ze, kt)), ke = Ve = St.length; St[--Ve] == 0; St.pop())
            ;
          if (!St[0])
            return Ie.charAt(0);
          if (zt < 0 ? --ke : (ot.c = St, ot.e = ke, ot.s = je, ot = tt(ot, Vt, Wt, qe, ct), St = ot.c, Ke = ot.r, ke = ot.e), Ce = ke + Wt + 1, zt = St[Ce], Ve = ct / 2, Ke = Ke || Ce < 0 || St[Ce + 1] != null, Ke = qe < 4 ? (zt != null || Ke) && (qe == 0 || qe == (ot.s < 0 ? 3 : 2)) : zt > Ve || zt == Ve && (qe == 4 || Ke || qe == 6 && St[Ce - 1] & 1 || qe == (ot.s < 0 ? 8 : 7)), Ce < 1 || !St[0])
            $e = Ke ? Pe(Ie.charAt(1), -Wt, Ie.charAt(0)) : Ie.charAt(0);
          else {
            if (St.length = Ce, Ke)
              for (--ct; ++St[--Ce] > ct; )
                St[Ce] = 0, Ce || (++ke, St = [1].concat(St));
            for (Ve = St.length; !St[--Ve]; )
              ;
            for (zt = 0, $e = ""; zt <= Ve; $e += Ie.charAt(St[zt++]))
              ;
            $e = Pe($e, ke, Ie.charAt(0));
          }
          return $e;
        };
      }(), tt = function() {
        function Ze(Bt, ct, je) {
          var _e, Ie, Ce, ke, Ve = 0, Ke = Bt.length, ot = ct % me, St = ct / me | 0;
          for (Bt = Bt.slice(); Ke--; )
            Ce = Bt[Ke] % me, ke = Bt[Ke] / me | 0, _e = St * Ce + ke * ot, Ie = ot * Ce + _e % me * me + Ve, Ve = (Ie / je | 0) + (_e / me | 0) + St * ke, Bt[Ke] = Ie % je;
          return Ve && (Bt = [Ve].concat(Bt)), Bt;
        }
        function rt(Bt, ct, je, _e) {
          var Ie, Ce;
          if (je != _e)
            Ce = je > _e ? 1 : -1;
          else
            for (Ie = Ce = 0; Ie < je; Ie++)
              if (Bt[Ie] != ct[Ie]) {
                Ce = Bt[Ie] > ct[Ie] ? 1 : -1;
                break;
              }
          return Ce;
        }
        function $e(Bt, ct, je, _e) {
          for (var Ie = 0; je--; )
            Bt[je] -= Ie, Ie = Bt[je] < ct[je] ? 1 : 0, Bt[je] = Ie * _e + Bt[je] - ct[je];
          for (; !Bt[0] && Bt.length > 1; Bt.splice(0, 1))
            ;
        }
        return function(Bt, ct, je, _e, Ie) {
          var Ce, ke, Ve, Ke, ot, St, Vt, zt, Wt, qe, Te, Re, it, Ct, Nt, Dt, Er, gr = Bt.s == ct.s ? 1 : -1, Cr = Bt.c, mr = ct.c;
          if (!Cr || !Cr[0] || !mr || !mr[0])
            return new Le(
              !Bt.s || !ct.s || (Cr ? mr && Cr[0] == mr[0] : !mr) ? NaN : Cr && Cr[0] == 0 || !mr ? gr * 0 : gr / 0
            );
          for (zt = new Le(gr), Wt = zt.c = [], ke = Bt.e - ct.e, gr = je + ke + 1, Ie || (Ie = ye, ke = be(Bt.e / fe) - be(ct.e / fe), gr = gr / fe | 0), Ve = 0; mr[Ve] == (Cr[Ve] || 0); Ve++)
            ;
          if (mr[Ve] > (Cr[Ve] || 0) && ke--, gr < 0)
            Wt.push(1), Ke = !0;
          else {
            for (Ct = Cr.length, Dt = mr.length, Ve = 0, gr += 2, ot = ce(Ie / (mr[0] + 1)), ot > 1 && (mr = Ze(mr, ot, Ie), Cr = Ze(Cr, ot, Ie), Dt = mr.length, Ct = Cr.length), it = Dt, qe = Cr.slice(0, Dt), Te = qe.length; Te < Dt; qe[Te++] = 0)
              ;
            Er = mr.slice(), Er = [0].concat(Er), Nt = mr[0], mr[1] >= Ie / 2 && Nt++;
            do {
              if (ot = 0, Ce = rt(mr, qe, Dt, Te), Ce < 0) {
                if (Re = qe[0], Dt != Te && (Re = Re * Ie + (qe[1] || 0)), ot = ce(Re / Nt), ot > 1)
                  for (ot >= Ie && (ot = Ie - 1), St = Ze(mr, ot, Ie), Vt = St.length, Te = qe.length; rt(St, qe, Vt, Te) == 1; )
                    ot--, $e(St, Dt < Vt ? Er : mr, Vt, Ie), Vt = St.length, Ce = 1;
                else
                  ot == 0 && (Ce = ot = 1), St = mr.slice(), Vt = St.length;
                if (Vt < Te && (St = [0].concat(St)), $e(qe, St, Te, Ie), Te = qe.length, Ce == -1)
                  for (; rt(mr, qe, Dt, Te) < 1; )
                    ot++, $e(qe, Dt < Te ? Er : mr, Te, Ie), Te = qe.length;
              } else
                Ce === 0 && (ot++, qe = [0]);
              Wt[Ve++] = ot, qe[0] ? qe[Te++] = Cr[it] || 0 : (qe = [Cr[it]], Te = 1);
            } while ((it++ < Ct || qe[0] != null) && gr--);
            Ke = qe[0] != null, Wt[0] || Wt.splice(0, 1);
          }
          if (Ie == ye) {
            for (Ve = 1, gr = Wt[0]; gr >= 10; gr /= 10, Ve++)
              ;
            gt(zt, je + (zt.e = Ve + ke * fe - 1) + 1, _e, Ke);
          } else
            zt.e = ke, zt.r = +Ke;
          return zt;
        };
      }();
      function or(Ze, rt, $e, Bt) {
        var ct, je, _e, Ie, Ce;
        if ($e == null ? $e = Gt : Se($e, 0, 8), !Ze.c)
          return Ze.toString();
        if (ct = Ze.c[0], _e = Ze.e, rt == null)
          Ce = Oe(Ze.c), Ce = Bt == 1 || Bt == 2 && (_e <= pt || _e >= xt) ? Fe(Ce, _e) : Pe(Ce, _e, "0");
        else if (Ze = gt(new Le(Ze), rt, $e), je = Ze.e, Ce = Oe(Ze.c), Ie = Ce.length, Bt == 1 || Bt == 2 && (rt <= je || je <= pt)) {
          for (; Ie < rt; Ce += "0", Ie++)
            ;
          Ce = Fe(Ce, je);
        } else if (rt -= _e, Ce = Pe(Ce, je, "0"), je + 1 > Ie) {
          if (--rt > 0)
            for (Ce += "."; rt--; Ce += "0")
              ;
        } else if (rt += je - Ie, rt > 0)
          for (je + 1 == Ie && (Ce += "."); rt--; Ce += "0")
            ;
        return Ze.s < 0 && ct ? "-" + Ce : Ce;
      }
      function tr(Ze, rt) {
        for (var $e, Bt = 1, ct = new Le(Ze[0]); Bt < Ze.length; Bt++)
          if ($e = new Le(Ze[Bt]), $e.s)
            rt.call(ct, $e) && (ct = $e);
          else {
            ct = $e;
            break;
          }
        return ct;
      }
      function lr(Ze, rt, $e) {
        for (var Bt = 1, ct = rt.length; !rt[--ct]; rt.pop())
          ;
        for (ct = rt[0]; ct >= 10; ct /= 10, Bt++)
          ;
        return ($e = Bt + $e * fe - 1) > Jt ? Ze.c = Ze.e = null : $e < Yt ? Ze.c = [Ze.e = 0] : (Ze.e = $e, Ze.c = rt), Ze;
      }
      Tt = function() {
        var Ze = /^(-?)0([xbo])(?=\w[\w.]*$)/i, rt = /^([^.]+)\.$/, $e = /^\.([^.]+)$/, Bt = /^-?(Infinity|NaN)$/, ct = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function(je, _e, Ie, Ce) {
          var ke, Ve = Ie ? _e : _e.replace(ct, "");
          if (Bt.test(Ve))
            je.s = isNaN(Ve) ? null : Ve < 0 ? -1 : 1;
          else {
            if (!Ie && (Ve = Ve.replace(Ze, function(Ke, ot, St) {
              return ke = (St = St.toLowerCase()) == "x" ? 16 : St == "b" ? 2 : 8, !Ce || Ce == ke ? ot : Ke;
            }), Ce && (ke = Ce, Ve = Ve.replace(rt, "$1").replace($e, "0.$1")), _e != Ve))
              return new Le(Ve, ke);
            if (Le.DEBUG)
              throw Error(le + "Not a" + (Ce ? " base " + Ce : "") + " number: " + _e);
            je.s = null;
          }
          je.c = je.e = null;
        };
      }();
      function gt(Ze, rt, $e, Bt) {
        var ct, je, _e, Ie, Ce, ke, Ve, Ke = Ze.c, ot = Ee;
        if (Ke) {
          e: {
            for (ct = 1, Ie = Ke[0]; Ie >= 10; Ie /= 10, ct++)
              ;
            if (je = rt - ct, je < 0)
              je += fe, _e = rt, Ce = Ke[ke = 0], Ve = Ce / ot[ct - _e - 1] % 10 | 0;
            else if (ke = ae((je + 1) / fe), ke >= Ke.length)
              if (Bt) {
                for (; Ke.length <= ke; Ke.push(0))
                  ;
                Ce = Ve = 0, ct = 1, je %= fe, _e = je - fe + 1;
              } else
                break e;
            else {
              for (Ce = Ie = Ke[ke], ct = 1; Ie >= 10; Ie /= 10, ct++)
                ;
              je %= fe, _e = je - fe + ct, Ve = _e < 0 ? 0 : Ce / ot[ct - _e - 1] % 10 | 0;
            }
            if (Bt = Bt || rt < 0 || Ke[ke + 1] != null || (_e < 0 ? Ce : Ce % ot[ct - _e - 1]), Bt = $e < 4 ? (Ve || Bt) && ($e == 0 || $e == (Ze.s < 0 ? 3 : 2)) : Ve > 5 || Ve == 5 && ($e == 4 || Bt || $e == 6 && (je > 0 ? _e > 0 ? Ce / ot[ct - _e] : 0 : Ke[ke - 1]) % 10 & 1 || $e == (Ze.s < 0 ? 8 : 7)), rt < 1 || !Ke[0])
              return Ke.length = 0, Bt ? (rt -= Ze.e + 1, Ke[0] = ot[(fe - rt % fe) % fe], Ze.e = -rt || 0) : Ke[0] = Ze.e = 0, Ze;
            if (je == 0 ? (Ke.length = ke, Ie = 1, ke--) : (Ke.length = ke + 1, Ie = ot[fe - je], Ke[ke] = _e > 0 ? ce(Ce / ot[ct - _e] % ot[_e]) * Ie : 0), Bt)
              for (; ; )
                if (ke == 0) {
                  for (je = 1, _e = Ke[0]; _e >= 10; _e /= 10, je++)
                    ;
                  for (_e = Ke[0] += Ie, Ie = 1; _e >= 10; _e /= 10, Ie++)
                    ;
                  je != Ie && (Ze.e++, Ke[0] == ye && (Ke[0] = 1));
                  break;
                } else {
                  if (Ke[ke] += Ie, Ke[ke] != ye)
                    break;
                  Ke[ke--] = 0, Ie = 1;
                }
            for (je = Ke.length; Ke[--je] === 0; Ke.pop())
              ;
          }
          Ze.e > Jt ? Ze.c = Ze.e = null : Ze.e < Yt && (Ze.c = [Ze.e = 0]);
        }
        return Ze;
      }
      function Ut(Ze) {
        var rt, $e = Ze.e;
        return $e === null ? Ze.toString() : (rt = Oe(Ze.c), rt = $e <= pt || $e >= xt ? Fe(rt, $e) : Pe(rt, $e, "0"), Ze.s < 0 ? "-" + rt : rt);
      }
      return Xe.absoluteValue = Xe.abs = function() {
        var Ze = new Le(this);
        return Ze.s < 0 && (Ze.s = 1), Ze;
      }, Xe.comparedTo = function(Ze, rt) {
        return He(this, new Le(Ze, rt));
      }, Xe.decimalPlaces = Xe.dp = function(Ze, rt) {
        var $e, Bt, ct, je = this;
        if (Ze != null)
          return Se(Ze, 0, ge), rt == null ? rt = Gt : Se(rt, 0, 8), gt(new Le(je), Ze + je.e + 1, rt);
        if (!($e = je.c))
          return null;
        if (Bt = ((ct = $e.length - 1) - be(this.e / fe)) * fe, ct = $e[ct])
          for (; ct % 10 == 0; ct /= 10, Bt--)
            ;
        return Bt < 0 && (Bt = 0), Bt;
      }, Xe.dividedBy = Xe.div = function(Ze, rt) {
        return tt(this, new Le(Ze, rt), Qt, Gt);
      }, Xe.dividedToIntegerBy = Xe.idiv = function(Ze, rt) {
        return tt(this, new Le(Ze, rt), 0, 1);
      }, Xe.exponentiatedBy = Xe.pow = function(Ze, rt) {
        var $e, Bt, ct, je, _e, Ie, Ce, ke, Ve, Ke = this;
        if (Ze = new Le(Ze), Ze.c && !Ze.isInteger())
          throw Error(le + "Exponent not an integer: " + Ut(Ze));
        if (rt != null && (rt = new Le(rt)), Ie = Ze.e > 14, !Ke.c || !Ke.c[0] || Ke.c[0] == 1 && !Ke.e && Ke.c.length == 1 || !Ze.c || !Ze.c[0])
          return Ve = new Le(Math.pow(+Ut(Ke), Ie ? 2 - Ge(Ze) : +Ut(Ze))), rt ? Ve.mod(rt) : Ve;
        if (Ce = Ze.s < 0, rt) {
          if (rt.c ? !rt.c[0] : !rt.s)
            return new Le(NaN);
          Bt = !Ce && Ke.isInteger() && rt.isInteger(), Bt && (Ke = Ke.mod(rt));
        } else {
          if (Ze.e > 9 && (Ke.e > 0 || Ke.e < -1 || (Ke.e == 0 ? Ke.c[0] > 1 || Ie && Ke.c[1] >= 24e7 : Ke.c[0] < 8e13 || Ie && Ke.c[0] <= 9999975e7)))
            return je = Ke.s < 0 && Ge(Ze) ? -0 : 0, Ke.e > -1 && (je = 1 / je), new Le(Ce ? 1 / je : je);
          Pt && (je = ae(Pt / fe + 2));
        }
        for (Ie ? ($e = new Le(0.5), Ce && (Ze.s = 1), ke = Ge(Ze)) : (ct = Math.abs(+Ut(Ze)), ke = ct % 2), Ve = new Le(ht); ; ) {
          if (ke) {
            if (Ve = Ve.times(Ke), !Ve.c)
              break;
            je ? Ve.c.length > je && (Ve.c.length = je) : Bt && (Ve = Ve.mod(rt));
          }
          if (ct) {
            if (ct = ce(ct / 2), ct === 0)
              break;
            ke = ct % 2;
          } else if (Ze = Ze.times($e), gt(Ze, Ze.e + 1, 1), Ze.e > 14)
            ke = Ge(Ze);
          else {
            if (ct = +Ut(Ze), ct === 0)
              break;
            ke = ct % 2;
          }
          Ke = Ke.times(Ke), je ? Ke.c && Ke.c.length > je && (Ke.c.length = je) : Bt && (Ke = Ke.mod(rt));
        }
        return Bt ? Ve : (Ce && (Ve = ht.div(Ve)), rt ? Ve.mod(rt) : je ? gt(Ve, Pt, Gt, _e) : Ve);
      }, Xe.integerValue = function(Ze) {
        var rt = new Le(this);
        return Ze == null ? Ze = Gt : Se(Ze, 0, 8), gt(rt, rt.e + 1, Ze);
      }, Xe.isEqualTo = Xe.eq = function(Ze, rt) {
        return He(this, new Le(Ze, rt)) === 0;
      }, Xe.isFinite = function() {
        return !!this.c;
      }, Xe.isGreaterThan = Xe.gt = function(Ze, rt) {
        return He(this, new Le(Ze, rt)) > 0;
      }, Xe.isGreaterThanOrEqualTo = Xe.gte = function(Ze, rt) {
        return (rt = He(this, new Le(Ze, rt))) === 1 || rt === 0;
      }, Xe.isInteger = function() {
        return !!this.c && be(this.e / fe) > this.c.length - 2;
      }, Xe.isLessThan = Xe.lt = function(Ze, rt) {
        return He(this, new Le(Ze, rt)) < 0;
      }, Xe.isLessThanOrEqualTo = Xe.lte = function(Ze, rt) {
        return (rt = He(this, new Le(Ze, rt))) === -1 || rt === 0;
      }, Xe.isNaN = function() {
        return !this.s;
      }, Xe.isNegative = function() {
        return this.s < 0;
      }, Xe.isPositive = function() {
        return this.s > 0;
      }, Xe.isZero = function() {
        return !!this.c && this.c[0] == 0;
      }, Xe.minus = function(Ze, rt) {
        var $e, Bt, ct, je, _e = this, Ie = _e.s;
        if (Ze = new Le(Ze, rt), rt = Ze.s, !Ie || !rt)
          return new Le(NaN);
        if (Ie != rt)
          return Ze.s = -rt, _e.plus(Ze);
        var Ce = _e.e / fe, ke = Ze.e / fe, Ve = _e.c, Ke = Ze.c;
        if (!Ce || !ke) {
          if (!Ve || !Ke)
            return Ve ? (Ze.s = -rt, Ze) : new Le(Ke ? _e : NaN);
          if (!Ve[0] || !Ke[0])
            return Ke[0] ? (Ze.s = -rt, Ze) : new Le(Ve[0] ? _e : Gt == 3 ? -0 : 0);
        }
        if (Ce = be(Ce), ke = be(ke), Ve = Ve.slice(), Ie = Ce - ke) {
          for ((je = Ie < 0) ? (Ie = -Ie, ct = Ve) : (ke = Ce, ct = Ke), ct.reverse(), rt = Ie; rt--; ct.push(0))
            ;
          ct.reverse();
        } else
          for (Bt = (je = (Ie = Ve.length) < (rt = Ke.length)) ? Ie : rt, Ie = rt = 0; rt < Bt; rt++)
            if (Ve[rt] != Ke[rt]) {
              je = Ve[rt] < Ke[rt];
              break;
            }
        if (je && (ct = Ve, Ve = Ke, Ke = ct, Ze.s = -Ze.s), rt = (Bt = Ke.length) - ($e = Ve.length), rt > 0)
          for (; rt--; Ve[$e++] = 0)
            ;
        for (rt = ye - 1; Bt > Ie; ) {
          if (Ve[--Bt] < Ke[Bt]) {
            for ($e = Bt; $e && !Ve[--$e]; Ve[$e] = rt)
              ;
            --Ve[$e], Ve[Bt] += ye;
          }
          Ve[Bt] -= Ke[Bt];
        }
        for (; Ve[0] == 0; Ve.splice(0, 1), --ke)
          ;
        return Ve[0] ? lr(Ze, Ve, ke) : (Ze.s = Gt == 3 ? -1 : 1, Ze.c = [Ze.e = 0], Ze);
      }, Xe.modulo = Xe.mod = function(Ze, rt) {
        var $e, Bt, ct = this;
        return Ze = new Le(Ze, rt), !ct.c || !Ze.s || Ze.c && !Ze.c[0] ? new Le(NaN) : !Ze.c || ct.c && !ct.c[0] ? new Le(ct) : (Lt == 9 ? (Bt = Ze.s, Ze.s = 1, $e = tt(ct, Ze, 0, 3), Ze.s = Bt, $e.s *= Bt) : $e = tt(ct, Ze, 0, Lt), Ze = ct.minus($e.times(Ze)), !Ze.c[0] && Lt == 1 && (Ze.s = ct.s), Ze);
      }, Xe.multipliedBy = Xe.times = function(Ze, rt) {
        var $e, Bt, ct, je, _e, Ie, Ce, ke, Ve, Ke, ot, St, Vt, zt, Wt, qe = this, Te = qe.c, Re = (Ze = new Le(Ze, rt)).c;
        if (!Te || !Re || !Te[0] || !Re[0])
          return !qe.s || !Ze.s || Te && !Te[0] && !Re || Re && !Re[0] && !Te ? Ze.c = Ze.e = Ze.s = null : (Ze.s *= qe.s, !Te || !Re ? Ze.c = Ze.e = null : (Ze.c = [0], Ze.e = 0)), Ze;
        for (Bt = be(qe.e / fe) + be(Ze.e / fe), Ze.s *= qe.s, Ce = Te.length, Ke = Re.length, Ce < Ke && (Vt = Te, Te = Re, Re = Vt, ct = Ce, Ce = Ke, Ke = ct), ct = Ce + Ke, Vt = []; ct--; Vt.push(0))
          ;
        for (zt = ye, Wt = me, ct = Ke; --ct >= 0; ) {
          for ($e = 0, ot = Re[ct] % Wt, St = Re[ct] / Wt | 0, _e = Ce, je = ct + _e; je > ct; )
            ke = Te[--_e] % Wt, Ve = Te[_e] / Wt | 0, Ie = St * ke + Ve * ot, ke = ot * ke + Ie % Wt * Wt + Vt[je] + $e, $e = (ke / zt | 0) + (Ie / Wt | 0) + St * Ve, Vt[je--] = ke % zt;
          Vt[je] = $e;
        }
        return $e ? ++Bt : Vt.splice(0, 1), lr(Ze, Vt, Bt);
      }, Xe.negated = function() {
        var Ze = new Le(this);
        return Ze.s = -Ze.s || null, Ze;
      }, Xe.plus = function(Ze, rt) {
        var $e, Bt = this, ct = Bt.s;
        if (Ze = new Le(Ze, rt), rt = Ze.s, !ct || !rt)
          return new Le(NaN);
        if (ct != rt)
          return Ze.s = -rt, Bt.minus(Ze);
        var je = Bt.e / fe, _e = Ze.e / fe, Ie = Bt.c, Ce = Ze.c;
        if (!je || !_e) {
          if (!Ie || !Ce)
            return new Le(ct / 0);
          if (!Ie[0] || !Ce[0])
            return Ce[0] ? Ze : new Le(Ie[0] ? Bt : ct * 0);
        }
        if (je = be(je), _e = be(_e), Ie = Ie.slice(), ct = je - _e) {
          for (ct > 0 ? (_e = je, $e = Ce) : (ct = -ct, $e = Ie), $e.reverse(); ct--; $e.push(0))
            ;
          $e.reverse();
        }
        for (ct = Ie.length, rt = Ce.length, ct - rt < 0 && ($e = Ce, Ce = Ie, Ie = $e, rt = ct), ct = 0; rt; )
          ct = (Ie[--rt] = Ie[rt] + Ce[rt] + ct) / ye | 0, Ie[rt] = ye === Ie[rt] ? 0 : Ie[rt] % ye;
        return ct && (Ie = [ct].concat(Ie), ++_e), lr(Ze, Ie, _e);
      }, Xe.precision = Xe.sd = function(Ze, rt) {
        var $e, Bt, ct, je = this;
        if (Ze != null && Ze !== !!Ze)
          return Se(Ze, 1, ge), rt == null ? rt = Gt : Se(rt, 0, 8), gt(new Le(je), Ze, rt);
        if (!($e = je.c))
          return null;
        if (ct = $e.length - 1, Bt = ct * fe + 1, ct = $e[ct]) {
          for (; ct % 10 == 0; ct /= 10, Bt--)
            ;
          for (ct = $e[0]; ct >= 10; ct /= 10, Bt++)
            ;
        }
        return Ze && je.e + 1 > Bt && (Bt = je.e + 1), Bt;
      }, Xe.shiftedBy = function(Ze) {
        return Se(Ze, -Be, Be), this.times("1e" + Ze);
      }, Xe.squareRoot = Xe.sqrt = function() {
        var Ze, rt, $e, Bt, ct, je = this, _e = je.c, Ie = je.s, Ce = je.e, ke = Qt + 4, Ve = new Le("0.5");
        if (Ie !== 1 || !_e || !_e[0])
          return new Le(!Ie || Ie < 0 && (!_e || _e[0]) ? NaN : _e ? je : 1 / 0);
        if (Ie = Math.sqrt(+Ut(je)), Ie == 0 || Ie == 1 / 0 ? (rt = Oe(_e), (rt.length + Ce) % 2 == 0 && (rt += "0"), Ie = Math.sqrt(+rt), Ce = be((Ce + 1) / 2) - (Ce < 0 || Ce % 2), Ie == 1 / 0 ? rt = "5e" + Ce : (rt = Ie.toExponential(), rt = rt.slice(0, rt.indexOf("e") + 1) + Ce), $e = new Le(rt)) : $e = new Le(Ie + ""), $e.c[0]) {
          for (Ce = $e.e, Ie = Ce + ke, Ie < 3 && (Ie = 0); ; )
            if (ct = $e, $e = Ve.times(ct.plus(tt(je, ct, ke, 1))), Oe(ct.c).slice(0, Ie) === (rt = Oe($e.c)).slice(0, Ie))
              if ($e.e < Ce && --Ie, rt = rt.slice(Ie - 3, Ie + 1), rt == "9999" || !Bt && rt == "4999") {
                if (!Bt && (gt(ct, ct.e + Qt + 2, 0), ct.times(ct).eq(je))) {
                  $e = ct;
                  break;
                }
                ke += 4, Ie += 4, Bt = 1;
              } else {
                (!+rt || !+rt.slice(1) && rt.charAt(0) == "5") && (gt($e, $e.e + Qt + 2, 1), Ze = !$e.times($e).eq(je));
                break;
              }
        }
        return gt($e, $e.e + Qt + 1, Gt, Ze);
      }, Xe.toExponential = function(Ze, rt) {
        return Ze != null && (Se(Ze, 0, ge), Ze++), or(this, Ze, rt, 1);
      }, Xe.toFixed = function(Ze, rt) {
        return Ze != null && (Se(Ze, 0, ge), Ze = Ze + this.e + 1), or(this, Ze, rt);
      }, Xe.toFormat = function(Ze, rt, $e) {
        var Bt, ct = this;
        if ($e == null)
          Ze != null && rt && typeof rt == "object" ? ($e = rt, rt = null) : Ze && typeof Ze == "object" ? ($e = Ze, Ze = rt = null) : $e = yt;
        else if (typeof $e != "object")
          throw Error(le + "Argument not an object: " + $e);
        if (Bt = ct.toFixed(Ze, rt), ct.c) {
          var je, _e = Bt.split("."), Ie = +$e.groupSize, Ce = +$e.secondaryGroupSize, ke = $e.groupSeparator || "", Ve = _e[0], Ke = _e[1], ot = ct.s < 0, St = ot ? Ve.slice(1) : Ve, Vt = St.length;
          if (Ce && (je = Ie, Ie = Ce, Ce = je, Vt -= je), Ie > 0 && Vt > 0) {
            for (je = Vt % Ie || Ie, Ve = St.substr(0, je); je < Vt; je += Ie)
              Ve += ke + St.substr(je, Ie);
            Ce > 0 && (Ve += ke + St.slice(je)), ot && (Ve = "-" + Ve);
          }
          Bt = Ke ? Ve + ($e.decimalSeparator || "") + ((Ce = +$e.fractionGroupSize) ? Ke.replace(
            new RegExp("\\d{" + Ce + "}\\B", "g"),
            "$&" + ($e.fractionGroupSeparator || "")
          ) : Ke) : Ve;
        }
        return ($e.prefix || "") + Bt + ($e.suffix || "");
      }, Xe.toFraction = function(Ze) {
        var rt, $e, Bt, ct, je, _e, Ie, Ce, ke, Ve, Ke, ot, St = this, Vt = St.c;
        if (Ze != null && (Ie = new Le(Ze), !Ie.isInteger() && (Ie.c || Ie.s !== 1) || Ie.lt(ht)))
          throw Error(le + "Argument " + (Ie.isInteger() ? "out of range: " : "not an integer: ") + Ut(Ie));
        if (!Vt)
          return new Le(St);
        for (rt = new Le(ht), ke = $e = new Le(ht), Bt = Ce = new Le(ht), ot = Oe(Vt), je = rt.e = ot.length - St.e - 1, rt.c[0] = Ee[(_e = je % fe) < 0 ? fe + _e : _e], Ze = !Ze || Ie.comparedTo(rt) > 0 ? je > 0 ? rt : ke : Ie, _e = Jt, Jt = 1 / 0, Ie = new Le(ot), Ce.c[0] = 0; Ve = tt(Ie, rt, 0, 1), ct = $e.plus(Ve.times(Bt)), ct.comparedTo(Ze) != 1; )
          $e = Bt, Bt = ct, ke = Ce.plus(Ve.times(ct = ke)), Ce = ct, rt = Ie.minus(Ve.times(ct = rt)), Ie = ct;
        return ct = tt(Ze.minus($e), Bt, 0, 1), Ce = Ce.plus(ct.times(ke)), $e = $e.plus(ct.times(Bt)), Ce.s = ke.s = St.s, je = je * 2, Ke = tt(ke, Bt, je, Gt).minus(St).abs().comparedTo(
          tt(Ce, $e, je, Gt).minus(St).abs()
        ) < 1 ? [ke, Bt] : [Ce, $e], Jt = _e, Ke;
      }, Xe.toNumber = function() {
        return +Ut(this);
      }, Xe.toPrecision = function(Ze, rt) {
        return Ze != null && Se(Ze, 1, ge), or(this, Ze, rt, 2);
      }, Xe.toString = function(Ze) {
        var rt, $e = this, Bt = $e.s, ct = $e.e;
        return ct === null ? Bt ? (rt = "Infinity", Bt < 0 && (rt = "-" + rt)) : rt = "NaN" : (Ze == null ? rt = ct <= pt || ct >= xt ? Fe(Oe($e.c), ct) : Pe(Oe($e.c), ct, "0") : Ze === 10 && $t ? ($e = gt(new Le($e), Qt + ct + 1, Gt), rt = Pe(Oe($e.c), $e.e, "0")) : (Se(Ze, 2, kt.length, "Base"), rt = ft(Pe(Oe($e.c), ct, "0"), 10, Ze, Bt, !0)), Bt < 0 && $e.c[0] && (rt = "-" + rt)), rt;
      }, Xe.valueOf = Xe.toJSON = function() {
        return Ut(this);
      }, Xe._isBigNumber = !0, Je != null && Le.set(Je), Le;
    }
    function be(Je) {
      var tt = Je | 0;
      return Je > 0 || Je === tt ? tt : tt - 1;
    }
    function Oe(Je) {
      for (var tt, ft, Tt = 1, Xe = Je.length, ht = Je[0] + ""; Tt < Xe; ) {
        for (tt = Je[Tt++] + "", ft = fe - tt.length; ft--; tt = "0" + tt)
          ;
        ht += tt;
      }
      for (Xe = ht.length; ht.charCodeAt(--Xe) === 48; )
        ;
      return ht.slice(0, Xe + 1 || 1);
    }
    function He(Je, tt) {
      var ft, Tt, Xe = Je.c, ht = tt.c, Qt = Je.s, Gt = tt.s, pt = Je.e, xt = tt.e;
      if (!Qt || !Gt)
        return null;
      if (ft = Xe && !Xe[0], Tt = ht && !ht[0], ft || Tt)
        return ft ? Tt ? 0 : -Gt : Qt;
      if (Qt != Gt)
        return Qt;
      if (ft = Qt < 0, Tt = pt == xt, !Xe || !ht)
        return Tt ? 0 : !Xe ^ ft ? 1 : -1;
      if (!Tt)
        return pt > xt ^ ft ? 1 : -1;
      for (Gt = (pt = Xe.length) < (xt = ht.length) ? pt : xt, Qt = 0; Qt < Gt; Qt++)
        if (Xe[Qt] != ht[Qt])
          return Xe[Qt] > ht[Qt] ^ ft ? 1 : -1;
      return pt == xt ? 0 : pt > xt ^ ft ? 1 : -1;
    }
    function Se(Je, tt, ft, Tt) {
      if (Je < tt || Je > ft || Je !== ce(Je))
        throw Error(le + (Tt || "Argument") + (typeof Je == "number" ? Je < tt || Je > ft ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(Je));
    }
    function Ge(Je) {
      var tt = Je.c.length - 1;
      return be(Je.e / fe) == tt && Je.c[tt] % 2 != 0;
    }
    function Fe(Je, tt) {
      return (Je.length > 1 ? Je.charAt(0) + "." + Je.slice(1) : Je) + (tt < 0 ? "e" : "e+") + tt;
    }
    function Pe(Je, tt, ft) {
      var Tt, Xe;
      if (tt < 0) {
        for (Xe = ft + "."; ++tt; Xe += ft)
          ;
        Je = Xe + Je;
      } else if (Tt = Je.length, ++tt > Tt) {
        for (Xe = ft, tt -= Tt; --tt; Xe += ft)
          ;
        Je += Xe;
      } else
        tt < Tt && (Je = Je.slice(0, tt) + "." + Je.slice(tt));
      return Je;
    }
    ne = we(), ne.default = ne.BigNumber = ne, Q.exports ? Q.exports = ne : (ee || (ee = typeof self < "u" && self ? self : window), ee.BigNumber = ne);
  })(commonjsGlobal);
})(bignumber);
var decoder_asm = function Q(ee, ne, ie) {
  var ae = new ee.Uint8Array(ie), ce = ne.pushInt, le = ne.pushInt32, de = ne.pushInt32Neg, ye = ne.pushInt64, fe = ne.pushInt64Neg, Be = ne.pushFloat, Ee = ne.pushFloatSingle, me = ne.pushFloatDouble, ge = ne.pushTrue, we = ne.pushFalse, be = ne.pushUndefined, Oe = ne.pushNull, He = ne.pushInfinity, Se = ne.pushInfinityNeg, Ge = ne.pushNaN, Fe = ne.pushNaNNeg, Pe = ne.pushArrayStart, Je = ne.pushArrayStartFixed, tt = ne.pushArrayStartFixed32, ft = ne.pushArrayStartFixed64, Tt = ne.pushObjectStart, Xe = ne.pushObjectStartFixed, ht = ne.pushObjectStartFixed32, Qt = ne.pushObjectStartFixed64, Gt = ne.pushByteString, pt = ne.pushByteStringStart, xt = ne.pushUtf8String, Yt = ne.pushUtf8StringStart, Jt = ne.pushSimpleUnassigned, Ht = ne.pushTagStart, Lt = ne.pushTagStart4, Pt = ne.pushTagStart8, yt = ne.pushTagUnassigned, kt = ne.pushBreak, $t = ee.Math.pow, Le = 0, or = 0, tr = 0;
  function lr(vt) {
    for (vt = vt | 0, Le = 0, or = vt; (Le | 0) < (or | 0) && (tr = $r[ae[Le] & 255](ae[Le] | 0) | 0, !((tr | 0) > 0)); )
      ;
    return tr | 0;
  }
  function gt(vt) {
    return vt = vt | 0, ((Le | 0) + (vt | 0) | 0) < (or | 0) ? 0 : 1;
  }
  function Ut(vt) {
    return vt = vt | 0, ae[vt | 0] << 8 | ae[vt + 1 | 0] | 0;
  }
  function Ze(vt) {
    return vt = vt | 0, ae[vt | 0] << 24 | ae[vt + 1 | 0] << 16 | ae[vt + 2 | 0] << 8 | ae[vt + 3 | 0] | 0;
  }
  function rt(vt) {
    return vt = vt | 0, ce(vt | 0), Le = Le + 1 | 0, 0;
  }
  function $e(vt) {
    return vt = vt | 0, gt(1) | 0 ? 1 : (ce(ae[Le + 1 | 0] | 0), Le = Le + 2 | 0, 0);
  }
  function Bt(vt) {
    return vt = vt | 0, gt(2) | 0 ? 1 : (ce(
      Ut(Le + 1 | 0) | 0
    ), Le = Le + 3 | 0, 0);
  }
  function ct(vt) {
    return vt = vt | 0, gt(4) | 0 ? 1 : (le(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0
    ), Le = Le + 5 | 0, 0);
  }
  function je(vt) {
    return vt = vt | 0, gt(8) | 0 ? 1 : (ye(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0,
      Ut(Le + 5 | 0) | 0,
      Ut(Le + 7 | 0) | 0
    ), Le = Le + 9 | 0, 0);
  }
  function _e(vt) {
    return vt = vt | 0, ce(-1 - (vt - 32 | 0) | 0), Le = Le + 1 | 0, 0;
  }
  function Ie(vt) {
    return vt = vt | 0, gt(1) | 0 ? 1 : (ce(
      -1 - (ae[Le + 1 | 0] | 0) | 0
    ), Le = Le + 2 | 0, 0);
  }
  function Ce(vt) {
    vt = vt | 0;
    var Ir = 0;
    return gt(2) | 0 ? 1 : (Ir = Ut(Le + 1 | 0) | 0, ce(-1 - (Ir | 0) | 0), Le = Le + 3 | 0, 0);
  }
  function ke(vt) {
    return vt = vt | 0, gt(4) | 0 ? 1 : (de(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0
    ), Le = Le + 5 | 0, 0);
  }
  function Ve(vt) {
    return vt = vt | 0, gt(8) | 0 ? 1 : (fe(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0,
      Ut(Le + 5 | 0) | 0,
      Ut(Le + 7 | 0) | 0
    ), Le = Le + 9 | 0, 0);
  }
  function Ke(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 0;
    return Hr = vt - 64 | 0, gt(Hr | 0) | 0 ? 1 : (Ir = Le + 1 | 0, Kt = (Le + 1 | 0) + (Hr | 0) | 0, Gt(Ir | 0, Kt | 0), Le = Kt | 0, 0);
  }
  function ot(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 0;
    return gt(1) | 0 || (Hr = ae[Le + 1 | 0] | 0, Ir = Le + 2 | 0, Kt = (Le + 2 | 0) + (Hr | 0) | 0, gt(Hr + 1 | 0) | 0) ? 1 : (Gt(Ir | 0, Kt | 0), Le = Kt | 0, 0);
  }
  function St(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 0;
    return gt(2) | 0 || (Hr = Ut(Le + 1 | 0) | 0, Ir = Le + 3 | 0, Kt = (Le + 3 | 0) + (Hr | 0) | 0, gt(Hr + 2 | 0) | 0) ? 1 : (Gt(Ir | 0, Kt | 0), Le = Kt | 0, 0);
  }
  function Vt(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 0;
    return gt(4) | 0 || (Hr = Ze(Le + 1 | 0) | 0, Ir = Le + 5 | 0, Kt = (Le + 5 | 0) + (Hr | 0) | 0, gt(Hr + 4 | 0) | 0) ? 1 : (Gt(Ir | 0, Kt | 0), Le = Kt | 0, 0);
  }
  function zt(vt) {
    return vt = vt | 0, 1;
  }
  function Wt(vt) {
    return vt = vt | 0, pt(), Le = Le + 1 | 0, 0;
  }
  function qe(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 0;
    return Hr = vt - 96 | 0, gt(Hr | 0) | 0 ? 1 : (Ir = Le + 1 | 0, Kt = (Le + 1 | 0) + (Hr | 0) | 0, xt(Ir | 0, Kt | 0), Le = Kt | 0, 0);
  }
  function Te(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 0;
    return gt(1) | 0 || (Hr = ae[Le + 1 | 0] | 0, Ir = Le + 2 | 0, Kt = (Le + 2 | 0) + (Hr | 0) | 0, gt(Hr + 1 | 0) | 0) ? 1 : (xt(Ir | 0, Kt | 0), Le = Kt | 0, 0);
  }
  function Re(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 0;
    return gt(2) | 0 || (Hr = Ut(Le + 1 | 0) | 0, Ir = Le + 3 | 0, Kt = (Le + 3 | 0) + (Hr | 0) | 0, gt(Hr + 2 | 0) | 0) ? 1 : (xt(Ir | 0, Kt | 0), Le = Kt | 0, 0);
  }
  function it(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 0;
    return gt(4) | 0 || (Hr = Ze(Le + 1 | 0) | 0, Ir = Le + 5 | 0, Kt = (Le + 5 | 0) + (Hr | 0) | 0, gt(Hr + 4 | 0) | 0) ? 1 : (xt(Ir | 0, Kt | 0), Le = Kt | 0, 0);
  }
  function Ct(vt) {
    return vt = vt | 0, 1;
  }
  function Nt(vt) {
    return vt = vt | 0, Yt(), Le = Le + 1 | 0, 0;
  }
  function Dt(vt) {
    return vt = vt | 0, Je(vt - 128 | 0), Le = Le + 1 | 0, 0;
  }
  function Er(vt) {
    return vt = vt | 0, gt(1) | 0 ? 1 : (Je(ae[Le + 1 | 0] | 0), Le = Le + 2 | 0, 0);
  }
  function gr(vt) {
    return vt = vt | 0, gt(2) | 0 ? 1 : (Je(
      Ut(Le + 1 | 0) | 0
    ), Le = Le + 3 | 0, 0);
  }
  function Cr(vt) {
    return vt = vt | 0, gt(4) | 0 ? 1 : (tt(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0
    ), Le = Le + 5 | 0, 0);
  }
  function mr(vt) {
    return vt = vt | 0, gt(8) | 0 ? 1 : (ft(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0,
      Ut(Le + 5 | 0) | 0,
      Ut(Le + 7 | 0) | 0
    ), Le = Le + 9 | 0, 0);
  }
  function wr(vt) {
    return vt = vt | 0, Pe(), Le = Le + 1 | 0, 0;
  }
  function en(vt) {
    vt = vt | 0;
    var Ir = 0;
    return Ir = vt - 160 | 0, gt(Ir | 0) | 0 ? 1 : (Xe(Ir | 0), Le = Le + 1 | 0, 0);
  }
  function Wn(vt) {
    return vt = vt | 0, gt(1) | 0 ? 1 : (Xe(ae[Le + 1 | 0] | 0), Le = Le + 2 | 0, 0);
  }
  function on(vt) {
    return vt = vt | 0, gt(2) | 0 ? 1 : (Xe(
      Ut(Le + 1 | 0) | 0
    ), Le = Le + 3 | 0, 0);
  }
  function qn(vt) {
    return vt = vt | 0, gt(4) | 0 ? 1 : (ht(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0
    ), Le = Le + 5 | 0, 0);
  }
  function $n(vt) {
    return vt = vt | 0, gt(8) | 0 ? 1 : (Qt(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0,
      Ut(Le + 5 | 0) | 0,
      Ut(Le + 7 | 0) | 0
    ), Le = Le + 9 | 0, 0);
  }
  function Pn(vt) {
    return vt = vt | 0, Tt(), Le = Le + 1 | 0, 0;
  }
  function Un(vt) {
    return vt = vt | 0, Ht(vt - 192 | 0 | 0), Le = Le + 1 | 0, 0;
  }
  function ai(vt) {
    return vt = vt | 0, Ht(vt | 0), Le = Le + 1 | 0, 0;
  }
  function pi(vt) {
    return vt = vt | 0, Ht(vt | 0), Le = Le + 1 | 0, 0;
  }
  function Wi(vt) {
    return vt = vt | 0, Ht(vt | 0), Le = Le + 1 | 0, 0;
  }
  function Ti(vt) {
    return vt = vt | 0, Ht(vt | 0), Le = Le + 1 | 0, 0;
  }
  function Hn(vt) {
    return vt = vt | 0, Ht(vt - 192 | 0 | 0), Le = Le + 1 | 0, 0;
  }
  function Kn(vt) {
    return vt = vt | 0, Ht(vt | 0), Le = Le + 1 | 0, 0;
  }
  function Ln(vt) {
    return vt = vt | 0, Ht(vt | 0), Le = Le + 1 | 0, 0;
  }
  function si(vt) {
    return vt = vt | 0, Ht(vt | 0), Le = Le + 1 | 0, 0;
  }
  function gi(vt) {
    return vt = vt | 0, gt(1) | 0 ? 1 : (Ht(ae[Le + 1 | 0] | 0), Le = Le + 2 | 0, 0);
  }
  function mi(vt) {
    return vt = vt | 0, gt(2) | 0 ? 1 : (Ht(
      Ut(Le + 1 | 0) | 0
    ), Le = Le + 3 | 0, 0);
  }
  function Ei(vt) {
    return vt = vt | 0, gt(4) | 0 ? 1 : (Lt(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0
    ), Le = Le + 5 | 0, 0);
  }
  function Rt(vt) {
    return vt = vt | 0, gt(8) | 0 ? 1 : (Pt(
      Ut(Le + 1 | 0) | 0,
      Ut(Le + 3 | 0) | 0,
      Ut(Le + 5 | 0) | 0,
      Ut(Le + 7 | 0) | 0
    ), Le = Le + 9 | 0, 0);
  }
  function rr(vt) {
    return vt = vt | 0, Jt((vt | 0) - 224 | 0), Le = Le + 1 | 0, 0;
  }
  function Mr(vt) {
    return vt = vt | 0, we(), Le = Le + 1 | 0, 0;
  }
  function an(vt) {
    return vt = vt | 0, ge(), Le = Le + 1 | 0, 0;
  }
  function Bn(vt) {
    return vt = vt | 0, Oe(), Le = Le + 1 | 0, 0;
  }
  function In(vt) {
    return vt = vt | 0, be(), Le = Le + 1 | 0, 0;
  }
  function vn(vt) {
    return vt = vt | 0, gt(1) | 0 ? 1 : (Jt(ae[Le + 1 | 0] | 0), Le = Le + 2 | 0, 0);
  }
  function fn(vt) {
    vt = vt | 0;
    var Ir = 0, Kt = 0, Hr = 1, De = 0, We = 0, at = 0;
    return gt(2) | 0 ? 1 : (Ir = ae[Le + 1 | 0] | 0, Kt = ae[Le + 2 | 0] | 0, (Ir | 0) & 128 && (Hr = -1), De = +(((Ir | 0) & 124) >> 2), We = +(((Ir | 0) & 3) << 8 | Kt), +De == 0 ? Be(+(+Hr * 5960464477539063e-23 * +We)) : +De == 31 ? +Hr == 1 ? +We > 0 ? Ge() : He() : +We > 0 ? Fe() : Se() : Be(+(+Hr * $t(2, +(+De - 25)) * +(1024 + We))), Le = Le + 3 | 0, 0);
  }
  function _n(vt) {
    return vt = vt | 0, gt(4) | 0 ? 1 : (Ee(
      ae[Le + 1 | 0] | 0,
      ae[Le + 2 | 0] | 0,
      ae[Le + 3 | 0] | 0,
      ae[Le + 4 | 0] | 0
    ), Le = Le + 5 | 0, 0);
  }
  function jn(vt) {
    return vt = vt | 0, gt(8) | 0 ? 1 : (me(
      ae[Le + 1 | 0] | 0,
      ae[Le + 2 | 0] | 0,
      ae[Le + 3 | 0] | 0,
      ae[Le + 4 | 0] | 0,
      ae[Le + 5 | 0] | 0,
      ae[Le + 6 | 0] | 0,
      ae[Le + 7 | 0] | 0,
      ae[Le + 8 | 0] | 0
    ), Le = Le + 9 | 0, 0);
  }
  function Zr(vt) {
    return vt = vt | 0, 1;
  }
  function Kr(vt) {
    return vt = vt | 0, kt(), Le = Le + 1 | 0, 0;
  }
  var $r = [
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    rt,
    $e,
    Bt,
    ct,
    je,
    Zr,
    Zr,
    Zr,
    Zr,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    Ie,
    Ce,
    ke,
    Ve,
    Zr,
    Zr,
    Zr,
    Zr,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    Ke,
    ot,
    St,
    Vt,
    zt,
    Zr,
    Zr,
    Zr,
    Wt,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    qe,
    Te,
    Re,
    it,
    Ct,
    Zr,
    Zr,
    Zr,
    Nt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Dt,
    Er,
    gr,
    Cr,
    mr,
    Zr,
    Zr,
    Zr,
    wr,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    en,
    Wn,
    on,
    qn,
    $n,
    Zr,
    Zr,
    Zr,
    Pn,
    Un,
    Un,
    Un,
    Un,
    Un,
    Un,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    Hn,
    gi,
    mi,
    Ei,
    Rt,
    Zr,
    Zr,
    Zr,
    Zr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    rr,
    Mr,
    an,
    Bn,
    In,
    vn,
    fn,
    _n,
    jn,
    Zr,
    Zr,
    Zr,
    Kr
  ];
  return {
    parse: lr
  };
}, utils$3 = {}, constants$3 = {};
const Bignumber$2 = bignumber.exports.BigNumber;
constants$3.MT = {
  POS_INT: 0,
  NEG_INT: 1,
  BYTE_STRING: 2,
  UTF8_STRING: 3,
  ARRAY: 4,
  MAP: 5,
  TAG: 6,
  SIMPLE_FLOAT: 7
};
constants$3.TAG = {
  DATE_STRING: 0,
  DATE_EPOCH: 1,
  POS_BIGINT: 2,
  NEG_BIGINT: 3,
  DECIMAL_FRAC: 4,
  BIGFLOAT: 5,
  BASE64URL_EXPECTED: 21,
  BASE64_EXPECTED: 22,
  BASE16_EXPECTED: 23,
  CBOR: 24,
  URI: 32,
  BASE64URL: 33,
  BASE64: 34,
  REGEXP: 35,
  MIME: 36
};
constants$3.NUMBYTES = {
  ZERO: 0,
  ONE: 24,
  TWO: 25,
  FOUR: 26,
  EIGHT: 27,
  INDEFINITE: 31
};
constants$3.SIMPLE = {
  FALSE: 20,
  TRUE: 21,
  NULL: 22,
  UNDEFINED: 23
};
constants$3.SYMS = {
  NULL: Symbol("null"),
  UNDEFINED: Symbol("undef"),
  PARENT: Symbol("parent"),
  BREAK: Symbol("break"),
  STREAM: Symbol("stream")
};
constants$3.SHIFT32 = Math.pow(2, 32);
constants$3.SHIFT16 = Math.pow(2, 16);
constants$3.MAX_SAFE_HIGH = 2097151;
constants$3.NEG_ONE = new Bignumber$2(-1);
constants$3.TEN = new Bignumber$2(10);
constants$3.TWO = new Bignumber$2(2);
constants$3.PARENT = {
  ARRAY: 0,
  OBJECT: 1,
  MAP: 2,
  TAG: 3,
  BYTE_STRING: 4,
  UTF8_STRING: 5
};
(function(Q) {
  const { Buffer: ee } = buffer, ne = bignumber.exports.BigNumber, ie = constants$3, ae = ie.SHIFT32, ce = ie.SHIFT16, le = 2097151;
  Q.parseHalf = function(fe) {
    var Be, Ee, me;
    return me = fe[0] & 128 ? -1 : 1, Be = (fe[0] & 124) >> 2, Ee = (fe[0] & 3) << 8 | fe[1], Be ? Be === 31 ? me * (Ee ? 0 / 0 : 1 / 0) : me * Math.pow(2, Be - 25) * (1024 + Ee) : me * 5960464477539063e-23 * Ee;
  };
  function de(ye) {
    return ye < 16 ? "0" + ye.toString(16) : ye.toString(16);
  }
  Q.arrayBufferToBignumber = function(ye) {
    const fe = ye.byteLength;
    let Be = "";
    for (let Ee = 0; Ee < fe; Ee++)
      Be += de(ye[Ee]);
    return new ne(Be, 16);
  }, Q.buildMap = (ye) => {
    const fe = /* @__PURE__ */ new Map(), Be = Object.keys(ye), Ee = Be.length;
    for (let me = 0; me < Ee; me++)
      fe.set(Be[me], ye[Be[me]]);
    return fe;
  }, Q.buildInt32 = (ye, fe) => ye * ce + fe, Q.buildInt64 = (ye, fe, Be, Ee) => {
    const me = Q.buildInt32(ye, fe), ge = Q.buildInt32(Be, Ee);
    return me > le ? new ne(me).times(ae).plus(ge) : me * ae + ge;
  }, Q.writeHalf = function(fe, Be) {
    const Ee = ee.allocUnsafe(4);
    Ee.writeFloatBE(Be, 0);
    const me = Ee.readUInt32BE(0);
    if ((me & 8191) !== 0)
      return !1;
    var ge = me >> 16 & 32768;
    const we = me >> 23 & 255, be = me & 8388607;
    if (we >= 113 && we <= 142)
      ge += (we - 112 << 10) + (be >> 13);
    else if (we >= 103 && we < 113) {
      if (be & (1 << 126 - we) - 1)
        return !1;
      ge += be + 8388608 >> 126 - we;
    } else
      return !1;
    return fe.writeUInt16BE(ge, 0), !0;
  }, Q.keySorter = function(ye, fe) {
    var Be = ye[0].byteLength, Ee = fe[0].byteLength;
    return Be > Ee ? 1 : Ee > Be ? -1 : ye[0].compare(fe[0]);
  }, Q.isNegativeZero = (ye) => ye === 0 && 1 / ye < 0, Q.nextPowerOf2 = (ye) => {
    let fe = 0;
    if (ye && !(ye & ye - 1))
      return ye;
    for (; ye !== 0; )
      ye >>= 1, fe += 1;
    return 1 << fe;
  };
})(utils$3);
const constants$2 = constants$3, MT$1 = constants$2.MT, SIMPLE = constants$2.SIMPLE, SYMS$1 = constants$2.SYMS;
class Simple$1 {
  constructor(ee) {
    if (typeof ee != "number")
      throw new Error("Invalid Simple type: " + typeof ee);
    if (ee < 0 || ee > 255 || (ee | 0) !== ee)
      throw new Error("value must be a small positive integer: " + ee);
    this.value = ee;
  }
  toString() {
    return "simple(" + this.value + ")";
  }
  inspect() {
    return "simple(" + this.value + ")";
  }
  encodeCBOR(ee) {
    return ee._pushInt(this.value, MT$1.SIMPLE_FLOAT);
  }
  static isSimple(ee) {
    return ee instanceof Simple$1;
  }
  static decode(ee, ne) {
    switch (ne == null && (ne = !0), ee) {
      case SIMPLE.FALSE:
        return !1;
      case SIMPLE.TRUE:
        return !0;
      case SIMPLE.NULL:
        return ne ? null : SYMS$1.NULL;
      case SIMPLE.UNDEFINED:
        return ne ? void 0 : SYMS$1.UNDEFINED;
      case -1:
        if (!ne)
          throw new Error("Invalid BREAK");
        return SYMS$1.BREAK;
      default:
        return new Simple$1(ee);
    }
  }
}
var simple = Simple$1;
class Tagged$1 {
  constructor(ee, ne, ie) {
    if (this.tag = ee, this.value = ne, this.err = ie, typeof this.tag != "number")
      throw new Error("Invalid tag type (" + typeof this.tag + ")");
    if (this.tag < 0 || (this.tag | 0) !== this.tag)
      throw new Error("Tag must be a positive integer: " + this.tag);
  }
  toString() {
    return `${this.tag}(${JSON.stringify(this.value)})`;
  }
  encodeCBOR(ee) {
    return ee._pushTag(this.tag), ee.pushAny(this.value);
  }
  convert(ee) {
    var ne, ie;
    if (ie = ee != null ? ee[this.tag] : void 0, typeof ie != "function" && (ie = Tagged$1["_tag" + this.tag], typeof ie != "function"))
      return this;
    try {
      return ie.call(Tagged$1, this.value);
    } catch (ae) {
      return ne = ae, this.err = ne, this;
    }
  }
}
var tagged$1 = Tagged$1;
const defaultBase$1 = self.location ? self.location.protocol + "//" + self.location.host : "", URL$3 = self.URL;
class URLWithLegacySupport$2 {
  constructor(ee = "", ne = defaultBase$1) {
    this.super = new URL$3(ee, ne), this.path = this.pathname + this.search, this.auth = this.username && this.password ? this.username + ":" + this.password : null, this.query = this.search && this.search.startsWith("?") ? this.search.slice(1) : null;
  }
  get hash() {
    return this.super.hash;
  }
  get host() {
    return this.super.host;
  }
  get hostname() {
    return this.super.hostname;
  }
  get href() {
    return this.super.href;
  }
  get origin() {
    return this.super.origin;
  }
  get password() {
    return this.super.password;
  }
  get pathname() {
    return this.super.pathname;
  }
  get port() {
    return this.super.port;
  }
  get protocol() {
    return this.super.protocol;
  }
  get search() {
    return this.super.search;
  }
  get searchParams() {
    return this.super.searchParams;
  }
  get username() {
    return this.super.username;
  }
  set hash(ee) {
    this.super.hash = ee;
  }
  set host(ee) {
    this.super.host = ee;
  }
  set hostname(ee) {
    this.super.hostname = ee;
  }
  set href(ee) {
    this.super.href = ee;
  }
  set origin(ee) {
    this.super.origin = ee;
  }
  set password(ee) {
    this.super.password = ee;
  }
  set pathname(ee) {
    this.super.pathname = ee;
  }
  set port(ee) {
    this.super.port = ee;
  }
  set protocol(ee) {
    this.super.protocol = ee;
  }
  set search(ee) {
    this.super.search = ee;
  }
  set searchParams(ee) {
    this.super.searchParams = ee;
  }
  set username(ee) {
    this.super.username = ee;
  }
  createObjectURL(ee) {
    return this.super.createObjectURL(ee);
  }
  revokeObjectURL(ee) {
    this.super.revokeObjectURL(ee);
  }
  toJSON() {
    return this.super.toJSON();
  }
  toString() {
    return this.super.toString();
  }
  format() {
    return this.toString();
  }
}
function format$3(Q) {
  if (typeof Q == "string")
    return new URL$3(Q).toString();
  if (!(Q instanceof URL$3)) {
    const ee = Q.username && Q.password ? `${Q.username}:${Q.password}@` : "", ne = Q.auth ? Q.auth + "@" : "", ie = Q.port ? ":" + Q.port : "", ae = Q.protocol ? Q.protocol + "//" : "", ce = Q.host || "", le = Q.hostname || "", de = Q.search || (Q.query ? "?" + Q.query : ""), ye = Q.hash || "", fe = Q.pathname || "", Be = Q.path || fe + de;
    return `${ae}${ee || ne}${ce || le + ie}${Be}${ye}`;
  }
}
var urlBrowser = {
  URLWithLegacySupport: URLWithLegacySupport$2,
  URLSearchParams: self.URLSearchParams,
  defaultBase: defaultBase$1,
  format: format$3
};
const { URLWithLegacySupport: URLWithLegacySupport$1, format: format$2 } = urlBrowser;
var relative$1 = (Q, ee = {}, ne = {}, ie) => {
  let ae = ee.protocol ? ee.protocol.replace(":", "") : "http";
  ae = (ne[ae] || ie || ae) + ":";
  let ce;
  try {
    ce = new URLWithLegacySupport$1(Q);
  } catch {
    ce = {};
  }
  const le = Object.assign({}, ee, {
    protocol: ae || ce.protocol,
    host: ee.host || ce.host
  });
  return new URLWithLegacySupport$1(Q, format$2(le)).toString();
};
const {
  URLWithLegacySupport,
  format: format$1,
  URLSearchParams: URLSearchParams$1,
  defaultBase
} = urlBrowser, relative = relative$1;
var isoUrl = {
  URL: URLWithLegacySupport,
  URLSearchParams: URLSearchParams$1,
  format: format$1,
  relative,
  defaultBase
};
const { Buffer: Buffer$4 } = buffer, ieee754 = ieee754$1, Bignumber$1 = bignumber.exports.BigNumber, parser = decoder_asm, utils$2 = utils$3, c = constants$3, Simple = simple, Tagged = tagged$1, { URL: URL$2 } = isoUrl;
class Decoder$1 {
  constructor(ee) {
    ee = ee || {}, !ee.size || ee.size < 65536 ? ee.size = 65536 : ee.size = utils$2.nextPowerOf2(ee.size), this._heap = new ArrayBuffer(ee.size), this._heap8 = new Uint8Array(this._heap), this._buffer = Buffer$4.from(this._heap), this._reset(), this._knownTags = Object.assign({
      0: (ne) => new Date(ne),
      1: (ne) => new Date(ne * 1e3),
      2: (ne) => utils$2.arrayBufferToBignumber(ne),
      3: (ne) => c.NEG_ONE.minus(utils$2.arrayBufferToBignumber(ne)),
      4: (ne) => c.TEN.pow(ne[0]).times(ne[1]),
      5: (ne) => c.TWO.pow(ne[0]).times(ne[1]),
      32: (ne) => new URL$2(ne),
      35: (ne) => new RegExp(ne)
    }, ee.tags), this.parser = parser(commonjsGlobal, {
      log: console.log.bind(console),
      pushInt: this.pushInt.bind(this),
      pushInt32: this.pushInt32.bind(this),
      pushInt32Neg: this.pushInt32Neg.bind(this),
      pushInt64: this.pushInt64.bind(this),
      pushInt64Neg: this.pushInt64Neg.bind(this),
      pushFloat: this.pushFloat.bind(this),
      pushFloatSingle: this.pushFloatSingle.bind(this),
      pushFloatDouble: this.pushFloatDouble.bind(this),
      pushTrue: this.pushTrue.bind(this),
      pushFalse: this.pushFalse.bind(this),
      pushUndefined: this.pushUndefined.bind(this),
      pushNull: this.pushNull.bind(this),
      pushInfinity: this.pushInfinity.bind(this),
      pushInfinityNeg: this.pushInfinityNeg.bind(this),
      pushNaN: this.pushNaN.bind(this),
      pushNaNNeg: this.pushNaNNeg.bind(this),
      pushArrayStart: this.pushArrayStart.bind(this),
      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),
      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),
      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),
      pushObjectStart: this.pushObjectStart.bind(this),
      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),
      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),
      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),
      pushByteString: this.pushByteString.bind(this),
      pushByteStringStart: this.pushByteStringStart.bind(this),
      pushUtf8String: this.pushUtf8String.bind(this),
      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),
      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),
      pushTagUnassigned: this.pushTagUnassigned.bind(this),
      pushTagStart: this.pushTagStart.bind(this),
      pushTagStart4: this.pushTagStart4.bind(this),
      pushTagStart8: this.pushTagStart8.bind(this),
      pushBreak: this.pushBreak.bind(this)
    }, this._heap);
  }
  get _depth() {
    return this._parents.length;
  }
  get _currentParent() {
    return this._parents[this._depth - 1];
  }
  get _ref() {
    return this._currentParent.ref;
  }
  _closeParent() {
    var ee = this._parents.pop();
    if (ee.length > 0)
      throw new Error(`Missing ${ee.length} elements`);
    switch (ee.type) {
      case c.PARENT.TAG:
        this._push(
          this.createTag(ee.ref[0], ee.ref[1])
        );
        break;
      case c.PARENT.BYTE_STRING:
        this._push(this.createByteString(ee.ref, ee.length));
        break;
      case c.PARENT.UTF8_STRING:
        this._push(this.createUtf8String(ee.ref, ee.length));
        break;
      case c.PARENT.MAP:
        if (ee.values % 2 > 0)
          throw new Error("Odd number of elements in the map");
        this._push(this.createMap(ee.ref, ee.length));
        break;
      case c.PARENT.OBJECT:
        if (ee.values % 2 > 0)
          throw new Error("Odd number of elements in the map");
        this._push(this.createObject(ee.ref, ee.length));
        break;
      case c.PARENT.ARRAY:
        this._push(this.createArray(ee.ref, ee.length));
        break;
    }
    this._currentParent && this._currentParent.type === c.PARENT.TAG && this._dec();
  }
  _dec() {
    const ee = this._currentParent;
    ee.length < 0 || (ee.length--, ee.length === 0 && this._closeParent());
  }
  _push(ee, ne) {
    const ie = this._currentParent;
    switch (ie.values++, ie.type) {
      case c.PARENT.ARRAY:
      case c.PARENT.BYTE_STRING:
      case c.PARENT.UTF8_STRING:
        ie.length > -1 ? this._ref[this._ref.length - ie.length] = ee : this._ref.push(ee), this._dec();
        break;
      case c.PARENT.OBJECT:
        ie.tmpKey != null ? (this._ref[ie.tmpKey] = ee, ie.tmpKey = null, this._dec()) : (ie.tmpKey = ee, typeof ie.tmpKey != "string" && (ie.type = c.PARENT.MAP, ie.ref = utils$2.buildMap(ie.ref)));
        break;
      case c.PARENT.MAP:
        ie.tmpKey != null ? (this._ref.set(ie.tmpKey, ee), ie.tmpKey = null, this._dec()) : ie.tmpKey = ee;
        break;
      case c.PARENT.TAG:
        this._ref.push(ee), ne || this._dec();
        break;
      default:
        throw new Error("Unknown parent type");
    }
  }
  _createParent(ee, ne, ie) {
    this._parents[this._depth] = {
      type: ne,
      length: ie,
      ref: ee,
      values: 0,
      tmpKey: null
    };
  }
  _reset() {
    this._res = [], this._parents = [{
      type: c.PARENT.ARRAY,
      length: -1,
      ref: this._res,
      values: 0,
      tmpKey: null
    }];
  }
  createTag(ee, ne) {
    const ie = this._knownTags[ee];
    return ie ? ie(ne) : new Tagged(ee, ne);
  }
  createMap(ee, ne) {
    return ee;
  }
  createObject(ee, ne) {
    return ee;
  }
  createArray(ee, ne) {
    return ee;
  }
  createByteString(ee, ne) {
    return Buffer$4.concat(ee);
  }
  createByteStringFromHeap(ee, ne) {
    return ee === ne ? Buffer$4.alloc(0) : Buffer$4.from(this._heap.slice(ee, ne));
  }
  createInt(ee) {
    return ee;
  }
  createInt32(ee, ne) {
    return utils$2.buildInt32(ee, ne);
  }
  createInt64(ee, ne, ie, ae) {
    return utils$2.buildInt64(ee, ne, ie, ae);
  }
  createFloat(ee) {
    return ee;
  }
  createFloatSingle(ee, ne, ie, ae) {
    return ieee754.read([ee, ne, ie, ae], 0, !1, 23, 4);
  }
  createFloatDouble(ee, ne, ie, ae, ce, le, de, ye) {
    return ieee754.read([ee, ne, ie, ae, ce, le, de, ye], 0, !1, 52, 8);
  }
  createInt32Neg(ee, ne) {
    return -1 - utils$2.buildInt32(ee, ne);
  }
  createInt64Neg(ee, ne, ie, ae) {
    const ce = utils$2.buildInt32(ee, ne), le = utils$2.buildInt32(ie, ae);
    return ce > c.MAX_SAFE_HIGH ? c.NEG_ONE.minus(new Bignumber$1(ce).times(c.SHIFT32).plus(le)) : -1 - (ce * c.SHIFT32 + le);
  }
  createTrue() {
    return !0;
  }
  createFalse() {
    return !1;
  }
  createNull() {
    return null;
  }
  createUndefined() {
  }
  createInfinity() {
    return 1 / 0;
  }
  createInfinityNeg() {
    return -1 / 0;
  }
  createNaN() {
    return NaN;
  }
  createNaNNeg() {
    return NaN;
  }
  createUtf8String(ee, ne) {
    return ee.join("");
  }
  createUtf8StringFromHeap(ee, ne) {
    return ee === ne ? "" : this._buffer.toString("utf8", ee, ne);
  }
  createSimpleUnassigned(ee) {
    return new Simple(ee);
  }
  pushInt(ee) {
    this._push(this.createInt(ee));
  }
  pushInt32(ee, ne) {
    this._push(this.createInt32(ee, ne));
  }
  pushInt64(ee, ne, ie, ae) {
    this._push(this.createInt64(ee, ne, ie, ae));
  }
  pushFloat(ee) {
    this._push(this.createFloat(ee));
  }
  pushFloatSingle(ee, ne, ie, ae) {
    this._push(this.createFloatSingle(ee, ne, ie, ae));
  }
  pushFloatDouble(ee, ne, ie, ae, ce, le, de, ye) {
    this._push(this.createFloatDouble(ee, ne, ie, ae, ce, le, de, ye));
  }
  pushInt32Neg(ee, ne) {
    this._push(this.createInt32Neg(ee, ne));
  }
  pushInt64Neg(ee, ne, ie, ae) {
    this._push(this.createInt64Neg(ee, ne, ie, ae));
  }
  pushTrue() {
    this._push(this.createTrue());
  }
  pushFalse() {
    this._push(this.createFalse());
  }
  pushNull() {
    this._push(this.createNull());
  }
  pushUndefined() {
    this._push(this.createUndefined());
  }
  pushInfinity() {
    this._push(this.createInfinity());
  }
  pushInfinityNeg() {
    this._push(this.createInfinityNeg());
  }
  pushNaN() {
    this._push(this.createNaN());
  }
  pushNaNNeg() {
    this._push(this.createNaNNeg());
  }
  pushArrayStart() {
    this._createParent([], c.PARENT.ARRAY, -1);
  }
  pushArrayStartFixed(ee) {
    this._createArrayStartFixed(ee);
  }
  pushArrayStartFixed32(ee, ne) {
    const ie = utils$2.buildInt32(ee, ne);
    this._createArrayStartFixed(ie);
  }
  pushArrayStartFixed64(ee, ne, ie, ae) {
    const ce = utils$2.buildInt64(ee, ne, ie, ae);
    this._createArrayStartFixed(ce);
  }
  pushObjectStart() {
    this._createObjectStartFixed(-1);
  }
  pushObjectStartFixed(ee) {
    this._createObjectStartFixed(ee);
  }
  pushObjectStartFixed32(ee, ne) {
    const ie = utils$2.buildInt32(ee, ne);
    this._createObjectStartFixed(ie);
  }
  pushObjectStartFixed64(ee, ne, ie, ae) {
    const ce = utils$2.buildInt64(ee, ne, ie, ae);
    this._createObjectStartFixed(ce);
  }
  pushByteStringStart() {
    this._parents[this._depth] = {
      type: c.PARENT.BYTE_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    };
  }
  pushByteString(ee, ne) {
    this._push(this.createByteStringFromHeap(ee, ne));
  }
  pushUtf8StringStart() {
    this._parents[this._depth] = {
      type: c.PARENT.UTF8_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    };
  }
  pushUtf8String(ee, ne) {
    this._push(this.createUtf8StringFromHeap(ee, ne));
  }
  pushSimpleUnassigned(ee) {
    this._push(this.createSimpleUnassigned(ee));
  }
  pushTagStart(ee) {
    this._parents[this._depth] = {
      type: c.PARENT.TAG,
      length: 1,
      ref: [ee]
    };
  }
  pushTagStart4(ee, ne) {
    this.pushTagStart(utils$2.buildInt32(ee, ne));
  }
  pushTagStart8(ee, ne, ie, ae) {
    this.pushTagStart(utils$2.buildInt64(ee, ne, ie, ae));
  }
  pushTagUnassigned(ee) {
    this._push(this.createTag(ee));
  }
  pushBreak() {
    if (this._currentParent.length > -1)
      throw new Error("Unexpected break");
    this._closeParent();
  }
  _createObjectStartFixed(ee) {
    if (ee === 0) {
      this._push(this.createObject({}));
      return;
    }
    this._createParent({}, c.PARENT.OBJECT, ee);
  }
  _createArrayStartFixed(ee) {
    if (ee === 0) {
      this._push(this.createArray([]));
      return;
    }
    this._createParent(new Array(ee), c.PARENT.ARRAY, ee);
  }
  _decode(ee) {
    if (ee.byteLength === 0)
      throw new Error("Input too short");
    this._reset(), this._heap8.set(ee);
    const ne = this.parser.parse(ee.byteLength);
    if (this._depth > 1) {
      for (; this._currentParent.length === 0; )
        this._closeParent();
      if (this._depth > 1)
        throw new Error("Undeterminated nesting");
    }
    if (ne > 0)
      throw new Error("Failed to parse");
    if (this._res.length === 0)
      throw new Error("No valid result");
  }
  decodeFirst(ee) {
    return this._decode(ee), this._res[0];
  }
  decodeAll(ee) {
    return this._decode(ee), this._res;
  }
  static decode(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$4.from(ee, ne || "hex")), new Decoder$1({ size: ee.length }).decodeFirst(ee);
  }
  static decodeAll(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$4.from(ee, ne || "hex")), new Decoder$1({ size: ee.length }).decodeAll(ee);
  }
}
Decoder$1.decodeFirst = Decoder$1.decode;
var decoder = Decoder$1;
const { Buffer: Buffer$3 } = buffer, Decoder = decoder, utils$1 = utils$3;
class Diagnose extends Decoder {
  createTag(ee, ne) {
    return `${ee}(${ne})`;
  }
  createInt(ee) {
    return super.createInt(ee).toString();
  }
  createInt32(ee, ne) {
    return super.createInt32(ee, ne).toString();
  }
  createInt64(ee, ne, ie, ae) {
    return super.createInt64(ee, ne, ie, ae).toString();
  }
  createInt32Neg(ee, ne) {
    return super.createInt32Neg(ee, ne).toString();
  }
  createInt64Neg(ee, ne, ie, ae) {
    return super.createInt64Neg(ee, ne, ie, ae).toString();
  }
  createTrue() {
    return "true";
  }
  createFalse() {
    return "false";
  }
  createFloat(ee) {
    const ne = super.createFloat(ee);
    return utils$1.isNegativeZero(ee) ? "-0_1" : `${ne}_1`;
  }
  createFloatSingle(ee, ne, ie, ae) {
    return `${super.createFloatSingle(ee, ne, ie, ae)}_2`;
  }
  createFloatDouble(ee, ne, ie, ae, ce, le, de, ye) {
    return `${super.createFloatDouble(ee, ne, ie, ae, ce, le, de, ye)}_3`;
  }
  createByteString(ee, ne) {
    const ie = ee.join(", ");
    return ne === -1 ? `(_ ${ie})` : `h'${ie}`;
  }
  createByteStringFromHeap(ee, ne) {
    return `h'${Buffer$3.from(
      super.createByteStringFromHeap(ee, ne)
    ).toString("hex")}'`;
  }
  createInfinity() {
    return "Infinity_1";
  }
  createInfinityNeg() {
    return "-Infinity_1";
  }
  createNaN() {
    return "NaN_1";
  }
  createNaNNeg() {
    return "-NaN_1";
  }
  createNull() {
    return "null";
  }
  createUndefined() {
    return "undefined";
  }
  createSimpleUnassigned(ee) {
    return `simple(${ee})`;
  }
  createArray(ee, ne) {
    const ie = super.createArray(ee, ne);
    return ne === -1 ? `[_ ${ie.join(", ")}]` : `[${ie.join(", ")}]`;
  }
  createMap(ee, ne) {
    const ie = super.createMap(ee), ae = Array.from(ie.keys()).reduce(collectObject(ie), "");
    return ne === -1 ? `{_ ${ae}}` : `{${ae}}`;
  }
  createObject(ee, ne) {
    const ie = super.createObject(ee), ae = Object.keys(ie).reduce(collectObject(ie), "");
    return ne === -1 ? `{_ ${ae}}` : `{${ae}}`;
  }
  createUtf8String(ee, ne) {
    const ie = ee.join(", ");
    return ne === -1 ? `(_ ${ie})` : `"${ie}"`;
  }
  createUtf8StringFromHeap(ee, ne) {
    return `"${Buffer$3.from(
      super.createUtf8StringFromHeap(ee, ne)
    ).toString("utf8")}"`;
  }
  static diagnose(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$3.from(ee, ne || "hex")), new Diagnose().decodeFirst(ee);
  }
}
var diagnose = Diagnose;
function collectObject(Q) {
  return (ee, ne) => ee ? `${ee}, ${ne}: ${Q[ne]}` : `${ne}: ${Q[ne]}`;
}
const { Buffer: Buffer$2 } = buffer, { URL: URL$1 } = isoUrl, Bignumber = bignumber.exports.BigNumber, utils = utils$3, constants$1 = constants$3, MT = constants$1.MT, NUMBYTES = constants$1.NUMBYTES, SHIFT32 = constants$1.SHIFT32, SYMS = constants$1.SYMS, TAG = constants$1.TAG, HALF = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.TWO, FLOAT = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.FOUR, DOUBLE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.EIGHT, TRUE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.TRUE, FALSE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.FALSE, UNDEFINED = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.UNDEFINED, NULL = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.NULL, MAXINT_BN = new Bignumber("0x20000000000000"), BUF_NAN = Buffer$2.from("f97e00", "hex"), BUF_INF_NEG = Buffer$2.from("f9fc00", "hex"), BUF_INF_POS = Buffer$2.from("f97c00", "hex");
function toType(Q) {
  return {}.toString.call(Q).slice(8, -1);
}
class Encoder {
  constructor(ee) {
    ee = ee || {}, this.streaming = typeof ee.stream == "function", this.onData = ee.stream, this.semanticTypes = [
      [URL$1, this._pushUrl],
      [Bignumber, this._pushBigNumber]
    ];
    const ne = ee.genTypes || [], ie = ne.length;
    for (let ae = 0; ae < ie; ae++)
      this.addSemanticType(
        ne[ae][0],
        ne[ae][1]
      );
    this._reset();
  }
  addSemanticType(ee, ne) {
    const ie = this.semanticTypes.length;
    for (let ae = 0; ae < ie; ae++)
      if (this.semanticTypes[ae][0] === ee) {
        const le = this.semanticTypes[ae][1];
        return this.semanticTypes[ae][1] = ne, le;
      }
    return this.semanticTypes.push([ee, ne]), null;
  }
  push(ee) {
    return ee && (this.result[this.offset] = ee, this.resultMethod[this.offset] = 0, this.resultLength[this.offset] = ee.length, this.offset++, this.streaming && this.onData(this.finalize())), !0;
  }
  pushWrite(ee, ne, ie) {
    return this.result[this.offset] = ee, this.resultMethod[this.offset] = ne, this.resultLength[this.offset] = ie, this.offset++, this.streaming && this.onData(this.finalize()), !0;
  }
  _pushUInt8(ee) {
    return this.pushWrite(ee, 1, 1);
  }
  _pushUInt16BE(ee) {
    return this.pushWrite(ee, 2, 2);
  }
  _pushUInt32BE(ee) {
    return this.pushWrite(ee, 3, 4);
  }
  _pushDoubleBE(ee) {
    return this.pushWrite(ee, 4, 8);
  }
  _pushNaN() {
    return this.push(BUF_NAN);
  }
  _pushInfinity(ee) {
    const ne = ee < 0 ? BUF_INF_NEG : BUF_INF_POS;
    return this.push(ne);
  }
  _pushFloat(ee) {
    const ne = Buffer$2.allocUnsafe(2);
    if (utils.writeHalf(ne, ee) && utils.parseHalf(ne) === ee)
      return this._pushUInt8(HALF) && this.push(ne);
    const ie = Buffer$2.allocUnsafe(4);
    return ie.writeFloatBE(ee, 0), ie.readFloatBE(0) === ee ? this._pushUInt8(FLOAT) && this.push(ie) : this._pushUInt8(DOUBLE) && this._pushDoubleBE(ee);
  }
  _pushInt(ee, ne, ie) {
    const ae = ne << 5;
    return ee < 24 ? this._pushUInt8(ae | ee) : ee <= 255 ? this._pushUInt8(ae | NUMBYTES.ONE) && this._pushUInt8(ee) : ee <= 65535 ? this._pushUInt8(ae | NUMBYTES.TWO) && this._pushUInt16BE(ee) : ee <= 4294967295 ? this._pushUInt8(ae | NUMBYTES.FOUR) && this._pushUInt32BE(ee) : ee <= Number.MAX_SAFE_INTEGER ? this._pushUInt8(ae | NUMBYTES.EIGHT) && this._pushUInt32BE(Math.floor(ee / SHIFT32)) && this._pushUInt32BE(ee % SHIFT32) : ne === MT.NEG_INT ? this._pushFloat(ie) : this._pushFloat(ee);
  }
  _pushIntNum(ee) {
    return ee < 0 ? this._pushInt(-ee - 1, MT.NEG_INT, ee) : this._pushInt(ee, MT.POS_INT);
  }
  _pushNumber(ee) {
    switch (!1) {
      case ee === ee:
        return this._pushNaN(ee);
      case isFinite(ee):
        return this._pushInfinity(ee);
      case ee % 1 !== 0:
        return this._pushIntNum(ee);
      default:
        return this._pushFloat(ee);
    }
  }
  _pushString(ee) {
    const ne = Buffer$2.byteLength(ee, "utf8");
    return this._pushInt(ne, MT.UTF8_STRING) && this.pushWrite(ee, 5, ne);
  }
  _pushBoolean(ee) {
    return this._pushUInt8(ee ? TRUE : FALSE);
  }
  _pushUndefined(ee) {
    return this._pushUInt8(UNDEFINED);
  }
  _pushArray(ee, ne) {
    const ie = ne.length;
    if (!ee._pushInt(ie, MT.ARRAY))
      return !1;
    for (let ae = 0; ae < ie; ae++)
      if (!ee.pushAny(ne[ae]))
        return !1;
    return !0;
  }
  _pushTag(ee) {
    return this._pushInt(ee, MT.TAG);
  }
  _pushDate(ee, ne) {
    return ee._pushTag(TAG.DATE_EPOCH) && ee.pushAny(Math.round(ne / 1e3));
  }
  _pushBuffer(ee, ne) {
    return ee._pushInt(ne.length, MT.BYTE_STRING) && ee.push(ne);
  }
  _pushNoFilter(ee, ne) {
    return ee._pushBuffer(ee, ne.slice());
  }
  _pushRegexp(ee, ne) {
    return ee._pushTag(TAG.REGEXP) && ee.pushAny(ne.source);
  }
  _pushSet(ee, ne) {
    if (!ee._pushInt(ne.size, MT.ARRAY))
      return !1;
    for (const ie of ne)
      if (!ee.pushAny(ie))
        return !1;
    return !0;
  }
  _pushUrl(ee, ne) {
    return ee._pushTag(TAG.URI) && ee.pushAny(ne.format());
  }
  _pushBigint(ee) {
    let ne = TAG.POS_BIGINT;
    ee.isNegative() && (ee = ee.negated().minus(1), ne = TAG.NEG_BIGINT);
    let ie = ee.toString(16);
    ie.length % 2 && (ie = "0" + ie);
    const ae = Buffer$2.from(ie, "hex");
    return this._pushTag(ne) && this._pushBuffer(this, ae);
  }
  _pushBigNumber(ee, ne) {
    if (ne.isNaN())
      return ee._pushNaN();
    if (!ne.isFinite())
      return ee._pushInfinity(ne.isNegative() ? -1 / 0 : 1 / 0);
    if (ne.isInteger())
      return ee._pushBigint(ne);
    if (!(ee._pushTag(TAG.DECIMAL_FRAC) && ee._pushInt(2, MT.ARRAY)))
      return !1;
    const ie = ne.decimalPlaces(), ae = ne.multipliedBy(new Bignumber(10).pow(ie));
    return ee._pushIntNum(-ie) ? ae.abs().isLessThan(MAXINT_BN) ? ee._pushIntNum(ae.toNumber()) : ee._pushBigint(ae) : !1;
  }
  _pushMap(ee, ne) {
    return ee._pushInt(ne.size, MT.MAP) ? this._pushRawMap(
      ne.size,
      Array.from(ne)
    ) : !1;
  }
  _pushObject(ee) {
    if (!ee)
      return this._pushUInt8(NULL);
    for (var ne = this.semanticTypes.length, ie = 0; ie < ne; ie++)
      if (ee instanceof this.semanticTypes[ie][0])
        return this.semanticTypes[ie][1].call(ee, this, ee);
    var ae = ee.encodeCBOR;
    if (typeof ae == "function")
      return ae.call(ee, this);
    var ce = Object.keys(ee), le = ce.length;
    return this._pushInt(le, MT.MAP) ? this._pushRawMap(
      le,
      ce.map((de) => [de, ee[de]])
    ) : !1;
  }
  _pushRawMap(ee, ne) {
    ne = ne.map(function(ae) {
      return ae[0] = Encoder.encode(ae[0]), ae;
    }).sort(utils.keySorter);
    for (var ie = 0; ie < ee; ie++)
      if (!this.push(ne[ie][0]) || !this.pushAny(ne[ie][1]))
        return !1;
    return !0;
  }
  write(ee) {
    return this.pushAny(ee);
  }
  pushAny(ee) {
    var ne = toType(ee);
    switch (ne) {
      case "Number":
        return this._pushNumber(ee);
      case "String":
        return this._pushString(ee);
      case "Boolean":
        return this._pushBoolean(ee);
      case "Object":
        return this._pushObject(ee);
      case "Array":
        return this._pushArray(this, ee);
      case "Uint8Array":
        return this._pushBuffer(this, Buffer$2.isBuffer(ee) ? ee : Buffer$2.from(ee));
      case "Null":
        return this._pushUInt8(NULL);
      case "Undefined":
        return this._pushUndefined(ee);
      case "Map":
        return this._pushMap(this, ee);
      case "Set":
        return this._pushSet(this, ee);
      case "URL":
        return this._pushUrl(this, ee);
      case "BigNumber":
        return this._pushBigNumber(this, ee);
      case "Date":
        return this._pushDate(this, ee);
      case "RegExp":
        return this._pushRegexp(this, ee);
      case "Symbol":
        switch (ee) {
          case SYMS.NULL:
            return this._pushObject(null);
          case SYMS.UNDEFINED:
            return this._pushUndefined(void 0);
          default:
            throw new Error("Unknown symbol: " + ee.toString());
        }
      default:
        throw new Error("Unknown type: " + typeof ee + ", " + (ee ? ee.toString() : ""));
    }
  }
  finalize() {
    if (this.offset === 0)
      return null;
    for (var ee = this.result, ne = this.resultLength, ie = this.resultMethod, ae = this.offset, ce = 0, le = 0; le < ae; le++)
      ce += ne[le];
    var de = Buffer$2.allocUnsafe(ce), ye = 0, fe = 0;
    for (le = 0; le < ae; le++) {
      switch (fe = ne[le], ie[le]) {
        case 0:
          ee[le].copy(de, ye);
          break;
        case 1:
          de.writeUInt8(ee[le], ye, !0);
          break;
        case 2:
          de.writeUInt16BE(ee[le], ye, !0);
          break;
        case 3:
          de.writeUInt32BE(ee[le], ye, !0);
          break;
        case 4:
          de.writeDoubleBE(ee[le], ye, !0);
          break;
        case 5:
          de.write(ee[le], ye, fe, "utf8");
          break;
        default:
          throw new Error("unkown method");
      }
      ye += fe;
    }
    var Be = de;
    return this._reset(), Be;
  }
  _reset() {
    this.result = [], this.resultMethod = [], this.resultLength = [], this.offset = 0;
  }
  static encode(ee) {
    const ne = new Encoder();
    if (!ne.pushAny(ee))
      throw new Error("Failed to encode input");
    return ne.finalize();
  }
}
var encoder = Encoder;
(function(Q) {
  Q.Diagnose = diagnose, Q.Decoder = decoder, Q.Encoder = encoder, Q.Simple = simple, Q.Tagged = tagged$1, Q.decodeAll = Q.Decoder.decodeAll, Q.decodeFirst = Q.Decoder.decodeFirst, Q.diagnose = Q.Diagnose.diagnose, Q.encode = Q.Encoder.encode, Q.decode = Q.Decoder.decode, Q.leveldb = {
    decode: Q.Decoder.decodeAll,
    encode: Q.Encoder.encode,
    buffer: !0,
    name: "cbor"
  };
})(src$1);
var safeBuffer = { exports: {} };
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
(function(Q, ee) {
  var ne = buffer$1, ie = ne.Buffer;
  function ae(le, de) {
    for (var ye in le)
      de[ye] = le[ye];
  }
  ie.from && ie.alloc && ie.allocUnsafe && ie.allocUnsafeSlow ? Q.exports = ne : (ae(ne, ee), ee.Buffer = ce);
  function ce(le, de, ye) {
    return ie(le, de, ye);
  }
  ce.prototype = Object.create(ie.prototype), ae(ie, ce), ce.from = function(le, de, ye) {
    if (typeof le == "number")
      throw new TypeError("Argument must not be a number");
    return ie(le, de, ye);
  }, ce.alloc = function(le, de, ye) {
    if (typeof le != "number")
      throw new TypeError("Argument must be a number");
    var fe = ie(le);
    return de !== void 0 ? typeof ye == "string" ? fe.fill(de, ye) : fe.fill(de) : fe.fill(0), fe;
  }, ce.allocUnsafe = function(le) {
    if (typeof le != "number")
      throw new TypeError("Argument must be a number");
    return ie(le);
  }, ce.allocUnsafeSlow = function(le) {
    if (typeof le != "number")
      throw new TypeError("Argument must be a number");
    return ne.SlowBuffer(le);
  };
})(safeBuffer, safeBuffer.exports);
const Buffer$1 = safeBuffer.exports.Buffer;
var bufferPipe = class {
  constructor(ee = Buffer$1.from([])) {
    this.buffer = ee, this._bytesRead = 0, this._bytesWrote = 0;
  }
  read(ee) {
    this._bytesRead += ee;
    const ne = this.buffer.slice(0, ee);
    return this.buffer = this.buffer.slice(ee), ne;
  }
  write(ee) {
    ee = Buffer$1.from(ee), this._bytesWrote += ee.length, this.buffer = Buffer$1.concat([this.buffer, ee]);
  }
  get end() {
    return !this.buffer.length;
  }
  get bytesRead() {
    return this._bytesRead;
  }
  get bytesWrote() {
    return this._bytesWrote;
  }
};
function safeRead$1(Q, ee) {
  if (Q.buffer.length < ee)
    throw new Error("unexpected end of buffer");
  return Q.read(ee);
}
function lebEncode$1(Q) {
  if (typeof Q == "number" && (Q = BigInt(Q)), Q < BigInt(0))
    throw new Error("Cannot leb encode negative values.");
  const ee = new bufferPipe();
  for (; ; ) {
    const ne = Number(Q & BigInt(127));
    if (Q /= BigInt(128), Q === BigInt(0)) {
      ee.write([ne]);
      break;
    } else
      ee.write([ne | 128]);
  }
  return new buffer$1.Buffer(ee.buffer);
}
function lebDecode$1(Q) {
  let ee = BigInt(1), ne = BigInt(0), ie;
  do
    ie = safeRead$1(Q, 1)[0], ne += BigInt(ie & 127).valueOf() * ee, ee *= BigInt(128);
  while (ie >= 128);
  return ne;
}
function slebEncode$1(Q) {
  typeof Q == "number" && (Q = BigInt(Q));
  const ee = Q < BigInt(0);
  ee && (Q = -Q - BigInt(1));
  const ne = new bufferPipe();
  for (; ; ) {
    const ae = ie(Q);
    if (Q /= BigInt(128), ee && Q === BigInt(0) && (ae & 64) !== 0 || !ee && Q === BigInt(0) && (ae & 64) === 0) {
      ne.write([ae]);
      break;
    } else
      ne.write([ae | 128]);
  }
  function ie(ae) {
    const ce = ae % BigInt(128);
    return Number(ee ? BigInt(128) - ce - BigInt(1) : ce);
  }
  return new buffer$1.Buffer(ne.buffer);
}
function slebDecode$1(Q) {
  const ee = new Uint8Array(Q.buffer);
  let ne = 0;
  for (; ne < ee.byteLength; ne++)
    if (ee[ne] < 128) {
      if ((ee[ne] & 64) === 0)
        return lebDecode$1(Q);
      break;
    }
  const ie = new Uint8Array(safeRead$1(Q, ne + 1));
  let ae = BigInt(0);
  for (let ce = ie.byteLength - 1; ce >= 0; ce--)
    ae = ae * BigInt(128) + BigInt(128 - (ie[ce] & 127) - 1);
  return -ae - BigInt(1);
}
function writeUIntLE$1(Q, ee) {
  if (BigInt(Q) < BigInt(0))
    throw new Error("Cannot write negative values.");
  return writeIntLE$1(Q, ee);
}
function writeIntLE$1(Q, ee) {
  Q = BigInt(Q);
  const ne = new bufferPipe();
  let ie = 0, ae = BigInt(256), ce = BigInt(0), le = Number(Q % ae);
  for (ne.write([le]); ++ie < ee; )
    Q < 0 && ce === BigInt(0) && le !== 0 && (ce = BigInt(1)), le = Number((Q / ae - ce) % BigInt(256)), ne.write([le]), ae *= BigInt(256);
  return new buffer$1.Buffer(ne.buffer);
}
function readUIntLE$1(Q, ee) {
  let ne = BigInt(safeRead$1(Q, 1)[0]), ie = BigInt(1), ae = 0;
  for (; ++ae < ee; ) {
    ie *= BigInt(256);
    const ce = BigInt(safeRead$1(Q, 1)[0]);
    ne = ne + ie * ce;
  }
  return ne;
}
function readIntLE$1(Q, ee) {
  let ne = readUIntLE$1(Q, ee);
  const ie = BigInt(2) ** (BigInt(8) * BigInt(ee - 1) + BigInt(7));
  return ne >= ie && (ne -= ie * BigInt(2)), ne;
}
function blobFromBuffer(Q) {
  return Q;
}
function blobFromUint8Array(Q) {
  return buffer$1.Buffer.from(Q);
}
function blobFromText(Q) {
  return buffer$1.Buffer.from(Q);
}
function blobFromHex(Q) {
  return buffer$1.Buffer.from(Q, "hex");
}
function blobToHex(Q) {
  return Q.toString("hex");
}
function blobToUint8Array(Q) {
  return new Uint8Array(Q.slice(0, Q.byteLength));
}
function makeNonce$1() {
  return lebEncode$1(BigInt(+Date.now()) * BigInt(1e5) + BigInt(Math.floor(Math.random() * 1e5)));
}
function idlHash$1(Q) {
  const ne = new TextEncoder().encode(Q);
  let ie = 0;
  for (const ae of ne)
    ie = (ie * 223 + ae) % 2 ** 32;
  return ie;
}
function idlLabelToId$1(Q) {
  if (/^_\d+_$/.test(Q) || /^_0x[0-9a-fA-F]+_$/.test(Q)) {
    const ee = +Q.slice(1, -1);
    if (Number.isSafeInteger(ee) && ee >= 0 && ee < 2 ** 32)
      return ee;
  }
  return idlHash$1(Q);
}
const magicNumber$1 = "DIDL";
function zipWith$1(Q, ee, ne) {
  return Q.map((ie, ae) => ne(ie, ee[ae]));
}
class TypeTable$1 {
  constructor() {
    this._typs = [], this._idx = /* @__PURE__ */ new Map();
  }
  has(ee) {
    return this._idx.has(ee.name);
  }
  add(ee, ne) {
    const ie = this._typs.length;
    this._idx.set(ee.name, ie), this._typs.push(ne);
  }
  merge(ee, ne) {
    const ie = this._idx.get(ee.name), ae = this._idx.get(ne);
    if (ie === void 0)
      throw new Error("Missing type index for " + ee);
    if (ae === void 0)
      throw new Error("Missing type index for " + ne);
    this._typs[ie] = this._typs[ae], this._typs.splice(ae, 1), this._idx.delete(ne);
  }
  encode() {
    const ee = lebEncode$1(this._typs.length), ne = buffer$1.Buffer.concat(this._typs);
    return buffer$1.Buffer.concat([ee, ne]);
  }
  indexOf(ee) {
    if (!this._idx.has(ee))
      throw new Error("Missing type index for " + ee);
    return slebEncode$1(this._idx.get(ee) || 0);
  }
}
class Visitor$1 {
  visitType(ee, ne) {
    throw new Error("Not implemented");
  }
  visitPrimitive(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitEmpty(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitBool(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNull(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitReserved(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitText(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNumber(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFloat(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitFixedInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFixedNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitPrincipal(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitConstruct(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitVec(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitOpt(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRecord(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitTuple(ee, ne, ie) {
    const ae = ne.map((ce, le) => [`_${le}_`, ce]);
    return this.visitRecord(ee, ae, ie);
  }
  visitVariant(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRec(ee, ne, ie) {
    return this.visitConstruct(ne, ie);
  }
  visitFunc(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
  visitService(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
}
class Type$1 {
  display() {
    return this.name;
  }
  valueToString(ee) {
    return toReadableString$1(ee);
  }
  buildTypeTable(ee) {
    ee.has(this) || this._buildTypeTableImpl(ee);
  }
}
class PrimitiveType$1 extends Type$1 {
  checkType(ee) {
    if (this.name !== ee.name)
      throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
    return ee;
  }
  _buildTypeTableImpl(ee) {
  }
}
class ConstructType$1 extends Type$1 {
  checkType(ee) {
    if (ee instanceof RecClass$1) {
      const ne = ee.getType();
      if (typeof ne > "u")
        throw new Error("type mismatch with uninitialized type");
      return ne;
    }
    throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
  }
  encodeType(ee) {
    return ee.indexOf(this.name);
  }
}
class EmptyClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitEmpty(this, ne);
  }
  covariant(ee) {
    return !1;
  }
  encodeValue() {
    throw new Error("Empty cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Empty cannot appear as a value");
  }
  encodeType() {
    return slebEncode$1(-17);
  }
  decodeValue() {
    throw new Error("Empty cannot appear as an output");
  }
  get name() {
    return "empty";
  }
}
class BoolClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitBool(this, ne);
  }
  covariant(ee) {
    return typeof ee == "boolean";
  }
  encodeValue(ee) {
    const ne = buffer$1.Buffer.alloc(1);
    return ne.writeInt8(ee ? 1 : 0, 0), ne;
  }
  encodeType() {
    return slebEncode$1(-2);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = safeRead$1(ee, 1).toString("hex");
    if (ie === "00")
      return !1;
    if (ie === "01")
      return !0;
    throw new Error("Boolean value out of range");
  }
  get name() {
    return "bool";
  }
}
class NullClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitNull(this, ne);
  }
  covariant(ee) {
    return ee === null;
  }
  encodeValue() {
    return buffer$1.Buffer.alloc(0);
  }
  encodeType() {
    return slebEncode$1(-1);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), null;
  }
  get name() {
    return "null";
  }
}
class ReservedClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitReserved(this, ne);
  }
  covariant(ee) {
    return !0;
  }
  encodeValue() {
    return buffer$1.Buffer.alloc(0);
  }
  encodeType() {
    return slebEncode$1(-16);
  }
  decodeValue(ee, ne) {
    return ne.name !== this.name && ne.decodeValue(ee, ne), null;
  }
  get name() {
    return "reserved";
  }
}
function isValidUTF8(Q) {
  return buffer$1.Buffer.compare(new buffer$1.Buffer(Q.toString(), "utf8"), Q) === 0;
}
class TextClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitText(this, ne);
  }
  covariant(ee) {
    return typeof ee == "string";
  }
  encodeValue(ee) {
    const ne = buffer$1.Buffer.from(ee, "utf8"), ie = lebEncode$1(ne.length);
    return buffer$1.Buffer.concat([ie, ne]);
  }
  encodeType() {
    return slebEncode$1(-15);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = lebDecode$1(ee), ae = safeRead$1(ee, Number(ie));
    if (!isValidUTF8(ae))
      throw new Error("Not valid UTF8 text");
    return ae.toString("utf8");
  }
  get name() {
    return "text";
  }
  valueToString(ee) {
    return '"' + ee + '"';
  }
}
class IntClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitInt(this, ne);
  }
  covariant(ee) {
    return typeof ee == "bigint" || Number.isInteger(ee);
  }
  encodeValue(ee) {
    return slebEncode$1(ee);
  }
  encodeType() {
    return slebEncode$1(-4);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), slebDecode$1(ee);
  }
  get name() {
    return "int";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class NatClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitNat(this, ne);
  }
  covariant(ee) {
    return typeof ee == "bigint" && ee >= BigInt(0) || Number.isInteger(ee) && ee >= 0;
  }
  encodeValue(ee) {
    return lebEncode$1(ee);
  }
  encodeType() {
    return slebEncode$1(-3);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), lebDecode$1(ee);
  }
  get name() {
    return "nat";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FloatClass$1 extends PrimitiveType$1 {
  constructor(ee) {
    if (super(), this._bits = ee, ee !== 32 && ee !== 64)
      throw new Error("not a valid float type");
  }
  accept(ee, ne) {
    return ee.visitFloat(this, ne);
  }
  covariant(ee) {
    return typeof ee == "number" || ee instanceof Number;
  }
  encodeValue(ee) {
    const ne = buffer$1.Buffer.allocUnsafe(this._bits / 8);
    return this._bits === 32 ? ne.writeFloatLE(ee, 0) : ne.writeDoubleLE(ee, 0), ne;
  }
  encodeType() {
    const ee = this._bits === 32 ? -13 : -14;
    return slebEncode$1(ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = safeRead$1(ee, this._bits / 8);
    return this._bits === 32 ? ie.readFloatLE(0) : ie.readDoubleLE(0);
  }
  get name() {
    return "float" + this._bits;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedIntClass$1 extends PrimitiveType$1 {
  constructor(ee) {
    super(), this._bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedInt(this, ne);
  }
  covariant(ee) {
    const ne = BigInt(2) ** BigInt(this._bits - 1) * BigInt(-1), ie = BigInt(2) ** BigInt(this._bits - 1) - BigInt(1);
    if (typeof ee == "bigint")
      return ee >= ne && ee <= ie;
    if (Number.isInteger(ee)) {
      const ae = BigInt(ee);
      return ae >= ne && ae <= ie;
    } else
      return !1;
  }
  encodeValue(ee) {
    return writeIntLE$1(ee, this._bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this._bits) - 3;
    return slebEncode$1(-9 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readIntLE$1(ee, this._bits / 8);
    return this._bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `int${this._bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedNatClass$1 extends PrimitiveType$1 {
  constructor(ee) {
    super(), this.bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedNat(this, ne);
  }
  covariant(ee) {
    const ne = BigInt(2) ** BigInt(this.bits);
    return typeof ee == "bigint" && ee >= BigInt(0) ? ee < ne : Number.isInteger(ee) && ee >= 0 ? BigInt(ee) < ne : !1;
  }
  encodeValue(ee) {
    return writeUIntLE$1(ee, this.bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this.bits) - 3;
    return slebEncode$1(-5 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readUIntLE$1(ee, this.bits / 8);
    return this.bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `nat${this.bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class VecClass$1 extends ConstructType$1 {
  constructor(ee) {
    super(), this._type = ee, this._blobOptimization = !1, ee instanceof FixedNatClass$1 && ee.bits === 8 && (this._blobOptimization = !0);
  }
  accept(ee, ne) {
    return ee.visitVec(this, this._type, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.every((ne) => this._type.covariant(ne));
  }
  encodeValue(ee) {
    const ne = lebEncode$1(ee.length);
    return this._blobOptimization ? buffer$1.Buffer.concat([ne, buffer$1.Buffer.from(ee)]) : buffer$1.Buffer.concat([ne, ...ee.map((ie) => this._type.encodeValue(ie))]);
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode$1(-19), ie = this._type.encodeType(ee);
    ee.add(this, buffer$1.Buffer.concat([ne, ie]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VecClass$1))
      throw new Error("Not a vector type");
    const ae = Number(lebDecode$1(ee));
    if (this._blobOptimization)
      return [...new Uint8Array(ee.read(ae))];
    const ce = [];
    for (let le = 0; le < ae; le++)
      ce.push(this._type.decodeValue(ee, ie._type));
    return ce;
  }
  get name() {
    return `vec ${this._type.name}`;
  }
  display() {
    return `vec ${this._type.display()}`;
  }
  valueToString(ee) {
    return "vec {" + ee.map((ie) => this._type.valueToString(ie)).join("; ") + "}";
  }
}
class OptClass$1 extends ConstructType$1 {
  constructor(ee) {
    super(), this._type = ee;
  }
  accept(ee, ne) {
    return ee.visitOpt(this, this._type, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && (ee.length === 0 || ee.length === 1 && this._type.covariant(ee[0]));
  }
  encodeValue(ee) {
    return ee.length === 0 ? buffer$1.Buffer.from([0]) : buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), this._type.encodeValue(ee[0])]);
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode$1(-18), ie = this._type.encodeType(ee);
    ee.add(this, buffer$1.Buffer.concat([ne, ie]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof OptClass$1))
      throw new Error("Not an option type");
    const ae = safeRead$1(ee, 1).toString("hex");
    if (ae === "00")
      return [];
    if (ae === "01")
      return [this._type.decodeValue(ee, ie._type)];
    throw new Error("Not an option value");
  }
  get name() {
    return `opt ${this._type.name}`;
  }
  display() {
    return `opt ${this._type.display()}`;
  }
  valueToString(ee) {
    return ee.length === 0 ? "null" : `opt ${this._type.valueToString(ee[0])}`;
  }
}
class RecordClass$1 extends ConstructType$1 {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId$1(ne[0]) - idlLabelToId$1(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitRecord(this, this._fields, ne);
  }
  tryAsTuple() {
    const ee = [];
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, ae] = this._fields[ne];
      if (ie !== `_${ne}_`)
        return null;
      ee.push(ae);
    }
    return ee;
  }
  covariant(ee) {
    return typeof ee == "object" && this._fields.every(([ne, ie]) => {
      if (!ee.hasOwnProperty(ne))
        throw new Error(`Record is missing key "${ne}".`);
      return ie.covariant(ee[ne]);
    });
  }
  encodeValue(ee) {
    const ne = this._fields.map(([ae]) => ee[ae]), ie = zipWith$1(this._fields, ne, ([, ae], ce) => ae.encodeValue(ce));
    return buffer$1.Buffer.concat(ie);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, le]) => le.buildTypeTable(ee));
    const ne = slebEncode$1(-20), ie = lebEncode$1(this._fields.length), ae = this._fields.map(([ce, le]) => buffer$1.Buffer.concat([lebEncode$1(idlLabelToId$1(ce)), le.encodeType(ee)]));
    ee.add(this, buffer$1.Buffer.concat([ne, ie, buffer$1.Buffer.concat(ae)]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof RecordClass$1))
      throw new Error("Not a record type");
    const ae = {};
    let ce = 0;
    for (const [le, de] of ie._fields) {
      if (ce >= this._fields.length || idlLabelToId$1(this._fields[ce][0]) !== idlLabelToId$1(le)) {
        de.decodeValue(ee, de);
        continue;
      }
      const [ye, fe] = this._fields[ce];
      ae[ye] = fe.decodeValue(ee, de), ce++;
    }
    if (ce < this._fields.length)
      throw new Error("Cannot find field " + this._fields[ce][0]);
    return ae;
  }
  get name() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.display()).join("; ")}}`;
  }
  valueToString(ee) {
    const ne = this._fields.map(([ae]) => ee[ae]);
    return `record {${zipWith$1(this._fields, ne, ([ae, ce], le) => ae + "=" + ce.valueToString(le)).join("; ")}}`;
  }
}
class TupleClass$1 extends RecordClass$1 {
  constructor(ee) {
    const ne = {};
    ee.forEach((ie, ae) => ne["_" + ae + "_"] = ie), super(ne), this._components = ee;
  }
  accept(ee, ne) {
    return ee.visitTuple(this, this._components, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.length >= this._fields.length && this._components.every((ne, ie) => ne.covariant(ee[ie]));
  }
  encodeValue(ee) {
    const ne = zipWith$1(this._components, ee, (ie, ae) => ie.encodeValue(ae));
    return buffer$1.Buffer.concat(ne);
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof TupleClass$1))
      throw new Error("not a tuple type");
    if (ie._components.length < this._components.length)
      throw new Error("tuple mismatch");
    const ae = [];
    for (const [ce, le] of ie._components.entries())
      ce >= this._components.length ? le.decodeValue(ee, le) : ae.push(this._components[ce].decodeValue(ee, le));
    return ae;
  }
  display() {
    return `record {${this._components.map((ne) => ne.display()).join("; ")}}`;
  }
  valueToString(ee) {
    return `record {${zipWith$1(this._components, ee, (ie, ae) => ie.valueToString(ae)).join("; ")}}`;
  }
}
class VariantClass$1 extends ConstructType$1 {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId$1(ne[0]) - idlLabelToId$1(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitVariant(this, this._fields, ne);
  }
  covariant(ee) {
    return typeof ee == "object" && Object.entries(ee).length === 1 && this._fields.every(([ne, ie]) => !ee.hasOwnProperty(ne) || ie.covariant(ee[ne]));
  }
  encodeValue(ee) {
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, ae] = this._fields[ne];
      if (ee.hasOwnProperty(ie)) {
        const ce = lebEncode$1(ne), le = ae.encodeValue(ee[ie]);
        return buffer$1.Buffer.concat([ce, le]);
      }
    }
    throw Error("Variant has no data: " + ee);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([, ce]) => {
      ce.buildTypeTable(ee);
    });
    const ne = slebEncode$1(-21), ie = lebEncode$1(this._fields.length), ae = this._fields.map(([ce, le]) => buffer$1.Buffer.concat([lebEncode$1(idlLabelToId$1(ce)), le.encodeType(ee)]));
    ee.add(this, buffer$1.Buffer.concat([ne, ie, ...ae]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VariantClass$1))
      throw new Error("Not a variant type");
    const ae = Number(lebDecode$1(ee));
    if (ae >= ie._fields.length)
      throw Error("Invalid variant index: " + ae);
    const [ce, le] = ie._fields[ae];
    for (const [de, ye] of this._fields)
      if (idlLabelToId$1(ce) === idlLabelToId$1(de)) {
        const fe = ye.decodeValue(ee, le);
        return { [de]: fe };
      }
    throw new Error("Cannot find field hash " + ce);
  }
  get name() {
    return `variant {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `variant {${this._fields.map(([ne, ie]) => ne + (ie.name === "null" ? "" : `:${ie.display()}`)).join("; ")}}`;
  }
  valueToString(ee) {
    for (const [ne, ie] of this._fields)
      if (ee.hasOwnProperty(ne)) {
        const ae = ie.valueToString(ee[ne]);
        return ae === "null" ? `variant {${ne}}` : `variant {${ne}=${ae}}`;
      }
    throw new Error("Variant has no data: " + ee);
  }
}
class RecClass$1 extends ConstructType$1 {
  constructor() {
    super(...arguments), this._id = RecClass$1._counter++, this._type = void 0;
  }
  accept(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return ee.visitRec(this, this._type, ne);
  }
  fill(ee) {
    this._type = ee;
  }
  getType() {
    return this._type;
  }
  covariant(ee) {
    return this._type ? this._type.covariant(ee) : !1;
  }
  encodeValue(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.encodeValue(ee);
  }
  _buildTypeTableImpl(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    ee.add(this, buffer$1.Buffer.alloc(0)), this._type.buildTypeTable(ee), ee.merge(this, this._type.name);
  }
  decodeValue(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.decodeValue(ee, ne);
  }
  get name() {
    return `rec_${this._id}`;
  }
  display() {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return `\u03BC${this.name}.${this._type.name}`;
  }
  valueToString(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.valueToString(ee);
  }
}
RecClass$1._counter = 0;
function decodePrincipalId$1(Q) {
  if (safeRead$1(Q, 1).toString("hex") !== "01")
    throw new Error("Cannot decode principal");
  const ne = Number(lebDecode$1(Q)), ie = safeRead$1(Q, ne).toString("hex").toUpperCase();
  return Principal$2.fromHex(ie);
}
class PrincipalClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitPrincipal(this, ne);
  }
  covariant(ee) {
    return ee && ee._isPrincipal;
  }
  encodeValue(ee) {
    const ne = ee.toHex(), ie = buffer$1.Buffer.from(ne, "hex"), ae = lebEncode$1(ie.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), ae, ie]);
  }
  encodeType() {
    return slebEncode$1(-24);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), decodePrincipalId$1(ee);
  }
  get name() {
    return "principal";
  }
  valueToString(ee) {
    return `${this.name} "${ee.toText()}"`;
  }
}
class FuncClass$1 extends ConstructType$1 {
  constructor(ee, ne, ie = []) {
    super(), this.argTypes = ee, this.retTypes = ne, this.annotations = ie;
  }
  static argsToString(ee, ne) {
    if (ee.length !== ne.length)
      throw new Error("arity mismatch");
    return "(" + ee.map((ie, ae) => ie.valueToString(ne[ae])).join(", ") + ")";
  }
  accept(ee, ne) {
    return ee.visitFunc(this, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.length === 2 && ee[0] && ee[0]._isPrincipal && typeof ee[1] == "string";
  }
  encodeValue(ee) {
    const ne = ee[0].toHex(), ie = buffer$1.Buffer.from(ne, "hex"), ae = lebEncode$1(ie.length), ce = buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), ae, ie]), le = buffer$1.Buffer.from(ee[1], "utf8"), de = lebEncode$1(le.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), ce, de, le]);
  }
  _buildTypeTableImpl(ee) {
    this.argTypes.forEach((fe) => fe.buildTypeTable(ee)), this.retTypes.forEach((fe) => fe.buildTypeTable(ee));
    const ne = slebEncode$1(-22), ie = lebEncode$1(this.argTypes.length), ae = buffer$1.Buffer.concat(this.argTypes.map((fe) => fe.encodeType(ee))), ce = lebEncode$1(this.retTypes.length), le = buffer$1.Buffer.concat(this.retTypes.map((fe) => fe.encodeType(ee))), de = lebEncode$1(this.annotations.length), ye = buffer$1.Buffer.concat(this.annotations.map((fe) => this.encodeAnnotation(fe)));
    ee.add(this, buffer$1.Buffer.concat([ne, ie, ae, ce, le, de, ye]));
  }
  decodeValue(ee) {
    if (safeRead$1(ee, 1).toString("hex") !== "01")
      throw new Error("Cannot decode function reference");
    const ie = decodePrincipalId$1(ee), ae = Number(lebDecode$1(ee)), ce = safeRead$1(ee, ae);
    if (!isValidUTF8(ce))
      throw new Error("Not valid UTF8 method name");
    const le = ce.toString("utf8");
    return [ie, le];
  }
  get name() {
    const ee = this.argTypes.map((ae) => ae.name).join(", "), ne = this.retTypes.map((ae) => ae.name).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) -> (${ne})${ie}`;
  }
  valueToString([ee, ne]) {
    return `func "${ee.toText()}".${ne}`;
  }
  display() {
    const ee = this.argTypes.map((ae) => ae.display()).join(", "), ne = this.retTypes.map((ae) => ae.display()).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) \u2192 (${ne})${ie}`;
  }
  encodeAnnotation(ee) {
    if (ee === "query")
      return buffer$1.Buffer.from([1]);
    if (ee === "oneway")
      return buffer$1.Buffer.from([2]);
    throw new Error("Illeagal function annotation");
  }
}
class ServiceClass$1 extends ConstructType$1 {
  constructor(ee) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId$1(ne[0]) - idlLabelToId$1(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitService(this, ne);
  }
  covariant(ee) {
    return ee && ee._isPrincipal;
  }
  encodeValue(ee) {
    const ne = ee.toHex(), ie = buffer$1.Buffer.from(ne, "hex"), ae = lebEncode$1(ie.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), ae, ie]);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, le]) => le.buildTypeTable(ee));
    const ne = slebEncode$1(-23), ie = lebEncode$1(this._fields.length), ae = this._fields.map(([ce, le]) => {
      const de = buffer$1.Buffer.from(ce, "utf8"), ye = lebEncode$1(de.length);
      return buffer$1.Buffer.concat([ye, de, le.encodeType(ee)]);
    });
    ee.add(this, buffer$1.Buffer.concat([ne, ie, buffer$1.Buffer.concat(ae)]));
  }
  decodeValue(ee) {
    return decodePrincipalId$1(ee);
  }
  get name() {
    return `service {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  valueToString(ee) {
    return `service "${ee.toText()}"`;
  }
}
function toReadableString$1(Q) {
  return JSON.stringify(Q, (ee, ne) => typeof ne == "bigint" ? `BigInt(${ne})` : ne);
}
function encode$3(Q, ee) {
  if (ee.length < Q.length)
    throw Error("Wrong number of message arguments");
  const ne = new TypeTable$1();
  Q.forEach((ye) => ye.buildTypeTable(ne));
  const ie = buffer$1.Buffer.from(magicNumber$1, "utf8"), ae = ne.encode(), ce = lebEncode$1(ee.length), le = buffer$1.Buffer.concat(Q.map((ye) => ye.encodeType(ne))), de = buffer$1.Buffer.concat(zipWith$1(Q, ee, (ye, fe) => {
    if (!ye.covariant(fe))
      throw new Error(`Invalid ${ye.display()} argument: ${toReadableString$1(fe)}`);
    return ye.encodeValue(fe);
  }));
  return buffer$1.Buffer.concat([ie, ae, ce, le, de]);
}
function decode$4(Q, ee) {
  const ne = new bufferPipe(ee);
  if (ee.byteLength < magicNumber$1.length)
    throw new Error("Message length smaller than magic number");
  const ie = safeRead$1(ne, magicNumber$1.length).toString();
  if (ie !== magicNumber$1)
    throw new Error("Wrong magic number: " + ie);
  function ae(me) {
    const ge = [], we = Number(lebDecode$1(me));
    for (let He = 0; He < we; He++) {
      const Se = Number(slebDecode$1(me));
      switch (Se) {
        case -18:
        case -19: {
          const Ge = Number(slebDecode$1(me));
          ge.push([Se, Ge]);
          break;
        }
        case -20:
        case -21: {
          const Ge = [];
          let Fe = Number(lebDecode$1(me)), Pe;
          for (; Fe--; ) {
            const Je = Number(lebDecode$1(me));
            if (Je >= Math.pow(2, 32))
              throw new Error("field id out of 32-bit range");
            if (typeof Pe == "number" && Pe >= Je)
              throw new Error("field id collision or not sorted");
            Pe = Je;
            const tt = Number(slebDecode$1(me));
            Ge.push([Je, tt]);
          }
          ge.push([Se, Ge]);
          break;
        }
        case -22: {
          for (let Fe = 0; Fe < 2; Fe++) {
            let Pe = Number(lebDecode$1(me));
            for (; Pe--; )
              slebDecode$1(me);
          }
          const Ge = Number(lebDecode$1(me));
          safeRead$1(me, Ge), ge.push([Se, void 0]);
          break;
        }
        case -23: {
          let Ge = Number(lebDecode$1(me));
          for (; Ge--; ) {
            const Fe = Number(lebDecode$1(me));
            safeRead$1(me, Fe), slebDecode$1(me);
          }
          ge.push([Se, void 0]);
          break;
        }
        default:
          throw new Error("Illegal op_code: " + Se);
      }
    }
    const be = [], Oe = Number(lebDecode$1(me));
    for (let He = 0; He < Oe; He++)
      be.push(Number(slebDecode$1(me)));
    return [ge, be];
  }
  const [ce, le] = ae(ne);
  if (le.length < Q.length)
    throw new Error("Wrong number of return values");
  const de = ce.map((me) => Rec$1());
  function ye(me) {
    if (me < -24)
      throw new Error("future value not supported");
    if (me < 0)
      switch (me) {
        case -1:
          return Null$1;
        case -2:
          return Bool$1;
        case -3:
          return Nat$1;
        case -4:
          return Int$1;
        case -5:
          return Nat8$1;
        case -6:
          return Nat16$1;
        case -7:
          return Nat32$1;
        case -8:
          return Nat64$1;
        case -9:
          return Int8$1;
        case -10:
          return Int16$1;
        case -11:
          return Int32$1;
        case -12:
          return Int64$1;
        case -13:
          return Float32$1;
        case -14:
          return Float64$1;
        case -15:
          return Text$1;
        case -16:
          return Reserved$1;
        case -17:
          return Empty$1;
        case -24:
          return Principal$1;
        default:
          throw new Error("Illegal op_code: " + me);
      }
    if (me >= ce.length)
      throw new Error("type index out of range");
    return de[me];
  }
  function fe(me) {
    switch (me[0]) {
      case -19: {
        const ge = ye(me[1]);
        return Vec$1(ge);
      }
      case -18: {
        const ge = ye(me[1]);
        return Opt$1(ge);
      }
      case -20: {
        const ge = {};
        for (const [Oe, He] of me[1]) {
          const Se = `_${Oe}_`;
          ge[Se] = ye(He);
        }
        const we = Record$1(ge), be = we.tryAsTuple();
        return Array.isArray(be) ? Tuple$1(...be) : we;
      }
      case -21: {
        const ge = {};
        for (const [we, be] of me[1]) {
          const Oe = `_${we}_`;
          ge[Oe] = ye(be);
        }
        return Variant$1(ge);
      }
      case -22:
        return Func$1([], [], []);
      case -23:
        return Service$1({});
      default:
        throw new Error("Illegal op_code: " + me[0]);
    }
  }
  ce.forEach((me, ge) => {
    const we = fe(me);
    de[ge].fill(we);
  });
  const Be = le.map((me) => ye(me)), Ee = Q.map((me, ge) => me.decodeValue(ne, Be[ge]));
  for (let me = Q.length; me < Be.length; me++)
    Be[me].decodeValue(ne, Be[me]);
  if (ne.buffer.length > 0)
    throw new Error("decode: Left-over bytes");
  return Ee;
}
const Empty$1 = new EmptyClass$1(), Reserved$1 = new ReservedClass$1(), Bool$1 = new BoolClass$1(), Null$1 = new NullClass$1(), Text$1 = new TextClass$1(), Int$1 = new IntClass$1(), Nat$1 = new NatClass$1(), Float32$1 = new FloatClass$1(32), Float64$1 = new FloatClass$1(64), Int8$1 = new FixedIntClass$1(8), Int16$1 = new FixedIntClass$1(16), Int32$1 = new FixedIntClass$1(32), Int64$1 = new FixedIntClass$1(64), Nat8$1 = new FixedNatClass$1(8), Nat16$1 = new FixedNatClass$1(16), Nat32$1 = new FixedNatClass$1(32), Nat64$1 = new FixedNatClass$1(64), Principal$1 = new PrincipalClass$1();
function Tuple$1(...Q) {
  return new TupleClass$1(Q);
}
function Vec$1(Q) {
  return new VecClass$1(Q);
}
function Opt$1(Q) {
  return new OptClass$1(Q);
}
function Record$1(Q) {
  return new RecordClass$1(Q);
}
function Variant$1(Q) {
  return new VariantClass$1(Q);
}
function Rec$1() {
  return new RecClass$1();
}
function Func$1(Q, ee, ne = []) {
  return new FuncClass$1(Q, ee, ne);
}
function Service$1(Q) {
  return new ServiceClass$1(Q);
}
const IDL$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Visitor: Visitor$1,
  Type: Type$1,
  PrimitiveType: PrimitiveType$1,
  ConstructType: ConstructType$1,
  EmptyClass: EmptyClass$1,
  BoolClass: BoolClass$1,
  NullClass: NullClass$1,
  ReservedClass: ReservedClass$1,
  TextClass: TextClass$1,
  IntClass: IntClass$1,
  NatClass: NatClass$1,
  FloatClass: FloatClass$1,
  FixedIntClass: FixedIntClass$1,
  FixedNatClass: FixedNatClass$1,
  VecClass: VecClass$1,
  OptClass: OptClass$1,
  RecordClass: RecordClass$1,
  TupleClass: TupleClass$1,
  VariantClass: VariantClass$1,
  RecClass: RecClass$1,
  PrincipalClass: PrincipalClass$1,
  FuncClass: FuncClass$1,
  ServiceClass: ServiceClass$1,
  encode: encode$3,
  decode: decode$4,
  Empty: Empty$1,
  Reserved: Reserved$1,
  Bool: Bool$1,
  Null: Null$1,
  Text: Text$1,
  Int: Int$1,
  Nat: Nat$1,
  Float32: Float32$1,
  Float64: Float64$1,
  Int8: Int8$1,
  Int16: Int16$1,
  Int32: Int32$1,
  Int64: Int64$1,
  Nat8: Nat8$1,
  Nat16: Nat16$1,
  Nat32: Nat32$1,
  Nat64: Nat64$1,
  Principal: Principal$1,
  Tuple: Tuple$1,
  Vec: Vec$1,
  Opt: Opt$1,
  Record: Record$1,
  Variant: Variant$1,
  Rec: Rec$1,
  Func: Func$1,
  Service: Service$1
}, Symbol.toStringTag, { value: "Module" }));
function toHex$1(Q) {
  return blobToHex(Q);
}
function hash$1(Q) {
  const ee = sha256$1.exports.sha256.create().update(Q).arrayBuffer();
  return blobFromUint8Array(new Uint8Array(ee));
}
function hashValue$1(Q) {
  if (Q instanceof src$1.Tagged)
    return hashValue$1(Q.value);
  if (typeof Q == "string")
    return hashString$1(Q);
  if (typeof Q == "number")
    return hash$1(lebEncode$1(Q));
  if (buffer$1.Buffer.isBuffer(Q))
    return hash$1(blobFromUint8Array(new Uint8Array(Q)));
  if (Q instanceof Uint8Array || Q instanceof ArrayBuffer)
    return hash$1(blobFromUint8Array(new Uint8Array(Q)));
  if (Array.isArray(Q)) {
    const ee = Q.map(hashValue$1);
    return hash$1(buffer$1.Buffer.concat(ee));
  } else {
    if (Q instanceof Principal$2)
      return hash$1(blobFromUint8Array(Q.toUint8Array()));
    if (typeof Q == "object" && Q !== null && typeof Q.toHash == "function")
      return hashValue$1(Q.toHash());
    if (typeof Q == "bigint")
      return hash$1(lebEncode$1(Q));
  }
  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${Q}`), {
    value: Q
  });
}
const hashString$1 = (Q) => {
  const ne = new TextEncoder().encode(Q);
  return hash$1(buffer$1.Buffer.from(ne));
};
function concat$2(Q) {
  return buffer$1.Buffer.concat(Q);
}
function requestIdOf$1(Q) {
  const ie = Object.entries(Q).filter(([, le]) => le !== void 0).map(([le, de]) => {
    const ye = hashString$1(le), fe = hashValue$1(de);
    return [ye, fe];
  }).sort(([le], [de]) => buffer$1.Buffer.compare(buffer$1.Buffer.from(le), buffer$1.Buffer.from(de))), ae = concat$2(ie.map(concat$2));
  return hash$1(ae);
}
var __rest = globalThis && globalThis.__rest || function(Q, ee) {
  var ne = {};
  for (var ie in Q)
    Object.prototype.hasOwnProperty.call(Q, ie) && ee.indexOf(ie) < 0 && (ne[ie] = Q[ie]);
  if (Q != null && typeof Object.getOwnPropertySymbols == "function")
    for (var ae = 0, ie = Object.getOwnPropertySymbols(Q); ae < ie.length; ae++)
      ee.indexOf(ie[ae]) < 0 && Object.prototype.propertyIsEnumerable.call(Q, ie[ae]) && (ne[ie[ae]] = Q[ie[ae]]);
  return ne;
};
const domainSeparator = buffer$1.Buffer.from(new TextEncoder().encode(`
ic-request`));
class SignIdentity {
  getPrincipal() {
    return this._principal || (this._principal = Principal$2.selfAuthenticating(this.getPublicKey().toDer())), this._principal;
  }
  async transformRequest(ee) {
    const { body: ne } = ee, ie = __rest(ee, ["body"]), ae = await requestIdOf$1(ne);
    return Object.assign(Object.assign({}, ie), { body: {
      content: ne,
      sender_pubkey: this.getPublicKey().toDer(),
      sender_sig: await this.sign(buffer$1.Buffer.concat([domainSeparator, ae]))
    } });
  }
}
class AnonymousIdentity$1 {
  getPrincipal() {
    return Principal$2.anonymous();
  }
  async transformRequest(ee) {
    return Object.assign(Object.assign({}, ee), { body: { content: ee.body } });
  }
}
function createIdentityDescriptor(Q) {
  return "getPublicKey" in Q ? { type: "PublicKeyIdentity", publicKey: Q.getPublicKey().toDer().toString("hex") } : { type: "AnonymousIdentity" };
}
function isIdentityDescriptor(Q) {
  var ee, ne;
  switch ((ee = Q) === null || ee === void 0 ? void 0 : ee.type) {
    case "AnonymousIdentity":
      return !0;
    case "PublicKeyIdentity":
      return typeof ((ne = Q) === null || ne === void 0 ? void 0 : ne.publicKey) == "string";
  }
  return !1;
}
var src = {}, serializer$2 = {}, value = {};
Object.defineProperty(value, "__esModule", { value: !0 });
const MAX_U64_NUMBER = 9007199254740992;
function _concat(Q, ...ee) {
  const ne = new Uint8Array(Q.byteLength + ee.reduce((ae, ce) => ae + ce.byteLength, 0));
  ne.set(new Uint8Array(Q), 0);
  let ie = Q.byteLength;
  for (const ae of ee)
    ne.set(new Uint8Array(ae), ie), ie += ae.byteLength;
  return ne.buffer;
}
function _serializeValue(Q, ee, ne) {
  ne = ne.replace(/[^0-9a-fA-F]/g, "");
  const ie = 2 ** (ee - 24);
  ne = ne.slice(-ie * 2).padStart(ie * 2, "0");
  const ae = [(Q << 5) + ee].concat(ne.match(/../g).map((ce) => parseInt(ce, 16)));
  return new Uint8Array(ae).buffer;
}
function _serializeNumber(Q, ee) {
  if (ee < 24)
    return new Uint8Array([(Q << 5) + ee]).buffer;
  {
    const ne = ee <= 255 ? 24 : ee <= 65535 ? 25 : ee <= 4294967295 ? 26 : 27;
    return _serializeValue(Q, ne, ee.toString(16));
  }
}
function _serializeString(Q) {
  const ee = [];
  for (let ne = 0; ne < Q.length; ne++) {
    let ie = Q.charCodeAt(ne);
    ie < 128 ? ee.push(ie) : ie < 2048 ? ee.push(192 | ie >> 6, 128 | ie & 63) : ie < 55296 || ie >= 57344 ? ee.push(224 | ie >> 12, 128 | ie >> 6 & 63, 128 | ie & 63) : (ne++, ie = (ie & 1023) << 10 | Q.charCodeAt(ne) & 1023, ee.push(240 | ie >> 18, 128 | ie >> 12 & 63, 128 | ie >> 6 & 63, 128 | ie & 63));
  }
  return _concat(new Uint8Array(_serializeNumber(3, Q.length)), new Uint8Array(ee));
}
function tagged(Q, ee) {
  if (Q == 14277111)
    return _concat(new Uint8Array([217, 217, 247]), ee);
  if (Q < 24)
    return _concat(new Uint8Array([(6 << 5) + Q]), ee);
  {
    const ne = Q <= 255 ? 24 : Q <= 65535 ? 25 : Q <= 4294967295 ? 26 : 27, ie = 2 ** (ne - 24), ae = Q.toString(16).slice(-ie * 2).padStart(ie * 2, "0"), ce = [(6 << 5) + ne].concat(ae.match(/../g).map((le) => parseInt(le, 16)));
    return new Uint8Array(ce).buffer;
  }
}
value.tagged = tagged;
function raw(Q) {
  return new Uint8Array(Q).buffer;
}
value.raw = raw;
function uSmall(Q) {
  if (isNaN(Q))
    throw new RangeError("Invalid number.");
  Q = Math.min(Math.max(0, Q), 23);
  const ee = [(0 << 5) + Q];
  return new Uint8Array(ee).buffer;
}
value.uSmall = uSmall;
function u8(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, Q), 255), Q = Q.toString(16), _serializeValue(0, 24, Q);
}
value.u8 = u8;
function u16(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, Q), 65535), Q = Q.toString(16), _serializeValue(0, 25, Q);
}
value.u16 = u16;
function u32(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, Q), 4294967295), Q = Q.toString(16), _serializeValue(0, 26, Q);
}
value.u32 = u32;
function u64(Q, ee) {
  if (typeof Q == "string" && ee == 16) {
    if (Q.match(/[^0-9a-fA-F]/))
      throw new RangeError("Invalid number.");
    return _serializeValue(0, 27, Q);
  }
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, Q), MAX_U64_NUMBER), Q = Q.toString(16), _serializeValue(0, 27, Q);
}
value.u64 = u64;
function iSmall(Q) {
  if (isNaN(Q))
    throw new RangeError("Invalid number.");
  if (Q === 0)
    return uSmall(0);
  Q = Math.min(Math.max(0, -Q), 24) - 1;
  const ee = [(1 << 5) + Q];
  return new Uint8Array(ee).buffer;
}
value.iSmall = iSmall;
function i8(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, -Q - 1), 255), Q = Q.toString(16), _serializeValue(1, 24, Q);
}
value.i8 = i8;
function i16(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, -Q - 1), 65535), Q = Q.toString(16), _serializeValue(1, 25, Q);
}
value.i16 = i16;
function i32(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, -Q - 1), 4294967295), Q = Q.toString(16), _serializeValue(1, 26, Q);
}
value.i32 = i32;
function i64(Q, ee) {
  if (typeof Q == "string" && ee == 16) {
    if (Q.startsWith("-") ? Q = Q.slice(1) : Q = "0", Q.match(/[^0-9a-fA-F]/) || Q.length > 16)
      throw new RangeError("Invalid number.");
    let ne = !1, ie = Q.split("").reduceRight((ae, ce) => {
      if (ne)
        return ce + ae;
      let le = parseInt(ce, 16) - 1;
      return le >= 0 ? (ne = !0, le.toString(16) + ae) : "f" + ae;
    }, "");
    return ne ? _serializeValue(1, 27, ie) : u64(0);
  }
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, -Q - 1), 9007199254740992), Q = Q.toString(16), _serializeValue(1, 27, Q);
}
value.i64 = i64;
function number$1(Q) {
  return Q >= 0 ? Q < 24 ? uSmall(Q) : Q <= 255 ? u8(Q) : Q <= 65535 ? u16(Q) : Q <= 4294967295 ? u32(Q) : u64(Q) : Q >= -24 ? iSmall(Q) : Q >= -255 ? i8(Q) : Q >= -65535 ? i16(Q) : Q >= -4294967295 ? i32(Q) : i64(Q);
}
value.number = number$1;
function bytes(Q) {
  return _concat(_serializeNumber(2, Q.byteLength), Q);
}
value.bytes = bytes;
function string(Q) {
  return _serializeString(Q);
}
value.string = string;
function array(Q) {
  return _concat(_serializeNumber(4, Q.length), ...Q);
}
value.array = array;
function map(Q, ee = !1) {
  Q instanceof Map || (Q = new Map(Object.entries(Q)));
  let ne = Array.from(Q.entries());
  return ee && (ne = ne.sort(([ie], [ae]) => ie.localeCompare(ae))), _concat(_serializeNumber(5, Q.size), ...ne.map(([ie, ae]) => _concat(_serializeString(ie), ae)));
}
value.map = map;
function singleFloat(Q) {
  const ee = new Float32Array([Q]);
  return _concat(new Uint8Array([(7 << 5) + 26]), new Uint8Array(ee.buffer));
}
value.singleFloat = singleFloat;
function doubleFloat(Q) {
  const ee = new Float64Array([Q]);
  return _concat(new Uint8Array([(7 << 5) + 27]), new Uint8Array(ee.buffer));
}
value.doubleFloat = doubleFloat;
function bool(Q) {
  return Q ? true_() : false_();
}
value.bool = bool;
function true_() {
  return raw(new Uint8Array([(7 << 5) + 21]));
}
value.true_ = true_;
function false_() {
  return raw(new Uint8Array([(7 << 5) + 20]));
}
value.false_ = false_;
function null_() {
  return raw(new Uint8Array([(7 << 5) + 22]));
}
value.null_ = null_;
function undefined_() {
  return raw(new Uint8Array([(7 << 5) + 23]));
}
value.undefined_ = undefined_;
var __importStar = commonjsGlobal && commonjsGlobal.__importStar || function(Q) {
  if (Q && Q.__esModule)
    return Q;
  var ee = {};
  if (Q != null)
    for (var ne in Q)
      Object.hasOwnProperty.call(Q, ne) && (ee[ne] = Q[ne]);
  return ee.default = Q, ee;
};
Object.defineProperty(serializer$2, "__esModule", { value: !0 });
const cbor$1 = __importStar(value), BufferClasses = [
  ArrayBuffer,
  Uint8Array,
  Uint16Array,
  Uint32Array,
  Int8Array,
  Int16Array,
  Int32Array,
  Float32Array,
  Float64Array
];
class JsonDefaultCborEncoder {
  constructor(ee, ne = !1) {
    this._serializer = ee, this._stable = ne, this.name = "jsonDefault", this.priority = -100;
  }
  match(ee) {
    return ["undefined", "boolean", "number", "string", "object"].indexOf(typeof ee) != -1;
  }
  encode(ee) {
    switch (typeof ee) {
      case "undefined":
        return cbor$1.undefined_();
      case "boolean":
        return cbor$1.bool(ee);
      case "number":
        return Math.floor(ee) === ee ? cbor$1.number(ee) : cbor$1.doubleFloat(ee);
      case "string":
        return cbor$1.string(ee);
      case "object":
        if (ee === null)
          return cbor$1.null_();
        if (Array.isArray(ee))
          return cbor$1.array(ee.map((ne) => this._serializer.serializeValue(ne)));
        if (BufferClasses.find((ne) => ee instanceof ne))
          return cbor$1.bytes(ee.buffer);
        if (Object.getOwnPropertyNames(ee).indexOf("toJSON") !== -1)
          return this.encode(ee.toJSON());
        if (ee instanceof Map) {
          const ne = /* @__PURE__ */ new Map();
          for (const [ie, ae] of ee.entries())
            ne.set(ie, this._serializer.serializeValue(ae));
          return cbor$1.map(ne, this._stable);
        } else {
          const ne = /* @__PURE__ */ new Map();
          for (const [ie, ae] of Object.entries(ee))
            ne.set(ie, this._serializer.serializeValue(ae));
          return cbor$1.map(ne, this._stable);
        }
      default:
        throw new Error("Invalid value.");
    }
  }
}
serializer$2.JsonDefaultCborEncoder = JsonDefaultCborEncoder;
class ToCborEncoder {
  constructor() {
    this.name = "cborEncoder", this.priority = -90;
  }
  match(ee) {
    return typeof ee == "object" && typeof ee.toCBOR == "function";
  }
  encode(ee) {
    return ee.toCBOR();
  }
}
serializer$2.ToCborEncoder = ToCborEncoder;
class CborSerializer {
  constructor() {
    this._encoders = /* @__PURE__ */ new Set();
  }
  static withDefaultEncoders(ee = !1) {
    const ne = new this();
    return ne.addEncoder(new JsonDefaultCborEncoder(ne, ee)), ne.addEncoder(new ToCborEncoder()), ne;
  }
  removeEncoder(ee) {
    for (const ne of this._encoders.values())
      ne.name == ee && this._encoders.delete(ne);
  }
  addEncoder(ee) {
    this._encoders.add(ee);
  }
  getEncoderFor(ee) {
    let ne = null;
    for (const ie of this._encoders)
      (!ne || ie.priority > ne.priority) && ie.match(ee) && (ne = ie);
    if (ne === null)
      throw new Error("Could not find an encoder for value.");
    return ne;
  }
  serializeValue(ee) {
    return this.getEncoderFor(ee).encode(ee);
  }
  serialize(ee) {
    return this.serializeValue(ee);
  }
}
serializer$2.CborSerializer = CborSerializer;
class SelfDescribeCborSerializer extends CborSerializer {
  serialize(ee) {
    return cbor$1.raw(new Uint8Array([
      ...new Uint8Array([217, 217, 247]),
      ...new Uint8Array(super.serializeValue(ee))
    ]));
  }
}
serializer$2.SelfDescribeCborSerializer = SelfDescribeCborSerializer;
(function(Q) {
  function ee(ae) {
    for (var ce in ae)
      Q.hasOwnProperty(ce) || (Q[ce] = ae[ce]);
  }
  var ne = commonjsGlobal && commonjsGlobal.__importStar || function(ae) {
    if (ae && ae.__esModule)
      return ae;
    var ce = {};
    if (ae != null)
      for (var le in ae)
        Object.hasOwnProperty.call(ae, le) && (ce[le] = ae[le]);
    return ce.default = ae, ce;
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), ee(serializer$2);
  const ie = ne(value);
  Q.value = ie;
})(src);
class PrincipalEncoder$1 {
  get name() {
    return "Principal";
  }
  get priority() {
    return 0;
  }
  match(ee) {
    return ee && ee._isPrincipal === !0;
  }
  encode(ee) {
    return src.value.bytes(ee.toUint8Array().buffer);
  }
}
class BufferEncoder$1 {
  get name() {
    return "Buffer";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return buffer$1.Buffer.isBuffer(ee);
  }
  encode(ee) {
    return src.value.bytes(new Uint8Array(ee));
  }
}
class BigIntEncoder$1 {
  get name() {
    return "BigInt";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return typeof ee == "bigint";
  }
  encode(ee) {
    return ee > BigInt(0) ? src.value.tagged(2, src.value.bytes(blobFromHex(ee.toString(16)))) : src.value.tagged(3, src.value.bytes(blobFromHex((BigInt("-1") * ee).toString(16))));
  }
}
const serializer$1 = src.SelfDescribeCborSerializer.withDefaultEncoders(!0);
serializer$1.addEncoder(new PrincipalEncoder$1());
serializer$1.addEncoder(new BufferEncoder$1());
serializer$1.addEncoder(new BigIntEncoder$1());
var CborTag$1;
(function(Q) {
  Q[Q.Uint64LittleEndian = 71] = "Uint64LittleEndian", Q[Q.Semantic = 55799] = "Semantic";
})(CborTag$1 || (CborTag$1 = {}));
const encode$2 = (Q) => buffer$1.Buffer.from(serializer$1.serialize(Q));
function decodePositiveBigInt$1(Q) {
  const ee = Q.byteLength;
  let ne = BigInt(0);
  for (let ie = 0; ie < ee; ie++)
    ne = ne * BigInt(256) + BigInt(Q[ie]);
  return ne;
}
function decode$3(Q) {
  return new src$1.Decoder({
    size: Q.byteLength,
    tags: {
      2: (ie) => decodePositiveBigInt$1(ie),
      3: (ie) => -decodePositiveBigInt$1(ie),
      [CborTag$1.Semantic]: (ie) => ie
    }
  }).decodeFirst(Q);
}
const cbor = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get CborTag() {
    return CborTag$1;
  },
  encode: encode$2,
  decode: decode$3
}, Symbol.toStringTag, { value: "Module" })), NANOSECONDS_PER_MILLISECONDS$1 = BigInt(1e6), REPLICA_PERMITTED_DRIFT_MILLISECONDS$1 = BigInt(60 * 1e3);
class Expiry$1 {
  constructor(ee) {
    this._value = (BigInt(Date.now()) + BigInt(ee) - REPLICA_PERMITTED_DRIFT_MILLISECONDS$1) * NANOSECONDS_PER_MILLISECONDS$1;
  }
  toCBOR() {
    return src.value.u64(this._value.toString(16), 16);
  }
  toHash() {
    return lebEncode$1(this._value);
  }
}
function makeNonceTransform$1(Q = makeNonce$1) {
  return async (ee) => {
    ee.endpoint === "call" && (ee.body.nonce = Q());
  };
}
function makeExpiryTransform(Q) {
  return async (ee) => {
    ee.body.ingress_expiry = new Expiry$1(Q);
  };
}
var SubmitRequestType$1;
(function(Q) {
  Q.Call = "call";
})(SubmitRequestType$1 || (SubmitRequestType$1 = {}));
var RequestStatusResponseStatus$1;
(function(Q) {
  Q.Received = "received", Q.Processing = "processing", Q.Replied = "replied", Q.Rejected = "rejected", Q.Unknown = "unknown", Q.Done = "done";
})(RequestStatusResponseStatus$1 || (RequestStatusResponseStatus$1 = {}));
const DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1 = 5 * 60 * 1e3, IC_ROOT_KEY$1 = "308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d9685f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484b01291091c5f87b98883463f98091a0baaae";
function getDefaultFetch$1() {
  const Q = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.fetch.bind(self) : global.fetch.bind(global) : window.fetch.bind(window);
  if (!Q)
    throw new Error("Could not find default `fetch` implementation.");
  return Q;
}
class HttpAgent$1 {
  constructor(ee = {}) {
    if (this._pipeline = [], this._rootKeyFetched = !1, this.rootKey = blobFromHex(IC_ROOT_KEY$1), ee.source) {
      if (!(ee.source instanceof HttpAgent$1))
        throw new Error("An Agent's source can only be another HttpAgent");
      this._pipeline = [...ee.source._pipeline], this._identity = ee.source._identity, this._fetch = ee.source._fetch, this._host = ee.source._host, this._credentials = ee.source._credentials;
    } else
      this._fetch = ee.fetch || getDefaultFetch$1() || fetch.bind(global);
    if (ee.host !== void 0)
      !ee.host.match(/^[a-z]+:/) && typeof window < "u" ? this._host = new URL(window.location.protocol + "//" + ee.host) : this._host = new URL(ee.host);
    else if (ee.source !== void 0)
      this._host = ee.source._host;
    else {
      const ne = typeof window < "u" ? window.location : void 0;
      if (!ne)
        throw new Error("Must specify a host to connect to.");
      this._host = new URL(ne + "");
    }
    if (ee.credentials) {
      const { name: ne, password: ie } = ee.credentials;
      this._credentials = `${ne}${ie ? ":" + ie : ""}`;
    }
    this._identity = Promise.resolve(ee.identity || new AnonymousIdentity$1());
  }
  addTransform(ee, ne = ee.priority || 0) {
    const ie = this._pipeline.findIndex((ae) => (ae.priority || 0) < ne);
    this._pipeline.splice(ie >= 0 ? ie : this._pipeline.length, 0, Object.assign(ee, { priority: ne }));
  }
  async getPrincipal() {
    return (await this._identity).getPrincipal();
  }
  async call(ee, ne, ie) {
    const ae = await (ie !== void 0 ? await ie : await this._identity), ce = Principal$2.from(ee), le = ne.effectiveCanisterId ? Principal$2.from(ne.effectiveCanisterId) : ce, de = ae.getPrincipal() || Principal$2.anonymous(), ye = {
      request_type: SubmitRequestType$1.Call,
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: de,
      ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
    };
    let fe = await this._transform({
      request: {
        body: null,
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "call",
      body: ye
    });
    fe = await ae.transformRequest(fe);
    const Be = encode$2(fe.body), [Ee, me] = await Promise.all([
      this._fetch("" + new URL(`/api/v2/canister/${le.toText()}/call`, this._host), Object.assign(Object.assign({}, fe.request), { body: Be })),
      requestIdOf$1(ye)
    ]);
    if (!Ee.ok)
      throw new Error(`Server returned an error:
  Code: ${Ee.status} (${Ee.statusText})
  Body: ${await Ee.text()}
`);
    return {
      requestId: me,
      response: {
        ok: Ee.ok,
        status: Ee.status,
        statusText: Ee.statusText
      }
    };
  }
  async query(ee, ne, ie) {
    const ae = await (ie !== void 0 ? await ie : await this._identity), ce = typeof ee == "string" ? Principal$2.fromText(ee) : ee, le = (ae == null ? void 0 : ae.getPrincipal()) || Principal$2.anonymous(), de = {
      request_type: "query",
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: le,
      ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
    };
    let ye = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read",
      body: de
    });
    ye = await ae.transformRequest(ye);
    const fe = encode$2(ye.body), Be = await this._fetch("" + new URL(`/api/v2/canister/${ce.toText()}/query`, this._host), Object.assign(Object.assign({}, ye.request), { body: fe }));
    if (!Be.ok)
      throw new Error(`Server returned an error:
  Code: ${Be.status} (${Be.statusText})
  Body: ${await Be.text()}
`);
    return decode$3(buffer$1.Buffer.from(await Be.arrayBuffer()));
  }
  async readState(ee, ne, ie) {
    const ae = typeof ee == "string" ? Principal$2.fromText(ee) : ee, ce = await (ie !== void 0 ? await ie : await this._identity), le = (ce == null ? void 0 : ce.getPrincipal()) || Principal$2.anonymous();
    let de = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read_state",
      body: {
        request_type: "read_state",
        paths: ne.paths,
        sender: le,
        ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
      }
    });
    de = await ce.transformRequest(de);
    const ye = encode$2(de.body), fe = await this._fetch("" + new URL(`/api/v2/canister/${ae}/read_state`, this._host), Object.assign(Object.assign({}, de.request), { body: ye }));
    if (!fe.ok)
      throw new Error(`Server returned an error:
  Code: ${fe.status} (${fe.statusText})
  Body: ${await fe.text()}
`);
    return decode$3(buffer$1.Buffer.from(await fe.arrayBuffer()));
  }
  async status() {
    const ee = this._credentials ? {
      Authorization: "Basic " + btoa(this._credentials)
    } : {}, ne = await this._fetch("" + new URL("/api/v2/status", this._host), { headers: ee });
    if (!ne.ok)
      throw new Error(`Server returned an error:
  Code: ${ne.status} (${ne.statusText})
  Body: ${await ne.text()}
`);
    const ie = await ne.arrayBuffer();
    return decode$3(new Uint8Array(ie));
  }
  async fetchRootKey() {
    return this._rootKeyFetched || (this.rootKey = blobFromUint8Array((await this.status()).root_key), this._rootKeyFetched = !0), this.rootKey;
  }
  _transform(ee) {
    let ne = Promise.resolve(ee);
    for (const ie of this._pipeline)
      ne = ne.then((ae) => ie(ae).then((ce) => ce || ae));
    return ne;
  }
}
var ProxyMessageKind$1;
(function(Q) {
  Q.Error = "err", Q.GetPrincipal = "gp", Q.GetPrincipalResponse = "gpr", Q.Query = "q", Q.QueryResponse = "qr", Q.Call = "c", Q.CallResponse = "cr", Q.ReadState = "rs", Q.ReadStateResponse = "rsr", Q.Status = "s", Q.StatusResponse = "sr";
})(ProxyMessageKind$1 || (ProxyMessageKind$1 = {}));
class ProxyStubAgent {
  constructor(ee, ne) {
    this._frontend = ee, this._agent = ne;
  }
  onmessage(ee) {
    switch (ee.type) {
      case ProxyMessageKind$1.GetPrincipal:
        this._agent.getPrincipal().then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.GetPrincipalResponse,
            response: ne.toText()
          });
        });
        break;
      case ProxyMessageKind$1.Query:
        this._agent.query(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.QueryResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind$1.Call:
        this._agent.call(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.CallResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind$1.ReadState:
        this._agent.readState(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.ReadStateResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind$1.Status:
        this._agent.status().then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.StatusResponse,
            response: ne
          });
        });
        break;
      default:
        throw new Error(`Invalid message received: ${JSON.stringify(ee)}`);
    }
  }
}
class ProxyAgent {
  constructor(ee) {
    this._backend = ee, this._nextId = 0, this._pendingCalls = /* @__PURE__ */ new Map(), this.rootKey = null;
  }
  onmessage(ee) {
    const ne = ee.id, ie = this._pendingCalls.get(ne);
    if (!ie)
      throw new Error("A proxy get the same message twice...");
    this._pendingCalls.delete(ne);
    const [ae, ce] = ie;
    switch (ee.type) {
      case ProxyMessageKind$1.Error:
        return ce(ee.error);
      case ProxyMessageKind$1.GetPrincipalResponse:
      case ProxyMessageKind$1.CallResponse:
      case ProxyMessageKind$1.QueryResponse:
      case ProxyMessageKind$1.ReadStateResponse:
      case ProxyMessageKind$1.StatusResponse:
        return ae(ee.response);
      default:
        throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(ee)}`);
    }
  }
  async getPrincipal() {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.GetPrincipal
    }).then((ee) => {
      if (typeof ee != "string")
        throw new Error("Invalid principal received.");
      return Principal$2.fromText(ee);
    });
  }
  readState(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.ReadState,
      args: [ee.toString(), ne]
    });
  }
  call(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Call,
      args: [ee.toString(), ne]
    });
  }
  status() {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Status
    });
  }
  query(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Query,
      args: [ee.toString(), ne]
    });
  }
  async _sendAndWait(ee) {
    return new Promise((ne, ie) => {
      this._pendingCalls.set(ee.id, [ne, ie]), this._backend(ee);
    });
  }
  async fetchRootKey() {
    const ee = (await this.status()).root_key;
    return this.rootKey = ee, ee;
  }
}
function getDefaultAgent$1() {
  const Q = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.ic.agent : global.ic.agent : window.ic.agent;
  if (!Q)
    throw new Error("No Agent could be found.");
  return Q;
}
const managementCanisterIdl$1 = ({ IDL: Q }) => {
  const ee = Q.Principal, ne = Q.Vec(Q.Nat8), ie = Q.Record({
    compute_allocation: Q.Opt(Q.Nat),
    memory_allocation: Q.Opt(Q.Nat)
  });
  return Q.Service({
    provisional_create_canister_with_cycles: Q.Func([Q.Record({ amount: Q.Opt(Q.Nat), settings: Q.Opt(ie) })], [Q.Record({ canister_id: ee })], []),
    create_canister: Q.Func([], [Q.Record({ canister_id: ee })], []),
    install_code: Q.Func([
      Q.Record({
        mode: Q.Variant({ install: Q.Null, reinstall: Q.Null, upgrade: Q.Null }),
        canister_id: ee,
        wasm_module: ne,
        arg: Q.Vec(Q.Nat8)
      })
    ], [], []),
    set_controller: Q.Func([Q.Record({ canister_id: ee, new_controller: Q.Principal })], [], [])
  });
};
function getManagementCanister$1(Q) {
  function ee(ne, ie, ae) {
    const ce = ie[0];
    let le = Principal$2.fromHex("");
    return ce && typeof ce == "object" && ce.canister_id && (le = Principal$2.from(ce.canister_id)), { effectiveCanisterId: le };
  }
  return Actor$1.createActor(managementCanisterIdl$1, Object.assign(Object.assign(Object.assign({}, Q), { canisterId: Principal$2.fromHex("") }), {
    callTransform: ee,
    queryTransform: ee
  }));
}
class AgentError$1 extends Error {
}
var decode$2;
(function() {
  for (var Q = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", ee = new Uint8Array(256), ne = 0; ne < Q.length; ne++)
    ee[Q.charCodeAt(ne)] = ne;
  decode$2 = function(ie) {
    var ae = ie.length * 0.75, ce = ie.length, le, de = 0, ye, fe, Be, Ee;
    ie[ie.length - 1] === "=" && (ae--, ie[ie.length - 2] === "=" && ae--);
    var me = new ArrayBuffer(ae), ge = new Uint8Array(me);
    for (le = 0; le < ce; le += 4)
      ye = ee[ie.charCodeAt(le)], fe = ee[ie.charCodeAt(le + 1)], Be = ee[ie.charCodeAt(le + 2)], Ee = ee[ie.charCodeAt(le + 3)], ge[de++] = ye << 2 | fe >> 4, ge[de++] = (fe & 15) << 4 | Be >> 2, ge[de++] = (Be & 3) << 6 | Ee & 63;
    return me;
  };
})();
let wasm$1;
const wasmBytesBase64$1 = `
    AGFzbQEAAAABXg9gAn9/AGABfwBgA39/fwBgAn9/AX9gAX8Bf2ADf39/AX9gBH9/f38AYAV/f39/fwBgBn9/f39/fwF/
    YAAAYAZ/f39/f38AYAV/fn5+fgBgAAF/YAF/AX5gAn9/AX4DvAG6AQgEAAEAAAABAgEDAAAMAAACAQEKAQAHBgEAAQEA
    AgcCAgABAgAGAAgOBAEBBAAAAQALAQkAAwMAAQQBAAICAAIBAQEBAQEGAQACAQEEAAECAQEABQMBAQMEAwQCAwAAAAEA
    AAAAAAEFAQEAAAACAQIAAQMAAQAGBAACAgMEAAAAAAAGAAQABAQEBAAAAwIAAgACAAEBAAAAAQEBAAEAAAAAAgAAAQAB
    AQEBAQEBAQEBAQIBAAAAAQ0AAQQFAXABBQUFAwEAEQYJAX8BQYCAwAALBzYEBm1lbW9yeQIACGJsc19pbml0AA0KYmxz
    X3ZlcmlmeQAnEV9fd2JpbmRnZW5fbWFsbG9jAHwJDQEAQQELBLgBCrkBtwEKiO8CugGXVQIQfwV+IwBB4OEAayIGJABB
    KxABIgkEQCAJQfSgwABBKxBnIQwDQCAHQStHBEAgByAMaiIJQV9BfyAJLQAAIglBn39qQf8BcUEaSRsgCXE6AAAgB0EB
    aiEHDAELC0EAIQcgBkGoA2pBOBByGiAGQQE2AuADIAZB6ANqQTgQciEPIAZBoARqQQE2AgAgBkGoBmpBoKfAABBfIAZB
    qAZqECkhCSAGQbgVakGAAhByGiAGQdjbAGpBgAEQchogBkGbI2pBgQIQciENIAZBsAxqQcAAEHIaIAZByM8AakHAABBy
    GiAGQdDVAGpBwAAQchogBkEAOgCaIyAGIAlB/wBqIhBBA3ZBAWoiCkEBdCILOgCZIyAGIApBB3Y6AJgjIAtBf2pBBXYi
    CEEBaiERA0AgB0ErRwRAIAcgDWogByAMai0AADoAACAHQQFqIQcMAQsLIAZBKzoAxiMgBkEgaiAGQZgjakEvQdinwAAQ
    ggEgBkGwDGpBwAAgAiADIAYoAiAgBigCJBATQQAhDUEAIAtrIRIgBkGZI2ohE0EBIQNBACEJA0ACQCANIAMgEUtyRQRA
    IAMgCEshDSADIAMgCE1qIQJBACEHA0AgB0EgRgRAIAYgAzoAmCNBACEHA0AgB0ErRwRAIAcgE2ogByAMai0AADoAACAH
    QQFqIQcMAQsLIAZBKzoAxCMgBkEYaiAGQZgjakEtQeinwAAQggFBACEHIAZByM8AakEAIAZB0NUAakEgIAYoAhggBigC
    HBATIAkgEmohAyAJIAlBgAIgCUGAAksbIg5rIRQgBkG4FWogCWohFQJAA0AgB0EgRg0FIAcgFGpFDQEgByAVaiAGQcjP
    AGogB2otAAA6AAAgAyAHQQFqIgdqDQALIAIhAyALIQkMBQsgDkGAAkH4p8AAEDwABSAGQcjPAGogB2oiDiAOLQAAIAZB
    sAxqIAdqLQAAcyIOOgAAIAZB0NUAaiAHaiAOOgAAIAdBAWohBwwBCwALAAsgEEGACEkhDUEAIQNBACEJA0ACQCAJQQJH
    BEAgCUEBaiELIAZBuBVqIANqIQJBACEHAkADQCAHIApGBEAgDQRAIAZByM8AakHwABByGiAGQdjbAGohCCAKIQcDQCAH
    BEAgBkHIzwBqQQgQLiAGIAYpA8hPIAgxAAB8NwPITyAHQX9qIQcgCEEBaiEIDAELCyAGQcjPAGoQRSAGQdDVAGogBkGo
    BmoQMCAGQZgjakHwABByGiAGQcjPAGogBkHQ1QBqEDZBAEgNBUEAIQIDQCAGQdDVAGpBARAuIAJBAWohAiAGQcjPAGog
    BkHQ1QBqEDZBf0oNAAsDQCACQQFIDQZBACEHA0AgB0HoAEYEQCAGIAYpA7hWQgGHNwO4VkEAIQcDQCAHQfAARwRAIAZB
    mCNqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQcMAQsLIAZBmCNqIAZB0NUAahBkIAZBmCNqEEUgBikDgCRCP4chF0EA
    IQcDQCAHQfAARwRAIAZByM8AaiAHaiIIIAZBmCNqIAdqKQMAIhYgCCkDAIUgF4MgFoU3AwAgB0EIaiEHDAELCyACQX9q
    IQIMAgUgBkHQ1QBqIAdqIgggCEEIaikDAEI5hkKAgICAgICAgAKDIAgpAwBCAYeENwMAIAdBCGohBwwBCwALAAsACyAK
    QYABQaChwAAQPQALIAMgB2oiCEH/AU0EQCAHQYABRg0CIAZB2NsAaiAHaiACIAdqLQAAOgAAIAdBAWohBwwBCwsgCEGA
    AkGwocAAEDwAC0GAAUGAAUHAocAAEDwACyAGQShqIAZBqANqEAIgBkG4EmogDxACIAZBKGogBkG4EmoQDCAGQegBakHo
    g8AAEF8CQAJAIAZB6AFqEFoNACAGQShqEIQBDQAgBkGIPWoQS0EAIQcgBkGIwwBqQTgQchogBkG4IWpBOBByGiAGQYjA
    AGoQSyAGQcjEAGoQSyAGQcjJAGoQSyAGQcjMAGoQSyAGQagGahBLIAZBsAxqEEsgBkHIzwBqEEsgBkHQ1QBqEEsgBkHY
    2wBqEEsgBkG4FWoQSyAGQZgjaiAGQcjJAGpBwAEQZxogBkHYJGogBkHIzABqQcABEGcaIAZBmCZqIAZBqAZqQcABEGca
    IAZB2CdqIAZBsAxqQcABEGcaIAZBmClqIAZByM8AakHAARBnGiAGQdgqaiAGQdDVAGpBwAEQZxogBkGYLGogBkHY2wBq
    QcABEGcaIAZB2C1qIAZBuBVqQcABEGcaIAZBuBVqQecAEHIaIAZBiMAAaiAGQShqEH8gBkGIwABqEBggBkGYI2ogBkEo
    ahB/A0AgB0HACkYEQCAGQbghaiAGQegBahBrIAYpA7ghIRcgBkG4IWpBARCdASAGQbghahBEIAYpA7ghIRYgBkGIwwBq
    IAZBuCFqEGsgBkGIwwBqQQEQnQEgBkGIwwBqEEQgBkG4IWogBkGIwwBqIBdCAoGnEE8gBkGIwABqIAZBKGogFkICgacQ
    bSAGQcjEAGogBkGIwABqEH8gBkG4IWoQKUEDaiIJQQJ2IgdBAWohAkEAIQgCQAJAAkADQAJAIAZBuCFqQQUQjAEhAyAC
    IAhGBEAgCUGYA0kNASACQecAQbCEwAAQPAALIAhB5wBGDQIgBkG4FWogCGogA0FwaiIDOgAAIAZBuCFqIANBGHRBGHUQ
    ngEgBkG4IWoQRCAGQbghakEEEDsgCEEBaiEIDAELCyAGQbgVaiACaiADOgAAIANBGHRBGHVBf2oiA0EBdiECIANBD0sN
    ASAGQYg9aiAGQZgjaiACQcABbGoQfwNAIAdBf0YEQCAGQYg9aiAGQcjEAGoQcyAGQZgjaiAGQYg9akHAARBnGgwICyAH
    QeYASw0DIAZBiMAAaiAGQZgjaiAGQbgVaiAHaiwAABAfIAdBf2ohByAGQYg9ahAYIAZBiD1qEBggBkGIPWoQGCAGQYg9
    ahAYIAZBiD1qIAZBiMAAahAMDAALAAtB5wBB5wBBoITAABA8AAsgAkEIQcCEwAAQPAALIAdB5wBB0ITAABA8AAUgBkHI
    xABqIAZBmCNqIAdqIgIQfyACQcABaiICIAZByMQAahB/IAIgBkGIwABqEAwgB0HAAWohBwwBCwALAAsgBkGYI2oQSwsgB
    kEoaiAGQZgjahB/IAZBKGoQRyAMEAlBACEHIAZBqAZqQTAQchogBkGwDGpBoKfAABBfAkACQAJAAkACQANAAkAgB0EwRg
    RAIAYgBi0AqAZBH3E6AKgGIAZByM8AaiAGQagGahBdIAENAUEAQQBB8ILAABA8AAsgASAHRg0CIAZBqAZqIAdqIAAgB2o
    tAAA6AAAgB0EBaiEHDAELC0EAIQcCQCAALAAAIgJBAE4EQCAAQTBqIQAgAUEwIAFBMEsbQVBqIQIDQCAHQTBGBEAgBkHY
    2wBqIAZBqAZqEF0gBkHoAWoQSyAGQegBaiAGQcjPAGoQtAEgBkGoAmoiACAGQdjbAGoQtAEgBkHoAmoQaSAGQegBahBEI
    AZBuBVqIAZB6AFqEE0gBkGYI2ogABCFASAGQZgjahADIAZBmCNqIAZBuBVqEFkNAyAGQegBahCUAQwDCyACIAdGDQQgBk
    GoBmogB2ogACAHai0AADoAACAHQQFqIQcMAAsACyAGQZgjahBLIAZB0NUAakE4EHIaIAZBATYCiFYgBkGYI2ogBkHIzwB
    qELQBIAZBmCNqEEQgBkGYJGoQaSAGQdjbAGogBkGYI2oQTQJAIAZB2NsAaiAGQdDVAGoQXEEBRwRAIAZBmCNqEJQBDAEL
    IAZBuBVqIAZB2NsAaiAGQdDVAGoQIyAGQbgVahBYBEAgBkG4FWoQQSAGQbgVahBECyAGQdgjaiAGQbgVahClAQsgAkEgc
    UEFdiAGQdgjahBMQQFGRwRAIAZBmCNqEKYBCyAGQegBaiAGQZgjakHAARBnGgsgBkHQPGpB8IHAABBfIAZB6AFqEIQBRQ
    0CDAMLIAEgAUHggsAAEDwACyAHQTBqIAFBgIPAABA8AAsgBkGoA2oQSyAGQagDaiAGQegBahB/IAZBuBJqEEsgBkG4Emo
    gBkHoAWoQfyAGQbgSahBHIAZByMcAakHwgcAAEF8gBkGYI2pBqILAABBfIAZBiMMAaiAGQZgjahCLAUEAIQAgBkG4IWpB
    OBByGiAGQfAhakE4EHIhCSAGQdjbAGpB8IHAABBfIAZBuBVqQYCAwAAQXyAGQZgjakE4EHIaIAZBkCNqIQsgBkGwFWohC
    gJAAkADQCAAQQdGDQIgAEEBaiEBIAZBuBVqIABBA3RqIQxCACEXQQAhAwNAIANBf2ohByAKIANBA3RqIQIgCyAAIANqQQ
    N0aiEIA0AgB0EGRgRAIAEhAAwDCyAIQQhqIQggAkEIaiECIAAgB0EBaiIHakEGSw0ACyAAQQZNBEAgB0EGSw0DIAdBAWo
    hAyAGQQhqIAIpAwAiFiAWQj+HIAwpAwAiFiAWQj+HEDEgCCAGKQMIIhkgF3wiFiAIKQMAIhp8IhhC//////////8DgzcD
    ACAYIBZUrSAWIBlUrSAGQRBqKQMAIBdCP4d8fCAaQj+HfHxCBoYgGEI6iIQhFwwBCwsLIABBB0G0ncAAEDwACyAHQQdBx
    J3AABA8AAsgBkG4IWogBkHQPGoQayAGQbghaiAGQZgjahAkIAkgBkHQPGoQayAJIAZBmCNqEBwgCSAGQdjbAGoQYyAGQb
    gSaiAGQYjDAGoQSCAGQbghahApIQAgBkGIyABqIAZBuCFqIAZByMcAahCNASAGQYjIAGoQKSAASQRAIAZBuCFqIAZBiMg
    AahBrIAZBqANqEKYBCyAJECkhACAGQYjIAGogCSAGQcjHAGoQjQEgBkGIyABqECkgAEkEQCAJIAZBiMgAahBrIAZBuBJq
    EKYBCyAGQbghahBEIAkQREEAIQcgBkHIyABqQTgQchogBkGIyQBqQTgQchogBkGYO2pBOBByGiAGQYg9ahBLIAZBiMAAa
    hBLIAZByMQAahBLIAZByMkAahBLIAZByMwAahBLIAZBqAZqEEsgBkGwDGoQSyAGQcjPAGoQSyAGQdDVAGoQSyAGQdjbAG
    oQSyAGQbgVahBLIAZBmCNqIAZByMkAakHAARBnGiAGQdgkaiAGQcjMAGpBwAEQZyEAIAZBmCZqIAZBqAZqQcABEGchASA
    GQdgnaiAGQbAMakHAARBnIQsgBkGYKWogBkHIzwBqQcABEGchCiAGQdgqaiAGQdDVAGpBwAEQZyECIAZBmCxqIAZB2NsA
    akHAARBnIQMgBkHYLWogBkG4FWpBwAEQZyEIIAZBuBVqQcwBEHIaIAZByMgAaiAGQbghahBrIAZBiMkAaiAJEGsgACAGQ
    agDahB/IAAgBkG4EmoQcyABIAZBqANqEH8gASAGQbgSahAMIAZBiD1qIAZBuBJqEH8gBkGIPWoQGCAGQcjEAGogABB/IA
    ZBmCNqIAZByMQAahB/IAZBmCNqIAZBiD1qEHMgBkHIxABqIAEQfyALIAZByMQAahB/IAsgBkGIPWoQDCAGQYjAAGogBkG
    oA2oQfyAGQYjAAGoQGCAGQcjEAGogABB/IAIgBkHIxABqEH8gAiAGQYjAAGoQDCAGQcjEAGogARB/IAMgBkHIxABqEH8g
    AyAGQYjAAGoQDCAGQcjEAGogAhB/IAogBkHIxABqEH8gCiAGQYg9ahBzIAZByMQAaiADEH8gCCAGQcjEAGoQfyAIIAZBi
    D1qEAwgBikDyEghFyAGQcjIAGpBARCdASAGQcjIAGoQRCAGKQPISCEWIAZBmDtqIAZByMgAahBrIAZBmDtqQQEQnQEgBk
    GYO2oQRCAGQcjIAGogBkGYO2ogF0ICgacQTyAGQYjAAGogBkGoA2ogFkICgacQbSAGQcjEAGogBkGIwABqEH8gBikDiEk
    hFyAGQYjJAGpBARCdASAGQYjJAGoQRCAGKQOISSEWIAZBmDtqIAZBiMkAahBrIAZBmDtqQQEQnQEgBkGYO2oQRCAGQYjJ
    AGogBkGYO2ogF0ICgacQTyAGQYg9aiAGQbgSaiAWQgKBpxBtIAZByMQAaiAGQYg9ahAMIAZBmDtqIAZByMgAahBrIAZBm
    DtqIAZBiMkAahBhIAZBmDtqEEQgBkGYO2oQKUEBaiICQQF2IghBAWohAAJAAkACQAJAA0ACQCAGQcjIAGpBAxCMASEBIA
    AgB0YEQCAGQYjJAGpBAxCMASEDIAJBlgNJDQEgAEHMAUG0g8AAEDwACyAGQcjIAGogAUF8aiIBEJ4BIAZByMgAahBEIAZ
    ByMgAakECEDsgBkGIyQBqIAZBiMkAakEDEIwBQXxqIgMQngEgBkGIyQBqEEQgBkGIyQBqQQIQOyAHQcwBRg0CIAZBuBVq
    IAdqIAMgAUECdGo6AAAgB0EBaiEHDAELCyAGQbgVaiAAaiADIAFBAnRqIgA6AAAgAEEYdEEYdUF/aiIBQQF2IQAgAUEPS
    w0BIAZBiD1qIAZBmCNqIABBwAFsahB/A0AgCEF/Rg0EIAhBywFLDQMgBkGIwABqIAZBmCNqIAZBuBVqIAhqLAAAEB8gCE
    F/aiEIIAZBiD1qEBggBkGIPWoQGCAGQYg9aiAGQYjAAGoQDAwACwALQcwBQcwBQaSDwAAQPAALIABBCEHEg8AAEDwACyA
    IQcwBQdSDwAAQPAALIAZBiD1qIAZByMQAahBzIAZBqANqIAZBiD1qQcABEGcaQX8hByAGQagDahCEAUUNASAGQegBahCm
    AUEAIQcgBkHIzwBqQeAAEHIaIAUEQANAIAdB4ABGBEAgBiAGLQDIT0EfcToAyE8gBkHQ1QBqIAZByM8AahAhAkACQAJAI
    AQsAAAiA0F/SgRAIARB4ABqIQAgBUHgACAFQeAASxtBoH9qIQFBACEHA0AgB0HgAEYEQCAGQZgjaiAGQcjPAGoQISAGQa
    gDaiAGQdDVAGogBkGYI2oQPwwDCyABIAdGDQMgBkHIzwBqIAdqIAAgB2otAAA6AAAgB0EBaiEHDAALAAsgBkGYI2oQKiA
    GQYjAAGpBOBByGiAGQQE2AsBAIAZBmCNqIAZB0NUAahCQASAGQZgkaiIBELABIAZBmCVqELABIAZBmCNqEKgBIAZB2NsA
    aiAGQZgjahAmIAZBuBVqIAZB2NsAahBeIAZBuBVqEKYBIAZBuBVqIAZB2NsAahAPIAZBsAxqIAZBuBVqQcAAEGcaAkAgB
    kGwDGogBkGIwABqEFxBAUcEQCAGQZgjahCYAQwBCyAGQdjbAGoQhwFFBEAgBkHIxABqIAZBmNwAaiIAEIUBIAZByMkAai
    AGQdjbAGoQhQEgBkHIzABqIAZB2NsAahCFASAGQagGakE4EHIaIAZBATYC4AYgBkGwDGpBOBByGiAGQQE2AugMIAZByMQ
    AahADIAZByMkAahADIAZByMQAaiAGQcjJAGoQeCAGQcjEAGoQRCAGQbgVaiAGQcjEAGogBkGIwABqECMgBkHIyQBqIAZB
    uBVqEKUBIAZByMQAaiAGQcjJAGoQpQEgBkHIyQBqIAZB2NsAahClASAGQcjJAGogBkHIxABqEHggBkHIyQBqEEQgBkHIy
    QBqEEIgBkHIxABqIAAQpQEgBkHIxABqEEIgBkHIyQBqIAZBsAxqEFwhAiAGQcjMAGogBkGwDGoQpQEgBkHIzABqEEEgBk
    HIzABqEEQgBkGoBmogBkHIyQBqEKUBIAZBqAZqEEEgBkGoBmoQRCAGQcjJAGogBkGoBmpBASACayICEHkgBkGwDGogBkH
    IzABqIAIQeSAGQbgVaiAGQcjJAGogBkGwDGoQIyAGQdjbAGogBkG4FWoQpQEgBkHIzABqIAZByMkAahClASAGQcjMAGog
    BkGwDGoQNCAGQcjMAGogBkHY2wBqEEggACAGQcjMAGoQpQEgACAGQcjEAGoQSCAGQagGaiAGQdjbAGoQpQEgBkHY2wBqI
    AAgAhB5IAAgBkGoBmogAhB5IAZB2NsAahCJASEAIAZBuBVqIAZB2NsAahBeIAZBuBVqEDogBkG4FWoQqAEgBkHY2wBqIA
    ZBuBVqIAAQjwELIAZB2NsAahCJAQRAIAZB2NsAahA6CyAGQdjbAGoQqwEgASAGQdjbAGoQkAELQQAhAgJAIAEQhwENACA
    GQdgkahBMIgINACABEEwhAgsgA0EgcUEFdiACQQFGRwRAIAZBmCNqEJwBCyAGQagDaiAGQZgjakGAAxBnGgsgBkHIyABq
    QfCBwAAQXyAGQagDahCIAQ0FIAZBuBJqECogBkG4FWoQKiAGQdDVAGoQKiAGQdjbAGoQKiAGQZgjahAqIAZBuBhqIAZB0
    NUAakGAAxBnIQ0gBkG4G2ogBkHY2wBqQYADEGchCSAGQbgeaiAGQZgjakGAAxBnIQAgBkHY2wBqQbiAwAAQXyAGQZgjak
    HwgMAAEF8gBkGIwwBqIAZB2NsAaiAGQZgjahBJIAZBiMkAakHwgcAAEF9BACEHIAZBuCFqQTgQchogBkHwIWpBqAEQciE
    DIAZBsAxqQfCBwAAQXyAGQcjPAGpBgIDAABBfIAZB4CJqIQEgBkGoImohDyAGQdDVAGogBkHIyABqEF8DQCAHQagBRg0C
    IAZBuCFqIAdqIgIgBkHQ1QBqEGsgAiAGQcjPAGoQJCAHQThqIQcgBkHQ1QBqIAZByM8AahAcDAALAAsgB0HgAGogBUGwp
    MAAEDwACyABIAZB0NUAahBrQQAhByAGQdjbAGpBOBByGiAGQZgjaiADIAZBsAxqEI0BIAZB2NsAaiAGQZgjahBrIAMgBk
    HY2wBqEGsgBkGYI2ogASAGQbAMahCNASAGQdjbAGogBkGYI2oQayABIAZB2NsAahBrIAZBiD1qECogBkGIwwBqEEAgBkG
    IwwBqEKgBIAZBmDtqQTgQchogBkG4FWogBkGoA2oQfgNAIAdBgAlGBEACQCAGQbgVaiECQQAhBwNAIAdB4AFHBEAgBkG4
    IWogB2oiBBApIQUgBkGYI2ogBCAGQYjJAGoQjQEgBkGYO2ogBkGYI2oQayAGQZg7ahApIAVJBEAgBCAGQZg7ahBrIAIQn
    AELIAQQRCAHQThqIQcgAkGAA2ohAgwBCwsgBkHIxABqECogBkGIwABqECogBkGYI2oQKiAGQcjJAGoQKiAGQcjMAGoQKi
    AGQagGahAqIAZBsAxqECogBkHIzwBqECogBkHQ1QBqECogBkHY2wBqECogBkGYJmogBkHIyQBqQYADEGchAiAGQZgpaiA
    GQcjMAGpBgAMQZyEEIAZBmCxqIAZBqAZqQYADEGchBSAGQZgvaiAGQbAMakGAAxBnIQsgBkGYMmogBkHIzwBqQYADEGch
    CiAGQZg1aiAGQdDVAGpBgAMQZyEIIAZBmDhqIAZB2NsAakGAAxBnIQxBACEHIAZBqAZqQTgQchogBkGwDGogBkG4IWoQX
    yAGQcjPAGogAxBfIAZB0NUAaiAPEF8gBkHY2wBqIAEQXyAGQegMaiAGQcjPAGpBOBBnGiAGQaANaiAGQdDVAGpBOBBnGi
    AGQdgNaiAGQdjbAGpBOBBnGiAGQdDVAGpBlwMQchogBkHY2wBqQZcDEHIaA0AgB0HgAUYEQAJAIAZBmCNqIAZBuBVqEH4
    gBkHIxABqIAZBmCNqEH4gAiAGQcjEAGoQfiACIA0QCyAEIAZByMQAahB+IAQgCRALIAZByMQAaiACEH4gBSAGQcjEAGoQ
    fiAFIAkQCyAGQcjEAGogBkGYI2oQfiALIAZByMQAahB+IAsgABALIAZByMQAaiACEH4gCiAGQcjEAGoQfiAKIAAQCyAGQ
    cjEAGogBBB+IAggBkHIxABqEH4gCCAAEAsgBkHIxABqIAUQfiAMIAZByMQAahB+IAwgABALIAZBsAxqQQEgBikDsAxCAo
    GnayIFEJ0BIAZBsAxqEEQgBkGoBmoQdEEAIQAgBkGwDGohAgJAAkACQAJAA38gAEEERgR/IAZBqAZqECkiA0GXA08NAiA
    DQQFqIQkgBkHY2wBqIANqQQE6AAAgBkHY2wBqIQggAwVBACEHA0AgB0E4RwRAIAZBqAZqIAdqIgEgASkDACACIAdqKQMA
    hDcDACAHQQhqIQcMAQsLIAJBOGohAiAAQQFqIQAMAQsLIQcDQCAHBEAgBkGwDGpBARA7IAggBikDsAxCAoGnQQF0QX9qO
    gAAIAdBf2ohByAIQQFqIQgMAQsLQQAhBwNAIAcgCUYEQCAGQYjAAGogBkGYI2ogBkHQ1QBqIANqLQAAQRl0QRh1QQFyEC
    AgA0F/aiEHA0AgB0F/Rg0GIAZBiMAAahAUIAdBlgNLDQUgBkHIxABqIAZBmCNqIAZB2NsAaiAHai0AACAGQdDVAGogB2o
    tAABBAXRqQRh0QRh1ECAgB0F/aiEHIAZBiMAAaiAGQcjEAGoQCwwACwALIAdBlwNGDQIgB0EBaiEBQQAhACAGQdDVAGog
    B2oiC0EAOgAAIAZB2NsAaiAHai0AACEKQQEhAkE4IQcDQCAHQeABRgRAIAEhBwwCBSAGQbAMaiAHaiIEKQMAIRcgBEEBE
    DsgBCAKIBdCAoGnbCIIQRh0QRl1EJ4BIAQQRCALIAAgAiAIbGoiADoAACAHQThqIQcgAkEBdCECDAELAAsACwALIANBlw
    NBkKXAABA8AAtBlwNBlwNBoKXAABA8AAsgB0GXA0GwpcAAEDwACyAGQcjEAGogBkGIwABqEH4gBkHIzwBqECogBkHIzwB
    qIAZBuBVqEH4gBkHIzwBqEJwBIAZByMQAaiAGQcjPAGoQCyAGQYjAAGogBkHIxABqIAUQbyAGQbgSaiAGQYjAAGoQfkF/
    IQcgBkG4EmoQiAFFDQogBkG4EmoQOCAGQbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZBmDtqIAZBuBVqIAZBmCNqEEkgB
    kGYPGpBOBByGiAGQdA8akE4EHIaIAZBiD1qECogBkHoAWoQhAFFBEAgBkEoahCEAQ0BIAZBiMAAahAqIAZBiMAAaiAGQb
    gSahB+IAZBiMAAahBKIAZBiMMAahBLIAZBiMMAaiAGQegBahB/IAZBiMMAahBHIAZByMQAahAqIAZByMQAaiAGQagDahB
    +IAZByMQAahBKIAZBuCFqEEsgBkG4IWogBkEoahB/IAZBuCFqEEcgBkGYI2ogBkGIwwBqEIUBIAZByMcAaiAGQZgjahCF
    ASAGQZgjaiAGQcjDAGoQhQEgBkGIyABqIAZBmCNqEIUBIAZBmCNqIAZBuCFqEIUBIAZByMgAaiAGQZgjahCFASAGQZgja
    iAGQfghahCFASAGQYjJAGogBkGYI2oQhQEgBkHIyQBqECogBkHIzABqECogBkHQ1QBqEGAgBkHIyQBqIAZBiMAAahB+IA
    ZByMwAaiAGQcjEAGoQfiAGQbAMahAqIAZBsAxqIAZBiMAAahB+IAZBsAxqEJwBIAZByM8AahAqIAZByM8AaiAGQcjEAGo
    QfiAGQcjPAGoQnAEgBkHQPGogBkGYPGoQVEF/aiEHA0AgB0EBTQRAIAZB0NUAahCTASAGQagGaiAGQdDVAGpBiAYQZxoM
    BgsgBkHQ1QBqEBsgBkHY2wBqIAZByMkAaiAGQcjHAGogBkGIyABqEBcgBkG4FWogBkHIzABqIAZByMgAaiAGQYjJAGoQF
    yAGQdjbAGogBkG4FWoQBiAGQdDVAGogBkHY2wBqEAQCQAJAIAZB0DxqIAdBf2oiBxBXIAZBmDxqIAcQV2tBAWoOAwECAA
    ILIAZB2NsAaiAGQcjJAGogBkGIwABqIAZByMcAaiAGQYjIAGoQFiAGQZgjaiAGQcjMAGogBkHIxABqIAZByMgAaiAGQYj
    JAGoQFiAGQdjbAGogBkGYI2oQBiAGQdDVAGogBkHY2wBqEAQMAQsgBkHY2wBqIAZByMkAaiAGQbAMaiAGQcjHAGogBkGI
    yABqEBYgBkGYI2ogBkHIzABqIAZByM8AaiAGQcjIAGogBkGIyQBqEBYgBkHY2wBqIAZBmCNqEAYgBkHQ1QBqIAZB2NsAa
    hAEDAALAAsgBkGoBmogBkGoA2ogBkEoahAQDAMLBSAGQbAMaiAHahBEIAdBOGohBwwBCwsgBkGoBmogBkG4EmogBkHoAW
    oQEAsFIAZBiD1qIAZBuBVqIAdqIgIQfiACQYADaiIEIAZBiD1qEH4gBkGYI2ogBkGIwwBqEF4gBkGYI2oQMiAEEKYBIAJ
    BgARqIgUQpgEgAkGABWoiAhCmASACEKsBIAQgBkGYI2oQDyAFIAZBmCNqEA8gBSAGQYjDAGoQDyAHQYADaiEHDAELCyAG
    QbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZByMQAaiAGQbgVaiAGQZgjahBJIAZBiMAAakGAgMAAEF8gBkGwDGogBkGoB
    moQaiAGQcjPAGogBkGwDGoQaiAGQdDVAGogBkHIzwBqEI4BIAZB2NsAaiAGQcjRAGoiARCOASAGQbgVaiAGQcjPAGoQjg
    EgBkGYI2oQLyAGQcjPAGoQmQEgBkHQ1QBqECIgBkHY2wBqIAZByNMAaiIAEBkgBkHY2wBqEGYgBkHQ1QBqIAZB2NsAahC
    BASAGQdDVAGoQrAEgBkHY2wBqIAAQkgEgBkHY2wBqECIgBkHY2wBqEGYgBkG4FWogARAZIAZB2NsAaiAGQbgVahCBASAG
    QdjbAGoQrAEgBkG4FWogARCSASAGQbgVahAiIAZBmCNqIAZByM8AahCSASAGQZgjaiAAEBkgBkG4FWogBkGYI2oQgQEgB
    kG4FWoQrAEgBkGYI2ogARCSASAGQZgjaiAGQbgVahAZIAZBmCNqEGYgBkHIzwBqIAZB0NUAahAZIAZBmCNqIAZByM8Aah
    CWASAAIAZB2NsAahAZIAAQZiAGQZgjaiAAEJYBIAZBmCNqEKwBIAZByMkAaiAGQZgjahBeIAZByMwAaiAGQZgkaiICEF4
    gBkHIyQBqEDIgBkHIzABqEDIgBkHIzABqEFUgBkHIzABqEKgBIAZByMkAaiAGQcjMAGoQfSAGQcjJAGoQQCAGQZgjaiAG
    QcjJAGoQDyAGQcjJAGoQOiAGQcjJAGoQqAEgAiAGQcjJAGoQDyAGQcjPAGogBkHQ1QBqEJIBIAZByM8AaiAGQZgjahAZI
    AEgBkHY2wBqEJIBIAEgBkGYI2oQGSAAIAZBuBVqEJIBIAAgBkGYI2oQGSAGQQU2AshVIAZBsAxqEJMBIAZBsAxqIAZByM
    8AahAOIAZByM8AaiAGQbAMahBsIAZBsAxqIAZByMQAahA3IAZBsAxqIAZByMQAahA3IAZBsAxqIAZByM8AahAOIAZB0NU
    AaiAGQbAMahBqIAZB0NUAahAaIAZB0NUAaiAGQbAMahAOIAZBmCNqIAZBsAxqIAZBiMAAahAdIAZB2NsAaiAGQZgjahBq
    IAZB2NsAahCTASAGQbgVaiAGQbAMahBqIAZBuBVqEJMBIAZBsAxqIAZB2NsAahBsIAZBsAxqIAZBuBVqEA4gBkGYI2ogB
    kGwDGogBkGIwABqEB0gBkHY2wBqIAZBmCNqEGwgBkHY2wBqEJMBIAZBuBVqIAZBsAxqEGwgBkG4FWoQkwEgBkGwDGogBk
    HY2wBqEGwgBkGwDGogBkG4FWoQDiAGQZgjaiAGQbAMaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQdjbAGoQkwEgBkG
    4FWogBkGwDGoQbCAGQbgVaiAGQcjEAGoQNyAGQbAMaiAGQdjbAGoQbCAGQbAMaiAGQbgVahAOIAZBmCNqIAZBsAxqIAZB
    iMAAahAdIAZB2NsAaiAGQZgjahBsIAZBmCNqIAZB2NsAaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQbgVaiAGQbAMa
    hBsIAZBuBVqIAZByMQAahA3IAZBuBVqIAZByMQAahA3IAZB2NsAaiAGQbgVahAOIAZBuBVqIAZBsAxqEGwgBkG4FWoQkw
    EgBkGwDGogBkHY2wBqEGwgBkGwDGogBkG4FWoQDiAGQbAMaiAGQdDVAGoQDiAGQbAMahCaASAGQagGaiAGQbAMakGIBhB
    nGiAGQZgjahBuIAZBqAZqIAZBmCNqEHtFDQMgBkGoB2ogAhB7RQ0DIAZBqAhqEIYBRQ0DQQAhByAGQagKahCGAUUNAwwE
    CyAFIAdHBEAgBkHIzwBqIAdqIAQgB2otAAA6AAAgB0EBaiEHDAELCyAFIAVBoKTAABA8AAtBAEEAQZCkwAAQPAALQX8hB
    wsgBkHg4QBqJAAgBw8LQQAhByAGQbAMakE4EHIaA0AgB0E4RwRAIAZBsAxqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQ
    cMAQsLIAZBmCNqIAZBsAxqEIsBIAZBqANqIAlBBnRqIAZBmCNqQcAAEGcaIAMgCmohAyALIQkMAAsACyAHIAlqIQkgAiE
    DDAALAAtBK0EBQaS5wQAoAgAiAEEBIAAbEQAAAAvBKgIIfwF+AkACQAJAAkAgAEH1AU8EQCAAQc3/e08NAiAAQQtqIgBB
    eHEhBkHYtcEAKAIAIgdFDQFBHyEIQQAgBmshBQJAAkAgBkH///8HTQRAIAZBBiAAQQh2ZyIAa0EfcXZBAXEgAEEBdGtBP
    mohCAsgCEECdEHkt8EAaigCACIABEAgBkEAQRkgCEEBdmtBH3EgCEEfRht0IQMDQAJAIABBBGooAgBBeHEiBCAGSQ0AIA
    QgBmsiBCAFTw0AIAAhAiAEIgUNAEEAIQUMAwsgAEEUaigCACIEIAEgBCAAIANBHXZBBHFqQRBqKAIAIgBHGyABIAQbIQE
    gA0EBdCEDIAANAAsgAQRAIAEhAAwCCyACDQILQQAhAkECIAhBH3F0IgBBACAAa3IgB3EiAEUNAyAAQQAgAGtxaEECdEHk
    t8EAaigCACIARQ0DCwNAIAAgAiAAQQRqKAIAQXhxIgEgBk8gASAGayIDIAVJcSIEGyECIAMgBSAEGyEFIAAoAhAiAQR/I
    AEFIABBFGooAgALIgANAAsgAkUNAgtB5LjBACgCACIAIAZPQQAgBSAAIAZrTxsNASACKAIYIQcCQAJAIAIgAigCDCIBRg
    RAIAJBFEEQIAJBFGoiAygCACIBG2ooAgAiAA0BQQAhAQwCCyACKAIIIgAgATYCDCABIAA2AggMAQsgAyACQRBqIAEbIQM
    DQCADIQQgACIBQRRqIgMoAgAiAEUEQCABQRBqIQMgASgCECEACyAADQALIARBADYCAAsCQCAHRQ0AAkAgAiACKAIcQQJ0
    QeS3wQBqIgAoAgBHBEAgB0EQQRQgBygCECACRhtqIAE2AgAgAUUNAgwBCyAAIAE2AgAgAQ0AQdi1wQBB2LXBACgCAEF+I
    AIoAhx3cTYCAAwBCyABIAc2AhggAigCECIABEAgASAANgIQIAAgATYCGAsgAkEUaigCACIARQ0AIAFBFGogADYCACAAIA
    E2AhgLAkAgBUEQTwRAIAIgBkEDcjYCBCACIAZqIgcgBUEBcjYCBCAFIAdqIAU2AgAgBUGAAk8EQEEfIQAgB0IANwIQIAV
    B////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIAcgADYCHCAAQQJ0QeS3wQBqIQQCQAJAAkACQEHY
    tcEAKAIAIgNBASAAQR9xdCIBcQRAIAQoAgAiA0EEaigCAEF4cSAFRw0BIAMhAAwCC0HYtcEAIAEgA3I2AgAgBCAHNgIAI
    AcgBDYCGAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAMgAUEddkEEcWpBEGoiBCgCACIARQ0CIAFBAXQhASAAIQ
    MgAEEEaigCAEF4cSAFRw0ACwsgACgCCCIBIAc2AgwgACAHNgIIIAdBADYCGCAHIAA2AgwgByABNgIIDAQLIAQgBzYCACA
    HIAM2AhgLIAcgBzYCDCAHIAc2AggMAgsgBUEDdiIBQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASABdCIBcQRAIAAoAggM
    AQtB1LXBACABIANyNgIAIAALIQUgACAHNgIIIAUgBzYCDCAHIAA2AgwgByAFNgIIDAELIAIgBSAGaiIAQQNyNgIEIAAgA
    moiACAAKAIEQQFyNgIECyACQQhqDwsCQAJAQdS1wQAoAgAiB0EQIABBC2pBeHEgAEELSRsiBkEDdiIBdiICQQNxRQRAIA
    ZB5LjBACgCAE0NAyACDQFB2LXBACgCACIARQ0DIABBACAAa3FoQQJ0QeS3wQBqKAIAIgFBBGooAgBBeHEgBmshBSABIQM
    DQCABKAIQIgBFBEAgAUEUaigCACIARQ0ECyAAQQRqKAIAQXhxIAZrIgIgBSACIAVJIgIbIQUgACADIAIbIQMgACEBDAAL
    AAsCQCACQX9zQQFxIAFqIgVBA3QiAEHktcEAaigCACIDQQhqIgIoAgAiASAAQdy1wQBqIgBHBEAgASAANgIMIAAgATYCC
    AwBC0HUtcEAIAdBfiAFd3E2AgALIAMgBUEDdCIAQQNyNgIEIAAgA2oiACAAKAIEQQFyNgIEIAIPCwJAQQIgAXQiAEEAIA
    BrciACIAF0cSIAQQAgAGtxaCIBQQN0IgBB5LXBAGooAgAiA0EIaiIEKAIAIgIgAEHctcEAaiIARwRAIAIgADYCDCAAIAI
    2AggMAQtB1LXBACAHQX4gAXdxNgIACyADIAZBA3I2AgQgAyAGaiIFIAFBA3QiACAGayIHQQFyNgIEIAAgA2ogBzYCAEHk
    uMEAKAIAIgAEQCAAQQN2IgJBA3RB3LXBAGohAEHsuMEAKAIAIQgCf0HUtcEAKAIAIgFBASACQR9xdCICcQRAIAAoAggMA
    QtB1LXBACABIAJyNgIAIAALIQMgACAINgIIIAMgCDYCDCAIIAA2AgwgCCADNgIIC0HsuMEAIAU2AgBB5LjBACAHNgIAIA
    QPCyADKAIYIQcCQAJAIAMgAygCDCIBRgRAIANBFEEQIANBFGoiASgCACICG2ooAgAiAA0BQQAhAQwCCyADKAIIIgAgATY
    CDCABIAA2AggMAQsgASADQRBqIAIbIQIDQCACIQQgACIBQRRqIgIoAgAiAEUEQCABQRBqIQIgASgCECEACyAADQALIARB
    ADYCAAsgB0UNAyADIAMoAhxBAnRB5LfBAGoiACgCAEcEQCAHQRBBFCAHKAIQIANGG2ogATYCACABRQ0EDAMLIAAgATYCA
    CABDQJB2LXBAEHYtcEAKAIAQX4gAygCHHdxNgIADAMLAkACQAJAAkACQEHkuMEAKAIAIgEgBkkEQEHouMEAKAIAIgAgBk
    sNA0EAIQUgBkGvgARqIgJBEHZAACIAQX9GDQYgAEEQdCIDRQ0GQfS4wQAgAkGAgHxxIgVB9LjBACgCAGoiAjYCAEH4uME
    AQfi4wQAoAgAiACACIAAgAksbNgIAQfC4wQAoAgAiBEUNAUH8uMEAIQADQCAAKAIAIgEgACgCBCICaiADRg0DIAAoAggi
    AA0ACwwEC0HsuMEAKAIAIQMCfyABIAZrIgJBD00EQEHsuMEAQQA2AgBB5LjBAEEANgIAIAMgAUEDcjYCBCABIANqIgJBB
    GohACACKAIEQQFyDAELQeS4wQAgAjYCAEHsuMEAIAMgBmoiADYCACAAIAJBAXI2AgQgASADaiACNgIAIANBBGohACAGQQ
    NyCyEGIAAgBjYCACADQQhqDwtBkLnBACgCACIAQQAgACADTRtFBEBBkLnBACADNgIAC0GUucEAQf8fNgIAQYC5wQAgBTY
    CAEH8uMEAIAM2AgBB6LXBAEHctcEANgIAQfC1wQBB5LXBADYCAEHktcEAQdy1wQA2AgBB+LXBAEHstcEANgIAQey1wQBB
    5LXBADYCAEGAtsEAQfS1wQA2AgBB9LXBAEHstcEANgIAQYi2wQBB/LXBADYCAEH8tcEAQfS1wQA2AgBBkLbBAEGEtsEAN
    gIAQYS2wQBB/LXBADYCAEGYtsEAQYy2wQA2AgBBjLbBAEGEtsEANgIAQaC2wQBBlLbBADYCAEGUtsEAQYy2wQA2AgBBiL
    nBAEEANgIAQai2wQBBnLbBADYCAEGctsEAQZS2wQA2AgBBpLbBAEGctsEANgIAQbC2wQBBpLbBADYCAEGstsEAQaS2wQA
    2AgBBuLbBAEGstsEANgIAQbS2wQBBrLbBADYCAEHAtsEAQbS2wQA2AgBBvLbBAEG0tsEANgIAQci2wQBBvLbBADYCAEHE
    tsEAQby2wQA2AgBB0LbBAEHEtsEANgIAQcy2wQBBxLbBADYCAEHYtsEAQcy2wQA2AgBB1LbBAEHMtsEANgIAQeC2wQBB1
    LbBADYCAEHctsEAQdS2wQA2AgBB6LbBAEHctsEANgIAQfC2wQBB5LbBADYCAEHktsEAQdy2wQA2AgBB+LbBAEHstsEANg
    IAQey2wQBB5LbBADYCAEGAt8EAQfS2wQA2AgBB9LbBAEHstsEANgIAQYi3wQBB/LbBADYCAEH8tsEAQfS2wQA2AgBBkLf
    BAEGEt8EANgIAQYS3wQBB/LbBADYCAEGYt8EAQYy3wQA2AgBBjLfBAEGEt8EANgIAQaC3wQBBlLfBADYCAEGUt8EAQYy3
    wQA2AgBBqLfBAEGct8EANgIAQZy3wQBBlLfBADYCAEGwt8EAQaS3wQA2AgBBpLfBAEGct8EANgIAQbi3wQBBrLfBADYCA
    EGst8EAQaS3wQA2AgBBwLfBAEG0t8EANgIAQbS3wQBBrLfBADYCAEHIt8EAQby3wQA2AgBBvLfBAEG0t8EANgIAQdC3wQ
    BBxLfBADYCAEHEt8EAQby3wQA2AgBB2LfBAEHMt8EANgIAQcy3wQBBxLfBADYCAEHgt8EAQdS3wQA2AgBB1LfBAEHMt8E
    ANgIAQfC4wQAgAzYCAEHct8EAQdS3wQA2AgBB6LjBACAFQVhqIgA2AgAgAyAAQQFyNgIEIAAgA2pBKDYCBEGMucEAQYCA
    gAE2AgAMAwsgAEEMaigCACADIARNciABIARLcg0BIAAgAiAFajYCBEHwuMEAQfC4wQAoAgAiA0EPakF4cSIBQXhqNgIAQ
    ei4wQBB6LjBACgCACAFaiICIAMgAWtqQQhqIgA2AgAgAUF8aiAAQQFyNgIAIAIgA2pBKDYCBEGMucEAQYCAgAE2AgAMAg
    tB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2AgQgASAGQQNyNgIEIAFBCGohBQwCC0G
    QucEAQZC5wQAoAgAiACADIAAgA0kbNgIAIAMgBWohAUH8uMEAIQACQANAIAEgACgCAEcEQCAAKAIIIgANAQwCCwsgAEEM
    aigCAA0AIAAgAzYCACAAIAAoAgQgBWo2AgQgAyAGQQNyNgIEIAMgBmohBCABIANrIAZrIQYCQAJAIAFB8LjBACgCAEcEQ
    EHsuMEAKAIAIAFGDQEgAUEEaigCACIAQQNxQQFGBEAgASAAQXhxIgAQFSAAIAZqIQYgACABaiEBCyABIAEoAgRBfnE2Ag
    QgBCAGQQFyNgIEIAQgBmogBjYCACAGQYACTwRAQR8hBSAEQgA3AhAgBkH///8HTQRAIAZBBiAGQQh2ZyIAa0EfcXZBAXE
    gAEEBdGtBPmohBQsgBCAFNgIcIAVBAnRB5LfBAGohAQJAAkACQAJAQdi1wQAoAgAiAkEBIAVBH3F0IgBxBEAgASgCACIC
    QQRqKAIAQXhxIAZHDQEgAiEFDAILQdi1wQAgACACcjYCACABIAQ2AgAgBCABNgIYDAMLIAZBAEEZIAVBAXZrQR9xIAVBH
    0YbdCEBA0AgAiABQR12QQRxakEQaiIAKAIAIgVFDQIgAUEBdCEBIAUiAkEEaigCAEF4cSAGRw0ACwsgBSgCCCIAIAQ2Ag
    wgBSAENgIIIARBADYCGCAEIAU2AgwgBCAANgIIDAULIAAgBDYCACAEIAI2AhgLIAQgBDYCDCAEIAQ2AggMAwsgBkEDdiI
    CQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQUgACAENgIIIAUg
    BDYCDCAEIAA2AgwgBCAFNgIIDAILQfC4wQAgBDYCAEHouMEAQei4wQAoAgAgBmoiADYCACAEIABBAXI2AgQMAQtB7LjBA
    CAENgIAQeS4wQBB5LjBACgCACAGaiIANgIAIAQgAEEBcjYCBCAAIARqIAA2AgALIANBCGoPC0H8uMEAIQADQAJAIAAoAg
    AiAiAETQRAIAIgACgCBGoiAiAESw0BCyAAKAIIIQAMAQsLQfC4wQAgAzYCAEHouMEAIAVBWGoiADYCACADIABBAXI2AgQ
    gACADakEoNgIEQYy5wQBBgICAATYCACAEIAJBYGpBeHFBeGoiACAAIARBEGpJGyIBQRs2AgRB/LjBACkCACEJIAFBEGpB
    hLnBACkCADcCACABIAk3AghBgLnBACAFNgIAQfy4wQAgAzYCAEGEucEAIAFBCGo2AgBBiLnBAEEANgIAIAFBHGohAANAI
    ABBBzYCACACIABBBGoiAEsNAAsgASAERg0AIAEgASgCBEF+cTYCBCAEIAEgBGsiBUEBcjYCBCABIAU2AgAgBUGAAk8EQE
    EfIQAgBEIANwIQIAVB////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIARBHGogADYCACAAQQJ0QeS
    3wQBqIQMCQAJAAkACQEHYtcEAKAIAIgFBASAAQR9xdCICcQRAIAMoAgAiAkEEaigCAEF4cSAFRw0BIAIhAAwCC0HYtcEA
    IAEgAnI2AgAgAyAENgIAIARBGGogAzYCAAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAIgAUEddkEEcWpBEGoiA
    ygCACIARQ0CIAFBAXQhASAAIQIgAEEEaigCAEF4cSAFRw0ACwsgACgCCCICIAQ2AgwgACAENgIIIARBGGpBADYCACAEIA
    A2AgwgBCACNgIIDAMLIAMgBDYCACAEQRhqIAI2AgALIAQgBDYCDCAEIAQ2AggMAQsgBUEDdiICQQN0Qdy1wQBqIQACf0H
    UtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQEgACAENgIIIAEgBDYCDCAEIAA2AgwgBCAB
    NgIIC0EAIQVB6LjBACgCACIAIAZNDQBB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2A
    gQgASAGQQNyNgIEIAFBCGoPCyAFDwsgASAHNgIYIAMoAhAiAARAIAEgADYCECAAIAE2AhgLIANBFGooAgAiAEUNACABQR
    RqIAA2AgAgACABNgIYCwJAIAVBEE8EQCADIAZBA3I2AgQgAyAGaiIEIAVBAXI2AgQgBCAFaiAFNgIAQeS4wQAoAgAiAAR
    AIABBA3YiAkEDdEHctcEAaiEAQey4wQAoAgAhBwJ/QdS1wQAoAgAiAUEBIAJBH3F0IgJxBEAgACgCCAwBC0HUtcEAIAEg
    AnI2AgAgAAshAiAAIAc2AgggAiAHNgIMIAcgADYCDCAHIAI2AggLQey4wQAgBDYCAEHkuMEAIAU2AgAMAQsgAyAFIAZqI
    gBBA3I2AgQgACADaiIAIAAoAgRBAXI2AgQLIANBCGoLtA8BA38jAEGAC2siAiQAIAJBCGoQSyACQcgBakE4EHIaIAJBAT
    YCgAIgAkGIAmpBOBByGiACQQE2AsACIAJByAJqQTgQchogAkEBNgKAAyACQYgDakE4EHIaIAJBATYCwAMgAkHIA2pBOBB
    yGiACQQE2AoAEIAJBiARqQQEQigEgAkHIBGpBOBByGiACQQE2AoAFIAJBiAVqQTgQchogAkEBNgLABSACQcgFaiABEIUB
    IAJBiAZqQTgQchogAkEBNgLABiACQcgGakE4EHIaIAJBATYCgAcgAkGIB2pBOBByGiACQQE2AsAHIAJByAdqQTgQchogA
    kEBNgKACCACQcgFahBYIQMgAkHICWpB4ITAABBfIAJBiApqIAJByAlqEIsBIAJByAFqIAJBiApqEKUBIAJByAlqQZiFwA
    AQXyACQYgKaiACQcgJahCLASACQYgCaiACQYgKahClASACQcgFahADIAJByAVqQQsQUiACQYgGaiACQcgFahClASACQYg
    GaiACQYgEahB4IAJBiAZqEEQgAkGIBmogAkHIBWoQSCACQYgFaiACQcgBahClASACQYgFaiACQYgGahBIIAJBiAZqIAJB
    iARqEHggAkGIBmoQRCACQYgGaiACQYgCahBIIAJBiAZqEEEgAkGIBmoQRCACQYgDaiACQYgGahClASACQcgDaiACQcgFa
    hClASACQcgDaiACQYgDahBIIAJByAdqIAJBiANqEKUBIAJByAdqEAMgAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgGai
    ACQcgBahClASACQYgGaiACQcgGahBIIAJByAdqIAJBiAZqEHggAkHIB2oQRCACQcgHaiACQYgDahBIIAJByAZqIAJBiAV
    qEEggAkGIBmogAkGIAmoQpQEgAkGIBmogAkHIBmoQSCACQcgHaiACQYgGahB4IAJByAdqEEQgAkGIBmogAkHIB2oQpQEg
    AkGIBmogAkGIBWoQSCACQYgGaiACQYgHahBcIQQgAkGIBWogAkGIBmoQpQEgAkGIBWogAkGIB2oQNCACQYgFaiACQcgHa
    hBIIAJBiANqIAJBiAVqEEggAkHIA2ogAkGIBWoQSCACQcgFaiABEEggAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgFai
    ACQcgGahClASACQYgFaiACQcgFahBIIAJByAVqIAJBiAZqEKUBIAJByAVqQQsQUiACQcgJakHQhcAAEF8gAkGICmogAkH
    ICWoQiwEgAkHIAmogAkGICmoQpQEgAkHIAmogAkGIB2oQSCACQYgDaiACQcgDakEBIARrIgEQeSACQcgGaiACQYgFaiAB
    EHkgAkGIBmogAkHIBWogARB5IAJBiAdqIAJByAJqIAEQeSACQYgKaiACQYgGaiACQYgHahAjIAJByARqIAJBiApqEKUBI
    AJByARqIAJByAZqEEggAkHIBGoQWCEBIAJBiAZqIAJByARqEKUBIAJBiAZqEEEgAkGIBmoQRCACQcgEaiACQYgGaiABIA
    NzEHkgAkGICmpBiIbAABBfIAJBiAhqIAJBiApqEIsBQTghAQNAIAFBoAVGRQRAIAJBiAhqIAJBiANqEEggAkHICWogAUG
    IhsAAahBfIAFBOGohASACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQYgIaiACQYgGahB4IAJBiAhqEEQMAQsL
    IAJByAhqIAJBiANqEIUBIAJByAlqQaiLwAAQXyACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQcgIaiACQYgGa
    hB4IAJByAhqEERBACEBA0AgAUH4A0ZFBEAgAkHICGogAkGIA2oQSCACQcgJaiABQeCLwABqEF8gAUE4aiEBIAJBiApqIA
    JByAlqEIsBIAJBiAZqIAJBiApqEKUBIAJByAhqIAJBiAZqEHggAkHICGoQRAwBCwsgAkGICmpB2I/AABBfIAJBiAlqIAJ
    BiApqEIsBQQAhAQNAIAFByAZGBEACQCACQcgJaiACQYgDahCFASACQcgKakHYlsAAEF8gAkGICmogAkHICmoQiwEgAkGI
    BmogAkGICmoQpQEgAkHICWogAkGIBmoQeCACQcgJahBEQQAhAQNAIAFBkAZGDQEgAkHICWogAkGIA2oQSCACQcgKaiABQ
    ZCXwABqEF8gAUE4aiEBIAJBiApqIAJByApqEIsBIAJBiAZqIAJBiApqEKUBIAJByAlqIAJBiAZqEHggAkHICWoQRAwACw
    ALBSACQYgJaiACQYgDahBIIAJByAlqIAFBkJDAAGoQXyABQThqIQEgAkGICmogAkHICWoQiwEgAkGIBmogAkGICmoQpQE
    gAkGICWogAkGIBmoQeCACQYgJahBEDAELCyACQYgJaiACQcgEahBIIAJBiAZqIAJBiAhqEKUBIAJBiAZqIAJByAlqEEgg
    AkEIaiACQYgGahClASACQYgGaiACQYgJahClASACQYgGaiACQcgIahBIIAJByABqIAJBiAZqEKUBIAJBiAZqIAJByAhqE
    KUBIAJBiAZqIAJByAlqEEggAkGIAWogAkGIBmoQpQEgACACQQhqQcABEGcaIAJBgAtqJAALzQ0CE38IfiMAQYADayIBJA
    AgADQCOCIUIBR+QoCAgBBaBEAgABASCyABQeABakHoABByGiABQcgBaiAAKQMAIhggGEI/hyIZIBggGRAxIAEgASkDyAE
    iFEL//////////wODNwPYASABQdABaikDACIXQgaGIBRCOoiEIRUgF0I6iCEaIABBCGoiCyEFIAAhBkEBIQcDQCAHQQZP
    BEAgAEEYaiEMIABBKGohCyAAQRBqIQcgACkDMCEYQQQhBkEAIQkgAUGgAWohDUEDIQpBAiEIQQchBQJAAkADQCAFQQpLD
    QIgBiAIIAYgCEsbIQ4gBiAKIAYgCksbQQN0QWhqIQ8gAUGYAWogBUEDdCIQIABqQVBqKQMAIhQgFEI/hyAYIBhCP4ciGR
    AxIAVBAWoiEUEBdiESIA0pAwAhFyABKQOYASEUIAshAyAHIQQgBUF7aiITIQICQANAIAIgDkcEQCACQQdGDQIgAUGIAWo
    gBCkDACIWIBZCP4cgAykDACIWIBZCP4cQMSABKQOIASIWIBR8IhQgFlStIAFBkAFqKQMAIBd8fCEXIANBeGohAyAEQQhq
    IQQgAkEBaiECDAELCyABQdgBaiAQaiAUQgGGIhYgFXwiFUL//////////wODNwMAIAFB+ABqIAAgE0EDdGopAwAiGyAbQ
    j+HIBggGRAxIBUgFlStIBdCAYYgFEI/iIQgGnx8IhRCOochGiAUQgaGIBVCOoiEIRkgBUECaiEFIAFBgAFqKQMAIRcgAS
    kDeCEUIAshAyAJIQIDQCACIA9GBEAgAUHYAGogACASQQN0aikDACIVIBVCP4ciFiAVIBYQMSABQdgBaiARQQN0aiAUQgG
    GIhYgGXwiFSABKQNYfCIZQv//////////A4M3AwAgGSAVVK0gAUHgAGopAwAgFSAWVK0gF0IBhiAUQj+IhCAafHx8fCIU
    QjqHIRogFEIGhiAZQjqIhCEVIApBAmohCiAJQRBqIQkgCEECaiEIIAZBAWohBiAHQRBqIQcMAwsgAkEgRg0DIAFB6ABqI
    AIgDGopAwAiFSAVQj+HIAMpAwAiFSAVQj+HEDEgASkDaCIVIBR8IhQgFVStIAFB8ABqKQMAIBd8fCEXIANBeGohAyACQQ
    hqIQIMAAsACwtBB0EHQbSewAAQPAALQQdBB0HEnsAAEDwACyABQagBaiAAKQMoIhQgFEI/hyAYIBhCP4ciFBAxIAEgFSA
    BKQOoASIVQgGGIhl8IhdC//////////8DgzcDsAIgAUG4AWogGCAUIBggFBAxIAEgFyAZVK0gAUGwAWopAwBCAYYgFUI/
    iIQgGnx8IhhCBoYgF0I6iIQiFyABKQO4AXwiFEL//////////wODNwO4AiABIBQgF1StIAFBwAFqKQMAIBhCOod8fEIGh
    iAUQjqIhDcDwAIgAUHIAmogAUHYAWoQBSAAIAFByAJqEGsgAEECNgI4IAFBgANqJAAPCyABQcgAaiAAIAdBA3QiDGopAw
    AiFCAUQj+HIBggGRAxIAdBAWoiDUEBdiEOIAFB0ABqKQMAIRcgASkDSCEUIAghAiAGIQMgCiEEIAshCQNAIAJFBEAgAUH
    YAWogDGogFEIBhiIWIBV8IhVC//////////8DgzcDACABQShqIAAgDUEDdCIMaikDACIbIBtCP4cgGCAZEDEgFSAWVK0g
    F0IBhiAUQj+IhCAafHwiFEI6hyEaIBRCBoYgFUI6iIQhFiAHQQJqIQkgAUEwaikDACEXQQAhAiABKQMoIRQgBSEDIAshB
    ANAIAIgCGpFBEAgAUEIaiAAIA5BA3RqKQMAIhUgFUI/hyIbIBUgGxAxIAFB2AFqIAxqIBRCAYYiGyAWfCIVIAEpAwh8Ih
    ZC//////////8DgzcDACAWIBVUrSABQRBqKQMAIBUgG1StIBdCAYYgFEI/iIQgGnx8fHwiFEI6hyEaIBRCBoYgFkI6iIQ
    hFSAFQRBqIQUgCEEBaiEIIAZBEGohBiAKQQJqIQogCSEHDAQLIAIgB2oiDUEGTQRAIAFBGGogBCkDACIVIBVCP4cgAykD
    ACIVIBVCP4cQMSABKQMYIhUgFHwiFCAVVK0gAUEgaikDACAXfHwhFyADQXhqIQMgAkF/aiECIARBCGohBAwBCwsgDUEHQ
    aSewAAQPAALIARBBk0EQCABQThqIAkpAwAiFiAWQj+HIAMpAwAiFiAWQj+HEDEgASkDOCIWIBR8IhQgFlStIAFBQGspAw
    AgF3x8IRcgAkF/aiECIANBeGohAyAEQX9qIQQgCUEIaiEJDAELCwsgBEEHQZSewAAQPAAL7wwBBH8jAEHADWsiAiQAAkA
    gACgCgAYiA0EBRwRAIAEoAoAGIgRBAUYNAQJAAkACQAJAIARBA00EQCADQX5xQQJGDQEgAiAAEI4BIAJBgAJqEC8gAkGA
    BGoQLyACQYAGahAvIAJBgAhqIAAQjgEgAkGACmoQLyACIAEQGSACQYAIaiAAQYACaiIFEJYBIAJBgAhqEKwBIAJBgAJqI
    AJBgAhqEJIBIAJBgAJqIAEQGSACQYAIaiAFEJIBIAJBgAhqIABBgARqIgMQlgEgAkGACGoQrAEgAkGABmogAkGACGoQkg
    EgBEECRg0CIAJBwAxqIAFBgAVqEF4gAkGABmogAkHADGoQogEMAwsgAiAAEI4BIAJBgAJqEC8gAkGABGoQLyACQYAGahA
    vIAIgARAZAkACQCAEQQRGIgQNACAAKAKABkEERg0AIAJBgARqIABBgAJqEJIBIAJBgARqIAFBgAJqEBkMAQsgAkHADGpB
    OBByGiACQQE2AvgMIAJBgA1qQTgQchogAkG4DWpBATYCACACQYAIakE4EHIaIAJBATYCuAggAkHACGpBOBByGiACQfgIa
    kEBNgIAIAJBgApqIABBgANqIgMQXiACQYAIaiACQYAKahCQASACQYAKaiABQYADaiIFEF4gAkGACGogAkGACmoQDyACQc
    AMahCpASAERQRAIAJBgApqIAMQXiACQcAMaiACQYAKahCQASACQYAKaiABQYACahBeIAJBwAxqIAJBgApqEA8LIAAoAoA
    GQQRHBEAgAkGACmogAEGAAmoQXiACQcAMaiACQYAKahCQASACQYAKaiAFEF4gAkHADGogAkGACmoQDwsgAkGABGogAkHA
    DGogAkGACGoQoQEgAkGABGoQZgsgAkGACGogABCOASACQYAKaiABEI4BIAJBgAhqIABBgAJqIgQQlgEgAkGACGoQrAEgA
    kGACmogAUGAAmoiBRCWASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAQQkgEgAkGACG
    ogAEGABGoiAxCWASACQYAIahCsASACQYAKaiAFEJIBIAJBgApqIAFBgARqIgUQlgEgAkGACmoQrAEgAkGABmogAkGACGo
    QkgEgAkGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAI
    ahCWASAEIAJBgAJqEJIBIAQgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQ
    YAIaiADEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBRCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIA
    JBgAhqEJYBIAJBgAhqIAMQkgEgAkGACGogBRAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgAyACQYAEahCSASADIAJBgAp
    qEJYBIAJBgAZqIAJBgApqEJYBIAJBgAhqEGYgBCACQYAIahCWAQwDCyAAIAEQBgwECyACQcAMaiABQYAFahBeIAJBgAxq
    IAJBwAxqQcAAEGcaIAJBgAZqIAJBgAxqEKMBCyACQYAGahBmIAJBgAhqIAIQkgEgAkGACGoQKyACQYACaiACQYAIahCWA
    SAFIAJBgAJqEJIBIAJBgARqIAJBgAhqEJIBIAJBgAhqIAAQkgEgAkGACGogAxCWASACQYAIahCsASACQYAKaiABEJIBIA
    JBgApqIAFBgARqEJYBIAJBgApqEKwBIAJBgAhqIAJBgApqEBkgAkGABGogAkGACGoQlgEgAkGACGogAxCSAQJAIARBAkc
    EQCACQcAMaiABQYAFahBeIAJBgAhqIAJBwAxqEKIBDAELIAJBwAxqIAFBgAVqEF4gAkGADGogAkHADGpBwAAQZxogAkGA
    CGogAkGADGoQowELIAJBgAhqEGYgAkGACmogAkGACGoQkgEgAkGACmoQKyADIAJBgARqEJIBIAMgAkGACmoQlgEgAkGAB
    mogAkGACmoQlgEgAkGACGoQZiAFIAJBgAhqEJYBCyACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIABBBT
    YCgAYgABCZAQwBCyAAIAEQbAsgAkHADWokAAuaCQIPfwt+IwBBwAJrIgIkACACQeAAakGgp8AAEF8gAEE4EHIhDCACQZg
    BakHwABByGiACQZACakEwEHIaIAwQdCACIAEpAwAiFEL9//P/z///+QF+Qv//////////A4MiETcDiAIgAkHQAGogEUIA
    IAIpA2AiGCAYQj+HIhoQMSAUIAIpA1AiEXwiFiARVK0gAkHYAGopAwAgFEI/h3x8IhRCOocgASkDCCIRQj+HfCARIBRCB
    oYgFkI6iIQiEXwiEiARVK18IRNBASEDAkADQAJAIANBB0YEQCACQZACaiEJIAJB6ABqIQpBByEEIAJB4ABqIQ0gAkGIAm
    ohDkEGIQ8MAQsgA0EBdiIAQQFqIQUgCiAAayEGIAkgAEEDdCIHayEAIAdBCGohCCACQUBrIANBA3QiBCACQeAAamopAwA
    iFiAWQj+HIhQgAikDiAIiESARQj+HEDEgAkHIAGopAwAgEiAVfCIRIBJUrSATIBd8fHwgESACKQNAfCITIBFUrXwhEiAD
    QQFqIQcDQCADIAVNBEAgAkGIAmogBGogE0L9//P/z///+QF+Qv//////////A4MiETcDACACQTBqIBFCACAYIBoQMSACQ
    SBqIBFCACAWIBQQMSACQZgBaiADQQR0aiIAIAJBKGopAwAiGzcDCCAAIAIpAyAiGTcDACACKQMwIhEgE3wiFiARVK0gAk
    E4aikDACASfHwiFEI6hyABIAdBA3RqKQMAIhFCP4d8IBEgFEIGhiAWQjqIhCIRfCISIBFUrXwhEyAVIBl8IhUgGVStIBc
    gG3x8IRcgCUEIaiEJIApBAWohCiAHIQMMAwsgBkEGSw0DIAJBEGogAkHgAGogCGopAwAgAkHgAGogAGopAwB9IhEgEUI/
    hyACQYgCaiAAaikDACACQYgCaiAIaikDAH0iESARQj+HEDEgAikDECIRIBN8IhMgEVStIAJBGGopAwAgEnx8IRIgBUEBa
    iEFIABBeGohACAGQX9qIQYgCEEIaiEIDAALAAsLA0ACQCAEQQ1HBEAgDyAEQQF2IgBrIQUgDiAAQQN0IgtrIRAgDSALay
    EIIBMgF3wgEiAVfCITIBJUrXwhEiAEQQFqIQdBMCEAIAkhBiAKIQMDQCAAIAtGDQIgBUEGTQRAIAIgAyALaikDACAAIAh
    qKQMAfSIRIBFCP4cgACAQaikDACAGIAtqKQMAfSIRIBFCP4cQMSACKQMAIhEgE3wiEyARVK0gAkEIaikDACASfHwhEiAF
    QX9qIQUgBkEIaiEGIANBCGohAyAAQXhqIQAMAQsLIAVBB0HknsAAEDwACyAMIBJC//////////8DgzcDMCACQcACaiQAD
    wsgBEEDdCAMakFIaiATQv//////////A4M3AwAgEkI6hyABIAdBA3RqKQMAIhFCP4d8IBEgEkIGhiATQjqIhCIRfCISIB
    FUrXwhEyAXIARBBHQgAmpBOGoiAEEIaikDAH0gFSAAKQMAIhFUrX0hFyAOQQhqIQ4gDUEIaiENIA9BAWohDyAVIBF9IRU
    gByEEDAALAAsgBkEHQdSewAAQPAAL+QkBBH8jAEGACWsiAiQAIAJBgAhqIAAQXiACIAJBgAhqEF4gAkGACGogAEGAAWoi
    BBBeIAJBgAFqIAJBgAhqEF4gAkGACGogARBeIAIgAkGACGoQDyACQYAIaiABQYABaiIFEF4gAkGAAWogAkGACGoQDyAAK
    AKABiEDAkACQCABKAKABkECRwRAIANBAkYNASACQYAIaiAAQYAFahBeIAJBgAJqIAJBgAhqEF4gAkGACGogAUGABWoQXi
    ACQYACaiACQYAIahAPDAILIANBAkYEQCACQYAIaiAAQYAFahBeIAJBgAdqIAJBgAhqQcAAEGcaIAJBgAZqIAJBgAdqEIU
    BIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGABmogAkGAB2oQSCACQYAIakE4EHIaIAJBATYCuAggAkHA
    CGpBOBByIAJB+AhqQQE2AgAgAkGACGogAkGABmoQpQEQsgEgAkGAAmogAkGACGpBgAEQZxoMAgsgAkGACGogAEGABWoQX
    iACQYACaiACQYAIahBeIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAEMAQsgAkGACG
    ogAUGABWoQXiACQYACaiACQYAIahBeIAJBgAhqIABBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAE
    LIAJBgAhqIAAQXiACQYADaiACQYAIahBeIAJBgAhqIAEQXiACQYAEaiACQYAIahBeIAJBgAhqIAQQXiACQYADaiACQYAI
    ahCVASACQYADahCoASACQYAIaiAFEF4gAkGABGogAkGACGoQlQEgAkGABGoQqAEgAkGABWogAkGAA2oQXiACQYAFaiACQ
    YAEahAPIAJBgAZqIAIQXiACQYAGaiACQYABahCVASACQYAGahA6IAJBgAVqIAJBgAZqEJUBIAJBgAhqIAAQXiACQYADai
    ACQYAIahCQASACQYAIaiAAQYAFaiIDEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogARBeIAJBgARqIAJBgAh
    qEJABIAJBgAhqIAFBgAVqIgEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAHaiACQYADahBeIAJBgAdqIAJBgARq
    EA8gAkGABmogAhCQASACQYAGaiACQYACahCVASACQYAGahA6IAJBgAdqIAJBgAZqEJUBIAJBgAhqIAQQXiACQYADaiACQ
    YAIahCQASACQYAIaiADEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogBRBeIAJBgARqIAJBgAhqEJABIAJBgA
    hqIAEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAIaiACQYADahBeIAJBgAhqIAJBgARqEA8gAkGABmogAkGAAWo
    QkAEgAkGABmogAkGAAmoQlQEgAkGABmoQOiACQYAIaiACQYAGahCVASACQYABahBVIAIgAkGAAWoQlQEgACACIAJBgAVq
    EKEBIAJBgAJqEFUgAkGAAmoQqAEgAEGAA2ogAkGAAmoQkAEgAEGAAmoQqQEgAkGACGoQqAEgAkGACGoQVSAAQYAEaiIBI
    AJBgAhqIAJBgAdqEKEBIAAQrAEgARCsASAAQQQ2AoAGIAJBgAlqJAALnwgBB38jAEGgC2siASQAIAFBCGpBoKfAABBfIA
    FBCGpBARCeAQNAIAJBMEYEQCABIAEpAzhCAYc3AzggAUEIakEBEJ4BIAFBCGpBARA7QQAhAiABQYABakE4EHIaIAFB4Ap
    qQTgQchogAUGACWpBOBByGiABQQE2ArgBIAFBwAFqQTgQciEEIAFB+AFqQQE2AgAgAUGAAmpBOBByGiABQbgCakEBNgIA
    IAFBwAJqQTgQchogAUH4AmpBATYCACABQYADakE4EHIaIAFBuANqQQE2AgAgAUHAA2pBOBByGiABQfgDakEBNgIAIAFBg
    ARqQTgQchogAUG4BGpBATYCACABQcAEakE4EHIaIAFB+ARqQQE2AgAgAUGABWpBOBByGiABQbgFakEBNgIAIAFBwAVqQT
    gQchogAUH4BWpBATYCACABQYAGakE4EHIaIAFBuAZqQQE2AgAgAUHABmpBOBByGiABQfgGakEBNgIAIAFBgAdqQTgQcho
    gAUG4B2pBATYCACABQcAHakE4EHIaIAFB+AdqQQE2AgAgAUGACGogAUHgCmpBOBBnGiABQbgIakEBNgIAIAFBwAhqIAFB
    gAlqQTgQZxogAUH4CGpBATYCACABQYAJakHnABByGiABQegJaiAAEIUBIAFB6AlqEEQgAUGoCmogAUEIahBfIAFBqApqE
    EQgAUGoCmoQKUEDaiIFQQJ2IgNBAWohBgJAAkACQAJAAkACQANAAkAgAiAGRgRAIAFBgAFqEGkgBCABQegJahClASABQe
    AKakE4EHIaIAFBATYCmAtBgHkhAgwBCyABQagKaiABQagKakEEEIwBIgcQngEgAUGoCmoQRCACQecARg0CIAFBgAlqIAJ
    qIAc6AAAgAUGoCmpBBBA7IAJBAWohAgwBCwsDQCACBEAgAUHgCmogAUGAAWogAmoiBEHAB2oQpQEgBEGACGoiBCABQeAK
    ahClASAEIAFB6AlqEEggAkFAayECDAELCyAFQZwDTw0BIAFBgAlqIANqLAAAIgJBD0sNAiABQUBrIAFBgAFqIAJBBnRqE
    IUBIANBf2ohAgNAIAJBf0YNBiABQUBrEAMgAUFAaxADIAFBQGsQAyABQUBrEAMgAkHmAEsNBCABQYAJaiACai0AACIDQQ
    9LDQUgAUFAayABQYABaiADQQZ0ahBIIAJBf2ohAgwACwALQecAQecAQYSjwAAQPAALIANB5wBBlKPAABA8AAsgAkEQQaS
    jwAAQPAALIAJB5wBBtKPAABA8AAsgA0EYdEEYdUEQQcSjwAAQPAALIAFBQGsQEiAAIAFBQGsQpQEgAUGgC2okAAUgAUEI
    aiACaiIDIANBCGopAwBCOYZCgICAgICAgIACgyADKQMAQgGHhDcDACACQQhqIQIMAQsLC8EHAhJ/BX4jAEGQAmsiBCQAI
    ABB8AAQciEPIARBMGpB4AEQchogBEEwaiEAAkADQCADQThGBEACQCAPIAQpAzAiGEL//////////wODNwMAIAFBCGohCS
    ACQQhqIQogAiEMIAEhDUF4IRBBASEGIBghFSAEQThqKQMAIhkhFwNAAkAgF0IGhiAVQjqIhCEWIBdCOochFyAGQQdGBEA
    gAUEIaiEMIAJBCGohDUEHIQBBBiEKDAELIAsgBkEBdiIFayEAIAwgBUEDdCIIayERIA0gCGshEiAEQTBqIAZBBHRqIgVB
    CGopAwAgGXwgBSkDACIVIBh8IhggFVStfCIZIBd8IBYgGHwiFSAYVK18IRcgCEFQaiETIAggEGohFCAGQQFqIQ5BACEDI
    AkhByAKIQUDQCADIBRGBEAgDyAGQQN0aiAVQv//////////A4M3AwAgDEEIaiEMIA1BCGohDSALQQFqIQsgEEF4aiEQIA
    4hBgwDCyADIBNGDQYgAEEGSw0DIARBEGogAyARaikDACAFIAhqKQMAfSIWIBZCP4cgByAIaikDACADIBJqKQMAfSIWIBZ
    CP4cQMSAEKQMQIhYgFXwiFSAWVK0gBEEYaikDACAXfHwhFyAAQX9qIQAgB0EIaiEHIAVBCGohBSADQXhqIQMMAAsACwsD
    QAJAIABBDUcEQCAKIABBAXYiBWshByACIAVBA3QiCWshCCABIAlrIQsgGSAAQQR0IARqQUBqIgVBCGopAwB9IBggBSkDA
    CIVVK19IhkgF3wgGCAVfSIYIBZ8IhcgGFStfCEVIABBAWohBkEwIQMgDCEFIA0hDgNAIAMgCUYNAiAHQQZNBEAgBCADIA
    hqKQMAIAkgDmopAwB9IhYgFkI/hyAFIAlqKQMAIAMgC2opAwB9IhYgFkI/hxAxIAQpAwAiFiAXfCIXIBZUrSAEQQhqKQM
    AIBV8fCEVIAdBf2ohByAFQQhqIQUgDkEIaiEOIANBeGohAwwBCwsgB0EHQYSewAAQPAALIA8gFjcDaCAEQZACaiQADwsg
    DyAAQQN0aiAXQv//////////A4M3AwAgFUIGhiAXQjqIhCEWIAJBCGohAiABQQhqIQEgCkEBaiEKIBVCOochFyAGIQAMA
    AsACwUgBEEgaiACIANqKQMAIhUgFUI/hyABIANqKQMAIhUgFUI/hxAxIAAgBEEoaikDADcDCCAAIAQpAyA3AwAgAEEQai
    EAIANBCGohAwwBCwsgAEEHQfSdwAAQPAALQQdBB0HkncAAEDwAC8sIAQV/IABBeGoiASAAQXxqKAIAIgNBeHEiAGohAgJ
    AAkAgA0EBcQ0AIANBA3FFDQEgASgCACIDIABqIQAgASADayIBQey4wQAoAgBGBEAgAigCBEEDcUEDRw0BQeS4wQAgADYC
    ACACIAIoAgRBfnE2AgQgASAAQQFyNgIEIAAgAWogADYCAA8LIAEgAxAVCwJAIAJBBGoiBCgCACIDQQJxBEAgBCADQX5xN
    gIAIAEgAEEBcjYCBCAAIAFqIAA2AgAMAQsCQCACQfC4wQAoAgBHBEBB7LjBACgCACACRg0BIAIgA0F4cSICEBUgASAAIA
    JqIgBBAXI2AgQgACABaiAANgIAIAFB7LjBACgCAEcNAkHkuMEAIAA2AgAPC0HwuMEAIAE2AgBB6LjBAEHouMEAKAIAIAB
    qIgA2AgAgASAAQQFyNgIEQey4wQAoAgAgAUYEQEHkuMEAQQA2AgBB7LjBAEEANgIAC0GMucEAKAIAIgIgAE8NAkHwuMEA
    KAIAIgBFDQICQEHouMEAKAIAIgNBKUkNAEH8uMEAIQEDQCABKAIAIgQgAE0EQCAEIAEoAgRqIABLDQILIAEoAggiAQ0AC
    wtBlLnBAAJ/Qf8fQYS5wQAoAgAiAEUNABpBACEBA0AgAUEBaiEBIAAoAggiAA0ACyABQf8fIAFB/x9LGws2AgAgAyACTQ
    0CQYy5wQBBfzYCAA8LQey4wQAgATYCAEHkuMEAQeS4wQAoAgAgAGoiADYCACABIABBAXI2AgQgACABaiAANgIADwtBlLn
    BAAJ/AkAgAEGAAk8EQEEfIQIgAUIANwIQIABB////B00EQCAAQQYgAEEIdmciAmtBH3F2QQFxIAJBAXRrQT5qIQILIAFB
    HGogAjYCACACQQJ0QeS3wQBqIQMCQAJAAkACQAJAQdi1wQAoAgAiBEEBIAJBH3F0IgVxBEAgAygCACIDQQRqKAIAQXhxI
    ABHDQEgAyECDAILQdi1wQAgBCAFcjYCACADIAE2AgAMAwsgAEEAQRkgAkEBdmtBH3EgAkEfRht0IQQDQCADIARBHXZBBH
    FqQRBqIgUoAgAiAkUNAiAEQQF0IQQgAiEDIAJBBGooAgBBeHEgAEcNAAsLIAIoAggiACABNgIMIAIgATYCCCABQRhqQQA
    2AgAgASACNgIMIAEgADYCCAwCCyAFIAE2AgALIAFBGGogAzYCACABIAE2AgwgASABNgIIC0GUucEAQZS5wQAoAgBBf2oi
    ADYCACAADQNBhLnBACgCACIADQFB/x8MAgsgAEEDdiICQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASACdCICcQRAIAAoA
    ggMAQtB1LXBACACIANyNgIAIAALIQIgACABNgIIIAIgATYCDCABIAA2AgwgASACNgIIDwtBACEBA0AgAUEBaiEBIAAoAg
    giAA0ACyABQf8fIAFB/x9LGws2AgALC9AHAgp/An4jAEEwayIIJABBJyECAkAgADUCACIMQpDOAFQEQCAMIQ0MAQsDQCA
    IQQlqIAJqIgBBfGogDEKQzgCAIg1C8LF/fiAMfKciA0H//wNxQeQAbiIEQQF0QeaowABqLwAAOwAAIABBfmogBEGcf2wg
    A2pB//8DcUEBdEHmqMAAai8AADsAACACQXxqIQIgDEL/wdcvViANIQwNAAsLIA2nIgBB4wBKBEAgAkF+aiICIAhBCWpqI
    A2nIgNB//8DcUHkAG4iAEGcf2wgA2pB//8DcUEBdEHmqMAAai8AADsAAAsCQCAAQQpOBEAgAkF+aiIFIAhBCWpqIABBAX
    RB5qjAAGovAAA7AAAMAQsgAkF/aiIFIAhBCWpqIABBMGo6AAALQScgBWshA0EBIQJBK0GAgMQAIAEoAgAiAEEBcSIGGyE
    EIABBHXRBH3VB9KrAAHEhByAIQQlqIAVqIQUCQCABKAIIQQFHBEAgASAEIAcQUw0BIAEoAhggBSADIAFBHGooAgAoAgwR
    BQAhAgwBCyABQQxqKAIAIgkgAyAGaiIGTQRAIAEgBCAHEFMNASABKAIYIAUgAyABQRxqKAIAKAIMEQUAIQIMAQsCQAJAA
    kACQCAAQQhxBEAgASgCBCEKIAFBMDYCBCABLQAgIQsgAUEBOgAgIAEgBCAHEFMNBUEAIQIgCSAGayIAIQRBASABLQAgIg
    cgB0EDRhtBA3FBAWsOAwIBAgMLQQAhAiAJIAZrIgAhCQJAAkACQEEBIAEtACAiBiAGQQNGG0EDcUEBaw4DAQABAgsgAEE
    BdiECIABBAWpBAXYhCQwBC0EAIQkgACECCyACQQFqIQIDQCACQX9qIgJFDQQgASgCGCABKAIEIAEoAhwoAhARAwBFDQAL
    QQEhAgwECyAAQQF2IQIgAEEBakEBdiEEDAELQQAhBCAAIQILIAJBAWohAgJAA0AgAkF/aiICRQ0BIAEoAhggASgCBCABK
    AIcKAIQEQMARQ0AC0EBIQIMAgsgASgCBCEHQQEhAiABKAIYIAUgAyABKAIcKAIMEQUADQEgBEEBaiEAIAEoAhwhAyABKA
    IYIQQDQCAAQX9qIgAEQCAEIAcgAygCEBEDAEUNAQwDCwsgASALOgAgIAEgCjYCBEEAIQIMAQsgASgCBCEGQQEhAiABIAQ
    gBxBTDQAgASgCGCAFIAMgASgCHCgCDBEFAA0AIAlBAWohACABKAIcIQMgASgCGCEBA0AgAEF/aiIARQRAQQAhAgwCCyAB
    IAYgAygCEBEDAEUNAAsLIAhBMGokACACC7gGAQV/IwBBgAhrIgIkACACIAAQXiACIAEQDyACQYABaiAAQYABaiIDEF4gA
    kGAAWogAUGAAWoiBRAPIAJBgAJqIABBgAJqIgQQXiACQYACaiABQYACaiIGEA8gAkGAA2ogABBeIAJBgANqIAMQlQEgAk
    GAA2oQqAEgAkGABGogARBeIAJBgARqIAUQlQEgAkGABGoQqAEgAkGAA2ogAkGABGoQDyACQYAEaiACEJABIAJBgARqIAJ
    BgAFqEJUBIAJBgANqIAJBgARqEH0gAkGAA2oQqAEgAkGABGogAxCQASACQYAEaiAEEJUBIAJBgARqEKgBIAJBgAVqIAUQ
    XiACQYAFaiAGEJUBIAJBgAVqEKgBIAJBgARqIAJBgAVqEA8gAkGABWogAkGAAWoQkAEgAkGABWogAkGAAmoQlQEgAkGAB
    GogAkGABWoQfSACQYAEahCoASACQYAFaiAAEJABIAJBgAVqIAQQlQEgAkGABWoQqAEgAkGABmogARBeIAJBgAZqIAYQlQ
    EgAkGABmoQqAEgAkGABWogAkGABmoQDyACQYAGaiACEJABIAJBgAZqIAJBgAJqEJUBIAJBgAZqIAJBgAVqELUBIAJBgAZ
    qEKgBIAJBgAVqIAIQkAEgAkGABWogAhCVASACIAJBgAVqEJUBIAIQqAEgAkGAAmpBDBCfASACQYACahBVIAJBgAJqEKgB
    IAJBgAdqIAJBgAFqEF4gAkGAB2ogAkGAAmoQlQEgAkGAB2oQqAEgAkGAAWogAkGAAmoQfSACQYABahCoASACQYAGakEME
    J8BIAJBgAZqEFUgAkGABmoQqAEgAkGABWogAkGABmoQkAEgAkGABWogAkGABGoQDyACQYACaiACQYADahCQASACQYACai
    ACQYABahAPIAJBgAVqIAJBgAJqELUBIAJBgAZqIAIQDyACQYABaiACQYAHahAPIAJBgAZqIAJBgAFqEJUBIAIgAkGAA2o
    QDyACQYAHaiACQYAEahAPIAJBgAdqIAIQlQEgACACQYAFahCQASAAEKgBIAMgAkGABmoQkAEgAxCoASAEIAJBgAdqEJAB
    IAQQqAEgAkGACGokAAv2BQEFfyMAQYAEayICJAAgAiAAEIUBIAIgARBIIAJBQGsgAEFAayIDEIUBIAJBQGsgAUFAayIFE
    EggAkGAAWogAEGAAWoiBBCFASACQYABaiABQYABaiIGEEggAkHAAWogABCFASACQcABaiADEHggAkHAAWoQRCACQYACai
    ABEIUBIAJBgAJqIAUQeCACQYACahBEIAJBwAFqIAJBgAJqEEggAkGAAmogAhClASACQYACaiACQUBrEHggAkHAAWogAkG
    AAmoQgAEgAkHAAWoQRCACQYACaiADEKUBIAJBgAJqIAQQeCACQYACahBEIAJBwAJqIAUQhQEgAkHAAmogBhB4IAJBwAJq
    EEQgAkGAAmogAkHAAmoQSCACQcACaiACQUBrEKUBIAJBwAJqIAJBgAFqEHggAkGAAmogAkHAAmoQgAEgAkGAAmoQRCACQ
    cACaiAAEKUBIAJBwAJqIAQQeCACQcACahBEIAJBgANqIAEQhQEgAkGAA2ogBhB4IAJBgANqEEQgAkHAAmogAkGAA2oQSC
    ACQYADaiACEKUBIAJBgANqIAJBgAFqEHggAkGAA2ogAkHAAmoQswEgAkGAA2oQRCACQcACaiACEKUBIAJBwAJqIAIQeCA
    CIAJBwAJqEHggAhBEIAJBgAFqQQwQUiACQcADaiACQUBrEIUBIAJBwANqIAJBgAFqEHggAkHAA2oQRCACQUBrIAJBgAFq
    EIABIAJBQGsQRCACQYADakEMEFIgAkHAAmogAkGAA2oQpQEgAkHAAmogAkGAAmoQSCACQYABaiACQcABahClASACQYABa
    iACQUBrEEggAkHAAmogAkGAAWoQswEgAkGAA2ogAhBIIAJBQGsgAkHAA2oQSCACQYADaiACQUBrEHggAiACQcABahBIIA
    JBwANqIAJBgAJqEEggAkHAA2ogAhB4IAAgAkHAAmoQpQEgABBEIAMgAkGAA2oQpQEgAxBEIAQgAkHAA2oQpQEgBBBEIAJ
    BgARqJAALxQUBBH8jAEHwEmsiACQAIAAQOEF/IQEgABCIAUUEQCAAQYADakE4EHIaIABBuANqQTgQchogAEG4A2ogAEGA
    A2oQVCAAQfAKakG4gMAAEF8gAEHwDWpB8IDAABBfIABB8ANqIABB8ApqIABB8A1qEEkgAEHwBGpBOBByGiAAQQE2AqgFI
    ABBsAVqQTgQchogAEHoBWpBATYCACAAQfAFakE4EHIaIABBATYCqAYgAEGwBmpBOBByGiAAQegGakEBNgIAIABB8AZqQT
    gQchogAEEBNgKoByAAQbAHakE4EHIaIABB6AdqQQE2AgBBf2ohAyAAQfAHahAqIABB8AdqIAAQfiAAQfAKahAqIABB8Ap
    qIABB8AdqEH4gAEHwDWoQKiAAQfANaiAAQfAHahB+IABB8A1qEJwBAkACQAJAA0AgAiEBIANBAkkNAyAAQfAKaiAAQfAE
    aiAAQfAFaiAAQfAGahAlIAFBxABNBEAgAEHwEGogAEHwBGogAEHwBWogAEHwBmoQRiABQQh0QdCrwABqIABB8BBqEJIBI
    AFBAWohAgJAAkAgAEG4A2ogA0F/aiIDEFcgAEGAA2ogAxBXa0EBag4DAQMAAwsgAEHwCmogAEHwB2ogAEHwBGogAEHwBW
    ogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYgAkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQI
    MAgsgAEHwCmogAEHwDWogAEHwBGogAEHwBWogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYg
    AkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQIMAQsLIAFBxQBBvIHAABA8AAtBxQBBxQBBzIHAABA8AAtBxQBBxQBB3IHAA
    BA8AAtBACEBCyAAQfASaiQAIAEL8gQBBH8jAEGADGsiAiQAIAIgABCOASACQYACahAvIAJBgARqIABBgAJqIgMQjgEgAk
    GABmoQLyACQYAIaiAAEI4BIAJBgApqIAEQjgEgAiABEBkgAkGABGogAUGAAmoiBBAZIAJBgAhqIAMQlgEgAkGACmogBBC
    WASACQYAIahCsASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAMQkgEgAkGACGogAEGA
    BGoiBRCWASACQYAKaiAEEJIBIAJBgApqIAFBgARqIgQQlgEgAkGACGoQrAEgAkGACmoQrAEgAkGABmogAkGACGoQkgEgA
    kGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAIahCWAS
    ADIAJBgAJqEJIBIAMgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQYAIaiA
    FEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBBCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIAJBgAhq
    EJYBIAJBgAhqIAUQkgEgAkGACGogBBAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgBSACQYAEahCSASAFIAJBgApqEJYBI
    AJBgAZqIAJBgApqEJYBIAJBgAhqEGYgAyACQYAIahCWASACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIA
    BBBTYCgAYgABCZASACQYAMaiQAC68EAQV/IwBBkAZrIgIkACAAQUBrIQQCQCABQfgAaigCACABKAI4aqwgAEH4AGooAgA
    iAyAAKAI4IgVqrH5CgICAEFMNACAFQQJOBH8gABASIAAoAngFIAMLQQJIDQAgBBASCyACQaCnwAAQX0EAIQMgAkE4akHw
    ABByGiABQUBrIQUDQCADQThGBEAgAkHwAGohBkEAIQMDQCADQThGRQRAIAMgBmogAiADaikDADcDACADQQhqIQMMAQsLI
    AJBqAFqIAAQXyACQeABaiABEF8gAkGYAmogACABEAggAkGIA2ogBCAFEAggAkGoAWogBBBhIAJBqAFqEEQgAkHgAWogBR
    BhIAJB4AFqEEQgAkH4A2ogAkGoAWogAkHgAWoQCEEAIQMgAkHoBGpB8AAQchoDQCADQfAARkUEQCACQegEaiADaiACQZg
    CaiADaikDADcDACADQQhqIQMMAQsLIAJB6ARqIAJBiANqEGVBACEDA0AgA0HwAEZFBEAgAkGIA2ogA2oiASACQThqIANq
    KQMAIAEpAwB9NwMAIANBCGohAwwBCwsgAkGYAmogAkGIA2oQZSACQZgCahBFIAJB+ANqIAJB6ARqEGQgAkH4A2oQRSACQ
    dgFaiACQZgCahAFIAAgAkHYBWoQayAAQQM2AjggAkHYBWogAkH4A2oQBSAEIAJB2AVqEGsgAEECNgJ4IAJBkAZqJAAFIA
    JBOGogA2pCADcDACADQQhqIQMMAQsLC5QEAQF/IwBB0CJrIgMkACADQcAWakG4gMAAEF8gA0HIHGpB8IDAABBfIANBCGo
    gA0HAFmogA0HIHGoQSSADQYgBakE4EHIaIANBwAFqQTgQchogA0H4AWoQKgJAIAIQhAFFBEAgA0H4BGoQKiADQfgEaiAB
    EH4gA0H4BGoQSiADQfgHahBLIANB+AdqIAIQfyADQfgHahBHIANByBxqIANB+AdqEIUBIANBuAlqIANByBxqEIUBIANBy
    BxqIANBuAhqEIUBIANB+AlqIANByBxqEIUBIANBuApqECogA0G4DWoQYCADQbgKaiADQfgEahB+IANBwBNqECogA0HAE2
    ogA0H4BGoQfiADQcATahCcASADQcABaiADQYgBahBUQX9qIQIDQCACQQFNBEAgA0G4DWoQkwEgACADQbgNakGIBhBnGgw
    DBSADQbgNahAbIANBwBZqIANBuApqIANBuAlqIANB+AlqEBcCQAJAAkAgA0HAAWogAkF/aiICEFcgA0GIAWogAhBXa0EB
    ag4DAQIAAgsgA0HIHGogA0G4CmogA0H4BGogA0G4CWogA0H4CWoQFiADQcAWaiADQcgcahAGDAELIANByBxqIANBuApqI
    ANBwBNqIANBuAlqIANB+AlqEBYgA0HAFmogA0HIHGoQBgsgA0G4DWogA0HAFmoQBAwBCwALAAsgABBgCyADQdAiaiQAC8
    MDARV/A0AgAUHAAUYEQAJAIABBKGohCyAAQRRqKAIAIgwhCCAAQRBqKAIAIg0hAyAAQQxqKAIAIg4hAiAAKAIIIg8hASA
    AQRhqKAIAIhAhCiAAQRxqKAIAIhEhBCAAQSBqKAIAIhIhByAAQSRqKAIAIhMhBgNAIAchCSAEIQcgCiEEIAVBgAJGDQEg
    AiADcSEUIAIgA3MhFSAFIAtqKAIAIAVB9J7AAGooAgAgBEEadyAEQRV3cyAEQQd3cyAGaiAJIARBf3NxIAQgB3FyampqI
    gYgCGohCiAFQQRqIQUgAyEIIAIhAyABIQIgAUEedyABQRN3cyABQQp3cyAUIAEgFXFzaiAGaiEBIAkhBgwACwALBSAAIA
    FqIgNB6ABqIANBzABqKAIAIANBKGooAgAgA0EsaigCACICQRl3IAJBDndzIAJBA3ZzIANB4ABqKAIAIgJBD3cgAkENd3M
    gAkEKdnNqamo2AgAgAUEEaiEBDAELCyAAIAYgE2o2AiQgACAJIBJqNgIgIAAgByARajYCHCAAIAQgEGo2AhggACAIIAxq
    NgIUIAAgAyANajYCECAAIAIgDmo2AgwgACABIA9qNgIIC9YDAgZ/An4jAEHwAGsiASQAIAFBoKfAABBfIAFBOGogARBfI
    AAQRAJAAkACQCABAn8gACgCOCICQRBMBEAgAkF/ahA5DAELIAEpAzAiCEIBfCIHIAhUDQEgACkDMCIIQoCAgICAgICAgH
    9RQQAgB0J/URsNAiABQThqIAggB3+nECghByABIAEpA2ggB0I6hnw3A2ggACABQThqEGIgABBEQQILIgMQLSAAQQhqIQQ
    DQCADRQ0DIAEgASkDCEI5hkKAgICAgICAgAKDIAEpAwBCAYeEIgc3AwAgASAAKQMAIAd9IgdC//////////8DgzcDOEEA
    IQIDQCAHQjqHIQcgAkEoRkUEQCABIAJqIgVBCGoiBiAFQRBqKQMAQjmGQoCAgICAgICAAoMgBikDAEIBh4QiCDcDACABI
    AJqQUBrIAIgBGopAwAgCH0gB3wiB0L//////////wODNwMAIAJBCGohAgwBCwsgASABKQMwQgGHIgg3AzAgASAAKQMwIA
    h9IAd8Igc3A2ggACABQThqIAdCP4enQQFqEE8gA0F/aiEDDAALAAtBoKLAAEEZQbyiwAAQWwALQdCiwABBH0G8osAAEFs
    ACyAAQQE2AjggAUHwAGokAAuhAwEBfyMAQZADayIGJAAgBkEIakHAABByGiAGQcgAakGoAhByGiAGQcgAahBDA0AgAQRA
    IAZByABqQQAQPiABQX9qIQEMAQUCQCACBEAgBkHIAGogAiADEHoLIAQEQCAGQcgAaiAEIAUQegsgBkGIA2pCADcDACAGQ
    YADakIANwMAIAZB+AJqQgA3AwAgBkIANwPwAiAGKAJIIQEgBigCTCECIAZByABqQYABED4DQCAGKAJIQf8DcUHAA0ZFBE
    AgBkHIAGpBABA+DAELCyAGQawBaiABNgIAIAZBqAFqIAI2AgAgBkHIAGoQEUEAIQJBACEBA0AgAUEgRkUEQCAGQfACaiA
    BaiABQXxxIAZqQdAAaigCACACQX9zQRhxdjoAACACQQhqIQIgAUEBaiEBDAELCyAGQcgAahBDQQAhAQNAIAFBIEZFBEAg
    BkEIaiABaiAGQfACaiABai0AADoAACABQQFqIQEMAQsLQQAhAQNAIAFBIEYNASAAIAFqIAZBCGogAWotAAA6AAAgAUEBa
    iEBDAALAAsLCyAGQZADaiQAC6EDAQN/IwBBgAZrIgEkACABIABBgAFqIgMQXiABQYABaiADEF4gAUGAAWoQMiABQYACai
    ABEF4gAUGAAmogAEGAAmoiAhAPIAFBgANqIAIQXiABQYADahAyIAIgAUGAAWoQkAEgAiABQYABahCVASACEKgBIAIQpwE
    gAhCnASACEKgBIAFBgANqQQwQnwEgAUGAA2oQVSABQYADahCoASABQYAEaiABQYADahBeIAFBgARqIAIQDyABQYAFaiAB
    QYABahBeIAFBgAVqIAFBgANqEJUBIAFBgAVqEKgBIAIgAUGAAmoQDyABQYACaiABQYADahCQASABQYACaiABQYADahCVA
    SABQYADaiABQYACahCVASABQYADahCoASABQYABaiABQYADahB9IAFBgAFqEKgBIAFBgAVqIAFBgAFqEA8gAUGABWogAU
    GABGoQlQEgAUGAAmogABCQASABQYACaiABEA8gACABQYABahCQASAAEKgBIAAgAUGAAmoQDyAAEKcBIAAQqAEgAyABQYA
    FahCQASADEKgBIAFBgAZqJAALhQMBBH8CQAJAIAFBgAJPBEAgAEEYaigCACEEAkACQCAAIAAoAgwiAkYEQCAAQRRBECAA
    QRRqIgIoAgAiAxtqKAIAIgENAUEAIQIMAgsgACgCCCIBIAI2AgwgAiABNgIIDAELIAIgAEEQaiADGyEDA0AgAyEFIAEiA
    kEUaiIDKAIAIgFFBEAgAkEQaiEDIAIoAhAhAQsgAQ0ACyAFQQA2AgALIARFDQIgACAAQRxqKAIAQQJ0QeS3wQBqIgEoAg
    BHBEAgBEEQQRQgBCgCECAARhtqIAI2AgAgAkUNAwwCCyABIAI2AgAgAg0BQdi1wQBB2LXBACgCAEF+IAAoAhx3cTYCAA8
    LIABBDGooAgAiAiAAQQhqKAIAIgBHBEAgACACNgIMIAIgADYCCA8LQdS1wQBB1LXBACgCAEF+IAFBA3Z3cTYCAAwBCyAC
    IAQ2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgAEEUaigCACIARQ0AIAJBFGogADYCACAAIAI2AhgLC7MCAQF/IwBBg
    AtrIgUkACAFEC8gBUGAAmoQLyAFQYAEahAvIAVBgAZqQTgQchogBUEBNgK4BiAFQcAGakE4EHIaIAVB+AZqQQE2AgAgBU
    GAB2pBOBByGiAFQQE2ArgHIAVBwAdqQTgQchogBUH4B2pBATYCACAFQYAIakE4EHIaIAVBATYCuAggBUHACGpBOBByGiA
    FQfgIakEBNgIAIAEgAiAFQYAGaiAFQYAHaiAFQYAIahAeIAVBgAhqIAMQoAEgBUGABmogBBCgASAFQYAJaiAFQYAGaiAF
    QYAHahCRASAFIAVBgAlqEJIBIAVBgAlqIAVBgAhqEJsBIAVBgARqIAVBgAlqEJIBIAVBgARqEGYgACAFIAVBgAJqIAVBg
    ARqEHYgAEEDNgKABiAFQYALaiQAC7ECAQF/IwBBgAtrIgQkACAEEC8gBEGAAmoQLyAEQYAEahAvIARBgAZqQTgQchogBE
    EBNgK4BiAEQcAGakE4EHIaIARB+AZqQQE2AgAgBEGAB2pBOBByGiAEQQE2ArgHIARBwAdqQTgQchogBEH4B2pBATYCACA
    EQYAIakE4EHIaIARBATYCuAggBEHACGpBOBByGiAEQfgIakEBNgIAIAEgBEGABmogBEGAB2ogBEGACGoQJSAEQYAIaiAC
    EKABIARBgAZqIAMQoAEgBEGACWogBEGABmogBEGAB2oQkQEgBCAEQYAJahCSASAEQYAJaiAEQYAIahCbASAEQYAEaiAEQ
    YAJahCSASAEQYAEahBmIAAgBCAEQYACaiAEQYAEahB2IABBAzYCgAYgBEGAC2okAAvJAgEDfyMAQcACayIBJAAgASAAQU
    BrIgMQhQEgARADIAFBQGsgAxCFASABQUBrIABBgAFqIgIQSCABQYABaiACEIUBIAFBgAFqEAMgAiABEKUBIAIgARB4IAI
    QRCACEE4gAhBOIAIQRCABQYABakEMEFIgAUHAAWogAUGAAWoQhQEgAUHAAWogAhBIIAFBgAJqIAEQhQEgAUGAAmogAUGA
    AWoQeCABQYACahBEIAIgAUFAaxBIIAFBQGsgAUGAAWoQpQEgAUFAayABQYABahB4IAFBgAFqIAFBQGsQeCABIAFBgAFqE
    IABIAEQRCABQYACaiABEEggAUGAAmogAUHAAWoQeCABQUBrIAAQpQEgAUFAayADEEggACABEKUBIAAQRCAAIAFBQGsQSC
    AAEE4gABBEIAMgAUGAAmoQpQEgAxBEIAFBwAJqJAALrQIBA38jAEGABGsiAiQAIAIgABBeIAJBgAFqIABBgAFqIgMQXiA
    CQYACakE4EHIaIAJBATYCuAIgAkHAAmpBOBByGiACQfgCakEBNgIAIAJBgANqIAMQXiACIAEQDyACQYABaiABQYABaiIE
    EA8gAkGAAmogBBCQASACQYACaiABEJUBIAJBgANqIAAQlQEgAkGAAmoQqAEgAkGAA2oQqAEgAkGAA2ogAkGAAmoQDyACQ
    YACaiACEJABIAJBgAJqEDogAkGAA2ogAkGAAmoQlQEgAkGAA2oQqAEgAkGAAmogAkGAAWoQkAEgAkGAAmoQOiADIAJBgA
    NqEJABIAMgAkGAAmoQlQEgAkGAAWoQVSAAIAJBgAFqEJABIAAgAhCVASAAEKwBIAJBgARqJAALvQIBA38jAEGACGsiASQ
    AIAEgABCOASABQYACaiAAQYAEaiICEI4BIAFBgARqIABBgAJqIgMQjgEgAUGABmoQLyAAECIgAUGABmogABCSASABQYAG
    aiAAEJYBIAAgAUGABmoQlgEgABCsASABELYBIAEQrwEgACABEJYBIAFBgAJqECIgAUGAAmoQZiABQYAGaiABQYACahCSA
    SABQYAGaiABQYACahCWASABQYACaiABQYAGahCWASABQYACahCsASABQYAEahAiIAFBgAZqIAFBgARqEJIBIAFBgAZqIA
    FBgARqEJYBIAFBgARqIAFBgAZqEJYBIAFBgARqEKwBIAMQrgEgAxCvASACELYBIAIQrwEgAyABQYACahCWASACIAFBgAR
    qEJYBIABBBTYCgAYgABCaASABQYAIaiQAC7ICAQN/IwBBgAhrIgEkACAAKAKABkEBRwRAIAEgABCOASABQYACaiAAQYAC
    aiIDEI4BIAFBgARqIABBgARqIgIQjgEgAUGABmogABCOASABECIgAUGAAmogAhAZIAFBgAJqEK8BIAFBgAJqEKwBIAFBg
    ARqECIgAUGABmogAxAZIAFBgAZqEK8BIAIgABCWASACIAMQlgEgAhCsASACECIgACABEJIBIAEgAUGAAmoQlgEgARCsAS
    ABIAFBgARqEJYBIAEgAUGABmoQlgEgARCsASABECsgAUGAAmoQZiABQYAEahBmIAAgAUGAAmoQlgEgAyABQYAEahCSASA
    DIAFBgAZqEJYBIAIgARCWASAAQQRBBSAAKAKABkF+cUECRhs2AoAGIAAQmQELIAFBgAhqJAALigIBAn8jAEHgAWsiAiQA
    IAAQRCACQQhqQTAQchogAkIBNwMAIAJBOGogABBfIAJB8ABqIAEQXyACQagBakE4EHIaIAAQdANAIAJBOGogAkHwAGoQN
    UF/TARAA0ACQCADQQBMDQAgAkHwAGpBARA7IAJBARA7IAJBqAFqIAJBOGoQayACQagBaiACQfAAahBiIAJBqAFqEEQgAk
    E4aiACQagBaiACKQPYAUI/h6dBAWoiARBPIAJBqAFqIAAQayACQagBaiACEGEgAkGoAWoQRCAAIAJBqAFqIAEQTyADQX9
    qIQMMAQsLBSACQQEQLSACQfAAakEBEC0gA0EBaiEDDAELCyACQeABaiQAC54CAQF/IwBBgA1rIgMkACADIAEQaiADEJkB
    IANBiAZqIAIQXyADQYgGahBEIANBwAZqIANBiAZqEF8gA0HABmpBAxAoGiADQcAGahBEIANB+AZqIAMQagJAIANBwAZqE
    FpFBEAgA0HABmoQKUF/aiECA0AgAkEBTQRAIANB+AZqEJoBDAMLIANB+AZqEBoCQAJAIANBwAZqIAJBf2oiAhBXIANBiA
    ZqIAIQV2tBAWoOAwECAAILIANB+AZqIAMQDgwBCyADEJMBIANB+AZqIAMQDiADEJMBDAALAAsgA0H4BmoQsAEgA0H4B2o
    QqQEgA0H4CGoQrQEgA0H4CmoQrQEgA0EBNgL4DAsgACADQfgGakGIBhBnGiADQYANaiQAC5ACAQJ/IwBBgAJrIgUkACAF
    QYABaiAAEF4gAiAFQYABahCQASAFQYABaiAAQYABahBeIAQgBUGAAWoQkAEgBUGAAWogAEGAAmoiBhBeIAUgBUGAAWoQX
    iAFQYABaiAGEF4gAyAFQYABahCQASAFQYABaiABQYABaiIGEF4gBSAFQYABahAPIAVBgAFqIAEQXiADIAVBgAFqEA8gAi
    ADEH0gAhCoASAEIAUQfSAEEKgBIAUgAhCQASACEFUgAhCoASAFQYABaiAGEF4gBSAFQYABahAPIAMgBBCQASAFQYABaiA
    BEF4gAyAFQYABahAPIAMgBRB9IAMQqAEgBBA6IAQQqAEgACABEAsgBUGAAmokAAvkAQECfyMAQcABayIDJAAgAxBLIAAg
    ASACQR91IgQgAnMgBEF/c2pBAm0iAkF/akEfdhBtIAAgAUHAAWogAkEBc0F/akEfdhBtIAAgAUGAA2ogAkECc0F/akEfd
    hBtIAAgAUHABGogAkEDc0F/akEfdhBtIAAgAUGABmogAkEEc0F/akEfdhBtIAAgAUHAB2ogAkEFc0F/akEfdhBtIAAgAU
    GACWogAkEGc0F/akEfdhBtIAAgAUHACmogAkEHc0F/akEfdhBtIAMgABB/IAMQpgEgACADIARBAXEQbSADQcABaiQAC+Q
    BAQJ/IwBBgANrIgMkACADECogACABIAJBH3UiBCACcyAEQX9zakECbSICQX9qQR92EG8gACABQYADaiACQQFzQX9qQR92
    EG8gACABQYAGaiACQQJzQX9qQR92EG8gACABQYAJaiACQQNzQX9qQR92EG8gACABQYAMaiACQQRzQX9qQR92EG8gACABQ
    YAPaiACQQVzQX9qQR92EG8gACABQYASaiACQQZzQX9qQR92EG8gACABQYAVaiACQQdzQX9qQR92EG8gAyAAEH4gAxCcAS
    AAIAMgBEEBcRBvIANBgANqJAALvAEBAn8jAEGwAWsiAiQAIAJBMBByIQIDQCADQTBGBEACQCABQTBqIQEgAkEwaiACEHV
    BACEDA0AgA0EwRg0BIAIgA2ogASADai0AADoAACADQQFqIQMMAAsACwUgAiADaiABIANqLQAAOgAAIANBAWohAwwBCwsg
    AkHwAGogAhB1IABBOBByIgBBATYCOCAAQUBrQTgQciAAQfgAakEBNgIAIAAgAkHwAGoQpQEgAkEwahClASACQbABaiQAC
    9QBAQJ/IwBBgANrIgEkACABIAAQXiABQYABaiAAQYABaiICEF4gAUGAAmogABBeIAFBgAJqIAIQDyABIAIQlQEgAUGAAW
    oQVSABQYABaiAAEJUBIAEQqAEgAUGAAWoQqAEgACABEJABIAAgAUGAAWoQDyABQYABaiABQYACahCQASABQYABahBVIAF
    BgAFqIAFBgAJqEJUBIAFBgAFqEKgBIAFBgAFqEDogACABQYABahCVASABQYACahCnASACIAFBgAJqEJABIAAQrAEgAUGA
    A2okAAvEAQEBfyMAQYADayIDJAAgA0EIaiABEIUBAkAgAkUEQCADQQhqEAcMAQsgA0EIaiACEKUBCyADQcgAakHYo8AAE
    F8gA0GAAWogA0HIAGoQiwEgA0HAAWogA0EIahCFASADQcABahADIANBwAFqIAEQSCAAIAEQhQEgACADQQhqEEggA0GAAm
    ogA0HAAWoQhQEgABBYIQEgA0HAAmogABCFASADQcACahBBIANBwAJqEEQgACADQcACaiABEHkgA0GAA2okAAufAQEBfyM
    AQfAAayICJAAgAiABEF9BACEBIAJBOGpBOBByGiAAEEQCQCAAIAIQNUEASA0AA0AgAkEBEC0gAUEBaiEBIAAgAhA1QX9K
    DQALA0AgAUEATA0BIAJBARA7IAJBOGogABBrIAJBOGogAhBiIAJBOGoQRCAAIAJBOGogAikDaEI/h6dBAWoQTyABQX9qI
    QEMAAsACyACQfAAaiQAC7IBAQF/IwBBgAJrIgQkACAEQYABaiAAEF4gAyAEQYABahCQASAEQYABaiAAQYABahBeIAQgBE
    GAAWoQXiAEQYABaiAAQYACahBeIAIgBEGAAWoQkAEgASAEEJABIAEgAhAPIAMQMiAEEDIgAhAyIAEQpwEgARA6IAEQqAE
    gARBVIAEQqAEgAkEMEJ8BIANBAxCfASACEFUgAhCoASACIAQQfSACEKgBIAAQFCAEQYACaiQAC58BAQJ/IwBBgAJrIgIk
    ACAAIAEQXiAAEDIgAkGIAWpB2KTAABBfIAJBCGpBOBByGiACQQE2AkAgAkHIAGpBOBByIAJBgAFqQQE2AgAgAkHAAWogA
    kGIAWoQiwEgAkEIaiACQcABahClARCyASACQQhqEKgBIAJBCGoQVSACQQhqEKgBIAAgARAPIAAgAkEIahCVASAAEKsBIA
    JBgAJqJAALowEBAX8jAEEwayIGJAAgBkEQaiAAIAEQsQEgBiAGKAIUIgA2AhwgBiAGKAIQIgE2AhggBkEIaiACIAMQsQE
    gBiAGKAIMIgI2AiQgBiAGKAIIIgM2AiAgBiAEIAUQsQEgBiAGKAIEIgQ2AiwgBiAGKAIAIgU2AiggASAAIAMgAiAFIAQQ
    ACAGQShqEKQBIAZBIGoQpAEgBkEYahCkASAGQTBqJAALiAECA38DfiMAQRBrIgIkAAN+IANBOEYEfiACQRBqJAAgBgUgA
    iAAIANqIgQpAwAiBSAFQj+HIAGsIgUgBUI/hxAxIAQgAikDACIHIAZ8IgVC//////////8DgzcDACAFIAdUrSACQQhqKQ
    MAIAZCP4d8fEIGhiAFQjqIhCEGIANBCGohAwwBCwsLhAECA38BfiMAQUBqIgEkACABQQhqIAAQXyABQQhqEEQgAUE4aiE
    CQQYhA0HcAiEAAn8DQEEAIANBAEgNARogAikDACIEUARAIAJBeGohAiAAQUZqIQAgA0F/aiEDDAELCwN/IARQBH8gAAUg
    AEEBaiEAIARCAn8hBAwBCwsLIAFBQGskAAuHAQEBfyMAQcABayIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAa
    kEBNgIAIAEQUCABQYgBakE4EHIaIABBgAFqIAFBgAEQZxogAEGAAmpBOBByGiAAQbgCakEBNgIAIABBvAJqIAFBhAFqQT
    wQZxogAEH4AmpBATYCACABQcABaiQAC48BAQJ/IwBBgAJrIgEkACAAEKwBIAEgABBeIAFBgAFqQTgQchogAUEBNgK4ASA
    BQcABakE4EHIaIAFB+AFqQQE2AgAgASAAQYABaiICEJUBIAEQOiABQYABaiABEJABIAFBgAFqIAIQlQEgAiABEJABIAIg
    ABCVASAAIAFBgAFqEJABIAAQrAEgAUGAAmokAAt9AgF/An4jAEGAAWsiASQAIAFBCGogABCFASABQQhqEBIgAUHIAGogA
    UEIahCDAUEIIQADQCAAQThGRQRAIAFByABqIABqKQMAIAKEIQIgAEEIaiEADAELCyABKQNIIQMgAUGAAWokACACQn98IA
    NCAYVCf3yDQjqIp0EBcQuJAQIBfwJ+IAAgACkDMCABQT9xrSIDhiAAKQMoQTogAWtBP3GtIgSHhDcDMCAAQShqIQFBBiE
    CA0AgAkEBTQRAIAAgACkDACADhkL//////////wODNwMABSABIAEpAwAgA4ZC//////////8DgyABQXhqIgEpAwAgBIeE
    NwMAIAJBf2ohAgwBCwsLiQECAX8CfiAAIAApA2BBOiABQTpwIgFrrSIEhyAAKQNoIAGtIgOGhDcDaCAAQeAAaiEBQQ0hA
    gNAIAJBAU0EQCAAIAApAwAgA4ZC//////////8DgzcDAAUgASABKQMAIAOGQv//////////A4MgAUF4aiIBKQMAIASHhD
    cDACACQX9qIQIMAQsLC3EBAX8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAakEBNgIAIAFBCGpBOBB
    yGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAEG8AWogAUEEakE8EGcaIABB+AFqQQE2AgAgAUFAayQAC4EBAgF/AX4gAEHw
    ABByIQADQCACQThGBEACQCAAIAEpAzAiA0I6hzcDOCAAIANC//////////8DgzcDMCAAQUBrIQBBACECA0AgAkEwRg0BI
    AAgAmpCADcDACACQQhqIQIMAAsACwUgACACaiABIAJqKQMANwMAIAJBCGohAgwBCwsLdQECfiAAIANCIIgiBSABQiCIIg
    Z+IAIgA358IAEgBH58IANC/////w+DIgIgAUL/////D4MiAX4iA0IgiCACIAZ+fCICQiCIfCABIAV+IAJC/////w+DfCI
    BQiCIfDcDCCAAIANC/////w+DIAFCIIaENwMAC3YBAn8jAEHAAWsiASQAIAEgABCFASABQUBrIAAQhQEgAUGAAWogAEFA
    ayICEIUBIAEgAhB4IAFBQGsgABB4IAFBQGsQRCACIAFBQGsQSCABQYABahBBIAAgAUGAAWoQeCABEEQgABBEIAAgARBII
    AFBwAFqJAALkwEBAn9B0LXBAEHQtcEAKAIAQQFqNgIAAkACQEGYucEAKAIAQQFGBEBBnLnBAEGcucEAKAIAQQFqIgA2Ag
    AgAEECSw0CQaC5wQAoAgAiAUF/Sg0BDAILQZi5wQBCgYCAgBA3AwBBoLnBACgCACIAQQBIDQFBoLnBACAANgIAAAtBoLn
    BACABNgIAIABBAUsNAAALAAtnAQJ/IwBBQGoiAiQAIAAQRCACIAAQhQECQCABRQRAIAAQBwwBCyAAIAEQpQELQQAhAQNA
    IAFBAUsgA3JFBEAgABADIAFBAEchAyABIAFFaiEBDAELCyAAIAIQSCAAEBIgAkFAayQAC18CAX8EfkIBIQNBMCECA38gA
    kF4RgR/IARCAYYgA3ynQX9qBSABIAJqKQMAIgUgACACaikDACIGfUI6hyADgyAEhCEEIAJBeGohAiAFIAaFQn98QjqHIA
    ODIQMMAQsLC2ACAX8EfkIBIQNB6AAhAgN/IAJBeEYEfyAEQgGGIAN8p0F/agUgASACaikDACIFIAAgAmopAwAiBn1COoc
    gA4MgBIQhBCACQXhqIQIgBSAGhUJ/fEI6hyADgyEDDAELCwt3AQN/IwBBgAJrIgIkACACIAEQXiACQYABaiABEF4gAhAy
    IAJBgAFqIAIQDyAAIAJBgAFqEJcBIABBgAJqIgMgAkGAAWoQlwEgAEGABGoiBCACQYABahCXASADIAEQogEgBCACEKIBI
    ABBBTYCgAYgAkGAAmokAAt6AQF/IwBB4ANrIgEkACABQYABakHApcAAEF8gAUG4AWpB+KXAABBfIAEgAUGAAWogAUG4AW
    oQSSABQfACakGwpsAAEF8gAUGoA2pB6KbAABBfIAFB8AFqIAFB8AJqIAFBqANqEEkgACABIAFB8AFqED8gAUHgA2okAAt
    nACAAQQF2IAByIgBBAnYgAHIiAEEEdiAAciIAQQh2IAByIgBBEHYgAHIiACAAQQF2QdWq1aoFcWsiAEECdkGz5syZA3Eg
    AEGz5syZA3FqIgBBBHYgAGpBj568+ABxQYGChAhsQRh2C2cBAn8jAEGAAWsiASQAIAEgABCFASABQUBrQTgQchogAUEBN
    gJ4IAEgAEFAayICEHggARBBIAFBQGsgARClASABQUBrIAIQeCACIAEQpQEgAiAAEHggACABQUBrEKUBIAFBgAFqJAALaA
    IBfwJ+IAFBP3GtIQNBOiABa0E/ca0hBEEAIQEDQCABQTBGBEAgACAAKQMwIAOHNwMwBSAAIAFqIgIgAkEIaikDACAEhkL
    //////////wODIAIpAwAgA4eENwMAIAFBCGohAQwBCwsLbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYC
    ACADQSxqQQI2AgAgA0ICNwIMIANBlKjAADYCCCADQQI2AiQgAyADQSBqNgIYIAMgAzYCKCADIANBBGo2AiAgA0EIaiACE
    HAAC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakECNgIAIANCAjcCDCADQbCqwAA2AgggA0
    ECNgIkIAMgA0EgajYCGCADIANBBGo2AiggAyADNgIgIANBCGogAhBwAAtlAQJ/IAAgACgCACICQQhqIgM2AgAgACACQQN
    2QTxxakEoaiICIAFB/wFxIAIoAgBBCHRyNgIAAkACQCADRQRAIABBADYCACAAIAAoAgRBAWo2AgQMAQsgA0H/A3ENAQsg
    ABARCwtnAQF/IwBBgAJrIgMkACAAECogACABEJABIABBgAFqIgEgAhCQASAAQYACahCwASAAEKgBIAMgABAmIANBgAFqI
    AEQXiADQYABahAyIANBgAFqIAMQe0UEQCAAEJgBCyADQYACaiQAC18BAn8jAEGAAWsiASQAIAAQqAEgASAAEIUBIAFBQG
    sgAEFAayICEIUBIAEQAyABQUBrEAMgASABQUBrEHggAUEAEDQgACABEEggARBBIAEQRCACIAEQSCABQYABaiQAC10BAn8
    jAEFAaiIBJAAgAUEIakGgp8AAEF8gAUEIaiAAKAI4QX9qEDkiAhAtIAAgAUEIahBjIABBASACQQFqQR9xdCICNgI4IAJB
    gICAEE4EQCAAEBILIAFBQGskAAtfAgF/AX4jAEHwAGsiASQAIAFBoKfAABBfIAApAwAhAiABQThqIAAQXyAAQQEQOyABQ
    ThqIAEQYSABQThqEEQgAUE4akEBEDsgACABQThqIAJCAoGnEE8gAUHwAGokAAt7AQJ/IABBKGohAgNAIAFBgAJGBEAgAE
    LnzKfQ1tDrs7t/NwIIIABCADcCACAAQSBqQquzj/yRo7Pw2wA3AgAgAEEYakL/pLmIxZHagpt/NwIAIABBEGpC8ua746O
    n/aelfzcCAAUgASACakEANgIAIAFBBGohAQwBCwsLaQICfwF+IAAgACkDACIDQv//////////A4M3AwBBCCEBA0AgA0I6
    hyEDIAFBMEYEQCAAIAApAzAgA3w3AzAFIAAgAWoiAiACKQMAIAN8IgNC//////////8DgzcDACABQQhqIQEMAQsLC2oCA
    n8BfiAAIAApAwAiA0L//////////wODNwMAQQghAQNAIANCOochAyABQegARgRAIAAgACkDaCADfDcDaAUgACABaiICIA
    IpAwAgA3wiA0L//////////wODNwMAIAFBCGohAQwBCwsLWQEBfyMAQYADayIEJAAgBCADEF4gBBBAIARBgAFqIAEQXiA
    EQYACaiACEF4gBEGAAWogBBAPIARBgAJqIAQQDyAAIARBgAFqIARBgAJqEJEBIARBgANqJAALWQECfyMAQUBqIgEkAAJA
    IAAQhAENACABQQEQigEgAEGAAWoiAiABEFkNACACQQAQNCAAIAIQSCAAEBIgAEFAayIAIAIQSCAAEBIgAiABEKUBCyABQ
    UBrJAALVwEBfyMAQbABayICJAAgATQCOCAANAI4fkKAgIAQWQRAIAAQEgsgAkEIaiAAIAEQCCACQfgAaiACQQhqEAUgAC
    ACQfgAahBrIABBAjYCOCACQbABaiQAC08BAn8jAEFAaiIDJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgA
    gAyABEIsBIAAgAxClASADIAIQiwEgAxClASADQUBrJAALWQECfyMAQYABayIBJAACQCAAEIgBDQAgARBQIABBgAJqIgIg
    ARB7DQAgAhBAIAAgAhAPIAAQqwEgAEGAAWoiACACEA8gABCrASACIAEQkAELIAFBgAFqJAALSwEBfyMAQUBqIgEkACAAQ
    TgQciIAQQE2AjggAUEBEIoBIABBQGsgAUHAABBnGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAUFAayQAC0sBAn8jAEHwAG
    siASQAIAAQd0UEQCABQaCnwAAQXyABQThqIAAQgwEgASABQThqEGIgARBEIAFBOGogARA1IQILIAFB8ABqJAAgAgtPAQF
    /IwBBgAFrIgIkACAAIAEQhQEgABADIAJByABqQdikwAAQXyACQQhqIAJByABqEIsBIAAgARBIIAAgAkEIahB4IAAQEiAC
    QYABaiQAC0kBAn8DQCABQThGRQRAIAAgAWoiAiACKQMAQgGGNwMAIAFBCGohAQwBCwsgACAAKAI4QQF0IgE2AjggAUGAg
    IAQTgRAIAAQEgsLQgIBfwJ+QQAgAmusIQQDQCADQThHBEAgACADaiICIAIpAwAiBSABIANqKQMAhSAEgyAFhTcDACADQQ
    hqIQMMAQsLC0YBAn8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgAgAUEBEIoBIAAgARClARC
    yASABQUBrJAALTgEBfyMAQYAEayIBJAAgABAvIAEQLyABQYACahAvIABBgAJqIAFBgAIQZxogAEGABGogAUGAAmpBgAIQ
    ZxogAEEANgKABiABQYAEaiQAC0sBAX8jAEFAaiICJAACQCAAKAI4IAFsQYCAgBBOBEAgAiABEIoBIAAgAhBIDAELIAAgA
    RAoGiAAIAAoAjggAWw2AjgLIAJBQGskAAtKAAJ/IAFBgIDEAEcEQEEBIAAoAhggASAAQRxqKAIAKAIQEQMADQEaCyACRQ
    RAQQAPCyAAKAIYIAJBACAAQRxqKAIAKAIMEQUACwtCAQF/IwBBQGoiAiQAIAJBCGpBgIDAABBfIAEgAkEIahBrIAEQRCA
    AIAEQayAAQQMQKBogABBEIAAQKSACQUBrJAALSQECfyMAQcABayIBJAAgASAAEF4gAUGAAWogABCFASAAIABBQGsiAhCl
    ASAAEEEgAiABQYABahClASAAIAEQlQEgAUHAAWokAAtIAQF/IwBB4AFrIgEkACABQeihwAAQXyABQThqIAAgARAIIAFBq
    AFqIAFBOGoQBSAAIAFBqAFqEGsgAEECNgI4IAFB4AFqJAALPgEBfyABQTpuIQIgAUGVA00EQCAAIAJBA3RqKQMAQgEgAU
    H//wNxQTpwrYaDQgBVDwsgAkEHQdSdwAAQPAALQAIBfwF+IwBBgAFrIgEkACABQQhqIAAQhQEgAUEIahASIAFByABqIAF
    BCGoQgwEgASkDSCABQYABaiQAQgKBpws8AQF/IwBBgAFrIgIkACACIAAQhQEgAkFAayABEIUBIAIQEiACQUBrEBIgAiAC
    QUBrEDUgAkGAAWokAEULPAIBfwF+A38gAUE4RgR/IAJCf3xCgICAgICAgIAEg0I6iKcFIAAgAWopAwAgAoQhAiABQQhqI
    QEMAQsLC0cBAX8jAEEgayIDJAAgA0EUakEANgIAIANB9KrAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2Ag
    AgAyACEHAACzkBAX8jAEFAaiICJAAgAiAAEIUBIAIQByABBEAgASACEKUBCyACEAMgAiAAEEggAhAsIAJBQGskAAs6AQF
    /IABBOBByIQADQCACQTBGRQRAIABBCBAtIAAgACkDACABIAJqMQAAfDcDACACQQFqIQIMAQsLCzQBAX8gAEE4EHIiAEEB
    NgI4IABBQGtBOBByIABB+ABqQQE2AgAgACABEKUBIAFBQGsQpQELMAEBfyAAQTgQciEAA0AgAkE4RwRAIAAgAmogASACa
    ikDADcDACACQQhqIQIMAQsLCz8BAX8jAEGAAmsiASQAIAAQUSABEG4gACABEJIBIABBgAJqEK0BIABBgARqEK0BIABBAT
    YCgAYgAUGAAmokAAswAQJ/A0AgAkE4RwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLMAECfwNAIAJ
    BOEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLCzABAn8DQCACQThHBEAgACACaiIDIAEgAmopAwAg
    AykDAH03AwAgAkEIaiECDAELCwsxAQJ/A0AgAkHwAEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLC
    zEBAn8DQCACQfAARwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLOQECfyMAQYABayIBJAAgASAAQY
    ABaiICEF4gAiAAEJABIAEQVSAAIAEQkAEgABCsASABQYABaiQACzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACABQQFqIQE
    gA0EBaiEDIAJBf2oiAg0ACwsgAAtIAQN/IwBBEGsiASQAIAAoAgwhAyAAKAIIIgJFBEBB9KrAAEErQaCrwAAQWwALIAEg
    AzYCCCABIAA2AgQgASACNgIAIAEQcQALMgEBfyAAQgE3AwBBCCEBA0AgAUE4RkUEQCAAIAFqQgA3AwAgAUEIaiEBDAELC
    yAAEFYLNwAgABBRIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahCSASAAIAEoAoAGNgKABgsoAQF/A0AgAk
    E4RwRAIAAgAmogASACaikDADcDACACQQhqIQIMAQsLCzMAIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahC
    SASAAIAEoAoAGNgKABgsoACAAIAEgAhB5IABBQGsgAUFAayACEHkgAEGAAWogAUGAAWogAhB5Cy4BAX8jAEGAAWsiASQA
    IAAQLyABEFAgACABEJABIABBgAFqEKkBIAFBgAFqJAALLQAgACABIAIQjwEgAEGAAWogAUGAAWogAhCPASAAQYACaiABQ
    YACaiACEI8BCzQBAX8jAEEQayICJAAgAiABNgIMIAIgADYCCCACQaSowAA2AgQgAkH0qsAANgIAIAIQaAALPgEBfyMAQR
    BrIgEkACABQQhqIABBCGooAgA2AgAgASAAKQIANwMAIAEoAgAiAEEUaigCABogACgCBBoQMwALKQEBfyABBEAgACECA0A
    gAkEAOgAAIAJBAWohAiABQX9qIgENAAsLIAALKwEBfyMAQcABayICJAAgAhBLIAIgARB/IAIQpgEgACACEAwgAkHAAWok
    AAsiAQF/A0AgAUE4RwRAIAAgAWpCADcDACABQQhqIQEMAQsLCycBAX8jAEFAaiICJAAgAkEIaiABEF0gACACQQhqEIsBI
    AJBQGskAAsrACAAEFEgACABEJIBIABBgAJqIAIQkgEgAEGABGogAxCSASAAQQU2AoAGCyMBAX8jAEFAaiIBJAAgASAAEI
    UBIAEQEiABEFogAUFAayQACykAIAAgARBhIAAgACgCOCABKAI4aiIBNgI4IAFBgICAEE4EQCAAEBILCyUAIAAgASACEE8
    gAEEAIAJrIAAoAjgiACABKAI4c3EgAHM2AjgLIwADQCACBEAgACABLQAAED4gAkF/aiECIAFBAWohAQwBCwsLIgACQCAA
    IAEQWUUNACAAQUBrIAFBQGsQWUUNAEEBDwtBAAskAAJAIABBfE0EQCAARQRAQQQhAAwCCyAAEAEiAA0BCwALIAALJwEBf
    yMAQYABayICJAAgAiABEF4gAhA6IAAgAhCVASACQYABaiQACycAIAAgARCQASAAQYABaiABQYABahCQASAAQYACaiABQY
    ACahCQAQslACAAIAEQpQEgAEFAayABQUBrEKUBIABBgAFqIAFBgAFqEKUBCyUBAX8jAEFAaiICJAAgAiABEIUBIAIQQSA
    AIAIQeCACQUBrJAALKAEBfyMAQYACayICJAAgAiABEI4BIAIQKyAAIAIQlgEgAkGAAmokAAsjAEGEAiACSQRAIAJBhAIg
    AxA9AAsgACACNgIEIAAgATYCAAsiAQF/IwBB8ABrIgIkACACIAEQMCAAIAIQBSACQfAAaiQACxwAAkAgABB3RQ0AIABBg
    AFqEHdFDQBBAQ8LQQALHwAgAEE4EHIiAEEBNgI4IAAgARBrIAAgASgCODYCOAseAAJAIAAQhwFFDQAgAEGAAWoQhwFFDQ
    BBAQ8LQQALGwACQCAAEHdFDQAgAEFAaxB3RQ0AQQEPC0EACx4AAkAgABCHAUUNACAAQYACahCHAUUNAEEBDwtBAAsaAQF
    /IAAQWCIBIABBQGsQWCABcyAAEHdxcwsaACAAQTgQciIAQQE2AjggACABEJ0BIAAQVgsZACAAQTgQciIAQQE2AjggACAB
    EGsgABBWCxcAIAAQRCAAKAIAQX8gAUEfcXRBf3NxCxoAIAAgARBfIAAgAhAkIAAgAhBjIAAgAhAkCxwAIAAQLyAAIAEQk
    AEgAEGAAWogAUGAAWoQkAELGAAgACABIAIQeSAAQUBrIAFBQGsgAhB5CxYAIAAgARClASAAQUBrIAFBQGsQpQELGAAgAB
    AvIAAgARCQASAAQYABaiACEJABCxgAIAAgARCQASAAQYABaiABQYABahCQAQsZACAAEK4BIABBgAJqELYBIABBgARqEK4
    BCxcAIAAQsgEgAEFAaxBpIABBgAFqELIBCxQAIAAgARB4IABBQGsgAUFAaxB4CxgAIAAgARCVASAAQYABaiABQYABahCV
    AQsYACAAEKYBIABBgAFqIgAQpgEgACABEA8LGQAgABCpASAAQYABahCwASAAQYACahCpAQsZACAAEKwBIABBgAJqEKwBI
    ABBgARqEKwBCxkAIAAQqgEgAEGAAmoQqgEgAEGABGoQqgELFgAgABAvIAAgARCQASAAQYABahCpAQsWACAAQYABaiIAEK
    gBIAAQOiAAEKgBCxQAIAAQRCAAIAApAwAgAax8NwMACxQAIAAQRCAAIAApAwAgAax9NwMACxEAIAAgARBSIABBQGsgARB
    SCxEAIAAgARBIIABBQGsgARBICxQAIAAgARCQASAAQYABaiACEJABCxIAIAAgARAPIABBgAFqIAEQDwsUACAAIAEQoAEg
    AEGAAWogARCgAQsRACAAKAIEBEAgACgCABAJCwsSACAAIAEQayAAIAEoAjg2AjgLDwAgAEFAayIAEEEgABBECw0AIAAQT
    iAAQUBrEE4LDQAgABBEIABBQGsQRAsPACAAELIBIABBQGsQsgELEAAgABCrASAAQYABahCrAQsNACAAEBIgAEFAaxASCx
    AAIAAQqAEgAEGAAWoQqAELEAAgABCpASAAQYABahCpAQsPACAAQYABahA6IAAQrAELEAAgABCnASAAQYABahCnAQsOACA
    AEGkgAEFAaxCyAQsQACAAIAI2AgQgACABNgIACw0AIAAQdCAAQQE2AjgLDAAgABBBIAAgARB4CwwAIAAgARBrIAAQVgsN
    ACAAEDogACABEJUBCwsAIAAQOiAAEKwBCwwAQunQotvMouq7RgsDAAELAwABCwv+PZoCAEGCgMAACwcBAAAAAQI0AEG4g
    MAAC9sBuF8jku11BwFjT+D5WE+pA2dPnKtLeD0Akew9ffXy9AMD1g8fDSwgAK1vjPCZwa4A8DtNkAEAAADzStxtEor3AI
    uwH1tTsFYDgvLFYx+X7AAysL/NHtseAkehVLifHyMCQHo6ogw4sQGz4sMPAAAAAHNyYy9ibHMxMjM4MS9wYWlyLnJzqAA
    QABQAAAAHAQAACQAAAKgAEAAUAAAADAEAAA0AAACoABAAFAAAABEBAAANAAAAAAAAAAEAAAD///8Dv/+W/78AaQM7VYAd
    moCAAefMIPV1pkwBp+1zAEGogsAACyz+//7///8BAosAgILYBPYB4Y1oiW++kwLOdqvfPagdAMZpulHOdt8Dy1nGFwBB4
    ILAAAuRAZABEAATAAAA0AEAABgAAACQARAAEwAAANQBAAARAAAAkAEQABMAAADWAQAAHAAAAHNyYy9ibHMxMjM4MS9lY3
    AucnMAkAEQABMAAAAZBQAADQAAAJABEAATAAAAGwUAAAkAAACQARAAEwAAABwFAAARAAAAkAEQABMAAAAfBQAAHAAAAAA
    AAAABAAEAAAABAjQAQaCEwAALuSCQARAAEwAAAGcEAAARAAAAkAEQABMAAABsBAAADQAAAJABEAATAAAAbgQAABUAAACQ
    ARAAEwAAAHAEAAAgAAAAHUxYLQgo9ADXXz44aOPbAInJGoj9roEBomOjmrkPTgGY6rCCSW3JAoBOWs9QOu4AimlEAQAAA
    ADgKxeO6UjMAXSpOluMVsgAolXvNe/8FADngsIBPcnDA8EWIDvuPnUAusRiAAwgWgDRCCkuAQAAALgh6L1iEMUA3/4Vlz
    tIpQGLCDH8A9S9AbsR/Cc0UtIDHfAS2hvXowEqPc423S/bAshidB8AAAAAKdKiiy66yAHqR06TLeDGAiSMtsYkvPEDAo/
    w3iCL+AGd1zE97u2BA4ilRy+cg4kDSMIIbgAAAAB7+wUWP99nAjJ7Fwrjx90CaW+GFDsANgMrVFv+4Zl3A8x9+g1bVtIB
    Aju2nPiBcwIH2iEDAQAAAJ4MOb5nECQDX97JALfLQgIx+rexS69LAYydZXIx6AACyy7dIo8TXQHUDYML8enzAuH4sWkBA
    AAAF+OXhGqYcQFbpdOtpXylAPrkHV2MkmwBFovSVX2eswF1O8QNmb5jAc0s5B7x42kCH8/TgAAAAACOyPDjGFbLAOdrHT
    0yPvIBmzNTJw/vYgALmsY2bZ2sAuVtNVN+EdEAIQ4duvj2agBw54F7AQAAAITtOaEl8tcBt7JLQTBKlADaqLKGnI8hAiN
    AhjM+PJkAhhWxv1LmigOwyY1aShP5A1Nl7dYAAAAAgyllb8bBEwFzRs+5ckvDAQgK+Wh+CbkCTntu5kll9wGxPNu1Sqf3
    AwZIdMD/xFwDUDIMYwEAAADZlYis6UwVARTxnQfMG4oChYnB+oJZtgK7IfzsX0loAZnbmVSOEeQDLK2Q2RB9ZgCjJpfpA
    AAAAGFomx1kiLMB8WQcxDiXuAEzNQgzG58oA8zGl/w2qpUB5PXXElTlBwN0goHTbRvzA2ZxjncBAAAAsNyerJ2fFwD4p1
    yCSo8PA1jJJY7GHlAC46GVD2alzAEkA84bmgrRATESRAc7nl0C2wVA1QAAAAC7g8uz8e40ALrVMMa8qTwCg7SGHg3HMwK
    X1V8Qqr1sAecXfByoRyECrC5iwcvqUAI+7ZRyAQAAALdJRnNiFqwCq1uLuXy1MABhhSxO22y1A4nJfwFciyICPjBrhRWY
    2QEHRAIu0MygA7HyBRoBAAAACt3saNGEYwELQBne0pLTATFZwTGPlzMBfdvdQN9bugO0gvaAZqWzAo9b2xG1SnoCqxP8l
    QAAAABB1qF5Oux2AxHckO6qpJkAOFCDmPNn2gBA0K3ZhMV1AI1/4Myjx68Bz4Kkl+BTaQNqzw6hAAAAAF5azL2b2fcBxL
    R4RCdSbgH6gMUimN8cAltmoKIpbwgDY39umQHPdABs/SyMLCpZA6nCekoBAAAAOkrobkl0JQA7G3jD49TsAKfO6e0qBnM
    AuDglhk69ZgJXD1chZ1ngAxiDz0OGTVoAz6osdwAAAAClBGOfovktAHDEowjxkjQAQPeCiUvyzgMOKTS1cjqnAzVXOenG
    BgUD30NOVe6ZOQGOXzXnAAAAAB6iMjVbOZ0DVAdezQfqpgC9qW0wO4NOAK017oqBhGYBx9//faDnQwNXx5sCKkWKACAWj
    joBAAAA2CzGjZPoDQMEcT27D0m1AZcE/dYovIoCMlNFlcVa/AAkCFtU60B8A/urDrK/uGIBGlglNAAAAAAZPrhcujnCAD
    +3PyWfJfQAas3qrBEL4ACZ8kczxmm9AUGJbx+Z8r8BivlNoJfI6AHlL5ayAAAAAP87K8huJ8gBeboJLBshqgI9cfWLxIg
    lAJsEMADCMygD6EFwNjblmAJEHC3SEGfVAt6lYSUBAAAAHBvSQPr5PAEmfg+Nb6A1AlUrxor8F4YAVnLqIm2NLgHv1QFv
    +tNLA4u5LIZrxj8DSNWojAAAAAAEtshpvla0AMEdB7C/n0ABZisb8FqpTwG3XuVoWRI+Ah0Yy7Uu30IDzkKpk/PAQwLp5
    GteAQAAAEsidVRxHmsC4e1rXtkmQQC6Rs6nltP1AKxmo5WhXwcCPWde/KPESAN9VqhAxDORA0WWElwAAAAAMwGY2/XT2Q
    IQmcoIRyvkA2zMWQbE0zICmU8AVjA1IAA7e3XcFeN7AisAv9ymskcDSjlaJAAAAAD4HpcL8ARMAYN8hGRkcBQCbPAzRnu
    ADgGcADvCmtCoALGnekQ/9QQAWEJVdObkBgDByoKxAAAAAI5NB9CkyAcCs4E10QZ9cwKdJEP2EfnnA6+5GAnDq+ICWTVS
    zO3S/gNQMEaut73NAwipRosBAAAAMsER0BpxEwA6v+6PM5fOAxsDYZ44FuQDYET/JL2yLQPLL82T+0MdA+NCf4NvNN8Ae
    eQTlwEAAAAwHHPK66qvA8qbrlN3FdwDs7lDTR7t5wFhGvjba0WeAgwqxCNKoa0Dea+OSG2vYQChp7vhAAAAAIel23tXDj
    cA2OiB4XGAlAGd5qsM8qHmAi16sAl3nlkAvTqPu6FNHgKIJyP6EpplA4sBxJ8AAAAAKftwGKNMXgFoTfq3P1SRAS9kQsg
    mbNoADvR/YPeO/wIFChd0xqYsAa9Jpvcbrs4AU418mAAAAADy1ulfhfhhAbJX0IORsB4CenTzNNbEEwDFSC0Thq8oA7hb
    5zxreScA9F2yLO8G6wO8ubBKAAAAAPClMzaxOrIBphygVrLJ2AMD4kRVrdPDAUHZ9d62vlID0Kd0oKbwuAFHeISI2tIYA
    KT8A2YBAAAA2/7o8uzatgEQKhBkAjf+Ae7CrVETIv0DDObhQjmP7wM2VRnEKRWiAvjTK9fEP/gD3j/AjAAAAADL9OWwd1
    w1Ail7h7GnrhYA5J3PUTLAPgKSJ3DkrTvkAqcq1FdndNgCRh0mXggHJgJuN4YfAAAAAPbhLcdA4t8A7kgBLIqFVAMmfdo
    AFLnkAxINi3OMYlkD4lIllEk7agAy4Si9mZulArqGxwwAAAAAlsZBLlrnlwD4L+qLZcRZAWxN03q2PjQCQT704DyVsAHp
    IxKDRvt2A7UNRHUEljsBEGqZNAEAAAAzuweXcUWYAq/w6M6mux4D0Dw9VFbJ9gJKrUiloSI5AhOtEfrcgEkBwkdnCbiT6
    AKBfNmQAAAAAI9LYx06RxUAEeAlTTxcvQDKBaLKVmPNAzvJTOHOiZcBD8RxwRl4DQJXCcmaD3C3AYEd+uAAAAAA9wbtJh
    Pc+gE0IDPFYe9FASDkgCSUJ98A0i0Hn6ScUwJbVr/yds1TAUP3otjOk8sCDkBgJgAAAADMRTNXOLGZAkewQu742AEAMGm
    42QCa7wJz9ZkIfCtmA0YzVJYUX7QAUUzY8PifHQMUlWutAAAAAJIQVuIptYQCpfqu3xsmWgJvURN56oyoAT4wSgs5vysC
    /5R/RwzFSAIHS2H9z0AHAnS2y6wAAAAAqGqPupy0+AAAgcHg06dwARqHXGpjbrMBZDmkmIbt5gDQbZwdkdIaACgEPFJvA
    akDniUvTQAAAABVP5G4i/RuAI3XbEr1qBcCc7xPfernkgEhTO0e9oSPAfcWMpCEStkDZYGgOoebwgHaXKVnAQAAAEpdU1
    WdPSMD2iCS5O69+AMshbQ5v8RQAxWvgmS9GpMDDPv5xEzX0QNT+YbGSBjbANOObIYBAAAA2S6BFVpB7gAYuXcAAmw9AJI
    rE1djIP0AzfpfP33oewE3pOVu/6a7An4374D6qY8Di/A+agEAAABcd2oSmRMaAU/ux2JpAKcCXx0FoADEWwJNd73jMzTq
    A/3sXkuC6awAzaHu8Mt2pgIIfABmAQAAAKy3+ap/R8YCgDhz6ndu4wCfRKb18LaHAbMXB2JDVRkDUgG3gjF4rAK6mexny
    7ZhAJdSno0AAAAAHQClESMUOQJ2e7v0A3fFAiBqkeyd/KABu1DB7qY9fAKc0cbcjSL4AkQyAyz50BcBlQcOvgAAAAAWVF
    9EmG3SAGrrpaCwPNkAJxf0anKeSAL2SDhM83ZvA8UV0dG07YkD70iDfOWUYwKHKH1rAQAAAPJnvz21OCUCR+Jbvo01XwF
    nyi7NedJdAtYwxPy5RlUBhcR4V7GObgGfq+rbiTaQAQYz31gAAAAAPaBJLiwQ9gJMjafU2IEJAYr3AT5FbzUAhJJyVhPH
    3ANPyIW4SMNDAFsvg4YHSOAAwnUtlgEAAADBYzawU5JHAUAbCIO9I9oAf6Dncr61MgIMu5svYOKVA20aYOnq0PoAUASGl
    CwmpwLDxBJhAQAAAHNyYy9ibHMxMjM4MS9iaWcucnMAoA4QABMAAADMAQAALQAAAKAOEAATAAAAzAEAADUAAACgDhAAEw
    AAABkCAAANAAAAoA4QABMAAAA4AwAAGAAAAKAOEAATAAAAOAMAACEAAACgDhAAEwAAAEIDAAAhAAAAoA4QABMAAABbAwA
    AFwAAAKAOEAATAAAAZAMAABcAAACgDhAAEwAAAHIDAAAwAAAAoA4QABMAAAB7AwAAMAAAAKAOEAATAAAApwMAABgAAACg
    DhAAEwAAALUDAAAYAAAAmC+KQpFEN3HP+8C1pdu16VvCVjnxEfFZpII/ktVeHKuYqgfYAVuDEr6FMSTDfQxVdF2+cv6x3
    oCnBtybdPGbwcFpm+SGR77vxp3BD8yhDCRvLOktqoR0StypsFzaiPl2UlE+mG3GMajIJwOwx39Zv/ML4MZHkafVUWPKBm
    cpKRSFCrcnOCEbLvxtLE0TDThTVHMKZbsKanYuycKBhSxykqHov6JLZhqocItLwqNRbMcZ6JLRJAaZ1oU1DvRwoGoQFsG
    kGQhsNx5Md0gntbywNLMMHDlKqthOT8qcW/NvLmjugo90b2OleBR4yIQIAseM+v++kOtsUKT3o/m+8nhxxkJMU19TSUdf
    QkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF8A0BAQABMAAAA/AAAALgAAANAQEAATAAAAPQAAABUAAADQE
    BAAEwAAAD0AAAANAAAAc3JjL2JsczEyMzgxL2Jscy5ycwAAAAAArve+1aE5BgLok91iZEwkAdIsbk61CS0C2+VwMbbEEQ
    GZYzb76G2KA7ycH+3PFk8AK2qmngEAAABhdHRlbXB0IHRvIGRpdmlkZSBieSB6ZXJvAAAAbxEQABIAAAB8AQAAFAAAAAA
    AAABhdHRlbXB0IHRvIGRpdmlkZSB3aXRoIG92ZXJmbG93c3JjL2JsczEyMzgxL2ZwLnJzAAAAbxEQABIAAAASAgAADQAA
    AG8REAASAAAAHgIAACYAAABvERAAEgAAAB4CAAAjAAAAbxEQABIAAAAkAgAAFwAAAG8REAASAAAAJAIAABQAAAAAAAAAq
    qr//////gHu//9UrP//AupBYg9rDyoBw5z9ShTOEwJLd2TXrEtDAu3pxpKm+V8Cox4RoAEAAABAEhAAFAAAABUBAAATAA
    AAQBIQABQAAAAeAQAAGAAAAEASEAAUAAAAJAEAABwAAABzcmMvYmxzMTIzODEvZWNwMi5ycwAAAAAEAEGQpcAAC7wGQBI
    QABQAAADmAgAACQAAAEASEAAUAAAA7gIAAA0AAABAEhAAFAAAAP4CAAAhAAAAuL0hwchWgAD1+24BqskAA7pwFz2uR7YA
    RNEK7ADpUwN65MZREMUtA0kBgkmkwiMALyuqJAAAAAB+KwRdBX2sAflVF+WERDwDNJME9ce9GwJp12rYgmRCA9BrWWVPJ
    4gA6DRrH9hnnAAFtgI+AQAAAAEouAiGVJMBeKIo6w5zsgIjyRINFpWmAQq1nU73MqoCm/2tGjUu2gJxczJjhFufAHdSXc
    4AAAAAvnlf8F8HqQJqaAc710nDAfOzmulytSoB0pm8jp0W+gEoPsuZi8IrAKw0qwwzzakDAkpsYAAAAACrqv/////+Ae7
    //1Ss//8C6kFiD2sPKgHDnP1KFM4TAkt3ZNesS0MC7enGkqb5XwKjHhGgAQAAAAgUEAALAAAAjwEAAA8AAAAIFBAACwAA
    AKcBAAATAAAACBQQAAsAAACqAQAADQAAAHNyYy9obWFjLnJzADQUEAAgAAAAVBQQABIAAAADAAAAAAAAAAEAAAAEAAAAa
    W5kZXggb3V0IG9mIGJvdW5kczogdGhlIGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAwMDAxMDIwMzA0MDUwNjA3MDgwOT
    EwMTExMjEzMTQxNTE2MTcxODE5MjAyMTIyMjMyNDI1MjYyNzI4MjkzMDMxMzIzMzM0MzUzNjM3MzgzOTQwNDE0MjQzNDQ
    0NTQ2NDc0ODQ5NTA1MTUyNTM1NDU1NTY1NzU4NTk2MDYxNjI2MzY0NjU2NjY3Njg2OTcwNzE3MjczNzQ3NTc2Nzc3ODc5
    ODA4MTgyODM4NDg1ODY4Nzg4ODk5MDkxOTI5Mzk0OTU5Njk3OTg5OQAAQBUQABAAAABQFRAAIgAAAHJhbmdlIGVuZCBpb
    mRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAABjYWxsZWQgYE9wdGlvbjo6dW53cmFwKClgIG9uIG
    EgYE5vbmVgIHZhbHVlALAVEAAcAAAA7gEAAB4AAABsaWJyYXJ5L3N0ZC9zcmMvcGFuaWNraW5nLnJzAEGIrMAACwEBAEH
    IrMAACwEBAEGIrcAACwEBAEHIrcAACwEBAEGIrsAACwEBAEHIrsAACwEBAEGIr8AACwEBAEHIr8AACwEBAEGIsMAACwEB
    AEHIsMAACwEBAEGIscAACwEBAEHIscAACwEBAEGIssAACwEBAEHIssAACwEBAEGIs8AACwEBAEHIs8AACwEBAEGItMAAC
    wEBAEHItMAACwEBAEGItcAACwEBAEHItcAACwEBAEGItsAACwEBAEHItsAACwEBAEGIt8AACwEBAEHIt8AACwEBAEGIuM
    AACwEBAEHIuMAACwEBAEGIucAACwEBAEHIucAACwEBAEGIusAACwEBAEHIusAACwEBAEGIu8AACwEBAEHIu8AACwEBAEG
    IvMAACwEBAEHIvMAACwEBAEGIvcAACwEBAEHIvcAACwEBAEGIvsAACwEBAEHIvsAACwEBAEGIv8AACwEBAEHIv8AACwEB
    AEGIwMAACwEBAEHIwMAACwEBAEGIwcAACwEBAEHIwcAACwEBAEGIwsAACwEBAEHIwsAACwEBAEGIw8AACwEBAEHIw8AAC
    wEBAEGIxMAACwEBAEHIxMAACwEBAEGIxcAACwEBAEHIxcAACwEBAEGIxsAACwEBAEHIxsAACwEBAEGIx8AACwEBAEHIx8
    AACwEBAEGIyMAACwEBAEHIyMAACwEBAEGIycAACwEBAEHIycAACwEBAEGIysAACwEBAEHIysAACwEBAEGIy8AACwEBAEH
    Iy8AACwEBAEGIzMAACwEBAEHIzMAACwEBAEGIzcAACwEBAEHIzcAACwEBAEGIzsAACwEBAEHIzsAACwEBAEGIz8AACwEB
    AEHIz8AACwEBAEGI0MAACwEBAEHI0MAACwEBAEGI0cAACwEBAEHI0cAACwEBAEGI0sAACwEBAEHI0sAACwEBAEGI08AAC
    wEBAEHI08AACwEBAEGI1MAACwEBAEHI1MAACwEBAEGI1cAACwEBAEHI1cAACwEBAEGI1sAACwEBAEHI1sAACwEBAEGI18
    AACwEBAEHI18AACwEBAEGI2MAACwEBAEHI2MAACwEBAEGI2cAACwEBAEHI2cAACwEBAEGI2sAACwEBAEHI2sAACwEBAEG
    I28AACwEBAEHI28AACwEBAEGI3MAACwEBAEHI3MAACwEBAEGI3cAACwEBAEHI3cAACwEBAEGI3sAACwEBAEHI3sAACwEB
    AEGI38AACwEBAEHI38AACwEBAEGI4MAACwEBAEHI4MAACwEBAEGI4cAACwEBAEHI4cAACwEBAEGI4sAACwEBAEHI4sAAC
    wEBAEGI48AACwEBAEHI48AACwEBAEGI5MAACwEBAEHI5MAACwEBAEGI5cAACwEBAEHI5cAACwEBAEGI5sAACwEBAEHI5s
    AACwEBAEGI58AACwEBAEHI58AACwEBAEGI6MAACwEBAEHI6MAACwEBAEGI6cAACwEBAEHI6cAACwEBAEGI6sAACwEBAEH
    I6sAACwEBAEGI68AACwEBAEHI68AACwEBAEGI7MAACwEBAEHI7MAACwEBAEGI7cAACwEBAEHI7cAACwEBAEGI7sAACwEB
    AEHI7sAACwEBAEGI78AACwEBAEHI78AACwEBAEGI8MAACwEBAEHI8MAACwEBAEGI8cAACwEBAEHI8cAACwEBAEGI8sAAC
    wEBAEHI8sAACwEBAEGI88AACwEBAEHI88AACwEBAEGI9MAACwEBAEHI9MAACwEBAEGI9cAACwEBAEHI9cAACwEBAEGI9s
    AACwEBAEHI9sAACwEBAEGI98AACwEBAEHI98AACwEBAEGI+MAACwEBAEHI+MAACwEBAEGI+cAACwEBAEHI+cAACwEBAEG
    I+sAACwEBAEHI+sAACwEBAEGI+8AACwEBAEHI+8AACwEBAEGI/MAACwEBAEHI/MAACwEBAEGI/cAACwEBAEHI/cAACwEB
    AEGI/sAACwEBAEHI/sAACwEBAEGI/8AACwEBAEHI/8AACwEBAEGIgMEACwEBAEHIgMEACwEBAEGIgcEACwEBAEHIgcEAC
    wEBAEGIgsEACwEBAEHIgsEACwEBAEGIg8EACwEBAEHIg8EACwEBAEGIhMEACwEBAEHIhMEACwEBAEGIhcEACwEBAEHIhc
    EACwEBAEGIhsEACwEBAEHIhsEACwEBAEGIh8EACwEBAEHIh8EACwEBAEGIiMEACwEBAEHIiMEACwEBAEGIicEACwEBAEH
    IicEACwEBAEGIisEACwEBAEHIisEACwEBAEGIi8EACwEBAEHIi8EACwEBAEGIjMEACwEBAEHIjMEACwEBAEGIjcEACwEB
    AEHIjcEACwEBAEGIjsEACwEBAEHIjsEACwEBAEGIj8EACwEBAEHIj8EACwEBAEGIkMEACwEBAEHIkMEACwEBAEGIkcEAC
    wEBAEHIkcEACwEBAEGIksEACwEBAEHIksEACwEBAEGIk8EACwEBAEHIk8EACwEBAEGIlMEACwEBAEHIlMEACwEBAEGIlc
    EACwEBAEHIlcEACwEBAEGIlsEACwEBAEHIlsEACwEBAEGIl8EACwEBAEHIl8EACwEBAEGImMEACwEBAEHImMEACwEBAEG
    ImcEACwEBAEHImcEACwEBAEGImsEACwEBAEHImsEACwEBAEGIm8EACwEBAEHIm8EACwEBAEGInMEACwEBAEHInMEACwEB
    AEGIncEACwEBAEHIncEACwEBAEGInsEACwEBAEHInsEACwEBAEGIn8EACwEBAEHIn8EACwEBAEGIoMEACwEBAEHIoMEAC
    wEBAEGIocEACwEBAEHIocEACwEBAEGIosEACwEBAEHIosEACwEBAEGIo8EACwEBAEHIo8EACwEBAEGIpMEACwEBAEHIpM
    EACwEBAEGIpcEACwEBAEHIpcEACwEBAEGIpsEACwEBAEHIpsEACwEBAEGIp8EACwEBAEHIp8EACwEBAEGIqMEACwEBAEH
    IqMEACwEBAEGIqcEACwEBAEHIqcEACwEBAEGIqsEACwEBAEHIqsEACwEBAEGIq8EACwEBAEHIq8EACwEBAEGIrMEACwEB
    AEHIrMEACwEBAEGIrcEACwEBAEHIrcEACwEBAEGIrsEACwEBAEHIrsEACwEBAEGIr8EACwEBAEHIr8EACwEBAEGIsMEAC
    wEBAEHIsMEACwEBAEGIscEACwEBAEHIscEACwEBAEGIssEACwEBAEHIssEACwEBAEGIs8EACwEBAEHIs8EACwEBAEGItM
    EACwEBAEHItMEACwEBAEGItcEACwEBAEHItcEACwEBAHsJcHJvZHVjZXJzAghsYW5ndWFnZQEEUnVzdAAMcHJvY2Vzc2V
    kLWJ5AwVydXN0Yx0xLjQ5LjAgKGUxODg0YThlMyAyMDIwLTEyLTI5KQZ3YWxydXMGMC4xOC4wDHdhc20tYmluZGdlbhIw
    LjIuNzAgKGI2MzU1YzI3MCk=
`.replace(/[^0-9a-zA-Z/+]/g, ""), wasmBytes$1 = decode$2(wasmBytesBase64$1);
function bls_init$1() {
  return wasm$1.bls_init();
}
let cachegetUint8Memory0$1 = null;
function getUint8Memory0$1() {
  return (cachegetUint8Memory0$1 === null || cachegetUint8Memory0$1.buffer !== wasm$1.memory.buffer) && (cachegetUint8Memory0$1 = new Uint8Array(wasm$1.memory.buffer)), cachegetUint8Memory0$1;
}
function passArray8ToWasm0$1(Q, ee) {
  const ne = ee(Q.length * 1);
  return getUint8Memory0$1().set(Q, ne / 1), [ne, Q.length];
}
function bls_verify$1(Q, ee, ne) {
  const [ie, ae] = passArray8ToWasm0$1(Q, wasm$1.__wbindgen_malloc), [ce, le] = passArray8ToWasm0$1(ee, wasm$1.__wbindgen_malloc), [de, ye] = passArray8ToWasm0$1(ne, wasm$1.__wbindgen_malloc);
  return wasm$1.bls_verify(ie, ae, ce, le, de, ye);
}
async function load$1(Q, ee) {
  if (typeof Response == "function" && Q instanceof Response) {
    const ne = await Q.arrayBuffer();
    return await WebAssembly.instantiate(ne, ee);
  } else {
    const ne = await WebAssembly.instantiate(Q, ee);
    return ne instanceof WebAssembly.Instance ? { instance: ne, module: Q } : ne;
  }
}
async function init$e() {
  const Q = {}, { instance: ee, module: ne } = await load$1(wasmBytes$1, Q);
  return wasm$1 = ee.exports, init$e.__wbindgen_wasm_module = ne, wasm$1;
}
let verify$1;
async function blsVerify$1(Q, ee, ne) {
  if (!verify$1) {
    if (await init$e(), bls_init$1() !== 0)
      throw new Error("Cannot initialize BLS");
    verify$1 = (ie, ae, ce) => bls_verify$1(ae, ce, ie) === 0;
  }
  return verify$1(Q, ee, ne);
}
class UnverifiedCertificateError extends AgentError$1 {
  constructor() {
    super("Cannot lookup unverified certificate. Call 'verify()' first.");
  }
}
function hashTreeToString(Q) {
  const ee = (ie) => ie.split(`
`).map((ae) => "  " + ae).join(`
`);
  function ne(ie) {
    const ae = new TextDecoder(void 0, { fatal: !0 });
    try {
      return JSON.stringify(ae.decode(ie));
    } catch {
      return `data(...${ie.byteLength} bytes)`;
    }
  }
  switch (Q[0]) {
    case 0:
      return "()";
    case 1: {
      const ie = hashTreeToString(Q[1]), ae = hashTreeToString(Q[2]);
      return `sub(
 left:
${ee(ie)}
---
 right:
${ee(ae)}
)`;
    }
    case 2: {
      const ie = ne(Q[1]), ae = hashTreeToString(Q[2]);
      return `label(
 label:
${ee(ie)}
 sub:
${ee(ae)}
)`;
    }
    case 3:
      return `leaf(...${Q[1].byteLength} bytes)`;
    case 4:
      return `pruned(${blobToHex(blobFromUint8Array(new Uint8Array(Q[1])))}`;
    default:
      return `unknown(${JSON.stringify(Q[0])})`;
  }
}
function isBufferEqual$1(Q, ee) {
  if (Q.length !== ee.length)
    return !1;
  for (let ne = 0; ne < Q.length; ne++)
    if (Q[ne] !== ee[ne])
      return !1;
  return !0;
}
class Certificate$1 {
  constructor(ee, ne = getDefaultAgent$1()) {
    this._agent = ne, this.verified = !1, this._rootKey = null, this.cert = decode$3(ee.certificate);
  }
  lookupEx(ee) {
    return this.checkState(), lookupPathEx(ee, this.cert.tree);
  }
  lookup(ee) {
    return this.checkState(), lookup_path$1(ee, this.cert.tree);
  }
  async verify() {
    const ee = await reconstruct$1(this.cert.tree), ne = await this._checkDelegation(this.cert.delegation), ie = this.cert.signature, ae = extractDER$1(ne), ce = buffer$1.Buffer.concat([domain_sep$1("ic-state-root"), ee]), le = await blsVerify$1(ae, ie, ce);
    return this.verified = le, le;
  }
  checkState() {
    if (!this.verified)
      throw new UnverifiedCertificateError();
  }
  async _checkDelegation(ee) {
    if (!ee) {
      if (!this._rootKey) {
        if (this._agent.rootKey)
          return this._rootKey = this._agent.rootKey, this._rootKey;
        throw new Error("Agent does not have a rootKey. Do you need to call 'fetchRootKey'?");
      }
      return this._rootKey;
    }
    const ne = new Certificate$1(ee, this._agent);
    if (!await ne.verify())
      throw new Error("fail to verify delegation certificate");
    const ie = ne.lookupEx(["subnet", ee.subnet_id, "public_key"]);
    if (!ie)
      throw new Error(`Could not find subnet key for subnet 0x${ee.subnet_id.toString("hex")}`);
    return buffer$1.Buffer.from(ie);
  }
}
const DER_PREFIX$1 = buffer$1.Buffer.from("308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100", "hex"), KEY_LENGTH$1 = 96;
function extractDER$1(Q) {
  const ee = DER_PREFIX$1.length + KEY_LENGTH$1;
  if (Q.length !== ee)
    throw new TypeError(`BLS DER-encoded public key must be ${ee} bytes long`);
  const ne = Q.slice(0, DER_PREFIX$1.length);
  if (!isBufferEqual$1(ne, DER_PREFIX$1))
    throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX$1}, but get ${ne}`);
  return Q.slice(DER_PREFIX$1.length);
}
async function reconstruct$1(Q) {
  switch (Q[0]) {
    case 0:
      return hash$1(domain_sep$1("ic-hashtree-empty"));
    case 4:
      return buffer$1.Buffer.from(Q[1]);
    case 3:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-leaf"),
        buffer$1.Buffer.from(Q[1])
      ]));
    case 2:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-labeled"),
        buffer$1.Buffer.from(Q[1]),
        buffer$1.Buffer.from(await reconstruct$1(Q[2]))
      ]));
    case 1:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-fork"),
        buffer$1.Buffer.from(await reconstruct$1(Q[1])),
        buffer$1.Buffer.from(await reconstruct$1(Q[2]))
      ]));
    default:
      throw new Error("unreachable");
  }
}
function domain_sep$1(Q) {
  const ee = buffer$1.Buffer.alloc(1);
  return ee.writeUInt8(Q.length, 0), buffer$1.Buffer.concat([ee, buffer$1.Buffer.from(Q)]);
}
function lookupPathEx(Q, ee) {
  const ne = lookup_path$1(Q.map((ie) => typeof ie == "string" ? blobFromText(ie) : blobFromUint8Array(new Uint8Array(ie))), ee);
  return ne && blobToUint8Array(ne);
}
function lookup_path$1(Q, ee) {
  if (Q.length === 0)
    switch (ee[0]) {
      case 3:
        return buffer$1.Buffer.from(ee[1]);
      default:
        return;
    }
  const ne = find_label$1(Q[0], flatten_forks$1(ee));
  if (ne)
    return lookup_path$1(Q.slice(1), ne);
}
function flatten_forks$1(Q) {
  switch (Q[0]) {
    case 0:
      return [];
    case 1:
      return flatten_forks$1(Q[1]).concat(flatten_forks$1(Q[2]));
    default:
      return [Q];
  }
}
function find_label$1(Q, ee) {
  if (ee.length !== 0) {
    for (const ne of ee)
      if (ne[0] === 2) {
        const ie = buffer$1.Buffer.from(ne[1]);
        if (isBufferEqual$1(Q, ie))
          return ne[2];
      }
  }
}
const FIVE_MINUTES_IN_MSEC$1 = 5 * 60 * 1e3;
function defaultStrategy$1() {
  return chain$1(conditionalDelay$1(once$2(), 1e3), backoff$1(1e3, 1.2), timeout$1(FIVE_MINUTES_IN_MSEC$1));
}
function once$2() {
  let Q = !0;
  return async () => Q ? (Q = !1, !0) : !1;
}
function conditionalDelay$1(Q, ee) {
  return async (ne, ie, ae) => {
    if (await Q(ne, ie, ae))
      return new Promise((ce) => setTimeout(ce, ee));
  };
}
function maxAttempts(Q) {
  let ee = Q;
  return async (ne, ie, ae) => {
    if (--ee <= 0)
      throw new Error(`Failed to retrieve a reply for request after ${Q} attempts:
  Request ID: ${toHex$1(ie)}
  Request status: ${ae}
`);
  };
}
function throttle(Q) {
  return () => new Promise((ee) => setTimeout(ee, Q));
}
function timeout$1(Q) {
  const ee = Date.now() + Q;
  return async (ne, ie, ae) => {
    if (Date.now() > ee)
      throw new Error(`Request timed out after ${Q} msec:
  Request ID: ${toHex$1(ie)}
  Request status: ${ae}
`);
  };
}
function backoff$1(Q, ee) {
  let ne = Q;
  return () => new Promise((ie) => setTimeout(() => {
    ne *= ee, ie();
  }, ne));
}
function chain$1(...Q) {
  return async (ee, ne, ie) => {
    for (const ae of Q)
      await ae(ee, ne, ie);
  };
}
const strategy = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  defaultStrategy: defaultStrategy$1,
  once: once$2,
  conditionalDelay: conditionalDelay$1,
  maxAttempts,
  throttle,
  timeout: timeout$1,
  backoff: backoff$1,
  chain: chain$1
}, Symbol.toStringTag, { value: "Module" }));
async function pollForResponse$1(Q, ee, ne, ie) {
  const ae = [blobFromText("request_status"), ne], ce = await Q.readState(ee, { paths: [ae] }), le = new Certificate$1(ce, Q);
  if (!await le.verify())
    throw new Error("Fail to verify certificate");
  const ye = le.lookup([...ae, blobFromText("status")]);
  let fe;
  switch (typeof ye > "u" ? fe = RequestStatusResponseStatus$1.Unknown : fe = ye.toString(), fe) {
    case RequestStatusResponseStatus$1.Replied:
      return le.lookup([...ae, blobFromText("reply")]);
    case RequestStatusResponseStatus$1.Received:
    case RequestStatusResponseStatus$1.Unknown:
    case RequestStatusResponseStatus$1.Processing:
      return await ie(ee, ne, fe), pollForResponse$1(Q, ee, ne, ie);
    case RequestStatusResponseStatus$1.Rejected: {
      const Be = le.lookup([...ae, blobFromText("reject_code")]).toString(), Ee = le.lookup([...ae, blobFromText("reject_message")]).toString();
      throw new Error(`Call was rejected:
  Request ID: ${toHex$1(ne)}
  Reject code: ${Be}
  Reject text: ${Ee}
`);
    }
    case RequestStatusResponseStatus$1.Done:
      throw new Error(`Call was marked as done but we never saw the reply:
  Request ID: ${toHex$1(ne)}
`);
  }
  throw new Error("unreachable");
}
const index$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  pollForResponse: pollForResponse$1,
  strategy,
  defaultStrategy: defaultStrategy$1
}, Symbol.toStringTag, { value: "Module" }));
class ActorCallError$1 extends AgentError$1 {
  constructor(ee, ne, ie, ae) {
    super([
      "Call failed:",
      `  Canister: ${ee.toText()}`,
      `  Method: ${ne} (${ie})`,
      ...Object.getOwnPropertyNames(ae).map((ce) => `  "${ce}": ${JSON.stringify(ae[ce])}`)
    ].join(`
`)), this.canisterId = ee, this.methodName = ne, this.type = ie, this.props = ae;
  }
}
class QueryCallRejectedError$1 extends ActorCallError$1 {
  constructor(ee, ne, ie) {
    var ae;
    super(ee, ne, "query", {
      Status: ie.status,
      Code: (ae = ReplicaRejectCode$1[ie.reject_code]) !== null && ae !== void 0 ? ae : `Unknown Code "${ie.reject_code}"`,
      Message: ie.reject_message
    }), this.result = ie;
  }
}
class UpdateCallRejectedError$1 extends ActorCallError$1 {
  constructor(ee, ne, ie, ae) {
    super(ee, ne, "update", {
      "Request ID": toHex$1(ie),
      "HTTP status code": ae.status.toString(),
      "HTTP status text": ae.statusText
    }), this.requestId = ie, this.response = ae;
  }
}
var CanisterInstallMode$1;
(function(Q) {
  Q.Install = "install", Q.Reinstall = "reinstall", Q.Upgrade = "upgrade";
})(CanisterInstallMode$1 || (CanisterInstallMode$1 = {}));
const metadataSymbol$1 = Symbol.for("ic-agent-metadata");
class Actor$1 {
  constructor(ee) {
    this[metadataSymbol$1] = Object.freeze(ee);
  }
  static agentOf(ee) {
    return ee[metadataSymbol$1].config.agent;
  }
  static interfaceOf(ee) {
    return ee[metadataSymbol$1].service;
  }
  static canisterIdOf(ee) {
    return Principal$2.from(ee[metadataSymbol$1].config.canisterId);
  }
  static async install(ee, ne) {
    const ie = ee.mode === void 0 ? CanisterInstallMode$1.Install : ee.mode, ae = ee.arg ? [...ee.arg] : [], ce = [...ee.module], le = typeof ne.canisterId == "string" ? Principal$2.fromText(ne.canisterId) : ne.canisterId;
    await getManagementCanister$1(ne).install_code({
      mode: { [ie]: null },
      arg: ae,
      wasm_module: ce,
      canister_id: le
    });
  }
  static async createCanister(ee) {
    const { canister_id: ne } = await getManagementCanister$1(ee || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
    return ne;
  }
  static async createAndInstallCanister(ee, ne, ie) {
    const ae = await this.createCanister(ie);
    return await this.install(Object.assign({}, ne), Object.assign(Object.assign({}, ie), { canisterId: ae })), this.createActor(ee, Object.assign(Object.assign({}, ie), { canisterId: ae }));
  }
  static createActorClass(ee) {
    const ne = ee({ IDL: IDL$1 });
    class ie extends Actor$1 {
      constructor(ce) {
        const le = typeof ce.canisterId == "string" ? Principal$2.fromText(ce.canisterId) : ce.canisterId;
        super({
          config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG$1), ce), { canisterId: le }),
          service: ne
        });
        for (const [de, ye] of ne._fields)
          this[de] = _createActorMethod$1(this, de, ye);
      }
    }
    return ie;
  }
  static createActor(ee, ne) {
    return new (this.createActorClass(ee))(ne);
  }
}
function decodeReturnValue$1(Q, ee) {
  const ne = decode$4(Q, buffer$1.Buffer.from(ee));
  switch (ne.length) {
    case 0:
      return;
    case 1:
      return ne[0];
    default:
      return ne;
  }
}
const DEFAULT_ACTOR_CONFIG$1 = {
  pollingStrategyFactory: defaultStrategy$1
};
function _createActorMethod$1(Q, ee, ne) {
  let ie;
  ne.annotations.includes("query") ? ie = async (ce, ...le) => {
    var de, ye;
    ce = Object.assign(Object.assign({}, ce), (ye = (de = Q[metadataSymbol$1].config).queryTransform) === null || ye === void 0 ? void 0 : ye.call(de, ee, le, Object.assign(Object.assign({}, Q[metadataSymbol$1].config), ce)));
    const fe = ce.agent || Q[metadataSymbol$1].config.agent || getDefaultAgent$1(), Be = Principal$2.from(ce.canisterId || Q[metadataSymbol$1].config.canisterId), Ee = encode$3(ne.argTypes, le), me = await fe.query(Be, { methodName: ee, arg: Ee });
    switch (me.status) {
      case "rejected":
        throw new QueryCallRejectedError$1(Be, ee, me);
      case "replied":
        return decodeReturnValue$1(ne.retTypes, me.reply.arg);
    }
  } : ie = async (ce, ...le) => {
    var de, ye;
    ce = Object.assign(Object.assign({}, ce), (ye = (de = Q[metadataSymbol$1].config).callTransform) === null || ye === void 0 ? void 0 : ye.call(de, ee, le, Object.assign(Object.assign({}, Q[metadataSymbol$1].config), ce)));
    const fe = ce.agent || Q[metadataSymbol$1].config.agent || getDefaultAgent$1(), { canisterId: Be, effectiveCanisterId: Ee, pollingStrategyFactory: me } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG$1), Q[metadataSymbol$1].config), ce), ge = Principal$2.from(Be), we = Ee !== void 0 ? Principal$2.from(Ee) : ge, be = encode$3(ne.argTypes, le), { requestId: Oe, response: He } = await fe.call(ge, {
      methodName: ee,
      arg: be,
      effectiveCanisterId: we
    });
    if (!He.ok)
      throw new UpdateCallRejectedError$1(ge, ee, Oe, He);
    const Se = me(), Ge = await pollForResponse$1(fe, we, Oe, Se);
    if (Ge !== void 0)
      return decodeReturnValue$1(ne.retTypes, Ge);
    if (ne.retTypes.length === 0)
      return;
    throw new Error(`Call was returned undefined, but type [${ne.retTypes.join(",")}].`);
  };
  const ae = (...ce) => ie({}, ...ce);
  return ae.withOptions = (ce) => (...le) => ie(ce, ...le), ae;
}
const assetCanister = ({ IDL: Q }) => Q.Service({
  retrieve: Q.Func([Q.Text], [Q.Vec(Q.Nat8)], ["query"]),
  store: Q.Func([Q.Text, Q.Vec(Q.Nat8)], [], [])
});
function createAssetCanisterActor(Q) {
  return Actor$1.createActor(assetCanister, Q);
}
const esm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  polling: index$1,
  Cbor: cbor,
  ActorCallError: ActorCallError$1,
  QueryCallRejectedError: QueryCallRejectedError$1,
  UpdateCallRejectedError: UpdateCallRejectedError$1,
  get CanisterInstallMode() {
    return CanisterInstallMode$1;
  },
  Actor: Actor$1,
  get ReplicaRejectCode() {
    return ReplicaRejectCode$1;
  },
  Expiry: Expiry$1,
  makeNonceTransform: makeNonceTransform$1,
  makeExpiryTransform,
  get RequestStatusResponseStatus() {
    return RequestStatusResponseStatus$1;
  },
  HttpAgent: HttpAgent$1,
  get ProxyMessageKind() {
    return ProxyMessageKind$1;
  },
  ProxyStubAgent,
  ProxyAgent,
  getDefaultAgent: getDefaultAgent$1,
  SignIdentity,
  AnonymousIdentity: AnonymousIdentity$1,
  createIdentityDescriptor,
  isIdentityDescriptor,
  UnverifiedCertificateError,
  hashTreeToString,
  Certificate: Certificate$1,
  reconstruct: reconstruct$1,
  lookupPathEx,
  lookup_path: lookup_path$1,
  get SubmitRequestType() {
    return SubmitRequestType$1;
  },
  createAssetCanisterActor,
  getManagementCanister: getManagementCanister$1,
  toHex: toHex$1,
  hash: hash$1,
  requestIdOf: requestIdOf$1,
  get verify() {
    return verify$1;
  },
  blsVerify: blsVerify$1
}, Symbol.toStringTag, { value: "Module" })), require$$5 = /* @__PURE__ */ getAugmentedNamespace(esm), require$$4 = /* @__PURE__ */ getAugmentedNamespace(esm$1);
var browserPonyfill = { exports: {} };
(function(Q, ee) {
  var ne = typeof self < "u" ? self : commonjsGlobal, ie = function() {
    function ce() {
      this.fetch = !1, this.DOMException = ne.DOMException;
    }
    return ce.prototype = ne, new ce();
  }();
  (function(ce) {
    (function(le) {
      var de = {
        searchParams: "URLSearchParams" in ce,
        iterable: "Symbol" in ce && "iterator" in Symbol,
        blob: "FileReader" in ce && "Blob" in ce && function() {
          try {
            return new Blob(), !0;
          } catch {
            return !1;
          }
        }(),
        formData: "FormData" in ce,
        arrayBuffer: "ArrayBuffer" in ce
      };
      function ye(pt) {
        return pt && DataView.prototype.isPrototypeOf(pt);
      }
      if (de.arrayBuffer)
        var fe = [
          "[object Int8Array]",
          "[object Uint8Array]",
          "[object Uint8ClampedArray]",
          "[object Int16Array]",
          "[object Uint16Array]",
          "[object Int32Array]",
          "[object Uint32Array]",
          "[object Float32Array]",
          "[object Float64Array]"
        ], Be = ArrayBuffer.isView || function(pt) {
          return pt && fe.indexOf(Object.prototype.toString.call(pt)) > -1;
        };
      function Ee(pt) {
        if (typeof pt != "string" && (pt = String(pt)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(pt))
          throw new TypeError("Invalid character in header field name");
        return pt.toLowerCase();
      }
      function me(pt) {
        return typeof pt != "string" && (pt = String(pt)), pt;
      }
      function ge(pt) {
        var xt = {
          next: function() {
            var Yt = pt.shift();
            return { done: Yt === void 0, value: Yt };
          }
        };
        return de.iterable && (xt[Symbol.iterator] = function() {
          return xt;
        }), xt;
      }
      function we(pt) {
        this.map = {}, pt instanceof we ? pt.forEach(function(xt, Yt) {
          this.append(Yt, xt);
        }, this) : Array.isArray(pt) ? pt.forEach(function(xt) {
          this.append(xt[0], xt[1]);
        }, this) : pt && Object.getOwnPropertyNames(pt).forEach(function(xt) {
          this.append(xt, pt[xt]);
        }, this);
      }
      we.prototype.append = function(pt, xt) {
        pt = Ee(pt), xt = me(xt);
        var Yt = this.map[pt];
        this.map[pt] = Yt ? Yt + ", " + xt : xt;
      }, we.prototype.delete = function(pt) {
        delete this.map[Ee(pt)];
      }, we.prototype.get = function(pt) {
        return pt = Ee(pt), this.has(pt) ? this.map[pt] : null;
      }, we.prototype.has = function(pt) {
        return this.map.hasOwnProperty(Ee(pt));
      }, we.prototype.set = function(pt, xt) {
        this.map[Ee(pt)] = me(xt);
      }, we.prototype.forEach = function(pt, xt) {
        for (var Yt in this.map)
          this.map.hasOwnProperty(Yt) && pt.call(xt, this.map[Yt], Yt, this);
      }, we.prototype.keys = function() {
        var pt = [];
        return this.forEach(function(xt, Yt) {
          pt.push(Yt);
        }), ge(pt);
      }, we.prototype.values = function() {
        var pt = [];
        return this.forEach(function(xt) {
          pt.push(xt);
        }), ge(pt);
      }, we.prototype.entries = function() {
        var pt = [];
        return this.forEach(function(xt, Yt) {
          pt.push([Yt, xt]);
        }), ge(pt);
      }, de.iterable && (we.prototype[Symbol.iterator] = we.prototype.entries);
      function be(pt) {
        if (pt.bodyUsed)
          return Promise.reject(new TypeError("Already read"));
        pt.bodyUsed = !0;
      }
      function Oe(pt) {
        return new Promise(function(xt, Yt) {
          pt.onload = function() {
            xt(pt.result);
          }, pt.onerror = function() {
            Yt(pt.error);
          };
        });
      }
      function He(pt) {
        var xt = new FileReader(), Yt = Oe(xt);
        return xt.readAsArrayBuffer(pt), Yt;
      }
      function Se(pt) {
        var xt = new FileReader(), Yt = Oe(xt);
        return xt.readAsText(pt), Yt;
      }
      function Ge(pt) {
        for (var xt = new Uint8Array(pt), Yt = new Array(xt.length), Jt = 0; Jt < xt.length; Jt++)
          Yt[Jt] = String.fromCharCode(xt[Jt]);
        return Yt.join("");
      }
      function Fe(pt) {
        if (pt.slice)
          return pt.slice(0);
        var xt = new Uint8Array(pt.byteLength);
        return xt.set(new Uint8Array(pt)), xt.buffer;
      }
      function Pe() {
        return this.bodyUsed = !1, this._initBody = function(pt) {
          this._bodyInit = pt, pt ? typeof pt == "string" ? this._bodyText = pt : de.blob && Blob.prototype.isPrototypeOf(pt) ? this._bodyBlob = pt : de.formData && FormData.prototype.isPrototypeOf(pt) ? this._bodyFormData = pt : de.searchParams && URLSearchParams.prototype.isPrototypeOf(pt) ? this._bodyText = pt.toString() : de.arrayBuffer && de.blob && ye(pt) ? (this._bodyArrayBuffer = Fe(pt.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : de.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(pt) || Be(pt)) ? this._bodyArrayBuffer = Fe(pt) : this._bodyText = pt = Object.prototype.toString.call(pt) : this._bodyText = "", this.headers.get("content-type") || (typeof pt == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : de.searchParams && URLSearchParams.prototype.isPrototypeOf(pt) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
        }, de.blob && (this.blob = function() {
          var pt = be(this);
          if (pt)
            return pt;
          if (this._bodyBlob)
            return Promise.resolve(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as blob");
          return Promise.resolve(new Blob([this._bodyText]));
        }, this.arrayBuffer = function() {
          return this._bodyArrayBuffer ? be(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(He);
        }), this.text = function() {
          var pt = be(this);
          if (pt)
            return pt;
          if (this._bodyBlob)
            return Se(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(Ge(this._bodyArrayBuffer));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as text");
          return Promise.resolve(this._bodyText);
        }, de.formData && (this.formData = function() {
          return this.text().then(Tt);
        }), this.json = function() {
          return this.text().then(JSON.parse);
        }, this;
      }
      var Je = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
      function tt(pt) {
        var xt = pt.toUpperCase();
        return Je.indexOf(xt) > -1 ? xt : pt;
      }
      function ft(pt, xt) {
        xt = xt || {};
        var Yt = xt.body;
        if (pt instanceof ft) {
          if (pt.bodyUsed)
            throw new TypeError("Already read");
          this.url = pt.url, this.credentials = pt.credentials, xt.headers || (this.headers = new we(pt.headers)), this.method = pt.method, this.mode = pt.mode, this.signal = pt.signal, !Yt && pt._bodyInit != null && (Yt = pt._bodyInit, pt.bodyUsed = !0);
        } else
          this.url = String(pt);
        if (this.credentials = xt.credentials || this.credentials || "same-origin", (xt.headers || !this.headers) && (this.headers = new we(xt.headers)), this.method = tt(xt.method || this.method || "GET"), this.mode = xt.mode || this.mode || null, this.signal = xt.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && Yt)
          throw new TypeError("Body not allowed for GET or HEAD requests");
        this._initBody(Yt);
      }
      ft.prototype.clone = function() {
        return new ft(this, { body: this._bodyInit });
      };
      function Tt(pt) {
        var xt = new FormData();
        return pt.trim().split("&").forEach(function(Yt) {
          if (Yt) {
            var Jt = Yt.split("="), Ht = Jt.shift().replace(/\+/g, " "), Lt = Jt.join("=").replace(/\+/g, " ");
            xt.append(decodeURIComponent(Ht), decodeURIComponent(Lt));
          }
        }), xt;
      }
      function Xe(pt) {
        var xt = new we(), Yt = pt.replace(/\r?\n[\t ]+/g, " ");
        return Yt.split(/\r?\n/).forEach(function(Jt) {
          var Ht = Jt.split(":"), Lt = Ht.shift().trim();
          if (Lt) {
            var Pt = Ht.join(":").trim();
            xt.append(Lt, Pt);
          }
        }), xt;
      }
      Pe.call(ft.prototype);
      function ht(pt, xt) {
        xt || (xt = {}), this.type = "default", this.status = xt.status === void 0 ? 200 : xt.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in xt ? xt.statusText : "OK", this.headers = new we(xt.headers), this.url = xt.url || "", this._initBody(pt);
      }
      Pe.call(ht.prototype), ht.prototype.clone = function() {
        return new ht(this._bodyInit, {
          status: this.status,
          statusText: this.statusText,
          headers: new we(this.headers),
          url: this.url
        });
      }, ht.error = function() {
        var pt = new ht(null, { status: 0, statusText: "" });
        return pt.type = "error", pt;
      };
      var Qt = [301, 302, 303, 307, 308];
      ht.redirect = function(pt, xt) {
        if (Qt.indexOf(xt) === -1)
          throw new RangeError("Invalid status code");
        return new ht(null, { status: xt, headers: { location: pt } });
      }, le.DOMException = ce.DOMException;
      try {
        new le.DOMException();
      } catch {
        le.DOMException = function(xt, Yt) {
          this.message = xt, this.name = Yt;
          var Jt = Error(xt);
          this.stack = Jt.stack;
        }, le.DOMException.prototype = Object.create(Error.prototype), le.DOMException.prototype.constructor = le.DOMException;
      }
      function Gt(pt, xt) {
        return new Promise(function(Yt, Jt) {
          var Ht = new ft(pt, xt);
          if (Ht.signal && Ht.signal.aborted)
            return Jt(new le.DOMException("Aborted", "AbortError"));
          var Lt = new XMLHttpRequest();
          function Pt() {
            Lt.abort();
          }
          Lt.onload = function() {
            var yt = {
              status: Lt.status,
              statusText: Lt.statusText,
              headers: Xe(Lt.getAllResponseHeaders() || "")
            };
            yt.url = "responseURL" in Lt ? Lt.responseURL : yt.headers.get("X-Request-URL");
            var kt = "response" in Lt ? Lt.response : Lt.responseText;
            Yt(new ht(kt, yt));
          }, Lt.onerror = function() {
            Jt(new TypeError("Network request failed"));
          }, Lt.ontimeout = function() {
            Jt(new TypeError("Network request failed"));
          }, Lt.onabort = function() {
            Jt(new le.DOMException("Aborted", "AbortError"));
          }, Lt.open(Ht.method, Ht.url, !0), Ht.credentials === "include" ? Lt.withCredentials = !0 : Ht.credentials === "omit" && (Lt.withCredentials = !1), "responseType" in Lt && de.blob && (Lt.responseType = "blob"), Ht.headers.forEach(function(yt, kt) {
            Lt.setRequestHeader(kt, yt);
          }), Ht.signal && (Ht.signal.addEventListener("abort", Pt), Lt.onreadystatechange = function() {
            Lt.readyState === 4 && Ht.signal.removeEventListener("abort", Pt);
          }), Lt.send(typeof Ht._bodyInit > "u" ? null : Ht._bodyInit);
        });
      }
      return Gt.polyfill = !0, ce.fetch || (ce.fetch = Gt, ce.Headers = we, ce.Request = ft, ce.Response = ht), le.Headers = we, le.Request = ft, le.Response = ht, le.fetch = Gt, Object.defineProperty(le, "__esModule", { value: !0 }), le;
    })({});
  })(ie), ie.fetch.ponyfill = !0, delete ie.fetch.polyfill;
  var ae = ie;
  ee = ae.fetch, ee.default = ae.fetch, ee.fetch = ae.fetch, ee.Headers = ae.Headers, ee.Request = ae.Request, ee.Response = ae.Response, Q.exports = ee;
})(browserPonyfill, browserPonyfill.exports);
var ext = {}, ext_did = {};
Object.defineProperty(ext_did, "__esModule", { value: !0 });
ext_did.init = void 0;
ext_did.default = ({ IDL: Q }) => {
  const ee = Q.Nat32, ne = Q.Text, ie = Q.Text, ae = Q.Nat, ce = Q.Int, le = Q.Vec(Q.Nat8), de = Q.Vec(Q.Nat8), ye = Q.Record({
    locked: Q.Opt(ce),
    seller: Q.Principal,
    price: Q.Nat64
  }), fe = Q.Variant({
    principal: Q.Principal,
    address: ne
  }), Be = Q.Variant({
    InvalidToken: ie,
    Other: Q.Text
  }), Ee = Q.Record({
    token: ie,
    user: fe
  }), me = Q.Variant({ ok: ae, err: Be }), ge = Q.Variant({
    ok: Q.Tuple(ne, Q.Opt(ye)),
    err: Be
  }), we = Q.Variant({
    ok: Q.Vec(ee),
    err: Be
  }), be = Q.Variant({
    ok: Q.Vec(Q.Tuple(ee, Q.Opt(ye), Q.Opt(Q.Vec(Q.Nat8)))),
    err: Be
  }), Oe = Q.Record({
    to: fe,
    token: ie,
    notify: Q.Bool,
    from: fe,
    memo: de,
    subaccount: Q.Opt(le),
    amount: ae,
    fee: Q.Nat
  }), He = Q.Variant({
    ok: ae,
    err: Q.Variant({
      CannotNotify: ne,
      InsufficientBalance: Q.Null,
      InvalidToken: ie,
      Rejected: Q.Null,
      Unauthorized: ne,
      Other: Q.Text
    })
  }), Se = Q.Variant({
    fungible: Q.Record({
      decimals: Q.Nat8,
      metadata: Q.Opt(Q.Vec(Q.Nat8)),
      name: Q.Text,
      symbol: Q.Text
    }),
    nonfungible: Q.Record({ metadata: Q.Opt(Q.Vec(Q.Nat8)) })
  }), Ge = Q.Variant({ ok: Se, err: Be }), Fe = Q.Variant({ ok: ae, err: Be });
  return Q.Service({
    extensions: Q.Func([], [Q.Vec(Q.Text)], ["query"]),
    balance: Q.Func([Ee], [me], ["query"]),
    details: Q.Func([ie], [ge], ["query"]),
    tokens: Q.Func([ne], [we], ["query"]),
    tokens_ext: Q.Func([ne], [be], ["query"]),
    transfer: Q.Func([Oe], [He], []),
    metadata: Q.Func([ie], [Ge], ["query"]),
    supply: Q.Func([ie], [Fe], ["query"])
  });
};
const init$d = () => [];
ext_did.init = init$d;
var _default = {};
Object.defineProperty(_default, "__esModule", { value: !0 });
class NFT {
  constructor(ee, ne) {
    this.agent = ne, this.canisterId = ee;
  }
}
_default.default = NFT;
var account = {}, cryptoJs = { exports: {} };
function commonjsRequire(Q) {
  throw new Error('Could not dynamically require "' + Q + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var core = { exports: {} };
const __viteBrowserExternal = {}, __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: __viteBrowserExternal
}, Symbol.toStringTag, { value: "Module" })), require$$0 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);
var hasRequiredCore;
function requireCore() {
  return hasRequiredCore || (hasRequiredCore = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie();
    })(commonjsGlobal, function() {
      var ne = ne || function(ie, ae) {
        var ce;
        if (typeof window < "u" && window.crypto && (ce = window.crypto), typeof self < "u" && self.crypto && (ce = self.crypto), typeof globalThis < "u" && globalThis.crypto && (ce = globalThis.crypto), !ce && typeof window < "u" && window.msCrypto && (ce = window.msCrypto), !ce && typeof commonjsGlobal < "u" && commonjsGlobal.crypto && (ce = commonjsGlobal.crypto), !ce && typeof commonjsRequire == "function")
          try {
            ce = require$$0;
          } catch {
          }
        var le = function() {
          if (ce) {
            if (typeof ce.getRandomValues == "function")
              try {
                return ce.getRandomValues(new Uint32Array(1))[0];
              } catch {
              }
            if (typeof ce.randomBytes == "function")
              try {
                return ce.randomBytes(4).readInt32LE();
              } catch {
              }
          }
          throw new Error("Native crypto module could not be used to get secure random number.");
        }, de = Object.create || function() {
          function Se() {
          }
          return function(Ge) {
            var Fe;
            return Se.prototype = Ge, Fe = new Se(), Se.prototype = null, Fe;
          };
        }(), ye = {}, fe = ye.lib = {}, Be = fe.Base = function() {
          return {
            extend: function(Se) {
              var Ge = de(this);
              return Se && Ge.mixIn(Se), (!Ge.hasOwnProperty("init") || this.init === Ge.init) && (Ge.init = function() {
                Ge.$super.init.apply(this, arguments);
              }), Ge.init.prototype = Ge, Ge.$super = this, Ge;
            },
            create: function() {
              var Se = this.extend();
              return Se.init.apply(Se, arguments), Se;
            },
            init: function() {
            },
            mixIn: function(Se) {
              for (var Ge in Se)
                Se.hasOwnProperty(Ge) && (this[Ge] = Se[Ge]);
              Se.hasOwnProperty("toString") && (this.toString = Se.toString);
            },
            clone: function() {
              return this.init.prototype.extend(this);
            }
          };
        }(), Ee = fe.WordArray = Be.extend({
          init: function(Se, Ge) {
            Se = this.words = Se || [], Ge != ae ? this.sigBytes = Ge : this.sigBytes = Se.length * 4;
          },
          toString: function(Se) {
            return (Se || ge).stringify(this);
          },
          concat: function(Se) {
            var Ge = this.words, Fe = Se.words, Pe = this.sigBytes, Je = Se.sigBytes;
            if (this.clamp(), Pe % 4)
              for (var tt = 0; tt < Je; tt++) {
                var ft = Fe[tt >>> 2] >>> 24 - tt % 4 * 8 & 255;
                Ge[Pe + tt >>> 2] |= ft << 24 - (Pe + tt) % 4 * 8;
              }
            else
              for (var Tt = 0; Tt < Je; Tt += 4)
                Ge[Pe + Tt >>> 2] = Fe[Tt >>> 2];
            return this.sigBytes += Je, this;
          },
          clamp: function() {
            var Se = this.words, Ge = this.sigBytes;
            Se[Ge >>> 2] &= 4294967295 << 32 - Ge % 4 * 8, Se.length = ie.ceil(Ge / 4);
          },
          clone: function() {
            var Se = Be.clone.call(this);
            return Se.words = this.words.slice(0), Se;
          },
          random: function(Se) {
            for (var Ge = [], Fe = 0; Fe < Se; Fe += 4)
              Ge.push(le());
            return new Ee.init(Ge, Se);
          }
        }), me = ye.enc = {}, ge = me.Hex = {
          stringify: function(Se) {
            for (var Ge = Se.words, Fe = Se.sigBytes, Pe = [], Je = 0; Je < Fe; Je++) {
              var tt = Ge[Je >>> 2] >>> 24 - Je % 4 * 8 & 255;
              Pe.push((tt >>> 4).toString(16)), Pe.push((tt & 15).toString(16));
            }
            return Pe.join("");
          },
          parse: function(Se) {
            for (var Ge = Se.length, Fe = [], Pe = 0; Pe < Ge; Pe += 2)
              Fe[Pe >>> 3] |= parseInt(Se.substr(Pe, 2), 16) << 24 - Pe % 8 * 4;
            return new Ee.init(Fe, Ge / 2);
          }
        }, we = me.Latin1 = {
          stringify: function(Se) {
            for (var Ge = Se.words, Fe = Se.sigBytes, Pe = [], Je = 0; Je < Fe; Je++) {
              var tt = Ge[Je >>> 2] >>> 24 - Je % 4 * 8 & 255;
              Pe.push(String.fromCharCode(tt));
            }
            return Pe.join("");
          },
          parse: function(Se) {
            for (var Ge = Se.length, Fe = [], Pe = 0; Pe < Ge; Pe++)
              Fe[Pe >>> 2] |= (Se.charCodeAt(Pe) & 255) << 24 - Pe % 4 * 8;
            return new Ee.init(Fe, Ge);
          }
        }, be = me.Utf8 = {
          stringify: function(Se) {
            try {
              return decodeURIComponent(escape(we.stringify(Se)));
            } catch {
              throw new Error("Malformed UTF-8 data");
            }
          },
          parse: function(Se) {
            return we.parse(unescape(encodeURIComponent(Se)));
          }
        }, Oe = fe.BufferedBlockAlgorithm = Be.extend({
          reset: function() {
            this._data = new Ee.init(), this._nDataBytes = 0;
          },
          _append: function(Se) {
            typeof Se == "string" && (Se = be.parse(Se)), this._data.concat(Se), this._nDataBytes += Se.sigBytes;
          },
          _process: function(Se) {
            var Ge, Fe = this._data, Pe = Fe.words, Je = Fe.sigBytes, tt = this.blockSize, ft = tt * 4, Tt = Je / ft;
            Se ? Tt = ie.ceil(Tt) : Tt = ie.max((Tt | 0) - this._minBufferSize, 0);
            var Xe = Tt * tt, ht = ie.min(Xe * 4, Je);
            if (Xe) {
              for (var Qt = 0; Qt < Xe; Qt += tt)
                this._doProcessBlock(Pe, Qt);
              Ge = Pe.splice(0, Xe), Fe.sigBytes -= ht;
            }
            return new Ee.init(Ge, ht);
          },
          clone: function() {
            var Se = Be.clone.call(this);
            return Se._data = this._data.clone(), Se;
          },
          _minBufferSize: 0
        });
        fe.Hasher = Oe.extend({
          cfg: Be.extend(),
          init: function(Se) {
            this.cfg = this.cfg.extend(Se), this.reset();
          },
          reset: function() {
            Oe.reset.call(this), this._doReset();
          },
          update: function(Se) {
            return this._append(Se), this._process(), this;
          },
          finalize: function(Se) {
            Se && this._append(Se);
            var Ge = this._doFinalize();
            return Ge;
          },
          blockSize: 16,
          _createHelper: function(Se) {
            return function(Ge, Fe) {
              return new Se.init(Fe).finalize(Ge);
            };
          },
          _createHmacHelper: function(Se) {
            return function(Ge, Fe) {
              return new He.HMAC.init(Se, Fe).finalize(Ge);
            };
          }
        });
        var He = ye.algo = {};
        return ye;
      }(Math);
      return ne;
    });
  }(core)), core.exports;
}
var x64Core = { exports: {} }, hasRequiredX64Core;
function requireX64Core() {
  return hasRequiredX64Core || (hasRequiredX64Core = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.Base, de = ce.WordArray, ye = ae.x64 = {};
        ye.Word = le.extend({
          init: function(fe, Be) {
            this.high = fe, this.low = Be;
          }
        }), ye.WordArray = le.extend({
          init: function(fe, Be) {
            fe = this.words = fe || [], Be != ie ? this.sigBytes = Be : this.sigBytes = fe.length * 8;
          },
          toX32: function() {
            for (var fe = this.words, Be = fe.length, Ee = [], me = 0; me < Be; me++) {
              var ge = fe[me];
              Ee.push(ge.high), Ee.push(ge.low);
            }
            return de.create(Ee, this.sigBytes);
          },
          clone: function() {
            for (var fe = le.clone.call(this), Be = fe.words = this.words.slice(0), Ee = Be.length, me = 0; me < Ee; me++)
              Be[me] = Be[me].clone();
            return fe;
          }
        });
      }(), ne;
    });
  }(x64Core)), x64Core.exports;
}
var libTypedarrays = { exports: {} }, hasRequiredLibTypedarrays;
function requireLibTypedarrays() {
  return hasRequiredLibTypedarrays || (hasRequiredLibTypedarrays = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        if (typeof ArrayBuffer == "function") {
          var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ce.init, de = ce.init = function(ye) {
            if (ye instanceof ArrayBuffer && (ye = new Uint8Array(ye)), (ye instanceof Int8Array || typeof Uint8ClampedArray < "u" && ye instanceof Uint8ClampedArray || ye instanceof Int16Array || ye instanceof Uint16Array || ye instanceof Int32Array || ye instanceof Uint32Array || ye instanceof Float32Array || ye instanceof Float64Array) && (ye = new Uint8Array(ye.buffer, ye.byteOffset, ye.byteLength)), ye instanceof Uint8Array) {
              for (var fe = ye.byteLength, Be = [], Ee = 0; Ee < fe; Ee++)
                Be[Ee >>> 2] |= ye[Ee] << 24 - Ee % 4 * 8;
              le.call(this, Be, fe);
            } else
              le.apply(this, arguments);
          };
          de.prototype = ce;
        }
      }(), ne.lib.WordArray;
    });
  }(libTypedarrays)), libTypedarrays.exports;
}
var encUtf16 = { exports: {} }, hasRequiredEncUtf16;
function requireEncUtf16() {
  return hasRequiredEncUtf16 || (hasRequiredEncUtf16 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ie.enc;
        le.Utf16 = le.Utf16BE = {
          stringify: function(ye) {
            for (var fe = ye.words, Be = ye.sigBytes, Ee = [], me = 0; me < Be; me += 2) {
              var ge = fe[me >>> 2] >>> 16 - me % 4 * 8 & 65535;
              Ee.push(String.fromCharCode(ge));
            }
            return Ee.join("");
          },
          parse: function(ye) {
            for (var fe = ye.length, Be = [], Ee = 0; Ee < fe; Ee++)
              Be[Ee >>> 1] |= ye.charCodeAt(Ee) << 16 - Ee % 2 * 16;
            return ce.create(Be, fe * 2);
          }
        }, le.Utf16LE = {
          stringify: function(ye) {
            for (var fe = ye.words, Be = ye.sigBytes, Ee = [], me = 0; me < Be; me += 2) {
              var ge = de(fe[me >>> 2] >>> 16 - me % 4 * 8 & 65535);
              Ee.push(String.fromCharCode(ge));
            }
            return Ee.join("");
          },
          parse: function(ye) {
            for (var fe = ye.length, Be = [], Ee = 0; Ee < fe; Ee++)
              Be[Ee >>> 1] |= de(ye.charCodeAt(Ee) << 16 - Ee % 2 * 16);
            return ce.create(Be, fe * 2);
          }
        };
        function de(ye) {
          return ye << 8 & 4278255360 | ye >>> 8 & 16711935;
        }
      }(), ne.enc.Utf16;
    });
  }(encUtf16)), encUtf16.exports;
}
var encBase64 = { exports: {} }, hasRequiredEncBase64;
function requireEncBase64() {
  return hasRequiredEncBase64 || (hasRequiredEncBase64 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ie.enc;
        le.Base64 = {
          stringify: function(ye) {
            var fe = ye.words, Be = ye.sigBytes, Ee = this._map;
            ye.clamp();
            for (var me = [], ge = 0; ge < Be; ge += 3)
              for (var we = fe[ge >>> 2] >>> 24 - ge % 4 * 8 & 255, be = fe[ge + 1 >>> 2] >>> 24 - (ge + 1) % 4 * 8 & 255, Oe = fe[ge + 2 >>> 2] >>> 24 - (ge + 2) % 4 * 8 & 255, He = we << 16 | be << 8 | Oe, Se = 0; Se < 4 && ge + Se * 0.75 < Be; Se++)
                me.push(Ee.charAt(He >>> 6 * (3 - Se) & 63));
            var Ge = Ee.charAt(64);
            if (Ge)
              for (; me.length % 4; )
                me.push(Ge);
            return me.join("");
          },
          parse: function(ye) {
            var fe = ye.length, Be = this._map, Ee = this._reverseMap;
            if (!Ee) {
              Ee = this._reverseMap = [];
              for (var me = 0; me < Be.length; me++)
                Ee[Be.charCodeAt(me)] = me;
            }
            var ge = Be.charAt(64);
            if (ge) {
              var we = ye.indexOf(ge);
              we !== -1 && (fe = we);
            }
            return de(ye, fe, Ee);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
        };
        function de(ye, fe, Be) {
          for (var Ee = [], me = 0, ge = 0; ge < fe; ge++)
            if (ge % 4) {
              var we = Be[ye.charCodeAt(ge - 1)] << ge % 4 * 2, be = Be[ye.charCodeAt(ge)] >>> 6 - ge % 4 * 2, Oe = we | be;
              Ee[me >>> 2] |= Oe << 24 - me % 4 * 8, me++;
            }
          return ce.create(Ee, me);
        }
      }(), ne.enc.Base64;
    });
  }(encBase64)), encBase64.exports;
}
var encBase64url = { exports: {} }, hasRequiredEncBase64url;
function requireEncBase64url() {
  return hasRequiredEncBase64url || (hasRequiredEncBase64url = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ie.enc;
        le.Base64url = {
          stringify: function(ye, fe = !0) {
            var Be = ye.words, Ee = ye.sigBytes, me = fe ? this._safe_map : this._map;
            ye.clamp();
            for (var ge = [], we = 0; we < Ee; we += 3)
              for (var be = Be[we >>> 2] >>> 24 - we % 4 * 8 & 255, Oe = Be[we + 1 >>> 2] >>> 24 - (we + 1) % 4 * 8 & 255, He = Be[we + 2 >>> 2] >>> 24 - (we + 2) % 4 * 8 & 255, Se = be << 16 | Oe << 8 | He, Ge = 0; Ge < 4 && we + Ge * 0.75 < Ee; Ge++)
                ge.push(me.charAt(Se >>> 6 * (3 - Ge) & 63));
            var Fe = me.charAt(64);
            if (Fe)
              for (; ge.length % 4; )
                ge.push(Fe);
            return ge.join("");
          },
          parse: function(ye, fe = !0) {
            var Be = ye.length, Ee = fe ? this._safe_map : this._map, me = this._reverseMap;
            if (!me) {
              me = this._reverseMap = [];
              for (var ge = 0; ge < Ee.length; ge++)
                me[Ee.charCodeAt(ge)] = ge;
            }
            var we = Ee.charAt(64);
            if (we) {
              var be = ye.indexOf(we);
              be !== -1 && (Be = be);
            }
            return de(ye, Be, me);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
          _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
        };
        function de(ye, fe, Be) {
          for (var Ee = [], me = 0, ge = 0; ge < fe; ge++)
            if (ge % 4) {
              var we = Be[ye.charCodeAt(ge - 1)] << ge % 4 * 2, be = Be[ye.charCodeAt(ge)] >>> 6 - ge % 4 * 2, Oe = we | be;
              Ee[me >>> 2] |= Oe << 24 - me % 4 * 8, me++;
            }
          return ce.create(Ee, me);
        }
      }(), ne.enc.Base64url;
    });
  }(encBase64url)), encBase64url.exports;
}
var md5 = { exports: {} }, hasRequiredMd5;
function requireMd5() {
  return hasRequiredMd5 || (hasRequiredMd5 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.WordArray, de = ce.Hasher, ye = ae.algo, fe = [];
        (function() {
          for (var be = 0; be < 64; be++)
            fe[be] = ie.abs(ie.sin(be + 1)) * 4294967296 | 0;
        })();
        var Be = ye.MD5 = de.extend({
          _doReset: function() {
            this._hash = new le.init([
              1732584193,
              4023233417,
              2562383102,
              271733878
            ]);
          },
          _doProcessBlock: function(be, Oe) {
            for (var He = 0; He < 16; He++) {
              var Se = Oe + He, Ge = be[Se];
              be[Se] = (Ge << 8 | Ge >>> 24) & 16711935 | (Ge << 24 | Ge >>> 8) & 4278255360;
            }
            var Fe = this._hash.words, Pe = be[Oe + 0], Je = be[Oe + 1], tt = be[Oe + 2], ft = be[Oe + 3], Tt = be[Oe + 4], Xe = be[Oe + 5], ht = be[Oe + 6], Qt = be[Oe + 7], Gt = be[Oe + 8], pt = be[Oe + 9], xt = be[Oe + 10], Yt = be[Oe + 11], Jt = be[Oe + 12], Ht = be[Oe + 13], Lt = be[Oe + 14], Pt = be[Oe + 15], yt = Fe[0], kt = Fe[1], $t = Fe[2], Le = Fe[3];
            yt = Ee(yt, kt, $t, Le, Pe, 7, fe[0]), Le = Ee(Le, yt, kt, $t, Je, 12, fe[1]), $t = Ee($t, Le, yt, kt, tt, 17, fe[2]), kt = Ee(kt, $t, Le, yt, ft, 22, fe[3]), yt = Ee(yt, kt, $t, Le, Tt, 7, fe[4]), Le = Ee(Le, yt, kt, $t, Xe, 12, fe[5]), $t = Ee($t, Le, yt, kt, ht, 17, fe[6]), kt = Ee(kt, $t, Le, yt, Qt, 22, fe[7]), yt = Ee(yt, kt, $t, Le, Gt, 7, fe[8]), Le = Ee(Le, yt, kt, $t, pt, 12, fe[9]), $t = Ee($t, Le, yt, kt, xt, 17, fe[10]), kt = Ee(kt, $t, Le, yt, Yt, 22, fe[11]), yt = Ee(yt, kt, $t, Le, Jt, 7, fe[12]), Le = Ee(Le, yt, kt, $t, Ht, 12, fe[13]), $t = Ee($t, Le, yt, kt, Lt, 17, fe[14]), kt = Ee(kt, $t, Le, yt, Pt, 22, fe[15]), yt = me(yt, kt, $t, Le, Je, 5, fe[16]), Le = me(Le, yt, kt, $t, ht, 9, fe[17]), $t = me($t, Le, yt, kt, Yt, 14, fe[18]), kt = me(kt, $t, Le, yt, Pe, 20, fe[19]), yt = me(yt, kt, $t, Le, Xe, 5, fe[20]), Le = me(Le, yt, kt, $t, xt, 9, fe[21]), $t = me($t, Le, yt, kt, Pt, 14, fe[22]), kt = me(kt, $t, Le, yt, Tt, 20, fe[23]), yt = me(yt, kt, $t, Le, pt, 5, fe[24]), Le = me(Le, yt, kt, $t, Lt, 9, fe[25]), $t = me($t, Le, yt, kt, ft, 14, fe[26]), kt = me(kt, $t, Le, yt, Gt, 20, fe[27]), yt = me(yt, kt, $t, Le, Ht, 5, fe[28]), Le = me(Le, yt, kt, $t, tt, 9, fe[29]), $t = me($t, Le, yt, kt, Qt, 14, fe[30]), kt = me(kt, $t, Le, yt, Jt, 20, fe[31]), yt = ge(yt, kt, $t, Le, Xe, 4, fe[32]), Le = ge(Le, yt, kt, $t, Gt, 11, fe[33]), $t = ge($t, Le, yt, kt, Yt, 16, fe[34]), kt = ge(kt, $t, Le, yt, Lt, 23, fe[35]), yt = ge(yt, kt, $t, Le, Je, 4, fe[36]), Le = ge(Le, yt, kt, $t, Tt, 11, fe[37]), $t = ge($t, Le, yt, kt, Qt, 16, fe[38]), kt = ge(kt, $t, Le, yt, xt, 23, fe[39]), yt = ge(yt, kt, $t, Le, Ht, 4, fe[40]), Le = ge(Le, yt, kt, $t, Pe, 11, fe[41]), $t = ge($t, Le, yt, kt, ft, 16, fe[42]), kt = ge(kt, $t, Le, yt, ht, 23, fe[43]), yt = ge(yt, kt, $t, Le, pt, 4, fe[44]), Le = ge(Le, yt, kt, $t, Jt, 11, fe[45]), $t = ge($t, Le, yt, kt, Pt, 16, fe[46]), kt = ge(kt, $t, Le, yt, tt, 23, fe[47]), yt = we(yt, kt, $t, Le, Pe, 6, fe[48]), Le = we(Le, yt, kt, $t, Qt, 10, fe[49]), $t = we($t, Le, yt, kt, Lt, 15, fe[50]), kt = we(kt, $t, Le, yt, Xe, 21, fe[51]), yt = we(yt, kt, $t, Le, Jt, 6, fe[52]), Le = we(Le, yt, kt, $t, ft, 10, fe[53]), $t = we($t, Le, yt, kt, xt, 15, fe[54]), kt = we(kt, $t, Le, yt, Je, 21, fe[55]), yt = we(yt, kt, $t, Le, Gt, 6, fe[56]), Le = we(Le, yt, kt, $t, Pt, 10, fe[57]), $t = we($t, Le, yt, kt, ht, 15, fe[58]), kt = we(kt, $t, Le, yt, Ht, 21, fe[59]), yt = we(yt, kt, $t, Le, Tt, 6, fe[60]), Le = we(Le, yt, kt, $t, Yt, 10, fe[61]), $t = we($t, Le, yt, kt, tt, 15, fe[62]), kt = we(kt, $t, Le, yt, pt, 21, fe[63]), Fe[0] = Fe[0] + yt | 0, Fe[1] = Fe[1] + kt | 0, Fe[2] = Fe[2] + $t | 0, Fe[3] = Fe[3] + Le | 0;
          },
          _doFinalize: function() {
            var be = this._data, Oe = be.words, He = this._nDataBytes * 8, Se = be.sigBytes * 8;
            Oe[Se >>> 5] |= 128 << 24 - Se % 32;
            var Ge = ie.floor(He / 4294967296), Fe = He;
            Oe[(Se + 64 >>> 9 << 4) + 15] = (Ge << 8 | Ge >>> 24) & 16711935 | (Ge << 24 | Ge >>> 8) & 4278255360, Oe[(Se + 64 >>> 9 << 4) + 14] = (Fe << 8 | Fe >>> 24) & 16711935 | (Fe << 24 | Fe >>> 8) & 4278255360, be.sigBytes = (Oe.length + 1) * 4, this._process();
            for (var Pe = this._hash, Je = Pe.words, tt = 0; tt < 4; tt++) {
              var ft = Je[tt];
              Je[tt] = (ft << 8 | ft >>> 24) & 16711935 | (ft << 24 | ft >>> 8) & 4278255360;
            }
            return Pe;
          },
          clone: function() {
            var be = de.clone.call(this);
            return be._hash = this._hash.clone(), be;
          }
        });
        function Ee(be, Oe, He, Se, Ge, Fe, Pe) {
          var Je = be + (Oe & He | ~Oe & Se) + Ge + Pe;
          return (Je << Fe | Je >>> 32 - Fe) + Oe;
        }
        function me(be, Oe, He, Se, Ge, Fe, Pe) {
          var Je = be + (Oe & Se | He & ~Se) + Ge + Pe;
          return (Je << Fe | Je >>> 32 - Fe) + Oe;
        }
        function ge(be, Oe, He, Se, Ge, Fe, Pe) {
          var Je = be + (Oe ^ He ^ Se) + Ge + Pe;
          return (Je << Fe | Je >>> 32 - Fe) + Oe;
        }
        function we(be, Oe, He, Se, Ge, Fe, Pe) {
          var Je = be + (He ^ (Oe | ~Se)) + Ge + Pe;
          return (Je << Fe | Je >>> 32 - Fe) + Oe;
        }
        ae.MD5 = de._createHelper(Be), ae.HmacMD5 = de._createHmacHelper(Be);
      }(Math), ne.MD5;
    });
  }(md5)), md5.exports;
}
var sha1 = { exports: {} }, hasRequiredSha1;
function requireSha1() {
  return hasRequiredSha1 || (hasRequiredSha1 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ae.Hasher, de = ie.algo, ye = [], fe = de.SHA1 = le.extend({
          _doReset: function() {
            this._hash = new ce.init([
              1732584193,
              4023233417,
              2562383102,
              271733878,
              3285377520
            ]);
          },
          _doProcessBlock: function(Be, Ee) {
            for (var me = this._hash.words, ge = me[0], we = me[1], be = me[2], Oe = me[3], He = me[4], Se = 0; Se < 80; Se++) {
              if (Se < 16)
                ye[Se] = Be[Ee + Se] | 0;
              else {
                var Ge = ye[Se - 3] ^ ye[Se - 8] ^ ye[Se - 14] ^ ye[Se - 16];
                ye[Se] = Ge << 1 | Ge >>> 31;
              }
              var Fe = (ge << 5 | ge >>> 27) + He + ye[Se];
              Se < 20 ? Fe += (we & be | ~we & Oe) + 1518500249 : Se < 40 ? Fe += (we ^ be ^ Oe) + 1859775393 : Se < 60 ? Fe += (we & be | we & Oe | be & Oe) - 1894007588 : Fe += (we ^ be ^ Oe) - 899497514, He = Oe, Oe = be, be = we << 30 | we >>> 2, we = ge, ge = Fe;
            }
            me[0] = me[0] + ge | 0, me[1] = me[1] + we | 0, me[2] = me[2] + be | 0, me[3] = me[3] + Oe | 0, me[4] = me[4] + He | 0;
          },
          _doFinalize: function() {
            var Be = this._data, Ee = Be.words, me = this._nDataBytes * 8, ge = Be.sigBytes * 8;
            return Ee[ge >>> 5] |= 128 << 24 - ge % 32, Ee[(ge + 64 >>> 9 << 4) + 14] = Math.floor(me / 4294967296), Ee[(ge + 64 >>> 9 << 4) + 15] = me, Be.sigBytes = Ee.length * 4, this._process(), this._hash;
          },
          clone: function() {
            var Be = le.clone.call(this);
            return Be._hash = this._hash.clone(), Be;
          }
        });
        ie.SHA1 = le._createHelper(fe), ie.HmacSHA1 = le._createHmacHelper(fe);
      }(), ne.SHA1;
    });
  }(sha1)), sha1.exports;
}
var sha256 = { exports: {} }, hasRequiredSha256;
function requireSha256() {
  return hasRequiredSha256 || (hasRequiredSha256 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.WordArray, de = ce.Hasher, ye = ae.algo, fe = [], Be = [];
        (function() {
          function ge(He) {
            for (var Se = ie.sqrt(He), Ge = 2; Ge <= Se; Ge++)
              if (!(He % Ge))
                return !1;
            return !0;
          }
          function we(He) {
            return (He - (He | 0)) * 4294967296 | 0;
          }
          for (var be = 2, Oe = 0; Oe < 64; )
            ge(be) && (Oe < 8 && (fe[Oe] = we(ie.pow(be, 1 / 2))), Be[Oe] = we(ie.pow(be, 1 / 3)), Oe++), be++;
        })();
        var Ee = [], me = ye.SHA256 = de.extend({
          _doReset: function() {
            this._hash = new le.init(fe.slice(0));
          },
          _doProcessBlock: function(ge, we) {
            for (var be = this._hash.words, Oe = be[0], He = be[1], Se = be[2], Ge = be[3], Fe = be[4], Pe = be[5], Je = be[6], tt = be[7], ft = 0; ft < 64; ft++) {
              if (ft < 16)
                Ee[ft] = ge[we + ft] | 0;
              else {
                var Tt = Ee[ft - 15], Xe = (Tt << 25 | Tt >>> 7) ^ (Tt << 14 | Tt >>> 18) ^ Tt >>> 3, ht = Ee[ft - 2], Qt = (ht << 15 | ht >>> 17) ^ (ht << 13 | ht >>> 19) ^ ht >>> 10;
                Ee[ft] = Xe + Ee[ft - 7] + Qt + Ee[ft - 16];
              }
              var Gt = Fe & Pe ^ ~Fe & Je, pt = Oe & He ^ Oe & Se ^ He & Se, xt = (Oe << 30 | Oe >>> 2) ^ (Oe << 19 | Oe >>> 13) ^ (Oe << 10 | Oe >>> 22), Yt = (Fe << 26 | Fe >>> 6) ^ (Fe << 21 | Fe >>> 11) ^ (Fe << 7 | Fe >>> 25), Jt = tt + Yt + Gt + Be[ft] + Ee[ft], Ht = xt + pt;
              tt = Je, Je = Pe, Pe = Fe, Fe = Ge + Jt | 0, Ge = Se, Se = He, He = Oe, Oe = Jt + Ht | 0;
            }
            be[0] = be[0] + Oe | 0, be[1] = be[1] + He | 0, be[2] = be[2] + Se | 0, be[3] = be[3] + Ge | 0, be[4] = be[4] + Fe | 0, be[5] = be[5] + Pe | 0, be[6] = be[6] + Je | 0, be[7] = be[7] + tt | 0;
          },
          _doFinalize: function() {
            var ge = this._data, we = ge.words, be = this._nDataBytes * 8, Oe = ge.sigBytes * 8;
            return we[Oe >>> 5] |= 128 << 24 - Oe % 32, we[(Oe + 64 >>> 9 << 4) + 14] = ie.floor(be / 4294967296), we[(Oe + 64 >>> 9 << 4) + 15] = be, ge.sigBytes = we.length * 4, this._process(), this._hash;
          },
          clone: function() {
            var ge = de.clone.call(this);
            return ge._hash = this._hash.clone(), ge;
          }
        });
        ae.SHA256 = de._createHelper(me), ae.HmacSHA256 = de._createHmacHelper(me);
      }(Math), ne.SHA256;
    });
  }(sha256)), sha256.exports;
}
var sha224 = { exports: {} }, hasRequiredSha224;
function requireSha224() {
  return hasRequiredSha224 || (hasRequiredSha224 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireSha256());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ie.algo, de = le.SHA256, ye = le.SHA224 = de.extend({
          _doReset: function() {
            this._hash = new ce.init([
              3238371032,
              914150663,
              812702999,
              4144912697,
              4290775857,
              1750603025,
              1694076839,
              3204075428
            ]);
          },
          _doFinalize: function() {
            var fe = de._doFinalize.call(this);
            return fe.sigBytes -= 4, fe;
          }
        });
        ie.SHA224 = de._createHelper(ye), ie.HmacSHA224 = de._createHmacHelper(ye);
      }(), ne.SHA224;
    });
  }(sha224)), sha224.exports;
}
var sha512 = { exports: {} }, hasRequiredSha512;
function requireSha512() {
  return hasRequiredSha512 || (hasRequiredSha512 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireX64Core());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.Hasher, le = ie.x64, de = le.Word, ye = le.WordArray, fe = ie.algo;
        function Be() {
          return de.create.apply(de, arguments);
        }
        var Ee = [
          Be(1116352408, 3609767458),
          Be(1899447441, 602891725),
          Be(3049323471, 3964484399),
          Be(3921009573, 2173295548),
          Be(961987163, 4081628472),
          Be(1508970993, 3053834265),
          Be(2453635748, 2937671579),
          Be(2870763221, 3664609560),
          Be(3624381080, 2734883394),
          Be(310598401, 1164996542),
          Be(607225278, 1323610764),
          Be(1426881987, 3590304994),
          Be(1925078388, 4068182383),
          Be(2162078206, 991336113),
          Be(2614888103, 633803317),
          Be(3248222580, 3479774868),
          Be(3835390401, 2666613458),
          Be(4022224774, 944711139),
          Be(264347078, 2341262773),
          Be(604807628, 2007800933),
          Be(770255983, 1495990901),
          Be(1249150122, 1856431235),
          Be(1555081692, 3175218132),
          Be(1996064986, 2198950837),
          Be(2554220882, 3999719339),
          Be(2821834349, 766784016),
          Be(2952996808, 2566594879),
          Be(3210313671, 3203337956),
          Be(3336571891, 1034457026),
          Be(3584528711, 2466948901),
          Be(113926993, 3758326383),
          Be(338241895, 168717936),
          Be(666307205, 1188179964),
          Be(773529912, 1546045734),
          Be(1294757372, 1522805485),
          Be(1396182291, 2643833823),
          Be(1695183700, 2343527390),
          Be(1986661051, 1014477480),
          Be(2177026350, 1206759142),
          Be(2456956037, 344077627),
          Be(2730485921, 1290863460),
          Be(2820302411, 3158454273),
          Be(3259730800, 3505952657),
          Be(3345764771, 106217008),
          Be(3516065817, 3606008344),
          Be(3600352804, 1432725776),
          Be(4094571909, 1467031594),
          Be(275423344, 851169720),
          Be(430227734, 3100823752),
          Be(506948616, 1363258195),
          Be(659060556, 3750685593),
          Be(883997877, 3785050280),
          Be(958139571, 3318307427),
          Be(1322822218, 3812723403),
          Be(1537002063, 2003034995),
          Be(1747873779, 3602036899),
          Be(1955562222, 1575990012),
          Be(2024104815, 1125592928),
          Be(2227730452, 2716904306),
          Be(2361852424, 442776044),
          Be(2428436474, 593698344),
          Be(2756734187, 3733110249),
          Be(3204031479, 2999351573),
          Be(3329325298, 3815920427),
          Be(3391569614, 3928383900),
          Be(3515267271, 566280711),
          Be(3940187606, 3454069534),
          Be(4118630271, 4000239992),
          Be(116418474, 1914138554),
          Be(174292421, 2731055270),
          Be(289380356, 3203993006),
          Be(460393269, 320620315),
          Be(685471733, 587496836),
          Be(852142971, 1086792851),
          Be(1017036298, 365543100),
          Be(1126000580, 2618297676),
          Be(1288033470, 3409855158),
          Be(1501505948, 4234509866),
          Be(1607167915, 987167468),
          Be(1816402316, 1246189591)
        ], me = [];
        (function() {
          for (var we = 0; we < 80; we++)
            me[we] = Be();
        })();
        var ge = fe.SHA512 = ce.extend({
          _doReset: function() {
            this._hash = new ye.init([
              new de.init(1779033703, 4089235720),
              new de.init(3144134277, 2227873595),
              new de.init(1013904242, 4271175723),
              new de.init(2773480762, 1595750129),
              new de.init(1359893119, 2917565137),
              new de.init(2600822924, 725511199),
              new de.init(528734635, 4215389547),
              new de.init(1541459225, 327033209)
            ]);
          },
          _doProcessBlock: function(we, be) {
            for (var Oe = this._hash.words, He = Oe[0], Se = Oe[1], Ge = Oe[2], Fe = Oe[3], Pe = Oe[4], Je = Oe[5], tt = Oe[6], ft = Oe[7], Tt = He.high, Xe = He.low, ht = Se.high, Qt = Se.low, Gt = Ge.high, pt = Ge.low, xt = Fe.high, Yt = Fe.low, Jt = Pe.high, Ht = Pe.low, Lt = Je.high, Pt = Je.low, yt = tt.high, kt = tt.low, $t = ft.high, Le = ft.low, or = Tt, tr = Xe, lr = ht, gt = Qt, Ut = Gt, Ze = pt, rt = xt, $e = Yt, Bt = Jt, ct = Ht, je = Lt, _e = Pt, Ie = yt, Ce = kt, ke = $t, Ve = Le, Ke = 0; Ke < 80; Ke++) {
              var ot, St, Vt = me[Ke];
              if (Ke < 16)
                St = Vt.high = we[be + Ke * 2] | 0, ot = Vt.low = we[be + Ke * 2 + 1] | 0;
              else {
                var zt = me[Ke - 15], Wt = zt.high, qe = zt.low, Te = (Wt >>> 1 | qe << 31) ^ (Wt >>> 8 | qe << 24) ^ Wt >>> 7, Re = (qe >>> 1 | Wt << 31) ^ (qe >>> 8 | Wt << 24) ^ (qe >>> 7 | Wt << 25), it = me[Ke - 2], Ct = it.high, Nt = it.low, Dt = (Ct >>> 19 | Nt << 13) ^ (Ct << 3 | Nt >>> 29) ^ Ct >>> 6, Er = (Nt >>> 19 | Ct << 13) ^ (Nt << 3 | Ct >>> 29) ^ (Nt >>> 6 | Ct << 26), gr = me[Ke - 7], Cr = gr.high, mr = gr.low, wr = me[Ke - 16], en = wr.high, Wn = wr.low;
                ot = Re + mr, St = Te + Cr + (ot >>> 0 < Re >>> 0 ? 1 : 0), ot = ot + Er, St = St + Dt + (ot >>> 0 < Er >>> 0 ? 1 : 0), ot = ot + Wn, St = St + en + (ot >>> 0 < Wn >>> 0 ? 1 : 0), Vt.high = St, Vt.low = ot;
              }
              var on = Bt & je ^ ~Bt & Ie, qn = ct & _e ^ ~ct & Ce, $n = or & lr ^ or & Ut ^ lr & Ut, Pn = tr & gt ^ tr & Ze ^ gt & Ze, Un = (or >>> 28 | tr << 4) ^ (or << 30 | tr >>> 2) ^ (or << 25 | tr >>> 7), ai = (tr >>> 28 | or << 4) ^ (tr << 30 | or >>> 2) ^ (tr << 25 | or >>> 7), pi = (Bt >>> 14 | ct << 18) ^ (Bt >>> 18 | ct << 14) ^ (Bt << 23 | ct >>> 9), Wi = (ct >>> 14 | Bt << 18) ^ (ct >>> 18 | Bt << 14) ^ (ct << 23 | Bt >>> 9), Ti = Ee[Ke], Hn = Ti.high, Kn = Ti.low, Ln = Ve + Wi, si = ke + pi + (Ln >>> 0 < Ve >>> 0 ? 1 : 0), Ln = Ln + qn, si = si + on + (Ln >>> 0 < qn >>> 0 ? 1 : 0), Ln = Ln + Kn, si = si + Hn + (Ln >>> 0 < Kn >>> 0 ? 1 : 0), Ln = Ln + ot, si = si + St + (Ln >>> 0 < ot >>> 0 ? 1 : 0), gi = ai + Pn, mi = Un + $n + (gi >>> 0 < ai >>> 0 ? 1 : 0);
              ke = Ie, Ve = Ce, Ie = je, Ce = _e, je = Bt, _e = ct, ct = $e + Ln | 0, Bt = rt + si + (ct >>> 0 < $e >>> 0 ? 1 : 0) | 0, rt = Ut, $e = Ze, Ut = lr, Ze = gt, lr = or, gt = tr, tr = Ln + gi | 0, or = si + mi + (tr >>> 0 < Ln >>> 0 ? 1 : 0) | 0;
            }
            Xe = He.low = Xe + tr, He.high = Tt + or + (Xe >>> 0 < tr >>> 0 ? 1 : 0), Qt = Se.low = Qt + gt, Se.high = ht + lr + (Qt >>> 0 < gt >>> 0 ? 1 : 0), pt = Ge.low = pt + Ze, Ge.high = Gt + Ut + (pt >>> 0 < Ze >>> 0 ? 1 : 0), Yt = Fe.low = Yt + $e, Fe.high = xt + rt + (Yt >>> 0 < $e >>> 0 ? 1 : 0), Ht = Pe.low = Ht + ct, Pe.high = Jt + Bt + (Ht >>> 0 < ct >>> 0 ? 1 : 0), Pt = Je.low = Pt + _e, Je.high = Lt + je + (Pt >>> 0 < _e >>> 0 ? 1 : 0), kt = tt.low = kt + Ce, tt.high = yt + Ie + (kt >>> 0 < Ce >>> 0 ? 1 : 0), Le = ft.low = Le + Ve, ft.high = $t + ke + (Le >>> 0 < Ve >>> 0 ? 1 : 0);
          },
          _doFinalize: function() {
            var we = this._data, be = we.words, Oe = this._nDataBytes * 8, He = we.sigBytes * 8;
            be[He >>> 5] |= 128 << 24 - He % 32, be[(He + 128 >>> 10 << 5) + 30] = Math.floor(Oe / 4294967296), be[(He + 128 >>> 10 << 5) + 31] = Oe, we.sigBytes = be.length * 4, this._process();
            var Se = this._hash.toX32();
            return Se;
          },
          clone: function() {
            var we = ce.clone.call(this);
            return we._hash = this._hash.clone(), we;
          },
          blockSize: 1024 / 32
        });
        ie.SHA512 = ce._createHelper(ge), ie.HmacSHA512 = ce._createHmacHelper(ge);
      }(), ne.SHA512;
    });
  }(sha512)), sha512.exports;
}
var sha384 = { exports: {} }, hasRequiredSha384;
function requireSha384() {
  return hasRequiredSha384 || (hasRequiredSha384 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireX64Core(), requireSha512());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.x64, ce = ae.Word, le = ae.WordArray, de = ie.algo, ye = de.SHA512, fe = de.SHA384 = ye.extend({
          _doReset: function() {
            this._hash = new le.init([
              new ce.init(3418070365, 3238371032),
              new ce.init(1654270250, 914150663),
              new ce.init(2438529370, 812702999),
              new ce.init(355462360, 4144912697),
              new ce.init(1731405415, 4290775857),
              new ce.init(2394180231, 1750603025),
              new ce.init(3675008525, 1694076839),
              new ce.init(1203062813, 3204075428)
            ]);
          },
          _doFinalize: function() {
            var Be = ye._doFinalize.call(this);
            return Be.sigBytes -= 16, Be;
          }
        });
        ie.SHA384 = ye._createHelper(fe), ie.HmacSHA384 = ye._createHmacHelper(fe);
      }(), ne.SHA384;
    });
  }(sha384)), sha384.exports;
}
var sha3 = { exports: {} }, hasRequiredSha3;
function requireSha3() {
  return hasRequiredSha3 || (hasRequiredSha3 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireX64Core());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.WordArray, de = ce.Hasher, ye = ae.x64, fe = ye.Word, Be = ae.algo, Ee = [], me = [], ge = [];
        (function() {
          for (var Oe = 1, He = 0, Se = 0; Se < 24; Se++) {
            Ee[Oe + 5 * He] = (Se + 1) * (Se + 2) / 2 % 64;
            var Ge = He % 5, Fe = (2 * Oe + 3 * He) % 5;
            Oe = Ge, He = Fe;
          }
          for (var Oe = 0; Oe < 5; Oe++)
            for (var He = 0; He < 5; He++)
              me[Oe + 5 * He] = He + (2 * Oe + 3 * He) % 5 * 5;
          for (var Pe = 1, Je = 0; Je < 24; Je++) {
            for (var tt = 0, ft = 0, Tt = 0; Tt < 7; Tt++) {
              if (Pe & 1) {
                var Xe = (1 << Tt) - 1;
                Xe < 32 ? ft ^= 1 << Xe : tt ^= 1 << Xe - 32;
              }
              Pe & 128 ? Pe = Pe << 1 ^ 113 : Pe <<= 1;
            }
            ge[Je] = fe.create(tt, ft);
          }
        })();
        var we = [];
        (function() {
          for (var Oe = 0; Oe < 25; Oe++)
            we[Oe] = fe.create();
        })();
        var be = Be.SHA3 = de.extend({
          cfg: de.cfg.extend({
            outputLength: 512
          }),
          _doReset: function() {
            for (var Oe = this._state = [], He = 0; He < 25; He++)
              Oe[He] = new fe.init();
            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
          },
          _doProcessBlock: function(Oe, He) {
            for (var Se = this._state, Ge = this.blockSize / 2, Fe = 0; Fe < Ge; Fe++) {
              var Pe = Oe[He + 2 * Fe], Je = Oe[He + 2 * Fe + 1];
              Pe = (Pe << 8 | Pe >>> 24) & 16711935 | (Pe << 24 | Pe >>> 8) & 4278255360, Je = (Je << 8 | Je >>> 24) & 16711935 | (Je << 24 | Je >>> 8) & 4278255360;
              var tt = Se[Fe];
              tt.high ^= Je, tt.low ^= Pe;
            }
            for (var ft = 0; ft < 24; ft++) {
              for (var Tt = 0; Tt < 5; Tt++) {
                for (var Xe = 0, ht = 0, Qt = 0; Qt < 5; Qt++) {
                  var tt = Se[Tt + 5 * Qt];
                  Xe ^= tt.high, ht ^= tt.low;
                }
                var Gt = we[Tt];
                Gt.high = Xe, Gt.low = ht;
              }
              for (var Tt = 0; Tt < 5; Tt++)
                for (var pt = we[(Tt + 4) % 5], xt = we[(Tt + 1) % 5], Yt = xt.high, Jt = xt.low, Xe = pt.high ^ (Yt << 1 | Jt >>> 31), ht = pt.low ^ (Jt << 1 | Yt >>> 31), Qt = 0; Qt < 5; Qt++) {
                  var tt = Se[Tt + 5 * Qt];
                  tt.high ^= Xe, tt.low ^= ht;
                }
              for (var Ht = 1; Ht < 25; Ht++) {
                var Xe, ht, tt = Se[Ht], Lt = tt.high, Pt = tt.low, yt = Ee[Ht];
                yt < 32 ? (Xe = Lt << yt | Pt >>> 32 - yt, ht = Pt << yt | Lt >>> 32 - yt) : (Xe = Pt << yt - 32 | Lt >>> 64 - yt, ht = Lt << yt - 32 | Pt >>> 64 - yt);
                var kt = we[me[Ht]];
                kt.high = Xe, kt.low = ht;
              }
              var $t = we[0], Le = Se[0];
              $t.high = Le.high, $t.low = Le.low;
              for (var Tt = 0; Tt < 5; Tt++)
                for (var Qt = 0; Qt < 5; Qt++) {
                  var Ht = Tt + 5 * Qt, tt = Se[Ht], or = we[Ht], tr = we[(Tt + 1) % 5 + 5 * Qt], lr = we[(Tt + 2) % 5 + 5 * Qt];
                  tt.high = or.high ^ ~tr.high & lr.high, tt.low = or.low ^ ~tr.low & lr.low;
                }
              var tt = Se[0], gt = ge[ft];
              tt.high ^= gt.high, tt.low ^= gt.low;
            }
          },
          _doFinalize: function() {
            var Oe = this._data, He = Oe.words;
            this._nDataBytes * 8;
            var Se = Oe.sigBytes * 8, Ge = this.blockSize * 32;
            He[Se >>> 5] |= 1 << 24 - Se % 32, He[(ie.ceil((Se + 1) / Ge) * Ge >>> 5) - 1] |= 128, Oe.sigBytes = He.length * 4, this._process();
            for (var Fe = this._state, Pe = this.cfg.outputLength / 8, Je = Pe / 8, tt = [], ft = 0; ft < Je; ft++) {
              var Tt = Fe[ft], Xe = Tt.high, ht = Tt.low;
              Xe = (Xe << 8 | Xe >>> 24) & 16711935 | (Xe << 24 | Xe >>> 8) & 4278255360, ht = (ht << 8 | ht >>> 24) & 16711935 | (ht << 24 | ht >>> 8) & 4278255360, tt.push(ht), tt.push(Xe);
            }
            return new le.init(tt, Pe);
          },
          clone: function() {
            for (var Oe = de.clone.call(this), He = Oe._state = this._state.slice(0), Se = 0; Se < 25; Se++)
              He[Se] = He[Se].clone();
            return Oe;
          }
        });
        ae.SHA3 = de._createHelper(be), ae.HmacSHA3 = de._createHmacHelper(be);
      }(Math), ne.SHA3;
    });
  }(sha3)), sha3.exports;
}
var ripemd160 = { exports: {} }, hasRequiredRipemd160;
function requireRipemd160() {
  return hasRequiredRipemd160 || (hasRequiredRipemd160 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      /** @preserve
      			(c) 2012 by Cédric Mesnil. All rights reserved.
      
      			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
      
      			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      
      			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      			*/
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.WordArray, de = ce.Hasher, ye = ae.algo, fe = le.create([
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13
        ]), Be = le.create([
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11
        ]), Ee = le.create([
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6
        ]), me = le.create([
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11
        ]), ge = le.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), we = le.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), be = ye.RIPEMD160 = de.extend({
          _doReset: function() {
            this._hash = le.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          },
          _doProcessBlock: function(Je, tt) {
            for (var ft = 0; ft < 16; ft++) {
              var Tt = tt + ft, Xe = Je[Tt];
              Je[Tt] = (Xe << 8 | Xe >>> 24) & 16711935 | (Xe << 24 | Xe >>> 8) & 4278255360;
            }
            var ht = this._hash.words, Qt = ge.words, Gt = we.words, pt = fe.words, xt = Be.words, Yt = Ee.words, Jt = me.words, Ht, Lt, Pt, yt, kt, $t, Le, or, tr, lr;
            $t = Ht = ht[0], Le = Lt = ht[1], or = Pt = ht[2], tr = yt = ht[3], lr = kt = ht[4];
            for (var gt, ft = 0; ft < 80; ft += 1)
              gt = Ht + Je[tt + pt[ft]] | 0, ft < 16 ? gt += Oe(Lt, Pt, yt) + Qt[0] : ft < 32 ? gt += He(Lt, Pt, yt) + Qt[1] : ft < 48 ? gt += Se(Lt, Pt, yt) + Qt[2] : ft < 64 ? gt += Ge(Lt, Pt, yt) + Qt[3] : gt += Fe(Lt, Pt, yt) + Qt[4], gt = gt | 0, gt = Pe(gt, Yt[ft]), gt = gt + kt | 0, Ht = kt, kt = yt, yt = Pe(Pt, 10), Pt = Lt, Lt = gt, gt = $t + Je[tt + xt[ft]] | 0, ft < 16 ? gt += Fe(Le, or, tr) + Gt[0] : ft < 32 ? gt += Ge(Le, or, tr) + Gt[1] : ft < 48 ? gt += Se(Le, or, tr) + Gt[2] : ft < 64 ? gt += He(Le, or, tr) + Gt[3] : gt += Oe(Le, or, tr) + Gt[4], gt = gt | 0, gt = Pe(gt, Jt[ft]), gt = gt + lr | 0, $t = lr, lr = tr, tr = Pe(or, 10), or = Le, Le = gt;
            gt = ht[1] + Pt + tr | 0, ht[1] = ht[2] + yt + lr | 0, ht[2] = ht[3] + kt + $t | 0, ht[3] = ht[4] + Ht + Le | 0, ht[4] = ht[0] + Lt + or | 0, ht[0] = gt;
          },
          _doFinalize: function() {
            var Je = this._data, tt = Je.words, ft = this._nDataBytes * 8, Tt = Je.sigBytes * 8;
            tt[Tt >>> 5] |= 128 << 24 - Tt % 32, tt[(Tt + 64 >>> 9 << 4) + 14] = (ft << 8 | ft >>> 24) & 16711935 | (ft << 24 | ft >>> 8) & 4278255360, Je.sigBytes = (tt.length + 1) * 4, this._process();
            for (var Xe = this._hash, ht = Xe.words, Qt = 0; Qt < 5; Qt++) {
              var Gt = ht[Qt];
              ht[Qt] = (Gt << 8 | Gt >>> 24) & 16711935 | (Gt << 24 | Gt >>> 8) & 4278255360;
            }
            return Xe;
          },
          clone: function() {
            var Je = de.clone.call(this);
            return Je._hash = this._hash.clone(), Je;
          }
        });
        function Oe(Je, tt, ft) {
          return Je ^ tt ^ ft;
        }
        function He(Je, tt, ft) {
          return Je & tt | ~Je & ft;
        }
        function Se(Je, tt, ft) {
          return (Je | ~tt) ^ ft;
        }
        function Ge(Je, tt, ft) {
          return Je & ft | tt & ~ft;
        }
        function Fe(Je, tt, ft) {
          return Je ^ (tt | ~ft);
        }
        function Pe(Je, tt) {
          return Je << tt | Je >>> 32 - tt;
        }
        ae.RIPEMD160 = de._createHelper(be), ae.HmacRIPEMD160 = de._createHmacHelper(be);
      }(), ne.RIPEMD160;
    });
  }(ripemd160)), ripemd160.exports;
}
var hmac = { exports: {} }, hasRequiredHmac;
function requireHmac() {
  return hasRequiredHmac || (hasRequiredHmac = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      (function() {
        var ie = ne, ae = ie.lib, ce = ae.Base, le = ie.enc, de = le.Utf8, ye = ie.algo;
        ye.HMAC = ce.extend({
          init: function(fe, Be) {
            fe = this._hasher = new fe.init(), typeof Be == "string" && (Be = de.parse(Be));
            var Ee = fe.blockSize, me = Ee * 4;
            Be.sigBytes > me && (Be = fe.finalize(Be)), Be.clamp();
            for (var ge = this._oKey = Be.clone(), we = this._iKey = Be.clone(), be = ge.words, Oe = we.words, He = 0; He < Ee; He++)
              be[He] ^= 1549556828, Oe[He] ^= 909522486;
            ge.sigBytes = we.sigBytes = me, this.reset();
          },
          reset: function() {
            var fe = this._hasher;
            fe.reset(), fe.update(this._iKey);
          },
          update: function(fe) {
            return this._hasher.update(fe), this;
          },
          finalize: function(fe) {
            var Be = this._hasher, Ee = Be.finalize(fe);
            Be.reset();
            var me = Be.finalize(this._oKey.clone().concat(Ee));
            return me;
          }
        });
      })();
    });
  }(hmac)), hmac.exports;
}
var pbkdf2 = { exports: {} }, hasRequiredPbkdf2;
function requirePbkdf2() {
  return hasRequiredPbkdf2 || (hasRequiredPbkdf2 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireSha1(), requireHmac());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.Base, le = ae.WordArray, de = ie.algo, ye = de.SHA1, fe = de.HMAC, Be = de.PBKDF2 = ce.extend({
          cfg: ce.extend({
            keySize: 128 / 32,
            hasher: ye,
            iterations: 1
          }),
          init: function(Ee) {
            this.cfg = this.cfg.extend(Ee);
          },
          compute: function(Ee, me) {
            for (var ge = this.cfg, we = fe.create(ge.hasher, Ee), be = le.create(), Oe = le.create([1]), He = be.words, Se = Oe.words, Ge = ge.keySize, Fe = ge.iterations; He.length < Ge; ) {
              var Pe = we.update(me).finalize(Oe);
              we.reset();
              for (var Je = Pe.words, tt = Je.length, ft = Pe, Tt = 1; Tt < Fe; Tt++) {
                ft = we.finalize(ft), we.reset();
                for (var Xe = ft.words, ht = 0; ht < tt; ht++)
                  Je[ht] ^= Xe[ht];
              }
              be.concat(Pe), Se[0]++;
            }
            return be.sigBytes = Ge * 4, be;
          }
        });
        ie.PBKDF2 = function(Ee, me, ge) {
          return Be.create(ge).compute(Ee, me);
        };
      }(), ne.PBKDF2;
    });
  }(pbkdf2)), pbkdf2.exports;
}
var evpkdf = { exports: {} }, hasRequiredEvpkdf;
function requireEvpkdf() {
  return hasRequiredEvpkdf || (hasRequiredEvpkdf = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireSha1(), requireHmac());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.Base, le = ae.WordArray, de = ie.algo, ye = de.MD5, fe = de.EvpKDF = ce.extend({
          cfg: ce.extend({
            keySize: 128 / 32,
            hasher: ye,
            iterations: 1
          }),
          init: function(Be) {
            this.cfg = this.cfg.extend(Be);
          },
          compute: function(Be, Ee) {
            for (var me, ge = this.cfg, we = ge.hasher.create(), be = le.create(), Oe = be.words, He = ge.keySize, Se = ge.iterations; Oe.length < He; ) {
              me && we.update(me), me = we.update(Be).finalize(Ee), we.reset();
              for (var Ge = 1; Ge < Se; Ge++)
                me = we.finalize(me), we.reset();
              be.concat(me);
            }
            return be.sigBytes = He * 4, be;
          }
        });
        ie.EvpKDF = function(Be, Ee, me) {
          return fe.create(me).compute(Be, Ee);
        };
      }(), ne.EvpKDF;
    });
  }(evpkdf)), evpkdf.exports;
}
var cipherCore = { exports: {} }, hasRequiredCipherCore;
function requireCipherCore() {
  return hasRequiredCipherCore || (hasRequiredCipherCore = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEvpkdf());
    })(commonjsGlobal, function(ne) {
      ne.lib.Cipher || function(ie) {
        var ae = ne, ce = ae.lib, le = ce.Base, de = ce.WordArray, ye = ce.BufferedBlockAlgorithm, fe = ae.enc;
        fe.Utf8;
        var Be = fe.Base64, Ee = ae.algo, me = Ee.EvpKDF, ge = ce.Cipher = ye.extend({
          cfg: le.extend(),
          createEncryptor: function(Xe, ht) {
            return this.create(this._ENC_XFORM_MODE, Xe, ht);
          },
          createDecryptor: function(Xe, ht) {
            return this.create(this._DEC_XFORM_MODE, Xe, ht);
          },
          init: function(Xe, ht, Qt) {
            this.cfg = this.cfg.extend(Qt), this._xformMode = Xe, this._key = ht, this.reset();
          },
          reset: function() {
            ye.reset.call(this), this._doReset();
          },
          process: function(Xe) {
            return this._append(Xe), this._process();
          },
          finalize: function(Xe) {
            Xe && this._append(Xe);
            var ht = this._doFinalize();
            return ht;
          },
          keySize: 128 / 32,
          ivSize: 128 / 32,
          _ENC_XFORM_MODE: 1,
          _DEC_XFORM_MODE: 2,
          _createHelper: function() {
            function Xe(ht) {
              return typeof ht == "string" ? Tt : Je;
            }
            return function(ht) {
              return {
                encrypt: function(Qt, Gt, pt) {
                  return Xe(Gt).encrypt(ht, Qt, Gt, pt);
                },
                decrypt: function(Qt, Gt, pt) {
                  return Xe(Gt).decrypt(ht, Qt, Gt, pt);
                }
              };
            };
          }()
        });
        ce.StreamCipher = ge.extend({
          _doFinalize: function() {
            var Xe = this._process(!0);
            return Xe;
          },
          blockSize: 1
        });
        var we = ae.mode = {}, be = ce.BlockCipherMode = le.extend({
          createEncryptor: function(Xe, ht) {
            return this.Encryptor.create(Xe, ht);
          },
          createDecryptor: function(Xe, ht) {
            return this.Decryptor.create(Xe, ht);
          },
          init: function(Xe, ht) {
            this._cipher = Xe, this._iv = ht;
          }
        }), Oe = we.CBC = function() {
          var Xe = be.extend();
          Xe.Encryptor = Xe.extend({
            processBlock: function(Qt, Gt) {
              var pt = this._cipher, xt = pt.blockSize;
              ht.call(this, Qt, Gt, xt), pt.encryptBlock(Qt, Gt), this._prevBlock = Qt.slice(Gt, Gt + xt);
            }
          }), Xe.Decryptor = Xe.extend({
            processBlock: function(Qt, Gt) {
              var pt = this._cipher, xt = pt.blockSize, Yt = Qt.slice(Gt, Gt + xt);
              pt.decryptBlock(Qt, Gt), ht.call(this, Qt, Gt, xt), this._prevBlock = Yt;
            }
          });
          function ht(Qt, Gt, pt) {
            var xt, Yt = this._iv;
            Yt ? (xt = Yt, this._iv = ie) : xt = this._prevBlock;
            for (var Jt = 0; Jt < pt; Jt++)
              Qt[Gt + Jt] ^= xt[Jt];
          }
          return Xe;
        }(), He = ae.pad = {}, Se = He.Pkcs7 = {
          pad: function(Xe, ht) {
            for (var Qt = ht * 4, Gt = Qt - Xe.sigBytes % Qt, pt = Gt << 24 | Gt << 16 | Gt << 8 | Gt, xt = [], Yt = 0; Yt < Gt; Yt += 4)
              xt.push(pt);
            var Jt = de.create(xt, Gt);
            Xe.concat(Jt);
          },
          unpad: function(Xe) {
            var ht = Xe.words[Xe.sigBytes - 1 >>> 2] & 255;
            Xe.sigBytes -= ht;
          }
        };
        ce.BlockCipher = ge.extend({
          cfg: ge.cfg.extend({
            mode: Oe,
            padding: Se
          }),
          reset: function() {
            var Xe;
            ge.reset.call(this);
            var ht = this.cfg, Qt = ht.iv, Gt = ht.mode;
            this._xformMode == this._ENC_XFORM_MODE ? Xe = Gt.createEncryptor : (Xe = Gt.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == Xe ? this._mode.init(this, Qt && Qt.words) : (this._mode = Xe.call(Gt, this, Qt && Qt.words), this._mode.__creator = Xe);
          },
          _doProcessBlock: function(Xe, ht) {
            this._mode.processBlock(Xe, ht);
          },
          _doFinalize: function() {
            var Xe, ht = this.cfg.padding;
            return this._xformMode == this._ENC_XFORM_MODE ? (ht.pad(this._data, this.blockSize), Xe = this._process(!0)) : (Xe = this._process(!0), ht.unpad(Xe)), Xe;
          },
          blockSize: 128 / 32
        });
        var Ge = ce.CipherParams = le.extend({
          init: function(Xe) {
            this.mixIn(Xe);
          },
          toString: function(Xe) {
            return (Xe || this.formatter).stringify(this);
          }
        }), Fe = ae.format = {}, Pe = Fe.OpenSSL = {
          stringify: function(Xe) {
            var ht, Qt = Xe.ciphertext, Gt = Xe.salt;
            return Gt ? ht = de.create([1398893684, 1701076831]).concat(Gt).concat(Qt) : ht = Qt, ht.toString(Be);
          },
          parse: function(Xe) {
            var ht, Qt = Be.parse(Xe), Gt = Qt.words;
            return Gt[0] == 1398893684 && Gt[1] == 1701076831 && (ht = de.create(Gt.slice(2, 4)), Gt.splice(0, 4), Qt.sigBytes -= 16), Ge.create({ ciphertext: Qt, salt: ht });
          }
        }, Je = ce.SerializableCipher = le.extend({
          cfg: le.extend({
            format: Pe
          }),
          encrypt: function(Xe, ht, Qt, Gt) {
            Gt = this.cfg.extend(Gt);
            var pt = Xe.createEncryptor(Qt, Gt), xt = pt.finalize(ht), Yt = pt.cfg;
            return Ge.create({
              ciphertext: xt,
              key: Qt,
              iv: Yt.iv,
              algorithm: Xe,
              mode: Yt.mode,
              padding: Yt.padding,
              blockSize: Xe.blockSize,
              formatter: Gt.format
            });
          },
          decrypt: function(Xe, ht, Qt, Gt) {
            Gt = this.cfg.extend(Gt), ht = this._parse(ht, Gt.format);
            var pt = Xe.createDecryptor(Qt, Gt).finalize(ht.ciphertext);
            return pt;
          },
          _parse: function(Xe, ht) {
            return typeof Xe == "string" ? ht.parse(Xe, this) : Xe;
          }
        }), tt = ae.kdf = {}, ft = tt.OpenSSL = {
          execute: function(Xe, ht, Qt, Gt) {
            Gt || (Gt = de.random(64 / 8));
            var pt = me.create({ keySize: ht + Qt }).compute(Xe, Gt), xt = de.create(pt.words.slice(ht), Qt * 4);
            return pt.sigBytes = ht * 4, Ge.create({ key: pt, iv: xt, salt: Gt });
          }
        }, Tt = ce.PasswordBasedCipher = Je.extend({
          cfg: Je.cfg.extend({
            kdf: ft
          }),
          encrypt: function(Xe, ht, Qt, Gt) {
            Gt = this.cfg.extend(Gt);
            var pt = Gt.kdf.execute(Qt, Xe.keySize, Xe.ivSize);
            Gt.iv = pt.iv;
            var xt = Je.encrypt.call(this, Xe, ht, pt.key, Gt);
            return xt.mixIn(pt), xt;
          },
          decrypt: function(Xe, ht, Qt, Gt) {
            Gt = this.cfg.extend(Gt), ht = this._parse(ht, Gt.format);
            var pt = Gt.kdf.execute(Qt, Xe.keySize, Xe.ivSize, ht.salt);
            Gt.iv = pt.iv;
            var xt = Je.decrypt.call(this, Xe, ht, pt.key, Gt);
            return xt;
          }
        });
      }();
    });
  }(cipherCore)), cipherCore.exports;
}
var modeCfb = { exports: {} }, hasRequiredModeCfb;
function requireModeCfb() {
  return hasRequiredModeCfb || (hasRequiredModeCfb = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.CFB = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        ie.Encryptor = ie.extend({
          processBlock: function(ce, le) {
            var de = this._cipher, ye = de.blockSize;
            ae.call(this, ce, le, ye, de), this._prevBlock = ce.slice(le, le + ye);
          }
        }), ie.Decryptor = ie.extend({
          processBlock: function(ce, le) {
            var de = this._cipher, ye = de.blockSize, fe = ce.slice(le, le + ye);
            ae.call(this, ce, le, ye, de), this._prevBlock = fe;
          }
        });
        function ae(ce, le, de, ye) {
          var fe, Be = this._iv;
          Be ? (fe = Be.slice(0), this._iv = void 0) : fe = this._prevBlock, ye.encryptBlock(fe, 0);
          for (var Ee = 0; Ee < de; Ee++)
            ce[le + Ee] ^= fe[Ee];
        }
        return ie;
      }(), ne.mode.CFB;
    });
  }(modeCfb)), modeCfb.exports;
}
var modeCtr = { exports: {} }, hasRequiredModeCtr;
function requireModeCtr() {
  return hasRequiredModeCtr || (hasRequiredModeCtr = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.CTR = function() {
        var ie = ne.lib.BlockCipherMode.extend(), ae = ie.Encryptor = ie.extend({
          processBlock: function(ce, le) {
            var de = this._cipher, ye = de.blockSize, fe = this._iv, Be = this._counter;
            fe && (Be = this._counter = fe.slice(0), this._iv = void 0);
            var Ee = Be.slice(0);
            de.encryptBlock(Ee, 0), Be[ye - 1] = Be[ye - 1] + 1 | 0;
            for (var me = 0; me < ye; me++)
              ce[le + me] ^= Ee[me];
          }
        });
        return ie.Decryptor = ae, ie;
      }(), ne.mode.CTR;
    });
  }(modeCtr)), modeCtr.exports;
}
var modeCtrGladman = { exports: {} }, hasRequiredModeCtrGladman;
function requireModeCtrGladman() {
  return hasRequiredModeCtrGladman || (hasRequiredModeCtrGladman = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      /** @preserve
       * Counter block mode compatible with  Dr Brian Gladman fileenc.c
       * derived from CryptoJS.mode.CTR
       * Jan Hruby jhruby.web@gmail.com
       */
      return ne.mode.CTRGladman = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        function ae(de) {
          if ((de >> 24 & 255) === 255) {
            var ye = de >> 16 & 255, fe = de >> 8 & 255, Be = de & 255;
            ye === 255 ? (ye = 0, fe === 255 ? (fe = 0, Be === 255 ? Be = 0 : ++Be) : ++fe) : ++ye, de = 0, de += ye << 16, de += fe << 8, de += Be;
          } else
            de += 1 << 24;
          return de;
        }
        function ce(de) {
          return (de[0] = ae(de[0])) === 0 && (de[1] = ae(de[1])), de;
        }
        var le = ie.Encryptor = ie.extend({
          processBlock: function(de, ye) {
            var fe = this._cipher, Be = fe.blockSize, Ee = this._iv, me = this._counter;
            Ee && (me = this._counter = Ee.slice(0), this._iv = void 0), ce(me);
            var ge = me.slice(0);
            fe.encryptBlock(ge, 0);
            for (var we = 0; we < Be; we++)
              de[ye + we] ^= ge[we];
          }
        });
        return ie.Decryptor = le, ie;
      }(), ne.mode.CTRGladman;
    });
  }(modeCtrGladman)), modeCtrGladman.exports;
}
var modeOfb = { exports: {} }, hasRequiredModeOfb;
function requireModeOfb() {
  return hasRequiredModeOfb || (hasRequiredModeOfb = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.OFB = function() {
        var ie = ne.lib.BlockCipherMode.extend(), ae = ie.Encryptor = ie.extend({
          processBlock: function(ce, le) {
            var de = this._cipher, ye = de.blockSize, fe = this._iv, Be = this._keystream;
            fe && (Be = this._keystream = fe.slice(0), this._iv = void 0), de.encryptBlock(Be, 0);
            for (var Ee = 0; Ee < ye; Ee++)
              ce[le + Ee] ^= Be[Ee];
          }
        });
        return ie.Decryptor = ae, ie;
      }(), ne.mode.OFB;
    });
  }(modeOfb)), modeOfb.exports;
}
var modeEcb = { exports: {} }, hasRequiredModeEcb;
function requireModeEcb() {
  return hasRequiredModeEcb || (hasRequiredModeEcb = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.ECB = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        return ie.Encryptor = ie.extend({
          processBlock: function(ae, ce) {
            this._cipher.encryptBlock(ae, ce);
          }
        }), ie.Decryptor = ie.extend({
          processBlock: function(ae, ce) {
            this._cipher.decryptBlock(ae, ce);
          }
        }), ie;
      }(), ne.mode.ECB;
    });
  }(modeEcb)), modeEcb.exports;
}
var padAnsix923 = { exports: {} }, hasRequiredPadAnsix923;
function requirePadAnsix923() {
  return hasRequiredPadAnsix923 || (hasRequiredPadAnsix923 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.AnsiX923 = {
        pad: function(ie, ae) {
          var ce = ie.sigBytes, le = ae * 4, de = le - ce % le, ye = ce + de - 1;
          ie.clamp(), ie.words[ye >>> 2] |= de << 24 - ye % 4 * 8, ie.sigBytes += de;
        },
        unpad: function(ie) {
          var ae = ie.words[ie.sigBytes - 1 >>> 2] & 255;
          ie.sigBytes -= ae;
        }
      }, ne.pad.Ansix923;
    });
  }(padAnsix923)), padAnsix923.exports;
}
var padIso10126 = { exports: {} }, hasRequiredPadIso10126;
function requirePadIso10126() {
  return hasRequiredPadIso10126 || (hasRequiredPadIso10126 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.Iso10126 = {
        pad: function(ie, ae) {
          var ce = ae * 4, le = ce - ie.sigBytes % ce;
          ie.concat(ne.lib.WordArray.random(le - 1)).concat(ne.lib.WordArray.create([le << 24], 1));
        },
        unpad: function(ie) {
          var ae = ie.words[ie.sigBytes - 1 >>> 2] & 255;
          ie.sigBytes -= ae;
        }
      }, ne.pad.Iso10126;
    });
  }(padIso10126)), padIso10126.exports;
}
var padIso97971 = { exports: {} }, hasRequiredPadIso97971;
function requirePadIso97971() {
  return hasRequiredPadIso97971 || (hasRequiredPadIso97971 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.Iso97971 = {
        pad: function(ie, ae) {
          ie.concat(ne.lib.WordArray.create([2147483648], 1)), ne.pad.ZeroPadding.pad(ie, ae);
        },
        unpad: function(ie) {
          ne.pad.ZeroPadding.unpad(ie), ie.sigBytes--;
        }
      }, ne.pad.Iso97971;
    });
  }(padIso97971)), padIso97971.exports;
}
var padZeropadding = { exports: {} }, hasRequiredPadZeropadding;
function requirePadZeropadding() {
  return hasRequiredPadZeropadding || (hasRequiredPadZeropadding = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.ZeroPadding = {
        pad: function(ie, ae) {
          var ce = ae * 4;
          ie.clamp(), ie.sigBytes += ce - (ie.sigBytes % ce || ce);
        },
        unpad: function(ie) {
          for (var ae = ie.words, ce = ie.sigBytes - 1, ce = ie.sigBytes - 1; ce >= 0; ce--)
            if (ae[ce >>> 2] >>> 24 - ce % 4 * 8 & 255) {
              ie.sigBytes = ce + 1;
              break;
            }
        }
      }, ne.pad.ZeroPadding;
    });
  }(padZeropadding)), padZeropadding.exports;
}
var padNopadding = { exports: {} }, hasRequiredPadNopadding;
function requirePadNopadding() {
  return hasRequiredPadNopadding || (hasRequiredPadNopadding = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.NoPadding = {
        pad: function() {
        },
        unpad: function() {
        }
      }, ne.pad.NoPadding;
    });
  }(padNopadding)), padNopadding.exports;
}
var formatHex = { exports: {} }, hasRequiredFormatHex;
function requireFormatHex() {
  return hasRequiredFormatHex || (hasRequiredFormatHex = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.CipherParams, de = ae.enc, ye = de.Hex, fe = ae.format;
        fe.Hex = {
          stringify: function(Be) {
            return Be.ciphertext.toString(ye);
          },
          parse: function(Be) {
            var Ee = ye.parse(Be);
            return le.create({ ciphertext: Ee });
          }
        };
      }(), ne.format.Hex;
    });
  }(formatHex)), formatHex.exports;
}
var aes = { exports: {} }, hasRequiredAes;
function requireAes() {
  return hasRequiredAes || (hasRequiredAes = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.BlockCipher, le = ie.algo, de = [], ye = [], fe = [], Be = [], Ee = [], me = [], ge = [], we = [], be = [], Oe = [];
        (function() {
          for (var Ge = [], Fe = 0; Fe < 256; Fe++)
            Fe < 128 ? Ge[Fe] = Fe << 1 : Ge[Fe] = Fe << 1 ^ 283;
          for (var Pe = 0, Je = 0, Fe = 0; Fe < 256; Fe++) {
            var tt = Je ^ Je << 1 ^ Je << 2 ^ Je << 3 ^ Je << 4;
            tt = tt >>> 8 ^ tt & 255 ^ 99, de[Pe] = tt, ye[tt] = Pe;
            var ft = Ge[Pe], Tt = Ge[ft], Xe = Ge[Tt], ht = Ge[tt] * 257 ^ tt * 16843008;
            fe[Pe] = ht << 24 | ht >>> 8, Be[Pe] = ht << 16 | ht >>> 16, Ee[Pe] = ht << 8 | ht >>> 24, me[Pe] = ht;
            var ht = Xe * 16843009 ^ Tt * 65537 ^ ft * 257 ^ Pe * 16843008;
            ge[tt] = ht << 24 | ht >>> 8, we[tt] = ht << 16 | ht >>> 16, be[tt] = ht << 8 | ht >>> 24, Oe[tt] = ht, Pe ? (Pe = ft ^ Ge[Ge[Ge[Xe ^ ft]]], Je ^= Ge[Ge[Je]]) : Pe = Je = 1;
          }
        })();
        var He = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], Se = le.AES = ce.extend({
          _doReset: function() {
            var Ge;
            if (!(this._nRounds && this._keyPriorReset === this._key)) {
              for (var Fe = this._keyPriorReset = this._key, Pe = Fe.words, Je = Fe.sigBytes / 4, tt = this._nRounds = Je + 6, ft = (tt + 1) * 4, Tt = this._keySchedule = [], Xe = 0; Xe < ft; Xe++)
                Xe < Je ? Tt[Xe] = Pe[Xe] : (Ge = Tt[Xe - 1], Xe % Je ? Je > 6 && Xe % Je == 4 && (Ge = de[Ge >>> 24] << 24 | de[Ge >>> 16 & 255] << 16 | de[Ge >>> 8 & 255] << 8 | de[Ge & 255]) : (Ge = Ge << 8 | Ge >>> 24, Ge = de[Ge >>> 24] << 24 | de[Ge >>> 16 & 255] << 16 | de[Ge >>> 8 & 255] << 8 | de[Ge & 255], Ge ^= He[Xe / Je | 0] << 24), Tt[Xe] = Tt[Xe - Je] ^ Ge);
              for (var ht = this._invKeySchedule = [], Qt = 0; Qt < ft; Qt++) {
                var Xe = ft - Qt;
                if (Qt % 4)
                  var Ge = Tt[Xe];
                else
                  var Ge = Tt[Xe - 4];
                Qt < 4 || Xe <= 4 ? ht[Qt] = Ge : ht[Qt] = ge[de[Ge >>> 24]] ^ we[de[Ge >>> 16 & 255]] ^ be[de[Ge >>> 8 & 255]] ^ Oe[de[Ge & 255]];
              }
            }
          },
          encryptBlock: function(Ge, Fe) {
            this._doCryptBlock(Ge, Fe, this._keySchedule, fe, Be, Ee, me, de);
          },
          decryptBlock: function(Ge, Fe) {
            var Pe = Ge[Fe + 1];
            Ge[Fe + 1] = Ge[Fe + 3], Ge[Fe + 3] = Pe, this._doCryptBlock(Ge, Fe, this._invKeySchedule, ge, we, be, Oe, ye);
            var Pe = Ge[Fe + 1];
            Ge[Fe + 1] = Ge[Fe + 3], Ge[Fe + 3] = Pe;
          },
          _doCryptBlock: function(Ge, Fe, Pe, Je, tt, ft, Tt, Xe) {
            for (var ht = this._nRounds, Qt = Ge[Fe] ^ Pe[0], Gt = Ge[Fe + 1] ^ Pe[1], pt = Ge[Fe + 2] ^ Pe[2], xt = Ge[Fe + 3] ^ Pe[3], Yt = 4, Jt = 1; Jt < ht; Jt++) {
              var Ht = Je[Qt >>> 24] ^ tt[Gt >>> 16 & 255] ^ ft[pt >>> 8 & 255] ^ Tt[xt & 255] ^ Pe[Yt++], Lt = Je[Gt >>> 24] ^ tt[pt >>> 16 & 255] ^ ft[xt >>> 8 & 255] ^ Tt[Qt & 255] ^ Pe[Yt++], Pt = Je[pt >>> 24] ^ tt[xt >>> 16 & 255] ^ ft[Qt >>> 8 & 255] ^ Tt[Gt & 255] ^ Pe[Yt++], yt = Je[xt >>> 24] ^ tt[Qt >>> 16 & 255] ^ ft[Gt >>> 8 & 255] ^ Tt[pt & 255] ^ Pe[Yt++];
              Qt = Ht, Gt = Lt, pt = Pt, xt = yt;
            }
            var Ht = (Xe[Qt >>> 24] << 24 | Xe[Gt >>> 16 & 255] << 16 | Xe[pt >>> 8 & 255] << 8 | Xe[xt & 255]) ^ Pe[Yt++], Lt = (Xe[Gt >>> 24] << 24 | Xe[pt >>> 16 & 255] << 16 | Xe[xt >>> 8 & 255] << 8 | Xe[Qt & 255]) ^ Pe[Yt++], Pt = (Xe[pt >>> 24] << 24 | Xe[xt >>> 16 & 255] << 16 | Xe[Qt >>> 8 & 255] << 8 | Xe[Gt & 255]) ^ Pe[Yt++], yt = (Xe[xt >>> 24] << 24 | Xe[Qt >>> 16 & 255] << 16 | Xe[Gt >>> 8 & 255] << 8 | Xe[pt & 255]) ^ Pe[Yt++];
            Ge[Fe] = Ht, Ge[Fe + 1] = Lt, Ge[Fe + 2] = Pt, Ge[Fe + 3] = yt;
          },
          keySize: 256 / 32
        });
        ie.AES = ce._createHelper(Se);
      }(), ne.AES;
    });
  }(aes)), aes.exports;
}
var tripledes = { exports: {} }, hasRequiredTripledes;
function requireTripledes() {
  return hasRequiredTripledes || (hasRequiredTripledes = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ae.BlockCipher, de = ie.algo, ye = [
          57,
          49,
          41,
          33,
          25,
          17,
          9,
          1,
          58,
          50,
          42,
          34,
          26,
          18,
          10,
          2,
          59,
          51,
          43,
          35,
          27,
          19,
          11,
          3,
          60,
          52,
          44,
          36,
          63,
          55,
          47,
          39,
          31,
          23,
          15,
          7,
          62,
          54,
          46,
          38,
          30,
          22,
          14,
          6,
          61,
          53,
          45,
          37,
          29,
          21,
          13,
          5,
          28,
          20,
          12,
          4
        ], fe = [
          14,
          17,
          11,
          24,
          1,
          5,
          3,
          28,
          15,
          6,
          21,
          10,
          23,
          19,
          12,
          4,
          26,
          8,
          16,
          7,
          27,
          20,
          13,
          2,
          41,
          52,
          31,
          37,
          47,
          55,
          30,
          40,
          51,
          45,
          33,
          48,
          44,
          49,
          39,
          56,
          34,
          53,
          46,
          42,
          50,
          36,
          29,
          32
        ], Be = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], Ee = [
          {
            0: 8421888,
            268435456: 32768,
            536870912: 8421378,
            805306368: 2,
            1073741824: 512,
            1342177280: 8421890,
            1610612736: 8389122,
            1879048192: 8388608,
            2147483648: 514,
            2415919104: 8389120,
            2684354560: 33280,
            2952790016: 8421376,
            3221225472: 32770,
            3489660928: 8388610,
            3758096384: 0,
            4026531840: 33282,
            134217728: 0,
            402653184: 8421890,
            671088640: 33282,
            939524096: 32768,
            1207959552: 8421888,
            1476395008: 512,
            1744830464: 8421378,
            2013265920: 2,
            2281701376: 8389120,
            2550136832: 33280,
            2818572288: 8421376,
            3087007744: 8389122,
            3355443200: 8388610,
            3623878656: 32770,
            3892314112: 514,
            4160749568: 8388608,
            1: 32768,
            268435457: 2,
            536870913: 8421888,
            805306369: 8388608,
            1073741825: 8421378,
            1342177281: 33280,
            1610612737: 512,
            1879048193: 8389122,
            2147483649: 8421890,
            2415919105: 8421376,
            2684354561: 8388610,
            2952790017: 33282,
            3221225473: 514,
            3489660929: 8389120,
            3758096385: 32770,
            4026531841: 0,
            134217729: 8421890,
            402653185: 8421376,
            671088641: 8388608,
            939524097: 512,
            1207959553: 32768,
            1476395009: 8388610,
            1744830465: 2,
            2013265921: 33282,
            2281701377: 32770,
            2550136833: 8389122,
            2818572289: 514,
            3087007745: 8421888,
            3355443201: 8389120,
            3623878657: 0,
            3892314113: 33280,
            4160749569: 8421378
          },
          {
            0: 1074282512,
            16777216: 16384,
            33554432: 524288,
            50331648: 1074266128,
            67108864: 1073741840,
            83886080: 1074282496,
            100663296: 1073758208,
            117440512: 16,
            134217728: 540672,
            150994944: 1073758224,
            167772160: 1073741824,
            184549376: 540688,
            201326592: 524304,
            218103808: 0,
            234881024: 16400,
            251658240: 1074266112,
            8388608: 1073758208,
            25165824: 540688,
            41943040: 16,
            58720256: 1073758224,
            75497472: 1074282512,
            92274688: 1073741824,
            109051904: 524288,
            125829120: 1074266128,
            142606336: 524304,
            159383552: 0,
            176160768: 16384,
            192937984: 1074266112,
            209715200: 1073741840,
            226492416: 540672,
            243269632: 1074282496,
            260046848: 16400,
            268435456: 0,
            285212672: 1074266128,
            301989888: 1073758224,
            318767104: 1074282496,
            335544320: 1074266112,
            352321536: 16,
            369098752: 540688,
            385875968: 16384,
            402653184: 16400,
            419430400: 524288,
            436207616: 524304,
            452984832: 1073741840,
            469762048: 540672,
            486539264: 1073758208,
            503316480: 1073741824,
            520093696: 1074282512,
            276824064: 540688,
            293601280: 524288,
            310378496: 1074266112,
            327155712: 16384,
            343932928: 1073758208,
            360710144: 1074282512,
            377487360: 16,
            394264576: 1073741824,
            411041792: 1074282496,
            427819008: 1073741840,
            444596224: 1073758224,
            461373440: 524304,
            478150656: 0,
            494927872: 16400,
            511705088: 1074266128,
            528482304: 540672
          },
          {
            0: 260,
            1048576: 0,
            2097152: 67109120,
            3145728: 65796,
            4194304: 65540,
            5242880: 67108868,
            6291456: 67174660,
            7340032: 67174400,
            8388608: 67108864,
            9437184: 67174656,
            10485760: 65792,
            11534336: 67174404,
            12582912: 67109124,
            13631488: 65536,
            14680064: 4,
            15728640: 256,
            524288: 67174656,
            1572864: 67174404,
            2621440: 0,
            3670016: 67109120,
            4718592: 67108868,
            5767168: 65536,
            6815744: 65540,
            7864320: 260,
            8912896: 4,
            9961472: 256,
            11010048: 67174400,
            12058624: 65796,
            13107200: 65792,
            14155776: 67109124,
            15204352: 67174660,
            16252928: 67108864,
            16777216: 67174656,
            17825792: 65540,
            18874368: 65536,
            19922944: 67109120,
            20971520: 256,
            22020096: 67174660,
            23068672: 67108868,
            24117248: 0,
            25165824: 67109124,
            26214400: 67108864,
            27262976: 4,
            28311552: 65792,
            29360128: 67174400,
            30408704: 260,
            31457280: 65796,
            32505856: 67174404,
            17301504: 67108864,
            18350080: 260,
            19398656: 67174656,
            20447232: 0,
            21495808: 65540,
            22544384: 67109120,
            23592960: 256,
            24641536: 67174404,
            25690112: 65536,
            26738688: 67174660,
            27787264: 65796,
            28835840: 67108868,
            29884416: 67109124,
            30932992: 67174400,
            31981568: 4,
            33030144: 65792
          },
          {
            0: 2151682048,
            65536: 2147487808,
            131072: 4198464,
            196608: 2151677952,
            262144: 0,
            327680: 4198400,
            393216: 2147483712,
            458752: 4194368,
            524288: 2147483648,
            589824: 4194304,
            655360: 64,
            720896: 2147487744,
            786432: 2151678016,
            851968: 4160,
            917504: 4096,
            983040: 2151682112,
            32768: 2147487808,
            98304: 64,
            163840: 2151678016,
            229376: 2147487744,
            294912: 4198400,
            360448: 2151682112,
            425984: 0,
            491520: 2151677952,
            557056: 4096,
            622592: 2151682048,
            688128: 4194304,
            753664: 4160,
            819200: 2147483648,
            884736: 4194368,
            950272: 4198464,
            1015808: 2147483712,
            1048576: 4194368,
            1114112: 4198400,
            1179648: 2147483712,
            1245184: 0,
            1310720: 4160,
            1376256: 2151678016,
            1441792: 2151682048,
            1507328: 2147487808,
            1572864: 2151682112,
            1638400: 2147483648,
            1703936: 2151677952,
            1769472: 4198464,
            1835008: 2147487744,
            1900544: 4194304,
            1966080: 64,
            2031616: 4096,
            1081344: 2151677952,
            1146880: 2151682112,
            1212416: 0,
            1277952: 4198400,
            1343488: 4194368,
            1409024: 2147483648,
            1474560: 2147487808,
            1540096: 64,
            1605632: 2147483712,
            1671168: 4096,
            1736704: 2147487744,
            1802240: 2151678016,
            1867776: 4160,
            1933312: 2151682048,
            1998848: 4194304,
            2064384: 4198464
          },
          {
            0: 128,
            4096: 17039360,
            8192: 262144,
            12288: 536870912,
            16384: 537133184,
            20480: 16777344,
            24576: 553648256,
            28672: 262272,
            32768: 16777216,
            36864: 537133056,
            40960: 536871040,
            45056: 553910400,
            49152: 553910272,
            53248: 0,
            57344: 17039488,
            61440: 553648128,
            2048: 17039488,
            6144: 553648256,
            10240: 128,
            14336: 17039360,
            18432: 262144,
            22528: 537133184,
            26624: 553910272,
            30720: 536870912,
            34816: 537133056,
            38912: 0,
            43008: 553910400,
            47104: 16777344,
            51200: 536871040,
            55296: 553648128,
            59392: 16777216,
            63488: 262272,
            65536: 262144,
            69632: 128,
            73728: 536870912,
            77824: 553648256,
            81920: 16777344,
            86016: 553910272,
            90112: 537133184,
            94208: 16777216,
            98304: 553910400,
            102400: 553648128,
            106496: 17039360,
            110592: 537133056,
            114688: 262272,
            118784: 536871040,
            122880: 0,
            126976: 17039488,
            67584: 553648256,
            71680: 16777216,
            75776: 17039360,
            79872: 537133184,
            83968: 536870912,
            88064: 17039488,
            92160: 128,
            96256: 553910272,
            100352: 262272,
            104448: 553910400,
            108544: 0,
            112640: 553648128,
            116736: 16777344,
            120832: 262144,
            124928: 537133056,
            129024: 536871040
          },
          {
            0: 268435464,
            256: 8192,
            512: 270532608,
            768: 270540808,
            1024: 268443648,
            1280: 2097152,
            1536: 2097160,
            1792: 268435456,
            2048: 0,
            2304: 268443656,
            2560: 2105344,
            2816: 8,
            3072: 270532616,
            3328: 2105352,
            3584: 8200,
            3840: 270540800,
            128: 270532608,
            384: 270540808,
            640: 8,
            896: 2097152,
            1152: 2105352,
            1408: 268435464,
            1664: 268443648,
            1920: 8200,
            2176: 2097160,
            2432: 8192,
            2688: 268443656,
            2944: 270532616,
            3200: 0,
            3456: 270540800,
            3712: 2105344,
            3968: 268435456,
            4096: 268443648,
            4352: 270532616,
            4608: 270540808,
            4864: 8200,
            5120: 2097152,
            5376: 268435456,
            5632: 268435464,
            5888: 2105344,
            6144: 2105352,
            6400: 0,
            6656: 8,
            6912: 270532608,
            7168: 8192,
            7424: 268443656,
            7680: 270540800,
            7936: 2097160,
            4224: 8,
            4480: 2105344,
            4736: 2097152,
            4992: 268435464,
            5248: 268443648,
            5504: 8200,
            5760: 270540808,
            6016: 270532608,
            6272: 270540800,
            6528: 270532616,
            6784: 8192,
            7040: 2105352,
            7296: 2097160,
            7552: 0,
            7808: 268435456,
            8064: 268443656
          },
          {
            0: 1048576,
            16: 33555457,
            32: 1024,
            48: 1049601,
            64: 34604033,
            80: 0,
            96: 1,
            112: 34603009,
            128: 33555456,
            144: 1048577,
            160: 33554433,
            176: 34604032,
            192: 34603008,
            208: 1025,
            224: 1049600,
            240: 33554432,
            8: 34603009,
            24: 0,
            40: 33555457,
            56: 34604032,
            72: 1048576,
            88: 33554433,
            104: 33554432,
            120: 1025,
            136: 1049601,
            152: 33555456,
            168: 34603008,
            184: 1048577,
            200: 1024,
            216: 34604033,
            232: 1,
            248: 1049600,
            256: 33554432,
            272: 1048576,
            288: 33555457,
            304: 34603009,
            320: 1048577,
            336: 33555456,
            352: 34604032,
            368: 1049601,
            384: 1025,
            400: 34604033,
            416: 1049600,
            432: 1,
            448: 0,
            464: 34603008,
            480: 33554433,
            496: 1024,
            264: 1049600,
            280: 33555457,
            296: 34603009,
            312: 1,
            328: 33554432,
            344: 1048576,
            360: 1025,
            376: 34604032,
            392: 33554433,
            408: 34603008,
            424: 0,
            440: 34604033,
            456: 1049601,
            472: 1024,
            488: 33555456,
            504: 1048577
          },
          {
            0: 134219808,
            1: 131072,
            2: 134217728,
            3: 32,
            4: 131104,
            5: 134350880,
            6: 134350848,
            7: 2048,
            8: 134348800,
            9: 134219776,
            10: 133120,
            11: 134348832,
            12: 2080,
            13: 0,
            14: 134217760,
            15: 133152,
            2147483648: 2048,
            2147483649: 134350880,
            2147483650: 134219808,
            2147483651: 134217728,
            2147483652: 134348800,
            2147483653: 133120,
            2147483654: 133152,
            2147483655: 32,
            2147483656: 134217760,
            2147483657: 2080,
            2147483658: 131104,
            2147483659: 134350848,
            2147483660: 0,
            2147483661: 134348832,
            2147483662: 134219776,
            2147483663: 131072,
            16: 133152,
            17: 134350848,
            18: 32,
            19: 2048,
            20: 134219776,
            21: 134217760,
            22: 134348832,
            23: 131072,
            24: 0,
            25: 131104,
            26: 134348800,
            27: 134219808,
            28: 134350880,
            29: 133120,
            30: 2080,
            31: 134217728,
            2147483664: 131072,
            2147483665: 2048,
            2147483666: 134348832,
            2147483667: 133152,
            2147483668: 32,
            2147483669: 134348800,
            2147483670: 134217728,
            2147483671: 134219808,
            2147483672: 134350880,
            2147483673: 134217760,
            2147483674: 134219776,
            2147483675: 0,
            2147483676: 133120,
            2147483677: 2080,
            2147483678: 131104,
            2147483679: 134350848
          }
        ], me = [
          4160749569,
          528482304,
          33030144,
          2064384,
          129024,
          8064,
          504,
          2147483679
        ], ge = de.DES = le.extend({
          _doReset: function() {
            for (var He = this._key, Se = He.words, Ge = [], Fe = 0; Fe < 56; Fe++) {
              var Pe = ye[Fe] - 1;
              Ge[Fe] = Se[Pe >>> 5] >>> 31 - Pe % 32 & 1;
            }
            for (var Je = this._subKeys = [], tt = 0; tt < 16; tt++) {
              for (var ft = Je[tt] = [], Tt = Be[tt], Fe = 0; Fe < 24; Fe++)
                ft[Fe / 6 | 0] |= Ge[(fe[Fe] - 1 + Tt) % 28] << 31 - Fe % 6, ft[4 + (Fe / 6 | 0)] |= Ge[28 + (fe[Fe + 24] - 1 + Tt) % 28] << 31 - Fe % 6;
              ft[0] = ft[0] << 1 | ft[0] >>> 31;
              for (var Fe = 1; Fe < 7; Fe++)
                ft[Fe] = ft[Fe] >>> (Fe - 1) * 4 + 3;
              ft[7] = ft[7] << 5 | ft[7] >>> 27;
            }
            for (var Xe = this._invSubKeys = [], Fe = 0; Fe < 16; Fe++)
              Xe[Fe] = Je[15 - Fe];
          },
          encryptBlock: function(He, Se) {
            this._doCryptBlock(He, Se, this._subKeys);
          },
          decryptBlock: function(He, Se) {
            this._doCryptBlock(He, Se, this._invSubKeys);
          },
          _doCryptBlock: function(He, Se, Ge) {
            this._lBlock = He[Se], this._rBlock = He[Se + 1], we.call(this, 4, 252645135), we.call(this, 16, 65535), be.call(this, 2, 858993459), be.call(this, 8, 16711935), we.call(this, 1, 1431655765);
            for (var Fe = 0; Fe < 16; Fe++) {
              for (var Pe = Ge[Fe], Je = this._lBlock, tt = this._rBlock, ft = 0, Tt = 0; Tt < 8; Tt++)
                ft |= Ee[Tt][((tt ^ Pe[Tt]) & me[Tt]) >>> 0];
              this._lBlock = tt, this._rBlock = Je ^ ft;
            }
            var Xe = this._lBlock;
            this._lBlock = this._rBlock, this._rBlock = Xe, we.call(this, 1, 1431655765), be.call(this, 8, 16711935), be.call(this, 2, 858993459), we.call(this, 16, 65535), we.call(this, 4, 252645135), He[Se] = this._lBlock, He[Se + 1] = this._rBlock;
          },
          keySize: 64 / 32,
          ivSize: 64 / 32,
          blockSize: 64 / 32
        });
        function we(He, Se) {
          var Ge = (this._lBlock >>> He ^ this._rBlock) & Se;
          this._rBlock ^= Ge, this._lBlock ^= Ge << He;
        }
        function be(He, Se) {
          var Ge = (this._rBlock >>> He ^ this._lBlock) & Se;
          this._lBlock ^= Ge, this._rBlock ^= Ge << He;
        }
        ie.DES = le._createHelper(ge);
        var Oe = de.TripleDES = le.extend({
          _doReset: function() {
            var He = this._key, Se = He.words;
            if (Se.length !== 2 && Se.length !== 4 && Se.length < 6)
              throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
            var Ge = Se.slice(0, 2), Fe = Se.length < 4 ? Se.slice(0, 2) : Se.slice(2, 4), Pe = Se.length < 6 ? Se.slice(0, 2) : Se.slice(4, 6);
            this._des1 = ge.createEncryptor(ce.create(Ge)), this._des2 = ge.createEncryptor(ce.create(Fe)), this._des3 = ge.createEncryptor(ce.create(Pe));
          },
          encryptBlock: function(He, Se) {
            this._des1.encryptBlock(He, Se), this._des2.decryptBlock(He, Se), this._des3.encryptBlock(He, Se);
          },
          decryptBlock: function(He, Se) {
            this._des3.decryptBlock(He, Se), this._des2.encryptBlock(He, Se), this._des1.decryptBlock(He, Se);
          },
          keySize: 192 / 32,
          ivSize: 64 / 32,
          blockSize: 64 / 32
        });
        ie.TripleDES = le._createHelper(Oe);
      }(), ne.TripleDES;
    });
  }(tripledes)), tripledes.exports;
}
var rc4 = { exports: {} }, hasRequiredRc4;
function requireRc4() {
  return hasRequiredRc4 || (hasRequiredRc4 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.StreamCipher, le = ie.algo, de = le.RC4 = ce.extend({
          _doReset: function() {
            for (var Be = this._key, Ee = Be.words, me = Be.sigBytes, ge = this._S = [], we = 0; we < 256; we++)
              ge[we] = we;
            for (var we = 0, be = 0; we < 256; we++) {
              var Oe = we % me, He = Ee[Oe >>> 2] >>> 24 - Oe % 4 * 8 & 255;
              be = (be + ge[we] + He) % 256;
              var Se = ge[we];
              ge[we] = ge[be], ge[be] = Se;
            }
            this._i = this._j = 0;
          },
          _doProcessBlock: function(Be, Ee) {
            Be[Ee] ^= ye.call(this);
          },
          keySize: 256 / 32,
          ivSize: 0
        });
        function ye() {
          for (var Be = this._S, Ee = this._i, me = this._j, ge = 0, we = 0; we < 4; we++) {
            Ee = (Ee + 1) % 256, me = (me + Be[Ee]) % 256;
            var be = Be[Ee];
            Be[Ee] = Be[me], Be[me] = be, ge |= Be[(Be[Ee] + Be[me]) % 256] << 24 - we * 8;
          }
          return this._i = Ee, this._j = me, ge;
        }
        ie.RC4 = ce._createHelper(de);
        var fe = le.RC4Drop = de.extend({
          cfg: de.cfg.extend({
            drop: 192
          }),
          _doReset: function() {
            de._doReset.call(this);
            for (var Be = this.cfg.drop; Be > 0; Be--)
              ye.call(this);
          }
        });
        ie.RC4Drop = ce._createHelper(fe);
      }(), ne.RC4;
    });
  }(rc4)), rc4.exports;
}
var rabbit = { exports: {} }, hasRequiredRabbit;
function requireRabbit() {
  return hasRequiredRabbit || (hasRequiredRabbit = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.StreamCipher, le = ie.algo, de = [], ye = [], fe = [], Be = le.Rabbit = ce.extend({
          _doReset: function() {
            for (var me = this._key.words, ge = this.cfg.iv, we = 0; we < 4; we++)
              me[we] = (me[we] << 8 | me[we] >>> 24) & 16711935 | (me[we] << 24 | me[we] >>> 8) & 4278255360;
            var be = this._X = [
              me[0],
              me[3] << 16 | me[2] >>> 16,
              me[1],
              me[0] << 16 | me[3] >>> 16,
              me[2],
              me[1] << 16 | me[0] >>> 16,
              me[3],
              me[2] << 16 | me[1] >>> 16
            ], Oe = this._C = [
              me[2] << 16 | me[2] >>> 16,
              me[0] & 4294901760 | me[1] & 65535,
              me[3] << 16 | me[3] >>> 16,
              me[1] & 4294901760 | me[2] & 65535,
              me[0] << 16 | me[0] >>> 16,
              me[2] & 4294901760 | me[3] & 65535,
              me[1] << 16 | me[1] >>> 16,
              me[3] & 4294901760 | me[0] & 65535
            ];
            this._b = 0;
            for (var we = 0; we < 4; we++)
              Ee.call(this);
            for (var we = 0; we < 8; we++)
              Oe[we] ^= be[we + 4 & 7];
            if (ge) {
              var He = ge.words, Se = He[0], Ge = He[1], Fe = (Se << 8 | Se >>> 24) & 16711935 | (Se << 24 | Se >>> 8) & 4278255360, Pe = (Ge << 8 | Ge >>> 24) & 16711935 | (Ge << 24 | Ge >>> 8) & 4278255360, Je = Fe >>> 16 | Pe & 4294901760, tt = Pe << 16 | Fe & 65535;
              Oe[0] ^= Fe, Oe[1] ^= Je, Oe[2] ^= Pe, Oe[3] ^= tt, Oe[4] ^= Fe, Oe[5] ^= Je, Oe[6] ^= Pe, Oe[7] ^= tt;
              for (var we = 0; we < 4; we++)
                Ee.call(this);
            }
          },
          _doProcessBlock: function(me, ge) {
            var we = this._X;
            Ee.call(this), de[0] = we[0] ^ we[5] >>> 16 ^ we[3] << 16, de[1] = we[2] ^ we[7] >>> 16 ^ we[5] << 16, de[2] = we[4] ^ we[1] >>> 16 ^ we[7] << 16, de[3] = we[6] ^ we[3] >>> 16 ^ we[1] << 16;
            for (var be = 0; be < 4; be++)
              de[be] = (de[be] << 8 | de[be] >>> 24) & 16711935 | (de[be] << 24 | de[be] >>> 8) & 4278255360, me[ge + be] ^= de[be];
          },
          blockSize: 128 / 32,
          ivSize: 64 / 32
        });
        function Ee() {
          for (var me = this._X, ge = this._C, we = 0; we < 8; we++)
            ye[we] = ge[we];
          ge[0] = ge[0] + 1295307597 + this._b | 0, ge[1] = ge[1] + 3545052371 + (ge[0] >>> 0 < ye[0] >>> 0 ? 1 : 0) | 0, ge[2] = ge[2] + 886263092 + (ge[1] >>> 0 < ye[1] >>> 0 ? 1 : 0) | 0, ge[3] = ge[3] + 1295307597 + (ge[2] >>> 0 < ye[2] >>> 0 ? 1 : 0) | 0, ge[4] = ge[4] + 3545052371 + (ge[3] >>> 0 < ye[3] >>> 0 ? 1 : 0) | 0, ge[5] = ge[5] + 886263092 + (ge[4] >>> 0 < ye[4] >>> 0 ? 1 : 0) | 0, ge[6] = ge[6] + 1295307597 + (ge[5] >>> 0 < ye[5] >>> 0 ? 1 : 0) | 0, ge[7] = ge[7] + 3545052371 + (ge[6] >>> 0 < ye[6] >>> 0 ? 1 : 0) | 0, this._b = ge[7] >>> 0 < ye[7] >>> 0 ? 1 : 0;
          for (var we = 0; we < 8; we++) {
            var be = me[we] + ge[we], Oe = be & 65535, He = be >>> 16, Se = ((Oe * Oe >>> 17) + Oe * He >>> 15) + He * He, Ge = ((be & 4294901760) * be | 0) + ((be & 65535) * be | 0);
            fe[we] = Se ^ Ge;
          }
          me[0] = fe[0] + (fe[7] << 16 | fe[7] >>> 16) + (fe[6] << 16 | fe[6] >>> 16) | 0, me[1] = fe[1] + (fe[0] << 8 | fe[0] >>> 24) + fe[7] | 0, me[2] = fe[2] + (fe[1] << 16 | fe[1] >>> 16) + (fe[0] << 16 | fe[0] >>> 16) | 0, me[3] = fe[3] + (fe[2] << 8 | fe[2] >>> 24) + fe[1] | 0, me[4] = fe[4] + (fe[3] << 16 | fe[3] >>> 16) + (fe[2] << 16 | fe[2] >>> 16) | 0, me[5] = fe[5] + (fe[4] << 8 | fe[4] >>> 24) + fe[3] | 0, me[6] = fe[6] + (fe[5] << 16 | fe[5] >>> 16) + (fe[4] << 16 | fe[4] >>> 16) | 0, me[7] = fe[7] + (fe[6] << 8 | fe[6] >>> 24) + fe[5] | 0;
        }
        ie.Rabbit = ce._createHelper(Be);
      }(), ne.Rabbit;
    });
  }(rabbit)), rabbit.exports;
}
var rabbitLegacy = { exports: {} }, hasRequiredRabbitLegacy;
function requireRabbitLegacy() {
  return hasRequiredRabbitLegacy || (hasRequiredRabbitLegacy = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.StreamCipher, le = ie.algo, de = [], ye = [], fe = [], Be = le.RabbitLegacy = ce.extend({
          _doReset: function() {
            var me = this._key.words, ge = this.cfg.iv, we = this._X = [
              me[0],
              me[3] << 16 | me[2] >>> 16,
              me[1],
              me[0] << 16 | me[3] >>> 16,
              me[2],
              me[1] << 16 | me[0] >>> 16,
              me[3],
              me[2] << 16 | me[1] >>> 16
            ], be = this._C = [
              me[2] << 16 | me[2] >>> 16,
              me[0] & 4294901760 | me[1] & 65535,
              me[3] << 16 | me[3] >>> 16,
              me[1] & 4294901760 | me[2] & 65535,
              me[0] << 16 | me[0] >>> 16,
              me[2] & 4294901760 | me[3] & 65535,
              me[1] << 16 | me[1] >>> 16,
              me[3] & 4294901760 | me[0] & 65535
            ];
            this._b = 0;
            for (var Oe = 0; Oe < 4; Oe++)
              Ee.call(this);
            for (var Oe = 0; Oe < 8; Oe++)
              be[Oe] ^= we[Oe + 4 & 7];
            if (ge) {
              var He = ge.words, Se = He[0], Ge = He[1], Fe = (Se << 8 | Se >>> 24) & 16711935 | (Se << 24 | Se >>> 8) & 4278255360, Pe = (Ge << 8 | Ge >>> 24) & 16711935 | (Ge << 24 | Ge >>> 8) & 4278255360, Je = Fe >>> 16 | Pe & 4294901760, tt = Pe << 16 | Fe & 65535;
              be[0] ^= Fe, be[1] ^= Je, be[2] ^= Pe, be[3] ^= tt, be[4] ^= Fe, be[5] ^= Je, be[6] ^= Pe, be[7] ^= tt;
              for (var Oe = 0; Oe < 4; Oe++)
                Ee.call(this);
            }
          },
          _doProcessBlock: function(me, ge) {
            var we = this._X;
            Ee.call(this), de[0] = we[0] ^ we[5] >>> 16 ^ we[3] << 16, de[1] = we[2] ^ we[7] >>> 16 ^ we[5] << 16, de[2] = we[4] ^ we[1] >>> 16 ^ we[7] << 16, de[3] = we[6] ^ we[3] >>> 16 ^ we[1] << 16;
            for (var be = 0; be < 4; be++)
              de[be] = (de[be] << 8 | de[be] >>> 24) & 16711935 | (de[be] << 24 | de[be] >>> 8) & 4278255360, me[ge + be] ^= de[be];
          },
          blockSize: 128 / 32,
          ivSize: 64 / 32
        });
        function Ee() {
          for (var me = this._X, ge = this._C, we = 0; we < 8; we++)
            ye[we] = ge[we];
          ge[0] = ge[0] + 1295307597 + this._b | 0, ge[1] = ge[1] + 3545052371 + (ge[0] >>> 0 < ye[0] >>> 0 ? 1 : 0) | 0, ge[2] = ge[2] + 886263092 + (ge[1] >>> 0 < ye[1] >>> 0 ? 1 : 0) | 0, ge[3] = ge[3] + 1295307597 + (ge[2] >>> 0 < ye[2] >>> 0 ? 1 : 0) | 0, ge[4] = ge[4] + 3545052371 + (ge[3] >>> 0 < ye[3] >>> 0 ? 1 : 0) | 0, ge[5] = ge[5] + 886263092 + (ge[4] >>> 0 < ye[4] >>> 0 ? 1 : 0) | 0, ge[6] = ge[6] + 1295307597 + (ge[5] >>> 0 < ye[5] >>> 0 ? 1 : 0) | 0, ge[7] = ge[7] + 3545052371 + (ge[6] >>> 0 < ye[6] >>> 0 ? 1 : 0) | 0, this._b = ge[7] >>> 0 < ye[7] >>> 0 ? 1 : 0;
          for (var we = 0; we < 8; we++) {
            var be = me[we] + ge[we], Oe = be & 65535, He = be >>> 16, Se = ((Oe * Oe >>> 17) + Oe * He >>> 15) + He * He, Ge = ((be & 4294901760) * be | 0) + ((be & 65535) * be | 0);
            fe[we] = Se ^ Ge;
          }
          me[0] = fe[0] + (fe[7] << 16 | fe[7] >>> 16) + (fe[6] << 16 | fe[6] >>> 16) | 0, me[1] = fe[1] + (fe[0] << 8 | fe[0] >>> 24) + fe[7] | 0, me[2] = fe[2] + (fe[1] << 16 | fe[1] >>> 16) + (fe[0] << 16 | fe[0] >>> 16) | 0, me[3] = fe[3] + (fe[2] << 8 | fe[2] >>> 24) + fe[1] | 0, me[4] = fe[4] + (fe[3] << 16 | fe[3] >>> 16) + (fe[2] << 16 | fe[2] >>> 16) | 0, me[5] = fe[5] + (fe[4] << 8 | fe[4] >>> 24) + fe[3] | 0, me[6] = fe[6] + (fe[5] << 16 | fe[5] >>> 16) + (fe[4] << 16 | fe[4] >>> 16) | 0, me[7] = fe[7] + (fe[6] << 8 | fe[6] >>> 24) + fe[5] | 0;
        }
        ie.RabbitLegacy = ce._createHelper(Be);
      }(), ne.RabbitLegacy;
    });
  }(rabbitLegacy)), rabbitLegacy.exports;
}
(function(Q, ee) {
  (function(ne, ie, ae) {
    Q.exports = ie(requireCore(), requireX64Core(), requireLibTypedarrays(), requireEncUtf16(), requireEncBase64(), requireEncBase64url(), requireMd5(), requireSha1(), requireSha256(), requireSha224(), requireSha512(), requireSha384(), requireSha3(), requireRipemd160(), requireHmac(), requirePbkdf2(), requireEvpkdf(), requireCipherCore(), requireModeCfb(), requireModeCtr(), requireModeCtrGladman(), requireModeOfb(), requireModeEcb(), requirePadAnsix923(), requirePadIso10126(), requirePadIso97971(), requirePadZeropadding(), requirePadNopadding(), requireFormatHex(), requireAes(), requireTripledes(), requireRc4(), requireRabbit(), requireRabbitLegacy());
  })(commonjsGlobal, function(ne) {
    return ne;
  });
})(cryptoJs);
var Buffer = buffer$1.Buffer, CRC_TABLE = [
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
];
typeof Int32Array < "u" && (CRC_TABLE = new Int32Array(CRC_TABLE));
function ensureBuffer(Q) {
  if (Buffer.isBuffer(Q))
    return Q;
  var ee = typeof Buffer.alloc == "function" && typeof Buffer.from == "function";
  if (typeof Q == "number")
    return ee ? Buffer.alloc(Q) : new Buffer(Q);
  if (typeof Q == "string")
    return ee ? Buffer.from(Q) : new Buffer(Q);
  throw new Error("input must be buffer, number, or string, received " + typeof Q);
}
function bufferizeInt(Q) {
  var ee = ensureBuffer(4);
  return ee.writeInt32BE(Q, 0), ee;
}
function _crc32(Q, ee) {
  Q = ensureBuffer(Q), Buffer.isBuffer(ee) && (ee = ee.readUInt32BE(0));
  for (var ne = ~~ee ^ -1, ie = 0; ie < Q.length; ie++)
    ne = CRC_TABLE[(ne ^ Q[ie]) & 255] ^ ne >>> 8;
  return ne ^ -1;
}
function crc32() {
  return bufferizeInt(_crc32.apply(null, arguments));
}
crc32.signed = function() {
  return _crc32.apply(null, arguments);
};
crc32.unsigned = function() {
  return _crc32.apply(null, arguments) >>> 0;
};
var bufferCrc32 = crc32, __importDefault$8 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(account, "__esModule", { value: !0 });
account.getAccountId = void 0;
const crypto_js_1 = __importDefault$8(cryptoJs.exports), buffer_crc32_1 = __importDefault$8(bufferCrc32), ACCOUNT_DOMAIN_SEPERATOR = `
account-id`, SUB_ACCOUNT_ZERO = buffer$1.Buffer.alloc(32), byteArrayToWordArray = (Q) => {
  const ee = [];
  let ne;
  for (ne = 0; ne < Q.length; ne += 1)
    ee[ne / 4 | 0] |= Q[ne] << 24 - 8 * ne;
  return crypto_js_1.default.lib.WordArray.create(ee, Q.length);
}, wordToByteArray = (Q, ee) => {
  const ne = [];
  return ee > 0 && ne.push(Q >>> 24), ee > 1 && ne.push(Q >>> 16 & 255), ee > 2 && ne.push(Q >>> 8 & 255), ee > 3 && ne.push(Q & 255), ne;
}, wordArrayToByteArray = (Q, ee) => {
  Q.hasOwnProperty("sigBytes") && Q.hasOwnProperty("words") && (ee = Q.sigBytes, Q = Q.words);
  let ne = [], ie, ae = 0;
  for (; ee > 0; )
    ie = wordToByteArray(Q[ae], Math.min(4, ee)), ee -= ie.length, ne = [...ne, ie], ae++;
  return [].concat.apply([], ne);
}, intToHex = (Q) => Q < 0 ? (Number(Q) >>> 0).toString(16) : Number(Q).toString(16), generateChecksum = (Q) => {
  const ee = buffer_crc32_1.default.unsigned(buffer$1.Buffer.from(Q));
  return intToHex(ee).padStart(8, "0");
}, getAccountId = (Q, ee) => {
  const ne = crypto_js_1.default.algo.SHA224.create();
  ne.update(ACCOUNT_DOMAIN_SEPERATOR), ne.update(byteArrayToWordArray(Q.toUint8Array()));
  const ie = buffer$1.Buffer.from(SUB_ACCOUNT_ZERO);
  ee && ie.writeUInt32BE(ee), ne.update(byteArrayToWordArray(ie));
  const ae = ne.finalize(), ce = wordArrayToByteArray(ae, 28);
  return generateChecksum(ce) + ae.toString();
};
account.getAccountId = getAccountId;
account.default = {};
var number = {};
Object.defineProperty(number, "__esModule", { value: !0 });
number.from32bits = number.to32bits = void 0;
const to32bits = (Q) => {
  const ee = new ArrayBuffer(4);
  return new DataView(ee).setUint32(0, Q), Array.from(new Uint8Array(ee));
};
number.to32bits = to32bits;
const from32bits = (Q) => {
  let ee;
  for (let ne = 0; ne < 4; ne += 1)
    ee = ee << 8 | Q[ne];
  return ee;
};
number.from32bits = from32bits;
var canisters = {};
Object.defineProperty(canisters, "__esModule", { value: !0 });
canisters.NFT_CANISTERS = void 0;
canisters.NFT_CANISTERS = {
  WRAPPED_PUNKS: "bxdf4-baaaa-aaaah-qaruq-cai",
  WRAPPED_DRIP: "3db6u-aiaaa-aaaah-qbjbq-cai",
  IC_PUNKS: "qcg3w-tyaaa-aaaah-qakea-cai",
  IC_DRIP: "d3ttm-qaaaa-aaaai-qam4a-cai",
  ICP_BUNNY_MAIN: "xkbqi-2qaaa-aaaah-qbpqq-cai",
  ICP_BUNNY_STORAGE: [
    "efqhu-yqaaa-aaaaf-qaeda-cai",
    "ecrba-viaaa-aaaaf-qaedq-cai",
    "fp7fo-2aaaa-aaaaf-qaeea-cai",
    "fi6d2-xyaaa-aaaaf-qaeeq-cai",
    "fb5ig-bqaaa-aaaaf-qaefa-cai",
    "fg4os-miaaa-aaaaf-qaefq-cai",
    "ft377-naaaa-aaaaf-qaega-cai",
    "fu2zl-ayaaa-aaaaf-qaegq-cai",
    "f5zsx-wqaaa-aaaaf-qaeha-cai",
    "f2yud-3iaaa-aaaaf-qaehq-cai"
  ]
};
var standards = {};
(function(Q) {
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.NFT = Q.TOKEN = void 0, Q.TOKEN = {
    dip20: "DIP20",
    xtc: "XTC",
    wicp: "WICP",
    ext: "EXT",
    icp: "ICP",
    rosetta: "ROSETTA"
  }, Q.NFT = {
    ext: "EXT",
    icpunks: "ICPunks",
    departuresLabs: "DepartureLabs",
    erc721: "ERC721",
    dip721: "DIP721",
    c3: "C3",
    nftOrigyn: "nftOrigyn"
  }, Q.default = {
    TOKEN: Q.TOKEN,
    NFT: Q.NFT
  };
})(standards);
var __awaiter$c = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$7 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(ext, "__esModule", { value: !0 });
const agent_1$7 = require$$5, principal_1$6 = require$$4, ext_did_1 = __importDefault$7(ext_did), default_1$5 = __importDefault$7(_default), account_1$1 = account, number_1 = number, canisters_1$1 = canisters, standards_1$5 = standards, getTokenIdentifier = (Q, ee) => {
  const ne = buffer$1.Buffer.from(`
tid`), ie = new Uint8Array([
    ...ne,
    ...principal_1$6.Principal.fromText(Q).toUint8Array(),
    ...(0, number_1.to32bits)(ee)
  ]);
  return principal_1$6.Principal.fromUint8Array(ie).toText();
}, extImageUrl = (Q, ee, ne) => ({
  [canisters_1$1.NFT_CANISTERS.WRAPPED_PUNKS]: `https://${canisters_1$1.NFT_CANISTERS.IC_PUNKS}.raw.ic0.app/Token/${ee}`,
  [canisters_1$1.NFT_CANISTERS.WRAPPED_DRIP]: `https://${canisters_1$1.NFT_CANISTERS.IC_DRIP}.raw.ic0.app?tokenId=${ee}`
})[Q] || `https://${Q}.raw.ic0.app/?type=thumbnail&tokenid=${ne}`;
class EXT extends default_1$5.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$5.NFT.ext, this.actor = agent_1$7.Actor.createActor(ext_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getUserTokens(ee) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ne = (0, account_1$1.getAccountId)(ee), ie = yield this.actor.tokens_ext(ne);
      if ("err" in ie)
        throw new Error(`${Object.keys(ie.err)[0]}: ${Object.values(ie.err)[0]}`);
      return (ie.ok || []).map((ce) => {
        const le = ce[2], de = ce[0];
        return this.serializeTokenData(le, getTokenIdentifier(this.canisterId, de), de);
      });
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  transfer(ee, ne) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ie = getTokenIdentifier(this.canisterId, ne), ae = yield this.agent.getPrincipal(), ce = new Array(32).fill(0), le = yield this.actor.transfer({
        to: { principal: ee },
        from: { principal: ae },
        token: ie,
        amount: BigInt(1),
        memo: ce,
        notify: !1,
        subaccount: [],
        fee: BigInt(0)
      });
      if ("err" in le)
        throw new Error(`${Object.keys(le.err)[0]}: ${Object.values(le.err)[0]}`);
    });
  }
  details(ee) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ne = getTokenIdentifier(this.canisterId, ee), ie = yield this.actor.metadata(ne);
      if ("err" in ie)
        throw new Error(`${Object.keys(ie.err)[0]}: ${Object.values(ie.err)[0]}`);
      const { metadata: ae = {} } = "nonfungible" in ie.ok ? ie.ok.nonfungible : {};
      return this.serializeTokenData(ae, ne, ee);
    });
  }
  serializeTokenData(ee, ne, ie) {
    return {
      id: ne,
      index: BigInt(ie),
      canister: this.canisterId,
      metadata: ee.length ? ee[0] : void 0,
      url: extImageUrl(this.canisterId, ie, ne),
      standard: this.standard
    };
  }
}
ext.default = EXT;
var ic_punks = {}, icpunks_did = {};
Object.defineProperty(icpunks_did, "__esModule", { value: !0 });
icpunks_did.init = void 0;
icpunks_did.default = ({ IDL: Q }) => {
  const ee = Q.Record({ value: Q.Text, name: Q.Text }), ne = Q.Record({
    id: Q.Nat,
    url: Q.Text,
    owner: Q.Principal,
    desc: Q.Text,
    name: Q.Text,
    properties: Q.Vec(ee)
  }), ie = Q.Nat;
  return Q.Service({
    data_of: Q.Func([ie], [ne], []),
    transfer_to: Q.Func([Q.Principal, ie], [Q.Bool], []),
    user_tokens: Q.Func([Q.Principal], [Q.Vec(Q.Nat)], [])
  });
};
const init$c = ({ IDL: Q }) => [Q.Text, Q.Text, Q.Nat, Q.Principal];
icpunks_did.init = init$c;
var __awaiter$b = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$6 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(ic_punks, "__esModule", { value: !0 });
const agent_1$6 = require$$5, icpunks_did_1 = __importDefault$6(icpunks_did), default_1$4 = __importDefault$6(_default), canisters_1 = canisters, standards_1$4 = standards, getICPBunnyCanisterId = (Q) => canisters_1.NFT_CANISTERS.ICP_BUNNY_STORAGE[Q % 10], imageUrl = (Q, ee, ne) => ({
  [canisters_1.NFT_CANISTERS.ICP_BUNNY_MAIN]: `https://${getICPBunnyCanisterId(ee)}.raw.ic0.app/Token/${ee}`
})[Q] || `https://${Q}.raw.ic0.app${ne}`;
class ICPUNKS extends default_1$4.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$4.NFT.icpunks, this.serializeTokenData = (ie) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: imageUrl(this.canisterId, Number.parseInt(ie.id.toString(), 10), ie.url),
      name: ie.name,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$6.Actor.createActor(icpunks_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$b(this, void 0, void 0, function* () {
      const ne = yield this.actor.user_tokens(ee);
      return (yield Promise.all(ne.map((ae) => this.actor.data_of(ae)))).map((ae) => this.serializeTokenData(ae));
    });
  }
  transfer(ee, ne) {
    return __awaiter$b(this, void 0, void 0, function* () {
      if (!(yield this.actor.transfer_to(ee, BigInt(ne))))
        throw new Error("Error transfering token");
    });
  }
  details(ee) {
    return __awaiter$b(this, void 0, void 0, function* () {
      const ne = yield this.actor.data_of(BigInt(ee));
      return this.serializeTokenData(ne);
    });
  }
}
ic_punks.default = ICPUNKS;
var nft_origyn = {}, nft_origyn_did = {};
Object.defineProperty(nft_origyn_did, "__esModule", { value: !0 });
nft_origyn_did.init = void 0;
nft_origyn_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec(), ne = Q.Rec(), ie = Q.Principal;
  Q.Record({
    owner: ie,
    storage_space: Q.Opt(Q.Nat)
  });
  const ae = Q.Text, ce = Q.Text, le = Q.Variant({
    principal: Q.Principal,
    address: ce
  }), de = Q.Record({
    token: ae,
    user: le
  }), ye = Q.Nat, fe = Q.Variant({
    InvalidToken: ae,
    Other: Q.Text
  }), Be = Q.Variant({
    ok: ye,
    err: fe
  }), Ee = Q.Record({
    value: ee,
    name: Q.Text,
    immutable: Q.Bool
  });
  ee.fill(Q.Variant({
    Int: Q.Int,
    Nat: Q.Nat,
    Empty: Q.Null,
    Nat16: Q.Nat16,
    Nat32: Q.Nat32,
    Nat64: Q.Nat64,
    Blob: Q.Vec(Q.Nat8),
    Bool: Q.Bool,
    Int8: Q.Int8,
    Nat8: Q.Nat8,
    Nats: Q.Variant({
      thawed: Q.Vec(Q.Nat),
      frozen: Q.Vec(Q.Nat)
    }),
    Text: Q.Text,
    Bytes: Q.Variant({
      thawed: Q.Vec(Q.Nat8),
      frozen: Q.Vec(Q.Nat8)
    }),
    Int16: Q.Int16,
    Int32: Q.Int32,
    Int64: Q.Int64,
    Option: Q.Opt(ee),
    Floats: Q.Variant({
      thawed: Q.Vec(Q.Float64),
      frozen: Q.Vec(Q.Float64)
    }),
    Float: Q.Float64,
    Principal: Q.Principal,
    Array: Q.Variant({
      thawed: Q.Vec(ee),
      frozen: Q.Vec(ee)
    }),
    Class: Q.Vec(Ee)
  }));
  const me = Q.Variant({
    account_id: Q.Text,
    principal: Q.Principal,
    extensible: ee
  }), ge = Q.Record({
    fee: Q.Nat,
    decimals: Q.Nat,
    canister: Q.Principal,
    standard: Q.Variant({
      EXTFungible: Q.Null,
      DIP20: Q.Null,
      Ledger: Q.Null
    }),
    symbol: Q.Text
  }), we = Q.Variant({
    ic: ge,
    extensible: ee
  }), be = Q.Record({
    token: we,
    token_id: Q.Text,
    seller: me,
    lock_to_date: Q.Opt(Q.Int),
    buyer: me,
    amount: Q.Nat,
    sale_id: Q.Opt(Q.Text)
  }), Oe = Q.Record({
    staker: me,
    token_id: Q.Text,
    amount: Q.Nat
  }), He = Q.Record({
    nfts: Q.Vec(Q.Text),
    sales: Q.Vec(be),
    stake: Q.Vec(Oe),
    multi_canister: Q.Opt(Q.Vec(Q.Principal)),
    escrow: Q.Vec(be)
  }), Se = Q.Variant({
    nyi: Q.Null,
    storage_configuration_error: Q.Null,
    escrow_withdraw_payment_failed: Q.Null,
    token_not_found: Q.Null,
    owner_not_found: Q.Null,
    content_not_found: Q.Null,
    auction_ended: Q.Null,
    out_of_range: Q.Null,
    sale_id_does_not_match: Q.Null,
    sale_not_found: Q.Null,
    item_not_owned: Q.Null,
    property_not_found: Q.Null,
    validate_trx_wrong_host: Q.Null,
    withdraw_too_large: Q.Null,
    content_not_deserializable: Q.Null,
    bid_too_low: Q.Null,
    validate_deposit_wrong_amount: Q.Null,
    existing_sale_found: Q.Null,
    asset_mismatch: Q.Null,
    escrow_cannot_be_removed: Q.Null,
    deposit_burned: Q.Null,
    cannot_restage_minted_token: Q.Null,
    cannot_find_status_in_metadata: Q.Null,
    receipt_data_mismatch: Q.Null,
    validate_deposit_failed: Q.Null,
    unauthorized_access: Q.Null,
    item_already_minted: Q.Null,
    no_escrow_found: Q.Null,
    escrow_owner_not_the_owner: Q.Null,
    improper_interface: Q.Null,
    app_id_not_found: Q.Null,
    token_non_transferable: Q.Null,
    sale_not_over: Q.Null,
    update_class_error: Q.Null,
    malformed_metadata: Q.Null,
    token_id_mismatch: Q.Null,
    id_not_found_in_metadata: Q.Null,
    auction_not_started: Q.Null,
    library_not_found: Q.Null,
    attempt_to_stage_system_data: Q.Null,
    validate_deposit_wrong_buyer: Q.Null,
    not_enough_storage: Q.Null,
    sales_withdraw_payment_failed: Q.Null
  }), Ge = Q.Record({
    text: Q.Text,
    error: Se,
    number: Q.Nat32,
    flag_point: Q.Text
  }), Fe = Q.Variant({
    ok: He,
    err: Ge
  }), Pe = Q.Variant({
    ok: ce,
    err: fe
  }), Je = Q.Variant({ ok: me, err: Ge }), tt = Q.Record({
    token: we,
    token_id: Q.Text,
    seller: me,
    buyer: me,
    amount: Q.Nat
  }), ft = Q.Record({
    escrow_receipt: tt,
    sale_id: Q.Text
  }), Tt = Q.Variant({
    nat: Q.Nat,
    text: Q.Text,
    extensible: ee
  }), Xe = Q.Record({
    start_price: Q.Nat,
    token: we,
    reserve: Q.Opt(Q.Nat),
    start_date: Q.Int,
    min_increase: Q.Variant({
      amount: Q.Nat,
      percentage: Q.Float64
    }),
    allow_list: Q.Opt(Q.Vec(Q.Principal)),
    buy_now: Q.Opt(Q.Nat),
    ending: Q.Variant({
      waitForQuiet: Q.Record({
        max: Q.Nat,
        date: Q.Int,
        fade: Q.Float64,
        extention: Q.Nat64
      }),
      date: Q.Int
    })
  }), ht = Q.Variant({
    flat: Q.Record({ token: we, amount: Q.Nat }),
    extensible: Q.Variant({ candyClass: Q.Null }),
    instant: Q.Null,
    auction: Xe,
    dutch: Q.Record({
      start_price: Q.Nat,
      reserve: Q.Opt(Q.Nat),
      decay_per_hour: Q.Float64
    })
  }), Qt = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: we,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: we,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: we, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), Gt = Q.Variant({ ok: Qt, err: Ge }), pt = Q.Principal, xt = Q.Record({
    freezing_threshold: Q.Nat,
    controllers: Q.Opt(Q.Vec(Q.Principal)),
    memory_allocation: Q.Nat,
    compute_allocation: Q.Nat
  }), Yt = Q.Record({
    status: Q.Variant({
      stopped: Q.Null,
      stopping: Q.Null,
      running: Q.Null
    }),
    memory_size: Q.Nat,
    cycles: Q.Nat,
    settings: xt,
    module_hash: Q.Opt(Q.Vec(Q.Nat8))
  }), Jt = Q.Record({
    token_id: Q.Text,
    chunk: Q.Opt(Q.Nat),
    library_id: Q.Text
  }), Ht = Q.Record({
    allocated_space: Q.Nat,
    token_id: Q.Text,
    available_space: Q.Nat,
    canister: Q.Principal,
    chunks: Q.Vec(Q.Nat),
    library_id: Q.Text
  }), Lt = Q.Variant({
    remote: Q.Record({
      args: Jt,
      canister: Q.Principal
    }),
    chunk: Q.Record({
      total_chunks: Q.Nat,
      content: Q.Vec(Q.Nat8),
      storage_allocation: Ht,
      current_chunk: Q.Opt(Q.Nat)
    })
  }), Pt = Q.Variant({ ok: Lt, err: Ge }), yt = Q.Record({
    multi_canister_count: Q.Opt(Q.Nat),
    managers: Q.Opt(Q.Vec(Q.Principal)),
    owner: Q.Opt(Q.Principal),
    metadata: Q.Opt(ee),
    logo: Q.Opt(Q.Text),
    name: Q.Opt(Q.Text),
    network: Q.Opt(Q.Principal),
    fields: Q.Opt(Q.Vec(Q.Tuple(Q.Text, Q.Opt(Q.Nat), Q.Opt(Q.Nat)))),
    token_ids_count: Q.Opt(Q.Nat),
    available_space: Q.Opt(Q.Nat),
    multi_canister: Q.Opt(Q.Vec(Q.Principal)),
    token_ids: Q.Opt(Q.Vec(Q.Text)),
    total_supply: Q.Opt(Q.Nat),
    symbol: Q.Opt(Q.Text),
    allocated_storage: Q.Opt(Q.Nat)
  }), kt = Q.Variant({ ok: yt, err: Ge }), $t = Q.Variant({
    metadata: Q.Opt(ee),
    logo: Q.Opt(Q.Text),
    name: Q.Opt(Q.Text),
    symbol: Q.Opt(Q.Text)
  }), Le = Q.Vec($t), or = Q.Variant({ ok: Q.Bool, err: Ge }), tr = Q.Record({
    data: ee,
    event: Q.Text,
    timestamp: Q.Int,
    caller: Q.Opt(Q.Principal)
  }), lr = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: we,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: we,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: we, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), gt = Q.Variant({
    ok: lr,
    err: Ge
  }), Ut = Q.Record({
    token: we,
    trx_id: Tt,
    seller: me,
    buyer: me,
    amount: Q.Nat,
    sale_id: Q.Opt(Q.Text)
  }), Ze = Q.Record({
    token_id: Q.Text,
    deposit: Ut,
    lock_to_date: Q.Opt(Q.Int)
  }), rt = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: we,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: we,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: we, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), $e = Q.Record({
    balance: Q.Nat,
    receipt: tt,
    transaction: rt
  }), Bt = Q.Variant({ ok: $e, err: Ge }), ct = Q.Variant({ ok: Q.Text, err: Ge }), je = Q.Record({
    available_space: Q.Nat,
    allocated_storage: Q.Nat
  }), _e = Q.Variant({ ok: je, err: Ge }), Ie = Q.Variant({
    ok: Q.Vec(rt),
    err: Ge
  }), Ce = Q.Tuple(Q.Text, Q.Text), ke = Q.Record({
    url: Q.Text,
    method: Q.Text,
    body: Q.Vec(Q.Nat8),
    headers: Q.Vec(Ce)
  }), Ve = Q.Tuple(Q.Text, Q.Text), Ke = Q.Record({
    key: Q.Text,
    index: Q.Nat,
    content_encoding: Q.Text
  }), ot = Q.Variant({
    Callback: Q.Record({
      token: Ke,
      callback: Q.Func([], [], [])
    })
  }), St = Q.Record({
    body: Q.Vec(Q.Nat8),
    headers: Q.Vec(Ve),
    streaming_strategy: Q.Opt(ot),
    status_code: Q.Nat16
  }), Vt = Q.Record({
    token: Q.Opt(Ke),
    body: Q.Vec(Q.Nat8)
  }), zt = Q.Variant({
    UpdateOwner: Q.Principal,
    UpdateManagers: Q.Vec(Q.Principal),
    UpdateNetwork: Q.Opt(Q.Principal)
  }), Wt = Q.Variant({
    add_storage_canisters: Q.Vec(Q.Tuple(Q.Principal, Q.Nat, Q.Tuple(Q.Nat, Q.Nat, Q.Nat)))
  }), qe = Q.Variant({
    add_storage_canisters: Q.Tuple(Q.Nat, Q.Nat)
  }), Te = Q.Variant({
    ok: qe,
    err: Ge
  }), Re = Q.Record({
    pricing: ht,
    escrow_receipt: Q.Opt(tt)
  }), it = Q.Record({
    token_id: Q.Text,
    sales_config: Re
  }), Ct = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: we,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: we,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: we, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), Nt = Q.Variant({
    ok: Ct,
    err: Ge
  }), Dt = Q.Variant({
    fungible: Q.Record({
      decimals: Q.Nat8,
      metadata: Q.Opt(Q.Vec(Q.Nat8)),
      name: Q.Text,
      symbol: Q.Text
    }),
    nonfungible: Q.Record({ metadata: Q.Opt(Q.Vec(Q.Nat8)) })
  }), Er = Q.Variant({ ok: Dt, err: fe }), gr = Q.Record({
    status: Q.Variant({
      closed: Q.Null,
      open: Q.Null,
      not_started: Q.Null
    }),
    participants: Q.Vec(Q.Tuple(Q.Principal, Q.Int)),
    current_bid_amount: Q.Nat,
    winner: Q.Opt(me),
    end_date: Q.Int,
    wait_for_quiet_count: Q.Opt(Q.Nat),
    current_escrow: Q.Opt(tt),
    allow_list: Q.Opt(Q.Vec(Q.Tuple(Q.Principal, Q.Bool))),
    min_next_bid: Q.Nat,
    config: ht
  }), Cr = Q.Record({
    token_id: Q.Text,
    sale_type: Q.Variant({ auction: gr }),
    sale_id: Q.Text
  }), mr = Q.Record({
    metadata: ee,
    current_sale: Q.Opt(Cr)
  }), wr = Q.Variant({ ok: mr, err: Ge }), en = Q.Variant({
    UnauthorizedOperator: Q.Null,
    SelfTransfer: Q.Null,
    TokenNotFound: Q.Null,
    UnauthorizedOwner: Q.Null,
    TxNotFound: Q.Null,
    SelfApprove: Q.Null,
    OperatorNotFound: Q.Null,
    ExistedNFT: Q.Null,
    OwnerNotFound: Q.Null,
    Other: Q.Text
  }), Wn = Q.Variant({
    Ok: Q.Opt(Q.Principal),
    Err: en
  }), on = Q.Record({
    to: me,
    token_id: Q.Text,
    from: me
  }), qn = Q.Record({
    transaction: rt,
    assets: Q.Vec(ee)
  }), $n = Q.Variant({
    ok: qn,
    err: Ge
  }), Pn = Q.Record({
    content: Q.Vec(Q.Nat8),
    token_id: Q.Text,
    chunk: Q.Nat,
    filedata: ee,
    library_id: Q.Text
  }), Un = Q.Record({ canister: Q.Principal }), ai = Q.Variant({
    ok: Un,
    err: Ge
  }), pi = Q.Vec(Q.Nat8), Wi = Q.Vec(Q.Nat8), Ti = Q.Record({
    to: le,
    token: ae,
    notify: Q.Bool,
    from: le,
    memo: pi,
    subaccount: Q.Opt(Wi),
    amount: ye
  }), Hn = Q.Variant({
    ok: ye,
    err: Q.Variant({
      CannotNotify: ce,
      InsufficientBalance: Q.Null,
      InvalidToken: ae,
      Rejected: Q.Null,
      Unauthorized: ce,
      Other: Q.Text
    })
  }), Kn = Q.Variant({ Ok: Q.Nat, Err: en }), Ln = Q.Variant({
    Set: ee,
    Lock: ee,
    Next: Q.Vec(ne)
  });
  ne.fill(Q.Record({ mode: Ln, name: Q.Text }));
  const si = Q.Record({
    id: Q.Text,
    update: Q.Vec(ne)
  }), gi = Q.Variant({
    update: Q.Record({
      token_id: Q.Text,
      update: si,
      app_id: Q.Text
    }),
    replace: Q.Record({ token_id: Q.Text, data: ee })
  }), mi = Q.Bool, Ei = Q.Variant({
    ok: mi,
    err: Ge
  }), Rt = Q.Record({
    token: we,
    token_id: Q.Text,
    seller: me,
    withdraw_to: me,
    buyer: me,
    amount: Q.Nat
  }), rr = Q.Variant({
    sale: Rt,
    escrow: Rt
  }), Mr = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: we,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: we,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: we, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: ht,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: we,
        token_id: Q.Text,
        trx_id: Tt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), an = Q.Variant({ ok: Mr, err: Ge });
  return Q.Service({
    __advance_time: Q.Func([Q.Int], [Q.Int], []),
    __set_time_mode: Q.Func([Q.Variant({ test: Q.Null, standard: Q.Null })], [Q.Bool], []),
    balance: Q.Func([de], [Be], ["query"]),
    balanceEXT: Q.Func([de], [Be], ["query"]),
    balanceOfDip721: Q.Func([Q.Principal], [Q.Nat], ["query"]),
    balance_of_nft_origyn: Q.Func([me], [Fe], ["query"]),
    bearer: Q.Func([ae], [Pe], ["query"]),
    bearerEXT: Q.Func([ae], [Pe], ["query"]),
    bearer_batch_nft_origyn: Q.Func([Q.Vec(Q.Text)], [Q.Vec(Je)], ["query"]),
    bearer_nft_origyn: Q.Func([Q.Text], [Je], ["query"]),
    bid_nft_origyn: Q.Func([ft], [Gt], []),
    canister_status: Q.Func([Q.Record({ canister_id: pt })], [Yt], []),
    chunk_nft_origyn: Q.Func([Jt], [Pt], ["query"]),
    collection_nft_origyn: Q.Func([
      Q.Opt(Q.Vec(Q.Tuple(Q.Text, Q.Opt(Q.Nat), Q.Opt(Q.Nat))))
    ], [kt], ["query"]),
    collection_update_origyn: Q.Func([Le], [or], []),
    current_log: Q.Func([], [Q.Vec(tr)], ["query"]),
    cycles: Q.Func([], [Q.Nat], ["query"]),
    end_sale_nft_origyn: Q.Func([Q.Text], [gt], []),
    escrow_nft_origyn: Q.Func([Ze], [Bt], []),
    getEXTTokenIdentifier: Q.Func([Q.Text], [Q.Text], ["query"]),
    get_access_key: Q.Func([], [ct], ["query"]),
    get_canister_managers_nft_origyn: Q.Func([], [Q.Vec(ie)], ["query"]),
    get_canister_network_nft_origyn: Q.Func([], [Q.Opt(ie)], ["query"]),
    get_canister_owner_nft_origyn: Q.Func([], [ie], ["query"]),
    get_nat_as_token_id_origyn: Q.Func([Q.Nat], [Q.Text], ["query"]),
    get_owner_soulbound: Q.Func([ee], [Q.Bool], []),
    get_storage_metrics: Q.Func([], [_e], ["query"]),
    get_token_id_as_nat_origyn: Q.Func([Q.Text], [Q.Nat], ["query"]),
    harvest_log: Q.Func([Q.Nat], [Q.Vec(Q.Vec(tr))], []),
    history_nft_origyn: Q.Func([Q.Text, Q.Opt(Q.Nat), Q.Opt(Q.Nat)], [Ie], ["query"]),
    http_access_key: Q.Func([], [ct], []),
    http_request: Q.Func([ke], [St], ["query"]),
    http_request_streaming_callback: Q.Func([Ke], [Vt], ["query"]),
    log_history_page: Q.Func([Q.Nat], [Q.Vec(tr)], ["query"]),
    log_history_page_chunk: Q.Func([Q.Nat, Q.Nat, Q.Nat], [Q.Vec(tr)], ["query"]),
    log_history_size: Q.Func([], [Q.Nat], ["query"]),
    manage_nft_origyn: Q.Func([zt], [or], []),
    manage_storage_nft_origyn: Q.Func([Wt], [Te], []),
    market_transfer_batch_nft_origyn: Q.Func([Q.Vec(it)], [Q.Vec(Nt)], []),
    market_transfer_nft_origyn: Q.Func([it], [Nt], []),
    metadata: Q.Func([ae], [Er], ["query"]),
    mint__batch_nft_origyn: Q.Func([Q.Vec(Q.Tuple(Q.Text, me))], [Q.Vec(ct)], []),
    mint_nft_origyn: Q.Func([Q.Text, me], [ct], []),
    nftStreamingCallback: Q.Func([Ke], [Vt], ["query"]),
    nft_batch_origyn: Q.Func([Q.Vec(Q.Text)], [Q.Vec(wr)], ["query"]),
    nft_origyn: Q.Func([Q.Text], [wr], ["query"]),
    nuke_log: Q.Func([], [], []),
    ownerOf: Q.Func([Q.Nat], [Wn], ["query"]),
    ownerOfDIP721: Q.Func([Q.Nat], [Wn], ["query"]),
    owner_transfer_nft_origyn: Q.Func([on], [$n], []),
    set_log_harvester_id: Q.Func([Q.Principal], [], []),
    stage_batch_nft_origyn: Q.Func([Q.Vec(Q.Record({ metadata: ee }))], [Q.Vec(ct)], []),
    stage_library_nft_origyn: Q.Func([Pn], [ai], []),
    stage_nft_origyn: Q.Func([Q.Record({ metadata: ee })], [ct], []),
    transfer: Q.Func([Ti], [Hn], []),
    transferEXT: Q.Func([Ti], [Hn], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [Kn], []),
    transferFromDip721: Q.Func([Q.Principal, Q.Principal, Q.Nat], [Kn], []),
    update_app_nft_origyn: Q.Func([gi], [Ei], []),
    whoami: Q.Func([], [Q.Principal], ["query"]),
    withdraw_nft_origyn: Q.Func([rr], [an], [])
  });
};
const init$b = ({ IDL: Q }) => {
  const ee = Q.Principal;
  return [Q.Record({
    owner: ee,
    storage_space: Q.Opt(Q.Nat)
  })];
};
nft_origyn_did.init = init$b;
var __awaiter$a = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$5 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(nft_origyn, "__esModule", { value: !0 });
const agent_1$5 = require$$5, nft_origyn_did_1 = __importDefault$5(nft_origyn_did), default_1$3 = __importDefault$5(_default), standards_1$3 = standards;
class NFTOrigyn extends default_1$3.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$3.NFT.nftOrigyn, this.serializeTokenData = (ie) => {
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
      const ae = ie.ok.metadata, ce = ae.Class.find(({ name: le }) => le === "id").value.Text;
      return {
        index: ce,
        canister: this.canisterId,
        url: `https://${this.canisterId}.raw.ic0.app/-/${ce}`,
        name: ce,
        metadata: ae,
        standard: this.standard
      };
    }, this.actor = agent_1$5.Actor.createActor(nft_origyn_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getUserTokens(ee) {
    return __awaiter$a(this, void 0, void 0, function* () {
      const ne = yield this.actor.balance_of_nft_origyn({ principal: ee });
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      return (yield Promise.all(ne.ok.nfts.map((ae) => __awaiter$a(this, void 0, void 0, function* () {
        const ce = yield this.actor.nft_origyn(ae);
        if ("err" in ce)
          throw new Error(Object.keys(ce.err)[0]);
        return { detail: ce, principal: ee };
      })))).map((ae) => this.serializeTokenData(ae.detail));
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  transfer(ee, ne) {
    return __awaiter$a(this, void 0, void 0, function* () {
      yield this.agent.getPrincipal();
      const ie = yield this.actor.balance_of_nft_origyn({ principal: ee });
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
      const ae = ie.ok.escrow.find(({ token_id: le }) => le === ne);
      if (!ae)
        throw new Error("No pending escrows for transfer.");
      const ce = yield this.actor.market_transfer_nft_origyn({
        token_id: ne,
        sales_config: {
          pricing: { instant: null },
          escrow_receipt: [ae]
        }
      });
      if ("err" in ce)
        throw new Error(Object.keys(ce.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$a(this, void 0, void 0, function* () {
      const ne = yield this.actor.nft_origyn(ee);
      return this.serializeTokenData(ne);
    });
  }
}
nft_origyn.default = NFTOrigyn;
var departure_labs = {}, departure_labs_did = {};
Object.defineProperty(departure_labs_did, "__esModule", { value: !0 });
departure_labs_did.init = void 0;
departure_labs_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec(), ne = Q.Rec(), ie = Q.Rec(), ae = Q.Func([], [], []), ce = Q.Variant({
    Init: Q.Record({ size: Q.Nat, callback: Q.Opt(ae) }),
    Chunk: Q.Record({
      chunk: Q.Vec(Q.Nat8),
      callback: Q.Opt(ae)
    })
  }), le = Q.Variant({
    Put: Q.Record({
      key: Q.Text,
      contentType: Q.Text,
      callback: Q.Opt(ae),
      payload: Q.Variant({
        StagedData: Q.Null,
        Payload: Q.Vec(Q.Nat8)
      })
    }),
    Remove: Q.Record({ key: Q.Text, callback: Q.Opt(ae) }),
    StagedWrite: ce
  }), de = Q.Record({
    p: Q.Principal,
    id: Q.Text,
    isAuthorized: Q.Bool
  }), ye = Q.Variant({
    Immutable: Q.Null,
    NotFound: Q.Null,
    Unauthorized: Q.Null,
    InvalidRequest: Q.Null,
    AuthorizedPrincipalLimitReached: Q.Nat
  }), fe = Q.Variant({ ok: Q.Null, err: ye }), Be = Q.Record({
    nft_payload_size: Q.Nat,
    memory_size: Q.Nat,
    max_live_size: Q.Nat,
    cycles: Q.Nat,
    total_minted: Q.Nat,
    heap_size: Q.Nat,
    authorized_users: Q.Vec(Q.Principal)
  }), Ee = Q.Func([], [], []), me = Q.Variant({
    ContractAuthorize: Q.Record({
      isAuthorized: Q.Bool,
      user: Q.Principal
    }),
    Mint: Q.Record({ id: Q.Text, owner: Q.Principal })
  }), ge = Q.Variant({
    Authorize: Q.Record({
      id: Q.Text,
      isAuthorized: Q.Bool,
      user: Q.Principal
    }),
    Transfer: Q.Record({
      id: Q.Text,
      to: Q.Principal,
      from: Q.Principal
    })
  }), we = Q.Record({
    topupCallback: Ee,
    createdAt: Q.Int,
    topupAmount: Q.Nat,
    event: Q.Variant({ ContractEvent: me, TokenEvent: ge })
  }), be = Q.Func([we], [], []), Oe = Q.Record({
    failedCalls: Q.Nat,
    failedCallsLimit: Q.Nat,
    callback: Q.Opt(be),
    noTopupCallLimit: Q.Nat,
    callsSinceLastTopup: Q.Nat
  }), He = Q.Record({
    name: Q.Text,
    symbol: Q.Text
  }), Se = Q.Tuple(Q.Text, Q.Text), Ge = Q.Record({
    url: Q.Text,
    method: Q.Text,
    body: Q.Vec(Q.Nat8),
    headers: Q.Vec(Se)
  }), Fe = Q.Record({
    key: Q.Text,
    index: Q.Nat,
    content_encoding: Q.Text
  }), Pe = Q.Record({
    token: Q.Opt(Fe),
    body: Q.Vec(Q.Nat8)
  }), Je = Q.Func([Fe], [Pe], ["query"]), tt = Q.Variant({
    Callback: Q.Record({
      token: Fe,
      callback: Je
    })
  }), ft = Q.Record({
    body: Q.Vec(Q.Nat8),
    headers: Q.Vec(Se),
    streaming_strategy: Q.Opt(tt),
    status_code: Q.Nat16
  }), Tt = Q.Variant({
    Int: Q.Int,
    Nat: Q.Nat,
    Empty: Q.Null,
    Bool: Q.Bool,
    Text: Q.Text,
    Float: Q.Float64,
    Principal: Q.Principal,
    Class: Q.Vec(ee)
  });
  ee.fill(Q.Record({ value: Tt, name: Q.Text, immutable: Q.Bool }));
  const Xe = Q.Vec(ee), ht = Q.Record({
    contentType: Q.Text,
    owner: Q.Opt(Q.Principal),
    properties: Xe,
    isPrivate: Q.Bool,
    payload: Q.Variant({
      StagedData: Q.Null,
      Payload: Q.Vec(Q.Nat8)
    })
  }), Qt = Q.Variant({ ok: Q.Principal, err: ye });
  ne.fill(Q.Record({ name: Q.Text, next: Q.Vec(ne) }));
  const Gt = Q.Variant({ All: Q.Null, Some: Q.Vec(ne) }), pt = Q.Record({ id: Q.Text, mode: Gt }), xt = Q.Variant({ ok: Xe, err: ye }), Yt = Q.Record({
    data: Q.Vec(Q.Nat8),
    totalPages: Q.Nat,
    nextPage: Q.Opt(Q.Nat)
  }), Jt = Q.Variant({
    Complete: Q.Vec(Q.Nat8),
    Chunk: Yt
  }), Ht = Q.Record({
    id: Q.Text,
    contentType: Q.Text,
    owner: Q.Principal,
    createdAt: Q.Int,
    properties: Xe,
    payload: Jt
  }), Lt = Q.Variant({ ok: Ht, err: ye }), Pt = Q.Variant({ ok: Yt, err: ye }), yt = Q.Record({
    id: Q.Text,
    contentType: Q.Text,
    owner: Q.Principal,
    createdAt: Q.Int,
    properties: Xe
  }), kt = Q.Variant({ ok: yt, err: ye }), $t = Q.Variant({
    Set: be,
    Remove: Q.Null
  }), Le = Q.Variant({ Set: Tt, Next: Q.Vec(ie) });
  ie.fill(Q.Record({ mode: Le, name: Q.Text }));
  const or = Q.Record({
    id: Q.Text,
    update: Q.Vec(ie)
  });
  return Q.Service({
    assetRequest: Q.Func([le], [], []),
    authorize: Q.Func([de], [fe], []),
    balanceOf: Q.Func([Q.Principal], [Q.Vec(Q.Text)], []),
    getAuthorized: Q.Func([Q.Text], [Q.Vec(Q.Principal)], ["query"]),
    getContractInfo: Q.Func([], [Be], []),
    getEventCallbackStatus: Q.Func([], [Oe], []),
    getMetadata: Q.Func([], [He], ["query"]),
    getTotalMinted: Q.Func([], [Q.Nat], ["query"]),
    http_request: Q.Func([Ge], [ft], ["query"]),
    http_request_streaming_callback: Q.Func([Fe], [Pe], ["query"]),
    init: Q.Func([Q.Vec(Q.Principal), He], [], []),
    isAuthorized: Q.Func([Q.Text, Q.Principal], [Q.Bool], ["query"]),
    listAssets: Q.Func([], [Q.Vec(Q.Tuple(Q.Text, Q.Text, Q.Nat))], ["query"]),
    mint: Q.Func([ht], [Q.Text], []),
    nftStreamingCallback: Q.Func([Fe], [Pe], ["query"]),
    ownerOf: Q.Func([Q.Text], [Qt], ["query"]),
    queryProperties: Q.Func([pt], [xt], ["query"]),
    staticStreamingCallback: Q.Func([Fe], [Pe], ["query"]),
    tokenByIndex: Q.Func([Q.Text], [Lt], []),
    tokenChunkByIndex: Q.Func([Q.Text, Q.Nat], [Pt], []),
    tokenMetadataByIndex: Q.Func([Q.Text], [kt], []),
    transfer: Q.Func([Q.Principal, Q.Text], [fe], []),
    updateContractOwners: Q.Func([Q.Principal, Q.Bool], [fe], []),
    updateEventCallback: Q.Func([$t], [], []),
    updateProperties: Q.Func([or], [xt], []),
    wallet_receive: Q.Func([], [], []),
    writeStaged: Q.Func([ce], [], [])
  });
};
const init$a = ({}) => [];
departure_labs_did.init = init$a;
var __awaiter$9 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$4 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(departure_labs, "__esModule", { value: !0 });
const agent_1$4 = require$$5, departure_labs_did_1 = __importDefault$4(departure_labs_did), default_1$2 = __importDefault$4(_default), standards_1$2 = standards;
class DepartureLabs extends default_1$2.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$2.NFT.departuresLabs, this.serializeTokenData = (ie) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: `https://${this.canisterId}.raw.ic0.app/nft/${ie.id}`,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$4.Actor.createActor(departure_labs_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ne = yield this.actor.balanceOf(ee);
      return (yield Promise.all(ne.map((ae) => __awaiter$9(this, void 0, void 0, function* () {
        const ce = yield this.actor.tokenMetadataByIndex(ae);
        if ("err" in ce)
          throw new Error(Object.keys(ce.err)[0]);
        return ce.ok;
      })))).map((ae) => this.serializeTokenData(ae));
    });
  }
  transfer(ee, ne) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ie = yield this.actor.transfer(ee, ne.toString(10));
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ne = yield this.actor.tokenMetadataByIndex(ee.toString(10));
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      return this.serializeTokenData(ne.ok);
    });
  }
}
departure_labs.default = DepartureLabs;
var dip_721 = {}, dip_721_did = {};
Object.defineProperty(dip_721_did, "__esModule", { value: !0 });
dip_721_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  Q.Record({
    cap: Q.Opt(Q.Principal),
    logo: Q.Opt(Q.Text),
    name: Q.Opt(Q.Text),
    custodians: Q.Opt(Q.Vec(Q.Principal)),
    symbol: Q.Opt(Q.Text)
  });
  const ne = Q.Variant({
    UnauthorizedOperator: Q.Null,
    SelfTransfer: Q.Null,
    TokenNotFound: Q.Null,
    UnauthorizedOwner: Q.Null,
    SelfApprove: Q.Null,
    OperatorNotFound: Q.Null,
    ExistedNFT: Q.Null,
    OwnerNotFound: Q.Null
  }), ie = Q.Variant({ Ok: Q.Nat, Err: ne }), ae = Q.Variant({ Ok: Q.Bool, Err: ne }), ce = Q.Record({
    logo: Q.Opt(Q.Text),
    name: Q.Opt(Q.Text),
    created_at: Q.Nat64,
    upgraded_at: Q.Nat64,
    custodians: Q.Vec(Q.Principal),
    symbol: Q.Opt(Q.Text)
  });
  ee.fill(Q.Vec(Q.Tuple(Q.Text, Q.Variant({
    Nat64Content: Q.Nat64,
    Nat32Content: Q.Nat32,
    BoolContent: Q.Bool,
    Nat8Content: Q.Nat8,
    Int64Content: Q.Int64,
    IntContent: Q.Int,
    NatContent: Q.Nat,
    Nat16Content: Q.Nat16,
    Int32Content: Q.Int32,
    Int8Content: Q.Int8,
    FloatContent: Q.Float64,
    Int16Content: Q.Int16,
    BlobContent: Q.Vec(Q.Nat8),
    NestedContent: ee,
    Principal: Q.Principal,
    TextContent: Q.Text
  }))));
  const le = Q.Variant({
    Nat64Content: Q.Nat64,
    Nat32Content: Q.Nat32,
    BoolContent: Q.Bool,
    Nat8Content: Q.Nat8,
    Int64Content: Q.Int64,
    IntContent: Q.Int,
    NatContent: Q.Nat,
    Nat16Content: Q.Nat16,
    Int32Content: Q.Int32,
    Int8Content: Q.Int8,
    FloatContent: Q.Float64,
    Int16Content: Q.Int16,
    BlobContent: Q.Vec(Q.Nat8),
    NestedContent: ee,
    Principal: Q.Principal,
    TextContent: Q.Text
  }), de = Q.Variant({
    Ok: Q.Opt(Q.Principal),
    Err: ne
  }), ye = Q.Variant({
    Ok: Q.Vec(Q.Nat),
    Err: ne
  }), fe = Q.Record({
    transferred_at: Q.Opt(Q.Nat64),
    transferred_by: Q.Opt(Q.Principal),
    owner: Q.Opt(Q.Principal),
    operator: Q.Opt(Q.Principal),
    approved_at: Q.Opt(Q.Nat64),
    approved_by: Q.Opt(Q.Principal),
    properties: Q.Vec(Q.Tuple(Q.Text, le)),
    is_burned: Q.Bool,
    token_identifier: Q.Nat,
    burned_at: Q.Opt(Q.Nat64),
    burned_by: Q.Opt(Q.Principal),
    minted_at: Q.Nat64,
    minted_by: Q.Principal
  }), Be = Q.Variant({
    Ok: Q.Vec(fe),
    Err: ne
  }), Ee = Q.Record({
    cycles: Q.Nat,
    total_transactions: Q.Nat,
    total_unique_holders: Q.Nat,
    total_supply: Q.Nat
  }), me = Q.Variant({
    Burn: Q.Null,
    Mint: Q.Null,
    Approval: Q.Null
  }), ge = Q.Variant({ Ok: fe, Err: ne });
  return Q.Service({
    approve: Q.Func([Q.Principal, Q.Nat], [ie], []),
    balanceOf: Q.Func([Q.Principal], [ie], ["query"]),
    burn: Q.Func([Q.Nat], [ie], []),
    custodians: Q.Func([], [Q.Vec(Q.Principal)], ["query"]),
    cycles: Q.Func([], [Q.Nat], ["query"]),
    dfx_info: Q.Func([], [Q.Text], ["query"]),
    dip721_approve: Q.Func([Q.Principal, Q.Nat], [ie], []),
    dip721_balance_of: Q.Func([Q.Principal], [ie], ["query"]),
    dip721_burn: Q.Func([Q.Nat], [ie], []),
    dip721_custodians: Q.Func([], [Q.Vec(Q.Principal)], ["query"]),
    dip721_cycles: Q.Func([], [Q.Nat], ["query"]),
    dip721_is_approved_for_all: Q.Func([Q.Principal, Q.Principal], [ae], ["query"]),
    dip721_logo: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    dip721_metadata: Q.Func([], [ce], ["query"]),
    dip721_mint: Q.Func([Q.Principal, Q.Nat, Q.Vec(Q.Tuple(Q.Text, le))], [ie], []),
    dip721_name: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    dip721_operator_of: Q.Func([Q.Nat], [de], ["query"]),
    dip721_operator_token_identifiers: Q.Func([Q.Principal], [ye], ["query"]),
    dip721_operator_token_metadata: Q.Func([Q.Principal], [Be], ["query"]),
    dip721_owner_of: Q.Func([Q.Nat], [de], ["query"]),
    dip721_owner_token_identifiers: Q.Func([Q.Principal], [ye], ["query"]),
    dip721_owner_token_metadata: Q.Func([Q.Principal], [Be], ["query"]),
    dip721_set_approval_for_all: Q.Func([Q.Principal, Q.Bool], [ie], []),
    dip721_set_custodians: Q.Func([Q.Vec(Q.Principal)], [], []),
    dip721_set_logo: Q.Func([Q.Text], [], []),
    dip721_set_name: Q.Func([Q.Text], [], []),
    dip721_set_symbol: Q.Func([Q.Text], [], []),
    dip721_stats: Q.Func([], [Ee], ["query"]),
    dip721_supported_interfaces: Q.Func([], [Q.Vec(me)], ["query"]),
    dip721_symbol: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    dip721_token_metadata: Q.Func([Q.Nat], [ge], ["query"]),
    dip721_total_supply: Q.Func([], [Q.Nat], ["query"]),
    dip721_total_transactions: Q.Func([], [Q.Nat], ["query"]),
    dip721_total_unique_holders: Q.Func([], [Q.Nat], ["query"]),
    dip721_transfer: Q.Func([Q.Principal, Q.Nat], [ie], []),
    dip721_transfer_from: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ie], []),
    git_commit_hash: Q.Func([], [Q.Text], ["query"]),
    isApprovedForAll: Q.Func([Q.Principal, Q.Principal], [ae], ["query"]),
    logo: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    metadata: Q.Func([], [ce], ["query"]),
    mint: Q.Func([Q.Principal, Q.Nat, Q.Vec(Q.Tuple(Q.Text, le))], [ie], []),
    name: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    operatorOf: Q.Func([Q.Nat], [de], ["query"]),
    operatorTokenIdentifiers: Q.Func([Q.Principal], [ye], ["query"]),
    operatorTokenMetadata: Q.Func([Q.Principal], [Be], ["query"]),
    ownerOf: Q.Func([Q.Nat], [de], ["query"]),
    ownerTokenIdentifiers: Q.Func([Q.Principal], [ye], ["query"]),
    ownerTokenMetadata: Q.Func([Q.Principal], [Be], ["query"]),
    rust_toolchain_info: Q.Func([], [Q.Text], ["query"]),
    setApprovalForAll: Q.Func([Q.Principal, Q.Bool], [ie], []),
    setCustodians: Q.Func([Q.Vec(Q.Principal)], [], []),
    setLogo: Q.Func([Q.Text], [], []),
    setName: Q.Func([Q.Text], [], []),
    setSymbol: Q.Func([Q.Text], [], []),
    stats: Q.Func([], [Ee], ["query"]),
    supportedInterfaces: Q.Func([], [Q.Vec(me)], ["query"]),
    symbol: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    tokenMetadata: Q.Func([Q.Nat], [ge], ["query"]),
    totalSupply: Q.Func([], [Q.Nat], ["query"]),
    totalTransactions: Q.Func([], [Q.Nat], ["query"]),
    totalUniqueHolders: Q.Func([], [Q.Nat], ["query"]),
    transfer: Q.Func([Q.Principal, Q.Nat], [ie], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ie], [])
  });
};
var __awaiter$8 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$3 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(dip_721, "__esModule", { value: !0 });
const agent_1$3 = require$$5, dip_721_did_1 = __importDefault$3(dip_721_did), default_1$1 = __importDefault$3(_default), standards_1$1 = standards, extractMetadataValue = (Q) => {
  const ee = Object.keys(Q)[0], ne = Q[ee];
  return typeof ne == "object" ? JSON.stringify(ne) : ne;
};
class ERC721 extends default_1$1.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$1.NFT.dip721, this.actor = agent_1$3.Actor.createActor(dip_721_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  backwardsCompatibleGuard(ee, ne) {
    return (ie = []) => __awaiter$8(this, void 0, void 0, function* () {
      let ae;
      try {
        ae = yield this.actor[ne](...ie);
      } catch {
        ae = yield this.actor[ee](...ie);
      }
      return ae;
    });
  }
  getUserTokens(ee) {
    return __awaiter$8(this, void 0, void 0, function* () {
      const ae = (yield this.backwardsCompatibleGuard("ownerTokenMetadata", "dip721_owner_token_metadata")([ee])).Ok || [];
      return ae.length ? ae.map((le) => {
        var de, ye;
        const fe = le.token_identifier, Be = this.formatMetadata(le);
        if (!Be)
          return;
        const Ee = (ye = (de = le.operator) === null || de === void 0 ? void 0 : de[0]) === null || ye === void 0 ? void 0 : ye.toText();
        return this.serializeTokenData(Be, fe, ee.toText(), Ee);
      }).filter((le) => le) : [];
    });
  }
  transfer(ee, ne) {
    return __awaiter$8(this, void 0, void 0, function* () {
      const ae = yield this.backwardsCompatibleGuard("transfer", "dip721_transfer")([ee, BigInt(ne)]);
      if ("Err" in ae)
        throw new Error(`${Object.keys(ae.Err)[0]}: ${Object.values(ae.Err)[0]}`);
    });
  }
  details(ee) {
    var ne, ie, ae, ce, le, de;
    return __awaiter$8(this, void 0, void 0, function* () {
      const fe = yield this.backwardsCompatibleGuard("tokenMetadata", "dip721_token_metadata")([BigInt(ee)]);
      if ("Err" in fe)
        throw new Error(`${Object.keys(fe.Err)[0]}: ${Object.values(fe.Err)[0]}`);
      const Be = fe == null ? void 0 : fe.Ok, Ee = this.formatMetadata(Be), me = (ae = (ie = (ne = Be == null ? void 0 : Be.owner) === null || ne === void 0 ? void 0 : ne[0]) === null || ie === void 0 ? void 0 : ie.toText) === null || ae === void 0 ? void 0 : ae.call(ie), ge = (de = (le = (ce = Be == null ? void 0 : Be.operator) === null || ce === void 0 ? void 0 : ce[0]) === null || le === void 0 ? void 0 : le.toText) === null || de === void 0 ? void 0 : de.call(le);
      return this.serializeTokenData(Ee, ee, me, ge);
    });
  }
  getMetadata() {
    var ee;
    return __awaiter$8(this, void 0, void 0, function* () {
      const ie = yield this.backwardsCompatibleGuard("metadata", "dip721_get_metadata")();
      return {
        icon: ie == null ? void 0 : ie.logo[0],
        name: ((ee = ie == null ? void 0 : ie.name) === null || ee === void 0 ? void 0 : ee[0]) || "",
        standard: this.standard,
        canisterId: this.canisterId,
        tokens: [],
        description: ""
      };
    });
  }
  serializeTokenData(ee, ne, ie, ae) {
    var ce, le;
    return {
      index: BigInt(ne),
      canister: this.canisterId,
      metadata: ee,
      owner: ie,
      url: ((le = (ce = ee == null ? void 0 : ee.location) === null || ce === void 0 ? void 0 : ce.value) === null || le === void 0 ? void 0 : le.TextContent) || "",
      standard: this.standard,
      operator: ae
    };
  }
  formatMetadata(ee) {
    const ne = { properties: new Array() };
    if (!(ee != null && ee.properties) || !Array.isArray(ee.properties)) {
      console.warn(`Oops! Failed to format the metadata properties for token, field is missing or invalid. See ${JSON.stringify(ee)}`), console.log(ee);
      return;
    }
    return ee.properties.forEach((ie) => {
      const ae = ie[0];
      ne[ae] = { value: ie[1] };
      const ce = (() => {
        try {
          return extractMetadataValue(ie[1]);
        } catch (le) {
          console.warn(`Oops! Failed to extract metadata value for property ${ae}, is that a valid key value pair?`), console.error(le);
        }
      })();
      ne.properties = [
        ...ne.properties,
        { name: ie[0], value: ce }
      ];
    }), ne.properties = ne.properties.filter(({ name: ie }) => !["location", "thumbnail", "contentHash", "contentType"].includes(ie)), ne;
  }
}
dip_721.default = ERC721;
var constants = {};
Object.defineProperty(constants, "__esModule", { value: !0 });
constants.KYASSHU_URL = constants.IC_HOST = void 0;
constants.IC_HOST = "https://ic0.app/";
constants.KYASSHU_URL = "https://kyasshu.fleek.co";
var nft_registry_did = {};
Object.defineProperty(nft_registry_did, "__esModule", { value: !0 });
nft_registry_did.init = void 0;
nft_registry_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  ee.fill(Q.Variant({
    I64: Q.Int64,
    U64: Q.Nat64,
    Vec: Q.Vec(ee),
    Slice: Q.Vec(Q.Nat8),
    Text: Q.Text,
    True: Q.Null,
    False: Q.Null,
    Float: Q.Float64,
    Principal: Q.Principal
  }));
  const ne = Q.Record({
    thumbnail: Q.Text,
    name: Q.Text,
    frontend: Q.Opt(Q.Text),
    description: Q.Text,
    details: Q.Vec(Q.Tuple(Q.Text, ee)),
    principal_id: Q.Principal
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistentItem: Q.Null
  }), ae = Q.Variant({
    Ok: Q.Opt(Q.Text),
    Err: ie
  });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get: Q.Func([Q.Principal], [Q.Opt(ne)], ["query"]),
    get_all: Q.Func([], [Q.Vec(ne)], ["query"]),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Principal], [ae], []),
    set_controller: Q.Func([Q.Principal], [ae], [])
  });
};
const init$9 = () => [];
nft_registry_did.init = init$9;
var standard_registry = {}, registry_standard_did = {};
Object.defineProperty(registry_standard_did, "__esModule", { value: !0 });
registry_standard_did.init = void 0;
registry_standard_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  ee.fill(Q.Variant({
    I64: Q.Int64,
    U64: Q.Nat64,
    Vec: Q.Vec(ee),
    Slice: Q.Vec(Q.Nat8),
    Text: Q.Text,
    True: Q.Null,
    False: Q.Null,
    Float: Q.Float64,
    Principal: Q.Principal
  }));
  const ne = Q.Record({
    thumbnail: Q.Text,
    name: Q.Text,
    frontend: Q.Opt(Q.Text),
    description: Q.Text,
    principal_id: Q.Principal,
    details: Q.Vec(Q.Tuple(Q.Text, ee))
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistantCanister: Q.Null
  }), ae = Q.Variant({ Ok: Q.Opt(Q.Text), Err: ie });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get: Q.Func([Q.Principal], [Q.Opt(ne)], ["query"]),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Principal], [ae], [])
  });
};
const init$8 = () => [];
registry_standard_did.init = init$8;
var registry = {};
(function(Q) {
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.formatMetadata = Q.formatRegistryDetails = Q.parseDetailValue = void 0;
  const ee = ["True", "False"], ne = (ce) => {
    const le = Object.keys(ce)[0], de = ee.includes(le) ? Boolean(le) : Object.values(ce)[0];
    return Array.isArray(de) ? de.map((ye) => typeof de == "number" ? ye : (0, Q.parseDetailValue)(ye)) : de;
  };
  Q.parseDetailValue = ne;
  const ie = (ce) => {
    const le = {};
    for (const [de, ye] of ce)
      le[de] = (0, Q.parseDetailValue)(ye);
    return le;
  };
  Q.formatRegistryDetails = ie;
  const ae = (ce) => Object.assign(Object.assign({}, ce), { details: (0, Q.formatRegistryDetails)(ce.details) });
  Q.formatMetadata = ae;
})(registry);
var __awaiter$7 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$2 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(standard_registry, "__esModule", { value: !0 });
const agent_1$2 = require$$5, principal_1$5 = require$$4, constants_1 = constants, registry_standard_did_1 = __importDefault$2(registry_standard_did), registry_1 = registry, cross_fetch_1$1 = __importDefault$2(browserPonyfill.exports), DEFAULT_AGENT = new agent_1$2.HttpAgent({ fetch: cross_fetch_1$1.default, host: constants_1.IC_HOST });
class Registry {
  constructor(ee, ne = DEFAULT_AGENT) {
    this.name = () => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.name();
    }), this.add = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.add(ie != null ? ie : []);
    }), this.get = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      const ae = yield this.actor.get(principal_1$5.Principal.fromText(ie));
      if (ae.length !== 0)
        return (0, registry_1.formatMetadata)(ae[0]);
    }), this.remove = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.remove(principal_1$5.Principal.fromText(ie));
    }), this.actor = agent_1$2.Actor.createActor(registry_standard_did_1.default, {
      agent: ne,
      canisterId: ee
    }), this.canisterId = ee;
  }
}
standard_registry.default = Registry;
var actorFactory = {};
(function(Q) {
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.generateActor = Q.createExtendedActorClass = void 0;
  const ee = require$$5, ne = require$$4, ie = (ce, le, de, ye) => {
    class fe extends ee.Actor.createActorClass(ye) {
      constructor() {
        const Ee = typeof de == "string" ? ne.Principal.fromText(de) : de;
        super({ agent: ce, canisterId: Ee }), Object.keys(this).forEach((me) => {
          this[`_${me}`] = this[me];
        }), Object.keys(le).forEach((me) => {
          this[me] = (...ge) => le[me](this, ...ge);
        });
      }
    }
    return fe;
  };
  Q.createExtendedActorClass = ie;
  function ae({ agent: ce, canisterId: le, IDL: de }) {
    return ee.Actor.createActor(de, {
      agent: ce,
      canisterId: ne.Principal.fromText(le)
    });
  }
  Q.generateActor = ae, Q.default = { createExtendedActorClass: Q.createExtendedActorClass, generateActor: ae };
})(actorFactory);
var ccc = {}, c3_did = {};
Object.defineProperty(c3_did, "__esModule", { value: !0 });
c3_did.init = void 0;
c3_did.default = ({ IDL: Q }) => {
  const ee = Q.Nat, ne = Q.Nat, ie = Q.Variant({
    ok: ne,
    err: Q.Variant({
      ListOnMarketPlace: Q.Null,
      NotAllowTransferToSelf: Q.Null,
      NotOwnerOrNotApprove: Q.Null,
      Other: Q.Null
    })
  }), ae = Q.Record({
    id: Q.Nat,
    rarityScore: Q.Float64
  }), ce = Q.Variant({
    ok: ae,
    err: Q.Variant({ NotFoundIndex: Q.Null })
  });
  return Q.Service({
    getAllNFT: Q.Func([Q.Principal], [Q.Vec(Q.Tuple(ee, Q.Principal))], ["query"]),
    getNftStoreCIDByIndex: Q.Func([ee], [Q.Principal], ["query"]),
    getTokenById: Q.Func([Q.Nat], [ce], ["query"]),
    transferFrom: Q.Func([Q.Principal, Q.Principal, ee], [ie], [])
  });
};
const init$7 = ({ IDL: Q }) => [Q.Principal, Q.Principal, Q.Principal];
c3_did.init = init$7;
var __awaiter$6 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$1 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(ccc, "__esModule", { value: !0 });
const agent_1$1 = require$$5, c3_did_1 = __importDefault$1(c3_did), default_1 = __importDefault$1(_default), standards_1 = standards;
class CCC extends default_1.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1.NFT.c3, this.serializeTokenData = (ie, ae) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: `https://${ae.toText()}.raw.ic0.app/token/${ie.id}`,
      name: `${ie.id}`,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$1.Actor.createActor(c3_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ne = yield this.actor.getAllNFT(ee);
      return (yield Promise.all(ne.map((ae) => __awaiter$6(this, void 0, void 0, function* () {
        const ce = ae[0], le = ae[1], de = yield this.actor.getTokenById(ce);
        if ("err" in de)
          throw new Error(Object.keys(de.err)[0]);
        return { detail: de.ok, principal: le };
      })))).map((ae) => this.serializeTokenData(ae.detail, ae.principal));
    });
  }
  transfer(ee, ne) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ie = yield this.agent.getPrincipal(), ae = yield this.actor.transferFrom(ie, ee, BigInt(ne));
      if ("err" in ae)
        throw new Error(Object.keys(ae.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ne = yield this.actor.getTokenById(BigInt(ee));
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      const ie = yield this.actor.getNftStoreCIDByIndex(BigInt(ee));
      if (!ie)
        throw new Error("Error tokenIndex");
      return this.serializeTokenData(ne.ok, ie);
    });
  }
}
ccc.default = CCC;
(function(Q) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Yt, Jt, Ht, Lt) {
    function Pt(yt) {
      return yt instanceof Ht ? yt : new Ht(function(kt) {
        kt(yt);
      });
    }
    return new (Ht || (Ht = Promise))(function(yt, kt) {
      function $t(tr) {
        try {
          or(Lt.next(tr));
        } catch (lr) {
          kt(lr);
        }
      }
      function Le(tr) {
        try {
          or(Lt.throw(tr));
        } catch (lr) {
          kt(lr);
        }
      }
      function or(tr) {
        tr.done ? yt(tr.value) : Pt(tr.value).then($t, Le);
      }
      or((Lt = Lt.apply(Yt, Jt || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Yt) {
    return Yt && Yt.__esModule ? Yt : { default: Yt };
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.getCachedUserNFTs = Q.getBatchedNFTs = Q.getAllUserNFTs = Q.getAllNFTS = Q.getNFTInfo = Q.getNFTActor = Q.getUserCollectionTokens = Q.NFTRegistry = void 0;
  const ie = ne(axios$2.exports), ae = require$$5, ce = require$$4, le = ne(browserPonyfill.exports), de = ne(ext), ye = ne(ic_punks), fe = ne(nft_origyn), Be = ne(departure_labs), Ee = ne(dip_721), me = standards, ge = constants, we = ne(nft_registry_did), be = ne(standard_registry), Oe = actorFactory, He = registry, Se = ne(ccc), Ge = "ctqxp-yyaaa-aaaah-abbda-cai", Fe = 5, Pe = {
    [me.NFT.ext]: de.default,
    [me.NFT.icpunks]: ye.default,
    [me.NFT.nftOrigyn]: fe.default,
    [me.NFT.departuresLabs]: Be.default,
    [me.NFT.erc721]: Ee.default,
    [me.NFT.dip721]: Ee.default,
    [me.NFT.c3]: Se.default
  }, Je = new ae.HttpAgent({ fetch: le.default, host: ge.IC_HOST });
  class tt extends be.default {
    constructor(Jt) {
      super(Ge, Jt), this.getAll = () => ee(this, void 0, void 0, function* () {
        return (yield this.actor.get_all()).map(He.formatMetadata);
      }), this.actor = (0, Oe.generateActor)({ agent: Jt || Je, canisterId: Ge, IDL: we.default });
    }
  }
  Q.NFTRegistry = tt;
  const ft = (Yt, Jt, Ht = Je, Lt = () => {
  }) => ee(void 0, void 0, void 0, function* () {
    try {
      const yt = yield (0, Q.getNFTActor)({
        canisterId: Yt.principal_id.toString(),
        agent: Ht,
        standard: Yt.standard
      }).getUserTokens(Jt), kt = {
        name: Yt.name,
        canisterId: Yt.principal_id.toString(),
        standard: Yt.standard,
        description: Yt.description,
        icon: Yt.icon,
        tokens: yt.map(($t) => Object.assign(Object.assign({}, $t), { collection: Yt.name }))
      };
      return Lt && (yield Lt == null ? void 0 : Lt(kt)), kt;
    } catch (Pt) {
      return console.error(Pt), {
        name: Yt.name,
        canisterId: Yt.principal_id.toString(),
        standard: Yt.standard,
        tokens: []
      };
    }
  });
  Q.getUserCollectionTokens = ft;
  const Tt = ({ standard: Yt }) => {
    const Jt = Yt.toUpperCase(), Ht = me.NFT.dip721.toUpperCase(), Lt = Jt.startsWith(Ht), Pt = Jt.split(Ht).filter((kt) => kt).length > 0;
    return Lt && Pt ? (console.warn(`Warning! Use the term DIP721, not ${Yt}, suffixed and others are being deprecated and support will be dropped soon!`), me.NFT.dip721) : Jt;
  }, Xe = ({ canisterId: Yt, agent: Jt, standard: Ht }) => {
    const Lt = Tt({
      standard: Ht
    });
    if (!(Lt in Pe))
      throw console.error(`Standard ${Lt} is not implemented`), new Error(`standard is not supported: ${Lt}`);
    return new Pe[Lt](Yt, Jt);
  };
  Q.getNFTActor = Xe;
  const ht = ({ nftCanisterId: Yt, agent: Jt = Je }) => ee(void 0, void 0, void 0, function* () {
    const Lt = yield new tt(Jt).get(Yt);
    return Lt && Object.assign(Object.assign({}, Lt), { icon: Lt.thumbnail, standard: Lt.details.standard });
  });
  Q.getNFTInfo = ht;
  const Qt = ({ agent: Yt = Je } = {}) => ee(void 0, void 0, void 0, function* () {
    return (yield new tt(Yt).getAll()).map((Lt) => Object.assign(Object.assign({}, Lt), { icon: Lt.thumbnail, standard: Lt.details.standard }));
  });
  Q.getAllNFTS = Qt;
  const Gt = ({ user: Yt, agent: Jt = Je }) => ee(void 0, void 0, void 0, function* () {
    const Ht = yield (0, Q.getAllNFTS)({ agent: Jt }), Lt = Yt instanceof ce.Principal ? Yt : ce.Principal.fromText(Yt);
    return (yield Promise.all(Ht.map((yt) => (0, Q.getUserCollectionTokens)(yt, Lt, Jt)))).filter((yt) => yt.tokens.length);
  });
  Q.getAllUserNFTs = Gt;
  const pt = ({ principal: Yt, callback: Jt, batchSize: Ht = Fe, onFinish: Lt, agent: Pt = Je }) => ee(void 0, void 0, void 0, function* () {
    const yt = yield (0, Q.getAllNFTS)({ agent: Pt });
    let kt = [];
    for (let $t = 0; $t < yt.length; $t += Ht) {
      const Le = yt.slice($t, $t + Ht), or = yield Promise.all(Le.map((tr) => (0, Q.getUserCollectionTokens)(tr, Yt, Pt, Jt)));
      kt = [...kt, ...or];
    }
    return Lt && (yield Lt == null ? void 0 : Lt(kt)), kt.filter(($t) => {
      var Le;
      return (Le = $t == null ? void 0 : $t.tokens) === null || Le === void 0 ? void 0 : Le.length;
    });
  });
  Q.getBatchedNFTs = pt;
  const xt = ({ userPID: Yt, refresh: Jt }) => ee(void 0, void 0, void 0, function* () {
    const Ht = `${ge.KYASSHU_URL}/dab/user/nfts/${Yt}`;
    return (yield ie.default.get(Ht, { params: { refresh: Jt } })).data;
  });
  Q.getCachedUserNFTs = xt, Q.default = {
    getBatchedNFTs: Q.getBatchedNFTs,
    getNFTActor: Q.getNFTActor,
    getNFTInfo: Q.getNFTInfo,
    getAllNFTS: Q.getAllNFTS,
    getAllUserNFTs: Q.getAllUserNFTs,
    getCachedUserNFTs: Q.getCachedUserNFTs
  };
})(nfts_registry);
var canister_registry = {}, canister_registry_did = {};
Object.defineProperty(canister_registry_did, "__esModule", { value: !0 });
canister_registry_did.init = void 0;
canister_registry_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  ee.fill(Q.Variant({
    I64: Q.Int64,
    U64: Q.Nat64,
    Vec: Q.Vec(ee),
    Slice: Q.Vec(Q.Nat8),
    Text: Q.Text,
    True: Q.Null,
    False: Q.Null,
    Float: Q.Float64,
    Principal: Q.Principal
  }));
  const ne = Q.Record({
    thumbnail: Q.Text,
    name: Q.Text,
    frontend: Q.Opt(Q.Text),
    description: Q.Text,
    principal_id: Q.Principal,
    details: Q.Vec(Q.Tuple(Q.Text, ee))
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistentItem: Q.Null
  }), ae = Q.Variant({
    Ok: Q.Opt(Q.Text),
    Err: ie
  });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get: Q.Func([Q.Principal], [Q.Opt(ne)], ["query"]),
    get_all: Q.Func([], [Q.Vec(ne)], ["query"]),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Principal], [ae], [])
  });
};
const init$6 = () => [];
canister_registry_did.init = init$6;
(function(Q) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Se, Ge, Fe, Pe) {
    function Je(tt) {
      return tt instanceof Fe ? tt : new Fe(function(ft) {
        ft(tt);
      });
    }
    return new (Fe || (Fe = Promise))(function(tt, ft) {
      function Tt(Qt) {
        try {
          ht(Pe.next(Qt));
        } catch (Gt) {
          ft(Gt);
        }
      }
      function Xe(Qt) {
        try {
          ht(Pe.throw(Qt));
        } catch (Gt) {
          ft(Gt);
        }
      }
      function ht(Qt) {
        Qt.done ? tt(Qt.value) : Je(Qt.value).then(Tt, Xe);
      }
      ht((Pe = Pe.apply(Se, Ge || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Se) {
    return Se && Se.__esModule ? Se : { default: Se };
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.getAll = Q.getMultipleCanisterInfo = Q.getCanisterInfo = Q.CanisterRegistry = void 0;
  const ie = require$$5, ae = ne(browserPonyfill.exports), ce = ne(canister_registry_did), le = constants, de = ne(standard_registry), ye = actorFactory, fe = registry, Be = require$$4, Ee = "curr3-vaaaa-aaaah-abbdq-cai", me = new ie.HttpAgent({ fetch: ae.default, host: le.IC_HOST }), ge = (Se) => {
    if (!Se)
      return Se;
    const { thumbnail: Ge, name: Fe, description: Pe, frontend: Je, details: tt } = Se;
    return { url: (Je == null ? void 0 : Je[0]) || "", name: Fe, description: Pe, version: Number(tt.version), logo_url: Ge };
  };
  class we extends de.default {
    constructor(Ge) {
      super(Ee, Ge), this.getAll = () => ee(this, void 0, void 0, function* () {
        return (yield this.actor.get_all()).map(fe.formatMetadata);
      }), this.actor = (0, ye.generateActor)({ agent: Ge || me, canisterId: Ee, IDL: ce.default });
    }
  }
  Q.CanisterRegistry = we;
  const be = ({ canisterId: Se, agent: Ge = me }) => ee(void 0, void 0, void 0, function* () {
    const Pe = yield new we(Ge).get(Be.Principal.from(Se).toString()), Je = ge(Pe);
    return Je && Object.assign(Object.assign({}, Je), { canisterId: Se.toString() });
  });
  Q.getCanisterInfo = be;
  const Oe = ({ canisterIds: Se, agent: Ge = me }) => ee(void 0, void 0, void 0, function* () {
    const Fe = yield Promise.all(Se.map((Pe) => (0, Q.getCanisterInfo)({ canisterId: Pe, agent: Ge })));
    return Fe.length === 0 ? [] : Fe.filter((Pe) => !!Pe);
  });
  Q.getMultipleCanisterInfo = Oe;
  const He = (Se) => ee(void 0, void 0, void 0, function* () {
    return (yield new we(Se).getAll()).map(ge);
  });
  Q.getAll = He, Q.default = {
    getCanisterInfo: Q.getCanisterInfo,
    getMultipleCanisterInfo: Q.getMultipleCanisterInfo,
    getAll: (Se) => new we(Se).getAll
  };
})(canister_registry);
var token_registry = {}, token_registry_did = {};
Object.defineProperty(token_registry_did, "__esModule", { value: !0 });
token_registry_did.init = void 0;
token_registry_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  ee.fill(Q.Variant({
    I64: Q.Int64,
    U64: Q.Nat64,
    Vec: Q.Vec(ee),
    Slice: Q.Vec(Q.Nat8),
    Text: Q.Text,
    True: Q.Null,
    False: Q.Null,
    Float: Q.Float64,
    Principal: Q.Principal
  }));
  const ne = Q.Record({
    thumbnail: Q.Text,
    name: Q.Text,
    frontend: Q.Opt(Q.Text),
    description: Q.Text,
    principal_id: Q.Principal,
    details: Q.Vec(Q.Tuple(Q.Text, ee))
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistentItem: Q.Null
  }), ae = Q.Variant({
    Ok: Q.Opt(Q.Text),
    Err: ie
  });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get: Q.Func([Q.Principal], [Q.Opt(ne)], ["query"]),
    get_all: Q.Func([], [Q.Vec(ne)], ["query"]),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Principal], [ae], []),
    set_controller: Q.Func([Q.Principal], [ae], [])
  });
};
const init$5 = () => [];
token_registry_did.init = init$5;
var token_standards = {}, methods = {}, __awaiter$5 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(methods, "__esModule", { value: !0 });
methods.parseAmountToSend = methods.getDecimalsFromMetadata = void 0;
const send$5 = (Q, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getMetadata$5 = (Q) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getBalance$5 = (Q, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), burnXTC$5 = (Q, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getDecimals$5 = (Q) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getDecimalsFromMetadata = (Q) => "fungible" in Q ? Q.fungible.decimals : 0;
methods.getDecimalsFromMetadata = getDecimalsFromMetadata;
const parseAmountToSend = (Q, ee) => BigInt(parseFloat(Q) * Math.pow(10, ee));
methods.parseAmountToSend = parseAmountToSend;
methods.default = {
  send: send$5,
  getMetadata: getMetadata$5,
  getBalance: getBalance$5,
  burnXTC: burnXTC$5,
  getDecimals: getDecimals$5
};
var xtcMethods = {}, __awaiter$4 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(xtcMethods, "__esModule", { value: !0 });
const principal_1$4 = require$$4, methods_1$4 = methods, getMetadata$4 = (Q) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ee = yield Q._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$4 = (Q, { to: ee, amount: ne }) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ie = yield Q._transferErc20(principal_1$4.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$4 = (Q, ee) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$4(Q);
  return { value: (yield Q._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$4 = (Q, { to: ee, amount: ne }) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ie = yield getDecimals$4(Q), ae = (0, methods_1$4.parseAmountToSend)(ne, ie);
  return Q._burn({ canister_id: ee, amount: ae });
}), getDecimals$4 = (Q) => __awaiter$4(void 0, void 0, void 0, function* () {
  return (0, methods_1$4.getDecimalsFromMetadata)(yield getMetadata$4(Q));
});
xtcMethods.default = {
  send: send$4,
  getMetadata: getMetadata$4,
  getBalance: getBalance$4,
  burnXTC: burnXTC$4,
  getDecimals: getDecimals$4
};
var extMethods = {}, __awaiter$3 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(extMethods, "__esModule", { value: !0 });
const agent_1 = require$$5, principal_1$3 = require$$4, methods_1$3 = methods, getMetadata$3 = (Q) => __awaiter$3(void 0, void 0, void 0, function* () {
  Q._balance;
  const ee = agent_1.Actor.canisterIdOf(Q).toText();
  if (!(yield Q._extensions()).includes("@ext/common"))
    throw new Error("The provided canister does not implement commont extension");
  const ie = yield Q._metadata(ee);
  if ("ok" in ie)
    return ie.ok;
  throw new Error(Object.keys(ie.err)[0]);
}), send$3 = (Q, { to: ee, from: ne, amount: ie }) => __awaiter$3(void 0, void 0, void 0, function* () {
  const ae = new Array(32).fill(0), ce = agent_1.Actor.canisterIdOf(Q).toText(), le = {
    to: { principal: principal_1$3.Principal.fromText(ee) },
    from: { principal: principal_1$3.Principal.from(ne) },
    amount: ie,
    token: ce,
    memo: ae,
    notify: !1,
    subaccount: [],
    fee: BigInt(0)
  }, de = yield Q._transfer(le);
  if ("ok" in de)
    return { amount: de.ok.toString() };
  throw new Error(Object.keys(de.err)[0]);
}), getBalance$3 = (Q, ee) => __awaiter$3(void 0, void 0, void 0, function* () {
  const ne = agent_1.Actor.canisterIdOf(Q).toText(), ie = yield Q._balance({
    token: ne,
    user: { principal: ee }
  }), ae = yield getDecimals$3(Q);
  if ("ok" in ie)
    return { value: ie.ok.toString(), decimals: ae };
  throw new Error(Object.keys(ie.err)[0]);
}), burnXTC$3 = (Q, ee) => __awaiter$3(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$3 = (Q) => __awaiter$3(void 0, void 0, void 0, function* () {
  return (0, methods_1$3.getDecimalsFromMetadata)(yield getMetadata$3(Q));
});
extMethods.default = {
  send: send$3,
  getMetadata: getMetadata$3,
  getBalance: getBalance$3,
  burnXTC: burnXTC$3,
  getDecimals: getDecimals$3
};
var dip20Methods = {}, __awaiter$2 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(dip20Methods, "__esModule", { value: !0 });
const principal_1$2 = require$$4, methods_1$2 = methods, getMetadata$2 = (Q) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ee = yield Q._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$2 = (Q, { to: ee, amount: ne }) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ie = yield Q._transfer(principal_1$2.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$2 = (Q, ee) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$2(Q);
  return { value: (yield Q._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$2 = (Q, ee) => __awaiter$2(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$2 = (Q) => __awaiter$2(void 0, void 0, void 0, function* () {
  return (0, methods_1$2.getDecimalsFromMetadata)(yield getMetadata$2(Q));
});
dip20Methods.default = {
  send: send$2,
  getMetadata: getMetadata$2,
  getBalance: getBalance$2,
  burnXTC: burnXTC$2,
  getDecimals: getDecimals$2
};
var xtc_did = {};
Object.defineProperty(xtc_did, "__esModule", { value: !0 });
xtc_did.init = void 0;
xtc_did.default = ({ IDL: Q }) => {
  const ee = Q.Variant({
    InsufficientAllowance: Q.Null,
    InsufficientBalance: Q.Null,
    ErrorOperationStyle: Q.Null,
    Unauthorized: Q.Null,
    LedgerTrap: Q.Null,
    ErrorTo: Q.Null,
    Other: Q.Null,
    BlockUsed: Q.Null,
    AmountTooSmall: Q.Null
  }), ne = Q.Variant({ Ok: Q.Nat, Err: ee }), ie = Q.Nat64, ae = Q.Variant({
    InsufficientBalance: Q.Null,
    InvalidTokenContract: Q.Null,
    NotSufficientLiquidity: Q.Null
  }), ce = Q.Variant({ Ok: ie, Err: ae }), le = Q.Variant({
    FAILED: Q.Null,
    SUCCEEDED: Q.Null
  }), de = Q.Variant({
    Approve: Q.Record({ to: Q.Principal, from: Q.Principal }),
    Burn: Q.Record({ to: Q.Principal, from: Q.Principal }),
    Mint: Q.Record({ to: Q.Principal }),
    CanisterCreated: Q.Record({
      from: Q.Principal,
      canister: Q.Principal
    }),
    CanisterCalled: Q.Record({
      from: Q.Principal,
      method_name: Q.Text,
      canister: Q.Principal
    }),
    Transfer: Q.Record({ to: Q.Principal, from: Q.Principal }),
    TransferFrom: Q.Record({
      to: Q.Principal,
      from: Q.Principal,
      caller: Q.Principal
    })
  }), ye = Q.Record({
    fee: Q.Nat64,
    status: le,
    kind: de,
    cycles: Q.Nat64,
    timestamp: Q.Nat64
  }), fe = Q.Record({
    data: Q.Vec(ye),
    next_offset: ie,
    next_canister_id: Q.Opt(Q.Principal)
  }), Be = Q.Record({
    fee: Q.Nat,
    decimals: Q.Nat8,
    owner: Q.Principal,
    logo: Q.Text,
    name: Q.Text,
    totalSupply: Q.Nat,
    symbol: Q.Text
  }), Ee = Q.Variant({
    transferFrom: Q.Null,
    burn: Q.Null,
    mint: Q.Null,
    approve: Q.Null,
    canisterCalled: Q.Null,
    transfer: Q.Null,
    canisterCreated: Q.Null
  }), me = Q.Int, ge = Q.Record({
    op: Ee,
    to: Q.Principal,
    fee: Q.Nat,
    status: le,
    from: Q.Principal,
    timestamp: me,
    caller: Q.Opt(Q.Principal),
    index: Q.Nat,
    amount: Q.Nat
  }), we = Q.Variant({ NotSufficientLiquidity: Q.Null }), be = Q.Variant({ Ok: ie, Err: we }), Oe = Q.Record({
    fee: Q.Nat,
    transfers_count: Q.Nat64,
    balance: Q.Nat64,
    mints_count: Q.Nat64,
    transfers_from_count: Q.Nat64,
    canisters_created_count: Q.Nat64,
    supply: Q.Nat,
    burns_count: Q.Nat64,
    approvals_count: Q.Nat64,
    proxy_calls_count: Q.Nat64,
    history_events: Q.Nat64
  }), He = Q.Variant({
    Ok: Q.Record({ return: Q.Vec(Q.Nat8) }),
    Err: Q.Text
  }), Se = Q.Variant({
    Ok: Q.Record({ canister_id: Q.Principal }),
    Err: Q.Text
  }), Ge = Q.Variant({ Ok: Q.Null, Err: Q.Text });
  return Q.Service({
    allowance: Q.Func([Q.Principal, Q.Principal], [Q.Nat], ["query"]),
    approve: Q.Func([Q.Principal, Q.Nat], [ne], []),
    balance: Q.Func([Q.Opt(Q.Principal)], [Q.Nat64], []),
    balanceOf: Q.Func([Q.Principal], [Q.Nat], ["query"]),
    burn: Q.Func([Q.Record({ canister_id: Q.Principal, amount: Q.Nat64 })], [ce], []),
    decimals: Q.Func([], [Q.Nat8], ["query"]),
    events: Q.Func([Q.Record({ offset: Q.Opt(Q.Nat64), limit: Q.Nat16 })], [fe], ["query"]),
    getMetadata: Q.Func([], [Be], ["query"]),
    getTransaction: Q.Func([Q.Nat], [ge], []),
    getTransactions: Q.Func([Q.Nat, Q.Nat], [Q.Vec(ge)], []),
    get_transaction: Q.Func([ie], [Q.Opt(ye)], []),
    halt: Q.Func([], [], []),
    historySize: Q.Func([], [Q.Nat], ["query"]),
    logo: Q.Func([], [Q.Text], ["query"]),
    mint: Q.Func([Q.Principal, Q.Nat], [be], []),
    name: Q.Func([], [Q.Text], ["query"]),
    nameErc20: Q.Func([], [Q.Text], ["query"]),
    stats: Q.Func([], [Oe], ["query"]),
    symbol: Q.Func([], [Q.Text], ["query"]),
    totalSupply: Q.Func([], [Q.Nat], ["query"]),
    transfer: Q.Func([Q.Principal, Q.Nat], [ne], []),
    transferErc20: Q.Func([Q.Principal, Q.Nat], [ne], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ne], []),
    wallet_balance: Q.Func([], [Q.Record({ amount: Q.Nat64 })], ["query"]),
    wallet_call: Q.Func([
      Q.Record({
        args: Q.Vec(Q.Nat8),
        cycles: Q.Nat64,
        method_name: Q.Text,
        canister: Q.Principal
      })
    ], [He], []),
    wallet_create_canister: Q.Func([
      Q.Record({
        controller: Q.Opt(Q.Principal),
        cycles: Q.Nat64
      })
    ], [Se], []),
    wallet_create_wallet: Q.Func([
      Q.Record({
        controller: Q.Opt(Q.Principal),
        cycles: Q.Nat64
      })
    ], [Se], []),
    wallet_send: Q.Func([Q.Record({ canister: Q.Principal, amount: Q.Nat64 })], [Ge], [])
  });
};
const init$4 = () => [];
xtc_did.init = init$4;
var dip_20_did = {};
Object.defineProperty(dip_20_did, "__esModule", { value: !0 });
dip_20_did.init = void 0;
dip_20_did.default = ({ IDL: Q }) => {
  const ee = Q.Variant({
    InsufficientAllowance: Q.Null,
    InsufficientBalance: Q.Null,
    ErrorOperationStyle: Q.Null,
    Unauthorized: Q.Null,
    LedgerTrap: Q.Null,
    ErrorTo: Q.Null,
    Other: Q.Null,
    BlockUsed: Q.Null,
    AmountTooSmall: Q.Null
  }), ne = Q.Variant({ Ok: Q.Nat, Err: ee }), ie = Q.Record({
    fee: Q.Nat,
    decimals: Q.Nat8,
    owner: Q.Principal,
    logo: Q.Text,
    name: Q.Text,
    totalSupply: Q.Nat,
    symbol: Q.Text
  }), ae = Q.Record({
    holderNumber: Q.Nat64,
    deployTime: Q.Nat64,
    metadata: ie,
    historySize: Q.Nat64,
    cycles: Q.Nat64,
    feeTo: Q.Principal
  });
  return Q.Service({
    allowance: Q.Func([Q.Principal, Q.Principal], [Q.Nat], ["query"]),
    approve: Q.Func([Q.Principal, Q.Nat], [ne], []),
    balanceOf: Q.Func([Q.Principal], [Q.Nat], ["query"]),
    decimals: Q.Func([], [Q.Nat8], ["query"]),
    getAllowanceSize: Q.Func([], [Q.Nat64], ["query"]),
    getBlockUsed: Q.Func([], [Q.Vec(Q.Nat64)], ["query"]),
    getHolders: Q.Func([Q.Nat64, Q.Nat64], [Q.Vec(Q.Tuple(Q.Principal, Q.Nat))], ["query"]),
    getMetadata: Q.Func([], [ie], ["query"]),
    getTokenInfo: Q.Func([], [ae], ["query"]),
    getUserApprovals: Q.Func([Q.Principal], [Q.Vec(Q.Tuple(Q.Principal, Q.Nat))], ["query"]),
    historySize: Q.Func([], [Q.Nat64], ["query"]),
    isBlockUsed: Q.Func([Q.Nat64], [Q.Bool], ["query"]),
    logo: Q.Func([], [Q.Text], ["query"]),
    mint: Q.Func([Q.Opt(Q.Vec(Q.Nat8)), Q.Nat64], [ne], []),
    mintFor: Q.Func([Q.Opt(Q.Vec(Q.Nat8)), Q.Nat64, Q.Principal], [ne], []),
    name: Q.Func([], [Q.Text], ["query"]),
    owner: Q.Func([], [Q.Principal], ["query"]),
    setFee: Q.Func([Q.Nat], [], []),
    setFeeTo: Q.Func([Q.Principal], [], []),
    setGenesis: Q.Func([], [ne], []),
    setLogo: Q.Func([Q.Text], [], []),
    setName: Q.Func([Q.Text], [], []),
    setOwner: Q.Func([Q.Principal], [], []),
    symbol: Q.Func([], [Q.Text], ["query"]),
    totalSupply: Q.Func([], [Q.Nat], ["query"]),
    transfer: Q.Func([Q.Principal, Q.Nat], [ne], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ne], []),
    withdraw: Q.Func([Q.Nat64, Q.Text], [ne], [])
  });
};
const init$3 = ({ IDL: Q }) => [
  Q.Text,
  Q.Text,
  Q.Text,
  Q.Nat8,
  Q.Nat,
  Q.Principal,
  Q.Nat,
  Q.Principal,
  Q.Principal
];
dip_20_did.init = init$3;
var ledger_did = {};
Object.defineProperty(ledger_did, "__esModule", { value: !0 });
ledger_did.init = void 0;
ledger_did.default = ({ IDL: Q }) => {
  const ee = Q.Text, ne = Q.Record({ secs: Q.Nat64, nanos: Q.Nat32 }), ie = Q.Record({
    max_message_size_bytes: Q.Opt(Q.Nat32),
    node_max_memory_size_bytes: Q.Opt(Q.Nat32),
    controller_id: Q.Principal
  }), ae = Q.Record({ e8s: Q.Nat64 });
  Q.Record({
    send_whitelist: Q.Vec(Q.Tuple(Q.Principal)),
    minting_account: ee,
    transaction_window: Q.Opt(ne),
    max_message_size_bytes: Q.Opt(Q.Nat32),
    archive_options: Q.Opt(ie),
    initial_values: Q.Vec(Q.Tuple(ee, ae))
  });
  const ce = Q.Record({ account: ee }), le = Q.Vec(Q.Nat8), de = Q.Nat64, ye = Q.Record({
    to_subaccount: Q.Opt(le),
    from_subaccount: Q.Opt(le),
    to_canister: Q.Principal,
    max_fee: ae,
    block_height: de
  }), fe = Q.Nat64, Be = Q.Record({ timestamp_nanos: Q.Nat64 }), Ee = Q.Record({
    to: ee,
    fee: ae,
    memo: fe,
    from_subaccount: Q.Opt(le),
    created_at_time: Q.Opt(Be),
    amount: ae
  });
  return Q.Service({
    account_balance_dfx: Q.Func([ce], [ae], ["query"]),
    notify_dfx: Q.Func([ye], [], []),
    send_dfx: Q.Func([Ee], [de], [])
  });
};
const init$2 = ({ IDL: Q }) => {
  const ee = Q.Text, ne = Q.Record({ secs: Q.Nat64, nanos: Q.Nat32 }), ie = Q.Record({
    max_message_size_bytes: Q.Opt(Q.Nat32),
    node_max_memory_size_bytes: Q.Opt(Q.Nat32),
    controller_id: Q.Principal
  }), ae = Q.Record({ e8s: Q.Nat64 });
  return [Q.Record({
    send_whitelist: Q.Vec(Q.Tuple(Q.Principal)),
    minting_account: ee,
    transaction_window: Q.Opt(ne),
    max_message_size_bytes: Q.Opt(Q.Nat32),
    archive_options: Q.Opt(ie),
    initial_values: Q.Vec(Q.Tuple(ee, ae))
  })];
};
ledger_did.init = init$2;
var wicp_did = {};
Object.defineProperty(wicp_did, "__esModule", { value: !0 });
wicp_did.init = void 0;
wicp_did.default = ({ IDL: Q }) => {
  const ee = Q.Variant({
    InsufficientAllowance: Q.Null,
    InsufficientBalance: Q.Null,
    ErrorOperationStyle: Q.Null,
    Unauthorized: Q.Null,
    LedgerTrap: Q.Null,
    ErrorTo: Q.Null,
    Other: Q.Null,
    BlockUsed: Q.Null,
    AmountTooSmall: Q.Null
  }), ne = Q.Variant({ Ok: Q.Nat, Err: ee }), ie = Q.Record({
    fee: Q.Nat,
    decimals: Q.Nat8,
    owner: Q.Principal,
    logo: Q.Text,
    name: Q.Text,
    totalSupply: Q.Nat,
    symbol: Q.Text
  }), ae = Q.Record({
    holderNumber: Q.Nat64,
    deployTime: Q.Nat64,
    metadata: ie,
    historySize: Q.Nat64,
    cycles: Q.Nat64,
    feeTo: Q.Principal
  });
  return Q.Service({
    allowance: Q.Func([Q.Principal, Q.Principal], [Q.Nat], ["query"]),
    approve: Q.Func([Q.Principal, Q.Nat], [ne], []),
    balanceOf: Q.Func([Q.Principal], [Q.Nat], ["query"]),
    decimals: Q.Func([], [Q.Nat8], ["query"]),
    getAllowanceSize: Q.Func([], [Q.Nat64], ["query"]),
    getHolders: Q.Func([Q.Nat64, Q.Nat64], [Q.Vec(Q.Tuple(Q.Principal, Q.Nat))], ["query"]),
    getLogo: Q.Func([], [Q.Text], ["query"]),
    getMetadata: Q.Func([], [ie], ["query"]),
    getTokenInfo: Q.Func([], [ae], ["query"]),
    getUserApprovals: Q.Func([Q.Principal], [Q.Vec(Q.Tuple(Q.Principal, Q.Nat))], ["query"]),
    historySize: Q.Func([], [Q.Nat64], ["query"]),
    mint: Q.Func([Q.Opt(Q.Vec(Q.Nat8)), Q.Nat64], [ne], []),
    name: Q.Func([], [Q.Text], ["query"]),
    owner: Q.Func([], [Q.Principal], ["query"]),
    setFee: Q.Func([Q.Nat], [], []),
    setFeeTo: Q.Func([Q.Principal], [], []),
    setLogo: Q.Func([Q.Text], [], []),
    setName: Q.Func([Q.Text], [], []),
    setOwner: Q.Func([Q.Principal], [], []),
    symbol: Q.Func([], [Q.Text], ["query"]),
    totalSupply: Q.Func([], [Q.Nat], ["query"]),
    transfer: Q.Func([Q.Principal, Q.Nat], [ne], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ne], []),
    withdraw: Q.Func([Q.Nat64, Q.Text], [ne], [])
  });
};
const init$1 = ({ IDL: Q }) => [
  Q.Text,
  Q.Text,
  Q.Text,
  Q.Nat8,
  Q.Nat,
  Q.Principal,
  Q.Nat,
  Q.Principal,
  Q.Principal
];
wicp_did.init = init$1;
var wicpMethods = {}, __awaiter$1 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(wicpMethods, "__esModule", { value: !0 });
const principal_1$1 = require$$4, methods_1$1 = methods, getMetadata$1 = (Q) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ee = yield Q._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$1 = (Q, { to: ee, amount: ne }) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ie = yield Q._transfer(principal_1$1.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$1 = (Q, ee) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$1(Q);
  return { value: (yield Q._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$1 = (Q, ee) => __awaiter$1(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$1 = (Q) => __awaiter$1(void 0, void 0, void 0, function* () {
  return (0, methods_1$1.getDecimalsFromMetadata)(yield getMetadata$1(Q));
});
wicpMethods.default = {
  send: send$1,
  getMetadata: getMetadata$1,
  getBalance: getBalance$1,
  burnXTC: burnXTC$1,
  getDecimals: getDecimals$1
};
var rosettaMethods = {}, validations = {};
(function(Q) {
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.validateToken = Q.validateCanisterId = Q.validateAccountId = Q.validatePrincipalId = Q.isValidPrincipal = Q.ALPHANUM_REGEX = Q.PRINCIPAL_REGEX = Q.CANISTER_MAX_LENGTH = void 0;
  const ee = require$$4;
  Q.CANISTER_MAX_LENGTH = 27, Q.PRINCIPAL_REGEX = /(\w{5}-){10}\w{3}/, Q.ALPHANUM_REGEX = /^[a-zA-Z0-9]+$/;
  const ne = (de) => ee.Principal.fromText(de).toText() === de;
  Q.isValidPrincipal = ne;
  const ie = (de) => {
    try {
      return Boolean(Q.PRINCIPAL_REGEX.test(de) && (0, Q.isValidPrincipal)(de));
    } catch {
      return !1;
    }
  };
  Q.validatePrincipalId = ie;
  const ae = (de) => de.length === 64 && Q.ALPHANUM_REGEX.test(de);
  Q.validateAccountId = ae;
  const ce = (de) => {
    try {
      return Boolean(de.length <= Q.CANISTER_MAX_LENGTH && (0, Q.isValidPrincipal)(de));
    } catch {
      return !1;
    }
  };
  Q.validateCanisterId = ce;
  const le = (de) => Boolean(!!de.decimal && !!de.name && !!de.symbol);
  Q.validateToken = le;
})(validations);
var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        fe(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        fe(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function fe(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    fe((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(rosettaMethods, "__esModule", { value: !0 });
const principal_1 = require$$4, cross_fetch_1 = __importDefault(browserPonyfill.exports), methods_1 = methods, account_1 = account, validations_1 = validations, DECIMALS = 8, NET_ID = {
  blockchain: "Internet Computer",
  network: "00000000000000020101"
}, ROSETTA_URL = "https://rosetta-api.internetcomputer.org", getMetadata = (Q) => __awaiter(void 0, void 0, void 0, function* () {
  return {
    fungible: {
      symbol: "ICP",
      decimals: DECIMALS,
      name: "ICP",
      fee: 1e4
    }
  };
}), send = (Q, { to: ee, amount: ne, opts: ie }) => __awaiter(void 0, void 0, void 0, function* () {
  const ae = {
    fee: BigInt(1e4),
    memo: BigInt(0)
  };
  return { height: yield (yield Q._send_dfx({
    to: (0, validations_1.isValidPrincipal)(ee) ? (0, account_1.getAccountId)(principal_1.Principal.fromText(ee)) : ee,
    fee: { e8s: (ie == null ? void 0 : ie.fee) || ae.fee },
    amount: { e8s: ne },
    memo: ie != null && ie.memo ? BigInt(ie.memo) : ae.memo,
    from_subaccount: [],
    created_at_time: []
  })).toString() };
}), getBalance = (Q, ee) => __awaiter(void 0, void 0, void 0, function* () {
  const ne = (0, account_1.getAccountId)(ee), ie = yield getDecimals(), ae = yield (0, cross_fetch_1.default)(`${ROSETTA_URL}/account/balance`, {
    method: "POST",
    body: JSON.stringify({
      network_identifier: NET_ID,
      account_identifier: {
        address: ne
      }
    }),
    headers: {
      "Content-Type": "application/json",
      Accept: "*/*"
    }
  });
  if (!ae.ok)
    return { value: "Error", decimals: ie, error: ae.statusText };
  const { balances: ce } = yield ae.json(), [{ value: le, currency: de }] = ce;
  return { value: le, decimals: de.decimals };
}), burnXTC = (Q, ee) => __awaiter(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals = (Q) => __awaiter(void 0, void 0, void 0, function* () {
  return (0, methods_1.getDecimalsFromMetadata)(yield getMetadata());
});
rosettaMethods.default = {
  send,
  getMetadata,
  getBalance,
  burnXTC,
  getDecimals
};
var icpStandardMethods = {}, hasRequiredIcpStandardMethods;
function requireIcpStandardMethods() {
  if (hasRequiredIcpStandardMethods)
    return icpStandardMethods;
  hasRequiredIcpStandardMethods = 1;
  var Q = commonjsGlobal && commonjsGlobal.__awaiter || function(me, ge, we, be) {
    function Oe(He) {
      return He instanceof we ? He : new we(function(Se) {
        Se(He);
      });
    }
    return new (we || (we = Promise))(function(He, Se) {
      function Ge(Je) {
        try {
          Pe(be.next(Je));
        } catch (tt) {
          Se(tt);
        }
      }
      function Fe(Je) {
        try {
          Pe(be.throw(Je));
        } catch (tt) {
          Se(tt);
        }
      }
      function Pe(Je) {
        Je.done ? He(Je.value) : Oe(Je.value).then(Ge, Fe);
      }
      Pe((be = be.apply(me, ge || [])).next());
    });
  };
  Object.defineProperty(icpStandardMethods, "__esModule", { value: !0 });
  const ee = require$$4, ne = require$$5, ie = methods, ae = account, ce = validations, le = requireRegistries(), de = (me) => Q(void 0, void 0, void 0, function* () {
    var ge, we, be;
    const Oe = ne.Actor.agentOf(me);
    try {
      const Se = yield new le.TokenRegistry(Oe).get(ne.Actor.canisterIdOf(me).toString()), { fee: Ge = 2e-3, decimals: Fe = 8 } = (Se == null ? void 0 : Se.details) || {}, Pe = Number((ge = Ge == null ? void 0 : Ge.toString) === null || ge === void 0 ? void 0 : ge.call(Ge)), Je = Number((we = Fe == null ? void 0 : Fe.toString) === null || we === void 0 ? void 0 : we.call(Fe)), tt = Pe * Math.pow(10, Je);
      return {
        fungible: {
          symbol: ((be = Se == null ? void 0 : Se.details) === null || be === void 0 ? void 0 : be.symbol) || "ICP",
          name: (Se == null ? void 0 : Se.name) || "ICP",
          decimals: Je,
          fee: tt
        }
      };
    } catch (He) {
      return console.error("Error while fetching token metadata, falling back to default values", He), {
        fungible: {
          symbol: "ICP",
          name: "ICP",
          decimals: 8,
          fee: 1e4
        }
      };
    }
  }), ye = (me, { to: ge, amount: we, opts: be }) => Q(void 0, void 0, void 0, function* () {
    const Oe = yield de(me), { fee: He = 2e-3, decimals: Se = BigInt(8) } = (Oe == null ? void 0 : Oe.fungible) || {}, Ge = {
      fee: BigInt(He * Math.pow(10, parseInt(Se.toString(), 10))),
      memo: BigInt(0)
    };
    return { height: yield (yield me._send_dfx({
      to: (0, ce.validatePrincipalId)(ge) ? (0, ae.getAccountId)(ee.Principal.fromText(ge)) : ge,
      fee: { e8s: (be == null ? void 0 : be.fee) || Ge.fee },
      amount: { e8s: we },
      memo: be != null && be.memo ? BigInt(be.memo) : Ge.memo,
      from_subaccount: [],
      created_at_time: []
    })).toString() };
  }), fe = (me, ge) => Q(void 0, void 0, void 0, function* () {
    try {
      const we = (0, ae.getAccountId)(ge);
      return { value: (yield me._account_balance_dfx({ account: we })).e8s.toString(), decimals: 8 };
    } catch {
      return {
        value: "Error",
        decimals: 8,
        error: "Error while fetching your balance"
      };
    }
  }), Be = (me, ge) => Q(void 0, void 0, void 0, function* () {
    throw new Error("BURN NOT SUPPORTED");
  }), Ee = (me) => Q(void 0, void 0, void 0, function* () {
    return (0, ie.getDecimalsFromMetadata)(yield de(me));
  });
  return icpStandardMethods.default = {
    send: ye,
    getMetadata: de,
    getBalance: fe,
    burnXTC: Be,
    getDecimals: Ee
  }, icpStandardMethods;
}
var hasRequiredToken_standards;
function requireToken_standards() {
  if (hasRequiredToken_standards)
    return token_standards;
  hasRequiredToken_standards = 1;
  var Q = commonjsGlobal && commonjsGlobal.__awaiter || function(Fe, Pe, Je, tt) {
    function ft(Tt) {
      return Tt instanceof Je ? Tt : new Je(function(Xe) {
        Xe(Tt);
      });
    }
    return new (Je || (Je = Promise))(function(Tt, Xe) {
      function ht(pt) {
        try {
          Gt(tt.next(pt));
        } catch (xt) {
          Xe(xt);
        }
      }
      function Qt(pt) {
        try {
          Gt(tt.throw(pt));
        } catch (xt) {
          Xe(xt);
        }
      }
      function Gt(pt) {
        pt.done ? Tt(pt.value) : ft(pt.value).then(ht, Qt);
      }
      Gt((tt = tt.apply(Fe, Pe || [])).next());
    });
  }, ee = commonjsGlobal && commonjsGlobal.__importDefault || function(Fe) {
    return Fe && Fe.__esModule ? Fe : { default: Fe };
  };
  Object.defineProperty(token_standards, "__esModule", { value: !0 }), token_standards.parseBalance = token_standards.createTokenActor = void 0;
  const ne = actorFactory, ie = ee(methods), ae = ee(xtcMethods), ce = ee(extMethods), le = ee(dip20Methods), de = ee(ext_did), ye = ee(xtc_did), fe = ee(dip_20_did), Be = ee(ledger_did), Ee = standards, me = ee(wicp_did), ge = ee(wicpMethods), we = ee(rosettaMethods), be = ee(requireIcpStandardMethods()), Oe = (Fe) => ({
    [Ee.TOKEN.xtc]: ae.default,
    [Ee.TOKEN.ext]: ce.default,
    [Ee.TOKEN.dip20]: le.default,
    [Ee.TOKEN.wicp]: ge.default,
    [Ee.TOKEN.rosetta]: we.default,
    [Ee.TOKEN.icp]: be.default
  })[Fe] || ie.default, He = (Fe) => {
    const Pe = {
      [Ee.TOKEN.xtc]: ye.default,
      [Ee.TOKEN.ext]: de.default,
      [Ee.TOKEN.dip20]: fe.default,
      [Ee.TOKEN.wicp]: me.default,
      [Ee.TOKEN.rosetta]: Be.default,
      [Ee.TOKEN.icp]: Be.default
    }[Fe];
    if (!Pe)
      throw new Error(`Standard ${Fe} Not Implemented`);
    return Pe;
  }, Se = (Fe, Pe, Je) => Q(void 0, void 0, void 0, function* () {
    const tt = He(Je);
    return new ((0, ne.createExtendedActorClass)(Pe, Oe(Je), Fe, tt))();
  });
  token_standards.createTokenActor = Se;
  const Ge = (Fe) => (parseInt(Fe.value, 10) / Math.pow(10, Fe.decimals)).toString();
  return token_standards.parseBalance = Ge, token_standards.default = {}, token_standards;
}
var hasRequiredToken_registry;
function requireToken_registry() {
  return hasRequiredToken_registry || (hasRequiredToken_registry = 1, function(Q) {
    var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(He, Se, Ge, Fe) {
      function Pe(Je) {
        return Je instanceof Ge ? Je : new Ge(function(tt) {
          tt(Je);
        });
      }
      return new (Ge || (Ge = Promise))(function(Je, tt) {
        function ft(ht) {
          try {
            Xe(Fe.next(ht));
          } catch (Qt) {
            tt(Qt);
          }
        }
        function Tt(ht) {
          try {
            Xe(Fe.throw(ht));
          } catch (Qt) {
            tt(Qt);
          }
        }
        function Xe(ht) {
          ht.done ? Je(ht.value) : Pe(ht.value).then(ft, Tt);
        }
        Xe((Fe = Fe.apply(He, Se || [])).next());
      });
    }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(He) {
      return He && He.__esModule ? He : { default: He };
    };
    Object.defineProperty(Q, "__esModule", { value: !0 }), Q.getTokens = Q.TokenRegistry = Q.getTokenActor = Q.TOKEN_STANDARDS = void 0;
    const ie = require$$5, ae = ne(browserPonyfill.exports), ce = ne(token_registry_did), le = ne(standard_registry), de = actorFactory, ye = registry, fe = constants, Be = requireToken_standards(), Ee = standards, me = "b7hhy-tyaaa-aaaah-abbja-cai", ge = new ie.HttpAgent({ fetch: ae.default, host: fe.IC_HOST });
    Q.TOKEN_STANDARDS = Object.values(Ee.TOKEN);
    const we = ({ canisterId: He, agent: Se, standard: Ge }) => {
      if (!Q.TOKEN_STANDARDS.includes(Ge))
        throw console.error(`Standard ${Ge} is not implemented`), new Error(`standard is not supported: ${Ge}`);
      return (0, Be.createTokenActor)(He, Se, Ge);
    };
    Q.getTokenActor = we;
    class be extends le.default {
      constructor(Se) {
        super(me, Se), this.getAll = () => ee(this, void 0, void 0, function* () {
          return (yield this.actor.get_all()).map(ye.formatMetadata);
        }), this.actor = (0, de.generateActor)({
          agent: Se || ge,
          canisterId: me,
          IDL: ce.default
        });
      }
    }
    Q.TokenRegistry = be;
    const Oe = ({ agent: He = ge } = {}) => ee(void 0, void 0, void 0, function* () {
      return (yield new be(He).getAll()).map((Fe) => Object.assign(Object.assign({}, Fe), { logo: Fe.thumbnail, name: Fe.name, description: Fe.description, website: Fe.frontend.length ? Fe.frontend[0] : "", principal_id: Fe.principal_id, standard: Fe.details.standard, total_supply: [Fe.details.total_supply], symbol: Fe.details.symbol }));
    });
    Q.getTokens = Oe, Q.default = {
      getTokenActor: Q.getTokenActor,
      getTokens: Q.getTokens,
      addToken: ({ agent: He, tokenInfo: Se }) => ee(void 0, void 0, void 0, function* () {
        return new be(He).add(Se);
      }),
      removeToken: ({ agent: He, canisterId: Se }) => ee(void 0, void 0, void 0, function* () {
        return new be(He).remove(Se);
      })
    };
  }(token_registry)), token_registry;
}
var address_book = {}, address_book_did = {};
Object.defineProperty(address_book_did, "__esModule", { value: !0 });
const addressBookIDL = ({ IDL: Q }) => {
  const ee = Q.Variant({
    PrincipalId: Q.Principal,
    AccountId: Q.Text,
    Icns: Q.Text
  }), ne = Q.Record({
    name: Q.Text,
    description: Q.Opt(Q.Text),
    emoji: Q.Opt(Q.Text),
    value: ee
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistentItem: Q.Null
  }), ae = Q.Variant({
    Ok: Q.Null,
    Err: ie
  });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get_all: Q.Func([], [Q.Vec(ne)], []),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Text], [ae], [])
  });
};
address_book_did.default = addressBookIDL;
(function(Q) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Be, Ee, me, ge) {
    function we(be) {
      return be instanceof me ? be : new me(function(Oe) {
        Oe(be);
      });
    }
    return new (me || (me = Promise))(function(be, Oe) {
      function He(Fe) {
        try {
          Ge(ge.next(Fe));
        } catch (Pe) {
          Oe(Pe);
        }
      }
      function Se(Fe) {
        try {
          Ge(ge.throw(Fe));
        } catch (Pe) {
          Oe(Pe);
        }
      }
      function Ge(Fe) {
        Fe.done ? be(Fe.value) : we(Fe.value).then(He, Se);
      }
      Ge((ge = ge.apply(Be, Ee || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Be) {
    return Be && Be.__esModule ? Be : { default: Be };
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.removeAddress = Q.addAddress = Q.getAddresses = Q.getAddressBookActor = void 0;
  const ie = require$$5, ae = ne(address_book_did), ce = "i73cm-daaaa-aaaah-abhea-cai", le = (Be) => ie.Actor.createActor(ae.default, { agent: Be, canisterId: ce });
  Q.getAddressBookActor = le;
  const de = (Be) => ee(void 0, void 0, void 0, function* () {
    return (yield (0, Q.getAddressBookActor)(Be).get_all()).map((ge) => ({
      name: ge.name,
      description: ge.description,
      emoji: ge.emoji,
      value: ge.value
    }));
  });
  Q.getAddresses = de;
  const ye = (Be, Ee) => ee(void 0, void 0, void 0, function* () {
    return yield (0, Q.getAddressBookActor)(Be).add({
      name: Ee.name,
      description: Ee.description,
      emoji: Ee.emoji,
      value: Ee.value
    });
  });
  Q.addAddress = ye;
  const fe = (Be, Ee) => ee(void 0, void 0, void 0, function* () {
    return yield (0, Q.getAddressBookActor)(Be).remove(Ee);
  });
  Q.removeAddress = fe, Q.default = {
    getAddressBookActor: Q.getAddressBookActor,
    getAddresses: Q.getAddresses,
    addAddress: Q.addAddress,
    removeAddress: Q.removeAddress
  };
})(address_book);
var hasRequiredRegistries;
function requireRegistries() {
  return hasRequiredRegistries || (hasRequiredRegistries = 1, function(Q) {
    var ee = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(ie, ae, ce, le) {
      le === void 0 && (le = ce);
      var de = Object.getOwnPropertyDescriptor(ae, ce);
      (!de || ("get" in de ? !ae.__esModule : de.writable || de.configurable)) && (de = { enumerable: !0, get: function() {
        return ae[ce];
      } }), Object.defineProperty(ie, le, de);
    } : function(ie, ae, ce, le) {
      le === void 0 && (le = ce), ie[le] = ae[ce];
    }), ne = commonjsGlobal && commonjsGlobal.__exportStar || function(ie, ae) {
      for (var ce in ie)
        ce !== "default" && !Object.prototype.hasOwnProperty.call(ae, ce) && ee(ae, ie, ce);
    };
    Object.defineProperty(Q, "__esModule", { value: !0 }), ne(nfts_registry, Q), ne(canister_registry, Q), ne(requireToken_registry(), Q), ne(address_book, Q);
  }(registries)), registries;
}
var nft = {};
Object.defineProperty(nft, "__esModule", { value: !0 });
var token = {};
Object.defineProperty(token, "__esModule", { value: !0 });
(function(Q) {
  var ee = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(fe, Be, Ee, me) {
    me === void 0 && (me = Ee);
    var ge = Object.getOwnPropertyDescriptor(Be, Ee);
    (!ge || ("get" in ge ? !Be.__esModule : ge.writable || ge.configurable)) && (ge = { enumerable: !0, get: function() {
      return Be[Ee];
    } }), Object.defineProperty(fe, me, ge);
  } : function(fe, Be, Ee, me) {
    me === void 0 && (me = Ee), fe[me] = Be[Ee];
  }), ne = commonjsGlobal && commonjsGlobal.__setModuleDefault || (Object.create ? function(fe, Be) {
    Object.defineProperty(fe, "default", { enumerable: !0, value: Be });
  } : function(fe, Be) {
    fe.default = Be;
  }), ie = commonjsGlobal && commonjsGlobal.__exportStar || function(fe, Be) {
    for (var Ee in fe)
      Ee !== "default" && !Object.prototype.hasOwnProperty.call(Be, Ee) && ee(Be, fe, Ee);
  }, ae = commonjsGlobal && commonjsGlobal.__importStar || function(fe) {
    if (fe && fe.__esModule)
      return fe;
    var Be = {};
    if (fe != null)
      for (var Ee in fe)
        Ee !== "default" && Object.prototype.hasOwnProperty.call(fe, Ee) && ee(Be, fe, Ee);
    return ne(Be, fe), Be;
  }, ce = commonjsGlobal && commonjsGlobal.__importDefault || function(fe) {
    return fe && fe.__esModule ? fe : { default: fe };
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.HttpAgent = Q.Principal = Q.standards = Q.TokenInterfaces = Q.NFTInterfaces = void 0, ie(requireRegistries(), Q), ie(nft, Q), ie(token, Q), Q.NFTInterfaces = ae(nft), Q.TokenInterfaces = ae(token);
  var le = standards;
  Object.defineProperty(Q, "standards", { enumerable: !0, get: function() {
    return ce(le).default;
  } });
  var de = require$$4;
  Object.defineProperty(Q, "Principal", { enumerable: !0, get: function() {
    return de.Principal;
  } });
  var ye = require$$5;
  Object.defineProperty(Q, "HttpAgent", { enumerable: !0, get: function() {
    return ye.HttpAgent;
  } });
})(dist);
const clone = (Q) => structuredClone(Q), getRemoteBoxes = (Q) => [...Array(tradeBoxNum).keys()].map((ne) => {
  var ie;
  return {
    id: ne,
    item: (ie = Q.find((ae) => ae.slot === ne)) != null ? ie : null
  };
}), getInventoryBoxes = (Q) => [...Array(inventoryBoxNum).keys()].map((ne) => {
  var ie;
  return {
    id: ne,
    item: (ie = Q.find((ae) => ae.slot === ne)) != null ? ie : null
  };
}), getUserTokens = async ({
  agent: Q,
  user: ee
}) => {
  const ne = await dist.getAllUserNFTs({
    agent: Q,
    user: ee
  });
  console.log("collections: ", ne);
  const ie = {};
  let ae = 0;
  return ne.forEach((ce) => {
    ce.name.toLowerCase().includes("cipher") || ce.tokens.forEach((le) => {
      var fe, Be, Ee;
      let de = {
        id: ae.toString(),
        canister_id: le.canister,
        collection: le.collection,
        index: le.index.toString(),
        slot: ae
      };
      const ye = (Be = (fe = le.metadata) == null ? void 0 : fe.json) == null ? void 0 : Be.value.TextContent;
      if (ye) {
        const me = JSON.parse(ye);
        de.name = me.name, de.url = (Ee = me.animation_url) != null ? Ee : me.image;
      } else
        de.name = le.collection, de.url = le.url;
      ie[ae] = de, ae++;
    });
  }), console.log("newTokens: ", ie), ie;
}, getExtension = (Q) => Q.split(".").pop().toLowerCase(), isImage = (Q) => {
  if (!Q)
    return !1;
  const ee = ["apng", "avif", "gif", "jpg", "jpeg", "jfif", "pjpeg", "pjp", "png", "svg", "webp", "bmp", "ico", "cur", "tif", "tiff"], ne = getExtension(Q);
  return ee.indexOf(ne) >= 0;
}, isMedia = (Q) => {
  if (!Q)
    return !1;
  const ee = ["mp4", "mov", "wav", "mp3", "ogg", "webm", "avi"], ne = getExtension(Q);
  return ee.indexOf(ne) >= 0;
}, isModel = (Q) => {
  if (!Q)
    return !1;
  const ee = ["glb"], ne = getExtension(Q);
  return ee.indexOf(ne) >= 0;
}, existItems = (Q) => !Q || !Q.length ? !1 : !!Q.filter((ne) => {
  var ie;
  return (ie = ne == null ? void 0 : ne.item) == null ? void 0 : ie.canister_id;
}).length, createStoreImpl = (Q) => {
  let ee;
  const ne = /* @__PURE__ */ new Set(), ie = (ye, fe) => {
    const Be = typeof ye == "function" ? ye(ee) : ye;
    if (!Object.is(Be, ee)) {
      const Ee = ee;
      ee = (fe != null ? fe : typeof Be != "object") ? Be : Object.assign({}, ee, Be), ne.forEach((me) => me(ee, Ee));
    }
  }, ae = () => ee, de = { setState: ie, getState: ae, subscribe: (ye) => (ne.add(ye), () => ne.delete(ye)), destroy: () => ne.clear() };
  return ee = Q(ie, ae, de), de;
}, createStore = (Q) => Q ? createStoreImpl(Q) : createStoreImpl;
var withSelector = { exports: {} }, withSelector_production_min = {}, shim = { exports: {} }, useSyncExternalStoreShim_production_min = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_production_min;
function requireUseSyncExternalStoreShim_production_min() {
  if (hasRequiredUseSyncExternalStoreShim_production_min)
    return useSyncExternalStoreShim_production_min;
  hasRequiredUseSyncExternalStoreShim_production_min = 1;
  var Q = React__default;
  function ee(Ee, me) {
    return Ee === me && (Ee !== 0 || 1 / Ee === 1 / me) || Ee !== Ee && me !== me;
  }
  var ne = typeof Object.is == "function" ? Object.is : ee, ie = Q.useState, ae = Q.useEffect, ce = Q.useLayoutEffect, le = Q.useDebugValue;
  function de(Ee, me) {
    var ge = me(), we = ie({ inst: { value: ge, getSnapshot: me } }), be = we[0].inst, Oe = we[1];
    return ce(function() {
      be.value = ge, be.getSnapshot = me, ye(be) && Oe({ inst: be });
    }, [Ee, ge, me]), ae(function() {
      return ye(be) && Oe({ inst: be }), Ee(function() {
        ye(be) && Oe({ inst: be });
      });
    }, [Ee]), le(ge), ge;
  }
  function ye(Ee) {
    var me = Ee.getSnapshot;
    Ee = Ee.value;
    try {
      var ge = me();
      return !ne(Ee, ge);
    } catch {
      return !0;
    }
  }
  function fe(Ee, me) {
    return me();
  }
  var Be = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? fe : de;
  return useSyncExternalStoreShim_production_min.useSyncExternalStore = Q.useSyncExternalStore !== void 0 ? Q.useSyncExternalStore : Be, useSyncExternalStoreShim_production_min;
}
var useSyncExternalStoreShim_development = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_development;
function requireUseSyncExternalStoreShim_development() {
  return hasRequiredUseSyncExternalStoreShim_development || (hasRequiredUseSyncExternalStoreShim_development = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var Q = React__default, ee = Q.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function ne(Ge) {
      {
        for (var Fe = arguments.length, Pe = new Array(Fe > 1 ? Fe - 1 : 0), Je = 1; Je < Fe; Je++)
          Pe[Je - 1] = arguments[Je];
        ie("error", Ge, Pe);
      }
    }
    function ie(Ge, Fe, Pe) {
      {
        var Je = ee.ReactDebugCurrentFrame, tt = Je.getStackAddendum();
        tt !== "" && (Fe += "%s", Pe = Pe.concat([tt]));
        var ft = Pe.map(function(Tt) {
          return String(Tt);
        });
        ft.unshift("Warning: " + Fe), Function.prototype.apply.call(console[Ge], console, ft);
      }
    }
    function ae(Ge, Fe) {
      return Ge === Fe && (Ge !== 0 || 1 / Ge === 1 / Fe) || Ge !== Ge && Fe !== Fe;
    }
    var ce = typeof Object.is == "function" ? Object.is : ae, le = Q.useState, de = Q.useEffect, ye = Q.useLayoutEffect, fe = Q.useDebugValue, Be = !1, Ee = !1;
    function me(Ge, Fe, Pe) {
      Be || Q.startTransition !== void 0 && (Be = !0, ne("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var Je = Fe();
      if (!Ee) {
        var tt = Fe();
        ce(Je, tt) || (ne("The result of getSnapshot should be cached to avoid an infinite loop"), Ee = !0);
      }
      var ft = le({
        inst: {
          value: Je,
          getSnapshot: Fe
        }
      }), Tt = ft[0].inst, Xe = ft[1];
      return ye(function() {
        Tt.value = Je, Tt.getSnapshot = Fe, ge(Tt) && Xe({
          inst: Tt
        });
      }, [Ge, Je, Fe]), de(function() {
        ge(Tt) && Xe({
          inst: Tt
        });
        var ht = function() {
          ge(Tt) && Xe({
            inst: Tt
          });
        };
        return Ge(ht);
      }, [Ge]), fe(Je), Je;
    }
    function ge(Ge) {
      var Fe = Ge.getSnapshot, Pe = Ge.value;
      try {
        var Je = Fe();
        return !ce(Pe, Je);
      } catch {
        return !0;
      }
    }
    function we(Ge, Fe, Pe) {
      return Fe();
    }
    var be = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", Oe = !be, He = Oe ? we : me, Se = Q.useSyncExternalStore !== void 0 ? Q.useSyncExternalStore : He;
    useSyncExternalStoreShim_development.useSyncExternalStore = Se, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), useSyncExternalStoreShim_development;
}
var hasRequiredShim;
function requireShim() {
  return hasRequiredShim || (hasRequiredShim = 1, function(Q) {
    process.env.NODE_ENV === "production" ? Q.exports = requireUseSyncExternalStoreShim_production_min() : Q.exports = requireUseSyncExternalStoreShim_development();
  }(shim)), shim.exports;
}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredWithSelector_production_min;
function requireWithSelector_production_min() {
  if (hasRequiredWithSelector_production_min)
    return withSelector_production_min;
  hasRequiredWithSelector_production_min = 1;
  var Q = React__default, ee = requireShim();
  function ne(fe, Be) {
    return fe === Be && (fe !== 0 || 1 / fe === 1 / Be) || fe !== fe && Be !== Be;
  }
  var ie = typeof Object.is == "function" ? Object.is : ne, ae = ee.useSyncExternalStore, ce = Q.useRef, le = Q.useEffect, de = Q.useMemo, ye = Q.useDebugValue;
  return withSelector_production_min.useSyncExternalStoreWithSelector = function(fe, Be, Ee, me, ge) {
    var we = ce(null);
    if (we.current === null) {
      var be = { hasValue: !1, value: null };
      we.current = be;
    } else
      be = we.current;
    we = de(function() {
      function He(Je) {
        if (!Se) {
          if (Se = !0, Ge = Je, Je = me(Je), ge !== void 0 && be.hasValue) {
            var tt = be.value;
            if (ge(tt, Je))
              return Fe = tt;
          }
          return Fe = Je;
        }
        if (tt = Fe, ie(Ge, Je))
          return tt;
        var ft = me(Je);
        return ge !== void 0 && ge(tt, ft) ? tt : (Ge = Je, Fe = ft);
      }
      var Se = !1, Ge, Fe, Pe = Ee === void 0 ? null : Ee;
      return [function() {
        return He(Be());
      }, Pe === null ? void 0 : function() {
        return He(Pe());
      }];
    }, [Be, Ee, me, ge]);
    var Oe = ae(fe, we[0], we[1]);
    return le(function() {
      be.hasValue = !0, be.value = Oe;
    }, [Oe]), ye(Oe), Oe;
  }, withSelector_production_min;
}
var withSelector_development = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredWithSelector_development;
function requireWithSelector_development() {
  return hasRequiredWithSelector_development || (hasRequiredWithSelector_development = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var Q = React__default, ee = requireShim();
    function ne(Be, Ee) {
      return Be === Ee && (Be !== 0 || 1 / Be === 1 / Ee) || Be !== Be && Ee !== Ee;
    }
    var ie = typeof Object.is == "function" ? Object.is : ne, ae = ee.useSyncExternalStore, ce = Q.useRef, le = Q.useEffect, de = Q.useMemo, ye = Q.useDebugValue;
    function fe(Be, Ee, me, ge, we) {
      var be = ce(null), Oe;
      be.current === null ? (Oe = {
        hasValue: !1,
        value: null
      }, be.current = Oe) : Oe = be.current;
      var He = de(function() {
        var Pe = !1, Je, tt, ft = function(Qt) {
          if (!Pe) {
            Pe = !0, Je = Qt;
            var Gt = ge(Qt);
            if (we !== void 0 && Oe.hasValue) {
              var pt = Oe.value;
              if (we(pt, Gt))
                return tt = pt, pt;
            }
            return tt = Gt, Gt;
          }
          var xt = Je, Yt = tt;
          if (ie(xt, Qt))
            return Yt;
          var Jt = ge(Qt);
          return we !== void 0 && we(Yt, Jt) ? Yt : (Je = Qt, tt = Jt, Jt);
        }, Tt = me === void 0 ? null : me, Xe = function() {
          return ft(Ee());
        }, ht = Tt === null ? void 0 : function() {
          return ft(Tt());
        };
        return [Xe, ht];
      }, [Ee, me, ge, we]), Se = He[0], Ge = He[1], Fe = ae(Be, Se, Ge);
      return le(function() {
        Oe.hasValue = !0, Oe.value = Fe;
      }, [Fe]), ye(Fe), Fe;
    }
    withSelector_development.useSyncExternalStoreWithSelector = fe, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), withSelector_development;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireWithSelector_production_min() : Q.exports = requireWithSelector_development();
})(withSelector);
const useSyncExternalStoreExports = /* @__PURE__ */ getDefaultExportFromCjs(withSelector.exports), { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;
function useStore$1(Q, ee = Q.getState, ne) {
  const ie = useSyncExternalStoreWithSelector(
    Q.subscribe,
    Q.getState,
    Q.getServerState || Q.getState,
    ee,
    ne
  );
  return useDebugValue(ie), ie;
}
const createImpl = (Q) => {
  const ee = typeof Q == "function" ? createStore(Q) : Q, ne = (ie, ae) => useStore$1(ee, ie, ae);
  return Object.assign(ne, ee), ne;
}, create = (Q) => Q ? createImpl(Q) : createImpl, initRemoteBoxes = [...Array(tradeBoxNum).keys()].map((Q) => ({
  id: Q,
  item: null
})), initLocalBoxes = [...Array(tradeBoxNum).keys()].map((Q) => ({
  id: Q,
  item: null
})), initInventoryBoxes = [...Array(inventoryBoxNum).keys()].map((Q) => ({
  id: Q,
  type: "all",
  item: null
})), useStore = create((Q) => ({
  plugActor: null,
  setPlugActor: (ee) => Q((ne) => ({
    plugActor: ee
  })),
  isCreator: !1,
  setIsCreator: (ee) => Q((ne) => ({
    isCreator: ee
  })),
  localUser: null,
  setLocalUser: (ee) => Q((ne) => ({
    localUser: ee
  })),
  curTradeId: null,
  setCurTradeId: (ee) => Q((ne) => ({
    curTradeId: ee
  })),
  tradeData: null,
  setTradeData: (ee) => Q((ne) => ({
    tradeData: ee
  })),
  tradeStarted: !1,
  setTradeStarted: (ee) => Q((ne) => ({
    tradeStarted: ee
  })),
  remoteBoxes: clone(initRemoteBoxes),
  setRemoteBoxes: (ee) => Q((ne) => ({
    remoteBoxes: ee
  })),
  localBoxes: clone(initLocalBoxes),
  setLocalBoxes: (ee) => Q((ne) => ({
    localBoxes: ee
  })),
  inventoryBoxes: initInventoryBoxes,
  setInventoryBoxes: (ee) => Q((ne) => ({
    inventoryBoxes: ee
  })),
  accepted: !1,
  setAccepted: (ee) => Q((ne) => ({
    accepted: ee
  })),
  boxNumPerPage: pageBoxNum,
  setBoxNumPerPage: (ee) => Q((ne) => ({
    boxNumPerPage: ee
  })),
  curPage: 1,
  setCurPage: (ee) => Q((ne) => ({
    curPage: ee
  })),
  selItem: null,
  setSelItem: (ee) => Q((ne) => ({
    selItem: ee
  })),
  loading: !1,
  setLoading: (ee) => Q((ne) => ({
    loading: ee
  }))
}));
var ReplicaRejectCode;
(function(Q) {
  Q[Q.SysFatal = 1] = "SysFatal", Q[Q.SysTransient = 2] = "SysTransient", Q[Q.DestinationInvalid = 3] = "DestinationInvalid", Q[Q.CanisterReject = 4] = "CanisterReject", Q[Q.CanisterError = 5] = "CanisterError";
})(ReplicaRejectCode || (ReplicaRejectCode = {}));
class AgentError extends Error {
  constructor(ee) {
    super(ee), this.message = ee, Object.setPrototypeOf(this, AgentError.prototype);
  }
}
function concat$1(...Q) {
  const ee = new Uint8Array(Q.reduce((ie, ae) => ie + ae.byteLength, 0));
  let ne = 0;
  for (const ie of Q)
    ee.set(new Uint8Array(ie), ne), ne += ie.byteLength;
  return ee;
}
class PipeArrayBuffer {
  constructor(ee, ne = (ee == null ? void 0 : ee.byteLength) || 0) {
    this._buffer = ee || new ArrayBuffer(0), this._view = new Uint8Array(this._buffer, 0, ne);
  }
  get buffer() {
    return this._view.slice();
  }
  get byteLength() {
    return this._view.byteLength;
  }
  read(ee) {
    const ne = this._view.subarray(0, ee);
    return this._view = this._view.subarray(ee), ne.slice().buffer;
  }
  readUint8() {
    const ee = this._view[0];
    return this._view = this._view.subarray(1), ee;
  }
  write(ee) {
    const ne = new Uint8Array(ee), ie = this._view.byteLength;
    this._view.byteOffset + this._view.byteLength + ne.byteLength >= this._buffer.byteLength ? this.alloc(ne.byteLength) : this._view = new Uint8Array(this._buffer, this._view.byteOffset, this._view.byteLength + ne.byteLength), this._view.set(ne, ie);
  }
  get end() {
    return this._view.byteLength === 0;
  }
  alloc(ee) {
    const ne = new ArrayBuffer((this._buffer.byteLength + ee) * 1.2 | 0), ie = new Uint8Array(ne, 0, this._view.byteLength + ee);
    ie.set(this._view), this._buffer = ne, this._view = ie;
  }
}
function idlHash(Q) {
  const ne = new TextEncoder().encode(Q);
  let ie = 0;
  for (const ae of ne)
    ie = (ie * 223 + ae) % 2 ** 32;
  return ie;
}
function idlLabelToId(Q) {
  if (/^_\d+_$/.test(Q) || /^_0x[0-9a-fA-F]+_$/.test(Q)) {
    const ee = +Q.slice(1, -1);
    if (Number.isSafeInteger(ee) && ee >= 0 && ee < 2 ** 32)
      return ee;
  }
  return idlHash(Q);
}
function eob() {
  throw new Error("unexpected end of buffer");
}
function safeRead(Q, ee) {
  return Q.byteLength < ee && eob(), Q.read(ee);
}
function safeReadUint8(Q) {
  const ee = Q.readUint8();
  return ee === void 0 && eob(), ee;
}
function lebEncode(Q) {
  if (typeof Q == "number" && (Q = BigInt(Q)), Q < BigInt(0))
    throw new Error("Cannot leb encode negative values.");
  const ee = (Q === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(Q)))) + 1, ne = new PipeArrayBuffer(new ArrayBuffer(ee), 0);
  for (; ; ) {
    const ie = Number(Q & BigInt(127));
    if (Q /= BigInt(128), Q === BigInt(0)) {
      ne.write(new Uint8Array([ie]));
      break;
    } else
      ne.write(new Uint8Array([ie | 128]));
  }
  return ne.buffer;
}
function lebDecode(Q) {
  let ee = BigInt(1), ne = BigInt(0), ie;
  do
    ie = safeReadUint8(Q), ne += BigInt(ie & 127).valueOf() * ee, ee *= BigInt(128);
  while (ie >= 128);
  return ne;
}
function slebEncode(Q) {
  typeof Q == "number" && (Q = BigInt(Q));
  const ee = Q < BigInt(0);
  ee && (Q = -Q - BigInt(1));
  const ne = (Q === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(Q)))) + 1, ie = new PipeArrayBuffer(new ArrayBuffer(ne), 0);
  for (; ; ) {
    const ce = ae(Q);
    if (Q /= BigInt(128), ee && Q === BigInt(0) && (ce & 64) !== 0 || !ee && Q === BigInt(0) && (ce & 64) === 0) {
      ie.write(new Uint8Array([ce]));
      break;
    } else
      ie.write(new Uint8Array([ce | 128]));
  }
  function ae(ce) {
    const le = ce % BigInt(128);
    return Number(ee ? BigInt(128) - le - BigInt(1) : le);
  }
  return ie.buffer;
}
function slebDecode(Q) {
  const ee = new Uint8Array(Q.buffer);
  let ne = 0;
  for (; ne < ee.byteLength; ne++)
    if (ee[ne] < 128) {
      if ((ee[ne] & 64) === 0)
        return lebDecode(Q);
      break;
    }
  const ie = new Uint8Array(safeRead(Q, ne + 1));
  let ae = BigInt(0);
  for (let ce = ie.byteLength - 1; ce >= 0; ce--)
    ae = ae * BigInt(128) + BigInt(128 - (ie[ce] & 127) - 1);
  return -ae - BigInt(1);
}
function writeUIntLE(Q, ee) {
  if (BigInt(Q) < BigInt(0))
    throw new Error("Cannot write negative values.");
  return writeIntLE(Q, ee);
}
function writeIntLE(Q, ee) {
  Q = BigInt(Q);
  const ne = new PipeArrayBuffer(new ArrayBuffer(Math.min(1, ee)), 0);
  let ie = 0, ae = BigInt(256), ce = BigInt(0), le = Number(Q % ae);
  for (ne.write(new Uint8Array([le])); ++ie < ee; )
    Q < 0 && ce === BigInt(0) && le !== 0 && (ce = BigInt(1)), le = Number((Q / ae - ce) % BigInt(256)), ne.write(new Uint8Array([le])), ae *= BigInt(256);
  return ne.buffer;
}
function readUIntLE(Q, ee) {
  let ne = BigInt(safeReadUint8(Q)), ie = BigInt(1), ae = 0;
  for (; ++ae < ee; ) {
    ie *= BigInt(256);
    const ce = BigInt(safeReadUint8(Q));
    ne = ne + ie * ce;
  }
  return ne;
}
function readIntLE(Q, ee) {
  let ne = readUIntLE(Q, ee);
  const ie = BigInt(2) ** (BigInt(8) * BigInt(ee - 1) + BigInt(7));
  return ne >= ie && (ne -= ie * BigInt(2)), ne;
}
function iexp2(Q) {
  const ee = BigInt(Q);
  if (Q < 0)
    throw new RangeError("Input must be non-negative");
  return BigInt(1) << ee;
}
const magicNumber = "DIDL", toReadableString_max = 400;
function zipWith(Q, ee, ne) {
  return Q.map((ie, ae) => ne(ie, ee[ae]));
}
class TypeTable {
  constructor() {
    this._typs = [], this._idx = /* @__PURE__ */ new Map();
  }
  has(ee) {
    return this._idx.has(ee.name);
  }
  add(ee, ne) {
    const ie = this._typs.length;
    this._idx.set(ee.name, ie), this._typs.push(ne);
  }
  merge(ee, ne) {
    const ie = this._idx.get(ee.name), ae = this._idx.get(ne);
    if (ie === void 0)
      throw new Error("Missing type index for " + ee);
    if (ae === void 0)
      throw new Error("Missing type index for " + ne);
    this._typs[ie] = this._typs[ae], this._typs.splice(ae, 1), this._idx.delete(ne);
  }
  encode() {
    const ee = lebEncode(this._typs.length), ne = concat$1(...this._typs);
    return concat$1(ee, ne);
  }
  indexOf(ee) {
    if (!this._idx.has(ee))
      throw new Error("Missing type index for " + ee);
    return slebEncode(this._idx.get(ee) || 0);
  }
}
class Visitor {
  visitType(ee, ne) {
    throw new Error("Not implemented");
  }
  visitPrimitive(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitEmpty(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitBool(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNull(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitReserved(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitText(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNumber(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFloat(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitFixedInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFixedNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitPrincipal(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitConstruct(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitVec(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitOpt(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRecord(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitTuple(ee, ne, ie) {
    const ae = ne.map((ce, le) => [`_${le}_`, ce]);
    return this.visitRecord(ee, ae, ie);
  }
  visitVariant(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRec(ee, ne, ie) {
    return this.visitConstruct(ne, ie);
  }
  visitFunc(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
  visitService(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
}
class Type {
  display() {
    return this.name;
  }
  valueToString(ee) {
    return toReadableString(ee);
  }
  buildTypeTable(ee) {
    ee.has(this) || this._buildTypeTableImpl(ee);
  }
}
class PrimitiveType extends Type {
  checkType(ee) {
    if (this.name !== ee.name)
      throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
    return ee;
  }
  _buildTypeTableImpl(ee) {
  }
}
class ConstructType extends Type {
  checkType(ee) {
    if (ee instanceof RecClass) {
      const ne = ee.getType();
      if (typeof ne > "u")
        throw new Error("type mismatch with uninitialized type");
      return ne;
    }
    throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
  }
  encodeType(ee) {
    return ee.indexOf(this.name);
  }
}
class EmptyClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitEmpty(this, ne);
  }
  covariant(ee) {
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue() {
    throw new Error("Empty cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Empty cannot appear as a value");
  }
  encodeType() {
    return slebEncode(-17);
  }
  decodeValue() {
    throw new Error("Empty cannot appear as an output");
  }
  get name() {
    return "empty";
  }
}
class UnknownClass extends Type {
  checkType(ee) {
    throw new Error("Method not implemented for unknown.");
  }
  accept(ee, ne) {
    throw ee.visitType(this, ne);
  }
  covariant(ee) {
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue() {
    throw new Error("Unknown cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Unknown cannot appear as a value");
  }
  encodeType() {
    throw new Error("Unknown cannot be serialized");
  }
  decodeValue(ee, ne) {
    let ie = ne.decodeValue(ee, ne);
    Object(ie) !== ie && (ie = Object(ie));
    let ae;
    return ne instanceof RecClass ? ae = () => ne.getType() : ae = () => ne, Object.defineProperty(ie, "type", {
      value: ae,
      writable: !0,
      enumerable: !1,
      configurable: !0
    }), ie;
  }
  _buildTypeTableImpl() {
    throw new Error("Unknown cannot be serialized");
  }
  get name() {
    return "Unknown";
  }
}
class BoolClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitBool(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "boolean")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return new Uint8Array([ee ? 1 : 0]);
  }
  encodeType() {
    return slebEncode(-2);
  }
  decodeValue(ee, ne) {
    switch (this.checkType(ne), safeReadUint8(ee)) {
      case 0:
        return !1;
      case 1:
        return !0;
      default:
        throw new Error("Boolean value out of range");
    }
  }
  get name() {
    return "bool";
  }
}
class NullClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitNull(this, ne);
  }
  covariant(ee) {
    if (ee === null)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue() {
    return new ArrayBuffer(0);
  }
  encodeType() {
    return slebEncode(-1);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), null;
  }
  get name() {
    return "null";
  }
}
class ReservedClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitReserved(this, ne);
  }
  covariant(ee) {
    return !0;
  }
  encodeValue() {
    return new ArrayBuffer(0);
  }
  encodeType() {
    return slebEncode(-16);
  }
  decodeValue(ee, ne) {
    return ne.name !== this.name && ne.decodeValue(ee, ne), null;
  }
  get name() {
    return "reserved";
  }
}
class TextClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitText(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "string")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = new TextEncoder().encode(ee), ie = lebEncode(ne.byteLength);
    return concat$1(ie, ne);
  }
  encodeType() {
    return slebEncode(-15);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = lebDecode(ee), ae = safeRead(ee, Number(ie));
    return new TextDecoder("utf8", { fatal: !0 }).decode(ae);
  }
  get name() {
    return "text";
  }
  valueToString(ee) {
    return '"' + ee + '"';
  }
}
class IntClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitInt(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "bigint" || Number.isInteger(ee))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return slebEncode(ee);
  }
  encodeType() {
    return slebEncode(-4);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), slebDecode(ee);
  }
  get name() {
    return "int";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class NatClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitNat(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "bigint" && ee >= BigInt(0) || Number.isInteger(ee) && ee >= 0)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return lebEncode(ee);
  }
  encodeType() {
    return slebEncode(-3);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), lebDecode(ee);
  }
  get name() {
    return "nat";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FloatClass extends PrimitiveType {
  constructor(ee) {
    if (super(), this._bits = ee, ee !== 32 && ee !== 64)
      throw new Error("not a valid float type");
  }
  accept(ee, ne) {
    return ee.visitFloat(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "number" || ee instanceof Number)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = new ArrayBuffer(this._bits / 8), ie = new DataView(ne);
    return this._bits === 32 ? ie.setFloat32(0, ee, !0) : ie.setFloat64(0, ee, !0), ne;
  }
  encodeType() {
    const ee = this._bits === 32 ? -13 : -14;
    return slebEncode(ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = safeRead(ee, this._bits / 8), ae = new DataView(ie);
    return this._bits === 32 ? ae.getFloat32(0, !0) : ae.getFloat64(0, !0);
  }
  get name() {
    return "float" + this._bits;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedIntClass extends PrimitiveType {
  constructor(ee) {
    super(), this._bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedInt(this, ne);
  }
  covariant(ee) {
    const ne = iexp2(this._bits - 1) * BigInt(-1), ie = iexp2(this._bits - 1) - BigInt(1);
    let ae = !1;
    if (typeof ee == "bigint")
      ae = ee >= ne && ee <= ie;
    else if (Number.isInteger(ee)) {
      const ce = BigInt(ee);
      ae = ce >= ne && ce <= ie;
    } else
      ae = !1;
    if (ae)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return writeIntLE(ee, this._bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this._bits) - 3;
    return slebEncode(-9 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readIntLE(ee, this._bits / 8);
    return this._bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `int${this._bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedNatClass extends PrimitiveType {
  constructor(ee) {
    super(), this._bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedNat(this, ne);
  }
  covariant(ee) {
    const ne = iexp2(this._bits);
    let ie = !1;
    if (typeof ee == "bigint" && ee >= BigInt(0) ? ie = ee < ne : Number.isInteger(ee) && ee >= 0 ? ie = BigInt(ee) < ne : ie = !1, ie)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return writeUIntLE(ee, this._bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this._bits) - 3;
    return slebEncode(-5 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readUIntLE(ee, this._bits / 8);
    return this._bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `nat${this._bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class VecClass extends ConstructType {
  constructor(ee) {
    super(), this._type = ee, this._blobOptimization = !1, ee instanceof FixedNatClass && ee._bits === 8 && (this._blobOptimization = !0);
  }
  accept(ee, ne) {
    return ee.visitVec(this, this._type, ne);
  }
  covariant(ee) {
    const ne = this._type instanceof FixedNatClass ? this._type._bits : this._type instanceof FixedIntClass ? this._type._bits : 0;
    if (ArrayBuffer.isView(ee) && ne == ee.BYTES_PER_ELEMENT * 8 || Array.isArray(ee) && ee.every((ie, ae) => {
      try {
        return this._type.covariant(ie);
      } catch (ce) {
        throw new Error(`Invalid ${this.display()} argument: 

index ${ae} -> ${ce.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = lebEncode(ee.length);
    if (this._blobOptimization)
      return concat$1(ne, new Uint8Array(ee));
    if (ArrayBuffer.isView(ee))
      return concat$1(ne, new Uint8Array(ee.buffer));
    const ie = new PipeArrayBuffer(new ArrayBuffer(ne.byteLength + ee.length), 0);
    ie.write(ne);
    for (const ae of ee) {
      const ce = this._type.encodeValue(ae);
      ie.write(new Uint8Array(ce));
    }
    return ie.buffer;
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode(-19), ie = this._type.encodeType(ee);
    ee.add(this, concat$1(ne, ie));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VecClass))
      throw new Error("Not a vector type");
    const ae = Number(lebDecode(ee));
    if (this._type instanceof FixedNatClass) {
      if (this._type._bits == 8)
        return new Uint8Array(ee.read(ae));
      if (this._type._bits == 16)
        return new Uint16Array(ee.read(ae * 2));
      if (this._type._bits == 32)
        return new Uint32Array(ee.read(ae * 4));
      if (this._type._bits == 64)
        return new BigUint64Array(ee.read(ae * 8));
    }
    if (this._type instanceof FixedIntClass) {
      if (this._type._bits == 8)
        return new Int8Array(ee.read(ae));
      if (this._type._bits == 16)
        return new Int16Array(ee.read(ae * 2));
      if (this._type._bits == 32)
        return new Int32Array(ee.read(ae * 4));
      if (this._type._bits == 64)
        return new BigInt64Array(ee.read(ae * 8));
    }
    const ce = [];
    for (let le = 0; le < ae; le++)
      ce.push(this._type.decodeValue(ee, ie._type));
    return ce;
  }
  get name() {
    return `vec ${this._type.name}`;
  }
  display() {
    return `vec ${this._type.display()}`;
  }
  valueToString(ee) {
    return "vec {" + ee.map((ie) => this._type.valueToString(ie)).join("; ") + "}";
  }
}
class OptClass extends ConstructType {
  constructor(ee) {
    super(), this._type = ee;
  }
  accept(ee, ne) {
    return ee.visitOpt(this, this._type, ne);
  }
  covariant(ee) {
    try {
      if (Array.isArray(ee) && (ee.length === 0 || ee.length === 1 && this._type.covariant(ee[0])))
        return !0;
    } catch (ne) {
      throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)} 

-> ${ne.message}`);
    }
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return ee.length === 0 ? new Uint8Array([0]) : concat$1(new Uint8Array([1]), this._type.encodeValue(ee[0]));
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode(-18), ie = this._type.encodeType(ee);
    ee.add(this, concat$1(ne, ie));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof OptClass))
      throw new Error("Not an option type");
    switch (safeReadUint8(ee)) {
      case 0:
        return [];
      case 1:
        return [this._type.decodeValue(ee, ie._type)];
      default:
        throw new Error("Not an option value");
    }
  }
  get name() {
    return `opt ${this._type.name}`;
  }
  display() {
    return `opt ${this._type.display()}`;
  }
  valueToString(ee) {
    return ee.length === 0 ? "null" : `opt ${this._type.valueToString(ee[0])}`;
  }
}
class RecordClass extends ConstructType {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitRecord(this, this._fields, ne);
  }
  tryAsTuple() {
    const ee = [];
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, ae] = this._fields[ne];
      if (ie !== `_${ne}_`)
        return null;
      ee.push(ae);
    }
    return ee;
  }
  covariant(ee) {
    if (typeof ee == "object" && this._fields.every(([ne, ie]) => {
      if (!ee.hasOwnProperty(ne))
        throw new Error(`Record is missing key "${ne}".`);
      try {
        return ie.covariant(ee[ne]);
      } catch (ae) {
        throw new Error(`Invalid ${this.display()} argument: 

field ${ne} -> ${ae.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = this._fields.map(([ae]) => ee[ae]), ie = zipWith(this._fields, ne, ([, ae], ce) => ae.encodeValue(ce));
    return concat$1(...ie);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, le]) => le.buildTypeTable(ee));
    const ne = slebEncode(-20), ie = lebEncode(this._fields.length), ae = this._fields.map(([ce, le]) => concat$1(lebEncode(idlLabelToId(ce)), le.encodeType(ee)));
    ee.add(this, concat$1(ne, ie, concat$1(...ae)));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof RecordClass))
      throw new Error("Not a record type");
    const ae = {};
    let ce = 0, le = 0;
    for (; le < ie._fields.length; ) {
      const [de, ye] = ie._fields[le];
      if (ce >= this._fields.length) {
        ye.decodeValue(ee, ye), le++;
        continue;
      }
      const [fe, Be] = this._fields[ce], Ee = idlLabelToId(this._fields[ce][0]), me = idlLabelToId(de);
      if (Ee === me)
        ae[fe] = Be.decodeValue(ee, ye), ce++, le++;
      else if (me > Ee)
        if (Be instanceof OptClass || Be instanceof ReservedClass)
          ae[fe] = [], ce++;
        else
          throw new Error("Cannot find required field " + fe);
      else
        ye.decodeValue(ee, ye), le++;
    }
    for (const [de, ye] of this._fields.slice(ce))
      if (ye instanceof OptClass || ye instanceof ReservedClass)
        ae[de] = [];
      else
        throw new Error("Cannot find required field " + de);
    return ae;
  }
  get name() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.display()).join("; ")}}`;
  }
  valueToString(ee) {
    const ne = this._fields.map(([ae]) => ee[ae]);
    return `record {${zipWith(this._fields, ne, ([ae, ce], le) => ae + "=" + ce.valueToString(le)).join("; ")}}`;
  }
}
class TupleClass extends RecordClass {
  constructor(ee) {
    const ne = {};
    ee.forEach((ie, ae) => ne["_" + ae + "_"] = ie), super(ne), this._components = ee;
  }
  accept(ee, ne) {
    return ee.visitTuple(this, this._components, ne);
  }
  covariant(ee) {
    if (Array.isArray(ee) && ee.length >= this._fields.length && this._components.every((ne, ie) => {
      try {
        return ne.covariant(ee[ie]);
      } catch (ae) {
        throw new Error(`Invalid ${this.display()} argument: 

index ${ie} -> ${ae.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = zipWith(this._components, ee, (ie, ae) => ie.encodeValue(ae));
    return concat$1(...ne);
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof TupleClass))
      throw new Error("not a tuple type");
    if (ie._components.length < this._components.length)
      throw new Error("tuple mismatch");
    const ae = [];
    for (const [ce, le] of ie._components.entries())
      ce >= this._components.length ? le.decodeValue(ee, le) : ae.push(this._components[ce].decodeValue(ee, le));
    return ae;
  }
  display() {
    return `record {${this._components.map((ne) => ne.display()).join("; ")}}`;
  }
  valueToString(ee) {
    return `record {${zipWith(this._components, ee, (ie, ae) => ie.valueToString(ae)).join("; ")}}`;
  }
}
class VariantClass extends ConstructType {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitVariant(this, this._fields, ne);
  }
  covariant(ee) {
    if (typeof ee == "object" && Object.entries(ee).length === 1 && this._fields.every(([ne, ie]) => {
      try {
        return !ee.hasOwnProperty(ne) || ie.covariant(ee[ne]);
      } catch (ae) {
        throw new Error(`Invalid ${this.display()} argument: 

variant ${ne} -> ${ae.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, ae] = this._fields[ne];
      if (ee.hasOwnProperty(ie)) {
        const ce = lebEncode(ne), le = ae.encodeValue(ee[ie]);
        return concat$1(ce, le);
      }
    }
    throw Error("Variant has no data: " + ee);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([, ce]) => {
      ce.buildTypeTable(ee);
    });
    const ne = slebEncode(-21), ie = lebEncode(this._fields.length), ae = this._fields.map(([ce, le]) => concat$1(lebEncode(idlLabelToId(ce)), le.encodeType(ee)));
    ee.add(this, concat$1(ne, ie, ...ae));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VariantClass))
      throw new Error("Not a variant type");
    const ae = Number(lebDecode(ee));
    if (ae >= ie._fields.length)
      throw Error("Invalid variant index: " + ae);
    const [ce, le] = ie._fields[ae];
    for (const [de, ye] of this._fields)
      if (idlLabelToId(ce) === idlLabelToId(de)) {
        const fe = ye.decodeValue(ee, le);
        return { [de]: fe };
      }
    throw new Error("Cannot find field hash " + ce);
  }
  get name() {
    return `variant {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `variant {${this._fields.map(([ne, ie]) => ne + (ie.name === "null" ? "" : `:${ie.display()}`)).join("; ")}}`;
  }
  valueToString(ee) {
    for (const [ne, ie] of this._fields)
      if (ee.hasOwnProperty(ne)) {
        const ae = ie.valueToString(ee[ne]);
        return ae === "null" ? `variant {${ne}}` : `variant {${ne}=${ae}}`;
      }
    throw new Error("Variant has no data: " + ee);
  }
}
class RecClass extends ConstructType {
  constructor() {
    super(...arguments), this._id = RecClass._counter++, this._type = void 0;
  }
  accept(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return ee.visitRec(this, this._type, ne);
  }
  fill(ee) {
    this._type = ee;
  }
  getType() {
    return this._type;
  }
  covariant(ee) {
    if (this._type && this._type.covariant(ee))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.encodeValue(ee);
  }
  _buildTypeTableImpl(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    ee.add(this, new Uint8Array([])), this._type.buildTypeTable(ee), ee.merge(this, this._type.name);
  }
  decodeValue(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.decodeValue(ee, ne);
  }
  get name() {
    return `rec_${this._id}`;
  }
  display() {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return `\u03BC${this.name}.${this._type.name}`;
  }
  valueToString(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.valueToString(ee);
  }
}
RecClass._counter = 0;
function decodePrincipalId(Q) {
  if (safeReadUint8(Q) !== 1)
    throw new Error("Cannot decode principal");
  const ne = Number(lebDecode(Q));
  return Principal$3.fromUint8Array(new Uint8Array(safeRead(Q, ne)));
}
class PrincipalClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitPrincipal(this, ne);
  }
  covariant(ee) {
    if (ee && ee._isPrincipal)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = ee.toUint8Array(), ie = lebEncode(ne.byteLength);
    return concat$1(new Uint8Array([1]), ie, ne);
  }
  encodeType() {
    return slebEncode(-24);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), decodePrincipalId(ee);
  }
  get name() {
    return "principal";
  }
  valueToString(ee) {
    return `${this.name} "${ee.toText()}"`;
  }
}
class FuncClass extends ConstructType {
  constructor(ee, ne, ie = []) {
    super(), this.argTypes = ee, this.retTypes = ne, this.annotations = ie;
  }
  static argsToString(ee, ne) {
    if (ee.length !== ne.length)
      throw new Error("arity mismatch");
    return "(" + ee.map((ie, ae) => ie.valueToString(ne[ae])).join(", ") + ")";
  }
  accept(ee, ne) {
    return ee.visitFunc(this, ne);
  }
  covariant(ee) {
    if (Array.isArray(ee) && ee.length === 2 && ee[0] && ee[0]._isPrincipal && typeof ee[1] == "string")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue([ee, ne]) {
    const ie = ee.toUint8Array(), ae = lebEncode(ie.byteLength), ce = concat$1(new Uint8Array([1]), ae, ie), le = new TextEncoder().encode(ne), de = lebEncode(le.byteLength);
    return concat$1(new Uint8Array([1]), ce, de, le);
  }
  _buildTypeTableImpl(ee) {
    this.argTypes.forEach((fe) => fe.buildTypeTable(ee)), this.retTypes.forEach((fe) => fe.buildTypeTable(ee));
    const ne = slebEncode(-22), ie = lebEncode(this.argTypes.length), ae = concat$1(...this.argTypes.map((fe) => fe.encodeType(ee))), ce = lebEncode(this.retTypes.length), le = concat$1(...this.retTypes.map((fe) => fe.encodeType(ee))), de = lebEncode(this.annotations.length), ye = concat$1(...this.annotations.map((fe) => this.encodeAnnotation(fe)));
    ee.add(this, concat$1(ne, ie, ae, ce, le, de, ye));
  }
  decodeValue(ee) {
    if (safeReadUint8(ee) !== 1)
      throw new Error("Cannot decode function reference");
    const ie = decodePrincipalId(ee), ae = Number(lebDecode(ee)), ce = safeRead(ee, ae), de = new TextDecoder("utf8", { fatal: !0 }).decode(ce);
    return [ie, de];
  }
  get name() {
    const ee = this.argTypes.map((ae) => ae.name).join(", "), ne = this.retTypes.map((ae) => ae.name).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) -> (${ne})${ie}`;
  }
  valueToString([ee, ne]) {
    return `func "${ee.toText()}".${ne}`;
  }
  display() {
    const ee = this.argTypes.map((ae) => ae.display()).join(", "), ne = this.retTypes.map((ae) => ae.display()).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) \u2192 (${ne})${ie}`;
  }
  encodeAnnotation(ee) {
    if (ee === "query")
      return new Uint8Array([1]);
    if (ee === "oneway")
      return new Uint8Array([2]);
    throw new Error("Illegal function annotation");
  }
}
class ServiceClass extends ConstructType {
  constructor(ee) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitService(this, ne);
  }
  covariant(ee) {
    if (ee && ee._isPrincipal)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = ee.toUint8Array(), ie = lebEncode(ne.length);
    return concat$1(new Uint8Array([1]), ie, ne);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, le]) => le.buildTypeTable(ee));
    const ne = slebEncode(-23), ie = lebEncode(this._fields.length), ae = this._fields.map(([ce, le]) => {
      const de = new TextEncoder().encode(ce), ye = lebEncode(de.length);
      return concat$1(ye, de, le.encodeType(ee));
    });
    ee.add(this, concat$1(ne, ie, ...ae));
  }
  decodeValue(ee) {
    return decodePrincipalId(ee);
  }
  get name() {
    return `service {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  valueToString(ee) {
    return `service "${ee.toText()}"`;
  }
}
function toReadableString(Q) {
  const ee = JSON.stringify(Q, (ne, ie) => typeof ie == "bigint" ? `BigInt(${ie})` : ie);
  return ee && ee.length > toReadableString_max ? ee.substring(0, toReadableString_max - 3) + "..." : ee;
}
function encode$1(Q, ee) {
  if (ee.length < Q.length)
    throw Error("Wrong number of message arguments");
  const ne = new TypeTable();
  Q.forEach((ye) => ye.buildTypeTable(ne));
  const ie = new TextEncoder().encode(magicNumber), ae = ne.encode(), ce = lebEncode(ee.length), le = concat$1(...Q.map((ye) => ye.encodeType(ne))), de = concat$1(...zipWith(Q, ee, (ye, fe) => {
    try {
      ye.covariant(fe);
    } catch (Be) {
      throw new Error(Be.message + `

`);
    }
    return ye.encodeValue(fe);
  }));
  return concat$1(ie, ae, ce, le, de);
}
function decode$1(Q, ee) {
  const ne = new PipeArrayBuffer(ee);
  if (ee.byteLength < magicNumber.length)
    throw new Error("Message length smaller than magic number");
  const ie = safeRead(ne, magicNumber.length), ae = new TextDecoder().decode(ie);
  if (ae !== magicNumber)
    throw new Error("Wrong magic number: " + JSON.stringify(ae));
  function ce(ge) {
    const we = [], be = Number(lebDecode(ge));
    for (let Se = 0; Se < be; Se++) {
      const Ge = Number(slebDecode(ge));
      switch (Ge) {
        case -18:
        case -19: {
          const Fe = Number(slebDecode(ge));
          we.push([Ge, Fe]);
          break;
        }
        case -20:
        case -21: {
          const Fe = [];
          let Pe = Number(lebDecode(ge)), Je;
          for (; Pe--; ) {
            const tt = Number(lebDecode(ge));
            if (tt >= Math.pow(2, 32))
              throw new Error("field id out of 32-bit range");
            if (typeof Je == "number" && Je >= tt)
              throw new Error("field id collision or not sorted");
            Je = tt;
            const ft = Number(slebDecode(ge));
            Fe.push([tt, ft]);
          }
          we.push([Ge, Fe]);
          break;
        }
        case -22: {
          const Fe = [];
          let Pe = Number(lebDecode(ge));
          for (; Pe--; )
            Fe.push(Number(slebDecode(ge)));
          const Je = [];
          let tt = Number(lebDecode(ge));
          for (; tt--; )
            Je.push(Number(slebDecode(ge)));
          const ft = [];
          let Tt = Number(lebDecode(ge));
          for (; Tt--; )
            switch (Number(lebDecode(ge))) {
              case 1: {
                ft.push("query");
                break;
              }
              case 2: {
                ft.push("oneway");
                break;
              }
              default:
                throw new Error("unknown annotation");
            }
          we.push([Ge, [Fe, Je, ft]]);
          break;
        }
        case -23: {
          let Fe = Number(lebDecode(ge));
          const Pe = [];
          for (; Fe--; ) {
            const Je = Number(lebDecode(ge)), tt = new TextDecoder().decode(safeRead(ge, Je)), ft = slebDecode(ge);
            Pe.push([tt, ft]);
          }
          we.push([Ge, Pe]);
          break;
        }
        default:
          throw new Error("Illegal op_code: " + Ge);
      }
    }
    const Oe = [], He = Number(lebDecode(ge));
    for (let Se = 0; Se < He; Se++)
      Oe.push(Number(slebDecode(ge)));
    return [we, Oe];
  }
  const [le, de] = ce(ne);
  if (de.length < Q.length)
    throw new Error("Wrong number of return values");
  const ye = le.map((ge) => Rec());
  function fe(ge) {
    if (ge < -24)
      throw new Error("future value not supported");
    if (ge < 0)
      switch (ge) {
        case -1:
          return Null;
        case -2:
          return Bool;
        case -3:
          return Nat;
        case -4:
          return Int;
        case -5:
          return Nat8;
        case -6:
          return Nat16;
        case -7:
          return Nat32;
        case -8:
          return Nat64;
        case -9:
          return Int8;
        case -10:
          return Int16;
        case -11:
          return Int32;
        case -12:
          return Int64;
        case -13:
          return Float32;
        case -14:
          return Float64;
        case -15:
          return Text;
        case -16:
          return Reserved;
        case -17:
          return Empty;
        case -24:
          return Principal;
        default:
          throw new Error("Illegal op_code: " + ge);
      }
    if (ge >= le.length)
      throw new Error("type index out of range");
    return ye[ge];
  }
  function Be(ge) {
    switch (ge[0]) {
      case -19: {
        const we = fe(ge[1]);
        return Vec(we);
      }
      case -18: {
        const we = fe(ge[1]);
        return Opt(we);
      }
      case -20: {
        const we = {};
        for (const [He, Se] of ge[1]) {
          const Ge = `_${He}_`;
          we[Ge] = fe(Se);
        }
        const be = Record(we), Oe = be.tryAsTuple();
        return Array.isArray(Oe) ? Tuple(...Oe) : be;
      }
      case -21: {
        const we = {};
        for (const [be, Oe] of ge[1]) {
          const He = `_${be}_`;
          we[He] = fe(Oe);
        }
        return Variant(we);
      }
      case -22: {
        const [we, be, Oe] = ge[1];
        return Func(we.map((He) => fe(He)), be.map((He) => fe(He)), Oe);
      }
      case -23: {
        const we = {}, be = ge[1];
        for (const [Oe, He] of be) {
          let Se = fe(He);
          if (Se instanceof RecClass && (Se = Se.getType()), !(Se instanceof FuncClass))
            throw new Error("Illegal service definition: services can only contain functions");
          we[Oe] = Se;
        }
        return Service(we);
      }
      default:
        throw new Error("Illegal op_code: " + ge[0]);
    }
  }
  le.forEach((ge, we) => {
    const be = Be(ge);
    ye[we].fill(be);
  });
  const Ee = de.map((ge) => fe(ge)), me = Q.map((ge, we) => ge.decodeValue(ne, Ee[we]));
  for (let ge = Q.length; ge < Ee.length; ge++)
    Ee[ge].decodeValue(ne, Ee[ge]);
  if (ne.byteLength > 0)
    throw new Error("decode: Left-over bytes");
  return me;
}
const Empty = new EmptyClass(), Reserved = new ReservedClass(), Unknown = new UnknownClass(), Bool = new BoolClass(), Null = new NullClass(), Text = new TextClass(), Int = new IntClass(), Nat = new NatClass(), Float32 = new FloatClass(32), Float64 = new FloatClass(64), Int8 = new FixedIntClass(8), Int16 = new FixedIntClass(16), Int32 = new FixedIntClass(32), Int64 = new FixedIntClass(64), Nat8 = new FixedNatClass(8), Nat16 = new FixedNatClass(16), Nat32 = new FixedNatClass(32), Nat64 = new FixedNatClass(64), Principal = new PrincipalClass();
function Tuple(...Q) {
  return new TupleClass(Q);
}
function Vec(Q) {
  return new VecClass(Q);
}
function Opt(Q) {
  return new OptClass(Q);
}
function Record(Q) {
  return new RecordClass(Q);
}
function Variant(Q) {
  return new VariantClass(Q);
}
function Rec() {
  return new RecClass();
}
function Func(Q, ee, ne = []) {
  return new FuncClass(Q, ee, ne);
}
function Service(Q) {
  return new ServiceClass(Q);
}
const IDL = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Visitor,
  Type,
  PrimitiveType,
  ConstructType,
  EmptyClass,
  UnknownClass,
  BoolClass,
  NullClass,
  ReservedClass,
  TextClass,
  IntClass,
  NatClass,
  FloatClass,
  FixedIntClass,
  FixedNatClass,
  VecClass,
  OptClass,
  RecordClass,
  TupleClass,
  VariantClass,
  RecClass,
  PrincipalClass,
  FuncClass,
  ServiceClass,
  encode: encode$1,
  decode: decode$1,
  Empty,
  Reserved,
  Unknown,
  Bool,
  Null,
  Text,
  Int,
  Nat,
  Float32,
  Float64,
  Int8,
  Int16,
  Int32,
  Int64,
  Nat8,
  Nat16,
  Nat32,
  Nat64,
  Principal,
  Tuple,
  Vec,
  Opt,
  Record,
  Variant,
  Rec,
  Func,
  Service
}, Symbol.toStringTag, { value: "Module" }));
function concat(...Q) {
  const ee = new Uint8Array(Q.reduce((ie, ae) => ie + ae.byteLength, 0));
  let ne = 0;
  for (const ie of Q)
    ee.set(new Uint8Array(ie), ne), ne += ie.byteLength;
  return ee.buffer;
}
function toHex(Q) {
  return [...new Uint8Array(Q)].map((ee) => ee.toString(16).padStart(2, "0")).join("");
}
const hexRe = new RegExp(/^([0-9A-F]{2})*$/i);
function fromHex(Q) {
  if (!hexRe.test(Q))
    throw new Error("Invalid hexadecimal string.");
  const ee = [...Q].reduce((ne, ie, ae) => (ne[ae / 2 | 0] = (ne[ae / 2 | 0] || "") + ie, ne), []).map((ne) => Number.parseInt(ne, 16));
  return new Uint8Array(ee).buffer;
}
function compare(Q, ee) {
  if (Q.byteLength !== ee.byteLength)
    return Q.byteLength - ee.byteLength;
  const ne = new Uint8Array(Q), ie = new Uint8Array(ee);
  for (let ae = 0; ae < ne.length; ae++)
    if (ne[ae] !== ie[ae])
      return ne[ae] - ie[ae];
  return 0;
}
function hash(Q) {
  return sha256$1.exports.sha256.create().update(new Uint8Array(Q)).arrayBuffer();
}
function hashValue(Q) {
  if (Q instanceof src$1.Tagged)
    return hashValue(Q.value);
  if (typeof Q == "string")
    return hashString(Q);
  if (typeof Q == "number")
    return hash(lebEncode(Q));
  if (Q instanceof ArrayBuffer || ArrayBuffer.isView(Q))
    return hash(Q);
  if (Array.isArray(Q)) {
    const ee = Q.map(hashValue);
    return hash(concat(...ee));
  } else {
    if (Q && typeof Q == "object" && Q._isPrincipal)
      return hash(Q.toUint8Array());
    if (typeof Q == "object" && Q !== null && typeof Q.toHash == "function")
      return hashValue(Q.toHash());
    if (typeof Q == "bigint")
      return hash(lebEncode(Q));
  }
  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${Q}`), {
    value: Q
  });
}
const hashString = (Q) => {
  const ee = new TextEncoder().encode(Q);
  return hash(ee);
};
function requestIdOf(Q) {
  const ie = Object.entries(Q).filter(([, le]) => le !== void 0).map(([le, de]) => {
    const ye = hashString(le), fe = hashValue(de);
    return [ye, fe];
  }).sort(([le], [de]) => compare(le, de)), ae = concat(...ie.map((le) => concat(...le)));
  return hash(ae);
}
globalThis && globalThis.__rest;
new TextEncoder().encode(`
ic-request`);
class AnonymousIdentity {
  getPrincipal() {
    return Principal$3.anonymous();
  }
  async transformRequest(ee) {
    return Object.assign(Object.assign({}, ee), { body: { content: ee.body } });
  }
}
class PrincipalEncoder {
  get name() {
    return "Principal";
  }
  get priority() {
    return 0;
  }
  match(ee) {
    return ee && ee._isPrincipal === !0;
  }
  encode(ee) {
    return src.value.bytes(ee.toUint8Array());
  }
}
class BufferEncoder {
  get name() {
    return "Buffer";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return ee instanceof ArrayBuffer || ArrayBuffer.isView(ee);
  }
  encode(ee) {
    return src.value.bytes(new Uint8Array(ee));
  }
}
class BigIntEncoder {
  get name() {
    return "BigInt";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return typeof ee == "bigint";
  }
  encode(ee) {
    return ee > BigInt(0) ? src.value.tagged(2, src.value.bytes(fromHex(ee.toString(16)))) : src.value.tagged(3, src.value.bytes(fromHex((BigInt("-1") * ee).toString(16))));
  }
}
const serializer = src.SelfDescribeCborSerializer.withDefaultEncoders(!0);
serializer.addEncoder(new PrincipalEncoder());
serializer.addEncoder(new BufferEncoder());
serializer.addEncoder(new BigIntEncoder());
var CborTag;
(function(Q) {
  Q[Q.Uint64LittleEndian = 71] = "Uint64LittleEndian", Q[Q.Semantic = 55799] = "Semantic";
})(CborTag || (CborTag = {}));
function encode(Q) {
  return serializer.serialize(Q);
}
function decodePositiveBigInt(Q) {
  const ee = Q.byteLength;
  let ne = BigInt(0);
  for (let ie = 0; ie < ee; ie++)
    ne = ne * BigInt(256) + BigInt(Q[ie]);
  return ne;
}
class Uint8ArrayDecoder extends src$1.Decoder {
  createByteString(ee) {
    return concat(...ee);
  }
  createByteStringFromHeap(ee, ne) {
    return ee === ne ? new ArrayBuffer(0) : new Uint8Array(this._heap.slice(ee, ne));
  }
}
function decode(Q) {
  const ee = new Uint8Array(Q);
  return new Uint8ArrayDecoder({
    size: ee.byteLength,
    tags: {
      2: (ie) => decodePositiveBigInt(ie),
      3: (ie) => -decodePositiveBigInt(ie),
      [CborTag.Semantic]: (ie) => ie
    }
  }).decodeFirst(ee);
}
var SubmitRequestType;
(function(Q) {
  Q.Call = "call";
})(SubmitRequestType || (SubmitRequestType = {}));
function makeNonce() {
  const Q = new ArrayBuffer(16), ee = new DataView(Q), ne = BigInt(+Date.now()), ie = Math.floor(Math.random() * 4294967295), ae = Math.floor(Math.random() * 4294967295);
  if (typeof ee.setBigUint64 == "function")
    ee.setBigUint64(0, ne);
  else {
    const ce = BigInt(1) << BigInt(32);
    ee.setUint32(0, Number(ne >> BigInt(32))), ee.setUint32(4, Number(ne % ce));
  }
  return ee.setUint32(8, ie), ee.setUint32(12, ae), Q;
}
const NANOSECONDS_PER_MILLISECONDS = BigInt(1e6), REPLICA_PERMITTED_DRIFT_MILLISECONDS = BigInt(60 * 1e3);
class Expiry {
  constructor(ee) {
    this._value = (BigInt(Date.now()) + BigInt(ee) - REPLICA_PERMITTED_DRIFT_MILLISECONDS) * NANOSECONDS_PER_MILLISECONDS;
  }
  toCBOR() {
    return src.value.u64(this._value.toString(16), 16);
  }
  toHash() {
    return lebEncode(this._value);
  }
}
function makeNonceTransform(Q = makeNonce) {
  return async (ee) => {
    ee.endpoint === "call" && (ee.body.nonce = Q());
  };
}
var RequestStatusResponseStatus;
(function(Q) {
  Q.Received = "received", Q.Processing = "processing", Q.Replied = "replied", Q.Rejected = "rejected", Q.Unknown = "unknown", Q.Done = "done";
})(RequestStatusResponseStatus || (RequestStatusResponseStatus = {}));
const DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1e3, IC_ROOT_KEY = "308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d9685f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484b01291091c5f87b98883463f98091a0baaae", IC0_DOMAIN = "ic0.app", IC0_SUB_DOMAIN = ".ic0.app";
class HttpDefaultFetchError extends AgentError {
  constructor(ee) {
    super(ee), this.message = ee;
  }
}
class IdentityInvalidError extends AgentError {
  constructor(ee) {
    super(ee), this.message = ee;
  }
}
function getDefaultFetch() {
  let Q;
  if (typeof window < "u")
    if (window.fetch)
      Q = window.fetch.bind(window);
    else
      throw new HttpDefaultFetchError("Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.");
  else if (typeof global < "u")
    if (global.fetch)
      Q = global.fetch.bind(global);
    else
      throw new HttpDefaultFetchError("Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.");
  else
    typeof self < "u" && self.fetch && (Q = self.fetch.bind(self));
  if (Q)
    return Q;
  throw new HttpDefaultFetchError("Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.");
}
class HttpAgent {
  constructor(ee = {}) {
    if (this.rootKey = fromHex(IC_ROOT_KEY), this._pipeline = [], this._timeDiffMsecs = 0, this._rootKeyFetched = !1, this._retryTimes = 3, this._isAgent = !0, ee.source) {
      if (!(ee.source instanceof HttpAgent))
        throw new Error("An Agent's source can only be another HttpAgent");
      this._pipeline = [...ee.source._pipeline], this._identity = ee.source._identity, this._fetch = ee.source._fetch, this._host = ee.source._host, this._credentials = ee.source._credentials;
    } else
      this._fetch = ee.fetch || getDefaultFetch() || fetch.bind(global);
    if (ee.host !== void 0)
      !ee.host.match(/^[a-z]+:/) && typeof window < "u" ? this._host = new URL(window.location.protocol + "//" + ee.host) : this._host = new URL(ee.host);
    else if (ee.source !== void 0)
      this._host = ee.source._host;
    else {
      const ne = typeof window < "u" ? window.location : void 0;
      if (!ne)
        throw new Error("Must specify a host to connect to.");
      this._host = new URL(ne + "");
    }
    if (ee.retryTimes !== void 0 && (this._retryTimes = ee.retryTimes), this._host.hostname.endsWith(IC0_SUB_DOMAIN) && (this._host.hostname = IC0_DOMAIN), ee.credentials) {
      const { name: ne, password: ie } = ee.credentials;
      this._credentials = `${ne}${ie ? ":" + ie : ""}`;
    }
    this._identity = Promise.resolve(ee.identity || new AnonymousIdentity()), ee.disableNonce || this.addTransform(makeNonceTransform(makeNonce));
  }
  isLocal() {
    const ee = this._host.hostname;
    return ee === "127.0.0.1" || ee.endsWith("localhost");
  }
  addTransform(ee, ne = ee.priority || 0) {
    const ie = this._pipeline.findIndex((ae) => (ae.priority || 0) < ne);
    this._pipeline.splice(ie >= 0 ? ie : this._pipeline.length, 0, Object.assign(ee, { priority: ne }));
  }
  async getPrincipal() {
    if (!this._identity)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    return (await this._identity).getPrincipal();
  }
  async call(ee, ne, ie) {
    const ae = await (ie !== void 0 ? await ie : await this._identity);
    if (!ae)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const ce = Principal$3.from(ee), le = ne.effectiveCanisterId ? Principal$3.from(ne.effectiveCanisterId) : ce, de = ae.getPrincipal() || Principal$3.anonymous();
    let ye = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS);
    Math.abs(this._timeDiffMsecs) > 1e3 * 30 && (ye = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS + this._timeDiffMsecs));
    const fe = {
      request_type: SubmitRequestType.Call,
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: de,
      ingress_expiry: ye
    };
    let Be = await this._transform({
      request: {
        body: null,
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "call",
      body: fe
    });
    Be = await ae.transformRequest(Be);
    const Ee = encode(Be.body), me = this._requestAndRetry(() => this._fetch("" + new URL(`/api/v2/canister/${le.toText()}/call`, this._host), Object.assign(Object.assign({}, Be.request), { body: Ee }))), [ge, we] = await Promise.all([me, requestIdOf(fe)]);
    return {
      requestId: we,
      response: {
        ok: ge.ok,
        status: ge.status,
        statusText: ge.statusText
      }
    };
  }
  async _requestAndRetry(ee, ne = 0) {
    if (ne > this._retryTimes && this._retryTimes !== 0)
      throw new Error(`AgentError: Exceeded configured limit of ${this._retryTimes} retry attempts. Please check your network connection or try again in a few moments`);
    const ie = await ee();
    if (!ie.ok) {
      const ae = await ie.clone().text(), ce = `Server returned an error:
  Code: ${ie.status} (${ie.statusText})
  Body: ${ae}
`;
      if (this._retryTimes > ne)
        return console.warn(ce + "  Retrying request."), await this._requestAndRetry(ee, ne + 1);
      throw new Error(ce);
    }
    return ie;
  }
  async query(ee, ne, ie) {
    const ae = await (ie !== void 0 ? await ie : await this._identity);
    if (!ae)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const ce = typeof ee == "string" ? Principal$3.fromText(ee) : ee, le = (ae == null ? void 0 : ae.getPrincipal()) || Principal$3.anonymous(), de = {
      request_type: "query",
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: le,
      ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
    };
    let ye = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read",
      body: de
    });
    ye = await (ae == null ? void 0 : ae.transformRequest(ye));
    const fe = encode(ye.body), Be = await this._requestAndRetry(() => this._fetch("" + new URL(`/api/v2/canister/${ce.toText()}/query`, this._host), Object.assign(Object.assign({}, ye.request), { body: fe })));
    return decode(await Be.arrayBuffer());
  }
  async createReadStateRequest(ee, ne) {
    const ie = await (ne !== void 0 ? await ne : await this._identity);
    if (!ie)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const ae = (ie == null ? void 0 : ie.getPrincipal()) || Principal$3.anonymous(), ce = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read_state",
      body: {
        request_type: "read_state",
        paths: ee.paths,
        sender: ae,
        ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
      }
    });
    return ie == null ? void 0 : ie.transformRequest(ce);
  }
  async readState(ee, ne, ie, ae) {
    const ce = typeof ee == "string" ? Principal$3.fromText(ee) : ee, le = ae != null ? ae : await this.createReadStateRequest(ne, ie), de = encode(le.body), ye = await this._fetch("" + new URL(`/api/v2/canister/${ce}/read_state`, this._host), Object.assign(Object.assign({}, le.request), { body: de }));
    if (!ye.ok)
      throw new Error(`Server returned an error:
  Code: ${ye.status} (${ye.statusText})
  Body: ${await ye.text()}
`);
    return decode(await ye.arrayBuffer());
  }
  async syncTime(ee) {
    const ne = await import("./index.00390454.js"), ie = Date.now();
    try {
      ee || console.log("Syncing time with the IC. No canisterId provided, so falling back to ryjl3-tyaaa-aaaaa-aaaba-cai");
      const ce = (await ne.request({
        canisterId: ee != null ? ee : Principal$3.from("ryjl3-tyaaa-aaaaa-aaaba-cai"),
        agent: this,
        paths: ["time"]
      })).get("time");
      ce && (this._timeDiffMsecs = Number(ce) - Number(ie));
    } catch (ae) {
      console.error("Caught exception while attempting to sync time:", ae);
    }
  }
  async status() {
    const ee = this._credentials ? {
      Authorization: "Basic " + btoa(this._credentials)
    } : {}, ne = await this._requestAndRetry(() => this._fetch("" + new URL("/api/v2/status", this._host), { headers: ee }));
    return decode(await ne.arrayBuffer());
  }
  async fetchRootKey() {
    return this._rootKeyFetched || (this.rootKey = (await this.status()).root_key, this._rootKeyFetched = !0), this.rootKey;
  }
  invalidateIdentity() {
    this._identity = null;
  }
  replaceIdentity(ee) {
    this._identity = Promise.resolve(ee);
  }
  _transform(ee) {
    let ne = Promise.resolve(ee);
    for (const ie of this._pipeline)
      ne = ne.then((ae) => ie(ae).then((ce) => ce || ae));
    return ne;
  }
}
var ProxyMessageKind;
(function(Q) {
  Q.Error = "err", Q.GetPrincipal = "gp", Q.GetPrincipalResponse = "gpr", Q.Query = "q", Q.QueryResponse = "qr", Q.Call = "c", Q.CallResponse = "cr", Q.ReadState = "rs", Q.ReadStateResponse = "rsr", Q.Status = "s", Q.StatusResponse = "sr";
})(ProxyMessageKind || (ProxyMessageKind = {}));
function getDefaultAgent() {
  const Q = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.ic.agent : global.ic.agent : window.ic.agent;
  if (!Q)
    throw new Error("No Agent could be found.");
  return Q;
}
const managementCanisterIdl = ({ IDL: Q }) => {
  const ee = Q.Principal, ne = Q.Record({
    controllers: Q.Vec(Q.Principal),
    freezing_threshold: Q.Nat,
    memory_allocation: Q.Nat,
    compute_allocation: Q.Nat
  }), ie = Q.Record({
    controllers: Q.Opt(Q.Vec(Q.Principal)),
    freezing_threshold: Q.Opt(Q.Nat),
    memory_allocation: Q.Opt(Q.Nat),
    compute_allocation: Q.Opt(Q.Nat)
  }), ae = Q.Vec(Q.Nat8);
  return Q.Service({
    canister_status: Q.Func([Q.Record({ canister_id: ee })], [
      Q.Record({
        status: Q.Variant({
          stopped: Q.Null,
          stopping: Q.Null,
          running: Q.Null
        }),
        memory_size: Q.Nat,
        cycles: Q.Nat,
        settings: ne,
        module_hash: Q.Opt(Q.Vec(Q.Nat8))
      })
    ], []),
    create_canister: Q.Func([Q.Record({ settings: Q.Opt(ie) })], [Q.Record({ canister_id: ee })], []),
    delete_canister: Q.Func([Q.Record({ canister_id: ee })], [], []),
    deposit_cycles: Q.Func([Q.Record({ canister_id: ee })], [], []),
    install_code: Q.Func([
      Q.Record({
        arg: Q.Vec(Q.Nat8),
        wasm_module: ae,
        mode: Q.Variant({
          reinstall: Q.Null,
          upgrade: Q.Null,
          install: Q.Null
        }),
        canister_id: ee
      })
    ], [], []),
    provisional_create_canister_with_cycles: Q.Func([
      Q.Record({
        settings: Q.Opt(ie),
        amount: Q.Opt(Q.Nat)
      })
    ], [Q.Record({ canister_id: ee })], []),
    provisional_top_up_canister: Q.Func([Q.Record({ canister_id: ee, amount: Q.Nat })], [], []),
    raw_rand: Q.Func([], [Q.Vec(Q.Nat8)], []),
    start_canister: Q.Func([Q.Record({ canister_id: ee })], [], []),
    stop_canister: Q.Func([Q.Record({ canister_id: ee })], [], []),
    uninstall_code: Q.Func([Q.Record({ canister_id: ee })], [], []),
    update_settings: Q.Func([
      Q.Record({
        canister_id: Q.Principal,
        settings: ie
      })
    ], [], [])
  });
};
function getManagementCanister(Q) {
  function ee(ne, ie, ae) {
    const ce = ie[0];
    let le = Principal$3.fromHex("");
    return ce && typeof ce == "object" && ce.canister_id && (le = Principal$3.from(ce.canister_id)), { effectiveCanisterId: le };
  }
  return Actor.createActor(managementCanisterIdl, Object.assign(Object.assign(Object.assign({}, Q), { canisterId: Principal$3.fromHex("") }), {
    callTransform: ee,
    queryTransform: ee
  }));
}
const wasmBytesBase64 = "";
let wasm;
const wasmBytes = decode$2(wasmBytesBase64);
function bls_init() {
  return wasm.bls_init();
}
let cachegetUint8Memory0 = null;
function getUint8Memory0() {
  return (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) && (cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer)), cachegetUint8Memory0;
}
function passArray8ToWasm0(Q, ee) {
  const ne = ee(Q.length * 1);
  return getUint8Memory0().set(Q, ne / 1), [ne, Q.length];
}
function bls_verify(Q, ee, ne) {
  const [ie, ae] = passArray8ToWasm0(Q, wasm.__wbindgen_malloc), [ce, le] = passArray8ToWasm0(ee, wasm.__wbindgen_malloc), [de, ye] = passArray8ToWasm0(ne, wasm.__wbindgen_malloc);
  return wasm.bls_verify(ie, ae, ce, le, de, ye);
}
async function load(Q, ee) {
  if (typeof Response == "function" && Q instanceof Response) {
    const ne = await Q.arrayBuffer();
    return await WebAssembly.instantiate(ne, ee);
  } else {
    const ne = await WebAssembly.instantiate(Q, ee);
    return ne instanceof WebAssembly.Instance ? { instance: ne, module: Q } : ne;
  }
}
async function init() {
  const Q = {}, { instance: ee, module: ne } = await load(wasmBytes, Q);
  return wasm = ee.exports, init.__wbindgen_wasm_module = ne, wasm;
}
let verify;
async function blsVerify(Q, ee, ne) {
  if (!verify) {
    if (await init(), bls_init() !== 0)
      throw new Error("Cannot initialize BLS");
    verify = (ie, ae, ce) => bls_verify(ae, ce, ie) === 0;
  }
  return verify(Q, ee, ne);
}
class CertificateVerificationError extends AgentError {
  constructor(ee) {
    super(`Invalid certificate: ${ee}`);
  }
}
function isBufferEqual(Q, ee) {
  if (Q.byteLength !== ee.byteLength)
    return !1;
  const ne = new Uint8Array(Q), ie = new Uint8Array(ee);
  for (let ae = 0; ae < ne.length; ae++)
    if (ne[ae] !== ie[ae])
      return !1;
  return !0;
}
class Certificate {
  constructor(ee, ne, ie, ae) {
    this._rootKey = ne, this._canisterId = ie, this._blsVerify = ae, this.cert = decode(new Uint8Array(ee));
  }
  static async create(ee) {
    let ne = ee.blsVerify;
    ne || (ne = blsVerify);
    const ie = new Certificate(ee.certificate, ee.rootKey, ee.canisterId, ne);
    return await ie.verify(), ie;
  }
  lookup(ee) {
    return lookup_path(ee, this.cert.tree);
  }
  async verify() {
    const ee = await reconstruct(this.cert.tree), ne = await this._checkDelegationAndGetKey(this.cert.delegation), ie = this.cert.signature, ae = extractDER(ne), ce = concat(domain_sep("ic-state-root"), ee);
    let le = !1;
    try {
      le = await this._blsVerify(new Uint8Array(ae), new Uint8Array(ie), new Uint8Array(ce));
    } catch {
      le = !1;
    }
    if (!le)
      throw new CertificateVerificationError("Signature verification failed");
  }
  async _checkDelegationAndGetKey(ee) {
    if (!ee)
      return this._rootKey;
    const ne = await Certificate.create({
      certificate: ee.certificate,
      rootKey: this._rootKey,
      canisterId: this._canisterId
    }), ie = ne.lookup(["subnet", ee.subnet_id, "canister_ranges"]);
    if (!ie)
      throw new CertificateVerificationError(`Could not find canister ranges for subnet 0x${toHex(ee.subnet_id)}`);
    if (!decode(ie).map((ye) => [
      Principal$3.fromUint8Array(ye[0]),
      Principal$3.fromUint8Array(ye[1])
    ]).some((ye) => ye[0].ltEq(this._canisterId) && ye[1].gtEq(this._canisterId)))
      throw new CertificateVerificationError(`Canister ${this._canisterId} not in range of delegations for subnet 0x${toHex(ee.subnet_id)}`);
    const de = ne.lookup(["subnet", ee.subnet_id, "public_key"]);
    if (!de)
      throw new Error(`Could not find subnet key for subnet 0x${toHex(ee.subnet_id)}`);
    return de;
  }
}
const DER_PREFIX = fromHex("308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100"), KEY_LENGTH = 96;
function extractDER(Q) {
  const ee = DER_PREFIX.byteLength + KEY_LENGTH;
  if (Q.byteLength !== ee)
    throw new TypeError(`BLS DER-encoded public key must be ${ee} bytes long`);
  const ne = Q.slice(0, DER_PREFIX.byteLength);
  if (!isBufferEqual(ne, DER_PREFIX))
    throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${ne}`);
  return Q.slice(DER_PREFIX.byteLength);
}
async function reconstruct(Q) {
  switch (Q[0]) {
    case 0:
      return hash(domain_sep("ic-hashtree-empty"));
    case 4:
      return Q[1];
    case 3:
      return hash(concat(domain_sep("ic-hashtree-leaf"), Q[1]));
    case 2:
      return hash(concat(domain_sep("ic-hashtree-labeled"), Q[1], await reconstruct(Q[2])));
    case 1:
      return hash(concat(domain_sep("ic-hashtree-fork"), await reconstruct(Q[1]), await reconstruct(Q[2])));
    default:
      throw new Error("unreachable");
  }
}
function domain_sep(Q) {
  const ee = new Uint8Array([Q.length]), ne = new TextEncoder().encode(Q);
  return concat(ee, ne);
}
function lookup_path(Q, ee) {
  if (Q.length === 0)
    switch (ee[0]) {
      case 3:
        return new Uint8Array(ee[1]).buffer;
      default:
        return;
    }
  const ne = typeof Q[0] == "string" ? new TextEncoder().encode(Q[0]) : Q[0], ie = find_label(ne, flatten_forks(ee));
  if (ie)
    return lookup_path(Q.slice(1), ie);
}
function flatten_forks(Q) {
  switch (Q[0]) {
    case 0:
      return [];
    case 1:
      return flatten_forks(Q[1]).concat(flatten_forks(Q[2]));
    default:
      return [Q];
  }
}
function find_label(Q, ee) {
  if (ee.length !== 0) {
    for (const ne of ee)
      if (ne[0] === 2) {
        const ie = ne[1];
        if (isBufferEqual(Q, ie))
          return ne[2];
      }
  }
}
const FIVE_MINUTES_IN_MSEC = 5 * 60 * 1e3;
function defaultStrategy() {
  return chain(conditionalDelay(once$1(), 1e3), backoff(1e3, 1.2), timeout(FIVE_MINUTES_IN_MSEC));
}
function once$1() {
  let Q = !0;
  return async () => Q ? (Q = !1, !0) : !1;
}
function conditionalDelay(Q, ee) {
  return async (ne, ie, ae) => {
    if (await Q(ne, ie, ae))
      return new Promise((ce) => setTimeout(ce, ee));
  };
}
function timeout(Q) {
  const ee = Date.now() + Q;
  return async (ne, ie, ae) => {
    if (Date.now() > ee)
      throw new Error(`Request timed out after ${Q} msec:
  Request ID: ${toHex(ie)}
  Request status: ${ae}
`);
  };
}
function backoff(Q, ee) {
  let ne = Q;
  return () => new Promise((ie) => setTimeout(() => {
    ne *= ee, ie();
  }, ne));
}
function chain(...Q) {
  return async (ee, ne, ie) => {
    for (const ae of Q)
      await ae(ee, ne, ie);
  };
}
async function pollForResponse(Q, ee, ne, ie, ae, ce) {
  var le;
  const de = [new TextEncoder().encode("request_status"), ne], ye = ae != null ? ae : await ((le = Q.createReadStateRequest) === null || le === void 0 ? void 0 : le.call(Q, { paths: [de] })), fe = await Q.readState(ee, { paths: [de] }, void 0, ye);
  if (Q.rootKey == null)
    throw new Error("Agent root key not initialized before polling");
  const Be = await Certificate.create({
    certificate: fe.certificate,
    rootKey: Q.rootKey,
    canisterId: ee,
    blsVerify: ce
  }), Ee = Be.lookup([...de, new TextEncoder().encode("status")]);
  let me;
  switch (typeof Ee > "u" ? me = RequestStatusResponseStatus.Unknown : me = new TextDecoder().decode(Ee), me) {
    case RequestStatusResponseStatus.Replied:
      return Be.lookup([...de, "reply"]);
    case RequestStatusResponseStatus.Received:
    case RequestStatusResponseStatus.Unknown:
    case RequestStatusResponseStatus.Processing:
      return await ie(ee, ne, me), pollForResponse(Q, ee, ne, ie, ye);
    case RequestStatusResponseStatus.Rejected: {
      const ge = new Uint8Array(Be.lookup([...de, "reject_code"]))[0], we = new TextDecoder().decode(Be.lookup([...de, "reject_message"]));
      throw new Error(`Call was rejected:
  Request ID: ${toHex(ne)}
  Reject code: ${ge}
  Reject text: ${we}
`);
    }
    case RequestStatusResponseStatus.Done:
      throw new Error(`Call was marked as done but we never saw the reply:
  Request ID: ${toHex(ne)}
`);
  }
  throw new Error("unreachable");
}
class ActorCallError extends AgentError {
  constructor(ee, ne, ie, ae) {
    super([
      "Call failed:",
      `  Canister: ${ee.toText()}`,
      `  Method: ${ne} (${ie})`,
      ...Object.getOwnPropertyNames(ae).map((ce) => `  "${ce}": ${JSON.stringify(ae[ce])}`)
    ].join(`
`)), this.canisterId = ee, this.methodName = ne, this.type = ie, this.props = ae;
  }
}
class QueryCallRejectedError extends ActorCallError {
  constructor(ee, ne, ie) {
    var ae;
    super(ee, ne, "query", {
      Status: ie.status,
      Code: (ae = ReplicaRejectCode[ie.reject_code]) !== null && ae !== void 0 ? ae : `Unknown Code "${ie.reject_code}"`,
      Message: ie.reject_message
    }), this.result = ie;
  }
}
class UpdateCallRejectedError extends ActorCallError {
  constructor(ee, ne, ie, ae) {
    super(ee, ne, "update", {
      "Request ID": toHex(ie),
      "HTTP status code": ae.status.toString(),
      "HTTP status text": ae.statusText
    }), this.requestId = ie, this.response = ae;
  }
}
var CanisterInstallMode;
(function(Q) {
  Q.Install = "install", Q.Reinstall = "reinstall", Q.Upgrade = "upgrade";
})(CanisterInstallMode || (CanisterInstallMode = {}));
const metadataSymbol = Symbol.for("ic-agent-metadata");
class Actor {
  constructor(ee) {
    this[metadataSymbol] = Object.freeze(ee);
  }
  static agentOf(ee) {
    return ee[metadataSymbol].config.agent;
  }
  static interfaceOf(ee) {
    return ee[metadataSymbol].service;
  }
  static canisterIdOf(ee) {
    return Principal$3.from(ee[metadataSymbol].config.canisterId);
  }
  static async install(ee, ne) {
    const ie = ee.mode === void 0 ? CanisterInstallMode.Install : ee.mode, ae = ee.arg ? [...new Uint8Array(ee.arg)] : [], ce = [...new Uint8Array(ee.module)], le = typeof ne.canisterId == "string" ? Principal$3.fromText(ne.canisterId) : ne.canisterId;
    await getManagementCanister(ne).install_code({
      mode: { [ie]: null },
      arg: ae,
      wasm_module: ce,
      canister_id: le
    });
  }
  static async createCanister(ee) {
    const { canister_id: ne } = await getManagementCanister(ee || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
    return ne;
  }
  static async createAndInstallCanister(ee, ne, ie) {
    const ae = await this.createCanister(ie);
    return await this.install(Object.assign({}, ne), Object.assign(Object.assign({}, ie), { canisterId: ae })), this.createActor(ee, Object.assign(Object.assign({}, ie), { canisterId: ae }));
  }
  static createActorClass(ee) {
    const ne = ee({ IDL });
    class ie extends Actor {
      constructor(ce) {
        const le = typeof ce.canisterId == "string" ? Principal$3.fromText(ce.canisterId) : ce.canisterId;
        super({
          config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), ce), { canisterId: le }),
          service: ne
        });
        for (const [de, ye] of ne._fields)
          this[de] = _createActorMethod(this, de, ye, ce.blsVerify);
      }
    }
    return ie;
  }
  static createActor(ee, ne) {
    return new (this.createActorClass(ee))(ne);
  }
}
function decodeReturnValue(Q, ee) {
  const ne = decode$1(Q, buffer$1.Buffer.from(ee));
  switch (ne.length) {
    case 0:
      return;
    case 1:
      return ne[0];
    default:
      return ne;
  }
}
const DEFAULT_ACTOR_CONFIG = {
  pollingStrategyFactory: defaultStrategy
};
function _createActorMethod(Q, ee, ne, ie) {
  let ae;
  ne.annotations.includes("query") ? ae = async (le, ...de) => {
    var ye, fe;
    le = Object.assign(Object.assign({}, le), (fe = (ye = Q[metadataSymbol].config).queryTransform) === null || fe === void 0 ? void 0 : fe.call(ye, ee, de, Object.assign(Object.assign({}, Q[metadataSymbol].config), le)));
    const Be = le.agent || Q[metadataSymbol].config.agent || getDefaultAgent(), Ee = Principal$3.from(le.canisterId || Q[metadataSymbol].config.canisterId), me = encode$1(ne.argTypes, de), ge = await Be.query(Ee, { methodName: ee, arg: me });
    switch (ge.status) {
      case "rejected":
        throw new QueryCallRejectedError(Ee, ee, ge);
      case "replied":
        return decodeReturnValue(ne.retTypes, ge.reply.arg);
    }
  } : ae = async (le, ...de) => {
    var ye, fe;
    le = Object.assign(Object.assign({}, le), (fe = (ye = Q[metadataSymbol].config).callTransform) === null || fe === void 0 ? void 0 : fe.call(ye, ee, de, Object.assign(Object.assign({}, Q[metadataSymbol].config), le)));
    const Be = le.agent || Q[metadataSymbol].config.agent || getDefaultAgent(), { canisterId: Ee, effectiveCanisterId: me, pollingStrategyFactory: ge } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), Q[metadataSymbol].config), le), we = Principal$3.from(Ee), be = me !== void 0 ? Principal$3.from(me) : we, Oe = encode$1(ne.argTypes, de), { requestId: He, response: Se } = await Be.call(we, {
      methodName: ee,
      arg: Oe,
      effectiveCanisterId: be
    });
    if (!Se.ok)
      throw new UpdateCallRejectedError(we, ee, He, Se);
    const Ge = ge(), Fe = await pollForResponse(Be, be, He, Ge, ie);
    if (Fe !== void 0)
      return decodeReturnValue(ne.retTypes, Fe);
    if (ne.retTypes.length === 0)
      return;
    throw new Error(`Call was returned undefined, but type [${ne.retTypes.join(",")}].`);
  };
  const ce = (...le) => ae({}, ...le);
  return ce.withOptions = (le) => (...de) => ae(le, ...de), ce;
}
const idlFactory = ({ IDL: Q }) => {
  const ee = Q.Record({
    token_id: Q.Int,
    name: Q.Text,
    canister_id: Q.Principal
  }), ne = Q.Record({
    id: Q.Text,
    host_escrow: Q.Vec(ee),
    host_data: Q.Vec(ee),
    fulfilled: Q.Bool,
    host: Q.Principal,
    guest_data: Q.Vec(ee),
    host_accept: Q.Bool,
    guest_escrow: Q.Vec(ee),
    guest: Q.Principal,
    guest_accept: Q.Bool
  });
  return Q.Service({
    accept: Q.Func([Q.Text], [ne], []),
    add_item_to_escrow: Q.Func([Q.Text, ee], [ne], []),
    add_item_to_trade: Q.Func([Q.Text, ee], [ne], []),
    cancel: Q.Func([Q.Text], [ne], []),
    create_trade: Q.Func([], [ne], []),
    delete_trade: Q.Func([Q.Text], [ne], []),
    get_all_trades: Q.Func([], [Q.Vec(ne)], ["query"]),
    get_escrow_items: Q.Func([Q.Text], [Q.Vec(ee)], ["query"]),
    get_escrow_items_self: Q.Func([Q.Text], [Q.Vec(ee)], ["query"]),
    get_trade_by_id: Q.Func([Q.Text], [Q.Opt(ne)], ["query"]),
    join_trade: Q.Func([Q.Text], [ne], []),
    leave_trade: Q.Func([Q.Text], [ne], []),
    remove_item_from_escrow: Q.Func([Q.Text, ee], [ne], []),
    remove_item_from_trade: Q.Func([Q.Text, ee], [ne], []),
    withdraw_from_escrow: Q.Func([Q.Text, ee], [ee], [])
  });
}, canister_id$1 = "rrkah-fqaaa-aaaaa-aaaaq-cai", createActor = (Q, ee = {}) => {
  const ne = ee.agent || new HttpAgent({ ...ee.agentOptions });
  return ee.agent && ee.agentOptions && console.warn(
    "Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."
  ), ne.fetchRootKey().catch((ie) => {
    console.warn(
      "Unable to fetch root key. Check to ensure that your local replica is running"
    ), console.error(ie);
  }), Actor.createActor(idlFactory, {
    agent: ne,
    canisterId: Q,
    ...ee.actorOptions
  });
}, trade_canister = createActor(canister_id$1, {
  agentOptions: {
    host: "http://127.0.0.1:4943"
  }
});
var stylis_min = { exports: {} };
(function(Q, ee) {
  (function(ne) {
    Q.exports = ne(null);
  })(function ne(ie) {
    var ae = /^\0+/g, ce = /[\0\r\f]/g, le = /: */g, de = /zoo|gra/, ye = /([,: ])(transform)/g, fe = /,+\s*(?![^(]*[)])/g, Be = / +\s*(?![^(]*[)])/g, Ee = / *[\0] */g, me = /,\r+?/g, ge = /([\t\r\n ])*\f?&/g, we = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g, be = /\W+/g, Oe = /@(k\w+)\s*(\S*)\s*/, He = /::(place)/g, Se = /:(read-only)/g, Ge = /\s+(?=[{\];=:>])/g, Fe = /([[}=:>])\s+/g, Pe = /(\{[^{]+?);(?=\})/g, Je = /\s{2,}/g, tt = /([^\(])(:+) */g, ft = /[svh]\w+-[tblr]{2}/, Tt = /\(\s*(.*)\s*\)/g, Xe = /([\s\S]*?);/g, ht = /-self|flex-/g, Qt = /[^]*?(:[rp][el]a[\w-]+)[^]*/, Gt = /stretch|:\s*\w+\-(?:conte|avail)/, pt = /([^-])(image-set\()/, xt = "-webkit-", Yt = "-moz-", Jt = "-ms-", Ht = 59, Lt = 125, Pt = 123, yt = 40, kt = 41, $t = 91, Le = 93, or = 10, tr = 13, lr = 9, gt = 64, Ut = 32, Ze = 38, rt = 45, $e = 95, Bt = 42, ct = 44, je = 58, _e = 39, Ie = 34, Ce = 47, ke = 62, Ve = 43, Ke = 126, ot = 0, St = 12, Vt = 11, zt = 107, Wt = 109, qe = 115, Te = 112, Re = 111, it = 105, Ct = 99, Nt = 100, Dt = 112, Er = 1, gr = 1, Cr = 0, mr = 1, wr = 1, en = 1, Wn = 0, on = 0, qn = 0, $n = [], Pn = [], Un = 0, ai = null, pi = -2, Wi = -1, Ti = 0, Hn = 1, Kn = 2, Ln = 3, si = 0, gi = 1, mi = "", Ei = "", Rt = "";
    function rr(Kr, $r, vt, Ir, Kt) {
      for (var Hr, De, We = 0, at = 0, dt = 0, ut = 0, Zt = 0, cr = 0, ar = 0, Sr = 0, jr = 0, Tr = 0, Lr = 0, xn = 0, Tn = 0, Nn = 0, Or = 0, qr = 0, wn = 0, dn = 0, Xr = 0, Rn = vt.length, zn = Rn - 1, Cn = "", Yr = "", gn = "", Yn = "", Ci = "", no = ""; Or < Rn; ) {
        if (ar = vt.charCodeAt(Or), Or === zn && at + ut + dt + We !== 0 && (at !== 0 && (ar = at === Ce ? or : Ce), ut = dt = We = 0, Rn++, zn++), at + ut + dt + We === 0) {
          if (Or === zn && (qr > 0 && (Yr = Yr.replace(ce, "")), Yr.trim().length > 0)) {
            switch (ar) {
              case Ut:
              case lr:
              case Ht:
              case tr:
              case or:
                break;
              default:
                Yr += vt.charAt(Or);
            }
            ar = Ht;
          }
          if (wn === 1)
            switch (ar) {
              case Pt:
              case Lt:
              case Ht:
              case Ie:
              case _e:
              case yt:
              case kt:
              case ct:
                wn = 0;
              case lr:
              case tr:
              case or:
              case Ut:
                break;
              default:
                for (wn = 0, Xr = Or, Zt = ar, Or--, ar = Ht; Xr < Rn; )
                  switch (vt.charCodeAt(Xr++)) {
                    case or:
                    case tr:
                    case Ht:
                      ++Or, ar = Zt, Xr = Rn;
                      break;
                    case je:
                      qr > 0 && (++Or, ar = Zt);
                    case Pt:
                      Xr = Rn;
                  }
            }
          switch (ar) {
            case Pt:
              for (Zt = (Yr = Yr.trim()).charCodeAt(0), Lr = 1, Xr = ++Or; Or < Rn; ) {
                switch (ar = vt.charCodeAt(Or)) {
                  case Pt:
                    Lr++;
                    break;
                  case Lt:
                    Lr--;
                    break;
                  case Ce:
                    switch (cr = vt.charCodeAt(Or + 1)) {
                      case Bt:
                      case Ce:
                        Or = _n(cr, Or, zn, vt);
                    }
                    break;
                  case $t:
                    ar++;
                  case yt:
                    ar++;
                  case Ie:
                  case _e:
                    for (; Or++ < zn && vt.charCodeAt(Or) !== ar; )
                      ;
                }
                if (Lr === 0)
                  break;
                Or++;
              }
              switch (gn = vt.substring(Xr, Or), Zt === ot && (Zt = (Yr = Yr.replace(ae, "").trim()).charCodeAt(0)), Zt) {
                case gt:
                  switch (qr > 0 && (Yr = Yr.replace(ce, "")), cr = Yr.charCodeAt(1)) {
                    case Nt:
                    case Wt:
                    case qe:
                    case rt:
                      Hr = $r;
                      break;
                    default:
                      Hr = $n;
                  }
                  if (Xr = (gn = rr($r, Hr, gn, cr, Kt + 1)).length, qn > 0 && Xr === 0 && (Xr = Yr.length), Un > 0 && (Hr = Mr($n, Yr, dn), De = fn(Ln, gn, Hr, $r, gr, Er, Xr, cr, Kt, Ir), Yr = Hr.join(""), De !== void 0 && (Xr = (gn = De.trim()).length) === 0 && (cr = 0, gn = "")), Xr > 0)
                    switch (cr) {
                      case qe:
                        Yr = Yr.replace(Tt, vn);
                      case Nt:
                      case Wt:
                      case rt:
                        gn = Yr + "{" + gn + "}";
                        break;
                      case zt:
                        gn = (Yr = Yr.replace(Oe, "$1 $2" + (gi > 0 ? mi : ""))) + "{" + gn + "}", wr === 1 || wr === 2 && In("@" + gn, 3) ? gn = "@" + xt + gn + "@" + gn : gn = "@" + gn;
                        break;
                      default:
                        gn = Yr + gn, Ir === Dt && (Yn += gn, gn = "");
                    }
                  else
                    gn = "";
                  break;
                default:
                  gn = rr($r, Mr($r, Yr, dn), gn, Ir, Kt + 1);
              }
              Ci += gn, xn = 0, wn = 0, Nn = 0, qr = 0, dn = 0, Tn = 0, Yr = "", gn = "", ar = vt.charCodeAt(++Or);
              break;
            case Lt:
            case Ht:
              if ((Xr = (Yr = (qr > 0 ? Yr.replace(ce, "") : Yr).trim()).length) > 1)
                switch (Nn === 0 && ((Zt = Yr.charCodeAt(0)) === rt || Zt > 96 && Zt < 123) && (Xr = (Yr = Yr.replace(" ", ":")).length), Un > 0 && (De = fn(Hn, Yr, $r, Kr, gr, Er, Yn.length, Ir, Kt, Ir)) !== void 0 && (Xr = (Yr = De.trim()).length) === 0 && (Yr = "\0\0"), Zt = Yr.charCodeAt(0), cr = Yr.charCodeAt(1), Zt) {
                  case ot:
                    break;
                  case gt:
                    if (cr === it || cr === Ct) {
                      no += Yr + vt.charAt(Or);
                      break;
                    }
                  default:
                    if (Yr.charCodeAt(Xr - 1) === je)
                      break;
                    Yn += Bn(Yr, Zt, cr, Yr.charCodeAt(2));
                }
              xn = 0, wn = 0, Nn = 0, qr = 0, dn = 0, Yr = "", ar = vt.charCodeAt(++Or);
          }
        }
        switch (ar) {
          case tr:
          case or:
            if (at + ut + dt + We + on === 0)
              switch (Tr) {
                case kt:
                case _e:
                case Ie:
                case gt:
                case Ke:
                case ke:
                case Bt:
                case Ve:
                case Ce:
                case rt:
                case je:
                case ct:
                case Ht:
                case Pt:
                case Lt:
                  break;
                default:
                  Nn > 0 && (wn = 1);
              }
            at === Ce ? at = 0 : mr + xn === 0 && Ir !== zt && Yr.length > 0 && (qr = 1, Yr += "\0"), Un * si > 0 && fn(Ti, Yr, $r, Kr, gr, Er, Yn.length, Ir, Kt, Ir), Er = 1, gr++;
            break;
          case Ht:
          case Lt:
            if (at + ut + dt + We === 0) {
              Er++;
              break;
            }
          default:
            switch (Er++, Cn = vt.charAt(Or), ar) {
              case lr:
              case Ut:
                if (ut + We + at === 0)
                  switch (Sr) {
                    case ct:
                    case je:
                    case lr:
                    case Ut:
                      Cn = "";
                      break;
                    default:
                      ar !== Ut && (Cn = " ");
                  }
                break;
              case ot:
                Cn = "\\0";
                break;
              case St:
                Cn = "\\f";
                break;
              case Vt:
                Cn = "\\v";
                break;
              case Ze:
                ut + at + We === 0 && mr > 0 && (dn = 1, qr = 1, Cn = "\f" + Cn);
                break;
              case 108:
                if (ut + at + We + Cr === 0 && Nn > 0)
                  switch (Or - Nn) {
                    case 2:
                      Sr === Te && vt.charCodeAt(Or - 3) === je && (Cr = Sr);
                    case 8:
                      jr === Re && (Cr = jr);
                  }
                break;
              case je:
                ut + at + We === 0 && (Nn = Or);
                break;
              case ct:
                at + dt + ut + We === 0 && (qr = 1, Cn += "\r");
                break;
              case Ie:
              case _e:
                at === 0 && (ut = ut === ar ? 0 : ut === 0 ? ar : ut);
                break;
              case $t:
                ut + at + dt === 0 && We++;
                break;
              case Le:
                ut + at + dt === 0 && We--;
                break;
              case kt:
                ut + at + We === 0 && dt--;
                break;
              case yt:
                if (ut + at + We === 0) {
                  if (xn === 0)
                    switch (2 * Sr + 3 * jr) {
                      case 533:
                        break;
                      default:
                        Lr = 0, xn = 1;
                    }
                  dt++;
                }
                break;
              case gt:
                at + dt + ut + We + Nn + Tn === 0 && (Tn = 1);
                break;
              case Bt:
              case Ce:
                if (ut + We + dt > 0)
                  break;
                switch (at) {
                  case 0:
                    switch (2 * ar + 3 * vt.charCodeAt(Or + 1)) {
                      case 235:
                        at = Ce;
                        break;
                      case 220:
                        Xr = Or, at = Bt;
                    }
                    break;
                  case Bt:
                    ar === Ce && Sr === Bt && Xr + 2 !== Or && (vt.charCodeAt(Xr + 2) === 33 && (Yn += vt.substring(Xr, Or + 1)), Cn = "", at = 0);
                }
            }
            if (at === 0) {
              if (mr + ut + We + Tn === 0 && Ir !== zt && ar !== Ht)
                switch (ar) {
                  case ct:
                  case Ke:
                  case ke:
                  case Ve:
                  case kt:
                  case yt:
                    if (xn === 0) {
                      switch (Sr) {
                        case lr:
                        case Ut:
                        case or:
                        case tr:
                          Cn += "\0";
                          break;
                        default:
                          Cn = "\0" + Cn + (ar === ct ? "" : "\0");
                      }
                      qr = 1;
                    } else
                      switch (ar) {
                        case yt:
                          Nn + 7 === Or && Sr === 108 && (Nn = 0), xn = ++Lr;
                          break;
                        case kt:
                          (xn = --Lr) == 0 && (qr = 1, Cn += "\0");
                      }
                    break;
                  case lr:
                  case Ut:
                    switch (Sr) {
                      case ot:
                      case Pt:
                      case Lt:
                      case Ht:
                      case ct:
                      case St:
                      case lr:
                      case Ut:
                      case or:
                      case tr:
                        break;
                      default:
                        xn === 0 && (qr = 1, Cn += "\0");
                    }
                }
              Yr += Cn, ar !== Ut && ar !== lr && (Tr = ar);
            }
        }
        jr = Sr, Sr = ar, Or++;
      }
      if (Xr = Yn.length, qn > 0 && Xr === 0 && Ci.length === 0 && $r[0].length !== 0 && (Ir !== Wt || $r.length === 1 && (mr > 0 ? Ei : Rt) === $r[0]) && (Xr = $r.join(",").length + 2), Xr > 0) {
        if (Hr = mr === 0 && Ir !== zt ? function(Po) {
          for (var po, yi, na = 0, Cs = Po.length, Is = Array(Cs); na < Cs; ++na) {
            for (var Ga = Po[na].split(Ee), Uo = "", Ho = 0, bn = 0, xr = 0, pn = 0, ci = Ga.length; Ho < ci; ++Ho)
              if (!((bn = (yi = Ga[Ho]).length) === 0 && ci > 1)) {
                if (xr = Uo.charCodeAt(Uo.length - 1), pn = yi.charCodeAt(0), po = "", Ho !== 0)
                  switch (xr) {
                    case Bt:
                    case Ke:
                    case ke:
                    case Ve:
                    case Ut:
                    case yt:
                      break;
                    default:
                      po = " ";
                  }
                switch (pn) {
                  case Ze:
                    yi = po + Ei;
                  case Ke:
                  case ke:
                  case Ve:
                  case Ut:
                  case kt:
                  case yt:
                    break;
                  case $t:
                    yi = po + yi + Ei;
                    break;
                  case je:
                    switch (2 * yi.charCodeAt(1) + 3 * yi.charCodeAt(2)) {
                      case 530:
                        if (en > 0) {
                          yi = po + yi.substring(8, bn - 1);
                          break;
                        }
                      default:
                        (Ho < 1 || Ga[Ho - 1].length < 1) && (yi = po + Ei + yi);
                    }
                    break;
                  case ct:
                    po = "";
                  default:
                    bn > 1 && yi.indexOf(":") > 0 ? yi = po + yi.replace(tt, "$1" + Ei + "$2") : yi = po + yi + Ei;
                }
                Uo += yi;
              }
            Is[na] = Uo.replace(ce, "").trim();
          }
          return Is;
        }($r) : $r, Un > 0 && (De = fn(Kn, Yn, Hr, Kr, gr, Er, Xr, Ir, Kt, Ir)) !== void 0 && (Yn = De).length === 0)
          return no + Yn + Ci;
        if (Yn = Hr.join(",") + "{" + Yn + "}", wr * Cr != 0) {
          switch (wr === 2 && !In(Yn, 2) && (Cr = 0), Cr) {
            case Re:
              Yn = Yn.replace(Se, ":" + Yt + "$1") + Yn;
              break;
            case Te:
              Yn = Yn.replace(He, "::" + xt + "input-$1") + Yn.replace(He, "::" + Yt + "$1") + Yn.replace(He, ":" + Jt + "input-$1") + Yn;
          }
          Cr = 0;
        }
      }
      return no + Yn + Ci;
    }
    function Mr(Kr, $r, vt) {
      var Ir = $r.trim().split(me), Kt = Ir, Hr = Ir.length, De = Kr.length;
      switch (De) {
        case 0:
        case 1:
          for (var We = 0, at = De === 0 ? "" : Kr[0] + " "; We < Hr; ++We)
            Kt[We] = an(at, Kt[We], vt, De).trim();
          break;
        default:
          We = 0;
          var dt = 0;
          for (Kt = []; We < Hr; ++We)
            for (var ut = 0; ut < De; ++ut)
              Kt[dt++] = an(Kr[ut] + " ", Ir[We], vt, De).trim();
      }
      return Kt;
    }
    function an(Kr, $r, vt, Ir) {
      var Kt = $r, Hr = Kt.charCodeAt(0);
      switch (Hr < 33 && (Hr = (Kt = Kt.trim()).charCodeAt(0)), Hr) {
        case Ze:
          switch (mr + Ir) {
            case 0:
            case 1:
              if (Kr.trim().length === 0)
                break;
            default:
              return Kt.replace(ge, "$1" + Kr.trim());
          }
          break;
        case je:
          switch (Kt.charCodeAt(1)) {
            case 103:
              if (en > 0 && mr > 0)
                return Kt.replace(we, "$1").replace(ge, "$1" + Rt);
              break;
            default:
              return Kr.trim() + Kt.replace(ge, "$1" + Kr.trim());
          }
        default:
          if (vt * mr > 0 && Kt.indexOf("\f") > 0)
            return Kt.replace(ge, (Kr.charCodeAt(0) === je ? "" : "$1") + Kr.trim());
      }
      return Kr + Kt;
    }
    function Bn(Kr, $r, vt, Ir) {
      var Kt, Hr = 0, De = Kr + ";", We = 2 * $r + 3 * vt + 4 * Ir;
      if (We === 944)
        return function(at) {
          var dt = at.length, ut = at.indexOf(":", 9) + 1, Zt = at.substring(0, ut).trim(), cr = at.substring(ut, dt - 1).trim();
          switch (at.charCodeAt(9) * gi) {
            case 0:
              break;
            case rt:
              if (at.charCodeAt(10) !== 110)
                break;
            default:
              for (var ar = cr.split((cr = "", fe)), Sr = 0, ut = 0, dt = ar.length; Sr < dt; ut = 0, ++Sr) {
                for (var jr = ar[Sr], Tr = jr.split(Be); jr = Tr[ut]; ) {
                  var Lr = jr.charCodeAt(0);
                  if (gi === 1 && (Lr > gt && Lr < 90 || Lr > 96 && Lr < 123 || Lr === $e || Lr === rt && jr.charCodeAt(1) !== rt))
                    switch (isNaN(parseFloat(jr)) + (jr.indexOf("(") !== -1)) {
                      case 1:
                        switch (jr) {
                          case "infinite":
                          case "alternate":
                          case "backwards":
                          case "running":
                          case "normal":
                          case "forwards":
                          case "both":
                          case "none":
                          case "linear":
                          case "ease":
                          case "ease-in":
                          case "ease-out":
                          case "ease-in-out":
                          case "paused":
                          case "reverse":
                          case "alternate-reverse":
                          case "inherit":
                          case "initial":
                          case "unset":
                          case "step-start":
                          case "step-end":
                            break;
                          default:
                            jr += mi;
                        }
                    }
                  Tr[ut++] = jr;
                }
                cr += (Sr === 0 ? "" : ",") + Tr.join(" ");
              }
          }
          return cr = Zt + cr + ";", wr === 1 || wr === 2 && In(cr, 1) ? xt + cr + cr : cr;
        }(De);
      if (wr === 0 || wr === 2 && !In(De, 1))
        return De;
      switch (We) {
        case 1015:
          return De.charCodeAt(10) === 97 ? xt + De + De : De;
        case 951:
          return De.charCodeAt(3) === 116 ? xt + De + De : De;
        case 963:
          return De.charCodeAt(5) === 110 ? xt + De + De : De;
        case 1009:
          if (De.charCodeAt(4) !== 100)
            break;
        case 969:
        case 942:
          return xt + De + De;
        case 978:
          return xt + De + Yt + De + De;
        case 1019:
        case 983:
          return xt + De + Yt + De + Jt + De + De;
        case 883:
          return De.charCodeAt(8) === rt ? xt + De + De : De.indexOf("image-set(", 11) > 0 ? De.replace(pt, "$1" + xt + "$2") + De : De;
        case 932:
          if (De.charCodeAt(4) === rt)
            switch (De.charCodeAt(5)) {
              case 103:
                return xt + "box-" + De.replace("-grow", "") + xt + De + Jt + De.replace("grow", "positive") + De;
              case 115:
                return xt + De + Jt + De.replace("shrink", "negative") + De;
              case 98:
                return xt + De + Jt + De.replace("basis", "preferred-size") + De;
            }
          return xt + De + Jt + De + De;
        case 964:
          return xt + De + Jt + "flex-" + De + De;
        case 1023:
          if (De.charCodeAt(8) !== 99)
            break;
          return Kt = De.substring(De.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify"), xt + "box-pack" + Kt + xt + De + Jt + "flex-pack" + Kt + De;
        case 1005:
          return de.test(De) ? De.replace(le, ":" + xt) + De.replace(le, ":" + Yt) + De : De;
        case 1e3:
          switch (Hr = (Kt = De.substring(13).trim()).indexOf("-") + 1, Kt.charCodeAt(0) + Kt.charCodeAt(Hr)) {
            case 226:
              Kt = De.replace(ft, "tb");
              break;
            case 232:
              Kt = De.replace(ft, "tb-rl");
              break;
            case 220:
              Kt = De.replace(ft, "lr");
              break;
            default:
              return De;
          }
          return xt + De + Jt + Kt + De;
        case 1017:
          if (De.indexOf("sticky", 9) === -1)
            return De;
        case 975:
          switch (Hr = (De = Kr).length - 10, We = (Kt = (De.charCodeAt(Hr) === 33 ? De.substring(0, Hr) : De).substring(Kr.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | Kt.charCodeAt(7))) {
            case 203:
              if (Kt.charCodeAt(8) < 111)
                break;
            case 115:
              De = De.replace(Kt, xt + Kt) + ";" + De;
              break;
            case 207:
            case 102:
              De = De.replace(Kt, xt + (We > 102 ? "inline-" : "") + "box") + ";" + De.replace(Kt, xt + Kt) + ";" + De.replace(Kt, Jt + Kt + "box") + ";" + De;
          }
          return De + ";";
        case 938:
          if (De.charCodeAt(5) === rt)
            switch (De.charCodeAt(6)) {
              case 105:
                return Kt = De.replace("-items", ""), xt + De + xt + "box-" + Kt + Jt + "flex-" + Kt + De;
              case 115:
                return xt + De + Jt + "flex-item-" + De.replace(ht, "") + De;
              default:
                return xt + De + Jt + "flex-line-pack" + De.replace("align-content", "").replace(ht, "") + De;
            }
          break;
        case 973:
        case 989:
          if (De.charCodeAt(3) !== rt || De.charCodeAt(4) === 122)
            break;
        case 931:
        case 953:
          if (Gt.test(Kr) === !0)
            return (Kt = Kr.substring(Kr.indexOf(":") + 1)).charCodeAt(0) === 115 ? Bn(Kr.replace("stretch", "fill-available"), $r, vt, Ir).replace(":fill-available", ":stretch") : De.replace(Kt, xt + Kt) + De.replace(Kt, Yt + Kt.replace("fill-", "")) + De;
          break;
        case 962:
          if (De = xt + De + (De.charCodeAt(5) === 102 ? Jt + De : "") + De, vt + Ir === 211 && De.charCodeAt(13) === 105 && De.indexOf("transform", 10) > 0)
            return De.substring(0, De.indexOf(";", 27) + 1).replace(ye, "$1" + xt + "$2") + De;
      }
      return De;
    }
    function In(Kr, $r) {
      var vt = Kr.indexOf($r === 1 ? ":" : "{"), Ir = Kr.substring(0, $r !== 3 ? vt : 10), Kt = Kr.substring(vt + 1, Kr.length - 1);
      return ai($r !== 2 ? Ir : Ir.replace(Qt, "$1"), Kt, $r);
    }
    function vn(Kr, $r) {
      var vt = Bn($r, $r.charCodeAt(0), $r.charCodeAt(1), $r.charCodeAt(2));
      return vt !== $r + ";" ? vt.replace(Xe, " or ($1)").substring(4) : "(" + $r + ")";
    }
    function fn(Kr, $r, vt, Ir, Kt, Hr, De, We, at, dt) {
      for (var ut, Zt = 0, cr = $r; Zt < Un; ++Zt)
        switch (ut = Pn[Zt].call(Zr, Kr, cr, vt, Ir, Kt, Hr, De, We, at, dt)) {
          case void 0:
          case !1:
          case !0:
          case null:
            break;
          default:
            cr = ut;
        }
      if (cr !== $r)
        return cr;
    }
    function _n(Kr, $r, vt, Ir) {
      for (var Kt = $r + 1; Kt < vt; ++Kt)
        switch (Ir.charCodeAt(Kt)) {
          case Ce:
            if (Kr === Bt && Ir.charCodeAt(Kt - 1) === Bt && $r + 2 !== Kt)
              return Kt + 1;
            break;
          case or:
            if (Kr === Ce)
              return Kt + 1;
        }
      return Kt;
    }
    function jn(Kr) {
      for (var $r in Kr) {
        var vt = Kr[$r];
        switch ($r) {
          case "keyframe":
            gi = 0 | vt;
            break;
          case "global":
            en = 0 | vt;
            break;
          case "cascade":
            mr = 0 | vt;
            break;
          case "compress":
            Wn = 0 | vt;
            break;
          case "semicolon":
            on = 0 | vt;
            break;
          case "preserve":
            qn = 0 | vt;
            break;
          case "prefix":
            ai = null, vt ? typeof vt != "function" ? wr = 1 : (wr = 2, ai = vt) : wr = 0;
        }
      }
      return jn;
    }
    function Zr(Kr, $r) {
      if (this !== void 0 && this.constructor === Zr)
        return ne(Kr);
      var vt = Kr, Ir = vt.charCodeAt(0);
      Ir < 33 && (Ir = (vt = vt.trim()).charCodeAt(0)), gi > 0 && (mi = vt.replace(be, Ir === $t ? "" : "-")), Ir = 1, mr === 1 ? Rt = vt : Ei = vt;
      var Kt, Hr = [Rt];
      Un > 0 && (Kt = fn(Wi, $r, Hr, Hr, gr, Er, 0, 0, 0, 0)) !== void 0 && typeof Kt == "string" && ($r = Kt);
      var De = rr($n, Hr, $r, 0, 0);
      return Un > 0 && (Kt = fn(pi, De, Hr, Hr, gr, Er, De.length, 0, 0, 0)) !== void 0 && typeof (De = Kt) != "string" && (Ir = 0), mi = "", Rt = "", Ei = "", Cr = 0, gr = 1, Er = 1, Wn * Ir == 0 ? De : De.replace(ce, "").replace(Ge, "").replace(Fe, "$1").replace(Pe, "$1").replace(Je, " ");
    }
    return Zr.use = function Kr($r) {
      switch ($r) {
        case void 0:
        case null:
          Un = Pn.length = 0;
          break;
        default:
          if (typeof $r == "function")
            Pn[Un++] = $r;
          else if (typeof $r == "object")
            for (var vt = 0, Ir = $r.length; vt < Ir; ++vt)
              Kr($r[vt]);
          else
            si = 0 | !!$r;
      }
      return Kr;
    }, Zr.set = jn, ie !== void 0 && jn(ie), Zr;
  });
})(stylis_min);
const Stylis = stylis_min.exports;
var stylisRuleSheet = { exports: {} };
(function(Q, ee) {
  (function(ne) {
    Q.exports = ne();
  })(function() {
    return function(ne) {
      var ie = "/*|*/", ae = ie + "}";
      function ce(le) {
        if (le)
          try {
            ne(le + "}");
          } catch {
          }
      }
      return function(de, ye, fe, Be, Ee, me, ge, we, be, Oe) {
        switch (de) {
          case 1:
            if (be === 0 && ye.charCodeAt(0) === 64)
              return ne(ye + ";"), "";
            break;
          case 2:
            if (we === 0)
              return ye + ie;
            break;
          case 3:
            switch (we) {
              case 102:
              case 112:
                return ne(fe[0] + ye), "";
              default:
                return ye + (Oe === 0 ? ie : "");
            }
          case -2:
            ye.split(ae).forEach(ce);
        }
      };
    };
  });
})(stylisRuleSheet);
const _insertRulePlugin = stylisRuleSheet.exports;
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, reactIs = { exports: {} }, reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min;
function requireReactIs_production_min() {
  if (hasRequiredReactIs_production_min)
    return reactIs_production_min;
  hasRequiredReactIs_production_min = 1;
  var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, fe = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, we = Q ? Symbol.for("react.lazy") : 60116, be = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
  function Ge(Pe) {
    if (typeof Pe == "object" && Pe !== null) {
      var Je = Pe.$$typeof;
      switch (Je) {
        case ee:
          switch (Pe = Pe.type, Pe) {
            case ye:
            case fe:
            case ie:
            case ce:
            case ae:
            case Ee:
              return Pe;
            default:
              switch (Pe = Pe && Pe.$$typeof, Pe) {
                case de:
                case Be:
                case we:
                case ge:
                case le:
                  return Pe;
                default:
                  return Je;
              }
          }
        case ne:
          return Je;
      }
    }
  }
  function Fe(Pe) {
    return Ge(Pe) === fe;
  }
  return reactIs_production_min.AsyncMode = ye, reactIs_production_min.ConcurrentMode = fe, reactIs_production_min.ContextConsumer = de, reactIs_production_min.ContextProvider = le, reactIs_production_min.Element = ee, reactIs_production_min.ForwardRef = Be, reactIs_production_min.Fragment = ie, reactIs_production_min.Lazy = we, reactIs_production_min.Memo = ge, reactIs_production_min.Portal = ne, reactIs_production_min.Profiler = ce, reactIs_production_min.StrictMode = ae, reactIs_production_min.Suspense = Ee, reactIs_production_min.isAsyncMode = function(Pe) {
    return Fe(Pe) || Ge(Pe) === ye;
  }, reactIs_production_min.isConcurrentMode = Fe, reactIs_production_min.isContextConsumer = function(Pe) {
    return Ge(Pe) === de;
  }, reactIs_production_min.isContextProvider = function(Pe) {
    return Ge(Pe) === le;
  }, reactIs_production_min.isElement = function(Pe) {
    return typeof Pe == "object" && Pe !== null && Pe.$$typeof === ee;
  }, reactIs_production_min.isForwardRef = function(Pe) {
    return Ge(Pe) === Be;
  }, reactIs_production_min.isFragment = function(Pe) {
    return Ge(Pe) === ie;
  }, reactIs_production_min.isLazy = function(Pe) {
    return Ge(Pe) === we;
  }, reactIs_production_min.isMemo = function(Pe) {
    return Ge(Pe) === ge;
  }, reactIs_production_min.isPortal = function(Pe) {
    return Ge(Pe) === ne;
  }, reactIs_production_min.isProfiler = function(Pe) {
    return Ge(Pe) === ce;
  }, reactIs_production_min.isStrictMode = function(Pe) {
    return Ge(Pe) === ae;
  }, reactIs_production_min.isSuspense = function(Pe) {
    return Ge(Pe) === Ee;
  }, reactIs_production_min.isValidElementType = function(Pe) {
    return typeof Pe == "string" || typeof Pe == "function" || Pe === ie || Pe === fe || Pe === ce || Pe === ae || Pe === Ee || Pe === me || typeof Pe == "object" && Pe !== null && (Pe.$$typeof === we || Pe.$$typeof === ge || Pe.$$typeof === le || Pe.$$typeof === de || Pe.$$typeof === Be || Pe.$$typeof === Oe || Pe.$$typeof === He || Pe.$$typeof === Se || Pe.$$typeof === be);
  }, reactIs_production_min.typeOf = Ge, reactIs_production_min;
}
var reactIs_development = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development;
function requireReactIs_development() {
  return hasRequiredReactIs_development || (hasRequiredReactIs_development = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, fe = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, we = Q ? Symbol.for("react.lazy") : 60116, be = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
    function Ge($e) {
      return typeof $e == "string" || typeof $e == "function" || $e === ie || $e === fe || $e === ce || $e === ae || $e === Ee || $e === me || typeof $e == "object" && $e !== null && ($e.$$typeof === we || $e.$$typeof === ge || $e.$$typeof === le || $e.$$typeof === de || $e.$$typeof === Be || $e.$$typeof === Oe || $e.$$typeof === He || $e.$$typeof === Se || $e.$$typeof === be);
    }
    function Fe($e) {
      if (typeof $e == "object" && $e !== null) {
        var Bt = $e.$$typeof;
        switch (Bt) {
          case ee:
            var ct = $e.type;
            switch (ct) {
              case ye:
              case fe:
              case ie:
              case ce:
              case ae:
              case Ee:
                return ct;
              default:
                var je = ct && ct.$$typeof;
                switch (je) {
                  case de:
                  case Be:
                  case we:
                  case ge:
                  case le:
                    return je;
                  default:
                    return Bt;
                }
            }
          case ne:
            return Bt;
        }
      }
    }
    var Pe = ye, Je = fe, tt = de, ft = le, Tt = ee, Xe = Be, ht = ie, Qt = we, Gt = ge, pt = ne, xt = ce, Yt = ae, Jt = Ee, Ht = !1;
    function Lt($e) {
      return Ht || (Ht = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), Pt($e) || Fe($e) === ye;
    }
    function Pt($e) {
      return Fe($e) === fe;
    }
    function yt($e) {
      return Fe($e) === de;
    }
    function kt($e) {
      return Fe($e) === le;
    }
    function $t($e) {
      return typeof $e == "object" && $e !== null && $e.$$typeof === ee;
    }
    function Le($e) {
      return Fe($e) === Be;
    }
    function or($e) {
      return Fe($e) === ie;
    }
    function tr($e) {
      return Fe($e) === we;
    }
    function lr($e) {
      return Fe($e) === ge;
    }
    function gt($e) {
      return Fe($e) === ne;
    }
    function Ut($e) {
      return Fe($e) === ce;
    }
    function Ze($e) {
      return Fe($e) === ae;
    }
    function rt($e) {
      return Fe($e) === Ee;
    }
    reactIs_development.AsyncMode = Pe, reactIs_development.ConcurrentMode = Je, reactIs_development.ContextConsumer = tt, reactIs_development.ContextProvider = ft, reactIs_development.Element = Tt, reactIs_development.ForwardRef = Xe, reactIs_development.Fragment = ht, reactIs_development.Lazy = Qt, reactIs_development.Memo = Gt, reactIs_development.Portal = pt, reactIs_development.Profiler = xt, reactIs_development.StrictMode = Yt, reactIs_development.Suspense = Jt, reactIs_development.isAsyncMode = Lt, reactIs_development.isConcurrentMode = Pt, reactIs_development.isContextConsumer = yt, reactIs_development.isContextProvider = kt, reactIs_development.isElement = $t, reactIs_development.isForwardRef = Le, reactIs_development.isFragment = or, reactIs_development.isLazy = tr, reactIs_development.isMemo = lr, reactIs_development.isPortal = gt, reactIs_development.isProfiler = Ut, reactIs_development.isStrictMode = Ze, reactIs_development.isSuspense = rt, reactIs_development.isValidElementType = Ge, reactIs_development.typeOf = Fe;
  }()), reactIs_development;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReactIs_production_min() : Q.exports = requireReactIs_development();
})(reactIs);
var safeIsNaN = Number.isNaN || function Q(ee) {
  return typeof ee == "number" && ee !== ee;
};
function isEqual(Q, ee) {
  return !!(Q === ee || safeIsNaN(Q) && safeIsNaN(ee));
}
function areInputsEqual(Q, ee) {
  if (Q.length !== ee.length)
    return !1;
  for (var ne = 0; ne < Q.length; ne++)
    if (!isEqual(Q[ne], ee[ne]))
      return !1;
  return !0;
}
function memoizeOne(Q, ee) {
  ee === void 0 && (ee = areInputsEqual);
  var ne, ie = [], ae, ce = !1;
  function le() {
    for (var de = [], ye = 0; ye < arguments.length; ye++)
      de[ye] = arguments[ye];
    return ce && ne === this && ee(de, ie) || (ae = Q.apply(this, de), ce = !0, ne = this, ie = de), ae;
  }
  return le;
}
function memoize(Q) {
  var ee = {};
  return function(ne) {
    return ee[ne] === void 0 && (ee[ne] = Q(ne)), ee[ne];
  };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, index = memoize(
  function(Q) {
    return reactPropsRegex.test(Q) || Q.charCodeAt(0) === 111 && Q.charCodeAt(1) === 110 && Q.charCodeAt(2) < 91;
  }
);
function getType(Q) {
  return Object.prototype.toString.call(Q).slice(8, -1);
}
function isPlainObject$1(Q) {
  return getType(Q) !== "Object" ? !1 : Q.constructor === Object && Object.getPrototypeOf(Q) === Object.prototype;
}
function isArray(Q) {
  return getType(Q) === "Array";
}
function isSymbol(Q) {
  return getType(Q) === "Symbol";
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __spreadArrays() {
  for (var Q = 0, ee = 0, ne = arguments.length; ee < ne; ee++)
    Q += arguments[ee].length;
  for (var ie = Array(Q), ae = 0, ee = 0; ee < ne; ee++)
    for (var ce = arguments[ee], le = 0, de = ce.length; le < de; le++, ae++)
      ie[ae] = ce[le];
  return ie;
}
function assignProp(Q, ee, ne, ie) {
  var ae = ie.propertyIsEnumerable(ee) ? "enumerable" : "nonenumerable";
  ae === "enumerable" && (Q[ee] = ne), ae === "nonenumerable" && Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !1,
    writable: !0,
    configurable: !0
  });
}
function mergeRecursively(Q, ee, ne) {
  if (!isPlainObject$1(ee))
    return ne && isArray(ne) && ne.forEach(function(fe) {
      ee = fe(Q, ee);
    }), ee;
  var ie = {};
  if (isPlainObject$1(Q)) {
    var ae = Object.getOwnPropertyNames(Q), ce = Object.getOwnPropertySymbols(Q);
    ie = __spreadArrays(ae, ce).reduce(function(fe, Be) {
      var Ee = Q[Be];
      return (!isSymbol(Be) && !Object.getOwnPropertyNames(ee).includes(Be) || isSymbol(Be) && !Object.getOwnPropertySymbols(ee).includes(Be)) && assignProp(fe, Be, Ee, Q), fe;
    }, {});
  }
  var le = Object.getOwnPropertyNames(ee), de = Object.getOwnPropertySymbols(ee), ye = __spreadArrays(le, de).reduce(function(fe, Be) {
    var Ee = ee[Be], me = isPlainObject$1(Q) ? Q[Be] : void 0;
    return ne && isArray(ne) && ne.forEach(function(ge) {
      Ee = ge(me, Ee);
    }), me !== void 0 && isPlainObject$1(Ee) && (Ee = mergeRecursively(me, Ee, ne)), assignProp(fe, Be, Ee, ee), fe;
  }, ie);
  return ye;
}
function merge(Q) {
  for (var ee = [], ne = 1; ne < arguments.length; ne++)
    ee[ne - 1] = arguments[ne];
  var ie = null, ae = Q;
  return isPlainObject$1(Q) && Q.extensions && Object.keys(Q).length === 1 && (ae = {}, ie = Q.extensions), ee.reduce(function(ce, le) {
    return mergeRecursively(ce, le, ie);
  }, ae);
}
var interleave = function(Q, ee) {
  for (var ne = [Q[0]], ie = 0, ae = ee.length; ie < ae; ie += 1)
    ne.push(ee[ie], Q[ie + 1]);
  return ne;
}, _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Q) {
  return typeof Q;
} : function(Q) {
  return Q && typeof Symbol == "function" && Q.constructor === Symbol && Q !== Symbol.prototype ? "symbol" : typeof Q;
}, classCallCheck = function(Q, ee) {
  if (!(Q instanceof ee))
    throw new TypeError("Cannot call a class as a function");
}, createClass = function() {
  function Q(ee, ne) {
    for (var ie = 0; ie < ne.length; ie++) {
      var ae = ne[ie];
      ae.enumerable = ae.enumerable || !1, ae.configurable = !0, "value" in ae && (ae.writable = !0), Object.defineProperty(ee, ae.key, ae);
    }
  }
  return function(ee, ne, ie) {
    return ne && Q(ee.prototype, ne), ie && Q(ee, ie), ee;
  };
}(), _extends = Object.assign || function(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee];
    for (var ie in ne)
      Object.prototype.hasOwnProperty.call(ne, ie) && (Q[ie] = ne[ie]);
  }
  return Q;
}, inherits = function(Q, ee) {
  if (typeof ee != "function" && ee !== null)
    throw new TypeError("Super expression must either be null or a function, not " + typeof ee);
  Q.prototype = Object.create(ee && ee.prototype, {
    constructor: {
      value: Q,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  }), ee && (Object.setPrototypeOf ? Object.setPrototypeOf(Q, ee) : Q.__proto__ = ee);
}, objectWithoutProperties = function(Q, ee) {
  var ne = {};
  for (var ie in Q)
    ee.indexOf(ie) >= 0 || !Object.prototype.hasOwnProperty.call(Q, ie) || (ne[ie] = Q[ie]);
  return ne;
}, possibleConstructorReturn = function(Q, ee) {
  if (!Q)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return ee && (typeof ee == "object" || typeof ee == "function") ? ee : Q;
}, isPlainObject = function(Q) {
  return (typeof Q > "u" ? "undefined" : _typeof(Q)) === "object" && Q.constructor === Object;
}, EMPTY_ARRAY = Object.freeze([]), EMPTY_OBJECT = Object.freeze({});
function isFunction(Q) {
  return typeof Q == "function";
}
function getComponentName(Q) {
  return (process.env.NODE_ENV !== "production" ? typeof Q == "string" && Q : !1) || Q.displayName || Q.name || "Component";
}
function isStatelessFunction(Q) {
  return typeof Q == "function" && !(Q.prototype && Q.prototype.isReactComponent);
}
function isStyledComponent(Q) {
  return Q && typeof Q.styledComponentId == "string";
}
var SC_ATTR = typeof process < "u" && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled", SC_VERSION_ATTR = "data-styled-version", SC_STREAM_ATTR = "data-styled-streamed", IS_BROWSER = typeof window < "u" && "HTMLElement" in window, DISABLE_SPEEDY = typeof SC_DISABLE_SPEEDY == "boolean" && SC_DISABLE_SPEEDY || typeof process < "u" && (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY) || process.env.NODE_ENV !== "production", ERRORS = process.env.NODE_ENV !== "production" ? {
  1: `Cannot create styled-component for component: %s.

`,
  2: `Can't collect styles once you've consumed a \`ServerStyleSheet\`'s styles! \`ServerStyleSheet\` is a one off instance for each server-side render cycle.

- Are you trying to reuse it across renders?
- Are you accidentally calling collectStyles twice?

`,
  3: `Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.

`,
  4: `The \`StyleSheetManager\` expects a valid target or sheet prop!

- Does this error occur on the client and is your target falsy?
- Does this error occur on the server and is the sheet falsy?

`,
  5: `The clone method cannot be used on the client!

- Are you running in a client-like environment on the server?
- Are you trying to run SSR on the client?

`,
  6: `Trying to insert a new style tag, but the given Node is unmounted!

- Are you using a custom target that isn't mounted?
- Does your document not have a valid head element?
- Have you accidentally removed a style tag manually?

`,
  7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',
  8: `ThemeProvider: Please make your "theme" prop an object.

`,
  9: "Missing document `<head>`\n\n",
  10: `Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021

`,
  11: `_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.

`,
  12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",
  13: `%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.
`
} : {};
function format() {
  for (var Q = arguments.length <= 0 ? void 0 : arguments[0], ee = [], ne = 1, ie = arguments.length; ne < ie; ne += 1)
    ee.push(arguments.length <= ne ? void 0 : arguments[ne]);
  return ee.forEach(function(ae) {
    Q = Q.replace(/%[a-z]/, ae);
  }), Q;
}
var StyledComponentsError = function(Q) {
  inherits(ee, Q);
  function ee(ne) {
    classCallCheck(this, ee);
    for (var ie = arguments.length, ae = Array(ie > 1 ? ie - 1 : 0), ce = 1; ce < ie; ce++)
      ae[ce - 1] = arguments[ce];
    if (process.env.NODE_ENV === "production")
      var le = possibleConstructorReturn(this, Q.call(this, "An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#" + ne + " for more information." + (ae.length > 0 ? " Additional arguments: " + ae.join(", ") : "")));
    else
      var le = possibleConstructorReturn(this, Q.call(this, format.apply(void 0, [ERRORS[ne]].concat(ae)).trim()));
    return possibleConstructorReturn(le);
  }
  return ee;
}(Error), SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm, extractComps = function(Q) {
  var ee = "" + (Q || ""), ne = [];
  return ee.replace(SC_COMPONENT_ID, function(ie, ae, ce) {
    return ne.push({
      componentId: ae,
      matchIndex: ce
    }), ie;
  }), ne.map(function(ie, ae) {
    var ce = ie.componentId, le = ie.matchIndex, de = ne[ae + 1], ye = de ? ee.slice(le, de.matchIndex) : ee.slice(le);
    return {
      componentId: ce,
      cssFromDOM: ye
    };
  });
}, COMMENT_REGEX = /^\s*\/\/.*$/gm, stylisSplitter = new Stylis({
  global: !1,
  cascade: !0,
  keyframe: !1,
  prefix: !1,
  compress: !1,
  semicolon: !0
}), stylis = new Stylis({
  global: !1,
  cascade: !0,
  keyframe: !1,
  prefix: !0,
  compress: !1,
  semicolon: !1
}), parsingRules = [], returnRulesPlugin = function Q(ee) {
  if (ee === -2) {
    var ne = parsingRules;
    return parsingRules = [], ne;
  }
}, parseRulesPlugin = _insertRulePlugin(function(Q) {
  parsingRules.push(Q);
}), _componentId = void 0, _selector = void 0, _selectorRegexp = void 0, selfReferenceReplacer = function Q(ee, ne, ie) {
  return ne > 0 && ie.slice(0, ne).indexOf(_selector) !== -1 && ie.slice(ne - _selector.length, ne) !== _selector ? "." + _componentId : ee;
}, selfReferenceReplacementPlugin = function Q(ee, ne, ie) {
  ee === 2 && ie.length && ie[0].lastIndexOf(_selector) > 0 && (ie[0] = ie[0].replace(_selectorRegexp, selfReferenceReplacer));
};
stylis.use([selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);
stylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);
var splitByRules = function Q(ee) {
  return stylisSplitter("", ee);
};
function stringifyRules(Q, ee, ne) {
  var ie = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "&", ae = Q.join("").replace(COMMENT_REGEX, ""), ce = ee && ne ? ne + " " + ee + " { " + ae + " }" : ae;
  return _componentId = ie, _selector = ee, _selectorRegexp = new RegExp("\\" + _selector + "\\b", "g"), stylis(ne || !ee ? "" : ee, ce);
}
var getNonce = function() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : null;
}, addNameForId = function Q(ee, ne, ie) {
  if (ie) {
    var ae = ee[ne] || (ee[ne] = /* @__PURE__ */ Object.create(null));
    ae[ie] = !0;
  }
}, resetIdNames = function Q(ee, ne) {
  ee[ne] = /* @__PURE__ */ Object.create(null);
}, hasNameForId = function Q(ee) {
  return function(ne, ie) {
    return ee[ne] !== void 0 && ee[ne][ie];
  };
}, stringifyNames = function Q(ee) {
  var ne = "";
  for (var ie in ee)
    ne += Object.keys(ee[ie]).join(" ") + " ";
  return ne.trim();
}, cloneNames = function Q(ee) {
  var ne = /* @__PURE__ */ Object.create(null);
  for (var ie in ee)
    ne[ie] = _extends({}, ee[ie]);
  return ne;
}, sheetForTag = function Q(ee) {
  if (ee.sheet)
    return ee.sheet;
  for (var ne = ee.ownerDocument.styleSheets.length, ie = 0; ie < ne; ie += 1) {
    var ae = ee.ownerDocument.styleSheets[ie];
    if (ae.ownerNode === ee)
      return ae;
  }
  throw new StyledComponentsError(10);
}, safeInsertRule = function Q(ee, ne, ie) {
  if (!ne)
    return !1;
  var ae = ee.cssRules.length;
  try {
    ee.insertRule(ne, ie <= ae ? ie : ae);
  } catch {
    return !1;
  }
  return !0;
}, deleteRules = function Q(ee, ne, ie) {
  for (var ae = ne - ie, ce = ne; ce > ae; ce -= 1)
    ee.deleteRule(ce);
}, makeTextMarker = function Q(ee) {
  return `
/* sc-component-id: ` + ee + ` */
`;
}, addUpUntilIndex = function Q(ee, ne) {
  for (var ie = 0, ae = 0; ae <= ne; ae += 1)
    ie += ee[ae];
  return ie;
}, makeStyleTag = function Q(ee, ne, ie) {
  var ae = document;
  ee ? ae = ee.ownerDocument : ne && (ae = ne.ownerDocument);
  var ce = ae.createElement("style");
  ce.setAttribute(SC_ATTR, ""), ce.setAttribute(SC_VERSION_ATTR, "4.4.1");
  var le = getNonce();
  if (le && ce.setAttribute("nonce", le), ce.appendChild(ae.createTextNode("")), ee && !ne)
    ee.appendChild(ce);
  else {
    if (!ne || !ee || !ne.parentNode)
      throw new StyledComponentsError(6);
    ne.parentNode.insertBefore(ce, ie ? ne : ne.nextSibling);
  }
  return ce;
}, wrapAsHtmlTag = function Q(ee, ne) {
  return function(ie) {
    var ae = getNonce(), ce = [ae && 'nonce="' + ae + '"', SC_ATTR + '="' + stringifyNames(ne) + '"', SC_VERSION_ATTR + '="4.4.1"', ie], le = ce.filter(Boolean).join(" ");
    return "<style " + le + ">" + ee() + "</style>";
  };
}, wrapAsElement = function Q(ee, ne) {
  return function() {
    var ie, ae = (ie = {}, ie[SC_ATTR] = stringifyNames(ne), ie[SC_VERSION_ATTR] = "4.4.1", ie), ce = getNonce();
    return ce && (ae.nonce = ce), /* @__PURE__ */ jsx("style", {
      ...ae,
      dangerouslySetInnerHTML: {
        __html: ee()
      }
    });
  };
}, getIdsFromMarkersFactory = function Q(ee) {
  return function() {
    return Object.keys(ee);
  };
}, makeSpeedyTag = function Q(ee, ne) {
  var ie = /* @__PURE__ */ Object.create(null), ae = /* @__PURE__ */ Object.create(null), ce = [], le = ne !== void 0, de = !1, ye = function(ge) {
    var we = ae[ge];
    return we !== void 0 ? we : (ae[ge] = ce.length, ce.push(0), resetIdNames(ie, ge), ae[ge]);
  }, fe = function(ge, we, be) {
    for (var Oe = ye(ge), He = sheetForTag(ee), Se = addUpUntilIndex(ce, Oe), Ge = 0, Fe = [], Pe = we.length, Je = 0; Je < Pe; Je += 1) {
      var tt = we[Je], ft = le;
      ft && tt.indexOf("@import") !== -1 ? Fe.push(tt) : safeInsertRule(He, tt, Se + Ge) && (ft = !1, Ge += 1);
    }
    le && Fe.length > 0 && (de = !0, ne().insertRules(ge + "-import", Fe)), ce[Oe] += Ge, addNameForId(ie, ge, be);
  }, Be = function(ge) {
    var we = ae[ge];
    if (we !== void 0 && ee.isConnected !== !1) {
      var be = ce[we], Oe = sheetForTag(ee), He = addUpUntilIndex(ce, we) - 1;
      deleteRules(Oe, He, be), ce[we] = 0, resetIdNames(ie, ge), le && de && ne().removeRules(ge + "-import");
    }
  }, Ee = function() {
    var ge = sheetForTag(ee), we = ge.cssRules, be = "";
    for (var Oe in ae) {
      be += makeTextMarker(Oe);
      for (var He = ae[Oe], Se = addUpUntilIndex(ce, He), Ge = ce[He], Fe = Se - Ge; Fe < Se; Fe += 1) {
        var Pe = we[Fe];
        Pe !== void 0 && (be += Pe.cssText);
      }
    }
    return be;
  };
  return {
    clone: function() {
      throw new StyledComponentsError(5);
    },
    css: Ee,
    getIds: getIdsFromMarkersFactory(ae),
    hasNameForId: hasNameForId(ie),
    insertMarker: ye,
    insertRules: fe,
    removeRules: Be,
    sealed: !1,
    styleTag: ee,
    toElement: wrapAsElement(Ee, ie),
    toHTML: wrapAsHtmlTag(Ee, ie)
  };
}, makeTextNode = function Q(ee, ne) {
  return ee.createTextNode(makeTextMarker(ne));
}, makeBrowserTag = function Q(ee, ne) {
  var ie = /* @__PURE__ */ Object.create(null), ae = /* @__PURE__ */ Object.create(null), ce = ne !== void 0, le = !1, de = function(me) {
    var ge = ae[me];
    return ge !== void 0 ? ge : (ae[me] = makeTextNode(ee.ownerDocument, me), ee.appendChild(ae[me]), ie[me] = /* @__PURE__ */ Object.create(null), ae[me]);
  }, ye = function(me, ge, we) {
    for (var be = de(me), Oe = [], He = ge.length, Se = 0; Se < He; Se += 1) {
      var Ge = ge[Se], Fe = ce;
      if (Fe && Ge.indexOf("@import") !== -1)
        Oe.push(Ge);
      else {
        Fe = !1;
        var Pe = Se === He - 1 ? "" : " ";
        be.appendData("" + Ge + Pe);
      }
    }
    addNameForId(ie, me, we), ce && Oe.length > 0 && (le = !0, ne().insertRules(me + "-import", Oe));
  }, fe = function(me) {
    var ge = ae[me];
    if (ge !== void 0) {
      var we = makeTextNode(ee.ownerDocument, me);
      ee.replaceChild(we, ge), ae[me] = we, resetIdNames(ie, me), ce && le && ne().removeRules(me + "-import");
    }
  }, Be = function() {
    var me = "";
    for (var ge in ae)
      me += ae[ge].data;
    return me;
  };
  return {
    clone: function() {
      throw new StyledComponentsError(5);
    },
    css: Be,
    getIds: getIdsFromMarkersFactory(ae),
    hasNameForId: hasNameForId(ie),
    insertMarker: de,
    insertRules: ye,
    removeRules: fe,
    sealed: !1,
    styleTag: ee,
    toElement: wrapAsElement(Be, ie),
    toHTML: wrapAsHtmlTag(Be, ie)
  };
}, makeServerTag = function Q(ee, ne) {
  var ie = ee === void 0 ? /* @__PURE__ */ Object.create(null) : ee, ae = ne === void 0 ? /* @__PURE__ */ Object.create(null) : ne, ce = function(me) {
    var ge = ae[me];
    return ge !== void 0 ? ge : ae[me] = [""];
  }, le = function(me, ge, we) {
    var be = ce(me);
    be[0] += ge.join(" "), addNameForId(ie, me, we);
  }, de = function(me) {
    var ge = ae[me];
    ge !== void 0 && (ge[0] = "", resetIdNames(ie, me));
  }, ye = function() {
    var me = "";
    for (var ge in ae) {
      var we = ae[ge][0];
      we && (me += makeTextMarker(ge) + we);
    }
    return me;
  }, fe = function() {
    var me = cloneNames(ie), ge = /* @__PURE__ */ Object.create(null);
    for (var we in ae)
      ge[we] = [ae[we][0]];
    return Q(me, ge);
  }, Be = {
    clone: fe,
    css: ye,
    getIds: getIdsFromMarkersFactory(ae),
    hasNameForId: hasNameForId(ie),
    insertMarker: ce,
    insertRules: le,
    removeRules: de,
    sealed: !1,
    styleTag: null,
    toElement: wrapAsElement(ye, ie),
    toHTML: wrapAsHtmlTag(ye, ie)
  };
  return Be;
}, makeTag = function Q(ee, ne, ie, ae, ce) {
  if (IS_BROWSER && !ie) {
    var le = makeStyleTag(ee, ne, ae);
    return DISABLE_SPEEDY ? makeBrowserTag(le, ce) : makeSpeedyTag(le, ce);
  }
  return makeServerTag();
}, rehydrate = function Q(ee, ne, ie) {
  for (var ae = 0, ce = ie.length; ae < ce; ae += 1) {
    var le = ie[ae], de = le.componentId, ye = le.cssFromDOM, fe = splitByRules(ye);
    ee.insertRules(de, fe);
  }
  for (var Be = 0, Ee = ne.length; Be < Ee; Be += 1) {
    var me = ne[Be];
    me.parentNode && me.parentNode.removeChild(me);
  }
}, SPLIT_REGEX = /\s+/, MAX_SIZE = void 0;
IS_BROWSER ? MAX_SIZE = DISABLE_SPEEDY ? 40 : 1e3 : MAX_SIZE = -1;
var sheetRunningId = 0, master = void 0, StyleSheet = function() {
  function Q() {
    var ee = this, ne = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : IS_BROWSER ? document.head : null, ie = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    classCallCheck(this, Q), this.getImportRuleTag = function() {
      var ae = ee.importRuleTag;
      if (ae !== void 0)
        return ae;
      var ce = ee.tags[0], le = !0;
      return ee.importRuleTag = makeTag(ee.target, ce ? ce.styleTag : null, ee.forceServer, le);
    }, sheetRunningId += 1, this.id = sheetRunningId, this.forceServer = ie, this.target = ie ? null : ne, this.tagMap = {}, this.deferred = {}, this.rehydratedNames = {}, this.ignoreRehydratedNames = {}, this.tags = [], this.capacity = 1, this.clones = [];
  }
  return Q.prototype.rehydrate = function() {
    if (!IS_BROWSER || this.forceServer)
      return this;
    var ne = [], ie = [], ae = !1, ce = document.querySelectorAll("style[" + SC_ATTR + "][" + SC_VERSION_ATTR + '="4.4.1"]'), le = ce.length;
    if (!le)
      return this;
    for (var de = 0; de < le; de += 1) {
      var ye = ce[de];
      ae || (ae = !!ye.getAttribute(SC_STREAM_ATTR));
      for (var fe = (ye.getAttribute(SC_ATTR) || "").trim().split(SPLIT_REGEX), Be = fe.length, Ee = 0, me; Ee < Be; Ee += 1)
        me = fe[Ee], this.rehydratedNames[me] = !0;
      ie.push.apply(ie, extractComps(ye.textContent)), ne.push(ye);
    }
    var ge = ie.length;
    if (!ge)
      return this;
    var we = this.makeTag(null);
    rehydrate(we, ne, ie), this.capacity = Math.max(1, MAX_SIZE - ge), this.tags.push(we);
    for (var be = 0; be < ge; be += 1)
      this.tagMap[ie[be].componentId] = we;
    return this;
  }, Q.reset = function() {
    var ne = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    master = new Q(void 0, ne).rehydrate();
  }, Q.prototype.clone = function() {
    var ne = new Q(this.target, this.forceServer);
    return this.clones.push(ne), ne.tags = this.tags.map(function(ie) {
      for (var ae = ie.getIds(), ce = ie.clone(), le = 0; le < ae.length; le += 1)
        ne.tagMap[ae[le]] = ce;
      return ce;
    }), ne.rehydratedNames = _extends({}, this.rehydratedNames), ne.deferred = _extends({}, this.deferred), ne;
  }, Q.prototype.sealAllTags = function() {
    this.capacity = 1, this.tags.forEach(function(ne) {
      ne.sealed = !0;
    });
  }, Q.prototype.makeTag = function(ne) {
    var ie = ne ? ne.styleTag : null, ae = !1;
    return makeTag(this.target, ie, this.forceServer, ae, this.getImportRuleTag);
  }, Q.prototype.getTagForId = function(ne) {
    var ie = this.tagMap[ne];
    if (ie !== void 0 && !ie.sealed)
      return ie;
    var ae = this.tags[this.tags.length - 1];
    return this.capacity -= 1, this.capacity === 0 && (this.capacity = MAX_SIZE, ae = this.makeTag(ae), this.tags.push(ae)), this.tagMap[ne] = ae;
  }, Q.prototype.hasId = function(ne) {
    return this.tagMap[ne] !== void 0;
  }, Q.prototype.hasNameForId = function(ne, ie) {
    if (this.ignoreRehydratedNames[ne] === void 0 && this.rehydratedNames[ie])
      return !0;
    var ae = this.tagMap[ne];
    return ae !== void 0 && ae.hasNameForId(ne, ie);
  }, Q.prototype.deferredInject = function(ne, ie) {
    if (this.tagMap[ne] === void 0) {
      for (var ae = this.clones, ce = 0; ce < ae.length; ce += 1)
        ae[ce].deferredInject(ne, ie);
      this.getTagForId(ne).insertMarker(ne), this.deferred[ne] = ie;
    }
  }, Q.prototype.inject = function(ne, ie, ae) {
    for (var ce = this.clones, le = 0; le < ce.length; le += 1)
      ce[le].inject(ne, ie, ae);
    var de = this.getTagForId(ne);
    if (this.deferred[ne] !== void 0) {
      var ye = this.deferred[ne].concat(ie);
      de.insertRules(ne, ye, ae), this.deferred[ne] = void 0;
    } else
      de.insertRules(ne, ie, ae);
  }, Q.prototype.remove = function(ne) {
    var ie = this.tagMap[ne];
    if (ie !== void 0) {
      for (var ae = this.clones, ce = 0; ce < ae.length; ce += 1)
        ae[ce].remove(ne);
      ie.removeRules(ne), this.ignoreRehydratedNames[ne] = !0, this.deferred[ne] = void 0;
    }
  }, Q.prototype.toHTML = function() {
    return this.tags.map(function(ne) {
      return ne.toHTML();
    }).join("");
  }, Q.prototype.toReactElements = function() {
    var ne = this.id;
    return this.tags.map(function(ie, ae) {
      var ce = "sc-" + ne + "-" + ae;
      return cloneElement(ie.toElement(), {
        key: ce
      });
    });
  }, createClass(Q, null, [{
    key: "master",
    get: function() {
      return master || (master = new Q().rehydrate());
    }
  }, {
    key: "instance",
    get: function() {
      return Q.master;
    }
  }]), Q;
}(), Keyframes = function() {
  function Q(ee, ne) {
    var ie = this;
    classCallCheck(this, Q), this.inject = function(ae) {
      ae.hasNameForId(ie.id, ie.name) || ae.inject(ie.id, ie.rules, ie.name);
    }, this.toString = function() {
      throw new StyledComponentsError(12, String(ie.name));
    }, this.name = ee, this.rules = ne, this.id = "sc-keyframes-" + ee;
  }
  return Q.prototype.getName = function() {
    return this.name;
  }, Q;
}(), uppercasePattern = /([A-Z])/g, msPattern = /^ms-/;
function hyphenateStyleName(Q) {
  return Q.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
}
function addUnitIfNeeded(Q, ee) {
  return ee == null || typeof ee == "boolean" || ee === "" ? "" : typeof ee == "number" && ee !== 0 && !(Q in unitlessKeys) ? ee + "px" : String(ee).trim();
}
var isFalsish = function Q(ee) {
  return ee == null || ee === !1 || ee === "";
}, objToCssArray = function Q(ee, ne) {
  var ie = [], ae = Object.keys(ee);
  return ae.forEach(function(ce) {
    if (!isFalsish(ee[ce])) {
      if (isPlainObject(ee[ce]))
        return ie.push.apply(ie, Q(ee[ce], ce)), ie;
      if (isFunction(ee[ce]))
        return ie.push(hyphenateStyleName(ce) + ":", ee[ce], ";"), ie;
      ie.push(hyphenateStyleName(ce) + ": " + addUnitIfNeeded(ce, ee[ce]) + ";");
    }
    return ie;
  }), ne ? [ne + " {"].concat(ie, ["}"]) : ie;
};
function flatten(Q, ee, ne) {
  if (Array.isArray(Q)) {
    for (var ie = [], ae = 0, ce = Q.length, le; ae < ce; ae += 1)
      le = flatten(Q[ae], ee, ne), le !== null && (Array.isArray(le) ? ie.push.apply(ie, le) : ie.push(le));
    return ie;
  }
  if (isFalsish(Q))
    return null;
  if (isStyledComponent(Q))
    return "." + Q.styledComponentId;
  if (isFunction(Q))
    if (isStatelessFunction(Q) && ee) {
      var de = Q(ee);
      return process.env.NODE_ENV !== "production" && reactIs.exports.isElement(de) && console.warn(getComponentName(Q) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), flatten(de, ee, ne);
    } else
      return Q;
  return Q instanceof Keyframes ? ne ? (Q.inject(ne), Q.getName()) : Q : isPlainObject(Q) ? objToCssArray(Q) : Q.toString();
}
function css(Q) {
  for (var ee = arguments.length, ne = Array(ee > 1 ? ee - 1 : 0), ie = 1; ie < ee; ie++)
    ne[ie - 1] = arguments[ie];
  return isFunction(Q) || isPlainObject(Q) ? flatten(interleave(EMPTY_ARRAY, [Q].concat(ne))) : flatten(interleave(Q, ne));
}
function constructWithOptions(Q, ee) {
  var ne = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT;
  if (!reactIs.exports.isValidElementType(ee))
    throw new StyledComponentsError(1, String(ee));
  var ie = function() {
    return Q(ee, ne, css.apply(void 0, arguments));
  };
  return ie.withConfig = function(ae) {
    return constructWithOptions(Q, ee, _extends({}, ne, ae));
  }, ie.attrs = function(ae) {
    return constructWithOptions(Q, ee, _extends({}, ne, {
      attrs: Array.prototype.concat(ne.attrs, ae).filter(Boolean)
    }));
  }, ie;
}
function murmurhash(Q) {
  for (var ee = Q.length | 0, ne = ee | 0, ie = 0, ae; ee >= 4; )
    ae = Q.charCodeAt(ie) & 255 | (Q.charCodeAt(++ie) & 255) << 8 | (Q.charCodeAt(++ie) & 255) << 16 | (Q.charCodeAt(++ie) & 255) << 24, ae = 1540483477 * (ae & 65535) + ((1540483477 * (ae >>> 16) & 65535) << 16), ae ^= ae >>> 24, ae = 1540483477 * (ae & 65535) + ((1540483477 * (ae >>> 16) & 65535) << 16), ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16) ^ ae, ee -= 4, ++ie;
  switch (ee) {
    case 3:
      ne ^= (Q.charCodeAt(ie + 2) & 255) << 16;
    case 2:
      ne ^= (Q.charCodeAt(ie + 1) & 255) << 8;
    case 1:
      ne ^= Q.charCodeAt(ie) & 255, ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16);
  }
  return ne ^= ne >>> 13, ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16), (ne ^ ne >>> 15) >>> 0;
}
var charsLength = 52, getAlphabeticChar = function Q(ee) {
  return String.fromCharCode(ee + (ee > 25 ? 39 : 97));
};
function generateAlphabeticName(Q) {
  var ee = "", ne = void 0;
  for (ne = Q; ne > charsLength; ne = Math.floor(ne / charsLength))
    ee = getAlphabeticChar(ne % charsLength) + ee;
  return getAlphabeticChar(ne % charsLength) + ee;
}
function hasFunctionObjectKey(Q) {
  for (var ee in Q)
    if (isFunction(Q[ee]))
      return !0;
  return !1;
}
function isStaticRules(Q, ee) {
  for (var ne = 0; ne < Q.length; ne += 1) {
    var ie = Q[ne];
    if (Array.isArray(ie) && !isStaticRules(ie, ee))
      return !1;
    if (isFunction(ie) && !isStyledComponent(ie))
      return !1;
  }
  return !ee.some(function(ae) {
    return isFunction(ae) || hasFunctionObjectKey(ae);
  });
}
var hasher = function Q(ee) {
  return generateAlphabeticName(murmurhash(ee));
}, ComponentStyle = function() {
  function Q(ee, ne, ie) {
    classCallCheck(this, Q), this.rules = ee, this.isStatic = process.env.NODE_ENV === "production" && isStaticRules(ee, ne), this.componentId = ie, StyleSheet.master.hasId(ie) || StyleSheet.master.deferredInject(ie, []);
  }
  return Q.prototype.generateAndInjectStyles = function(ne, ie) {
    var ae = this.isStatic, ce = this.componentId, le = this.lastClassName;
    if (IS_BROWSER && ae && typeof le == "string" && ie.hasNameForId(ce, le))
      return le;
    var de = flatten(this.rules, ne, ie), ye = hasher(this.componentId + de.join(""));
    return ie.hasNameForId(ce, ye) || ie.inject(this.componentId, stringifyRules(de, "." + ye, void 0, ce), ye), this.lastClassName = ye, ye;
  }, Q.generateName = function(ne) {
    return hasher(ne);
  }, Q;
}(), LIMIT = 200, createWarnTooManyClasses = function(Q) {
  var ee = {}, ne = !1;
  return function(ie) {
    ne || (ee[ie] = !0, Object.keys(ee).length >= LIMIT && (console.warn("Over " + LIMIT + " classes were generated for component " + Q + `. 
Consider using the attrs method, together with a style object for frequently changed styles.
Example:
  const Component = styled.div.attrs(props => ({
    style: {
      background: props.background,
    },
  }))\`width: 100%;\`

  <Component />`), ne = !0, ee = {}));
  };
}, determineTheme = function(Q, ee) {
  var ne = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT, ie = ne ? Q.theme === ne.theme : !1, ae = Q.theme && !ie ? Q.theme : ee || ne.theme;
  return ae;
}, escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g, dashesAtEnds = /(^-|-$)/g;
function escape$1(Q) {
  return Q.replace(escapeRegex, "-").replace(dashesAtEnds, "");
}
function isTag(Q) {
  return typeof Q == "string" && (process.env.NODE_ENV !== "production" ? Q.charAt(0) === Q.charAt(0).toLowerCase() : !0);
}
function generateDisplayName(Q) {
  return isTag(Q) ? "styled." + Q : "Styled(" + getComponentName(Q) + ")";
}
var _TYPE_STATICS, REACT_STATICS = {
  childContextTypes: !0,
  contextTypes: !0,
  defaultProps: !0,
  displayName: !0,
  getDerivedStateFromProps: !0,
  propTypes: !0,
  type: !0
}, KNOWN_STATICS = {
  name: !0,
  length: !0,
  prototype: !0,
  caller: !0,
  callee: !0,
  arguments: !0,
  arity: !0
}, TYPE_STATICS = (_TYPE_STATICS = {}, _TYPE_STATICS[reactIs.exports.ForwardRef] = {
  $$typeof: !0,
  render: !0
}, _TYPE_STATICS), defineProperty$1 = Object.defineProperty, getOwnPropertyNames = Object.getOwnPropertyNames, _Object$getOwnPropert = Object.getOwnPropertySymbols, getOwnPropertySymbols = _Object$getOwnPropert === void 0 ? function() {
  return [];
} : _Object$getOwnPropert, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, getPrototypeOf = Object.getPrototypeOf, objectPrototype = Object.prototype, arrayPrototype = Array.prototype;
function hoistNonReactStatics(Q, ee, ne) {
  if (typeof ee != "string") {
    var ie = getPrototypeOf(ee);
    ie && ie !== objectPrototype && hoistNonReactStatics(Q, ie, ne);
    for (var ae = arrayPrototype.concat(
      getOwnPropertyNames(ee),
      getOwnPropertySymbols(ee)
    ), ce = TYPE_STATICS[Q.$$typeof] || REACT_STATICS, le = TYPE_STATICS[ee.$$typeof] || REACT_STATICS, de = ae.length, ye = void 0, fe = void 0; de--; )
      if (fe = ae[de], !KNOWN_STATICS[fe] && !(ne && ne[fe]) && !(le && le[fe]) && !(ce && ce[fe]) && (ye = getOwnPropertyDescriptor(ee, fe), ye))
        try {
          defineProperty$1(Q, fe, ye);
        } catch {
        }
    return Q;
  }
  return Q;
}
function isDerivedReactComponent(Q) {
  return !!(Q && Q.prototype && Q.prototype.isReactComponent);
}
var once = function(Q) {
  var ee = !1;
  return function() {
    ee || (ee = !0, Q.apply(void 0, arguments));
  };
}, ThemeContext = createContext(), ThemeConsumer = ThemeContext.Consumer;
(function(Q) {
  inherits(ee, Q);
  function ee(ne) {
    classCallCheck(this, ee);
    var ie = possibleConstructorReturn(this, Q.call(this, ne));
    return ie.getContext = memoizeOne(ie.getContext.bind(ie)), ie.renderInner = ie.renderInner.bind(ie), ie;
  }
  return ee.prototype.render = function() {
    return this.props.children ? /* @__PURE__ */ jsx(ThemeContext.Consumer, {
      children: this.renderInner
    }) : null;
  }, ee.prototype.renderInner = function(ie) {
    var ae = this.getContext(this.props.theme, ie);
    return /* @__PURE__ */ jsx(ThemeContext.Provider, {
      value: ae,
      children: this.props.children
    });
  }, ee.prototype.getTheme = function(ie, ae) {
    if (isFunction(ie)) {
      var ce = ie(ae);
      if (process.env.NODE_ENV !== "production" && (ce === null || Array.isArray(ce) || (typeof ce > "u" ? "undefined" : _typeof(ce)) !== "object"))
        throw new StyledComponentsError(7);
      return ce;
    }
    if (ie === null || Array.isArray(ie) || (typeof ie > "u" ? "undefined" : _typeof(ie)) !== "object")
      throw new StyledComponentsError(8);
    return _extends({}, ae, ie);
  }, ee.prototype.getContext = function(ie, ae) {
    return this.getTheme(ie, ae);
  }, ee;
})(Component);
var ServerStyleSheet = function() {
  function Q() {
    classCallCheck(this, Q), this.masterSheet = StyleSheet.master, this.instance = this.masterSheet.clone(), this.sealed = !1;
  }
  return Q.prototype.seal = function() {
    if (!this.sealed) {
      var ne = this.masterSheet.clones.indexOf(this.instance);
      this.masterSheet.clones.splice(ne, 1), this.sealed = !0;
    }
  }, Q.prototype.collectStyles = function(ne) {
    if (this.sealed)
      throw new StyledComponentsError(2);
    return /* @__PURE__ */ jsx(StyleSheetManager, {
      sheet: this.instance,
      children: ne
    });
  }, Q.prototype.getStyleTags = function() {
    return this.seal(), this.instance.toHTML();
  }, Q.prototype.getStyleElement = function() {
    return this.seal(), this.instance.toReactElements();
  }, Q.prototype.interleaveWithNodeStream = function(ne) {
    throw new StyledComponentsError(3);
  }, Q;
}(), StyleSheetContext = createContext(), StyleSheetConsumer = StyleSheetContext.Consumer, StyleSheetManager = function(Q) {
  inherits(ee, Q);
  function ee(ne) {
    classCallCheck(this, ee);
    var ie = possibleConstructorReturn(this, Q.call(this, ne));
    return ie.getContext = memoizeOne(ie.getContext), ie;
  }
  return ee.prototype.getContext = function(ie, ae) {
    if (ie)
      return ie;
    if (ae)
      return new StyleSheet(ae);
    throw new StyledComponentsError(4);
  }, ee.prototype.render = function() {
    var ie = this.props, ae = ie.children, ce = ie.sheet, le = ie.target;
    return /* @__PURE__ */ jsx(StyleSheetContext.Provider, {
      value: this.getContext(ce, le),
      children: process.env.NODE_ENV !== "production" ? React__default.Children.only(ae) : ae
    });
  }, ee;
}(Component);
process.env.NODE_ENV !== "production" && (StyleSheetManager.propTypes = {
  sheet: propTypes.exports.oneOfType([propTypes.exports.instanceOf(StyleSheet), propTypes.exports.instanceOf(ServerStyleSheet)]),
  target: propTypes.exports.shape({
    appendChild: propTypes.exports.func.isRequired
  })
});
var identifiers = {};
function generateId(Q, ee, ne) {
  var ie = typeof ee != "string" ? "sc" : escape$1(ee), ae = (identifiers[ie] || 0) + 1;
  identifiers[ie] = ae;
  var ce = ie + "-" + Q.generateName(ie + ae);
  return ne ? ne + "-" + ce : ce;
}
var StyledComponent = function(Q) {
  inherits(ee, Q);
  function ee() {
    classCallCheck(this, ee);
    var ne = possibleConstructorReturn(this, Q.call(this));
    return ne.attrs = {}, ne.renderOuter = ne.renderOuter.bind(ne), ne.renderInner = ne.renderInner.bind(ne), process.env.NODE_ENV !== "production" && (ne.warnInnerRef = once(function(ie) {
      return console.warn('The "innerRef" API has been removed in styled-components v4 in favor of React 16 ref forwarding, use "ref" instead like a typical component. "innerRef" was detected on component "' + ie + '".');
    }), ne.warnAttrsFnObjectKeyDeprecated = once(function(ie, ae) {
      return console.warn('Functions as object-form attrs({}) keys are now deprecated and will be removed in a future version of styled-components. Switch to the new attrs(props => ({})) syntax instead for easier and more powerful composition. The attrs key in question is "' + ie + '" on component "' + ae + '".', `
 ` + new Error().stack);
    }), ne.warnNonStyledComponentAttrsObjectKey = once(function(ie, ae) {
      return console.warn(`It looks like you've used a non styled-component as the value for the "` + ie + '" prop in an object-form attrs constructor of "' + ae + `".
You should use the new function-form attrs constructor which avoids this issue: attrs(props => ({ yourStuff }))
To continue using the deprecated object syntax, you'll need to wrap your component prop in a function to make it available inside the styled component (you'll still get the deprecation warning though.)
` + ("For example, { " + ie + ": () => InnerComponent } instead of { " + ie + ": InnerComponent }"));
    })), ne;
  }
  return ee.prototype.render = function() {
    return /* @__PURE__ */ jsx(StyleSheetConsumer, {
      children: this.renderOuter
    });
  }, ee.prototype.renderOuter = function() {
    var ie = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : StyleSheet.master;
    return this.styleSheet = ie, this.props.forwardedComponent.componentStyle.isStatic ? this.renderInner() : /* @__PURE__ */ jsx(ThemeConsumer, {
      children: this.renderInner
    });
  }, ee.prototype.renderInner = function(ie) {
    var ae = this.props.forwardedComponent, ce = ae.componentStyle, le = ae.defaultProps, de = ae.displayName, ye = ae.foldedComponentIds, fe = ae.styledComponentId, Be = ae.target, Ee = void 0;
    ce.isStatic ? Ee = this.generateAndInjectStyles(EMPTY_OBJECT, this.props) : Ee = this.generateAndInjectStyles(determineTheme(this.props, ie, le) || EMPTY_OBJECT, this.props);
    var me = this.props.as || this.attrs.as || Be, ge = isTag(me), we = {}, be = _extends({}, this.props, this.attrs), Oe = void 0;
    for (Oe in be)
      process.env.NODE_ENV !== "production" && Oe === "innerRef" && ge && this.warnInnerRef(de), !(Oe === "forwardedComponent" || Oe === "as") && (Oe === "forwardedRef" ? we.ref = be[Oe] : Oe === "forwardedAs" ? we.as = be[Oe] : (!ge || index(Oe)) && (we[Oe] = be[Oe]));
    return this.props.style && this.attrs.style && (we.style = _extends({}, this.attrs.style, this.props.style)), we.className = Array.prototype.concat(ye, fe, Ee !== fe ? Ee : null, this.props.className, this.attrs.className).filter(Boolean).join(" "), createElement(me, we);
  }, ee.prototype.buildExecutionContext = function(ie, ae, ce) {
    var le = this, de = _extends({}, ae, {
      theme: ie
    });
    return ce.length && (this.attrs = {}, ce.forEach(function(ye) {
      var fe = ye, Be = !1, Ee = void 0, me = void 0;
      isFunction(fe) && (fe = fe(de), Be = !0);
      for (me in fe)
        Ee = fe[me], Be || isFunction(Ee) && !isDerivedReactComponent(Ee) && !isStyledComponent(Ee) && (process.env.NODE_ENV !== "production" && le.warnAttrsFnObjectKeyDeprecated(me, ae.forwardedComponent.displayName), Ee = Ee(de), process.env.NODE_ENV !== "production" && React__default.isValidElement(Ee) && le.warnNonStyledComponentAttrsObjectKey(me, ae.forwardedComponent.displayName)), le.attrs[me] = Ee, de[me] = Ee;
    })), de;
  }, ee.prototype.generateAndInjectStyles = function(ie, ae) {
    var ce = ae.forwardedComponent, le = ce.attrs, de = ce.componentStyle, ye = ce.warnTooManyClasses;
    if (de.isStatic && !le.length)
      return de.generateAndInjectStyles(EMPTY_OBJECT, this.styleSheet);
    var fe = de.generateAndInjectStyles(this.buildExecutionContext(ie, ae, le), this.styleSheet);
    return process.env.NODE_ENV !== "production" && ye && ye(fe), fe;
  }, ee;
}(Component);
function createStyledComponent(Q, ee, ne) {
  var ie = isStyledComponent(Q), ae = !isTag(Q), ce = ee.displayName, le = ce === void 0 ? generateDisplayName(Q) : ce, de = ee.componentId, ye = de === void 0 ? generateId(ComponentStyle, ee.displayName, ee.parentComponentId) : de, fe = ee.ParentComponent, Be = fe === void 0 ? StyledComponent : fe, Ee = ee.attrs, me = Ee === void 0 ? EMPTY_ARRAY : Ee, ge = ee.displayName && ee.componentId ? escape$1(ee.displayName) + "-" + ee.componentId : ee.componentId || ye, we = ie && Q.attrs ? Array.prototype.concat(Q.attrs, me).filter(Boolean) : me, be = new ComponentStyle(ie ? Q.componentStyle.rules.concat(ne) : ne, we, ge), Oe = void 0, He = function(Ge, Fe) {
    return /* @__PURE__ */ jsx(Be, {
      ...Ge,
      forwardedComponent: Oe,
      forwardedRef: Fe
    });
  };
  return He.displayName = le, Oe = React__default.forwardRef(He), Oe.displayName = le, Oe.attrs = we, Oe.componentStyle = be, Oe.foldedComponentIds = ie ? Array.prototype.concat(Q.foldedComponentIds, Q.styledComponentId) : EMPTY_ARRAY, Oe.styledComponentId = ge, Oe.target = ie ? Q.target : Q, Oe.withComponent = function(Ge) {
    var Fe = ee.componentId, Pe = objectWithoutProperties(ee, ["componentId"]), Je = Fe && Fe + "-" + (isTag(Ge) ? Ge : escape$1(getComponentName(Ge))), tt = _extends({}, Pe, {
      attrs: we,
      componentId: Je,
      ParentComponent: Be
    });
    return createStyledComponent(Ge, tt, ne);
  }, Object.defineProperty(Oe, "defaultProps", {
    get: function() {
      return this._foldedDefaultProps;
    },
    set: function(Ge) {
      this._foldedDefaultProps = ie ? merge(Q.defaultProps, Ge) : Ge;
    }
  }), process.env.NODE_ENV !== "production" && (Oe.warnTooManyClasses = createWarnTooManyClasses(le)), Oe.toString = function() {
    return "." + Oe.styledComponentId;
  }, ae && hoistNonReactStatics(Oe, Q, {
    attrs: !0,
    componentStyle: !0,
    displayName: !0,
    foldedComponentIds: !0,
    styledComponentId: !0,
    target: !0,
    withComponent: !0
  }), Oe;
}
var domElements = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "marker",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], styled = function Q(ee) {
  return constructWithOptions(createStyledComponent, ee);
};
domElements.forEach(function(Q) {
  styled[Q] = styled(Q);
});
IS_BROWSER && (window.scCGSHMRCache = {});
process.env.NODE_ENV !== "production" && typeof navigator < "u" && navigator.product === "ReactNative" && console.warn(`It looks like you've imported 'styled-components' on React Native.
Perhaps you're looking to import 'styled-components/native'?
Read more about this at https://www.styled-components.com/docs/basics#react-native`);
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && typeof window < "u" && typeof navigator < "u" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Node.js") === -1 && navigator.userAgent.indexOf("jsdom") === -1 && (window["__styled-components-init__"] = window["__styled-components-init__"] || 0, window["__styled-components-init__"] === 1 && console.warn(`It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles not rendering properly, errors happening during rehydration process and makes your application bigger without a good reason.

See https://s-c.sh/2BAXzed for more info.`), window["__styled-components-init__"] += 1);
const styled$1 = styled, StyledFrame = styled$1.div`
  align-self: flex-end;
  display: flex;
  background-image: url("frame/left-top-corner.png"),
    url("frame/right-top-corner.png"), url("frame/left-bottom-corner.png"),
    url("frame/right-bottom-corner.png"), url("frame/top-horizontal-bar.png"),
    url("frame/bottom-horizontal-bar.png"), url("frame/left-vertical-bar.png"),
    url("frame/right-vertical-bar.png"), url("frame/bg2.jpg");
  background-position: left top, right top, left 1px bottom, right 1px bottom,
    left 1px, left 1px bottom, left 1px bottom, right 1px top, center top;
  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat, repeat-x,
    repeat-x, repeat-y, repeat-y, no-repeat;
  background-color: #1d2123;
  position: relative;
  padding: 8px;
`;
StyledFrame.displayName = "StyledFrame";
const Frame = ({
  className: Q,
  children: ee
}) => /* @__PURE__ */ jsx(StyledFrame, {
  className: Q,
  children: /* @__PURE__ */ jsx("div", {
    className: "w-full h-full p-3 rounded shadow-inner bg-[url('/frame/bg.jpg')] bg-center bg-cover",
    children: ee
  })
}), StyledBagBox = styled$1.div`
  ${(Q) => {
  const {
    canDrop: ee,
    isOver: ne
  } = Q;
  return css`
      position: relative;
      border: ${ee ? `1px solid ${ne ? "green" : "gold"}` : "1px solid #0c1e20"};
      position: relative;
      width: 6em;
      display: flex;
      height: 6em;
      align-items: center;
      justify-content: center;
      background-image: radial-gradient(#0c1e20 0%, #101010 66%);
      border-radius: 2px;
      box-shadow: 0px 0px 0px 2px #2f3639;
    `;
}}
`;
StyledBagBox.displayName = "StyledBagBox";
const RemoteBox = ({
  className: Q,
  children: ee
}) => /* @__PURE__ */ jsx(StyledBagBox, {
  className: Q,
  isOver: !1,
  canDrop: !1,
  children: ee
}), RemoteBox$1 = memo(RemoteBox), BagBox = ({
  className: Q,
  children: ee,
  isOver: ne,
  canDrop: ie
}) => /* @__PURE__ */ jsx(StyledBagBox, {
  className: Q,
  isOver: ne,
  canDrop: ie,
  children: ee
}), BagBox$1 = memo(BagBox);
var classnames$1 = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(Q) {
  (function() {
    var ee = {}.hasOwnProperty;
    function ne() {
      for (var ie = [], ae = 0; ae < arguments.length; ae++) {
        var ce = arguments[ae];
        if (!!ce) {
          var le = typeof ce;
          if (le === "string" || le === "number")
            ie.push(ce);
          else if (Array.isArray(ce)) {
            if (ce.length) {
              var de = ne.apply(null, ce);
              de && ie.push(de);
            }
          } else if (le === "object") {
            if (ce.toString !== Object.prototype.toString && !ce.toString.toString().includes("[native code]")) {
              ie.push(ce.toString());
              continue;
            }
            for (var ye in ce)
              ee.call(ce, ye) && ce[ye] && ie.push(ye);
          }
        }
      }
      return ie.join(" ");
    }
    Q.exports ? (ne.default = ne, Q.exports = ne) : window.classNames = ne;
  })();
})(classnames$1);
const classnames = classnames$1.exports;
var react3dViewer = { exports: {} };
/*!
 *  react-3d-viewer v1.0.12
 *  By https://github.com/dwqdaiwenqi 
 *  Github: https://github.com/dwqdaiwenqi/react-3d-viewer
 *  MIT Licensed.
 */
(function(Q, ee) {
  (function(ne, ie) {
    Q.exports = ie();
  })(window, function() {
    return function(ne) {
      var ie = {};
      function ae(ce) {
        if (ie[ce])
          return ie[ce].exports;
        var le = ie[ce] = { i: ce, l: !1, exports: {} };
        return ne[ce].call(le.exports, le, le.exports, ae), le.l = !0, le.exports;
      }
      return ae.m = ne, ae.c = ie, ae.d = function(ce, le, de) {
        ae.o(ce, le) || Object.defineProperty(ce, le, { enumerable: !0, get: de });
      }, ae.r = function(ce) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(ce, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(ce, "__esModule", { value: !0 });
      }, ae.t = function(ce, le) {
        if (1 & le && (ce = ae(ce)), 8 & le || 4 & le && typeof ce == "object" && ce && ce.__esModule)
          return ce;
        var de = /* @__PURE__ */ Object.create(null);
        if (ae.r(de), Object.defineProperty(de, "default", { enumerable: !0, value: ce }), 2 & le && typeof ce != "string")
          for (var ye in ce)
            ae.d(de, ye, function(fe) {
              return ce[fe];
            }.bind(null, ye));
        return de;
      }, ae.n = function(ce) {
        var le = ce && ce.__esModule ? function() {
          return ce.default;
        } : function() {
          return ce;
        };
        return ae.d(le, "a", le), le;
      }, ae.o = function(ce, le) {
        return Object.prototype.hasOwnProperty.call(ce, le);
      }, ae.p = "", ae(ae.s = 13);
    }([function(ne, ie, ae) {
      function ce() {
      }
      ae.r(ie), ae.d(ie, "WebGLRenderTargetCube", function() {
        return Oa;
      }), ae.d(ie, "WebGLRenderTarget", function() {
        return ia;
      }), ae.d(ie, "WebGLRenderer", function() {
        return iA;
      }), ae.d(ie, "ShaderLib", function() {
        return aa;
      }), ae.d(ie, "UniformsLib", function() {
        return cn;
      }), ae.d(ie, "UniformsUtils", function() {
        return Li;
      }), ae.d(ie, "ShaderChunk", function() {
        return Vn;
      }), ae.d(ie, "FogExp2", function() {
        return $a;
      }), ae.d(ie, "Fog", function() {
        return ja;
      }), ae.d(ie, "Scene", function() {
        return _c;
      }), ae.d(ie, "Sprite", function() {
        return ks;
      }), ae.d(ie, "LOD", function() {
        return Fs;
      }), ae.d(ie, "SkinnedMesh", function() {
        return Sc;
      }), ae.d(ie, "Skeleton", function() {
        return Gs;
      }), ae.d(ie, "Bone", function() {
        return Qc;
      }), ae.d(ie, "Mesh", function() {
        return Ki;
      }), ae.d(ie, "LineSegments", function() {
        return ri;
      }), ae.d(ie, "LineLoop", function() {
        return Tc;
      }), ae.d(ie, "Line", function() {
        return Zi;
      }), ae.d(ie, "Points", function() {
        return Ya;
      }), ae.d(ie, "Group", function() {
        return Da;
      }), ae.d(ie, "VideoTexture", function() {
        return oA;
      }), ae.d(ie, "DataTexture", function() {
        return oa;
      }), ae.d(ie, "CompressedTexture", function() {
        return Va;
      }), ae.d(ie, "CubeTexture", function() {
        return $o;
      }), ae.d(ie, "CanvasTexture", function() {
        return Os;
      }), ae.d(ie, "DepthTexture", function() {
        return Ps;
      }), ae.d(ie, "Texture", function() {
        return ii;
      }), ae.d(ie, "CompressedTextureLoader", function() {
        return gu;
      }), ae.d(ie, "DataTextureLoader", function() {
        return AA;
      }), ae.d(ie, "CubeTextureLoader", function() {
        return uA;
      }), ae.d(ie, "TextureLoader", function() {
        return Mc;
      }), ae.d(ie, "ObjectLoader", function() {
        return Bu;
      }), ae.d(ie, "MaterialLoader", function() {
        return zc;
      }), ae.d(ie, "BufferGeometryLoader", function() {
        return pA;
      }), ae.d(ie, "DefaultLoadingManager", function() {
        return to;
      }), ae.d(ie, "LoadingManager", function() {
        return cA;
      }), ae.d(ie, "JSONLoader", function() {
        return mA;
      }), ae.d(ie, "ImageLoader", function() {
        return ac;
      }), ae.d(ie, "ImageBitmapLoader", function() {
        return EA;
      }), ae.d(ie, "FontLoader", function() {
        return Iu;
      }), ae.d(ie, "FileLoader", function() {
        return yo;
      }), ae.d(ie, "Loader", function() {
        return us;
      }), ae.d(ie, "LoaderUtils", function() {
        return gA;
      }), ae.d(ie, "Cache", function() {
        return _a;
      }), ae.d(ie, "AudioLoader", function() {
        return CA;
      }), ae.d(ie, "SpotLightShadow", function() {
        return Fc;
      }), ae.d(ie, "SpotLight", function() {
        return Gc;
      }), ae.d(ie, "PointLight", function() {
        return Oc;
      }), ae.d(ie, "RectAreaLight", function() {
        return qc;
      }), ae.d(ie, "HemisphereLight", function() {
        return kc;
      }), ae.d(ie, "DirectionalLightShadow", function() {
        return Pc;
      }), ae.d(ie, "DirectionalLight", function() {
        return Uc;
      }), ae.d(ie, "AmbientLight", function() {
        return Hc;
      }), ae.d(ie, "LightShadow", function() {
        return Qa;
      }), ae.d(ie, "Light", function() {
        return ui;
      }), ae.d(ie, "StereoCamera", function() {
        return xu;
      }), ae.d(ie, "PerspectiveCamera", function() {
        return di;
      }), ae.d(ie, "OrthographicCamera", function() {
        return Pa;
      }), ae.d(ie, "CubeCamera", function() {
        return lc;
      }), ae.d(ie, "ArrayCamera", function() {
        return Ms;
      }), ae.d(ie, "Camera", function() {
        return Qo;
      }), ae.d(ie, "AudioListener", function() {
        return IA;
      }), ae.d(ie, "PositionalAudio", function() {
        return xA;
      }), ae.d(ie, "AudioContext", function() {
        return vA;
      }), ae.d(ie, "AudioAnalyser", function() {
        return wA;
      }), ae.d(ie, "Audio", function() {
        return ls;
      }), ae.d(ie, "VectorKeyframeTrack", function() {
        return As;
      }), ae.d(ie, "StringKeyframeTrack", function() {
        return Lc;
      }), ae.d(ie, "QuaternionKeyframeTrack", function() {
        return uc;
      }), ae.d(ie, "NumberKeyframeTrack", function() {
        return cs;
      }), ae.d(ie, "ColorKeyframeTrack", function() {
        return Yc;
      }), ae.d(ie, "BooleanKeyframeTrack", function() {
        return jc;
      }), ae.d(ie, "PropertyMixer", function() {
        return bA;
      }), ae.d(ie, "PropertyBinding", function() {
        return qi;
      }), ae.d(ie, "KeyframeTrack", function() {
        return Mi;
      }), ae.d(ie, "AnimationUtils", function() {
        return Hi;
      }), ae.d(ie, "AnimationObjectGroup", function() {
        return _u;
      }), ae.d(ie, "AnimationMixer", function() {
        return QA;
      }), ae.d(ie, "AnimationClip", function() {
        return lo;
      }), ae.d(ie, "Uniform", function() {
        return Wc;
      }), ae.d(ie, "InstancedBufferGeometry", function() {
        return SA;
      }), ae.d(ie, "BufferGeometry", function() {
        return Wr;
      }), ae.d(ie, "Geometry", function() {
        return mn;
      }), ae.d(ie, "InterleavedBufferAttribute", function() {
        return Ns;
      }), ae.d(ie, "InstancedInterleavedBuffer", function() {
        return TA;
      }), ae.d(ie, "InterleavedBuffer", function() {
        return ha;
      }), ae.d(ie, "InstancedBufferAttribute", function() {
        return RA;
      }), ae.d(ie, "Face3", function() {
        return Do;
      }), ae.d(ie, "Object3D", function() {
        return Dr;
      }), ae.d(ie, "Raycaster", function() {
        return Su;
      }), ae.d(ie, "Layers", function() {
        return eA;
      }), ae.d(ie, "EventDispatcher", function() {
        return ce;
      }), ae.d(ie, "Clock", function() {
        return Ru;
      }), ae.d(ie, "QuaternionLinearInterpolant", function() {
        return Vc;
      }), ae.d(ie, "LinearInterpolant", function() {
        return Ac;
      }), ae.d(ie, "DiscreteInterpolant", function() {
        return $c;
      }), ae.d(ie, "CubicInterpolant", function() {
        return Dc;
      }), ae.d(ie, "Interpolant", function() {
        return so;
      }), ae.d(ie, "Triangle", function() {
        return oo;
      }), ae.d(ie, "Math", function() {
        return bn;
      }), ae.d(ie, "Spherical", function() {
        return Mu;
      }), ae.d(ie, "Cylindrical", function() {
        return Nu;
      }), ae.d(ie, "Plane", function() {
        return _o;
      }), ae.d(ie, "Frustum", function() {
        return bc;
      }), ae.d(ie, "Sphere", function() {
        return go;
      }), ae.d(ie, "Ray", function() {
        return da;
      }), ae.d(ie, "Matrix4", function() {
        return pn;
      }), ae.d(ie, "Matrix3", function() {
        return Vi;
      }), ae.d(ie, "Box3", function() {
        return qo;
      }), ae.d(ie, "Box2", function() {
        return NA;
      }), ae.d(ie, "Line3", function() {
        return kA;
      }), ae.d(ie, "Euler", function() {
        return sa;
      }), ae.d(ie, "Vector4", function() {
        return Zn;
      }), ae.d(ie, "Vector3", function() {
        return mt;
      }), ae.d(ie, "Vector2", function() {
        return xr;
      }), ae.d(ie, "Quaternion", function() {
        return ci;
      }), ae.d(ie, "Color", function() {
        return sn;
      }), ae.d(ie, "ImmediateRenderObject", function() {
        return dc;
      }), ae.d(ie, "VertexNormalsHelper", function() {
        return hc;
      }), ae.d(ie, "SpotLightHelper", function() {
        return ds;
      }), ae.d(ie, "SkeletonHelper", function() {
        return hs;
      }), ae.d(ie, "PointLightHelper", function() {
        return fs;
      }), ae.d(ie, "RectAreaLightHelper", function() {
        return ps;
      }), ae.d(ie, "HemisphereLightHelper", function() {
        return gs;
      }), ae.d(ie, "GridHelper", function() {
        return fc;
      }), ae.d(ie, "PolarGridHelper", function() {
        return Kc;
      }), ae.d(ie, "FaceNormalsHelper", function() {
        return pc;
      }), ae.d(ie, "DirectionalLightHelper", function() {
        return ms;
      }), ae.d(ie, "CameraHelper", function() {
        return gc;
      }), ae.d(ie, "BoxHelper", function() {
        return Sa;
      }), ae.d(ie, "Box3Helper", function() {
        return mc;
      }), ae.d(ie, "PlaneHelper", function() {
        return Ec;
      }), ae.d(ie, "ArrowHelper", function() {
        return Ta;
      }), ae.d(ie, "AxesHelper", function() {
        return yc;
      }), ae.d(ie, "Shape", function() {
        return ea;
      }), ae.d(ie, "Path", function() {
        return xo;
      }), ae.d(ie, "ShapePath", function() {
        return yA;
      }), ae.d(ie, "Font", function() {
        return BA;
      }), ae.d(ie, "CurvePath", function() {
        return Lo;
      }), ae.d(ie, "Curve", function() {
        return ln;
      }), ae.d(ie, "ImageUtils", function() {
        return Jo;
      }), ae.d(ie, "ShapeUtils", function() {
        return jo;
      }), ae.d(ie, "WebGLUtils", function() {
        return au;
      }), ae.d(ie, "WireframeGeometry", function() {
        return La;
      }), ae.d(ie, "ParametricGeometry", function() {
        return Us;
      }), ae.d(ie, "ParametricBufferGeometry", function() {
        return za;
      }), ae.d(ie, "TetrahedronGeometry", function() {
        return qs;
      }), ae.d(ie, "TetrahedronBufferGeometry", function() {
        return Ja;
      }), ae.d(ie, "OctahedronGeometry", function() {
        return Ds;
      }), ae.d(ie, "OctahedronBufferGeometry", function() {
        return fa;
      }), ae.d(ie, "IcosahedronGeometry", function() {
        return $s;
      }), ae.d(ie, "IcosahedronBufferGeometry", function() {
        return Wa;
      }), ae.d(ie, "DodecahedronGeometry", function() {
        return js;
      }), ae.d(ie, "DodecahedronBufferGeometry", function() {
        return Ka;
      }), ae.d(ie, "PolyhedronGeometry", function() {
        return Hs;
      }), ae.d(ie, "PolyhedronBufferGeometry", function() {
        return Xi;
      }), ae.d(ie, "TubeGeometry", function() {
        return Ys;
      }), ae.d(ie, "TubeBufferGeometry", function() {
        return Za;
      }), ae.d(ie, "TorusKnotGeometry", function() {
        return Vs;
      }), ae.d(ie, "TorusKnotBufferGeometry", function() {
        return Xa;
      }), ae.d(ie, "TorusGeometry", function() {
        return Ls;
      }), ae.d(ie, "TorusBufferGeometry", function() {
        return es;
      }), ae.d(ie, "TextGeometry", function() {
        return Zs;
      }), ae.d(ie, "TextBufferGeometry", function() {
        return ts;
      }), ae.d(ie, "SphereGeometry", function() {
        return Xs;
      }), ae.d(ie, "SphereBufferGeometry", function() {
        return ma;
      }), ae.d(ie, "RingGeometry", function() {
        return ec;
      }), ae.d(ie, "RingBufferGeometry", function() {
        return rs;
      }), ae.d(ie, "PlaneGeometry", function() {
        return Ts;
      }), ae.d(ie, "PlaneBufferGeometry", function() {
        return la;
      }), ae.d(ie, "LatheGeometry", function() {
        return tc;
      }), ae.d(ie, "LatheBufferGeometry", function() {
        return ns;
      }), ae.d(ie, "ShapeGeometry", function() {
        return Ea;
      }), ae.d(ie, "ShapeBufferGeometry", function() {
        return ya;
      }), ae.d(ie, "ExtrudeGeometry", function() {
        return ga;
      }), ae.d(ie, "ExtrudeBufferGeometry", function() {
        return So;
      }), ae.d(ie, "EdgesGeometry", function() {
        return is;
      }), ae.d(ie, "ConeGeometry", function() {
        return rc;
      }), ae.d(ie, "ConeBufferGeometry", function() {
        return nc;
      }), ae.d(ie, "CylinderGeometry", function() {
        return Ba;
      }), ae.d(ie, "CylinderBufferGeometry", function() {
        return Yo;
      }), ae.d(ie, "CircleGeometry", function() {
        return oc;
      }), ae.d(ie, "CircleBufferGeometry", function() {
        return os;
      }), ae.d(ie, "BoxGeometry", function() {
        return Ua;
      }), ae.d(ie, "BoxBufferGeometry", function() {
        return ua;
      }), ae.d(ie, "ShadowMaterial", function() {
        return va;
      }), ae.d(ie, "SpriteMaterial", function() {
        return Xo;
      }), ae.d(ie, "RawShaderMaterial", function() {
        return as;
      }), ae.d(ie, "ShaderMaterial", function() {
        return uo;
      }), ae.d(ie, "PointsMaterial", function() {
        return mo;
      }), ae.d(ie, "MeshPhysicalMaterial", function() {
        return Ca;
      }), ae.d(ie, "MeshStandardMaterial", function() {
        return To;
      }), ae.d(ie, "MeshPhongMaterial", function() {
        return Eo;
      }), ae.d(ie, "MeshToonMaterial", function() {
        return Ia;
      }), ae.d(ie, "MeshNormalMaterial", function() {
        return xa;
      }), ae.d(ie, "MeshLambertMaterial", function() {
        return wa;
      }), ae.d(ie, "MeshDepthMaterial", function() {
        return Ko;
      }), ae.d(ie, "MeshDistanceMaterial", function() {
        return Zo;
      }), ae.d(ie, "MeshBasicMaterial", function() {
        return io;
      }), ae.d(ie, "LineDashedMaterial", function() {
        return ba;
      }), ae.d(ie, "LineBasicMaterial", function() {
        return ei;
      }), ae.d(ie, "Material", function() {
        return Qn;
      }), ae.d(ie, "Float64BufferAttribute", function() {
        return Ss;
      }), ae.d(ie, "Float32BufferAttribute", function() {
        return Pr;
      }), ae.d(ie, "Uint32BufferAttribute", function() {
        return Aa;
      }), ae.d(ie, "Int32BufferAttribute", function() {
        return Qs;
      }), ae.d(ie, "Uint16BufferAttribute", function() {
        return ca;
      }), ae.d(ie, "Int16BufferAttribute", function() {
        return _s;
      }), ae.d(ie, "Uint8ClampedBufferAttribute", function() {
        return bs;
      }), ae.d(ie, "Uint8BufferAttribute", function() {
        return ws;
      }), ae.d(ie, "Int8BufferAttribute", function() {
        return xs;
      }), ae.d(ie, "BufferAttribute", function() {
        return Mn;
      }), ae.d(ie, "ArcCurve", function() {
        return ss;
      }), ae.d(ie, "CatmullRomCurve3", function() {
        return Ui;
      }), ae.d(ie, "CubicBezierCurve", function() {
        return Bo;
      }), ae.d(ie, "CubicBezierCurve3", function() {
        return Ro;
      }), ae.d(ie, "EllipseCurve", function() {
        return ao;
      }), ae.d(ie, "LineCurve", function() {
        return ro;
      }), ae.d(ie, "LineCurve3", function() {
        return vo;
      }), ae.d(ie, "QuadraticBezierCurve", function() {
        return Co;
      }), ae.d(ie, "QuadraticBezierCurve3", function() {
        return Mo;
      }), ae.d(ie, "SplineCurve", function() {
        return Io;
      }), ae.d(ie, "REVISION", function() {
        return le;
      }), ae.d(ie, "MOUSE", function() {
        return de;
      }), ae.d(ie, "CullFaceNone", function() {
        return ye;
      }), ae.d(ie, "CullFaceBack", function() {
        return fe;
      }), ae.d(ie, "CullFaceFront", function() {
        return Be;
      }), ae.d(ie, "CullFaceFrontBack", function() {
        return Ee;
      }), ae.d(ie, "FrontFaceDirectionCW", function() {
        return me;
      }), ae.d(ie, "FrontFaceDirectionCCW", function() {
        return ge;
      }), ae.d(ie, "BasicShadowMap", function() {
        return we;
      }), ae.d(ie, "PCFShadowMap", function() {
        return be;
      }), ae.d(ie, "PCFSoftShadowMap", function() {
        return Oe;
      }), ae.d(ie, "FrontSide", function() {
        return He;
      }), ae.d(ie, "BackSide", function() {
        return Se;
      }), ae.d(ie, "DoubleSide", function() {
        return Ge;
      }), ae.d(ie, "FlatShading", function() {
        return Fe;
      }), ae.d(ie, "SmoothShading", function() {
        return Pe;
      }), ae.d(ie, "NoColors", function() {
        return Je;
      }), ae.d(ie, "FaceColors", function() {
        return tt;
      }), ae.d(ie, "VertexColors", function() {
        return ft;
      }), ae.d(ie, "NoBlending", function() {
        return Tt;
      }), ae.d(ie, "NormalBlending", function() {
        return Xe;
      }), ae.d(ie, "AdditiveBlending", function() {
        return ht;
      }), ae.d(ie, "SubtractiveBlending", function() {
        return Qt;
      }), ae.d(ie, "MultiplyBlending", function() {
        return Gt;
      }), ae.d(ie, "CustomBlending", function() {
        return pt;
      }), ae.d(ie, "AddEquation", function() {
        return xt;
      }), ae.d(ie, "SubtractEquation", function() {
        return Yt;
      }), ae.d(ie, "ReverseSubtractEquation", function() {
        return Jt;
      }), ae.d(ie, "MinEquation", function() {
        return Ht;
      }), ae.d(ie, "MaxEquation", function() {
        return Lt;
      }), ae.d(ie, "ZeroFactor", function() {
        return Pt;
      }), ae.d(ie, "OneFactor", function() {
        return yt;
      }), ae.d(ie, "SrcColorFactor", function() {
        return kt;
      }), ae.d(ie, "OneMinusSrcColorFactor", function() {
        return $t;
      }), ae.d(ie, "SrcAlphaFactor", function() {
        return Le;
      }), ae.d(ie, "OneMinusSrcAlphaFactor", function() {
        return or;
      }), ae.d(ie, "DstAlphaFactor", function() {
        return tr;
      }), ae.d(ie, "OneMinusDstAlphaFactor", function() {
        return lr;
      }), ae.d(ie, "DstColorFactor", function() {
        return gt;
      }), ae.d(ie, "OneMinusDstColorFactor", function() {
        return Ut;
      }), ae.d(ie, "SrcAlphaSaturateFactor", function() {
        return Ze;
      }), ae.d(ie, "NeverDepth", function() {
        return rt;
      }), ae.d(ie, "AlwaysDepth", function() {
        return $e;
      }), ae.d(ie, "LessDepth", function() {
        return Bt;
      }), ae.d(ie, "LessEqualDepth", function() {
        return ct;
      }), ae.d(ie, "EqualDepth", function() {
        return je;
      }), ae.d(ie, "GreaterEqualDepth", function() {
        return _e;
      }), ae.d(ie, "GreaterDepth", function() {
        return Ie;
      }), ae.d(ie, "NotEqualDepth", function() {
        return Ce;
      }), ae.d(ie, "MultiplyOperation", function() {
        return ke;
      }), ae.d(ie, "MixOperation", function() {
        return Ve;
      }), ae.d(ie, "AddOperation", function() {
        return Ke;
      }), ae.d(ie, "NoToneMapping", function() {
        return ot;
      }), ae.d(ie, "LinearToneMapping", function() {
        return St;
      }), ae.d(ie, "ReinhardToneMapping", function() {
        return Vt;
      }), ae.d(ie, "Uncharted2ToneMapping", function() {
        return zt;
      }), ae.d(ie, "CineonToneMapping", function() {
        return Wt;
      }), ae.d(ie, "UVMapping", function() {
        return qe;
      }), ae.d(ie, "CubeReflectionMapping", function() {
        return Te;
      }), ae.d(ie, "CubeRefractionMapping", function() {
        return Re;
      }), ae.d(ie, "EquirectangularReflectionMapping", function() {
        return it;
      }), ae.d(ie, "EquirectangularRefractionMapping", function() {
        return Ct;
      }), ae.d(ie, "SphericalReflectionMapping", function() {
        return Nt;
      }), ae.d(ie, "CubeUVReflectionMapping", function() {
        return Dt;
      }), ae.d(ie, "CubeUVRefractionMapping", function() {
        return Er;
      }), ae.d(ie, "RepeatWrapping", function() {
        return gr;
      }), ae.d(ie, "ClampToEdgeWrapping", function() {
        return Cr;
      }), ae.d(ie, "MirroredRepeatWrapping", function() {
        return mr;
      }), ae.d(ie, "NearestFilter", function() {
        return wr;
      }), ae.d(ie, "NearestMipMapNearestFilter", function() {
        return en;
      }), ae.d(ie, "NearestMipMapLinearFilter", function() {
        return Wn;
      }), ae.d(ie, "LinearFilter", function() {
        return on;
      }), ae.d(ie, "LinearMipMapNearestFilter", function() {
        return qn;
      }), ae.d(ie, "LinearMipMapLinearFilter", function() {
        return $n;
      }), ae.d(ie, "UnsignedByteType", function() {
        return Pn;
      }), ae.d(ie, "ByteType", function() {
        return Un;
      }), ae.d(ie, "ShortType", function() {
        return ai;
      }), ae.d(ie, "UnsignedShortType", function() {
        return pi;
      }), ae.d(ie, "IntType", function() {
        return Wi;
      }), ae.d(ie, "UnsignedIntType", function() {
        return Ti;
      }), ae.d(ie, "FloatType", function() {
        return Hn;
      }), ae.d(ie, "HalfFloatType", function() {
        return Kn;
      }), ae.d(ie, "UnsignedShort4444Type", function() {
        return Ln;
      }), ae.d(ie, "UnsignedShort5551Type", function() {
        return si;
      }), ae.d(ie, "UnsignedShort565Type", function() {
        return gi;
      }), ae.d(ie, "UnsignedInt248Type", function() {
        return mi;
      }), ae.d(ie, "AlphaFormat", function() {
        return Ei;
      }), ae.d(ie, "RGBFormat", function() {
        return Rt;
      }), ae.d(ie, "RGBAFormat", function() {
        return rr;
      }), ae.d(ie, "LuminanceFormat", function() {
        return Mr;
      }), ae.d(ie, "LuminanceAlphaFormat", function() {
        return an;
      }), ae.d(ie, "RGBEFormat", function() {
        return Bn;
      }), ae.d(ie, "DepthFormat", function() {
        return In;
      }), ae.d(ie, "DepthStencilFormat", function() {
        return vn;
      }), ae.d(ie, "RGB_S3TC_DXT1_Format", function() {
        return fn;
      }), ae.d(ie, "RGBA_S3TC_DXT1_Format", function() {
        return _n;
      }), ae.d(ie, "RGBA_S3TC_DXT3_Format", function() {
        return jn;
      }), ae.d(ie, "RGBA_S3TC_DXT5_Format", function() {
        return Zr;
      }), ae.d(ie, "RGB_PVRTC_4BPPV1_Format", function() {
        return Kr;
      }), ae.d(ie, "RGB_PVRTC_2BPPV1_Format", function() {
        return $r;
      }), ae.d(ie, "RGBA_PVRTC_4BPPV1_Format", function() {
        return vt;
      }), ae.d(ie, "RGBA_PVRTC_2BPPV1_Format", function() {
        return Ir;
      }), ae.d(ie, "RGB_ETC1_Format", function() {
        return Kt;
      }), ae.d(ie, "RGBA_ASTC_4x4_Format", function() {
        return Hr;
      }), ae.d(ie, "RGBA_ASTC_5x4_Format", function() {
        return De;
      }), ae.d(ie, "RGBA_ASTC_5x5_Format", function() {
        return We;
      }), ae.d(ie, "RGBA_ASTC_6x5_Format", function() {
        return at;
      }), ae.d(ie, "RGBA_ASTC_6x6_Format", function() {
        return dt;
      }), ae.d(ie, "RGBA_ASTC_8x5_Format", function() {
        return ut;
      }), ae.d(ie, "RGBA_ASTC_8x6_Format", function() {
        return Zt;
      }), ae.d(ie, "RGBA_ASTC_8x8_Format", function() {
        return cr;
      }), ae.d(ie, "RGBA_ASTC_10x5_Format", function() {
        return ar;
      }), ae.d(ie, "RGBA_ASTC_10x6_Format", function() {
        return Sr;
      }), ae.d(ie, "RGBA_ASTC_10x8_Format", function() {
        return jr;
      }), ae.d(ie, "RGBA_ASTC_10x10_Format", function() {
        return Tr;
      }), ae.d(ie, "RGBA_ASTC_12x10_Format", function() {
        return Lr;
      }), ae.d(ie, "RGBA_ASTC_12x12_Format", function() {
        return xn;
      }), ae.d(ie, "LoopOnce", function() {
        return Tn;
      }), ae.d(ie, "LoopRepeat", function() {
        return Nn;
      }), ae.d(ie, "LoopPingPong", function() {
        return Or;
      }), ae.d(ie, "InterpolateDiscrete", function() {
        return qr;
      }), ae.d(ie, "InterpolateLinear", function() {
        return wn;
      }), ae.d(ie, "InterpolateSmooth", function() {
        return dn;
      }), ae.d(ie, "ZeroCurvatureEnding", function() {
        return Xr;
      }), ae.d(ie, "ZeroSlopeEnding", function() {
        return Rn;
      }), ae.d(ie, "WrapAroundEnding", function() {
        return zn;
      }), ae.d(ie, "TrianglesDrawMode", function() {
        return Cn;
      }), ae.d(ie, "TriangleStripDrawMode", function() {
        return Yr;
      }), ae.d(ie, "TriangleFanDrawMode", function() {
        return gn;
      }), ae.d(ie, "LinearEncoding", function() {
        return Yn;
      }), ae.d(ie, "sRGBEncoding", function() {
        return Ci;
      }), ae.d(ie, "GammaEncoding", function() {
        return no;
      }), ae.d(ie, "RGBEEncoding", function() {
        return Po;
      }), ae.d(ie, "LogLuvEncoding", function() {
        return po;
      }), ae.d(ie, "RGBM7Encoding", function() {
        return yi;
      }), ae.d(ie, "RGBM16Encoding", function() {
        return na;
      }), ae.d(ie, "RGBDEncoding", function() {
        return Cs;
      }), ae.d(ie, "BasicDepthPacking", function() {
        return Is;
      }), ae.d(ie, "RGBADepthPacking", function() {
        return Ga;
      }), ae.d(ie, "TangentSpaceNormalMap", function() {
        return Uo;
      }), ae.d(ie, "ObjectSpaceNormalMap", function() {
        return Ho;
      }), ae.d(ie, "CubeGeometry", function() {
        return Ua;
      }), ae.d(ie, "Face4", function() {
        return Pl;
      }), ae.d(ie, "LineStrip", function() {
        return Ul;
      }), ae.d(ie, "LinePieces", function() {
        return Hl;
      }), ae.d(ie, "MeshFaceMaterial", function() {
        return ql;
      }), ae.d(ie, "MultiMaterial", function() {
        return Dl;
      }), ae.d(ie, "PointCloud", function() {
        return $l;
      }), ae.d(ie, "Particle", function() {
        return jl;
      }), ae.d(ie, "ParticleSystem", function() {
        return Yl;
      }), ae.d(ie, "PointCloudMaterial", function() {
        return Vl;
      }), ae.d(ie, "ParticleBasicMaterial", function() {
        return Ll;
      }), ae.d(ie, "ParticleSystemMaterial", function() {
        return zl;
      }), ae.d(ie, "Vertex", function() {
        return Jl;
      }), ae.d(ie, "DynamicBufferAttribute", function() {
        return Wl;
      }), ae.d(ie, "Int8Attribute", function() {
        return Kl;
      }), ae.d(ie, "Uint8Attribute", function() {
        return Zl;
      }), ae.d(ie, "Uint8ClampedAttribute", function() {
        return Xl;
      }), ae.d(ie, "Int16Attribute", function() {
        return ed;
      }), ae.d(ie, "Uint16Attribute", function() {
        return td;
      }), ae.d(ie, "Int32Attribute", function() {
        return rd;
      }), ae.d(ie, "Uint32Attribute", function() {
        return nd;
      }), ae.d(ie, "Float32Attribute", function() {
        return id;
      }), ae.d(ie, "Float64Attribute", function() {
        return od;
      }), ae.d(ie, "ClosedSplineCurve3", function() {
        return ku;
      }), ae.d(ie, "SplineCurve3", function() {
        return Fu;
      }), ae.d(ie, "Spline", function() {
        return FA;
      }), ae.d(ie, "AxisHelper", function() {
        return ad;
      }), ae.d(ie, "BoundingBoxHelper", function() {
        return sd;
      }), ae.d(ie, "EdgesHelper", function() {
        return cd;
      }), ae.d(ie, "WireframeHelper", function() {
        return Ad;
      }), ae.d(ie, "XHRLoader", function() {
        return ud;
      }), ae.d(ie, "BinaryTextureLoader", function() {
        return ld;
      }), ae.d(ie, "GeometryUtils", function() {
        return dd;
      }), ae.d(ie, "Projector", function() {
        return hd;
      }), ae.d(ie, "CanvasRenderer", function() {
        return fd;
      }), ae.d(ie, "SceneUtils", function() {
        return pd;
      }), ae.d(ie, "LensFlare", function() {
        return gd;
      }), Number.EPSILON === void 0 && (Number.EPSILON = Math.pow(2, -52)), Number.isInteger === void 0 && (Number.isInteger = function(Z) {
        return typeof Z == "number" && isFinite(Z) && Math.floor(Z) === Z;
      }), Math.sign === void 0 && (Math.sign = function(Z) {
        return Z < 0 ? -1 : Z > 0 ? 1 : +Z;
      }), !("name" in Function.prototype) && Object.defineProperty(Function.prototype, "name", { get: function() {
        return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
      } }), Object.assign === void 0 && (Object.assign = function(Z) {
        if (Z == null)
          throw new TypeError("Cannot convert undefined or null to object");
        for (var te = Object(Z), oe = 1; oe < arguments.length; oe++) {
          var se = arguments[oe];
          if (se != null)
            for (var Ae in se)
              Object.prototype.hasOwnProperty.call(se, Ae) && (te[Ae] = se[Ae]);
        }
        return te;
      }), Object.assign(ce.prototype, { addEventListener: function(Z, te) {
        this._listeners === void 0 && (this._listeners = {});
        var oe = this._listeners;
        oe[Z] === void 0 && (oe[Z] = []), oe[Z].indexOf(te) === -1 && oe[Z].push(te);
      }, hasEventListener: function(Z, te) {
        if (this._listeners === void 0)
          return !1;
        var oe = this._listeners;
        return oe[Z] !== void 0 && oe[Z].indexOf(te) !== -1;
      }, removeEventListener: function(Z, te) {
        if (this._listeners !== void 0) {
          var oe = this._listeners[Z];
          if (oe !== void 0) {
            var se = oe.indexOf(te);
            se !== -1 && oe.splice(se, 1);
          }
        }
      }, dispatchEvent: function(Z) {
        if (this._listeners !== void 0) {
          var te = this._listeners[Z.type];
          if (te !== void 0) {
            Z.target = this;
            for (var oe = te.slice(0), se = 0, Ae = oe.length; se < Ae; se++)
              oe[se].call(this, Z);
          }
        }
      } });
      var le = "95", de = { LEFT: 0, MIDDLE: 1, RIGHT: 2 }, ye = 0, fe = 1, Be = 2, Ee = 3, me = 0, ge = 1, we = 0, be = 1, Oe = 2, He = 0, Se = 1, Ge = 2, Fe = 1, Pe = 2, Je = 0, tt = 1, ft = 2, Tt = 0, Xe = 1, ht = 2, Qt = 3, Gt = 4, pt = 5, xt = 100, Yt = 101, Jt = 102, Ht = 103, Lt = 104, Pt = 200, yt = 201, kt = 202, $t = 203, Le = 204, or = 205, tr = 206, lr = 207, gt = 208, Ut = 209, Ze = 210, rt = 0, $e = 1, Bt = 2, ct = 3, je = 4, _e = 5, Ie = 6, Ce = 7, ke = 0, Ve = 1, Ke = 2, ot = 0, St = 1, Vt = 2, zt = 3, Wt = 4, qe = 300, Te = 301, Re = 302, it = 303, Ct = 304, Nt = 305, Dt = 306, Er = 307, gr = 1e3, Cr = 1001, mr = 1002, wr = 1003, en = 1004, Wn = 1005, on = 1006, qn = 1007, $n = 1008, Pn = 1009, Un = 1010, ai = 1011, pi = 1012, Wi = 1013, Ti = 1014, Hn = 1015, Kn = 1016, Ln = 1017, si = 1018, gi = 1019, mi = 1020, Ei = 1021, Rt = 1022, rr = 1023, Mr = 1024, an = 1025, Bn = rr, In = 1026, vn = 1027, fn = 33776, _n = 33777, jn = 33778, Zr = 33779, Kr = 35840, $r = 35841, vt = 35842, Ir = 35843, Kt = 36196, Hr = 37808, De = 37809, We = 37810, at = 37811, dt = 37812, ut = 37813, Zt = 37814, cr = 37815, ar = 37816, Sr = 37817, jr = 37818, Tr = 37819, Lr = 37820, xn = 37821, Tn = 2200, Nn = 2201, Or = 2202, qr = 2300, wn = 2301, dn = 2302, Xr = 2400, Rn = 2401, zn = 2402, Cn = 0, Yr = 1, gn = 2, Yn = 3e3, Ci = 3001, no = 3007, Po = 3002, po = 3003, yi = 3004, na = 3005, Cs = 3006, Is = 3200, Ga = 3201, Uo = 0, Ho = 1, bn = { DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: function() {
        for (var Z = [], te = 0; te < 256; te++)
          Z[te] = (te < 16 ? "0" : "") + te.toString(16);
        return function() {
          var oe = 4294967295 * Math.random() | 0, se = 4294967295 * Math.random() | 0, Ae = 4294967295 * Math.random() | 0, ue = 4294967295 * Math.random() | 0;
          return (Z[255 & oe] + Z[oe >> 8 & 255] + Z[oe >> 16 & 255] + Z[oe >> 24 & 255] + "-" + Z[255 & se] + Z[se >> 8 & 255] + "-" + Z[se >> 16 & 15 | 64] + Z[se >> 24 & 255] + "-" + Z[63 & Ae | 128] + Z[Ae >> 8 & 255] + "-" + Z[Ae >> 16 & 255] + Z[Ae >> 24 & 255] + Z[255 & ue] + Z[ue >> 8 & 255] + Z[ue >> 16 & 255] + Z[ue >> 24 & 255]).toUpperCase();
        };
      }(), clamp: function(Z, te, oe) {
        return Math.max(te, Math.min(oe, Z));
      }, euclideanModulo: function(Z, te) {
        return (Z % te + te) % te;
      }, mapLinear: function(Z, te, oe, se, Ae) {
        return se + (Z - te) * (Ae - se) / (oe - te);
      }, lerp: function(Z, te, oe) {
        return (1 - oe) * Z + oe * te;
      }, smoothstep: function(Z, te, oe) {
        return Z <= te ? 0 : Z >= oe ? 1 : (Z = (Z - te) / (oe - te)) * Z * (3 - 2 * Z);
      }, smootherstep: function(Z, te, oe) {
        return Z <= te ? 0 : Z >= oe ? 1 : (Z = (Z - te) / (oe - te)) * Z * Z * (Z * (6 * Z - 15) + 10);
      }, randInt: function(Z, te) {
        return Z + Math.floor(Math.random() * (te - Z + 1));
      }, randFloat: function(Z, te) {
        return Z + Math.random() * (te - Z);
      }, randFloatSpread: function(Z) {
        return Z * (0.5 - Math.random());
      }, degToRad: function(Z) {
        return Z * bn.DEG2RAD;
      }, radToDeg: function(Z) {
        return Z * bn.RAD2DEG;
      }, isPowerOfTwo: function(Z) {
        return (Z & Z - 1) == 0 && Z !== 0;
      }, ceilPowerOfTwo: function(Z) {
        return Math.pow(2, Math.ceil(Math.log(Z) / Math.LN2));
      }, floorPowerOfTwo: function(Z) {
        return Math.pow(2, Math.floor(Math.log(Z) / Math.LN2));
      } };
      function xr(Z, te) {
        this.x = Z || 0, this.y = te || 0;
      }
      function pn() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
      }
      function ci(Z, te, oe, se) {
        this._x = Z || 0, this._y = te || 0, this._z = oe || 0, this._w = se !== void 0 ? se : 1;
      }
      function mt(Z, te, oe) {
        this.x = Z || 0, this.y = te || 0, this.z = oe || 0;
      }
      function Vi() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
      }
      Object.defineProperties(xr.prototype, { width: { get: function() {
        return this.x;
      }, set: function(Z) {
        this.x = Z;
      } }, height: { get: function() {
        return this.y;
      }, set: function(Z) {
        this.y = Z;
      } } }), Object.assign(xr.prototype, { isVector2: !0, set: function(Z, te) {
        return this.x = Z, this.y = te, this;
      }, setScalar: function(Z) {
        return this.x = Z, this.y = Z, this;
      }, setX: function(Z) {
        return this.x = Z, this;
      }, setY: function(Z) {
        return this.y = Z, this;
      }, setComponent: function(Z, te) {
        switch (Z) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          default:
            throw new Error("index is out of range: " + Z);
        }
        return this;
      }, getComponent: function(Z) {
        switch (Z) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          default:
            throw new Error("index is out of range: " + Z);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y);
      }, copy: function(Z) {
        return this.x = Z.x, this.y = Z.y, this;
      }, add: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Z, te)) : (this.x += Z.x, this.y += Z.y, this);
      }, addScalar: function(Z) {
        return this.x += Z, this.y += Z, this;
      }, addVectors: function(Z, te) {
        return this.x = Z.x + te.x, this.y = Z.y + te.y, this;
      }, addScaledVector: function(Z, te) {
        return this.x += Z.x * te, this.y += Z.y * te, this;
      }, sub: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Z, te)) : (this.x -= Z.x, this.y -= Z.y, this);
      }, subScalar: function(Z) {
        return this.x -= Z, this.y -= Z, this;
      }, subVectors: function(Z, te) {
        return this.x = Z.x - te.x, this.y = Z.y - te.y, this;
      }, multiply: function(Z) {
        return this.x *= Z.x, this.y *= Z.y, this;
      }, multiplyScalar: function(Z) {
        return this.x *= Z, this.y *= Z, this;
      }, divide: function(Z) {
        return this.x /= Z.x, this.y /= Z.y, this;
      }, divideScalar: function(Z) {
        return this.multiplyScalar(1 / Z);
      }, applyMatrix3: function(Z) {
        var te = this.x, oe = this.y, se = Z.elements;
        return this.x = se[0] * te + se[3] * oe + se[6], this.y = se[1] * te + se[4] * oe + se[7], this;
      }, min: function(Z) {
        return this.x = Math.min(this.x, Z.x), this.y = Math.min(this.y, Z.y), this;
      }, max: function(Z) {
        return this.x = Math.max(this.x, Z.x), this.y = Math.max(this.y, Z.y), this;
      }, clamp: function(Z, te) {
        return this.x = Math.max(Z.x, Math.min(te.x, this.x)), this.y = Math.max(Z.y, Math.min(te.y, this.y)), this;
      }, clampScalar: function() {
        var Z = new xr(), te = new xr();
        return function(oe, se) {
          return Z.set(oe, oe), te.set(se, se), this.clamp(Z, te);
        };
      }(), clampLength: function(Z, te) {
        var oe = this.length();
        return this.divideScalar(oe || 1).multiplyScalar(Math.max(Z, Math.min(te, oe)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this;
      }, dot: function(Z) {
        return this.x * Z.x + this.y * Z.y;
      }, cross: function(Z) {
        return this.x * Z.y - this.y * Z.x;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, angle: function() {
        var Z = Math.atan2(this.y, this.x);
        return Z < 0 && (Z += 2 * Math.PI), Z;
      }, distanceTo: function(Z) {
        return Math.sqrt(this.distanceToSquared(Z));
      }, distanceToSquared: function(Z) {
        var te = this.x - Z.x, oe = this.y - Z.y;
        return te * te + oe * oe;
      }, manhattanDistanceTo: function(Z) {
        return Math.abs(this.x - Z.x) + Math.abs(this.y - Z.y);
      }, setLength: function(Z) {
        return this.normalize().multiplyScalar(Z);
      }, lerp: function(Z, te) {
        return this.x += (Z.x - this.x) * te, this.y += (Z.y - this.y) * te, this;
      }, lerpVectors: function(Z, te, oe) {
        return this.subVectors(te, Z).multiplyScalar(oe).add(Z);
      }, equals: function(Z) {
        return Z.x === this.x && Z.y === this.y;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this.x = Z[te], this.y = Z[te + 1], this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this.x, Z[te + 1] = this.y, Z;
      }, fromBufferAttribute: function(Z, te, oe) {
        return oe !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = Z.getX(te), this.y = Z.getY(te), this;
      }, rotateAround: function(Z, te) {
        var oe = Math.cos(te), se = Math.sin(te), Ae = this.x - Z.x, ue = this.y - Z.y;
        return this.x = Ae * oe - ue * se + Z.x, this.y = Ae * se + ue * oe + Z.y, this;
      } }), Object.assign(pn.prototype, { isMatrix4: !0, set: function(Z, te, oe, se, Ae, ue, he, pe, ve, xe, Me, Ne, Qe, Ue, ze, et) {
        var nt = this.elements;
        return nt[0] = Z, nt[4] = te, nt[8] = oe, nt[12] = se, nt[1] = Ae, nt[5] = ue, nt[9] = he, nt[13] = pe, nt[2] = ve, nt[6] = xe, nt[10] = Me, nt[14] = Ne, nt[3] = Qe, nt[7] = Ue, nt[11] = ze, nt[15] = et, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, clone: function() {
        return new pn().fromArray(this.elements);
      }, copy: function(Z) {
        var te = this.elements, oe = Z.elements;
        return te[0] = oe[0], te[1] = oe[1], te[2] = oe[2], te[3] = oe[3], te[4] = oe[4], te[5] = oe[5], te[6] = oe[6], te[7] = oe[7], te[8] = oe[8], te[9] = oe[9], te[10] = oe[10], te[11] = oe[11], te[12] = oe[12], te[13] = oe[13], te[14] = oe[14], te[15] = oe[15], this;
      }, copyPosition: function(Z) {
        var te = this.elements, oe = Z.elements;
        return te[12] = oe[12], te[13] = oe[13], te[14] = oe[14], this;
      }, extractBasis: function(Z, te, oe) {
        return Z.setFromMatrixColumn(this, 0), te.setFromMatrixColumn(this, 1), oe.setFromMatrixColumn(this, 2), this;
      }, makeBasis: function(Z, te, oe) {
        return this.set(Z.x, te.x, oe.x, 0, Z.y, te.y, oe.y, 0, Z.z, te.z, oe.z, 0, 0, 0, 0, 1), this;
      }, extractRotation: function() {
        var Z = new mt();
        return function(te) {
          var oe = this.elements, se = te.elements, Ae = 1 / Z.setFromMatrixColumn(te, 0).length(), ue = 1 / Z.setFromMatrixColumn(te, 1).length(), he = 1 / Z.setFromMatrixColumn(te, 2).length();
          return oe[0] = se[0] * Ae, oe[1] = se[1] * Ae, oe[2] = se[2] * Ae, oe[3] = 0, oe[4] = se[4] * ue, oe[5] = se[5] * ue, oe[6] = se[6] * ue, oe[7] = 0, oe[8] = se[8] * he, oe[9] = se[9] * he, oe[10] = se[10] * he, oe[11] = 0, oe[12] = 0, oe[13] = 0, oe[14] = 0, oe[15] = 1, this;
        };
      }(), makeRotationFromEuler: function(Z) {
        Z && Z.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var te = this.elements, oe = Z.x, se = Z.y, Ae = Z.z, ue = Math.cos(oe), he = Math.sin(oe), pe = Math.cos(se), ve = Math.sin(se), xe = Math.cos(Ae), Me = Math.sin(Ae);
        if (Z.order === "XYZ") {
          var Ne = ue * xe, Qe = ue * Me, Ue = he * xe, ze = he * Me;
          te[0] = pe * xe, te[4] = -pe * Me, te[8] = ve, te[1] = Qe + Ue * ve, te[5] = Ne - ze * ve, te[9] = -he * pe, te[2] = ze - Ne * ve, te[6] = Ue + Qe * ve, te[10] = ue * pe;
        } else if (Z.order === "YXZ") {
          var et = pe * xe, nt = pe * Me, At = ve * xe, Et = ve * Me;
          te[0] = et + Et * he, te[4] = At * he - nt, te[8] = ue * ve, te[1] = ue * Me, te[5] = ue * xe, te[9] = -he, te[2] = nt * he - At, te[6] = Et + et * he, te[10] = ue * pe;
        } else if (Z.order === "ZXY")
          et = pe * xe, nt = pe * Me, At = ve * xe, Et = ve * Me, te[0] = et - Et * he, te[4] = -ue * Me, te[8] = At + nt * he, te[1] = nt + At * he, te[5] = ue * xe, te[9] = Et - et * he, te[2] = -ue * ve, te[6] = he, te[10] = ue * pe;
        else if (Z.order === "ZYX")
          Ne = ue * xe, Qe = ue * Me, Ue = he * xe, ze = he * Me, te[0] = pe * xe, te[4] = Ue * ve - Qe, te[8] = Ne * ve + ze, te[1] = pe * Me, te[5] = ze * ve + Ne, te[9] = Qe * ve - Ue, te[2] = -ve, te[6] = he * pe, te[10] = ue * pe;
        else if (Z.order === "YZX") {
          var st = ue * pe, Mt = ue * ve, Ft = he * pe, lt = he * ve;
          te[0] = pe * xe, te[4] = lt - st * Me, te[8] = Ft * Me + Mt, te[1] = Me, te[5] = ue * xe, te[9] = -he * xe, te[2] = -ve * xe, te[6] = Mt * Me + Ft, te[10] = st - lt * Me;
        } else
          Z.order === "XZY" && (st = ue * pe, Mt = ue * ve, Ft = he * pe, lt = he * ve, te[0] = pe * xe, te[4] = -Me, te[8] = ve * xe, te[1] = st * Me + lt, te[5] = ue * xe, te[9] = Mt * Me - Ft, te[2] = Ft * Me - Mt, te[6] = he * xe, te[10] = lt * Me + st);
        return te[3] = 0, te[7] = 0, te[11] = 0, te[12] = 0, te[13] = 0, te[14] = 0, te[15] = 1, this;
      }, makeRotationFromQuaternion: function() {
        var Z = new mt(0, 0, 0), te = new mt(1, 1, 1);
        return function(oe) {
          return this.compose(Z, oe, te);
        };
      }(), lookAt: function() {
        var Z = new mt(), te = new mt(), oe = new mt();
        return function(se, Ae, ue) {
          var he = this.elements;
          return oe.subVectors(se, Ae), oe.lengthSq() === 0 && (oe.z = 1), oe.normalize(), Z.crossVectors(ue, oe), Z.lengthSq() === 0 && (Math.abs(ue.z) === 1 ? oe.x += 1e-4 : oe.z += 1e-4, oe.normalize(), Z.crossVectors(ue, oe)), Z.normalize(), te.crossVectors(oe, Z), he[0] = Z.x, he[4] = te.x, he[8] = oe.x, he[1] = Z.y, he[5] = te.y, he[9] = oe.y, he[2] = Z.z, he[6] = te.z, he[10] = oe.z, this;
        };
      }(), multiply: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(Z, te)) : this.multiplyMatrices(this, Z);
      }, premultiply: function(Z) {
        return this.multiplyMatrices(Z, this);
      }, multiplyMatrices: function(Z, te) {
        var oe = Z.elements, se = te.elements, Ae = this.elements, ue = oe[0], he = oe[4], pe = oe[8], ve = oe[12], xe = oe[1], Me = oe[5], Ne = oe[9], Qe = oe[13], Ue = oe[2], ze = oe[6], et = oe[10], nt = oe[14], At = oe[3], Et = oe[7], st = oe[11], Mt = oe[15], Ft = se[0], lt = se[4], wt = se[8], jt = se[12], Ot = se[1], er = se[5], qt = se[9], ir = se[13], dr = se[2], yr = se[6], pr = se[10], Fr = se[14], Rr = se[3], fr = se[7], br = se[11], ur = se[15];
        return Ae[0] = ue * Ft + he * Ot + pe * dr + ve * Rr, Ae[4] = ue * lt + he * er + pe * yr + ve * fr, Ae[8] = ue * wt + he * qt + pe * pr + ve * br, Ae[12] = ue * jt + he * ir + pe * Fr + ve * ur, Ae[1] = xe * Ft + Me * Ot + Ne * dr + Qe * Rr, Ae[5] = xe * lt + Me * er + Ne * yr + Qe * fr, Ae[9] = xe * wt + Me * qt + Ne * pr + Qe * br, Ae[13] = xe * jt + Me * ir + Ne * Fr + Qe * ur, Ae[2] = Ue * Ft + ze * Ot + et * dr + nt * Rr, Ae[6] = Ue * lt + ze * er + et * yr + nt * fr, Ae[10] = Ue * wt + ze * qt + et * pr + nt * br, Ae[14] = Ue * jt + ze * ir + et * Fr + nt * ur, Ae[3] = At * Ft + Et * Ot + st * dr + Mt * Rr, Ae[7] = At * lt + Et * er + st * yr + Mt * fr, Ae[11] = At * wt + Et * qt + st * pr + Mt * br, Ae[15] = At * jt + Et * ir + st * Fr + Mt * ur, this;
      }, multiplyScalar: function(Z) {
        var te = this.elements;
        return te[0] *= Z, te[4] *= Z, te[8] *= Z, te[12] *= Z, te[1] *= Z, te[5] *= Z, te[9] *= Z, te[13] *= Z, te[2] *= Z, te[6] *= Z, te[10] *= Z, te[14] *= Z, te[3] *= Z, te[7] *= Z, te[11] *= Z, te[15] *= Z, this;
      }, applyToBufferAttribute: function() {
        var Z = new mt();
        return function(te) {
          for (var oe = 0, se = te.count; oe < se; oe++)
            Z.x = te.getX(oe), Z.y = te.getY(oe), Z.z = te.getZ(oe), Z.applyMatrix4(this), te.setXYZ(oe, Z.x, Z.y, Z.z);
          return te;
        };
      }(), determinant: function() {
        var Z = this.elements, te = Z[0], oe = Z[4], se = Z[8], Ae = Z[12], ue = Z[1], he = Z[5], pe = Z[9], ve = Z[13], xe = Z[2], Me = Z[6], Ne = Z[10], Qe = Z[14];
        return Z[3] * (+Ae * pe * Me - se * ve * Me - Ae * he * Ne + oe * ve * Ne + se * he * Qe - oe * pe * Qe) + Z[7] * (+te * pe * Qe - te * ve * Ne + Ae * ue * Ne - se * ue * Qe + se * ve * xe - Ae * pe * xe) + Z[11] * (+te * ve * Me - te * he * Qe - Ae * ue * Me + oe * ue * Qe + Ae * he * xe - oe * ve * xe) + Z[15] * (-se * he * xe - te * pe * Me + te * he * Ne + se * ue * Me - oe * ue * Ne + oe * pe * xe);
      }, transpose: function() {
        var Z, te = this.elements;
        return Z = te[1], te[1] = te[4], te[4] = Z, Z = te[2], te[2] = te[8], te[8] = Z, Z = te[6], te[6] = te[9], te[9] = Z, Z = te[3], te[3] = te[12], te[12] = Z, Z = te[7], te[7] = te[13], te[13] = Z, Z = te[11], te[11] = te[14], te[14] = Z, this;
      }, setPosition: function(Z) {
        var te = this.elements;
        return te[12] = Z.x, te[13] = Z.y, te[14] = Z.z, this;
      }, getInverse: function(Z, te) {
        var oe = this.elements, se = Z.elements, Ae = se[0], ue = se[1], he = se[2], pe = se[3], ve = se[4], xe = se[5], Me = se[6], Ne = se[7], Qe = se[8], Ue = se[9], ze = se[10], et = se[11], nt = se[12], At = se[13], Et = se[14], st = se[15], Mt = Ue * Et * Ne - At * ze * Ne + At * Me * et - xe * Et * et - Ue * Me * st + xe * ze * st, Ft = nt * ze * Ne - Qe * Et * Ne - nt * Me * et + ve * Et * et + Qe * Me * st - ve * ze * st, lt = Qe * At * Ne - nt * Ue * Ne + nt * xe * et - ve * At * et - Qe * xe * st + ve * Ue * st, wt = nt * Ue * Me - Qe * At * Me - nt * xe * ze + ve * At * ze + Qe * xe * Et - ve * Ue * Et, jt = Ae * Mt + ue * Ft + he * lt + pe * wt;
        if (jt === 0) {
          var Ot = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
          if (te === !0)
            throw new Error(Ot);
          return console.warn(Ot), this.identity();
        }
        var er = 1 / jt;
        return oe[0] = Mt * er, oe[1] = (At * ze * pe - Ue * Et * pe - At * he * et + ue * Et * et + Ue * he * st - ue * ze * st) * er, oe[2] = (xe * Et * pe - At * Me * pe + At * he * Ne - ue * Et * Ne - xe * he * st + ue * Me * st) * er, oe[3] = (Ue * Me * pe - xe * ze * pe - Ue * he * Ne + ue * ze * Ne + xe * he * et - ue * Me * et) * er, oe[4] = Ft * er, oe[5] = (Qe * Et * pe - nt * ze * pe + nt * he * et - Ae * Et * et - Qe * he * st + Ae * ze * st) * er, oe[6] = (nt * Me * pe - ve * Et * pe - nt * he * Ne + Ae * Et * Ne + ve * he * st - Ae * Me * st) * er, oe[7] = (ve * ze * pe - Qe * Me * pe + Qe * he * Ne - Ae * ze * Ne - ve * he * et + Ae * Me * et) * er, oe[8] = lt * er, oe[9] = (nt * Ue * pe - Qe * At * pe - nt * ue * et + Ae * At * et + Qe * ue * st - Ae * Ue * st) * er, oe[10] = (ve * At * pe - nt * xe * pe + nt * ue * Ne - Ae * At * Ne - ve * ue * st + Ae * xe * st) * er, oe[11] = (Qe * xe * pe - ve * Ue * pe - Qe * ue * Ne + Ae * Ue * Ne + ve * ue * et - Ae * xe * et) * er, oe[12] = wt * er, oe[13] = (Qe * At * he - nt * Ue * he + nt * ue * ze - Ae * At * ze - Qe * ue * Et + Ae * Ue * Et) * er, oe[14] = (nt * xe * he - ve * At * he - nt * ue * Me + Ae * At * Me + ve * ue * Et - Ae * xe * Et) * er, oe[15] = (ve * Ue * he - Qe * xe * he + Qe * ue * Me - Ae * Ue * Me - ve * ue * ze + Ae * xe * ze) * er, this;
      }, scale: function(Z) {
        var te = this.elements, oe = Z.x, se = Z.y, Ae = Z.z;
        return te[0] *= oe, te[4] *= se, te[8] *= Ae, te[1] *= oe, te[5] *= se, te[9] *= Ae, te[2] *= oe, te[6] *= se, te[10] *= Ae, te[3] *= oe, te[7] *= se, te[11] *= Ae, this;
      }, getMaxScaleOnAxis: function() {
        var Z = this.elements, te = Z[0] * Z[0] + Z[1] * Z[1] + Z[2] * Z[2], oe = Z[4] * Z[4] + Z[5] * Z[5] + Z[6] * Z[6], se = Z[8] * Z[8] + Z[9] * Z[9] + Z[10] * Z[10];
        return Math.sqrt(Math.max(te, oe, se));
      }, makeTranslation: function(Z, te, oe) {
        return this.set(1, 0, 0, Z, 0, 1, 0, te, 0, 0, 1, oe, 0, 0, 0, 1), this;
      }, makeRotationX: function(Z) {
        var te = Math.cos(Z), oe = Math.sin(Z);
        return this.set(1, 0, 0, 0, 0, te, -oe, 0, 0, oe, te, 0, 0, 0, 0, 1), this;
      }, makeRotationY: function(Z) {
        var te = Math.cos(Z), oe = Math.sin(Z);
        return this.set(te, 0, oe, 0, 0, 1, 0, 0, -oe, 0, te, 0, 0, 0, 0, 1), this;
      }, makeRotationZ: function(Z) {
        var te = Math.cos(Z), oe = Math.sin(Z);
        return this.set(te, -oe, 0, 0, oe, te, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, makeRotationAxis: function(Z, te) {
        var oe = Math.cos(te), se = Math.sin(te), Ae = 1 - oe, ue = Z.x, he = Z.y, pe = Z.z, ve = Ae * ue, xe = Ae * he;
        return this.set(ve * ue + oe, ve * he - se * pe, ve * pe + se * he, 0, ve * he + se * pe, xe * he + oe, xe * pe - se * ue, 0, ve * pe - se * he, xe * pe + se * ue, Ae * pe * pe + oe, 0, 0, 0, 0, 1), this;
      }, makeScale: function(Z, te, oe) {
        return this.set(Z, 0, 0, 0, 0, te, 0, 0, 0, 0, oe, 0, 0, 0, 0, 1), this;
      }, makeShear: function(Z, te, oe) {
        return this.set(1, te, oe, 0, Z, 1, oe, 0, Z, te, 1, 0, 0, 0, 0, 1), this;
      }, compose: function(Z, te, oe) {
        var se = this.elements, Ae = te._x, ue = te._y, he = te._z, pe = te._w, ve = Ae + Ae, xe = ue + ue, Me = he + he, Ne = Ae * ve, Qe = Ae * xe, Ue = Ae * Me, ze = ue * xe, et = ue * Me, nt = he * Me, At = pe * ve, Et = pe * xe, st = pe * Me, Mt = oe.x, Ft = oe.y, lt = oe.z;
        return se[0] = (1 - (ze + nt)) * Mt, se[1] = (Qe + st) * Mt, se[2] = (Ue - Et) * Mt, se[3] = 0, se[4] = (Qe - st) * Ft, se[5] = (1 - (Ne + nt)) * Ft, se[6] = (et + At) * Ft, se[7] = 0, se[8] = (Ue + Et) * lt, se[9] = (et - At) * lt, se[10] = (1 - (Ne + ze)) * lt, se[11] = 0, se[12] = Z.x, se[13] = Z.y, se[14] = Z.z, se[15] = 1, this;
      }, decompose: function() {
        var Z = new mt(), te = new pn();
        return function(oe, se, Ae) {
          var ue = this.elements, he = Z.set(ue[0], ue[1], ue[2]).length(), pe = Z.set(ue[4], ue[5], ue[6]).length(), ve = Z.set(ue[8], ue[9], ue[10]).length();
          this.determinant() < 0 && (he = -he), oe.x = ue[12], oe.y = ue[13], oe.z = ue[14], te.copy(this);
          var xe = 1 / he, Me = 1 / pe, Ne = 1 / ve;
          return te.elements[0] *= xe, te.elements[1] *= xe, te.elements[2] *= xe, te.elements[4] *= Me, te.elements[5] *= Me, te.elements[6] *= Me, te.elements[8] *= Ne, te.elements[9] *= Ne, te.elements[10] *= Ne, se.setFromRotationMatrix(te), Ae.x = he, Ae.y = pe, Ae.z = ve, this;
        };
      }(), makePerspective: function(Z, te, oe, se, Ae, ue) {
        ue === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        var he = this.elements, pe = 2 * Ae / (te - Z), ve = 2 * Ae / (oe - se), xe = (te + Z) / (te - Z), Me = (oe + se) / (oe - se), Ne = -(ue + Ae) / (ue - Ae), Qe = -2 * ue * Ae / (ue - Ae);
        return he[0] = pe, he[4] = 0, he[8] = xe, he[12] = 0, he[1] = 0, he[5] = ve, he[9] = Me, he[13] = 0, he[2] = 0, he[6] = 0, he[10] = Ne, he[14] = Qe, he[3] = 0, he[7] = 0, he[11] = -1, he[15] = 0, this;
      }, makeOrthographic: function(Z, te, oe, se, Ae, ue) {
        var he = this.elements, pe = 1 / (te - Z), ve = 1 / (oe - se), xe = 1 / (ue - Ae), Me = (te + Z) * pe, Ne = (oe + se) * ve, Qe = (ue + Ae) * xe;
        return he[0] = 2 * pe, he[4] = 0, he[8] = 0, he[12] = -Me, he[1] = 0, he[5] = 2 * ve, he[9] = 0, he[13] = -Ne, he[2] = 0, he[6] = 0, he[10] = -2 * xe, he[14] = -Qe, he[3] = 0, he[7] = 0, he[11] = 0, he[15] = 1, this;
      }, equals: function(Z) {
        for (var te = this.elements, oe = Z.elements, se = 0; se < 16; se++)
          if (te[se] !== oe[se])
            return !1;
        return !0;
      }, fromArray: function(Z, te) {
        te === void 0 && (te = 0);
        for (var oe = 0; oe < 16; oe++)
          this.elements[oe] = Z[oe + te];
        return this;
      }, toArray: function(Z, te) {
        Z === void 0 && (Z = []), te === void 0 && (te = 0);
        var oe = this.elements;
        return Z[te] = oe[0], Z[te + 1] = oe[1], Z[te + 2] = oe[2], Z[te + 3] = oe[3], Z[te + 4] = oe[4], Z[te + 5] = oe[5], Z[te + 6] = oe[6], Z[te + 7] = oe[7], Z[te + 8] = oe[8], Z[te + 9] = oe[9], Z[te + 10] = oe[10], Z[te + 11] = oe[11], Z[te + 12] = oe[12], Z[te + 13] = oe[13], Z[te + 14] = oe[14], Z[te + 15] = oe[15], Z;
      } }), Object.assign(ci, { slerp: function(Z, te, oe, se) {
        return oe.copy(Z).slerp(te, se);
      }, slerpFlat: function(Z, te, oe, se, Ae, ue, he) {
        var pe = oe[se + 0], ve = oe[se + 1], xe = oe[se + 2], Me = oe[se + 3], Ne = Ae[ue + 0], Qe = Ae[ue + 1], Ue = Ae[ue + 2], ze = Ae[ue + 3];
        if (Me !== ze || pe !== Ne || ve !== Qe || xe !== Ue) {
          var et = 1 - he, nt = pe * Ne + ve * Qe + xe * Ue + Me * ze, At = nt >= 0 ? 1 : -1, Et = 1 - nt * nt;
          if (Et > Number.EPSILON) {
            var st = Math.sqrt(Et), Mt = Math.atan2(st, nt * At);
            et = Math.sin(et * Mt) / st, he = Math.sin(he * Mt) / st;
          }
          var Ft = he * At;
          if (pe = pe * et + Ne * Ft, ve = ve * et + Qe * Ft, xe = xe * et + Ue * Ft, Me = Me * et + ze * Ft, et === 1 - he) {
            var lt = 1 / Math.sqrt(pe * pe + ve * ve + xe * xe + Me * Me);
            pe *= lt, ve *= lt, xe *= lt, Me *= lt;
          }
        }
        Z[te] = pe, Z[te + 1] = ve, Z[te + 2] = xe, Z[te + 3] = Me;
      } }), Object.defineProperties(ci.prototype, { x: { get: function() {
        return this._x;
      }, set: function(Z) {
        this._x = Z, this.onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(Z) {
        this._y = Z, this.onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(Z) {
        this._z = Z, this.onChangeCallback();
      } }, w: { get: function() {
        return this._w;
      }, set: function(Z) {
        this._w = Z, this.onChangeCallback();
      } } }), Object.assign(ci.prototype, { set: function(Z, te, oe, se) {
        return this._x = Z, this._y = te, this._z = oe, this._w = se, this.onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._w);
      }, copy: function(Z) {
        return this._x = Z.x, this._y = Z.y, this._z = Z.z, this._w = Z.w, this.onChangeCallback(), this;
      }, setFromEuler: function(Z, te) {
        if (!Z || !Z.isEuler)
          throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        var oe = Z._x, se = Z._y, Ae = Z._z, ue = Z.order, he = Math.cos, pe = Math.sin, ve = he(oe / 2), xe = he(se / 2), Me = he(Ae / 2), Ne = pe(oe / 2), Qe = pe(se / 2), Ue = pe(Ae / 2);
        return ue === "XYZ" ? (this._x = Ne * xe * Me + ve * Qe * Ue, this._y = ve * Qe * Me - Ne * xe * Ue, this._z = ve * xe * Ue + Ne * Qe * Me, this._w = ve * xe * Me - Ne * Qe * Ue) : ue === "YXZ" ? (this._x = Ne * xe * Me + ve * Qe * Ue, this._y = ve * Qe * Me - Ne * xe * Ue, this._z = ve * xe * Ue - Ne * Qe * Me, this._w = ve * xe * Me + Ne * Qe * Ue) : ue === "ZXY" ? (this._x = Ne * xe * Me - ve * Qe * Ue, this._y = ve * Qe * Me + Ne * xe * Ue, this._z = ve * xe * Ue + Ne * Qe * Me, this._w = ve * xe * Me - Ne * Qe * Ue) : ue === "ZYX" ? (this._x = Ne * xe * Me - ve * Qe * Ue, this._y = ve * Qe * Me + Ne * xe * Ue, this._z = ve * xe * Ue - Ne * Qe * Me, this._w = ve * xe * Me + Ne * Qe * Ue) : ue === "YZX" ? (this._x = Ne * xe * Me + ve * Qe * Ue, this._y = ve * Qe * Me + Ne * xe * Ue, this._z = ve * xe * Ue - Ne * Qe * Me, this._w = ve * xe * Me - Ne * Qe * Ue) : ue === "XZY" && (this._x = Ne * xe * Me - ve * Qe * Ue, this._y = ve * Qe * Me - Ne * xe * Ue, this._z = ve * xe * Ue + Ne * Qe * Me, this._w = ve * xe * Me + Ne * Qe * Ue), te !== !1 && this.onChangeCallback(), this;
      }, setFromAxisAngle: function(Z, te) {
        var oe = te / 2, se = Math.sin(oe);
        return this._x = Z.x * se, this._y = Z.y * se, this._z = Z.z * se, this._w = Math.cos(oe), this.onChangeCallback(), this;
      }, setFromRotationMatrix: function(Z) {
        var te, oe = Z.elements, se = oe[0], Ae = oe[4], ue = oe[8], he = oe[1], pe = oe[5], ve = oe[9], xe = oe[2], Me = oe[6], Ne = oe[10], Qe = se + pe + Ne;
        return Qe > 0 ? (te = 0.5 / Math.sqrt(Qe + 1), this._w = 0.25 / te, this._x = (Me - ve) * te, this._y = (ue - xe) * te, this._z = (he - Ae) * te) : se > pe && se > Ne ? (te = 2 * Math.sqrt(1 + se - pe - Ne), this._w = (Me - ve) / te, this._x = 0.25 * te, this._y = (Ae + he) / te, this._z = (ue + xe) / te) : pe > Ne ? (te = 2 * Math.sqrt(1 + pe - se - Ne), this._w = (ue - xe) / te, this._x = (Ae + he) / te, this._y = 0.25 * te, this._z = (ve + Me) / te) : (te = 2 * Math.sqrt(1 + Ne - se - pe), this._w = (he - Ae) / te, this._x = (ue + xe) / te, this._y = (ve + Me) / te, this._z = 0.25 * te), this.onChangeCallback(), this;
      }, setFromUnitVectors: function() {
        var Z, te = new mt();
        return function(oe, se) {
          return te === void 0 && (te = new mt()), (Z = oe.dot(se) + 1) < 1e-6 ? (Z = 0, Math.abs(oe.x) > Math.abs(oe.z) ? te.set(-oe.y, oe.x, 0) : te.set(0, -oe.z, oe.y)) : te.crossVectors(oe, se), this._x = te.x, this._y = te.y, this._z = te.z, this._w = Z, this.normalize();
        };
      }(), angleTo: function(Z) {
        return 2 * Math.acos(Math.abs(bn.clamp(this.dot(Z), -1, 1)));
      }, rotateTowards: function(Z, te) {
        var oe = this.angleTo(Z);
        if (oe === 0)
          return this;
        var se = Math.min(1, te / oe);
        return this.slerp(Z, se), this;
      }, inverse: function() {
        return this.conjugate();
      }, conjugate: function() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this;
      }, dot: function(Z) {
        return this._x * Z._x + this._y * Z._y + this._z * Z._z + this._w * Z._w;
      }, lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
      }, length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
      }, normalize: function() {
        var Z = this.length();
        return Z === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (Z = 1 / Z, this._x = this._x * Z, this._y = this._y * Z, this._z = this._z * Z, this._w = this._w * Z), this.onChangeCallback(), this;
      }, multiply: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(Z, te)) : this.multiplyQuaternions(this, Z);
      }, premultiply: function(Z) {
        return this.multiplyQuaternions(Z, this);
      }, multiplyQuaternions: function(Z, te) {
        var oe = Z._x, se = Z._y, Ae = Z._z, ue = Z._w, he = te._x, pe = te._y, ve = te._z, xe = te._w;
        return this._x = oe * xe + ue * he + se * ve - Ae * pe, this._y = se * xe + ue * pe + Ae * he - oe * ve, this._z = Ae * xe + ue * ve + oe * pe - se * he, this._w = ue * xe - oe * he - se * pe - Ae * ve, this.onChangeCallback(), this;
      }, slerp: function(Z, te) {
        if (te === 0)
          return this;
        if (te === 1)
          return this.copy(Z);
        var oe = this._x, se = this._y, Ae = this._z, ue = this._w, he = ue * Z._w + oe * Z._x + se * Z._y + Ae * Z._z;
        if (he < 0 ? (this._w = -Z._w, this._x = -Z._x, this._y = -Z._y, this._z = -Z._z, he = -he) : this.copy(Z), he >= 1)
          return this._w = ue, this._x = oe, this._y = se, this._z = Ae, this;
        var pe = 1 - he * he;
        if (pe <= Number.EPSILON) {
          var ve = 1 - te;
          return this._w = ve * ue + te * this._w, this._x = ve * oe + te * this._x, this._y = ve * se + te * this._y, this._z = ve * Ae + te * this._z, this.normalize();
        }
        var xe = Math.sqrt(pe), Me = Math.atan2(xe, he), Ne = Math.sin((1 - te) * Me) / xe, Qe = Math.sin(te * Me) / xe;
        return this._w = ue * Ne + this._w * Qe, this._x = oe * Ne + this._x * Qe, this._y = se * Ne + this._y * Qe, this._z = Ae * Ne + this._z * Qe, this.onChangeCallback(), this;
      }, equals: function(Z) {
        return Z._x === this._x && Z._y === this._y && Z._z === this._z && Z._w === this._w;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this._x = Z[te], this._y = Z[te + 1], this._z = Z[te + 2], this._w = Z[te + 3], this.onChangeCallback(), this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this._x, Z[te + 1] = this._y, Z[te + 2] = this._z, Z[te + 3] = this._w, Z;
      }, onChange: function(Z) {
        return this.onChangeCallback = Z, this;
      }, onChangeCallback: function() {
      } }), Object.assign(mt.prototype, { isVector3: !0, set: function(Z, te, oe) {
        return this.x = Z, this.y = te, this.z = oe, this;
      }, setScalar: function(Z) {
        return this.x = Z, this.y = Z, this.z = Z, this;
      }, setX: function(Z) {
        return this.x = Z, this;
      }, setY: function(Z) {
        return this.y = Z, this;
      }, setZ: function(Z) {
        return this.z = Z, this;
      }, setComponent: function(Z, te) {
        switch (Z) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          case 2:
            this.z = te;
            break;
          default:
            throw new Error("index is out of range: " + Z);
        }
        return this;
      }, getComponent: function(Z) {
        switch (Z) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          default:
            throw new Error("index is out of range: " + Z);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z);
      }, copy: function(Z) {
        return this.x = Z.x, this.y = Z.y, this.z = Z.z, this;
      }, add: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Z, te)) : (this.x += Z.x, this.y += Z.y, this.z += Z.z, this);
      }, addScalar: function(Z) {
        return this.x += Z, this.y += Z, this.z += Z, this;
      }, addVectors: function(Z, te) {
        return this.x = Z.x + te.x, this.y = Z.y + te.y, this.z = Z.z + te.z, this;
      }, addScaledVector: function(Z, te) {
        return this.x += Z.x * te, this.y += Z.y * te, this.z += Z.z * te, this;
      }, sub: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Z, te)) : (this.x -= Z.x, this.y -= Z.y, this.z -= Z.z, this);
      }, subScalar: function(Z) {
        return this.x -= Z, this.y -= Z, this.z -= Z, this;
      }, subVectors: function(Z, te) {
        return this.x = Z.x - te.x, this.y = Z.y - te.y, this.z = Z.z - te.z, this;
      }, multiply: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(Z, te)) : (this.x *= Z.x, this.y *= Z.y, this.z *= Z.z, this);
      }, multiplyScalar: function(Z) {
        return this.x *= Z, this.y *= Z, this.z *= Z, this;
      }, multiplyVectors: function(Z, te) {
        return this.x = Z.x * te.x, this.y = Z.y * te.y, this.z = Z.z * te.z, this;
      }, applyEuler: function() {
        var Z = new ci();
        return function(te) {
          return te && te.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(Z.setFromEuler(te));
        };
      }(), applyAxisAngle: function() {
        var Z = new ci();
        return function(te, oe) {
          return this.applyQuaternion(Z.setFromAxisAngle(te, oe));
        };
      }(), applyMatrix3: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = Z.elements;
        return this.x = Ae[0] * te + Ae[3] * oe + Ae[6] * se, this.y = Ae[1] * te + Ae[4] * oe + Ae[7] * se, this.z = Ae[2] * te + Ae[5] * oe + Ae[8] * se, this;
      }, applyMatrix4: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = Z.elements, ue = 1 / (Ae[3] * te + Ae[7] * oe + Ae[11] * se + Ae[15]);
        return this.x = (Ae[0] * te + Ae[4] * oe + Ae[8] * se + Ae[12]) * ue, this.y = (Ae[1] * te + Ae[5] * oe + Ae[9] * se + Ae[13]) * ue, this.z = (Ae[2] * te + Ae[6] * oe + Ae[10] * se + Ae[14]) * ue, this;
      }, applyQuaternion: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = Z.x, ue = Z.y, he = Z.z, pe = Z.w, ve = pe * te + ue * se - he * oe, xe = pe * oe + he * te - Ae * se, Me = pe * se + Ae * oe - ue * te, Ne = -Ae * te - ue * oe - he * se;
        return this.x = ve * pe + Ne * -Ae + xe * -he - Me * -ue, this.y = xe * pe + Ne * -ue + Me * -Ae - ve * -he, this.z = Me * pe + Ne * -he + ve * -ue - xe * -Ae, this;
      }, project: function() {
        var Z = new pn();
        return function(te) {
          return Z.multiplyMatrices(te.projectionMatrix, Z.getInverse(te.matrixWorld)), this.applyMatrix4(Z);
        };
      }(), unproject: function() {
        var Z = new pn();
        return function(te) {
          return Z.multiplyMatrices(te.matrixWorld, Z.getInverse(te.projectionMatrix)), this.applyMatrix4(Z);
        };
      }(), transformDirection: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = Z.elements;
        return this.x = Ae[0] * te + Ae[4] * oe + Ae[8] * se, this.y = Ae[1] * te + Ae[5] * oe + Ae[9] * se, this.z = Ae[2] * te + Ae[6] * oe + Ae[10] * se, this.normalize();
      }, divide: function(Z) {
        return this.x /= Z.x, this.y /= Z.y, this.z /= Z.z, this;
      }, divideScalar: function(Z) {
        return this.multiplyScalar(1 / Z);
      }, min: function(Z) {
        return this.x = Math.min(this.x, Z.x), this.y = Math.min(this.y, Z.y), this.z = Math.min(this.z, Z.z), this;
      }, max: function(Z) {
        return this.x = Math.max(this.x, Z.x), this.y = Math.max(this.y, Z.y), this.z = Math.max(this.z, Z.z), this;
      }, clamp: function(Z, te) {
        return this.x = Math.max(Z.x, Math.min(te.x, this.x)), this.y = Math.max(Z.y, Math.min(te.y, this.y)), this.z = Math.max(Z.z, Math.min(te.z, this.z)), this;
      }, clampScalar: function() {
        var Z = new mt(), te = new mt();
        return function(oe, se) {
          return Z.set(oe, oe, oe), te.set(se, se, se), this.clamp(Z, te);
        };
      }(), clampLength: function(Z, te) {
        var oe = this.length();
        return this.divideScalar(oe || 1).multiplyScalar(Math.max(Z, Math.min(te, oe)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
      }, dot: function(Z) {
        return this.x * Z.x + this.y * Z.y + this.z * Z.z;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(Z) {
        return this.normalize().multiplyScalar(Z);
      }, lerp: function(Z, te) {
        return this.x += (Z.x - this.x) * te, this.y += (Z.y - this.y) * te, this.z += (Z.z - this.z) * te, this;
      }, lerpVectors: function(Z, te, oe) {
        return this.subVectors(te, Z).multiplyScalar(oe).add(Z);
      }, cross: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(Z, te)) : this.crossVectors(this, Z);
      }, crossVectors: function(Z, te) {
        var oe = Z.x, se = Z.y, Ae = Z.z, ue = te.x, he = te.y, pe = te.z;
        return this.x = se * pe - Ae * he, this.y = Ae * ue - oe * pe, this.z = oe * he - se * ue, this;
      }, projectOnVector: function(Z) {
        var te = Z.dot(this) / Z.lengthSq();
        return this.copy(Z).multiplyScalar(te);
      }, projectOnPlane: function() {
        var Z = new mt();
        return function(te) {
          return Z.copy(this).projectOnVector(te), this.sub(Z);
        };
      }(), reflect: function() {
        var Z = new mt();
        return function(te) {
          return this.sub(Z.copy(te).multiplyScalar(2 * this.dot(te)));
        };
      }(), angleTo: function(Z) {
        var te = this.dot(Z) / Math.sqrt(this.lengthSq() * Z.lengthSq());
        return Math.acos(bn.clamp(te, -1, 1));
      }, distanceTo: function(Z) {
        return Math.sqrt(this.distanceToSquared(Z));
      }, distanceToSquared: function(Z) {
        var te = this.x - Z.x, oe = this.y - Z.y, se = this.z - Z.z;
        return te * te + oe * oe + se * se;
      }, manhattanDistanceTo: function(Z) {
        return Math.abs(this.x - Z.x) + Math.abs(this.y - Z.y) + Math.abs(this.z - Z.z);
      }, setFromSpherical: function(Z) {
        var te = Math.sin(Z.phi) * Z.radius;
        return this.x = te * Math.sin(Z.theta), this.y = Math.cos(Z.phi) * Z.radius, this.z = te * Math.cos(Z.theta), this;
      }, setFromCylindrical: function(Z) {
        return this.x = Z.radius * Math.sin(Z.theta), this.y = Z.y, this.z = Z.radius * Math.cos(Z.theta), this;
      }, setFromMatrixPosition: function(Z) {
        var te = Z.elements;
        return this.x = te[12], this.y = te[13], this.z = te[14], this;
      }, setFromMatrixScale: function(Z) {
        var te = this.setFromMatrixColumn(Z, 0).length(), oe = this.setFromMatrixColumn(Z, 1).length(), se = this.setFromMatrixColumn(Z, 2).length();
        return this.x = te, this.y = oe, this.z = se, this;
      }, setFromMatrixColumn: function(Z, te) {
        return this.fromArray(Z.elements, 4 * te);
      }, equals: function(Z) {
        return Z.x === this.x && Z.y === this.y && Z.z === this.z;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this.x = Z[te], this.y = Z[te + 1], this.z = Z[te + 2], this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this.x, Z[te + 1] = this.y, Z[te + 2] = this.z, Z;
      }, fromBufferAttribute: function(Z, te, oe) {
        return oe !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = Z.getX(te), this.y = Z.getY(te), this.z = Z.getZ(te), this;
      } }), Object.assign(Vi.prototype, { isMatrix3: !0, set: function(Z, te, oe, se, Ae, ue, he, pe, ve) {
        var xe = this.elements;
        return xe[0] = Z, xe[1] = se, xe[2] = he, xe[3] = te, xe[4] = Ae, xe[5] = pe, xe[6] = oe, xe[7] = ue, xe[8] = ve, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
      }, clone: function() {
        return new this.constructor().fromArray(this.elements);
      }, copy: function(Z) {
        var te = this.elements, oe = Z.elements;
        return te[0] = oe[0], te[1] = oe[1], te[2] = oe[2], te[3] = oe[3], te[4] = oe[4], te[5] = oe[5], te[6] = oe[6], te[7] = oe[7], te[8] = oe[8], this;
      }, setFromMatrix4: function(Z) {
        var te = Z.elements;
        return this.set(te[0], te[4], te[8], te[1], te[5], te[9], te[2], te[6], te[10]), this;
      }, applyToBufferAttribute: function() {
        var Z = new mt();
        return function(te) {
          for (var oe = 0, se = te.count; oe < se; oe++)
            Z.x = te.getX(oe), Z.y = te.getY(oe), Z.z = te.getZ(oe), Z.applyMatrix3(this), te.setXYZ(oe, Z.x, Z.y, Z.z);
          return te;
        };
      }(), multiply: function(Z) {
        return this.multiplyMatrices(this, Z);
      }, premultiply: function(Z) {
        return this.multiplyMatrices(Z, this);
      }, multiplyMatrices: function(Z, te) {
        var oe = Z.elements, se = te.elements, Ae = this.elements, ue = oe[0], he = oe[3], pe = oe[6], ve = oe[1], xe = oe[4], Me = oe[7], Ne = oe[2], Qe = oe[5], Ue = oe[8], ze = se[0], et = se[3], nt = se[6], At = se[1], Et = se[4], st = se[7], Mt = se[2], Ft = se[5], lt = se[8];
        return Ae[0] = ue * ze + he * At + pe * Mt, Ae[3] = ue * et + he * Et + pe * Ft, Ae[6] = ue * nt + he * st + pe * lt, Ae[1] = ve * ze + xe * At + Me * Mt, Ae[4] = ve * et + xe * Et + Me * Ft, Ae[7] = ve * nt + xe * st + Me * lt, Ae[2] = Ne * ze + Qe * At + Ue * Mt, Ae[5] = Ne * et + Qe * Et + Ue * Ft, Ae[8] = Ne * nt + Qe * st + Ue * lt, this;
      }, multiplyScalar: function(Z) {
        var te = this.elements;
        return te[0] *= Z, te[3] *= Z, te[6] *= Z, te[1] *= Z, te[4] *= Z, te[7] *= Z, te[2] *= Z, te[5] *= Z, te[8] *= Z, this;
      }, determinant: function() {
        var Z = this.elements, te = Z[0], oe = Z[1], se = Z[2], Ae = Z[3], ue = Z[4], he = Z[5], pe = Z[6], ve = Z[7], xe = Z[8];
        return te * ue * xe - te * he * ve - oe * Ae * xe + oe * he * pe + se * Ae * ve - se * ue * pe;
      }, getInverse: function(Z, te) {
        Z && Z.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
        var oe = Z.elements, se = this.elements, Ae = oe[0], ue = oe[1], he = oe[2], pe = oe[3], ve = oe[4], xe = oe[5], Me = oe[6], Ne = oe[7], Qe = oe[8], Ue = Qe * ve - xe * Ne, ze = xe * Me - Qe * pe, et = Ne * pe - ve * Me, nt = Ae * Ue + ue * ze + he * et;
        if (nt === 0) {
          var At = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
          if (te === !0)
            throw new Error(At);
          return console.warn(At), this.identity();
        }
        var Et = 1 / nt;
        return se[0] = Ue * Et, se[1] = (he * Ne - Qe * ue) * Et, se[2] = (xe * ue - he * ve) * Et, se[3] = ze * Et, se[4] = (Qe * Ae - he * Me) * Et, se[5] = (he * pe - xe * Ae) * Et, se[6] = et * Et, se[7] = (ue * Me - Ne * Ae) * Et, se[8] = (ve * Ae - ue * pe) * Et, this;
      }, transpose: function() {
        var Z, te = this.elements;
        return Z = te[1], te[1] = te[3], te[3] = Z, Z = te[2], te[2] = te[6], te[6] = Z, Z = te[5], te[5] = te[7], te[7] = Z, this;
      }, getNormalMatrix: function(Z) {
        return this.setFromMatrix4(Z).getInverse(this).transpose();
      }, transposeIntoArray: function(Z) {
        var te = this.elements;
        return Z[0] = te[0], Z[1] = te[3], Z[2] = te[6], Z[3] = te[1], Z[4] = te[4], Z[5] = te[7], Z[6] = te[2], Z[7] = te[5], Z[8] = te[8], this;
      }, setUvTransform: function(Z, te, oe, se, Ae, ue, he) {
        var pe = Math.cos(Ae), ve = Math.sin(Ae);
        this.set(oe * pe, oe * ve, -oe * (pe * ue + ve * he) + ue + Z, -se * ve, se * pe, -se * (-ve * ue + pe * he) + he + te, 0, 0, 1);
      }, scale: function(Z, te) {
        var oe = this.elements;
        return oe[0] *= Z, oe[3] *= Z, oe[6] *= Z, oe[1] *= te, oe[4] *= te, oe[7] *= te, this;
      }, rotate: function(Z) {
        var te = Math.cos(Z), oe = Math.sin(Z), se = this.elements, Ae = se[0], ue = se[3], he = se[6], pe = se[1], ve = se[4], xe = se[7];
        return se[0] = te * Ae + oe * pe, se[3] = te * ue + oe * ve, se[6] = te * he + oe * xe, se[1] = -oe * Ae + te * pe, se[4] = -oe * ue + te * ve, se[7] = -oe * he + te * xe, this;
      }, translate: function(Z, te) {
        var oe = this.elements;
        return oe[0] += Z * oe[2], oe[3] += Z * oe[5], oe[6] += Z * oe[8], oe[1] += te * oe[2], oe[4] += te * oe[5], oe[7] += te * oe[8], this;
      }, equals: function(Z) {
        for (var te = this.elements, oe = Z.elements, se = 0; se < 9; se++)
          if (te[se] !== oe[se])
            return !1;
        return !0;
      }, fromArray: function(Z, te) {
        te === void 0 && (te = 0);
        for (var oe = 0; oe < 9; oe++)
          this.elements[oe] = Z[oe + te];
        return this;
      }, toArray: function(Z, te) {
        Z === void 0 && (Z = []), te === void 0 && (te = 0);
        var oe = this.elements;
        return Z[te] = oe[0], Z[te + 1] = oe[1], Z[te + 2] = oe[2], Z[te + 3] = oe[3], Z[te + 4] = oe[4], Z[te + 5] = oe[5], Z[te + 6] = oe[6], Z[te + 7] = oe[7], Z[te + 8] = oe[8], Z;
      } });
      var Jo = { getDataURL: function(Z) {
        var te;
        if (Z instanceof HTMLCanvasElement)
          te = Z;
        else {
          typeof OffscreenCanvas < "u" ? te = new OffscreenCanvas(Z.width, Z.height) : ((te = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")).width = Z.width, te.height = Z.height);
          var oe = te.getContext("2d");
          Z instanceof ImageData ? oe.putImageData(Z, 0, 0) : oe.drawImage(Z, 0, 0, Z.width, Z.height);
        }
        return te.width > 2048 || te.height > 2048 ? te.toDataURL("image/jpeg", 0.6) : te.toDataURL("image/png");
      } }, Uu = 0;
      function ii(Z, te, oe, se, Ae, ue, he, pe, ve, xe) {
        Object.defineProperty(this, "id", { value: Uu++ }), this.uuid = bn.generateUUID(), this.name = "", this.image = Z !== void 0 ? Z : ii.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = te !== void 0 ? te : ii.DEFAULT_MAPPING, this.wrapS = oe !== void 0 ? oe : Cr, this.wrapT = se !== void 0 ? se : Cr, this.magFilter = Ae !== void 0 ? Ae : on, this.minFilter = ue !== void 0 ? ue : $n, this.anisotropy = ve !== void 0 ? ve : 1, this.format = he !== void 0 ? he : rr, this.type = pe !== void 0 ? pe : Pn, this.offset = new xr(0, 0), this.repeat = new xr(1, 1), this.center = new xr(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new Vi(), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = xe !== void 0 ? xe : Yn, this.version = 0, this.onUpdate = null;
      }
      function Zn(Z, te, oe, se) {
        this.x = Z || 0, this.y = te || 0, this.z = oe || 0, this.w = se !== void 0 ? se : 1;
      }
      function ia(Z, te, oe) {
        this.width = Z, this.height = te, this.scissor = new Zn(0, 0, Z, te), this.scissorTest = !1, this.viewport = new Zn(0, 0, Z, te), (oe = oe || {}).minFilter === void 0 && (oe.minFilter = on), this.texture = new ii(void 0, void 0, oe.wrapS, oe.wrapT, oe.magFilter, oe.minFilter, oe.format, oe.type, oe.anisotropy, oe.encoding), this.texture.generateMipmaps = oe.generateMipmaps === void 0 || oe.generateMipmaps, this.depthBuffer = oe.depthBuffer === void 0 || oe.depthBuffer, this.stencilBuffer = oe.stencilBuffer === void 0 || oe.stencilBuffer, this.depthTexture = oe.depthTexture !== void 0 ? oe.depthTexture : null;
      }
      function Oa(Z, te, oe) {
        ia.call(this, Z, te, oe), this.activeCubeFace = 0, this.activeMipMapLevel = 0;
      }
      function oa(Z, te, oe, se, Ae, ue, he, pe, ve, xe, Me, Ne) {
        ii.call(this, null, ue, he, pe, ve, xe, se, Ae, Me, Ne), this.image = { data: Z, width: te, height: oe }, this.magFilter = ve !== void 0 ? ve : wr, this.minFilter = xe !== void 0 ? xe : wr, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
      }
      function qo(Z, te) {
        this.min = Z !== void 0 ? Z : new mt(1 / 0, 1 / 0, 1 / 0), this.max = te !== void 0 ? te : new mt(-1 / 0, -1 / 0, -1 / 0);
      }
      function go(Z, te) {
        this.center = Z !== void 0 ? Z : new mt(), this.radius = te !== void 0 ? te : 0;
      }
      function _o(Z, te) {
        this.normal = Z !== void 0 ? Z : new mt(1, 0, 0), this.constant = te !== void 0 ? te : 0;
      }
      function bc(Z, te, oe, se, Ae, ue) {
        this.planes = [Z !== void 0 ? Z : new _o(), te !== void 0 ? te : new _o(), oe !== void 0 ? oe : new _o(), se !== void 0 ? se : new _o(), Ae !== void 0 ? Ae : new _o(), ue !== void 0 ? ue : new _o()];
      }
      ii.DEFAULT_IMAGE = void 0, ii.DEFAULT_MAPPING = qe, ii.prototype = Object.assign(Object.create(ce.prototype), { constructor: ii, isTexture: !0, updateMatrix: function() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.name = Z.name, this.image = Z.image, this.mipmaps = Z.mipmaps.slice(0), this.mapping = Z.mapping, this.wrapS = Z.wrapS, this.wrapT = Z.wrapT, this.magFilter = Z.magFilter, this.minFilter = Z.minFilter, this.anisotropy = Z.anisotropy, this.format = Z.format, this.type = Z.type, this.offset.copy(Z.offset), this.repeat.copy(Z.repeat), this.center.copy(Z.center), this.rotation = Z.rotation, this.matrixAutoUpdate = Z.matrixAutoUpdate, this.matrix.copy(Z.matrix), this.generateMipmaps = Z.generateMipmaps, this.premultiplyAlpha = Z.premultiplyAlpha, this.flipY = Z.flipY, this.unpackAlignment = Z.unpackAlignment, this.encoding = Z.encoding, this;
      }, toJSON: function(Z) {
        var te = Z === void 0 || typeof Z == "string";
        if (!te && Z.textures[this.uuid] !== void 0)
          return Z.textures[this.uuid];
        var oe = { metadata: { version: 4.5, type: "Texture", generator: "Texture.toJSON" }, uuid: this.uuid, name: this.name, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY };
        if (this.image !== void 0) {
          var se = this.image;
          if (se.uuid === void 0 && (se.uuid = bn.generateUUID()), !te && Z.images[se.uuid] === void 0) {
            var Ae;
            if (Array.isArray(se)) {
              Ae = [];
              for (var ue = 0, he = se.length; ue < he; ue++)
                Ae.push(Jo.getDataURL(se[ue]));
            } else
              Ae = Jo.getDataURL(se);
            Z.images[se.uuid] = { uuid: se.uuid, url: Ae };
          }
          oe.image = se.uuid;
        }
        return te || (Z.textures[this.uuid] = oe), oe;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      }, transformUv: function(Z) {
        if (this.mapping === qe) {
          if (Z.applyMatrix3(this.matrix), Z.x < 0 || Z.x > 1)
            switch (this.wrapS) {
              case gr:
                Z.x = Z.x - Math.floor(Z.x);
                break;
              case Cr:
                Z.x = Z.x < 0 ? 0 : 1;
                break;
              case mr:
                Math.abs(Math.floor(Z.x) % 2) === 1 ? Z.x = Math.ceil(Z.x) - Z.x : Z.x = Z.x - Math.floor(Z.x);
            }
          if (Z.y < 0 || Z.y > 1)
            switch (this.wrapT) {
              case gr:
                Z.y = Z.y - Math.floor(Z.y);
                break;
              case Cr:
                Z.y = Z.y < 0 ? 0 : 1;
                break;
              case mr:
                Math.abs(Math.floor(Z.y) % 2) === 1 ? Z.y = Math.ceil(Z.y) - Z.y : Z.y = Z.y - Math.floor(Z.y);
            }
          this.flipY && (Z.y = 1 - Z.y);
        }
      } }), Object.defineProperty(ii.prototype, "needsUpdate", { set: function(Z) {
        Z === !0 && this.version++;
      } }), Object.assign(Zn.prototype, { isVector4: !0, set: function(Z, te, oe, se) {
        return this.x = Z, this.y = te, this.z = oe, this.w = se, this;
      }, setScalar: function(Z) {
        return this.x = Z, this.y = Z, this.z = Z, this.w = Z, this;
      }, setX: function(Z) {
        return this.x = Z, this;
      }, setY: function(Z) {
        return this.y = Z, this;
      }, setZ: function(Z) {
        return this.z = Z, this;
      }, setW: function(Z) {
        return this.w = Z, this;
      }, setComponent: function(Z, te) {
        switch (Z) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          case 2:
            this.z = te;
            break;
          case 3:
            this.w = te;
            break;
          default:
            throw new Error("index is out of range: " + Z);
        }
        return this;
      }, getComponent: function(Z) {
        switch (Z) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          case 3:
            return this.w;
          default:
            throw new Error("index is out of range: " + Z);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z, this.w);
      }, copy: function(Z) {
        return this.x = Z.x, this.y = Z.y, this.z = Z.z, this.w = Z.w !== void 0 ? Z.w : 1, this;
      }, add: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Z, te)) : (this.x += Z.x, this.y += Z.y, this.z += Z.z, this.w += Z.w, this);
      }, addScalar: function(Z) {
        return this.x += Z, this.y += Z, this.z += Z, this.w += Z, this;
      }, addVectors: function(Z, te) {
        return this.x = Z.x + te.x, this.y = Z.y + te.y, this.z = Z.z + te.z, this.w = Z.w + te.w, this;
      }, addScaledVector: function(Z, te) {
        return this.x += Z.x * te, this.y += Z.y * te, this.z += Z.z * te, this.w += Z.w * te, this;
      }, sub: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Z, te)) : (this.x -= Z.x, this.y -= Z.y, this.z -= Z.z, this.w -= Z.w, this);
      }, subScalar: function(Z) {
        return this.x -= Z, this.y -= Z, this.z -= Z, this.w -= Z, this;
      }, subVectors: function(Z, te) {
        return this.x = Z.x - te.x, this.y = Z.y - te.y, this.z = Z.z - te.z, this.w = Z.w - te.w, this;
      }, multiplyScalar: function(Z) {
        return this.x *= Z, this.y *= Z, this.z *= Z, this.w *= Z, this;
      }, applyMatrix4: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = this.w, ue = Z.elements;
        return this.x = ue[0] * te + ue[4] * oe + ue[8] * se + ue[12] * Ae, this.y = ue[1] * te + ue[5] * oe + ue[9] * se + ue[13] * Ae, this.z = ue[2] * te + ue[6] * oe + ue[10] * se + ue[14] * Ae, this.w = ue[3] * te + ue[7] * oe + ue[11] * se + ue[15] * Ae, this;
      }, divideScalar: function(Z) {
        return this.multiplyScalar(1 / Z);
      }, setAxisAngleFromQuaternion: function(Z) {
        this.w = 2 * Math.acos(Z.w);
        var te = Math.sqrt(1 - Z.w * Z.w);
        return te < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = Z.x / te, this.y = Z.y / te, this.z = Z.z / te), this;
      }, setAxisAngleFromRotationMatrix: function(Z) {
        var te, oe, se, Ae, ue = Z.elements, he = ue[0], pe = ue[4], ve = ue[8], xe = ue[1], Me = ue[5], Ne = ue[9], Qe = ue[2], Ue = ue[6], ze = ue[10];
        if (Math.abs(pe - xe) < 0.01 && Math.abs(ve - Qe) < 0.01 && Math.abs(Ne - Ue) < 0.01) {
          if (Math.abs(pe + xe) < 0.1 && Math.abs(ve + Qe) < 0.1 && Math.abs(Ne + Ue) < 0.1 && Math.abs(he + Me + ze - 3) < 0.1)
            return this.set(1, 0, 0, 0), this;
          te = Math.PI;
          var et = (he + 1) / 2, nt = (Me + 1) / 2, At = (ze + 1) / 2, Et = (pe + xe) / 4, st = (ve + Qe) / 4, Mt = (Ne + Ue) / 4;
          return et > nt && et > At ? et < 0.01 ? (oe = 0, se = 0.707106781, Ae = 0.707106781) : (se = Et / (oe = Math.sqrt(et)), Ae = st / oe) : nt > At ? nt < 0.01 ? (oe = 0.707106781, se = 0, Ae = 0.707106781) : (oe = Et / (se = Math.sqrt(nt)), Ae = Mt / se) : At < 0.01 ? (oe = 0.707106781, se = 0.707106781, Ae = 0) : (oe = st / (Ae = Math.sqrt(At)), se = Mt / Ae), this.set(oe, se, Ae, te), this;
        }
        var Ft = Math.sqrt((Ue - Ne) * (Ue - Ne) + (ve - Qe) * (ve - Qe) + (xe - pe) * (xe - pe));
        return Math.abs(Ft) < 1e-3 && (Ft = 1), this.x = (Ue - Ne) / Ft, this.y = (ve - Qe) / Ft, this.z = (xe - pe) / Ft, this.w = Math.acos((he + Me + ze - 1) / 2), this;
      }, min: function(Z) {
        return this.x = Math.min(this.x, Z.x), this.y = Math.min(this.y, Z.y), this.z = Math.min(this.z, Z.z), this.w = Math.min(this.w, Z.w), this;
      }, max: function(Z) {
        return this.x = Math.max(this.x, Z.x), this.y = Math.max(this.y, Z.y), this.z = Math.max(this.z, Z.z), this.w = Math.max(this.w, Z.w), this;
      }, clamp: function(Z, te) {
        return this.x = Math.max(Z.x, Math.min(te.x, this.x)), this.y = Math.max(Z.y, Math.min(te.y, this.y)), this.z = Math.max(Z.z, Math.min(te.z, this.z)), this.w = Math.max(Z.w, Math.min(te.w, this.w)), this;
      }, clampScalar: function() {
        var Z, te;
        return function(oe, se) {
          return Z === void 0 && (Z = new Zn(), te = new Zn()), Z.set(oe, oe, oe, oe), te.set(se, se, se, se), this.clamp(Z, te);
        };
      }(), clampLength: function(Z, te) {
        var oe = this.length();
        return this.divideScalar(oe || 1).multiplyScalar(Math.max(Z, Math.min(te, oe)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
      }, dot: function(Z) {
        return this.x * Z.x + this.y * Z.y + this.z * Z.z + this.w * Z.w;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(Z) {
        return this.normalize().multiplyScalar(Z);
      }, lerp: function(Z, te) {
        return this.x += (Z.x - this.x) * te, this.y += (Z.y - this.y) * te, this.z += (Z.z - this.z) * te, this.w += (Z.w - this.w) * te, this;
      }, lerpVectors: function(Z, te, oe) {
        return this.subVectors(te, Z).multiplyScalar(oe).add(Z);
      }, equals: function(Z) {
        return Z.x === this.x && Z.y === this.y && Z.z === this.z && Z.w === this.w;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this.x = Z[te], this.y = Z[te + 1], this.z = Z[te + 2], this.w = Z[te + 3], this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this.x, Z[te + 1] = this.y, Z[te + 2] = this.z, Z[te + 3] = this.w, Z;
      }, fromBufferAttribute: function(Z, te, oe) {
        return oe !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = Z.getX(te), this.y = Z.getY(te), this.z = Z.getZ(te), this.w = Z.getW(te), this;
      } }), ia.prototype = Object.assign(Object.create(ce.prototype), { constructor: ia, isWebGLRenderTarget: !0, setSize: function(Z, te) {
        this.width === Z && this.height === te || (this.width = Z, this.height = te, this.dispose()), this.viewport.set(0, 0, Z, te), this.scissor.set(0, 0, Z, te);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.width = Z.width, this.height = Z.height, this.viewport.copy(Z.viewport), this.texture = Z.texture.clone(), this.depthBuffer = Z.depthBuffer, this.stencilBuffer = Z.stencilBuffer, this.depthTexture = Z.depthTexture, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Oa.prototype = Object.create(ia.prototype), Oa.prototype.constructor = Oa, Oa.prototype.isWebGLRenderTargetCube = !0, oa.prototype = Object.create(ii.prototype), oa.prototype.constructor = oa, oa.prototype.isDataTexture = !0, Object.assign(qo.prototype, { isBox3: !0, set: function(Z, te) {
        return this.min.copy(Z), this.max.copy(te), this;
      }, setFromArray: function(Z) {
        for (var te = 1 / 0, oe = 1 / 0, se = 1 / 0, Ae = -1 / 0, ue = -1 / 0, he = -1 / 0, pe = 0, ve = Z.length; pe < ve; pe += 3) {
          var xe = Z[pe], Me = Z[pe + 1], Ne = Z[pe + 2];
          xe < te && (te = xe), Me < oe && (oe = Me), Ne < se && (se = Ne), xe > Ae && (Ae = xe), Me > ue && (ue = Me), Ne > he && (he = Ne);
        }
        return this.min.set(te, oe, se), this.max.set(Ae, ue, he), this;
      }, setFromBufferAttribute: function(Z) {
        for (var te = 1 / 0, oe = 1 / 0, se = 1 / 0, Ae = -1 / 0, ue = -1 / 0, he = -1 / 0, pe = 0, ve = Z.count; pe < ve; pe++) {
          var xe = Z.getX(pe), Me = Z.getY(pe), Ne = Z.getZ(pe);
          xe < te && (te = xe), Me < oe && (oe = Me), Ne < se && (se = Ne), xe > Ae && (Ae = xe), Me > ue && (ue = Me), Ne > he && (he = Ne);
        }
        return this.min.set(te, oe, se), this.max.set(Ae, ue, he), this;
      }, setFromPoints: function(Z) {
        this.makeEmpty();
        for (var te = 0, oe = Z.length; te < oe; te++)
          this.expandByPoint(Z[te]);
        return this;
      }, setFromCenterAndSize: function() {
        var Z = new mt();
        return function(te, oe) {
          var se = Z.copy(oe).multiplyScalar(0.5);
          return this.min.copy(te).sub(se), this.max.copy(te).add(se), this;
        };
      }(), setFromObject: function(Z) {
        return this.makeEmpty(), this.expandByObject(Z);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.min.copy(Z.min), this.max.copy(Z.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
      }, getCenter: function(Z) {
        return Z === void 0 && (console.warn("THREE.Box3: .getCenter() target is now required"), Z = new mt()), this.isEmpty() ? Z.set(0, 0, 0) : Z.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(Z) {
        return Z === void 0 && (console.warn("THREE.Box3: .getSize() target is now required"), Z = new mt()), this.isEmpty() ? Z.set(0, 0, 0) : Z.subVectors(this.max, this.min);
      }, expandByPoint: function(Z) {
        return this.min.min(Z), this.max.max(Z), this;
      }, expandByVector: function(Z) {
        return this.min.sub(Z), this.max.add(Z), this;
      }, expandByScalar: function(Z) {
        return this.min.addScalar(-Z), this.max.addScalar(Z), this;
      }, expandByObject: function() {
        var Z, te, oe, se = new mt();
        function Ae(ue) {
          var he = ue.geometry;
          if (he !== void 0) {
            if (he.isGeometry) {
              var pe = he.vertices;
              for (te = 0, oe = pe.length; te < oe; te++)
                se.copy(pe[te]), se.applyMatrix4(ue.matrixWorld), Z.expandByPoint(se);
            } else if (he.isBufferGeometry) {
              var ve = he.attributes.position;
              if (ve !== void 0)
                for (te = 0, oe = ve.count; te < oe; te++)
                  se.fromBufferAttribute(ve, te).applyMatrix4(ue.matrixWorld), Z.expandByPoint(se);
            }
          }
        }
        return function(ue) {
          return Z = this, ue.updateMatrixWorld(!0), ue.traverse(Ae), this;
        };
      }(), containsPoint: function(Z) {
        return !(Z.x < this.min.x || Z.x > this.max.x || Z.y < this.min.y || Z.y > this.max.y || Z.z < this.min.z || Z.z > this.max.z);
      }, containsBox: function(Z) {
        return this.min.x <= Z.min.x && Z.max.x <= this.max.x && this.min.y <= Z.min.y && Z.max.y <= this.max.y && this.min.z <= Z.min.z && Z.max.z <= this.max.z;
      }, getParameter: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Box3: .getParameter() target is now required"), te = new mt()), te.set((Z.x - this.min.x) / (this.max.x - this.min.x), (Z.y - this.min.y) / (this.max.y - this.min.y), (Z.z - this.min.z) / (this.max.z - this.min.z));
      }, intersectsBox: function(Z) {
        return !(Z.max.x < this.min.x || Z.min.x > this.max.x || Z.max.y < this.min.y || Z.min.y > this.max.y || Z.max.z < this.min.z || Z.min.z > this.max.z);
      }, intersectsSphere: function() {
        var Z = new mt();
        return function(te) {
          return this.clampPoint(te.center, Z), Z.distanceToSquared(te.center) <= te.radius * te.radius;
        };
      }(), intersectsPlane: function(Z) {
        var te, oe;
        return Z.normal.x > 0 ? (te = Z.normal.x * this.min.x, oe = Z.normal.x * this.max.x) : (te = Z.normal.x * this.max.x, oe = Z.normal.x * this.min.x), Z.normal.y > 0 ? (te += Z.normal.y * this.min.y, oe += Z.normal.y * this.max.y) : (te += Z.normal.y * this.max.y, oe += Z.normal.y * this.min.y), Z.normal.z > 0 ? (te += Z.normal.z * this.min.z, oe += Z.normal.z * this.max.z) : (te += Z.normal.z * this.max.z, oe += Z.normal.z * this.min.z), te <= Z.constant && oe >= Z.constant;
      }, intersectsTriangle: function() {
        var Z = new mt(), te = new mt(), oe = new mt(), se = new mt(), Ae = new mt(), ue = new mt(), he = new mt(), pe = new mt(), ve = new mt(), xe = new mt();
        function Me(Ne) {
          var Qe, Ue;
          for (Qe = 0, Ue = Ne.length - 3; Qe <= Ue; Qe += 3) {
            he.fromArray(Ne, Qe);
            var ze = ve.x * Math.abs(he.x) + ve.y * Math.abs(he.y) + ve.z * Math.abs(he.z), et = Z.dot(he), nt = te.dot(he), At = oe.dot(he);
            if (Math.max(-Math.max(et, nt, At), Math.min(et, nt, At)) > ze)
              return !1;
          }
          return !0;
        }
        return function(Ne) {
          if (this.isEmpty())
            return !1;
          this.getCenter(pe), ve.subVectors(this.max, pe), Z.subVectors(Ne.a, pe), te.subVectors(Ne.b, pe), oe.subVectors(Ne.c, pe), se.subVectors(te, Z), Ae.subVectors(oe, te), ue.subVectors(Z, oe);
          var Qe = [0, -se.z, se.y, 0, -Ae.z, Ae.y, 0, -ue.z, ue.y, se.z, 0, -se.x, Ae.z, 0, -Ae.x, ue.z, 0, -ue.x, -se.y, se.x, 0, -Ae.y, Ae.x, 0, -ue.y, ue.x, 0];
          return !!Me(Qe) && !!Me(Qe = [1, 0, 0, 0, 1, 0, 0, 0, 1]) && (xe.crossVectors(se, Ae), Me(Qe = [xe.x, xe.y, xe.z]));
        };
      }(), clampPoint: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Box3: .clampPoint() target is now required"), te = new mt()), te.copy(Z).clamp(this.min, this.max);
      }, distanceToPoint: function() {
        var Z = new mt();
        return function(te) {
          return Z.copy(te).clamp(this.min, this.max).sub(te).length();
        };
      }(), getBoundingSphere: function() {
        var Z = new mt();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Box3: .getBoundingSphere() target is now required"), te = new go()), this.getCenter(te.center), te.radius = 0.5 * this.getSize(Z).length(), te;
        };
      }(), intersect: function(Z) {
        return this.min.max(Z.min), this.max.min(Z.max), this.isEmpty() && this.makeEmpty(), this;
      }, union: function(Z) {
        return this.min.min(Z.min), this.max.max(Z.max), this;
      }, applyMatrix4: function(Z) {
        if (this.isEmpty())
          return this;
        var te = Z.elements, oe = te[0] * this.min.x, se = te[1] * this.min.x, Ae = te[2] * this.min.x, ue = te[0] * this.max.x, he = te[1] * this.max.x, pe = te[2] * this.max.x, ve = te[4] * this.min.y, xe = te[5] * this.min.y, Me = te[6] * this.min.y, Ne = te[4] * this.max.y, Qe = te[5] * this.max.y, Ue = te[6] * this.max.y, ze = te[8] * this.min.z, et = te[9] * this.min.z, nt = te[10] * this.min.z, At = te[8] * this.max.z, Et = te[9] * this.max.z, st = te[10] * this.max.z;
        return this.min.x = Math.min(oe, ue) + Math.min(ve, Ne) + Math.min(ze, At) + te[12], this.min.y = Math.min(se, he) + Math.min(xe, Qe) + Math.min(et, Et) + te[13], this.min.z = Math.min(Ae, pe) + Math.min(Me, Ue) + Math.min(nt, st) + te[14], this.max.x = Math.max(oe, ue) + Math.max(ve, Ne) + Math.max(ze, At) + te[12], this.max.y = Math.max(se, he) + Math.max(xe, Qe) + Math.max(et, Et) + te[13], this.max.z = Math.max(Ae, pe) + Math.max(Me, Ue) + Math.max(nt, st) + te[14], this;
      }, translate: function(Z) {
        return this.min.add(Z), this.max.add(Z), this;
      }, equals: function(Z) {
        return Z.min.equals(this.min) && Z.max.equals(this.max);
      } }), Object.assign(go.prototype, { set: function(Z, te) {
        return this.center.copy(Z), this.radius = te, this;
      }, setFromPoints: function() {
        var Z = new qo();
        return function(te, oe) {
          var se = this.center;
          oe !== void 0 ? se.copy(oe) : Z.setFromPoints(te).getCenter(se);
          for (var Ae = 0, ue = 0, he = te.length; ue < he; ue++)
            Ae = Math.max(Ae, se.distanceToSquared(te[ue]));
          return this.radius = Math.sqrt(Ae), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.center.copy(Z.center), this.radius = Z.radius, this;
      }, empty: function() {
        return this.radius <= 0;
      }, containsPoint: function(Z) {
        return Z.distanceToSquared(this.center) <= this.radius * this.radius;
      }, distanceToPoint: function(Z) {
        return Z.distanceTo(this.center) - this.radius;
      }, intersectsSphere: function(Z) {
        var te = this.radius + Z.radius;
        return Z.center.distanceToSquared(this.center) <= te * te;
      }, intersectsBox: function(Z) {
        return Z.intersectsSphere(this);
      }, intersectsPlane: function(Z) {
        return Math.abs(Z.distanceToPoint(this.center)) <= this.radius;
      }, clampPoint: function(Z, te) {
        var oe = this.center.distanceToSquared(Z);
        return te === void 0 && (console.warn("THREE.Sphere: .clampPoint() target is now required"), te = new mt()), te.copy(Z), oe > this.radius * this.radius && (te.sub(this.center).normalize(), te.multiplyScalar(this.radius).add(this.center)), te;
      }, getBoundingBox: function(Z) {
        return Z === void 0 && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), Z = new qo()), Z.set(this.center, this.center), Z.expandByScalar(this.radius), Z;
      }, applyMatrix4: function(Z) {
        return this.center.applyMatrix4(Z), this.radius = this.radius * Z.getMaxScaleOnAxis(), this;
      }, translate: function(Z) {
        return this.center.add(Z), this;
      }, equals: function(Z) {
        return Z.center.equals(this.center) && Z.radius === this.radius;
      } }), Object.assign(_o.prototype, { set: function(Z, te) {
        return this.normal.copy(Z), this.constant = te, this;
      }, setComponents: function(Z, te, oe, se) {
        return this.normal.set(Z, te, oe), this.constant = se, this;
      }, setFromNormalAndCoplanarPoint: function(Z, te) {
        return this.normal.copy(Z), this.constant = -te.dot(this.normal), this;
      }, setFromCoplanarPoints: function() {
        var Z = new mt(), te = new mt();
        return function(oe, se, Ae) {
          var ue = Z.subVectors(Ae, se).cross(te.subVectors(oe, se)).normalize();
          return this.setFromNormalAndCoplanarPoint(ue, oe), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.normal.copy(Z.normal), this.constant = Z.constant, this;
      }, normalize: function() {
        var Z = 1 / this.normal.length();
        return this.normal.multiplyScalar(Z), this.constant *= Z, this;
      }, negate: function() {
        return this.constant *= -1, this.normal.negate(), this;
      }, distanceToPoint: function(Z) {
        return this.normal.dot(Z) + this.constant;
      }, distanceToSphere: function(Z) {
        return this.distanceToPoint(Z.center) - Z.radius;
      }, projectPoint: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Plane: .projectPoint() target is now required"), te = new mt()), te.copy(this.normal).multiplyScalar(-this.distanceToPoint(Z)).add(Z);
      }, intersectLine: function() {
        var Z = new mt();
        return function(te, oe) {
          oe === void 0 && (console.warn("THREE.Plane: .intersectLine() target is now required"), oe = new mt());
          var se = te.delta(Z), Ae = this.normal.dot(se);
          if (Ae === 0)
            return this.distanceToPoint(te.start) === 0 ? oe.copy(te.start) : void 0;
          var ue = -(te.start.dot(this.normal) + this.constant) / Ae;
          return ue < 0 || ue > 1 ? void 0 : oe.copy(se).multiplyScalar(ue).add(te.start);
        };
      }(), intersectsLine: function(Z) {
        var te = this.distanceToPoint(Z.start), oe = this.distanceToPoint(Z.end);
        return te < 0 && oe > 0 || oe < 0 && te > 0;
      }, intersectsBox: function(Z) {
        return Z.intersectsPlane(this);
      }, intersectsSphere: function(Z) {
        return Z.intersectsPlane(this);
      }, coplanarPoint: function(Z) {
        return Z === void 0 && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), Z = new mt()), Z.copy(this.normal).multiplyScalar(-this.constant);
      }, applyMatrix4: function() {
        var Z = new mt(), te = new Vi();
        return function(oe, se) {
          var Ae = se || te.getNormalMatrix(oe), ue = this.coplanarPoint(Z).applyMatrix4(oe), he = this.normal.applyMatrix3(Ae).normalize();
          return this.constant = -ue.dot(he), this;
        };
      }(), translate: function(Z) {
        return this.constant -= Z.dot(this.normal), this;
      }, equals: function(Z) {
        return Z.normal.equals(this.normal) && Z.constant === this.constant;
      } }), Object.assign(bc.prototype, { set: function(Z, te, oe, se, Ae, ue) {
        var he = this.planes;
        return he[0].copy(Z), he[1].copy(te), he[2].copy(oe), he[3].copy(se), he[4].copy(Ae), he[5].copy(ue), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        for (var te = this.planes, oe = 0; oe < 6; oe++)
          te[oe].copy(Z.planes[oe]);
        return this;
      }, setFromMatrix: function(Z) {
        var te = this.planes, oe = Z.elements, se = oe[0], Ae = oe[1], ue = oe[2], he = oe[3], pe = oe[4], ve = oe[5], xe = oe[6], Me = oe[7], Ne = oe[8], Qe = oe[9], Ue = oe[10], ze = oe[11], et = oe[12], nt = oe[13], At = oe[14], Et = oe[15];
        return te[0].setComponents(he - se, Me - pe, ze - Ne, Et - et).normalize(), te[1].setComponents(he + se, Me + pe, ze + Ne, Et + et).normalize(), te[2].setComponents(he + Ae, Me + ve, ze + Qe, Et + nt).normalize(), te[3].setComponents(he - Ae, Me - ve, ze - Qe, Et - nt).normalize(), te[4].setComponents(he - ue, Me - xe, ze - Ue, Et - At).normalize(), te[5].setComponents(he + ue, Me + xe, ze + Ue, Et + At).normalize(), this;
      }, intersectsObject: function() {
        var Z = new go();
        return function(te) {
          var oe = te.geometry;
          return oe.boundingSphere === null && oe.computeBoundingSphere(), Z.copy(oe.boundingSphere).applyMatrix4(te.matrixWorld), this.intersectsSphere(Z);
        };
      }(), intersectsSprite: function() {
        var Z = new go();
        return function(te) {
          return Z.center.set(0, 0, 0), Z.radius = 0.7071067811865476, Z.applyMatrix4(te.matrixWorld), this.intersectsSphere(Z);
        };
      }(), intersectsSphere: function(Z) {
        for (var te = this.planes, oe = Z.center, se = -Z.radius, Ae = 0; Ae < 6; Ae++)
          if (te[Ae].distanceToPoint(oe) < se)
            return !1;
        return !0;
      }, intersectsBox: function() {
        var Z = new mt();
        return function(te) {
          for (var oe = this.planes, se = 0; se < 6; se++) {
            var Ae = oe[se];
            if (Z.x = Ae.normal.x > 0 ? te.max.x : te.min.x, Z.y = Ae.normal.y > 0 ? te.max.y : te.min.y, Z.z = Ae.normal.z > 0 ? te.max.z : te.min.z, Ae.distanceToPoint(Z) < 0)
              return !1;
          }
          return !0;
        };
      }(), containsPoint: function(Z) {
        for (var te = this.planes, oe = 0; oe < 6; oe++)
          if (te[oe].distanceToPoint(Z) < 0)
            return !1;
        return !0;
      } });
      var Vn = { alphamap_fragment: `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif
`, alphamap_pars_fragment: `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif
`, alphatest_fragment: `#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif
`, aomap_fragment: `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( PHYSICAL )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif
`, aomap_pars_fragment: `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, begin_vertex: `
vec3 transformed = vec3( position );
`, beginnormal_vertex: `
vec3 objectNormal = vec3( normal );
`, bsdfs: `float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	if( decayExponent > 0.0 ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		return distanceFalloff * maxDistanceCutoffFactor;
#else
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
#endif
	}
	return 1.0;
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;
	return specularColor * AB.x + AB.y;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
`, bumpmap_pars_fragment: `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif
`, clipping_planes_fragment: `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	#endif
#endif
`, clipping_planes_pars_fragment: `#if NUM_CLIPPING_PLANES > 0
	#if ! defined( PHYSICAL ) && ! defined( PHONG )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif
`, clipping_planes_pars_vertex: `#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	varying vec3 vViewPosition;
#endif
`, clipping_planes_vertex: `#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	vViewPosition = - mvPosition.xyz;
#endif
`, color_fragment: `#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`, color_pars_fragment: `#ifdef USE_COLOR
	varying vec3 vColor;
#endif
`, color_pars_vertex: `#ifdef USE_COLOR
	varying vec3 vColor;
#endif`, color_vertex: `#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`, common: `#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#define saturate(a) clamp( a, 0.0, 1.0 )
#define whiteCompliment(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
`, cube_uv_reflection_fragment: `#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_textureSize (1024.0)
int getFaceFromDirection(vec3 direction) {
	vec3 absDirection = abs(direction);
	int face = -1;
	if( absDirection.x > absDirection.z ) {
		if(absDirection.x > absDirection.y )
			face = direction.x > 0.0 ? 0 : 3;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	else {
		if(absDirection.z > absDirection.y )
			face = direction.z > 0.0 ? 2 : 5;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	return face;
}
#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)
#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))
vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {
	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);
	float dxRoughness = dFdx(roughness);
	float dyRoughness = dFdy(roughness);
	vec3 dx = dFdx( vec * scale * dxRoughness );
	vec3 dy = dFdy( vec * scale * dyRoughness );
	float d = max( dot( dx, dx ), dot( dy, dy ) );
	d = clamp(d, 1.0, cubeUV_rangeClamp);
	float mipLevel = 0.5 * log2(d);
	return vec2(floor(mipLevel), fract(mipLevel));
}
#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)
#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)
vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {
	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;
	float a = 16.0 * cubeUV_rcpTextureSize;
	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );
	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;
	float powScale = exp2_packed.x * exp2_packed.y;
	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;
	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;
	bool bRes = mipLevel == 0.0;
	scale =  bRes && (scale < a) ? a : scale;
	vec3 r;
	vec2 offset;
	int face = getFaceFromDirection(direction);
	float rcpPowScale = 1.0 / powScale;
	if( face == 0) {
		r = vec3(direction.x, -direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 1) {
		r = vec3(direction.y, direction.x, direction.z);
		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 2) {
		r = vec3(direction.z, direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 3) {
		r = vec3(direction.x, direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else if( face == 4) {
		r = vec3(direction.y, direction.x, -direction.z);
		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else {
		r = vec3(direction.z, -direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	r = normalize(r);
	float texelOffset = 0.5 * cubeUV_rcpTextureSize;
	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;
	vec2 base = offset + vec2( texelOffset );
	return base + s * ( scale - 2.0 * texelOffset );
}
#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)
vec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {
	float roughnessVal = roughness* cubeUV_maxLods3;
	float r1 = floor(roughnessVal);
	float r2 = r1 + 1.0;
	float t = fract(roughnessVal);
	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);
	float s = mipInfo.y;
	float level0 = mipInfo.x;
	float level1 = level0 + 1.0;
	level1 = level1 > 5.0 ? 5.0 : level1;
	level0 += min( floor( s + 0.5 ), 5.0 );
	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);
	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));
	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);
	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));
	vec4 result = mix(color10, color20, t);
	return vec4(result.rgb, 1.0);
}
#endif
`, defaultnormal_vertex: `vec3 transformedNormal = normalMatrix * objectNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
`, displacementmap_pars_vertex: `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif
`, displacementmap_vertex: `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );
#endif
`, emissivemap_fragment: `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif
`, emissivemap_pars_fragment: `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif
`, encodings_fragment: `  gl_FragColor = linearToOutputTexel( gl_FragColor );
`, encodings_pars_fragment: `
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.xyz * value.w * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M            = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float D      = max( maxRange / maxRGB, 1.0 );
	D            = min( floor( D ) / 255.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;
	Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract(Le);
	vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;
	return vec4( max(vRGB, 0.0), 1.0 );
}
`, envmap_fragment: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToVertex, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	envColor = envMapTexelToLinear( envColor );
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif
`, envmap_pars_fragment: `#if defined( USE_ENVMAP ) || defined( PHYSICAL )
	uniform float reflectivity;
	uniform float envMapIntensity;
#endif
#ifdef USE_ENVMAP
	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )
		varying vec3 vWorldPosition;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif
`, envmap_pars_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif
`, envmap_physical_pars_fragment: `#if defined( USE_ENVMAP ) && defined( PHYSICAL )
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );
		#else
			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif
`, envmap_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif
`, fog_vertex: `
#ifdef USE_FOG
fogDepth = -mvPosition.z;
#endif`, fog_pars_vertex: `#ifdef USE_FOG
  varying float fogDepth;
#endif
`, fog_fragment: `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif
`, fog_pars_fragment: `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif
`, gradientmap_pars_fragment: `#ifdef TOON
	uniform sampler2D gradientMap;
	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
		float dotNL = dot( normal, lightDirection );
		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
		#ifdef USE_GRADIENTMAP
			return texture2D( gradientMap, coord ).rgb;
		#else
			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
		#endif
	}
#endif
`, lightmap_fragment: `#ifdef USE_LIGHTMAP
	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
#endif
`, lightmap_pars_fragment: `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, lights_lambert_vertex: `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif
`, lights_pars_begin: `uniform vec3 ambientLightColor;
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
		float shadowCameraNear;
		float shadowCameraFar;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif
`, lights_phong_fragment: `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`, lights_phong_pars_fragment: `varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	#ifdef TOON
		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#else
		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
		vec3 irradiance = dotNL * directLight.color;
	#endif
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)
`, lights_physical_fragment: `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );
#ifdef STANDARD
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );
#endif
`, lights_physical_pars_fragment: `struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
	#ifndef STANDARD
		float clearCoat;
		float clearCoatRoughness;
	#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearCoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos - halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos + halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos + halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos - halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifndef STANDARD
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );
	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	#ifndef STANDARD
		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	#ifndef STANDARD
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		float dotNL = dotNV;
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );
	#ifndef STANDARD
		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )
#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}
`, lights_fragment_begin: `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = normalize( vViewPosition );
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearCoatRadiance = vec3( 0.0 );
#endif
`, lights_fragment_maps: `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )
		irradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );
	#ifndef STANDARD
		clearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );
	#endif
#endif
`, lights_fragment_end: `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );
#endif
`, logdepthbuf_fragment: `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, logdepthbuf_pars_fragment: `#ifdef USE_LOGDEPTHBUF
	uniform float logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
#endif
`, logdepthbuf_pars_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
	uniform float logDepthBufFC;
#endif`, logdepthbuf_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
	#else
		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
		gl_Position.z *= gl_Position.w;
	#endif
#endif
`, map_fragment: `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif
`, map_pars_fragment: `#ifdef USE_MAP
	uniform sampler2D map;
#endif
`, map_particle_fragment: `#ifdef USE_MAP
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
`, map_particle_pars_fragment: `#ifdef USE_MAP
	uniform mat3 uvTransform;
	uniform sampler2D map;
#endif
`, metalnessmap_fragment: `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif
`, metalnessmap_pars_fragment: `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, morphnormal_vertex: `#ifdef USE_MORPHNORMALS
	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];
	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];
	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];
	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];
#endif
`, morphtarget_pars_vertex: `#ifdef USE_MORPHTARGETS
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`, morphtarget_vertex: `#ifdef USE_MORPHTARGETS
	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];
	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];
	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];
	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];
	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];
	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];
	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];
	#endif
#endif
`, normal_fragment_begin: `#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
#endif
`, normal_fragment_maps: `#ifdef USE_NORMALMAP
	#ifdef OBJECTSPACE_NORMALMAP
		normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
		#ifdef FLIP_SIDED
			normal = - normal;
		#endif
		#ifdef DOUBLE_SIDED
			normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		normal = normalize( normalMatrix * normal );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif
`, normalmap_pars_fragment: `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
	#ifdef OBJECTSPACE_NORMALMAP
		uniform mat3 normalMatrix;
	#else
		vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {
			vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
			vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
			vec2 st0 = dFdx( vUv.st );
			vec2 st1 = dFdy( vUv.st );
			float scale = sign( st1.t * st0.s - st0.t * st1.s );
			vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
			vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
			vec3 N = normalize( surf_norm );
			mat3 tsn = mat3( S, T, N );
			vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
			mapN.xy *= normalScale;
			mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			return normalize( tsn * mapN );
		}
	#endif
#endif
`, packing: `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}
`, premultiplied_alpha_fragment: `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif
`, project_vertex: `vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
gl_Position = projectionMatrix * mvPosition;
`, dithering_fragment: `#if defined( DITHERING )
  gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif
`, dithering_pars_fragment: `#if defined( DITHERING )
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif
`, roughnessmap_fragment: `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif
`, roughnessmap_pars_fragment: `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, shadowmap_pars_fragment: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = floor( uv * size + 0.5 ) / size;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif
`, shadowmap_pars_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
#endif
`, shadowmap_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif
`, shadowmask_pars_fragment: `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}
`, skinbase_vertex: `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, skinning_pars_vertex: `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif
`, skinning_vertex: `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif
`, skinnormal_vertex: `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
#endif
`, specularmap_fragment: `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, specularmap_pars_fragment: `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, tonemapping_fragment: `#if defined( TONE_MAPPING )
  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif
`, tonemapping_pars_fragment: `#ifndef saturate
	#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
`, uv_pars_fragment: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
#endif`, uv_pars_vertex: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
`, uv_vertex: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, uv2_pars_fragment: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, uv2_pars_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
#endif`, uv2_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = uv2;
#endif`, worldpos_vertex: `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
#endif
`, cube_frag: `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldPosition;
void main() {
	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );
	gl_FragColor.a *= opacity;
}
`, cube_vert: `varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}
`, depth_frag: `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}
`, depth_vert: `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`, distanceRGBA_frag: `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}
`, distanceRGBA_vert: `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}
`, equirect_frag: `uniform sampler2D tEquirect;
varying vec3 vWorldPosition;
#include <common>
void main() {
	vec3 direction = normalize( vWorldPosition );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	gl_FragColor = texture2D( tEquirect, sampleUV );
}
`, equirect_vert: `varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}
`, linedashed_frag: `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, linedashed_vert: `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
`, meshbasic_frag: `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, meshbasic_vert: `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}
`, meshlambert_frag: `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshlambert_vert: `#define LAMBERT
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, meshphong_frag: `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshphong_vert: `#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, meshphysical_frag: `#define PHYSICAL
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifndef STANDARD
	uniform float clearCoat;
	uniform float clearCoatRoughness;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshphysical_vert: `#define PHYSICAL
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, normal_frag: `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}
`, normal_vert: `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	vViewPosition = - mvPosition.xyz;
#endif
}
`, points_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, points_vert: `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#ifdef USE_SIZEATTENUATION
		gl_PointSize = size * ( scale / - mvPosition.z );
	#else
		gl_PointSize = size;
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}
`, shadow_frag: `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <fog_fragment>
}
`, shadow_vert: `#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, sprite_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, sprite_vert: `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	vec4 mvPosition;
	mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
` }, Li = { merge: function(Z) {
        for (var te = {}, oe = 0; oe < Z.length; oe++) {
          var se = this.clone(Z[oe]);
          for (var Ae in se)
            te[Ae] = se[Ae];
        }
        return te;
      }, clone: function(Z) {
        var te = {};
        for (var oe in Z)
          for (var se in te[oe] = {}, Z[oe]) {
            var Ae = Z[oe][se];
            Ae && (Ae.isColor || Ae.isMatrix3 || Ae.isMatrix4 || Ae.isVector2 || Ae.isVector3 || Ae.isVector4 || Ae.isTexture) ? te[oe][se] = Ae.clone() : Array.isArray(Ae) ? te[oe][se] = Ae.slice() : te[oe][se] = Ae;
          }
        return te;
      } }, Hu = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 };
      function sn(Z, te, oe) {
        return te === void 0 && oe === void 0 ? this.set(Z) : this.setRGB(Z, te, oe);
      }
      Object.assign(sn.prototype, { isColor: !0, r: 1, g: 1, b: 1, set: function(Z) {
        return Z && Z.isColor ? this.copy(Z) : typeof Z == "number" ? this.setHex(Z) : typeof Z == "string" && this.setStyle(Z), this;
      }, setScalar: function(Z) {
        return this.r = Z, this.g = Z, this.b = Z, this;
      }, setHex: function(Z) {
        return Z = Math.floor(Z), this.r = (Z >> 16 & 255) / 255, this.g = (Z >> 8 & 255) / 255, this.b = (255 & Z) / 255, this;
      }, setRGB: function(Z, te, oe) {
        return this.r = Z, this.g = te, this.b = oe, this;
      }, setHSL: function() {
        function Z(te, oe, se) {
          return se < 0 && (se += 1), se > 1 && (se -= 1), se < 1 / 6 ? te + 6 * (oe - te) * se : se < 0.5 ? oe : se < 2 / 3 ? te + 6 * (oe - te) * (2 / 3 - se) : te;
        }
        return function(te, oe, se) {
          if (te = bn.euclideanModulo(te, 1), oe = bn.clamp(oe, 0, 1), se = bn.clamp(se, 0, 1), oe === 0)
            this.r = this.g = this.b = se;
          else {
            var Ae = se <= 0.5 ? se * (1 + oe) : se + oe - se * oe, ue = 2 * se - Ae;
            this.r = Z(ue, Ae, te + 1 / 3), this.g = Z(ue, Ae, te), this.b = Z(ue, Ae, te - 1 / 3);
          }
          return this;
        };
      }(), setStyle: function(Z) {
        function te(Ne) {
          Ne !== void 0 && parseFloat(Ne) < 1 && console.warn("THREE.Color: Alpha component of " + Z + " will be ignored.");
        }
        var oe;
        if (oe = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(Z)) {
          var se, Ae = oe[1], ue = oe[2];
          switch (Ae) {
            case "rgb":
            case "rgba":
              if (se = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(ue))
                return this.r = Math.min(255, parseInt(se[1], 10)) / 255, this.g = Math.min(255, parseInt(se[2], 10)) / 255, this.b = Math.min(255, parseInt(se[3], 10)) / 255, te(se[5]), this;
              if (se = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(ue))
                return this.r = Math.min(100, parseInt(se[1], 10)) / 100, this.g = Math.min(100, parseInt(se[2], 10)) / 100, this.b = Math.min(100, parseInt(se[3], 10)) / 100, te(se[5]), this;
              break;
            case "hsl":
            case "hsla":
              if (se = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(ue)) {
                var he = parseFloat(se[1]) / 360, pe = parseInt(se[2], 10) / 100, ve = parseInt(se[3], 10) / 100;
                return te(se[5]), this.setHSL(he, pe, ve);
              }
          }
        } else if (oe = /^\#([A-Fa-f0-9]+)$/.exec(Z)) {
          var xe, Me = (xe = oe[1]).length;
          if (Me === 3)
            return this.r = parseInt(xe.charAt(0) + xe.charAt(0), 16) / 255, this.g = parseInt(xe.charAt(1) + xe.charAt(1), 16) / 255, this.b = parseInt(xe.charAt(2) + xe.charAt(2), 16) / 255, this;
          if (Me === 6)
            return this.r = parseInt(xe.charAt(0) + xe.charAt(1), 16) / 255, this.g = parseInt(xe.charAt(2) + xe.charAt(3), 16) / 255, this.b = parseInt(xe.charAt(4) + xe.charAt(5), 16) / 255, this;
        }
        return Z && Z.length > 0 && ((xe = Hu[Z]) !== void 0 ? this.setHex(xe) : console.warn("THREE.Color: Unknown color " + Z)), this;
      }, clone: function() {
        return new this.constructor(this.r, this.g, this.b);
      }, copy: function(Z) {
        return this.r = Z.r, this.g = Z.g, this.b = Z.b, this;
      }, copyGammaToLinear: function(Z, te) {
        return te === void 0 && (te = 2), this.r = Math.pow(Z.r, te), this.g = Math.pow(Z.g, te), this.b = Math.pow(Z.b, te), this;
      }, copyLinearToGamma: function(Z, te) {
        te === void 0 && (te = 2);
        var oe = te > 0 ? 1 / te : 1;
        return this.r = Math.pow(Z.r, oe), this.g = Math.pow(Z.g, oe), this.b = Math.pow(Z.b, oe), this;
      }, convertGammaToLinear: function(Z) {
        return this.copyGammaToLinear(this, Z), this;
      }, convertLinearToGamma: function(Z) {
        return this.copyLinearToGamma(this, Z), this;
      }, copySRGBToLinear: function() {
        function Z(te) {
          return te < 0.04045 ? 0.0773993808 * te : Math.pow(0.9478672986 * te + 0.0521327014, 2.4);
        }
        return function(te) {
          return this.r = Z(te.r), this.g = Z(te.g), this.b = Z(te.b), this;
        };
      }(), copyLinearToSRGB: function() {
        function Z(te) {
          return te < 31308e-7 ? 12.92 * te : 1.055 * Math.pow(te, 0.41666) - 0.055;
        }
        return function(te) {
          return this.r = Z(te.r), this.g = Z(te.g), this.b = Z(te.b), this;
        };
      }(), convertSRGBToLinear: function() {
        return this.copySRGBToLinear(this), this;
      }, convertLinearToSRGB: function() {
        return this.copyLinearToSRGB(this), this;
      }, getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;
      }, getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
      }, getHSL: function(Z) {
        Z === void 0 && (console.warn("THREE.Color: .getHSL() target is now required"), Z = { h: 0, s: 0, l: 0 });
        var te, oe, se = this.r, Ae = this.g, ue = this.b, he = Math.max(se, Ae, ue), pe = Math.min(se, Ae, ue), ve = (pe + he) / 2;
        if (pe === he)
          te = 0, oe = 0;
        else {
          var xe = he - pe;
          switch (oe = ve <= 0.5 ? xe / (he + pe) : xe / (2 - he - pe), he) {
            case se:
              te = (Ae - ue) / xe + (Ae < ue ? 6 : 0);
              break;
            case Ae:
              te = (ue - se) / xe + 2;
              break;
            case ue:
              te = (se - Ae) / xe + 4;
          }
          te /= 6;
        }
        return Z.h = te, Z.s = oe, Z.l = ve, Z;
      }, getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")";
      }, offsetHSL: function() {
        var Z = {};
        return function(te, oe, se) {
          return this.getHSL(Z), Z.h += te, Z.s += oe, Z.l += se, this.setHSL(Z.h, Z.s, Z.l), this;
        };
      }(), add: function(Z) {
        return this.r += Z.r, this.g += Z.g, this.b += Z.b, this;
      }, addColors: function(Z, te) {
        return this.r = Z.r + te.r, this.g = Z.g + te.g, this.b = Z.b + te.b, this;
      }, addScalar: function(Z) {
        return this.r += Z, this.g += Z, this.b += Z, this;
      }, sub: function(Z) {
        return this.r = Math.max(0, this.r - Z.r), this.g = Math.max(0, this.g - Z.g), this.b = Math.max(0, this.b - Z.b), this;
      }, multiply: function(Z) {
        return this.r *= Z.r, this.g *= Z.g, this.b *= Z.b, this;
      }, multiplyScalar: function(Z) {
        return this.r *= Z, this.g *= Z, this.b *= Z, this;
      }, lerp: function(Z, te) {
        return this.r += (Z.r - this.r) * te, this.g += (Z.g - this.g) * te, this.b += (Z.b - this.b) * te, this;
      }, equals: function(Z) {
        return Z.r === this.r && Z.g === this.g && Z.b === this.b;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this.r = Z[te], this.g = Z[te + 1], this.b = Z[te + 2], this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this.r, Z[te + 1] = this.g, Z[te + 2] = this.b, Z;
      }, toJSON: function() {
        return this.getHex();
      } });
      var cn = { common: { diffuse: { value: new sn(15658734) }, opacity: { value: 1 }, map: { value: null }, uvTransform: { value: new Vi() }, alphaMap: { value: null } }, specularmap: { specularMap: { value: null } }, envmap: { envMap: { value: null }, flipEnvMap: { value: -1 }, reflectivity: { value: 1 }, refractionRatio: { value: 0.98 }, maxMipLevel: { value: 0 } }, aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } }, lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } }, emissivemap: { emissiveMap: { value: null } }, bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } }, normalmap: { normalMap: { value: null }, normalScale: { value: new xr(1, 1) } }, displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } }, roughnessmap: { roughnessMap: { value: null } }, metalnessmap: { metalnessMap: { value: null } }, gradientmap: { gradientMap: { value: null } }, fog: { fogDensity: { value: 25e-5 }, fogNear: { value: 1 }, fogFar: { value: 2e3 }, fogColor: { value: new sn(16777215) } }, lights: { ambientLightColor: { value: [] }, directionalLights: { value: [], properties: { direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, directionalShadowMap: { value: [] }, directionalShadowMatrix: { value: [] }, spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, spotShadowMap: { value: [] }, spotShadowMatrix: { value: [] }, pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {} } }, pointShadowMap: { value: [] }, pointShadowMatrix: { value: [] }, hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } }, rectAreaLights: { value: [], properties: { color: {}, position: {}, width: {}, height: {} } } }, points: { diffuse: { value: new sn(15658734) }, opacity: { value: 1 }, size: { value: 1 }, scale: { value: 1 }, map: { value: null }, uvTransform: { value: new Vi() } }, sprite: { diffuse: { value: new sn(15658734) }, opacity: { value: 1 }, center: { value: new xr(0.5, 0.5) }, rotation: { value: 0 }, map: { value: null }, uvTransform: { value: new Vi() } } }, aa = { basic: { uniforms: Li.merge([cn.common, cn.specularmap, cn.envmap, cn.aomap, cn.lightmap, cn.fog]), vertexShader: Vn.meshbasic_vert, fragmentShader: Vn.meshbasic_frag }, lambert: { uniforms: Li.merge([cn.common, cn.specularmap, cn.envmap, cn.aomap, cn.lightmap, cn.emissivemap, cn.fog, cn.lights, { emissive: { value: new sn(0) } }]), vertexShader: Vn.meshlambert_vert, fragmentShader: Vn.meshlambert_frag }, phong: { uniforms: Li.merge([cn.common, cn.specularmap, cn.envmap, cn.aomap, cn.lightmap, cn.emissivemap, cn.bumpmap, cn.normalmap, cn.displacementmap, cn.gradientmap, cn.fog, cn.lights, { emissive: { value: new sn(0) }, specular: { value: new sn(1118481) }, shininess: { value: 30 } }]), vertexShader: Vn.meshphong_vert, fragmentShader: Vn.meshphong_frag }, standard: { uniforms: Li.merge([cn.common, cn.envmap, cn.aomap, cn.lightmap, cn.emissivemap, cn.bumpmap, cn.normalmap, cn.displacementmap, cn.roughnessmap, cn.metalnessmap, cn.fog, cn.lights, { emissive: { value: new sn(0) }, roughness: { value: 0.5 }, metalness: { value: 0.5 }, envMapIntensity: { value: 1 } }]), vertexShader: Vn.meshphysical_vert, fragmentShader: Vn.meshphysical_frag }, points: { uniforms: Li.merge([cn.points, cn.fog]), vertexShader: Vn.points_vert, fragmentShader: Vn.points_frag }, dashed: { uniforms: Li.merge([cn.common, cn.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } }]), vertexShader: Vn.linedashed_vert, fragmentShader: Vn.linedashed_frag }, depth: { uniforms: Li.merge([cn.common, cn.displacementmap]), vertexShader: Vn.depth_vert, fragmentShader: Vn.depth_frag }, normal: { uniforms: Li.merge([cn.common, cn.bumpmap, cn.normalmap, cn.displacementmap, { opacity: { value: 1 } }]), vertexShader: Vn.normal_vert, fragmentShader: Vn.normal_frag }, sprite: { uniforms: Li.merge([cn.sprite, cn.fog]), vertexShader: Vn.sprite_vert, fragmentShader: Vn.sprite_frag }, cube: { uniforms: { tCube: { value: null }, tFlip: { value: -1 }, opacity: { value: 1 } }, vertexShader: Vn.cube_vert, fragmentShader: Vn.cube_frag }, equirect: { uniforms: { tEquirect: { value: null } }, vertexShader: Vn.equirect_vert, fragmentShader: Vn.equirect_frag }, distanceRGBA: { uniforms: Li.merge([cn.common, cn.displacementmap, { referencePosition: { value: new mt() }, nearDistance: { value: 1 }, farDistance: { value: 1e3 } }]), vertexShader: Vn.distanceRGBA_vert, fragmentShader: Vn.distanceRGBA_frag }, shadow: { uniforms: Li.merge([cn.lights, cn.fog, { color: { value: new sn(0) }, opacity: { value: 1 } }]), vertexShader: Vn.shadow_vert, fragmentShader: Vn.shadow_frag } };
      function Xc() {
        var Z = null, te = !1, oe = null;
        function se(Ae, ue) {
          te !== !1 && (oe(Ae, ue), Z.requestAnimationFrame(se));
        }
        return { start: function() {
          te !== !0 && oe !== null && (Z.requestAnimationFrame(se), te = !0);
        }, stop: function() {
          te = !1;
        }, setAnimationLoop: function(Ae) {
          oe = Ae;
        }, setContext: function(Ae) {
          Z = Ae;
        } };
      }
      function qu(Z) {
        var te = /* @__PURE__ */ new WeakMap();
        return { get: function(oe) {
          return oe.isInterleavedBufferAttribute && (oe = oe.data), te.get(oe);
        }, remove: function(oe) {
          oe.isInterleavedBufferAttribute && (oe = oe.data);
          var se = te.get(oe);
          se && (Z.deleteBuffer(se.buffer), te.delete(oe));
        }, update: function(oe, se) {
          oe.isInterleavedBufferAttribute && (oe = oe.data);
          var Ae = te.get(oe);
          Ae === void 0 ? te.set(oe, function(ue, he) {
            var pe = ue.array, ve = ue.dynamic ? Z.DYNAMIC_DRAW : Z.STATIC_DRAW, xe = Z.createBuffer();
            Z.bindBuffer(he, xe), Z.bufferData(he, pe, ve), ue.onUploadCallback();
            var Me = Z.FLOAT;
            return pe instanceof Float32Array ? Me = Z.FLOAT : pe instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : pe instanceof Uint16Array ? Me = Z.UNSIGNED_SHORT : pe instanceof Int16Array ? Me = Z.SHORT : pe instanceof Uint32Array ? Me = Z.UNSIGNED_INT : pe instanceof Int32Array ? Me = Z.INT : pe instanceof Int8Array ? Me = Z.BYTE : pe instanceof Uint8Array && (Me = Z.UNSIGNED_BYTE), { buffer: xe, type: Me, bytesPerElement: pe.BYTES_PER_ELEMENT, version: ue.version };
          }(oe, se)) : Ae.version < oe.version && (function(ue, he, pe) {
            var ve = he.array, xe = he.updateRange;
            Z.bindBuffer(pe, ue), he.dynamic === !1 ? Z.bufferData(pe, ve, Z.STATIC_DRAW) : xe.count === -1 ? Z.bufferSubData(pe, 0, ve) : xe.count === 0 ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (Z.bufferSubData(pe, xe.offset * ve.BYTES_PER_ELEMENT, ve.subarray(xe.offset, xe.offset + xe.count)), xe.count = -1);
          }(Ae.buffer, oe, se), Ae.version = oe.version);
        } };
      }
      function sa(Z, te, oe, se) {
        this._x = Z || 0, this._y = te || 0, this._z = oe || 0, this._order = se || sa.DefaultOrder;
      }
      function eA() {
        this.mask = 1;
      }
      aa.physical = { uniforms: Li.merge([aa.standard.uniforms, { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } }]), vertexShader: Vn.meshphysical_vert, fragmentShader: Vn.meshphysical_frag }, sa.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], sa.DefaultOrder = "XYZ", Object.defineProperties(sa.prototype, { x: { get: function() {
        return this._x;
      }, set: function(Z) {
        this._x = Z, this.onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(Z) {
        this._y = Z, this.onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(Z) {
        this._z = Z, this.onChangeCallback();
      } }, order: { get: function() {
        return this._order;
      }, set: function(Z) {
        this._order = Z, this.onChangeCallback();
      } } }), Object.assign(sa.prototype, { isEuler: !0, set: function(Z, te, oe, se) {
        return this._x = Z, this._y = te, this._z = oe, this._order = se || this._order, this.onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._order);
      }, copy: function(Z) {
        return this._x = Z._x, this._y = Z._y, this._z = Z._z, this._order = Z._order, this.onChangeCallback(), this;
      }, setFromRotationMatrix: function(Z, te, oe) {
        var se = bn.clamp, Ae = Z.elements, ue = Ae[0], he = Ae[4], pe = Ae[8], ve = Ae[1], xe = Ae[5], Me = Ae[9], Ne = Ae[2], Qe = Ae[6], Ue = Ae[10];
        return (te = te || this._order) === "XYZ" ? (this._y = Math.asin(se(pe, -1, 1)), Math.abs(pe) < 0.99999 ? (this._x = Math.atan2(-Me, Ue), this._z = Math.atan2(-he, ue)) : (this._x = Math.atan2(Qe, xe), this._z = 0)) : te === "YXZ" ? (this._x = Math.asin(-se(Me, -1, 1)), Math.abs(Me) < 0.99999 ? (this._y = Math.atan2(pe, Ue), this._z = Math.atan2(ve, xe)) : (this._y = Math.atan2(-Ne, ue), this._z = 0)) : te === "ZXY" ? (this._x = Math.asin(se(Qe, -1, 1)), Math.abs(Qe) < 0.99999 ? (this._y = Math.atan2(-Ne, Ue), this._z = Math.atan2(-he, xe)) : (this._y = 0, this._z = Math.atan2(ve, ue))) : te === "ZYX" ? (this._y = Math.asin(-se(Ne, -1, 1)), Math.abs(Ne) < 0.99999 ? (this._x = Math.atan2(Qe, Ue), this._z = Math.atan2(ve, ue)) : (this._x = 0, this._z = Math.atan2(-he, xe))) : te === "YZX" ? (this._z = Math.asin(se(ve, -1, 1)), Math.abs(ve) < 0.99999 ? (this._x = Math.atan2(-Me, xe), this._y = Math.atan2(-Ne, ue)) : (this._x = 0, this._y = Math.atan2(pe, Ue))) : te === "XZY" ? (this._z = Math.asin(-se(he, -1, 1)), Math.abs(he) < 0.99999 ? (this._x = Math.atan2(Qe, xe), this._y = Math.atan2(pe, ue)) : (this._x = Math.atan2(-Me, Ue), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + te), this._order = te, oe !== !1 && this.onChangeCallback(), this;
      }, setFromQuaternion: function() {
        var Z = new pn();
        return function(te, oe, se) {
          return Z.makeRotationFromQuaternion(te), this.setFromRotationMatrix(Z, oe, se);
        };
      }(), setFromVector3: function(Z, te) {
        return this.set(Z.x, Z.y, Z.z, te || this._order);
      }, reorder: function() {
        var Z = new ci();
        return function(te) {
          return Z.setFromEuler(this), this.setFromQuaternion(Z, te);
        };
      }(), equals: function(Z) {
        return Z._x === this._x && Z._y === this._y && Z._z === this._z && Z._order === this._order;
      }, fromArray: function(Z) {
        return this._x = Z[0], this._y = Z[1], this._z = Z[2], Z[3] !== void 0 && (this._order = Z[3]), this.onChangeCallback(), this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this._x, Z[te + 1] = this._y, Z[te + 2] = this._z, Z[te + 3] = this._order, Z;
      }, toVector3: function(Z) {
        return Z ? Z.set(this._x, this._y, this._z) : new mt(this._x, this._y, this._z);
      }, onChange: function(Z) {
        return this.onChangeCallback = Z, this;
      }, onChangeCallback: function() {
      } }), Object.assign(eA.prototype, { set: function(Z) {
        this.mask = 1 << Z | 0;
      }, enable: function(Z) {
        this.mask |= 1 << Z | 0;
      }, toggle: function(Z) {
        this.mask ^= 1 << Z | 0;
      }, disable: function(Z) {
        this.mask &= ~(1 << Z | 0);
      }, test: function(Z) {
        return (this.mask & Z.mask) != 0;
      } });
      var Du = 0;
      function Dr() {
        Object.defineProperty(this, "id", { value: Du++ }), this.uuid = bn.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Dr.DefaultUp.clone();
        var Z = new mt(), te = new sa(), oe = new ci(), se = new mt(1, 1, 1);
        te.onChange(function() {
          oe.setFromEuler(te, !1);
        }), oe.onChange(function() {
          te.setFromQuaternion(oe, void 0, !1);
        }), Object.defineProperties(this, { position: { enumerable: !0, value: Z }, rotation: { enumerable: !0, value: te }, quaternion: { enumerable: !0, value: oe }, scale: { enumerable: !0, value: se }, modelViewMatrix: { value: new pn() }, normalMatrix: { value: new Vi() } }), this.matrix = new pn(), this.matrixWorld = new pn(), this.matrixAutoUpdate = Dr.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new eA(), this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {};
      }
      function Qo() {
        Dr.call(this), this.type = "Camera", this.matrixWorldInverse = new pn(), this.projectionMatrix = new pn();
      }
      function Pa(Z, te, oe, se, Ae, ue) {
        Qo.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = Z, this.right = te, this.top = oe, this.bottom = se, this.near = Ae !== void 0 ? Ae : 0.1, this.far = ue !== void 0 ? ue : 2e3, this.updateProjectionMatrix();
      }
      function Do(Z, te, oe, se, Ae, ue) {
        this.a = Z, this.b = te, this.c = oe, this.normal = se && se.isVector3 ? se : new mt(), this.vertexNormals = Array.isArray(se) ? se : [], this.color = Ae && Ae.isColor ? Ae : new sn(), this.vertexColors = Array.isArray(Ae) ? Ae : [], this.materialIndex = ue !== void 0 ? ue : 0;
      }
      Dr.DefaultUp = new mt(0, 1, 0), Dr.DefaultMatrixAutoUpdate = !0, Dr.prototype = Object.assign(Object.create(ce.prototype), { constructor: Dr, isObject3D: !0, onBeforeRender: function() {
      }, onAfterRender: function() {
      }, applyMatrix: function(Z) {
        this.matrix.multiplyMatrices(Z, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale);
      }, applyQuaternion: function(Z) {
        return this.quaternion.premultiply(Z), this;
      }, setRotationFromAxisAngle: function(Z, te) {
        this.quaternion.setFromAxisAngle(Z, te);
      }, setRotationFromEuler: function(Z) {
        this.quaternion.setFromEuler(Z, !0);
      }, setRotationFromMatrix: function(Z) {
        this.quaternion.setFromRotationMatrix(Z);
      }, setRotationFromQuaternion: function(Z) {
        this.quaternion.copy(Z);
      }, rotateOnAxis: function() {
        var Z = new ci();
        return function(te, oe) {
          return Z.setFromAxisAngle(te, oe), this.quaternion.multiply(Z), this;
        };
      }(), rotateOnWorldAxis: function() {
        var Z = new ci();
        return function(te, oe) {
          return Z.setFromAxisAngle(te, oe), this.quaternion.premultiply(Z), this;
        };
      }(), rotateX: function() {
        var Z = new mt(1, 0, 0);
        return function(te) {
          return this.rotateOnAxis(Z, te);
        };
      }(), rotateY: function() {
        var Z = new mt(0, 1, 0);
        return function(te) {
          return this.rotateOnAxis(Z, te);
        };
      }(), rotateZ: function() {
        var Z = new mt(0, 0, 1);
        return function(te) {
          return this.rotateOnAxis(Z, te);
        };
      }(), translateOnAxis: function() {
        var Z = new mt();
        return function(te, oe) {
          return Z.copy(te).applyQuaternion(this.quaternion), this.position.add(Z.multiplyScalar(oe)), this;
        };
      }(), translateX: function() {
        var Z = new mt(1, 0, 0);
        return function(te) {
          return this.translateOnAxis(Z, te);
        };
      }(), translateY: function() {
        var Z = new mt(0, 1, 0);
        return function(te) {
          return this.translateOnAxis(Z, te);
        };
      }(), translateZ: function() {
        var Z = new mt(0, 0, 1);
        return function(te) {
          return this.translateOnAxis(Z, te);
        };
      }(), localToWorld: function(Z) {
        return Z.applyMatrix4(this.matrixWorld);
      }, worldToLocal: function() {
        var Z = new pn();
        return function(te) {
          return te.applyMatrix4(Z.getInverse(this.matrixWorld));
        };
      }(), lookAt: function() {
        var Z = new pn(), te = new mt();
        return function(oe, se, Ae) {
          oe.isVector3 ? te.copy(oe) : te.set(oe, se, Ae), this.isCamera ? Z.lookAt(this.position, te, this.up) : Z.lookAt(te, this.position, this.up), this.quaternion.setFromRotationMatrix(Z);
        };
      }(), add: function(Z) {
        if (arguments.length > 1) {
          for (var te = 0; te < arguments.length; te++)
            this.add(arguments[te]);
          return this;
        }
        return Z === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", Z), this) : (Z && Z.isObject3D ? (Z.parent !== null && Z.parent.remove(Z), Z.parent = this, Z.dispatchEvent({ type: "added" }), this.children.push(Z)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", Z), this);
      }, remove: function(Z) {
        if (arguments.length > 1) {
          for (var te = 0; te < arguments.length; te++)
            this.remove(arguments[te]);
          return this;
        }
        var oe = this.children.indexOf(Z);
        return oe !== -1 && (Z.parent = null, Z.dispatchEvent({ type: "removed" }), this.children.splice(oe, 1)), this;
      }, getObjectById: function(Z) {
        return this.getObjectByProperty("id", Z);
      }, getObjectByName: function(Z) {
        return this.getObjectByProperty("name", Z);
      }, getObjectByProperty: function(Z, te) {
        if (this[Z] === te)
          return this;
        for (var oe = 0, se = this.children.length; oe < se; oe++) {
          var Ae = this.children[oe].getObjectByProperty(Z, te);
          if (Ae !== void 0)
            return Ae;
        }
      }, getWorldPosition: function(Z) {
        return Z === void 0 && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), Z = new mt()), this.updateMatrixWorld(!0), Z.setFromMatrixPosition(this.matrixWorld);
      }, getWorldQuaternion: function() {
        var Z = new mt(), te = new mt();
        return function(oe) {
          return oe === void 0 && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), oe = new ci()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Z, oe, te), oe;
        };
      }(), getWorldScale: function() {
        var Z = new mt(), te = new ci();
        return function(oe) {
          return oe === void 0 && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), oe = new mt()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Z, te, oe), oe;
        };
      }(), getWorldDirection: function() {
        var Z = new ci();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), te = new mt()), this.getWorldQuaternion(Z), te.set(0, 0, 1).applyQuaternion(Z);
        };
      }(), raycast: function() {
      }, traverse: function(Z) {
        Z(this);
        for (var te = this.children, oe = 0, se = te.length; oe < se; oe++)
          te[oe].traverse(Z);
      }, traverseVisible: function(Z) {
        if (this.visible !== !1) {
          Z(this);
          for (var te = this.children, oe = 0, se = te.length; oe < se; oe++)
            te[oe].traverseVisible(Z);
        }
      }, traverseAncestors: function(Z) {
        var te = this.parent;
        te !== null && (Z(te), te.traverseAncestors(Z));
      }, updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
      }, updateMatrixWorld: function(Z) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || Z) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, Z = !0);
        for (var te = this.children, oe = 0, se = te.length; oe < se; oe++)
          te[oe].updateMatrixWorld(Z);
      }, toJSON: function(Z) {
        var te = Z === void 0 || typeof Z == "string", oe = {};
        te && (Z = { geometries: {}, materials: {}, textures: {}, images: {}, shapes: {} }, oe.metadata = { version: 4.5, type: "Object", generator: "Object3D.toJSON" });
        var se = {};
        function Ae(nt, At) {
          return nt[At.uuid] === void 0 && (nt[At.uuid] = At.toJSON(Z)), At.uuid;
        }
        if (se.uuid = this.uuid, se.type = this.type, this.name !== "" && (se.name = this.name), this.castShadow === !0 && (se.castShadow = !0), this.receiveShadow === !0 && (se.receiveShadow = !0), this.visible === !1 && (se.visible = !1), this.frustumCulled === !1 && (se.frustumCulled = !1), this.renderOrder !== 0 && (se.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (se.userData = this.userData), se.layers = this.layers.mask, se.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (se.matrixAutoUpdate = !1), this.isMesh || this.isLine || this.isPoints) {
          se.geometry = Ae(Z.geometries, this.geometry);
          var ue = this.geometry.parameters;
          if (ue !== void 0 && ue.shapes !== void 0) {
            var he = ue.shapes;
            if (Array.isArray(he))
              for (var pe = 0, ve = he.length; pe < ve; pe++) {
                var xe = he[pe];
                Ae(Z.shapes, xe);
              }
            else
              Ae(Z.shapes, he);
          }
        }
        if (this.material !== void 0)
          if (Array.isArray(this.material)) {
            var Me = [];
            for (pe = 0, ve = this.material.length; pe < ve; pe++)
              Me.push(Ae(Z.materials, this.material[pe]));
            se.material = Me;
          } else
            se.material = Ae(Z.materials, this.material);
        if (this.children.length > 0)
          for (se.children = [], pe = 0; pe < this.children.length; pe++)
            se.children.push(this.children[pe].toJSON(Z).object);
        if (te) {
          var Ne = et(Z.geometries), Qe = et(Z.materials), Ue = et(Z.textures), ze = et(Z.images);
          he = et(Z.shapes), Ne.length > 0 && (oe.geometries = Ne), Qe.length > 0 && (oe.materials = Qe), Ue.length > 0 && (oe.textures = Ue), ze.length > 0 && (oe.images = ze), he.length > 0 && (oe.shapes = he);
        }
        return oe.object = se, oe;
        function et(nt) {
          var At = [];
          for (var Et in nt) {
            var st = nt[Et];
            delete st.metadata, At.push(st);
          }
          return At;
        }
      }, clone: function(Z) {
        return new this.constructor().copy(this, Z);
      }, copy: function(Z, te) {
        if (te === void 0 && (te = !0), this.name = Z.name, this.up.copy(Z.up), this.position.copy(Z.position), this.quaternion.copy(Z.quaternion), this.scale.copy(Z.scale), this.matrix.copy(Z.matrix), this.matrixWorld.copy(Z.matrixWorld), this.matrixAutoUpdate = Z.matrixAutoUpdate, this.matrixWorldNeedsUpdate = Z.matrixWorldNeedsUpdate, this.layers.mask = Z.layers.mask, this.visible = Z.visible, this.castShadow = Z.castShadow, this.receiveShadow = Z.receiveShadow, this.frustumCulled = Z.frustumCulled, this.renderOrder = Z.renderOrder, this.userData = JSON.parse(JSON.stringify(Z.userData)), te === !0)
          for (var oe = 0; oe < Z.children.length; oe++) {
            var se = Z.children[oe];
            this.add(se.clone());
          }
        return this;
      } }), Qo.prototype = Object.assign(Object.create(Dr.prototype), { constructor: Qo, isCamera: !0, copy: function(Z, te) {
        return Dr.prototype.copy.call(this, Z, te), this.matrixWorldInverse.copy(Z.matrixWorldInverse), this.projectionMatrix.copy(Z.projectionMatrix), this;
      }, getWorldDirection: function() {
        var Z = new ci();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), te = new mt()), this.getWorldQuaternion(Z), te.set(0, 0, -1).applyQuaternion(Z);
        };
      }(), updateMatrixWorld: function(Z) {
        Dr.prototype.updateMatrixWorld.call(this, Z), this.matrixWorldInverse.getInverse(this.matrixWorld);
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), Pa.prototype = Object.assign(Object.create(Qo.prototype), { constructor: Pa, isOrthographicCamera: !0, copy: function(Z, te) {
        return Qo.prototype.copy.call(this, Z, te), this.left = Z.left, this.right = Z.right, this.top = Z.top, this.bottom = Z.bottom, this.near = Z.near, this.far = Z.far, this.zoom = Z.zoom, this.view = Z.view === null ? null : Object.assign({}, Z.view), this;
      }, setViewOffset: function(Z, te, oe, se, Ae, ue) {
        this.view === null && (this.view = { enabled: !0, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = !0, this.view.fullWidth = Z, this.view.fullHeight = te, this.view.offsetX = oe, this.view.offsetY = se, this.view.width = Ae, this.view.height = ue, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var Z = (this.right - this.left) / (2 * this.zoom), te = (this.top - this.bottom) / (2 * this.zoom), oe = (this.right + this.left) / 2, se = (this.top + this.bottom) / 2, Ae = oe - Z, ue = oe + Z, he = se + te, pe = se - te;
        if (this.view !== null && this.view.enabled) {
          var ve = this.zoom / (this.view.width / this.view.fullWidth), xe = this.zoom / (this.view.height / this.view.fullHeight), Me = (this.right - this.left) / this.view.width, Ne = (this.top - this.bottom) / this.view.height;
          ue = (Ae += Me * (this.view.offsetX / ve)) + Me * (this.view.width / ve), pe = (he -= Ne * (this.view.offsetY / xe)) - Ne * (this.view.height / xe);
        }
        this.projectionMatrix.makeOrthographic(Ae, ue, he, pe, this.near, this.far);
      }, toJSON: function(Z) {
        var te = Dr.prototype.toJSON.call(this, Z);
        return te.object.zoom = this.zoom, te.object.left = this.left, te.object.right = this.right, te.object.top = this.top, te.object.bottom = this.bottom, te.object.near = this.near, te.object.far = this.far, this.view !== null && (te.object.view = Object.assign({}, this.view)), te;
      } }), Object.assign(Do.prototype, { clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        this.a = Z.a, this.b = Z.b, this.c = Z.c, this.normal.copy(Z.normal), this.color.copy(Z.color), this.materialIndex = Z.materialIndex;
        for (var te = 0, oe = Z.vertexNormals.length; te < oe; te++)
          this.vertexNormals[te] = Z.vertexNormals[te].clone();
        for (te = 0, oe = Z.vertexColors.length; te < oe; te++)
          this.vertexColors[te] = Z.vertexColors[te].clone();
        return this;
      } });
      var $u = 0;
      function mn() {
        Object.defineProperty(this, "id", { value: $u += 2 }), this.uuid = bn.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = !1, this.verticesNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1;
      }
      function Mn(Z, te, oe) {
        if (Array.isArray(Z))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = Z, this.itemSize = te, this.count = Z !== void 0 ? Z.length / te : 0, this.normalized = oe === !0, this.dynamic = !1, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function xs(Z, te, oe) {
        Mn.call(this, new Int8Array(Z), te, oe);
      }
      function ws(Z, te, oe) {
        Mn.call(this, new Uint8Array(Z), te, oe);
      }
      function bs(Z, te, oe) {
        Mn.call(this, new Uint8ClampedArray(Z), te, oe);
      }
      function _s(Z, te, oe) {
        Mn.call(this, new Int16Array(Z), te, oe);
      }
      function ca(Z, te, oe) {
        Mn.call(this, new Uint16Array(Z), te, oe);
      }
      function Qs(Z, te, oe) {
        Mn.call(this, new Int32Array(Z), te, oe);
      }
      function Aa(Z, te, oe) {
        Mn.call(this, new Uint32Array(Z), te, oe);
      }
      function Pr(Z, te, oe) {
        Mn.call(this, new Float32Array(Z), te, oe);
      }
      function Ss(Z, te, oe) {
        Mn.call(this, new Float64Array(Z), te, oe);
      }
      function GA() {
        this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1;
      }
      function OA(Z) {
        if (Z.length === 0)
          return -1 / 0;
        for (var te = Z[0], oe = 1, se = Z.length; oe < se; ++oe)
          Z[oe] > te && (te = Z[oe]);
        return te;
      }
      mn.prototype = Object.assign(Object.create(ce.prototype), { constructor: mn, isGeometry: !0, applyMatrix: function(Z) {
        for (var te = new Vi().getNormalMatrix(Z), oe = 0, se = this.vertices.length; oe < se; oe++)
          this.vertices[oe].applyMatrix4(Z);
        for (oe = 0, se = this.faces.length; oe < se; oe++) {
          var Ae = this.faces[oe];
          Ae.normal.applyMatrix3(te).normalize();
          for (var ue = 0, he = Ae.vertexNormals.length; ue < he; ue++)
            Ae.vertexNormals[ue].applyMatrix3(te).normalize();
        }
        return this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this;
      }, rotateX: function() {
        var Z = new pn();
        return function(te) {
          return Z.makeRotationX(te), this.applyMatrix(Z), this;
        };
      }(), rotateY: function() {
        var Z = new pn();
        return function(te) {
          return Z.makeRotationY(te), this.applyMatrix(Z), this;
        };
      }(), rotateZ: function() {
        var Z = new pn();
        return function(te) {
          return Z.makeRotationZ(te), this.applyMatrix(Z), this;
        };
      }(), translate: function() {
        var Z = new pn();
        return function(te, oe, se) {
          return Z.makeTranslation(te, oe, se), this.applyMatrix(Z), this;
        };
      }(), scale: function() {
        var Z = new pn();
        return function(te, oe, se) {
          return Z.makeScale(te, oe, se), this.applyMatrix(Z), this;
        };
      }(), lookAt: function() {
        var Z = new Dr();
        return function(te) {
          Z.lookAt(te), Z.updateMatrix(), this.applyMatrix(Z.matrix);
        };
      }(), fromBufferGeometry: function(Z) {
        var te = this, oe = Z.index !== null ? Z.index.array : void 0, se = Z.attributes, Ae = se.position.array, ue = se.normal !== void 0 ? se.normal.array : void 0, he = se.color !== void 0 ? se.color.array : void 0, pe = se.uv !== void 0 ? se.uv.array : void 0, ve = se.uv2 !== void 0 ? se.uv2.array : void 0;
        ve !== void 0 && (this.faceVertexUvs[1] = []);
        for (var xe = [], Me = [], Ne = [], Qe = 0, Ue = 0; Qe < Ae.length; Qe += 3, Ue += 2)
          te.vertices.push(new mt(Ae[Qe], Ae[Qe + 1], Ae[Qe + 2])), ue !== void 0 && xe.push(new mt(ue[Qe], ue[Qe + 1], ue[Qe + 2])), he !== void 0 && te.colors.push(new sn(he[Qe], he[Qe + 1], he[Qe + 2])), pe !== void 0 && Me.push(new xr(pe[Ue], pe[Ue + 1])), ve !== void 0 && Ne.push(new xr(ve[Ue], ve[Ue + 1]));
        function ze(st, Mt, Ft, lt) {
          var wt = new Do(st, Mt, Ft, ue !== void 0 ? [xe[st].clone(), xe[Mt].clone(), xe[Ft].clone()] : [], he !== void 0 ? [te.colors[st].clone(), te.colors[Mt].clone(), te.colors[Ft].clone()] : [], lt);
          te.faces.push(wt), pe !== void 0 && te.faceVertexUvs[0].push([Me[st].clone(), Me[Mt].clone(), Me[Ft].clone()]), ve !== void 0 && te.faceVertexUvs[1].push([Ne[st].clone(), Ne[Mt].clone(), Ne[Ft].clone()]);
        }
        var et = Z.groups;
        if (et.length > 0)
          for (Qe = 0; Qe < et.length; Qe++)
            for (var nt = et[Qe], At = nt.start, Et = (Ue = At, At + nt.count); Ue < Et; Ue += 3)
              oe !== void 0 ? ze(oe[Ue], oe[Ue + 1], oe[Ue + 2], nt.materialIndex) : ze(Ue, Ue + 1, Ue + 2, nt.materialIndex);
        else if (oe !== void 0)
          for (Qe = 0; Qe < oe.length; Qe += 3)
            ze(oe[Qe], oe[Qe + 1], oe[Qe + 2]);
        else
          for (Qe = 0; Qe < Ae.length / 3; Qe += 3)
            ze(Qe, Qe + 1, Qe + 2);
        return this.computeFaceNormals(), Z.boundingBox !== null && (this.boundingBox = Z.boundingBox.clone()), Z.boundingSphere !== null && (this.boundingSphere = Z.boundingSphere.clone()), this;
      }, center: function() {
        var Z = new mt();
        return function() {
          return this.computeBoundingBox(), this.boundingBox.getCenter(Z).negate(), this.translate(Z.x, Z.y, Z.z), this;
        };
      }(), normalize: function() {
        this.computeBoundingSphere();
        var Z = this.boundingSphere.center, te = this.boundingSphere.radius, oe = te === 0 ? 1 : 1 / te, se = new pn();
        return se.set(oe, 0, 0, -oe * Z.x, 0, oe, 0, -oe * Z.y, 0, 0, oe, -oe * Z.z, 0, 0, 0, 1), this.applyMatrix(se), this;
      }, computeFaceNormals: function() {
        for (var Z = new mt(), te = new mt(), oe = 0, se = this.faces.length; oe < se; oe++) {
          var Ae = this.faces[oe], ue = this.vertices[Ae.a], he = this.vertices[Ae.b], pe = this.vertices[Ae.c];
          Z.subVectors(pe, he), te.subVectors(ue, he), Z.cross(te), Z.normalize(), Ae.normal.copy(Z);
        }
      }, computeVertexNormals: function(Z) {
        var te, oe, se, Ae, ue, he;
        for (Z === void 0 && (Z = !0), he = new Array(this.vertices.length), te = 0, oe = this.vertices.length; te < oe; te++)
          he[te] = new mt();
        if (Z) {
          var pe, ve, xe, Me = new mt(), Ne = new mt();
          for (se = 0, Ae = this.faces.length; se < Ae; se++)
            ue = this.faces[se], pe = this.vertices[ue.a], ve = this.vertices[ue.b], xe = this.vertices[ue.c], Me.subVectors(xe, ve), Ne.subVectors(pe, ve), Me.cross(Ne), he[ue.a].add(Me), he[ue.b].add(Me), he[ue.c].add(Me);
        } else
          for (this.computeFaceNormals(), se = 0, Ae = this.faces.length; se < Ae; se++)
            he[(ue = this.faces[se]).a].add(ue.normal), he[ue.b].add(ue.normal), he[ue.c].add(ue.normal);
        for (te = 0, oe = this.vertices.length; te < oe; te++)
          he[te].normalize();
        for (se = 0, Ae = this.faces.length; se < Ae; se++) {
          var Qe = (ue = this.faces[se]).vertexNormals;
          Qe.length === 3 ? (Qe[0].copy(he[ue.a]), Qe[1].copy(he[ue.b]), Qe[2].copy(he[ue.c])) : (Qe[0] = he[ue.a].clone(), Qe[1] = he[ue.b].clone(), Qe[2] = he[ue.c].clone());
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      }, computeFlatVertexNormals: function() {
        var Z, te, oe;
        for (this.computeFaceNormals(), Z = 0, te = this.faces.length; Z < te; Z++) {
          var se = (oe = this.faces[Z]).vertexNormals;
          se.length === 3 ? (se[0].copy(oe.normal), se[1].copy(oe.normal), se[2].copy(oe.normal)) : (se[0] = oe.normal.clone(), se[1] = oe.normal.clone(), se[2] = oe.normal.clone());
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      }, computeMorphNormals: function() {
        var Z, te, oe, se, Ae;
        for (oe = 0, se = this.faces.length; oe < se; oe++)
          for ((Ae = this.faces[oe]).__originalFaceNormal ? Ae.__originalFaceNormal.copy(Ae.normal) : Ae.__originalFaceNormal = Ae.normal.clone(), Ae.__originalVertexNormals || (Ae.__originalVertexNormals = []), Z = 0, te = Ae.vertexNormals.length; Z < te; Z++)
            Ae.__originalVertexNormals[Z] ? Ae.__originalVertexNormals[Z].copy(Ae.vertexNormals[Z]) : Ae.__originalVertexNormals[Z] = Ae.vertexNormals[Z].clone();
        var ue = new mn();
        for (ue.faces = this.faces, Z = 0, te = this.morphTargets.length; Z < te; Z++) {
          if (!this.morphNormals[Z]) {
            this.morphNormals[Z] = {}, this.morphNormals[Z].faceNormals = [], this.morphNormals[Z].vertexNormals = [];
            var he = this.morphNormals[Z].faceNormals, pe = this.morphNormals[Z].vertexNormals;
            for (oe = 0, se = this.faces.length; oe < se; oe++)
              ve = new mt(), xe = { a: new mt(), b: new mt(), c: new mt() }, he.push(ve), pe.push(xe);
          }
          var ve, xe, Me = this.morphNormals[Z];
          for (ue.vertices = this.morphTargets[Z].vertices, ue.computeFaceNormals(), ue.computeVertexNormals(), oe = 0, se = this.faces.length; oe < se; oe++)
            Ae = this.faces[oe], ve = Me.faceNormals[oe], xe = Me.vertexNormals[oe], ve.copy(Ae.normal), xe.a.copy(Ae.vertexNormals[0]), xe.b.copy(Ae.vertexNormals[1]), xe.c.copy(Ae.vertexNormals[2]);
        }
        for (oe = 0, se = this.faces.length; oe < se; oe++)
          (Ae = this.faces[oe]).normal = Ae.__originalFaceNormal, Ae.vertexNormals = Ae.__originalVertexNormals;
      }, computeBoundingBox: function() {
        this.boundingBox === null && (this.boundingBox = new qo()), this.boundingBox.setFromPoints(this.vertices);
      }, computeBoundingSphere: function() {
        this.boundingSphere === null && (this.boundingSphere = new go()), this.boundingSphere.setFromPoints(this.vertices);
      }, merge: function(Z, te, oe) {
        if (Z && Z.isGeometry) {
          var se, Ae = this.vertices.length, ue = this.vertices, he = Z.vertices, pe = this.faces, ve = Z.faces, xe = this.faceVertexUvs[0], Me = Z.faceVertexUvs[0], Ne = this.colors, Qe = Z.colors;
          oe === void 0 && (oe = 0), te !== void 0 && (se = new Vi().getNormalMatrix(te));
          for (var Ue = 0, ze = he.length; Ue < ze; Ue++) {
            var et = he[Ue].clone();
            te !== void 0 && et.applyMatrix4(te), ue.push(et);
          }
          for (Ue = 0, ze = Qe.length; Ue < ze; Ue++)
            Ne.push(Qe[Ue].clone());
          for (Ue = 0, ze = ve.length; Ue < ze; Ue++) {
            var nt, At, Et, st = ve[Ue], Mt = st.vertexNormals, Ft = st.vertexColors;
            (nt = new Do(st.a + Ae, st.b + Ae, st.c + Ae)).normal.copy(st.normal), se !== void 0 && nt.normal.applyMatrix3(se).normalize();
            for (var lt = 0, wt = Mt.length; lt < wt; lt++)
              At = Mt[lt].clone(), se !== void 0 && At.applyMatrix3(se).normalize(), nt.vertexNormals.push(At);
            for (nt.color.copy(st.color), lt = 0, wt = Ft.length; lt < wt; lt++)
              Et = Ft[lt], nt.vertexColors.push(Et.clone());
            nt.materialIndex = st.materialIndex + oe, pe.push(nt);
          }
          for (Ue = 0, ze = Me.length; Ue < ze; Ue++) {
            var jt = Me[Ue], Ot = [];
            if (jt !== void 0) {
              for (lt = 0, wt = jt.length; lt < wt; lt++)
                Ot.push(jt[lt].clone());
              xe.push(Ot);
            }
          }
        } else
          console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", Z);
      }, mergeMesh: function(Z) {
        Z && Z.isMesh ? (Z.matrixAutoUpdate && Z.updateMatrix(), this.merge(Z.geometry, Z.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", Z);
      }, mergeVertices: function() {
        var Z, te, oe, se, Ae, ue, he, pe, ve = {}, xe = [], Me = [], Ne = Math.pow(10, 4);
        for (oe = 0, se = this.vertices.length; oe < se; oe++)
          Z = this.vertices[oe], ve[te = Math.round(Z.x * Ne) + "_" + Math.round(Z.y * Ne) + "_" + Math.round(Z.z * Ne)] === void 0 ? (ve[te] = oe, xe.push(this.vertices[oe]), Me[oe] = xe.length - 1) : Me[oe] = Me[ve[te]];
        var Qe = [];
        for (oe = 0, se = this.faces.length; oe < se; oe++) {
          (Ae = this.faces[oe]).a = Me[Ae.a], Ae.b = Me[Ae.b], Ae.c = Me[Ae.c], ue = [Ae.a, Ae.b, Ae.c];
          for (var Ue = 0; Ue < 3; Ue++)
            if (ue[Ue] === ue[(Ue + 1) % 3]) {
              Qe.push(oe);
              break;
            }
        }
        for (oe = Qe.length - 1; oe >= 0; oe--) {
          var ze = Qe[oe];
          for (this.faces.splice(ze, 1), he = 0, pe = this.faceVertexUvs.length; he < pe; he++)
            this.faceVertexUvs[he].splice(ze, 1);
        }
        var et = this.vertices.length - xe.length;
        return this.vertices = xe, et;
      }, setFromPoints: function(Z) {
        this.vertices = [];
        for (var te = 0, oe = Z.length; te < oe; te++) {
          var se = Z[te];
          this.vertices.push(new mt(se.x, se.y, se.z || 0));
        }
        return this;
      }, sortFacesByMaterialIndex: function() {
        for (var Z = this.faces, te = Z.length, oe = 0; oe < te; oe++)
          Z[oe]._id = oe;
        Z.sort(function(ve, xe) {
          return ve.materialIndex - xe.materialIndex;
        });
        var se, Ae, ue = this.faceVertexUvs[0], he = this.faceVertexUvs[1];
        for (ue && ue.length === te && (se = []), he && he.length === te && (Ae = []), oe = 0; oe < te; oe++) {
          var pe = Z[oe]._id;
          se && se.push(ue[pe]), Ae && Ae.push(he[pe]);
        }
        se && (this.faceVertexUvs[0] = se), Ae && (this.faceVertexUvs[1] = Ae);
      }, toJSON: function() {
        var Z = { metadata: { version: 4.5, type: "Geometry", generator: "Geometry.toJSON" } };
        if (Z.uuid = this.uuid, Z.type = this.type, this.name !== "" && (Z.name = this.name), this.parameters !== void 0) {
          var te = this.parameters;
          for (var oe in te)
            te[oe] !== void 0 && (Z[oe] = te[oe]);
          return Z;
        }
        for (var se = [], Ae = 0; Ae < this.vertices.length; Ae++) {
          var ue = this.vertices[Ae];
          se.push(ue.x, ue.y, ue.z);
        }
        var he = [], pe = [], ve = {}, xe = [], Me = {}, Ne = [], Qe = {};
        for (Ae = 0; Ae < this.faces.length; Ae++) {
          var Ue = this.faces[Ae], ze = this.faceVertexUvs[0][Ae] !== void 0, et = Ue.normal.length() > 0, nt = Ue.vertexNormals.length > 0, At = Ue.color.r !== 1 || Ue.color.g !== 1 || Ue.color.b !== 1, Et = Ue.vertexColors.length > 0, st = 0;
          if (st = wt(st = wt(st = wt(st = wt(st = wt(st = wt(st = wt(st = wt(st, 0, 0), 1, !0), 2, !1), 3, ze), 4, et), 5, nt), 6, At), 7, Et), he.push(st), he.push(Ue.a, Ue.b, Ue.c), he.push(Ue.materialIndex), ze) {
            var Mt = this.faceVertexUvs[0][Ae];
            he.push(er(Mt[0]), er(Mt[1]), er(Mt[2]));
          }
          if (et && he.push(jt(Ue.normal)), nt) {
            var Ft = Ue.vertexNormals;
            he.push(jt(Ft[0]), jt(Ft[1]), jt(Ft[2]));
          }
          if (At && he.push(Ot(Ue.color)), Et) {
            var lt = Ue.vertexColors;
            he.push(Ot(lt[0]), Ot(lt[1]), Ot(lt[2]));
          }
        }
        function wt(qt, ir, dr) {
          return dr ? qt | 1 << ir : qt & ~(1 << ir);
        }
        function jt(qt) {
          var ir = qt.x.toString() + qt.y.toString() + qt.z.toString();
          return ve[ir] !== void 0 || (ve[ir] = pe.length / 3, pe.push(qt.x, qt.y, qt.z)), ve[ir];
        }
        function Ot(qt) {
          var ir = qt.r.toString() + qt.g.toString() + qt.b.toString();
          return Me[ir] !== void 0 || (Me[ir] = xe.length, xe.push(qt.getHex())), Me[ir];
        }
        function er(qt) {
          var ir = qt.x.toString() + qt.y.toString();
          return Qe[ir] !== void 0 || (Qe[ir] = Ne.length / 2, Ne.push(qt.x, qt.y)), Qe[ir];
        }
        return Z.data = {}, Z.data.vertices = se, Z.data.normals = pe, xe.length > 0 && (Z.data.colors = xe), Ne.length > 0 && (Z.data.uvs = [Ne]), Z.data.faces = he, Z;
      }, clone: function() {
        return new mn().copy(this);
      }, copy: function(Z) {
        var te, oe, se, Ae, ue, he;
        this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = Z.name;
        var pe = Z.vertices;
        for (te = 0, oe = pe.length; te < oe; te++)
          this.vertices.push(pe[te].clone());
        var ve = Z.colors;
        for (te = 0, oe = ve.length; te < oe; te++)
          this.colors.push(ve[te].clone());
        var xe = Z.faces;
        for (te = 0, oe = xe.length; te < oe; te++)
          this.faces.push(xe[te].clone());
        for (te = 0, oe = Z.faceVertexUvs.length; te < oe; te++) {
          var Me = Z.faceVertexUvs[te];
          for (this.faceVertexUvs[te] === void 0 && (this.faceVertexUvs[te] = []), se = 0, Ae = Me.length; se < Ae; se++) {
            var Ne = Me[se], Qe = [];
            for (ue = 0, he = Ne.length; ue < he; ue++) {
              var Ue = Ne[ue];
              Qe.push(Ue.clone());
            }
            this.faceVertexUvs[te].push(Qe);
          }
        }
        var ze = Z.morphTargets;
        for (te = 0, oe = ze.length; te < oe; te++) {
          var et = {};
          if (et.name = ze[te].name, ze[te].vertices !== void 0)
            for (et.vertices = [], se = 0, Ae = ze[te].vertices.length; se < Ae; se++)
              et.vertices.push(ze[te].vertices[se].clone());
          if (ze[te].normals !== void 0)
            for (et.normals = [], se = 0, Ae = ze[te].normals.length; se < Ae; se++)
              et.normals.push(ze[te].normals[se].clone());
          this.morphTargets.push(et);
        }
        var nt = Z.morphNormals;
        for (te = 0, oe = nt.length; te < oe; te++) {
          var At = {};
          if (nt[te].vertexNormals !== void 0)
            for (At.vertexNormals = [], se = 0, Ae = nt[te].vertexNormals.length; se < Ae; se++) {
              var Et = nt[te].vertexNormals[se], st = {};
              st.a = Et.a.clone(), st.b = Et.b.clone(), st.c = Et.c.clone(), At.vertexNormals.push(st);
            }
          if (nt[te].faceNormals !== void 0)
            for (At.faceNormals = [], se = 0, Ae = nt[te].faceNormals.length; se < Ae; se++)
              At.faceNormals.push(nt[te].faceNormals[se].clone());
          this.morphNormals.push(At);
        }
        var Mt = Z.skinWeights;
        for (te = 0, oe = Mt.length; te < oe; te++)
          this.skinWeights.push(Mt[te].clone());
        var Ft = Z.skinIndices;
        for (te = 0, oe = Ft.length; te < oe; te++)
          this.skinIndices.push(Ft[te].clone());
        var lt = Z.lineDistances;
        for (te = 0, oe = lt.length; te < oe; te++)
          this.lineDistances.push(lt[te]);
        var wt = Z.boundingBox;
        wt !== null && (this.boundingBox = wt.clone());
        var jt = Z.boundingSphere;
        return jt !== null && (this.boundingSphere = jt.clone()), this.elementsNeedUpdate = Z.elementsNeedUpdate, this.verticesNeedUpdate = Z.verticesNeedUpdate, this.uvsNeedUpdate = Z.uvsNeedUpdate, this.normalsNeedUpdate = Z.normalsNeedUpdate, this.colorsNeedUpdate = Z.colorsNeedUpdate, this.lineDistancesNeedUpdate = Z.lineDistancesNeedUpdate, this.groupsNeedUpdate = Z.groupsNeedUpdate, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Object.defineProperty(Mn.prototype, "needsUpdate", { set: function(Z) {
        Z === !0 && this.version++;
      } }), Object.assign(Mn.prototype, { isBufferAttribute: !0, onUploadCallback: function() {
      }, setArray: function(Z) {
        if (Array.isArray(Z))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        return this.count = Z !== void 0 ? Z.length / this.itemSize : 0, this.array = Z, this;
      }, setDynamic: function(Z) {
        return this.dynamic = Z, this;
      }, copy: function(Z) {
        return this.name = Z.name, this.array = new Z.array.constructor(Z.array), this.itemSize = Z.itemSize, this.count = Z.count, this.normalized = Z.normalized, this.dynamic = Z.dynamic, this;
      }, copyAt: function(Z, te, oe) {
        Z *= this.itemSize, oe *= te.itemSize;
        for (var se = 0, Ae = this.itemSize; se < Ae; se++)
          this.array[Z + se] = te.array[oe + se];
        return this;
      }, copyArray: function(Z) {
        return this.array.set(Z), this;
      }, copyColorsArray: function(Z) {
        for (var te = this.array, oe = 0, se = 0, Ae = Z.length; se < Ae; se++) {
          var ue = Z[se];
          ue === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", se), ue = new sn()), te[oe++] = ue.r, te[oe++] = ue.g, te[oe++] = ue.b;
        }
        return this;
      }, copyVector2sArray: function(Z) {
        for (var te = this.array, oe = 0, se = 0, Ae = Z.length; se < Ae; se++) {
          var ue = Z[se];
          ue === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", se), ue = new xr()), te[oe++] = ue.x, te[oe++] = ue.y;
        }
        return this;
      }, copyVector3sArray: function(Z) {
        for (var te = this.array, oe = 0, se = 0, Ae = Z.length; se < Ae; se++) {
          var ue = Z[se];
          ue === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", se), ue = new mt()), te[oe++] = ue.x, te[oe++] = ue.y, te[oe++] = ue.z;
        }
        return this;
      }, copyVector4sArray: function(Z) {
        for (var te = this.array, oe = 0, se = 0, Ae = Z.length; se < Ae; se++) {
          var ue = Z[se];
          ue === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", se), ue = new Zn()), te[oe++] = ue.x, te[oe++] = ue.y, te[oe++] = ue.z, te[oe++] = ue.w;
        }
        return this;
      }, set: function(Z, te) {
        return te === void 0 && (te = 0), this.array.set(Z, te), this;
      }, getX: function(Z) {
        return this.array[Z * this.itemSize];
      }, setX: function(Z, te) {
        return this.array[Z * this.itemSize] = te, this;
      }, getY: function(Z) {
        return this.array[Z * this.itemSize + 1];
      }, setY: function(Z, te) {
        return this.array[Z * this.itemSize + 1] = te, this;
      }, getZ: function(Z) {
        return this.array[Z * this.itemSize + 2];
      }, setZ: function(Z, te) {
        return this.array[Z * this.itemSize + 2] = te, this;
      }, getW: function(Z) {
        return this.array[Z * this.itemSize + 3];
      }, setW: function(Z, te) {
        return this.array[Z * this.itemSize + 3] = te, this;
      }, setXY: function(Z, te, oe) {
        return Z *= this.itemSize, this.array[Z + 0] = te, this.array[Z + 1] = oe, this;
      }, setXYZ: function(Z, te, oe, se) {
        return Z *= this.itemSize, this.array[Z + 0] = te, this.array[Z + 1] = oe, this.array[Z + 2] = se, this;
      }, setXYZW: function(Z, te, oe, se, Ae) {
        return Z *= this.itemSize, this.array[Z + 0] = te, this.array[Z + 1] = oe, this.array[Z + 2] = se, this.array[Z + 3] = Ae, this;
      }, onUpload: function(Z) {
        return this.onUploadCallback = Z, this;
      }, clone: function() {
        return new this.constructor(this.array, this.itemSize).copy(this);
      } }), xs.prototype = Object.create(Mn.prototype), xs.prototype.constructor = xs, ws.prototype = Object.create(Mn.prototype), ws.prototype.constructor = ws, bs.prototype = Object.create(Mn.prototype), bs.prototype.constructor = bs, _s.prototype = Object.create(Mn.prototype), _s.prototype.constructor = _s, ca.prototype = Object.create(Mn.prototype), ca.prototype.constructor = ca, Qs.prototype = Object.create(Mn.prototype), Qs.prototype.constructor = Qs, Aa.prototype = Object.create(Mn.prototype), Aa.prototype.constructor = Aa, Pr.prototype = Object.create(Mn.prototype), Pr.prototype.constructor = Pr, Ss.prototype = Object.create(Mn.prototype), Ss.prototype.constructor = Ss, Object.assign(GA.prototype, { computeGroups: function(Z) {
        for (var te, oe = [], se = void 0, Ae = Z.faces, ue = 0; ue < Ae.length; ue++) {
          var he = Ae[ue];
          he.materialIndex !== se && (se = he.materialIndex, te !== void 0 && (te.count = 3 * ue - te.start, oe.push(te)), te = { start: 3 * ue, materialIndex: se });
        }
        te !== void 0 && (te.count = 3 * ue - te.start, oe.push(te)), this.groups = oe;
      }, fromGeometry: function(Z) {
        var te, oe = Z.faces, se = Z.vertices, Ae = Z.faceVertexUvs, ue = Ae[0] && Ae[0].length > 0, he = Ae[1] && Ae[1].length > 0, pe = Z.morphTargets, ve = pe.length;
        if (ve > 0) {
          te = [];
          for (var xe = 0; xe < ve; xe++)
            te[xe] = [];
          this.morphTargets.position = te;
        }
        var Me, Ne = Z.morphNormals, Qe = Ne.length;
        if (Qe > 0) {
          for (Me = [], xe = 0; xe < Qe; xe++)
            Me[xe] = [];
          this.morphTargets.normal = Me;
        }
        var Ue = Z.skinIndices, ze = Z.skinWeights, et = Ue.length === se.length, nt = ze.length === se.length;
        for (se.length > 0 && oe.length === 0 && console.error("THREE.DirectGeometry: Faceless geometries are not supported."), xe = 0; xe < oe.length; xe++) {
          var At = oe[xe];
          this.vertices.push(se[At.a], se[At.b], se[At.c]);
          var Et = At.vertexNormals;
          if (Et.length === 3)
            this.normals.push(Et[0], Et[1], Et[2]);
          else {
            var st = At.normal;
            this.normals.push(st, st, st);
          }
          var Mt, Ft = At.vertexColors;
          if (Ft.length === 3)
            this.colors.push(Ft[0], Ft[1], Ft[2]);
          else {
            var lt = At.color;
            this.colors.push(lt, lt, lt);
          }
          ue === !0 && ((Mt = Ae[0][xe]) !== void 0 ? this.uvs.push(Mt[0], Mt[1], Mt[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", xe), this.uvs.push(new xr(), new xr(), new xr()))), he === !0 && ((Mt = Ae[1][xe]) !== void 0 ? this.uvs2.push(Mt[0], Mt[1], Mt[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", xe), this.uvs2.push(new xr(), new xr(), new xr())));
          for (var wt = 0; wt < ve; wt++) {
            var jt = pe[wt].vertices;
            te[wt].push(jt[At.a], jt[At.b], jt[At.c]);
          }
          for (wt = 0; wt < Qe; wt++) {
            var Ot = Ne[wt].vertexNormals[xe];
            Me[wt].push(Ot.a, Ot.b, Ot.c);
          }
          et && this.skinIndices.push(Ue[At.a], Ue[At.b], Ue[At.c]), nt && this.skinWeights.push(ze[At.a], ze[At.b], ze[At.c]);
        }
        return this.computeGroups(Z), this.verticesNeedUpdate = Z.verticesNeedUpdate, this.normalsNeedUpdate = Z.normalsNeedUpdate, this.colorsNeedUpdate = Z.colorsNeedUpdate, this.uvsNeedUpdate = Z.uvsNeedUpdate, this.groupsNeedUpdate = Z.groupsNeedUpdate, this;
      } });
      var ju = 1;
      function Wr() {
        Object.defineProperty(this, "id", { value: ju += 2 }), this.uuid = bn.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = { start: 0, count: 1 / 0 }, this.userData = {};
      }
      function Ua(Z, te, oe, se, Ae, ue) {
        mn.call(this), this.type = "BoxGeometry", this.parameters = { width: Z, height: te, depth: oe, widthSegments: se, heightSegments: Ae, depthSegments: ue }, this.fromBufferGeometry(new ua(Z, te, oe, se, Ae, ue)), this.mergeVertices();
      }
      function ua(Z, te, oe, se, Ae, ue) {
        Wr.call(this), this.type = "BoxBufferGeometry", this.parameters = { width: Z, height: te, depth: oe, widthSegments: se, heightSegments: Ae, depthSegments: ue };
        var he = this;
        Z = Z || 1, te = te || 1, oe = oe || 1, se = Math.floor(se) || 1, Ae = Math.floor(Ae) || 1;
        var pe = [], ve = [], xe = [], Me = [], Ne = 0, Qe = 0;
        function Ue(ze, et, nt, At, Et, st, Mt, Ft, lt, wt, jt) {
          var Ot, er, qt = st / lt, ir = Mt / wt, dr = st / 2, yr = Mt / 2, pr = Ft / 2, Fr = lt + 1, Rr = wt + 1, fr = 0, br = 0, ur = new mt();
          for (er = 0; er < Rr; er++) {
            var zr = er * ir - yr;
            for (Ot = 0; Ot < Fr; Ot++) {
              var Nr = Ot * qt - dr;
              ur[ze] = Nr * At, ur[et] = zr * Et, ur[nt] = pr, ve.push(ur.x, ur.y, ur.z), ur[ze] = 0, ur[et] = 0, ur[nt] = Ft > 0 ? 1 : -1, xe.push(ur.x, ur.y, ur.z), Me.push(Ot / lt), Me.push(1 - er / wt), fr += 1;
            }
          }
          for (er = 0; er < wt; er++)
            for (Ot = 0; Ot < lt; Ot++) {
              var An = Ne + Ot + Fr * er, En = Ne + Ot + Fr * (er + 1), ni = Ne + (Ot + 1) + Fr * (er + 1), Ii = Ne + (Ot + 1) + Fr * er;
              pe.push(An, En, Ii), pe.push(En, ni, Ii), br += 6;
            }
          he.addGroup(Qe, br, jt), Qe += br, Ne += fr;
        }
        Ue("z", "y", "x", -1, -1, oe, te, Z, ue = Math.floor(ue) || 1, Ae, 0), Ue("z", "y", "x", 1, -1, oe, te, -Z, ue, Ae, 1), Ue("x", "z", "y", 1, 1, Z, oe, te, se, ue, 2), Ue("x", "z", "y", 1, -1, Z, oe, -te, se, ue, 3), Ue("x", "y", "z", 1, -1, Z, te, oe, se, Ae, 4), Ue("x", "y", "z", -1, -1, Z, te, -oe, se, Ae, 5), this.setIndex(pe), this.addAttribute("position", new Pr(ve, 3)), this.addAttribute("normal", new Pr(xe, 3)), this.addAttribute("uv", new Pr(Me, 2));
      }
      function Ts(Z, te, oe, se) {
        mn.call(this), this.type = "PlaneGeometry", this.parameters = { width: Z, height: te, widthSegments: oe, heightSegments: se }, this.fromBufferGeometry(new la(Z, te, oe, se)), this.mergeVertices();
      }
      function la(Z, te, oe, se) {
        Wr.call(this), this.type = "PlaneBufferGeometry", this.parameters = { width: Z, height: te, widthSegments: oe, heightSegments: se };
        var Ae, ue, he = (Z = Z || 1) / 2, pe = (te = te || 1) / 2, ve = Math.floor(oe) || 1, xe = Math.floor(se) || 1, Me = ve + 1, Ne = xe + 1, Qe = Z / ve, Ue = te / xe, ze = [], et = [], nt = [], At = [];
        for (ue = 0; ue < Ne; ue++) {
          var Et = ue * Ue - pe;
          for (Ae = 0; Ae < Me; Ae++) {
            var st = Ae * Qe - he;
            et.push(st, -Et, 0), nt.push(0, 0, 1), At.push(Ae / ve), At.push(1 - ue / xe);
          }
        }
        for (ue = 0; ue < xe; ue++)
          for (Ae = 0; Ae < ve; Ae++) {
            var Mt = Ae + Me * ue, Ft = Ae + Me * (ue + 1), lt = Ae + 1 + Me * (ue + 1), wt = Ae + 1 + Me * ue;
            ze.push(Mt, Ft, wt), ze.push(Ft, lt, wt);
          }
        this.setIndex(ze), this.addAttribute("position", new Pr(et, 3)), this.addAttribute("normal", new Pr(nt, 3)), this.addAttribute("uv", new Pr(At, 2));
      }
      Wr.prototype = Object.assign(Object.create(ce.prototype), { constructor: Wr, isBufferGeometry: !0, getIndex: function() {
        return this.index;
      }, setIndex: function(Z) {
        Array.isArray(Z) ? this.index = new (OA(Z) > 65535 ? Aa : ca)(Z, 1) : this.index = Z;
      }, addAttribute: function(Z, te) {
        return te && te.isBufferAttribute || te && te.isInterleavedBufferAttribute ? Z === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(te), this) : (this.attributes[Z] = te, this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.addAttribute(Z, new Mn(arguments[1], arguments[2])));
      }, getAttribute: function(Z) {
        return this.attributes[Z];
      }, removeAttribute: function(Z) {
        return delete this.attributes[Z], this;
      }, addGroup: function(Z, te, oe) {
        this.groups.push({ start: Z, count: te, materialIndex: oe !== void 0 ? oe : 0 });
      }, clearGroups: function() {
        this.groups = [];
      }, setDrawRange: function(Z, te) {
        this.drawRange.start = Z, this.drawRange.count = te;
      }, applyMatrix: function(Z) {
        var te = this.attributes.position;
        te !== void 0 && (Z.applyToBufferAttribute(te), te.needsUpdate = !0);
        var oe = this.attributes.normal;
        return oe !== void 0 && (new Vi().getNormalMatrix(Z).applyToBufferAttribute(oe), oe.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
      }, rotateX: function() {
        var Z = new pn();
        return function(te) {
          return Z.makeRotationX(te), this.applyMatrix(Z), this;
        };
      }(), rotateY: function() {
        var Z = new pn();
        return function(te) {
          return Z.makeRotationY(te), this.applyMatrix(Z), this;
        };
      }(), rotateZ: function() {
        var Z = new pn();
        return function(te) {
          return Z.makeRotationZ(te), this.applyMatrix(Z), this;
        };
      }(), translate: function() {
        var Z = new pn();
        return function(te, oe, se) {
          return Z.makeTranslation(te, oe, se), this.applyMatrix(Z), this;
        };
      }(), scale: function() {
        var Z = new pn();
        return function(te, oe, se) {
          return Z.makeScale(te, oe, se), this.applyMatrix(Z), this;
        };
      }(), lookAt: function() {
        var Z = new Dr();
        return function(te) {
          Z.lookAt(te), Z.updateMatrix(), this.applyMatrix(Z.matrix);
        };
      }(), center: function() {
        var Z = new mt();
        return function() {
          return this.computeBoundingBox(), this.boundingBox.getCenter(Z).negate(), this.translate(Z.x, Z.y, Z.z), this;
        };
      }(), setFromObject: function(Z) {
        var te = Z.geometry;
        if (Z.isPoints || Z.isLine) {
          var oe = new Pr(3 * te.vertices.length, 3), se = new Pr(3 * te.colors.length, 3);
          if (this.addAttribute("position", oe.copyVector3sArray(te.vertices)), this.addAttribute("color", se.copyColorsArray(te.colors)), te.lineDistances && te.lineDistances.length === te.vertices.length) {
            var Ae = new Pr(te.lineDistances.length, 1);
            this.addAttribute("lineDistance", Ae.copyArray(te.lineDistances));
          }
          te.boundingSphere !== null && (this.boundingSphere = te.boundingSphere.clone()), te.boundingBox !== null && (this.boundingBox = te.boundingBox.clone());
        } else
          Z.isMesh && te && te.isGeometry && this.fromGeometry(te);
        return this;
      }, setFromPoints: function(Z) {
        for (var te = [], oe = 0, se = Z.length; oe < se; oe++) {
          var Ae = Z[oe];
          te.push(Ae.x, Ae.y, Ae.z || 0);
        }
        return this.addAttribute("position", new Pr(te, 3)), this;
      }, updateFromObject: function(Z) {
        var te, oe = Z.geometry;
        if (Z.isMesh) {
          var se = oe.__directGeometry;
          if (oe.elementsNeedUpdate === !0 && (se = void 0, oe.elementsNeedUpdate = !1), se === void 0)
            return this.fromGeometry(oe);
          se.verticesNeedUpdate = oe.verticesNeedUpdate, se.normalsNeedUpdate = oe.normalsNeedUpdate, se.colorsNeedUpdate = oe.colorsNeedUpdate, se.uvsNeedUpdate = oe.uvsNeedUpdate, se.groupsNeedUpdate = oe.groupsNeedUpdate, oe.verticesNeedUpdate = !1, oe.normalsNeedUpdate = !1, oe.colorsNeedUpdate = !1, oe.uvsNeedUpdate = !1, oe.groupsNeedUpdate = !1, oe = se;
        }
        return oe.verticesNeedUpdate === !0 && ((te = this.attributes.position) !== void 0 && (te.copyVector3sArray(oe.vertices), te.needsUpdate = !0), oe.verticesNeedUpdate = !1), oe.normalsNeedUpdate === !0 && ((te = this.attributes.normal) !== void 0 && (te.copyVector3sArray(oe.normals), te.needsUpdate = !0), oe.normalsNeedUpdate = !1), oe.colorsNeedUpdate === !0 && ((te = this.attributes.color) !== void 0 && (te.copyColorsArray(oe.colors), te.needsUpdate = !0), oe.colorsNeedUpdate = !1), oe.uvsNeedUpdate && ((te = this.attributes.uv) !== void 0 && (te.copyVector2sArray(oe.uvs), te.needsUpdate = !0), oe.uvsNeedUpdate = !1), oe.lineDistancesNeedUpdate && ((te = this.attributes.lineDistance) !== void 0 && (te.copyArray(oe.lineDistances), te.needsUpdate = !0), oe.lineDistancesNeedUpdate = !1), oe.groupsNeedUpdate && (oe.computeGroups(Z.geometry), this.groups = oe.groups, oe.groupsNeedUpdate = !1), this;
      }, fromGeometry: function(Z) {
        return Z.__directGeometry = new GA().fromGeometry(Z), this.fromDirectGeometry(Z.__directGeometry);
      }, fromDirectGeometry: function(Z) {
        var te = new Float32Array(3 * Z.vertices.length);
        if (this.addAttribute("position", new Mn(te, 3).copyVector3sArray(Z.vertices)), Z.normals.length > 0) {
          var oe = new Float32Array(3 * Z.normals.length);
          this.addAttribute("normal", new Mn(oe, 3).copyVector3sArray(Z.normals));
        }
        if (Z.colors.length > 0) {
          var se = new Float32Array(3 * Z.colors.length);
          this.addAttribute("color", new Mn(se, 3).copyColorsArray(Z.colors));
        }
        if (Z.uvs.length > 0) {
          var Ae = new Float32Array(2 * Z.uvs.length);
          this.addAttribute("uv", new Mn(Ae, 2).copyVector2sArray(Z.uvs));
        }
        if (Z.uvs2.length > 0) {
          var ue = new Float32Array(2 * Z.uvs2.length);
          this.addAttribute("uv2", new Mn(ue, 2).copyVector2sArray(Z.uvs2));
        }
        for (var he in this.groups = Z.groups, Z.morphTargets) {
          for (var pe = [], ve = Z.morphTargets[he], xe = 0, Me = ve.length; xe < Me; xe++) {
            var Ne = ve[xe], Qe = new Pr(3 * Ne.length, 3);
            pe.push(Qe.copyVector3sArray(Ne));
          }
          this.morphAttributes[he] = pe;
        }
        if (Z.skinIndices.length > 0) {
          var Ue = new Pr(4 * Z.skinIndices.length, 4);
          this.addAttribute("skinIndex", Ue.copyVector4sArray(Z.skinIndices));
        }
        if (Z.skinWeights.length > 0) {
          var ze = new Pr(4 * Z.skinWeights.length, 4);
          this.addAttribute("skinWeight", ze.copyVector4sArray(Z.skinWeights));
        }
        return Z.boundingSphere !== null && (this.boundingSphere = Z.boundingSphere.clone()), Z.boundingBox !== null && (this.boundingBox = Z.boundingBox.clone()), this;
      }, computeBoundingBox: function() {
        this.boundingBox === null && (this.boundingBox = new qo());
        var Z = this.attributes.position;
        Z !== void 0 ? this.boundingBox.setFromBufferAttribute(Z) : this.boundingBox.makeEmpty(), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
      }, computeBoundingSphere: function() {
        var Z = new qo(), te = new mt();
        return function() {
          this.boundingSphere === null && (this.boundingSphere = new go());
          var oe = this.attributes.position;
          if (oe) {
            var se = this.boundingSphere.center;
            Z.setFromBufferAttribute(oe), Z.getCenter(se);
            for (var Ae = 0, ue = 0, he = oe.count; ue < he; ue++)
              te.x = oe.getX(ue), te.y = oe.getY(ue), te.z = oe.getZ(ue), Ae = Math.max(Ae, se.distanceToSquared(te));
            this.boundingSphere.radius = Math.sqrt(Ae), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
          }
        };
      }(), computeFaceNormals: function() {
      }, computeVertexNormals: function() {
        var Z = this.index, te = this.attributes, oe = this.groups;
        if (te.position) {
          var se = te.position.array;
          if (te.normal === void 0)
            this.addAttribute("normal", new Mn(new Float32Array(se.length), 3));
          else
            for (var Ae = te.normal.array, ue = 0, he = Ae.length; ue < he; ue++)
              Ae[ue] = 0;
          var pe, ve, xe, Me = te.normal.array, Ne = new mt(), Qe = new mt(), Ue = new mt(), ze = new mt(), et = new mt();
          if (Z) {
            var nt = Z.array;
            oe.length === 0 && this.addGroup(0, nt.length);
            for (var At = 0, Et = oe.length; At < Et; ++At) {
              var st = oe[At], Mt = st.start;
              for (ue = Mt, he = Mt + st.count; ue < he; ue += 3)
                pe = 3 * nt[ue + 0], ve = 3 * nt[ue + 1], xe = 3 * nt[ue + 2], Ne.fromArray(se, pe), Qe.fromArray(se, ve), Ue.fromArray(se, xe), ze.subVectors(Ue, Qe), et.subVectors(Ne, Qe), ze.cross(et), Me[pe] += ze.x, Me[pe + 1] += ze.y, Me[pe + 2] += ze.z, Me[ve] += ze.x, Me[ve + 1] += ze.y, Me[ve + 2] += ze.z, Me[xe] += ze.x, Me[xe + 1] += ze.y, Me[xe + 2] += ze.z;
            }
          } else
            for (ue = 0, he = se.length; ue < he; ue += 9)
              Ne.fromArray(se, ue), Qe.fromArray(se, ue + 3), Ue.fromArray(se, ue + 6), ze.subVectors(Ue, Qe), et.subVectors(Ne, Qe), ze.cross(et), Me[ue] = ze.x, Me[ue + 1] = ze.y, Me[ue + 2] = ze.z, Me[ue + 3] = ze.x, Me[ue + 4] = ze.y, Me[ue + 5] = ze.z, Me[ue + 6] = ze.x, Me[ue + 7] = ze.y, Me[ue + 8] = ze.z;
          this.normalizeNormals(), te.normal.needsUpdate = !0;
        }
      }, merge: function(Z, te) {
        if (Z && Z.isBufferGeometry) {
          te === void 0 && (te = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
          var oe = this.attributes;
          for (var se in oe)
            if (Z.attributes[se] !== void 0)
              for (var Ae = oe[se].array, ue = Z.attributes[se], he = ue.array, pe = 0, ve = ue.itemSize * te; pe < he.length; pe++, ve++)
                Ae[ve] = he[pe];
          return this;
        }
        console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", Z);
      }, normalizeNormals: function() {
        var Z = new mt();
        return function() {
          for (var te = this.attributes.normal, oe = 0, se = te.count; oe < se; oe++)
            Z.x = te.getX(oe), Z.y = te.getY(oe), Z.z = te.getZ(oe), Z.normalize(), te.setXYZ(oe, Z.x, Z.y, Z.z);
        };
      }(), toNonIndexed: function() {
        if (this.index === null)
          return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
        var Z = new Wr(), te = this.index.array, oe = this.attributes;
        for (var se in oe) {
          for (var Ae = oe[se], ue = Ae.array, he = Ae.itemSize, pe = new ue.constructor(te.length * he), ve = 0, xe = 0, Me = 0, Ne = te.length; Me < Ne; Me++) {
            ve = te[Me] * he;
            for (var Qe = 0; Qe < he; Qe++)
              pe[xe++] = ue[ve++];
          }
          Z.addAttribute(se, new Mn(pe, he));
        }
        var Ue = this.groups;
        for (Me = 0, Ne = Ue.length; Me < Ne; Me++) {
          var ze = Ue[Me];
          Z.addGroup(ze.start, ze.count, ze.materialIndex);
        }
        return Z;
      }, toJSON: function() {
        var Z = { metadata: { version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON" } };
        if (Z.uuid = this.uuid, Z.type = this.type, this.name !== "" && (Z.name = this.name), Object.keys(this.userData).length > 0 && (Z.userData = this.userData), this.parameters !== void 0) {
          var te = this.parameters;
          for (var oe in te)
            te[oe] !== void 0 && (Z[oe] = te[oe]);
          return Z;
        }
        Z.data = { attributes: {} };
        var se = this.index;
        if (se !== null) {
          var Ae = Array.prototype.slice.call(se.array);
          Z.data.index = { type: se.array.constructor.name, array: Ae };
        }
        var ue = this.attributes;
        for (var oe in ue) {
          var he = ue[oe];
          Ae = Array.prototype.slice.call(he.array), Z.data.attributes[oe] = { itemSize: he.itemSize, type: he.array.constructor.name, array: Ae, normalized: he.normalized };
        }
        var pe = this.groups;
        pe.length > 0 && (Z.data.groups = JSON.parse(JSON.stringify(pe)));
        var ve = this.boundingSphere;
        return ve !== null && (Z.data.boundingSphere = { center: ve.center.toArray(), radius: ve.radius }), Z;
      }, clone: function() {
        return new Wr().copy(this);
      }, copy: function(Z) {
        var te, oe, se;
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = Z.name;
        var Ae = Z.index;
        Ae !== null && this.setIndex(Ae.clone());
        var ue = Z.attributes;
        for (te in ue) {
          var he = ue[te];
          this.addAttribute(te, he.clone());
        }
        var pe = Z.morphAttributes;
        for (te in pe) {
          var ve = [], xe = pe[te];
          for (oe = 0, se = xe.length; oe < se; oe++)
            ve.push(xe[oe].clone());
          this.morphAttributes[te] = ve;
        }
        var Me = Z.groups;
        for (oe = 0, se = Me.length; oe < se; oe++) {
          var Ne = Me[oe];
          this.addGroup(Ne.start, Ne.count, Ne.materialIndex);
        }
        var Qe = Z.boundingBox;
        Qe !== null && (this.boundingBox = Qe.clone());
        var Ue = Z.boundingSphere;
        return Ue !== null && (this.boundingSphere = Ue.clone()), this.drawRange.start = Z.drawRange.start, this.drawRange.count = Z.drawRange.count, this.userData = Z.userData, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Ua.prototype = Object.create(mn.prototype), Ua.prototype.constructor = Ua, ua.prototype = Object.create(Wr.prototype), ua.prototype.constructor = ua, Ts.prototype = Object.create(mn.prototype), Ts.prototype.constructor = Ts, la.prototype = Object.create(Wr.prototype), la.prototype.constructor = la;
      var Yu = 0;
      function Qn() {
        Object.defineProperty(this, "id", { value: Yu++ }), this.uuid = bn.generateUUID(), this.name = "", this.type = "Material", this.fog = !0, this.lights = !0, this.blending = Xe, this.side = He, this.flatShading = !1, this.vertexColors = Je, this.opacity = 1, this.transparent = !1, this.blendSrc = Le, this.blendDst = or, this.blendEquation = xt, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = ct, this.depthTest = !0, this.depthWrite = !0, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaTest = 0, this.premultipliedAlpha = !1, this.overdraw = 0, this.visible = !0, this.userData = {}, this.needsUpdate = !0;
      }
      function io(Z) {
        Qn.call(this), this.type = "MeshBasicMaterial", this.color = new sn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.lights = !1, this.setValues(Z);
      }
      function uo(Z) {
        Qn.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, this.fragmentShader = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = { derivatives: !1, fragDepth: !1, drawBuffers: !1, shaderTextureLOD: !1 }, this.defaultAttributeValues = { color: [1, 1, 1], uv: [0, 0], uv2: [0, 0] }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, Z !== void 0 && (Z.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(Z));
      }
      function da(Z, te) {
        this.origin = Z !== void 0 ? Z : new mt(), this.direction = te !== void 0 ? te : new mt();
      }
      function oo(Z, te, oe) {
        this.a = Z !== void 0 ? Z : new mt(), this.b = te !== void 0 ? te : new mt(), this.c = oe !== void 0 ? oe : new mt();
      }
      function Ki(Z, te) {
        Dr.call(this), this.type = "Mesh", this.geometry = Z !== void 0 ? Z : new Wr(), this.material = te !== void 0 ? te : new io({ color: 16777215 * Math.random() }), this.drawMode = Cn, this.updateMorphTargets();
      }
      function Vu(Z, te) {
        return Math.abs(te[1]) - Math.abs(Z[1]);
      }
      function $o(Z, te, oe, se, Ae, ue, he, pe, ve, xe) {
        Z = Z !== void 0 ? Z : [], te = te !== void 0 ? te : Te, ii.call(this, Z, te, oe, se, Ae, ue, he, pe, ve, xe), this.flipY = !1;
      }
      Qn.prototype = Object.assign(Object.create(ce.prototype), { constructor: Qn, isMaterial: !0, onBeforeCompile: function() {
      }, setValues: function(Z) {
        if (Z !== void 0)
          for (var te in Z) {
            var oe = Z[te];
            if (oe !== void 0)
              if (te !== "shading") {
                var se = this[te];
                se !== void 0 ? se && se.isColor ? se.set(oe) : se && se.isVector3 && oe && oe.isVector3 ? se.copy(oe) : this[te] = te === "overdraw" ? Number(oe) : oe : console.warn("THREE." + this.type + ": '" + te + "' is not a property of this material.");
              } else
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = oe === Fe;
            else
              console.warn("THREE.Material: '" + te + "' parameter is undefined.");
          }
      }, toJSON: function(Z) {
        var te = Z === void 0 || typeof Z == "string";
        te && (Z = { textures: {}, images: {} });
        var oe = { metadata: { version: 4.5, type: "Material", generator: "Material.toJSON" } };
        function se(he) {
          var pe = [];
          for (var ve in he) {
            var xe = he[ve];
            delete xe.metadata, pe.push(xe);
          }
          return pe;
        }
        if (oe.uuid = this.uuid, oe.type = this.type, this.name !== "" && (oe.name = this.name), this.color && this.color.isColor && (oe.color = this.color.getHex()), this.roughness !== void 0 && (oe.roughness = this.roughness), this.metalness !== void 0 && (oe.metalness = this.metalness), this.emissive && this.emissive.isColor && (oe.emissive = this.emissive.getHex()), this.emissiveIntensity !== 1 && (oe.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (oe.specular = this.specular.getHex()), this.shininess !== void 0 && (oe.shininess = this.shininess), this.clearCoat !== void 0 && (oe.clearCoat = this.clearCoat), this.clearCoatRoughness !== void 0 && (oe.clearCoatRoughness = this.clearCoatRoughness), this.map && this.map.isTexture && (oe.map = this.map.toJSON(Z).uuid), this.alphaMap && this.alphaMap.isTexture && (oe.alphaMap = this.alphaMap.toJSON(Z).uuid), this.lightMap && this.lightMap.isTexture && (oe.lightMap = this.lightMap.toJSON(Z).uuid), this.aoMap && this.aoMap.isTexture && (oe.aoMap = this.aoMap.toJSON(Z).uuid, oe.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (oe.bumpMap = this.bumpMap.toJSON(Z).uuid, oe.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (oe.normalMap = this.normalMap.toJSON(Z).uuid, oe.normalMapType = this.normalMapType, oe.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (oe.displacementMap = this.displacementMap.toJSON(Z).uuid, oe.displacementScale = this.displacementScale, oe.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (oe.roughnessMap = this.roughnessMap.toJSON(Z).uuid), this.metalnessMap && this.metalnessMap.isTexture && (oe.metalnessMap = this.metalnessMap.toJSON(Z).uuid), this.emissiveMap && this.emissiveMap.isTexture && (oe.emissiveMap = this.emissiveMap.toJSON(Z).uuid), this.specularMap && this.specularMap.isTexture && (oe.specularMap = this.specularMap.toJSON(Z).uuid), this.envMap && this.envMap.isTexture && (oe.envMap = this.envMap.toJSON(Z).uuid, oe.reflectivity = this.reflectivity), this.gradientMap && this.gradientMap.isTexture && (oe.gradientMap = this.gradientMap.toJSON(Z).uuid), this.size !== void 0 && (oe.size = this.size), this.sizeAttenuation !== void 0 && (oe.sizeAttenuation = this.sizeAttenuation), this.blending !== Xe && (oe.blending = this.blending), this.flatShading === !0 && (oe.flatShading = this.flatShading), this.side !== He && (oe.side = this.side), this.vertexColors !== Je && (oe.vertexColors = this.vertexColors), this.opacity < 1 && (oe.opacity = this.opacity), this.transparent === !0 && (oe.transparent = this.transparent), oe.depthFunc = this.depthFunc, oe.depthTest = this.depthTest, oe.depthWrite = this.depthWrite, this.rotation !== 0 && (oe.rotation = this.rotation), this.linewidth !== 1 && (oe.linewidth = this.linewidth), this.dashSize !== void 0 && (oe.dashSize = this.dashSize), this.gapSize !== void 0 && (oe.gapSize = this.gapSize), this.scale !== void 0 && (oe.scale = this.scale), this.dithering === !0 && (oe.dithering = !0), this.alphaTest > 0 && (oe.alphaTest = this.alphaTest), this.premultipliedAlpha === !0 && (oe.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (oe.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (oe.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (oe.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (oe.wireframeLinejoin = this.wireframeLinejoin), this.morphTargets === !0 && (oe.morphTargets = !0), this.skinning === !0 && (oe.skinning = !0), this.visible === !1 && (oe.visible = !1), JSON.stringify(this.userData) !== "{}" && (oe.userData = this.userData), te) {
          var Ae = se(Z.textures), ue = se(Z.images);
          Ae.length > 0 && (oe.textures = Ae), ue.length > 0 && (oe.images = ue);
        }
        return oe;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        this.name = Z.name, this.fog = Z.fog, this.lights = Z.lights, this.blending = Z.blending, this.side = Z.side, this.flatShading = Z.flatShading, this.vertexColors = Z.vertexColors, this.opacity = Z.opacity, this.transparent = Z.transparent, this.blendSrc = Z.blendSrc, this.blendDst = Z.blendDst, this.blendEquation = Z.blendEquation, this.blendSrcAlpha = Z.blendSrcAlpha, this.blendDstAlpha = Z.blendDstAlpha, this.blendEquationAlpha = Z.blendEquationAlpha, this.depthFunc = Z.depthFunc, this.depthTest = Z.depthTest, this.depthWrite = Z.depthWrite, this.colorWrite = Z.colorWrite, this.precision = Z.precision, this.polygonOffset = Z.polygonOffset, this.polygonOffsetFactor = Z.polygonOffsetFactor, this.polygonOffsetUnits = Z.polygonOffsetUnits, this.dithering = Z.dithering, this.alphaTest = Z.alphaTest, this.premultipliedAlpha = Z.premultipliedAlpha, this.overdraw = Z.overdraw, this.visible = Z.visible, this.userData = JSON.parse(JSON.stringify(Z.userData)), this.clipShadows = Z.clipShadows, this.clipIntersection = Z.clipIntersection;
        var te = Z.clippingPlanes, oe = null;
        if (te !== null) {
          var se = te.length;
          oe = new Array(se);
          for (var Ae = 0; Ae !== se; ++Ae)
            oe[Ae] = te[Ae].clone();
        }
        return this.clippingPlanes = oe, this.shadowSide = Z.shadowSide, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), io.prototype = Object.create(Qn.prototype), io.prototype.constructor = io, io.prototype.isMeshBasicMaterial = !0, io.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.color.copy(Z.color), this.map = Z.map, this.lightMap = Z.lightMap, this.lightMapIntensity = Z.lightMapIntensity, this.aoMap = Z.aoMap, this.aoMapIntensity = Z.aoMapIntensity, this.specularMap = Z.specularMap, this.alphaMap = Z.alphaMap, this.envMap = Z.envMap, this.combine = Z.combine, this.reflectivity = Z.reflectivity, this.refractionRatio = Z.refractionRatio, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.wireframeLinecap = Z.wireframeLinecap, this.wireframeLinejoin = Z.wireframeLinejoin, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this;
      }, uo.prototype = Object.create(Qn.prototype), uo.prototype.constructor = uo, uo.prototype.isShaderMaterial = !0, uo.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.fragmentShader = Z.fragmentShader, this.vertexShader = Z.vertexShader, this.uniforms = Li.clone(Z.uniforms), this.defines = Object.assign({}, Z.defines), this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.lights = Z.lights, this.clipping = Z.clipping, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this.extensions = Z.extensions, this;
      }, uo.prototype.toJSON = function(Z) {
        var te = Qn.prototype.toJSON.call(this, Z);
        return te.uniforms = this.uniforms, te.vertexShader = this.vertexShader, te.fragmentShader = this.fragmentShader, te;
      }, Object.assign(da.prototype, { set: function(Z, te) {
        return this.origin.copy(Z), this.direction.copy(te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.origin.copy(Z.origin), this.direction.copy(Z.direction), this;
      }, at: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Ray: .at() target is now required"), te = new mt()), te.copy(this.direction).multiplyScalar(Z).add(this.origin);
      }, lookAt: function(Z) {
        return this.direction.copy(Z).sub(this.origin).normalize(), this;
      }, recast: function() {
        var Z = new mt();
        return function(te) {
          return this.origin.copy(this.at(te, Z)), this;
        };
      }(), closestPointToPoint: function(Z, te) {
        te === void 0 && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), te = new mt()), te.subVectors(Z, this.origin);
        var oe = te.dot(this.direction);
        return oe < 0 ? te.copy(this.origin) : te.copy(this.direction).multiplyScalar(oe).add(this.origin);
      }, distanceToPoint: function(Z) {
        return Math.sqrt(this.distanceSqToPoint(Z));
      }, distanceSqToPoint: function() {
        var Z = new mt();
        return function(te) {
          var oe = Z.subVectors(te, this.origin).dot(this.direction);
          return oe < 0 ? this.origin.distanceToSquared(te) : (Z.copy(this.direction).multiplyScalar(oe).add(this.origin), Z.distanceToSquared(te));
        };
      }(), distanceSqToSegment: function() {
        var Z = new mt(), te = new mt(), oe = new mt();
        return function(se, Ae, ue, he) {
          Z.copy(se).add(Ae).multiplyScalar(0.5), te.copy(Ae).sub(se).normalize(), oe.copy(this.origin).sub(Z);
          var pe, ve, xe, Me, Ne = 0.5 * se.distanceTo(Ae), Qe = -this.direction.dot(te), Ue = oe.dot(this.direction), ze = -oe.dot(te), et = oe.lengthSq(), nt = Math.abs(1 - Qe * Qe);
          if (nt > 0)
            if (ve = Qe * Ue - ze, Me = Ne * nt, (pe = Qe * ze - Ue) >= 0)
              if (ve >= -Me)
                if (ve <= Me) {
                  var At = 1 / nt;
                  xe = (pe *= At) * (pe + Qe * (ve *= At) + 2 * Ue) + ve * (Qe * pe + ve + 2 * ze) + et;
                } else
                  ve = Ne, xe = -(pe = Math.max(0, -(Qe * ve + Ue))) * pe + ve * (ve + 2 * ze) + et;
              else
                ve = -Ne, xe = -(pe = Math.max(0, -(Qe * ve + Ue))) * pe + ve * (ve + 2 * ze) + et;
            else
              ve <= -Me ? xe = -(pe = Math.max(0, -(-Qe * Ne + Ue))) * pe + (ve = pe > 0 ? -Ne : Math.min(Math.max(-Ne, -ze), Ne)) * (ve + 2 * ze) + et : ve <= Me ? (pe = 0, xe = (ve = Math.min(Math.max(-Ne, -ze), Ne)) * (ve + 2 * ze) + et) : xe = -(pe = Math.max(0, -(Qe * Ne + Ue))) * pe + (ve = pe > 0 ? Ne : Math.min(Math.max(-Ne, -ze), Ne)) * (ve + 2 * ze) + et;
          else
            ve = Qe > 0 ? -Ne : Ne, xe = -(pe = Math.max(0, -(Qe * ve + Ue))) * pe + ve * (ve + 2 * ze) + et;
          return ue && ue.copy(this.direction).multiplyScalar(pe).add(this.origin), he && he.copy(te).multiplyScalar(ve).add(Z), xe;
        };
      }(), intersectSphere: function() {
        var Z = new mt();
        return function(te, oe) {
          Z.subVectors(te.center, this.origin);
          var se = Z.dot(this.direction), Ae = Z.dot(Z) - se * se, ue = te.radius * te.radius;
          if (Ae > ue)
            return null;
          var he = Math.sqrt(ue - Ae), pe = se - he, ve = se + he;
          return pe < 0 && ve < 0 ? null : pe < 0 ? this.at(ve, oe) : this.at(pe, oe);
        };
      }(), intersectsSphere: function(Z) {
        return this.distanceToPoint(Z.center) <= Z.radius;
      }, distanceToPlane: function(Z) {
        var te = Z.normal.dot(this.direction);
        if (te === 0)
          return Z.distanceToPoint(this.origin) === 0 ? 0 : null;
        var oe = -(this.origin.dot(Z.normal) + Z.constant) / te;
        return oe >= 0 ? oe : null;
      }, intersectPlane: function(Z, te) {
        var oe = this.distanceToPlane(Z);
        return oe === null ? null : this.at(oe, te);
      }, intersectsPlane: function(Z) {
        var te = Z.distanceToPoint(this.origin);
        return te === 0 || Z.normal.dot(this.direction) * te < 0;
      }, intersectBox: function(Z, te) {
        var oe, se, Ae, ue, he, pe, ve = 1 / this.direction.x, xe = 1 / this.direction.y, Me = 1 / this.direction.z, Ne = this.origin;
        return ve >= 0 ? (oe = (Z.min.x - Ne.x) * ve, se = (Z.max.x - Ne.x) * ve) : (oe = (Z.max.x - Ne.x) * ve, se = (Z.min.x - Ne.x) * ve), xe >= 0 ? (Ae = (Z.min.y - Ne.y) * xe, ue = (Z.max.y - Ne.y) * xe) : (Ae = (Z.max.y - Ne.y) * xe, ue = (Z.min.y - Ne.y) * xe), oe > ue || Ae > se ? null : ((Ae > oe || oe != oe) && (oe = Ae), (ue < se || se != se) && (se = ue), Me >= 0 ? (he = (Z.min.z - Ne.z) * Me, pe = (Z.max.z - Ne.z) * Me) : (he = (Z.max.z - Ne.z) * Me, pe = (Z.min.z - Ne.z) * Me), oe > pe || he > se ? null : ((he > oe || oe != oe) && (oe = he), (pe < se || se != se) && (se = pe), se < 0 ? null : this.at(oe >= 0 ? oe : se, te)));
      }, intersectsBox: function() {
        var Z = new mt();
        return function(te) {
          return this.intersectBox(te, Z) !== null;
        };
      }(), intersectTriangle: function() {
        var Z = new mt(), te = new mt(), oe = new mt(), se = new mt();
        return function(Ae, ue, he, pe, ve) {
          te.subVectors(ue, Ae), oe.subVectors(he, Ae), se.crossVectors(te, oe);
          var xe, Me = this.direction.dot(se);
          if (Me > 0) {
            if (pe)
              return null;
            xe = 1;
          } else {
            if (!(Me < 0))
              return null;
            xe = -1, Me = -Me;
          }
          Z.subVectors(this.origin, Ae);
          var Ne = xe * this.direction.dot(oe.crossVectors(Z, oe));
          if (Ne < 0)
            return null;
          var Qe = xe * this.direction.dot(te.cross(Z));
          if (Qe < 0 || Ne + Qe > Me)
            return null;
          var Ue = -xe * Z.dot(se);
          return Ue < 0 ? null : this.at(Ue / Me, ve);
        };
      }(), applyMatrix4: function(Z) {
        return this.origin.applyMatrix4(Z), this.direction.transformDirection(Z), this;
      }, equals: function(Z) {
        return Z.origin.equals(this.origin) && Z.direction.equals(this.direction);
      } }), Object.assign(oo, { getNormal: function() {
        var Z = new mt();
        return function(te, oe, se, Ae) {
          Ae === void 0 && (console.warn("THREE.Triangle: .getNormal() target is now required"), Ae = new mt()), Ae.subVectors(se, oe), Z.subVectors(te, oe), Ae.cross(Z);
          var ue = Ae.lengthSq();
          return ue > 0 ? Ae.multiplyScalar(1 / Math.sqrt(ue)) : Ae.set(0, 0, 0);
        };
      }(), getBarycoord: function() {
        var Z = new mt(), te = new mt(), oe = new mt();
        return function(se, Ae, ue, he, pe) {
          Z.subVectors(he, Ae), te.subVectors(ue, Ae), oe.subVectors(se, Ae);
          var ve = Z.dot(Z), xe = Z.dot(te), Me = Z.dot(oe), Ne = te.dot(te), Qe = te.dot(oe), Ue = ve * Ne - xe * xe;
          if (pe === void 0 && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), pe = new mt()), Ue === 0)
            return pe.set(-2, -1, -1);
          var ze = 1 / Ue, et = (Ne * Me - xe * Qe) * ze, nt = (ve * Qe - xe * Me) * ze;
          return pe.set(1 - et - nt, nt, et);
        };
      }(), containsPoint: function() {
        var Z = new mt();
        return function(te, oe, se, Ae) {
          return oo.getBarycoord(te, oe, se, Ae, Z), Z.x >= 0 && Z.y >= 0 && Z.x + Z.y <= 1;
        };
      }() }), Object.assign(oo.prototype, { set: function(Z, te, oe) {
        return this.a.copy(Z), this.b.copy(te), this.c.copy(oe), this;
      }, setFromPointsAndIndices: function(Z, te, oe, se) {
        return this.a.copy(Z[te]), this.b.copy(Z[oe]), this.c.copy(Z[se]), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.a.copy(Z.a), this.b.copy(Z.b), this.c.copy(Z.c), this;
      }, getArea: function() {
        var Z = new mt(), te = new mt();
        return function() {
          return Z.subVectors(this.c, this.b), te.subVectors(this.a, this.b), 0.5 * Z.cross(te).length();
        };
      }(), getMidpoint: function(Z) {
        return Z === void 0 && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), Z = new mt()), Z.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
      }, getNormal: function(Z) {
        return oo.getNormal(this.a, this.b, this.c, Z);
      }, getPlane: function(Z) {
        return Z === void 0 && (console.warn("THREE.Triangle: .getPlane() target is now required"), Z = new mt()), Z.setFromCoplanarPoints(this.a, this.b, this.c);
      }, getBarycoord: function(Z, te) {
        return oo.getBarycoord(Z, this.a, this.b, this.c, te);
      }, containsPoint: function(Z) {
        return oo.containsPoint(Z, this.a, this.b, this.c);
      }, intersectsBox: function(Z) {
        return Z.intersectsTriangle(this);
      }, closestPointToPoint: function() {
        var Z = new mt(), te = new mt(), oe = new mt(), se = new mt(), Ae = new mt(), ue = new mt();
        return function(he, pe) {
          pe === void 0 && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), pe = new mt());
          var ve, xe, Me = this.a, Ne = this.b, Qe = this.c;
          Z.subVectors(Ne, Me), te.subVectors(Qe, Me), se.subVectors(he, Me);
          var Ue = Z.dot(se), ze = te.dot(se);
          if (Ue <= 0 && ze <= 0)
            return pe.copy(Me);
          Ae.subVectors(he, Ne);
          var et = Z.dot(Ae), nt = te.dot(Ae);
          if (et >= 0 && nt <= et)
            return pe.copy(Ne);
          var At = Ue * nt - et * ze;
          if (At <= 0 && Ue >= 0 && et <= 0)
            return ve = Ue / (Ue - et), pe.copy(Me).addScaledVector(Z, ve);
          ue.subVectors(he, Qe);
          var Et = Z.dot(ue), st = te.dot(ue);
          if (st >= 0 && Et <= st)
            return pe.copy(Qe);
          var Mt = Et * ze - Ue * st;
          if (Mt <= 0 && ze >= 0 && st <= 0)
            return xe = ze / (ze - st), pe.copy(Me).addScaledVector(te, xe);
          var Ft = et * st - Et * nt;
          if (Ft <= 0 && nt - et >= 0 && Et - st >= 0)
            return oe.subVectors(Qe, Ne), xe = (nt - et) / (nt - et + (Et - st)), pe.copy(Ne).addScaledVector(oe, xe);
          var lt = 1 / (Ft + Mt + At);
          return ve = Mt * lt, xe = At * lt, pe.copy(Me).addScaledVector(Z, ve).addScaledVector(te, xe);
        };
      }(), equals: function(Z) {
        return Z.a.equals(this.a) && Z.b.equals(this.b) && Z.c.equals(this.c);
      } }), Ki.prototype = Object.assign(Object.create(Dr.prototype), { constructor: Ki, isMesh: !0, setDrawMode: function(Z) {
        this.drawMode = Z;
      }, copy: function(Z) {
        return Dr.prototype.copy.call(this, Z), this.drawMode = Z.drawMode, Z.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = Z.morphTargetInfluences.slice()), Z.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, Z.morphTargetDictionary)), this;
      }, updateMorphTargets: function() {
        var Z, te, oe, se = this.geometry;
        if (se.isBufferGeometry) {
          var Ae = se.morphAttributes, ue = Object.keys(Ae);
          if (ue.length > 0) {
            var he = Ae[ue[0]];
            if (he !== void 0)
              for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, Z = 0, te = he.length; Z < te; Z++)
                oe = he[Z].name || String(Z), this.morphTargetInfluences.push(0), this.morphTargetDictionary[oe] = Z;
          }
        } else {
          var pe = se.morphTargets;
          if (pe !== void 0 && pe.length > 0)
            for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, Z = 0, te = pe.length; Z < te; Z++)
              oe = pe[Z].name || String(Z), this.morphTargetInfluences.push(0), this.morphTargetDictionary[oe] = Z;
        }
      }, raycast: function() {
        var Z = new pn(), te = new da(), oe = new go(), se = new mt(), Ae = new mt(), ue = new mt(), he = new mt(), pe = new mt(), ve = new mt(), xe = new xr(), Me = new xr(), Ne = new xr(), Qe = new mt(), Ue = new mt(), ze = new mt();
        function et(Et, st, Mt, Ft, lt, wt, jt) {
          return oo.getBarycoord(Et, st, Mt, Ft, Qe), lt.multiplyScalar(Qe.x), wt.multiplyScalar(Qe.y), jt.multiplyScalar(Qe.z), lt.add(wt).add(jt), lt.clone();
        }
        function nt(Et, st, Mt, Ft, lt, wt, jt, Ot) {
          if ((st.side === Se ? Ft.intersectTriangle(jt, wt, lt, !0, Ot) : Ft.intersectTriangle(lt, wt, jt, st.side !== Ge, Ot)) === null)
            return null;
          ze.copy(Ot), ze.applyMatrix4(Et.matrixWorld);
          var er = Mt.ray.origin.distanceTo(ze);
          return er < Mt.near || er > Mt.far ? null : { distance: er, point: ze.clone(), object: Et };
        }
        function At(Et, st, Mt, Ft, lt, wt, jt, Ot, er) {
          se.fromBufferAttribute(lt, jt), Ae.fromBufferAttribute(lt, Ot), ue.fromBufferAttribute(lt, er);
          var qt = nt(Et, st, Mt, Ft, se, Ae, ue, Ue);
          if (qt) {
            wt && (xe.fromBufferAttribute(wt, jt), Me.fromBufferAttribute(wt, Ot), Ne.fromBufferAttribute(wt, er), qt.uv = et(Ue, se, Ae, ue, xe, Me, Ne));
            var ir = new Do(jt, Ot, er);
            oo.getNormal(se, Ae, ue, ir.normal), qt.face = ir;
          }
          return qt;
        }
        return function(Et, st) {
          var Mt, Ft = this.geometry, lt = this.material, wt = this.matrixWorld;
          if (lt !== void 0 && (Ft.boundingSphere === null && Ft.computeBoundingSphere(), oe.copy(Ft.boundingSphere), oe.applyMatrix4(wt), Et.ray.intersectsSphere(oe) !== !1 && (Z.getInverse(wt), te.copy(Et.ray).applyMatrix4(Z), Ft.boundingBox === null || te.intersectsBox(Ft.boundingBox) !== !1))) {
            if (Ft.isBufferGeometry) {
              var jt, Ot, er, qt, ir, dr, yr, pr, Fr, Rr = Ft.index, fr = Ft.attributes.position, br = Ft.attributes.uv, ur = Ft.groups, zr = Ft.drawRange;
              if (Rr !== null)
                if (Array.isArray(lt))
                  for (qt = 0, dr = ur.length; qt < dr; qt++)
                    for (Fr = lt[(pr = ur[qt]).materialIndex], ir = Math.max(pr.start, zr.start), yr = Math.min(pr.start + pr.count, zr.start + zr.count); ir < yr; ir += 3)
                      jt = Rr.getX(ir), Ot = Rr.getX(ir + 1), er = Rr.getX(ir + 2), (Mt = At(this, Fr, Et, te, fr, br, jt, Ot, er)) && (Mt.faceIndex = Math.floor(ir / 3), st.push(Mt));
                else
                  for (qt = Math.max(0, zr.start), dr = Math.min(Rr.count, zr.start + zr.count); qt < dr; qt += 3)
                    jt = Rr.getX(qt), Ot = Rr.getX(qt + 1), er = Rr.getX(qt + 2), (Mt = At(this, lt, Et, te, fr, br, jt, Ot, er)) && (Mt.faceIndex = Math.floor(qt / 3), st.push(Mt));
              else if (fr !== void 0)
                if (Array.isArray(lt))
                  for (qt = 0, dr = ur.length; qt < dr; qt++)
                    for (Fr = lt[(pr = ur[qt]).materialIndex], ir = Math.max(pr.start, zr.start), yr = Math.min(pr.start + pr.count, zr.start + zr.count); ir < yr; ir += 3)
                      (Mt = At(this, Fr, Et, te, fr, br, jt = ir, Ot = ir + 1, er = ir + 2)) && (Mt.faceIndex = Math.floor(ir / 3), st.push(Mt));
                else
                  for (qt = Math.max(0, zr.start), dr = Math.min(fr.count, zr.start + zr.count); qt < dr; qt += 3)
                    (Mt = At(this, lt, Et, te, fr, br, jt = qt, Ot = qt + 1, er = qt + 2)) && (Mt.faceIndex = Math.floor(qt / 3), st.push(Mt));
            } else if (Ft.isGeometry) {
              var Nr, An, En, ni, Ii = Array.isArray(lt), Xn = Ft.vertices, kr = Ft.faces, On = Ft.faceVertexUvs[0];
              On.length > 0 && (ni = On);
              for (var hi = 0, Di = kr.length; hi < Di; hi++) {
                var Bi = kr[hi], Ji = Ii ? lt[Bi.materialIndex] : lt;
                if (Ji !== void 0) {
                  if (Nr = Xn[Bi.a], An = Xn[Bi.b], En = Xn[Bi.c], Ji.morphTargets === !0) {
                    var wi = Ft.morphTargets, wo = this.morphTargetInfluences;
                    se.set(0, 0, 0), Ae.set(0, 0, 0), ue.set(0, 0, 0);
                    for (var bo = 0, Ni = wi.length; bo < Ni; bo++) {
                      var bi = wo[bo];
                      if (bi !== 0) {
                        var ta = wi[bo].vertices;
                        se.addScaledVector(he.subVectors(ta[Bi.a], Nr), bi), Ae.addScaledVector(pe.subVectors(ta[Bi.b], An), bi), ue.addScaledVector(ve.subVectors(ta[Bi.c], En), bi);
                      }
                    }
                    se.add(Nr), Ae.add(An), ue.add(En), Nr = se, An = Ae, En = ue;
                  }
                  if (Mt = nt(this, Ji, Et, te, Nr, An, En, Ue)) {
                    if (ni && ni[hi]) {
                      var $i = ni[hi];
                      xe.copy($i[0]), Me.copy($i[1]), Ne.copy($i[2]), Mt.uv = et(Ue, Nr, An, En, xe, Me, Ne);
                    }
                    Mt.face = Bi, Mt.faceIndex = hi, st.push(Mt);
                  }
                }
              }
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), $o.prototype = Object.create(ii.prototype), $o.prototype.constructor = $o, $o.prototype.isCubeTexture = !0, Object.defineProperty($o.prototype, "images", { get: function() {
        return this.image;
      }, set: function(Z) {
        this.image = Z;
      } });
      var PA = new ii(), UA = new $o();
      function HA() {
        this.seq = [], this.map = {};
      }
      var qA = [], DA = [], $A = new Float32Array(16), jA = new Float32Array(9), YA = new Float32Array(4);
      function Ha(Z, te, oe) {
        var se = Z[0];
        if (se <= 0 || se > 0)
          return Z;
        var Ae = te * oe, ue = qA[Ae];
        if (ue === void 0 && (ue = new Float32Array(Ae), qA[Ae] = ue), te !== 0) {
          se.toArray(ue, 0);
          for (var he = 1, pe = 0; he !== te; ++he)
            pe += oe, Z[he].toArray(ue, pe);
        }
        return ue;
      }
      function Ai(Z, te) {
        if (Z.length !== te.length)
          return !1;
        for (var oe = 0, se = Z.length; oe < se; oe++)
          if (Z[oe] !== te[oe])
            return !1;
        return !0;
      }
      function Ri(Z, te) {
        for (var oe = 0, se = te.length; oe < se; oe++)
          Z[oe] = te[oe];
      }
      function VA(Z, te) {
        var oe = DA[te];
        oe === void 0 && (oe = new Int32Array(te), DA[te] = oe);
        for (var se = 0; se !== te; ++se)
          oe[se] = Z.allocTextureUnit();
        return oe;
      }
      function Lu(Z, te) {
        var oe = this.cache;
        oe[0] !== te && (Z.uniform1f(this.addr, te), oe[0] = te);
      }
      function zu(Z, te) {
        var oe = this.cache;
        oe[0] !== te && (Z.uniform1i(this.addr, te), oe[0] = te);
      }
      function Ju(Z, te) {
        var oe = this.cache;
        if (te.x !== void 0)
          oe[0] === te.x && oe[1] === te.y || (Z.uniform2f(this.addr, te.x, te.y), oe[0] = te.x, oe[1] = te.y);
        else {
          if (Ai(oe, te))
            return;
          Z.uniform2fv(this.addr, te), Ri(oe, te);
        }
      }
      function Wu(Z, te) {
        var oe = this.cache;
        if (te.x !== void 0)
          oe[0] === te.x && oe[1] === te.y && oe[2] === te.z || (Z.uniform3f(this.addr, te.x, te.y, te.z), oe[0] = te.x, oe[1] = te.y, oe[2] = te.z);
        else if (te.r !== void 0)
          oe[0] === te.r && oe[1] === te.g && oe[2] === te.b || (Z.uniform3f(this.addr, te.r, te.g, te.b), oe[0] = te.r, oe[1] = te.g, oe[2] = te.b);
        else {
          if (Ai(oe, te))
            return;
          Z.uniform3fv(this.addr, te), Ri(oe, te);
        }
      }
      function Ku(Z, te) {
        var oe = this.cache;
        if (te.x !== void 0)
          oe[0] === te.x && oe[1] === te.y && oe[2] === te.z && oe[3] === te.w || (Z.uniform4f(this.addr, te.x, te.y, te.z, te.w), oe[0] = te.x, oe[1] = te.y, oe[2] = te.z, oe[3] = te.w);
        else {
          if (Ai(oe, te))
            return;
          Z.uniform4fv(this.addr, te), Ri(oe, te);
        }
      }
      function Zu(Z, te) {
        var oe = this.cache, se = te.elements;
        if (se === void 0) {
          if (Ai(oe, te))
            return;
          Z.uniformMatrix2fv(this.addr, !1, te), Ri(oe, te);
        } else {
          if (Ai(oe, se))
            return;
          YA.set(se), Z.uniformMatrix2fv(this.addr, !1, YA), Ri(oe, se);
        }
      }
      function Xu(Z, te) {
        var oe = this.cache, se = te.elements;
        if (se === void 0) {
          if (Ai(oe, te))
            return;
          Z.uniformMatrix3fv(this.addr, !1, te), Ri(oe, te);
        } else {
          if (Ai(oe, se))
            return;
          jA.set(se), Z.uniformMatrix3fv(this.addr, !1, jA), Ri(oe, se);
        }
      }
      function el(Z, te) {
        var oe = this.cache, se = te.elements;
        if (se === void 0) {
          if (Ai(oe, te))
            return;
          Z.uniformMatrix4fv(this.addr, !1, te), Ri(oe, te);
        } else {
          if (Ai(oe, se))
            return;
          $A.set(se), Z.uniformMatrix4fv(this.addr, !1, $A), Ri(oe, se);
        }
      }
      function tl(Z, te, oe) {
        var se = this.cache, Ae = oe.allocTextureUnit();
        se[0] !== Ae && (Z.uniform1i(this.addr, Ae), se[0] = Ae), oe.setTexture2D(te || PA, Ae);
      }
      function rl(Z, te, oe) {
        var se = this.cache, Ae = oe.allocTextureUnit();
        se[0] !== Ae && (Z.uniform1i(this.addr, Ae), se[0] = Ae), oe.setTextureCube(te || UA, Ae);
      }
      function LA(Z, te) {
        var oe = this.cache;
        Ai(oe, te) || (Z.uniform2iv(this.addr, te), Ri(oe, te));
      }
      function zA(Z, te) {
        var oe = this.cache;
        Ai(oe, te) || (Z.uniform3iv(this.addr, te), Ri(oe, te));
      }
      function JA(Z, te) {
        var oe = this.cache;
        Ai(oe, te) || (Z.uniform4iv(this.addr, te), Ri(oe, te));
      }
      function nl(Z, te) {
        var oe = this.cache;
        Ai(oe, te) || (Z.uniform1fv(this.addr, te), Ri(oe, te));
      }
      function il(Z, te) {
        var oe = this.cache;
        Ai(oe, te) || (Z.uniform1iv(this.addr, te), Ri(oe, te));
      }
      function ol(Z, te) {
        var oe = this.cache, se = Ha(te, this.size, 2);
        Ai(oe, se) || (Z.uniform2fv(this.addr, se), this.updateCache(se));
      }
      function al(Z, te) {
        var oe = this.cache, se = Ha(te, this.size, 3);
        Ai(oe, se) || (Z.uniform3fv(this.addr, se), this.updateCache(se));
      }
      function sl(Z, te) {
        var oe = this.cache, se = Ha(te, this.size, 4);
        Ai(oe, se) || (Z.uniform4fv(this.addr, se), this.updateCache(se));
      }
      function cl(Z, te) {
        var oe = this.cache, se = Ha(te, this.size, 4);
        Ai(oe, se) || (Z.uniformMatrix2fv(this.addr, !1, se), this.updateCache(se));
      }
      function Al(Z, te) {
        var oe = this.cache, se = Ha(te, this.size, 9);
        Ai(oe, se) || (Z.uniformMatrix3fv(this.addr, !1, se), this.updateCache(se));
      }
      function ul(Z, te) {
        var oe = this.cache, se = Ha(te, this.size, 16);
        Ai(oe, se) || (Z.uniformMatrix4fv(this.addr, !1, se), this.updateCache(se));
      }
      function ll(Z, te, oe) {
        var se = this.cache, Ae = te.length, ue = VA(oe, Ae);
        Ai(se, ue) === !1 && (Z.uniform1iv(this.addr, ue), Ri(se, ue));
        for (var he = 0; he !== Ae; ++he)
          oe.setTexture2D(te[he] || PA, ue[he]);
      }
      function dl(Z, te, oe) {
        var se = this.cache, Ae = te.length, ue = VA(oe, Ae);
        Ai(se, ue) === !1 && (Z.uniform1iv(this.addr, ue), Ri(se, ue));
        for (var he = 0; he !== Ae; ++he)
          oe.setTextureCube(te[he] || UA, ue[he]);
      }
      function hl(Z, te, oe) {
        this.id = Z, this.addr = oe, this.cache = [], this.setValue = function(se) {
          switch (se) {
            case 5126:
              return Lu;
            case 35664:
              return Ju;
            case 35665:
              return Wu;
            case 35666:
              return Ku;
            case 35674:
              return Zu;
            case 35675:
              return Xu;
            case 35676:
              return el;
            case 35678:
            case 36198:
              return tl;
            case 35680:
              return rl;
            case 5124:
            case 35670:
              return zu;
            case 35667:
            case 35671:
              return LA;
            case 35668:
            case 35672:
              return zA;
            case 35669:
            case 35673:
              return JA;
          }
        }(te.type);
      }
      function WA(Z, te, oe) {
        this.id = Z, this.addr = oe, this.cache = [], this.size = te.size, this.setValue = function(se) {
          switch (se) {
            case 5126:
              return nl;
            case 35664:
              return ol;
            case 35665:
              return al;
            case 35666:
              return sl;
            case 35674:
              return cl;
            case 35675:
              return Al;
            case 35676:
              return ul;
            case 35678:
              return ll;
            case 35680:
              return dl;
            case 5124:
            case 35670:
              return il;
            case 35667:
            case 35671:
              return LA;
            case 35668:
            case 35672:
              return zA;
            case 35669:
            case 35673:
              return JA;
          }
        }(te.type);
      }
      function KA(Z) {
        this.id = Z, HA.call(this);
      }
      WA.prototype.updateCache = function(Z) {
        var te = this.cache;
        Z instanceof Float32Array && te.length !== Z.length && (this.cache = new Float32Array(Z.length)), Ri(te, Z);
      }, KA.prototype.setValue = function(Z, te, oe) {
        for (var se = this.seq, Ae = 0, ue = se.length; Ae !== ue; ++Ae) {
          var he = se[Ae];
          he.setValue(Z, te[he.id], oe);
        }
      };
      var tA = /([\w\d_]+)(\])?(\[|\.)?/g;
      function ZA(Z, te) {
        Z.seq.push(te), Z.map[te.id] = te;
      }
      function fl(Z, te, oe) {
        var se = Z.name, Ae = se.length;
        for (tA.lastIndex = 0; ; ) {
          var ue = tA.exec(se), he = tA.lastIndex, pe = ue[1], ve = ue[2] === "]", xe = ue[3];
          if (ve && (pe |= 0), xe === void 0 || xe === "[" && he + 2 === Ae) {
            ZA(oe, xe === void 0 ? new hl(pe, Z, te) : new WA(pe, Z, te));
            break;
          }
          var Me = oe.map[pe];
          Me === void 0 && ZA(oe, Me = new KA(pe)), oe = Me;
        }
      }
      function Wo(Z, te, oe) {
        HA.call(this), this.renderer = oe;
        for (var se = Z.getProgramParameter(te, Z.ACTIVE_UNIFORMS), Ae = 0; Ae < se; ++Ae) {
          var ue = Z.getActiveUniform(te, Ae);
          fl(ue, Z.getUniformLocation(te, ue.name), this);
        }
      }
      function XA(Z, te, oe) {
        var se = Z.createShader(te);
        return Z.shaderSource(se, oe), Z.compileShader(se), Z.getShaderParameter(se, Z.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."), Z.getShaderInfoLog(se) !== "" && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", te === Z.VERTEX_SHADER ? "vertex" : "fragment", Z.getShaderInfoLog(se), function(Ae) {
          for (var ue = Ae.split(`
`), he = 0; he < ue.length; he++)
            ue[he] = he + 1 + ": " + ue[he];
          return ue.join(`
`);
        }(oe)), se;
      }
      Wo.prototype.setValue = function(Z, te, oe) {
        var se = this.map[te];
        se !== void 0 && se.setValue(Z, oe, this.renderer);
      }, Wo.prototype.setOptional = function(Z, te, oe) {
        var se = te[oe];
        se !== void 0 && this.setValue(Z, oe, se);
      }, Wo.upload = function(Z, te, oe, se) {
        for (var Ae = 0, ue = te.length; Ae !== ue; ++Ae) {
          var he = te[Ae], pe = oe[he.id];
          pe.needsUpdate !== !1 && he.setValue(Z, pe.value, se);
        }
      }, Wo.seqWithValue = function(Z, te) {
        for (var oe = [], se = 0, Ae = Z.length; se !== Ae; ++se) {
          var ue = Z[se];
          ue.id in te && oe.push(ue);
        }
        return oe;
      };
      var pl = 0;
      function eu(Z) {
        switch (Z) {
          case Yn:
            return ["Linear", "( value )"];
          case Ci:
            return ["sRGB", "( value )"];
          case Po:
            return ["RGBE", "( value )"];
          case yi:
            return ["RGBM", "( value, 7.0 )"];
          case na:
            return ["RGBM", "( value, 16.0 )"];
          case Cs:
            return ["RGBD", "( value, 256.0 )"];
          case no:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
          default:
            throw new Error("unsupported encoding: " + Z);
        }
      }
      function rA(Z, te) {
        var oe = eu(te);
        return "vec4 " + Z + "( vec4 value ) { return " + oe[0] + "ToLinear" + oe[1] + "; }";
      }
      function Rs(Z) {
        return Z !== "";
      }
      function tu(Z, te) {
        return Z.replace(/NUM_DIR_LIGHTS/g, te.numDirLights).replace(/NUM_SPOT_LIGHTS/g, te.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, te.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, te.numPointLights).replace(/NUM_HEMI_LIGHTS/g, te.numHemiLights);
      }
      function ru(Z, te) {
        return Z.replace(/NUM_CLIPPING_PLANES/g, te.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, te.numClippingPlanes - te.numClipIntersection);
      }
      function nA(Z) {
        return Z.replace(/^[ \t]*#include +<([\w\d./]+)>/gm, function(te, oe) {
          var se = Vn[oe];
          if (se === void 0)
            throw new Error("Can not resolve #include <" + oe + ">");
          return nA(se);
        });
      }
      function nu(Z) {
        return Z.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(te, oe, se, Ae) {
          for (var ue = "", he = parseInt(oe); he < parseInt(se); he++)
            ue += Ae.replace(/\[ i \]/g, "[ " + he + " ]");
          return ue;
        });
      }
      function gl(Z, te, oe, se, Ae, ue, he) {
        var pe = Z.context, ve = se.defines, xe = Ae.vertexShader, Me = Ae.fragmentShader, Ne = "SHADOWMAP_TYPE_BASIC";
        ue.shadowMapType === be ? Ne = "SHADOWMAP_TYPE_PCF" : ue.shadowMapType === Oe && (Ne = "SHADOWMAP_TYPE_PCF_SOFT");
        var Qe = "ENVMAP_TYPE_CUBE", Ue = "ENVMAP_MODE_REFLECTION", ze = "ENVMAP_BLENDING_MULTIPLY";
        if (ue.envMap) {
          switch (se.envMap.mapping) {
            case Te:
            case Re:
              Qe = "ENVMAP_TYPE_CUBE";
              break;
            case Dt:
            case Er:
              Qe = "ENVMAP_TYPE_CUBE_UV";
              break;
            case it:
            case Ct:
              Qe = "ENVMAP_TYPE_EQUIREC";
              break;
            case Nt:
              Qe = "ENVMAP_TYPE_SPHERE";
          }
          switch (se.envMap.mapping) {
            case Re:
            case Ct:
              Ue = "ENVMAP_MODE_REFRACTION";
          }
          switch (se.combine) {
            case ke:
              ze = "ENVMAP_BLENDING_MULTIPLY";
              break;
            case Ve:
              ze = "ENVMAP_BLENDING_MIX";
              break;
            case Ke:
              ze = "ENVMAP_BLENDING_ADD";
          }
        }
        var et, nt, At = Z.gammaFactor > 0 ? Z.gammaFactor : 1, Et = he.isWebGL2 ? "" : function(fr, br, ur) {
          return [(fr = fr || {}).derivatives || br.envMapCubeUV || br.bumpMap || br.normalMap && !br.objectSpaceNormalMap || br.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (fr.fragDepth || br.logarithmicDepthBuffer) && ur.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", fr.drawBuffers && ur.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (fr.shaderTextureLOD || br.envMap) && ur.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Rs).join(`
`);
        }(se.extensions, ue, te), st = function(fr) {
          var br = [];
          for (var ur in fr) {
            var zr = fr[ur];
            zr !== !1 && br.push("#define " + ur + " " + zr);
          }
          return br.join(`
`);
        }(ve), Mt = pe.createProgram();
        if (se.isRawShaderMaterial ? ((et = [st].filter(Rs).join(`
`)).length > 0 && (et += `
`), (nt = [Et, st].filter(Rs).join(`
`)).length > 0 && (nt += `
`)) : (et = ["precision " + ue.precision + " float;", "precision " + ue.precision + " int;", "#define SHADER_NAME " + Ae.name, st, ue.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + At, "#define MAX_BONES " + ue.maxBones, ue.useFog && ue.fog ? "#define USE_FOG" : "", ue.useFog && ue.fogExp ? "#define FOG_EXP2" : "", ue.map ? "#define USE_MAP" : "", ue.envMap ? "#define USE_ENVMAP" : "", ue.envMap ? "#define " + Ue : "", ue.lightMap ? "#define USE_LIGHTMAP" : "", ue.aoMap ? "#define USE_AOMAP" : "", ue.emissiveMap ? "#define USE_EMISSIVEMAP" : "", ue.bumpMap ? "#define USE_BUMPMAP" : "", ue.normalMap ? "#define USE_NORMALMAP" : "", ue.normalMap && ue.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", ue.displacementMap && ue.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", ue.specularMap ? "#define USE_SPECULARMAP" : "", ue.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", ue.metalnessMap ? "#define USE_METALNESSMAP" : "", ue.alphaMap ? "#define USE_ALPHAMAP" : "", ue.vertexColors ? "#define USE_COLOR" : "", ue.flatShading ? "#define FLAT_SHADED" : "", ue.skinning ? "#define USE_SKINNING" : "", ue.useVertexTexture ? "#define BONE_TEXTURE" : "", ue.morphTargets ? "#define USE_MORPHTARGETS" : "", ue.morphNormals && ue.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", ue.doubleSided ? "#define DOUBLE_SIDED" : "", ue.flipSided ? "#define FLIP_SIDED" : "", ue.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", ue.shadowMapEnabled ? "#define " + Ne : "", ue.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", ue.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", ue.logarithmicDepthBuffer && (he.isWebGL2 || te.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", `
`].filter(Rs).join(`
`), nt = [Et, "precision " + ue.precision + " float;", "precision " + ue.precision + " int;", "#define SHADER_NAME " + Ae.name, st, ue.alphaTest ? "#define ALPHATEST " + ue.alphaTest + (ue.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + At, ue.useFog && ue.fog ? "#define USE_FOG" : "", ue.useFog && ue.fogExp ? "#define FOG_EXP2" : "", ue.map ? "#define USE_MAP" : "", ue.envMap ? "#define USE_ENVMAP" : "", ue.envMap ? "#define " + Qe : "", ue.envMap ? "#define " + Ue : "", ue.envMap ? "#define " + ze : "", ue.lightMap ? "#define USE_LIGHTMAP" : "", ue.aoMap ? "#define USE_AOMAP" : "", ue.emissiveMap ? "#define USE_EMISSIVEMAP" : "", ue.bumpMap ? "#define USE_BUMPMAP" : "", ue.normalMap ? "#define USE_NORMALMAP" : "", ue.normalMap && ue.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", ue.specularMap ? "#define USE_SPECULARMAP" : "", ue.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", ue.metalnessMap ? "#define USE_METALNESSMAP" : "", ue.alphaMap ? "#define USE_ALPHAMAP" : "", ue.vertexColors ? "#define USE_COLOR" : "", ue.gradientMap ? "#define USE_GRADIENTMAP" : "", ue.flatShading ? "#define FLAT_SHADED" : "", ue.doubleSided ? "#define DOUBLE_SIDED" : "", ue.flipSided ? "#define FLIP_SIDED" : "", ue.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", ue.shadowMapEnabled ? "#define " + Ne : "", ue.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", ue.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", ue.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", ue.logarithmicDepthBuffer && (he.isWebGL2 || te.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", ue.envMap && (he.isWebGL2 || te.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", ue.toneMapping !== ot ? "#define TONE_MAPPING" : "", ue.toneMapping !== ot ? Vn.tonemapping_pars_fragment : "", ue.toneMapping !== ot ? function(fr, br) {
          var ur;
          switch (br) {
            case St:
              ur = "Linear";
              break;
            case Vt:
              ur = "Reinhard";
              break;
            case zt:
              ur = "Uncharted2";
              break;
            case Wt:
              ur = "OptimizedCineon";
              break;
            default:
              throw new Error("unsupported toneMapping: " + br);
          }
          return "vec3 " + fr + "( vec3 color ) { return " + ur + "ToneMapping( color ); }";
        }("toneMapping", ue.toneMapping) : "", ue.dithering ? "#define DITHERING" : "", ue.outputEncoding || ue.mapEncoding || ue.envMapEncoding || ue.emissiveMapEncoding ? Vn.encodings_pars_fragment : "", ue.mapEncoding ? rA("mapTexelToLinear", ue.mapEncoding) : "", ue.envMapEncoding ? rA("envMapTexelToLinear", ue.envMapEncoding) : "", ue.emissiveMapEncoding ? rA("emissiveMapTexelToLinear", ue.emissiveMapEncoding) : "", ue.outputEncoding ? function(fr, br) {
          var ur = eu(br);
          return "vec4 " + fr + "( vec4 value ) { return LinearTo" + ur[0] + ur[1] + "; }";
        }("linearToOutputTexel", ue.outputEncoding) : "", ue.depthPacking ? "#define DEPTH_PACKING " + se.depthPacking : "", `
`].filter(Rs).join(`
`)), xe = ru(xe = tu(xe = nA(xe), ue), ue), Me = ru(Me = tu(Me = nA(Me), ue), ue), xe = nu(xe), Me = nu(Me), he.isWebGL2 && !se.isRawShaderMaterial) {
          var Ft = !1, lt = /^\s*#version\s+300\s+es\s*\n/;
          se.isShaderMaterial && xe.match(lt) !== null && Me.match(lt) !== null && (Ft = !0, xe = xe.replace(lt, ""), Me = Me.replace(lt, "")), et = [`#version 300 es
`, "#define attribute in", "#define varying out", "#define texture2D texture"].join(`
`) + `
` + et, nt = [`#version 300 es
`, "#define varying in", Ft ? "" : "out highp vec4 pc_fragColor;", Ft ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join(`
`) + `
` + nt;
        }
        var wt = et + xe, jt = nt + Me, Ot = XA(pe, pe.VERTEX_SHADER, wt), er = XA(pe, pe.FRAGMENT_SHADER, jt);
        pe.attachShader(Mt, Ot), pe.attachShader(Mt, er), se.index0AttributeName !== void 0 ? pe.bindAttribLocation(Mt, 0, se.index0AttributeName) : ue.morphTargets === !0 && pe.bindAttribLocation(Mt, 0, "position"), pe.linkProgram(Mt);
        var qt, ir, dr = pe.getProgramInfoLog(Mt).trim(), yr = pe.getShaderInfoLog(Ot).trim(), pr = pe.getShaderInfoLog(er).trim(), Fr = !0, Rr = !0;
        return pe.getProgramParameter(Mt, pe.LINK_STATUS) === !1 ? (Fr = !1, console.error("THREE.WebGLProgram: shader error: ", pe.getError(), "gl.VALIDATE_STATUS", pe.getProgramParameter(Mt, pe.VALIDATE_STATUS), "gl.getProgramInfoLog", dr, yr, pr)) : dr !== "" ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", dr) : yr !== "" && pr !== "" || (Rr = !1), Rr && (this.diagnostics = { runnable: Fr, material: se, programLog: dr, vertexShader: { log: yr, prefix: et }, fragmentShader: { log: pr, prefix: nt } }), pe.deleteShader(Ot), pe.deleteShader(er), this.getUniforms = function() {
          return qt === void 0 && (qt = new Wo(pe, Mt, Z)), qt;
        }, this.getAttributes = function() {
          return ir === void 0 && (ir = function(fr, br) {
            for (var ur = {}, zr = fr.getProgramParameter(br, fr.ACTIVE_ATTRIBUTES), Nr = 0; Nr < zr; Nr++) {
              var An = fr.getActiveAttrib(br, Nr).name;
              ur[An] = fr.getAttribLocation(br, An);
            }
            return ur;
          }(pe, Mt)), ir;
        }, this.destroy = function() {
          pe.deleteProgram(Mt), this.program = void 0;
        }, Object.defineProperties(this, { uniforms: { get: function() {
          return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."), this.getUniforms();
        } }, attributes: { get: function() {
          return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."), this.getAttributes();
        } } }), this.name = Ae.name, this.id = pl++, this.code = oe, this.usedTimes = 1, this.program = Mt, this.vertexShader = Ot, this.fragmentShader = er, this;
      }
      function ml(Z, te, oe) {
        var se = [], Ae = { MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "phong", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite" }, ue = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
        function he(pe, ve) {
          var xe;
          return pe ? pe.isTexture ? xe = pe.encoding : pe.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), xe = pe.texture.encoding) : xe = Yn, xe === Yn && ve && (xe = no), xe;
        }
        this.getParameters = function(pe, ve, xe, Me, Ne, Qe, Ue) {
          var ze = Ae[pe.type], et = Ue.isSkinnedMesh ? function(Et) {
            var st = Et.skeleton.bones;
            if (oe.floatVertexTextures)
              return 1024;
            var Mt = oe.maxVertexUniforms, Ft = Math.floor((Mt - 20) / 4), lt = Math.min(Ft, st.length);
            return lt < st.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + st.length + " bones. This GPU supports " + lt + "."), 0) : lt;
          }(Ue) : 0, nt = oe.precision;
          pe.precision !== null && (nt = oe.getMaxPrecision(pe.precision)) !== pe.precision && console.warn("THREE.WebGLProgram.getParameters:", pe.precision, "not supported, using", nt, "instead.");
          var At = Z.getRenderTarget();
          return { shaderID: ze, precision: nt, supportsVertexTextures: oe.vertexTextures, outputEncoding: he(At ? At.texture : null, Z.gammaOutput), map: !!pe.map, mapEncoding: he(pe.map, Z.gammaInput), envMap: !!pe.envMap, envMapMode: pe.envMap && pe.envMap.mapping, envMapEncoding: he(pe.envMap, Z.gammaInput), envMapCubeUV: !!pe.envMap && (pe.envMap.mapping === Dt || pe.envMap.mapping === Er), lightMap: !!pe.lightMap, aoMap: !!pe.aoMap, emissiveMap: !!pe.emissiveMap, emissiveMapEncoding: he(pe.emissiveMap, Z.gammaInput), bumpMap: !!pe.bumpMap, normalMap: !!pe.normalMap, objectSpaceNormalMap: pe.normalMapType === Ho, displacementMap: !!pe.displacementMap, roughnessMap: !!pe.roughnessMap, metalnessMap: !!pe.metalnessMap, specularMap: !!pe.specularMap, alphaMap: !!pe.alphaMap, gradientMap: !!pe.gradientMap, combine: pe.combine, vertexColors: pe.vertexColors, fog: !!Me, useFog: pe.fog, fogExp: Me && Me.isFogExp2, flatShading: pe.flatShading, sizeAttenuation: pe.sizeAttenuation, logarithmicDepthBuffer: oe.logarithmicDepthBuffer, skinning: pe.skinning && et > 0, maxBones: et, useVertexTexture: oe.floatVertexTextures, morphTargets: pe.morphTargets, morphNormals: pe.morphNormals, maxMorphTargets: Z.maxMorphTargets, maxMorphNormals: Z.maxMorphNormals, numDirLights: ve.directional.length, numPointLights: ve.point.length, numSpotLights: ve.spot.length, numRectAreaLights: ve.rectArea.length, numHemiLights: ve.hemi.length, numClippingPlanes: Ne, numClipIntersection: Qe, dithering: pe.dithering, shadowMapEnabled: Z.shadowMap.enabled && Ue.receiveShadow && xe.length > 0, shadowMapType: Z.shadowMap.type, toneMapping: Z.toneMapping, physicallyCorrectLights: Z.physicallyCorrectLights, premultipliedAlpha: pe.premultipliedAlpha, alphaTest: pe.alphaTest, doubleSided: pe.side === Ge, flipSided: pe.side === Se, depthPacking: pe.depthPacking !== void 0 && pe.depthPacking };
        }, this.getProgramCode = function(pe, ve) {
          var xe = [];
          if (ve.shaderID ? xe.push(ve.shaderID) : (xe.push(pe.fragmentShader), xe.push(pe.vertexShader)), pe.defines !== void 0)
            for (var Me in pe.defines)
              xe.push(Me), xe.push(pe.defines[Me]);
          for (var Ne = 0; Ne < ue.length; Ne++)
            xe.push(ve[ue[Ne]]);
          return xe.push(pe.onBeforeCompile.toString()), xe.push(Z.gammaOutput), xe.join();
        }, this.acquireProgram = function(pe, ve, xe, Me) {
          for (var Ne, Qe = 0, Ue = se.length; Qe < Ue; Qe++) {
            var ze = se[Qe];
            if (ze.code === Me) {
              ++(Ne = ze).usedTimes;
              break;
            }
          }
          return Ne === void 0 && (Ne = new gl(Z, te, Me, pe, ve, xe, oe), se.push(Ne)), Ne;
        }, this.releaseProgram = function(pe) {
          if (--pe.usedTimes == 0) {
            var ve = se.indexOf(pe);
            se[ve] = se[se.length - 1], se.pop(), pe.destroy();
          }
        }, this.programs = se;
      }
      function El(Z, te) {
        return Z.renderOrder !== te.renderOrder ? Z.renderOrder - te.renderOrder : Z.program && te.program && Z.program !== te.program ? Z.program.id - te.program.id : Z.material.id !== te.material.id ? Z.material.id - te.material.id : Z.z !== te.z ? Z.z - te.z : Z.id - te.id;
      }
      function yl(Z, te) {
        return Z.renderOrder !== te.renderOrder ? Z.renderOrder - te.renderOrder : Z.z !== te.z ? te.z - Z.z : Z.id - te.id;
      }
      function Bl() {
        var Z = {};
        return { get: function(te, oe) {
          var se = te.id + "," + oe.id, Ae = Z[se];
          return Ae === void 0 && (Ae = new function() {
            var ue = [], he = 0, pe = [], ve = [];
            return { opaque: pe, transparent: ve, init: function() {
              he = 0, pe.length = 0, ve.length = 0;
            }, push: function(xe, Me, Ne, Qe, Ue) {
              var ze = ue[he];
              ze === void 0 ? (ze = { id: xe.id, object: xe, geometry: Me, material: Ne, program: Ne.program, renderOrder: xe.renderOrder, z: Qe, group: Ue }, ue[he] = ze) : (ze.id = xe.id, ze.object = xe, ze.geometry = Me, ze.material = Ne, ze.program = Ne.program, ze.renderOrder = xe.renderOrder, ze.z = Qe, ze.group = Ue), (Ne.transparent === !0 ? ve : pe).push(ze), he++;
            }, sort: function() {
              pe.length > 1 && pe.sort(El), ve.length > 1 && ve.sort(yl);
            } };
          }(), Z[se] = Ae), Ae;
        }, dispose: function() {
          Z = {};
        } };
      }
      var qa, vl = 0;
      function Cl() {
        var Z = new function() {
          var ue = {};
          return { get: function(he) {
            if (ue[he.id] !== void 0)
              return ue[he.id];
            var pe;
            switch (he.type) {
              case "DirectionalLight":
                pe = { direction: new mt(), color: new sn(), shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new xr() };
                break;
              case "SpotLight":
                pe = { position: new mt(), direction: new mt(), color: new sn(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new xr() };
                break;
              case "PointLight":
                pe = { position: new mt(), color: new sn(), distance: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new xr(), shadowCameraNear: 1, shadowCameraFar: 1e3 };
                break;
              case "HemisphereLight":
                pe = { direction: new mt(), skyColor: new sn(), groundColor: new sn() };
                break;
              case "RectAreaLight":
                pe = { color: new sn(), position: new mt(), halfWidth: new mt(), halfHeight: new mt() };
            }
            return ue[he.id] = pe, pe;
          } };
        }(), te = { id: vl++, hash: { stateID: -1, directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, shadowsLength: -1 }, ambient: [0, 0, 0], directional: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], point: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [] }, oe = new mt(), se = new pn(), Ae = new pn();
        return { setup: function(ue, he, pe) {
          for (var ve = 0, xe = 0, Me = 0, Ne = 0, Qe = 0, Ue = 0, ze = 0, et = 0, nt = pe.matrixWorldInverse, At = 0, Et = ue.length; At < Et; At++) {
            var st = ue[At], Mt = st.color, Ft = st.intensity, lt = st.distance, wt = st.shadow && st.shadow.map ? st.shadow.map.texture : null;
            if (st.isAmbientLight)
              ve += Mt.r * Ft, xe += Mt.g * Ft, Me += Mt.b * Ft;
            else if (st.isDirectionalLight) {
              if ((Ot = Z.get(st)).color.copy(st.color).multiplyScalar(st.intensity), Ot.direction.setFromMatrixPosition(st.matrixWorld), oe.setFromMatrixPosition(st.target.matrixWorld), Ot.direction.sub(oe), Ot.direction.transformDirection(nt), Ot.shadow = st.castShadow, st.castShadow) {
                var jt = st.shadow;
                Ot.shadowBias = jt.bias, Ot.shadowRadius = jt.radius, Ot.shadowMapSize = jt.mapSize;
              }
              te.directionalShadowMap[Ne] = wt, te.directionalShadowMatrix[Ne] = st.shadow.matrix, te.directional[Ne] = Ot, Ne++;
            } else if (st.isSpotLight)
              (Ot = Z.get(st)).position.setFromMatrixPosition(st.matrixWorld), Ot.position.applyMatrix4(nt), Ot.color.copy(Mt).multiplyScalar(Ft), Ot.distance = lt, Ot.direction.setFromMatrixPosition(st.matrixWorld), oe.setFromMatrixPosition(st.target.matrixWorld), Ot.direction.sub(oe), Ot.direction.transformDirection(nt), Ot.coneCos = Math.cos(st.angle), Ot.penumbraCos = Math.cos(st.angle * (1 - st.penumbra)), Ot.decay = st.distance === 0 ? 0 : st.decay, Ot.shadow = st.castShadow, st.castShadow && (jt = st.shadow, Ot.shadowBias = jt.bias, Ot.shadowRadius = jt.radius, Ot.shadowMapSize = jt.mapSize), te.spotShadowMap[Ue] = wt, te.spotShadowMatrix[Ue] = st.shadow.matrix, te.spot[Ue] = Ot, Ue++;
            else if (st.isRectAreaLight)
              (Ot = Z.get(st)).color.copy(Mt).multiplyScalar(Ft), Ot.position.setFromMatrixPosition(st.matrixWorld), Ot.position.applyMatrix4(nt), Ae.identity(), se.copy(st.matrixWorld), se.premultiply(nt), Ae.extractRotation(se), Ot.halfWidth.set(0.5 * st.width, 0, 0), Ot.halfHeight.set(0, 0.5 * st.height, 0), Ot.halfWidth.applyMatrix4(Ae), Ot.halfHeight.applyMatrix4(Ae), te.rectArea[ze] = Ot, ze++;
            else if (st.isPointLight)
              (Ot = Z.get(st)).position.setFromMatrixPosition(st.matrixWorld), Ot.position.applyMatrix4(nt), Ot.color.copy(st.color).multiplyScalar(st.intensity), Ot.distance = st.distance, Ot.decay = st.distance === 0 ? 0 : st.decay, Ot.shadow = st.castShadow, st.castShadow && (jt = st.shadow, Ot.shadowBias = jt.bias, Ot.shadowRadius = jt.radius, Ot.shadowMapSize = jt.mapSize, Ot.shadowCameraNear = jt.camera.near, Ot.shadowCameraFar = jt.camera.far), te.pointShadowMap[Qe] = wt, te.pointShadowMatrix[Qe] = st.shadow.matrix, te.point[Qe] = Ot, Qe++;
            else if (st.isHemisphereLight) {
              var Ot;
              (Ot = Z.get(st)).direction.setFromMatrixPosition(st.matrixWorld), Ot.direction.transformDirection(nt), Ot.direction.normalize(), Ot.skyColor.copy(st.color).multiplyScalar(Ft), Ot.groundColor.copy(st.groundColor).multiplyScalar(Ft), te.hemi[et] = Ot, et++;
            }
          }
          te.ambient[0] = ve, te.ambient[1] = xe, te.ambient[2] = Me, te.directional.length = Ne, te.spot.length = Ue, te.rectArea.length = ze, te.point.length = Qe, te.hemi.length = et, te.hash.stateID = te.id, te.hash.directionalLength = Ne, te.hash.pointLength = Qe, te.hash.spotLength = Ue, te.hash.rectAreaLength = ze, te.hash.hemiLength = et, te.hash.shadowsLength = he.length;
        }, state: te };
      }
      function iu() {
        var Z = new Cl(), te = [], oe = [];
        return { init: function() {
          te.length = 0, oe.length = 0;
        }, state: { lightsArray: te, shadowsArray: oe, lights: Z }, setupLights: function(se) {
          Z.setup(te, oe, se);
        }, pushLight: function(se) {
          te.push(se);
        }, pushShadow: function(se) {
          oe.push(se);
        } };
      }
      function Ko(Z) {
        Qn.call(this), this.type = "MeshDepthMaterial", this.depthPacking = Is, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.setValues(Z);
      }
      function Zo(Z) {
        Qn.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new mt(), this.nearDistance = 1, this.farDistance = 1e3, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.lights = !1, this.setValues(Z);
      }
      function ou(Z, te, oe) {
        for (var se = new bc(), Ae = new pn(), ue = new xr(), he = new xr(oe, oe), pe = new mt(), ve = new mt(), xe = 1, Me = 2, Ne = 1 + (xe | Me), Qe = new Array(Ne), Ue = new Array(Ne), ze = {}, et = { 0: Se, 1: He, 2: Ge }, nt = [new mt(1, 0, 0), new mt(-1, 0, 0), new mt(0, 0, 1), new mt(0, 0, -1), new mt(0, 1, 0), new mt(0, -1, 0)], At = [new mt(0, 1, 0), new mt(0, 1, 0), new mt(0, 1, 0), new mt(0, 1, 0), new mt(0, 0, 1), new mt(0, 0, -1)], Et = [new Zn(), new Zn(), new Zn(), new Zn(), new Zn(), new Zn()], st = 0; st !== Ne; ++st) {
          var Mt = (st & xe) != 0, Ft = (st & Me) != 0, lt = new Ko({ depthPacking: Ga, morphTargets: Mt, skinning: Ft });
          Qe[st] = lt;
          var wt = new Zo({ morphTargets: Mt, skinning: Ft });
          Ue[st] = wt;
        }
        var jt = this;
        function Ot(qt, ir, dr, yr, pr, Fr) {
          var Rr = qt.geometry, fr = null, br = Qe, ur = qt.customDepthMaterial;
          if (dr && (br = Ue, ur = qt.customDistanceMaterial), ur)
            fr = ur;
          else {
            var zr = !1;
            ir.morphTargets && (Rr && Rr.isBufferGeometry ? zr = Rr.morphAttributes && Rr.morphAttributes.position && Rr.morphAttributes.position.length > 0 : Rr && Rr.isGeometry && (zr = Rr.morphTargets && Rr.morphTargets.length > 0)), qt.isSkinnedMesh && ir.skinning === !1 && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", qt);
            var Nr = qt.isSkinnedMesh && ir.skinning, An = 0;
            zr && (An |= xe), Nr && (An |= Me), fr = br[An];
          }
          if (Z.localClippingEnabled && ir.clipShadows === !0 && ir.clippingPlanes.length !== 0) {
            var En = fr.uuid, ni = ir.uuid, Ii = ze[En];
            Ii === void 0 && (Ii = {}, ze[En] = Ii);
            var Xn = Ii[ni];
            Xn === void 0 && (Xn = fr.clone(), Ii[ni] = Xn), fr = Xn;
          }
          return fr.visible = ir.visible, fr.wireframe = ir.wireframe, fr.side = ir.shadowSide != null ? ir.shadowSide : et[ir.side], fr.clipShadows = ir.clipShadows, fr.clippingPlanes = ir.clippingPlanes, fr.clipIntersection = ir.clipIntersection, fr.wireframeLinewidth = ir.wireframeLinewidth, fr.linewidth = ir.linewidth, dr && fr.isMeshDistanceMaterial && (fr.referencePosition.copy(yr), fr.nearDistance = pr, fr.farDistance = Fr), fr;
        }
        function er(qt, ir, dr, yr) {
          if (qt.visible !== !1) {
            if (qt.layers.test(ir.layers) && (qt.isMesh || qt.isLine || qt.isPoints) && qt.castShadow && (!qt.frustumCulled || se.intersectsObject(qt))) {
              qt.modelViewMatrix.multiplyMatrices(dr.matrixWorldInverse, qt.matrixWorld);
              var pr = te.update(qt), Fr = qt.material;
              if (Array.isArray(Fr))
                for (var Rr = pr.groups, fr = 0, br = Rr.length; fr < br; fr++) {
                  var ur = Rr[fr], zr = Fr[ur.materialIndex];
                  if (zr && zr.visible) {
                    var Nr = Ot(qt, zr, yr, ve, dr.near, dr.far);
                    Z.renderBufferDirect(dr, null, pr, Nr, qt, ur);
                  }
                }
              else
                Fr.visible && (Nr = Ot(qt, Fr, yr, ve, dr.near, dr.far), Z.renderBufferDirect(dr, null, pr, Nr, qt, null));
            }
            for (var An = qt.children, En = 0, ni = An.length; En < ni; En++)
              er(An[En], ir, dr, yr);
          }
        }
        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = be, this.render = function(qt, ir, dr) {
          if (jt.enabled !== !1 && (jt.autoUpdate !== !1 || jt.needsUpdate !== !1) && qt.length !== 0) {
            var yr, pr = Z.context, Fr = Z.state;
            Fr.disable(pr.BLEND), Fr.buffers.color.setClear(1, 1, 1, 1), Fr.buffers.depth.setTest(!0), Fr.setScissorTest(!1);
            for (var Rr = 0, fr = qt.length; Rr < fr; Rr++) {
              var br = qt[Rr], ur = br.shadow, zr = br && br.isPointLight;
              if (ur !== void 0) {
                var Nr = ur.camera;
                if (ue.copy(ur.mapSize), ue.min(he), zr) {
                  var An = ue.x, En = ue.y;
                  Et[0].set(2 * An, En, An, En), Et[1].set(0, En, An, En), Et[2].set(3 * An, En, An, En), Et[3].set(An, En, An, En), Et[4].set(3 * An, 0, An, En), Et[5].set(An, 0, An, En), ue.x *= 4, ue.y *= 2;
                }
                if (ur.map === null) {
                  var ni = { minFilter: wr, magFilter: wr, format: rr };
                  ur.map = new ia(ue.x, ue.y, ni), ur.map.texture.name = br.name + ".shadowMap", Nr.updateProjectionMatrix();
                }
                ur.isSpotLightShadow && ur.update(br);
                var Ii = ur.map, Xn = ur.matrix;
                ve.setFromMatrixPosition(br.matrixWorld), Nr.position.copy(ve), zr ? (yr = 6, Xn.makeTranslation(-ve.x, -ve.y, -ve.z)) : (yr = 1, pe.setFromMatrixPosition(br.target.matrixWorld), Nr.lookAt(pe), Nr.updateMatrixWorld(), Xn.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), Xn.multiply(Nr.projectionMatrix), Xn.multiply(Nr.matrixWorldInverse)), Z.setRenderTarget(Ii), Z.clear();
                for (var kr = 0; kr < yr; kr++) {
                  if (zr) {
                    pe.copy(Nr.position), pe.add(nt[kr]), Nr.up.copy(At[kr]), Nr.lookAt(pe), Nr.updateMatrixWorld();
                    var On = Et[kr];
                    Fr.viewport(On);
                  }
                  Ae.multiplyMatrices(Nr.projectionMatrix, Nr.matrixWorldInverse), se.setFromMatrix(Ae), er(ir, dr, Nr, zr);
                }
              } else
                console.warn("THREE.WebGLShadowMap:", br, "has no shadow.");
            }
            jt.needsUpdate = !1;
          }
        };
      }
      function Il(Z, te, oe, se, Ae, ue, he) {
        var pe, ve = {};
        function xe(lt, wt) {
          if (lt.width > wt || lt.height > wt) {
            if ("data" in lt)
              return void console.warn("THREE.WebGLRenderer: image in DataTexture is too big (" + lt.width + "x" + lt.height + ").");
            var jt = wt / Math.max(lt.width, lt.height), Ot = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            return Ot.width = Math.floor(lt.width * jt), Ot.height = Math.floor(lt.height * jt), Ot.getContext("2d").drawImage(lt, 0, 0, lt.width, lt.height, 0, 0, Ot.width, Ot.height), console.warn("THREE.WebGLRenderer: image is too big (" + lt.width + "x" + lt.height + "). Resized to " + Ot.width + "x" + Ot.height), Ot;
          }
          return lt;
        }
        function Me(lt) {
          return bn.isPowerOfTwo(lt.width) && bn.isPowerOfTwo(lt.height);
        }
        function Ne(lt, wt) {
          return lt.generateMipmaps && wt && lt.minFilter !== wr && lt.minFilter !== on;
        }
        function Qe(lt, wt, jt, Ot) {
          Z.generateMipmap(lt), se.get(wt).__maxMipLevel = Math.log(Math.max(jt, Ot)) * Math.LOG2E;
        }
        function Ue(lt, wt) {
          if (!Ae.isWebGL2)
            return lt;
          if (lt === Z.RGB) {
            if (wt === Z.FLOAT)
              return Z.RGB32F;
            if (wt === Z.HALF_FLOAT)
              return Z.RGB16F;
            if (wt === Z.UNSIGNED_BYTE)
              return Z.RGB8;
          }
          if (lt === Z.RGBA) {
            if (wt === Z.FLOAT)
              return Z.RGBA32F;
            if (wt === Z.HALF_FLOAT)
              return Z.RGBA16F;
            if (wt === Z.UNSIGNED_BYTE)
              return Z.RGBA8;
          }
          return lt;
        }
        function ze(lt) {
          return lt === wr || lt === en || lt === Wn ? Z.NEAREST : Z.LINEAR;
        }
        function et(lt) {
          var wt = lt.target;
          wt.removeEventListener("dispose", et), function(jt) {
            var Ot = se.get(jt);
            if (jt.image && Ot.__image__webglTextureCube)
              Z.deleteTexture(Ot.__image__webglTextureCube);
            else {
              if (Ot.__webglInit === void 0)
                return;
              Z.deleteTexture(Ot.__webglTexture);
            }
            se.remove(jt);
          }(wt), wt.isVideoTexture && delete ve[wt.id], he.memory.textures--;
        }
        function nt(lt) {
          var wt = lt.target;
          wt.removeEventListener("dispose", nt), function(jt) {
            var Ot = se.get(jt), er = se.get(jt.texture);
            if (!!jt) {
              if (er.__webglTexture !== void 0 && Z.deleteTexture(er.__webglTexture), jt.depthTexture && jt.depthTexture.dispose(), jt.isWebGLRenderTargetCube)
                for (var qt = 0; qt < 6; qt++)
                  Z.deleteFramebuffer(Ot.__webglFramebuffer[qt]), Ot.__webglDepthbuffer && Z.deleteRenderbuffer(Ot.__webglDepthbuffer[qt]);
              else
                Z.deleteFramebuffer(Ot.__webglFramebuffer), Ot.__webglDepthbuffer && Z.deleteRenderbuffer(Ot.__webglDepthbuffer);
              se.remove(jt.texture), se.remove(jt);
            }
          }(wt), he.memory.textures--;
        }
        function At(lt, wt) {
          var jt = se.get(lt);
          if (lt.isVideoTexture && function(er) {
            var qt = er.id, ir = he.render.frame;
            ve[qt] !== ir && (ve[qt] = ir, er.update());
          }(lt), lt.version > 0 && jt.__version !== lt.version) {
            var Ot = lt.image;
            if (Ot === void 0)
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else {
              if (Ot.complete !== !1)
                return void function(er, qt, ir) {
                  er.__webglInit === void 0 && (er.__webglInit = !0, qt.addEventListener("dispose", et), er.__webglTexture = Z.createTexture(), he.memory.textures++), oe.activeTexture(Z.TEXTURE0 + ir), oe.bindTexture(Z.TEXTURE_2D, er.__webglTexture), Z.pixelStorei(Z.UNPACK_FLIP_Y_WEBGL, qt.flipY), Z.pixelStorei(Z.UNPACK_PREMULTIPLY_ALPHA_WEBGL, qt.premultiplyAlpha), Z.pixelStorei(Z.UNPACK_ALIGNMENT, qt.unpackAlignment);
                  var dr = xe(qt.image, Ae.maxTextureSize);
                  (function(Nr) {
                    return !Ae.isWebGL2 && (Nr.wrapS !== Cr || Nr.wrapT !== Cr || Nr.minFilter !== wr && Nr.minFilter !== on);
                  })(qt) && Me(dr) === !1 && (dr = function(Nr) {
                    return Nr instanceof HTMLImageElement || Nr instanceof HTMLCanvasElement || Nr instanceof ImageBitmap ? (pe === void 0 && (pe = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), pe.width = bn.floorPowerOfTwo(Nr.width), pe.height = bn.floorPowerOfTwo(Nr.height), pe.getContext("2d").drawImage(Nr, 0, 0, pe.width, pe.height), console.warn("THREE.WebGLRenderer: image is not power of two (" + Nr.width + "x" + Nr.height + "). Resized to " + pe.width + "x" + pe.height), pe) : Nr;
                  }(dr));
                  var yr = Me(dr), pr = ue.convert(qt.format), Fr = ue.convert(qt.type), Rr = Ue(pr, Fr);
                  Et(Z.TEXTURE_2D, qt, yr);
                  var fr, br = qt.mipmaps;
                  if (qt.isDepthTexture) {
                    if (Rr = Z.DEPTH_COMPONENT, qt.type === Hn) {
                      if (!Ae.isWebGL2)
                        throw new Error("Float Depth Texture only supported in WebGL2.0");
                      Rr = Z.DEPTH_COMPONENT32F;
                    } else
                      Ae.isWebGL2 && (Rr = Z.DEPTH_COMPONENT16);
                    qt.format === In && Rr === Z.DEPTH_COMPONENT && qt.type !== pi && qt.type !== Ti && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), qt.type = pi, Fr = ue.convert(qt.type)), qt.format === vn && (Rr = Z.DEPTH_STENCIL, qt.type !== mi && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), qt.type = mi, Fr = ue.convert(qt.type))), oe.texImage2D(Z.TEXTURE_2D, 0, Rr, dr.width, dr.height, 0, pr, Fr, null);
                  } else if (qt.isDataTexture)
                    if (br.length > 0 && yr) {
                      for (var ur = 0, zr = br.length; ur < zr; ur++)
                        fr = br[ur], oe.texImage2D(Z.TEXTURE_2D, ur, Rr, fr.width, fr.height, 0, pr, Fr, fr.data);
                      qt.generateMipmaps = !1, er.__maxMipLevel = br.length - 1;
                    } else
                      oe.texImage2D(Z.TEXTURE_2D, 0, Rr, dr.width, dr.height, 0, pr, Fr, dr.data), er.__maxMipLevel = 0;
                  else if (qt.isCompressedTexture) {
                    for (var ur = 0, zr = br.length; ur < zr; ur++)
                      fr = br[ur], qt.format !== rr && qt.format !== Rt ? oe.getCompressedTextureFormats().indexOf(pr) > -1 ? oe.compressedTexImage2D(Z.TEXTURE_2D, ur, Rr, fr.width, fr.height, 0, fr.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : oe.texImage2D(Z.TEXTURE_2D, ur, Rr, fr.width, fr.height, 0, pr, Fr, fr.data);
                    er.__maxMipLevel = br.length - 1;
                  } else if (br.length > 0 && yr) {
                    for (var ur = 0, zr = br.length; ur < zr; ur++)
                      fr = br[ur], oe.texImage2D(Z.TEXTURE_2D, ur, Rr, pr, Fr, fr);
                    qt.generateMipmaps = !1, er.__maxMipLevel = br.length - 1;
                  } else
                    oe.texImage2D(Z.TEXTURE_2D, 0, Rr, pr, Fr, dr), er.__maxMipLevel = 0;
                  Ne(qt, yr) && Qe(Z.TEXTURE_2D, qt, dr.width, dr.height), er.__version = qt.version, qt.onUpdate && qt.onUpdate(qt);
                }(jt, lt, wt);
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            }
          }
          oe.activeTexture(Z.TEXTURE0 + wt), oe.bindTexture(Z.TEXTURE_2D, jt.__webglTexture);
        }
        function Et(lt, wt, jt) {
          var Ot;
          if (jt ? (Z.texParameteri(lt, Z.TEXTURE_WRAP_S, ue.convert(wt.wrapS)), Z.texParameteri(lt, Z.TEXTURE_WRAP_T, ue.convert(wt.wrapT)), Z.texParameteri(lt, Z.TEXTURE_MAG_FILTER, ue.convert(wt.magFilter)), Z.texParameteri(lt, Z.TEXTURE_MIN_FILTER, ue.convert(wt.minFilter))) : (Z.texParameteri(lt, Z.TEXTURE_WRAP_S, Z.CLAMP_TO_EDGE), Z.texParameteri(lt, Z.TEXTURE_WRAP_T, Z.CLAMP_TO_EDGE), wt.wrapS === Cr && wt.wrapT === Cr || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), Z.texParameteri(lt, Z.TEXTURE_MAG_FILTER, ze(wt.magFilter)), Z.texParameteri(lt, Z.TEXTURE_MIN_FILTER, ze(wt.minFilter)), wt.minFilter !== wr && wt.minFilter !== on && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), Ot = te.get("EXT_texture_filter_anisotropic")) {
            if (wt.type === Hn && te.get("OES_texture_float_linear") === null || wt.type === Kn && (Ae.isWebGL2 || te.get("OES_texture_half_float_linear")) === null)
              return;
            (wt.anisotropy > 1 || se.get(wt).__currentAnisotropy) && (Z.texParameterf(lt, Ot.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(wt.anisotropy, Ae.getMaxAnisotropy())), se.get(wt).__currentAnisotropy = wt.anisotropy);
          }
        }
        function st(lt, wt, jt, Ot) {
          var er = ue.convert(wt.texture.format), qt = ue.convert(wt.texture.type), ir = Ue(er, qt);
          oe.texImage2D(Ot, 0, ir, wt.width, wt.height, 0, er, qt, null), Z.bindFramebuffer(Z.FRAMEBUFFER, lt), Z.framebufferTexture2D(Z.FRAMEBUFFER, jt, Ot, se.get(wt.texture).__webglTexture, 0), Z.bindFramebuffer(Z.FRAMEBUFFER, null);
        }
        function Mt(lt, wt) {
          Z.bindRenderbuffer(Z.RENDERBUFFER, lt), wt.depthBuffer && !wt.stencilBuffer ? (Z.renderbufferStorage(Z.RENDERBUFFER, Z.DEPTH_COMPONENT16, wt.width, wt.height), Z.framebufferRenderbuffer(Z.FRAMEBUFFER, Z.DEPTH_ATTACHMENT, Z.RENDERBUFFER, lt)) : wt.depthBuffer && wt.stencilBuffer ? (Z.renderbufferStorage(Z.RENDERBUFFER, Z.DEPTH_STENCIL, wt.width, wt.height), Z.framebufferRenderbuffer(Z.FRAMEBUFFER, Z.DEPTH_STENCIL_ATTACHMENT, Z.RENDERBUFFER, lt)) : Z.renderbufferStorage(Z.RENDERBUFFER, Z.RGBA4, wt.width, wt.height), Z.bindRenderbuffer(Z.RENDERBUFFER, null);
        }
        function Ft(lt) {
          var wt = se.get(lt), jt = lt.isWebGLRenderTargetCube === !0;
          if (lt.depthTexture) {
            if (jt)
              throw new Error("target.depthTexture not supported in Cube render targets");
            (function(er, qt) {
              if (qt && qt.isWebGLRenderTargetCube)
                throw new Error("Depth Texture with cube render targets is not supported");
              if (Z.bindFramebuffer(Z.FRAMEBUFFER, er), !qt.depthTexture || !qt.depthTexture.isDepthTexture)
                throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
              se.get(qt.depthTexture).__webglTexture && qt.depthTexture.image.width === qt.width && qt.depthTexture.image.height === qt.height || (qt.depthTexture.image.width = qt.width, qt.depthTexture.image.height = qt.height, qt.depthTexture.needsUpdate = !0), At(qt.depthTexture, 0);
              var ir = se.get(qt.depthTexture).__webglTexture;
              if (qt.depthTexture.format === In)
                Z.framebufferTexture2D(Z.FRAMEBUFFER, Z.DEPTH_ATTACHMENT, Z.TEXTURE_2D, ir, 0);
              else {
                if (qt.depthTexture.format !== vn)
                  throw new Error("Unknown depthTexture format");
                Z.framebufferTexture2D(Z.FRAMEBUFFER, Z.DEPTH_STENCIL_ATTACHMENT, Z.TEXTURE_2D, ir, 0);
              }
            })(wt.__webglFramebuffer, lt);
          } else if (jt) {
            wt.__webglDepthbuffer = [];
            for (var Ot = 0; Ot < 6; Ot++)
              Z.bindFramebuffer(Z.FRAMEBUFFER, wt.__webglFramebuffer[Ot]), wt.__webglDepthbuffer[Ot] = Z.createRenderbuffer(), Mt(wt.__webglDepthbuffer[Ot], lt);
          } else
            Z.bindFramebuffer(Z.FRAMEBUFFER, wt.__webglFramebuffer), wt.__webglDepthbuffer = Z.createRenderbuffer(), Mt(wt.__webglDepthbuffer, lt);
          Z.bindFramebuffer(Z.FRAMEBUFFER, null);
        }
        this.setTexture2D = At, this.setTextureCube = function(lt, wt) {
          var jt = se.get(lt);
          if (lt.image.length === 6)
            if (lt.version > 0 && jt.__version !== lt.version) {
              jt.__image__webglTextureCube || (lt.addEventListener("dispose", et), jt.__image__webglTextureCube = Z.createTexture(), he.memory.textures++), oe.activeTexture(Z.TEXTURE0 + wt), oe.bindTexture(Z.TEXTURE_CUBE_MAP, jt.__image__webglTextureCube), Z.pixelStorei(Z.UNPACK_FLIP_Y_WEBGL, lt.flipY);
              for (var Ot = lt && lt.isCompressedTexture, er = lt.image[0] && lt.image[0].isDataTexture, qt = [], ir = 0; ir < 6; ir++)
                qt[ir] = Ot || er ? er ? lt.image[ir].image : lt.image[ir] : xe(lt.image[ir], Ae.maxCubemapSize);
              var dr = qt[0], yr = Me(dr), pr = ue.convert(lt.format), Fr = ue.convert(lt.type), Rr = Ue(pr, Fr);
              for (Et(Z.TEXTURE_CUBE_MAP, lt, yr), ir = 0; ir < 6; ir++)
                if (Ot)
                  for (var fr, br = qt[ir].mipmaps, ur = 0, zr = br.length; ur < zr; ur++)
                    fr = br[ur], lt.format !== rr && lt.format !== Rt ? oe.getCompressedTextureFormats().indexOf(pr) > -1 ? oe.compressedTexImage2D(Z.TEXTURE_CUBE_MAP_POSITIVE_X + ir, ur, Rr, fr.width, fr.height, 0, fr.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : oe.texImage2D(Z.TEXTURE_CUBE_MAP_POSITIVE_X + ir, ur, Rr, fr.width, fr.height, 0, pr, Fr, fr.data);
                else
                  er ? oe.texImage2D(Z.TEXTURE_CUBE_MAP_POSITIVE_X + ir, 0, Rr, qt[ir].width, qt[ir].height, 0, pr, Fr, qt[ir].data) : oe.texImage2D(Z.TEXTURE_CUBE_MAP_POSITIVE_X + ir, 0, Rr, pr, Fr, qt[ir]);
              jt.__maxMipLevel = Ot ? br.length - 1 : 0, Ne(lt, yr) && Qe(Z.TEXTURE_CUBE_MAP, lt, dr.width, dr.height), jt.__version = lt.version, lt.onUpdate && lt.onUpdate(lt);
            } else
              oe.activeTexture(Z.TEXTURE0 + wt), oe.bindTexture(Z.TEXTURE_CUBE_MAP, jt.__image__webglTextureCube);
        }, this.setTextureCubeDynamic = function(lt, wt) {
          oe.activeTexture(Z.TEXTURE0 + wt), oe.bindTexture(Z.TEXTURE_CUBE_MAP, se.get(lt).__webglTexture);
        }, this.setupRenderTarget = function(lt) {
          var wt = se.get(lt), jt = se.get(lt.texture);
          lt.addEventListener("dispose", nt), jt.__webglTexture = Z.createTexture(), he.memory.textures++;
          var Ot = lt.isWebGLRenderTargetCube === !0, er = Me(lt);
          if (Ot) {
            wt.__webglFramebuffer = [];
            for (var qt = 0; qt < 6; qt++)
              wt.__webglFramebuffer[qt] = Z.createFramebuffer();
          } else
            wt.__webglFramebuffer = Z.createFramebuffer();
          if (Ot) {
            for (oe.bindTexture(Z.TEXTURE_CUBE_MAP, jt.__webglTexture), Et(Z.TEXTURE_CUBE_MAP, lt.texture, er), qt = 0; qt < 6; qt++)
              st(wt.__webglFramebuffer[qt], lt, Z.COLOR_ATTACHMENT0, Z.TEXTURE_CUBE_MAP_POSITIVE_X + qt);
            Ne(lt.texture, er) && Qe(Z.TEXTURE_CUBE_MAP, lt.texture, lt.width, lt.height), oe.bindTexture(Z.TEXTURE_CUBE_MAP, null);
          } else
            oe.bindTexture(Z.TEXTURE_2D, jt.__webglTexture), Et(Z.TEXTURE_2D, lt.texture, er), st(wt.__webglFramebuffer, lt, Z.COLOR_ATTACHMENT0, Z.TEXTURE_2D), Ne(lt.texture, er) && Qe(Z.TEXTURE_2D, lt.texture, lt.width, lt.height), oe.bindTexture(Z.TEXTURE_2D, null);
          lt.depthBuffer && Ft(lt);
        }, this.updateRenderTargetMipmap = function(lt) {
          var wt = lt.texture;
          if (Ne(wt, Me(lt))) {
            var jt = lt.isWebGLRenderTargetCube ? Z.TEXTURE_CUBE_MAP : Z.TEXTURE_2D, Ot = se.get(wt).__webglTexture;
            oe.bindTexture(jt, Ot), Qe(jt, wt, lt.width, lt.height), oe.bindTexture(jt, null);
          }
        };
      }
      function au(Z, te, oe) {
        return { convert: function(se) {
          var Ae;
          if (se === gr)
            return Z.REPEAT;
          if (se === Cr)
            return Z.CLAMP_TO_EDGE;
          if (se === mr)
            return Z.MIRRORED_REPEAT;
          if (se === wr)
            return Z.NEAREST;
          if (se === en)
            return Z.NEAREST_MIPMAP_NEAREST;
          if (se === Wn)
            return Z.NEAREST_MIPMAP_LINEAR;
          if (se === on)
            return Z.LINEAR;
          if (se === qn)
            return Z.LINEAR_MIPMAP_NEAREST;
          if (se === $n)
            return Z.LINEAR_MIPMAP_LINEAR;
          if (se === Pn)
            return Z.UNSIGNED_BYTE;
          if (se === Ln)
            return Z.UNSIGNED_SHORT_4_4_4_4;
          if (se === si)
            return Z.UNSIGNED_SHORT_5_5_5_1;
          if (se === gi)
            return Z.UNSIGNED_SHORT_5_6_5;
          if (se === Un)
            return Z.BYTE;
          if (se === ai)
            return Z.SHORT;
          if (se === pi)
            return Z.UNSIGNED_SHORT;
          if (se === Wi)
            return Z.INT;
          if (se === Ti)
            return Z.UNSIGNED_INT;
          if (se === Hn)
            return Z.FLOAT;
          if (se === Kn) {
            if (oe.isWebGL2)
              return Z.HALF_FLOAT;
            if ((Ae = te.get("OES_texture_half_float")) !== null)
              return Ae.HALF_FLOAT_OES;
          }
          if (se === Ei)
            return Z.ALPHA;
          if (se === Rt)
            return Z.RGB;
          if (se === rr)
            return Z.RGBA;
          if (se === Mr)
            return Z.LUMINANCE;
          if (se === an)
            return Z.LUMINANCE_ALPHA;
          if (se === In)
            return Z.DEPTH_COMPONENT;
          if (se === vn)
            return Z.DEPTH_STENCIL;
          if (se === xt)
            return Z.FUNC_ADD;
          if (se === Yt)
            return Z.FUNC_SUBTRACT;
          if (se === Jt)
            return Z.FUNC_REVERSE_SUBTRACT;
          if (se === Pt)
            return Z.ZERO;
          if (se === yt)
            return Z.ONE;
          if (se === kt)
            return Z.SRC_COLOR;
          if (se === $t)
            return Z.ONE_MINUS_SRC_COLOR;
          if (se === Le)
            return Z.SRC_ALPHA;
          if (se === or)
            return Z.ONE_MINUS_SRC_ALPHA;
          if (se === tr)
            return Z.DST_ALPHA;
          if (se === lr)
            return Z.ONE_MINUS_DST_ALPHA;
          if (se === gt)
            return Z.DST_COLOR;
          if (se === Ut)
            return Z.ONE_MINUS_DST_COLOR;
          if (se === Ze)
            return Z.SRC_ALPHA_SATURATE;
          if ((se === fn || se === _n || se === jn || se === Zr) && (Ae = te.get("WEBGL_compressed_texture_s3tc")) !== null) {
            if (se === fn)
              return Ae.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (se === _n)
              return Ae.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (se === jn)
              return Ae.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (se === Zr)
              return Ae.COMPRESSED_RGBA_S3TC_DXT5_EXT;
          }
          if ((se === Kr || se === $r || se === vt || se === Ir) && (Ae = te.get("WEBGL_compressed_texture_pvrtc")) !== null) {
            if (se === Kr)
              return Ae.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (se === $r)
              return Ae.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (se === vt)
              return Ae.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (se === Ir)
              return Ae.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
          }
          if (se === Kt && (Ae = te.get("WEBGL_compressed_texture_etc1")) !== null)
            return Ae.COMPRESSED_RGB_ETC1_WEBGL;
          if ((se === Hr || se === De || se === We || se === at || se === dt || se === ut || se === Zt || se === cr || se === ar || se === Sr || se === jr || se === Tr || se === Lr || se === xn) && (Ae = te.get("WEBGL_compressed_texture_astc")) !== null)
            return se;
          if (se === Ht || se === Lt) {
            if (oe.isWebGL2) {
              if (se === Ht)
                return Z.MIN;
              if (se === Lt)
                return Z.MAX;
            }
            if ((Ae = te.get("EXT_blend_minmax")) !== null) {
              if (se === Ht)
                return Ae.MIN_EXT;
              if (se === Lt)
                return Ae.MAX_EXT;
            }
          }
          if (se === mi) {
            if (oe.isWebGL2)
              return Z.UNSIGNED_INT_24_8;
            if ((Ae = te.get("WEBGL_depth_texture")) !== null)
              return Ae.UNSIGNED_INT_24_8_WEBGL;
          }
          return 0;
        } };
      }
      function Da() {
        Dr.call(this), this.type = "Group";
      }
      function di(Z, te, oe, se) {
        Qo.call(this), this.type = "PerspectiveCamera", this.fov = Z !== void 0 ? Z : 50, this.zoom = 1, this.near = oe !== void 0 ? oe : 0.1, this.far = se !== void 0 ? se : 2e3, this.focus = 10, this.aspect = te !== void 0 ? te : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
      }
      function Ms(Z) {
        di.call(this), this.cameras = Z || [];
      }
      function su(Z) {
        var te = this, oe = null, se = null, Ae = null, ue = [], he = new pn(), pe = new pn();
        typeof window < "u" && "VRFrameData" in window && (se = new window.VRFrameData(), window.addEventListener("vrdisplaypresentchange", At, !1));
        var ve = new pn(), xe = new ci(), Me = new mt(), Ne = new di();
        Ne.bounds = new Zn(0, 0, 0.5, 1), Ne.layers.enable(1);
        var Qe = new di();
        Qe.bounds = new Zn(0.5, 0, 0.5, 1), Qe.layers.enable(2);
        var Ue, ze, et = new Ms([Ne, Qe]);
        function nt() {
          return oe !== null && oe.isPresenting === !0;
        }
        function At() {
          if (nt()) {
            var Ft = oe.getEyeParameters("left"), lt = Ft.renderWidth, wt = Ft.renderHeight;
            ze = Z.getPixelRatio(), Ue = Z.getSize(), Z.setDrawingBufferSize(2 * lt, wt, 1), Mt.start();
          } else
            te.enabled && (Z.setDrawingBufferSize(Ue.width, Ue.height, ze), Mt.stop());
        }
        et.layers.enable(1), et.layers.enable(2);
        var Et = [];
        function st(Ft) {
          for (var lt = navigator.getGamepads && navigator.getGamepads(), wt = 0, jt = 0, Ot = lt.length; wt < Ot; wt++) {
            var er = lt[wt];
            if (er && (er.id === "Daydream Controller" || er.id === "Gear VR Controller" || er.id === "Oculus Go Controller" || er.id === "OpenVR Gamepad" || er.id.startsWith("Oculus Touch") || er.id.startsWith("Spatial Controller"))) {
              if (jt === Ft)
                return er;
              jt++;
            }
          }
        }
        this.enabled = !1, this.userHeight = 1.6, this.getController = function(Ft) {
          var lt = ue[Ft];
          return lt === void 0 && ((lt = new Da()).matrixAutoUpdate = !1, lt.visible = !1, ue[Ft] = lt), lt;
        }, this.getDevice = function() {
          return oe;
        }, this.setDevice = function(Ft) {
          Ft !== void 0 && (oe = Ft), Mt.setContext(Ft);
        }, this.setPoseTarget = function(Ft) {
          Ft !== void 0 && (Ae = Ft);
        }, this.getCamera = function(Ft) {
          if (oe === null)
            return Ft.position.set(0, te.userHeight, 0), Ft;
          oe.depthNear = Ft.near, oe.depthFar = Ft.far, oe.getFrameData(se);
          var lt = oe.stageParameters;
          lt ? he.fromArray(lt.sittingToStandingTransform) : he.makeTranslation(0, te.userHeight, 0);
          var wt = se.pose, jt = Ae !== null ? Ae : Ft;
          if (jt.matrix.copy(he), jt.matrix.decompose(jt.position, jt.quaternion, jt.scale), wt.orientation !== null && (xe.fromArray(wt.orientation), jt.quaternion.multiply(xe)), wt.position !== null && (xe.setFromRotationMatrix(he), Me.fromArray(wt.position), Me.applyQuaternion(xe), jt.position.add(Me)), jt.updateMatrixWorld(), oe.isPresenting === !1)
            return Ft;
          Ne.near = Ft.near, Qe.near = Ft.near, Ne.far = Ft.far, Qe.far = Ft.far, et.matrixWorld.copy(Ft.matrixWorld), et.matrixWorldInverse.copy(Ft.matrixWorldInverse), Ne.matrixWorldInverse.fromArray(se.leftViewMatrix), Qe.matrixWorldInverse.fromArray(se.rightViewMatrix), pe.getInverse(he), Ne.matrixWorldInverse.multiply(pe), Qe.matrixWorldInverse.multiply(pe);
          var Ot = jt.parent;
          Ot !== null && (ve.getInverse(Ot.matrixWorld), Ne.matrixWorldInverse.multiply(ve), Qe.matrixWorldInverse.multiply(ve)), Ne.matrixWorld.getInverse(Ne.matrixWorldInverse), Qe.matrixWorld.getInverse(Qe.matrixWorldInverse), Ne.projectionMatrix.fromArray(se.leftProjectionMatrix), Qe.projectionMatrix.fromArray(se.rightProjectionMatrix), et.projectionMatrix.copy(Ne.projectionMatrix);
          var er = oe.getLayers();
          if (er.length) {
            var qt = er[0];
            qt.leftBounds !== null && qt.leftBounds.length === 4 && Ne.bounds.fromArray(qt.leftBounds), qt.rightBounds !== null && qt.rightBounds.length === 4 && Qe.bounds.fromArray(qt.rightBounds);
          }
          return function() {
            for (var ir = 0; ir < ue.length; ir++) {
              var dr = ue[ir], yr = st(ir);
              if (yr !== void 0 && yr.pose !== void 0) {
                if (yr.pose === null)
                  return;
                var pr = yr.pose;
                pr.hasPosition === !1 && dr.position.set(0.2, -0.6, -0.05), pr.position !== null && dr.position.fromArray(pr.position), pr.orientation !== null && dr.quaternion.fromArray(pr.orientation), dr.matrix.compose(dr.position, dr.quaternion, dr.scale), dr.matrix.premultiply(he), dr.matrix.decompose(dr.position, dr.quaternion, dr.scale), dr.matrixWorldNeedsUpdate = !0, dr.visible = !0;
                var Fr = yr.id === "Daydream Controller" ? 0 : 1;
                Et[ir] !== yr.buttons[Fr].pressed && (Et[ir] = yr.buttons[Fr].pressed, Et[ir] === !0 ? dr.dispatchEvent({ type: "selectstart" }) : (dr.dispatchEvent({ type: "selectend" }), dr.dispatchEvent({ type: "select" })));
              } else
                dr.visible = !1;
            }
          }(), et;
        }, this.getStandingMatrix = function() {
          return he;
        }, this.isPresenting = nt;
        var Mt = new Xc();
        this.setAnimationLoop = function(Ft) {
          Mt.setAnimationLoop(Ft);
        }, this.submitFrame = function() {
          nt() && oe.submitFrame();
        }, this.dispose = function() {
          typeof window < "u" && window.removeEventListener("vrdisplaypresentchange", At);
        };
      }
      function iA(Z) {
        console.log("THREE.WebGLRenderer", le);
        var te = (Z = Z || {}).canvas !== void 0 ? Z.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), oe = Z.context !== void 0 ? Z.context : null, se = Z.alpha !== void 0 && Z.alpha, Ae = Z.depth === void 0 || Z.depth, ue = Z.stencil === void 0 || Z.stencil, he = Z.antialias !== void 0 && Z.antialias, pe = Z.premultipliedAlpha === void 0 || Z.premultipliedAlpha, ve = Z.preserveDrawingBuffer !== void 0 && Z.preserveDrawingBuffer, xe = Z.powerPreference !== void 0 ? Z.powerPreference : "default", Me = null, Ne = null;
        this.domElement = te, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.physicallyCorrectLights = !1, this.toneMapping = St, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
        var Qe, Ue, ze, et, nt, At, Et, st, Mt, Ft, lt, wt, jt, Ot, er, qt, ir, dr, yr = this, pr = !1, Fr = null, Rr = null, fr = null, br = -1, ur = { geometry: null, program: null, wireframe: !1 }, zr = null, Nr = null, An = new Zn(), En = new Zn(), ni = null, Ii = 0, Xn = te.width, kr = te.height, On = 1, hi = new Zn(0, 0, Xn, kr), Di = new Zn(0, 0, Xn, kr), Bi = !1, Ji = new bc(), wi = new function() {
          var Ye = this, It = null, bt = 0, Xt = !1, sr = !1, Vr = new _o(), hr = new Vi(), Ar = { value: null, needsUpdate: !1 };
          function Ur() {
            Ar.value !== It && (Ar.value = It, Ar.needsUpdate = bt > 0), Ye.numPlanes = bt, Ye.numIntersection = 0;
          }
          function vr(Br, rn, nn, Jr) {
            var _r = Br !== null ? Br.length : 0, tn = null;
            if (_r !== 0) {
              if (tn = Ar.value, Jr !== !0 || tn === null) {
                var yn = nn + 4 * _r, un = rn.matrixWorldInverse;
                hr.getNormalMatrix(un), (tn === null || tn.length < yn) && (tn = new Float32Array(yn));
                for (var hn = 0, Fn = nn; hn !== _r; ++hn, Fn += 4)
                  Vr.copy(Br[hn]).applyMatrix4(un, hr), Vr.normal.toArray(tn, Fn), tn[Fn + 3] = Vr.constant;
              }
              Ar.value = tn, Ar.needsUpdate = !0;
            }
            return Ye.numPlanes = _r, tn;
          }
          this.uniform = Ar, this.numPlanes = 0, this.numIntersection = 0, this.init = function(Br, rn, nn) {
            var Jr = Br.length !== 0 || rn || bt !== 0 || Xt;
            return Xt = rn, It = vr(Br, nn, 0), bt = Br.length, Jr;
          }, this.beginShadows = function() {
            sr = !0, vr(null);
          }, this.endShadows = function() {
            sr = !1, Ur();
          }, this.setState = function(Br, rn, nn, Jr, _r, tn) {
            if (!Xt || Br === null || Br.length === 0 || sr && !nn)
              sr ? vr(null) : Ur();
            else {
              var yn = sr ? 0 : bt, un = 4 * yn, hn = _r.clippingState || null;
              Ar.value = hn, hn = vr(Br, Jr, un, tn);
              for (var Fn = 0; Fn !== un; ++Fn)
                hn[Fn] = It[Fn];
              _r.clippingState = hn, this.numIntersection = rn ? this.numPlanes : 0, this.numPlanes += yn;
            }
          };
        }(), wo = !1, bo = !1, Ni = new pn(), bi = new mt();
        function ta() {
          return Rr === null ? On : 1;
        }
        try {
          var $i = { alpha: se, depth: Ae, stencil: ue, antialias: he, premultipliedAlpha: pe, preserveDrawingBuffer: ve, powerPreference: xe };
          if (te.addEventListener("webglcontextlost", ti, !1), te.addEventListener("webglcontextrestored", fi, !1), (Qe = oe || te.getContext("webgl", $i) || te.getContext("experimental-webgl", $i)) === null)
            throw te.getContext("webgl") !== null ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
          Qe.getShaderPrecisionFormat === void 0 && (Qe.getShaderPrecisionFormat = function() {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
        } catch (Ye) {
          console.error("THREE.WebGLRenderer: " + Ye.message);
        }
        function ho() {
          Ue = new function(Ye) {
            var It = {};
            return { get: function(bt) {
              if (It[bt] !== void 0)
                return It[bt];
              var Xt;
              switch (bt) {
                case "WEBGL_depth_texture":
                  Xt = Ye.getExtension("WEBGL_depth_texture") || Ye.getExtension("MOZ_WEBGL_depth_texture") || Ye.getExtension("WEBKIT_WEBGL_depth_texture");
                  break;
                case "EXT_texture_filter_anisotropic":
                  Xt = Ye.getExtension("EXT_texture_filter_anisotropic") || Ye.getExtension("MOZ_EXT_texture_filter_anisotropic") || Ye.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                  break;
                case "WEBGL_compressed_texture_s3tc":
                  Xt = Ye.getExtension("WEBGL_compressed_texture_s3tc") || Ye.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || Ye.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                  break;
                case "WEBGL_compressed_texture_pvrtc":
                  Xt = Ye.getExtension("WEBGL_compressed_texture_pvrtc") || Ye.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                  break;
                default:
                  Xt = Ye.getExtension(bt);
              }
              return Xt === null && console.warn("THREE.WebGLRenderer: " + bt + " extension not supported."), It[bt] = Xt, Xt;
            } };
          }(Qe), (ze = new function(Ye, It, bt) {
            var Xt;
            function sr(Fn) {
              if (Fn === "highp") {
                if (Ye.getShaderPrecisionFormat(Ye.VERTEX_SHADER, Ye.HIGH_FLOAT).precision > 0 && Ye.getShaderPrecisionFormat(Ye.FRAGMENT_SHADER, Ye.HIGH_FLOAT).precision > 0)
                  return "highp";
                Fn = "mediump";
              }
              return Fn === "mediump" && Ye.getShaderPrecisionFormat(Ye.VERTEX_SHADER, Ye.MEDIUM_FLOAT).precision > 0 && Ye.getShaderPrecisionFormat(Ye.FRAGMENT_SHADER, Ye.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
            }
            var Vr = typeof WebGL2RenderingContext < "u" && Ye instanceof WebGL2RenderingContext, hr = bt.precision !== void 0 ? bt.precision : "highp", Ar = sr(hr);
            Ar !== hr && (console.warn("THREE.WebGLRenderer:", hr, "not supported, using", Ar, "instead."), hr = Ar);
            var Ur = bt.logarithmicDepthBuffer === !0, vr = Ye.getParameter(Ye.MAX_TEXTURE_IMAGE_UNITS), Br = Ye.getParameter(Ye.MAX_VERTEX_TEXTURE_IMAGE_UNITS), rn = Ye.getParameter(Ye.MAX_TEXTURE_SIZE), nn = Ye.getParameter(Ye.MAX_CUBE_MAP_TEXTURE_SIZE), Jr = Ye.getParameter(Ye.MAX_VERTEX_ATTRIBS), _r = Ye.getParameter(Ye.MAX_VERTEX_UNIFORM_VECTORS), tn = Ye.getParameter(Ye.MAX_VARYING_VECTORS), yn = Ye.getParameter(Ye.MAX_FRAGMENT_UNIFORM_VECTORS), un = Br > 0, hn = Vr || !!It.get("OES_texture_float");
            return { isWebGL2: Vr, getMaxAnisotropy: function() {
              if (Xt !== void 0)
                return Xt;
              var Fn = It.get("EXT_texture_filter_anisotropic");
              return Xt = Fn !== null ? Ye.getParameter(Fn.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;
            }, getMaxPrecision: sr, precision: hr, logarithmicDepthBuffer: Ur, maxTextures: vr, maxVertexTextures: Br, maxTextureSize: rn, maxCubemapSize: nn, maxAttributes: Jr, maxVertexUniforms: _r, maxVaryings: tn, maxFragmentUniforms: yn, vertexTextures: un, floatFragmentTextures: hn, floatVertexTextures: un && hn };
          }(Qe, Ue, Z)).isWebGL2 || (Ue.get("WEBGL_depth_texture"), Ue.get("OES_texture_float"), Ue.get("OES_texture_half_float"), Ue.get("OES_texture_half_float_linear"), Ue.get("OES_standard_derivatives"), Ue.get("OES_element_index_uint"), Ue.get("ANGLE_instanced_arrays")), Ue.get("OES_texture_float_linear"), dr = new au(Qe, Ue, ze), (et = new function(Ye, It, bt, Xt) {
            var sr = new function() {
              var nr = !1, Gn = new Zn(), Dn = null, Si = new Zn(0, 0, 0, 0);
              return { setMask: function(Sn) {
                Dn === Sn || nr || (Ye.colorMask(Sn, Sn, Sn, Sn), Dn = Sn);
              }, setLocked: function(Sn) {
                nr = Sn;
              }, setClear: function(Sn, Pi, Ao, Yi, wc) {
                wc === !0 && (Sn *= Yi, Pi *= Yi, Ao *= Yi), Gn.set(Sn, Pi, Ao, Yi), Si.equals(Gn) === !1 && (Ye.clearColor(Sn, Pi, Ao, Yi), Si.copy(Gn));
              }, reset: function() {
                nr = !1, Dn = null, Si.set(-1, 0, 0, 0);
              } };
            }(), Vr = new function() {
              var nr = !1, Gn = null, Dn = null, Si = null;
              return { setTest: function(Sn) {
                Sn ? Qi(Ye.DEPTH_TEST) : Go(Ye.DEPTH_TEST);
              }, setMask: function(Sn) {
                Gn === Sn || nr || (Ye.depthMask(Sn), Gn = Sn);
              }, setFunc: function(Sn) {
                if (Dn !== Sn) {
                  if (Sn)
                    switch (Sn) {
                      case rt:
                        Ye.depthFunc(Ye.NEVER);
                        break;
                      case $e:
                        Ye.depthFunc(Ye.ALWAYS);
                        break;
                      case Bt:
                        Ye.depthFunc(Ye.LESS);
                        break;
                      case ct:
                        Ye.depthFunc(Ye.LEQUAL);
                        break;
                      case je:
                        Ye.depthFunc(Ye.EQUAL);
                        break;
                      case _e:
                        Ye.depthFunc(Ye.GEQUAL);
                        break;
                      case Ie:
                        Ye.depthFunc(Ye.GREATER);
                        break;
                      case Ce:
                        Ye.depthFunc(Ye.NOTEQUAL);
                        break;
                      default:
                        Ye.depthFunc(Ye.LEQUAL);
                    }
                  else
                    Ye.depthFunc(Ye.LEQUAL);
                  Dn = Sn;
                }
              }, setLocked: function(Sn) {
                nr = Sn;
              }, setClear: function(Sn) {
                Si !== Sn && (Ye.clearDepth(Sn), Si = Sn);
              }, reset: function() {
                nr = !1, Gn = null, Dn = null, Si = null;
              } };
            }(), hr = new function() {
              var nr = !1, Gn = null, Dn = null, Si = null, Sn = null, Pi = null, Ao = null, Yi = null, wc = null;
              return { setTest: function(xi) {
                xi ? Qi(Ye.STENCIL_TEST) : Go(Ye.STENCIL_TEST);
              }, setMask: function(xi) {
                Gn === xi || nr || (Ye.stencilMask(xi), Gn = xi);
              }, setFunc: function(xi, ka, Fa) {
                Dn === xi && Si === ka && Sn === Fa || (Ye.stencilFunc(xi, ka, Fa), Dn = xi, Si = ka, Sn = Fa);
              }, setOp: function(xi, ka, Fa) {
                Pi === xi && Ao === ka && Yi === Fa || (Ye.stencilOp(xi, ka, Fa), Pi = xi, Ao = ka, Yi = Fa);
              }, setLocked: function(xi) {
                nr = xi;
              }, setClear: function(xi) {
                wc !== xi && (Ye.clearStencil(xi), wc = xi);
              }, reset: function() {
                nr = !1, Gn = null, Dn = null, Si = null, Sn = null, Pi = null, Ao = null, Yi = null, wc = null;
              } };
            }(), Ar = Ye.getParameter(Ye.MAX_VERTEX_ATTRIBS), Ur = new Uint8Array(Ar), vr = new Uint8Array(Ar), Br = new Uint8Array(Ar), rn = {}, nn = null, Jr = null, _r = null, tn = null, yn = null, un = null, hn = null, Fn = null, li = null, Gr = !1, Qr = null, Fo = null, Es = null, Oi = null, fo = null, Ma = Ye.getParameter(Ye.MAX_COMBINED_TEXTURE_IMAGE_UNITS), zo = !1, ra = 0, ji = Ye.getParameter(Ye.VERSION);
            ji.indexOf("WebGL") !== -1 ? (ra = parseFloat(/^WebGL\ ([0-9])/.exec(ji)[1]), zo = ra >= 1) : ji.indexOf("OpenGL ES") !== -1 && (ra = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(ji)[1]), zo = ra >= 2);
            var _i = null, ys = {}, Cc = new Zn(), Na = new Zn();
            function Ic(nr, Gn, Dn) {
              var Si = new Uint8Array(4), Sn = Ye.createTexture();
              Ye.bindTexture(nr, Sn), Ye.texParameteri(nr, Ye.TEXTURE_MIN_FILTER, Ye.NEAREST), Ye.texParameteri(nr, Ye.TEXTURE_MAG_FILTER, Ye.NEAREST);
              for (var Pi = 0; Pi < Dn; Pi++)
                Ye.texImage2D(Gn + Pi, 0, Ye.RGBA, 1, 1, 0, Ye.RGBA, Ye.UNSIGNED_BYTE, Si);
              return Sn;
            }
            var Bs = {};
            function xc(nr, Gn) {
              Ur[nr] = 1, vr[nr] === 0 && (Ye.enableVertexAttribArray(nr), vr[nr] = 1), Br[nr] !== Gn && ((Xt.isWebGL2 ? Ye : It.get("ANGLE_instanced_arrays"))[Xt.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](nr, Gn), Br[nr] = Gn);
            }
            function Qi(nr) {
              rn[nr] !== !0 && (Ye.enable(nr), rn[nr] = !0);
            }
            function Go(nr) {
              rn[nr] !== !1 && (Ye.disable(nr), rn[nr] = !1);
            }
            function vs(nr, Gn, Dn, Si, Sn, Pi, Ao, Yi) {
              if (nr !== Tt ? Qi(Ye.BLEND) : Go(Ye.BLEND), nr !== pt) {
                if (nr !== _r || Yi !== Gr)
                  switch (nr) {
                    case ht:
                      Yi ? (Ye.blendEquationSeparate(Ye.FUNC_ADD, Ye.FUNC_ADD), Ye.blendFuncSeparate(Ye.ONE, Ye.ONE, Ye.ONE, Ye.ONE)) : (Ye.blendEquation(Ye.FUNC_ADD), Ye.blendFunc(Ye.SRC_ALPHA, Ye.ONE));
                      break;
                    case Qt:
                      Yi ? (Ye.blendEquationSeparate(Ye.FUNC_ADD, Ye.FUNC_ADD), Ye.blendFuncSeparate(Ye.ZERO, Ye.ZERO, Ye.ONE_MINUS_SRC_COLOR, Ye.ONE_MINUS_SRC_ALPHA)) : (Ye.blendEquation(Ye.FUNC_ADD), Ye.blendFunc(Ye.ZERO, Ye.ONE_MINUS_SRC_COLOR));
                      break;
                    case Gt:
                      Yi ? (Ye.blendEquationSeparate(Ye.FUNC_ADD, Ye.FUNC_ADD), Ye.blendFuncSeparate(Ye.ZERO, Ye.SRC_COLOR, Ye.ZERO, Ye.SRC_ALPHA)) : (Ye.blendEquation(Ye.FUNC_ADD), Ye.blendFunc(Ye.ZERO, Ye.SRC_COLOR));
                      break;
                    default:
                      Yi ? (Ye.blendEquationSeparate(Ye.FUNC_ADD, Ye.FUNC_ADD), Ye.blendFuncSeparate(Ye.ONE, Ye.ONE_MINUS_SRC_ALPHA, Ye.ONE, Ye.ONE_MINUS_SRC_ALPHA)) : (Ye.blendEquationSeparate(Ye.FUNC_ADD, Ye.FUNC_ADD), Ye.blendFuncSeparate(Ye.SRC_ALPHA, Ye.ONE_MINUS_SRC_ALPHA, Ye.ONE, Ye.ONE_MINUS_SRC_ALPHA));
                  }
                tn = null, yn = null, un = null, hn = null, Fn = null, li = null;
              } else
                Sn = Sn || Gn, Pi = Pi || Dn, Ao = Ao || Si, Gn === tn && Sn === hn || (Ye.blendEquationSeparate(bt.convert(Gn), bt.convert(Sn)), tn = Gn, hn = Sn), Dn === yn && Si === un && Pi === Fn && Ao === li || (Ye.blendFuncSeparate(bt.convert(Dn), bt.convert(Si), bt.convert(Pi), bt.convert(Ao)), yn = Dn, un = Si, Fn = Pi, li = Ao);
              _r = nr, Gr = Yi;
            }
            function Oo(nr) {
              Qr !== nr && (nr ? Ye.frontFace(Ye.CW) : Ye.frontFace(Ye.CCW), Qr = nr);
            }
            function Gu(nr) {
              nr !== ye ? (Qi(Ye.CULL_FACE), nr !== Fo && (nr === fe ? Ye.cullFace(Ye.BACK) : nr === Be ? Ye.cullFace(Ye.FRONT) : Ye.cullFace(Ye.FRONT_AND_BACK))) : Go(Ye.CULL_FACE), Fo = nr;
            }
            function Ou(nr, Gn, Dn) {
              nr ? (Qi(Ye.POLYGON_OFFSET_FILL), Oi === Gn && fo === Dn || (Ye.polygonOffset(Gn, Dn), Oi = Gn, fo = Dn)) : Go(Ye.POLYGON_OFFSET_FILL);
            }
            function Pu(nr) {
              nr === void 0 && (nr = Ye.TEXTURE0 + Ma - 1), _i !== nr && (Ye.activeTexture(nr), _i = nr);
            }
            return Bs[Ye.TEXTURE_2D] = Ic(Ye.TEXTURE_2D, Ye.TEXTURE_2D, 1), Bs[Ye.TEXTURE_CUBE_MAP] = Ic(Ye.TEXTURE_CUBE_MAP, Ye.TEXTURE_CUBE_MAP_POSITIVE_X, 6), sr.setClear(0, 0, 0, 1), Vr.setClear(1), hr.setClear(0), Qi(Ye.DEPTH_TEST), Vr.setFunc(ct), Oo(!1), Gu(fe), Qi(Ye.CULL_FACE), Qi(Ye.BLEND), vs(Xe), { buffers: { color: sr, depth: Vr, stencil: hr }, initAttributes: function() {
              for (var nr = 0, Gn = Ur.length; nr < Gn; nr++)
                Ur[nr] = 0;
            }, enableAttribute: function(nr) {
              xc(nr, 0);
            }, enableAttributeAndDivisor: xc, disableUnusedAttributes: function() {
              for (var nr = 0, Gn = vr.length; nr !== Gn; ++nr)
                vr[nr] !== Ur[nr] && (Ye.disableVertexAttribArray(nr), vr[nr] = 0);
            }, enable: Qi, disable: Go, getCompressedTextureFormats: function() {
              if (nn === null && (nn = [], It.get("WEBGL_compressed_texture_pvrtc") || It.get("WEBGL_compressed_texture_s3tc") || It.get("WEBGL_compressed_texture_etc1") || It.get("WEBGL_compressed_texture_astc")))
                for (var nr = Ye.getParameter(Ye.COMPRESSED_TEXTURE_FORMATS), Gn = 0; Gn < nr.length; Gn++)
                  nn.push(nr[Gn]);
              return nn;
            }, useProgram: function(nr) {
              return Jr !== nr && (Ye.useProgram(nr), Jr = nr, !0);
            }, setBlending: vs, setMaterial: function(nr, Gn) {
              nr.side === Ge ? Go(Ye.CULL_FACE) : Qi(Ye.CULL_FACE);
              var Dn = nr.side === Se;
              Gn && (Dn = !Dn), Oo(Dn), nr.blending === Xe && nr.transparent === !1 ? vs(Tt) : vs(nr.blending, nr.blendEquation, nr.blendSrc, nr.blendDst, nr.blendEquationAlpha, nr.blendSrcAlpha, nr.blendDstAlpha, nr.premultipliedAlpha), Vr.setFunc(nr.depthFunc), Vr.setTest(nr.depthTest), Vr.setMask(nr.depthWrite), sr.setMask(nr.colorWrite), Ou(nr.polygonOffset, nr.polygonOffsetFactor, nr.polygonOffsetUnits);
            }, setFlipSided: Oo, setCullFace: Gu, setLineWidth: function(nr) {
              nr !== Es && (zo && Ye.lineWidth(nr), Es = nr);
            }, setPolygonOffset: Ou, setScissorTest: function(nr) {
              nr ? Qi(Ye.SCISSOR_TEST) : Go(Ye.SCISSOR_TEST);
            }, activeTexture: Pu, bindTexture: function(nr, Gn) {
              _i === null && Pu();
              var Dn = ys[_i];
              Dn === void 0 && (Dn = { type: void 0, texture: void 0 }, ys[_i] = Dn), Dn.type === nr && Dn.texture === Gn || (Ye.bindTexture(nr, Gn || Bs[nr]), Dn.type = nr, Dn.texture = Gn);
            }, compressedTexImage2D: function() {
              try {
                Ye.compressedTexImage2D.apply(Ye, arguments);
              } catch (nr) {
                console.error("THREE.WebGLState:", nr);
              }
            }, texImage2D: function() {
              try {
                Ye.texImage2D.apply(Ye, arguments);
              } catch (nr) {
                console.error("THREE.WebGLState:", nr);
              }
            }, scissor: function(nr) {
              Cc.equals(nr) === !1 && (Ye.scissor(nr.x, nr.y, nr.z, nr.w), Cc.copy(nr));
            }, viewport: function(nr) {
              Na.equals(nr) === !1 && (Ye.viewport(nr.x, nr.y, nr.z, nr.w), Na.copy(nr));
            }, reset: function() {
              for (var nr = 0; nr < vr.length; nr++)
                vr[nr] === 1 && (Ye.disableVertexAttribArray(nr), vr[nr] = 0);
              rn = {}, nn = null, _i = null, ys = {}, Jr = null, _r = null, Qr = null, Fo = null, sr.reset(), Vr.reset(), hr.reset();
            } };
          }(Qe, Ue, dr, ze)).scissor(En.copy(Di).multiplyScalar(On)), et.viewport(An.copy(hi).multiplyScalar(On)), nt = new function(Ye) {
            var It = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
            return { memory: { geometries: 0, textures: 0 }, render: It, programs: null, autoReset: !0, reset: function() {
              It.frame++, It.calls = 0, It.triangles = 0, It.points = 0, It.lines = 0;
            }, update: function(bt, Xt, sr) {
              switch (sr = sr || 1, It.calls++, Xt) {
                case Ye.TRIANGLES:
                  It.triangles += sr * (bt / 3);
                  break;
                case Ye.TRIANGLE_STRIP:
                case Ye.TRIANGLE_FAN:
                  It.triangles += sr * (bt - 2);
                  break;
                case Ye.LINES:
                  It.lines += sr * (bt / 2);
                  break;
                case Ye.LINE_STRIP:
                  It.lines += sr * (bt - 1);
                  break;
                case Ye.LINE_LOOP:
                  It.lines += sr * bt;
                  break;
                case Ye.POINTS:
                  It.points += sr * bt;
                  break;
                default:
                  console.error("THREE.WebGLInfo: Unknown draw mode:", Xt);
              }
            } };
          }(Qe), At = new function() {
            var Ye = /* @__PURE__ */ new WeakMap();
            return { get: function(It) {
              var bt = Ye.get(It);
              return bt === void 0 && (bt = {}, Ye.set(It, bt)), bt;
            }, remove: function(It) {
              Ye.delete(It);
            }, update: function(It, bt, Xt) {
              Ye.get(It)[bt] = Xt;
            }, dispose: function() {
              Ye = /* @__PURE__ */ new WeakMap();
            } };
          }(), Et = new Il(Qe, Ue, et, At, ze, dr, nt), st = new qu(Qe), Mt = new function(Ye, It, bt) {
            var Xt = {}, sr = {};
            function Vr(hr) {
              var Ar = hr.target, Ur = Xt[Ar.id];
              for (var vr in Ur.index !== null && It.remove(Ur.index), Ur.attributes)
                It.remove(Ur.attributes[vr]);
              Ar.removeEventListener("dispose", Vr), delete Xt[Ar.id];
              var Br = sr[Ur.id];
              Br && (It.remove(Br), delete sr[Ur.id]), bt.memory.geometries--;
            }
            return { get: function(hr, Ar) {
              var Ur = Xt[Ar.id];
              return Ur || (Ar.addEventListener("dispose", Vr), Ar.isBufferGeometry ? Ur = Ar : Ar.isGeometry && (Ar._bufferGeometry === void 0 && (Ar._bufferGeometry = new Wr().setFromObject(hr)), Ur = Ar._bufferGeometry), Xt[Ar.id] = Ur, bt.memory.geometries++, Ur);
            }, update: function(hr) {
              var Ar = hr.index, Ur = hr.attributes;
              for (var vr in Ar !== null && It.update(Ar, Ye.ELEMENT_ARRAY_BUFFER), Ur)
                It.update(Ur[vr], Ye.ARRAY_BUFFER);
              var Br = hr.morphAttributes;
              for (var vr in Br)
                for (var rn = Br[vr], nn = 0, Jr = rn.length; nn < Jr; nn++)
                  It.update(rn[nn], Ye.ARRAY_BUFFER);
            }, getWireframeAttribute: function(hr) {
              var Ar = sr[hr.id];
              if (Ar)
                return Ar;
              var Ur, vr = [], Br = hr.index, rn = hr.attributes;
              if (Br !== null)
                for (var nn = 0, Jr = (Ur = Br.array).length; nn < Jr; nn += 3) {
                  var _r = Ur[nn + 0], tn = Ur[nn + 1], yn = Ur[nn + 2];
                  vr.push(_r, tn, tn, yn, yn, _r);
                }
              else
                for (nn = 0, Jr = (Ur = rn.position.array).length / 3 - 1; nn < Jr; nn += 3)
                  _r = nn + 0, tn = nn + 1, yn = nn + 2, vr.push(_r, tn, tn, yn, yn, _r);
              return Ar = new (OA(vr) > 65535 ? Aa : ca)(vr, 1), It.update(Ar, Ye.ELEMENT_ARRAY_BUFFER), sr[hr.id] = Ar, Ar;
            } };
          }(Qe, st, nt), Ft = new function(Ye, It) {
            var bt = {};
            return { update: function(Xt) {
              var sr = It.render.frame, Vr = Xt.geometry, hr = Ye.get(Xt, Vr);
              return bt[hr.id] !== sr && (Vr.isGeometry && hr.updateFromObject(Xt), Ye.update(hr), bt[hr.id] = sr), hr;
            }, dispose: function() {
              bt = {};
            } };
          }(Mt, nt), er = new function(Ye) {
            var It = {}, bt = new Float32Array(8);
            return { update: function(Xt, sr, Vr, hr) {
              var Ar = Xt.morphTargetInfluences, Ur = Ar.length, vr = It[sr.id];
              if (vr === void 0) {
                vr = [];
                for (var Br = 0; Br < Ur; Br++)
                  vr[Br] = [Br, 0];
                It[sr.id] = vr;
              }
              var rn = Vr.morphTargets && sr.morphAttributes.position, nn = Vr.morphNormals && sr.morphAttributes.normal;
              for (Br = 0; Br < Ur; Br++)
                (Jr = vr[Br])[1] !== 0 && (rn && sr.removeAttribute("morphTarget" + Br), nn && sr.removeAttribute("morphNormal" + Br));
              for (Br = 0; Br < Ur; Br++)
                (Jr = vr[Br])[0] = Br, Jr[1] = Ar[Br];
              for (vr.sort(Vu), Br = 0; Br < 8; Br++) {
                var Jr;
                if (Jr = vr[Br]) {
                  var _r = Jr[0], tn = Jr[1];
                  if (tn) {
                    rn && sr.addAttribute("morphTarget" + Br, rn[_r]), nn && sr.addAttribute("morphNormal" + Br, nn[_r]), bt[Br] = tn;
                    continue;
                  }
                }
                bt[Br] = 0;
              }
              hr.getUniforms().setValue(Ye, "morphTargetInfluences", bt);
            } };
          }(Qe), lt = new ml(yr, Ue, ze), wt = new Bl(), jt = new function() {
            var Ye = {};
            return { get: function(It, bt) {
              var Xt;
              return Ye[It.id] === void 0 ? (Xt = new iu(), Ye[It.id] = {}, Ye[It.id][bt.id] = Xt) : Ye[It.id][bt.id] === void 0 ? (Xt = new iu(), Ye[It.id][bt.id] = Xt) : Xt = Ye[It.id][bt.id], Xt;
            }, dispose: function() {
              Ye = {};
            } };
          }(), Ot = new function(Ye, It, bt, Xt) {
            var sr, Vr, hr, Ar = new sn(0), Ur = 0;
            function vr(Br, rn) {
              It.buffers.color.setClear(Br.r, Br.g, Br.b, rn, Xt);
            }
            return { getClearColor: function() {
              return Ar;
            }, setClearColor: function(Br, rn) {
              Ar.set(Br), vr(Ar, Ur = rn !== void 0 ? rn : 1);
            }, getClearAlpha: function() {
              return Ur;
            }, setClearAlpha: function(Br) {
              vr(Ar, Ur = Br);
            }, render: function(Br, rn, nn, Jr) {
              var _r = rn.background;
              _r === null ? vr(Ar, Ur) : _r && _r.isColor && (vr(_r, 1), Jr = !0), (Ye.autoClear || Jr) && Ye.clear(Ye.autoClearColor, Ye.autoClearDepth, Ye.autoClearStencil), _r && _r.isCubeTexture ? (hr === void 0 && ((hr = new Ki(new ua(1, 1, 1), new uo({ uniforms: aa.cube.uniforms, vertexShader: aa.cube.vertexShader, fragmentShader: aa.cube.fragmentShader, side: Se, depthTest: !0, depthWrite: !1, fog: !1 }))).geometry.removeAttribute("normal"), hr.geometry.removeAttribute("uv"), hr.onBeforeRender = function(tn, yn, un) {
                this.matrixWorld.copyPosition(un.matrixWorld);
              }, bt.update(hr)), hr.material.uniforms.tCube.value = _r, Br.push(hr, hr.geometry, hr.material, 0, null)) : _r && _r.isTexture && (sr === void 0 && (sr = new Pa(-1, 1, 1, -1, 0, 1), Vr = new Ki(new la(2, 2), new io({ depthTest: !1, depthWrite: !1, fog: !1 })), bt.update(Vr)), Vr.material.map = _r, Ye.renderBufferDirect(sr, null, Vr.geometry, Vr.material, Vr, null));
            } };
          }(yr, et, Ft, pe), qt = new function(Ye, It, bt, Xt) {
            var sr;
            this.setMode = function(Vr) {
              sr = Vr;
            }, this.render = function(Vr, hr) {
              Ye.drawArrays(sr, Vr, hr), bt.update(hr, sr);
            }, this.renderInstances = function(Vr, hr, Ar) {
              var Ur;
              if (Xt.isWebGL2)
                Ur = Ye;
              else if ((Ur = It.get("ANGLE_instanced_arrays")) === null)
                return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
              Ur[Xt.isWebGL2 ? "drawArraysInstanced" : "drawArraysInstancedANGLE"](sr, hr, Ar, Vr.maxInstancedCount), bt.update(Ar, sr, Vr.maxInstancedCount);
            };
          }(Qe, Ue, nt, ze), ir = new function(Ye, It, bt, Xt) {
            var sr, Vr, hr;
            this.setMode = function(Ar) {
              sr = Ar;
            }, this.setIndex = function(Ar) {
              Vr = Ar.type, hr = Ar.bytesPerElement;
            }, this.render = function(Ar, Ur) {
              Ye.drawElements(sr, Ur, Vr, Ar * hr), bt.update(Ur, sr);
            }, this.renderInstances = function(Ar, Ur, vr) {
              var Br;
              if (Xt.isWebGL2)
                Br = Ye;
              else if ((Br = It.get("ANGLE_instanced_arrays")) === null)
                return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
              Br[Xt.isWebGL2 ? "drawElementsInstanced" : "drawElementsInstancedANGLE"](sr, vr, Vr, Ur * hr, Ar.maxInstancedCount), bt.update(vr, sr, Ar.maxInstancedCount);
            };
          }(Qe, Ue, nt, ze), nt.programs = lt.programs, yr.context = Qe, yr.capabilities = ze, yr.extensions = Ue, yr.properties = At, yr.renderLists = wt, yr.state = et, yr.info = nt;
        }
        ho();
        var kn = "xr" in navigator ? new function(Ye) {
          var It = Ye.context, bt = null, Xt = null, sr = null, Vr = null, hr = [], Ar = [];
          function Ur() {
            return Xt !== null && sr !== null;
          }
          var vr = new di();
          vr.layers.enable(1), vr.viewport = new Zn();
          var Br = new di();
          Br.layers.enable(2), Br.viewport = new Zn();
          var rn = new Ms([vr, Br]);
          function nn(un) {
            var hn = hr[Ar.indexOf(un.inputSource)];
            hn && hn.dispatchEvent({ type: un.type });
          }
          function Jr() {
            Ye.setFramebuffer(null), yn.stop();
          }
          function _r(un, hn) {
            hn === null ? un.matrixWorld.copy(un.matrix) : un.matrixWorld.multiplyMatrices(hn.matrixWorld, un.matrix), un.matrixWorldInverse.getInverse(un.matrixWorld);
          }
          rn.layers.enable(1), rn.layers.enable(2), this.enabled = !1, this.getController = function(un) {
            var hn = hr[un];
            return hn === void 0 && ((hn = new Da()).matrixAutoUpdate = !1, hn.visible = !1, hr[un] = hn), hn;
          }, this.getDevice = function() {
            return bt;
          }, this.setDevice = function(un) {
            un !== void 0 && (bt = un), un instanceof XRDevice && It.setCompatibleXRDevice(un);
          }, this.setSession = function(un, hn) {
            (Xt = un) !== null && (Xt.addEventListener("select", nn), Xt.addEventListener("selectstart", nn), Xt.addEventListener("selectend", nn), Xt.addEventListener("end", Jr), Xt.baseLayer = new XRWebGLLayer(Xt, It), Xt.requestFrameOfReference(hn.frameOfReferenceType).then(function(Fn) {
              sr = Fn, Ye.setFramebuffer(Xt.baseLayer.framebuffer), yn.setContext(Xt), yn.start();
            }), Ar = Xt.getInputSources(), Xt.addEventListener("inputsourceschange", function() {
              Ar = Xt.getInputSources(), console.log(Ar);
            }));
          }, this.getCamera = function(un) {
            if (Ur()) {
              var hn = un.parent, Fn = rn.cameras;
              _r(rn, hn);
              for (var li = 0; li < Fn.length; li++)
                _r(Fn[li], hn);
              un.matrixWorld.copy(rn.matrixWorld);
              for (var Gr = un.children, Qr = (li = 0, Gr.length); li < Qr; li++)
                Gr[li].updateMatrixWorld(!0);
              return rn;
            }
            return un;
          }, this.isPresenting = Ur;
          var tn = null, yn = new Xc();
          yn.setAnimationLoop(function(un, hn) {
            if ((Vr = hn.getDevicePose(sr)) !== null)
              for (var Fn = Xt.baseLayer, li = hn.views, Gr = 0; Gr < li.length; Gr++) {
                var Qr = li[Gr], Fo = Fn.getViewport(Qr), Es = Vr.getViewMatrix(Qr), Oi = rn.cameras[Gr];
                Oi.matrix.fromArray(Es).getInverse(Oi.matrix), Oi.projectionMatrix.fromArray(Qr.projectionMatrix), Oi.viewport.set(Fo.x, Fo.y, Fo.width, Fo.height), Gr === 0 && (rn.matrix.copy(Oi.matrix), rn.projectionMatrix.copy(Oi.projectionMatrix));
              }
            for (Gr = 0; Gr < hr.length; Gr++) {
              var fo = hr[Gr], Ma = Ar[Gr];
              if (Ma) {
                var zo = hn.getInputPose(Ma, sr);
                if (zo !== null) {
                  fo.matrix.elements = zo.pointerMatrix, fo.matrix.decompose(fo.position, fo.rotation, fo.scale), fo.visible = !0;
                  continue;
                }
              }
              fo.visible = !1;
            }
            tn && tn(un);
          }), this.setAnimationLoop = function(un) {
            tn = un;
          }, this.dispose = function() {
          }, this.getStandingMatrix = function() {
            return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."), new THREE.Matrix4();
          }, this.submitFrame = function() {
          };
        }(yr) : new su(yr);
        this.vr = kn;
        var Jn = new ou(yr, Ft, ze.maxTextureSize);
        function ti(Ye) {
          Ye.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), pr = !0;
        }
        function fi() {
          console.log("THREE.WebGLRenderer: Context Restored."), pr = !1, ho();
        }
        function oi(Ye) {
          var It = Ye.target;
          It.removeEventListener("dispose", oi), function(bt) {
            ki(bt), At.remove(bt);
          }(It);
        }
        function ki(Ye) {
          var It = At.get(Ye).program;
          Ye.program = void 0, It !== void 0 && lt.releaseProgram(It);
        }
        this.shadowMap = Jn, this.getContext = function() {
          return Qe;
        }, this.getContextAttributes = function() {
          return Qe.getContextAttributes();
        }, this.forceContextLoss = function() {
          var Ye = Ue.get("WEBGL_lose_context");
          Ye && Ye.loseContext();
        }, this.forceContextRestore = function() {
          var Ye = Ue.get("WEBGL_lose_context");
          Ye && Ye.restoreContext();
        }, this.getPixelRatio = function() {
          return On;
        }, this.setPixelRatio = function(Ye) {
          Ye !== void 0 && (On = Ye, this.setSize(Xn, kr, !1));
        }, this.getSize = function() {
          return { width: Xn, height: kr };
        }, this.setSize = function(Ye, It, bt) {
          kn.isPresenting() ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (Xn = Ye, kr = It, te.width = Ye * On, te.height = It * On, bt !== !1 && (te.style.width = Ye + "px", te.style.height = It + "px"), this.setViewport(0, 0, Ye, It));
        }, this.getDrawingBufferSize = function() {
          return { width: Xn * On, height: kr * On };
        }, this.setDrawingBufferSize = function(Ye, It, bt) {
          Xn = Ye, kr = It, On = bt, te.width = Ye * bt, te.height = It * bt, this.setViewport(0, 0, Ye, It);
        }, this.getCurrentViewport = function() {
          return An;
        }, this.setViewport = function(Ye, It, bt, Xt) {
          hi.set(Ye, kr - It - Xt, bt, Xt), et.viewport(An.copy(hi).multiplyScalar(On));
        }, this.setScissor = function(Ye, It, bt, Xt) {
          Di.set(Ye, kr - It - Xt, bt, Xt), et.scissor(En.copy(Di).multiplyScalar(On));
        }, this.setScissorTest = function(Ye) {
          et.setScissorTest(Bi = Ye);
        }, this.getClearColor = function() {
          return Ot.getClearColor();
        }, this.setClearColor = function() {
          Ot.setClearColor.apply(Ot, arguments);
        }, this.getClearAlpha = function() {
          return Ot.getClearAlpha();
        }, this.setClearAlpha = function() {
          Ot.setClearAlpha.apply(Ot, arguments);
        }, this.clear = function(Ye, It, bt) {
          var Xt = 0;
          (Ye === void 0 || Ye) && (Xt |= Qe.COLOR_BUFFER_BIT), (It === void 0 || It) && (Xt |= Qe.DEPTH_BUFFER_BIT), (bt === void 0 || bt) && (Xt |= Qe.STENCIL_BUFFER_BIT), Qe.clear(Xt);
        }, this.clearColor = function() {
          this.clear(!0, !1, !1);
        }, this.clearDepth = function() {
          this.clear(!1, !0, !1);
        }, this.clearStencil = function() {
          this.clear(!1, !1, !0);
        }, this.clearTarget = function(Ye, It, bt, Xt) {
          this.setRenderTarget(Ye), this.clear(It, bt, Xt);
        }, this.dispose = function() {
          te.removeEventListener("webglcontextlost", ti, !1), te.removeEventListener("webglcontextrestored", fi, !1), wt.dispose(), jt.dispose(), At.dispose(), Ft.dispose(), kn.dispose(), Gi.stop();
        }, this.renderBufferImmediate = function(Ye, It) {
          et.initAttributes();
          var bt = At.get(Ye);
          Ye.hasPositions && !bt.position && (bt.position = Qe.createBuffer()), Ye.hasNormals && !bt.normal && (bt.normal = Qe.createBuffer()), Ye.hasUvs && !bt.uv && (bt.uv = Qe.createBuffer()), Ye.hasColors && !bt.color && (bt.color = Qe.createBuffer());
          var Xt = It.getAttributes();
          Ye.hasPositions && (Qe.bindBuffer(Qe.ARRAY_BUFFER, bt.position), Qe.bufferData(Qe.ARRAY_BUFFER, Ye.positionArray, Qe.DYNAMIC_DRAW), et.enableAttribute(Xt.position), Qe.vertexAttribPointer(Xt.position, 3, Qe.FLOAT, !1, 0, 0)), Ye.hasNormals && (Qe.bindBuffer(Qe.ARRAY_BUFFER, bt.normal), Qe.bufferData(Qe.ARRAY_BUFFER, Ye.normalArray, Qe.DYNAMIC_DRAW), et.enableAttribute(Xt.normal), Qe.vertexAttribPointer(Xt.normal, 3, Qe.FLOAT, !1, 0, 0)), Ye.hasUvs && (Qe.bindBuffer(Qe.ARRAY_BUFFER, bt.uv), Qe.bufferData(Qe.ARRAY_BUFFER, Ye.uvArray, Qe.DYNAMIC_DRAW), et.enableAttribute(Xt.uv), Qe.vertexAttribPointer(Xt.uv, 2, Qe.FLOAT, !1, 0, 0)), Ye.hasColors && (Qe.bindBuffer(Qe.ARRAY_BUFFER, bt.color), Qe.bufferData(Qe.ARRAY_BUFFER, Ye.colorArray, Qe.DYNAMIC_DRAW), et.enableAttribute(Xt.color), Qe.vertexAttribPointer(Xt.color, 3, Qe.FLOAT, !1, 0, 0)), et.disableUnusedAttributes(), Qe.drawArrays(Qe.TRIANGLES, 0, Ye.count), Ye.count = 0;
        }, this.renderBufferDirect = function(Ye, It, bt, Xt, sr, Vr) {
          var hr = sr.isMesh && sr.normalMatrix.determinant() < 0;
          et.setMaterial(Xt, hr);
          var Ar = Zc(Ye, It, Xt, sr), Ur = !1;
          ur.geometry === bt.id && ur.program === Ar.id && ur.wireframe === (Xt.wireframe === !0) || (ur.geometry = bt.id, ur.program = Ar.id, ur.wireframe = Xt.wireframe === !0, Ur = !0), sr.morphTargetInfluences && (er.update(sr, bt, Xt, Ar), Ur = !0);
          var vr, Br = bt.index, rn = bt.attributes.position, nn = 1;
          Xt.wireframe === !0 && (Br = Mt.getWireframeAttribute(bt), nn = 2);
          var Jr = qt;
          Br !== null && (vr = st.get(Br), (Jr = ir).setIndex(vr)), Ur && (function(Fo, Es, Oi) {
            if (Oi && Oi.isInstancedBufferGeometry & !ze.isWebGL2 && Ue.get("ANGLE_instanced_arrays") === null)
              return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            et.initAttributes();
            var fo = Oi.attributes, Ma = Es.getAttributes(), zo = Fo.defaultAttributeValues;
            for (var ra in Ma) {
              var ji = Ma[ra];
              if (ji >= 0) {
                var _i = fo[ra];
                if (_i !== void 0) {
                  var ys = _i.normalized, Cc = _i.itemSize, Na = st.get(_i);
                  if (Na === void 0)
                    continue;
                  var Ic = Na.buffer, Bs = Na.type, xc = Na.bytesPerElement;
                  if (_i.isInterleavedBufferAttribute) {
                    var Qi = _i.data, Go = Qi.stride, vs = _i.offset;
                    Qi && Qi.isInstancedInterleavedBuffer ? (et.enableAttributeAndDivisor(ji, Qi.meshPerAttribute), Oi.maxInstancedCount === void 0 && (Oi.maxInstancedCount = Qi.meshPerAttribute * Qi.count)) : et.enableAttribute(ji), Qe.bindBuffer(Qe.ARRAY_BUFFER, Ic), Qe.vertexAttribPointer(ji, Cc, Bs, ys, Go * xc, vs * xc);
                  } else
                    _i.isInstancedBufferAttribute ? (et.enableAttributeAndDivisor(ji, _i.meshPerAttribute), Oi.maxInstancedCount === void 0 && (Oi.maxInstancedCount = _i.meshPerAttribute * _i.count)) : et.enableAttribute(ji), Qe.bindBuffer(Qe.ARRAY_BUFFER, Ic), Qe.vertexAttribPointer(ji, Cc, Bs, ys, 0, 0);
                } else if (zo !== void 0) {
                  var Oo = zo[ra];
                  if (Oo !== void 0)
                    switch (Oo.length) {
                      case 2:
                        Qe.vertexAttrib2fv(ji, Oo);
                        break;
                      case 3:
                        Qe.vertexAttrib3fv(ji, Oo);
                        break;
                      case 4:
                        Qe.vertexAttrib4fv(ji, Oo);
                        break;
                      default:
                        Qe.vertexAttrib1fv(ji, Oo);
                    }
                }
              }
            }
            et.disableUnusedAttributes();
          }(Xt, Ar, bt), Br !== null && Qe.bindBuffer(Qe.ELEMENT_ARRAY_BUFFER, vr.buffer));
          var _r = 1 / 0;
          Br !== null ? _r = Br.count : rn !== void 0 && (_r = rn.count);
          var tn = bt.drawRange.start * nn, yn = bt.drawRange.count * nn, un = Vr !== null ? Vr.start * nn : 0, hn = Vr !== null ? Vr.count * nn : 1 / 0, Fn = Math.max(tn, un), li = Math.min(_r, tn + yn, un + hn) - 1, Gr = Math.max(0, li - Fn + 1);
          if (Gr !== 0) {
            if (sr.isMesh)
              if (Xt.wireframe === !0)
                et.setLineWidth(Xt.wireframeLinewidth * ta()), Jr.setMode(Qe.LINES);
              else
                switch (sr.drawMode) {
                  case Cn:
                    Jr.setMode(Qe.TRIANGLES);
                    break;
                  case Yr:
                    Jr.setMode(Qe.TRIANGLE_STRIP);
                    break;
                  case gn:
                    Jr.setMode(Qe.TRIANGLE_FAN);
                }
            else if (sr.isLine) {
              var Qr = Xt.linewidth;
              Qr === void 0 && (Qr = 1), et.setLineWidth(Qr * ta()), sr.isLineSegments ? Jr.setMode(Qe.LINES) : sr.isLineLoop ? Jr.setMode(Qe.LINE_LOOP) : Jr.setMode(Qe.LINE_STRIP);
            } else
              sr.isPoints ? Jr.setMode(Qe.POINTS) : sr.isSprite && Jr.setMode(Qe.TRIANGLES);
            bt && bt.isInstancedBufferGeometry ? bt.maxInstancedCount > 0 && Jr.renderInstances(bt, Fn, Gr) : Jr.render(Fn, Gr);
          }
        }, this.compile = function(Ye, It) {
          (Ne = jt.get(Ye, It)).init(), Ye.traverse(function(bt) {
            bt.isLight && (Ne.pushLight(bt), bt.castShadow && Ne.pushShadow(bt));
          }), Ne.setupLights(It), Ye.traverse(function(bt) {
            if (bt.material)
              if (Array.isArray(bt.material))
                for (var Xt = 0; Xt < bt.material.length; Xt++)
                  Ra(bt.material[Xt], Ye.fog, bt);
              else
                Ra(bt.material, Ye.fog, bt);
          });
        };
        var Fi = null, Gi = new Xc();
        function co(Ye, It, bt, Xt) {
          for (var sr = 0, Vr = Ye.length; sr < Vr; sr++) {
            var hr = Ye[sr], Ar = hr.object, Ur = hr.geometry, vr = Xt === void 0 ? hr.material : Xt, Br = hr.group;
            if (bt.isArrayCamera) {
              Nr = bt;
              for (var rn = bt.cameras, nn = 0, Jr = rn.length; nn < Jr; nn++) {
                var _r = rn[nn];
                if (Ar.layers.test(_r.layers)) {
                  if ("viewport" in _r)
                    et.viewport(An.copy(_r.viewport));
                  else {
                    var tn = _r.bounds, yn = tn.x * Xn, un = tn.y * kr, hn = tn.z * Xn, Fn = tn.w * kr;
                    et.viewport(An.set(yn, un, hn, Fn).multiplyScalar(On));
                  }
                  No(Ar, It, _r, Ur, vr, Br);
                }
              }
            } else
              Nr = null, No(Ar, It, bt, Ur, vr, Br);
          }
        }
        function No(Ye, It, bt, Xt, sr, Vr) {
          if (Ye.onBeforeRender(yr, It, bt, Xt, sr, Vr), Ne = jt.get(It, Nr || bt), Ye.modelViewMatrix.multiplyMatrices(bt.matrixWorldInverse, Ye.matrixWorld), Ye.normalMatrix.getNormalMatrix(Ye.modelViewMatrix), Ye.isImmediateRenderObject) {
            et.setMaterial(sr);
            var hr = Zc(bt, It.fog, sr, Ye);
            ur.geometry = null, ur.program = null, ur.wireframe = !1, function(Ar, Ur) {
              Ar.render(function(vr) {
                yr.renderBufferImmediate(vr, Ur);
              });
            }(Ye, hr);
          } else
            yr.renderBufferDirect(bt, It.fog, Xt, sr, Ye, Vr);
          Ye.onAfterRender(yr, It, bt, Xt, sr, Vr), Ne = jt.get(It, Nr || bt);
        }
        function Ra(Ye, It, bt) {
          var Xt = At.get(Ye), sr = Ne.state.lights, Vr = Ne.state.shadowsArray, hr = Xt.lightsHash, Ar = sr.state.hash, Ur = lt.getParameters(Ye, sr.state, Vr, It, wi.numPlanes, wi.numIntersection, bt), vr = lt.getProgramCode(Ye, Ur), Br = Xt.program, rn = !0;
          if (Br === void 0)
            Ye.addEventListener("dispose", oi);
          else if (Br.code !== vr)
            ki(Ye);
          else if (hr.stateID !== Ar.stateID || hr.directionalLength !== Ar.directionalLength || hr.pointLength !== Ar.pointLength || hr.spotLength !== Ar.spotLength || hr.rectAreaLength !== Ar.rectAreaLength || hr.hemiLength !== Ar.hemiLength || hr.shadowsLength !== Ar.shadowsLength)
            hr.stateID = Ar.stateID, hr.directionalLength = Ar.directionalLength, hr.pointLength = Ar.pointLength, hr.spotLength = Ar.spotLength, hr.rectAreaLength = Ar.rectAreaLength, hr.hemiLength = Ar.hemiLength, hr.shadowsLength = Ar.shadowsLength, rn = !1;
          else {
            if (Ur.shaderID !== void 0)
              return;
            rn = !1;
          }
          if (rn) {
            if (Ur.shaderID) {
              var nn = aa[Ur.shaderID];
              Xt.shader = { name: Ye.type, uniforms: Li.clone(nn.uniforms), vertexShader: nn.vertexShader, fragmentShader: nn.fragmentShader };
            } else
              Xt.shader = { name: Ye.type, uniforms: Ye.uniforms, vertexShader: Ye.vertexShader, fragmentShader: Ye.fragmentShader };
            Ye.onBeforeCompile(Xt.shader, yr), vr = lt.getProgramCode(Ye, Ur), Br = lt.acquireProgram(Ye, Xt.shader, Ur, vr), Xt.program = Br, Ye.program = Br;
          }
          var Jr = Br.getAttributes();
          if (Ye.morphTargets) {
            Ye.numSupportedMorphTargets = 0;
            for (var _r = 0; _r < yr.maxMorphTargets; _r++)
              Jr["morphTarget" + _r] >= 0 && Ye.numSupportedMorphTargets++;
          }
          if (Ye.morphNormals)
            for (Ye.numSupportedMorphNormals = 0, _r = 0; _r < yr.maxMorphNormals; _r++)
              Jr["morphNormal" + _r] >= 0 && Ye.numSupportedMorphNormals++;
          var tn = Xt.shader.uniforms;
          (Ye.isShaderMaterial || Ye.isRawShaderMaterial) && Ye.clipping !== !0 || (Xt.numClippingPlanes = wi.numPlanes, Xt.numIntersection = wi.numIntersection, tn.clippingPlanes = wi.uniform), Xt.fog = It, hr === void 0 && (Xt.lightsHash = hr = {}), hr.stateID = Ar.stateID, hr.directionalLength = Ar.directionalLength, hr.pointLength = Ar.pointLength, hr.spotLength = Ar.spotLength, hr.rectAreaLength = Ar.rectAreaLength, hr.hemiLength = Ar.hemiLength, hr.shadowsLength = Ar.shadowsLength, Ye.lights && (tn.ambientLightColor.value = sr.state.ambient, tn.directionalLights.value = sr.state.directional, tn.spotLights.value = sr.state.spot, tn.rectAreaLights.value = sr.state.rectArea, tn.pointLights.value = sr.state.point, tn.hemisphereLights.value = sr.state.hemi, tn.directionalShadowMap.value = sr.state.directionalShadowMap, tn.directionalShadowMatrix.value = sr.state.directionalShadowMatrix, tn.spotShadowMap.value = sr.state.spotShadowMap, tn.spotShadowMatrix.value = sr.state.spotShadowMatrix, tn.pointShadowMap.value = sr.state.pointShadowMap, tn.pointShadowMatrix.value = sr.state.pointShadowMatrix);
          var yn = Xt.program.getUniforms(), un = Wo.seqWithValue(yn.seq, tn);
          Xt.uniformsList = un;
        }
        function Zc(Ye, It, bt, Xt) {
          Ii = 0;
          var sr = At.get(bt), Vr = Ne.state.lights, hr = sr.lightsHash, Ar = Vr.state.hash;
          if (wo && (bo || Ye !== zr)) {
            var Ur = Ye === zr && bt.id === br;
            wi.setState(bt.clippingPlanes, bt.clipIntersection, bt.clipShadows, Ye, sr, Ur);
          }
          bt.needsUpdate === !1 && (sr.program === void 0 || bt.fog && sr.fog !== It ? bt.needsUpdate = !0 : (!bt.lights || hr.stateID === Ar.stateID && hr.directionalLength === Ar.directionalLength && hr.pointLength === Ar.pointLength && hr.spotLength === Ar.spotLength && hr.rectAreaLength === Ar.rectAreaLength && hr.hemiLength === Ar.hemiLength && hr.shadowsLength === Ar.shadowsLength) && (sr.numClippingPlanes === void 0 || sr.numClippingPlanes === wi.numPlanes && sr.numIntersection === wi.numIntersection) || (bt.needsUpdate = !0)), bt.needsUpdate && (Ra(bt, It, Xt), bt.needsUpdate = !1);
          var vr = !1, Br = !1, rn = !1, nn = sr.program, Jr = nn.getUniforms(), _r = sr.shader.uniforms;
          if (et.useProgram(nn.program) && (vr = !0, Br = !0, rn = !0), bt.id !== br && (br = bt.id, Br = !0), vr || Ye !== zr) {
            if (Jr.setValue(Qe, "projectionMatrix", Ye.projectionMatrix), ze.logarithmicDepthBuffer && Jr.setValue(Qe, "logDepthBufFC", 2 / (Math.log(Ye.far + 1) / Math.LN2)), zr !== (Nr || Ye) && (zr = Nr || Ye, Br = !0, rn = !0), bt.isShaderMaterial || bt.isMeshPhongMaterial || bt.isMeshStandardMaterial || bt.envMap) {
              var tn = Jr.map.cameraPosition;
              tn !== void 0 && tn.setValue(Qe, bi.setFromMatrixPosition(Ye.matrixWorld));
            }
            (bt.isMeshPhongMaterial || bt.isMeshLambertMaterial || bt.isMeshBasicMaterial || bt.isMeshStandardMaterial || bt.isShaderMaterial || bt.skinning) && Jr.setValue(Qe, "viewMatrix", Ye.matrixWorldInverse);
          }
          if (bt.skinning) {
            Jr.setOptional(Qe, Xt, "bindMatrix"), Jr.setOptional(Qe, Xt, "bindMatrixInverse");
            var yn = Xt.skeleton;
            if (yn) {
              var un = yn.bones;
              if (ze.floatVertexTextures) {
                if (yn.boneTexture === void 0) {
                  var hn = Math.sqrt(4 * un.length);
                  hn = bn.ceilPowerOfTwo(hn), hn = Math.max(hn, 4);
                  var Fn = new Float32Array(hn * hn * 4);
                  Fn.set(yn.boneMatrices);
                  var li = new oa(Fn, hn, hn, rr, Hn);
                  li.needsUpdate = !0, yn.boneMatrices = Fn, yn.boneTexture = li, yn.boneTextureSize = hn;
                }
                Jr.setValue(Qe, "boneTexture", yn.boneTexture), Jr.setValue(Qe, "boneTextureSize", yn.boneTextureSize);
              } else
                Jr.setOptional(Qe, yn, "boneMatrices");
            }
          }
          return Br && (Jr.setValue(Qe, "toneMappingExposure", yr.toneMappingExposure), Jr.setValue(Qe, "toneMappingWhitePoint", yr.toneMappingWhitePoint), bt.lights && function(Gr, Qr) {
            Gr.ambientLightColor.needsUpdate = Qr, Gr.directionalLights.needsUpdate = Qr, Gr.pointLights.needsUpdate = Qr, Gr.spotLights.needsUpdate = Qr, Gr.rectAreaLights.needsUpdate = Qr, Gr.hemisphereLights.needsUpdate = Qr;
          }(_r, rn), It && bt.fog && function(Gr, Qr) {
            Gr.fogColor.value = Qr.color, Qr.isFog ? (Gr.fogNear.value = Qr.near, Gr.fogFar.value = Qr.far) : Qr.isFogExp2 && (Gr.fogDensity.value = Qr.density);
          }(_r, It), bt.isMeshBasicMaterial ? ko(_r, bt) : bt.isMeshLambertMaterial ? (ko(_r, bt), function(Gr, Qr) {
            Qr.emissiveMap && (Gr.emissiveMap.value = Qr.emissiveMap);
          }(_r, bt)) : bt.isMeshPhongMaterial ? (ko(_r, bt), bt.isMeshToonMaterial ? function(Gr, Qr) {
            Bc(Gr, Qr), Qr.gradientMap && (Gr.gradientMap.value = Qr.gradientMap);
          }(_r, bt) : Bc(_r, bt)) : bt.isMeshStandardMaterial ? (ko(_r, bt), bt.isMeshPhysicalMaterial ? function(Gr, Qr) {
            vc(Gr, Qr), Gr.reflectivity.value = Qr.reflectivity, Gr.clearCoat.value = Qr.clearCoat, Gr.clearCoatRoughness.value = Qr.clearCoatRoughness;
          }(_r, bt) : vc(_r, bt)) : bt.isMeshDepthMaterial ? (ko(_r, bt), function(Gr, Qr) {
            Qr.displacementMap && (Gr.displacementMap.value = Qr.displacementMap, Gr.displacementScale.value = Qr.displacementScale, Gr.displacementBias.value = Qr.displacementBias);
          }(_r, bt)) : bt.isMeshDistanceMaterial ? (ko(_r, bt), function(Gr, Qr) {
            Qr.displacementMap && (Gr.displacementMap.value = Qr.displacementMap, Gr.displacementScale.value = Qr.displacementScale, Gr.displacementBias.value = Qr.displacementBias), Gr.referencePosition.value.copy(Qr.referencePosition), Gr.nearDistance.value = Qr.nearDistance, Gr.farDistance.value = Qr.farDistance;
          }(_r, bt)) : bt.isMeshNormalMaterial ? (ko(_r, bt), function(Gr, Qr) {
            Qr.bumpMap && (Gr.bumpMap.value = Qr.bumpMap, Gr.bumpScale.value = Qr.bumpScale, Qr.side === Se && (Gr.bumpScale.value *= -1)), Qr.normalMap && (Gr.normalMap.value = Qr.normalMap, Gr.normalScale.value.copy(Qr.normalScale), Qr.side === Se && Gr.normalScale.value.negate()), Qr.displacementMap && (Gr.displacementMap.value = Qr.displacementMap, Gr.displacementScale.value = Qr.displacementScale, Gr.displacementBias.value = Qr.displacementBias);
          }(_r, bt)) : bt.isLineBasicMaterial ? (function(Gr, Qr) {
            Gr.diffuse.value = Qr.color, Gr.opacity.value = Qr.opacity;
          }(_r, bt), bt.isLineDashedMaterial && function(Gr, Qr) {
            Gr.dashSize.value = Qr.dashSize, Gr.totalSize.value = Qr.dashSize + Qr.gapSize, Gr.scale.value = Qr.scale;
          }(_r, bt)) : bt.isPointsMaterial ? function(Gr, Qr) {
            Gr.diffuse.value = Qr.color, Gr.opacity.value = Qr.opacity, Gr.size.value = Qr.size * On, Gr.scale.value = 0.5 * kr, Gr.map.value = Qr.map, Qr.map !== null && (Qr.map.matrixAutoUpdate === !0 && Qr.map.updateMatrix(), Gr.uvTransform.value.copy(Qr.map.matrix));
          }(_r, bt) : bt.isSpriteMaterial ? function(Gr, Qr) {
            Gr.diffuse.value = Qr.color, Gr.opacity.value = Qr.opacity, Gr.rotation.value = Qr.rotation, Gr.map.value = Qr.map, Qr.map !== null && (Qr.map.matrixAutoUpdate === !0 && Qr.map.updateMatrix(), Gr.uvTransform.value.copy(Qr.map.matrix));
          }(_r, bt) : bt.isShadowMaterial && (_r.color.value = bt.color, _r.opacity.value = bt.opacity), _r.ltc_1 !== void 0 && (_r.ltc_1.value = cn.LTC_1), _r.ltc_2 !== void 0 && (_r.ltc_2.value = cn.LTC_2), Wo.upload(Qe, sr.uniformsList, _r, yr)), bt.isShaderMaterial && bt.uniformsNeedUpdate === !0 && (Wo.upload(Qe, sr.uniformsList, _r, yr), bt.uniformsNeedUpdate = !1), bt.isSpriteMaterial && Jr.setValue(Qe, "center", Xt.center), Jr.setValue(Qe, "modelViewMatrix", Xt.modelViewMatrix), Jr.setValue(Qe, "normalMatrix", Xt.normalMatrix), Jr.setValue(Qe, "modelMatrix", Xt.matrixWorld), nn;
        }
        function ko(Ye, It) {
          var bt;
          Ye.opacity.value = It.opacity, It.color && (Ye.diffuse.value = It.color), It.emissive && Ye.emissive.value.copy(It.emissive).multiplyScalar(It.emissiveIntensity), It.map && (Ye.map.value = It.map), It.alphaMap && (Ye.alphaMap.value = It.alphaMap), It.specularMap && (Ye.specularMap.value = It.specularMap), It.envMap && (Ye.envMap.value = It.envMap, Ye.flipEnvMap.value = It.envMap && It.envMap.isCubeTexture ? -1 : 1, Ye.reflectivity.value = It.reflectivity, Ye.refractionRatio.value = It.refractionRatio, Ye.maxMipLevel.value = At.get(It.envMap).__maxMipLevel), It.lightMap && (Ye.lightMap.value = It.lightMap, Ye.lightMapIntensity.value = It.lightMapIntensity), It.aoMap && (Ye.aoMap.value = It.aoMap, Ye.aoMapIntensity.value = It.aoMapIntensity), It.map ? bt = It.map : It.specularMap ? bt = It.specularMap : It.displacementMap ? bt = It.displacementMap : It.normalMap ? bt = It.normalMap : It.bumpMap ? bt = It.bumpMap : It.roughnessMap ? bt = It.roughnessMap : It.metalnessMap ? bt = It.metalnessMap : It.alphaMap ? bt = It.alphaMap : It.emissiveMap && (bt = It.emissiveMap), bt !== void 0 && (bt.isWebGLRenderTarget && (bt = bt.texture), bt.matrixAutoUpdate === !0 && bt.updateMatrix(), Ye.uvTransform.value.copy(bt.matrix));
        }
        function Bc(Ye, It) {
          Ye.specular.value = It.specular, Ye.shininess.value = Math.max(It.shininess, 1e-4), It.emissiveMap && (Ye.emissiveMap.value = It.emissiveMap), It.bumpMap && (Ye.bumpMap.value = It.bumpMap, Ye.bumpScale.value = It.bumpScale, It.side === Se && (Ye.bumpScale.value *= -1)), It.normalMap && (Ye.normalMap.value = It.normalMap, Ye.normalScale.value.copy(It.normalScale), It.side === Se && Ye.normalScale.value.negate()), It.displacementMap && (Ye.displacementMap.value = It.displacementMap, Ye.displacementScale.value = It.displacementScale, Ye.displacementBias.value = It.displacementBias);
        }
        function vc(Ye, It) {
          Ye.roughness.value = It.roughness, Ye.metalness.value = It.metalness, It.roughnessMap && (Ye.roughnessMap.value = It.roughnessMap), It.metalnessMap && (Ye.metalnessMap.value = It.metalnessMap), It.emissiveMap && (Ye.emissiveMap.value = It.emissiveMap), It.bumpMap && (Ye.bumpMap.value = It.bumpMap, Ye.bumpScale.value = It.bumpScale, It.side === Se && (Ye.bumpScale.value *= -1)), It.normalMap && (Ye.normalMap.value = It.normalMap, Ye.normalScale.value.copy(It.normalScale), It.side === Se && Ye.normalScale.value.negate()), It.displacementMap && (Ye.displacementMap.value = It.displacementMap, Ye.displacementScale.value = It.displacementScale, Ye.displacementBias.value = It.displacementBias), It.envMap && (Ye.envMapIntensity.value = It.envMapIntensity);
        }
        Gi.setAnimationLoop(function(Ye) {
          kn.isPresenting() || Fi && Fi(Ye);
        }), typeof window < "u" && Gi.setContext(window), this.setAnimationLoop = function(Ye) {
          Fi = Ye, kn.setAnimationLoop(Ye), Gi.start();
        }, this.render = function(Ye, It, bt, Xt) {
          if (It && It.isCamera) {
            if (!pr) {
              ur.geometry = null, ur.program = null, ur.wireframe = !1, br = -1, zr = null, Ye.autoUpdate === !0 && Ye.updateMatrixWorld(), It.parent === null && It.updateMatrixWorld(), kn.enabled && (It = kn.getCamera(It)), (Ne = jt.get(Ye, It)).init(), Ye.onBeforeRender(yr, Ye, It, bt), Ni.multiplyMatrices(It.projectionMatrix, It.matrixWorldInverse), Ji.setFromMatrix(Ni), bo = this.localClippingEnabled, wo = wi.init(this.clippingPlanes, bo, It), (Me = wt.get(Ye, It)).init(), function Ur(vr, Br, rn) {
                if (vr.visible !== !1) {
                  var nn = vr.layers.test(Br.layers);
                  if (nn) {
                    if (vr.isLight)
                      Ne.pushLight(vr), vr.castShadow && Ne.pushShadow(vr);
                    else if (vr.isSprite) {
                      if (!vr.frustumCulled || Ji.intersectsSprite(vr)) {
                        rn && bi.setFromMatrixPosition(vr.matrixWorld).applyMatrix4(Ni);
                        var Jr = Ft.update(vr), _r = vr.material;
                        Me.push(vr, Jr, _r, bi.z, null);
                      }
                    } else if (vr.isImmediateRenderObject)
                      rn && bi.setFromMatrixPosition(vr.matrixWorld).applyMatrix4(Ni), Me.push(vr, null, vr.material, bi.z, null);
                    else if ((vr.isMesh || vr.isLine || vr.isPoints) && (vr.isSkinnedMesh && vr.skeleton.update(), !vr.frustumCulled || Ji.intersectsObject(vr))) {
                      rn && bi.setFromMatrixPosition(vr.matrixWorld).applyMatrix4(Ni);
                      var Jr = Ft.update(vr), _r = vr.material;
                      if (Array.isArray(_r))
                        for (var tn = Jr.groups, yn = 0, un = tn.length; yn < un; yn++) {
                          var hn = tn[yn], Fn = _r[hn.materialIndex];
                          Fn && Fn.visible && Me.push(vr, Jr, Fn, bi.z, hn);
                        }
                      else
                        _r.visible && Me.push(vr, Jr, _r, bi.z, null);
                    }
                  }
                  for (var li = vr.children, yn = 0, un = li.length; yn < un; yn++)
                    Ur(li[yn], Br, rn);
                }
              }(Ye, It, yr.sortObjects), yr.sortObjects === !0 && Me.sort(), wo && wi.beginShadows();
              var sr = Ne.state.shadowsArray;
              Jn.render(sr, Ye, It), Ne.setupLights(It), wo && wi.endShadows(), this.info.autoReset && this.info.reset(), bt === void 0 && (bt = null), this.setRenderTarget(bt), Ot.render(Me, Ye, It, Xt);
              var Vr = Me.opaque, hr = Me.transparent;
              if (Ye.overrideMaterial) {
                var Ar = Ye.overrideMaterial;
                Vr.length && co(Vr, Ye, It, Ar), hr.length && co(hr, Ye, It, Ar);
              } else
                Vr.length && co(Vr, Ye, It), hr.length && co(hr, Ye, It);
              bt && Et.updateRenderTargetMipmap(bt), et.buffers.depth.setTest(!0), et.buffers.depth.setMask(!0), et.buffers.color.setMask(!0), et.setPolygonOffset(!1), Ye.onAfterRender(yr, Ye, It), kn.enabled && kn.submitFrame(), Me = null, Ne = null;
            }
          } else
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        }, this.allocTextureUnit = function() {
          var Ye = Ii;
          return Ye >= ze.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + Ye + " texture units while this GPU supports only " + ze.maxTextures), Ii += 1, Ye;
        }, this.setTexture2D = function() {
          var Ye = !1;
          return function(It, bt) {
            It && It.isWebGLRenderTarget && (Ye || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."), Ye = !0), It = It.texture), Et.setTexture2D(It, bt);
          };
        }(), this.setTexture = function() {
          var Ye = !1;
          return function(It, bt) {
            Ye || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."), Ye = !0), Et.setTexture2D(It, bt);
          };
        }(), this.setTextureCube = function() {
          var Ye = !1;
          return function(It, bt) {
            It && It.isWebGLRenderTargetCube && (Ye || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."), Ye = !0), It = It.texture), It && It.isCubeTexture || Array.isArray(It.image) && It.image.length === 6 ? Et.setTextureCube(It, bt) : Et.setTextureCubeDynamic(It, bt);
          };
        }(), this.setFramebuffer = function(Ye) {
          Fr = Ye;
        }, this.getRenderTarget = function() {
          return Rr;
        }, this.setRenderTarget = function(Ye) {
          Rr = Ye, Ye && At.get(Ye).__webglFramebuffer === void 0 && Et.setupRenderTarget(Ye);
          var It = Fr, bt = !1;
          if (Ye) {
            var Xt = At.get(Ye).__webglFramebuffer;
            Ye.isWebGLRenderTargetCube ? (It = Xt[Ye.activeCubeFace], bt = !0) : It = Xt, An.copy(Ye.viewport), En.copy(Ye.scissor), ni = Ye.scissorTest;
          } else
            An.copy(hi).multiplyScalar(On), En.copy(Di).multiplyScalar(On), ni = Bi;
          if (fr !== It && (Qe.bindFramebuffer(Qe.FRAMEBUFFER, It), fr = It), et.viewport(An), et.scissor(En), et.setScissorTest(ni), bt) {
            var sr = At.get(Ye.texture);
            Qe.framebufferTexture2D(Qe.FRAMEBUFFER, Qe.COLOR_ATTACHMENT0, Qe.TEXTURE_CUBE_MAP_POSITIVE_X + Ye.activeCubeFace, sr.__webglTexture, Ye.activeMipMapLevel);
          }
        }, this.readRenderTargetPixels = function(Ye, It, bt, Xt, sr, Vr) {
          if (Ye && Ye.isWebGLRenderTarget) {
            var hr = At.get(Ye).__webglFramebuffer;
            if (hr) {
              var Ar = !1;
              hr !== fr && (Qe.bindFramebuffer(Qe.FRAMEBUFFER, hr), Ar = !0);
              try {
                var Ur = Ye.texture, vr = Ur.format, Br = Ur.type;
                if (vr !== rr && dr.convert(vr) !== Qe.getParameter(Qe.IMPLEMENTATION_COLOR_READ_FORMAT))
                  return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                if (!(Br === Pn || dr.convert(Br) === Qe.getParameter(Qe.IMPLEMENTATION_COLOR_READ_TYPE) || Br === Hn && (ze.isWebGL2 || Ue.get("OES_texture_float") || Ue.get("WEBGL_color_buffer_float")) || Br === Kn && (ze.isWebGL2 ? Ue.get("EXT_color_buffer_float") : Ue.get("EXT_color_buffer_half_float"))))
                  return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                Qe.checkFramebufferStatus(Qe.FRAMEBUFFER) === Qe.FRAMEBUFFER_COMPLETE ? It >= 0 && It <= Ye.width - Xt && bt >= 0 && bt <= Ye.height - sr && Qe.readPixels(It, bt, Xt, sr, dr.convert(vr), dr.convert(Br), Vr) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
              } finally {
                Ar && Qe.bindFramebuffer(Qe.FRAMEBUFFER, fr);
              }
            }
          } else
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
        }, this.copyFramebufferToTexture = function(Ye, It, bt) {
          var Xt = It.image.width, sr = It.image.height, Vr = dr.convert(It.format);
          this.setTexture2D(It, 0), Qe.copyTexImage2D(Qe.TEXTURE_2D, bt || 0, Vr, Ye.x, Ye.y, Xt, sr, 0);
        }, this.copyTextureToTexture = function(Ye, It, bt, Xt) {
          var sr = It.image.width, Vr = It.image.height, hr = dr.convert(bt.format), Ar = dr.convert(bt.type);
          this.setTexture2D(bt, 0), It.isDataTexture ? Qe.texSubImage2D(Qe.TEXTURE_2D, Xt || 0, Ye.x, Ye.y, sr, Vr, hr, Ar, It.image.data) : Qe.texSubImage2D(Qe.TEXTURE_2D, Xt || 0, Ye.x, Ye.y, hr, Ar, It.image);
        };
      }
      function $a(Z, te) {
        this.name = "", this.color = new sn(Z), this.density = te !== void 0 ? te : 25e-5;
      }
      function ja(Z, te, oe) {
        this.name = "", this.color = new sn(Z), this.near = te !== void 0 ? te : 1, this.far = oe !== void 0 ? oe : 1e3;
      }
      function _c() {
        Dr.call(this), this.type = "Scene", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0;
      }
      function ha(Z, te) {
        this.array = Z, this.stride = te, this.count = Z !== void 0 ? Z.length / te : 0, this.dynamic = !1, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function Ns(Z, te, oe, se) {
        this.data = Z, this.itemSize = te, this.offset = oe, this.normalized = se === !0;
      }
      function Xo(Z) {
        Qn.call(this), this.type = "SpriteMaterial", this.color = new sn(16777215), this.map = null, this.rotation = 0, this.lights = !1, this.transparent = !0, this.setValues(Z);
      }
      function ks(Z) {
        if (Dr.call(this), this.type = "Sprite", qa === void 0) {
          qa = new Wr();
          var te = new ha(new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]), 5);
          qa.setIndex([0, 1, 2, 0, 2, 3]), qa.addAttribute("position", new Ns(te, 3, 0, !1)), qa.addAttribute("uv", new Ns(te, 2, 3, !1));
        }
        this.geometry = qa, this.material = Z !== void 0 ? Z : new Xo(), this.center = new xr(0.5, 0.5);
      }
      function Fs() {
        Dr.call(this), this.type = "LOD", Object.defineProperties(this, { levels: { enumerable: !0, value: [] } });
      }
      function Gs(Z, te) {
        if (Z = Z || [], this.bones = Z.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), te === void 0)
          this.calculateInverses();
        else if (this.bones.length === te.length)
          this.boneInverses = te.slice(0);
        else {
          console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
          for (var oe = 0, se = this.bones.length; oe < se; oe++)
            this.boneInverses.push(new pn());
        }
      }
      function Qc() {
        Dr.call(this), this.type = "Bone";
      }
      function Sc(Z, te) {
        Ki.call(this, Z, te), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new pn(), this.bindMatrixInverse = new pn();
        var oe = new Gs(this.initBones());
        this.bind(oe, this.matrixWorld), this.normalizeSkinWeights();
      }
      function ei(Z) {
        Qn.call(this), this.type = "LineBasicMaterial", this.color = new sn(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.lights = !1, this.setValues(Z);
      }
      function Zi(Z, te, oe) {
        oe === 1 && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), Dr.call(this), this.type = "Line", this.geometry = Z !== void 0 ? Z : new Wr(), this.material = te !== void 0 ? te : new ei({ color: 16777215 * Math.random() });
      }
      function ri(Z, te) {
        Zi.call(this, Z, te), this.type = "LineSegments";
      }
      function Tc(Z, te) {
        Zi.call(this, Z, te), this.type = "LineLoop";
      }
      function mo(Z) {
        Qn.call(this), this.type = "PointsMaterial", this.color = new sn(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.morphTargets = !1, this.lights = !1, this.setValues(Z);
      }
      function Ya(Z, te) {
        Dr.call(this), this.type = "Points", this.geometry = Z !== void 0 ? Z : new Wr(), this.material = te !== void 0 ? te : new mo({ color: 16777215 * Math.random() });
      }
      function oA(Z, te, oe, se, Ae, ue, he, pe, ve) {
        ii.call(this, Z, te, oe, se, Ae, ue, he, pe, ve), this.generateMipmaps = !1;
      }
      function Va(Z, te, oe, se, Ae, ue, he, pe, ve, xe, Me, Ne) {
        ii.call(this, null, ue, he, pe, ve, xe, se, Ae, Me, Ne), this.image = { width: te, height: oe }, this.mipmaps = Z, this.flipY = !1, this.generateMipmaps = !1;
      }
      function Os(Z, te, oe, se, Ae, ue, he, pe, ve) {
        ii.call(this, Z, te, oe, se, Ae, ue, he, pe, ve), this.needsUpdate = !0;
      }
      function Ps(Z, te, oe, se, Ae, ue, he, pe, ve, xe) {
        if ((xe = xe !== void 0 ? xe : In) !== In && xe !== vn)
          throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        oe === void 0 && xe === In && (oe = pi), oe === void 0 && xe === vn && (oe = mi), ii.call(this, null, se, Ae, ue, he, pe, xe, oe, ve), this.image = { width: Z, height: te }, this.magFilter = he !== void 0 ? he : wr, this.minFilter = pe !== void 0 ? pe : wr, this.flipY = !1, this.generateMipmaps = !1;
      }
      function La(Z) {
        Wr.call(this), this.type = "WireframeGeometry";
        var te, oe, se, Ae, ue, he, pe, ve, xe, Me, Ne = [], Qe = [0, 0], Ue = {}, ze = ["a", "b", "c"];
        if (Z && Z.isGeometry) {
          var et = Z.faces;
          for (te = 0, se = et.length; te < se; te++) {
            var nt = et[te];
            for (oe = 0; oe < 3; oe++)
              pe = nt[ze[oe]], ve = nt[ze[(oe + 1) % 3]], Qe[0] = Math.min(pe, ve), Qe[1] = Math.max(pe, ve), Ue[xe = Qe[0] + "," + Qe[1]] === void 0 && (Ue[xe] = { index1: Qe[0], index2: Qe[1] });
          }
          for (xe in Ue)
            he = Ue[xe], Me = Z.vertices[he.index1], Ne.push(Me.x, Me.y, Me.z), Me = Z.vertices[he.index2], Ne.push(Me.x, Me.y, Me.z);
        } else if (Z && Z.isBufferGeometry) {
          var At, Et, st, Mt, Ft, lt, wt;
          if (Me = new mt(), Z.index !== null) {
            for (At = Z.attributes.position, Et = Z.index, (st = Z.groups).length === 0 && (st = [{ start: 0, count: Et.count, materialIndex: 0 }]), Ae = 0, ue = st.length; Ae < ue; ++Ae)
              for (te = Ft = (Mt = st[Ae]).start, se = Ft + Mt.count; te < se; te += 3)
                for (oe = 0; oe < 3; oe++)
                  pe = Et.getX(te + oe), ve = Et.getX(te + (oe + 1) % 3), Qe[0] = Math.min(pe, ve), Qe[1] = Math.max(pe, ve), Ue[xe = Qe[0] + "," + Qe[1]] === void 0 && (Ue[xe] = { index1: Qe[0], index2: Qe[1] });
            for (xe in Ue)
              he = Ue[xe], Me.fromBufferAttribute(At, he.index1), Ne.push(Me.x, Me.y, Me.z), Me.fromBufferAttribute(At, he.index2), Ne.push(Me.x, Me.y, Me.z);
          } else
            for (te = 0, se = (At = Z.attributes.position).count / 3; te < se; te++)
              for (oe = 0; oe < 3; oe++)
                lt = 3 * te + oe, Me.fromBufferAttribute(At, lt), Ne.push(Me.x, Me.y, Me.z), wt = 3 * te + (oe + 1) % 3, Me.fromBufferAttribute(At, wt), Ne.push(Me.x, Me.y, Me.z);
        }
        this.addAttribute("position", new Pr(Ne, 3));
      }
      function Us(Z, te, oe) {
        mn.call(this), this.type = "ParametricGeometry", this.parameters = { func: Z, slices: te, stacks: oe }, this.fromBufferGeometry(new za(Z, te, oe)), this.mergeVertices();
      }
      function za(Z, te, oe) {
        Wr.call(this), this.type = "ParametricBufferGeometry", this.parameters = { func: Z, slices: te, stacks: oe };
        var se, Ae, ue = [], he = [], pe = [], ve = [], xe = new mt(), Me = new mt(), Ne = new mt(), Qe = new mt(), Ue = new mt();
        Z.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        var ze = te + 1;
        for (se = 0; se <= oe; se++) {
          var et = se / oe;
          for (Ae = 0; Ae <= te; Ae++) {
            var nt = Ae / te;
            Z(nt, et, Me), he.push(Me.x, Me.y, Me.z), nt - 1e-5 >= 0 ? (Z(nt - 1e-5, et, Ne), Qe.subVectors(Me, Ne)) : (Z(nt + 1e-5, et, Ne), Qe.subVectors(Ne, Me)), et - 1e-5 >= 0 ? (Z(nt, et - 1e-5, Ne), Ue.subVectors(Me, Ne)) : (Z(nt, et + 1e-5, Ne), Ue.subVectors(Ne, Me)), xe.crossVectors(Qe, Ue).normalize(), pe.push(xe.x, xe.y, xe.z), ve.push(nt, et);
          }
        }
        for (se = 0; se < oe; se++)
          for (Ae = 0; Ae < te; Ae++) {
            var At = se * ze + Ae, Et = se * ze + Ae + 1, st = (se + 1) * ze + Ae + 1, Mt = (se + 1) * ze + Ae;
            ue.push(At, Et, Mt), ue.push(Et, st, Mt);
          }
        this.setIndex(ue), this.addAttribute("position", new Pr(he, 3)), this.addAttribute("normal", new Pr(pe, 3)), this.addAttribute("uv", new Pr(ve, 2));
      }
      function Hs(Z, te, oe, se) {
        mn.call(this), this.type = "PolyhedronGeometry", this.parameters = { vertices: Z, indices: te, radius: oe, detail: se }, this.fromBufferGeometry(new Xi(Z, te, oe, se)), this.mergeVertices();
      }
      function Xi(Z, te, oe, se) {
        Wr.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = { vertices: Z, indices: te, radius: oe, detail: se }, oe = oe || 1;
        var Ae = [], ue = [];
        function he(Qe, Ue, ze, et) {
          var nt, At, Et = Math.pow(2, et), st = [];
          for (nt = 0; nt <= Et; nt++) {
            st[nt] = [];
            var Mt = Qe.clone().lerp(ze, nt / Et), Ft = Ue.clone().lerp(ze, nt / Et), lt = Et - nt;
            for (At = 0; At <= lt; At++)
              st[nt][At] = At === 0 && nt === Et ? Mt : Mt.clone().lerp(Ft, At / lt);
          }
          for (nt = 0; nt < Et; nt++)
            for (At = 0; At < 2 * (Et - nt) - 1; At++) {
              var wt = Math.floor(At / 2);
              At % 2 == 0 ? (pe(st[nt][wt + 1]), pe(st[nt + 1][wt]), pe(st[nt][wt])) : (pe(st[nt][wt + 1]), pe(st[nt + 1][wt + 1]), pe(st[nt + 1][wt]));
            }
        }
        function pe(Qe) {
          Ae.push(Qe.x, Qe.y, Qe.z);
        }
        function ve(Qe, Ue) {
          var ze = 3 * Qe;
          Ue.x = Z[ze + 0], Ue.y = Z[ze + 1], Ue.z = Z[ze + 2];
        }
        function xe(Qe, Ue, ze, et) {
          et < 0 && Qe.x === 1 && (ue[Ue] = Qe.x - 1), ze.x === 0 && ze.z === 0 && (ue[Ue] = et / 2 / Math.PI + 0.5);
        }
        function Me(Qe) {
          return Math.atan2(Qe.z, -Qe.x);
        }
        function Ne(Qe) {
          return Math.atan2(-Qe.y, Math.sqrt(Qe.x * Qe.x + Qe.z * Qe.z));
        }
        (function(Qe) {
          for (var Ue = new mt(), ze = new mt(), et = new mt(), nt = 0; nt < te.length; nt += 3)
            ve(te[nt + 0], Ue), ve(te[nt + 1], ze), ve(te[nt + 2], et), he(Ue, ze, et, Qe);
        })(se = se || 0), function(Qe) {
          for (var Ue = new mt(), ze = 0; ze < Ae.length; ze += 3)
            Ue.x = Ae[ze + 0], Ue.y = Ae[ze + 1], Ue.z = Ae[ze + 2], Ue.normalize().multiplyScalar(Qe), Ae[ze + 0] = Ue.x, Ae[ze + 1] = Ue.y, Ae[ze + 2] = Ue.z;
        }(oe), function() {
          for (var Qe = new mt(), Ue = 0; Ue < Ae.length; Ue += 3) {
            Qe.x = Ae[Ue + 0], Qe.y = Ae[Ue + 1], Qe.z = Ae[Ue + 2];
            var ze = Me(Qe) / 2 / Math.PI + 0.5, et = Ne(Qe) / Math.PI + 0.5;
            ue.push(ze, 1 - et);
          }
          (function() {
            for (var nt = new mt(), At = new mt(), Et = new mt(), st = new mt(), Mt = new xr(), Ft = new xr(), lt = new xr(), wt = 0, jt = 0; wt < Ae.length; wt += 9, jt += 6) {
              nt.set(Ae[wt + 0], Ae[wt + 1], Ae[wt + 2]), At.set(Ae[wt + 3], Ae[wt + 4], Ae[wt + 5]), Et.set(Ae[wt + 6], Ae[wt + 7], Ae[wt + 8]), Mt.set(ue[jt + 0], ue[jt + 1]), Ft.set(ue[jt + 2], ue[jt + 3]), lt.set(ue[jt + 4], ue[jt + 5]), st.copy(nt).add(At).add(Et).divideScalar(3);
              var Ot = Me(st);
              xe(Mt, jt + 0, nt, Ot), xe(Ft, jt + 2, At, Ot), xe(lt, jt + 4, Et, Ot);
            }
          })(), function() {
            for (var nt = 0; nt < ue.length; nt += 6) {
              var At = ue[nt + 0], Et = ue[nt + 2], st = ue[nt + 4], Mt = Math.max(At, Et, st), Ft = Math.min(At, Et, st);
              Mt > 0.9 && Ft < 0.1 && (At < 0.2 && (ue[nt + 0] += 1), Et < 0.2 && (ue[nt + 2] += 1), st < 0.2 && (ue[nt + 4] += 1));
            }
          }();
        }(), this.addAttribute("position", new Pr(Ae, 3)), this.addAttribute("normal", new Pr(Ae.slice(), 3)), this.addAttribute("uv", new Pr(ue, 2)), se === 0 ? this.computeVertexNormals() : this.normalizeNormals();
      }
      function qs(Z, te) {
        mn.call(this), this.type = "TetrahedronGeometry", this.parameters = { radius: Z, detail: te }, this.fromBufferGeometry(new Ja(Z, te)), this.mergeVertices();
      }
      function Ja(Z, te) {
        Xi.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], Z, te), this.type = "TetrahedronBufferGeometry", this.parameters = { radius: Z, detail: te };
      }
      function Ds(Z, te) {
        mn.call(this), this.type = "OctahedronGeometry", this.parameters = { radius: Z, detail: te }, this.fromBufferGeometry(new fa(Z, te)), this.mergeVertices();
      }
      function fa(Z, te) {
        Xi.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], Z, te), this.type = "OctahedronBufferGeometry", this.parameters = { radius: Z, detail: te };
      }
      function $s(Z, te) {
        mn.call(this), this.type = "IcosahedronGeometry", this.parameters = { radius: Z, detail: te }, this.fromBufferGeometry(new Wa(Z, te)), this.mergeVertices();
      }
      function Wa(Z, te) {
        var oe = (1 + Math.sqrt(5)) / 2, se = [-1, oe, 0, 1, oe, 0, -1, -oe, 0, 1, -oe, 0, 0, -1, oe, 0, 1, oe, 0, -1, -oe, 0, 1, -oe, oe, 0, -1, oe, 0, 1, -oe, 0, -1, -oe, 0, 1];
        Xi.call(this, se, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], Z, te), this.type = "IcosahedronBufferGeometry", this.parameters = { radius: Z, detail: te };
      }
      function js(Z, te) {
        mn.call(this), this.type = "DodecahedronGeometry", this.parameters = { radius: Z, detail: te }, this.fromBufferGeometry(new Ka(Z, te)), this.mergeVertices();
      }
      function Ka(Z, te) {
        var oe = (1 + Math.sqrt(5)) / 2, se = 1 / oe, Ae = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -se, -oe, 0, -se, oe, 0, se, -oe, 0, se, oe, -se, -oe, 0, -se, oe, 0, se, -oe, 0, se, oe, 0, -oe, 0, -se, oe, 0, -se, -oe, 0, se, oe, 0, se];
        Xi.call(this, Ae, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], Z, te), this.type = "DodecahedronBufferGeometry", this.parameters = { radius: Z, detail: te };
      }
      function Ys(Z, te, oe, se, Ae, ue) {
        mn.call(this), this.type = "TubeGeometry", this.parameters = { path: Z, tubularSegments: te, radius: oe, radialSegments: se, closed: Ae }, ue !== void 0 && console.warn("THREE.TubeGeometry: taper has been removed.");
        var he = new Za(Z, te, oe, se, Ae);
        this.tangents = he.tangents, this.normals = he.normals, this.binormals = he.binormals, this.fromBufferGeometry(he), this.mergeVertices();
      }
      function Za(Z, te, oe, se, Ae) {
        Wr.call(this), this.type = "TubeBufferGeometry", this.parameters = { path: Z, tubularSegments: te, radius: oe, radialSegments: se, closed: Ae }, te = te || 64, oe = oe || 1, se = se || 8, Ae = Ae || !1;
        var ue = Z.computeFrenetFrames(te, Ae);
        this.tangents = ue.tangents, this.normals = ue.normals, this.binormals = ue.binormals;
        var he, pe, ve = new mt(), xe = new mt(), Me = new xr(), Ne = new mt(), Qe = [], Ue = [], ze = [], et = [];
        function nt(At) {
          Ne = Z.getPointAt(At / te, Ne);
          var Et = ue.normals[At], st = ue.binormals[At];
          for (pe = 0; pe <= se; pe++) {
            var Mt = pe / se * Math.PI * 2, Ft = Math.sin(Mt), lt = -Math.cos(Mt);
            xe.x = lt * Et.x + Ft * st.x, xe.y = lt * Et.y + Ft * st.y, xe.z = lt * Et.z + Ft * st.z, xe.normalize(), Ue.push(xe.x, xe.y, xe.z), ve.x = Ne.x + oe * xe.x, ve.y = Ne.y + oe * xe.y, ve.z = Ne.z + oe * xe.z, Qe.push(ve.x, ve.y, ve.z);
          }
        }
        (function() {
          for (he = 0; he < te; he++)
            nt(he);
          nt(Ae === !1 ? te : 0), function() {
            for (he = 0; he <= te; he++)
              for (pe = 0; pe <= se; pe++)
                Me.x = he / te, Me.y = pe / se, ze.push(Me.x, Me.y);
          }(), function() {
            for (pe = 1; pe <= te; pe++)
              for (he = 1; he <= se; he++) {
                var At = (se + 1) * (pe - 1) + (he - 1), Et = (se + 1) * pe + (he - 1), st = (se + 1) * pe + he, Mt = (se + 1) * (pe - 1) + he;
                et.push(At, Et, Mt), et.push(Et, st, Mt);
              }
          }();
        })(), this.setIndex(et), this.addAttribute("position", new Pr(Qe, 3)), this.addAttribute("normal", new Pr(Ue, 3)), this.addAttribute("uv", new Pr(ze, 2));
      }
      function Vs(Z, te, oe, se, Ae, ue, he) {
        mn.call(this), this.type = "TorusKnotGeometry", this.parameters = { radius: Z, tube: te, tubularSegments: oe, radialSegments: se, p: Ae, q: ue }, he !== void 0 && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new Xa(Z, te, oe, se, Ae, ue)), this.mergeVertices();
      }
      function Xa(Z, te, oe, se, Ae, ue) {
        Wr.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = { radius: Z, tube: te, tubularSegments: oe, radialSegments: se, p: Ae, q: ue }, Z = Z || 1, te = te || 0.4, oe = Math.floor(oe) || 64, se = Math.floor(se) || 8, Ae = Ae || 2, ue = ue || 3;
        var he, pe, ve = [], xe = [], Me = [], Ne = [], Qe = new mt(), Ue = new mt(), ze = new mt(), et = new mt(), nt = new mt(), At = new mt(), Et = new mt();
        for (he = 0; he <= oe; ++he) {
          var st = he / oe * Ae * Math.PI * 2;
          for (qt(st, Ae, ue, Z, ze), qt(st + 0.01, Ae, ue, Z, et), At.subVectors(et, ze), Et.addVectors(et, ze), nt.crossVectors(At, Et), Et.crossVectors(nt, At), nt.normalize(), Et.normalize(), pe = 0; pe <= se; ++pe) {
            var Mt = pe / se * Math.PI * 2, Ft = -te * Math.cos(Mt), lt = te * Math.sin(Mt);
            Qe.x = ze.x + (Ft * Et.x + lt * nt.x), Qe.y = ze.y + (Ft * Et.y + lt * nt.y), Qe.z = ze.z + (Ft * Et.z + lt * nt.z), xe.push(Qe.x, Qe.y, Qe.z), Ue.subVectors(Qe, ze).normalize(), Me.push(Ue.x, Ue.y, Ue.z), Ne.push(he / oe), Ne.push(pe / se);
          }
        }
        for (pe = 1; pe <= oe; pe++)
          for (he = 1; he <= se; he++) {
            var wt = (se + 1) * (pe - 1) + (he - 1), jt = (se + 1) * pe + (he - 1), Ot = (se + 1) * pe + he, er = (se + 1) * (pe - 1) + he;
            ve.push(wt, jt, er), ve.push(jt, Ot, er);
          }
        function qt(ir, dr, yr, pr, Fr) {
          var Rr = Math.cos(ir), fr = Math.sin(ir), br = yr / dr * ir, ur = Math.cos(br);
          Fr.x = pr * (2 + ur) * 0.5 * Rr, Fr.y = pr * (2 + ur) * fr * 0.5, Fr.z = pr * Math.sin(br) * 0.5;
        }
        this.setIndex(ve), this.addAttribute("position", new Pr(xe, 3)), this.addAttribute("normal", new Pr(Me, 3)), this.addAttribute("uv", new Pr(Ne, 2));
      }
      function Ls(Z, te, oe, se, Ae) {
        mn.call(this), this.type = "TorusGeometry", this.parameters = { radius: Z, tube: te, radialSegments: oe, tubularSegments: se, arc: Ae }, this.fromBufferGeometry(new es(Z, te, oe, se, Ae)), this.mergeVertices();
      }
      function es(Z, te, oe, se, Ae) {
        Wr.call(this), this.type = "TorusBufferGeometry", this.parameters = { radius: Z, tube: te, radialSegments: oe, tubularSegments: se, arc: Ae }, Z = Z || 1, te = te || 0.4, oe = Math.floor(oe) || 8, se = Math.floor(se) || 6, Ae = Ae || 2 * Math.PI;
        var ue, he, pe = [], ve = [], xe = [], Me = [], Ne = new mt(), Qe = new mt(), Ue = new mt();
        for (ue = 0; ue <= oe; ue++)
          for (he = 0; he <= se; he++) {
            var ze = he / se * Ae, et = ue / oe * Math.PI * 2;
            Qe.x = (Z + te * Math.cos(et)) * Math.cos(ze), Qe.y = (Z + te * Math.cos(et)) * Math.sin(ze), Qe.z = te * Math.sin(et), ve.push(Qe.x, Qe.y, Qe.z), Ne.x = Z * Math.cos(ze), Ne.y = Z * Math.sin(ze), Ue.subVectors(Qe, Ne).normalize(), xe.push(Ue.x, Ue.y, Ue.z), Me.push(he / se), Me.push(ue / oe);
          }
        for (ue = 1; ue <= oe; ue++)
          for (he = 1; he <= se; he++) {
            var nt = (se + 1) * ue + he - 1, At = (se + 1) * (ue - 1) + he - 1, Et = (se + 1) * (ue - 1) + he, st = (se + 1) * ue + he;
            pe.push(nt, At, st), pe.push(At, Et, st);
          }
        this.setIndex(pe), this.addAttribute("position", new Pr(ve, 3)), this.addAttribute("normal", new Pr(xe, 3)), this.addAttribute("uv", new Pr(Me, 2));
      }
      Ko.prototype = Object.create(Qn.prototype), Ko.prototype.constructor = Ko, Ko.prototype.isMeshDepthMaterial = !0, Ko.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.depthPacking = Z.depthPacking, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.map = Z.map, this.alphaMap = Z.alphaMap, this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this;
      }, Zo.prototype = Object.create(Qn.prototype), Zo.prototype.constructor = Zo, Zo.prototype.isMeshDistanceMaterial = !0, Zo.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.referencePosition.copy(Z.referencePosition), this.nearDistance = Z.nearDistance, this.farDistance = Z.farDistance, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.map = Z.map, this.alphaMap = Z.alphaMap, this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this;
      }, Da.prototype = Object.assign(Object.create(Dr.prototype), { constructor: Da, isGroup: !0 }), di.prototype = Object.assign(Object.create(Qo.prototype), { constructor: di, isPerspectiveCamera: !0, copy: function(Z, te) {
        return Qo.prototype.copy.call(this, Z, te), this.fov = Z.fov, this.zoom = Z.zoom, this.near = Z.near, this.far = Z.far, this.focus = Z.focus, this.aspect = Z.aspect, this.view = Z.view === null ? null : Object.assign({}, Z.view), this.filmGauge = Z.filmGauge, this.filmOffset = Z.filmOffset, this;
      }, setFocalLength: function(Z) {
        var te = 0.5 * this.getFilmHeight() / Z;
        this.fov = 2 * bn.RAD2DEG * Math.atan(te), this.updateProjectionMatrix();
      }, getFocalLength: function() {
        var Z = Math.tan(0.5 * bn.DEG2RAD * this.fov);
        return 0.5 * this.getFilmHeight() / Z;
      }, getEffectiveFOV: function() {
        return 2 * bn.RAD2DEG * Math.atan(Math.tan(0.5 * bn.DEG2RAD * this.fov) / this.zoom);
      }, getFilmWidth: function() {
        return this.filmGauge * Math.min(this.aspect, 1);
      }, getFilmHeight: function() {
        return this.filmGauge / Math.max(this.aspect, 1);
      }, setViewOffset: function(Z, te, oe, se, Ae, ue) {
        this.aspect = Z / te, this.view === null && (this.view = { enabled: !0, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = !0, this.view.fullWidth = Z, this.view.fullHeight = te, this.view.offsetX = oe, this.view.offsetY = se, this.view.width = Ae, this.view.height = ue, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var Z = this.near, te = Z * Math.tan(0.5 * bn.DEG2RAD * this.fov) / this.zoom, oe = 2 * te, se = this.aspect * oe, Ae = -0.5 * se, ue = this.view;
        if (this.view !== null && this.view.enabled) {
          var he = ue.fullWidth, pe = ue.fullHeight;
          Ae += ue.offsetX * se / he, te -= ue.offsetY * oe / pe, se *= ue.width / he, oe *= ue.height / pe;
        }
        var ve = this.filmOffset;
        ve !== 0 && (Ae += Z * ve / this.getFilmWidth()), this.projectionMatrix.makePerspective(Ae, Ae + se, te, te - oe, Z, this.far);
      }, toJSON: function(Z) {
        var te = Dr.prototype.toJSON.call(this, Z);
        return te.object.fov = this.fov, te.object.zoom = this.zoom, te.object.near = this.near, te.object.far = this.far, te.object.focus = this.focus, te.object.aspect = this.aspect, this.view !== null && (te.object.view = Object.assign({}, this.view)), te.object.filmGauge = this.filmGauge, te.object.filmOffset = this.filmOffset, te;
      } }), Ms.prototype = Object.assign(Object.create(di.prototype), { constructor: Ms, isArrayCamera: !0 }), $a.prototype.isFogExp2 = !0, $a.prototype.clone = function() {
        return new $a(this.color, this.density);
      }, $a.prototype.toJSON = function() {
        return { type: "FogExp2", color: this.color.getHex(), density: this.density };
      }, ja.prototype.isFog = !0, ja.prototype.clone = function() {
        return new ja(this.color, this.near, this.far);
      }, ja.prototype.toJSON = function() {
        return { type: "Fog", color: this.color.getHex(), near: this.near, far: this.far };
      }, _c.prototype = Object.assign(Object.create(Dr.prototype), { constructor: _c, copy: function(Z, te) {
        return Dr.prototype.copy.call(this, Z, te), Z.background !== null && (this.background = Z.background.clone()), Z.fog !== null && (this.fog = Z.fog.clone()), Z.overrideMaterial !== null && (this.overrideMaterial = Z.overrideMaterial.clone()), this.autoUpdate = Z.autoUpdate, this.matrixAutoUpdate = Z.matrixAutoUpdate, this;
      }, toJSON: function(Z) {
        var te = Dr.prototype.toJSON.call(this, Z);
        return this.background !== null && (te.object.background = this.background.toJSON(Z)), this.fog !== null && (te.object.fog = this.fog.toJSON()), te;
      } }), Object.defineProperty(ha.prototype, "needsUpdate", { set: function(Z) {
        Z === !0 && this.version++;
      } }), Object.assign(ha.prototype, { isInterleavedBuffer: !0, onUploadCallback: function() {
      }, setArray: function(Z) {
        if (Array.isArray(Z))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        return this.count = Z !== void 0 ? Z.length / this.stride : 0, this.array = Z, this;
      }, setDynamic: function(Z) {
        return this.dynamic = Z, this;
      }, copy: function(Z) {
        return this.array = new Z.array.constructor(Z.array), this.count = Z.count, this.stride = Z.stride, this.dynamic = Z.dynamic, this;
      }, copyAt: function(Z, te, oe) {
        Z *= this.stride, oe *= te.stride;
        for (var se = 0, Ae = this.stride; se < Ae; se++)
          this.array[Z + se] = te.array[oe + se];
        return this;
      }, set: function(Z, te) {
        return te === void 0 && (te = 0), this.array.set(Z, te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, onUpload: function(Z) {
        return this.onUploadCallback = Z, this;
      } }), Object.defineProperties(Ns.prototype, { count: { get: function() {
        return this.data.count;
      } }, array: { get: function() {
        return this.data.array;
      } } }), Object.assign(Ns.prototype, { isInterleavedBufferAttribute: !0, setX: function(Z, te) {
        return this.data.array[Z * this.data.stride + this.offset] = te, this;
      }, setY: function(Z, te) {
        return this.data.array[Z * this.data.stride + this.offset + 1] = te, this;
      }, setZ: function(Z, te) {
        return this.data.array[Z * this.data.stride + this.offset + 2] = te, this;
      }, setW: function(Z, te) {
        return this.data.array[Z * this.data.stride + this.offset + 3] = te, this;
      }, getX: function(Z) {
        return this.data.array[Z * this.data.stride + this.offset];
      }, getY: function(Z) {
        return this.data.array[Z * this.data.stride + this.offset + 1];
      }, getZ: function(Z) {
        return this.data.array[Z * this.data.stride + this.offset + 2];
      }, getW: function(Z) {
        return this.data.array[Z * this.data.stride + this.offset + 3];
      }, setXY: function(Z, te, oe) {
        return Z = Z * this.data.stride + this.offset, this.data.array[Z + 0] = te, this.data.array[Z + 1] = oe, this;
      }, setXYZ: function(Z, te, oe, se) {
        return Z = Z * this.data.stride + this.offset, this.data.array[Z + 0] = te, this.data.array[Z + 1] = oe, this.data.array[Z + 2] = se, this;
      }, setXYZW: function(Z, te, oe, se, Ae) {
        return Z = Z * this.data.stride + this.offset, this.data.array[Z + 0] = te, this.data.array[Z + 1] = oe, this.data.array[Z + 2] = se, this.data.array[Z + 3] = Ae, this;
      } }), Xo.prototype = Object.create(Qn.prototype), Xo.prototype.constructor = Xo, Xo.prototype.isSpriteMaterial = !0, Xo.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.color.copy(Z.color), this.map = Z.map, this.rotation = Z.rotation, this;
      }, ks.prototype = Object.assign(Object.create(Dr.prototype), { constructor: ks, isSprite: !0, raycast: function() {
        var Z = new mt(), te = new mt(), oe = new mt(), se = new xr(), Ae = new xr(), ue = new pn(), he = new mt(), pe = new mt(), ve = new mt();
        function xe(Me, Ne, Qe, Ue, ze, et) {
          se.subVectors(Me, Qe).addScalar(0.5).multiply(Ue), ze !== void 0 ? (Ae.x = et * se.x - ze * se.y, Ae.y = ze * se.x + et * se.y) : Ae.copy(se), Me.copy(Ne), Me.x += Ae.x, Me.y += Ae.y, Me.applyMatrix4(ue);
        }
        return function(Me, Ne) {
          te.setFromMatrixScale(this.matrixWorld), ue.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld), oe.setFromMatrixPosition(this.modelViewMatrix);
          var Qe, Ue, ze = this.material.rotation;
          ze !== 0 && (Ue = Math.cos(ze), Qe = Math.sin(ze));
          var et = this.center;
          xe(he.set(-0.5, -0.5, 0), oe, et, te, Qe, Ue), xe(pe.set(0.5, -0.5, 0), oe, et, te, Qe, Ue), xe(ve.set(0.5, 0.5, 0), oe, et, te, Qe, Ue);
          var nt = Me.ray.intersectTriangle(he, pe, ve, !1, Z);
          if (nt !== null || (xe(pe.set(-0.5, 0.5, 0), oe, et, te, Qe, Ue), (nt = Me.ray.intersectTriangle(he, ve, pe, !1, Z)) !== null)) {
            var At = Me.ray.origin.distanceTo(Z);
            At < Me.near || At > Me.far || Ne.push({ distance: At, point: Z.clone(), face: null, object: this });
          }
        };
      }(), clone: function() {
        return new this.constructor(this.material).copy(this);
      }, copy: function(Z) {
        return Dr.prototype.copy.call(this, Z), Z.center !== void 0 && this.center.copy(Z.center), this;
      } }), Fs.prototype = Object.assign(Object.create(Dr.prototype), { constructor: Fs, copy: function(Z) {
        Dr.prototype.copy.call(this, Z, !1);
        for (var te = Z.levels, oe = 0, se = te.length; oe < se; oe++) {
          var Ae = te[oe];
          this.addLevel(Ae.object.clone(), Ae.distance);
        }
        return this;
      }, addLevel: function(Z, te) {
        te === void 0 && (te = 0), te = Math.abs(te);
        for (var oe = this.levels, se = 0; se < oe.length && !(te < oe[se].distance); se++)
          ;
        oe.splice(se, 0, { distance: te, object: Z }), this.add(Z);
      }, getObjectForDistance: function(Z) {
        for (var te = this.levels, oe = 1, se = te.length; oe < se && !(Z < te[oe].distance); oe++)
          ;
        return te[oe - 1].object;
      }, raycast: function() {
        var Z = new mt();
        return function(te, oe) {
          Z.setFromMatrixPosition(this.matrixWorld);
          var se = te.ray.origin.distanceTo(Z);
          this.getObjectForDistance(se).raycast(te, oe);
        };
      }(), update: function() {
        var Z = new mt(), te = new mt();
        return function(oe) {
          var se = this.levels;
          if (se.length > 1) {
            Z.setFromMatrixPosition(oe.matrixWorld), te.setFromMatrixPosition(this.matrixWorld);
            var Ae = Z.distanceTo(te);
            se[0].object.visible = !0;
            for (var ue = 1, he = se.length; ue < he && Ae >= se[ue].distance; ue++)
              se[ue - 1].object.visible = !1, se[ue].object.visible = !0;
            for (; ue < he; ue++)
              se[ue].object.visible = !1;
          }
        };
      }(), toJSON: function(Z) {
        var te = Dr.prototype.toJSON.call(this, Z);
        te.object.levels = [];
        for (var oe = this.levels, se = 0, Ae = oe.length; se < Ae; se++) {
          var ue = oe[se];
          te.object.levels.push({ object: ue.object.uuid, distance: ue.distance });
        }
        return te;
      } }), Object.assign(Gs.prototype, { calculateInverses: function() {
        this.boneInverses = [];
        for (var Z = 0, te = this.bones.length; Z < te; Z++) {
          var oe = new pn();
          this.bones[Z] && oe.getInverse(this.bones[Z].matrixWorld), this.boneInverses.push(oe);
        }
      }, pose: function() {
        var Z, te, oe;
        for (te = 0, oe = this.bones.length; te < oe; te++)
          (Z = this.bones[te]) && Z.matrixWorld.getInverse(this.boneInverses[te]);
        for (te = 0, oe = this.bones.length; te < oe; te++)
          (Z = this.bones[te]) && (Z.parent && Z.parent.isBone ? (Z.matrix.getInverse(Z.parent.matrixWorld), Z.matrix.multiply(Z.matrixWorld)) : Z.matrix.copy(Z.matrixWorld), Z.matrix.decompose(Z.position, Z.quaternion, Z.scale));
      }, update: function() {
        var Z = new pn(), te = new pn();
        return function() {
          for (var oe = this.bones, se = this.boneInverses, Ae = this.boneMatrices, ue = this.boneTexture, he = 0, pe = oe.length; he < pe; he++) {
            var ve = oe[he] ? oe[he].matrixWorld : te;
            Z.multiplyMatrices(ve, se[he]), Z.toArray(Ae, 16 * he);
          }
          ue !== void 0 && (ue.needsUpdate = !0);
        };
      }(), clone: function() {
        return new Gs(this.bones, this.boneInverses);
      }, getBoneByName: function(Z) {
        for (var te = 0, oe = this.bones.length; te < oe; te++) {
          var se = this.bones[te];
          if (se.name === Z)
            return se;
        }
      } }), Qc.prototype = Object.assign(Object.create(Dr.prototype), { constructor: Qc, isBone: !0 }), Sc.prototype = Object.assign(Object.create(Ki.prototype), { constructor: Sc, isSkinnedMesh: !0, initBones: function() {
        var Z, te, oe, se, Ae = [];
        if (this.geometry && this.geometry.bones !== void 0) {
          for (oe = 0, se = this.geometry.bones.length; oe < se; oe++)
            te = this.geometry.bones[oe], Z = new Qc(), Ae.push(Z), Z.name = te.name, Z.position.fromArray(te.pos), Z.quaternion.fromArray(te.rotq), te.scl !== void 0 && Z.scale.fromArray(te.scl);
          for (oe = 0, se = this.geometry.bones.length; oe < se; oe++)
            (te = this.geometry.bones[oe]).parent !== -1 && te.parent !== null && Ae[te.parent] !== void 0 ? Ae[te.parent].add(Ae[oe]) : this.add(Ae[oe]);
        }
        return this.updateMatrixWorld(!0), Ae;
      }, bind: function(Z, te) {
        this.skeleton = Z, te === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), te = this.matrixWorld), this.bindMatrix.copy(te), this.bindMatrixInverse.getInverse(te);
      }, pose: function() {
        this.skeleton.pose();
      }, normalizeSkinWeights: function() {
        var Z, te;
        if (this.geometry && this.geometry.isGeometry)
          for (te = 0; te < this.geometry.skinWeights.length; te++) {
            var oe = this.geometry.skinWeights[te];
            (Z = 1 / oe.manhattanLength()) !== 1 / 0 ? oe.multiplyScalar(Z) : oe.set(1, 0, 0, 0);
          }
        else if (this.geometry && this.geometry.isBufferGeometry) {
          var se = new Zn(), Ae = this.geometry.attributes.skinWeight;
          for (te = 0; te < Ae.count; te++)
            se.x = Ae.getX(te), se.y = Ae.getY(te), se.z = Ae.getZ(te), se.w = Ae.getW(te), (Z = 1 / se.manhattanLength()) !== 1 / 0 ? se.multiplyScalar(Z) : se.set(1, 0, 0, 0), Ae.setXYZW(te, se.x, se.y, se.z, se.w);
        }
      }, updateMatrixWorld: function(Z) {
        Ki.prototype.updateMatrixWorld.call(this, Z), this.bindMode === "attached" ? this.bindMatrixInverse.getInverse(this.matrixWorld) : this.bindMode === "detached" ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
      }, clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), ei.prototype = Object.create(Qn.prototype), ei.prototype.constructor = ei, ei.prototype.isLineBasicMaterial = !0, ei.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.color.copy(Z.color), this.linewidth = Z.linewidth, this.linecap = Z.linecap, this.linejoin = Z.linejoin, this;
      }, Zi.prototype = Object.assign(Object.create(Dr.prototype), { constructor: Zi, isLine: !0, computeLineDistances: function() {
        var Z = new mt(), te = new mt();
        return function() {
          var oe = this.geometry;
          if (oe.isBufferGeometry)
            if (oe.index === null) {
              for (var se = oe.attributes.position, Ae = [0], ue = 1, he = se.count; ue < he; ue++)
                Z.fromBufferAttribute(se, ue - 1), te.fromBufferAttribute(se, ue), Ae[ue] = Ae[ue - 1], Ae[ue] += Z.distanceTo(te);
              oe.addAttribute("lineDistance", new Pr(Ae, 1));
            } else
              console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
          else if (oe.isGeometry) {
            var pe = oe.vertices;
            for ((Ae = oe.lineDistances)[0] = 0, ue = 1, he = pe.length; ue < he; ue++)
              Ae[ue] = Ae[ue - 1], Ae[ue] += pe[ue - 1].distanceTo(pe[ue]);
          }
          return this;
        };
      }(), raycast: function() {
        var Z = new pn(), te = new da(), oe = new go();
        return function(se, Ae) {
          var ue = se.linePrecision, he = ue * ue, pe = this.geometry, ve = this.matrixWorld;
          if (pe.boundingSphere === null && pe.computeBoundingSphere(), oe.copy(pe.boundingSphere), oe.applyMatrix4(ve), se.ray.intersectsSphere(oe) !== !1) {
            Z.getInverse(ve), te.copy(se.ray).applyMatrix4(Z);
            var xe = new mt(), Me = new mt(), Ne = new mt(), Qe = new mt(), Ue = this && this.isLineSegments ? 2 : 1;
            if (pe.isBufferGeometry) {
              var ze = pe.index, et = pe.attributes.position.array;
              if (ze !== null)
                for (var nt = ze.array, At = 0, Et = nt.length - 1; At < Et; At += Ue) {
                  var st = nt[At], Mt = nt[At + 1];
                  xe.fromArray(et, 3 * st), Me.fromArray(et, 3 * Mt), !(te.distanceSqToSegment(xe, Me, Qe, Ne) > he) && (Qe.applyMatrix4(this.matrixWorld), (wt = se.ray.origin.distanceTo(Qe)) < se.near || wt > se.far || Ae.push({ distance: wt, point: Ne.clone().applyMatrix4(this.matrixWorld), index: At, face: null, faceIndex: null, object: this }));
                }
              else
                for (At = 0, Et = et.length / 3 - 1; At < Et; At += Ue)
                  xe.fromArray(et, 3 * At), Me.fromArray(et, 3 * At + 3), !(te.distanceSqToSegment(xe, Me, Qe, Ne) > he) && (Qe.applyMatrix4(this.matrixWorld), (wt = se.ray.origin.distanceTo(Qe)) < se.near || wt > se.far || Ae.push({ distance: wt, point: Ne.clone().applyMatrix4(this.matrixWorld), index: At, face: null, faceIndex: null, object: this }));
            } else if (pe.isGeometry) {
              var Ft = pe.vertices, lt = Ft.length;
              for (At = 0; At < lt - 1; At += Ue) {
                var wt;
                te.distanceSqToSegment(Ft[At], Ft[At + 1], Qe, Ne) > he || (Qe.applyMatrix4(this.matrixWorld), (wt = se.ray.origin.distanceTo(Qe)) < se.near || wt > se.far || Ae.push({ distance: wt, point: Ne.clone().applyMatrix4(this.matrixWorld), index: At, face: null, faceIndex: null, object: this }));
              }
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), ri.prototype = Object.assign(Object.create(Zi.prototype), { constructor: ri, isLineSegments: !0, computeLineDistances: function() {
        var Z = new mt(), te = new mt();
        return function() {
          var oe = this.geometry;
          if (oe.isBufferGeometry)
            if (oe.index === null) {
              for (var se = oe.attributes.position, Ae = [], ue = 0, he = se.count; ue < he; ue += 2)
                Z.fromBufferAttribute(se, ue), te.fromBufferAttribute(se, ue + 1), Ae[ue] = ue === 0 ? 0 : Ae[ue - 1], Ae[ue + 1] = Ae[ue] + Z.distanceTo(te);
              oe.addAttribute("lineDistance", new Pr(Ae, 1));
            } else
              console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
          else if (oe.isGeometry) {
            var pe = oe.vertices;
            for (Ae = oe.lineDistances, ue = 0, he = pe.length; ue < he; ue += 2)
              Z.copy(pe[ue]), te.copy(pe[ue + 1]), Ae[ue] = ue === 0 ? 0 : Ae[ue - 1], Ae[ue + 1] = Ae[ue] + Z.distanceTo(te);
          }
          return this;
        };
      }() }), Tc.prototype = Object.assign(Object.create(Zi.prototype), { constructor: Tc, isLineLoop: !0 }), mo.prototype = Object.create(Qn.prototype), mo.prototype.constructor = mo, mo.prototype.isPointsMaterial = !0, mo.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.color.copy(Z.color), this.map = Z.map, this.size = Z.size, this.sizeAttenuation = Z.sizeAttenuation, this.morphTargets = Z.morphTargets, this;
      }, Ya.prototype = Object.assign(Object.create(Dr.prototype), { constructor: Ya, isPoints: !0, raycast: function() {
        var Z = new pn(), te = new da(), oe = new go();
        return function(se, Ae) {
          var ue = this, he = this.geometry, pe = this.matrixWorld, ve = se.params.Points.threshold;
          if (he.boundingSphere === null && he.computeBoundingSphere(), oe.copy(he.boundingSphere), oe.applyMatrix4(pe), oe.radius += ve, se.ray.intersectsSphere(oe) !== !1) {
            Z.getInverse(pe), te.copy(se.ray).applyMatrix4(Z);
            var xe = ve / ((this.scale.x + this.scale.y + this.scale.z) / 3), Me = xe * xe, Ne = new mt(), Qe = new mt();
            if (he.isBufferGeometry) {
              var Ue = he.index, ze = he.attributes.position.array;
              if (Ue !== null)
                for (var et = Ue.array, nt = 0, At = et.length; nt < At; nt++) {
                  var Et = et[nt];
                  Ne.fromArray(ze, 3 * Et), Ft(Ne, Et);
                }
              else {
                nt = 0;
                for (var st = ze.length / 3; nt < st; nt++)
                  Ne.fromArray(ze, 3 * nt), Ft(Ne, nt);
              }
            } else {
              var Mt = he.vertices;
              for (nt = 0, st = Mt.length; nt < st; nt++)
                Ft(Mt[nt], nt);
            }
          }
          function Ft(lt, wt) {
            var jt = te.distanceSqToPoint(lt);
            if (jt < Me) {
              te.closestPointToPoint(lt, Qe), Qe.applyMatrix4(pe);
              var Ot = se.ray.origin.distanceTo(Qe);
              if (Ot < se.near || Ot > se.far)
                return;
              Ae.push({ distance: Ot, distanceToRay: Math.sqrt(jt), point: Qe.clone(), index: wt, face: null, object: ue });
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), oA.prototype = Object.assign(Object.create(ii.prototype), { constructor: oA, isVideoTexture: !0, update: function() {
        var Z = this.image;
        Z.readyState >= Z.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
      } }), Va.prototype = Object.create(ii.prototype), Va.prototype.constructor = Va, Va.prototype.isCompressedTexture = !0, Os.prototype = Object.create(ii.prototype), Os.prototype.constructor = Os, Os.prototype.isCanvasTexture = !0, Ps.prototype = Object.create(ii.prototype), Ps.prototype.constructor = Ps, Ps.prototype.isDepthTexture = !0, La.prototype = Object.create(Wr.prototype), La.prototype.constructor = La, Us.prototype = Object.create(mn.prototype), Us.prototype.constructor = Us, za.prototype = Object.create(Wr.prototype), za.prototype.constructor = za, Hs.prototype = Object.create(mn.prototype), Hs.prototype.constructor = Hs, Xi.prototype = Object.create(Wr.prototype), Xi.prototype.constructor = Xi, qs.prototype = Object.create(mn.prototype), qs.prototype.constructor = qs, Ja.prototype = Object.create(Xi.prototype), Ja.prototype.constructor = Ja, Ds.prototype = Object.create(mn.prototype), Ds.prototype.constructor = Ds, fa.prototype = Object.create(Xi.prototype), fa.prototype.constructor = fa, $s.prototype = Object.create(mn.prototype), $s.prototype.constructor = $s, Wa.prototype = Object.create(Xi.prototype), Wa.prototype.constructor = Wa, js.prototype = Object.create(mn.prototype), js.prototype.constructor = js, Ka.prototype = Object.create(Xi.prototype), Ka.prototype.constructor = Ka, Ys.prototype = Object.create(mn.prototype), Ys.prototype.constructor = Ys, Za.prototype = Object.create(Wr.prototype), Za.prototype.constructor = Za, Vs.prototype = Object.create(mn.prototype), Vs.prototype.constructor = Vs, Xa.prototype = Object.create(Wr.prototype), Xa.prototype.constructor = Xa, Ls.prototype = Object.create(mn.prototype), Ls.prototype.constructor = Ls, es.prototype = Object.create(Wr.prototype), es.prototype.constructor = es;
      var xl = function(Z, te, oe) {
        oe = oe || 2;
        var se, Ae, ue, he, pe, ve, xe, Me = te && te.length, Ne = Me ? te[0] * oe : Z.length, Qe = cu(Z, 0, Ne, oe, !0), Ue = [];
        if (!Qe)
          return Ue;
        if (Me && (Qe = function(et, nt, At, Et) {
          var st, Mt, Ft, lt, wt, jt = [];
          for (st = 0, Mt = nt.length; st < Mt; st++)
            Ft = nt[st] * Et, lt = st < Mt - 1 ? nt[st + 1] * Et : et.length, (wt = cu(et, Ft, lt, Et, !1)) === wt.next && (wt.steiner = !0), jt.push(Rl(wt));
          for (jt.sort(Sl), st = 0; st < jt.length; st++)
            Tl(jt[st], At), At = zs(At, At.next);
          return At;
        }(Z, te, Qe, oe)), Z.length > 80 * oe) {
          se = ue = Z[0], Ae = he = Z[1];
          for (var ze = oe; ze < Ne; ze += oe)
            pe = Z[ze], ve = Z[ze + 1], pe < se && (se = pe), ve < Ae && (Ae = ve), pe > ue && (ue = pe), ve > he && (he = ve);
          xe = (xe = Math.max(ue - se, he - Ae)) !== 0 ? 1 / xe : 0;
        }
        return Js(Qe, Ue, oe, se, Ae, xe), Ue;
      };
      function cu(Z, te, oe, se, Ae) {
        var ue, he;
        if (Ae === function(pe, ve, xe, Me) {
          for (var Ne = 0, Qe = ve, Ue = xe - Me; Qe < xe; Qe += Me)
            Ne += (pe[Ue] - pe[Qe]) * (pe[Qe + 1] + pe[Ue + 1]), Ue = Qe;
          return Ne;
        }(Z, te, oe, se) > 0)
          for (ue = te; ue < oe; ue += se)
            he = lu(ue, Z[ue], Z[ue + 1], he);
        else
          for (ue = oe - se; ue >= te; ue -= se)
            he = lu(ue, Z[ue], Z[ue + 1], he);
        return he && pa(he, he.next) && (Ks(he), he = he.next), he;
      }
      function zs(Z, te) {
        if (!Z)
          return Z;
        te || (te = Z);
        var oe, se = Z;
        do
          if (oe = !1, se.steiner || !pa(se, se.next) && zi(se.prev, se, se.next) !== 0)
            se = se.next;
          else {
            if (Ks(se), (se = te = se.prev) === se.next)
              break;
            oe = !0;
          }
        while (oe || se !== te);
        return te;
      }
      function Js(Z, te, oe, se, Ae, ue, he) {
        if (Z) {
          !he && ue && function(Me, Ne, Qe, Ue) {
            var ze = Me;
            do
              ze.z === null && (ze.z = aA(ze.x, ze.y, Ne, Qe, Ue)), ze.prevZ = ze.prev, ze.nextZ = ze.next, ze = ze.next;
            while (ze !== Me);
            ze.prevZ.nextZ = null, ze.prevZ = null, function(et) {
              var nt, At, Et, st, Mt, Ft, lt, wt, jt = 1;
              do {
                for (At = et, et = null, Mt = null, Ft = 0; At; ) {
                  for (Ft++, Et = At, lt = 0, nt = 0; nt < jt && (lt++, Et = Et.nextZ); nt++)
                    ;
                  for (wt = jt; lt > 0 || wt > 0 && Et; )
                    lt !== 0 && (wt === 0 || !Et || At.z <= Et.z) ? (st = At, At = At.nextZ, lt--) : (st = Et, Et = Et.nextZ, wt--), Mt ? Mt.nextZ = st : et = st, st.prevZ = Mt, Mt = st;
                  At = Et;
                }
                Mt.nextZ = null, jt *= 2;
              } while (Ft > 1);
            }(ze);
          }(Z, se, Ae, ue);
          for (var pe, ve, xe = Z; Z.prev !== Z.next; )
            if (pe = Z.prev, ve = Z.next, ue ? bl(Z, se, Ae, ue) : wl(Z))
              te.push(pe.i / oe), te.push(Z.i / oe), te.push(ve.i / oe), Ks(Z), Z = ve.next, xe = ve.next;
            else if ((Z = ve) === xe) {
              he ? he === 1 ? Js(Z = _l(Z, te, oe), te, oe, se, Ae, ue, 2) : he === 2 && Ql(Z, te, oe, se, Ae, ue) : Js(zs(Z), te, oe, se, Ae, ue, 1);
              break;
            }
        }
      }
      function wl(Z) {
        var te = Z.prev, oe = Z, se = Z.next;
        if (zi(te, oe, se) >= 0)
          return !1;
        for (var Ae = Z.next.next; Ae !== Z.prev; ) {
          if (Rc(te.x, te.y, oe.x, oe.y, se.x, se.y, Ae.x, Ae.y) && zi(Ae.prev, Ae, Ae.next) >= 0)
            return !1;
          Ae = Ae.next;
        }
        return !0;
      }
      function bl(Z, te, oe, se) {
        var Ae = Z.prev, ue = Z, he = Z.next;
        if (zi(Ae, ue, he) >= 0)
          return !1;
        for (var pe = Ae.x < ue.x ? Ae.x < he.x ? Ae.x : he.x : ue.x < he.x ? ue.x : he.x, ve = Ae.y < ue.y ? Ae.y < he.y ? Ae.y : he.y : ue.y < he.y ? ue.y : he.y, xe = Ae.x > ue.x ? Ae.x > he.x ? Ae.x : he.x : ue.x > he.x ? ue.x : he.x, Me = Ae.y > ue.y ? Ae.y > he.y ? Ae.y : he.y : ue.y > he.y ? ue.y : he.y, Ne = aA(pe, ve, te, oe, se), Qe = aA(xe, Me, te, oe, se), Ue = Z.nextZ; Ue && Ue.z <= Qe; ) {
          if (Ue !== Z.prev && Ue !== Z.next && Rc(Ae.x, Ae.y, ue.x, ue.y, he.x, he.y, Ue.x, Ue.y) && zi(Ue.prev, Ue, Ue.next) >= 0)
            return !1;
          Ue = Ue.nextZ;
        }
        for (Ue = Z.prevZ; Ue && Ue.z >= Ne; ) {
          if (Ue !== Z.prev && Ue !== Z.next && Rc(Ae.x, Ae.y, ue.x, ue.y, he.x, he.y, Ue.x, Ue.y) && zi(Ue.prev, Ue, Ue.next) >= 0)
            return !1;
          Ue = Ue.prevZ;
        }
        return !0;
      }
      function _l(Z, te, oe) {
        var se = Z;
        do {
          var Ae = se.prev, ue = se.next.next;
          !pa(Ae, ue) && Au(Ae, se, se.next, ue) && Ws(Ae, ue) && Ws(ue, Ae) && (te.push(Ae.i / oe), te.push(se.i / oe), te.push(ue.i / oe), Ks(se), Ks(se.next), se = Z = ue), se = se.next;
        } while (se !== Z);
        return se;
      }
      function Ql(Z, te, oe, se, Ae, ue) {
        var he = Z;
        do {
          for (var pe = he.next.next; pe !== he.prev; ) {
            if (he.i !== pe.i && Ml(he, pe)) {
              var ve = uu(he, pe);
              return he = zs(he, he.next), ve = zs(ve, ve.next), Js(he, te, oe, se, Ae, ue), void Js(ve, te, oe, se, Ae, ue);
            }
            pe = pe.next;
          }
          he = he.next;
        } while (he !== Z);
      }
      function Sl(Z, te) {
        return Z.x - te.x;
      }
      function Tl(Z, te) {
        if (te = function(se, Ae) {
          var ue, he = Ae, pe = se.x, ve = se.y, xe = -1 / 0;
          do {
            if (ve <= he.y && ve >= he.next.y && he.next.y !== he.y) {
              var Me = he.x + (ve - he.y) * (he.next.x - he.x) / (he.next.y - he.y);
              if (Me <= pe && Me > xe) {
                if (xe = Me, Me === pe) {
                  if (ve === he.y)
                    return he;
                  if (ve === he.next.y)
                    return he.next;
                }
                ue = he.x < he.next.x ? he : he.next;
              }
            }
            he = he.next;
          } while (he !== Ae);
          if (!ue)
            return null;
          if (pe === xe)
            return ue.prev;
          var Ne, Qe = ue, Ue = ue.x, ze = ue.y, et = 1 / 0;
          for (he = ue.next; he !== Qe; )
            pe >= he.x && he.x >= Ue && pe !== he.x && Rc(ve < ze ? pe : xe, ve, Ue, ze, ve < ze ? xe : pe, ve, he.x, he.y) && ((Ne = Math.abs(ve - he.y) / (pe - he.x)) < et || Ne === et && he.x > ue.x) && Ws(he, se) && (ue = he, et = Ne), he = he.next;
          return ue;
        }(Z, te)) {
          var oe = uu(te, Z);
          zs(oe, oe.next);
        }
      }
      function aA(Z, te, oe, se, Ae) {
        return (Z = 1431655765 & ((Z = 858993459 & ((Z = 252645135 & ((Z = 16711935 & ((Z = 32767 * (Z - oe) * Ae) | Z << 8)) | Z << 4)) | Z << 2)) | Z << 1)) | (te = 1431655765 & ((te = 858993459 & ((te = 252645135 & ((te = 16711935 & ((te = 32767 * (te - se) * Ae) | te << 8)) | te << 4)) | te << 2)) | te << 1)) << 1;
      }
      function Rl(Z) {
        var te = Z, oe = Z;
        do
          te.x < oe.x && (oe = te), te = te.next;
        while (te !== Z);
        return oe;
      }
      function Rc(Z, te, oe, se, Ae, ue, he, pe) {
        return (Ae - he) * (te - pe) - (Z - he) * (ue - pe) >= 0 && (Z - he) * (se - pe) - (oe - he) * (te - pe) >= 0 && (oe - he) * (ue - pe) - (Ae - he) * (se - pe) >= 0;
      }
      function Ml(Z, te) {
        return Z.next.i !== te.i && Z.prev.i !== te.i && !function(oe, se) {
          var Ae = oe;
          do {
            if (Ae.i !== oe.i && Ae.next.i !== oe.i && Ae.i !== se.i && Ae.next.i !== se.i && Au(Ae, Ae.next, oe, se))
              return !0;
            Ae = Ae.next;
          } while (Ae !== oe);
          return !1;
        }(Z, te) && Ws(Z, te) && Ws(te, Z) && function(oe, se) {
          var Ae = oe, ue = !1, he = (oe.x + se.x) / 2, pe = (oe.y + se.y) / 2;
          do
            Ae.y > pe != Ae.next.y > pe && Ae.next.y !== Ae.y && he < (Ae.next.x - Ae.x) * (pe - Ae.y) / (Ae.next.y - Ae.y) + Ae.x && (ue = !ue), Ae = Ae.next;
          while (Ae !== oe);
          return ue;
        }(Z, te);
      }
      function zi(Z, te, oe) {
        return (te.y - Z.y) * (oe.x - te.x) - (te.x - Z.x) * (oe.y - te.y);
      }
      function pa(Z, te) {
        return Z.x === te.x && Z.y === te.y;
      }
      function Au(Z, te, oe, se) {
        return !!(pa(Z, te) && pa(oe, se) || pa(Z, se) && pa(oe, te)) || zi(Z, te, oe) > 0 != zi(Z, te, se) > 0 && zi(oe, se, Z) > 0 != zi(oe, se, te) > 0;
      }
      function Ws(Z, te) {
        return zi(Z.prev, Z, Z.next) < 0 ? zi(Z, te, Z.next) >= 0 && zi(Z, Z.prev, te) >= 0 : zi(Z, te, Z.prev) < 0 || zi(Z, Z.next, te) < 0;
      }
      function uu(Z, te) {
        var oe = new sA(Z.i, Z.x, Z.y), se = new sA(te.i, te.x, te.y), Ae = Z.next, ue = te.prev;
        return Z.next = te, te.prev = Z, oe.next = Ae, Ae.prev = oe, se.next = oe, oe.prev = se, ue.next = se, se.prev = ue, se;
      }
      function lu(Z, te, oe, se) {
        var Ae = new sA(Z, te, oe);
        return se ? (Ae.next = se.next, Ae.prev = se, se.next.prev = Ae, se.next = Ae) : (Ae.prev = Ae, Ae.next = Ae), Ae;
      }
      function Ks(Z) {
        Z.next.prev = Z.prev, Z.prev.next = Z.next, Z.prevZ && (Z.prevZ.nextZ = Z.nextZ), Z.nextZ && (Z.nextZ.prevZ = Z.prevZ);
      }
      function sA(Z, te, oe) {
        this.i = Z, this.x = te, this.y = oe, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
      }
      var jo = { area: function(Z) {
        for (var te = Z.length, oe = 0, se = te - 1, Ae = 0; Ae < te; se = Ae++)
          oe += Z[se].x * Z[Ae].y - Z[Ae].x * Z[se].y;
        return 0.5 * oe;
      }, isClockWise: function(Z) {
        return jo.area(Z) < 0;
      }, triangulateShape: function(Z, te) {
        var oe = [], se = [], Ae = [];
        du(Z), hu(oe, Z);
        var ue = Z.length;
        te.forEach(du);
        for (var he = 0; he < te.length; he++)
          se.push(ue), ue += te[he].length, hu(oe, te[he]);
        var pe = xl(oe, se);
        for (he = 0; he < pe.length; he += 3)
          Ae.push(pe.slice(he, he + 3));
        return Ae;
      } };
      function du(Z) {
        var te = Z.length;
        te > 2 && Z[te - 1].equals(Z[0]) && Z.pop();
      }
      function hu(Z, te) {
        for (var oe = 0; oe < te.length; oe++)
          Z.push(te[oe].x), Z.push(te[oe].y);
      }
      function ga(Z, te) {
        mn.call(this), this.type = "ExtrudeGeometry", this.parameters = { shapes: Z, options: te }, this.fromBufferGeometry(new So(Z, te)), this.mergeVertices();
      }
      function So(Z, te) {
        Wr.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = { shapes: Z, options: te };
        for (var oe = this, se = [], Ae = [], ue = 0, he = (Z = Array.isArray(Z) ? Z : [Z]).length; ue < he; ue++)
          pe(Z[ue]);
        function pe(ve) {
          var xe = [], Me = te.curveSegments !== void 0 ? te.curveSegments : 12, Ne = te.steps !== void 0 ? te.steps : 1, Qe = te.depth !== void 0 ? te.depth : 100, Ue = te.bevelEnabled === void 0 || te.bevelEnabled, ze = te.bevelThickness !== void 0 ? te.bevelThickness : 6, et = te.bevelSize !== void 0 ? te.bevelSize : ze - 2, nt = te.bevelSegments !== void 0 ? te.bevelSegments : 3, At = te.extrudePath, Et = te.UVGenerator !== void 0 ? te.UVGenerator : Nl;
          te.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), Qe = te.amount);
          var st, Mt, Ft, lt, wt, jt, Ot, er, qt = !1;
          At && (st = At.getSpacedPoints(Ne), qt = !0, Ue = !1, Mt = At.computeFrenetFrames(Ne, !1), Ft = new mt(), lt = new mt(), wt = new mt()), Ue || (nt = 0, ze = 0, et = 0);
          var ir = ve.extractPoints(Me), dr = ir.shape, yr = ir.holes;
          if (!jo.isClockWise(dr))
            for (dr = dr.reverse(), Ot = 0, er = yr.length; Ot < er; Ot++)
              jt = yr[Ot], jo.isClockWise(jt) && (yr[Ot] = jt.reverse());
          var pr = jo.triangulateShape(dr, yr), Fr = dr;
          for (Ot = 0, er = yr.length; Ot < er; Ot++)
            jt = yr[Ot], dr = dr.concat(jt);
          function Rr(kn, Jn, ti) {
            return Jn || console.error("THREE.ExtrudeGeometry: vec does not exist"), Jn.clone().multiplyScalar(ti).add(kn);
          }
          var fr, br, ur, zr, Nr, An, En = dr.length, ni = pr.length;
          function Ii(kn, Jn, ti) {
            var fi, oi, ki, Fi = kn.x - Jn.x, Gi = kn.y - Jn.y, co = ti.x - kn.x, No = ti.y - kn.y, Ra = Fi * Fi + Gi * Gi, Zc = Fi * No - Gi * co;
            if (Math.abs(Zc) > Number.EPSILON) {
              var ko = Math.sqrt(Ra), Bc = Math.sqrt(co * co + No * No), vc = Jn.x - Gi / ko, Ye = Jn.y + Fi / ko, It = ((ti.x - No / Bc - vc) * No - (ti.y + co / Bc - Ye) * co) / (Fi * No - Gi * co), bt = (fi = vc + Fi * It - kn.x) * fi + (oi = Ye + Gi * It - kn.y) * oi;
              if (bt <= 2)
                return new xr(fi, oi);
              ki = Math.sqrt(bt / 2);
            } else {
              var Xt = !1;
              Fi > Number.EPSILON ? co > Number.EPSILON && (Xt = !0) : Fi < -Number.EPSILON ? co < -Number.EPSILON && (Xt = !0) : Math.sign(Gi) === Math.sign(No) && (Xt = !0), Xt ? (fi = -Gi, oi = Fi, ki = Math.sqrt(Ra)) : (fi = Fi, oi = Gi, ki = Math.sqrt(Ra / 2));
            }
            return new xr(fi / ki, oi / ki);
          }
          for (var Xn = [], kr = 0, On = Fr.length, hi = On - 1, Di = kr + 1; kr < On; kr++, hi++, Di++)
            hi === On && (hi = 0), Di === On && (Di = 0), Xn[kr] = Ii(Fr[kr], Fr[hi], Fr[Di]);
          var Bi, Ji, wi = [], wo = Xn.concat();
          for (Ot = 0, er = yr.length; Ot < er; Ot++) {
            for (jt = yr[Ot], Bi = [], kr = 0, hi = (On = jt.length) - 1, Di = kr + 1; kr < On; kr++, hi++, Di++)
              hi === On && (hi = 0), Di === On && (Di = 0), Bi[kr] = Ii(jt[kr], jt[hi], jt[Di]);
            wi.push(Bi), wo = wo.concat(Bi);
          }
          for (fr = 0; fr < nt; fr++) {
            for (ur = fr / nt, zr = ze * Math.cos(ur * Math.PI / 2), br = et * Math.sin(ur * Math.PI / 2), kr = 0, On = Fr.length; kr < On; kr++)
              Ni((Nr = Rr(Fr[kr], Xn[kr], br)).x, Nr.y, -zr);
            for (Ot = 0, er = yr.length; Ot < er; Ot++)
              for (jt = yr[Ot], Bi = wi[Ot], kr = 0, On = jt.length; kr < On; kr++)
                Ni((Nr = Rr(jt[kr], Bi[kr], br)).x, Nr.y, -zr);
          }
          for (br = et, kr = 0; kr < En; kr++)
            Nr = Ue ? Rr(dr[kr], wo[kr], br) : dr[kr], qt ? (lt.copy(Mt.normals[0]).multiplyScalar(Nr.x), Ft.copy(Mt.binormals[0]).multiplyScalar(Nr.y), wt.copy(st[0]).add(lt).add(Ft), Ni(wt.x, wt.y, wt.z)) : Ni(Nr.x, Nr.y, 0);
          for (Ji = 1; Ji <= Ne; Ji++)
            for (kr = 0; kr < En; kr++)
              Nr = Ue ? Rr(dr[kr], wo[kr], br) : dr[kr], qt ? (lt.copy(Mt.normals[Ji]).multiplyScalar(Nr.x), Ft.copy(Mt.binormals[Ji]).multiplyScalar(Nr.y), wt.copy(st[Ji]).add(lt).add(Ft), Ni(wt.x, wt.y, wt.z)) : Ni(Nr.x, Nr.y, Qe / Ne * Ji);
          for (fr = nt - 1; fr >= 0; fr--) {
            for (ur = fr / nt, zr = ze * Math.cos(ur * Math.PI / 2), br = et * Math.sin(ur * Math.PI / 2), kr = 0, On = Fr.length; kr < On; kr++)
              Ni((Nr = Rr(Fr[kr], Xn[kr], br)).x, Nr.y, Qe + zr);
            for (Ot = 0, er = yr.length; Ot < er; Ot++)
              for (jt = yr[Ot], Bi = wi[Ot], kr = 0, On = jt.length; kr < On; kr++)
                Nr = Rr(jt[kr], Bi[kr], br), qt ? Ni(Nr.x, Nr.y + st[Ne - 1].y, st[Ne - 1].x + zr) : Ni(Nr.x, Nr.y, Qe + zr);
          }
          function bo(kn, Jn) {
            var ti, fi;
            for (kr = kn.length; --kr >= 0; ) {
              ti = kr, (fi = kr - 1) < 0 && (fi = kn.length - 1);
              var oi = 0, ki = Ne + 2 * nt;
              for (oi = 0; oi < ki; oi++) {
                var Fi = En * oi, Gi = En * (oi + 1);
                ta(Jn + ti + Fi, Jn + fi + Fi, Jn + fi + Gi, Jn + ti + Gi);
              }
            }
          }
          function Ni(kn, Jn, ti) {
            xe.push(kn), xe.push(Jn), xe.push(ti);
          }
          function bi(kn, Jn, ti) {
            $i(kn), $i(Jn), $i(ti);
            var fi = se.length / 3, oi = Et.generateTopUV(oe, se, fi - 3, fi - 2, fi - 1);
            ho(oi[0]), ho(oi[1]), ho(oi[2]);
          }
          function ta(kn, Jn, ti, fi) {
            $i(kn), $i(Jn), $i(fi), $i(Jn), $i(ti), $i(fi);
            var oi = se.length / 3, ki = Et.generateSideWallUV(oe, se, oi - 6, oi - 3, oi - 2, oi - 1);
            ho(ki[0]), ho(ki[1]), ho(ki[3]), ho(ki[1]), ho(ki[2]), ho(ki[3]);
          }
          function $i(kn) {
            se.push(xe[3 * kn + 0]), se.push(xe[3 * kn + 1]), se.push(xe[3 * kn + 2]);
          }
          function ho(kn) {
            Ae.push(kn.x), Ae.push(kn.y);
          }
          (function() {
            var kn = se.length / 3;
            if (Ue) {
              var Jn = 0, ti = En * Jn;
              for (kr = 0; kr < ni; kr++)
                bi((An = pr[kr])[2] + ti, An[1] + ti, An[0] + ti);
              for (ti = En * (Jn = Ne + 2 * nt), kr = 0; kr < ni; kr++)
                bi((An = pr[kr])[0] + ti, An[1] + ti, An[2] + ti);
            } else {
              for (kr = 0; kr < ni; kr++)
                bi((An = pr[kr])[2], An[1], An[0]);
              for (kr = 0; kr < ni; kr++)
                bi((An = pr[kr])[0] + En * Ne, An[1] + En * Ne, An[2] + En * Ne);
            }
            oe.addGroup(kn, se.length / 3 - kn, 0);
          })(), function() {
            var kn = se.length / 3, Jn = 0;
            for (bo(Fr, Jn), Jn += Fr.length, Ot = 0, er = yr.length; Ot < er; Ot++)
              bo(jt = yr[Ot], Jn), Jn += jt.length;
            oe.addGroup(kn, se.length / 3 - kn, 1);
          }();
        }
        this.addAttribute("position", new Pr(se, 3)), this.addAttribute("uv", new Pr(Ae, 2)), this.computeVertexNormals();
      }
      ga.prototype = Object.create(mn.prototype), ga.prototype.constructor = ga, ga.prototype.toJSON = function() {
        var Z = mn.prototype.toJSON.call(this);
        return fu(this.parameters.shapes, this.parameters.options, Z);
      }, So.prototype = Object.create(Wr.prototype), So.prototype.constructor = So, So.prototype.toJSON = function() {
        var Z = Wr.prototype.toJSON.call(this);
        return fu(this.parameters.shapes, this.parameters.options, Z);
      };
      var Nl = { generateTopUV: function(Z, te, oe, se, Ae) {
        var ue = te[3 * oe], he = te[3 * oe + 1], pe = te[3 * se], ve = te[3 * se + 1], xe = te[3 * Ae], Me = te[3 * Ae + 1];
        return [new xr(ue, he), new xr(pe, ve), new xr(xe, Me)];
      }, generateSideWallUV: function(Z, te, oe, se, Ae, ue) {
        var he = te[3 * oe], pe = te[3 * oe + 1], ve = te[3 * oe + 2], xe = te[3 * se], Me = te[3 * se + 1], Ne = te[3 * se + 2], Qe = te[3 * Ae], Ue = te[3 * Ae + 1], ze = te[3 * Ae + 2], et = te[3 * ue], nt = te[3 * ue + 1], At = te[3 * ue + 2];
        return Math.abs(pe - Me) < 0.01 ? [new xr(he, 1 - ve), new xr(xe, 1 - Ne), new xr(Qe, 1 - ze), new xr(et, 1 - At)] : [new xr(pe, 1 - ve), new xr(Me, 1 - Ne), new xr(Ue, 1 - ze), new xr(nt, 1 - At)];
      } };
      function fu(Z, te, oe) {
        if (oe.shapes = [], Array.isArray(Z))
          for (var se = 0, Ae = Z.length; se < Ae; se++) {
            var ue = Z[se];
            oe.shapes.push(ue.uuid);
          }
        else
          oe.shapes.push(Z.uuid);
        return te.extrudePath !== void 0 && (oe.options.extrudePath = te.extrudePath.toJSON()), oe;
      }
      function Zs(Z, te) {
        mn.call(this), this.type = "TextGeometry", this.parameters = { text: Z, parameters: te }, this.fromBufferGeometry(new ts(Z, te)), this.mergeVertices();
      }
      function ts(Z, te) {
        var oe = (te = te || {}).font;
        if (!oe || !oe.isFont)
          return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new mn();
        var se = oe.generateShapes(Z, te.size);
        te.depth = te.height !== void 0 ? te.height : 50, te.bevelThickness === void 0 && (te.bevelThickness = 10), te.bevelSize === void 0 && (te.bevelSize = 8), te.bevelEnabled === void 0 && (te.bevelEnabled = !1), So.call(this, se, te), this.type = "TextBufferGeometry";
      }
      function Xs(Z, te, oe, se, Ae, ue, he) {
        mn.call(this), this.type = "SphereGeometry", this.parameters = { radius: Z, widthSegments: te, heightSegments: oe, phiStart: se, phiLength: Ae, thetaStart: ue, thetaLength: he }, this.fromBufferGeometry(new ma(Z, te, oe, se, Ae, ue, he)), this.mergeVertices();
      }
      function ma(Z, te, oe, se, Ae, ue, he) {
        Wr.call(this), this.type = "SphereBufferGeometry", this.parameters = { radius: Z, widthSegments: te, heightSegments: oe, phiStart: se, phiLength: Ae, thetaStart: ue, thetaLength: he }, Z = Z || 1, te = Math.max(3, Math.floor(te) || 8), oe = Math.max(2, Math.floor(oe) || 6), se = se !== void 0 ? se : 0, Ae = Ae !== void 0 ? Ae : 2 * Math.PI;
        var pe, ve, xe = (ue = ue !== void 0 ? ue : 0) + (he = he !== void 0 ? he : Math.PI), Me = 0, Ne = [], Qe = new mt(), Ue = new mt(), ze = [], et = [], nt = [], At = [];
        for (ve = 0; ve <= oe; ve++) {
          var Et = [], st = ve / oe;
          for (pe = 0; pe <= te; pe++) {
            var Mt = pe / te;
            Qe.x = -Z * Math.cos(se + Mt * Ae) * Math.sin(ue + st * he), Qe.y = Z * Math.cos(ue + st * he), Qe.z = Z * Math.sin(se + Mt * Ae) * Math.sin(ue + st * he), et.push(Qe.x, Qe.y, Qe.z), Ue.set(Qe.x, Qe.y, Qe.z).normalize(), nt.push(Ue.x, Ue.y, Ue.z), At.push(Mt, 1 - st), Et.push(Me++);
          }
          Ne.push(Et);
        }
        for (ve = 0; ve < oe; ve++)
          for (pe = 0; pe < te; pe++) {
            var Ft = Ne[ve][pe + 1], lt = Ne[ve][pe], wt = Ne[ve + 1][pe], jt = Ne[ve + 1][pe + 1];
            (ve !== 0 || ue > 0) && ze.push(Ft, lt, jt), (ve !== oe - 1 || xe < Math.PI) && ze.push(lt, wt, jt);
          }
        this.setIndex(ze), this.addAttribute("position", new Pr(et, 3)), this.addAttribute("normal", new Pr(nt, 3)), this.addAttribute("uv", new Pr(At, 2));
      }
      function ec(Z, te, oe, se, Ae, ue) {
        mn.call(this), this.type = "RingGeometry", this.parameters = { innerRadius: Z, outerRadius: te, thetaSegments: oe, phiSegments: se, thetaStart: Ae, thetaLength: ue }, this.fromBufferGeometry(new rs(Z, te, oe, se, Ae, ue)), this.mergeVertices();
      }
      function rs(Z, te, oe, se, Ae, ue) {
        Wr.call(this), this.type = "RingBufferGeometry", this.parameters = { innerRadius: Z, outerRadius: te, thetaSegments: oe, phiSegments: se, thetaStart: Ae, thetaLength: ue }, Z = Z || 0.5, te = te || 1, Ae = Ae !== void 0 ? Ae : 0, ue = ue !== void 0 ? ue : 2 * Math.PI, oe = oe !== void 0 ? Math.max(3, oe) : 8;
        var he, pe, ve, xe = [], Me = [], Ne = [], Qe = [], Ue = Z, ze = (te - Z) / (se = se !== void 0 ? Math.max(1, se) : 1), et = new mt(), nt = new xr();
        for (pe = 0; pe <= se; pe++) {
          for (ve = 0; ve <= oe; ve++)
            he = Ae + ve / oe * ue, et.x = Ue * Math.cos(he), et.y = Ue * Math.sin(he), Me.push(et.x, et.y, et.z), Ne.push(0, 0, 1), nt.x = (et.x / te + 1) / 2, nt.y = (et.y / te + 1) / 2, Qe.push(nt.x, nt.y);
          Ue += ze;
        }
        for (pe = 0; pe < se; pe++) {
          var At = pe * (oe + 1);
          for (ve = 0; ve < oe; ve++) {
            var Et = he = ve + At, st = he + oe + 1, Mt = he + oe + 2, Ft = he + 1;
            xe.push(Et, st, Ft), xe.push(st, Mt, Ft);
          }
        }
        this.setIndex(xe), this.addAttribute("position", new Pr(Me, 3)), this.addAttribute("normal", new Pr(Ne, 3)), this.addAttribute("uv", new Pr(Qe, 2));
      }
      function tc(Z, te, oe, se) {
        mn.call(this), this.type = "LatheGeometry", this.parameters = { points: Z, segments: te, phiStart: oe, phiLength: se }, this.fromBufferGeometry(new ns(Z, te, oe, se)), this.mergeVertices();
      }
      function ns(Z, te, oe, se) {
        Wr.call(this), this.type = "LatheBufferGeometry", this.parameters = { points: Z, segments: te, phiStart: oe, phiLength: se }, te = Math.floor(te) || 12, oe = oe || 0, se = se || 2 * Math.PI, se = bn.clamp(se, 0, 2 * Math.PI);
        var Ae, ue, he, pe = [], ve = [], xe = [], Me = 1 / te, Ne = new mt(), Qe = new xr();
        for (ue = 0; ue <= te; ue++) {
          var Ue = oe + ue * Me * se, ze = Math.sin(Ue), et = Math.cos(Ue);
          for (he = 0; he <= Z.length - 1; he++)
            Ne.x = Z[he].x * ze, Ne.y = Z[he].y, Ne.z = Z[he].x * et, ve.push(Ne.x, Ne.y, Ne.z), Qe.x = ue / te, Qe.y = he / (Z.length - 1), xe.push(Qe.x, Qe.y);
        }
        for (ue = 0; ue < te; ue++)
          for (he = 0; he < Z.length - 1; he++) {
            var nt = Ae = he + ue * Z.length, At = Ae + Z.length, Et = Ae + Z.length + 1, st = Ae + 1;
            pe.push(nt, At, st), pe.push(At, Et, st);
          }
        if (this.setIndex(pe), this.addAttribute("position", new Pr(ve, 3)), this.addAttribute("uv", new Pr(xe, 2)), this.computeVertexNormals(), se === 2 * Math.PI) {
          var Mt = this.attributes.normal.array, Ft = new mt(), lt = new mt(), wt = new mt();
          for (Ae = te * Z.length * 3, ue = 0, he = 0; ue < Z.length; ue++, he += 3)
            Ft.x = Mt[he + 0], Ft.y = Mt[he + 1], Ft.z = Mt[he + 2], lt.x = Mt[Ae + he + 0], lt.y = Mt[Ae + he + 1], lt.z = Mt[Ae + he + 2], wt.addVectors(Ft, lt).normalize(), Mt[he + 0] = Mt[Ae + he + 0] = wt.x, Mt[he + 1] = Mt[Ae + he + 1] = wt.y, Mt[he + 2] = Mt[Ae + he + 2] = wt.z;
        }
      }
      function Ea(Z, te) {
        mn.call(this), this.type = "ShapeGeometry", typeof te == "object" && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), te = te.curveSegments), this.parameters = { shapes: Z, curveSegments: te }, this.fromBufferGeometry(new ya(Z, te)), this.mergeVertices();
      }
      function ya(Z, te) {
        Wr.call(this), this.type = "ShapeBufferGeometry", this.parameters = { shapes: Z, curveSegments: te }, te = te || 12;
        var oe = [], se = [], Ae = [], ue = [], he = 0, pe = 0;
        if (Array.isArray(Z) === !1)
          xe(Z);
        else
          for (var ve = 0; ve < Z.length; ve++)
            xe(Z[ve]), this.addGroup(he, pe, ve), he += pe, pe = 0;
        function xe(Me) {
          var Ne, Qe, Ue, ze = se.length / 3, et = Me.extractPoints(te), nt = et.shape, At = et.holes;
          if (jo.isClockWise(nt) === !1)
            for (nt = nt.reverse(), Ne = 0, Qe = At.length; Ne < Qe; Ne++)
              Ue = At[Ne], jo.isClockWise(Ue) === !0 && (At[Ne] = Ue.reverse());
          var Et = jo.triangulateShape(nt, At);
          for (Ne = 0, Qe = At.length; Ne < Qe; Ne++)
            Ue = At[Ne], nt = nt.concat(Ue);
          for (Ne = 0, Qe = nt.length; Ne < Qe; Ne++) {
            var st = nt[Ne];
            se.push(st.x, st.y, 0), Ae.push(0, 0, 1), ue.push(st.x, st.y);
          }
          for (Ne = 0, Qe = Et.length; Ne < Qe; Ne++) {
            var Mt = Et[Ne], Ft = Mt[0] + ze, lt = Mt[1] + ze, wt = Mt[2] + ze;
            oe.push(Ft, lt, wt), pe += 3;
          }
        }
        this.setIndex(oe), this.addAttribute("position", new Pr(se, 3)), this.addAttribute("normal", new Pr(Ae, 3)), this.addAttribute("uv", new Pr(ue, 2));
      }
      function pu(Z, te) {
        if (te.shapes = [], Array.isArray(Z))
          for (var oe = 0, se = Z.length; oe < se; oe++) {
            var Ae = Z[oe];
            te.shapes.push(Ae.uuid);
          }
        else
          te.shapes.push(Z.uuid);
        return te;
      }
      function is(Z, te) {
        Wr.call(this), this.type = "EdgesGeometry", this.parameters = { thresholdAngle: te }, te = te !== void 0 ? te : 1;
        var oe, se, Ae, ue, he = [], pe = Math.cos(bn.DEG2RAD * te), ve = [0, 0], xe = {}, Me = ["a", "b", "c"];
        Z.isBufferGeometry ? (ue = new mn()).fromBufferGeometry(Z) : ue = Z.clone(), ue.mergeVertices(), ue.computeFaceNormals();
        for (var Ne = ue.vertices, Qe = ue.faces, Ue = 0, ze = Qe.length; Ue < ze; Ue++)
          for (var et = Qe[Ue], nt = 0; nt < 3; nt++)
            oe = et[Me[nt]], se = et[Me[(nt + 1) % 3]], ve[0] = Math.min(oe, se), ve[1] = Math.max(oe, se), xe[Ae = ve[0] + "," + ve[1]] === void 0 ? xe[Ae] = { index1: ve[0], index2: ve[1], face1: Ue, face2: void 0 } : xe[Ae].face2 = Ue;
        for (Ae in xe) {
          var At = xe[Ae];
          if (At.face2 === void 0 || Qe[At.face1].normal.dot(Qe[At.face2].normal) <= pe) {
            var Et = Ne[At.index1];
            he.push(Et.x, Et.y, Et.z), Et = Ne[At.index2], he.push(Et.x, Et.y, Et.z);
          }
        }
        this.addAttribute("position", new Pr(he, 3));
      }
      function Ba(Z, te, oe, se, Ae, ue, he, pe) {
        mn.call(this), this.type = "CylinderGeometry", this.parameters = { radiusTop: Z, radiusBottom: te, height: oe, radialSegments: se, heightSegments: Ae, openEnded: ue, thetaStart: he, thetaLength: pe }, this.fromBufferGeometry(new Yo(Z, te, oe, se, Ae, ue, he, pe)), this.mergeVertices();
      }
      function Yo(Z, te, oe, se, Ae, ue, he, pe) {
        Wr.call(this), this.type = "CylinderBufferGeometry", this.parameters = { radiusTop: Z, radiusBottom: te, height: oe, radialSegments: se, heightSegments: Ae, openEnded: ue, thetaStart: he, thetaLength: pe };
        var ve = this;
        Z = Z !== void 0 ? Z : 1, te = te !== void 0 ? te : 1, oe = oe || 1, se = Math.floor(se) || 8, Ae = Math.floor(Ae) || 1, ue = ue !== void 0 && ue, he = he !== void 0 ? he : 0, pe = pe !== void 0 ? pe : 2 * Math.PI;
        var xe = [], Me = [], Ne = [], Qe = [], Ue = 0, ze = [], et = oe / 2, nt = 0;
        function At(Et) {
          var st, Mt, Ft, lt = new xr(), wt = new mt(), jt = 0, Ot = Et === !0 ? Z : te, er = Et === !0 ? 1 : -1;
          for (Mt = Ue, st = 1; st <= se; st++)
            Me.push(0, et * er, 0), Ne.push(0, er, 0), Qe.push(0.5, 0.5), Ue++;
          for (Ft = Ue, st = 0; st <= se; st++) {
            var qt = st / se * pe + he, ir = Math.cos(qt), dr = Math.sin(qt);
            wt.x = Ot * dr, wt.y = et * er, wt.z = Ot * ir, Me.push(wt.x, wt.y, wt.z), Ne.push(0, er, 0), lt.x = 0.5 * ir + 0.5, lt.y = 0.5 * dr * er + 0.5, Qe.push(lt.x, lt.y), Ue++;
          }
          for (st = 0; st < se; st++) {
            var yr = Mt + st, pr = Ft + st;
            Et === !0 ? xe.push(pr, pr + 1, yr) : xe.push(pr + 1, pr, yr), jt += 3;
          }
          ve.addGroup(nt, jt, Et === !0 ? 1 : 2), nt += jt;
        }
        (function() {
          var Et, st, Mt = new mt(), Ft = new mt(), lt = 0, wt = (te - Z) / oe;
          for (st = 0; st <= Ae; st++) {
            var jt = [], Ot = st / Ae, er = Ot * (te - Z) + Z;
            for (Et = 0; Et <= se; Et++) {
              var qt = Et / se, ir = qt * pe + he, dr = Math.sin(ir), yr = Math.cos(ir);
              Ft.x = er * dr, Ft.y = -Ot * oe + et, Ft.z = er * yr, Me.push(Ft.x, Ft.y, Ft.z), Mt.set(dr, wt, yr).normalize(), Ne.push(Mt.x, Mt.y, Mt.z), Qe.push(qt, 1 - Ot), jt.push(Ue++);
            }
            ze.push(jt);
          }
          for (Et = 0; Et < se; Et++)
            for (st = 0; st < Ae; st++) {
              var pr = ze[st][Et], Fr = ze[st + 1][Et], Rr = ze[st + 1][Et + 1], fr = ze[st][Et + 1];
              xe.push(pr, Fr, fr), xe.push(Fr, Rr, fr), lt += 6;
            }
          ve.addGroup(nt, lt, 0), nt += lt;
        })(), ue === !1 && (Z > 0 && At(!0), te > 0 && At(!1)), this.setIndex(xe), this.addAttribute("position", new Pr(Me, 3)), this.addAttribute("normal", new Pr(Ne, 3)), this.addAttribute("uv", new Pr(Qe, 2));
      }
      function rc(Z, te, oe, se, Ae, ue, he) {
        Ba.call(this, 0, Z, te, oe, se, Ae, ue, he), this.type = "ConeGeometry", this.parameters = { radius: Z, height: te, radialSegments: oe, heightSegments: se, openEnded: Ae, thetaStart: ue, thetaLength: he };
      }
      function nc(Z, te, oe, se, Ae, ue, he) {
        Yo.call(this, 0, Z, te, oe, se, Ae, ue, he), this.type = "ConeBufferGeometry", this.parameters = { radius: Z, height: te, radialSegments: oe, heightSegments: se, openEnded: Ae, thetaStart: ue, thetaLength: he };
      }
      function oc(Z, te, oe, se) {
        mn.call(this), this.type = "CircleGeometry", this.parameters = { radius: Z, segments: te, thetaStart: oe, thetaLength: se }, this.fromBufferGeometry(new os(Z, te, oe, se)), this.mergeVertices();
      }
      function os(Z, te, oe, se) {
        Wr.call(this), this.type = "CircleBufferGeometry", this.parameters = { radius: Z, segments: te, thetaStart: oe, thetaLength: se }, Z = Z || 1, te = te !== void 0 ? Math.max(3, te) : 8, oe = oe !== void 0 ? oe : 0, se = se !== void 0 ? se : 2 * Math.PI;
        var Ae, ue, he = [], pe = [], ve = [], xe = [], Me = new mt(), Ne = new xr();
        for (pe.push(0, 0, 0), ve.push(0, 0, 1), xe.push(0.5, 0.5), ue = 0, Ae = 3; ue <= te; ue++, Ae += 3) {
          var Qe = oe + ue / te * se;
          Me.x = Z * Math.cos(Qe), Me.y = Z * Math.sin(Qe), pe.push(Me.x, Me.y, Me.z), ve.push(0, 0, 1), Ne.x = (pe[Ae] / Z + 1) / 2, Ne.y = (pe[Ae + 1] / Z + 1) / 2, xe.push(Ne.x, Ne.y);
        }
        for (Ae = 1; Ae <= te; Ae++)
          he.push(Ae, Ae + 1, 0);
        this.setIndex(he), this.addAttribute("position", new Pr(pe, 3)), this.addAttribute("normal", new Pr(ve, 3)), this.addAttribute("uv", new Pr(xe, 2));
      }
      Zs.prototype = Object.create(mn.prototype), Zs.prototype.constructor = Zs, ts.prototype = Object.create(So.prototype), ts.prototype.constructor = ts, Xs.prototype = Object.create(mn.prototype), Xs.prototype.constructor = Xs, ma.prototype = Object.create(Wr.prototype), ma.prototype.constructor = ma, ec.prototype = Object.create(mn.prototype), ec.prototype.constructor = ec, rs.prototype = Object.create(Wr.prototype), rs.prototype.constructor = rs, tc.prototype = Object.create(mn.prototype), tc.prototype.constructor = tc, ns.prototype = Object.create(Wr.prototype), ns.prototype.constructor = ns, Ea.prototype = Object.create(mn.prototype), Ea.prototype.constructor = Ea, Ea.prototype.toJSON = function() {
        var Z = mn.prototype.toJSON.call(this);
        return pu(this.parameters.shapes, Z);
      }, ya.prototype = Object.create(Wr.prototype), ya.prototype.constructor = ya, ya.prototype.toJSON = function() {
        var Z = Wr.prototype.toJSON.call(this);
        return pu(this.parameters.shapes, Z);
      }, is.prototype = Object.create(Wr.prototype), is.prototype.constructor = is, Ba.prototype = Object.create(mn.prototype), Ba.prototype.constructor = Ba, Yo.prototype = Object.create(Wr.prototype), Yo.prototype.constructor = Yo, rc.prototype = Object.create(Ba.prototype), rc.prototype.constructor = rc, nc.prototype = Object.create(Yo.prototype), nc.prototype.constructor = nc, oc.prototype = Object.create(mn.prototype), oc.prototype.constructor = oc, os.prototype = Object.create(Wr.prototype), os.prototype.constructor = os;
      var eo = Object.freeze({ WireframeGeometry: La, ParametricGeometry: Us, ParametricBufferGeometry: za, TetrahedronGeometry: qs, TetrahedronBufferGeometry: Ja, OctahedronGeometry: Ds, OctahedronBufferGeometry: fa, IcosahedronGeometry: $s, IcosahedronBufferGeometry: Wa, DodecahedronGeometry: js, DodecahedronBufferGeometry: Ka, PolyhedronGeometry: Hs, PolyhedronBufferGeometry: Xi, TubeGeometry: Ys, TubeBufferGeometry: Za, TorusKnotGeometry: Vs, TorusKnotBufferGeometry: Xa, TorusGeometry: Ls, TorusBufferGeometry: es, TextGeometry: Zs, TextBufferGeometry: ts, SphereGeometry: Xs, SphereBufferGeometry: ma, RingGeometry: ec, RingBufferGeometry: rs, PlaneGeometry: Ts, PlaneBufferGeometry: la, LatheGeometry: tc, LatheBufferGeometry: ns, ShapeGeometry: Ea, ShapeBufferGeometry: ya, ExtrudeGeometry: ga, ExtrudeBufferGeometry: So, EdgesGeometry: is, ConeGeometry: rc, ConeBufferGeometry: nc, CylinderGeometry: Ba, CylinderBufferGeometry: Yo, CircleGeometry: oc, CircleBufferGeometry: os, BoxGeometry: Ua, BoxBufferGeometry: ua });
      function va(Z) {
        Qn.call(this), this.type = "ShadowMaterial", this.color = new sn(0), this.transparent = !0, this.setValues(Z);
      }
      function as(Z) {
        uo.call(this, Z), this.type = "RawShaderMaterial";
      }
      function To(Z) {
        Qn.call(this), this.defines = { STANDARD: "" }, this.type = "MeshStandardMaterial", this.color = new sn(16777215), this.roughness = 0.5, this.metalness = 0.5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new sn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Uo, this.normalScale = new xr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Z);
      }
      function Ca(Z) {
        To.call(this), this.defines = { PHYSICAL: "" }, this.type = "MeshPhysicalMaterial", this.reflectivity = 0.5, this.clearCoat = 0, this.clearCoatRoughness = 0, this.setValues(Z);
      }
      function Eo(Z) {
        Qn.call(this), this.type = "MeshPhongMaterial", this.color = new sn(16777215), this.specular = new sn(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new sn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Uo, this.normalScale = new xr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Z);
      }
      function Ia(Z) {
        Eo.call(this), this.defines = { TOON: "" }, this.type = "MeshToonMaterial", this.gradientMap = null, this.setValues(Z);
      }
      function xa(Z) {
        Qn.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Uo, this.normalScale = new xr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Z);
      }
      function wa(Z) {
        Qn.call(this), this.type = "MeshLambertMaterial", this.color = new sn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new sn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Z);
      }
      function ba(Z) {
        ei.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(Z);
      }
      va.prototype = Object.create(Qn.prototype), va.prototype.constructor = va, va.prototype.isShadowMaterial = !0, va.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.color.copy(Z.color), this;
      }, as.prototype = Object.create(uo.prototype), as.prototype.constructor = as, as.prototype.isRawShaderMaterial = !0, To.prototype = Object.create(Qn.prototype), To.prototype.constructor = To, To.prototype.isMeshStandardMaterial = !0, To.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.defines = { STANDARD: "" }, this.color.copy(Z.color), this.roughness = Z.roughness, this.metalness = Z.metalness, this.map = Z.map, this.lightMap = Z.lightMap, this.lightMapIntensity = Z.lightMapIntensity, this.aoMap = Z.aoMap, this.aoMapIntensity = Z.aoMapIntensity, this.emissive.copy(Z.emissive), this.emissiveMap = Z.emissiveMap, this.emissiveIntensity = Z.emissiveIntensity, this.bumpMap = Z.bumpMap, this.bumpScale = Z.bumpScale, this.normalMap = Z.normalMap, this.normalMapType = Z.normalMapType, this.normalScale.copy(Z.normalScale), this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this.roughnessMap = Z.roughnessMap, this.metalnessMap = Z.metalnessMap, this.alphaMap = Z.alphaMap, this.envMap = Z.envMap, this.envMapIntensity = Z.envMapIntensity, this.refractionRatio = Z.refractionRatio, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.wireframeLinecap = Z.wireframeLinecap, this.wireframeLinejoin = Z.wireframeLinejoin, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this;
      }, Ca.prototype = Object.create(To.prototype), Ca.prototype.constructor = Ca, Ca.prototype.isMeshPhysicalMaterial = !0, Ca.prototype.copy = function(Z) {
        return To.prototype.copy.call(this, Z), this.defines = { PHYSICAL: "" }, this.reflectivity = Z.reflectivity, this.clearCoat = Z.clearCoat, this.clearCoatRoughness = Z.clearCoatRoughness, this;
      }, Eo.prototype = Object.create(Qn.prototype), Eo.prototype.constructor = Eo, Eo.prototype.isMeshPhongMaterial = !0, Eo.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.color.copy(Z.color), this.specular.copy(Z.specular), this.shininess = Z.shininess, this.map = Z.map, this.lightMap = Z.lightMap, this.lightMapIntensity = Z.lightMapIntensity, this.aoMap = Z.aoMap, this.aoMapIntensity = Z.aoMapIntensity, this.emissive.copy(Z.emissive), this.emissiveMap = Z.emissiveMap, this.emissiveIntensity = Z.emissiveIntensity, this.bumpMap = Z.bumpMap, this.bumpScale = Z.bumpScale, this.normalMap = Z.normalMap, this.normalMapType = Z.normalMapType, this.normalScale.copy(Z.normalScale), this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this.specularMap = Z.specularMap, this.alphaMap = Z.alphaMap, this.envMap = Z.envMap, this.combine = Z.combine, this.reflectivity = Z.reflectivity, this.refractionRatio = Z.refractionRatio, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.wireframeLinecap = Z.wireframeLinecap, this.wireframeLinejoin = Z.wireframeLinejoin, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this;
      }, Ia.prototype = Object.create(Eo.prototype), Ia.prototype.constructor = Ia, Ia.prototype.isMeshToonMaterial = !0, Ia.prototype.copy = function(Z) {
        return Eo.prototype.copy.call(this, Z), this.gradientMap = Z.gradientMap, this;
      }, xa.prototype = Object.create(Qn.prototype), xa.prototype.constructor = xa, xa.prototype.isMeshNormalMaterial = !0, xa.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.bumpMap = Z.bumpMap, this.bumpScale = Z.bumpScale, this.normalMap = Z.normalMap, this.normalMapType = Z.normalMapType, this.normalScale.copy(Z.normalScale), this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this;
      }, wa.prototype = Object.create(Qn.prototype), wa.prototype.constructor = wa, wa.prototype.isMeshLambertMaterial = !0, wa.prototype.copy = function(Z) {
        return Qn.prototype.copy.call(this, Z), this.color.copy(Z.color), this.map = Z.map, this.lightMap = Z.lightMap, this.lightMapIntensity = Z.lightMapIntensity, this.aoMap = Z.aoMap, this.aoMapIntensity = Z.aoMapIntensity, this.emissive.copy(Z.emissive), this.emissiveMap = Z.emissiveMap, this.emissiveIntensity = Z.emissiveIntensity, this.specularMap = Z.specularMap, this.alphaMap = Z.alphaMap, this.envMap = Z.envMap, this.combine = Z.combine, this.reflectivity = Z.reflectivity, this.refractionRatio = Z.refractionRatio, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.wireframeLinecap = Z.wireframeLinecap, this.wireframeLinejoin = Z.wireframeLinejoin, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this;
      }, ba.prototype = Object.create(ei.prototype), ba.prototype.constructor = ba, ba.prototype.isLineDashedMaterial = !0, ba.prototype.copy = function(Z) {
        return ei.prototype.copy.call(this, Z), this.scale = Z.scale, this.dashSize = Z.dashSize, this.gapSize = Z.gapSize, this;
      };
      var kl = Object.freeze({ ShadowMaterial: va, SpriteMaterial: Xo, RawShaderMaterial: as, ShaderMaterial: uo, PointsMaterial: mo, MeshPhysicalMaterial: Ca, MeshStandardMaterial: To, MeshPhongMaterial: Eo, MeshToonMaterial: Ia, MeshNormalMaterial: xa, MeshLambertMaterial: wa, MeshDepthMaterial: Ko, MeshDistanceMaterial: Zo, MeshBasicMaterial: io, LineDashedMaterial: ba, LineBasicMaterial: ei, Material: Qn }), _a = { enabled: !1, files: {}, add: function(Z, te) {
        this.enabled !== !1 && (this.files[Z] = te);
      }, get: function(Z) {
        if (this.enabled !== !1)
          return this.files[Z];
      }, remove: function(Z) {
        delete this.files[Z];
      }, clear: function() {
        this.files = {};
      } };
      function cA(Z, te, oe) {
        var se = this, Ae = !1, ue = 0, he = 0, pe = void 0;
        this.onStart = void 0, this.onLoad = Z, this.onProgress = te, this.onError = oe, this.itemStart = function(ve) {
          he++, Ae === !1 && se.onStart !== void 0 && se.onStart(ve, ue, he), Ae = !0;
        }, this.itemEnd = function(ve) {
          ue++, se.onProgress !== void 0 && se.onProgress(ve, ue, he), ue === he && (Ae = !1, se.onLoad !== void 0 && se.onLoad());
        }, this.itemError = function(ve) {
          se.onError !== void 0 && se.onError(ve);
        }, this.resolveURL = function(ve) {
          return pe ? pe(ve) : ve;
        }, this.setURLModifier = function(ve) {
          return pe = ve, this;
        };
      }
      var to = new cA(), Vo = {};
      function yo(Z) {
        this.manager = Z !== void 0 ? Z : to;
      }
      function gu(Z) {
        this.manager = Z !== void 0 ? Z : to, this._parser = null;
      }
      function AA(Z) {
        this.manager = Z !== void 0 ? Z : to, this._parser = null;
      }
      function ac(Z) {
        this.manager = Z !== void 0 ? Z : to;
      }
      function uA(Z) {
        this.manager = Z !== void 0 ? Z : to;
      }
      function Mc(Z) {
        this.manager = Z !== void 0 ? Z : to;
      }
      function ln() {
        this.type = "Curve", this.arcLengthDivisions = 200;
      }
      function ao(Z, te, oe, se, Ae, ue, he, pe) {
        ln.call(this), this.type = "EllipseCurve", this.aX = Z || 0, this.aY = te || 0, this.xRadius = oe || 1, this.yRadius = se || 1, this.aStartAngle = Ae || 0, this.aEndAngle = ue || 2 * Math.PI, this.aClockwise = he || !1, this.aRotation = pe || 0;
      }
      function ss(Z, te, oe, se, Ae, ue) {
        ao.call(this, Z, te, oe, oe, se, Ae, ue), this.type = "ArcCurve";
      }
      function lA() {
        var Z = 0, te = 0, oe = 0, se = 0;
        function Ae(ue, he, pe, ve) {
          Z = ue, te = pe, oe = -3 * ue + 3 * he - 2 * pe - ve, se = 2 * ue - 2 * he + pe + ve;
        }
        return { initCatmullRom: function(ue, he, pe, ve, xe) {
          Ae(he, pe, xe * (pe - ue), xe * (ve - he));
        }, initNonuniformCatmullRom: function(ue, he, pe, ve, xe, Me, Ne) {
          var Qe = (he - ue) / xe - (pe - ue) / (xe + Me) + (pe - he) / Me, Ue = (pe - he) / Me - (ve - he) / (Me + Ne) + (ve - pe) / Ne;
          Ae(he, pe, Qe *= Me, Ue *= Me);
        }, calc: function(ue) {
          var he = ue * ue;
          return Z + te * ue + oe * he + se * (he * ue);
        } };
      }
      Object.assign(yo.prototype, { load: function(Z, te, oe, se) {
        Z === void 0 && (Z = ""), this.path !== void 0 && (Z = this.path + Z), Z = this.manager.resolveURL(Z);
        var Ae = this, ue = _a.get(Z);
        if (ue !== void 0)
          return Ae.manager.itemStart(Z), setTimeout(function() {
            te && te(ue), Ae.manager.itemEnd(Z);
          }, 0), ue;
        if (Vo[Z] === void 0) {
          var he = Z.match(/^data:(.*?)(;base64)?,(.*)$/);
          if (he) {
            var pe = he[1], ve = !!he[2], xe = he[3];
            xe = window.decodeURIComponent(xe), ve && (xe = window.atob(xe));
            try {
              var Me, Ne = (this.responseType || "").toLowerCase();
              switch (Ne) {
                case "arraybuffer":
                case "blob":
                  for (var Qe = new Uint8Array(xe.length), Ue = 0; Ue < xe.length; Ue++)
                    Qe[Ue] = xe.charCodeAt(Ue);
                  Me = Ne === "blob" ? new Blob([Qe.buffer], { type: pe }) : Qe.buffer;
                  break;
                case "document":
                  var ze = new DOMParser();
                  Me = ze.parseFromString(xe, pe);
                  break;
                case "json":
                  Me = JSON.parse(xe);
                  break;
                default:
                  Me = xe;
              }
              window.setTimeout(function() {
                te && te(Me), Ae.manager.itemEnd(Z);
              }, 0);
            } catch (At) {
              window.setTimeout(function() {
                se && se(At), Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
              }, 0);
            }
          } else {
            Vo[Z] = [], Vo[Z].push({ onLoad: te, onProgress: oe, onError: se });
            var et = new XMLHttpRequest();
            for (var nt in et.open("GET", Z, !0), et.addEventListener("load", function(At) {
              var Et = this.response;
              _a.add(Z, Et);
              var st = Vo[Z];
              if (delete Vo[Z], this.status === 200 || this.status === 0) {
                this.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received.");
                for (var Mt = 0, Ft = st.length; Mt < Ft; Mt++)
                  (lt = st[Mt]).onLoad && lt.onLoad(Et);
                Ae.manager.itemEnd(Z);
              } else {
                for (Mt = 0, Ft = st.length; Mt < Ft; Mt++) {
                  var lt;
                  (lt = st[Mt]).onError && lt.onError(At);
                }
                Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
              }
            }, !1), et.addEventListener("progress", function(At) {
              for (var Et = Vo[Z], st = 0, Mt = Et.length; st < Mt; st++) {
                var Ft = Et[st];
                Ft.onProgress && Ft.onProgress(At);
              }
            }, !1), et.addEventListener("error", function(At) {
              var Et = Vo[Z];
              delete Vo[Z];
              for (var st = 0, Mt = Et.length; st < Mt; st++) {
                var Ft = Et[st];
                Ft.onError && Ft.onError(At);
              }
              Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
            }, !1), this.responseType !== void 0 && (et.responseType = this.responseType), this.withCredentials !== void 0 && (et.withCredentials = this.withCredentials), et.overrideMimeType && et.overrideMimeType(this.mimeType !== void 0 ? this.mimeType : "text/plain"), this.requestHeader)
              et.setRequestHeader(nt, this.requestHeader[nt]);
            et.send(null);
          }
          return Ae.manager.itemStart(Z), et;
        }
        Vo[Z].push({ onLoad: te, onProgress: oe, onError: se });
      }, setPath: function(Z) {
        return this.path = Z, this;
      }, setResponseType: function(Z) {
        return this.responseType = Z, this;
      }, setWithCredentials: function(Z) {
        return this.withCredentials = Z, this;
      }, setMimeType: function(Z) {
        return this.mimeType = Z, this;
      }, setRequestHeader: function(Z) {
        return this.requestHeader = Z, this;
      } }), Object.assign(gu.prototype, { load: function(Z, te, oe, se) {
        var Ae = this, ue = [], he = new Va();
        he.image = ue;
        var pe = new yo(this.manager);
        function ve(Qe) {
          pe.load(Z[Qe], function(Ue) {
            var ze = Ae._parser(Ue, !0);
            ue[Qe] = { width: ze.width, height: ze.height, format: ze.format, mipmaps: ze.mipmaps }, (xe += 1) === 6 && (ze.mipmapCount === 1 && (he.minFilter = on), he.format = ze.format, he.needsUpdate = !0, te && te(he));
          }, oe, se);
        }
        if (pe.setPath(this.path), pe.setResponseType("arraybuffer"), Array.isArray(Z))
          for (var xe = 0, Me = 0, Ne = Z.length; Me < Ne; ++Me)
            ve(Me);
        else
          pe.load(Z, function(Qe) {
            var Ue = Ae._parser(Qe, !0);
            if (Ue.isCubemap)
              for (var ze = Ue.mipmaps.length / Ue.mipmapCount, et = 0; et < ze; et++) {
                ue[et] = { mipmaps: [] };
                for (var nt = 0; nt < Ue.mipmapCount; nt++)
                  ue[et].mipmaps.push(Ue.mipmaps[et * Ue.mipmapCount + nt]), ue[et].format = Ue.format, ue[et].width = Ue.width, ue[et].height = Ue.height;
              }
            else
              he.image.width = Ue.width, he.image.height = Ue.height, he.mipmaps = Ue.mipmaps;
            Ue.mipmapCount === 1 && (he.minFilter = on), he.format = Ue.format, he.needsUpdate = !0, te && te(he);
          }, oe, se);
        return he;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }), Object.assign(AA.prototype, { load: function(Z, te, oe, se) {
        var Ae = this, ue = new oa(), he = new yo(this.manager);
        return he.setResponseType("arraybuffer"), he.load(Z, function(pe) {
          var ve = Ae._parser(pe);
          ve && (ve.image !== void 0 ? ue.image = ve.image : ve.data !== void 0 && (ue.image.width = ve.width, ue.image.height = ve.height, ue.image.data = ve.data), ue.wrapS = ve.wrapS !== void 0 ? ve.wrapS : Cr, ue.wrapT = ve.wrapT !== void 0 ? ve.wrapT : Cr, ue.magFilter = ve.magFilter !== void 0 ? ve.magFilter : on, ue.minFilter = ve.minFilter !== void 0 ? ve.minFilter : $n, ue.anisotropy = ve.anisotropy !== void 0 ? ve.anisotropy : 1, ve.format !== void 0 && (ue.format = ve.format), ve.type !== void 0 && (ue.type = ve.type), ve.mipmaps !== void 0 && (ue.mipmaps = ve.mipmaps), ve.mipmapCount === 1 && (ue.minFilter = on), ue.needsUpdate = !0, te && te(ue, ve));
        }, oe, se), ue;
      } }), Object.assign(ac.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        Z === void 0 && (Z = ""), this.path !== void 0 && (Z = this.path + Z), Z = this.manager.resolveURL(Z);
        var Ae = this, ue = _a.get(Z);
        if (ue !== void 0)
          return Ae.manager.itemStart(Z), setTimeout(function() {
            te && te(ue), Ae.manager.itemEnd(Z);
          }, 0), ue;
        var he = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
        function pe() {
          he.removeEventListener("load", pe, !1), he.removeEventListener("error", ve, !1), _a.add(Z, this), te && te(this), Ae.manager.itemEnd(Z);
        }
        function ve(xe) {
          he.removeEventListener("load", pe, !1), he.removeEventListener("error", ve, !1), se && se(xe), Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
        }
        return he.addEventListener("load", pe, !1), he.addEventListener("error", ve, !1), Z.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (he.crossOrigin = this.crossOrigin), Ae.manager.itemStart(Z), he.src = Z, he;
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }), Object.assign(uA.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        var Ae = new $o(), ue = new ac(this.manager);
        ue.setCrossOrigin(this.crossOrigin), ue.setPath(this.path);
        var he = 0;
        function pe(xe) {
          ue.load(Z[xe], function(Me) {
            Ae.images[xe] = Me, ++he === 6 && (Ae.needsUpdate = !0, te && te(Ae));
          }, void 0, se);
        }
        for (var ve = 0; ve < Z.length; ++ve)
          pe(ve);
        return Ae;
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }), Object.assign(Mc.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        var Ae = new ii(), ue = new ac(this.manager);
        return ue.setCrossOrigin(this.crossOrigin), ue.setPath(this.path), ue.load(Z, function(he) {
          Ae.image = he;
          var pe = Z.search(/\.(jpg|jpeg)$/) > 0 || Z.search(/^data\:image\/jpeg/) === 0;
          Ae.format = pe ? Rt : rr, Ae.needsUpdate = !0, te !== void 0 && te(Ae);
        }, oe, se), Ae;
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }), Object.assign(ln.prototype, { getPoint: function() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
      }, getPointAt: function(Z, te) {
        var oe = this.getUtoTmapping(Z);
        return this.getPoint(oe, te);
      }, getPoints: function(Z) {
        Z === void 0 && (Z = 5);
        for (var te = [], oe = 0; oe <= Z; oe++)
          te.push(this.getPoint(oe / Z));
        return te;
      }, getSpacedPoints: function(Z) {
        Z === void 0 && (Z = 5);
        for (var te = [], oe = 0; oe <= Z; oe++)
          te.push(this.getPointAt(oe / Z));
        return te;
      }, getLength: function() {
        var Z = this.getLengths();
        return Z[Z.length - 1];
      }, getLengths: function(Z) {
        if (Z === void 0 && (Z = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === Z + 1 && !this.needsUpdate)
          return this.cacheArcLengths;
        this.needsUpdate = !1;
        var te, oe, se = [], Ae = this.getPoint(0), ue = 0;
        for (se.push(0), oe = 1; oe <= Z; oe++)
          ue += (te = this.getPoint(oe / Z)).distanceTo(Ae), se.push(ue), Ae = te;
        return this.cacheArcLengths = se, se;
      }, updateArcLengths: function() {
        this.needsUpdate = !0, this.getLengths();
      }, getUtoTmapping: function(Z, te) {
        var oe, se = this.getLengths(), Ae = 0, ue = se.length;
        oe = te || Z * se[ue - 1];
        for (var he, pe = 0, ve = ue - 1; pe <= ve; )
          if ((he = se[Ae = Math.floor(pe + (ve - pe) / 2)] - oe) < 0)
            pe = Ae + 1;
          else {
            if (!(he > 0)) {
              ve = Ae;
              break;
            }
            ve = Ae - 1;
          }
        if (se[Ae = ve] === oe)
          return Ae / (ue - 1);
        var xe = se[Ae];
        return (Ae + (oe - xe) / (se[Ae + 1] - xe)) / (ue - 1);
      }, getTangent: function(Z) {
        var te = Z - 1e-4, oe = Z + 1e-4;
        te < 0 && (te = 0), oe > 1 && (oe = 1);
        var se = this.getPoint(te);
        return this.getPoint(oe).clone().sub(se).normalize();
      }, getTangentAt: function(Z) {
        var te = this.getUtoTmapping(Z);
        return this.getTangent(te);
      }, computeFrenetFrames: function(Z, te) {
        var oe, se, Ae, ue = new mt(), he = [], pe = [], ve = [], xe = new mt(), Me = new pn();
        for (oe = 0; oe <= Z; oe++)
          se = oe / Z, he[oe] = this.getTangentAt(se), he[oe].normalize();
        pe[0] = new mt(), ve[0] = new mt();
        var Ne = Number.MAX_VALUE, Qe = Math.abs(he[0].x), Ue = Math.abs(he[0].y), ze = Math.abs(he[0].z);
        for (Qe <= Ne && (Ne = Qe, ue.set(1, 0, 0)), Ue <= Ne && (Ne = Ue, ue.set(0, 1, 0)), ze <= Ne && ue.set(0, 0, 1), xe.crossVectors(he[0], ue).normalize(), pe[0].crossVectors(he[0], xe), ve[0].crossVectors(he[0], pe[0]), oe = 1; oe <= Z; oe++)
          pe[oe] = pe[oe - 1].clone(), ve[oe] = ve[oe - 1].clone(), xe.crossVectors(he[oe - 1], he[oe]), xe.length() > Number.EPSILON && (xe.normalize(), Ae = Math.acos(bn.clamp(he[oe - 1].dot(he[oe]), -1, 1)), pe[oe].applyMatrix4(Me.makeRotationAxis(xe, Ae))), ve[oe].crossVectors(he[oe], pe[oe]);
        if (te === !0)
          for (Ae = Math.acos(bn.clamp(pe[0].dot(pe[Z]), -1, 1)), Ae /= Z, he[0].dot(xe.crossVectors(pe[0], pe[Z])) > 0 && (Ae = -Ae), oe = 1; oe <= Z; oe++)
            pe[oe].applyMatrix4(Me.makeRotationAxis(he[oe], Ae * oe)), ve[oe].crossVectors(he[oe], pe[oe]);
        return { tangents: he, normals: pe, binormals: ve };
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.arcLengthDivisions = Z.arcLengthDivisions, this;
      }, toJSON: function() {
        var Z = { metadata: { version: 4.5, type: "Curve", generator: "Curve.toJSON" } };
        return Z.arcLengthDivisions = this.arcLengthDivisions, Z.type = this.type, Z;
      }, fromJSON: function(Z) {
        return this.arcLengthDivisions = Z.arcLengthDivisions, this;
      } }), ao.prototype = Object.create(ln.prototype), ao.prototype.constructor = ao, ao.prototype.isEllipseCurve = !0, ao.prototype.getPoint = function(Z, te) {
        for (var oe = te || new xr(), se = 2 * Math.PI, Ae = this.aEndAngle - this.aStartAngle, ue = Math.abs(Ae) < Number.EPSILON; Ae < 0; )
          Ae += se;
        for (; Ae > se; )
          Ae -= se;
        Ae < Number.EPSILON && (Ae = ue ? 0 : se), this.aClockwise !== !0 || ue || (Ae === se ? Ae = -se : Ae -= se);
        var he = this.aStartAngle + Z * Ae, pe = this.aX + this.xRadius * Math.cos(he), ve = this.aY + this.yRadius * Math.sin(he);
        if (this.aRotation !== 0) {
          var xe = Math.cos(this.aRotation), Me = Math.sin(this.aRotation), Ne = pe - this.aX, Qe = ve - this.aY;
          pe = Ne * xe - Qe * Me + this.aX, ve = Ne * Me + Qe * xe + this.aY;
        }
        return oe.set(pe, ve);
      }, ao.prototype.copy = function(Z) {
        return ln.prototype.copy.call(this, Z), this.aX = Z.aX, this.aY = Z.aY, this.xRadius = Z.xRadius, this.yRadius = Z.yRadius, this.aStartAngle = Z.aStartAngle, this.aEndAngle = Z.aEndAngle, this.aClockwise = Z.aClockwise, this.aRotation = Z.aRotation, this;
      }, ao.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        return Z.aX = this.aX, Z.aY = this.aY, Z.xRadius = this.xRadius, Z.yRadius = this.yRadius, Z.aStartAngle = this.aStartAngle, Z.aEndAngle = this.aEndAngle, Z.aClockwise = this.aClockwise, Z.aRotation = this.aRotation, Z;
      }, ao.prototype.fromJSON = function(Z) {
        return ln.prototype.fromJSON.call(this, Z), this.aX = Z.aX, this.aY = Z.aY, this.xRadius = Z.xRadius, this.yRadius = Z.yRadius, this.aStartAngle = Z.aStartAngle, this.aEndAngle = Z.aEndAngle, this.aClockwise = Z.aClockwise, this.aRotation = Z.aRotation, this;
      }, ss.prototype = Object.create(ao.prototype), ss.prototype.constructor = ss, ss.prototype.isArcCurve = !0;
      var Nc = new mt(), dA = new lA(), hA = new lA(), fA = new lA();
      function Ui(Z, te, oe, se) {
        ln.call(this), this.type = "CatmullRomCurve3", this.points = Z || [], this.closed = te || !1, this.curveType = oe || "centripetal", this.tension = se || 0.5;
      }
      function mu(Z, te, oe, se, Ae) {
        var ue = 0.5 * (se - te), he = 0.5 * (Ae - oe), pe = Z * Z;
        return (2 * oe - 2 * se + ue + he) * (Z * pe) + (-3 * oe + 3 * se - 2 * ue - he) * pe + ue * Z + oe;
      }
      function sc(Z, te, oe, se) {
        return function(Ae, ue) {
          var he = 1 - Ae;
          return he * he * ue;
        }(Z, te) + function(Ae, ue) {
          return 2 * (1 - Ae) * Ae * ue;
        }(Z, oe) + function(Ae, ue) {
          return Ae * Ae * ue;
        }(Z, se);
      }
      function cc(Z, te, oe, se, Ae) {
        return function(ue, he) {
          var pe = 1 - ue;
          return pe * pe * pe * he;
        }(Z, te) + function(ue, he) {
          var pe = 1 - ue;
          return 3 * pe * pe * ue * he;
        }(Z, oe) + function(ue, he) {
          return 3 * (1 - ue) * ue * ue * he;
        }(Z, se) + function(ue, he) {
          return ue * ue * ue * he;
        }(Z, Ae);
      }
      function Bo(Z, te, oe, se) {
        ln.call(this), this.type = "CubicBezierCurve", this.v0 = Z || new xr(), this.v1 = te || new xr(), this.v2 = oe || new xr(), this.v3 = se || new xr();
      }
      function Ro(Z, te, oe, se) {
        ln.call(this), this.type = "CubicBezierCurve3", this.v0 = Z || new mt(), this.v1 = te || new mt(), this.v2 = oe || new mt(), this.v3 = se || new mt();
      }
      function ro(Z, te) {
        ln.call(this), this.type = "LineCurve", this.v1 = Z || new xr(), this.v2 = te || new xr();
      }
      function vo(Z, te) {
        ln.call(this), this.type = "LineCurve3", this.v1 = Z || new mt(), this.v2 = te || new mt();
      }
      function Co(Z, te, oe) {
        ln.call(this), this.type = "QuadraticBezierCurve", this.v0 = Z || new xr(), this.v1 = te || new xr(), this.v2 = oe || new xr();
      }
      function Mo(Z, te, oe) {
        ln.call(this), this.type = "QuadraticBezierCurve3", this.v0 = Z || new mt(), this.v1 = te || new mt(), this.v2 = oe || new mt();
      }
      function Io(Z) {
        ln.call(this), this.type = "SplineCurve", this.points = Z || [];
      }
      Ui.prototype = Object.create(ln.prototype), Ui.prototype.constructor = Ui, Ui.prototype.isCatmullRomCurve3 = !0, Ui.prototype.getPoint = function(Z, te) {
        var oe, se, Ae, ue, he = te || new mt(), pe = this.points, ve = pe.length, xe = (ve - (this.closed ? 0 : 1)) * Z, Me = Math.floor(xe), Ne = xe - Me;
        if (this.closed ? Me += Me > 0 ? 0 : (Math.floor(Math.abs(Me) / ve) + 1) * ve : Ne === 0 && Me === ve - 1 && (Me = ve - 2, Ne = 1), this.closed || Me > 0 ? oe = pe[(Me - 1) % ve] : (Nc.subVectors(pe[0], pe[1]).add(pe[0]), oe = Nc), se = pe[Me % ve], Ae = pe[(Me + 1) % ve], this.closed || Me + 2 < ve ? ue = pe[(Me + 2) % ve] : (Nc.subVectors(pe[ve - 1], pe[ve - 2]).add(pe[ve - 1]), ue = Nc), this.curveType === "centripetal" || this.curveType === "chordal") {
          var Qe = this.curveType === "chordal" ? 0.5 : 0.25, Ue = Math.pow(oe.distanceToSquared(se), Qe), ze = Math.pow(se.distanceToSquared(Ae), Qe), et = Math.pow(Ae.distanceToSquared(ue), Qe);
          ze < 1e-4 && (ze = 1), Ue < 1e-4 && (Ue = ze), et < 1e-4 && (et = ze), dA.initNonuniformCatmullRom(oe.x, se.x, Ae.x, ue.x, Ue, ze, et), hA.initNonuniformCatmullRom(oe.y, se.y, Ae.y, ue.y, Ue, ze, et), fA.initNonuniformCatmullRom(oe.z, se.z, Ae.z, ue.z, Ue, ze, et);
        } else
          this.curveType === "catmullrom" && (dA.initCatmullRom(oe.x, se.x, Ae.x, ue.x, this.tension), hA.initCatmullRom(oe.y, se.y, Ae.y, ue.y, this.tension), fA.initCatmullRom(oe.z, se.z, Ae.z, ue.z, this.tension));
        return he.set(dA.calc(Ne), hA.calc(Ne), fA.calc(Ne)), he;
      }, Ui.prototype.copy = function(Z) {
        ln.prototype.copy.call(this, Z), this.points = [];
        for (var te = 0, oe = Z.points.length; te < oe; te++) {
          var se = Z.points[te];
          this.points.push(se.clone());
        }
        return this.closed = Z.closed, this.curveType = Z.curveType, this.tension = Z.tension, this;
      }, Ui.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        Z.points = [];
        for (var te = 0, oe = this.points.length; te < oe; te++) {
          var se = this.points[te];
          Z.points.push(se.toArray());
        }
        return Z.closed = this.closed, Z.curveType = this.curveType, Z.tension = this.tension, Z;
      }, Ui.prototype.fromJSON = function(Z) {
        ln.prototype.fromJSON.call(this, Z), this.points = [];
        for (var te = 0, oe = Z.points.length; te < oe; te++) {
          var se = Z.points[te];
          this.points.push(new mt().fromArray(se));
        }
        return this.closed = Z.closed, this.curveType = Z.curveType, this.tension = Z.tension, this;
      }, Bo.prototype = Object.create(ln.prototype), Bo.prototype.constructor = Bo, Bo.prototype.isCubicBezierCurve = !0, Bo.prototype.getPoint = function(Z, te) {
        var oe = te || new xr(), se = this.v0, Ae = this.v1, ue = this.v2, he = this.v3;
        return oe.set(cc(Z, se.x, Ae.x, ue.x, he.x), cc(Z, se.y, Ae.y, ue.y, he.y)), oe;
      }, Bo.prototype.copy = function(Z) {
        return ln.prototype.copy.call(this, Z), this.v0.copy(Z.v0), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this.v3.copy(Z.v3), this;
      }, Bo.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        return Z.v0 = this.v0.toArray(), Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z.v3 = this.v3.toArray(), Z;
      }, Bo.prototype.fromJSON = function(Z) {
        return ln.prototype.fromJSON.call(this, Z), this.v0.fromArray(Z.v0), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this.v3.fromArray(Z.v3), this;
      }, Ro.prototype = Object.create(ln.prototype), Ro.prototype.constructor = Ro, Ro.prototype.isCubicBezierCurve3 = !0, Ro.prototype.getPoint = function(Z, te) {
        var oe = te || new mt(), se = this.v0, Ae = this.v1, ue = this.v2, he = this.v3;
        return oe.set(cc(Z, se.x, Ae.x, ue.x, he.x), cc(Z, se.y, Ae.y, ue.y, he.y), cc(Z, se.z, Ae.z, ue.z, he.z)), oe;
      }, Ro.prototype.copy = function(Z) {
        return ln.prototype.copy.call(this, Z), this.v0.copy(Z.v0), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this.v3.copy(Z.v3), this;
      }, Ro.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        return Z.v0 = this.v0.toArray(), Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z.v3 = this.v3.toArray(), Z;
      }, Ro.prototype.fromJSON = function(Z) {
        return ln.prototype.fromJSON.call(this, Z), this.v0.fromArray(Z.v0), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this.v3.fromArray(Z.v3), this;
      }, ro.prototype = Object.create(ln.prototype), ro.prototype.constructor = ro, ro.prototype.isLineCurve = !0, ro.prototype.getPoint = function(Z, te) {
        var oe = te || new xr();
        return Z === 1 ? oe.copy(this.v2) : (oe.copy(this.v2).sub(this.v1), oe.multiplyScalar(Z).add(this.v1)), oe;
      }, ro.prototype.getPointAt = function(Z, te) {
        return this.getPoint(Z, te);
      }, ro.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize();
      }, ro.prototype.copy = function(Z) {
        return ln.prototype.copy.call(this, Z), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this;
      }, ro.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        return Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z;
      }, ro.prototype.fromJSON = function(Z) {
        return ln.prototype.fromJSON.call(this, Z), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this;
      }, vo.prototype = Object.create(ln.prototype), vo.prototype.constructor = vo, vo.prototype.isLineCurve3 = !0, vo.prototype.getPoint = function(Z, te) {
        var oe = te || new mt();
        return Z === 1 ? oe.copy(this.v2) : (oe.copy(this.v2).sub(this.v1), oe.multiplyScalar(Z).add(this.v1)), oe;
      }, vo.prototype.getPointAt = function(Z, te) {
        return this.getPoint(Z, te);
      }, vo.prototype.copy = function(Z) {
        return ln.prototype.copy.call(this, Z), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this;
      }, vo.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        return Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z;
      }, vo.prototype.fromJSON = function(Z) {
        return ln.prototype.fromJSON.call(this, Z), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this;
      }, Co.prototype = Object.create(ln.prototype), Co.prototype.constructor = Co, Co.prototype.isQuadraticBezierCurve = !0, Co.prototype.getPoint = function(Z, te) {
        var oe = te || new xr(), se = this.v0, Ae = this.v1, ue = this.v2;
        return oe.set(sc(Z, se.x, Ae.x, ue.x), sc(Z, se.y, Ae.y, ue.y)), oe;
      }, Co.prototype.copy = function(Z) {
        return ln.prototype.copy.call(this, Z), this.v0.copy(Z.v0), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this;
      }, Co.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        return Z.v0 = this.v0.toArray(), Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z;
      }, Co.prototype.fromJSON = function(Z) {
        return ln.prototype.fromJSON.call(this, Z), this.v0.fromArray(Z.v0), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this;
      }, Mo.prototype = Object.create(ln.prototype), Mo.prototype.constructor = Mo, Mo.prototype.isQuadraticBezierCurve3 = !0, Mo.prototype.getPoint = function(Z, te) {
        var oe = te || new mt(), se = this.v0, Ae = this.v1, ue = this.v2;
        return oe.set(sc(Z, se.x, Ae.x, ue.x), sc(Z, se.y, Ae.y, ue.y), sc(Z, se.z, Ae.z, ue.z)), oe;
      }, Mo.prototype.copy = function(Z) {
        return ln.prototype.copy.call(this, Z), this.v0.copy(Z.v0), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this;
      }, Mo.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        return Z.v0 = this.v0.toArray(), Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z;
      }, Mo.prototype.fromJSON = function(Z) {
        return ln.prototype.fromJSON.call(this, Z), this.v0.fromArray(Z.v0), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this;
      }, Io.prototype = Object.create(ln.prototype), Io.prototype.constructor = Io, Io.prototype.isSplineCurve = !0, Io.prototype.getPoint = function(Z, te) {
        var oe = te || new xr(), se = this.points, Ae = (se.length - 1) * Z, ue = Math.floor(Ae), he = Ae - ue, pe = se[ue === 0 ? ue : ue - 1], ve = se[ue], xe = se[ue > se.length - 2 ? se.length - 1 : ue + 1], Me = se[ue > se.length - 3 ? se.length - 1 : ue + 2];
        return oe.set(mu(he, pe.x, ve.x, xe.x, Me.x), mu(he, pe.y, ve.y, xe.y, Me.y)), oe;
      }, Io.prototype.copy = function(Z) {
        ln.prototype.copy.call(this, Z), this.points = [];
        for (var te = 0, oe = Z.points.length; te < oe; te++) {
          var se = Z.points[te];
          this.points.push(se.clone());
        }
        return this;
      }, Io.prototype.toJSON = function() {
        var Z = ln.prototype.toJSON.call(this);
        Z.points = [];
        for (var te = 0, oe = this.points.length; te < oe; te++) {
          var se = this.points[te];
          Z.points.push(se.toArray());
        }
        return Z;
      }, Io.prototype.fromJSON = function(Z) {
        ln.prototype.fromJSON.call(this, Z), this.points = [];
        for (var te = 0, oe = Z.points.length; te < oe; te++) {
          var se = Z.points[te];
          this.points.push(new xr().fromArray(se));
        }
        return this;
      };
      var Eu = Object.freeze({ ArcCurve: ss, CatmullRomCurve3: Ui, CubicBezierCurve: Bo, CubicBezierCurve3: Ro, EllipseCurve: ao, LineCurve: ro, LineCurve3: vo, QuadraticBezierCurve: Co, QuadraticBezierCurve3: Mo, SplineCurve: Io });
      function Lo() {
        ln.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = !1;
      }
      function xo(Z) {
        Lo.call(this), this.type = "Path", this.currentPoint = new xr(), Z && this.setFromPoints(Z);
      }
      function ea(Z) {
        xo.call(this, Z), this.uuid = bn.generateUUID(), this.type = "Shape", this.holes = [];
      }
      function ui(Z, te) {
        Dr.call(this), this.type = "Light", this.color = new sn(Z), this.intensity = te !== void 0 ? te : 1, this.receiveShadow = void 0;
      }
      function kc(Z, te, oe) {
        ui.call(this, Z, oe), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(Dr.DefaultUp), this.updateMatrix(), this.groundColor = new sn(te);
      }
      function Qa(Z) {
        this.camera = Z, this.bias = 0, this.radius = 1, this.mapSize = new xr(512, 512), this.map = null, this.matrix = new pn();
      }
      function Fc() {
        Qa.call(this, new di(50, 1, 0.5, 500));
      }
      function Gc(Z, te, oe, se, Ae, ue) {
        ui.call(this, Z, te), this.type = "SpotLight", this.position.copy(Dr.DefaultUp), this.updateMatrix(), this.target = new Dr(), Object.defineProperty(this, "power", { get: function() {
          return this.intensity * Math.PI;
        }, set: function(he) {
          this.intensity = he / Math.PI;
        } }), this.distance = oe !== void 0 ? oe : 0, this.angle = se !== void 0 ? se : Math.PI / 3, this.penumbra = Ae !== void 0 ? Ae : 0, this.decay = ue !== void 0 ? ue : 1, this.shadow = new Fc();
      }
      function Oc(Z, te, oe, se) {
        ui.call(this, Z, te), this.type = "PointLight", Object.defineProperty(this, "power", { get: function() {
          return 4 * this.intensity * Math.PI;
        }, set: function(Ae) {
          this.intensity = Ae / (4 * Math.PI);
        } }), this.distance = oe !== void 0 ? oe : 0, this.decay = se !== void 0 ? se : 1, this.shadow = new Qa(new di(90, 1, 0.5, 500));
      }
      function Pc() {
        Qa.call(this, new Pa(-5, 5, 5, -5, 0.5, 500));
      }
      function Uc(Z, te) {
        ui.call(this, Z, te), this.type = "DirectionalLight", this.position.copy(Dr.DefaultUp), this.updateMatrix(), this.target = new Dr(), this.shadow = new Pc();
      }
      function Hc(Z, te) {
        ui.call(this, Z, te), this.type = "AmbientLight", this.castShadow = void 0;
      }
      function qc(Z, te, oe, se) {
        ui.call(this, Z, te), this.type = "RectAreaLight", this.width = oe !== void 0 ? oe : 10, this.height = se !== void 0 ? se : 10;
      }
      Lo.prototype = Object.assign(Object.create(ln.prototype), { constructor: Lo, add: function(Z) {
        this.curves.push(Z);
      }, closePath: function() {
        var Z = this.curves[0].getPoint(0), te = this.curves[this.curves.length - 1].getPoint(1);
        Z.equals(te) || this.curves.push(new ro(te, Z));
      }, getPoint: function(Z) {
        for (var te = Z * this.getLength(), oe = this.getCurveLengths(), se = 0; se < oe.length; ) {
          if (oe[se] >= te) {
            var Ae = oe[se] - te, ue = this.curves[se], he = ue.getLength(), pe = he === 0 ? 0 : 1 - Ae / he;
            return ue.getPointAt(pe);
          }
          se++;
        }
        return null;
      }, getLength: function() {
        var Z = this.getCurveLengths();
        return Z[Z.length - 1];
      }, updateArcLengths: function() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
      }, getCurveLengths: function() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
          return this.cacheLengths;
        for (var Z = [], te = 0, oe = 0, se = this.curves.length; oe < se; oe++)
          te += this.curves[oe].getLength(), Z.push(te);
        return this.cacheLengths = Z, Z;
      }, getSpacedPoints: function(Z) {
        Z === void 0 && (Z = 40);
        for (var te = [], oe = 0; oe <= Z; oe++)
          te.push(this.getPoint(oe / Z));
        return this.autoClose && te.push(te[0]), te;
      }, getPoints: function(Z) {
        Z = Z || 12;
        for (var te, oe = [], se = 0, Ae = this.curves; se < Ae.length; se++)
          for (var ue = Ae[se], he = ue && ue.isEllipseCurve ? 2 * Z : ue && (ue.isLineCurve || ue.isLineCurve3) ? 1 : ue && ue.isSplineCurve ? Z * ue.points.length : Z, pe = ue.getPoints(he), ve = 0; ve < pe.length; ve++) {
            var xe = pe[ve];
            te && te.equals(xe) || (oe.push(xe), te = xe);
          }
        return this.autoClose && oe.length > 1 && !oe[oe.length - 1].equals(oe[0]) && oe.push(oe[0]), oe;
      }, copy: function(Z) {
        ln.prototype.copy.call(this, Z), this.curves = [];
        for (var te = 0, oe = Z.curves.length; te < oe; te++) {
          var se = Z.curves[te];
          this.curves.push(se.clone());
        }
        return this.autoClose = Z.autoClose, this;
      }, toJSON: function() {
        var Z = ln.prototype.toJSON.call(this);
        Z.autoClose = this.autoClose, Z.curves = [];
        for (var te = 0, oe = this.curves.length; te < oe; te++) {
          var se = this.curves[te];
          Z.curves.push(se.toJSON());
        }
        return Z;
      }, fromJSON: function(Z) {
        ln.prototype.fromJSON.call(this, Z), this.autoClose = Z.autoClose, this.curves = [];
        for (var te = 0, oe = Z.curves.length; te < oe; te++) {
          var se = Z.curves[te];
          this.curves.push(new Eu[se.type]().fromJSON(se));
        }
        return this;
      } }), xo.prototype = Object.assign(Object.create(Lo.prototype), { constructor: xo, setFromPoints: function(Z) {
        this.moveTo(Z[0].x, Z[0].y);
        for (var te = 1, oe = Z.length; te < oe; te++)
          this.lineTo(Z[te].x, Z[te].y);
      }, moveTo: function(Z, te) {
        this.currentPoint.set(Z, te);
      }, lineTo: function(Z, te) {
        var oe = new ro(this.currentPoint.clone(), new xr(Z, te));
        this.curves.push(oe), this.currentPoint.set(Z, te);
      }, quadraticCurveTo: function(Z, te, oe, se) {
        var Ae = new Co(this.currentPoint.clone(), new xr(Z, te), new xr(oe, se));
        this.curves.push(Ae), this.currentPoint.set(oe, se);
      }, bezierCurveTo: function(Z, te, oe, se, Ae, ue) {
        var he = new Bo(this.currentPoint.clone(), new xr(Z, te), new xr(oe, se), new xr(Ae, ue));
        this.curves.push(he), this.currentPoint.set(Ae, ue);
      }, splineThru: function(Z) {
        var te = new Io([this.currentPoint.clone()].concat(Z));
        this.curves.push(te), this.currentPoint.copy(Z[Z.length - 1]);
      }, arc: function(Z, te, oe, se, Ae, ue) {
        var he = this.currentPoint.x, pe = this.currentPoint.y;
        this.absarc(Z + he, te + pe, oe, se, Ae, ue);
      }, absarc: function(Z, te, oe, se, Ae, ue) {
        this.absellipse(Z, te, oe, oe, se, Ae, ue);
      }, ellipse: function(Z, te, oe, se, Ae, ue, he, pe) {
        var ve = this.currentPoint.x, xe = this.currentPoint.y;
        this.absellipse(Z + ve, te + xe, oe, se, Ae, ue, he, pe);
      }, absellipse: function(Z, te, oe, se, Ae, ue, he, pe) {
        var ve = new ao(Z, te, oe, se, Ae, ue, he, pe);
        if (this.curves.length > 0) {
          var xe = ve.getPoint(0);
          xe.equals(this.currentPoint) || this.lineTo(xe.x, xe.y);
        }
        this.curves.push(ve);
        var Me = ve.getPoint(1);
        this.currentPoint.copy(Me);
      }, copy: function(Z) {
        return Lo.prototype.copy.call(this, Z), this.currentPoint.copy(Z.currentPoint), this;
      }, toJSON: function() {
        var Z = Lo.prototype.toJSON.call(this);
        return Z.currentPoint = this.currentPoint.toArray(), Z;
      }, fromJSON: function(Z) {
        return Lo.prototype.fromJSON.call(this, Z), this.currentPoint.fromArray(Z.currentPoint), this;
      } }), ea.prototype = Object.assign(Object.create(xo.prototype), { constructor: ea, getPointsHoles: function(Z) {
        for (var te = [], oe = 0, se = this.holes.length; oe < se; oe++)
          te[oe] = this.holes[oe].getPoints(Z);
        return te;
      }, extractPoints: function(Z) {
        return { shape: this.getPoints(Z), holes: this.getPointsHoles(Z) };
      }, copy: function(Z) {
        xo.prototype.copy.call(this, Z), this.holes = [];
        for (var te = 0, oe = Z.holes.length; te < oe; te++) {
          var se = Z.holes[te];
          this.holes.push(se.clone());
        }
        return this;
      }, toJSON: function() {
        var Z = xo.prototype.toJSON.call(this);
        Z.uuid = this.uuid, Z.holes = [];
        for (var te = 0, oe = this.holes.length; te < oe; te++) {
          var se = this.holes[te];
          Z.holes.push(se.toJSON());
        }
        return Z;
      }, fromJSON: function(Z) {
        xo.prototype.fromJSON.call(this, Z), this.uuid = Z.uuid, this.holes = [];
        for (var te = 0, oe = Z.holes.length; te < oe; te++) {
          var se = Z.holes[te];
          this.holes.push(new xo().fromJSON(se));
        }
        return this;
      } }), ui.prototype = Object.assign(Object.create(Dr.prototype), { constructor: ui, isLight: !0, copy: function(Z) {
        return Dr.prototype.copy.call(this, Z), this.color.copy(Z.color), this.intensity = Z.intensity, this;
      }, toJSON: function(Z) {
        var te = Dr.prototype.toJSON.call(this, Z);
        return te.object.color = this.color.getHex(), te.object.intensity = this.intensity, this.groundColor !== void 0 && (te.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (te.object.distance = this.distance), this.angle !== void 0 && (te.object.angle = this.angle), this.decay !== void 0 && (te.object.decay = this.decay), this.penumbra !== void 0 && (te.object.penumbra = this.penumbra), this.shadow !== void 0 && (te.object.shadow = this.shadow.toJSON()), te;
      } }), kc.prototype = Object.assign(Object.create(ui.prototype), { constructor: kc, isHemisphereLight: !0, copy: function(Z) {
        return ui.prototype.copy.call(this, Z), this.groundColor.copy(Z.groundColor), this;
      } }), Object.assign(Qa.prototype, { copy: function(Z) {
        return this.camera = Z.camera.clone(), this.bias = Z.bias, this.radius = Z.radius, this.mapSize.copy(Z.mapSize), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, toJSON: function() {
        var Z = {};
        return this.bias !== 0 && (Z.bias = this.bias), this.radius !== 1 && (Z.radius = this.radius), this.mapSize.x === 512 && this.mapSize.y === 512 || (Z.mapSize = this.mapSize.toArray()), Z.camera = this.camera.toJSON(!1).object, delete Z.camera.matrix, Z;
      } }), Fc.prototype = Object.assign(Object.create(Qa.prototype), { constructor: Fc, isSpotLightShadow: !0, update: function(Z) {
        var te = this.camera, oe = 2 * bn.RAD2DEG * Z.angle, se = this.mapSize.width / this.mapSize.height, Ae = Z.distance || te.far;
        oe === te.fov && se === te.aspect && Ae === te.far || (te.fov = oe, te.aspect = se, te.far = Ae, te.updateProjectionMatrix());
      } }), Gc.prototype = Object.assign(Object.create(ui.prototype), { constructor: Gc, isSpotLight: !0, copy: function(Z) {
        return ui.prototype.copy.call(this, Z), this.distance = Z.distance, this.angle = Z.angle, this.penumbra = Z.penumbra, this.decay = Z.decay, this.target = Z.target.clone(), this.shadow = Z.shadow.clone(), this;
      } }), Oc.prototype = Object.assign(Object.create(ui.prototype), { constructor: Oc, isPointLight: !0, copy: function(Z) {
        return ui.prototype.copy.call(this, Z), this.distance = Z.distance, this.decay = Z.decay, this.shadow = Z.shadow.clone(), this;
      } }), Pc.prototype = Object.assign(Object.create(Qa.prototype), { constructor: Pc }), Uc.prototype = Object.assign(Object.create(ui.prototype), { constructor: Uc, isDirectionalLight: !0, copy: function(Z) {
        return ui.prototype.copy.call(this, Z), this.target = Z.target.clone(), this.shadow = Z.shadow.clone(), this;
      } }), Hc.prototype = Object.assign(Object.create(ui.prototype), { constructor: Hc, isAmbientLight: !0 }), qc.prototype = Object.assign(Object.create(ui.prototype), { constructor: qc, isRectAreaLight: !0, copy: function(Z) {
        return ui.prototype.copy.call(this, Z), this.width = Z.width, this.height = Z.height, this;
      }, toJSON: function(Z) {
        var te = ui.prototype.toJSON.call(this, Z);
        return te.object.width = this.width, te.object.height = this.height, te;
      } });
      var Hi = { arraySlice: function(Z, te, oe) {
        return Hi.isTypedArray(Z) ? new Z.constructor(Z.subarray(te, oe !== void 0 ? oe : Z.length)) : Z.slice(te, oe);
      }, convertArray: function(Z, te, oe) {
        return !Z || !oe && Z.constructor === te ? Z : typeof te.BYTES_PER_ELEMENT == "number" ? new te(Z) : Array.prototype.slice.call(Z);
      }, isTypedArray: function(Z) {
        return ArrayBuffer.isView(Z) && !(Z instanceof DataView);
      }, getKeyframeOrder: function(Z) {
        for (var te = Z.length, oe = new Array(te), se = 0; se !== te; ++se)
          oe[se] = se;
        return oe.sort(function(Ae, ue) {
          return Z[Ae] - Z[ue];
        }), oe;
      }, sortedArray: function(Z, te, oe) {
        for (var se = Z.length, Ae = new Z.constructor(se), ue = 0, he = 0; he !== se; ++ue)
          for (var pe = oe[ue] * te, ve = 0; ve !== te; ++ve)
            Ae[he++] = Z[pe + ve];
        return Ae;
      }, flattenJSON: function(Z, te, oe, se) {
        for (var Ae = 1, ue = Z[0]; ue !== void 0 && ue[se] === void 0; )
          ue = Z[Ae++];
        if (ue !== void 0) {
          var he = ue[se];
          if (he !== void 0)
            if (Array.isArray(he))
              do
                (he = ue[se]) !== void 0 && (te.push(ue.time), oe.push.apply(oe, he)), ue = Z[Ae++];
              while (ue !== void 0);
            else if (he.toArray !== void 0)
              do
                (he = ue[se]) !== void 0 && (te.push(ue.time), he.toArray(oe, oe.length)), ue = Z[Ae++];
              while (ue !== void 0);
            else
              do
                (he = ue[se]) !== void 0 && (te.push(ue.time), oe.push(he)), ue = Z[Ae++];
              while (ue !== void 0);
        }
      } };
      function so(Z, te, oe, se) {
        this.parameterPositions = Z, this._cachedIndex = 0, this.resultBuffer = se !== void 0 ? se : new te.constructor(oe), this.sampleValues = te, this.valueSize = oe;
      }
      function Dc(Z, te, oe, se) {
        so.call(this, Z, te, oe, se), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0;
      }
      function Ac(Z, te, oe, se) {
        so.call(this, Z, te, oe, se);
      }
      function $c(Z, te, oe, se) {
        so.call(this, Z, te, oe, se);
      }
      function Mi(Z, te, oe, se) {
        if (Z === void 0)
          throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (te === void 0 || te.length === 0)
          throw new Error("THREE.KeyframeTrack: no keyframes in track named " + Z);
        this.name = Z, this.times = Hi.convertArray(te, this.TimeBufferType), this.values = Hi.convertArray(oe, this.ValueBufferType), this.setInterpolation(se || this.DefaultInterpolation);
      }
      function jc(Z, te, oe) {
        Mi.call(this, Z, te, oe);
      }
      function Yc(Z, te, oe, se) {
        Mi.call(this, Z, te, oe, se);
      }
      function cs(Z, te, oe, se) {
        Mi.call(this, Z, te, oe, se);
      }
      function Vc(Z, te, oe, se) {
        so.call(this, Z, te, oe, se);
      }
      function uc(Z, te, oe, se) {
        Mi.call(this, Z, te, oe, se);
      }
      function Lc(Z, te, oe, se) {
        Mi.call(this, Z, te, oe, se);
      }
      function As(Z, te, oe, se) {
        Mi.call(this, Z, te, oe, se);
      }
      function lo(Z, te, oe) {
        this.name = Z, this.tracks = oe, this.duration = te !== void 0 ? te : -1, this.uuid = bn.generateUUID(), this.duration < 0 && this.resetDuration();
      }
      function Fl(Z) {
        if (Z.type === void 0)
          throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var te = function(Ae) {
          switch (Ae.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return cs;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return As;
            case "color":
              return Yc;
            case "quaternion":
              return uc;
            case "bool":
            case "boolean":
              return jc;
            case "string":
              return Lc;
          }
          throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + Ae);
        }(Z.type);
        if (Z.times === void 0) {
          var oe = [], se = [];
          Hi.flattenJSON(Z.keys, oe, se, "value"), Z.times = oe, Z.values = se;
        }
        return te.parse !== void 0 ? te.parse(Z) : new te(Z.name, Z.times, Z.values, Z.interpolation);
      }
      function zc(Z) {
        this.manager = Z !== void 0 ? Z : to, this.textures = {};
      }
      function pA(Z) {
        this.manager = Z !== void 0 ? Z : to;
      }
      Object.assign(so.prototype, { evaluate: function(Z) {
        var te = this.parameterPositions, oe = this._cachedIndex, se = te[oe], Ae = te[oe - 1];
        e: {
          t: {
            var ue;
            r: {
              n:
                if (!(Z < se)) {
                  for (var he = oe + 2; ; ) {
                    if (se === void 0) {
                      if (Z < Ae)
                        break n;
                      return oe = te.length, this._cachedIndex = oe, this.afterEnd_(oe - 1, Z, Ae);
                    }
                    if (oe === he)
                      break;
                    if (Ae = se, Z < (se = te[++oe]))
                      break t;
                  }
                  ue = te.length;
                  break r;
                }
              if (Z >= Ae)
                break e;
              var pe = te[1];
              for (Z < pe && (oe = 2, Ae = pe), he = oe - 2; ; ) {
                if (Ae === void 0)
                  return this._cachedIndex = 0, this.beforeStart_(0, Z, se);
                if (oe === he)
                  break;
                if (se = Ae, Z >= (Ae = te[--oe - 1]))
                  break t;
              }
              ue = oe, oe = 0;
            }
            for (; oe < ue; ) {
              var ve = oe + ue >>> 1;
              Z < te[ve] ? ue = ve : oe = ve + 1;
            }
            if (se = te[oe], (Ae = te[oe - 1]) === void 0)
              return this._cachedIndex = 0, this.beforeStart_(0, Z, se);
            if (se === void 0)
              return oe = te.length, this._cachedIndex = oe, this.afterEnd_(oe - 1, Ae, Z);
          }
          this._cachedIndex = oe, this.intervalChanged_(oe, Ae, se);
        }
        return this.interpolate_(oe, Ae, Z, se);
      }, settings: null, DefaultSettings_: {}, getSettings_: function() {
        return this.settings || this.DefaultSettings_;
      }, copySampleValue_: function(Z) {
        for (var te = this.resultBuffer, oe = this.sampleValues, se = this.valueSize, Ae = Z * se, ue = 0; ue !== se; ++ue)
          te[ue] = oe[Ae + ue];
        return te;
      }, interpolate_: function() {
        throw new Error("call to abstract method");
      }, intervalChanged_: function() {
      } }), Object.assign(so.prototype, { beforeStart_: so.prototype.copySampleValue_, afterEnd_: so.prototype.copySampleValue_ }), Dc.prototype = Object.assign(Object.create(so.prototype), { constructor: Dc, DefaultSettings_: { endingStart: Xr, endingEnd: Xr }, intervalChanged_: function(Z, te, oe) {
        var se = this.parameterPositions, Ae = Z - 2, ue = Z + 1, he = se[Ae], pe = se[ue];
        if (he === void 0)
          switch (this.getSettings_().endingStart) {
            case Rn:
              Ae = Z, he = 2 * te - oe;
              break;
            case zn:
              he = te + se[Ae = se.length - 2] - se[Ae + 1];
              break;
            default:
              Ae = Z, he = oe;
          }
        if (pe === void 0)
          switch (this.getSettings_().endingEnd) {
            case Rn:
              ue = Z, pe = 2 * oe - te;
              break;
            case zn:
              ue = 1, pe = oe + se[1] - se[0];
              break;
            default:
              ue = Z - 1, pe = te;
          }
        var ve = 0.5 * (oe - te), xe = this.valueSize;
        this._weightPrev = ve / (te - he), this._weightNext = ve / (pe - oe), this._offsetPrev = Ae * xe, this._offsetNext = ue * xe;
      }, interpolate_: function(Z, te, oe, se) {
        for (var Ae = this.resultBuffer, ue = this.sampleValues, he = this.valueSize, pe = Z * he, ve = pe - he, xe = this._offsetPrev, Me = this._offsetNext, Ne = this._weightPrev, Qe = this._weightNext, Ue = (oe - te) / (se - te), ze = Ue * Ue, et = ze * Ue, nt = -Ne * et + 2 * Ne * ze - Ne * Ue, At = (1 + Ne) * et + (-1.5 - 2 * Ne) * ze + (-0.5 + Ne) * Ue + 1, Et = (-1 - Qe) * et + (1.5 + Qe) * ze + 0.5 * Ue, st = Qe * et - Qe * ze, Mt = 0; Mt !== he; ++Mt)
          Ae[Mt] = nt * ue[xe + Mt] + At * ue[ve + Mt] + Et * ue[pe + Mt] + st * ue[Me + Mt];
        return Ae;
      } }), Ac.prototype = Object.assign(Object.create(so.prototype), { constructor: Ac, interpolate_: function(Z, te, oe, se) {
        for (var Ae = this.resultBuffer, ue = this.sampleValues, he = this.valueSize, pe = Z * he, ve = pe - he, xe = (oe - te) / (se - te), Me = 1 - xe, Ne = 0; Ne !== he; ++Ne)
          Ae[Ne] = ue[ve + Ne] * Me + ue[pe + Ne] * xe;
        return Ae;
      } }), $c.prototype = Object.assign(Object.create(so.prototype), { constructor: $c, interpolate_: function(Z) {
        return this.copySampleValue_(Z - 1);
      } }), Object.assign(Mi, { toJSON: function(Z) {
        var te, oe = Z.constructor;
        if (oe.toJSON !== void 0)
          te = oe.toJSON(Z);
        else {
          te = { name: Z.name, times: Hi.convertArray(Z.times, Array), values: Hi.convertArray(Z.values, Array) };
          var se = Z.getInterpolation();
          se !== Z.DefaultInterpolation && (te.interpolation = se);
        }
        return te.type = Z.ValueTypeName, te;
      } }), Object.assign(Mi.prototype, { constructor: Mi, TimeBufferType: Float32Array, ValueBufferType: Float32Array, DefaultInterpolation: wn, InterpolantFactoryMethodDiscrete: function(Z) {
        return new $c(this.times, this.values, this.getValueSize(), Z);
      }, InterpolantFactoryMethodLinear: function(Z) {
        return new Ac(this.times, this.values, this.getValueSize(), Z);
      }, InterpolantFactoryMethodSmooth: function(Z) {
        return new Dc(this.times, this.values, this.getValueSize(), Z);
      }, setInterpolation: function(Z) {
        var te;
        switch (Z) {
          case qr:
            te = this.InterpolantFactoryMethodDiscrete;
            break;
          case wn:
            te = this.InterpolantFactoryMethodLinear;
            break;
          case dn:
            te = this.InterpolantFactoryMethodSmooth;
        }
        if (te === void 0) {
          var oe = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
          if (this.createInterpolant === void 0) {
            if (Z === this.DefaultInterpolation)
              throw new Error(oe);
            this.setInterpolation(this.DefaultInterpolation);
          }
          return console.warn("THREE.KeyframeTrack:", oe), this;
        }
        return this.createInterpolant = te, this;
      }, getInterpolation: function() {
        switch (this.createInterpolant) {
          case this.InterpolantFactoryMethodDiscrete:
            return qr;
          case this.InterpolantFactoryMethodLinear:
            return wn;
          case this.InterpolantFactoryMethodSmooth:
            return dn;
        }
      }, getValueSize: function() {
        return this.values.length / this.times.length;
      }, shift: function(Z) {
        if (Z !== 0)
          for (var te = this.times, oe = 0, se = te.length; oe !== se; ++oe)
            te[oe] += Z;
        return this;
      }, scale: function(Z) {
        if (Z !== 1)
          for (var te = this.times, oe = 0, se = te.length; oe !== se; ++oe)
            te[oe] *= Z;
        return this;
      }, trim: function(Z, te) {
        for (var oe = this.times, se = oe.length, Ae = 0, ue = se - 1; Ae !== se && oe[Ae] < Z; )
          ++Ae;
        for (; ue !== -1 && oe[ue] > te; )
          --ue;
        if (++ue, Ae !== 0 || ue !== se) {
          Ae >= ue && (Ae = (ue = Math.max(ue, 1)) - 1);
          var he = this.getValueSize();
          this.times = Hi.arraySlice(oe, Ae, ue), this.values = Hi.arraySlice(this.values, Ae * he, ue * he);
        }
        return this;
      }, validate: function() {
        var Z = !0, te = this.getValueSize();
        te - Math.floor(te) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), Z = !1);
        var oe = this.times, se = this.values, Ae = oe.length;
        Ae === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), Z = !1);
        for (var ue = null, he = 0; he !== Ae; he++) {
          var pe = oe[he];
          if (typeof pe == "number" && isNaN(pe)) {
            console.error("THREE.KeyframeTrack: Time is not a valid number.", this, he, pe), Z = !1;
            break;
          }
          if (ue !== null && ue > pe) {
            console.error("THREE.KeyframeTrack: Out of order keys.", this, he, pe, ue), Z = !1;
            break;
          }
          ue = pe;
        }
        if (se !== void 0 && Hi.isTypedArray(se)) {
          he = 0;
          for (var ve = se.length; he !== ve; ++he) {
            var xe = se[he];
            if (isNaN(xe)) {
              console.error("THREE.KeyframeTrack: Value is not a valid number.", this, he, xe), Z = !1;
              break;
            }
          }
        }
        return Z;
      }, optimize: function() {
        for (var Z = this.times, te = this.values, oe = this.getValueSize(), se = this.getInterpolation() === dn, Ae = 1, ue = Z.length - 1, he = 1; he < ue; ++he) {
          var pe = !1, ve = Z[he];
          if (ve !== Z[he + 1] && (he !== 1 || ve !== ve[0]))
            if (se)
              pe = !0;
            else
              for (var xe = he * oe, Me = xe - oe, Ne = xe + oe, Qe = 0; Qe !== oe; ++Qe) {
                var Ue = te[xe + Qe];
                if (Ue !== te[Me + Qe] || Ue !== te[Ne + Qe]) {
                  pe = !0;
                  break;
                }
              }
          if (pe) {
            if (he !== Ae) {
              Z[Ae] = Z[he];
              var ze = he * oe, et = Ae * oe;
              for (Qe = 0; Qe !== oe; ++Qe)
                te[et + Qe] = te[ze + Qe];
            }
            ++Ae;
          }
        }
        if (ue > 0) {
          for (Z[Ae] = Z[ue], ze = ue * oe, et = Ae * oe, Qe = 0; Qe !== oe; ++Qe)
            te[et + Qe] = te[ze + Qe];
          ++Ae;
        }
        return Ae !== Z.length && (this.times = Hi.arraySlice(Z, 0, Ae), this.values = Hi.arraySlice(te, 0, Ae * oe)), this;
      } }), jc.prototype = Object.assign(Object.create(Mi.prototype), { constructor: jc, ValueTypeName: "bool", ValueBufferType: Array, DefaultInterpolation: qr, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), Yc.prototype = Object.assign(Object.create(Mi.prototype), { constructor: Yc, ValueTypeName: "color" }), cs.prototype = Object.assign(Object.create(Mi.prototype), { constructor: cs, ValueTypeName: "number" }), Vc.prototype = Object.assign(Object.create(so.prototype), { constructor: Vc, interpolate_: function(Z, te, oe, se) {
        for (var Ae = this.resultBuffer, ue = this.sampleValues, he = this.valueSize, pe = Z * he, ve = (oe - te) / (se - te), xe = pe + he; pe !== xe; pe += 4)
          ci.slerpFlat(Ae, 0, ue, pe - he, ue, pe, ve);
        return Ae;
      } }), uc.prototype = Object.assign(Object.create(Mi.prototype), { constructor: uc, ValueTypeName: "quaternion", DefaultInterpolation: wn, InterpolantFactoryMethodLinear: function(Z) {
        return new Vc(this.times, this.values, this.getValueSize(), Z);
      }, InterpolantFactoryMethodSmooth: void 0 }), Lc.prototype = Object.assign(Object.create(Mi.prototype), { constructor: Lc, ValueTypeName: "string", ValueBufferType: Array, DefaultInterpolation: qr, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), As.prototype = Object.assign(Object.create(Mi.prototype), { constructor: As, ValueTypeName: "vector" }), Object.assign(lo, { parse: function(Z) {
        for (var te = [], oe = Z.tracks, se = 1 / (Z.fps || 1), Ae = 0, ue = oe.length; Ae !== ue; ++Ae)
          te.push(Fl(oe[Ae]).scale(se));
        return new lo(Z.name, Z.duration, te);
      }, toJSON: function(Z) {
        for (var te = [], oe = Z.tracks, se = { name: Z.name, duration: Z.duration, tracks: te, uuid: Z.uuid }, Ae = 0, ue = oe.length; Ae !== ue; ++Ae)
          te.push(Mi.toJSON(oe[Ae]));
        return se;
      }, CreateFromMorphTargetSequence: function(Z, te, oe, se) {
        for (var Ae = te.length, ue = [], he = 0; he < Ae; he++) {
          var pe = [], ve = [];
          pe.push((he + Ae - 1) % Ae, he, (he + 1) % Ae), ve.push(0, 1, 0);
          var xe = Hi.getKeyframeOrder(pe);
          pe = Hi.sortedArray(pe, 1, xe), ve = Hi.sortedArray(ve, 1, xe), se || pe[0] !== 0 || (pe.push(Ae), ve.push(ve[0])), ue.push(new cs(".morphTargetInfluences[" + te[he].name + "]", pe, ve).scale(1 / oe));
        }
        return new lo(Z, -1, ue);
      }, findByName: function(Z, te) {
        var oe = Z;
        if (!Array.isArray(Z)) {
          var se = Z;
          oe = se.geometry && se.geometry.animations || se.animations;
        }
        for (var Ae = 0; Ae < oe.length; Ae++)
          if (oe[Ae].name === te)
            return oe[Ae];
        return null;
      }, CreateClipsFromMorphTargetSequences: function(Z, te, oe) {
        for (var se = {}, Ae = /^([\w-]*?)([\d]+)$/, ue = 0, he = Z.length; ue < he; ue++) {
          var pe = Z[ue], ve = pe.name.match(Ae);
          if (ve && ve.length > 1) {
            var xe = se[Ne = ve[1]];
            xe || (se[Ne] = xe = []), xe.push(pe);
          }
        }
        var Me = [];
        for (var Ne in se)
          Me.push(lo.CreateFromMorphTargetSequence(Ne, se[Ne], te, oe));
        return Me;
      }, parseAnimation: function(Z, te) {
        if (!Z)
          return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        for (var oe = function(Et, st, Mt, Ft, lt) {
          if (Mt.length !== 0) {
            var wt = [], jt = [];
            Hi.flattenJSON(Mt, wt, jt, Ft), wt.length !== 0 && lt.push(new Et(st, wt, jt));
          }
        }, se = [], Ae = Z.name || "default", ue = Z.length || -1, he = Z.fps || 30, pe = Z.hierarchy || [], ve = 0; ve < pe.length; ve++) {
          var xe = pe[ve].keys;
          if (xe && xe.length !== 0)
            if (xe[0].morphTargets) {
              for (var Me = {}, Ne = 0; Ne < xe.length; Ne++)
                if (xe[Ne].morphTargets)
                  for (var Qe = 0; Qe < xe[Ne].morphTargets.length; Qe++)
                    Me[xe[Ne].morphTargets[Qe]] = -1;
              for (var Ue in Me) {
                var ze = [], et = [];
                for (Qe = 0; Qe !== xe[Ne].morphTargets.length; ++Qe) {
                  var nt = xe[Ne];
                  ze.push(nt.time), et.push(nt.morphTarget === Ue ? 1 : 0);
                }
                se.push(new cs(".morphTargetInfluence[" + Ue + "]", ze, et));
              }
              ue = Me.length * (he || 1);
            } else {
              var At = ".bones[" + te[ve].name + "]";
              oe(As, At + ".position", xe, "pos", se), oe(uc, At + ".quaternion", xe, "rot", se), oe(As, At + ".scale", xe, "scl", se);
            }
        }
        return se.length === 0 ? null : new lo(Ae, ue, se);
      } }), Object.assign(lo.prototype, { resetDuration: function() {
        for (var Z = 0, te = 0, oe = this.tracks.length; te !== oe; ++te) {
          var se = this.tracks[te];
          Z = Math.max(Z, se.times[se.times.length - 1]);
        }
        return this.duration = Z, this;
      }, trim: function() {
        for (var Z = 0; Z < this.tracks.length; Z++)
          this.tracks[Z].trim(0, this.duration);
        return this;
      }, validate: function() {
        for (var Z = !0, te = 0; te < this.tracks.length; te++)
          Z = Z && this.tracks[te].validate();
        return Z;
      }, optimize: function() {
        for (var Z = 0; Z < this.tracks.length; Z++)
          this.tracks[Z].optimize();
        return this;
      } }), Object.assign(zc.prototype, { load: function(Z, te, oe, se) {
        var Ae = this;
        new yo(Ae.manager).load(Z, function(ue) {
          te(Ae.parse(JSON.parse(ue)));
        }, oe, se);
      }, setTextures: function(Z) {
        this.textures = Z;
      }, parse: function(Z) {
        var te = this.textures;
        function oe(ue) {
          return te[ue] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", ue), te[ue];
        }
        var se = new kl[Z.type]();
        if (Z.uuid !== void 0 && (se.uuid = Z.uuid), Z.name !== void 0 && (se.name = Z.name), Z.color !== void 0 && se.color.setHex(Z.color), Z.roughness !== void 0 && (se.roughness = Z.roughness), Z.metalness !== void 0 && (se.metalness = Z.metalness), Z.emissive !== void 0 && se.emissive.setHex(Z.emissive), Z.specular !== void 0 && se.specular.setHex(Z.specular), Z.shininess !== void 0 && (se.shininess = Z.shininess), Z.clearCoat !== void 0 && (se.clearCoat = Z.clearCoat), Z.clearCoatRoughness !== void 0 && (se.clearCoatRoughness = Z.clearCoatRoughness), Z.uniforms !== void 0 && (se.uniforms = Z.uniforms), Z.vertexShader !== void 0 && (se.vertexShader = Z.vertexShader), Z.fragmentShader !== void 0 && (se.fragmentShader = Z.fragmentShader), Z.vertexColors !== void 0 && (se.vertexColors = Z.vertexColors), Z.fog !== void 0 && (se.fog = Z.fog), Z.flatShading !== void 0 && (se.flatShading = Z.flatShading), Z.blending !== void 0 && (se.blending = Z.blending), Z.side !== void 0 && (se.side = Z.side), Z.opacity !== void 0 && (se.opacity = Z.opacity), Z.transparent !== void 0 && (se.transparent = Z.transparent), Z.alphaTest !== void 0 && (se.alphaTest = Z.alphaTest), Z.depthTest !== void 0 && (se.depthTest = Z.depthTest), Z.depthWrite !== void 0 && (se.depthWrite = Z.depthWrite), Z.colorWrite !== void 0 && (se.colorWrite = Z.colorWrite), Z.wireframe !== void 0 && (se.wireframe = Z.wireframe), Z.wireframeLinewidth !== void 0 && (se.wireframeLinewidth = Z.wireframeLinewidth), Z.wireframeLinecap !== void 0 && (se.wireframeLinecap = Z.wireframeLinecap), Z.wireframeLinejoin !== void 0 && (se.wireframeLinejoin = Z.wireframeLinejoin), Z.rotation !== void 0 && (se.rotation = Z.rotation), Z.linewidth !== 1 && (se.linewidth = Z.linewidth), Z.dashSize !== void 0 && (se.dashSize = Z.dashSize), Z.gapSize !== void 0 && (se.gapSize = Z.gapSize), Z.scale !== void 0 && (se.scale = Z.scale), Z.polygonOffset !== void 0 && (se.polygonOffset = Z.polygonOffset), Z.polygonOffsetFactor !== void 0 && (se.polygonOffsetFactor = Z.polygonOffsetFactor), Z.polygonOffsetUnits !== void 0 && (se.polygonOffsetUnits = Z.polygonOffsetUnits), Z.skinning !== void 0 && (se.skinning = Z.skinning), Z.morphTargets !== void 0 && (se.morphTargets = Z.morphTargets), Z.dithering !== void 0 && (se.dithering = Z.dithering), Z.visible !== void 0 && (se.visible = Z.visible), Z.userData !== void 0 && (se.userData = Z.userData), Z.shading !== void 0 && (se.flatShading = Z.shading === 1), Z.size !== void 0 && (se.size = Z.size), Z.sizeAttenuation !== void 0 && (se.sizeAttenuation = Z.sizeAttenuation), Z.map !== void 0 && (se.map = oe(Z.map)), Z.alphaMap !== void 0 && (se.alphaMap = oe(Z.alphaMap), se.transparent = !0), Z.bumpMap !== void 0 && (se.bumpMap = oe(Z.bumpMap)), Z.bumpScale !== void 0 && (se.bumpScale = Z.bumpScale), Z.normalMap !== void 0 && (se.normalMap = oe(Z.normalMap)), Z.normalMapType !== void 0 && (se.normalMapType = Z.normalMapType), Z.normalScale !== void 0) {
          var Ae = Z.normalScale;
          Array.isArray(Ae) === !1 && (Ae = [Ae, Ae]), se.normalScale = new xr().fromArray(Ae);
        }
        return Z.displacementMap !== void 0 && (se.displacementMap = oe(Z.displacementMap)), Z.displacementScale !== void 0 && (se.displacementScale = Z.displacementScale), Z.displacementBias !== void 0 && (se.displacementBias = Z.displacementBias), Z.roughnessMap !== void 0 && (se.roughnessMap = oe(Z.roughnessMap)), Z.metalnessMap !== void 0 && (se.metalnessMap = oe(Z.metalnessMap)), Z.emissiveMap !== void 0 && (se.emissiveMap = oe(Z.emissiveMap)), Z.emissiveIntensity !== void 0 && (se.emissiveIntensity = Z.emissiveIntensity), Z.specularMap !== void 0 && (se.specularMap = oe(Z.specularMap)), Z.envMap !== void 0 && (se.envMap = oe(Z.envMap)), Z.reflectivity !== void 0 && (se.reflectivity = Z.reflectivity), Z.lightMap !== void 0 && (se.lightMap = oe(Z.lightMap)), Z.lightMapIntensity !== void 0 && (se.lightMapIntensity = Z.lightMapIntensity), Z.aoMap !== void 0 && (se.aoMap = oe(Z.aoMap)), Z.aoMapIntensity !== void 0 && (se.aoMapIntensity = Z.aoMapIntensity), Z.gradientMap !== void 0 && (se.gradientMap = oe(Z.gradientMap)), se;
      } }), Object.assign(pA.prototype, { load: function(Z, te, oe, se) {
        var Ae = this;
        new yo(Ae.manager).load(Z, function(ue) {
          te(Ae.parse(JSON.parse(ue)));
        }, oe, se);
      }, parse: function(Z) {
        var te = new Wr(), oe = Z.data.index;
        if (oe !== void 0) {
          var se = new yu[oe.type](oe.array);
          te.setIndex(new Mn(se, 1));
        }
        var Ae = Z.data.attributes;
        for (var ue in Ae) {
          var he = Ae[ue];
          se = new yu[he.type](he.array), te.addAttribute(ue, new Mn(se, he.itemSize, he.normalized));
        }
        var pe = Z.data.groups || Z.data.drawcalls || Z.data.offsets;
        if (pe !== void 0)
          for (var ve = 0, xe = pe.length; ve !== xe; ++ve) {
            var Me = pe[ve];
            te.addGroup(Me.start, Me.count, Me.materialIndex);
          }
        var Ne = Z.data.boundingSphere;
        if (Ne !== void 0) {
          var Qe = new mt();
          Ne.center !== void 0 && Qe.fromArray(Ne.center), te.boundingSphere = new go(Qe, Ne.radius);
        }
        return te;
      } });
      var yu = { Int8Array, Uint8Array, Uint8ClampedArray: typeof Uint8ClampedArray < "u" ? Uint8ClampedArray : Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array };
      function us() {
      }
      us.Handlers = { handlers: [], add: function(Z, te) {
        this.handlers.push(Z, te);
      }, get: function(Z) {
        for (var te = this.handlers, oe = 0, se = te.length; oe < se; oe += 2) {
          var Ae = te[oe], ue = te[oe + 1];
          if (Ae.test(Z))
            return ue;
        }
        return null;
      } }, Object.assign(us.prototype, { crossOrigin: "anonymous", onLoadStart: function() {
      }, onLoadProgress: function() {
      }, onLoadComplete: function() {
      }, initMaterials: function(Z, te, oe) {
        for (var se = [], Ae = 0; Ae < Z.length; ++Ae)
          se[Ae] = this.createMaterial(Z[Ae], te, oe);
        return se;
      }, createMaterial: function() {
        var Z = { NoBlending: Tt, NormalBlending: Xe, AdditiveBlending: ht, SubtractiveBlending: Qt, MultiplyBlending: Gt, CustomBlending: pt }, te = new sn(), oe = new Mc(), se = new zc();
        return function(Ae, ue, he) {
          var pe = {};
          function ve(Qe, Ue, ze, et, nt) {
            var At, Et = ue + Qe, st = us.Handlers.get(Et);
            st !== null ? At = st.load(Et) : (oe.setCrossOrigin(he), At = oe.load(Et)), Ue !== void 0 && (At.repeat.fromArray(Ue), Ue[0] !== 1 && (At.wrapS = gr), Ue[1] !== 1 && (At.wrapT = gr)), ze !== void 0 && At.offset.fromArray(ze), et !== void 0 && (et[0] === "repeat" && (At.wrapS = gr), et[0] === "mirror" && (At.wrapS = mr), et[1] === "repeat" && (At.wrapT = gr), et[1] === "mirror" && (At.wrapT = mr)), nt !== void 0 && (At.anisotropy = nt);
            var Mt = bn.generateUUID();
            return pe[Mt] = At, Mt;
          }
          var xe = { uuid: bn.generateUUID(), type: "MeshLambertMaterial" };
          for (var Me in Ae) {
            var Ne = Ae[Me];
            switch (Me) {
              case "DbgColor":
              case "DbgIndex":
              case "opticalDensity":
              case "illumination":
                break;
              case "DbgName":
                xe.name = Ne;
                break;
              case "blending":
                xe.blending = Z[Ne];
                break;
              case "colorAmbient":
              case "mapAmbient":
                console.warn("THREE.Loader.createMaterial:", Me, "is no longer supported.");
                break;
              case "colorDiffuse":
                xe.color = te.fromArray(Ne).getHex();
                break;
              case "colorSpecular":
                xe.specular = te.fromArray(Ne).getHex();
                break;
              case "colorEmissive":
                xe.emissive = te.fromArray(Ne).getHex();
                break;
              case "specularCoef":
                xe.shininess = Ne;
                break;
              case "shading":
                Ne.toLowerCase() === "basic" && (xe.type = "MeshBasicMaterial"), Ne.toLowerCase() === "phong" && (xe.type = "MeshPhongMaterial"), Ne.toLowerCase() === "standard" && (xe.type = "MeshStandardMaterial");
                break;
              case "mapDiffuse":
                xe.map = ve(Ne, Ae.mapDiffuseRepeat, Ae.mapDiffuseOffset, Ae.mapDiffuseWrap, Ae.mapDiffuseAnisotropy);
                break;
              case "mapDiffuseRepeat":
              case "mapDiffuseOffset":
              case "mapDiffuseWrap":
              case "mapDiffuseAnisotropy":
                break;
              case "mapEmissive":
                xe.emissiveMap = ve(Ne, Ae.mapEmissiveRepeat, Ae.mapEmissiveOffset, Ae.mapEmissiveWrap, Ae.mapEmissiveAnisotropy);
                break;
              case "mapEmissiveRepeat":
              case "mapEmissiveOffset":
              case "mapEmissiveWrap":
              case "mapEmissiveAnisotropy":
                break;
              case "mapLight":
                xe.lightMap = ve(Ne, Ae.mapLightRepeat, Ae.mapLightOffset, Ae.mapLightWrap, Ae.mapLightAnisotropy);
                break;
              case "mapLightRepeat":
              case "mapLightOffset":
              case "mapLightWrap":
              case "mapLightAnisotropy":
                break;
              case "mapAO":
                xe.aoMap = ve(Ne, Ae.mapAORepeat, Ae.mapAOOffset, Ae.mapAOWrap, Ae.mapAOAnisotropy);
                break;
              case "mapAORepeat":
              case "mapAOOffset":
              case "mapAOWrap":
              case "mapAOAnisotropy":
                break;
              case "mapBump":
                xe.bumpMap = ve(Ne, Ae.mapBumpRepeat, Ae.mapBumpOffset, Ae.mapBumpWrap, Ae.mapBumpAnisotropy);
                break;
              case "mapBumpScale":
                xe.bumpScale = Ne;
                break;
              case "mapBumpRepeat":
              case "mapBumpOffset":
              case "mapBumpWrap":
              case "mapBumpAnisotropy":
                break;
              case "mapNormal":
                xe.normalMap = ve(Ne, Ae.mapNormalRepeat, Ae.mapNormalOffset, Ae.mapNormalWrap, Ae.mapNormalAnisotropy);
                break;
              case "mapNormalFactor":
                xe.normalScale = Ne;
                break;
              case "mapNormalRepeat":
              case "mapNormalOffset":
              case "mapNormalWrap":
              case "mapNormalAnisotropy":
                break;
              case "mapSpecular":
                xe.specularMap = ve(Ne, Ae.mapSpecularRepeat, Ae.mapSpecularOffset, Ae.mapSpecularWrap, Ae.mapSpecularAnisotropy);
                break;
              case "mapSpecularRepeat":
              case "mapSpecularOffset":
              case "mapSpecularWrap":
              case "mapSpecularAnisotropy":
                break;
              case "mapMetalness":
                xe.metalnessMap = ve(Ne, Ae.mapMetalnessRepeat, Ae.mapMetalnessOffset, Ae.mapMetalnessWrap, Ae.mapMetalnessAnisotropy);
                break;
              case "mapMetalnessRepeat":
              case "mapMetalnessOffset":
              case "mapMetalnessWrap":
              case "mapMetalnessAnisotropy":
                break;
              case "mapRoughness":
                xe.roughnessMap = ve(Ne, Ae.mapRoughnessRepeat, Ae.mapRoughnessOffset, Ae.mapRoughnessWrap, Ae.mapRoughnessAnisotropy);
                break;
              case "mapRoughnessRepeat":
              case "mapRoughnessOffset":
              case "mapRoughnessWrap":
              case "mapRoughnessAnisotropy":
                break;
              case "mapAlpha":
                xe.alphaMap = ve(Ne, Ae.mapAlphaRepeat, Ae.mapAlphaOffset, Ae.mapAlphaWrap, Ae.mapAlphaAnisotropy);
                break;
              case "mapAlphaRepeat":
              case "mapAlphaOffset":
              case "mapAlphaWrap":
              case "mapAlphaAnisotropy":
                break;
              case "flipSided":
                xe.side = Se;
                break;
              case "doubleSided":
                xe.side = Ge;
                break;
              case "transparency":
                console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"), xe.opacity = Ne;
                break;
              case "depthTest":
              case "depthWrite":
              case "colorWrite":
              case "opacity":
              case "reflectivity":
              case "transparent":
              case "visible":
              case "wireframe":
                xe[Me] = Ne;
                break;
              case "vertexColors":
                Ne === !0 && (xe.vertexColors = ft), Ne === "face" && (xe.vertexColors = tt);
                break;
              default:
                console.error("THREE.Loader.createMaterial: Unsupported", Me, Ne);
            }
          }
          return xe.type === "MeshBasicMaterial" && delete xe.emissive, xe.type !== "MeshPhongMaterial" && delete xe.specular, xe.opacity < 1 && (xe.transparent = !0), se.setTextures(pe), se.parse(xe);
        };
      }() });
      var gA = { decodeText: function(Z) {
        if (typeof TextDecoder < "u")
          return new TextDecoder().decode(Z);
        for (var te = "", oe = 0, se = Z.length; oe < se; oe++)
          te += String.fromCharCode(Z[oe]);
        return decodeURIComponent(escape(te));
      }, extractUrlBase: function(Z) {
        var te = Z.lastIndexOf("/");
        return te === -1 ? "./" : Z.substr(0, te + 1);
      } };
      function mA(Z) {
        typeof Z == "boolean" && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."), Z = void 0), this.manager = Z !== void 0 ? Z : to, this.withCredentials = !1;
      }
      function Bu(Z) {
        this.manager = Z !== void 0 ? Z : to, this.texturePath = "";
      }
      Object.assign(mA.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        var Ae = this, ue = this.texturePath && typeof this.texturePath == "string" ? this.texturePath : gA.extractUrlBase(Z), he = new yo(this.manager);
        he.setWithCredentials(this.withCredentials), he.load(Z, function(pe) {
          var ve = JSON.parse(pe), xe = ve.metadata;
          if (xe !== void 0) {
            var Me = xe.type;
            if (Me !== void 0 && Me.toLowerCase() === "object")
              return void console.error("THREE.JSONLoader: " + Z + " should be loaded with THREE.ObjectLoader instead.");
          }
          var Ne = Ae.parse(ve, ue);
          te(Ne.geometry, Ne.materials);
        }, oe, se);
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, setTexturePath: function(Z) {
        return this.texturePath = Z, this;
      }, parse: function() {
        return function(Z, te) {
          Z.data !== void 0 && (Z = Z.data), Z.scale !== void 0 ? Z.scale = 1 / Z.scale : Z.scale = 1;
          var oe = new mn();
          return function(se, Ae) {
            function ue(zr, Nr) {
              return zr & 1 << Nr;
            }
            var he, pe, ve, xe, Me, Ne, Qe, Ue, ze, et, nt, At, Et, st, Mt, Ft, lt, wt, jt, Ot, er, qt, ir, dr, yr, pr = se.faces, Fr = se.vertices, Rr = se.normals, fr = se.colors, br = se.scale, ur = 0;
            if (se.uvs !== void 0) {
              for (he = 0; he < se.uvs.length; he++)
                se.uvs[he].length && ur++;
              for (he = 0; he < ur; he++)
                Ae.faceVertexUvs[he] = [];
            }
            for (xe = 0, Me = Fr.length; xe < Me; )
              (wt = new mt()).x = Fr[xe++] * br, wt.y = Fr[xe++] * br, wt.z = Fr[xe++] * br, Ae.vertices.push(wt);
            for (xe = 0, Me = pr.length; xe < Me; )
              if (nt = ue(et = pr[xe++], 0), At = ue(et, 1), Et = ue(et, 3), st = ue(et, 4), Mt = ue(et, 5), Ft = ue(et, 6), lt = ue(et, 7), nt) {
                if ((Ot = new Do()).a = pr[xe], Ot.b = pr[xe + 1], Ot.c = pr[xe + 3], (er = new Do()).a = pr[xe + 1], er.b = pr[xe + 2], er.c = pr[xe + 3], xe += 4, At && (ze = pr[xe++], Ot.materialIndex = ze, er.materialIndex = ze), ve = Ae.faces.length, Et)
                  for (he = 0; he < ur; he++)
                    for (dr = se.uvs[he], Ae.faceVertexUvs[he][ve] = [], Ae.faceVertexUvs[he][ve + 1] = [], pe = 0; pe < 4; pe++)
                      yr = new xr(dr[2 * (Ue = pr[xe++])], dr[2 * Ue + 1]), pe !== 2 && Ae.faceVertexUvs[he][ve].push(yr), pe !== 0 && Ae.faceVertexUvs[he][ve + 1].push(yr);
                if (st && (Qe = 3 * pr[xe++], Ot.normal.set(Rr[Qe++], Rr[Qe++], Rr[Qe]), er.normal.copy(Ot.normal)), Mt)
                  for (he = 0; he < 4; he++)
                    Qe = 3 * pr[xe++], ir = new mt(Rr[Qe++], Rr[Qe++], Rr[Qe]), he !== 2 && Ot.vertexNormals.push(ir), he !== 0 && er.vertexNormals.push(ir);
                if (Ft && (qt = fr[Ne = pr[xe++]], Ot.color.setHex(qt), er.color.setHex(qt)), lt)
                  for (he = 0; he < 4; he++)
                    qt = fr[Ne = pr[xe++]], he !== 2 && Ot.vertexColors.push(new sn(qt)), he !== 0 && er.vertexColors.push(new sn(qt));
                Ae.faces.push(Ot), Ae.faces.push(er);
              } else {
                if ((jt = new Do()).a = pr[xe++], jt.b = pr[xe++], jt.c = pr[xe++], At && (ze = pr[xe++], jt.materialIndex = ze), ve = Ae.faces.length, Et)
                  for (he = 0; he < ur; he++)
                    for (dr = se.uvs[he], Ae.faceVertexUvs[he][ve] = [], pe = 0; pe < 3; pe++)
                      yr = new xr(dr[2 * (Ue = pr[xe++])], dr[2 * Ue + 1]), Ae.faceVertexUvs[he][ve].push(yr);
                if (st && (Qe = 3 * pr[xe++], jt.normal.set(Rr[Qe++], Rr[Qe++], Rr[Qe])), Mt)
                  for (he = 0; he < 3; he++)
                    Qe = 3 * pr[xe++], ir = new mt(Rr[Qe++], Rr[Qe++], Rr[Qe]), jt.vertexNormals.push(ir);
                if (Ft && (Ne = pr[xe++], jt.color.setHex(fr[Ne])), lt)
                  for (he = 0; he < 3; he++)
                    Ne = pr[xe++], jt.vertexColors.push(new sn(fr[Ne]));
                Ae.faces.push(jt);
              }
          }(Z, oe), function(se, Ae) {
            var ue = se.influencesPerVertex !== void 0 ? se.influencesPerVertex : 2;
            if (se.skinWeights)
              for (var he = 0, pe = se.skinWeights.length; he < pe; he += ue) {
                var ve = se.skinWeights[he], xe = ue > 1 ? se.skinWeights[he + 1] : 0, Me = ue > 2 ? se.skinWeights[he + 2] : 0, Ne = ue > 3 ? se.skinWeights[he + 3] : 0;
                Ae.skinWeights.push(new Zn(ve, xe, Me, Ne));
              }
            if (se.skinIndices)
              for (he = 0, pe = se.skinIndices.length; he < pe; he += ue) {
                var Qe = se.skinIndices[he], Ue = ue > 1 ? se.skinIndices[he + 1] : 0, ze = ue > 2 ? se.skinIndices[he + 2] : 0, et = ue > 3 ? se.skinIndices[he + 3] : 0;
                Ae.skinIndices.push(new Zn(Qe, Ue, ze, et));
              }
            Ae.bones = se.bones, Ae.bones && Ae.bones.length > 0 && (Ae.skinWeights.length !== Ae.skinIndices.length || Ae.skinIndices.length !== Ae.vertices.length) && console.warn("When skinning, number of vertices (" + Ae.vertices.length + "), skinIndices (" + Ae.skinIndices.length + "), and skinWeights (" + Ae.skinWeights.length + ") should match.");
          }(Z, oe), function(se, Ae) {
            var ue = se.scale;
            if (se.morphTargets !== void 0)
              for (var he = 0, pe = se.morphTargets.length; he < pe; he++) {
                Ae.morphTargets[he] = {}, Ae.morphTargets[he].name = se.morphTargets[he].name, Ae.morphTargets[he].vertices = [];
                for (var ve = Ae.morphTargets[he].vertices, xe = se.morphTargets[he].vertices, Me = 0, Ne = xe.length; Me < Ne; Me += 3) {
                  var Qe = new mt();
                  Qe.x = xe[Me] * ue, Qe.y = xe[Me + 1] * ue, Qe.z = xe[Me + 2] * ue, ve.push(Qe);
                }
              }
            if (se.morphColors !== void 0 && se.morphColors.length > 0) {
              console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
              var Ue = Ae.faces, ze = se.morphColors[0].colors;
              for (he = 0, pe = Ue.length; he < pe; he++)
                Ue[he].color.fromArray(ze, 3 * he);
            }
          }(Z, oe), function(se, Ae) {
            var ue = [], he = [];
            se.animation !== void 0 && he.push(se.animation), se.animations !== void 0 && (se.animations.length ? he = he.concat(se.animations) : he.push(se.animations));
            for (var pe = 0; pe < he.length; pe++) {
              var ve = lo.parseAnimation(he[pe], Ae.bones);
              ve && ue.push(ve);
            }
            if (Ae.morphTargets) {
              var xe = lo.CreateClipsFromMorphTargetSequences(Ae.morphTargets, 10);
              ue = ue.concat(xe);
            }
            ue.length > 0 && (Ae.animations = ue);
          }(Z, oe), oe.computeFaceNormals(), oe.computeBoundingSphere(), Z.materials === void 0 || Z.materials.length === 0 ? { geometry: oe } : { geometry: oe, materials: us.prototype.initMaterials(Z.materials, te, this.crossOrigin) };
        };
      }() }), Object.assign(Bu.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        this.texturePath === "" && (this.texturePath = Z.substring(0, Z.lastIndexOf("/") + 1));
        var Ae = this;
        new yo(Ae.manager).load(Z, function(ue) {
          var he = null;
          try {
            he = JSON.parse(ue);
          } catch (ve) {
            return se !== void 0 && se(ve), void console.error("THREE:ObjectLoader: Can't parse " + Z + ".", ve.message);
          }
          var pe = he.metadata;
          pe !== void 0 && pe.type !== void 0 && pe.type.toLowerCase() !== "geometry" ? Ae.parse(he, te) : console.error("THREE.ObjectLoader: Can't load " + Z + ". Use THREE.JSONLoader instead.");
        }, oe, se);
      }, setTexturePath: function(Z) {
        return this.texturePath = Z, this;
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, parse: function(Z, te) {
        var oe = this.parseShape(Z.shapes), se = this.parseGeometries(Z.geometries, oe), Ae = this.parseImages(Z.images, function() {
          te !== void 0 && te(pe);
        }), ue = this.parseTextures(Z.textures, Ae), he = this.parseMaterials(Z.materials, ue), pe = this.parseObject(Z.object, se, he);
        return Z.animations && (pe.animations = this.parseAnimations(Z.animations)), Z.images !== void 0 && Z.images.length !== 0 || te !== void 0 && te(pe), pe;
      }, parseShape: function(Z) {
        var te = {};
        if (Z !== void 0)
          for (var oe = 0, se = Z.length; oe < se; oe++) {
            var Ae = new ea().fromJSON(Z[oe]);
            te[Ae.uuid] = Ae;
          }
        return te;
      }, parseGeometries: function(Z, te) {
        var oe = {};
        if (Z !== void 0)
          for (var se = new mA(), Ae = new pA(), ue = 0, he = Z.length; ue < he; ue++) {
            var pe, ve = Z[ue];
            switch (ve.type) {
              case "PlaneGeometry":
              case "PlaneBufferGeometry":
                pe = new eo[ve.type](ve.width, ve.height, ve.widthSegments, ve.heightSegments);
                break;
              case "BoxGeometry":
              case "BoxBufferGeometry":
              case "CubeGeometry":
                pe = new eo[ve.type](ve.width, ve.height, ve.depth, ve.widthSegments, ve.heightSegments, ve.depthSegments);
                break;
              case "CircleGeometry":
              case "CircleBufferGeometry":
                pe = new eo[ve.type](ve.radius, ve.segments, ve.thetaStart, ve.thetaLength);
                break;
              case "CylinderGeometry":
              case "CylinderBufferGeometry":
                pe = new eo[ve.type](ve.radiusTop, ve.radiusBottom, ve.height, ve.radialSegments, ve.heightSegments, ve.openEnded, ve.thetaStart, ve.thetaLength);
                break;
              case "ConeGeometry":
              case "ConeBufferGeometry":
                pe = new eo[ve.type](ve.radius, ve.height, ve.radialSegments, ve.heightSegments, ve.openEnded, ve.thetaStart, ve.thetaLength);
                break;
              case "SphereGeometry":
              case "SphereBufferGeometry":
                pe = new eo[ve.type](ve.radius, ve.widthSegments, ve.heightSegments, ve.phiStart, ve.phiLength, ve.thetaStart, ve.thetaLength);
                break;
              case "DodecahedronGeometry":
              case "DodecahedronBufferGeometry":
              case "IcosahedronGeometry":
              case "IcosahedronBufferGeometry":
              case "OctahedronGeometry":
              case "OctahedronBufferGeometry":
              case "TetrahedronGeometry":
              case "TetrahedronBufferGeometry":
                pe = new eo[ve.type](ve.radius, ve.detail);
                break;
              case "RingGeometry":
              case "RingBufferGeometry":
                pe = new eo[ve.type](ve.innerRadius, ve.outerRadius, ve.thetaSegments, ve.phiSegments, ve.thetaStart, ve.thetaLength);
                break;
              case "TorusGeometry":
              case "TorusBufferGeometry":
                pe = new eo[ve.type](ve.radius, ve.tube, ve.radialSegments, ve.tubularSegments, ve.arc);
                break;
              case "TorusKnotGeometry":
              case "TorusKnotBufferGeometry":
                pe = new eo[ve.type](ve.radius, ve.tube, ve.tubularSegments, ve.radialSegments, ve.p, ve.q);
                break;
              case "LatheGeometry":
              case "LatheBufferGeometry":
                pe = new eo[ve.type](ve.points, ve.segments, ve.phiStart, ve.phiLength);
                break;
              case "PolyhedronGeometry":
              case "PolyhedronBufferGeometry":
                pe = new eo[ve.type](ve.vertices, ve.indices, ve.radius, ve.details);
                break;
              case "ShapeGeometry":
              case "ShapeBufferGeometry":
                for (var xe = [], Me = 0, Ne = ve.shapes.length; Me < Ne; Me++) {
                  var Qe = te[ve.shapes[Me]];
                  xe.push(Qe);
                }
                pe = new eo[ve.type](xe, ve.curveSegments);
                break;
              case "ExtrudeGeometry":
              case "ExtrudeBufferGeometry":
                for (xe = [], Me = 0, Ne = ve.shapes.length; Me < Ne; Me++)
                  Qe = te[ve.shapes[Me]], xe.push(Qe);
                var Ue = ve.options.extrudePath;
                Ue !== void 0 && (ve.options.extrudePath = new Eu[Ue.type]().fromJSON(Ue)), pe = new eo[ve.type](xe, ve.options);
                break;
              case "BufferGeometry":
                pe = Ae.parse(ve);
                break;
              case "Geometry":
                pe = se.parse(ve, this.texturePath).geometry;
                break;
              default:
                console.warn('THREE.ObjectLoader: Unsupported geometry type "' + ve.type + '"');
                continue;
            }
            pe.uuid = ve.uuid, ve.name !== void 0 && (pe.name = ve.name), pe.isBufferGeometry === !0 && ve.userData !== void 0 && (pe.userData = ve.userData), oe[ve.uuid] = pe;
          }
        return oe;
      }, parseMaterials: function(Z, te) {
        var oe = {};
        if (Z !== void 0) {
          var se = new zc();
          se.setTextures(te);
          for (var Ae = 0, ue = Z.length; Ae < ue; Ae++) {
            var he = Z[Ae];
            if (he.type === "MultiMaterial") {
              for (var pe = [], ve = 0; ve < he.materials.length; ve++)
                pe.push(se.parse(he.materials[ve]));
              oe[he.uuid] = pe;
            } else
              oe[he.uuid] = se.parse(he);
          }
        }
        return oe;
      }, parseAnimations: function(Z) {
        for (var te = [], oe = 0; oe < Z.length; oe++) {
          var se = Z[oe], Ae = lo.parse(se);
          se.uuid !== void 0 && (Ae.uuid = se.uuid), te.push(Ae);
        }
        return te;
      }, parseImages: function(Z, te) {
        var oe = this, se = {};
        function Ae(ze) {
          return oe.manager.itemStart(ze), ue.load(ze, function() {
            oe.manager.itemEnd(ze);
          }, void 0, function() {
            oe.manager.itemEnd(ze), oe.manager.itemError(ze);
          });
        }
        if (Z !== void 0 && Z.length > 0) {
          var ue = new ac(new cA(te));
          ue.setCrossOrigin(this.crossOrigin);
          for (var he = 0, pe = Z.length; he < pe; he++) {
            var ve = Z[he], xe = ve.url;
            if (Array.isArray(xe)) {
              se[ve.uuid] = [];
              for (var Me = 0, Ne = xe.length; Me < Ne; Me++) {
                var Qe = xe[Me], Ue = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(Qe) ? Qe : oe.texturePath + Qe;
                se[ve.uuid].push(Ae(Ue));
              }
            } else
              Ue = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(ve.url) ? ve.url : oe.texturePath + ve.url, se[ve.uuid] = Ae(Ue);
          }
        }
        return se;
      }, parseTextures: function(Z, te) {
        function oe(ve, xe) {
          return typeof ve == "number" ? ve : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", ve), xe[ve]);
        }
        var se = {};
        if (Z !== void 0)
          for (var Ae = 0, ue = Z.length; Ae < ue; Ae++) {
            var he, pe = Z[Ae];
            pe.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', pe.uuid), te[pe.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", pe.image), (he = Array.isArray(te[pe.image]) ? new $o(te[pe.image]) : new ii(te[pe.image])).needsUpdate = !0, he.uuid = pe.uuid, pe.name !== void 0 && (he.name = pe.name), pe.mapping !== void 0 && (he.mapping = oe(pe.mapping, Gl)), pe.offset !== void 0 && he.offset.fromArray(pe.offset), pe.repeat !== void 0 && he.repeat.fromArray(pe.repeat), pe.center !== void 0 && he.center.fromArray(pe.center), pe.rotation !== void 0 && (he.rotation = pe.rotation), pe.wrap !== void 0 && (he.wrapS = oe(pe.wrap[0], vu), he.wrapT = oe(pe.wrap[1], vu)), pe.format !== void 0 && (he.format = pe.format), pe.minFilter !== void 0 && (he.minFilter = oe(pe.minFilter, Cu)), pe.magFilter !== void 0 && (he.magFilter = oe(pe.magFilter, Cu)), pe.anisotropy !== void 0 && (he.anisotropy = pe.anisotropy), pe.flipY !== void 0 && (he.flipY = pe.flipY), se[pe.uuid] = he;
          }
        return se;
      }, parseObject: function(Z, te, oe) {
        var se;
        function Ae(ze) {
          return te[ze] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", ze), te[ze];
        }
        function ue(ze) {
          if (ze !== void 0) {
            if (Array.isArray(ze)) {
              for (var et = [], nt = 0, At = ze.length; nt < At; nt++) {
                var Et = ze[nt];
                oe[Et] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", Et), et.push(oe[Et]);
              }
              return et;
            }
            return oe[ze] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", ze), oe[ze];
          }
        }
        switch (Z.type) {
          case "Scene":
            se = new _c(), Z.background !== void 0 && Number.isInteger(Z.background) && (se.background = new sn(Z.background)), Z.fog !== void 0 && (Z.fog.type === "Fog" ? se.fog = new ja(Z.fog.color, Z.fog.near, Z.fog.far) : Z.fog.type === "FogExp2" && (se.fog = new $a(Z.fog.color, Z.fog.density)));
            break;
          case "PerspectiveCamera":
            se = new di(Z.fov, Z.aspect, Z.near, Z.far), Z.focus !== void 0 && (se.focus = Z.focus), Z.zoom !== void 0 && (se.zoom = Z.zoom), Z.filmGauge !== void 0 && (se.filmGauge = Z.filmGauge), Z.filmOffset !== void 0 && (se.filmOffset = Z.filmOffset), Z.view !== void 0 && (se.view = Object.assign({}, Z.view));
            break;
          case "OrthographicCamera":
            se = new Pa(Z.left, Z.right, Z.top, Z.bottom, Z.near, Z.far), Z.zoom !== void 0 && (se.zoom = Z.zoom), Z.view !== void 0 && (se.view = Object.assign({}, Z.view));
            break;
          case "AmbientLight":
            se = new Hc(Z.color, Z.intensity);
            break;
          case "DirectionalLight":
            se = new Uc(Z.color, Z.intensity);
            break;
          case "PointLight":
            se = new Oc(Z.color, Z.intensity, Z.distance, Z.decay);
            break;
          case "RectAreaLight":
            se = new qc(Z.color, Z.intensity, Z.width, Z.height);
            break;
          case "SpotLight":
            se = new Gc(Z.color, Z.intensity, Z.distance, Z.angle, Z.penumbra, Z.decay);
            break;
          case "HemisphereLight":
            se = new kc(Z.color, Z.groundColor, Z.intensity);
            break;
          case "SkinnedMesh":
            console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
          case "Mesh":
            var he = Ae(Z.geometry), pe = ue(Z.material);
            se = he.bones && he.bones.length > 0 ? new Sc(he, pe) : new Ki(he, pe);
            break;
          case "LOD":
            se = new Fs();
            break;
          case "Line":
            se = new Zi(Ae(Z.geometry), ue(Z.material), Z.mode);
            break;
          case "LineLoop":
            se = new Tc(Ae(Z.geometry), ue(Z.material));
            break;
          case "LineSegments":
            se = new ri(Ae(Z.geometry), ue(Z.material));
            break;
          case "PointCloud":
          case "Points":
            se = new Ya(Ae(Z.geometry), ue(Z.material));
            break;
          case "Sprite":
            se = new ks(ue(Z.material));
            break;
          case "Group":
            se = new Da();
            break;
          default:
            se = new Dr();
        }
        if (se.uuid = Z.uuid, Z.name !== void 0 && (se.name = Z.name), Z.matrix !== void 0 ? (se.matrix.fromArray(Z.matrix), Z.matrixAutoUpdate !== void 0 && (se.matrixAutoUpdate = Z.matrixAutoUpdate), se.matrixAutoUpdate && se.matrix.decompose(se.position, se.quaternion, se.scale)) : (Z.position !== void 0 && se.position.fromArray(Z.position), Z.rotation !== void 0 && se.rotation.fromArray(Z.rotation), Z.quaternion !== void 0 && se.quaternion.fromArray(Z.quaternion), Z.scale !== void 0 && se.scale.fromArray(Z.scale)), Z.castShadow !== void 0 && (se.castShadow = Z.castShadow), Z.receiveShadow !== void 0 && (se.receiveShadow = Z.receiveShadow), Z.shadow && (Z.shadow.bias !== void 0 && (se.shadow.bias = Z.shadow.bias), Z.shadow.radius !== void 0 && (se.shadow.radius = Z.shadow.radius), Z.shadow.mapSize !== void 0 && se.shadow.mapSize.fromArray(Z.shadow.mapSize), Z.shadow.camera !== void 0 && (se.shadow.camera = this.parseObject(Z.shadow.camera))), Z.visible !== void 0 && (se.visible = Z.visible), Z.frustumCulled !== void 0 && (se.frustumCulled = Z.frustumCulled), Z.renderOrder !== void 0 && (se.renderOrder = Z.renderOrder), Z.userData !== void 0 && (se.userData = Z.userData), Z.layers !== void 0 && (se.layers.mask = Z.layers), Z.children !== void 0)
          for (var ve = Z.children, xe = 0; xe < ve.length; xe++)
            se.add(this.parseObject(ve[xe], te, oe));
        if (Z.type === "LOD")
          for (var Me = Z.levels, Ne = 0; Ne < Me.length; Ne++) {
            var Qe = Me[Ne], Ue = se.getObjectByProperty("uuid", Qe.object);
            Ue !== void 0 && se.addLevel(Ue, Qe.distance);
          }
        return se;
      } });
      var Jc, Gl = { UVMapping: qe, CubeReflectionMapping: Te, CubeRefractionMapping: Re, EquirectangularReflectionMapping: it, EquirectangularRefractionMapping: Ct, SphericalReflectionMapping: Nt, CubeUVReflectionMapping: Dt, CubeUVRefractionMapping: Er }, vu = { RepeatWrapping: gr, ClampToEdgeWrapping: Cr, MirroredRepeatWrapping: mr }, Cu = { NearestFilter: wr, NearestMipMapNearestFilter: en, NearestMipMapLinearFilter: Wn, LinearFilter: on, LinearMipMapNearestFilter: qn, LinearMipMapLinearFilter: $n };
      function EA(Z) {
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.manager = Z !== void 0 ? Z : to, this.options = void 0;
      }
      function yA() {
        this.type = "ShapePath", this.color = new sn(), this.subPaths = [], this.currentPath = null;
      }
      function BA(Z) {
        this.type = "Font", this.data = Z;
      }
      function Ol(Z, te, oe, se, Ae) {
        var ue = Ae.glyphs[Z] || Ae.glyphs["?"];
        if (ue) {
          var he, pe, ve, xe, Me, Ne, Qe, Ue, ze = new yA();
          if (ue.o)
            for (var et = ue._cachedOutline || (ue._cachedOutline = ue.o.split(" ")), nt = 0, At = et.length; nt < At; )
              switch (et[nt++]) {
                case "m":
                  he = et[nt++] * te + oe, pe = et[nt++] * te + se, ze.moveTo(he, pe);
                  break;
                case "l":
                  he = et[nt++] * te + oe, pe = et[nt++] * te + se, ze.lineTo(he, pe);
                  break;
                case "q":
                  ve = et[nt++] * te + oe, xe = et[nt++] * te + se, Me = et[nt++] * te + oe, Ne = et[nt++] * te + se, ze.quadraticCurveTo(Me, Ne, ve, xe);
                  break;
                case "b":
                  ve = et[nt++] * te + oe, xe = et[nt++] * te + se, Me = et[nt++] * te + oe, Ne = et[nt++] * te + se, Qe = et[nt++] * te + oe, Ue = et[nt++] * te + se, ze.bezierCurveTo(Me, Ne, Qe, Ue, ve, xe);
              }
          return { offsetX: ue.ha * te, path: ze };
        }
      }
      function Iu(Z) {
        this.manager = Z !== void 0 ? Z : to;
      }
      EA.prototype = { constructor: EA, setOptions: function(Z) {
        return this.options = Z, this;
      }, load: function(Z, te, oe, se) {
        Z === void 0 && (Z = ""), this.path !== void 0 && (Z = this.path + Z), Z = this.manager.resolveURL(Z);
        var Ae = this, ue = _a.get(Z);
        if (ue !== void 0)
          return Ae.manager.itemStart(Z), setTimeout(function() {
            te && te(ue), Ae.manager.itemEnd(Z);
          }, 0), ue;
        fetch(Z).then(function(he) {
          return he.blob();
        }).then(function(he) {
          return createImageBitmap(he, Ae.options);
        }).then(function(he) {
          _a.add(Z, he), te && te(he), Ae.manager.itemEnd(Z);
        }).catch(function(he) {
          se && se(he), Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
        });
      }, setCrossOrigin: function() {
        return this;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }, Object.assign(yA.prototype, { moveTo: function(Z, te) {
        this.currentPath = new xo(), this.subPaths.push(this.currentPath), this.currentPath.moveTo(Z, te);
      }, lineTo: function(Z, te) {
        this.currentPath.lineTo(Z, te);
      }, quadraticCurveTo: function(Z, te, oe, se) {
        this.currentPath.quadraticCurveTo(Z, te, oe, se);
      }, bezierCurveTo: function(Z, te, oe, se, Ae, ue) {
        this.currentPath.bezierCurveTo(Z, te, oe, se, Ae, ue);
      }, splineThru: function(Z) {
        this.currentPath.splineThru(Z);
      }, toShapes: function(Z, te) {
        function oe(pr) {
          for (var Fr = [], Rr = 0, fr = pr.length; Rr < fr; Rr++) {
            var br = pr[Rr], ur = new ea();
            ur.curves = br.curves, Fr.push(ur);
          }
          return Fr;
        }
        function se(pr, Fr) {
          for (var Rr = Fr.length, fr = !1, br = Rr - 1, ur = 0; ur < Rr; br = ur++) {
            var zr = Fr[br], Nr = Fr[ur], An = Nr.x - zr.x, En = Nr.y - zr.y;
            if (Math.abs(En) > Number.EPSILON) {
              if (En < 0 && (zr = Fr[ur], An = -An, Nr = Fr[br], En = -En), pr.y < zr.y || pr.y > Nr.y)
                continue;
              if (pr.y === zr.y) {
                if (pr.x === zr.x)
                  return !0;
              } else {
                var ni = En * (pr.x - zr.x) - An * (pr.y - zr.y);
                if (ni === 0)
                  return !0;
                if (ni < 0)
                  continue;
                fr = !fr;
              }
            } else {
              if (pr.y !== zr.y)
                continue;
              if (Nr.x <= pr.x && pr.x <= zr.x || zr.x <= pr.x && pr.x <= Nr.x)
                return !0;
            }
          }
          return fr;
        }
        var Ae = jo.isClockWise, ue = this.subPaths;
        if (ue.length === 0)
          return [];
        if (te === !0)
          return oe(ue);
        var he, pe, ve, xe = [];
        if (ue.length === 1)
          return pe = ue[0], (ve = new ea()).curves = pe.curves, xe.push(ve), xe;
        var Me = !Ae(ue[0].getPoints());
        Me = Z ? !Me : Me;
        var Ne, Qe, Ue = [], ze = [], et = [], nt = 0;
        ze[nt] = void 0, et[nt] = [];
        for (var At = 0, Et = ue.length; At < Et; At++)
          he = Ae(Ne = (pe = ue[At]).getPoints()), (he = Z ? !he : he) ? (!Me && ze[nt] && nt++, ze[nt] = { s: new ea(), p: Ne }, ze[nt].s.curves = pe.curves, Me && nt++, et[nt] = []) : et[nt].push({ h: pe, p: Ne[0] });
        if (!ze[0])
          return oe(ue);
        if (ze.length > 1) {
          for (var st = !1, Mt = [], Ft = 0, lt = ze.length; Ft < lt; Ft++)
            Ue[Ft] = [];
          for (Ft = 0, lt = ze.length; Ft < lt; Ft++)
            for (var wt = et[Ft], jt = 0; jt < wt.length; jt++) {
              for (var Ot = wt[jt], er = !0, qt = 0; qt < ze.length; qt++)
                se(Ot.p, ze[qt].p) && (Ft !== qt && Mt.push({ froms: Ft, tos: qt, hole: jt }), er ? (er = !1, Ue[qt].push(Ot)) : st = !0);
              er && Ue[Ft].push(Ot);
            }
          Mt.length > 0 && (st || (et = Ue));
        }
        At = 0;
        for (var ir = ze.length; At < ir; At++) {
          ve = ze[At].s, xe.push(ve);
          for (var dr = 0, yr = (Qe = et[At]).length; dr < yr; dr++)
            ve.holes.push(Qe[dr].h);
        }
        return xe;
      } }), Object.assign(BA.prototype, { isFont: !0, generateShapes: function(Z, te) {
        te === void 0 && (te = 100);
        for (var oe = [], se = function(he, pe, ve) {
          for (var xe = Array.from ? Array.from(he) : String(he).split(""), Me = pe / ve.resolution, Ne = (ve.boundingBox.yMax - ve.boundingBox.yMin + ve.underlineThickness) * Me, Qe = [], Ue = 0, ze = 0, et = 0; et < xe.length; et++) {
            var nt = xe[et];
            if (nt === `
`)
              Ue = 0, ze -= Ne;
            else {
              var At = Ol(nt, Me, Ue, ze, ve);
              Ue += At.offsetX, Qe.push(At.path);
            }
          }
          return Qe;
        }(Z, te, this.data), Ae = 0, ue = se.length; Ae < ue; Ae++)
          Array.prototype.push.apply(oe, se[Ae].toShapes());
        return oe;
      } }), Object.assign(Iu.prototype, { load: function(Z, te, oe, se) {
        var Ae = this, ue = new yo(this.manager);
        ue.setPath(this.path), ue.load(Z, function(he) {
          var pe;
          try {
            pe = JSON.parse(he);
          } catch {
            console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), pe = JSON.parse(he.substring(65, he.length - 2));
          }
          var ve = Ae.parse(pe);
          te && te(ve);
        }, oe, se);
      }, parse: function(Z) {
        return new BA(Z);
      }, setPath: function(Z) {
        return this.path = Z, this;
      } });
      var vA = { getContext: function() {
        return Jc === void 0 && (Jc = new (window.AudioContext || window.webkitAudioContext)()), Jc;
      }, setContext: function(Z) {
        Jc = Z;
      } };
      function CA(Z) {
        this.manager = Z !== void 0 ? Z : to;
      }
      function xu() {
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = 0.064, this.cameraL = new di(), this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new di(), this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1;
      }
      function lc(Z, te, oe) {
        Dr.call(this), this.type = "CubeCamera";
        var se = new di(90, 1, Z, te);
        se.up.set(0, -1, 0), se.lookAt(new mt(1, 0, 0)), this.add(se);
        var Ae = new di(90, 1, Z, te);
        Ae.up.set(0, -1, 0), Ae.lookAt(new mt(-1, 0, 0)), this.add(Ae);
        var ue = new di(90, 1, Z, te);
        ue.up.set(0, 0, 1), ue.lookAt(new mt(0, 1, 0)), this.add(ue);
        var he = new di(90, 1, Z, te);
        he.up.set(0, 0, -1), he.lookAt(new mt(0, -1, 0)), this.add(he);
        var pe = new di(90, 1, Z, te);
        pe.up.set(0, -1, 0), pe.lookAt(new mt(0, 0, 1)), this.add(pe);
        var ve = new di(90, 1, Z, te);
        ve.up.set(0, -1, 0), ve.lookAt(new mt(0, 0, -1)), this.add(ve);
        var xe = { format: Rt, magFilter: on, minFilter: on };
        this.renderTarget = new Oa(oe, oe, xe), this.renderTarget.texture.name = "CubeCamera", this.update = function(Me, Ne) {
          this.parent === null && this.updateMatrixWorld();
          var Qe = this.renderTarget, Ue = Qe.texture.generateMipmaps;
          Qe.texture.generateMipmaps = !1, Qe.activeCubeFace = 0, Me.render(Ne, se, Qe), Qe.activeCubeFace = 1, Me.render(Ne, Ae, Qe), Qe.activeCubeFace = 2, Me.render(Ne, ue, Qe), Qe.activeCubeFace = 3, Me.render(Ne, he, Qe), Qe.activeCubeFace = 4, Me.render(Ne, pe, Qe), Qe.texture.generateMipmaps = Ue, Qe.activeCubeFace = 5, Me.render(Ne, ve, Qe), Me.setRenderTarget(null);
        }, this.clear = function(Me, Ne, Qe, Ue) {
          for (var ze = this.renderTarget, et = 0; et < 6; et++)
            ze.activeCubeFace = et, Me.setRenderTarget(ze), Me.clear(Ne, Qe, Ue);
          Me.setRenderTarget(null);
        };
      }
      function IA() {
        Dr.call(this), this.type = "AudioListener", this.context = vA.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null;
      }
      function ls(Z) {
        Dr.call(this), this.type = "Audio", this.context = Z.context, this.gain = this.context.createGain(), this.gain.connect(Z.getInput()), this.autoplay = !1, this.buffer = null, this.loop = !1, this.startTime = 0, this.offset = 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this.filters = [];
      }
      function xA(Z) {
        ls.call(this, Z), this.panner = this.context.createPanner(), this.panner.connect(this.gain);
      }
      function wA(Z, te) {
        this.analyser = Z.context.createAnalyser(), this.analyser.fftSize = te !== void 0 ? te : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), Z.getOutput().connect(this.analyser);
      }
      function bA(Z, te, oe) {
        this.binding = Z, this.valueSize = oe;
        var se, Ae = Float64Array;
        switch (te) {
          case "quaternion":
            se = this._slerp;
            break;
          case "string":
          case "bool":
            Ae = Array, se = this._select;
            break;
          default:
            se = this._lerp;
        }
        this.buffer = new Ae(4 * oe), this._mixBufferRegion = se, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0;
      }
      Object.assign(CA.prototype, { load: function(Z, te, oe, se) {
        var Ae = new yo(this.manager);
        Ae.setResponseType("arraybuffer"), Ae.load(Z, function(ue) {
          var he = ue.slice(0);
          vA.getContext().decodeAudioData(he, function(pe) {
            te(pe);
          });
        }, oe, se);
      } }), Object.assign(xu.prototype, { update: function() {
        var Z, te, oe, se, Ae, ue, he, pe, ve = new pn(), xe = new pn();
        return function(Me) {
          if (Z !== this || te !== Me.focus || oe !== Me.fov || se !== Me.aspect * this.aspect || Ae !== Me.near || ue !== Me.far || he !== Me.zoom || pe !== this.eyeSep) {
            Z = this, te = Me.focus, oe = Me.fov, se = Me.aspect * this.aspect, Ae = Me.near, ue = Me.far, he = Me.zoom;
            var Ne, Qe, Ue = Me.projectionMatrix.clone(), ze = (pe = this.eyeSep / 2) * Ae / te, et = Ae * Math.tan(bn.DEG2RAD * oe * 0.5) / he;
            xe.elements[12] = -pe, ve.elements[12] = pe, Ne = -et * se + ze, Qe = et * se + ze, Ue.elements[0] = 2 * Ae / (Qe - Ne), Ue.elements[8] = (Qe + Ne) / (Qe - Ne), this.cameraL.projectionMatrix.copy(Ue), Ne = -et * se - ze, Qe = et * se - ze, Ue.elements[0] = 2 * Ae / (Qe - Ne), Ue.elements[8] = (Qe + Ne) / (Qe - Ne), this.cameraR.projectionMatrix.copy(Ue);
          }
          this.cameraL.matrixWorld.copy(Me.matrixWorld).multiply(xe), this.cameraR.matrixWorld.copy(Me.matrixWorld).multiply(ve);
        };
      }() }), lc.prototype = Object.create(Dr.prototype), lc.prototype.constructor = lc, IA.prototype = Object.assign(Object.create(Dr.prototype), { constructor: IA, getInput: function() {
        return this.gain;
      }, removeFilter: function() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
      }, getFilter: function() {
        return this.filter;
      }, setFilter: function(Z) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = Z, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
      }, getMasterVolume: function() {
        return this.gain.gain.value;
      }, setMasterVolume: function(Z) {
        return this.gain.gain.setTargetAtTime(Z, this.context.currentTime, 0.01), this;
      }, updateMatrixWorld: function() {
        var Z = new mt(), te = new ci(), oe = new mt(), se = new mt();
        return function(Ae) {
          Dr.prototype.updateMatrixWorld.call(this, Ae);
          var ue = this.context.listener, he = this.up;
          this.matrixWorld.decompose(Z, te, oe), se.set(0, 0, -1).applyQuaternion(te), ue.positionX ? (ue.positionX.setValueAtTime(Z.x, this.context.currentTime), ue.positionY.setValueAtTime(Z.y, this.context.currentTime), ue.positionZ.setValueAtTime(Z.z, this.context.currentTime), ue.forwardX.setValueAtTime(se.x, this.context.currentTime), ue.forwardY.setValueAtTime(se.y, this.context.currentTime), ue.forwardZ.setValueAtTime(se.z, this.context.currentTime), ue.upX.setValueAtTime(he.x, this.context.currentTime), ue.upY.setValueAtTime(he.y, this.context.currentTime), ue.upZ.setValueAtTime(he.z, this.context.currentTime)) : (ue.setPosition(Z.x, Z.y, Z.z), ue.setOrientation(se.x, se.y, se.z, he.x, he.y, he.z));
        };
      }() }), ls.prototype = Object.assign(Object.create(Dr.prototype), { constructor: ls, getOutput: function() {
        return this.gain;
      }, setNodeSource: function(Z) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = Z, this.connect(), this;
      }, setMediaElementSource: function(Z) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(Z), this.connect(), this;
      }, setBuffer: function(Z) {
        return this.buffer = Z, this.sourceType = "buffer", this.autoplay && this.play(), this;
      }, play: function() {
        if (this.isPlaying !== !0) {
          if (this.hasPlaybackControl !== !1) {
            var Z = this.context.createBufferSource();
            return Z.buffer = this.buffer, Z.loop = this.loop, Z.onended = this.onEnded.bind(this), Z.playbackRate.setValueAtTime(this.playbackRate, this.startTime), this.startTime = this.context.currentTime, Z.start(this.startTime, this.offset), this.isPlaying = !0, this.source = Z, this.connect();
          }
          console.warn("THREE.Audio: this Audio has no playback control.");
        } else
          console.warn("THREE.Audio: Audio is already playing.");
      }, pause: function() {
        if (this.hasPlaybackControl !== !1)
          return this.isPlaying === !0 && (this.source.stop(), this.source.onended = null, this.offset += (this.context.currentTime - this.startTime) * this.playbackRate, this.isPlaying = !1), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, stop: function() {
        if (this.hasPlaybackControl !== !1)
          return this.source.stop(), this.source.onended = null, this.offset = 0, this.isPlaying = !1, this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, connect: function() {
        if (this.filters.length > 0) {
          this.source.connect(this.filters[0]);
          for (var Z = 1, te = this.filters.length; Z < te; Z++)
            this.filters[Z - 1].connect(this.filters[Z]);
          this.filters[this.filters.length - 1].connect(this.getOutput());
        } else
          this.source.connect(this.getOutput());
        return this;
      }, disconnect: function() {
        if (this.filters.length > 0) {
          this.source.disconnect(this.filters[0]);
          for (var Z = 1, te = this.filters.length; Z < te; Z++)
            this.filters[Z - 1].disconnect(this.filters[Z]);
          this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else
          this.source.disconnect(this.getOutput());
        return this;
      }, getFilters: function() {
        return this.filters;
      }, setFilters: function(Z) {
        return Z || (Z = []), this.isPlaying === !0 ? (this.disconnect(), this.filters = Z, this.connect()) : this.filters = Z, this;
      }, getFilter: function() {
        return this.getFilters()[0];
      }, setFilter: function(Z) {
        return this.setFilters(Z ? [Z] : []);
      }, setPlaybackRate: function(Z) {
        if (this.hasPlaybackControl !== !1)
          return this.playbackRate = Z, this.isPlaying === !0 && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getPlaybackRate: function() {
        return this.playbackRate;
      }, onEnded: function() {
        this.isPlaying = !1;
      }, getLoop: function() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
      }, setLoop: function(Z) {
        if (this.hasPlaybackControl !== !1)
          return this.loop = Z, this.isPlaying === !0 && (this.source.loop = this.loop), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getVolume: function() {
        return this.gain.gain.value;
      }, setVolume: function(Z) {
        return this.gain.gain.setTargetAtTime(Z, this.context.currentTime, 0.01), this;
      } }), xA.prototype = Object.assign(Object.create(ls.prototype), { constructor: xA, getOutput: function() {
        return this.panner;
      }, getRefDistance: function() {
        return this.panner.refDistance;
      }, setRefDistance: function(Z) {
        return this.panner.refDistance = Z, this;
      }, getRolloffFactor: function() {
        return this.panner.rolloffFactor;
      }, setRolloffFactor: function(Z) {
        return this.panner.rolloffFactor = Z, this;
      }, getDistanceModel: function() {
        return this.panner.distanceModel;
      }, setDistanceModel: function(Z) {
        return this.panner.distanceModel = Z, this;
      }, getMaxDistance: function() {
        return this.panner.maxDistance;
      }, setMaxDistance: function(Z) {
        return this.panner.maxDistance = Z, this;
      }, setDirectionalCone: function(Z, te, oe) {
        return this.panner.coneInnerAngle = Z, this.panner.coneOuterAngle = te, this.panner.coneOuterGain = oe, this;
      }, updateMatrixWorld: function() {
        var Z = new mt(), te = new ci(), oe = new mt(), se = new mt();
        return function(Ae) {
          Dr.prototype.updateMatrixWorld.call(this, Ae);
          var ue = this.panner;
          this.matrixWorld.decompose(Z, te, oe), se.set(0, 0, 1).applyQuaternion(te), ue.setPosition(Z.x, Z.y, Z.z), ue.setOrientation(se.x, se.y, se.z);
        };
      }() }), Object.assign(wA.prototype, { getFrequencyData: function() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
      }, getAverageFrequency: function() {
        for (var Z = 0, te = this.getFrequencyData(), oe = 0; oe < te.length; oe++)
          Z += te[oe];
        return Z / te.length;
      } }), Object.assign(bA.prototype, { accumulate: function(Z, te) {
        var oe = this.buffer, se = this.valueSize, Ae = Z * se + se, ue = this.cumulativeWeight;
        if (ue === 0) {
          for (var he = 0; he !== se; ++he)
            oe[Ae + he] = oe[he];
          ue = te;
        } else {
          var pe = te / (ue += te);
          this._mixBufferRegion(oe, Ae, 0, pe, se);
        }
        this.cumulativeWeight = ue;
      }, apply: function(Z) {
        var te = this.valueSize, oe = this.buffer, se = Z * te + te, Ae = this.cumulativeWeight, ue = this.binding;
        if (this.cumulativeWeight = 0, Ae < 1) {
          var he = 3 * te;
          this._mixBufferRegion(oe, se, he, 1 - Ae, te);
        }
        for (var pe = te, ve = te + te; pe !== ve; ++pe)
          if (oe[pe] !== oe[pe + te]) {
            ue.setValue(oe, se);
            break;
          }
      }, saveOriginalState: function() {
        var Z = this.binding, te = this.buffer, oe = this.valueSize, se = 3 * oe;
        Z.getValue(te, se);
        for (var Ae = oe, ue = se; Ae !== ue; ++Ae)
          te[Ae] = te[se + Ae % oe];
        this.cumulativeWeight = 0;
      }, restoreOriginalState: function() {
        var Z = 3 * this.valueSize;
        this.binding.setValue(this.buffer, Z);
      }, _select: function(Z, te, oe, se, Ae) {
        if (se >= 0.5)
          for (var ue = 0; ue !== Ae; ++ue)
            Z[te + ue] = Z[oe + ue];
      }, _slerp: function(Z, te, oe, se) {
        ci.slerpFlat(Z, te, Z, te, Z, oe, se);
      }, _lerp: function(Z, te, oe, se, Ae) {
        for (var ue = 1 - se, he = 0; he !== Ae; ++he) {
          var pe = te + he;
          Z[pe] = Z[pe] * ue + Z[oe + he] * se;
        }
      } });
      var _A, wu;
      function bu(Z, te, oe) {
        var se = oe || qi.parseTrackName(te);
        this._targetGroup = Z, this._bindings = Z.subscribe_(te, se);
      }
      function qi(Z, te, oe) {
        this.path = te, this.parsedPath = oe || qi.parseTrackName(te), this.node = qi.findNode(Z, this.parsedPath.nodeName) || Z, this.rootNode = Z;
      }
      function _u() {
        this.uuid = bn.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        var Z = {};
        this._indicesByUUID = Z;
        for (var te = 0, oe = arguments.length; te !== oe; ++te)
          Z[arguments[te].uuid] = te;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        var se = this;
        this.stats = { objects: { get total() {
          return se._objects.length;
        }, get inUse() {
          return this.total - se.nCachedObjects_;
        } }, get bindingsPerObject() {
          return se._bindings.length;
        } };
      }
      function Qu(Z, te, oe) {
        this._mixer = Z, this._clip = te, this._localRoot = oe || null;
        for (var se = te.tracks, Ae = se.length, ue = new Array(Ae), he = { endingStart: Xr, endingEnd: Xr }, pe = 0; pe !== Ae; ++pe) {
          var ve = se[pe].createInterpolant(null);
          ue[pe] = ve, ve.settings = he;
        }
        this._interpolantSettings = he, this._interpolants = ue, this._propertyBindings = new Array(Ae), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Nn, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
      }
      function QA(Z) {
        this._root = Z, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
      }
      function Wc(Z) {
        typeof Z == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), Z = arguments[1]), this.value = Z;
      }
      function SA() {
        Wr.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0;
      }
      function TA(Z, te, oe) {
        ha.call(this, Z, te), this.meshPerAttribute = oe || 1;
      }
      function RA(Z, te, oe) {
        Mn.call(this, Z, te), this.meshPerAttribute = oe || 1;
      }
      function Su(Z, te, oe, se) {
        this.ray = new da(Z, te), this.near = oe || 0, this.far = se || 1 / 0, this.params = { Mesh: {}, Line: {}, LOD: {}, Points: { threshold: 1 }, Sprite: {} }, Object.defineProperties(this.params, { PointCloud: { get: function() {
          return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points;
        } } });
      }
      function Tu(Z, te) {
        return Z.distance - te.distance;
      }
      function MA(Z, te, oe, se) {
        if (Z.visible !== !1 && (Z.raycast(te, oe), se === !0))
          for (var Ae = Z.children, ue = 0, he = Ae.length; ue < he; ue++)
            MA(Ae[ue], te, oe, !0);
      }
      function Ru(Z) {
        this.autoStart = Z === void 0 || Z, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
      }
      function Mu(Z, te, oe) {
        return this.radius = Z !== void 0 ? Z : 1, this.phi = te !== void 0 ? te : 0, this.theta = oe !== void 0 ? oe : 0, this;
      }
      function Nu(Z, te, oe) {
        return this.radius = Z !== void 0 ? Z : 1, this.theta = te !== void 0 ? te : 0, this.y = oe !== void 0 ? oe : 0, this;
      }
      function NA(Z, te) {
        this.min = Z !== void 0 ? Z : new xr(1 / 0, 1 / 0), this.max = te !== void 0 ? te : new xr(-1 / 0, -1 / 0);
      }
      function kA(Z, te) {
        this.start = Z !== void 0 ? Z : new mt(), this.end = te !== void 0 ? te : new mt();
      }
      function dc(Z) {
        Dr.call(this), this.material = Z, this.render = function() {
        };
      }
      function hc(Z, te, oe, se) {
        this.object = Z, this.size = te !== void 0 ? te : 1;
        var Ae = oe !== void 0 ? oe : 16711680, ue = se !== void 0 ? se : 1, he = 0, pe = this.object.geometry;
        pe && pe.isGeometry ? he = 3 * pe.faces.length : pe && pe.isBufferGeometry && (he = pe.attributes.normal.count);
        var ve = new Wr(), xe = new Pr(2 * he * 3, 3);
        ve.addAttribute("position", xe), ri.call(this, ve, new ei({ color: Ae, linewidth: ue })), this.matrixAutoUpdate = !1, this.update();
      }
      function ds(Z, te) {
        Dr.call(this), this.light = Z, this.light.updateMatrixWorld(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.color = te;
        for (var oe = new Wr(), se = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], Ae = 0, ue = 1; Ae < 32; Ae++, ue++) {
          var he = Ae / 32 * Math.PI * 2, pe = ue / 32 * Math.PI * 2;
          se.push(Math.cos(he), Math.sin(he), 1, Math.cos(pe), Math.sin(pe), 1);
        }
        oe.addAttribute("position", new Pr(se, 3));
        var ve = new ei({ fog: !1 });
        this.cone = new ri(oe, ve), this.add(this.cone), this.update();
      }
      function hs(Z) {
        for (var te = function Me(Ne) {
          var Qe = [];
          Ne && Ne.isBone && Qe.push(Ne);
          for (var Ue = 0; Ue < Ne.children.length; Ue++)
            Qe.push.apply(Qe, Me(Ne.children[Ue]));
          return Qe;
        }(Z), oe = new Wr(), se = [], Ae = [], ue = new sn(0, 0, 1), he = new sn(0, 1, 0), pe = 0; pe < te.length; pe++) {
          var ve = te[pe];
          ve.parent && ve.parent.isBone && (se.push(0, 0, 0), se.push(0, 0, 0), Ae.push(ue.r, ue.g, ue.b), Ae.push(he.r, he.g, he.b));
        }
        oe.addAttribute("position", new Pr(se, 3)), oe.addAttribute("color", new Pr(Ae, 3));
        var xe = new ei({ vertexColors: ft, depthTest: !1, depthWrite: !1, transparent: !0 });
        ri.call(this, oe, xe), this.root = Z, this.bones = te, this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1;
      }
      function fs(Z, te, oe) {
        this.light = Z, this.light.updateMatrixWorld(), this.color = oe;
        var se = new ma(te, 4, 2), Ae = new io({ wireframe: !0, fog: !1 });
        Ki.call(this, se, Ae), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
      }
      function ps(Z, te) {
        Dr.call(this), this.light = Z, this.light.updateMatrixWorld(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.color = te;
        var oe = new ei({ fog: !1 }), se = new Wr();
        se.addAttribute("position", new Mn(new Float32Array(15), 3)), this.line = new Zi(se, oe), this.add(this.line), this.update();
      }
      function gs(Z, te, oe) {
        Dr.call(this), this.light = Z, this.light.updateMatrixWorld(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.color = oe;
        var se = new fa(te);
        se.rotateY(0.5 * Math.PI), this.material = new io({ wireframe: !0, fog: !1 }), this.color === void 0 && (this.material.vertexColors = ft);
        var Ae = se.getAttribute("position"), ue = new Float32Array(3 * Ae.count);
        se.addAttribute("color", new Mn(ue, 3)), this.add(new Ki(se, this.material)), this.update();
      }
      function fc(Z, te, oe, se) {
        Z = Z || 10, te = te || 10, oe = new sn(oe !== void 0 ? oe : 4473924), se = new sn(se !== void 0 ? se : 8947848);
        for (var Ae = te / 2, ue = Z / te, he = Z / 2, pe = [], ve = [], xe = 0, Me = 0, Ne = -he; xe <= te; xe++, Ne += ue) {
          pe.push(-he, 0, Ne, he, 0, Ne), pe.push(Ne, 0, -he, Ne, 0, he);
          var Qe = xe === Ae ? oe : se;
          Qe.toArray(ve, Me), Me += 3, Qe.toArray(ve, Me), Me += 3, Qe.toArray(ve, Me), Me += 3, Qe.toArray(ve, Me), Me += 3;
        }
        var Ue = new Wr();
        Ue.addAttribute("position", new Pr(pe, 3)), Ue.addAttribute("color", new Pr(ve, 3));
        var ze = new ei({ vertexColors: ft });
        ri.call(this, Ue, ze);
      }
      function Kc(Z, te, oe, se, Ae, ue) {
        Z = Z || 10, te = te || 16, oe = oe || 8, se = se || 64, Ae = new sn(Ae !== void 0 ? Ae : 4473924), ue = new sn(ue !== void 0 ? ue : 8947848);
        var he, pe, ve, xe, Me, Ne, Qe, Ue = [], ze = [];
        for (xe = 0; xe <= te; xe++)
          ve = xe / te * (2 * Math.PI), he = Math.sin(ve) * Z, pe = Math.cos(ve) * Z, Ue.push(0, 0, 0), Ue.push(he, 0, pe), Qe = 1 & xe ? Ae : ue, ze.push(Qe.r, Qe.g, Qe.b), ze.push(Qe.r, Qe.g, Qe.b);
        for (xe = 0; xe <= oe; xe++)
          for (Qe = 1 & xe ? Ae : ue, Ne = Z - Z / oe * xe, Me = 0; Me < se; Me++)
            ve = Me / se * (2 * Math.PI), he = Math.sin(ve) * Ne, pe = Math.cos(ve) * Ne, Ue.push(he, 0, pe), ze.push(Qe.r, Qe.g, Qe.b), ve = (Me + 1) / se * (2 * Math.PI), he = Math.sin(ve) * Ne, pe = Math.cos(ve) * Ne, Ue.push(he, 0, pe), ze.push(Qe.r, Qe.g, Qe.b);
        var et = new Wr();
        et.addAttribute("position", new Pr(Ue, 3)), et.addAttribute("color", new Pr(ze, 3));
        var nt = new ei({ vertexColors: ft });
        ri.call(this, et, nt);
      }
      function pc(Z, te, oe, se) {
        this.object = Z, this.size = te !== void 0 ? te : 1;
        var Ae = oe !== void 0 ? oe : 16776960, ue = se !== void 0 ? se : 1, he = 0, pe = this.object.geometry;
        pe && pe.isGeometry ? he = pe.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
        var ve = new Wr(), xe = new Pr(2 * he * 3, 3);
        ve.addAttribute("position", xe), ri.call(this, ve, new ei({ color: Ae, linewidth: ue })), this.matrixAutoUpdate = !1, this.update();
      }
      function ms(Z, te, oe) {
        Dr.call(this), this.light = Z, this.light.updateMatrixWorld(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.color = oe, te === void 0 && (te = 1);
        var se = new Wr();
        se.addAttribute("position", new Pr([-te, te, 0, te, te, 0, te, -te, 0, -te, -te, 0, -te, te, 0], 3));
        var Ae = new ei({ fog: !1 });
        this.lightPlane = new Zi(se, Ae), this.add(this.lightPlane), (se = new Wr()).addAttribute("position", new Pr([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new Zi(se, Ae), this.add(this.targetLine), this.update();
      }
      function gc(Z) {
        var te = new Wr(), oe = new ei({ color: 16777215, vertexColors: tt }), se = [], Ae = [], ue = {}, he = new sn(16755200), pe = new sn(16711680), ve = new sn(43775), xe = new sn(16777215), Me = new sn(3355443);
        function Ne(Ue, ze, et) {
          Qe(Ue, et), Qe(ze, et);
        }
        function Qe(Ue, ze) {
          se.push(0, 0, 0), Ae.push(ze.r, ze.g, ze.b), ue[Ue] === void 0 && (ue[Ue] = []), ue[Ue].push(se.length / 3 - 1);
        }
        Ne("n1", "n2", he), Ne("n2", "n4", he), Ne("n4", "n3", he), Ne("n3", "n1", he), Ne("f1", "f2", he), Ne("f2", "f4", he), Ne("f4", "f3", he), Ne("f3", "f1", he), Ne("n1", "f1", he), Ne("n2", "f2", he), Ne("n3", "f3", he), Ne("n4", "f4", he), Ne("p", "n1", pe), Ne("p", "n2", pe), Ne("p", "n3", pe), Ne("p", "n4", pe), Ne("u1", "u2", ve), Ne("u2", "u3", ve), Ne("u3", "u1", ve), Ne("c", "t", xe), Ne("p", "c", Me), Ne("cn1", "cn2", Me), Ne("cn3", "cn4", Me), Ne("cf1", "cf2", Me), Ne("cf3", "cf4", Me), te.addAttribute("position", new Pr(se, 3)), te.addAttribute("color", new Pr(Ae, 3)), ri.call(this, te, oe), this.camera = Z, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = ue, this.update();
      }
      function Sa(Z, te) {
        this.object = Z, te === void 0 && (te = 16776960);
        var oe = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), se = new Float32Array(24), Ae = new Wr();
        Ae.setIndex(new Mn(oe, 1)), Ae.addAttribute("position", new Mn(se, 3)), ri.call(this, Ae, new ei({ color: te })), this.matrixAutoUpdate = !1, this.update();
      }
      function mc(Z, te) {
        this.type = "Box3Helper", this.box = Z;
        var oe = te !== void 0 ? te : 16776960, se = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), Ae = new Wr();
        Ae.setIndex(new Mn(se, 1)), Ae.addAttribute("position", new Pr([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), ri.call(this, Ae, new ei({ color: oe })), this.geometry.computeBoundingSphere();
      }
      function Ec(Z, te, oe) {
        this.type = "PlaneHelper", this.plane = Z, this.size = te === void 0 ? 1 : te;
        var se = oe !== void 0 ? oe : 16776960, Ae = new Wr();
        Ae.addAttribute("position", new Pr([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), Ae.computeBoundingSphere(), Zi.call(this, Ae, new ei({ color: se }));
        var ue = new Wr();
        ue.addAttribute("position", new Pr([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), ue.computeBoundingSphere(), this.add(new Ki(ue, new io({ color: se, opacity: 0.2, transparent: !0, depthWrite: !1 })));
      }
      function Ta(Z, te, oe, se, Ae, ue) {
        Dr.call(this), se === void 0 && (se = 16776960), oe === void 0 && (oe = 1), Ae === void 0 && (Ae = 0.2 * oe), ue === void 0 && (ue = 0.2 * Ae), _A === void 0 && ((_A = new Wr()).addAttribute("position", new Pr([0, 0, 0, 0, 1, 0], 3)), (wu = new Yo(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)), this.position.copy(te), this.line = new Zi(_A, new ei({ color: se })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new Ki(wu, new io({ color: se })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(Z), this.setLength(oe, Ae, ue);
      }
      function yc(Z) {
        var te = [0, 0, 0, Z = Z || 1, 0, 0, 0, 0, 0, 0, Z, 0, 0, 0, 0, 0, 0, Z], oe = new Wr();
        oe.addAttribute("position", new Pr(te, 3)), oe.addAttribute("color", new Pr([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1], 3));
        var se = new ei({ vertexColors: ft });
        ri.call(this, oe, se);
      }
      function Pl(Z, te, oe, se, Ae, ue, he) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new Do(Z, te, oe, Ae, ue, he);
      }
      Object.assign(bu.prototype, { getValue: function(Z, te) {
        this.bind();
        var oe = this._targetGroup.nCachedObjects_, se = this._bindings[oe];
        se !== void 0 && se.getValue(Z, te);
      }, setValue: function(Z, te) {
        for (var oe = this._bindings, se = this._targetGroup.nCachedObjects_, Ae = oe.length; se !== Ae; ++se)
          oe[se].setValue(Z, te);
      }, bind: function() {
        for (var Z = this._bindings, te = this._targetGroup.nCachedObjects_, oe = Z.length; te !== oe; ++te)
          Z[te].bind();
      }, unbind: function() {
        for (var Z = this._bindings, te = this._targetGroup.nCachedObjects_, oe = Z.length; te !== oe; ++te)
          Z[te].unbind();
      } }), Object.assign(qi, { Composite: bu, create: function(Z, te, oe) {
        return Z && Z.isAnimationObjectGroup ? new qi.Composite(Z, te, oe) : new qi(Z, te, oe);
      }, sanitizeNodeName: function() {
        var Z = new RegExp("[\\[\\]\\.:\\/]", "g");
        return function(te) {
          return te.replace(/\s/g, "_").replace(Z, "");
        };
      }(), parseTrackName: function() {
        var Z = "[^\\[\\]\\.:\\/]", te = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]", oe = /((?:WC+[\/:])*)/.source.replace("WC", Z), se = /(WCOD+)?/.source.replace("WCOD", te), Ae = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Z), ue = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Z), he = new RegExp("^" + oe + se + Ae + ue + "$"), pe = ["material", "materials", "bones"];
        return function(ve) {
          var xe = he.exec(ve);
          if (!xe)
            throw new Error("PropertyBinding: Cannot parse trackName: " + ve);
          var Me = { nodeName: xe[2], objectName: xe[3], objectIndex: xe[4], propertyName: xe[5], propertyIndex: xe[6] }, Ne = Me.nodeName && Me.nodeName.lastIndexOf(".");
          if (Ne !== void 0 && Ne !== -1) {
            var Qe = Me.nodeName.substring(Ne + 1);
            pe.indexOf(Qe) !== -1 && (Me.nodeName = Me.nodeName.substring(0, Ne), Me.objectName = Qe);
          }
          if (Me.propertyName === null || Me.propertyName.length === 0)
            throw new Error("PropertyBinding: can not parse propertyName from trackName: " + ve);
          return Me;
        };
      }(), findNode: function(Z, te) {
        if (!te || te === "" || te === "root" || te === "." || te === -1 || te === Z.name || te === Z.uuid)
          return Z;
        if (Z.skeleton) {
          var oe = Z.skeleton.getBoneByName(te);
          if (oe !== void 0)
            return oe;
        }
        if (Z.children) {
          var se = function(ue) {
            for (var he = 0; he < ue.length; he++) {
              var pe = ue[he];
              if (pe.name === te || pe.uuid === te)
                return pe;
              var ve = se(pe.children);
              if (ve)
                return ve;
            }
            return null;
          }, Ae = se(Z.children);
          if (Ae)
            return Ae;
        }
        return null;
      } }), Object.assign(qi.prototype, { _getValue_unavailable: function() {
      }, _setValue_unavailable: function() {
      }, BindingType: { Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3 }, Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 }, GetterByBindingType: [function(Z, te) {
        Z[te] = this.node[this.propertyName];
      }, function(Z, te) {
        for (var oe = this.resolvedProperty, se = 0, Ae = oe.length; se !== Ae; ++se)
          Z[te++] = oe[se];
      }, function(Z, te) {
        Z[te] = this.resolvedProperty[this.propertyIndex];
      }, function(Z, te) {
        this.resolvedProperty.toArray(Z, te);
      }], SetterByBindingTypeAndVersioning: [[function(Z, te) {
        this.targetObject[this.propertyName] = Z[te];
      }, function(Z, te) {
        this.targetObject[this.propertyName] = Z[te], this.targetObject.needsUpdate = !0;
      }, function(Z, te) {
        this.targetObject[this.propertyName] = Z[te], this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Z, te) {
        for (var oe = this.resolvedProperty, se = 0, Ae = oe.length; se !== Ae; ++se)
          oe[se] = Z[te++];
      }, function(Z, te) {
        for (var oe = this.resolvedProperty, se = 0, Ae = oe.length; se !== Ae; ++se)
          oe[se] = Z[te++];
        this.targetObject.needsUpdate = !0;
      }, function(Z, te) {
        for (var oe = this.resolvedProperty, se = 0, Ae = oe.length; se !== Ae; ++se)
          oe[se] = Z[te++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Z, te) {
        this.resolvedProperty[this.propertyIndex] = Z[te];
      }, function(Z, te) {
        this.resolvedProperty[this.propertyIndex] = Z[te], this.targetObject.needsUpdate = !0;
      }, function(Z, te) {
        this.resolvedProperty[this.propertyIndex] = Z[te], this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Z, te) {
        this.resolvedProperty.fromArray(Z, te);
      }, function(Z, te) {
        this.resolvedProperty.fromArray(Z, te), this.targetObject.needsUpdate = !0;
      }, function(Z, te) {
        this.resolvedProperty.fromArray(Z, te), this.targetObject.matrixWorldNeedsUpdate = !0;
      }]], getValue: function(Z, te) {
        this.bind(), this.getValue(Z, te);
      }, setValue: function(Z, te) {
        this.bind(), this.setValue(Z, te);
      }, bind: function() {
        var Z = this.node, te = this.parsedPath, oe = te.objectName, se = te.propertyName, Ae = te.propertyIndex;
        if (Z || (Z = qi.findNode(this.rootNode, te.nodeName) || this.rootNode, this.node = Z), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, Z) {
          if (oe) {
            var ue = te.objectIndex;
            switch (oe) {
              case "materials":
                if (!Z.material)
                  return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                if (!Z.material.materials)
                  return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                Z = Z.material.materials;
                break;
              case "bones":
                if (!Z.skeleton)
                  return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                Z = Z.skeleton.bones;
                for (var he = 0; he < Z.length; he++)
                  if (Z[he].name === ue) {
                    ue = he;
                    break;
                  }
                break;
              default:
                if (Z[oe] === void 0)
                  return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                Z = Z[oe];
            }
            if (ue !== void 0) {
              if (Z[ue] === void 0)
                return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, Z);
              Z = Z[ue];
            }
          }
          var pe = Z[se];
          if (pe !== void 0) {
            var ve = this.Versioning.None;
            Z.needsUpdate !== void 0 ? (ve = this.Versioning.NeedsUpdate, this.targetObject = Z) : Z.matrixWorldNeedsUpdate !== void 0 && (ve = this.Versioning.MatrixWorldNeedsUpdate, this.targetObject = Z);
            var xe = this.BindingType.Direct;
            if (Ae !== void 0) {
              if (se === "morphTargetInfluences") {
                if (!Z.geometry)
                  return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                if (Z.geometry.isBufferGeometry) {
                  if (!Z.geometry.morphAttributes)
                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                  for (he = 0; he < this.node.geometry.morphAttributes.position.length; he++)
                    if (Z.geometry.morphAttributes.position[he].name === Ae) {
                      Ae = he;
                      break;
                    }
                } else {
                  if (!Z.geometry.morphTargets)
                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                  for (he = 0; he < this.node.geometry.morphTargets.length; he++)
                    if (Z.geometry.morphTargets[he].name === Ae) {
                      Ae = he;
                      break;
                    }
                }
              }
              xe = this.BindingType.ArrayElement, this.resolvedProperty = pe, this.propertyIndex = Ae;
            } else
              pe.fromArray !== void 0 && pe.toArray !== void 0 ? (xe = this.BindingType.HasFromToArray, this.resolvedProperty = pe) : Array.isArray(pe) ? (xe = this.BindingType.EntireArray, this.resolvedProperty = pe) : this.propertyName = se;
            this.getValue = this.GetterByBindingType[xe], this.setValue = this.SetterByBindingTypeAndVersioning[xe][ve];
          } else {
            var Me = te.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + Me + "." + se + " but it wasn't found.", Z);
          }
        } else
          console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
      }, unbind: function() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
      } }), Object.assign(qi.prototype, { _getValue_unbound: qi.prototype.getValue, _setValue_unbound: qi.prototype.setValue }), Object.assign(_u.prototype, { isAnimationObjectGroup: !0, add: function() {
        for (var Z = this._objects, te = Z.length, oe = this.nCachedObjects_, se = this._indicesByUUID, Ae = this._paths, ue = this._parsedPaths, he = this._bindings, pe = he.length, ve = void 0, xe = 0, Me = arguments.length; xe !== Me; ++xe) {
          var Ne = arguments[xe], Qe = Ne.uuid, Ue = se[Qe];
          if (Ue === void 0) {
            Ue = te++, se[Qe] = Ue, Z.push(Ne);
            for (var ze = 0, et = pe; ze !== et; ++ze)
              he[ze].push(new qi(Ne, Ae[ze], ue[ze]));
          } else if (Ue < oe) {
            ve = Z[Ue];
            var nt = --oe, At = Z[nt];
            for (se[At.uuid] = Ue, Z[Ue] = At, se[Qe] = nt, Z[nt] = Ne, ze = 0, et = pe; ze !== et; ++ze) {
              var Et = he[ze], st = Et[nt], Mt = Et[Ue];
              Et[Ue] = st, Mt === void 0 && (Mt = new qi(Ne, Ae[ze], ue[ze])), Et[nt] = Mt;
            }
          } else
            Z[Ue] !== ve && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = oe;
      }, remove: function() {
        for (var Z = this._objects, te = this.nCachedObjects_, oe = this._indicesByUUID, se = this._bindings, Ae = se.length, ue = 0, he = arguments.length; ue !== he; ++ue) {
          var pe = arguments[ue], ve = pe.uuid, xe = oe[ve];
          if (xe !== void 0 && xe >= te) {
            var Me = te++, Ne = Z[Me];
            oe[Ne.uuid] = xe, Z[xe] = Ne, oe[ve] = Me, Z[Me] = pe;
            for (var Qe = 0, Ue = Ae; Qe !== Ue; ++Qe) {
              var ze = se[Qe], et = ze[Me], nt = ze[xe];
              ze[xe] = et, ze[Me] = nt;
            }
          }
        }
        this.nCachedObjects_ = te;
      }, uncache: function() {
        for (var Z = this._objects, te = Z.length, oe = this.nCachedObjects_, se = this._indicesByUUID, Ae = this._bindings, ue = Ae.length, he = 0, pe = arguments.length; he !== pe; ++he) {
          var ve = arguments[he].uuid, xe = se[ve];
          if (xe !== void 0)
            if (delete se[ve], xe < oe) {
              var Me = --oe, Ne = Z[Me], Qe = Z[At = --te];
              se[Ne.uuid] = xe, Z[xe] = Ne, se[Qe.uuid] = Me, Z[Me] = Qe, Z.pop();
              for (var Ue = 0, ze = ue; Ue !== ze; ++Ue) {
                var et = (Et = Ae[Ue])[Me], nt = Et[At];
                Et[xe] = et, Et[Me] = nt, Et.pop();
              }
            } else {
              var At;
              for (se[(Qe = Z[At = --te]).uuid] = xe, Z[xe] = Qe, Z.pop(), Ue = 0, ze = ue; Ue !== ze; ++Ue) {
                var Et;
                (Et = Ae[Ue])[xe] = Et[At], Et.pop();
              }
            }
        }
        this.nCachedObjects_ = oe;
      }, subscribe_: function(Z, te) {
        var oe = this._bindingsIndicesByPath, se = oe[Z], Ae = this._bindings;
        if (se !== void 0)
          return Ae[se];
        var ue = this._paths, he = this._parsedPaths, pe = this._objects, ve = pe.length, xe = this.nCachedObjects_, Me = new Array(ve);
        se = Ae.length, oe[Z] = se, ue.push(Z), he.push(te), Ae.push(Me);
        for (var Ne = xe, Qe = pe.length; Ne !== Qe; ++Ne) {
          var Ue = pe[Ne];
          Me[Ne] = new qi(Ue, Z, te);
        }
        return Me;
      }, unsubscribe_: function(Z) {
        var te = this._bindingsIndicesByPath, oe = te[Z];
        if (oe !== void 0) {
          var se = this._paths, Ae = this._parsedPaths, ue = this._bindings, he = ue.length - 1, pe = ue[he];
          te[Z[he]] = oe, ue[oe] = pe, ue.pop(), Ae[oe] = Ae[he], Ae.pop(), se[oe] = se[he], se.pop();
        }
      } }), Object.assign(Qu.prototype, { play: function() {
        return this._mixer._activateAction(this), this;
      }, stop: function() {
        return this._mixer._deactivateAction(this), this.reset();
      }, reset: function() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
      }, isRunning: function() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
      }, isScheduled: function() {
        return this._mixer._isActiveAction(this);
      }, startAt: function(Z) {
        return this._startTime = Z, this;
      }, setLoop: function(Z, te) {
        return this.loop = Z, this.repetitions = te, this;
      }, setEffectiveWeight: function(Z) {
        return this.weight = Z, this._effectiveWeight = this.enabled ? Z : 0, this.stopFading();
      }, getEffectiveWeight: function() {
        return this._effectiveWeight;
      }, fadeIn: function(Z) {
        return this._scheduleFading(Z, 0, 1);
      }, fadeOut: function(Z) {
        return this._scheduleFading(Z, 1, 0);
      }, crossFadeFrom: function(Z, te, oe) {
        if (Z.fadeOut(te), this.fadeIn(te), oe) {
          var se = this._clip.duration, Ae = Z._clip.duration, ue = Ae / se, he = se / Ae;
          Z.warp(1, ue, te), this.warp(he, 1, te);
        }
        return this;
      }, crossFadeTo: function(Z, te, oe) {
        return Z.crossFadeFrom(this, te, oe);
      }, stopFading: function() {
        var Z = this._weightInterpolant;
        return Z !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(Z)), this;
      }, setEffectiveTimeScale: function(Z) {
        return this.timeScale = Z, this._effectiveTimeScale = this.paused ? 0 : Z, this.stopWarping();
      }, getEffectiveTimeScale: function() {
        return this._effectiveTimeScale;
      }, setDuration: function(Z) {
        return this.timeScale = this._clip.duration / Z, this.stopWarping();
      }, syncWith: function(Z) {
        return this.time = Z.time, this.timeScale = Z.timeScale, this.stopWarping();
      }, halt: function(Z) {
        return this.warp(this._effectiveTimeScale, 0, Z);
      }, warp: function(Z, te, oe) {
        var se = this._mixer, Ae = se.time, ue = this._timeScaleInterpolant, he = this.timeScale;
        ue === null && (ue = se._lendControlInterpolant(), this._timeScaleInterpolant = ue);
        var pe = ue.parameterPositions, ve = ue.sampleValues;
        return pe[0] = Ae, pe[1] = Ae + oe, ve[0] = Z / he, ve[1] = te / he, this;
      }, stopWarping: function() {
        var Z = this._timeScaleInterpolant;
        return Z !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(Z)), this;
      }, getMixer: function() {
        return this._mixer;
      }, getClip: function() {
        return this._clip;
      }, getRoot: function() {
        return this._localRoot || this._mixer._root;
      }, _update: function(Z, te, oe, se) {
        if (this.enabled) {
          var Ae = this._startTime;
          if (Ae !== null) {
            var ue = (Z - Ae) * oe;
            if (ue < 0 || oe === 0)
              return;
            this._startTime = null, te = oe * ue;
          }
          te *= this._updateTimeScale(Z);
          var he = this._updateTime(te), pe = this._updateWeight(Z);
          if (pe > 0)
            for (var ve = this._interpolants, xe = this._propertyBindings, Me = 0, Ne = ve.length; Me !== Ne; ++Me)
              ve[Me].evaluate(he), xe[Me].accumulate(se, pe);
        } else
          this._updateWeight(Z);
      }, _updateWeight: function(Z) {
        var te = 0;
        if (this.enabled) {
          te = this.weight;
          var oe = this._weightInterpolant;
          if (oe !== null) {
            var se = oe.evaluate(Z)[0];
            te *= se, Z > oe.parameterPositions[1] && (this.stopFading(), se === 0 && (this.enabled = !1));
          }
        }
        return this._effectiveWeight = te, te;
      }, _updateTimeScale: function(Z) {
        var te = 0;
        if (!this.paused) {
          te = this.timeScale;
          var oe = this._timeScaleInterpolant;
          oe !== null && (te *= oe.evaluate(Z)[0], Z > oe.parameterPositions[1] && (this.stopWarping(), te === 0 ? this.paused = !0 : this.timeScale = te));
        }
        return this._effectiveTimeScale = te, te;
      }, _updateTime: function(Z) {
        var te = this.time + Z, oe = this._clip.duration, se = this.loop, Ae = this._loopCount, ue = se === Or;
        if (Z === 0)
          return Ae === -1 ? te : ue && (1 & Ae) == 1 ? oe - te : te;
        if (se === Tn) {
          Ae === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
          e: {
            if (te >= oe)
              te = oe;
            else {
              if (!(te < 0))
                break e;
              te = 0;
            }
            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this._mixer.dispatchEvent({ type: "finished", action: this, direction: Z < 0 ? -1 : 1 });
          }
        } else {
          if (Ae === -1 && (Z >= 0 ? (Ae = 0, this._setEndings(!0, this.repetitions === 0, ue)) : this._setEndings(this.repetitions === 0, !0, ue)), te >= oe || te < 0) {
            var he = Math.floor(te / oe);
            te -= oe * he, Ae += Math.abs(he);
            var pe = this.repetitions - Ae;
            if (pe <= 0)
              this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, te = Z > 0 ? oe : 0, this._mixer.dispatchEvent({ type: "finished", action: this, direction: Z > 0 ? 1 : -1 });
            else {
              if (pe === 1) {
                var ve = Z < 0;
                this._setEndings(ve, !ve, ue);
              } else
                this._setEndings(!1, !1, ue);
              this._loopCount = Ae, this._mixer.dispatchEvent({ type: "loop", action: this, loopDelta: he });
            }
          }
          if (ue && (1 & Ae) == 1)
            return this.time = te, oe - te;
        }
        return this.time = te, te;
      }, _setEndings: function(Z, te, oe) {
        var se = this._interpolantSettings;
        oe ? (se.endingStart = Rn, se.endingEnd = Rn) : (se.endingStart = Z ? this.zeroSlopeAtStart ? Rn : Xr : zn, se.endingEnd = te ? this.zeroSlopeAtEnd ? Rn : Xr : zn);
      }, _scheduleFading: function(Z, te, oe) {
        var se = this._mixer, Ae = se.time, ue = this._weightInterpolant;
        ue === null && (ue = se._lendControlInterpolant(), this._weightInterpolant = ue);
        var he = ue.parameterPositions, pe = ue.sampleValues;
        return he[0] = Ae, pe[0] = te, he[1] = Ae + Z, pe[1] = oe, this;
      } }), QA.prototype = Object.assign(Object.create(ce.prototype), { constructor: QA, _bindAction: function(Z, te) {
        var oe = Z._localRoot || this._root, se = Z._clip.tracks, Ae = se.length, ue = Z._propertyBindings, he = Z._interpolants, pe = oe.uuid, ve = this._bindingsByRootAndName, xe = ve[pe];
        xe === void 0 && (xe = {}, ve[pe] = xe);
        for (var Me = 0; Me !== Ae; ++Me) {
          var Ne = se[Me], Qe = Ne.name, Ue = xe[Qe];
          if (Ue !== void 0)
            ue[Me] = Ue;
          else {
            if ((Ue = ue[Me]) !== void 0) {
              Ue._cacheIndex === null && (++Ue.referenceCount, this._addInactiveBinding(Ue, pe, Qe));
              continue;
            }
            var ze = te && te._propertyBindings[Me].binding.parsedPath;
            ++(Ue = new bA(qi.create(oe, Qe, ze), Ne.ValueTypeName, Ne.getValueSize())).referenceCount, this._addInactiveBinding(Ue, pe, Qe), ue[Me] = Ue;
          }
          he[Me].resultBuffer = Ue.buffer;
        }
      }, _activateAction: function(Z) {
        if (!this._isActiveAction(Z)) {
          if (Z._cacheIndex === null) {
            var te = (Z._localRoot || this._root).uuid, oe = Z._clip.uuid, se = this._actionsByClip[oe];
            this._bindAction(Z, se && se.knownActions[0]), this._addInactiveAction(Z, oe, te);
          }
          for (var Ae = Z._propertyBindings, ue = 0, he = Ae.length; ue !== he; ++ue) {
            var pe = Ae[ue];
            pe.useCount++ == 0 && (this._lendBinding(pe), pe.saveOriginalState());
          }
          this._lendAction(Z);
        }
      }, _deactivateAction: function(Z) {
        if (this._isActiveAction(Z)) {
          for (var te = Z._propertyBindings, oe = 0, se = te.length; oe !== se; ++oe) {
            var Ae = te[oe];
            --Ae.useCount == 0 && (Ae.restoreOriginalState(), this._takeBackBinding(Ae));
          }
          this._takeBackAction(Z);
        }
      }, _initMemoryManager: function() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        var Z = this;
        this.stats = { actions: { get total() {
          return Z._actions.length;
        }, get inUse() {
          return Z._nActiveActions;
        } }, bindings: { get total() {
          return Z._bindings.length;
        }, get inUse() {
          return Z._nActiveBindings;
        } }, controlInterpolants: { get total() {
          return Z._controlInterpolants.length;
        }, get inUse() {
          return Z._nActiveControlInterpolants;
        } } };
      }, _isActiveAction: function(Z) {
        var te = Z._cacheIndex;
        return te !== null && te < this._nActiveActions;
      }, _addInactiveAction: function(Z, te, oe) {
        var se = this._actions, Ae = this._actionsByClip, ue = Ae[te];
        if (ue === void 0)
          ue = { knownActions: [Z], actionByRoot: {} }, Z._byClipCacheIndex = 0, Ae[te] = ue;
        else {
          var he = ue.knownActions;
          Z._byClipCacheIndex = he.length, he.push(Z);
        }
        Z._cacheIndex = se.length, se.push(Z), ue.actionByRoot[oe] = Z;
      }, _removeInactiveAction: function(Z) {
        var te = this._actions, oe = te[te.length - 1], se = Z._cacheIndex;
        oe._cacheIndex = se, te[se] = oe, te.pop(), Z._cacheIndex = null;
        var Ae = Z._clip.uuid, ue = this._actionsByClip, he = ue[Ae], pe = he.knownActions, ve = pe[pe.length - 1], xe = Z._byClipCacheIndex;
        ve._byClipCacheIndex = xe, pe[xe] = ve, pe.pop(), Z._byClipCacheIndex = null, delete he.actionByRoot[(Z._localRoot || this._root).uuid], pe.length === 0 && delete ue[Ae], this._removeInactiveBindingsForAction(Z);
      }, _removeInactiveBindingsForAction: function(Z) {
        for (var te = Z._propertyBindings, oe = 0, se = te.length; oe !== se; ++oe) {
          var Ae = te[oe];
          --Ae.referenceCount == 0 && this._removeInactiveBinding(Ae);
        }
      }, _lendAction: function(Z) {
        var te = this._actions, oe = Z._cacheIndex, se = this._nActiveActions++, Ae = te[se];
        Z._cacheIndex = se, te[se] = Z, Ae._cacheIndex = oe, te[oe] = Ae;
      }, _takeBackAction: function(Z) {
        var te = this._actions, oe = Z._cacheIndex, se = --this._nActiveActions, Ae = te[se];
        Z._cacheIndex = se, te[se] = Z, Ae._cacheIndex = oe, te[oe] = Ae;
      }, _addInactiveBinding: function(Z, te, oe) {
        var se = this._bindingsByRootAndName, Ae = se[te], ue = this._bindings;
        Ae === void 0 && (Ae = {}, se[te] = Ae), Ae[oe] = Z, Z._cacheIndex = ue.length, ue.push(Z);
      }, _removeInactiveBinding: function(Z) {
        var te = this._bindings, oe = Z.binding, se = oe.rootNode.uuid, Ae = oe.path, ue = this._bindingsByRootAndName, he = ue[se], pe = te[te.length - 1], ve = Z._cacheIndex;
        pe._cacheIndex = ve, te[ve] = pe, te.pop(), delete he[Ae];
        e: {
          for (var xe in he)
            break e;
          delete ue[se];
        }
      }, _lendBinding: function(Z) {
        var te = this._bindings, oe = Z._cacheIndex, se = this._nActiveBindings++, Ae = te[se];
        Z._cacheIndex = se, te[se] = Z, Ae._cacheIndex = oe, te[oe] = Ae;
      }, _takeBackBinding: function(Z) {
        var te = this._bindings, oe = Z._cacheIndex, se = --this._nActiveBindings, Ae = te[se];
        Z._cacheIndex = se, te[se] = Z, Ae._cacheIndex = oe, te[oe] = Ae;
      }, _lendControlInterpolant: function() {
        var Z = this._controlInterpolants, te = this._nActiveControlInterpolants++, oe = Z[te];
        return oe === void 0 && ((oe = new Ac(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = te, Z[te] = oe), oe;
      }, _takeBackControlInterpolant: function(Z) {
        var te = this._controlInterpolants, oe = Z.__cacheIndex, se = --this._nActiveControlInterpolants, Ae = te[se];
        Z.__cacheIndex = se, te[se] = Z, Ae.__cacheIndex = oe, te[oe] = Ae;
      }, _controlInterpolantsResultBuffer: new Float32Array(1), clipAction: function(Z, te) {
        var oe = te || this._root, se = oe.uuid, Ae = typeof Z == "string" ? lo.findByName(oe, Z) : Z, ue = Ae !== null ? Ae.uuid : Z, he = this._actionsByClip[ue], pe = null;
        if (he !== void 0) {
          var ve = he.actionByRoot[se];
          if (ve !== void 0)
            return ve;
          pe = he.knownActions[0], Ae === null && (Ae = pe._clip);
        }
        if (Ae === null)
          return null;
        var xe = new Qu(this, Ae, te);
        return this._bindAction(xe, pe), this._addInactiveAction(xe, ue, se), xe;
      }, existingAction: function(Z, te) {
        var oe = te || this._root, se = oe.uuid, Ae = typeof Z == "string" ? lo.findByName(oe, Z) : Z, ue = Ae ? Ae.uuid : Z, he = this._actionsByClip[ue];
        return he !== void 0 && he.actionByRoot[se] || null;
      }, stopAllAction: function() {
        var Z = this._actions, te = this._nActiveActions, oe = this._bindings, se = this._nActiveBindings;
        this._nActiveActions = 0, this._nActiveBindings = 0;
        for (var Ae = 0; Ae !== te; ++Ae)
          Z[Ae].reset();
        for (Ae = 0; Ae !== se; ++Ae)
          oe[Ae].useCount = 0;
        return this;
      }, update: function(Z) {
        Z *= this.timeScale;
        for (var te = this._actions, oe = this._nActiveActions, se = this.time += Z, Ae = Math.sign(Z), ue = this._accuIndex ^= 1, he = 0; he !== oe; ++he)
          te[he]._update(se, Z, Ae, ue);
        var pe = this._bindings, ve = this._nActiveBindings;
        for (he = 0; he !== ve; ++he)
          pe[he].apply(ue);
        return this;
      }, getRoot: function() {
        return this._root;
      }, uncacheClip: function(Z) {
        var te = this._actions, oe = Z.uuid, se = this._actionsByClip, Ae = se[oe];
        if (Ae !== void 0) {
          for (var ue = Ae.knownActions, he = 0, pe = ue.length; he !== pe; ++he) {
            var ve = ue[he];
            this._deactivateAction(ve);
            var xe = ve._cacheIndex, Me = te[te.length - 1];
            ve._cacheIndex = null, ve._byClipCacheIndex = null, Me._cacheIndex = xe, te[xe] = Me, te.pop(), this._removeInactiveBindingsForAction(ve);
          }
          delete se[oe];
        }
      }, uncacheRoot: function(Z) {
        var te = Z.uuid, oe = this._actionsByClip;
        for (var se in oe) {
          var Ae = oe[se].actionByRoot[te];
          Ae !== void 0 && (this._deactivateAction(Ae), this._removeInactiveAction(Ae));
        }
        var ue = this._bindingsByRootAndName[te];
        if (ue !== void 0)
          for (var he in ue) {
            var pe = ue[he];
            pe.restoreOriginalState(), this._removeInactiveBinding(pe);
          }
      }, uncacheAction: function(Z, te) {
        var oe = this.existingAction(Z, te);
        oe !== null && (this._deactivateAction(oe), this._removeInactiveAction(oe));
      } }), Wc.prototype.clone = function() {
        return new Wc(this.value.clone === void 0 ? this.value : this.value.clone());
      }, SA.prototype = Object.assign(Object.create(Wr.prototype), { constructor: SA, isInstancedBufferGeometry: !0, copy: function(Z) {
        return Wr.prototype.copy.call(this, Z), this.maxInstancedCount = Z.maxInstancedCount, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), TA.prototype = Object.assign(Object.create(ha.prototype), { constructor: TA, isInstancedInterleavedBuffer: !0, copy: function(Z) {
        return ha.prototype.copy.call(this, Z), this.meshPerAttribute = Z.meshPerAttribute, this;
      } }), RA.prototype = Object.assign(Object.create(Mn.prototype), { constructor: RA, isInstancedBufferAttribute: !0, copy: function(Z) {
        return Mn.prototype.copy.call(this, Z), this.meshPerAttribute = Z.meshPerAttribute, this;
      } }), Object.assign(Su.prototype, { linePrecision: 1, set: function(Z, te) {
        this.ray.set(Z, te);
      }, setFromCamera: function(Z, te) {
        te && te.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(te.matrixWorld), this.ray.direction.set(Z.x, Z.y, 0.5).unproject(te).sub(this.ray.origin).normalize()) : te && te.isOrthographicCamera ? (this.ray.origin.set(Z.x, Z.y, (te.near + te.far) / (te.near - te.far)).unproject(te), this.ray.direction.set(0, 0, -1).transformDirection(te.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.");
      }, intersectObject: function(Z, te, oe) {
        var se = oe || [];
        return MA(Z, this, se, te), se.sort(Tu), se;
      }, intersectObjects: function(Z, te, oe) {
        var se = oe || [];
        if (Array.isArray(Z) === !1)
          return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), se;
        for (var Ae = 0, ue = Z.length; Ae < ue; Ae++)
          MA(Z[Ae], this, se, te);
        return se.sort(Tu), se;
      } }), Object.assign(Ru.prototype, { start: function() {
        this.startTime = (typeof performance > "u" ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
      }, stop: function() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
      }, getElapsedTime: function() {
        return this.getDelta(), this.elapsedTime;
      }, getDelta: function() {
        var Z = 0;
        if (this.autoStart && !this.running)
          return this.start(), 0;
        if (this.running) {
          var te = (typeof performance > "u" ? Date : performance).now();
          Z = (te - this.oldTime) / 1e3, this.oldTime = te, this.elapsedTime += Z;
        }
        return Z;
      } }), Object.assign(Mu.prototype, { set: function(Z, te, oe) {
        return this.radius = Z, this.phi = te, this.theta = oe, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.radius = Z.radius, this.phi = Z.phi, this.theta = Z.theta, this;
      }, makeSafe: function() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
      }, setFromVector3: function(Z) {
        return this.radius = Z.length(), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(Z.x, Z.z), this.phi = Math.acos(bn.clamp(Z.y / this.radius, -1, 1))), this;
      } }), Object.assign(Nu.prototype, { set: function(Z, te, oe) {
        return this.radius = Z, this.theta = te, this.y = oe, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.radius = Z.radius, this.theta = Z.theta, this.y = Z.y, this;
      }, setFromVector3: function(Z) {
        return this.radius = Math.sqrt(Z.x * Z.x + Z.z * Z.z), this.theta = Math.atan2(Z.x, Z.z), this.y = Z.y, this;
      } }), Object.assign(NA.prototype, { set: function(Z, te) {
        return this.min.copy(Z), this.max.copy(te), this;
      }, setFromPoints: function(Z) {
        this.makeEmpty();
        for (var te = 0, oe = Z.length; te < oe; te++)
          this.expandByPoint(Z[te]);
        return this;
      }, setFromCenterAndSize: function() {
        var Z = new xr();
        return function(te, oe) {
          var se = Z.copy(oe).multiplyScalar(0.5);
          return this.min.copy(te).sub(se), this.max.copy(te).add(se), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.min.copy(Z.min), this.max.copy(Z.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
      }, getCenter: function(Z) {
        return Z === void 0 && (console.warn("THREE.Box2: .getCenter() target is now required"), Z = new xr()), this.isEmpty() ? Z.set(0, 0) : Z.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(Z) {
        return Z === void 0 && (console.warn("THREE.Box2: .getSize() target is now required"), Z = new xr()), this.isEmpty() ? Z.set(0, 0) : Z.subVectors(this.max, this.min);
      }, expandByPoint: function(Z) {
        return this.min.min(Z), this.max.max(Z), this;
      }, expandByVector: function(Z) {
        return this.min.sub(Z), this.max.add(Z), this;
      }, expandByScalar: function(Z) {
        return this.min.addScalar(-Z), this.max.addScalar(Z), this;
      }, containsPoint: function(Z) {
        return !(Z.x < this.min.x || Z.x > this.max.x || Z.y < this.min.y || Z.y > this.max.y);
      }, containsBox: function(Z) {
        return this.min.x <= Z.min.x && Z.max.x <= this.max.x && this.min.y <= Z.min.y && Z.max.y <= this.max.y;
      }, getParameter: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Box2: .getParameter() target is now required"), te = new xr()), te.set((Z.x - this.min.x) / (this.max.x - this.min.x), (Z.y - this.min.y) / (this.max.y - this.min.y));
      }, intersectsBox: function(Z) {
        return !(Z.max.x < this.min.x || Z.min.x > this.max.x || Z.max.y < this.min.y || Z.min.y > this.max.y);
      }, clampPoint: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Box2: .clampPoint() target is now required"), te = new xr()), te.copy(Z).clamp(this.min, this.max);
      }, distanceToPoint: function() {
        var Z = new xr();
        return function(te) {
          return Z.copy(te).clamp(this.min, this.max).sub(te).length();
        };
      }(), intersect: function(Z) {
        return this.min.max(Z.min), this.max.min(Z.max), this;
      }, union: function(Z) {
        return this.min.min(Z.min), this.max.max(Z.max), this;
      }, translate: function(Z) {
        return this.min.add(Z), this.max.add(Z), this;
      }, equals: function(Z) {
        return Z.min.equals(this.min) && Z.max.equals(this.max);
      } }), Object.assign(kA.prototype, { set: function(Z, te) {
        return this.start.copy(Z), this.end.copy(te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.start.copy(Z.start), this.end.copy(Z.end), this;
      }, getCenter: function(Z) {
        return Z === void 0 && (console.warn("THREE.Line3: .getCenter() target is now required"), Z = new mt()), Z.addVectors(this.start, this.end).multiplyScalar(0.5);
      }, delta: function(Z) {
        return Z === void 0 && (console.warn("THREE.Line3: .delta() target is now required"), Z = new mt()), Z.subVectors(this.end, this.start);
      }, distanceSq: function() {
        return this.start.distanceToSquared(this.end);
      }, distance: function() {
        return this.start.distanceTo(this.end);
      }, at: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Line3: .at() target is now required"), te = new mt()), this.delta(te).multiplyScalar(Z).add(this.start);
      }, closestPointToPointParameter: function() {
        var Z = new mt(), te = new mt();
        return function(oe, se) {
          Z.subVectors(oe, this.start), te.subVectors(this.end, this.start);
          var Ae = te.dot(te), ue = te.dot(Z) / Ae;
          return se && (ue = bn.clamp(ue, 0, 1)), ue;
        };
      }(), closestPointToPoint: function(Z, te, oe) {
        var se = this.closestPointToPointParameter(Z, te);
        return oe === void 0 && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), oe = new mt()), this.delta(oe).multiplyScalar(se).add(this.start);
      }, applyMatrix4: function(Z) {
        return this.start.applyMatrix4(Z), this.end.applyMatrix4(Z), this;
      }, equals: function(Z) {
        return Z.start.equals(this.start) && Z.end.equals(this.end);
      } }), dc.prototype = Object.create(Dr.prototype), dc.prototype.constructor = dc, dc.prototype.isImmediateRenderObject = !0, hc.prototype = Object.create(ri.prototype), hc.prototype.constructor = hc, hc.prototype.update = function() {
        var Z = new mt(), te = new mt(), oe = new Vi();
        return function() {
          var se = ["a", "b", "c"];
          this.object.updateMatrixWorld(!0), oe.getNormalMatrix(this.object.matrixWorld);
          var Ae = this.object.matrixWorld, ue = this.geometry.attributes.position, he = this.object.geometry;
          if (he && he.isGeometry)
            for (var pe = he.vertices, ve = he.faces, xe = 0, Me = 0, Ne = ve.length; Me < Ne; Me++)
              for (var Qe = ve[Me], Ue = 0, ze = Qe.vertexNormals.length; Ue < ze; Ue++) {
                var et = pe[Qe[se[Ue]]], nt = Qe.vertexNormals[Ue];
                Z.copy(et).applyMatrix4(Ae), te.copy(nt).applyMatrix3(oe).normalize().multiplyScalar(this.size).add(Z), ue.setXYZ(xe, Z.x, Z.y, Z.z), xe += 1, ue.setXYZ(xe, te.x, te.y, te.z), xe += 1;
              }
          else if (he && he.isBufferGeometry) {
            var At = he.attributes.position, Et = he.attributes.normal;
            for (xe = 0, Ue = 0, ze = At.count; Ue < ze; Ue++)
              Z.set(At.getX(Ue), At.getY(Ue), At.getZ(Ue)).applyMatrix4(Ae), te.set(Et.getX(Ue), Et.getY(Ue), Et.getZ(Ue)), te.applyMatrix3(oe).normalize().multiplyScalar(this.size).add(Z), ue.setXYZ(xe, Z.x, Z.y, Z.z), xe += 1, ue.setXYZ(xe, te.x, te.y, te.z), xe += 1;
          }
          ue.needsUpdate = !0;
        };
      }(), ds.prototype = Object.create(Dr.prototype), ds.prototype.constructor = ds, ds.prototype.dispose = function() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
      }, ds.prototype.update = function() {
        var Z = new mt(), te = new mt();
        return function() {
          this.light.updateMatrixWorld();
          var oe = this.light.distance ? this.light.distance : 1e3, se = oe * Math.tan(this.light.angle);
          this.cone.scale.set(se, se, oe), Z.setFromMatrixPosition(this.light.matrixWorld), te.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(te.sub(Z)), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
        };
      }(), hs.prototype = Object.create(ri.prototype), hs.prototype.constructor = hs, hs.prototype.updateMatrixWorld = function() {
        var Z = new mt(), te = new pn(), oe = new pn();
        return function(se) {
          var Ae = this.bones, ue = this.geometry, he = ue.getAttribute("position");
          oe.getInverse(this.root.matrixWorld);
          for (var pe = 0, ve = 0; pe < Ae.length; pe++) {
            var xe = Ae[pe];
            xe.parent && xe.parent.isBone && (te.multiplyMatrices(oe, xe.matrixWorld), Z.setFromMatrixPosition(te), he.setXYZ(ve, Z.x, Z.y, Z.z), te.multiplyMatrices(oe, xe.parent.matrixWorld), Z.setFromMatrixPosition(te), he.setXYZ(ve + 1, Z.x, Z.y, Z.z), ve += 2);
          }
          ue.getAttribute("position").needsUpdate = !0, Dr.prototype.updateMatrixWorld.call(this, se);
        };
      }(), fs.prototype = Object.create(Ki.prototype), fs.prototype.constructor = fs, fs.prototype.dispose = function() {
        this.geometry.dispose(), this.material.dispose();
      }, fs.prototype.update = function() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
      }, ps.prototype = Object.create(Dr.prototype), ps.prototype.constructor = ps, ps.prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, ps.prototype.update = function() {
        var Z = 0.5 * this.light.width, te = 0.5 * this.light.height, oe = this.line.geometry.attributes.position, se = oe.array;
        se[0] = Z, se[1] = -te, se[2] = 0, se[3] = Z, se[4] = te, se[5] = 0, se[6] = -Z, se[7] = te, se[8] = 0, se[9] = -Z, se[10] = -te, se[11] = 0, se[12] = Z, se[13] = -te, se[14] = 0, oe.needsUpdate = !0, this.color !== void 0 ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color);
      }, gs.prototype = Object.create(Dr.prototype), gs.prototype.constructor = gs, gs.prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, gs.prototype.update = function() {
        var Z = new mt(), te = new sn(), oe = new sn();
        return function() {
          var se = this.children[0];
          if (this.color !== void 0)
            this.material.color.set(this.color);
          else {
            var Ae = se.geometry.getAttribute("color");
            te.copy(this.light.color), oe.copy(this.light.groundColor);
            for (var ue = 0, he = Ae.count; ue < he; ue++) {
              var pe = ue < he / 2 ? te : oe;
              Ae.setXYZ(ue, pe.r, pe.g, pe.b);
            }
            Ae.needsUpdate = !0;
          }
          se.lookAt(Z.setFromMatrixPosition(this.light.matrixWorld).negate());
        };
      }(), fc.prototype = Object.create(ri.prototype), fc.prototype.constructor = fc, Kc.prototype = Object.create(ri.prototype), Kc.prototype.constructor = Kc, pc.prototype = Object.create(ri.prototype), pc.prototype.constructor = pc, pc.prototype.update = function() {
        var Z = new mt(), te = new mt(), oe = new Vi();
        return function() {
          this.object.updateMatrixWorld(!0), oe.getNormalMatrix(this.object.matrixWorld);
          for (var se = this.object.matrixWorld, Ae = this.geometry.attributes.position, ue = this.object.geometry, he = ue.vertices, pe = ue.faces, ve = 0, xe = 0, Me = pe.length; xe < Me; xe++) {
            var Ne = pe[xe], Qe = Ne.normal;
            Z.copy(he[Ne.a]).add(he[Ne.b]).add(he[Ne.c]).divideScalar(3).applyMatrix4(se), te.copy(Qe).applyMatrix3(oe).normalize().multiplyScalar(this.size).add(Z), Ae.setXYZ(ve, Z.x, Z.y, Z.z), ve += 1, Ae.setXYZ(ve, te.x, te.y, te.z), ve += 1;
          }
          Ae.needsUpdate = !0;
        };
      }(), ms.prototype = Object.create(Dr.prototype), ms.prototype.constructor = ms, ms.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
      }, ms.prototype.update = function() {
        var Z = new mt(), te = new mt(), oe = new mt();
        return function() {
          Z.setFromMatrixPosition(this.light.matrixWorld), te.setFromMatrixPosition(this.light.target.matrixWorld), oe.subVectors(te, Z), this.lightPlane.lookAt(oe), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(oe), this.targetLine.scale.z = oe.length();
        };
      }(), gc.prototype = Object.create(ri.prototype), gc.prototype.constructor = gc, gc.prototype.update = function() {
        var Z, te, oe = new mt(), se = new Qo();
        function Ae(ue, he, pe, ve) {
          oe.set(he, pe, ve).unproject(se);
          var xe = te[ue];
          if (xe !== void 0)
            for (var Me = Z.getAttribute("position"), Ne = 0, Qe = xe.length; Ne < Qe; Ne++)
              Me.setXYZ(xe[Ne], oe.x, oe.y, oe.z);
        }
        return function() {
          Z = this.geometry, te = this.pointMap, se.projectionMatrix.copy(this.camera.projectionMatrix), Ae("c", 0, 0, -1), Ae("t", 0, 0, 1), Ae("n1", -1, -1, -1), Ae("n2", 1, -1, -1), Ae("n3", -1, 1, -1), Ae("n4", 1, 1, -1), Ae("f1", -1, -1, 1), Ae("f2", 1, -1, 1), Ae("f3", -1, 1, 1), Ae("f4", 1, 1, 1), Ae("u1", 0.7, 1.1, -1), Ae("u2", -0.7, 1.1, -1), Ae("u3", 0, 2, -1), Ae("cf1", -1, 0, 1), Ae("cf2", 1, 0, 1), Ae("cf3", 0, -1, 1), Ae("cf4", 0, 1, 1), Ae("cn1", -1, 0, -1), Ae("cn2", 1, 0, -1), Ae("cn3", 0, -1, -1), Ae("cn4", 0, 1, -1), Z.getAttribute("position").needsUpdate = !0;
        };
      }(), Sa.prototype = Object.create(ri.prototype), Sa.prototype.constructor = Sa, Sa.prototype.update = function() {
        var Z = new qo();
        return function(te) {
          if (te !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Z.setFromObject(this.object), !Z.isEmpty()) {
            var oe = Z.min, se = Z.max, Ae = this.geometry.attributes.position, ue = Ae.array;
            ue[0] = se.x, ue[1] = se.y, ue[2] = se.z, ue[3] = oe.x, ue[4] = se.y, ue[5] = se.z, ue[6] = oe.x, ue[7] = oe.y, ue[8] = se.z, ue[9] = se.x, ue[10] = oe.y, ue[11] = se.z, ue[12] = se.x, ue[13] = se.y, ue[14] = oe.z, ue[15] = oe.x, ue[16] = se.y, ue[17] = oe.z, ue[18] = oe.x, ue[19] = oe.y, ue[20] = oe.z, ue[21] = se.x, ue[22] = oe.y, ue[23] = oe.z, Ae.needsUpdate = !0, this.geometry.computeBoundingSphere();
          }
        };
      }(), Sa.prototype.setFromObject = function(Z) {
        return this.object = Z, this.update(), this;
      }, mc.prototype = Object.create(ri.prototype), mc.prototype.constructor = mc, mc.prototype.updateMatrixWorld = function(Z) {
        var te = this.box;
        te.isEmpty() || (te.getCenter(this.position), te.getSize(this.scale), this.scale.multiplyScalar(0.5), Dr.prototype.updateMatrixWorld.call(this, Z));
      }, Ec.prototype = Object.create(Zi.prototype), Ec.prototype.constructor = Ec, Ec.prototype.updateMatrixWorld = function(Z) {
        var te = -this.plane.constant;
        Math.abs(te) < 1e-8 && (te = 1e-8), this.scale.set(0.5 * this.size, 0.5 * this.size, te), this.children[0].material.side = te < 0 ? Se : He, this.lookAt(this.plane.normal), Dr.prototype.updateMatrixWorld.call(this, Z);
      }, Ta.prototype = Object.create(Dr.prototype), Ta.prototype.constructor = Ta, Ta.prototype.setDirection = function() {
        var Z, te = new mt();
        return function(oe) {
          oe.y > 0.99999 ? this.quaternion.set(0, 0, 0, 1) : oe.y < -0.99999 ? this.quaternion.set(1, 0, 0, 0) : (te.set(oe.z, 0, -oe.x).normalize(), Z = Math.acos(oe.y), this.quaternion.setFromAxisAngle(te, Z));
        };
      }(), Ta.prototype.setLength = function(Z, te, oe) {
        te === void 0 && (te = 0.2 * Z), oe === void 0 && (oe = 0.2 * te), this.line.scale.set(1, Math.max(0, Z - te), 1), this.line.updateMatrix(), this.cone.scale.set(oe, te, oe), this.cone.position.y = Z, this.cone.updateMatrix();
      }, Ta.prototype.setColor = function(Z) {
        this.line.material.color.copy(Z), this.cone.material.color.copy(Z);
      }, yc.prototype = Object.create(ri.prototype), yc.prototype.constructor = yc;
      var Ul = 0, Hl = 1;
      function ql(Z) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), Z;
      }
      function Dl(Z) {
        return Z === void 0 && (Z = []), console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), Z.isMultiMaterial = !0, Z.materials = Z, Z.clone = function() {
          return Z.slice();
        }, Z;
      }
      function $l(Z, te) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new Ya(Z, te);
      }
      function jl(Z) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new ks(Z);
      }
      function Yl(Z, te) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new Ya(Z, te);
      }
      function Vl(Z) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new mo(Z);
      }
      function Ll(Z) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new mo(Z);
      }
      function zl(Z) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new mo(Z);
      }
      function Jl(Z, te, oe) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new mt(Z, te, oe);
      }
      function Wl(Z, te) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new Mn(Z, te).setDynamic(!0);
      }
      function Kl(Z, te) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new xs(Z, te);
      }
      function Zl(Z, te) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new ws(Z, te);
      }
      function Xl(Z, te) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new bs(Z, te);
      }
      function ed(Z, te) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new _s(Z, te);
      }
      function td(Z, te) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new ca(Z, te);
      }
      function rd(Z, te) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new Qs(Z, te);
      }
      function nd(Z, te) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Aa(Z, te);
      }
      function id(Z, te) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new Pr(Z, te);
      }
      function od(Z, te) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new Ss(Z, te);
      }
      function ku(Z) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), Ui.call(this, Z), this.type = "catmullrom", this.closed = !0;
      }
      function Fu(Z) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), Ui.call(this, Z), this.type = "catmullrom";
      }
      function FA(Z) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), Ui.call(this, Z), this.type = "catmullrom";
      }
      function ad(Z) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new yc(Z);
      }
      function sd(Z, te) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new Sa(Z, te);
      }
      function cd(Z, te) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new ri(new is(Z.geometry), new ei({ color: te !== void 0 ? te : 16777215 }));
      }
      function Ad(Z, te) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new ri(new La(Z.geometry), new ei({ color: te !== void 0 ? te : 16777215 }));
      }
      function ud(Z) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new yo(Z);
      }
      function ld(Z) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new AA(Z);
      }
      ln.create = function(Z, te) {
        return console.log("THREE.Curve.create() has been deprecated"), Z.prototype = Object.create(ln.prototype), Z.prototype.constructor = Z, Z.prototype.getPoint = te, Z;
      }, Object.assign(Lo.prototype, { createPointsGeometry: function(Z) {
        console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var te = this.getPoints(Z);
        return this.createGeometry(te);
      }, createSpacedPointsGeometry: function(Z) {
        console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var te = this.getSpacedPoints(Z);
        return this.createGeometry(te);
      }, createGeometry: function(Z) {
        console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        for (var te = new mn(), oe = 0, se = Z.length; oe < se; oe++) {
          var Ae = Z[oe];
          te.vertices.push(new mt(Ae.x, Ae.y, Ae.z || 0));
        }
        return te;
      } }), Object.assign(xo.prototype, { fromPoints: function(Z) {
        console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(Z);
      } }), ku.prototype = Object.create(Ui.prototype), Fu.prototype = Object.create(Ui.prototype), FA.prototype = Object.create(Ui.prototype), Object.assign(FA.prototype, { initFromArray: function() {
        console.error("THREE.Spline: .initFromArray() has been removed.");
      }, getControlPointsArray: function() {
        console.error("THREE.Spline: .getControlPointsArray() has been removed.");
      }, reparametrizeByArcLength: function() {
        console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.");
      } }), fc.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
      }, hs.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
      }, Object.assign(us.prototype, { extractUrlBase: function(Z) {
        return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), gA.extractUrlBase(Z);
      } }), Object.assign(NA.prototype, { center: function(Z) {
        return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(Z);
      }, empty: function() {
        return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(Z) {
        return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Z);
      }, size: function(Z) {
        return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(Z);
      } }), Object.assign(qo.prototype, { center: function(Z) {
        return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(Z);
      }, empty: function() {
        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(Z) {
        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Z);
      }, isIntersectionSphere: function(Z) {
        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(Z);
      }, size: function(Z) {
        return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(Z);
      } }), kA.prototype.center = function(Z) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(Z);
      }, Object.assign(bn, { random16: function() {
        return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random();
      }, nearestPowerOfTwo: function(Z) {
        return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), bn.floorPowerOfTwo(Z);
      }, nextPowerOfTwo: function(Z) {
        return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), bn.ceilPowerOfTwo(Z);
      } }), Object.assign(Vi.prototype, { flattenToArrayOffset: function(Z, te) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(Z, te);
      }, multiplyVector3: function(Z) {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), Z.applyMatrix3(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
      }, applyToBuffer: function(Z) {
        return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(Z);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
      } }), Object.assign(pn.prototype, { extractPosition: function(Z) {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(Z);
      }, flattenToArrayOffset: function(Z, te) {
        return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(Z, te);
      }, getPosition: function() {
        var Z;
        return function() {
          return Z === void 0 && (Z = new mt()), console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), Z.setFromMatrixColumn(this, 3);
        };
      }(), setRotationFromQuaternion: function(Z) {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(Z);
      }, multiplyToArray: function() {
        console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
      }, multiplyVector3: function(Z) {
        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), Z.applyMatrix4(this);
      }, multiplyVector4: function(Z) {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), Z.applyMatrix4(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
      }, rotateAxis: function(Z) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), Z.transformDirection(this);
      }, crossVector: function(Z) {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), Z.applyMatrix4(this);
      }, translate: function() {
        console.error("THREE.Matrix4: .translate() has been removed.");
      }, rotateX: function() {
        console.error("THREE.Matrix4: .rotateX() has been removed.");
      }, rotateY: function() {
        console.error("THREE.Matrix4: .rotateY() has been removed.");
      }, rotateZ: function() {
        console.error("THREE.Matrix4: .rotateZ() has been removed.");
      }, rotateByAxis: function() {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
      }, applyToBuffer: function(Z) {
        return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(Z);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
      }, makeFrustum: function(Z, te, oe, se, Ae, ue) {
        return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(Z, te, se, oe, Ae, ue);
      } }), _o.prototype.isIntersectionLine = function(Z) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(Z);
      }, ci.prototype.multiplyVector3 = function(Z) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), Z.applyQuaternion(this);
      }, Object.assign(da.prototype, { isIntersectionBox: function(Z) {
        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Z);
      }, isIntersectionPlane: function(Z) {
        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(Z);
      }, isIntersectionSphere: function(Z) {
        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(Z);
      } }), Object.assign(oo.prototype, { area: function() {
        return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
      }, barycoordFromPoint: function(Z, te) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(Z, te);
      }, midpoint: function(Z) {
        return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(Z);
      }, normal: function(Z) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(Z);
      }, plane: function(Z) {
        return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(Z);
      } }), Object.assign(oo, { barycoordFromPoint: function(Z, te, oe, se, Ae) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), oo.getBarycoord(Z, te, oe, se, Ae);
      }, normal: function(Z, te, oe, se) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), oo.getNormal(Z, te, oe, se);
      } }), Object.assign(ea.prototype, { extractAllPoints: function(Z) {
        return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(Z);
      }, extrude: function(Z) {
        return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new ga(this, Z);
      }, makeGeometry: function(Z) {
        return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Ea(this, Z);
      } }), Object.assign(xr.prototype, { fromAttribute: function(Z, te, oe) {
        return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Z, te, oe);
      }, distanceToManhattan: function(Z) {
        return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(Z);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(mt.prototype, { setEulerFromRotationMatrix: function() {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
      }, setEulerFromQuaternion: function() {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
      }, getPositionFromMatrix: function(Z) {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(Z);
      }, getScaleFromMatrix: function(Z) {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(Z);
      }, getColumnFromMatrix: function(Z, te) {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(te, Z);
      }, applyProjection: function(Z) {
        return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(Z);
      }, fromAttribute: function(Z, te, oe) {
        return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Z, te, oe);
      }, distanceToManhattan: function(Z) {
        return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(Z);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(Zn.prototype, { fromAttribute: function(Z, te, oe) {
        return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Z, te, oe);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(mn.prototype, { computeTangents: function() {
        console.error("THREE.Geometry: .computeTangents() has been removed.");
      }, computeLineDistances: function() {
        console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.");
      } }), Object.assign(Dr.prototype, { getChildByName: function(Z) {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(Z);
      }, renderDepth: function() {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
      }, translate: function(Z, te) {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(te, Z);
      }, getWorldRotation: function() {
        console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
      } }), Object.defineProperties(Dr.prototype, { eulerOrder: { get: function() {
        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
      }, set: function(Z) {
        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = Z;
      } }, useQuaternion: { get: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      }, set: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      } } }), Object.defineProperties(Fs.prototype, { objects: { get: function() {
        return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels;
      } } }), Object.defineProperty(Gs.prototype, "useVertexTexture", { get: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      }, set: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      } }), Object.defineProperty(ln.prototype, "__arcLengthDivisions", { get: function() {
        return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions;
      }, set: function(Z) {
        console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = Z;
      } }), di.prototype.setLens = function(Z, te) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), te !== void 0 && (this.filmGauge = te), this.setFocalLength(Z);
      }, Object.defineProperties(ui.prototype, { onlyShadow: { set: function() {
        console.warn("THREE.Light: .onlyShadow has been removed.");
      } }, shadowCameraFov: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = Z;
      } }, shadowCameraLeft: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = Z;
      } }, shadowCameraRight: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = Z;
      } }, shadowCameraTop: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = Z;
      } }, shadowCameraBottom: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = Z;
      } }, shadowCameraNear: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = Z;
      } }, shadowCameraFar: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = Z;
      } }, shadowCameraVisible: { set: function() {
        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
      } }, shadowBias: { set: function(Z) {
        console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = Z;
      } }, shadowDarkness: { set: function() {
        console.warn("THREE.Light: .shadowDarkness has been removed.");
      } }, shadowMapWidth: { set: function(Z) {
        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = Z;
      } }, shadowMapHeight: { set: function(Z) {
        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = Z;
      } } }), Object.defineProperties(Mn.prototype, { length: { get: function() {
        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
      } }, copyIndicesArray: function() {
        console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
      } }), Object.assign(Wr.prototype, { addIndex: function(Z) {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(Z);
      }, addDrawCall: function(Z, te, oe) {
        oe !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(Z, te);
      }, clearDrawCalls: function() {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
      }, computeTangents: function() {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
      }, computeOffsets: function() {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
      } }), Object.defineProperties(Wr.prototype, { drawcalls: { get: function() {
        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
      } }, offsets: { get: function() {
        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
      } } }), Object.assign(So.prototype, { getArrays: function() {
        console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.");
      }, addShapeList: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.");
      }, addShape: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.");
      } }), Object.defineProperties(Wc.prototype, { dynamic: { set: function() {
        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");
      } }, onUpdate: { value: function() {
        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
      } } }), Object.defineProperties(Qn.prototype, { wrapAround: { get: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      }, set: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      } }, wrapRGB: { get: function() {
        return console.warn("THREE.Material: .wrapRGB has been removed."), new sn();
      } }, shading: { get: function() {
        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
      }, set: function(Z) {
        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = Z === Fe;
      } } }), Object.defineProperties(Eo.prototype, { metal: { get: function() {
        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1;
      }, set: function() {
        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
      } } }), Object.defineProperties(uo.prototype, { derivatives: { get: function() {
        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
      }, set: function(Z) {
        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = Z;
      } } }), Object.assign(iA.prototype, { animate: function(Z) {
        console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(Z);
      }, getCurrentRenderTarget: function() {
        return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
      }, getMaxAnisotropy: function() {
        return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
      }, getPrecision: function() {
        return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
      }, resetGLState: function() {
        return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
      }, supportsFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
      }, supportsHalfFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
      }, supportsStandardDerivatives: function() {
        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
      }, supportsCompressedTextureS3TC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
      }, supportsCompressedTexturePVRTC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
      }, supportsBlendMinMax: function() {
        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
      }, supportsVertexTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
      }, supportsInstancedArrays: function() {
        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
      }, enableScissorTest: function(Z) {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(Z);
      }, initMaterial: function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
      }, addPrePlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
      }, addPostPlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
      }, updateShadowMap: function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
      }, setFaceCulling: function() {
        console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
      } }), Object.defineProperties(iA.prototype, { shadowMapEnabled: { get: function() {
        return this.shadowMap.enabled;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = Z;
      } }, shadowMapType: { get: function() {
        return this.shadowMap.type;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = Z;
      } }, shadowMapCullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(ou.prototype, { cullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      } }, renderReverseSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      } }, renderSingleSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(ia.prototype, { wrapS: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = Z;
      } }, wrapT: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = Z;
      } }, magFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = Z;
      } }, minFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = Z;
      } }, anisotropy: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = Z;
      } }, offset: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = Z;
      } }, repeat: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = Z;
      } }, format: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = Z;
      } }, type: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = Z;
      } }, generateMipmaps: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = Z;
      } } }), Object.defineProperties(su.prototype, { standing: { set: function() {
        console.warn("THREE.WebVRManager: .standing has been removed.");
      } } }), ls.prototype.load = function(Z) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var te = this;
        return new CA().load(Z, function(oe) {
          te.setBuffer(oe);
        }), this;
      }, wA.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
      }, lc.prototype.updateCubeMap = function(Z, te) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(Z, te);
      };
      var dd = { merge: function(Z, te, oe) {
        var se;
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."), te.isMesh && (te.matrixAutoUpdate && te.updateMatrix(), se = te.matrix, te = te.geometry), Z.merge(te, se, oe);
      }, center: function(Z) {
        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), Z.center();
      } };
      function hd() {
        console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."), this.projectVector = function(Z, te) {
          console.warn("THREE.Projector: .projectVector() is now vector.project()."), Z.project(te);
        }, this.unprojectVector = function(Z, te) {
          console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), Z.unproject(te);
        }, this.pickingRay = function() {
          console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
        };
      }
      function fd() {
        console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"), this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), this.clear = function() {
        }, this.render = function() {
        }, this.setClearColor = function() {
        }, this.setSize = function() {
        };
      }
      Jo.crossOrigin = void 0, Jo.loadTexture = function(Z, te, oe, se) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var Ae = new Mc();
        Ae.setCrossOrigin(this.crossOrigin);
        var ue = Ae.load(Z, oe, void 0, se);
        return te && (ue.mapping = te), ue;
      }, Jo.loadTextureCube = function(Z, te, oe, se) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var Ae = new uA();
        Ae.setCrossOrigin(this.crossOrigin);
        var ue = Ae.load(Z, oe, void 0, se);
        return te && (ue.mapping = te), ue;
      }, Jo.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
      }, Jo.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
      };
      var pd = { createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      } };
      function gd() {
        console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js");
      }
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Oe(He, Se) {
          for (var Ge = 0; Ge < Se.length; Ge++) {
            var Fe = Se[Ge];
            Fe.enumerable = Fe.enumerable || !1, Fe.configurable = !0, "value" in Fe && (Fe.writable = !0), Object.defineProperty(He, Fe.key, Fe);
          }
        }
        return function(He, Se, Ge) {
          return Se && Oe(He.prototype, Se), Ge && Oe(He, Ge), He;
        };
      }(), ye = me(ae(5)), fe = function(Oe) {
        if (Oe && Oe.__esModule)
          return Oe;
        var He = {};
        if (Oe != null)
          for (var Se in Oe)
            Object.prototype.hasOwnProperty.call(Oe, Se) && (He[Se] = Oe[Se]);
        return He.default = Oe, He;
      }(ae(0)), Be = ae(4), Ee = me(ae(3));
      function me(Oe) {
        return Oe && Oe.__esModule ? Oe : { default: Oe };
      }
      var ge = { directionligth: { create: function() {
        var Oe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, He = Oe.color, Se = Oe.position, Ge = Oe.castShadow, Fe = new fe.DirectionalLight(new fe.Color(He), 0.95);
        return Fe.position.set(Se.x, Se.y, Se.z), Fe.castShadow = Ge, Fe;
      } }, ambientlight: { create: function() {
        var Oe = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}).color;
        return new fe.AmbientLight(new fe.Color(Oe));
      } }, spotlight: { create: function() {
      } } }, we = function Oe(He) {
        if (He instanceof fe.Mesh) {
          var Se = He.geometry;
          if (Se) {
            Se.boundingBox || Se.computeBoundingBox();
            var Ge = Se.boundingBox;
            return He.updateMatrix(), Ge.applyMatrix4(He.matrix), Ge;
          }
          return new fe.Box3(new fe.Vector3(), new fe.Vector3());
        }
        var Fe, Pe = He.children.length, Je = new fe.Box3(new fe.Vector3(), new fe.Vector3());
        for (Fe = 0; Fe < Pe; Fe++) {
          var tt = Oe(He.children[Fe]);
          tt.min.x < Je.min.x && (Je.min.x = tt.min.x), tt.max.x > Je.max.x && (Je.max.x = tt.max.x), tt.min.y < Je.min.y && (Je.min.y = tt.min.y), tt.max.y > Je.max.y && (Je.max.y = tt.max.y), tt.min.z < Je.min.z && (Je.min.z = tt.min.z), tt.max.z > Je.max.z && (Je.max.z = tt.max.z);
        }
        return He.updateMatrix(), Je.applyMatrix4(He.matrix), Je;
      }, be = (le = ce = function(Oe) {
        function He(Se) {
          (function(Fe, Pe) {
            if (!(Fe instanceof Pe))
              throw new TypeError("Cannot call a class as a function");
          })(this, He);
          var Ge = function(Fe, Pe) {
            if (!Fe)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !Pe || typeof Pe != "object" && typeof Pe != "function" ? Fe : Pe;
          }(this, (He.__proto__ || Object.getPrototypeOf(He)).call(this, Se));
          return Ge.obj3d, Ge.src, Ge.state = { lights: [] }, Ge.lights = [], Ge.group = new fe.Group(), Ge;
        }
        return function(Se, Ge) {
          if (typeof Ge != "function" && Ge !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof Ge);
          Se.prototype = Object.create(Ge && Ge.prototype, { constructor: { value: Se, enumerable: !1, writable: !0, configurable: !0 } }), Ge && (Object.setPrototypeOf ? Object.setPrototypeOf(Se, Ge) : Se.__proto__ = Ge);
        }(He, ye.default.Component), de(He, [{ key: "render", value: function() {
          var Se = this;
          return this.state.lights, ye.default.createElement("div", { ref: function(Ge) {
            return Se.$container = Ge;
          }, "data-loader": this.props.loader, style: this.style() });
        } }, { key: "componentDidUpdate", value: function() {
          var Se = this;
          if (!this.obj3d)
            return !1;
          var Ge = this.props, Fe = Ge.src, Pe = (Ge.background, Ge.width), Je = Ge.height;
          this.camera.aspect = Pe / Je, this.camera.updateProjectionMatrix(), this.renderer.setSize(Pe, Je);
          var tt = this.props, ft = tt.enableKeys, Tt = tt.enableRotate, Xe = tt.enableZoom, ht = tt.enabled;
          Object.assign(this.orbit_controls, { enableKeys: ft, enablePan: !0, enableRotate: Tt, enableZoom: Xe, enabled: ht }), this.src !== void 0 && this.src != Fe && (this.src = Fe, this.remove3dModel(), this.load3dModel()), this.lights.forEach(function(Qt) {
            return Se.scene.remove(Qt);
          }), this.lights = [], this.addLight("ambientlight", Be.AmbientLight.defaultProps), this.need_children_lights ? this.addChildrenLights() : this.addLight("directionligth", Be.DirectionLight.defaultProps);
        } }, { key: "componentWillUnmount", value: function() {
          this.tick.animate = !1;
        } }, { key: "componentDidMount", value: function() {
          var Se = this, Ge = this.props, Fe = Ge.width, Pe = Ge.height, Je = Ge.antialias, tt = Ge.background;
          this.scene = new fe.Scene(), this.camera = new fe.PerspectiveCamera(45, Fe / Pe, 0.1, 8888), this.renderer = new fe.WebGLRenderer({ antialias: Je }), this.renderer.setClearColor(new fe.Color(tt)), this.renderer.setSize(Fe, Pe), this.$container.appendChild(this.renderer.domElement), this.scene.add(this.group), this.camera.position.set(0, 0, 0.1), this.createDefaultLight();
          var ft = this.props, Tt = ft.position, Xe = ft.rotation, ht = ft.scale;
          this.group.position.copy(new fe.Vector3(Tt.x, Tt.y, Tt.z)), this.group.rotation.set(Xe.x, Xe.y, Xe.z), this.group.scale.set(ht.x, ht.y, ht.z), this.load3dModel(), this.tick = (0, Ee.default)(function() {
            if (Se.renderer.render(Se.scene, Se.camera), Se.obj3d) {
              Se.group.children.length || Se.group.add(Se.obj3d);
              var Qt = Se.props, Gt = Qt.position, pt = Qt.rotation, xt = Qt.scale;
              Se.group.position.copy(new fe.Vector3(Gt.x, Gt.y, Gt.z)), Se.group.rotation.set(pt.x, pt.y, pt.z), Se.group.scale.set(xt.x, xt.y, xt.z);
            }
          });
        } }, { key: "initControl", value: function() {
          var Se = this.props, Ge = Se.enableKeys, Fe = Se.enableRotate, Pe = Se.enableZoom, Je = Se.enabled;
          this.orbit_controls = new fe.OrbitControls(this.camera, this.renderer.domElement), Object.assign(this.orbit_controls, { enableKeys: Ge, enablePan: !0, enableRotate: Fe, enableZoom: Pe, enabled: Je }), this.orbit_controls.update();
        } }, { key: "remove3dModel", value: function() {
          this.obj3d && this.scene.remove(this.obj3d);
        } }, { key: "load3dModel", value: function() {
        } }, { key: "style", value: function() {
          var Se = this.props, Ge = Se.width, Fe = Se.height;
          return Object.assign({}, { width: Ge + "px", height: Fe + "px" });
        } }, { key: "computeBoundingBox", value: function(Se) {
          if (Se instanceof fe.Mesh) {
            var Ge = Se.geometry;
            if (Ge) {
              Ge.boundingBox || Ge.computeBoundingBox();
              var Fe = Ge.boundingBox;
              return Se.updateMatrix(), Fe.applyMatrix4(Se.matrix), Fe;
            }
            return new fe.Box3(new fe.Vector3(), new fe.Vector3());
          }
          var Pe, Je = Se.children.length, tt = new fe.Box3(new fe.Vector3(), new fe.Vector3());
          for (Pe = 0; Pe < Je; Pe++) {
            var ft = we(Se.children[Pe]);
            ft.min.x < tt.min.x && (tt.min.x = ft.min.x), ft.max.x > tt.max.x && (tt.max.x = ft.max.x), ft.min.y < tt.min.y && (tt.min.y = ft.min.y), ft.max.y > tt.max.y && (tt.max.y = ft.max.y), ft.min.z < tt.min.z && (tt.min.z = ft.min.z), ft.max.z > tt.max.z && (tt.max.z = ft.max.z);
          }
          return Se.updateMatrix(), tt.applyMatrix4(Se.matrix), tt;
        } }, { key: "traverseScene", value: function() {
        } }, { key: "createEnvironment", value: function() {
        } }, { key: "addLight", value: function(Se, Ge) {
          if (/directionligth|ambientlight|spotlight/.test(Se)) {
            var Fe = ge[Se].create(Ge);
            return this.scene.add(Fe), this.lights.push(Fe), Fe;
          }
        } }, { key: "addChildrenLights", value: function() {
          var Se = this;
          this.lights.forEach(function(Ge) {
            Se.scene.remove(Ge);
          }), this.lights = [], this.array_children.map(function(Ge) {
            var Fe = Ge.props, Pe = Fe.__constructor;
            Se.addLight(Pe, Fe);
          });
        } }, { key: "createDefaultLight", value: function() {
          this.addLight("ambientlight", Be.AmbientLight.defaultProps), this.need_children_lights ? this.addChildrenLights() : this.addLight("directionligth", Be.DirectionLight.defaultProps);
        } }, { key: "array_children", get: function() {
          return this.props.children ? this.props.children instanceof Array ? this.props.children : [this.props.children] : [];
        } }, { key: "need_children_lights", get: function() {
          return !!this.array_children.filter(function(Se) {
            return /directionligth|ambientlight|spotlight/.test(Se.props.__constructor);
          }).length;
        } }]), He;
      }(), ce.defaultProps = { width: 500, height: 500, antialias: !0, loader: "", baseUrl: "", texPath: "", position: { x: 0, y: 0, z: 0 }, scale: { x: 1, y: 1, z: 1 }, rotation: { x: 0, y: 0, z: 0 }, background: "rgb(255,255,255)", enableKeys: !0, enableRotate: !0, enableZoom: !0, enabled: !0 }, le);
      ie.default = be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 }), ie.GLTFLoader = ie.ColladaLoader = ie.OBJLoader = ie.MTLLoader = ie.OrbitControls = void 0;
      var ce = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0));
      ce.OrbitControls = function(Ee, me) {
        this.object = Ee, this.domElement = me !== void 0 ? me : document, this.enabled = !0, this.target = new ce.Vector3(), this.minDistance = 0, this.maxDistance = 1 / 0, this.minZoom = 0, this.maxZoom = 1 / 0, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -1 / 0, this.maxAzimuthAngle = 1 / 0, this.enableDamping = !1, this.dampingFactor = 0.25, this.enableZoom = !0, this.zoomSpeed = 1, this.enableRotate = !0, this.rotateSpeed = 1, this.enablePan = !0, this.keyPanSpeed = 7, this.autoRotate = !1, this.autoRotateSpeed = 2, this.enableKeys = !0, this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }, this.mouseButtons = { ORBIT: ce.MOUSE.LEFT, ZOOM: ce.MOUSE.MIDDLE, PAN: ce.MOUSE.RIGHT }, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function() {
          return Fe.phi;
        }, this.getAzimuthalAngle = function() {
          return Fe.theta;
        }, this.reset = function() {
          ge.target.copy(ge.target0), ge.object.position.copy(ge.position0), ge.object.zoom = ge.zoom0, ge.object.updateProjectionMatrix(), ge.dispatchEvent(we), ge.update(), Se = He.NONE;
        }, this.update = function() {
          var je = new ce.Vector3(), _e = new ce.Quaternion().setFromUnitVectors(Ee.up, new ce.Vector3(0, 1, 0)), Ie = _e.clone().inverse(), Ce = new ce.Vector3(), ke = new ce.Quaternion();
          return function() {
            var Ve = ge.object.position;
            return je.copy(Ve).sub(ge.target), je.applyQuaternion(_e), Fe.setFromVector3(je), ge.autoRotate && Se === He.NONE && Lt(2 * Math.PI / 60 / 60 * ge.autoRotateSpeed), Fe.theta += Pe.theta, Fe.phi += Pe.phi, Fe.theta = Math.max(ge.minAzimuthAngle, Math.min(ge.maxAzimuthAngle, Fe.theta)), Fe.phi = Math.max(ge.minPolarAngle, Math.min(ge.maxPolarAngle, Fe.phi)), Fe.makeSafe(), Fe.radius *= Je, Fe.radius = Math.max(ge.minDistance, Math.min(ge.maxDistance, Fe.radius)), ge.target.add(tt), je.setFromSpherical(Fe), je.applyQuaternion(Ie), Ve.copy(ge.target).add(je), ge.object.lookAt(ge.target), ge.enableDamping === !0 ? (Pe.theta *= 1 - ge.dampingFactor, Pe.phi *= 1 - ge.dampingFactor) : Pe.set(0, 0, 0), Je = 1, tt.set(0, 0, 0), !!(ft || Ce.distanceToSquared(ge.object.position) > Ge || 8 * (1 - ke.dot(ge.object.quaternion)) > Ge) && (ge.dispatchEvent(we), Ce.copy(ge.object.position), ke.copy(ge.object.quaternion), ft = !1, !0);
          };
        }(), this.dispose = function() {
          ge.domElement.removeEventListener("contextmenu", ct, !1), ge.domElement.removeEventListener("mousedown", tr, !1), ge.domElement.removeEventListener("wheel", Ut, !1), ge.domElement.removeEventListener("touchstart", rt, !1), ge.domElement.removeEventListener("touchend", Bt, !1), ge.domElement.removeEventListener("touchmove", $e, !1), document.removeEventListener("mousemove", lr, !1), document.removeEventListener("mouseup", gt, !1), window.removeEventListener("keydown", Ze, !1);
        };
        var ge = this, we = { type: "change" }, be = { type: "start" }, Oe = { type: "end" }, He = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 }, Se = He.NONE, Ge = 1e-6, Fe = new ce.Spherical(), Pe = new ce.Spherical(), Je = 1, tt = new ce.Vector3(), ft = !1, Tt = new ce.Vector2(), Xe = new ce.Vector2(), ht = new ce.Vector2(), Qt = new ce.Vector2(), Gt = new ce.Vector2(), pt = new ce.Vector2(), xt = new ce.Vector2(), Yt = new ce.Vector2(), Jt = new ce.Vector2();
        function Ht() {
          return Math.pow(0.95, ge.zoomSpeed);
        }
        function Lt(je) {
          Pe.theta -= je;
        }
        function Pt(je) {
          Pe.phi -= je;
        }
        var yt = function() {
          var je = new ce.Vector3();
          return function(_e, Ie) {
            je.setFromMatrixColumn(Ie, 0), je.multiplyScalar(-_e), tt.add(je);
          };
        }(), kt = function() {
          var je = new ce.Vector3();
          return function(_e, Ie) {
            je.setFromMatrixColumn(Ie, 1), je.multiplyScalar(_e), tt.add(je);
          };
        }(), $t = function() {
          var je = new ce.Vector3();
          return function(_e, Ie) {
            var Ce = ge.domElement === document ? ge.domElement.body : ge.domElement;
            if (ge.object instanceof ce.PerspectiveCamera) {
              var ke = ge.object.position;
              je.copy(ke).sub(ge.target);
              var Ve = je.length();
              Ve *= Math.tan(ge.object.fov / 2 * Math.PI / 180), yt(2 * _e * Ve / Ce.clientHeight, ge.object.matrix), kt(2 * Ie * Ve / Ce.clientHeight, ge.object.matrix);
            } else
              ge.object instanceof ce.OrthographicCamera ? (yt(_e * (ge.object.right - ge.object.left) / ge.object.zoom / Ce.clientWidth, ge.object.matrix), kt(Ie * (ge.object.top - ge.object.bottom) / ge.object.zoom / Ce.clientHeight, ge.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), ge.enablePan = !1);
          };
        }();
        function Le(je) {
          ge.object instanceof ce.PerspectiveCamera ? Je /= je : ge.object instanceof ce.OrthographicCamera ? (ge.object.zoom = Math.max(ge.minZoom, Math.min(ge.maxZoom, ge.object.zoom * je)), ge.object.updateProjectionMatrix(), ft = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), ge.enableZoom = !1);
        }
        function or(je) {
          ge.object instanceof ce.PerspectiveCamera ? Je *= je : ge.object instanceof ce.OrthographicCamera ? (ge.object.zoom = Math.max(ge.minZoom, Math.min(ge.maxZoom, ge.object.zoom / je)), ge.object.updateProjectionMatrix(), ft = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), ge.enableZoom = !1);
        }
        function tr(je) {
          if (ge.enabled !== !1) {
            if (je.preventDefault(), je.button === ge.mouseButtons.ORBIT) {
              if (ge.enableRotate === !1)
                return;
              (function(_e) {
                Tt.set(_e.clientX, _e.clientY);
              })(je), Se = He.ROTATE;
            } else if (je.button === ge.mouseButtons.ZOOM) {
              if (ge.enableZoom === !1)
                return;
              (function(_e) {
                xt.set(_e.clientX, _e.clientY);
              })(je), Se = He.DOLLY;
            } else if (je.button === ge.mouseButtons.PAN) {
              if (ge.enablePan === !1)
                return;
              (function(_e) {
                Qt.set(_e.clientX, _e.clientY);
              })(je), Se = He.PAN;
            }
            Se !== He.NONE && (document.addEventListener("mousemove", lr, !1), document.addEventListener("mouseup", gt, !1), ge.dispatchEvent(be));
          }
        }
        function lr(je) {
          if (ge.enabled !== !1) {
            if (je.preventDefault(), Se === He.ROTATE) {
              if (ge.enableRotate === !1)
                return;
              (function(_e) {
                Xe.set(_e.clientX, _e.clientY), ht.subVectors(Xe, Tt);
                var Ie = ge.domElement === document ? ge.domElement.body : ge.domElement;
                Lt(2 * Math.PI * ht.x / Ie.clientWidth * ge.rotateSpeed), Pt(2 * Math.PI * ht.y / Ie.clientHeight * ge.rotateSpeed), Tt.copy(Xe), ge.update();
              })(je);
            } else if (Se === He.DOLLY) {
              if (ge.enableZoom === !1)
                return;
              (function(_e) {
                Yt.set(_e.clientX, _e.clientY), Jt.subVectors(Yt, xt), Jt.y > 0 ? Le(Ht()) : Jt.y < 0 && or(Ht()), xt.copy(Yt), ge.update();
              })(je);
            } else if (Se === He.PAN) {
              if (ge.enablePan === !1)
                return;
              (function(_e) {
                Gt.set(_e.clientX, _e.clientY), pt.subVectors(Gt, Qt), $t(pt.x, pt.y), Qt.copy(Gt), ge.update();
              })(je);
            }
          }
        }
        function gt(je) {
          ge.enabled !== !1 && (document.removeEventListener("mousemove", lr, !1), document.removeEventListener("mouseup", gt, !1), ge.dispatchEvent(Oe), Se = He.NONE);
        }
        function Ut(je) {
          ge.enabled === !1 || ge.enableZoom === !1 || Se !== He.NONE && Se !== He.ROTATE || (je.preventDefault(), je.stopPropagation(), function(_e) {
            _e.deltaY < 0 ? or(Ht()) : _e.deltaY > 0 && Le(Ht()), ge.update();
          }(je), ge.dispatchEvent(be), ge.dispatchEvent(Oe));
        }
        function Ze(je) {
          ge.enabled !== !1 && ge.enableKeys !== !1 && ge.enablePan !== !1 && function(_e) {
            switch (_e.keyCode) {
              case ge.keys.UP:
                $t(0, ge.keyPanSpeed), ge.update();
                break;
              case ge.keys.BOTTOM:
                $t(0, -ge.keyPanSpeed), ge.update();
                break;
              case ge.keys.LEFT:
                $t(ge.keyPanSpeed, 0), ge.update();
                break;
              case ge.keys.RIGHT:
                $t(-ge.keyPanSpeed, 0), ge.update();
            }
          }(je);
        }
        function rt(je) {
          if (ge.enabled !== !1) {
            switch (je.touches.length) {
              case 1:
                if (ge.enableRotate === !1)
                  return;
                (function(_e) {
                  Tt.set(_e.touches[0].pageX, _e.touches[0].pageY);
                })(je), Se = He.TOUCH_ROTATE;
                break;
              case 2:
                if (ge.enableZoom === !1)
                  return;
                (function(_e) {
                  var Ie = _e.touches[0].pageX - _e.touches[1].pageX, Ce = _e.touches[0].pageY - _e.touches[1].pageY, ke = Math.sqrt(Ie * Ie + Ce * Ce);
                  xt.set(0, ke);
                })(je), Se = He.TOUCH_DOLLY;
                break;
              case 3:
                if (ge.enablePan === !1)
                  return;
                (function(_e) {
                  Qt.set(_e.touches[0].pageX, _e.touches[0].pageY);
                })(je), Se = He.TOUCH_PAN;
                break;
              default:
                Se = He.NONE;
            }
            Se !== He.NONE && ge.dispatchEvent(be);
          }
        }
        function $e(je) {
          if (ge.enabled !== !1)
            switch (je.preventDefault(), je.stopPropagation(), je.touches.length) {
              case 1:
                if (ge.enableRotate === !1 || Se !== He.TOUCH_ROTATE)
                  return;
                (function(_e) {
                  Xe.set(_e.touches[0].pageX, _e.touches[0].pageY), ht.subVectors(Xe, Tt);
                  var Ie = ge.domElement === document ? ge.domElement.body : ge.domElement;
                  Lt(2 * Math.PI * ht.x / Ie.clientWidth * ge.rotateSpeed), Pt(2 * Math.PI * ht.y / Ie.clientHeight * ge.rotateSpeed), Tt.copy(Xe), ge.update();
                })(je);
                break;
              case 2:
                if (ge.enableZoom === !1 || Se !== He.TOUCH_DOLLY)
                  return;
                (function(_e) {
                  var Ie = _e.touches[0].pageX - _e.touches[1].pageX, Ce = _e.touches[0].pageY - _e.touches[1].pageY, ke = Math.sqrt(Ie * Ie + Ce * Ce);
                  Yt.set(0, ke), Jt.subVectors(Yt, xt), Jt.y > 0 ? or(Ht()) : Jt.y < 0 && Le(Ht()), xt.copy(Yt), ge.update();
                })(je);
                break;
              case 3:
                if (ge.enablePan === !1 || Se !== He.TOUCH_PAN)
                  return;
                (function(_e) {
                  Gt.set(_e.touches[0].pageX, _e.touches[0].pageY), pt.subVectors(Gt, Qt), $t(pt.x, pt.y), Qt.copy(Gt), ge.update();
                })(je);
                break;
              default:
                Se = He.NONE;
            }
        }
        function Bt(je) {
          ge.enabled !== !1 && (ge.dispatchEvent(Oe), Se = He.NONE);
        }
        function ct(je) {
          je.preventDefault();
        }
        ge.domElement.addEventListener("contextmenu", ct, !1), ge.domElement.addEventListener("mousedown", tr, !1), ge.domElement.addEventListener("wheel", Ut, !1), ge.domElement.addEventListener("touchstart", rt, !1), ge.domElement.addEventListener("touchend", Bt, !1), ge.domElement.addEventListener("touchmove", $e, !1), window.addEventListener("keydown", Ze, !1), this.update();
      }, ce.OrbitControls.prototype = Object.create(ce.EventDispatcher.prototype), ce.OrbitControls.prototype.constructor = ce.OrbitControls, Object.defineProperties(ce.OrbitControls.prototype, { center: { get: function() {
        return console.warn("THREE.OrbitControls: .center has been renamed to .target"), this.target;
      } }, noZoom: { get: function() {
        return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), !this.enableZoom;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), this.enableZoom = !Ee;
      } }, noRotate: { get: function() {
        return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), !this.enableRotate;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), this.enableRotate = !Ee;
      } }, noPan: { get: function() {
        return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), !this.enablePan;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), this.enablePan = !Ee;
      } }, noKeys: { get: function() {
        return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), !this.enableKeys;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), this.enableKeys = !Ee;
      } }, staticMoving: { get: function() {
        return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), !this.enableDamping;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), this.enableDamping = !Ee;
      } }, dynamicDampingFactor: { get: function() {
        return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor = Ee;
      } } }), ce.MTLLoader = function(Ee) {
        this.manager = Ee !== void 0 ? Ee : ce.DefaultLoadingManager;
      }, ce.MTLLoader.prototype = { constructor: ce.MTLLoader, load: function(Ee, me, ge, we) {
        var be = this, Oe = new ce.FileLoader(this.manager);
        Oe.setPath(this.path), Oe.load(Ee, function(He) {
          me(be.parse(He));
        }, ge, we);
      }, setPath: function(Ee) {
        this.path = Ee;
      }, setTexturePath: function(Ee) {
        this.texturePath = Ee;
      }, setBaseUrl: function(Ee) {
        console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead."), this.setTexturePath(Ee);
      }, setCrossOrigin: function(Ee) {
        this.crossOrigin = Ee;
      }, setMaterialOptions: function(Ee) {
        this.materialOptions = Ee;
      }, parse: function(Ee) {
        for (var me = Ee.split(`
`), ge = {}, we = /\s+/, be = {}, Oe = 0; Oe < me.length; Oe++) {
          var He = me[Oe];
          if ((He = He.trim()).length !== 0 && He.charAt(0) !== "#") {
            var Se = He.indexOf(" "), Ge = Se >= 0 ? He.substring(0, Se) : He;
            Ge = Ge.toLowerCase();
            var Fe = Se >= 0 ? He.substring(Se + 1) : "";
            if (Fe = Fe.trim(), Ge === "newmtl")
              ge = { name: Fe }, be[Fe] = ge;
            else if (ge)
              if (Ge === "ka" || Ge === "kd" || Ge === "ks") {
                var Pe = Fe.split(we, 3);
                ge[Ge] = [parseFloat(Pe[0]), parseFloat(Pe[1]), parseFloat(Pe[2])];
              } else
                ge[Ge] = Fe;
          }
        }
        var Je = new ce.MTLLoader.MaterialCreator(this.texturePath || this.path, this.materialOptions);
        return Je.setCrossOrigin(this.crossOrigin), Je.setManager(this.manager), Je.setMaterials(be), Je;
      } }, ce.MTLLoader.MaterialCreator = function(Ee, me) {
        this.baseUrl = Ee || "", this.options = me, this.materialsInfo = {}, this.materials = {}, this.materialsArray = [], this.nameLookup = {}, this.side = this.options && this.options.side ? this.options.side : ce.FrontSide, this.wrap = this.options && this.options.wrap ? this.options.wrap : ce.RepeatWrapping;
      }, ce.MTLLoader.MaterialCreator.prototype = { constructor: ce.MTLLoader.MaterialCreator, crossOrigin: "Anonymous", setCrossOrigin: function(Ee) {
        this.crossOrigin = Ee;
      }, setManager: function(Ee) {
        this.manager = Ee;
      }, setMaterials: function(Ee) {
        this.materialsInfo = this.convert(Ee), this.materials = {}, this.materialsArray = [], this.nameLookup = {};
      }, convert: function(Ee) {
        if (!this.options)
          return Ee;
        var me = {};
        for (var ge in Ee) {
          var we = Ee[ge], be = {};
          for (var Oe in me[ge] = be, we) {
            var He = !0, Se = we[Oe], Ge = Oe.toLowerCase();
            switch (Ge) {
              case "kd":
              case "ka":
              case "ks":
                this.options && this.options.normalizeRGB && (Se = [Se[0] / 255, Se[1] / 255, Se[2] / 255]), this.options && this.options.ignoreZeroRGBs && Se[0] === 0 && Se[1] === 0 && Se[2] === 0 && (He = !1);
            }
            He && (be[Ge] = Se);
          }
        }
        return me;
      }, preload: function() {
        for (var Ee in this.materialsInfo)
          this.create(Ee);
      }, getIndex: function(Ee) {
        return this.nameLookup[Ee];
      }, getAsArray: function() {
        var Ee = 0;
        for (var me in this.materialsInfo)
          this.materialsArray[Ee] = this.create(me), this.nameLookup[me] = Ee, Ee++;
        return this.materialsArray;
      }, create: function(Ee) {
        return this.materials[Ee] === void 0 && this.createMaterial_(Ee), this.materials[Ee];
      }, createMaterial_: function(Ee) {
        var me = this, ge = this.materialsInfo[Ee], we = { name: Ee, side: this.side };
        function be(Ge, Fe) {
          if (!we[Ge]) {
            var Pe = me.getTextureParams(Fe, we), Je = me.loadTexture(function(tt, ft) {
              return typeof ft != "string" || ft === "" ? "" : /^https?:\/\//i.test(ft) ? ft : tt + ft;
            }(me.baseUrl, Pe.url));
            Je.repeat.copy(Pe.scale), Je.offset.copy(Pe.offset), Je.wrapS = me.wrap, Je.wrapT = me.wrap, we[Ge] = Je;
          }
        }
        for (var Oe in ge) {
          var He, Se = ge[Oe];
          if (Se !== "")
            switch (Oe.toLowerCase()) {
              case "kd":
                we.color = new ce.Color().fromArray(Se);
                break;
              case "ks":
                we.specular = new ce.Color().fromArray(Se);
                break;
              case "map_kd":
                be("map", Se);
                break;
              case "map_ks":
                be("specularMap", Se);
                break;
              case "norm":
                be("normalMap", Se);
                break;
              case "map_bump":
              case "bump":
                be("bumpMap", Se);
                break;
              case "ns":
                we.shininess = parseFloat(Se);
                break;
              case "d":
                (He = parseFloat(Se)) < 1 && (we.opacity = He, we.transparent = !0);
                break;
              case "tr":
                (He = parseFloat(Se)) > 0 && (we.opacity = 1 - He, we.transparent = !0);
            }
        }
        return this.materials[Ee] = new ce.MeshPhongMaterial(we), this.materials[Ee];
      }, getTextureParams: function(Ee, me) {
        var ge, we = { scale: new ce.Vector2(1, 1), offset: new ce.Vector2(0, 0) }, be = Ee.split(/\s+/);
        return (ge = be.indexOf("-bm")) >= 0 && (me.bumpScale = parseFloat(be[ge + 1]), be.splice(ge, 2)), (ge = be.indexOf("-s")) >= 0 && (we.scale.set(parseFloat(be[ge + 1]), parseFloat(be[ge + 2])), be.splice(ge, 4)), (ge = be.indexOf("-o")) >= 0 && (we.offset.set(parseFloat(be[ge + 1]), parseFloat(be[ge + 2])), be.splice(ge, 4)), we.url = be.join(" ").trim(), we;
      }, loadTexture: function(Ee, me, ge, we, be) {
        var Oe, He = ce.Loader.Handlers.get(Ee), Se = this.manager !== void 0 ? this.manager : ce.DefaultLoadingManager;
        return He === null && (He = new ce.TextureLoader(Se)), He.setCrossOrigin && He.setCrossOrigin(this.crossOrigin), Oe = He.load(Ee, ge, we, be), me !== void 0 && (Oe.mapping = me), Oe;
      } }, ce.OBJLoader = function() {
        var Ee = /^[og]\s*(.+)?/, me = /^mtllib /, ge = /^usemtl /;
        function we(be) {
          this.manager = be !== void 0 ? be : ce.DefaultLoadingManager, this.materials = null;
        }
        return we.prototype = { constructor: we, load: function(be, Oe, He, Se) {
          var Ge = this, Fe = new ce.FileLoader(Ge.manager);
          Fe.setPath(this.path), Fe.load(be, function(Pe) {
            Oe(Ge.parse(Pe));
          }, He, Se);
        }, setPath: function(be) {
          this.path = be;
        }, setMaterials: function(be) {
          return this.materials = be, this;
        }, parse: function(be) {
          console.time("OBJLoader");
          var Oe = new function() {
            var ke = { objects: [], object: {}, vertices: [], normals: [], colors: [], uvs: [], materialLibraries: [], startObject: function(Ve, Ke) {
              if (this.object && this.object.fromDeclaration === !1)
                return this.object.name = Ve, void (this.object.fromDeclaration = Ke !== !1);
              var ot = this.object && typeof this.object.currentMaterial == "function" ? this.object.currentMaterial() : void 0;
              if (this.object && typeof this.object._finalize == "function" && this.object._finalize(!0), this.object = { name: Ve || "", fromDeclaration: Ke !== !1, geometry: { vertices: [], normals: [], colors: [], uvs: [] }, materials: [], smooth: !0, startMaterial: function(Vt, zt) {
                var Wt = this._finalize(!1);
                Wt && (Wt.inherited || Wt.groupCount <= 0) && this.materials.splice(Wt.index, 1);
                var qe = { index: this.materials.length, name: Vt || "", mtllib: Array.isArray(zt) && zt.length > 0 ? zt[zt.length - 1] : "", smooth: Wt !== void 0 ? Wt.smooth : this.smooth, groupStart: Wt !== void 0 ? Wt.groupEnd : 0, groupEnd: -1, groupCount: -1, inherited: !1, clone: function(Te) {
                  var Re = { index: typeof Te == "number" ? Te : this.index, name: this.name, mtllib: this.mtllib, smooth: this.smooth, groupStart: 0, groupEnd: -1, groupCount: -1, inherited: !1 };
                  return Re.clone = this.clone.bind(Re), Re;
                } };
                return this.materials.push(qe), qe;
              }, currentMaterial: function() {
                if (this.materials.length > 0)
                  return this.materials[this.materials.length - 1];
              }, _finalize: function(Vt) {
                var zt = this.currentMaterial();
                if (zt && zt.groupEnd === -1 && (zt.groupEnd = this.geometry.vertices.length / 3, zt.groupCount = zt.groupEnd - zt.groupStart, zt.inherited = !1), Vt && this.materials.length > 1)
                  for (var Wt = this.materials.length - 1; Wt >= 0; Wt--)
                    this.materials[Wt].groupCount <= 0 && this.materials.splice(Wt, 1);
                return Vt && this.materials.length === 0 && this.materials.push({ name: "", smooth: this.smooth }), zt;
              } }, ot && ot.name && typeof ot.clone == "function") {
                var St = ot.clone(0);
                St.inherited = !0, this.object.materials.push(St);
              }
              this.objects.push(this.object);
            }, finalize: function() {
              this.object && typeof this.object._finalize == "function" && this.object._finalize(!0);
            }, parseVertexIndex: function(Ve, Ke) {
              var ot = parseInt(Ve, 10);
              return 3 * (ot >= 0 ? ot - 1 : ot + Ke / 3);
            }, parseNormalIndex: function(Ve, Ke) {
              var ot = parseInt(Ve, 10);
              return 3 * (ot >= 0 ? ot - 1 : ot + Ke / 3);
            }, parseUVIndex: function(Ve, Ke) {
              var ot = parseInt(Ve, 10);
              return 2 * (ot >= 0 ? ot - 1 : ot + Ke / 2);
            }, addVertex: function(Ve, Ke, ot) {
              var St = this.vertices, Vt = this.object.geometry.vertices;
              Vt.push(St[Ve + 0], St[Ve + 1], St[Ve + 2]), Vt.push(St[Ke + 0], St[Ke + 1], St[Ke + 2]), Vt.push(St[ot + 0], St[ot + 1], St[ot + 2]);
            }, addVertexLine: function(Ve) {
              var Ke = this.vertices;
              this.object.geometry.vertices.push(Ke[Ve + 0], Ke[Ve + 1], Ke[Ve + 2]);
            }, addNormal: function(Ve, Ke, ot) {
              var St = this.normals, Vt = this.object.geometry.normals;
              Vt.push(St[Ve + 0], St[Ve + 1], St[Ve + 2]), Vt.push(St[Ke + 0], St[Ke + 1], St[Ke + 2]), Vt.push(St[ot + 0], St[ot + 1], St[ot + 2]);
            }, addColor: function(Ve, Ke, ot) {
              var St = this.colors, Vt = this.object.geometry.colors;
              Vt.push(St[Ve + 0], St[Ve + 1], St[Ve + 2]), Vt.push(St[Ke + 0], St[Ke + 1], St[Ke + 2]), Vt.push(St[ot + 0], St[ot + 1], St[ot + 2]);
            }, addUV: function(Ve, Ke, ot) {
              var St = this.uvs, Vt = this.object.geometry.uvs;
              Vt.push(St[Ve + 0], St[Ve + 1]), Vt.push(St[Ke + 0], St[Ke + 1]), Vt.push(St[ot + 0], St[ot + 1]);
            }, addUVLine: function(Ve) {
              var Ke = this.uvs;
              this.object.geometry.uvs.push(Ke[Ve + 0], Ke[Ve + 1]);
            }, addFace: function(Ve, Ke, ot, St, Vt, zt, Wt, qe, Te) {
              var Re = this.vertices.length, it = this.parseVertexIndex(Ve, Re), Ct = this.parseVertexIndex(Ke, Re), Nt = this.parseVertexIndex(ot, Re);
              if (this.addVertex(it, Ct, Nt), St !== void 0) {
                var Dt = this.uvs.length;
                it = this.parseUVIndex(St, Dt), Ct = this.parseUVIndex(Vt, Dt), Nt = this.parseUVIndex(zt, Dt), this.addUV(it, Ct, Nt);
              }
              if (Wt !== void 0) {
                var Er = this.normals.length;
                it = this.parseNormalIndex(Wt, Er), Ct = Wt === qe ? it : this.parseNormalIndex(qe, Er), Nt = Wt === Te ? it : this.parseNormalIndex(Te, Er), this.addNormal(it, Ct, Nt);
              }
              this.colors.length > 0 && this.addColor(it, Ct, Nt);
            }, addLineGeometry: function(Ve, Ke) {
              this.object.geometry.type = "Line";
              for (var ot = this.vertices.length, St = this.uvs.length, Vt = 0, zt = Ve.length; Vt < zt; Vt++)
                this.addVertexLine(this.parseVertexIndex(Ve[Vt], ot));
              var Wt = 0;
              for (zt = Ke.length; Wt < zt; Wt++)
                this.addUVLine(this.parseUVIndex(Ke[Wt], St));
            } };
            return ke.startObject("", !1), ke;
          }();
          be.indexOf(`\r
`) !== -1 && (be = be.replace(/\r\n/g, `
`)), be.indexOf(`\\
`) !== -1 && (be = be.replace(/\\\n/g, ""));
          for (var He = be.split(`
`), Se = "", Ge = "", Fe = [], Pe = typeof "".trimLeft == "function", Je = 0, tt = He.length; Je < tt; Je++)
            if (Se = He[Je], (Se = Pe ? Se.trimLeft() : Se.trim()).length !== 0 && (Ge = Se.charAt(0)) !== "#")
              if (Ge === "v") {
                var ft = Se.split(/\s+/);
                switch (ft[0]) {
                  case "v":
                    Oe.vertices.push(parseFloat(ft[1]), parseFloat(ft[2]), parseFloat(ft[3])), ft.length === 8 && Oe.colors.push(parseFloat(ft[4]), parseFloat(ft[5]), parseFloat(ft[6]));
                    break;
                  case "vn":
                    Oe.normals.push(parseFloat(ft[1]), parseFloat(ft[2]), parseFloat(ft[3]));
                    break;
                  case "vt":
                    Oe.uvs.push(parseFloat(ft[1]), parseFloat(ft[2]));
                }
              } else if (Ge === "f") {
                for (var Tt = Se.substr(1).trim().split(/\s+/), Xe = [], ht = 0, Qt = Tt.length; ht < Qt; ht++) {
                  var Gt = Tt[ht];
                  if (Gt.length > 0) {
                    var pt = Gt.split("/");
                    Xe.push(pt);
                  }
                }
                var xt = Xe[0];
                for (ht = 1, Qt = Xe.length - 1; ht < Qt; ht++) {
                  var Yt = Xe[ht], Jt = Xe[ht + 1];
                  Oe.addFace(xt[0], Yt[0], Jt[0], xt[1], Yt[1], Jt[1], xt[2], Yt[2], Jt[2]);
                }
              } else if (Ge === "l") {
                var Ht = Se.substring(1).trim().split(" "), Lt = [], Pt = [];
                if (Se.indexOf("/") === -1)
                  Lt = Ht;
                else
                  for (var yt = 0, kt = Ht.length; yt < kt; yt++) {
                    var $t = Ht[yt].split("/");
                    $t[0] !== "" && Lt.push($t[0]), $t[1] !== "" && Pt.push($t[1]);
                  }
                Oe.addLineGeometry(Lt, Pt);
              } else if ((Fe = Ee.exec(Se)) !== null) {
                var Le = (" " + Fe[0].substr(1).trim()).substr(1);
                Oe.startObject(Le);
              } else if (ge.test(Se))
                Oe.object.startMaterial(Se.substring(7).trim(), Oe.materialLibraries);
              else if (me.test(Se))
                Oe.materialLibraries.push(Se.substring(7).trim());
              else {
                if (Ge !== "s") {
                  if (Se === "\0")
                    continue;
                  throw new Error('THREE.OBJLoader: Unexpected line: "' + Se + '"');
                }
                if ((Fe = Se.split(" ")).length > 1) {
                  var or = Fe[1].trim().toLowerCase();
                  Oe.object.smooth = or !== "0" && or !== "off";
                } else
                  Oe.object.smooth = !0;
                (Ie = Oe.object.currentMaterial()) && (Ie.smooth = Oe.object.smooth);
              }
          Oe.finalize();
          var tr = new ce.Group();
          for (tr.materialLibraries = [].concat(Oe.materialLibraries), Je = 0, tt = Oe.objects.length; Je < tt; Je++) {
            var lr = Oe.objects[Je], gt = lr.geometry, Ut = lr.materials, Ze = gt.type === "Line";
            if (gt.vertices.length !== 0) {
              var rt = new ce.BufferGeometry();
              rt.addAttribute("position", new ce.Float32BufferAttribute(gt.vertices, 3)), gt.normals.length > 0 ? rt.addAttribute("normal", new ce.Float32BufferAttribute(gt.normals, 3)) : rt.computeVertexNormals(), gt.colors.length > 0 && rt.addAttribute("color", new ce.Float32BufferAttribute(gt.colors, 3)), gt.uvs.length > 0 && rt.addAttribute("uv", new ce.Float32BufferAttribute(gt.uvs, 2));
              for (var $e, Bt = [], ct = 0, je = Ut.length; ct < je; ct++) {
                var _e = Ut[ct], Ie = void 0;
                if (this.materials !== null && (Ie = this.materials.create(_e.name), Ze && Ie && !(Ie instanceof ce.LineBasicMaterial))) {
                  var Ce = new ce.LineBasicMaterial();
                  Ce.copy(Ie), Ie = Ce;
                }
                Ie || ((Ie = Ze ? new ce.LineBasicMaterial() : new ce.MeshPhongMaterial()).name = _e.name), Ie.flatShading = !_e.smooth, Bt.push(Ie);
              }
              if (Bt.length > 1) {
                for (ct = 0, je = Ut.length; ct < je; ct++)
                  _e = Ut[ct], rt.addGroup(_e.groupStart, _e.groupCount, ct);
                $e = Ze ? new ce.LineSegments(rt, Bt) : new ce.Mesh(rt, Bt);
              } else
                $e = Ze ? new ce.LineSegments(rt, Bt[0]) : new ce.Mesh(rt, Bt[0]);
              $e.name = lr.name, tr.add($e);
            }
          }
          return console.timeEnd("OBJLoader"), tr;
        } }, we;
      }(), ce.ColladaLoader = function(Ee) {
        this.manager = Ee !== void 0 ? Ee : ce.DefaultLoadingManager;
      }, ce.ColladaLoader.prototype = { constructor: ce.ColladaLoader, crossOrigin: "anonymous", load: function(Ee, me, ge, we) {
        var be = this, Oe = be.path === void 0 ? ce.LoaderUtils.extractUrlBase(Ee) : be.path;
        new ce.FileLoader(be.manager).load(Ee, function(He) {
          me(be.parse(He, Oe));
        }, ge, we);
      }, setPath: function(Ee) {
        return this.path = Ee, this;
      }, options: { set convertUpAxis(Ee) {
        console.warn("THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.");
      } }, setCrossOrigin: function(Ee) {
        return this.crossOrigin = Ee, this;
      }, parse: function(Ee, me) {
        function ge(De, We) {
          for (var at = [], dt = De.childNodes, ut = 0, Zt = dt.length; ut < Zt; ut++) {
            var cr = dt[ut];
            cr.nodeName === We && at.push(cr);
          }
          return at;
        }
        function we(De) {
          if (De.length === 0)
            return [];
          for (var We = De.trim().split(/\s+/), at = new Array(We.length), dt = 0, ut = We.length; dt < ut; dt++)
            at[dt] = We[dt];
          return at;
        }
        function be(De) {
          if (De.length === 0)
            return [];
          for (var We = De.trim().split(/\s+/), at = new Array(We.length), dt = 0, ut = We.length; dt < ut; dt++)
            at[dt] = parseFloat(We[dt]);
          return at;
        }
        function Oe(De) {
          if (De.length === 0)
            return [];
          for (var We = De.trim().split(/\s+/), at = new Array(We.length), dt = 0, ut = We.length; dt < ut; dt++)
            at[dt] = parseInt(We[dt]);
          return at;
        }
        function He(De) {
          return De.substring(1);
        }
        function Se(De) {
          return Object.keys(De).length === 0;
        }
        function Ge(De, We, at, dt) {
          var ut = ge(De, We)[0];
          if (ut !== void 0)
            for (var Zt = ge(ut, at), cr = 0; cr < Zt.length; cr++)
              dt(Zt[cr]);
        }
        function Fe(De, We) {
          for (var at in De)
            De[at].build = We(De[at]);
        }
        function Pe(De, We) {
          return De.build !== void 0 || (De.build = We(De)), De.build;
        }
        function Je(De) {
          for (var We = { inputs: {} }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "input":
                  var Zt = He(ut.getAttribute("source")), cr = ut.getAttribute("semantic");
                  We.inputs[cr] = Zt;
              }
          }
          return We;
        }
        function tt(De) {
          var We = {}, at = De.getAttribute("target").split("/"), dt = at.shift(), ut = at.shift(), Zt = ut.indexOf("(") !== -1, cr = ut.indexOf(".") !== -1;
          if (cr)
            ut = (at = ut.split(".")).shift(), We.member = at.shift();
          else if (Zt) {
            var ar = ut.split("(");
            ut = ar.shift();
            for (var Sr = 0; Sr < ar.length; Sr++)
              ar[Sr] = parseInt(ar[Sr].replace(/\)/, ""));
            We.indices = ar;
          }
          return We.id = dt, We.sid = ut, We.arraySyntax = Zt, We.memberSyntax = cr, We.sampler = He(De.getAttribute("source")), We;
        }
        function ft(De) {
          var We = [], at = De.channels, dt = De.samplers, ut = De.sources;
          for (var Zt in at)
            if (at.hasOwnProperty(Zt)) {
              var cr = at[Zt], ar = dt[cr.sampler], Sr = ar.inputs.INPUT, jr = ar.inputs.OUTPUT;
              pt(Xe(cr, ut[Sr], ut[jr]), We);
            }
          return We;
        }
        function Tt(De) {
          return Pe(Kt.animations[De], ft);
        }
        function Xe(De, We, at) {
          var dt, ut, Zt, cr, ar, Sr, jr = Kt.nodes[De.id], Tr = Bn(jr.id), Lr = jr.transforms[De.sid], xn = jr.matrix.clone().transpose(), Tn = {};
          switch (Lr) {
            case "matrix":
              for (Zt = 0, cr = We.array.length; Zt < cr; Zt++)
                if (dt = We.array[Zt], ut = Zt * at.stride, Tn[dt] === void 0 && (Tn[dt] = {}), De.arraySyntax === !0) {
                  var Nn = at.array[ut], Or = De.indices[0] + 4 * De.indices[1];
                  Tn[dt][Or] = Nn;
                } else
                  for (ar = 0, Sr = at.stride; ar < Sr; ar++)
                    Tn[dt][ar] = at.array[ut + ar];
              break;
            case "translate":
            case "rotate":
            case "scale":
              console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.', Lr);
          }
          var qr = function(wn, dn) {
            var Xr = [];
            for (var Rn in wn)
              Xr.push({ time: parseFloat(Rn), value: wn[Rn] });
            Xr.sort(function(Cn, Yr) {
              return Cn.time - Yr.time;
            });
            for (var zn = 0; zn < 16; zn++)
              xt(Xr, zn, dn.elements[zn]);
            return Xr;
          }(Tn, xn);
          return { name: Tr.uuid, keyframes: qr };
        }
        var ht = new ce.Vector3(), Qt = new ce.Vector3(), Gt = new ce.Quaternion();
        function pt(De, We) {
          for (var at = De.keyframes, dt = De.name, ut = [], Zt = [], cr = [], ar = [], Sr = 0, jr = at.length; Sr < jr; Sr++) {
            var Tr = at[Sr], Lr = Tr.time, xn = Tr.value;
            Kn.fromArray(xn).transpose(), Kn.decompose(ht, Gt, Qt), ut.push(Lr), Zt.push(ht.x, ht.y, ht.z), cr.push(Gt.x, Gt.y, Gt.z, Gt.w), ar.push(Qt.x, Qt.y, Qt.z);
          }
          return Zt.length > 0 && We.push(new ce.VectorKeyframeTrack(dt + ".position", ut, Zt)), cr.length > 0 && We.push(new ce.QuaternionKeyframeTrack(dt + ".quaternion", ut, cr)), ar.length > 0 && We.push(new ce.VectorKeyframeTrack(dt + ".scale", ut, ar)), We;
        }
        function xt(De, We, at) {
          var dt, ut, Zt, cr = !0;
          for (ut = 0, Zt = De.length; ut < Zt; ut++)
            (dt = De[ut]).value[We] === void 0 ? dt.value[We] = null : cr = !1;
          if (cr === !0)
            for (ut = 0, Zt = De.length; ut < Zt; ut++)
              (dt = De[ut]).value[We] = at;
          else
            (function(ar, Sr) {
              for (var jr, Tr, Lr = 0, xn = ar.length; Lr < xn; Lr++) {
                var Tn = ar[Lr];
                if (Tn.value[Sr] === null) {
                  if (jr = Yt(ar, Lr, Sr), Tr = Jt(ar, Lr, Sr), jr === null) {
                    Tn.value[Sr] = Tr.value[Sr];
                    continue;
                  }
                  if (Tr === null) {
                    Tn.value[Sr] = jr.value[Sr];
                    continue;
                  }
                  Ht(Tn, jr, Tr, Sr);
                }
              }
            })(De, We);
        }
        function Yt(De, We, at) {
          for (; We >= 0; ) {
            var dt = De[We];
            if (dt.value[at] !== null)
              return dt;
            We--;
          }
          return null;
        }
        function Jt(De, We, at) {
          for (; We < De.length; ) {
            var dt = De[We];
            if (dt.value[at] !== null)
              return dt;
            We++;
          }
          return null;
        }
        function Ht(De, We, at, dt) {
          at.time - We.time != 0 ? De.value[dt] = (De.time - We.time) * (at.value[dt] - We.value[dt]) / (at.time - We.time) + We.value[dt] : De.value[dt] = We.value[dt];
        }
        function Lt(De) {
          for (var We = [], at = De.name, dt = De.end - De.start || -1, ut = De.animations, Zt = 0, cr = ut.length; Zt < cr; Zt++)
            for (var ar = Tt(ut[Zt]), Sr = 0, jr = ar.length; Sr < jr; Sr++)
              We.push(ar[Sr]);
          return new ce.AnimationClip(at, dt, We);
        }
        function Pt(De) {
          return Pe(Kt.clips[De], Lt);
        }
        function yt(De) {
          for (var We = { sources: {} }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "bind_shape_matrix":
                  We.bindShapeMatrix = be(ut.textContent);
                  break;
                case "source":
                  var Zt = ut.getAttribute("id");
                  We.sources[Zt] = Nt(ut);
                  break;
                case "joints":
                  We.joints = kt(ut);
                  break;
                case "vertex_weights":
                  We.vertexWeights = $t(ut);
              }
          }
          return We;
        }
        function kt(De) {
          for (var We = { inputs: {} }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "input":
                  var Zt = ut.getAttribute("semantic"), cr = He(ut.getAttribute("source"));
                  We.inputs[Zt] = cr;
              }
          }
          return We;
        }
        function $t(De) {
          for (var We = { inputs: {} }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "input":
                  var Zt = ut.getAttribute("semantic"), cr = He(ut.getAttribute("source")), ar = parseInt(ut.getAttribute("offset"));
                  We.inputs[Zt] = { id: cr, offset: ar };
                  break;
                case "vcount":
                  We.vcount = Oe(ut.textContent);
                  break;
                case "v":
                  We.v = Oe(ut.textContent);
              }
          }
          return We;
        }
        function Le(De) {
          var We = { id: De.id }, at = Kt.geometries[We.id];
          return De.skin !== void 0 && (We.skin = function(dt) {
            var ut, Zt, cr, ar = { joints: [], indices: { array: [], stride: 4 }, weights: { array: [], stride: 4 } }, Sr = dt.sources, jr = dt.vertexWeights, Tr = jr.vcount, Lr = jr.v, xn = jr.inputs.JOINT.offset, Tn = jr.inputs.WEIGHT.offset, Nn = dt.sources[dt.joints.inputs.JOINT], Or = dt.sources[dt.joints.inputs.INV_BIND_MATRIX], qr = Sr[jr.inputs.WEIGHT.id].array, wn = 0;
            for (ut = 0, cr = Tr.length; ut < cr; ut++) {
              var dn = Tr[ut], Xr = [];
              for (Zt = 0; Zt < dn; Zt++) {
                var Rn = Lr[wn + xn], zn = Lr[wn + Tn], Cn = qr[zn];
                Xr.push({ index: Rn, weight: Cn }), wn += 2;
              }
              for (Xr.sort(Ci), Zt = 0; Zt < 4; Zt++) {
                var Yr = Xr[Zt];
                Yr !== void 0 ? (ar.indices.array.push(Yr.index), ar.weights.array.push(Yr.weight)) : (ar.indices.array.push(0), ar.weights.array.push(0));
              }
            }
            for (dt.bindShapeMatrix ? ar.bindMatrix = new ce.Matrix4().fromArray(dt.bindShapeMatrix).transpose() : ar.bindMatrix = new ce.Matrix4().transpose(), ut = 0, cr = Nn.array.length; ut < cr; ut++) {
              var gn = Nn.array[ut], Yn = new ce.Matrix4().fromArray(Or.array, ut * Or.stride).transpose();
              ar.joints.push({ name: gn, boneInverse: Yn });
            }
            return ar;
            function Ci(no, Po) {
              return Po.weight - no.weight;
            }
          }(De.skin), at.sources.skinIndices = We.skin.indices, at.sources.skinWeights = We.skin.weights), We;
        }
        function or(De) {
          return Pe(Kt.controllers[De], Le);
        }
        function tr(De) {
          return De.build !== void 0 ? De.build : De.init_from;
        }
        function lr(De) {
          var We = Kt.images[De];
          return We !== void 0 ? Pe(We, tr) : (console.warn("THREE.ColladaLoader: Couldn't find image with ID:", De), null);
        }
        function gt(De) {
          for (var We = { surfaces: {}, samplers: {} }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "newparam":
                  Ut(ut, We);
                  break;
                case "technique":
                  We.technique = $e(ut);
                  break;
                case "extra":
                  We.extra = Ce(ut);
              }
          }
          return We;
        }
        function Ut(De, We) {
          for (var at = De.getAttribute("sid"), dt = 0, ut = De.childNodes.length; dt < ut; dt++) {
            var Zt = De.childNodes[dt];
            if (Zt.nodeType === 1)
              switch (Zt.nodeName) {
                case "surface":
                  We.surfaces[at] = Ze(Zt);
                  break;
                case "sampler2D":
                  We.samplers[at] = rt(Zt);
              }
          }
        }
        function Ze(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "init_from":
                  We.init_from = ut.textContent;
              }
          }
          return We;
        }
        function rt(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "source":
                  We.source = ut.textContent;
              }
          }
          return We;
        }
        function $e(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "constant":
                case "lambert":
                case "blinn":
                case "phong":
                  We.type = ut.nodeName, We.parameters = Bt(ut);
              }
          }
          return We;
        }
        function Bt(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "emission":
                case "diffuse":
                case "specular":
                case "shininess":
                case "transparency":
                  We[ut.nodeName] = ct(ut);
                  break;
                case "transparent":
                  We[ut.nodeName] = { opaque: ut.getAttribute("opaque"), data: ct(ut) };
              }
          }
          return We;
        }
        function ct(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "color":
                  We[ut.nodeName] = be(ut.textContent);
                  break;
                case "float":
                  We[ut.nodeName] = parseFloat(ut.textContent);
                  break;
                case "texture":
                  We[ut.nodeName] = { id: ut.getAttribute("texture"), extra: je(ut) };
              }
          }
          return We;
        }
        function je(De) {
          for (var We = { technique: {} }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "extra":
                  _e(ut, We);
              }
          }
          return We;
        }
        function _e(De, We) {
          for (var at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "technique":
                  Ie(ut, We);
              }
          }
        }
        function Ie(De, We) {
          for (var at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "repeatU":
                case "repeatV":
                case "offsetU":
                case "offsetV":
                  We.technique[ut.nodeName] = parseFloat(ut.textContent);
                  break;
                case "wrapU":
                case "wrapV":
                  ut.textContent.toUpperCase() === "TRUE" ? We.technique[ut.nodeName] = 1 : ut.textContent.toUpperCase() === "FALSE" ? We.technique[ut.nodeName] = 0 : We.technique[ut.nodeName] = parseInt(ut.textContent);
              }
          }
        }
        function Ce(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "technique":
                  We.technique = ke(ut);
              }
          }
          return We;
        }
        function ke(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "double_sided":
                  We[ut.nodeName] = parseInt(ut.textContent);
              }
          }
          return We;
        }
        function Ve(De) {
          return De;
        }
        function Ke(De) {
          var We, at = function(xn) {
            return Pe(Kt.effects[xn], Ve);
          }(De.url), dt = at.profile.technique, ut = at.profile.extra;
          switch (dt.type) {
            case "phong":
            case "blinn":
              We = new ce.MeshPhongMaterial();
              break;
            case "lambert":
              We = new ce.MeshLambertMaterial();
              break;
            default:
              We = new ce.MeshBasicMaterial();
          }
          function Zt(xn) {
            var Tn = at.profile.samplers[xn.id], Nn = null;
            if (Tn !== void 0 ? Nn = lr(at.profile.surfaces[Tn.source].init_from) : (console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."), Nn = lr(xn.id)), Nn !== null) {
              var Or = Kr.load(Nn), qr = xn.extra;
              if (qr !== void 0 && qr.technique !== void 0 && Se(qr.technique) === !1) {
                var wn = qr.technique;
                Or.wrapS = wn.wrapU ? ce.RepeatWrapping : ce.ClampToEdgeWrapping, Or.wrapT = wn.wrapV ? ce.RepeatWrapping : ce.ClampToEdgeWrapping, Or.offset.set(wn.offsetU || 0, wn.offsetV || 0), Or.repeat.set(wn.repeatU || 1, wn.repeatV || 1);
              } else
                Or.wrapS = ce.RepeatWrapping, Or.wrapT = ce.RepeatWrapping;
              return Or;
            }
            return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:", xn.id), null;
          }
          We.name = De.name;
          var cr = dt.parameters;
          for (var ar in cr) {
            var Sr = cr[ar];
            switch (ar) {
              case "diffuse":
                Sr.color && We.color.fromArray(Sr.color), Sr.texture && (We.map = Zt(Sr.texture));
                break;
              case "specular":
                Sr.color && We.specular && We.specular.fromArray(Sr.color), Sr.texture && (We.specularMap = Zt(Sr.texture));
                break;
              case "shininess":
                Sr.float && We.shininess && (We.shininess = Sr.float);
                break;
              case "emission":
                Sr.color && We.emissive && We.emissive.fromArray(Sr.color), Sr.texture && (We.emissiveMap = Zt(Sr.texture));
            }
          }
          var jr = cr.transparent, Tr = cr.transparency;
          if (Tr === void 0 && jr && (Tr = { float: 1 }), jr === void 0 && Tr && (jr = { opaque: "A_ONE", data: { color: [1, 1, 1, 1] } }), jr && Tr)
            if (jr.data.texture)
              We.transparent = !0;
            else {
              var Lr = jr.data.color;
              switch (jr.opaque) {
                case "A_ONE":
                  We.opacity = Lr[3] * Tr.float;
                  break;
                case "RGB_ZERO":
                  We.opacity = 1 - Lr[0] * Tr.float;
                  break;
                case "A_ZERO":
                  We.opacity = 1 - Lr[3] * Tr.float;
                  break;
                case "RGB_ONE":
                  We.opacity = Lr[0] * Tr.float;
                  break;
                default:
                  console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.', jr.opaque);
              }
              We.opacity < 1 && (We.transparent = !0);
            }
          return ut !== void 0 && ut.technique !== void 0 && ut.technique.double_sided === 1 && (We.side = ce.DoubleSide), We;
        }
        function ot(De) {
          return Pe(Kt.materials[De], Ke);
        }
        function St(De) {
          for (var We = 0; We < De.childNodes.length; We++) {
            var at = De.childNodes[We];
            switch (at.nodeName) {
              case "technique_common":
                return Vt(at);
            }
          }
          return {};
        }
        function Vt(De) {
          for (var We = {}, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            switch (dt.nodeName) {
              case "perspective":
              case "orthographic":
                We.technique = dt.nodeName, We.parameters = zt(dt);
            }
          }
          return We;
        }
        function zt(De) {
          for (var We = {}, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            switch (dt.nodeName) {
              case "xfov":
              case "yfov":
              case "xmag":
              case "ymag":
              case "znear":
              case "zfar":
              case "aspect_ratio":
                We[dt.nodeName] = parseFloat(dt.textContent);
            }
          }
          return We;
        }
        function Wt(De) {
          var We;
          switch (De.optics.technique) {
            case "perspective":
              We = new ce.PerspectiveCamera(De.optics.parameters.yfov, De.optics.parameters.aspect_ratio, De.optics.parameters.znear, De.optics.parameters.zfar);
              break;
            case "orthographic":
              var at = De.optics.parameters.ymag, dt = De.optics.parameters.xmag, ut = De.optics.parameters.aspect_ratio;
              dt = dt === void 0 ? at * ut : dt, at = at === void 0 ? dt / ut : at, dt *= 0.5, at *= 0.5, We = new ce.OrthographicCamera(-dt, dt, at, -at, De.optics.parameters.znear, De.optics.parameters.zfar);
              break;
            default:
              We = new ce.PerspectiveCamera();
          }
          return We.name = De.name, We;
        }
        function qe(De) {
          var We = Kt.cameras[De];
          return We !== void 0 ? Pe(We, Wt) : (console.warn("THREE.ColladaLoader: Couldn't find camera with ID:", De), null);
        }
        function Te(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "directional":
                case "point":
                case "spot":
                case "ambient":
                  We.technique = ut.nodeName, We.parameters = Re(ut);
              }
          }
          return We;
        }
        function Re(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "color":
                  var Zt = be(ut.textContent);
                  We.color = new ce.Color().fromArray(Zt);
                  break;
                case "falloff_angle":
                  We.falloffAngle = parseFloat(ut.textContent);
                  break;
                case "quadratic_attenuation":
                  var cr = parseFloat(ut.textContent);
                  We.distance = cr ? Math.sqrt(1 / cr) : 0;
              }
          }
          return We;
        }
        function it(De) {
          var We;
          switch (De.technique) {
            case "directional":
              We = new ce.DirectionalLight();
              break;
            case "point":
              We = new ce.PointLight();
              break;
            case "spot":
              We = new ce.SpotLight();
              break;
            case "ambient":
              We = new ce.AmbientLight();
          }
          return De.parameters.color && We.color.copy(De.parameters.color), De.parameters.distance && (We.distance = De.parameters.distance), We;
        }
        function Ct(De) {
          var We = Kt.lights[De];
          return We !== void 0 ? Pe(We, it) : (console.warn("THREE.ColladaLoader: Couldn't find light with ID:", De), null);
        }
        function Nt(De) {
          for (var We = { array: [], stride: 3 }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "float_array":
                  We.array = be(dt.textContent);
                  break;
                case "Name_array":
                  We.array = we(dt.textContent);
                  break;
                case "technique_common":
                  var ut = ge(dt, "accessor")[0];
                  ut !== void 0 && (We.stride = parseInt(ut.getAttribute("stride")));
              }
          }
          return We;
        }
        function Dt(De) {
          for (var We = {}, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            dt.nodeType === 1 && (We[dt.getAttribute("semantic")] = He(dt.getAttribute("source")));
          }
          return We;
        }
        function Er(De) {
          for (var We = { type: De.nodeName, material: De.getAttribute("material"), count: parseInt(De.getAttribute("count")), inputs: {}, stride: 0, hasUV: !1 }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "input":
                  var Zt = He(ut.getAttribute("source")), cr = ut.getAttribute("semantic"), ar = parseInt(ut.getAttribute("offset"));
                  We.inputs[cr] = { id: Zt, offset: ar }, We.stride = Math.max(We.stride, ar + 1), cr === "TEXCOORD" && (We.hasUV = !0);
                  break;
                case "vcount":
                  We.vcount = Oe(ut.textContent);
                  break;
                case "p":
                  We.p = Oe(ut.textContent);
              }
          }
          return We;
        }
        function gr(De) {
          for (var We = 0, at = 0, dt = De.length; at < dt; at++)
            De[at].hasUV === !0 && We++;
          We > 0 && We < De.length && (De.uvsNeedsFix = !0);
        }
        function Cr(De) {
          var We = {}, at = De.sources, dt = De.vertices, ut = De.primitives;
          if (ut.length === 0)
            return {};
          var Zt = function(Sr) {
            for (var jr = {}, Tr = 0; Tr < Sr.length; Tr++) {
              var Lr = Sr[Tr];
              jr[Lr.type] === void 0 && (jr[Lr.type] = []), jr[Lr.type].push(Lr);
            }
            return jr;
          }(ut);
          for (var cr in Zt) {
            var ar = Zt[cr];
            gr(ar), We[cr] = mr(ar, at, dt);
          }
          return We;
        }
        function mr(De, We, at) {
          for (var dt = {}, ut = { array: [], stride: 0 }, Zt = { array: [], stride: 0 }, cr = { array: [], stride: 0 }, ar = { array: [], stride: 0 }, Sr = [], jr = 4, Tr = [], Lr = 4, xn = new ce.BufferGeometry(), Tn = [], Nn = 0, Or = 0; Or < De.length; Or++) {
            var qr = De[Or], wn = qr.inputs, dn = 0;
            switch (qr.type) {
              case "lines":
              case "linestrips":
                dn = 2 * qr.count;
                break;
              case "triangles":
                dn = 3 * qr.count;
                break;
              case "polylist":
                for (var Xr = 0; Xr < qr.count; Xr++) {
                  var Rn = qr.vcount[Xr];
                  switch (Rn) {
                    case 3:
                      dn += 3;
                      break;
                    case 4:
                      dn += 6;
                      break;
                    default:
                      dn += 3 * (Rn - 2);
                  }
                }
                break;
              default:
                console.warn("THREE.ColladaLoader: Unknow primitive type:", qr.type);
            }
            for (var zn in xn.addGroup(Nn, dn, Or), Nn += dn, qr.material && Tn.push(qr.material), wn) {
              var Cn = wn[zn];
              switch (zn) {
                case "VERTEX":
                  for (var Yr in at) {
                    var gn = at[Yr];
                    switch (Yr) {
                      case "POSITION":
                        var Yn = ut.array.length;
                        if (wr(qr, We[gn], Cn.offset, ut.array), ut.stride = We[gn].stride, We.skinWeights && We.skinIndices && (wr(qr, We.skinIndices, Cn.offset, Sr), wr(qr, We.skinWeights, Cn.offset, Tr)), qr.hasUV === !1 && De.uvsNeedsFix === !0) {
                          dn = (ut.array.length - Yn) / ut.stride;
                          for (var Ci = 0; Ci < dn; Ci++)
                            cr.array.push(0, 0);
                        }
                        break;
                      case "NORMAL":
                        wr(qr, We[gn], Cn.offset, Zt.array), Zt.stride = We[gn].stride;
                        break;
                      case "COLOR":
                        wr(qr, We[gn], Cn.offset, ar.array), ar.stride = We[gn].stride;
                        break;
                      case "TEXCOORD":
                        wr(qr, We[gn], Cn.offset, cr.array), cr.stride = We[gn].stride;
                        break;
                      default:
                        console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.', Yr);
                    }
                  }
                  break;
                case "NORMAL":
                  wr(qr, We[Cn.id], Cn.offset, Zt.array), Zt.stride = We[Cn.id].stride;
                  break;
                case "COLOR":
                  wr(qr, We[Cn.id], Cn.offset, ar.array), ar.stride = We[Cn.id].stride;
                  break;
                case "TEXCOORD":
                  wr(qr, We[Cn.id], Cn.offset, cr.array), cr.stride = We[Cn.id].stride;
              }
            }
          }
          return ut.array.length > 0 && xn.addAttribute("position", new ce.Float32BufferAttribute(ut.array, ut.stride)), Zt.array.length > 0 && xn.addAttribute("normal", new ce.Float32BufferAttribute(Zt.array, Zt.stride)), ar.array.length > 0 && xn.addAttribute("color", new ce.Float32BufferAttribute(ar.array, ar.stride)), cr.array.length > 0 && xn.addAttribute("uv", new ce.Float32BufferAttribute(cr.array, cr.stride)), Sr.length > 0 && xn.addAttribute("skinIndex", new ce.Float32BufferAttribute(Sr, jr)), Tr.length > 0 && xn.addAttribute("skinWeight", new ce.Float32BufferAttribute(Tr, Lr)), dt.data = xn, dt.type = De[0].type, dt.materialKeys = Tn, dt;
        }
        function wr(De, We, at, dt) {
          var ut = De.p, Zt = De.stride, cr = De.vcount;
          function ar(Xr) {
            for (var Rn = ut[Xr + at] * jr, zn = Rn + jr; Rn < zn; Rn++)
              dt.push(Sr[Rn]);
          }
          var Sr = We.array, jr = We.stride;
          if (De.vcount !== void 0)
            for (var Tr = 0, Lr = 0, xn = cr.length; Lr < xn; Lr++) {
              var Tn = cr[Lr];
              if (Tn === 4) {
                var Nn = Tr + 1 * Zt, Or = Tr + 2 * Zt, qr = Tr + 3 * Zt;
                ar(Tr + 0 * Zt), ar(Nn), ar(qr), ar(Nn), ar(Or), ar(qr);
              } else if (Tn === 3)
                Nn = Tr + 1 * Zt, Or = Tr + 2 * Zt, ar(Tr + 0 * Zt), ar(Nn), ar(Or);
              else if (Tn > 4)
                for (var wn = 1, dn = Tn - 2; wn <= dn; wn++)
                  Nn = Tr + Zt * wn, Or = Tr + Zt * (wn + 1), ar(Tr + 0 * Zt), ar(Nn), ar(Or);
              Tr += Zt * Tn;
            }
          else
            for (Lr = 0, xn = ut.length; Lr < xn; Lr += Zt)
              ar(Lr);
        }
        function en(De) {
          return Pe(Kt.geometries[De], Cr);
        }
        function Wn(De) {
          return De.build !== void 0 ? De.build : De;
        }
        function on(De, We) {
          for (var at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "joint":
                  We.joints[dt.getAttribute("sid")] = qn(dt);
                  break;
                case "link":
                  We.links.push(Pn(dt));
              }
          }
        }
        function qn(De) {
          for (var We, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "prismatic":
                case "revolute":
                  We = $n(dt);
              }
          }
          return We;
        }
        function $n(De, We) {
          We = { sid: De.getAttribute("sid"), name: De.getAttribute("name") || "", axis: new ce.Vector3(), limits: { min: 0, max: 0 }, type: De.nodeName, static: !1, zeroPosition: 0, middlePosition: 0 };
          for (var at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "axis":
                  var ut = be(dt.textContent);
                  We.axis.fromArray(ut);
                  break;
                case "limits":
                  var Zt = dt.getElementsByTagName("max")[0], cr = dt.getElementsByTagName("min")[0];
                  We.limits.max = parseFloat(Zt.textContent), We.limits.min = parseFloat(cr.textContent);
              }
          }
          return We.limits.min >= We.limits.max && (We.static = !0), We.middlePosition = (We.limits.min + We.limits.max) / 2, We;
        }
        function Pn(De) {
          for (var We = { sid: De.getAttribute("sid"), name: De.getAttribute("name") || "", attachments: [], transforms: [] }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "attachment_full":
                  We.attachments.push(Un(dt));
                  break;
                case "matrix":
                case "translate":
                case "rotate":
                  We.transforms.push(ai(dt));
              }
          }
          return We;
        }
        function Un(De) {
          for (var We = { joint: De.getAttribute("joint").split("/").pop(), transforms: [], links: [] }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "link":
                  We.links.push(Pn(dt));
                  break;
                case "matrix":
                case "translate":
                case "rotate":
                  We.transforms.push(ai(dt));
              }
          }
          return We;
        }
        function ai(De) {
          var We = { type: De.nodeName }, at = be(De.textContent);
          switch (We.type) {
            case "matrix":
              We.obj = new ce.Matrix4(), We.obj.fromArray(at).transpose();
              break;
            case "translate":
              We.obj = new ce.Vector3(), We.obj.fromArray(at);
              break;
            case "rotate":
              We.obj = new ce.Vector3(), We.obj.fromArray(at), We.angle = ce.Math.degToRad(at[3]);
          }
          return We;
        }
        function pi(De, We) {
          for (var at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "technique_common":
                  Wi(dt, We);
              }
          }
        }
        function Wi(De, We) {
          for (var at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "inertia":
                  We.inertia = be(dt.textContent);
                  break;
                case "mass":
                  We.mass = be(dt.textContent)[0];
              }
          }
        }
        function Ti(De) {
          for (var We = { target: De.getAttribute("target").split("/").pop() }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "axis":
                  var ut = dt.getElementsByTagName("param")[0];
                  We.axis = ut.textContent;
                  var Zt = We.axis.split("inst_").pop().split("axis")[0];
                  We.jointIndex = Zt.substr(0, Zt.length - 1);
              }
          }
          return We;
        }
        function Hn(De) {
          return De.build !== void 0 ? De.build : De;
        }
        var Kn = new ce.Matrix4(), Ln = new ce.Vector3();
        function si(De) {
          for (var We = { name: De.getAttribute("name") || "", type: De.getAttribute("type"), id: De.getAttribute("id"), sid: De.getAttribute("sid"), matrix: new ce.Matrix4(), nodes: [], instanceCameras: [], instanceControllers: [], instanceLights: [], instanceGeometries: [], instanceNodes: [], transforms: {} }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "node":
                  We.nodes.push(dt.getAttribute("id")), si(dt);
                  break;
                case "instance_camera":
                  We.instanceCameras.push(He(dt.getAttribute("url")));
                  break;
                case "instance_controller":
                  We.instanceControllers.push(gi(dt));
                  break;
                case "instance_light":
                  We.instanceLights.push(He(dt.getAttribute("url")));
                  break;
                case "instance_geometry":
                  We.instanceGeometries.push(gi(dt));
                  break;
                case "instance_node":
                  We.instanceNodes.push(He(dt.getAttribute("url")));
                  break;
                case "matrix":
                  var ut = be(dt.textContent);
                  We.matrix.multiply(Kn.fromArray(ut).transpose()), We.transforms[dt.getAttribute("sid")] = dt.nodeName;
                  break;
                case "translate":
                  ut = be(dt.textContent), Ln.fromArray(ut), We.matrix.multiply(Kn.makeTranslation(Ln.x, Ln.y, Ln.z)), We.transforms[dt.getAttribute("sid")] = dt.nodeName;
                  break;
                case "rotate":
                  ut = be(dt.textContent);
                  var Zt = ce.Math.degToRad(ut[3]);
                  We.matrix.multiply(Kn.makeRotationAxis(Ln.fromArray(ut), Zt)), We.transforms[dt.getAttribute("sid")] = dt.nodeName;
                  break;
                case "scale":
                  ut = be(dt.textContent), We.matrix.scale(Ln.fromArray(ut)), We.transforms[dt.getAttribute("sid")] = dt.nodeName;
                  break;
                case "extra":
                  break;
                default:
                  console.log(dt);
              }
          }
          return Kt.nodes[We.id] = We, We;
        }
        function gi(De) {
          for (var We = { id: He(De.getAttribute("url")), materials: {}, skeletons: [] }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            switch (dt.nodeName) {
              case "bind_material":
                for (var ut = dt.getElementsByTagName("instance_material"), Zt = 0; Zt < ut.length; Zt++) {
                  var cr = ut[Zt], ar = cr.getAttribute("symbol"), Sr = cr.getAttribute("target");
                  We.materials[ar] = He(Sr);
                }
                break;
              case "skeleton":
                We.skeletons.push(He(dt.textContent));
            }
          }
          return We;
        }
        function mi(De, We) {
          var at, dt, ut = [], Zt = [];
          for (at = 0; at < De.length; at++) {
            var cr = De[at];
            if (an(cr))
              Ei(Bn(cr), We, ut);
            else if (vn(cr))
              for (var ar = Kt.visualScenes[cr].children, Sr = 0; Sr < ar.length; Sr++) {
                var jr = ar[Sr];
                jr.type === "JOINT" && Ei(Bn(jr.id), We, ut);
              }
            else
              console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:", cr);
          }
          for (at = 0; at < We.length; at++)
            for (Sr = 0; Sr < ut.length; Sr++)
              if ((dt = ut[Sr]).bone.name === We[at].name) {
                Zt[at] = dt, dt.processed = !0;
                break;
              }
          for (at = 0; at < ut.length; at++)
            (dt = ut[at]).processed === !1 && (Zt.push(dt), dt.processed = !0);
          var Tr = [], Lr = [];
          for (at = 0; at < Zt.length; at++)
            dt = Zt[at], Tr.push(dt.bone), Lr.push(dt.boneInverse);
          return new ce.Skeleton(Tr, Lr);
        }
        function Ei(De, We, at) {
          De.traverse(function(dt) {
            if (dt.isBone === !0) {
              for (var ut, Zt = 0; Zt < We.length; Zt++) {
                var cr = We[Zt];
                if (cr.name === dt.name) {
                  ut = cr.boneInverse;
                  break;
                }
              }
              ut === void 0 && (ut = new ce.Matrix4()), at.push({ bone: dt, boneInverse: ut, processed: !1 });
            }
          });
        }
        function Rt(De) {
          for (var We = [], at = De.matrix, dt = De.nodes, ut = De.type, Zt = De.instanceCameras, cr = De.instanceControllers, ar = De.instanceLights, Sr = De.instanceGeometries, jr = De.instanceNodes, Tr = 0, Lr = dt.length; Tr < Lr; Tr++)
            We.push(Bn(dt[Tr]));
          for (Tr = 0, Lr = Zt.length; Tr < Lr; Tr++) {
            var xn = qe(Zt[Tr]);
            xn !== null && We.push(xn.clone());
          }
          for (Tr = 0, Lr = cr.length; Tr < Lr; Tr++)
            for (var Tn = or((Rn = cr[Tr]).id), Nn = Mr(en(Tn.id), Rn.materials), Or = mi(Rn.skeletons, Tn.skin.joints), qr = 0, wn = Nn.length; qr < wn; qr++) {
              var dn;
              (dn = Nn[qr]).isSkinnedMesh && (dn.bind(Or, Tn.skin.bindMatrix), dn.normalizeSkinWeights()), We.push(dn);
            }
          for (Tr = 0, Lr = ar.length; Tr < Lr; Tr++) {
            var Xr = Ct(ar[Tr]);
            Xr !== null && We.push(Xr.clone());
          }
          for (Tr = 0, Lr = Sr.length; Tr < Lr; Tr++) {
            var Rn;
            for (qr = 0, wn = (Nn = Mr(en((Rn = Sr[Tr]).id), Rn.materials)).length; qr < wn; qr++)
              We.push(Nn[qr]);
          }
          for (Tr = 0, Lr = jr.length; Tr < Lr; Tr++)
            We.push(Bn(jr[Tr]).clone());
          if (dt.length === 0 && We.length === 1)
            dn = We[0];
          else
            for (dn = ut === "JOINT" ? new ce.Bone() : new ce.Group(), Tr = 0; Tr < We.length; Tr++)
              dn.add(We[Tr]);
          return dn.name === "" && (dn.name = ut === "JOINT" ? De.sid : De.name), dn.matrix.copy(at), dn.matrix.decompose(dn.position, dn.quaternion, dn.scale), dn;
        }
        function rr(De, We) {
          for (var at = [], dt = 0, ut = De.length; dt < ut; dt++) {
            var Zt = We[De[dt]];
            at.push(ot(Zt));
          }
          return at;
        }
        function Mr(De, We) {
          var at = [];
          for (var dt in De) {
            var ut = De[dt], Zt = rr(ut.materialKeys, We);
            Zt.length === 0 && (dt === "lines" || dt === "linestrips" ? Zt.push(new ce.LineBasicMaterial()) : Zt.push(new ce.MeshPhongMaterial()));
            var cr = ut.data.attributes.skinIndex !== void 0;
            if (cr)
              for (var ar = 0, Sr = Zt.length; ar < Sr; ar++)
                Zt[ar].skinning = !0;
            var jr, Tr = Zt.length === 1 ? Zt[0] : Zt;
            switch (dt) {
              case "lines":
                jr = new ce.LineSegments(ut.data, Tr);
                break;
              case "linestrips":
                jr = new ce.Line(ut.data, Tr);
                break;
              case "triangles":
              case "polylist":
                jr = cr ? new ce.SkinnedMesh(ut.data, Tr) : new ce.Mesh(ut.data, Tr);
            }
            at.push(jr);
          }
          return at;
        }
        function an(De) {
          return Kt.nodes[De] !== void 0;
        }
        function Bn(De) {
          return Pe(Kt.nodes[De], Rt);
        }
        function In(De) {
          var We = new ce.Group();
          We.name = De.name;
          for (var at = De.children, dt = 0; dt < at.length; dt++) {
            var ut = at[dt];
            We.add(Bn(ut.id));
          }
          return We;
        }
        function vn(De) {
          return Kt.visualScenes[De] !== void 0;
        }
        function fn(De) {
          return Pe(Kt.visualScenes[De], In);
        }
        if (Ee.length === 0)
          return { scene: new ce.Scene() };
        var _n = ge(new DOMParser().parseFromString(Ee, "application/xml"), "COLLADA")[0], jn = _n.getAttribute("version");
        console.log("THREE.ColladaLoader: File version", jn);
        var Zr = function(De) {
          return { unit: function(We) {
            return We !== void 0 && We.hasAttribute("meter") === !0 ? parseFloat(We.getAttribute("meter")) : 1;
          }(ge(De, "unit")[0]), upAxis: function(We) {
            return We !== void 0 ? We.textContent : "Y_UP";
          }(ge(De, "up_axis")[0]) };
        }(ge(_n, "asset")[0]), Kr = new ce.TextureLoader(this.manager);
        Kr.setPath(me).setCrossOrigin(this.crossOrigin);
        var $r = [], vt = {}, Ir = 0, Kt = { animations: {}, clips: {}, controllers: {}, images: {}, effects: {}, materials: {}, cameras: {}, lights: {}, geometries: {}, nodes: {}, visualScenes: {}, kinematicsModels: {}, physicsModels: {}, kinematicsScenes: {} };
        Ge(_n, "library_animations", "animation", function(De) {
          for (var We = { sources: {}, samplers: {}, channels: {} }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut, Zt = De.childNodes[at];
            if (Zt.nodeType === 1)
              switch (Zt.nodeName) {
                case "source":
                  ut = Zt.getAttribute("id"), We.sources[ut] = Nt(Zt);
                  break;
                case "sampler":
                  ut = Zt.getAttribute("id"), We.samplers[ut] = Je(Zt);
                  break;
                case "channel":
                  ut = Zt.getAttribute("target"), We.channels[ut] = tt(Zt);
                  break;
                default:
                  console.log(Zt);
              }
          }
          Kt.animations[De.getAttribute("id")] = We;
        }), Ge(_n, "library_animation_clips", "animation_clip", function(De) {
          for (var We = { name: De.getAttribute("id") || "default", start: parseFloat(De.getAttribute("start") || 0), end: parseFloat(De.getAttribute("end") || 0), animations: [] }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "instance_animation":
                  We.animations.push(He(ut.getAttribute("url")));
              }
          }
          Kt.clips[De.getAttribute("id")] = We;
        }), Ge(_n, "library_controllers", "controller", function(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "skin":
                  We.id = He(ut.getAttribute("source")), We.skin = yt(ut);
                  break;
                case "morph":
                  We.id = He(ut.getAttribute("source")), console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");
              }
          }
          Kt.controllers[De.getAttribute("id")] = We;
        }), Ge(_n, "library_images", "image", function(De) {
          var We = { init_from: ge(De, "init_from")[0].textContent };
          Kt.images[De.getAttribute("id")] = We;
        }), Ge(_n, "library_effects", "effect", function(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "profile_COMMON":
                  We.profile = gt(ut);
              }
          }
          Kt.effects[De.getAttribute("id")] = We;
        }), Ge(_n, "library_materials", "material", function(De) {
          for (var We = { name: De.getAttribute("name") }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "instance_effect":
                  We.url = He(ut.getAttribute("url"));
              }
          }
          Kt.materials[De.getAttribute("id")] = We;
        }), Ge(_n, "library_cameras", "camera", function(De) {
          for (var We = { name: De.getAttribute("name") }, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "optics":
                  We.optics = St(ut);
              }
          }
          Kt.cameras[De.getAttribute("id")] = We;
        }), Ge(_n, "library_lights", "light", function(De) {
          for (var We = {}, at = 0, dt = De.childNodes.length; at < dt; at++) {
            var ut = De.childNodes[at];
            if (ut.nodeType === 1)
              switch (ut.nodeName) {
                case "technique_common":
                  We = Te(ut);
              }
          }
          Kt.lights[De.getAttribute("id")] = We;
        }), Ge(_n, "library_geometries", "geometry", function(De) {
          var We = { name: De.getAttribute("name"), sources: {}, vertices: {}, primitives: [] }, at = ge(De, "mesh")[0];
          if (at !== void 0) {
            for (var dt = 0; dt < at.childNodes.length; dt++) {
              var ut = at.childNodes[dt];
              if (ut.nodeType === 1) {
                var Zt = ut.getAttribute("id");
                switch (ut.nodeName) {
                  case "source":
                    We.sources[Zt] = Nt(ut);
                    break;
                  case "vertices":
                    We.vertices = Dt(ut);
                    break;
                  case "polygons":
                    console.warn("THREE.ColladaLoader: Unsupported primitive type: ", ut.nodeName);
                    break;
                  case "lines":
                  case "linestrips":
                  case "polylist":
                  case "triangles":
                    We.primitives.push(Er(ut));
                    break;
                  default:
                    console.log(ut);
                }
              }
            }
            Kt.geometries[De.getAttribute("id")] = We;
          }
        }), Ge(_n, "library_nodes", "node", si), Ge(_n, "library_visual_scenes", "visual_scene", function(De) {
          var We = { name: De.getAttribute("name"), children: [] };
          (function(ut) {
            for (var Zt = ut.getElementsByTagName("node"), cr = 0; cr < Zt.length; cr++) {
              var ar = Zt[cr];
              ar.hasAttribute("id") === !1 && ar.setAttribute("id", "three_default_" + Ir++);
            }
          })(De);
          for (var at = ge(De, "node"), dt = 0; dt < at.length; dt++)
            We.children.push(si(at[dt]));
          Kt.visualScenes[De.getAttribute("id")] = We;
        }), Ge(_n, "library_kinematics_models", "kinematics_model", function(De) {
          for (var We = { name: De.getAttribute("name") || "", joints: {}, links: [] }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "technique_common":
                  on(dt, We);
              }
          }
          Kt.kinematicsModels[De.getAttribute("id")] = We;
        }), Ge(_n, "library_physics_models", "physics_model", function(De) {
          for (var We = { name: De.getAttribute("name") || "", rigidBodies: {} }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "rigid_body":
                  We.rigidBodies[dt.getAttribute("name")] = {}, pi(dt, We.rigidBodies[dt.getAttribute("name")]);
              }
          }
          Kt.physicsModels[De.getAttribute("id")] = We;
        }), Ge(_n, "scene", "instance_kinematics_scene", function(De) {
          for (var We = { bindJointAxis: [] }, at = 0; at < De.childNodes.length; at++) {
            var dt = De.childNodes[at];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "bind_joint_axis":
                  We.bindJointAxis.push(Ti(dt));
              }
          }
          Kt.kinematicsScenes[He(De.getAttribute("url"))] = We;
        }), Fe(Kt.animations, ft), Fe(Kt.clips, Lt), Fe(Kt.controllers, Le), Fe(Kt.images, tr), Fe(Kt.effects, Ve), Fe(Kt.materials, Ke), Fe(Kt.cameras, Wt), Fe(Kt.lights, it), Fe(Kt.geometries, Cr), Fe(Kt.visualScenes, In), function() {
          var De = Kt.clips;
          if (Se(De) === !0) {
            if (Se(Kt.animations) === !1) {
              var We = [];
              for (var at in Kt.animations)
                for (var dt = Tt(at), ut = 0, Zt = dt.length; ut < Zt; ut++)
                  We.push(dt[ut]);
              $r.push(new ce.AnimationClip("default", -1, We));
            }
          } else
            for (var at in De)
              $r.push(Pt(at));
        }(), function() {
          var De = Object.keys(Kt.kinematicsModels)[0], We = Object.keys(Kt.kinematicsScenes)[0], at = Object.keys(Kt.visualScenes)[0];
          if (De !== void 0 && We !== void 0) {
            for (var dt = function(Or) {
              return Pe(Kt.kinematicsModels[Or], Wn);
            }(De), ut = function(Or) {
              return Pe(Kt.kinematicsScenes[Or], Hn);
            }(We), Zt = fn(at), cr = ut.bindJointAxis, ar = {}, Sr = 0, jr = cr.length; Sr < jr; Sr++) {
              var Tr = cr[Sr], Lr = _n.querySelector('[sid="' + Tr.target + '"]');
              if (Lr) {
                var xn = Lr.parentElement;
                Nn(Tr.jointIndex, xn);
              }
            }
            var Tn = new ce.Matrix4();
            vt = { joints: dt && dt.joints, getJointValue: function(Or) {
              var qr = ar[Or];
              if (qr)
                return qr.position;
              console.warn("THREE.ColladaLoader: Joint " + Or + " doesn't exist.");
            }, setJointValue: function(Or, qr) {
              var wn = ar[Or];
              if (wn) {
                var dn = wn.joint;
                if (qr > dn.limits.max || qr < dn.limits.min)
                  console.warn("THREE.ColladaLoader: Joint " + Or + " value " + qr + " outside of limits (min: " + dn.limits.min + ", max: " + dn.limits.max + ").");
                else if (dn.static)
                  console.warn("THREE.ColladaLoader: Joint " + Or + " is static.");
                else {
                  var Xr = wn.object, Rn = dn.axis, zn = wn.transforms;
                  Kn.identity();
                  for (var Cn = 0; Cn < zn.length; Cn++) {
                    var Yr = zn[Cn];
                    if (Yr.sid && Yr.sid.indexOf(Or) !== -1)
                      switch (dn.type) {
                        case "revolute":
                          Kn.multiply(Tn.makeRotationAxis(Rn, ce.Math.degToRad(qr)));
                          break;
                        case "prismatic":
                          Kn.multiply(Tn.makeTranslation(Rn.x * qr, Rn.y * qr, Rn.z * qr));
                          break;
                        default:
                          console.warn("THREE.ColladaLoader: Unknown joint type: " + dn.type);
                      }
                    else
                      switch (Yr.type) {
                        case "matrix":
                          Kn.multiply(Yr.obj);
                          break;
                        case "translate":
                          Kn.multiply(Tn.makeTranslation(Yr.obj.x, Yr.obj.y, Yr.obj.z));
                          break;
                        case "scale":
                          Kn.scale(Yr.obj);
                          break;
                        case "rotate":
                          Kn.multiply(Tn.makeRotationAxis(Yr.obj, Yr.angle));
                      }
                  }
                  Xr.matrix.copy(Kn), Xr.matrix.decompose(Xr.position, Xr.quaternion, Xr.scale), ar[Or].position = qr;
                }
              } else
                console.log("THREE.ColladaLoader: " + Or + " does not exist.");
            } };
          }
          function Nn(Or, qr) {
            var wn = qr.getAttribute("name"), dn = dt.joints[Or];
            Zt.traverse(function(Xr) {
              Xr.name === wn && (ar[Or] = { object: Xr, transforms: function(Rn) {
                for (var zn = [], Cn = _n.querySelector('[id="' + Rn.id + '"]'), Yr = 0; Yr < Cn.childNodes.length; Yr++) {
                  var gn = Cn.childNodes[Yr];
                  if (gn.nodeType === 1)
                    switch (gn.nodeName) {
                      case "matrix":
                        var Ci = be(gn.textContent), Yn = new ce.Matrix4().fromArray(Ci).transpose();
                        zn.push({ sid: gn.getAttribute("sid"), type: gn.nodeName, obj: Yn });
                        break;
                      case "translate":
                      case "scale":
                        var Ci = be(gn.textContent), no = new ce.Vector3().fromArray(Ci);
                        zn.push({ sid: gn.getAttribute("sid"), type: gn.nodeName, obj: no });
                        break;
                      case "rotate":
                        var Ci = be(gn.textContent), no = new ce.Vector3().fromArray(Ci), Po = ce.Math.degToRad(Ci[3]);
                        zn.push({ sid: gn.getAttribute("sid"), type: gn.nodeName, obj: no, angle: Po });
                    }
                }
                return zn;
              }(qr), joint: dn, position: dn.zeroPosition });
            });
          }
        }();
        var Hr = function(De) {
          return fn(He(ge(De, "instance_visual_scene")[0].getAttribute("url")));
        }(ge(_n, "scene")[0]);
        return Zr.upAxis === "Z_UP" && Hr.quaternion.setFromEuler(new ce.Euler(-Math.PI / 2, 0, 0)), Hr.scale.multiplyScalar(Zr.unit), { animations: $r, kinematics: vt, library: Kt, scene: Hr };
      } }, ce.GLTFLoader = function() {
        function Ee(je) {
          this.manager = je !== void 0 ? je : ce.DefaultLoadingManager, this.dracoLoader = null;
        }
        Ee.prototype = { constructor: Ee, crossOrigin: "anonymous", load: function(je, _e, Ie, Ce) {
          var ke = this, Ve = this.path !== void 0 ? this.path : ce.LoaderUtils.extractUrlBase(je), Ke = new ce.FileLoader(ke.manager);
          Ke.setResponseType("arraybuffer"), Ke.load(je, function(ot) {
            try {
              ke.parse(ot, Ve, _e, Ce);
            } catch (St) {
              if (Ce === void 0)
                throw St;
              Ce(St);
            }
          }, Ie, Ce);
        }, setCrossOrigin: function(je) {
          return this.crossOrigin = je, this;
        }, setPath: function(je) {
          return this.path = je, this;
        }, setDRACOLoader: function(je) {
          return this.dracoLoader = je, this;
        }, parse: function(je, _e, Ie, Ce) {
          var ke, Ve = {};
          if (typeof je == "string")
            ke = je;
          else if (ce.LoaderUtils.decodeText(new Uint8Array(je, 0, 4)) === Oe) {
            try {
              Ve[me.KHR_BINARY_GLTF] = new function(Wt) {
                this.name = me.KHR_BINARY_GLTF, this.content = null, this.body = null;
                var qe = new DataView(Wt, 0, He);
                if (this.header = { magic: ce.LoaderUtils.decodeText(new Uint8Array(Wt.slice(0, 4))), version: qe.getUint32(4, !0), length: qe.getUint32(8, !0) }, this.header.magic !== Oe)
                  throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");
                if (this.header.version < 2)
                  throw new Error("THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");
                for (var Te = new DataView(Wt, He), Re = 0; Re < Te.byteLength; ) {
                  var it = Te.getUint32(Re, !0);
                  Re += 4;
                  var Ct = Te.getUint32(Re, !0);
                  if (Re += 4, Ct === Se.JSON) {
                    var Nt = new Uint8Array(Wt, He + Re, it);
                    this.content = ce.LoaderUtils.decodeText(Nt);
                  } else if (Ct === Se.BIN) {
                    var Dt = He + Re;
                    this.body = Wt.slice(Dt, Dt + it);
                  }
                  Re += it;
                }
                if (this.content === null)
                  throw new Error("THREE.GLTFLoader: JSON content not found.");
              }(je);
            } catch (Wt) {
              return void (Ce && Ce(Wt));
            }
            ke = Ve[me.KHR_BINARY_GLTF].content;
          } else
            ke = ce.LoaderUtils.decodeText(new Uint8Array(je));
          var Ke = JSON.parse(ke);
          if (Ke.asset === void 0 || Ke.asset.version[0] < 2)
            Ce && Ce(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead."));
          else {
            if (Ke.extensionsUsed)
              for (var ot = 0; ot < Ke.extensionsUsed.length; ++ot) {
                var St = Ke.extensionsUsed[ot], Vt = Ke.extensionsRequired || [];
                switch (St) {
                  case me.KHR_LIGHTS:
                    Ve[St] = new we(Ke);
                    break;
                  case me.KHR_MATERIALS_UNLIT:
                    Ve[St] = new be();
                    break;
                  case me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:
                    Ve[St] = new Fe();
                    break;
                  case me.KHR_DRACO_MESH_COMPRESSION:
                    Ve[St] = new Ge(Ke, this.dracoLoader);
                    break;
                  case me.MSFT_TEXTURE_DDS:
                    Ve[me.MSFT_TEXTURE_DDS] = new ge();
                    break;
                  default:
                    Vt.indexOf(St) >= 0 && console.warn('THREE.GLTFLoader: Unknown extension "' + St + '".');
                }
              }
            var zt = new Bt(Ke, Ve, { path: _e || this.path || "", crossOrigin: this.crossOrigin, manager: this.manager });
            zt.parse(function(Wt, qe, Te, Re, it) {
              var Ct = { scene: Wt, scenes: qe, cameras: Te, animations: Re, asset: it.asset, parser: zt, userData: {} };
              tr(Ve, Ct, it), Ie(Ct);
            }, Ce);
          }
        } };
        var me = { KHR_BINARY_GLTF: "KHR_binary_glTF", KHR_DRACO_MESH_COMPRESSION: "KHR_draco_mesh_compression", KHR_LIGHTS: "KHR_lights", KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: "KHR_materials_pbrSpecularGlossiness", KHR_MATERIALS_UNLIT: "KHR_materials_unlit", MSFT_TEXTURE_DDS: "MSFT_texture_dds" };
        function ge() {
          if (!ce.DDSLoader)
            throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader");
          this.name = me.MSFT_TEXTURE_DDS, this.ddsLoader = new ce.DDSLoader();
        }
        function we(je) {
          this.name = me.KHR_LIGHTS, this.lights = {};
          var _e = (je.extensions && je.extensions[me.KHR_LIGHTS] || {}).lights || {};
          for (var Ie in _e) {
            var Ce, ke = _e[Ie], Ve = new ce.Color().fromArray(ke.color);
            switch (ke.type) {
              case "directional":
                (Ce = new ce.DirectionalLight(Ve)).target.position.set(0, 0, 1), Ce.add(Ce.target);
                break;
              case "point":
                Ce = new ce.PointLight(Ve);
                break;
              case "spot":
                Ce = new ce.SpotLight(Ve), ke.spot = ke.spot || {}, ke.spot.innerConeAngle = ke.spot.innerConeAngle !== void 0 ? ke.spot.innerConeAngle : 0, ke.spot.outerConeAngle = ke.spot.outerConeAngle !== void 0 ? ke.spot.outerConeAngle : Math.PI / 4, Ce.angle = ke.spot.outerConeAngle, Ce.penumbra = 1 - ke.spot.innerConeAngle / ke.spot.outerConeAngle, Ce.target.position.set(0, 0, 1), Ce.add(Ce.target);
                break;
              case "ambient":
                Ce = new ce.AmbientLight(Ve);
            }
            Ce && (Ce.decay = 2, ke.intensity !== void 0 && (Ce.intensity = ke.intensity), Ce.name = ke.name || "light_" + Ie, this.lights[Ie] = Ce);
          }
        }
        function be(je) {
          this.name = me.KHR_MATERIALS_UNLIT;
        }
        be.prototype.getMaterialType = function(je) {
          return ce.MeshBasicMaterial;
        }, be.prototype.extendParams = function(je, _e, Ie) {
          var Ce = [];
          je.color = new ce.Color(1, 1, 1), je.opacity = 1;
          var ke = _e.pbrMetallicRoughness;
          if (ke) {
            if (Array.isArray(ke.baseColorFactor)) {
              var Ve = ke.baseColorFactor;
              je.color.fromArray(Ve), je.opacity = Ve[3];
            }
            ke.baseColorTexture !== void 0 && Ce.push(Ie.assignTexture(je, "map", ke.baseColorTexture.index));
          }
          return Promise.all(Ce);
        };
        var Oe = "glTF", He = 12, Se = { JSON: 1313821514, BIN: 5130562 };
        function Ge(je, _e) {
          if (!_e)
            throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");
          this.name = me.KHR_DRACO_MESH_COMPRESSION, this.json = je, this.dracoLoader = _e;
        }
        function Fe() {
          return { name: me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS, specularGlossinessParams: ["color", "map", "lightMap", "lightMapIntensity", "aoMap", "aoMapIntensity", "emissive", "emissiveIntensity", "emissiveMap", "bumpMap", "bumpScale", "normalMap", "displacementMap", "displacementScale", "displacementBias", "specularMap", "specular", "glossinessMap", "glossiness", "alphaMap", "envMap", "envMapIntensity", "refractionRatio"], getMaterialType: function() {
            return ce.ShaderMaterial;
          }, extendParams: function(je, _e, Ie) {
            var Ce = _e.extensions[this.name], ke = ce.ShaderLib.standard, Ve = ce.UniformsUtils.clone(ke.uniforms), Ke = ["#ifdef USE_SPECULARMAP", "	uniform sampler2D specularMap;", "#endif"].join(`
`), ot = ["#ifdef USE_GLOSSINESSMAP", "	uniform sampler2D glossinessMap;", "#endif"].join(`
`), St = ["vec3 specularFactor = specular;", "#ifdef USE_SPECULARMAP", "	vec4 texelSpecular = texture2D( specularMap, vUv );", "	texelSpecular = sRGBToLinear( texelSpecular );", "	// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture", "	specularFactor *= texelSpecular.rgb;", "#endif"].join(`
`), Vt = ["float glossinessFactor = glossiness;", "#ifdef USE_GLOSSINESSMAP", "	vec4 texelGlossiness = texture2D( glossinessMap, vUv );", "	// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture", "	glossinessFactor *= texelGlossiness.a;", "#endif"].join(`
`), zt = ["PhysicalMaterial material;", "material.diffuseColor = diffuseColor.rgb;", "material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );", "material.specularColor = specularFactor.rgb;"].join(`
`), Wt = ke.fragmentShader.replace("uniform float roughness;", "uniform vec3 specular;").replace("uniform float metalness;", "uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>", Ke).replace("#include <metalnessmap_pars_fragment>", ot).replace("#include <roughnessmap_fragment>", St).replace("#include <metalnessmap_fragment>", Vt).replace("#include <lights_physical_fragment>", zt);
            delete Ve.roughness, delete Ve.metalness, delete Ve.roughnessMap, delete Ve.metalnessMap, Ve.specular = { value: new ce.Color().setHex(1118481) }, Ve.glossiness = { value: 0.5 }, Ve.specularMap = { value: null }, Ve.glossinessMap = { value: null }, je.vertexShader = ke.vertexShader, je.fragmentShader = Wt, je.uniforms = Ve, je.defines = { STANDARD: "" }, je.color = new ce.Color(1, 1, 1), je.opacity = 1;
            var qe = [];
            if (Array.isArray(Ce.diffuseFactor)) {
              var Te = Ce.diffuseFactor;
              je.color.fromArray(Te), je.opacity = Te[3];
            }
            if (Ce.diffuseTexture !== void 0 && qe.push(Ie.assignTexture(je, "map", Ce.diffuseTexture.index)), je.emissive = new ce.Color(0, 0, 0), je.glossiness = Ce.glossinessFactor !== void 0 ? Ce.glossinessFactor : 1, je.specular = new ce.Color(1, 1, 1), Array.isArray(Ce.specularFactor) && je.specular.fromArray(Ce.specularFactor), Ce.specularGlossinessTexture !== void 0) {
              var Re = Ce.specularGlossinessTexture.index;
              qe.push(Ie.assignTexture(je, "glossinessMap", Re)), qe.push(Ie.assignTexture(je, "specularMap", Re));
            }
            return Promise.all(qe);
          }, createMaterial: function(je) {
            var _e = new ce.ShaderMaterial({ defines: je.defines, vertexShader: je.vertexShader, fragmentShader: je.fragmentShader, uniforms: je.uniforms, fog: !0, lights: !0, opacity: je.opacity, transparent: je.transparent });
            return _e.isGLTFSpecularGlossinessMaterial = !0, _e.color = je.color, _e.map = je.map === void 0 ? null : je.map, _e.lightMap = null, _e.lightMapIntensity = 1, _e.aoMap = je.aoMap === void 0 ? null : je.aoMap, _e.aoMapIntensity = 1, _e.emissive = je.emissive, _e.emissiveIntensity = 1, _e.emissiveMap = je.emissiveMap === void 0 ? null : je.emissiveMap, _e.bumpMap = je.bumpMap === void 0 ? null : je.bumpMap, _e.bumpScale = 1, _e.normalMap = je.normalMap === void 0 ? null : je.normalMap, je.normalScale && (_e.normalScale = je.normalScale), _e.displacementMap = null, _e.displacementScale = 1, _e.displacementBias = 0, _e.specularMap = je.specularMap === void 0 ? null : je.specularMap, _e.specular = je.specular, _e.glossinessMap = je.glossinessMap === void 0 ? null : je.glossinessMap, _e.glossiness = je.glossiness, _e.alphaMap = null, _e.envMap = je.envMap === void 0 ? null : je.envMap, _e.envMapIntensity = 1, _e.refractionRatio = 0.98, _e.extensions.derivatives = !0, _e;
          }, cloneMaterial: function(je) {
            var _e = je.clone();
            _e.isGLTFSpecularGlossinessMaterial = !0;
            for (var Ie = this.specularGlossinessParams, Ce = 0, ke = Ie.length; Ce < ke; Ce++)
              _e[Ie[Ce]] = je[Ie[Ce]];
            return _e;
          }, refreshUniforms: function(je, _e, Ie, Ce, ke, Ve) {
            if (ke.isGLTFSpecularGlossinessMaterial === !0) {
              var Ke, ot = ke.uniforms, St = ke.defines;
              ot.opacity.value = ke.opacity, ot.diffuse.value.copy(ke.color), ot.emissive.value.copy(ke.emissive).multiplyScalar(ke.emissiveIntensity), ot.map.value = ke.map, ot.specularMap.value = ke.specularMap, ot.alphaMap.value = ke.alphaMap, ot.lightMap.value = ke.lightMap, ot.lightMapIntensity.value = ke.lightMapIntensity, ot.aoMap.value = ke.aoMap, ot.aoMapIntensity.value = ke.aoMapIntensity, ke.map ? Ke = ke.map : ke.specularMap ? Ke = ke.specularMap : ke.displacementMap ? Ke = ke.displacementMap : ke.normalMap ? Ke = ke.normalMap : ke.bumpMap ? Ke = ke.bumpMap : ke.glossinessMap ? Ke = ke.glossinessMap : ke.alphaMap ? Ke = ke.alphaMap : ke.emissiveMap && (Ke = ke.emissiveMap), Ke !== void 0 && (Ke.isWebGLRenderTarget && (Ke = Ke.texture), Ke.matrixAutoUpdate === !0 && Ke.updateMatrix(), ot.uvTransform.value.copy(Ke.matrix)), ot.envMap.value = ke.envMap, ot.envMapIntensity.value = ke.envMapIntensity, ot.flipEnvMap.value = ke.envMap && ke.envMap.isCubeTexture ? -1 : 1, ot.refractionRatio.value = ke.refractionRatio, ot.specular.value.copy(ke.specular), ot.glossiness.value = ke.glossiness, ot.glossinessMap.value = ke.glossinessMap, ot.emissiveMap.value = ke.emissiveMap, ot.bumpMap.value = ke.bumpMap, ot.normalMap.value = ke.normalMap, ot.displacementMap.value = ke.displacementMap, ot.displacementScale.value = ke.displacementScale, ot.displacementBias.value = ke.displacementBias, ot.glossinessMap.value !== null && St.USE_GLOSSINESSMAP === void 0 && (St.USE_GLOSSINESSMAP = "", St.USE_ROUGHNESSMAP = ""), ot.glossinessMap.value === null && St.USE_GLOSSINESSMAP !== void 0 && (delete St.USE_GLOSSINESSMAP, delete St.USE_ROUGHNESSMAP);
            }
          } };
        }
        function Pe(je, _e, Ie, Ce) {
          ce.Interpolant.call(this, je, _e, Ie, Ce);
        }
        Ge.prototype.decodePrimitive = function(je, _e) {
          var Ie = this.json, Ce = this.dracoLoader, ke = je.extensions[this.name].bufferView, Ve = je.extensions[this.name].attributes, Ke = {}, ot = {}, St = {};
          for (var Vt in Ve)
            Vt in Lt && (Ke[Lt[Vt]] = Ve[Vt]);
          for (Vt in je.attributes)
            if (Lt[Vt] !== void 0 && Ve[Vt] !== void 0) {
              var zt = Ie.accessors[je.attributes[Vt]], Wt = Gt[zt.componentType];
              St[Lt[Vt]] = Wt, ot[Lt[Vt]] = zt.normalized === !0;
            }
          return _e.getDependency("bufferView", ke).then(function(qe) {
            return new Promise(function(Te) {
              Ce.decodeDracoFile(qe, function(Re) {
                for (var it in Re.attributes) {
                  var Ct = Re.attributes[it], Nt = ot[it];
                  Nt !== void 0 && (Ct.normalized = Nt);
                }
                Te(Re);
              }, Ke, St);
            });
          });
        }, Pe.prototype = Object.create(ce.Interpolant.prototype), Pe.prototype.constructor = Pe, Pe.prototype.interpolate_ = function(je, _e, Ie, Ce) {
          for (var ke = this.resultBuffer, Ve = this.sampleValues, Ke = this.valueSize, ot = 2 * Ke, St = 3 * Ke, Vt = Ce - _e, zt = (Ie - _e) / Vt, Wt = zt * zt, qe = Wt * zt, Te = je * St, Re = Te - St, it = 2 * qe - 3 * Wt + 1, Ct = qe - 2 * Wt + zt, Nt = -2 * qe + 3 * Wt, Dt = qe - Wt, Er = 0; Er !== Ke; Er++) {
            var gr = Ve[Re + Er + Ke], Cr = Ve[Re + Er + ot] * Vt, mr = Ve[Te + Er + Ke], wr = Ve[Te + Er] * Vt;
            ke[Er] = it * gr + Ct * Cr + Nt * mr + Dt * wr;
          }
          return ke;
        };
        var Je = 0, tt = 1, ft = 2, Tt = 3, Xe = 4, ht = 5, Qt = 6, Gt = (ce.Matrix3, ce.Matrix4, ce.Vector2, ce.Vector3, ce.Vector4, ce.Texture, { 5120: Int8Array, 5121: Uint8Array, 5122: Int16Array, 5123: Uint16Array, 5125: Uint32Array, 5126: Float32Array }), pt = { 9728: ce.NearestFilter, 9729: ce.LinearFilter, 9984: ce.NearestMipMapNearestFilter, 9985: ce.LinearMipMapNearestFilter, 9986: ce.NearestMipMapLinearFilter, 9987: ce.LinearMipMapLinearFilter }, xt = { 33071: ce.ClampToEdgeWrapping, 33648: ce.MirroredRepeatWrapping, 10497: ce.RepeatWrapping }, Yt = { 6406: ce.AlphaFormat, 6407: ce.RGBFormat, 6408: ce.RGBAFormat, 6409: ce.LuminanceFormat, 6410: ce.LuminanceAlphaFormat }, Jt = { 5121: ce.UnsignedByteType, 32819: ce.UnsignedShort4444Type, 32820: ce.UnsignedShort5551Type, 33635: ce.UnsignedShort565Type }, Ht = (ce.BackSide, ce.FrontSide, ce.NeverDepth, ce.LessDepth, ce.EqualDepth, ce.LessEqualDepth, ce.GreaterEqualDepth, ce.NotEqualDepth, ce.GreaterEqualDepth, ce.AlwaysDepth, ce.AddEquation, ce.SubtractEquation, ce.ReverseSubtractEquation, ce.ZeroFactor, ce.OneFactor, ce.SrcColorFactor, ce.OneMinusSrcColorFactor, ce.SrcAlphaFactor, ce.OneMinusSrcAlphaFactor, ce.DstAlphaFactor, ce.OneMinusDstAlphaFactor, ce.DstColorFactor, ce.OneMinusDstColorFactor, ce.SrcAlphaSaturateFactor, { SCALAR: 1, VEC2: 2, VEC3: 3, VEC4: 4, MAT2: 4, MAT3: 9, MAT4: 16 }), Lt = { POSITION: "position", NORMAL: "normal", TEXCOORD_0: "uv", TEXCOORD0: "uv", TEXCOORD: "uv", TEXCOORD_1: "uv2", COLOR_0: "color", COLOR0: "color", COLOR: "color", WEIGHTS_0: "skinWeight", WEIGHT: "skinWeight", JOINTS_0: "skinIndex", JOINT: "skinIndex" }, Pt = { scale: "scale", translation: "position", rotation: "quaternion", weights: "morphTargetInfluences" }, yt = { CUBICSPLINE: ce.InterpolateSmooth, LINEAR: ce.InterpolateLinear, STEP: ce.InterpolateDiscrete }, kt = "OPAQUE", $t = "MASK", Le = "BLEND";
        function or(je, _e) {
          return typeof je != "string" || je === "" ? "" : /^(https?:)?\/\//i.test(je) || /^data:.*,.*$/i.test(je) || /^blob:.*$/i.test(je) ? je : _e + je;
        }
        function tr(je, _e, Ie) {
          for (var Ce in Ie.extensions)
            je[Ce] === void 0 && (_e.userData.gltfExtensions = _e.userData.gltfExtensions || {}, _e.userData.gltfExtensions[Ce] = Ie.extensions[Ce]);
        }
        function lr(je, _e) {
          if (je.updateMorphTargets(), _e.weights !== void 0)
            for (var Ie = 0, Ce = _e.weights.length; Ie < Ce; Ie++)
              je.morphTargetInfluences[Ie] = _e.weights[Ie];
          if (_e.extras && Array.isArray(_e.extras.targetNames)) {
            var ke = _e.extras.targetNames;
            if (je.morphTargetInfluences.length === ke.length)
              for (je.morphTargetDictionary = {}, Ie = 0, Ce = ke.length; Ie < Ce; Ie++)
                je.morphTargetDictionary[ke[Ie]] = Ie;
            else
              console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.");
          }
        }
        function gt(je, _e) {
          return je.indices === _e.indices && Ut(je.attributes, _e.attributes);
        }
        function Ut(je, _e) {
          if (Object.keys(je).length !== Object.keys(_e).length)
            return !1;
          for (var Ie in je)
            if (je[Ie] !== _e[Ie])
              return !1;
          return !0;
        }
        function Ze(je, _e) {
          if (je.length !== _e.length)
            return !1;
          for (var Ie = 0, Ce = je.length; Ie < Ce; Ie++)
            if (je[Ie] !== _e[Ie])
              return !1;
          return !0;
        }
        function rt(je, _e) {
          for (var Ie = 0, Ce = je.length; Ie < Ce; Ie++) {
            var ke = je[Ie];
            if (gt(ke.primitive, _e))
              return ke.promise;
          }
          return null;
        }
        function $e(je) {
          if (je.isInterleavedBufferAttribute) {
            for (var _e = je.count, Ie = je.itemSize, Ce = je.array.slice(0, _e * Ie), ke = 0; ke < _e; ++ke)
              Ce[ke] = je.getX(ke), Ie >= 2 && (Ce[ke + 1] = je.getY(ke)), Ie >= 3 && (Ce[ke + 2] = je.getZ(ke)), Ie >= 4 && (Ce[ke + 3] = je.getW(ke));
            return new ce.BufferAttribute(Ce, Ie, je.normalized);
          }
          return je.clone();
        }
        function Bt(je, _e, Ie) {
          this.json = je || {}, this.extensions = _e || {}, this.options = Ie || {}, this.cache = new function() {
            var Ce = {};
            return { get: function(ke) {
              return Ce[ke];
            }, add: function(ke, Ve) {
              Ce[ke] = Ve;
            }, remove: function(ke) {
              delete Ce[ke];
            }, removeAll: function() {
              Ce = {};
            } };
          }(), this.primitiveCache = [], this.multiplePrimitivesCache = [], this.multiPassGeometryCache = [], this.textureLoader = new ce.TextureLoader(this.options.manager), this.textureLoader.setCrossOrigin(this.options.crossOrigin), this.fileLoader = new ce.FileLoader(this.options.manager), this.fileLoader.setResponseType("arraybuffer");
        }
        function ct(je, _e, Ie) {
          var Ce = _e.attributes;
          for (var ke in Ce) {
            var Ve = Lt[ke], Ke = Ie[Ce[ke]];
            Ve && (Ve in je.attributes || je.addAttribute(Ve, Ke));
          }
          _e.indices === void 0 || je.index || je.setIndex(Ie[_e.indices]), _e.targets !== void 0 && function(ot, St, Vt) {
            for (var zt = !1, Wt = !1, qe = 0, Te = St.length; qe < Te && ((Ct = St[qe]).POSITION !== void 0 && (zt = !0), Ct.NORMAL !== void 0 && (Wt = !0), !zt || !Wt); qe++)
              ;
            if (zt || Wt) {
              var Re = [], it = [];
              for (qe = 0, Te = St.length; qe < Te; qe++) {
                var Ct = St[qe], Nt = "morphTarget" + qe;
                if (zt) {
                  if (Ct.POSITION !== void 0) {
                    var Dt = $e(Vt[Ct.POSITION]);
                    Dt.name = Nt;
                    for (var Er = ot.attributes.position, gr = 0, Cr = Dt.count; gr < Cr; gr++)
                      Dt.setXYZ(gr, Dt.getX(gr) + Er.getX(gr), Dt.getY(gr) + Er.getY(gr), Dt.getZ(gr) + Er.getZ(gr));
                  } else
                    Dt = ot.attributes.position;
                  Re.push(Dt);
                }
                if (Wt) {
                  if (Ct.NORMAL !== void 0) {
                    var mr;
                    (mr = $e(Vt[Ct.NORMAL])).name = Nt;
                    var wr = ot.attributes.normal;
                    for (gr = 0, Cr = mr.count; gr < Cr; gr++)
                      mr.setXYZ(gr, mr.getX(gr) + wr.getX(gr), mr.getY(gr) + wr.getY(gr), mr.getZ(gr) + wr.getZ(gr));
                  } else
                    mr = ot.attributes.normal;
                  it.push(mr);
                }
              }
              zt && (ot.morphAttributes.position = Re), Wt && (ot.morphAttributes.normal = it);
            }
          }(je, _e.targets, Ie), _e.extras !== void 0 && (je.userData = _e.extras);
        }
        return Bt.prototype.parse = function(je, _e) {
          var Ie = this.json;
          this.cache.removeAll(), this.markDefs(), this.getMultiDependencies(["scene", "animation", "camera"]).then(function(Ce) {
            var ke = Ce.scenes || [], Ve = ke[Ie.scene || 0], Ke = Ce.animations || [], ot = Ce.cameras || [];
            je(Ve, ke, ot, Ke, Ie);
          }).catch(_e);
        }, Bt.prototype.markDefs = function() {
          for (var je = this.json.nodes || [], _e = this.json.skins || [], Ie = this.json.meshes || [], Ce = {}, ke = {}, Ve = 0, Ke = _e.length; Ve < Ke; Ve++)
            for (var ot = _e[Ve].joints, St = 0, Vt = ot.length; St < Vt; St++)
              je[ot[St]].isBone = !0;
          for (var zt = 0, Wt = je.length; zt < Wt; zt++) {
            var qe = je[zt];
            qe.mesh !== void 0 && (Ce[qe.mesh] === void 0 && (Ce[qe.mesh] = ke[qe.mesh] = 0), Ce[qe.mesh]++, qe.skin !== void 0 && (Ie[qe.mesh].isSkinnedMesh = !0));
          }
          this.json.meshReferences = Ce, this.json.meshUses = ke;
        }, Bt.prototype.getDependency = function(je, _e) {
          var Ie = je + ":" + _e, Ce = this.cache.get(Ie);
          if (!Ce) {
            switch (je) {
              case "scene":
                Ce = this.loadScene(_e);
                break;
              case "node":
                Ce = this.loadNode(_e);
                break;
              case "mesh":
                Ce = this.loadMesh(_e);
                break;
              case "accessor":
                Ce = this.loadAccessor(_e);
                break;
              case "bufferView":
                Ce = this.loadBufferView(_e);
                break;
              case "buffer":
                Ce = this.loadBuffer(_e);
                break;
              case "material":
                Ce = this.loadMaterial(_e);
                break;
              case "texture":
                Ce = this.loadTexture(_e);
                break;
              case "skin":
                Ce = this.loadSkin(_e);
                break;
              case "animation":
                Ce = this.loadAnimation(_e);
                break;
              case "camera":
                Ce = this.loadCamera(_e);
                break;
              default:
                throw new Error("Unknown type: " + je);
            }
            this.cache.add(Ie, Ce);
          }
          return Ce;
        }, Bt.prototype.getDependencies = function(je) {
          var _e = this.cache.get(je);
          if (!_e) {
            var Ie = this, Ce = this.json[je + (je === "mesh" ? "es" : "s")] || [];
            _e = Promise.all(Ce.map(function(ke, Ve) {
              return Ie.getDependency(je, Ve);
            })), this.cache.add(je, _e);
          }
          return _e;
        }, Bt.prototype.getMultiDependencies = function(je) {
          for (var _e = {}, Ie = [], Ce = 0, ke = je.length; Ce < ke; Ce++) {
            var Ve = je[Ce], Ke = this.getDependencies(Ve);
            Ke = Ke.then(function(ot, St) {
              _e[ot] = St;
            }.bind(this, Ve + (Ve === "mesh" ? "es" : "s"))), Ie.push(Ke);
          }
          return Promise.all(Ie).then(function() {
            return _e;
          });
        }, Bt.prototype.loadBuffer = function(je) {
          var _e = this.json.buffers[je], Ie = this.fileLoader;
          if (_e.type && _e.type !== "arraybuffer")
            throw new Error("THREE.GLTFLoader: " + _e.type + " buffer type is not supported.");
          if (_e.uri === void 0 && je === 0)
            return Promise.resolve(this.extensions[me.KHR_BINARY_GLTF].body);
          var Ce = this.options;
          return new Promise(function(ke, Ve) {
            Ie.load(or(_e.uri, Ce.path), ke, void 0, function() {
              Ve(new Error('THREE.GLTFLoader: Failed to load buffer "' + _e.uri + '".'));
            });
          });
        }, Bt.prototype.loadBufferView = function(je) {
          var _e = this.json.bufferViews[je];
          return this.getDependency("buffer", _e.buffer).then(function(Ie) {
            var Ce = _e.byteLength || 0, ke = _e.byteOffset || 0;
            return Ie.slice(ke, ke + Ce);
          });
        }, Bt.prototype.loadAccessor = function(je) {
          var _e = this, Ie = this.json, Ce = this.json.accessors[je];
          if (Ce.bufferView === void 0 && Ce.sparse === void 0)
            return null;
          var ke = [];
          return Ce.bufferView !== void 0 ? ke.push(this.getDependency("bufferView", Ce.bufferView)) : ke.push(null), Ce.sparse !== void 0 && (ke.push(this.getDependency("bufferView", Ce.sparse.indices.bufferView)), ke.push(this.getDependency("bufferView", Ce.sparse.values.bufferView))), Promise.all(ke).then(function(Ve) {
            var Ke, ot, St = Ve[0], Vt = Ht[Ce.type], zt = Gt[Ce.componentType], Wt = zt.BYTES_PER_ELEMENT, qe = Wt * Vt, Te = Ce.byteOffset || 0, Re = Ie.bufferViews[Ce.bufferView].byteStride, it = Ce.normalized === !0;
            if (Re && Re !== qe) {
              var Ct = "InterleavedBuffer:" + Ce.bufferView + ":" + Ce.componentType, Nt = _e.cache.get(Ct);
              Nt || (Ke = new zt(St), Nt = new ce.InterleavedBuffer(Ke, Re / Wt), _e.cache.add(Ct, Nt)), ot = new ce.InterleavedBufferAttribute(Nt, Vt, Te / Wt, it);
            } else
              Ke = St === null ? new zt(Ce.count * Vt) : new zt(St, Te, Ce.count * Vt), ot = new ce.BufferAttribute(Ke, Vt, it);
            if (Ce.sparse !== void 0) {
              var Dt = Ht.SCALAR, Er = Gt[Ce.sparse.indices.componentType], gr = Ce.sparse.indices.byteOffset || 0, Cr = Ce.sparse.values.byteOffset || 0, mr = new Er(Ve[1], gr, Ce.sparse.count * Dt), wr = new zt(Ve[2], Cr, Ce.sparse.count * Vt);
              St !== null && ot.setArray(ot.array.slice());
              for (var en = 0, Wn = mr.length; en < Wn; en++) {
                var on = mr[en];
                if (ot.setX(on, wr[en * Vt]), Vt >= 2 && ot.setY(on, wr[en * Vt + 1]), Vt >= 3 && ot.setZ(on, wr[en * Vt + 2]), Vt >= 4 && ot.setW(on, wr[en * Vt + 3]), Vt >= 5)
                  throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.");
              }
            }
            return ot;
          });
        }, Bt.prototype.loadTexture = function(je) {
          var _e, Ie = this, Ce = this.json, ke = this.options, Ve = this.textureLoader, Ke = window.URL || window.webkitURL, ot = Ce.textures[je], St = ot.extensions || {}, Vt = (_e = St[me.MSFT_TEXTURE_DDS] ? Ce.images[St[me.MSFT_TEXTURE_DDS].source] : Ce.images[ot.source]).uri, zt = !1;
          return _e.bufferView !== void 0 && (Vt = Ie.getDependency("bufferView", _e.bufferView).then(function(Wt) {
            zt = !0;
            var qe = new Blob([Wt], { type: _e.mimeType });
            return Vt = Ke.createObjectURL(qe);
          })), Promise.resolve(Vt).then(function(Wt) {
            var qe = ce.Loader.Handlers.get(Wt);
            return qe || (qe = St[me.MSFT_TEXTURE_DDS] ? Ie.extensions[me.MSFT_TEXTURE_DDS].ddsLoader : Ve), new Promise(function(Te, Re) {
              qe.load(or(Wt, ke.path), Te, void 0, Re);
            });
          }).then(function(Wt) {
            zt === !0 && Ke.revokeObjectURL(Vt), Wt.flipY = !1, ot.name !== void 0 && (Wt.name = ot.name), St[me.MSFT_TEXTURE_DDS] || (Wt.format = ot.format !== void 0 ? Yt[ot.format] : ce.RGBAFormat), ot.internalFormat !== void 0 && Wt.format !== Yt[ot.internalFormat] && console.warn("THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."), Wt.type = ot.type !== void 0 ? Jt[ot.type] : ce.UnsignedByteType;
            var qe = (Ce.samplers || {})[ot.sampler] || {};
            return Wt.magFilter = pt[qe.magFilter] || ce.LinearFilter, Wt.minFilter = pt[qe.minFilter] || ce.LinearMipMapLinearFilter, Wt.wrapS = xt[qe.wrapS] || ce.RepeatWrapping, Wt.wrapT = xt[qe.wrapT] || ce.RepeatWrapping, Wt;
          });
        }, Bt.prototype.assignTexture = function(je, _e, Ie) {
          return this.getDependency("texture", Ie).then(function(Ce) {
            je[_e] = Ce;
          });
        }, Bt.prototype.loadMaterial = function(je) {
          this.json;
          var _e, Ie = this.extensions, Ce = this.json.materials[je], ke = {}, Ve = Ce.extensions || {}, Ke = [];
          if (Ve[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {
            var ot = Ie[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];
            _e = ot.getMaterialType(Ce), Ke.push(ot.extendParams(ke, Ce, this));
          } else if (Ve[me.KHR_MATERIALS_UNLIT]) {
            var St = Ie[me.KHR_MATERIALS_UNLIT];
            _e = St.getMaterialType(Ce), Ke.push(St.extendParams(ke, Ce, this));
          } else {
            _e = ce.MeshStandardMaterial;
            var Vt = Ce.pbrMetallicRoughness || {};
            if (ke.color = new ce.Color(1, 1, 1), ke.opacity = 1, Array.isArray(Vt.baseColorFactor)) {
              var zt = Vt.baseColorFactor;
              ke.color.fromArray(zt), ke.opacity = zt[3];
            }
            if (Vt.baseColorTexture !== void 0 && Ke.push(this.assignTexture(ke, "map", Vt.baseColorTexture.index)), ke.metalness = Vt.metallicFactor !== void 0 ? Vt.metallicFactor : 1, ke.roughness = Vt.roughnessFactor !== void 0 ? Vt.roughnessFactor : 1, Vt.metallicRoughnessTexture !== void 0) {
              var Wt = Vt.metallicRoughnessTexture.index;
              Ke.push(this.assignTexture(ke, "metalnessMap", Wt)), Ke.push(this.assignTexture(ke, "roughnessMap", Wt));
            }
          }
          Ce.doubleSided === !0 && (ke.side = ce.DoubleSide);
          var qe = Ce.alphaMode || kt;
          return qe === Le ? ke.transparent = !0 : (ke.transparent = !1, qe === $t && (ke.alphaTest = Ce.alphaCutoff !== void 0 ? Ce.alphaCutoff : 0.5)), Ce.normalTexture !== void 0 && _e !== ce.MeshBasicMaterial && (Ke.push(this.assignTexture(ke, "normalMap", Ce.normalTexture.index)), ke.normalScale = new ce.Vector2(1, 1), Ce.normalTexture.scale !== void 0 && ke.normalScale.set(Ce.normalTexture.scale, Ce.normalTexture.scale)), Ce.occlusionTexture !== void 0 && _e !== ce.MeshBasicMaterial && (Ke.push(this.assignTexture(ke, "aoMap", Ce.occlusionTexture.index)), Ce.occlusionTexture.strength !== void 0 && (ke.aoMapIntensity = Ce.occlusionTexture.strength)), Ce.emissiveFactor !== void 0 && _e !== ce.MeshBasicMaterial && (ke.emissive = new ce.Color().fromArray(Ce.emissiveFactor)), Ce.emissiveTexture !== void 0 && _e !== ce.MeshBasicMaterial && Ke.push(this.assignTexture(ke, "emissiveMap", Ce.emissiveTexture.index)), Promise.all(Ke).then(function() {
            var Te;
            return Te = _e === ce.ShaderMaterial ? Ie[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(ke) : new _e(ke), Ce.name !== void 0 && (Te.name = Ce.name), Te.normalScale && (Te.normalScale.y = -Te.normalScale.y), Te.map && (Te.map.encoding = ce.sRGBEncoding), Te.emissiveMap && (Te.emissiveMap.encoding = ce.sRGBEncoding), Te.specularMap && (Te.specularMap.encoding = ce.sRGBEncoding), Ce.extras && (Te.userData = Ce.extras), Ce.extensions && tr(Ie, Te, Ce), Te;
          });
        }, Bt.prototype.loadGeometries = function(je) {
          var _e, Ie = this, Ce = this.extensions, ke = this.primitiveCache, Ve = function(Ke) {
            if (Ke.length < 2)
              return !1;
            var ot = Ke[0], St = ot.targets || [];
            if (ot.indices === void 0)
              return !1;
            for (var Vt = 1, zt = Ke.length; Vt < zt; Vt++) {
              var Wt = Ke[Vt];
              if (ot.mode !== Wt.mode || Wt.indices === void 0 || !Ut(ot.attributes, Wt.attributes))
                return !1;
              var qe = Wt.targets || [];
              if (St.length !== qe.length)
                return !1;
              for (var Te = 0, Re = St.length; Te < Re; Te++)
                if (!Ut(St[Te], qe[Te]))
                  return !1;
            }
            return !0;
          }(je);
          return Ve && (_e = je, je = [je[0]]), this.getDependencies("accessor").then(function(Ke) {
            for (var ot = [], St = 0, Vt = je.length; St < Vt; St++) {
              var zt = je[St], Wt = rt(ke, zt);
              if (Wt)
                ot.push(Wt);
              else if (zt.extensions && zt.extensions[me.KHR_DRACO_MESH_COMPRESSION]) {
                var qe = Ce[me.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(zt, Ie).then(function(Re) {
                  return ct(Re, zt, Ke), Re;
                });
                ke.push({ primitive: zt, promise: qe }), ot.push(qe);
              } else {
                var Te = new ce.BufferGeometry();
                ct(Te, zt, Ke), qe = Promise.resolve(Te), ke.push({ primitive: zt, promise: qe }), ot.push(qe);
              }
            }
            return Promise.all(ot).then(function(Re) {
              if (Ve) {
                var it = Re[0];
                if ((on = function(qn, $n, Pn) {
                  for (var Un = 0, ai = qn.length; Un < ai; Un++) {
                    var pi = qn[Un];
                    if ($n === pi.baseGeometry && Ze(Pn, pi.primitives))
                      return pi.geometry;
                  }
                  return null;
                }(Wn = Ie.multiPassGeometryCache, it, _e)) !== null)
                  return [on.geometry];
                var Ct = new ce.BufferGeometry();
                for (var Nt in Ct.name = it.name, Ct.userData = it.userData, it.attributes)
                  Ct.addAttribute(Nt, it.attributes[Nt]);
                for (var Nt in it.morphAttributes)
                  Ct.morphAttributes[Nt] = it.morphAttributes[Nt];
                for (var Dt = [], Er = 0, gr = 0, Cr = _e.length; gr < Cr; gr++) {
                  for (var mr = Ke[_e[gr].indices], wr = 0, en = mr.count; wr < en; wr++)
                    Dt.push(mr.array[wr]);
                  Ct.addGroup(Er, mr.count, gr), Er += mr.count;
                }
                return Ct.setIndex(Dt), Wn.push({ geometry: Ct, baseGeometry: it, primitives: _e }), [Ct];
              }
              if (Re.length > 1 && ce.BufferGeometryUtils !== void 0) {
                for (gr = 1, Cr = je.length; gr < Cr; gr++)
                  if (je[0].mode !== je[gr].mode)
                    return Re;
                var Wn, on;
                if (on = function(qn, $n) {
                  for (var Pn = 0, Un = qn.length; Pn < Un; Pn++) {
                    var ai = qn[Pn];
                    if (Ze($n, ai.baseGeometries))
                      return ai.geometry;
                  }
                  return null;
                }(Wn = Ie.multiplePrimitivesCache, Re)) {
                  if (on.geometry !== null)
                    return [on.geometry];
                } else if (Ct = ce.BufferGeometryUtils.mergeBufferGeometries(Re, !0), Wn.push({ geometry: Ct, baseGeometries: Re }), Ct !== null)
                  return [Ct];
              }
              return Re;
            });
          });
        }, Bt.prototype.loadMesh = function(je) {
          var _e = this, Ie = (this.json, this.extensions), Ce = this.json.meshes[je];
          return this.getMultiDependencies(["accessor", "material"]).then(function(ke) {
            for (var Ve = Ce.primitives, Ke = [], ot = 0, St = Ve.length; ot < St; ot++)
              Ke[ot] = Ve[ot].material === void 0 ? new ce.MeshStandardMaterial({ color: 16777215, emissive: 0, metalness: 1, roughness: 1, transparent: !1, depthTest: !0, side: ce.FrontSide }) : ke.materials[Ve[ot].material];
            return _e.loadGeometries(Ve).then(function(Vt) {
              for (var zt = Vt.length === 1 && Vt[0].groups.length > 0, Wt = [], qe = 0, Te = Vt.length; qe < Te; qe++) {
                var Re, it = Vt[qe], Ct = Ve[qe], Nt = zt ? Ke : Ke[qe];
                if (Ct.mode === Xe || Ct.mode === ht || Ct.mode === Qt || Ct.mode === void 0)
                  Re = Ce.isSkinnedMesh === !0 ? new ce.SkinnedMesh(it, Nt) : new ce.Mesh(it, Nt), Ct.mode === ht ? Re.drawMode = ce.TriangleStripDrawMode : Ct.mode === Qt && (Re.drawMode = ce.TriangleFanDrawMode);
                else if (Ct.mode === tt)
                  Re = new ce.LineSegments(it, Nt);
                else if (Ct.mode === Tt)
                  Re = new ce.Line(it, Nt);
                else if (Ct.mode === ft)
                  Re = new ce.LineLoop(it, Nt);
                else {
                  if (Ct.mode !== Je)
                    throw new Error("THREE.GLTFLoader: Primitive mode unsupported: " + Ct.mode);
                  Re = new ce.Points(it, Nt);
                }
                Object.keys(Re.geometry.morphAttributes).length > 0 && lr(Re, Ce), Re.name = Ce.name || "mesh_" + je, Vt.length > 1 && (Re.name += "_" + qe), Ce.extras !== void 0 && (Re.userData = Ce.extras), Wt.push(Re);
                for (var Dt = zt ? Re.material : [Re.material], Er = it.attributes.color !== void 0, gr = it.attributes.normal === void 0, Cr = Re.isSkinnedMesh === !0, mr = Object.keys(it.morphAttributes).length > 0, wr = mr && it.morphAttributes.normal !== void 0, en = 0, Wn = Dt.length; en < Wn; en++) {
                  if (Nt = Dt[en], Re.isPoints) {
                    var on = "PointsMaterial:" + Nt.uuid, qn = _e.cache.get(on);
                    qn || (qn = new ce.PointsMaterial(), ce.Material.prototype.copy.call(qn, Nt), qn.color.copy(Nt.color), qn.map = Nt.map, qn.lights = !1, _e.cache.add(on, qn)), Nt = qn;
                  } else if (Re.isLine) {
                    on = "LineBasicMaterial:" + Nt.uuid;
                    var $n = _e.cache.get(on);
                    $n || ($n = new ce.LineBasicMaterial(), ce.Material.prototype.copy.call($n, Nt), $n.color.copy(Nt.color), $n.lights = !1, _e.cache.add(on, $n)), Nt = $n;
                  }
                  if (Er || gr || Cr || mr) {
                    on = "ClonedMaterial:" + Nt.uuid + ":", Nt.isGLTFSpecularGlossinessMaterial && (on += "specular-glossiness:"), Cr && (on += "skinning:"), Er && (on += "vertex-colors:"), gr && (on += "flat-shading:"), mr && (on += "morph-targets:"), wr && (on += "morph-normals:");
                    var Pn = _e.cache.get(on);
                    Pn || (Pn = Nt.isGLTFSpecularGlossinessMaterial ? Ie[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(Nt) : Nt.clone(), Cr && (Pn.skinning = !0), Er && (Pn.vertexColors = ce.VertexColors), gr && (Pn.flatShading = !0), mr && (Pn.morphTargets = !0), wr && (Pn.morphNormals = !0), _e.cache.add(on, Pn)), Nt = Pn;
                  }
                  Dt[en] = Nt, Nt.aoMap && it.attributes.uv2 === void 0 && it.attributes.uv !== void 0 && (console.log("THREE.GLTFLoader: Duplicating UVs to support aoMap."), it.addAttribute("uv2", new ce.BufferAttribute(it.attributes.uv.array, 2))), Nt.isGLTFSpecularGlossinessMaterial && (Re.onBeforeRender = Ie[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms);
                }
                Re.material = zt ? Dt : Dt[0];
              }
              if (Wt.length === 1)
                return Wt[0];
              var Un = new ce.Group();
              for (qe = 0, Te = Wt.length; qe < Te; qe++)
                Un.add(Wt[qe]);
              return Un;
            });
          });
        }, Bt.prototype.loadCamera = function(je) {
          var _e, Ie = this.json.cameras[je], Ce = Ie[Ie.type];
          if (Ce)
            return Ie.type === "perspective" ? _e = new ce.PerspectiveCamera(ce.Math.radToDeg(Ce.yfov), Ce.aspectRatio || 1, Ce.znear || 1, Ce.zfar || 2e6) : Ie.type === "orthographic" && (_e = new ce.OrthographicCamera(Ce.xmag / -2, Ce.xmag / 2, Ce.ymag / 2, Ce.ymag / -2, Ce.znear, Ce.zfar)), Ie.name !== void 0 && (_e.name = Ie.name), Ie.extras && (_e.userData = Ie.extras), Promise.resolve(_e);
          console.warn("THREE.GLTFLoader: Missing camera parameters.");
        }, Bt.prototype.loadSkin = function(je) {
          var _e = this.json.skins[je], Ie = { joints: _e.joints };
          return _e.inverseBindMatrices === void 0 ? Promise.resolve(Ie) : this.getDependency("accessor", _e.inverseBindMatrices).then(function(Ce) {
            return Ie.inverseBindMatrices = Ce, Ie;
          });
        }, Bt.prototype.loadAnimation = function(je) {
          this.json;
          var _e = this.json.animations[je];
          return this.getMultiDependencies(["accessor", "node"]).then(function(Ie) {
            for (var Ce = [], ke = 0, Ve = _e.channels.length; ke < Ve; ke++) {
              var Ke = _e.channels[ke], ot = _e.samplers[Ke.sampler];
              if (ot) {
                var St = Ke.target, Vt = St.node !== void 0 ? St.node : St.id, zt = _e.parameters !== void 0 ? _e.parameters[ot.input] : ot.input, Wt = _e.parameters !== void 0 ? _e.parameters[ot.output] : ot.output, qe = Ie.accessors[zt], Te = Ie.accessors[Wt], Re = Ie.nodes[Vt];
                if (Re) {
                  var it;
                  switch (Re.updateMatrix(), Re.matrixAutoUpdate = !0, Pt[St.path]) {
                    case Pt.weights:
                      it = ce.NumberKeyframeTrack;
                      break;
                    case Pt.rotation:
                      it = ce.QuaternionKeyframeTrack;
                      break;
                    case Pt.position:
                    case Pt.scale:
                    default:
                      it = ce.VectorKeyframeTrack;
                  }
                  var Ct = Re.name ? Re.name : Re.uuid, Nt = ot.interpolation !== void 0 ? yt[ot.interpolation] : ce.InterpolateLinear, Dt = [];
                  Pt[St.path] === Pt.weights ? Re.traverse(function(mr) {
                    mr.isMesh === !0 && mr.morphTargetInfluences && Dt.push(mr.name ? mr.name : mr.uuid);
                  }) : Dt.push(Ct);
                  for (var Er = 0, gr = Dt.length; Er < gr; Er++) {
                    var Cr = new it(Dt[Er] + "." + Pt[St.path], ce.AnimationUtils.arraySlice(qe.array, 0), ce.AnimationUtils.arraySlice(Te.array, 0), Nt);
                    ot.interpolation === "CUBICSPLINE" && (Cr.createInterpolant = function(mr) {
                      return new Pe(this.times, this.values, this.getValueSize() / 3, mr);
                    }, Cr.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = !0), Ce.push(Cr);
                  }
                }
              }
            }
            return Vt = _e.name !== void 0 ? _e.name : "animation_" + je, new ce.AnimationClip(Vt, void 0, Ce);
          });
        }, Bt.prototype.loadNode = function(je) {
          this.json;
          var _e = this.extensions, Ie = this.json.meshReferences, Ce = this.json.meshUses, ke = this.json.nodes[je];
          return this.getMultiDependencies(["mesh", "skin", "camera", "light"]).then(function(Ve) {
            var Ke;
            if (ke.isBone === !0)
              Ke = new ce.Bone();
            else if (ke.mesh !== void 0) {
              var ot = Ve.meshes[ke.mesh];
              if (Ke = ot.clone(), ot.isGroup === !0)
                for (var St = 0, Vt = ot.children.length; St < Vt; St++) {
                  var zt = ot.children[St];
                  zt.material && zt.material.isGLTFSpecularGlossinessMaterial === !0 && (Ke.children[St].onBeforeRender = zt.onBeforeRender);
                }
              else
                ot.material && ot.material.isGLTFSpecularGlossinessMaterial === !0 && (Ke.onBeforeRender = ot.onBeforeRender);
              Ie[ke.mesh] > 1 && (Ke.name += "_instance_" + Ce[ke.mesh]++);
            } else
              ke.camera !== void 0 ? Ke = Ve.cameras[ke.camera] : ke.extensions && ke.extensions[me.KHR_LIGHTS] && ke.extensions[me.KHR_LIGHTS].light !== void 0 ? Ke = _e[me.KHR_LIGHTS].lights[ke.extensions[me.KHR_LIGHTS].light] : Ke = new ce.Object3D();
            if (ke.name !== void 0 && (Ke.name = ce.PropertyBinding.sanitizeNodeName(ke.name)), ke.extras && (Ke.userData = ke.extras), ke.extensions && tr(_e, Ke, ke), ke.matrix !== void 0) {
              var Wt = new ce.Matrix4();
              Wt.fromArray(ke.matrix), Ke.applyMatrix(Wt);
            } else
              ke.translation !== void 0 && Ke.position.fromArray(ke.translation), ke.rotation !== void 0 && Ke.quaternion.fromArray(ke.rotation), ke.scale !== void 0 && Ke.scale.fromArray(ke.scale);
            return Ke;
          });
        }, Bt.prototype.loadScene = function() {
          function je(_e, Ie, Ce, ke, Ve) {
            var Ke = ke[_e], ot = Ce.nodes[_e];
            if (ot.skin !== void 0)
              for (var St = Ke.isGroup === !0 ? Ke.children : [Ke], Vt = 0, zt = St.length; Vt < zt; Vt++) {
                for (var Wt = St[Vt], qe = Ve[ot.skin], Te = [], Re = [], it = 0, Ct = qe.joints.length; it < Ct; it++) {
                  var Nt = qe.joints[it], Dt = ke[Nt];
                  if (Dt) {
                    Te.push(Dt);
                    var Er = new ce.Matrix4();
                    qe.inverseBindMatrices !== void 0 && Er.fromArray(qe.inverseBindMatrices.array, 16 * it), Re.push(Er);
                  } else
                    console.warn('THREE.GLTFLoader: Joint "%s" could not be found.', Nt);
                }
                Wt.bind(new ce.Skeleton(Te, Re), Wt.matrixWorld);
              }
            if (Ie.add(Ke), ot.children) {
              var gr = ot.children;
              for (Vt = 0, zt = gr.length; Vt < zt; Vt++)
                je(gr[Vt], Ke, Ce, ke, Ve);
            }
          }
          return function(_e) {
            var Ie = this.json, Ce = this.extensions, ke = this.json.scenes[_e];
            return this.getMultiDependencies(["node", "skin"]).then(function(Ve) {
              var Ke = new ce.Scene();
              ke.name !== void 0 && (Ke.name = ke.name), ke.extras && (Ke.userData = ke.extras), ke.extensions && tr(Ce, Ke, ke);
              for (var ot = ke.nodes || [], St = 0, Vt = ot.length; St < Vt; St++)
                je(ot[St], Ke, Ie, Ve.nodes, Ve.skins);
              if (ke.extensions && ke.extensions[me.KHR_LIGHTS] && ke.extensions[me.KHR_LIGHTS].light !== void 0) {
                var zt = Ce[me.KHR_LIGHTS].lights;
                Ke.add(zt[ke.extensions[me.KHR_LIGHTS].light]);
              }
              return Ke;
            });
          };
        }(), Ee;
      }();
      var le = ce.MTLLoader, de = ce.OBJLoader, ye = ce.OrbitControls, fe = ce.ColladaLoader, Be = ce.GLTFLoader;
      ie.OrbitControls = ye, ie.MTLLoader = le, ie.OBJLoader = de, ie.ColladaLoader = fe, ie.GLTFLoader = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 }), ie.default = function(ce, le) {
        var de = { animate: !0, name: "" }, ye = [Object.assign(Object.create(de), { fuc: ce, name: le })];
        return function fe() {
          requestAnimationFrame(fe), ye.forEach(function(Be) {
            var Ee = Be.fuc, me = Be.animate;
            me && Ee.call(Be, Date.now());
          });
        }(), ie.default = function(fe, Be) {
          var Ee = Object.assign(Object.create(de), { fuc: fe, name: Be });
          return ye.push(Ee), Ee;
        }, ye[0];
      };
    }, function(ne, ie, ae) {
      var ce, le, de, ye, fe = function() {
        function Se(Ge, Fe) {
          for (var Pe = 0; Pe < Fe.length; Pe++) {
            var Je = Fe[Pe];
            Je.enumerable = Je.enumerable || !1, Je.configurable = !0, "value" in Je && (Je.writable = !0), Object.defineProperty(Ge, Je.key, Je);
          }
        }
        return function(Ge, Fe, Pe) {
          return Fe && Se(Ge.prototype, Fe), Pe && Se(Ge, Pe), Ge;
        };
      }(), Be = ae(5), Ee = function(Se) {
        return Se && Se.__esModule ? Se : { default: Se };
      }(Be), me = function(Se) {
        if (Se && Se.__esModule)
          return Se;
        var Ge = {};
        if (Se != null)
          for (var Fe in Se)
            Object.prototype.hasOwnProperty.call(Se, Fe) && (Ge[Fe] = Se[Fe]);
        return Ge.default = Se, Ge;
      }(ae(0));
      function ge(Se, Ge) {
        if (!(Se instanceof Ge))
          throw new TypeError("Cannot call a class as a function");
      }
      function we(Se, Ge) {
        if (!Se)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !Ge || typeof Ge != "object" && typeof Ge != "function" ? Se : Ge;
      }
      function be(Se, Ge) {
        if (typeof Ge != "function" && Ge !== null)
          throw new TypeError("Super expression must either be null or a function, not " + typeof Ge);
        Se.prototype = Object.create(Ge && Ge.prototype, { constructor: { value: Se, enumerable: !1, writable: !0, configurable: !0 } }), Ge && (Object.setPrototypeOf ? Object.setPrototypeOf(Se, Ge) : Se.__proto__ = Ge);
      }
      var Oe = (le = ce = function(Se) {
        function Ge() {
          return ge(this, Ge), we(this, (Ge.__proto__ || Object.getPrototypeOf(Ge)).apply(this, arguments));
        }
        return be(Ge, Be.Component), fe(Ge, [{ key: "render", value: function() {
          return Ee.default.createElement(Ee.default.Fragment, null, " ");
        } }]), Ge;
      }(), ce.defaultProps = { color: "rgb(30,30,30)", __constructor: "ambientlight" }, le), He = (ye = de = function(Se) {
        function Ge() {
          return ge(this, Ge), we(this, (Ge.__proto__ || Object.getPrototypeOf(Ge)).apply(this, arguments));
        }
        return be(Ge, Be.Component), fe(Ge, [{ key: "render", value: function() {
          return Ee.default.createElement(Ee.default.Fragment, null, " ");
        } }]), Ge;
      }(), de.defaultProps = { color: 16777215, __constructor: "directionligth", position: new me.Vector3(-30, 30, 30), castShadow: !0 }, ye);
      ne.exports = { AmbientLight: Oe, DirectionLight: He };
    }, function(ne, ie, ae) {
      ne.exports = ae(12);
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var we = 0; we < ge.length; we++) {
            var be = ge[we];
            be.enumerable = be.enumerable || !1, be.configurable = !0, "value" in be && (be.writable = !0), Object.defineProperty(me, be.key, be);
          }
        }
        return function(me, ge, we) {
          return ge && Ee(me.prototype, ge), we && Ee(me, we), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), fe = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(we, be) {
            if (!(we instanceof be))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(we, be) {
            if (!we)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !be || typeof be != "object" && typeof be != "function" ? we : be;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, we) {
          if (typeof we != "function" && we !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof we);
          ge.prototype = Object.create(we && we.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), we && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, we) : ge.__proto__ = we);
        }(me, fe.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, we = this.props, be = we.src;
          if (we.texPath, !be)
            return !1;
          new ye.GLTFLoader().load(be, function(Oe) {
            ge.obj3d = Oe.scene;
            var He = {};
            if (Oe.scene.traverse(function(Pe) {
              Pe instanceof ye.Camera && (He.cameras || (He.cameras = []), He.cameras.push(Pe)), Pe instanceof ye.Light && (He.lights || (He.lights = []), He.lights.push(Pe));
            }), He.cameras && He.cameras.length)
              ge.camera = He.cameras[0], ge.camera.position.copy(ge.camera.position.clone().add(new ye.Vector3(0, 0, 0.01)));
            else {
              var Se = ge.computeBoundingBox(Oe.scene), Ge = Se.max, Fe = Se.max.z - Se.min.z;
              ge.camera.position.set(Ge.x, Ge.y, Ge.z + 0.6 * Fe);
            }
            He.lights && He.lights.length, ge.initControl(), ge.props.onLoad && ge.props.onLoad();
          }, function(Oe) {
            ge.props.onProgress && ge.props.onProgress(Oe);
          }, function() {
            console.log("An error happened");
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, fe.default.defaultProps, { loader: "gltf" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var we = 0; we < ge.length; we++) {
            var be = ge[we];
            be.enumerable = be.enumerable || !1, be.configurable = !0, "value" in be && (be.writable = !0), Object.defineProperty(me, be.key, be);
          }
        }
        return function(me, ge, we) {
          return ge && Ee(me.prototype, ge), we && Ee(me, we), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), fe = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(we, be) {
            if (!(we instanceof be))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(we, be) {
            if (!we)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !be || typeof be != "object" && typeof be != "function" ? we : be;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, we) {
          if (typeof we != "function" && we !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof we);
          ge.prototype = Object.create(we && we.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), we && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, we) : ge.__proto__ = we);
        }(me, fe.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, we = this.props, be = we.src;
          if (we.texPath, !be)
            return !1;
          new ye.ColladaLoader().load(be, function(Oe) {
            ge.obj3d = Oe.scene;
            var He = {};
            if (Oe.scene.traverse(function(Fe) {
              Fe instanceof ye.Camera && (He.cameras || (He.cameras = []), He.cameras.push(Fe)), Fe instanceof ye.Light && (He.lights || (He.lights = []), He.lights.push(Fe));
            }), He.cameras && He.cameras.length)
              ge.camera = He.cameras[0], ge.camera.position.copy(ge.camera.position.clone().add(new ye.Vector3(0, 0, 0.01)));
            else {
              var Se = ge.computeBoundingBox(Oe.scene), Ge = Se.max;
              Se.max.z, Se.min.z, ge.camera.position.set(Ge.x, Ge.y, Ge.z);
            }
            He.lights && He.lights.length, ge.initControl(), ge.props.onLoad && ge.props.onLoad();
          }, function(Oe) {
            ge.props.onProgress && ge.props.onProgress(Oe);
          }, function() {
            console.log("An error happened");
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, fe.default.defaultProps, { loader: "collada" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var we = 0; we < ge.length; we++) {
            var be = ge[we];
            be.enumerable = be.enumerable || !1, be.configurable = !0, "value" in be && (be.writable = !0), Object.defineProperty(me, be.key, be);
          }
        }
        return function(me, ge, we) {
          return ge && Ee(me.prototype, ge), we && Ee(me, we), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), fe = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(we, be) {
            if (!(we instanceof be))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(we, be) {
            if (!we)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !be || typeof be != "object" && typeof be != "function" ? we : be;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, we) {
          if (typeof we != "function" && we !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof we);
          ge.prototype = Object.create(we && we.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), we && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, we) : ge.__proto__ = we);
        }(me, fe.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, we = this.props, be = we.src, Oe = we.mtl, He = we.texPath;
          if (!be || !Oe)
            return !1;
          var Se = new ye.MTLLoader(), Ge = new ye.OBJLoader();
          Se.setTexturePath(He), Se.load(Oe, function(Fe) {
            Fe.preload(), Ge.setMaterials(Fe).load(be, function(Pe) {
              var Je = ge.computeBoundingBox(Pe), tt = Je.max, ft = Je.max.z - Je.min.z;
              ge.camera.position.set(0, 0, tt.z + 1.5 * ft), ge.initControl(), ge.obj3d = Pe, ge.props.onLoad && ge.props.onLoad();
            }, function(Pe) {
              ge.props.onProgress && ge.props.onProgress(Pe);
            });
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, fe.default.defaultProps, { loader: "objmtl" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var we = 0; we < ge.length; we++) {
            var be = ge[we];
            be.enumerable = be.enumerable || !1, be.configurable = !0, "value" in be && (be.writable = !0), Object.defineProperty(me, be.key, be);
          }
        }
        return function(me, ge, we) {
          return ge && Ee(me.prototype, ge), we && Ee(me, we), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), fe = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(we, be) {
            if (!(we instanceof be))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(we, be) {
            if (!we)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !be || typeof be != "object" && typeof be != "function" ? we : be;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, we) {
          if (typeof we != "function" && we !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof we);
          ge.prototype = Object.create(we && we.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), we && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, we) : ge.__proto__ = we);
        }(me, fe.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, we = this.props, be = we.src;
          if (we.texPath, !be)
            return !1;
          new ye.OBJLoader().load(be, function(Oe) {
            var He = ge.computeBoundingBox(Oe), Se = He.max, Ge = He.max.z - He.min.z;
            ge.camera.position.set(0, 0, Se.z + 1.5 * Ge), ge.initControl(), ge.obj3d = Oe, ge.props.onLoad && ge.props.onLoad();
          }, function(Oe) {
            ge.props.onProgress && ge.props.onProgress(Oe);
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, fe.default.defaultProps, { loader: "obj" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var we = 0; we < ge.length; we++) {
            var be = ge[we];
            be.enumerable = be.enumerable || !1, be.configurable = !0, "value" in be && (be.writable = !0), Object.defineProperty(me, be.key, be);
          }
        }
        return function(me, ge, we) {
          return ge && Ee(me.prototype, ge), we && Ee(me, we), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), fe = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(we, be) {
            if (!(we instanceof be))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(we, be) {
            if (!we)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !be || typeof be != "object" && typeof be != "function" ? we : be;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, we) {
          if (typeof we != "function" && we !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof we);
          ge.prototype = Object.create(we && we.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), we && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, we) : ge.__proto__ = we);
        }(me, fe.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, we = this.props, be = we.src, Oe = we.onProgress, He = we.onLoad, Se = we.texPath, Ge = new ye.JSONLoader();
          Ge.setTexturePath(Se), Ge.load(be, function(Fe, Pe) {
            var Je = new ye.Mesh(Fe, Pe);
            Fe.computeBoundingBox();
            var tt = Fe.boundingSphere, ft = tt.center, Tt = tt.radius, Xe = ft.clone().multiplyScalar(-1);
            Je.geometry.applyMatrix(new ye.Matrix4().makeTranslation(Xe.x, Xe.y, Xe.z));
            var ht = ge.computeBoundingBox(Je).max;
            ge.camera.position.set(ht.x, ht.y, ht.z), ge.camera.position.copy(Xe.clone().add(new ye.Vector3(0, 0, 1.666 * Tt))), ge.initControl(), ge.obj3d = Je, He && He();
          }, function(Fe) {
            Oe && Oe(Fe);
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, fe.default.defaultProps, { loader: "json" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      /*
      object-assign
      (c) Sindre Sorhus
      @license MIT
      */
      var ce = Object.getOwnPropertySymbols, le = Object.prototype.hasOwnProperty, de = Object.prototype.propertyIsEnumerable;
      ne.exports = function() {
        try {
          if (!Object.assign)
            return !1;
          var ye = new String("abc");
          if (ye[5] = "de", Object.getOwnPropertyNames(ye)[0] === "5")
            return !1;
          for (var fe = {}, Be = 0; Be < 10; Be++)
            fe["_" + String.fromCharCode(Be)] = Be;
          if (Object.getOwnPropertyNames(fe).map(function(me) {
            return fe[me];
          }).join("") !== "0123456789")
            return !1;
          var Ee = {};
          return "abcdefghijklmnopqrst".split("").forEach(function(me) {
            Ee[me] = me;
          }), Object.keys(Object.assign({}, Ee)).join("") === "abcdefghijklmnopqrst";
        } catch {
          return !1;
        }
      }() ? Object.assign : function(ye, fe) {
        for (var Be, Ee, me = function(Oe) {
          if (Oe == null)
            throw new TypeError("Object.assign cannot be called with null or undefined");
          return Object(Oe);
        }(ye), ge = 1; ge < arguments.length; ge++) {
          for (var we in Be = Object(arguments[ge]))
            le.call(Be, we) && (me[we] = Be[we]);
          if (ce) {
            Ee = ce(Be);
            for (var be = 0; be < Ee.length; be++)
              de.call(Be, Ee[be]) && (me[Ee[be]] = Be[Ee[be]]);
          }
        }
        return me;
      };
    }, function(ne, ie, ae) {
      /** @license React v16.7.0
      * react.production.min.js
      *
      * Copyright (c) Facebook, Inc. and its affiliates.
      *
      * This source code is licensed under the MIT license found in the
      * LICENSE file in the root directory of this source tree.
      */
      var ce = ae(11), le = typeof Symbol == "function" && Symbol.for, de = le ? Symbol.for("react.element") : 60103, ye = le ? Symbol.for("react.portal") : 60106, fe = le ? Symbol.for("react.fragment") : 60107, Be = le ? Symbol.for("react.strict_mode") : 60108, Ee = le ? Symbol.for("react.profiler") : 60114, me = le ? Symbol.for("react.provider") : 60109, ge = le ? Symbol.for("react.context") : 60110, we = le ? Symbol.for("react.concurrent_mode") : 60111, be = le ? Symbol.for("react.forward_ref") : 60112, Oe = le ? Symbol.for("react.suspense") : 60113, He = le ? Symbol.for("react.memo") : 60115, Se = le ? Symbol.for("react.lazy") : 60116, Ge = typeof Symbol == "function" && Symbol.iterator;
      function Fe(gt) {
        for (var Ut = arguments.length - 1, Ze = "https://reactjs.org/docs/error-decoder.html?invariant=" + gt, rt = 0; rt < Ut; rt++)
          Ze += "&args[]=" + encodeURIComponent(arguments[rt + 1]);
        (function($e, Bt, ct, je, _e, Ie, Ce, ke) {
          if (!$e) {
            if ($e = void 0, Bt === void 0)
              $e = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            else {
              var Ve = [ct, je, _e, Ie, Ce, ke], Ke = 0;
              ($e = Error(Bt.replace(/%s/g, function() {
                return Ve[Ke++];
              }))).name = "Invariant Violation";
            }
            throw $e.framesToPop = 1, $e;
          }
        })(!1, "Minified React error #" + gt + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", Ze);
      }
      var Pe = { isMounted: function() {
        return !1;
      }, enqueueForceUpdate: function() {
      }, enqueueReplaceState: function() {
      }, enqueueSetState: function() {
      } }, Je = {};
      function tt(gt, Ut, Ze) {
        this.props = gt, this.context = Ut, this.refs = Je, this.updater = Ze || Pe;
      }
      function ft() {
      }
      function Tt(gt, Ut, Ze) {
        this.props = gt, this.context = Ut, this.refs = Je, this.updater = Ze || Pe;
      }
      tt.prototype.isReactComponent = {}, tt.prototype.setState = function(gt, Ut) {
        typeof gt != "object" && typeof gt != "function" && gt != null && Fe("85"), this.updater.enqueueSetState(this, gt, Ut, "setState");
      }, tt.prototype.forceUpdate = function(gt) {
        this.updater.enqueueForceUpdate(this, gt, "forceUpdate");
      }, ft.prototype = tt.prototype;
      var Xe = Tt.prototype = new ft();
      Xe.constructor = Tt, ce(Xe, tt.prototype), Xe.isPureReactComponent = !0;
      var ht = { current: null, currentDispatcher: null }, Qt = Object.prototype.hasOwnProperty, Gt = { key: !0, ref: !0, __self: !0, __source: !0 };
      function pt(gt, Ut, Ze) {
        var rt = void 0, $e = {}, Bt = null, ct = null;
        if (Ut != null)
          for (rt in Ut.ref !== void 0 && (ct = Ut.ref), Ut.key !== void 0 && (Bt = "" + Ut.key), Ut)
            Qt.call(Ut, rt) && !Gt.hasOwnProperty(rt) && ($e[rt] = Ut[rt]);
        var je = arguments.length - 2;
        if (je === 1)
          $e.children = Ze;
        else if (1 < je) {
          for (var _e = Array(je), Ie = 0; Ie < je; Ie++)
            _e[Ie] = arguments[Ie + 2];
          $e.children = _e;
        }
        if (gt && gt.defaultProps)
          for (rt in je = gt.defaultProps)
            $e[rt] === void 0 && ($e[rt] = je[rt]);
        return { $$typeof: de, type: gt, key: Bt, ref: ct, props: $e, _owner: ht.current };
      }
      function xt(gt) {
        return typeof gt == "object" && gt !== null && gt.$$typeof === de;
      }
      var Yt = /\/+/g, Jt = [];
      function Ht(gt, Ut, Ze, rt) {
        if (Jt.length) {
          var $e = Jt.pop();
          return $e.result = gt, $e.keyPrefix = Ut, $e.func = Ze, $e.context = rt, $e.count = 0, $e;
        }
        return { result: gt, keyPrefix: Ut, func: Ze, context: rt, count: 0 };
      }
      function Lt(gt) {
        gt.result = null, gt.keyPrefix = null, gt.func = null, gt.context = null, gt.count = 0, 10 > Jt.length && Jt.push(gt);
      }
      function Pt(gt, Ut, Ze) {
        return gt == null ? 0 : function rt($e, Bt, ct, je) {
          var _e = typeof $e;
          _e !== "undefined" && _e !== "boolean" || ($e = null);
          var Ie = !1;
          if ($e === null)
            Ie = !0;
          else
            switch (_e) {
              case "string":
              case "number":
                Ie = !0;
                break;
              case "object":
                switch ($e.$$typeof) {
                  case de:
                  case ye:
                    Ie = !0;
                }
            }
          if (Ie)
            return ct(je, $e, Bt === "" ? "." + yt($e, 0) : Bt), 1;
          if (Ie = 0, Bt = Bt === "" ? "." : Bt + ":", Array.isArray($e))
            for (var Ce = 0; Ce < $e.length; Ce++) {
              var ke = Bt + yt(_e = $e[Ce], Ce);
              Ie += rt(_e, ke, ct, je);
            }
          else if (ke = $e === null || typeof $e != "object" ? null : typeof (ke = Ge && $e[Ge] || $e["@@iterator"]) == "function" ? ke : null, typeof ke == "function")
            for ($e = ke.call($e), Ce = 0; !(_e = $e.next()).done; )
              Ie += rt(_e = _e.value, ke = Bt + yt(_e, Ce++), ct, je);
          else
            _e === "object" && Fe("31", (ct = "" + $e) == "[object Object]" ? "object with keys {" + Object.keys($e).join(", ") + "}" : ct, "");
          return Ie;
        }(gt, "", Ut, Ze);
      }
      function yt(gt, Ut) {
        return typeof gt == "object" && gt !== null && gt.key != null ? function(Ze) {
          var rt = { "=": "=0", ":": "=2" };
          return "$" + ("" + Ze).replace(/[=:]/g, function($e) {
            return rt[$e];
          });
        }(gt.key) : Ut.toString(36);
      }
      function kt(gt, Ut) {
        gt.func.call(gt.context, Ut, gt.count++);
      }
      function $t(gt, Ut, Ze) {
        var rt = gt.result, $e = gt.keyPrefix;
        gt = gt.func.call(gt.context, Ut, gt.count++), Array.isArray(gt) ? Le(gt, rt, Ze, function(Bt) {
          return Bt;
        }) : gt != null && (xt(gt) && (gt = function(Bt, ct) {
          return { $$typeof: de, type: Bt.type, key: ct, ref: Bt.ref, props: Bt.props, _owner: Bt._owner };
        }(gt, $e + (!gt.key || Ut && Ut.key === gt.key ? "" : ("" + gt.key).replace(Yt, "$&/") + "/") + Ze)), rt.push(gt));
      }
      function Le(gt, Ut, Ze, rt, $e) {
        var Bt = "";
        Ze != null && (Bt = ("" + Ze).replace(Yt, "$&/") + "/"), Pt(gt, $t, Ut = Ht(Ut, Bt, rt, $e)), Lt(Ut);
      }
      var or = { Children: { map: function(gt, Ut, Ze) {
        if (gt == null)
          return gt;
        var rt = [];
        return Le(gt, rt, null, Ut, Ze), rt;
      }, forEach: function(gt, Ut, Ze) {
        if (gt == null)
          return gt;
        Pt(gt, kt, Ut = Ht(null, null, Ut, Ze)), Lt(Ut);
      }, count: function(gt) {
        return Pt(gt, function() {
          return null;
        }, null);
      }, toArray: function(gt) {
        var Ut = [];
        return Le(gt, Ut, null, function(Ze) {
          return Ze;
        }), Ut;
      }, only: function(gt) {
        return xt(gt) || Fe("143"), gt;
      } }, createRef: function() {
        return { current: null };
      }, Component: tt, PureComponent: Tt, createContext: function(gt, Ut) {
        return Ut === void 0 && (Ut = null), (gt = { $$typeof: ge, _calculateChangedBits: Ut, _currentValue: gt, _currentValue2: gt, _threadCount: 0, Provider: null, Consumer: null }).Provider = { $$typeof: me, _context: gt }, gt.Consumer = gt;
      }, forwardRef: function(gt) {
        return { $$typeof: be, render: gt };
      }, lazy: function(gt) {
        return { $$typeof: Se, _ctor: gt, _status: -1, _result: null };
      }, memo: function(gt, Ut) {
        return { $$typeof: He, type: gt, compare: Ut === void 0 ? null : Ut };
      }, Fragment: fe, StrictMode: Be, Suspense: Oe, createElement: pt, cloneElement: function(gt, Ut, Ze) {
        gt == null && Fe("267", gt);
        var rt = void 0, $e = ce({}, gt.props), Bt = gt.key, ct = gt.ref, je = gt._owner;
        if (Ut != null) {
          Ut.ref !== void 0 && (ct = Ut.ref, je = ht.current), Ut.key !== void 0 && (Bt = "" + Ut.key);
          var _e = void 0;
          for (rt in gt.type && gt.type.defaultProps && (_e = gt.type.defaultProps), Ut)
            Qt.call(Ut, rt) && !Gt.hasOwnProperty(rt) && ($e[rt] = Ut[rt] === void 0 && _e !== void 0 ? _e[rt] : Ut[rt]);
        }
        if ((rt = arguments.length - 2) === 1)
          $e.children = Ze;
        else if (1 < rt) {
          _e = Array(rt);
          for (var Ie = 0; Ie < rt; Ie++)
            _e[Ie] = arguments[Ie + 2];
          $e.children = _e;
        }
        return { $$typeof: de, type: gt.type, key: Bt, ref: ct, props: $e, _owner: je };
      }, createFactory: function(gt) {
        var Ut = pt.bind(null, gt);
        return Ut.type = gt, Ut;
      }, isValidElement: xt, version: "16.7.0", unstable_ConcurrentMode: we, unstable_Profiler: Ee, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: ht, assign: ce } }, tr = { default: or }, lr = tr && or || tr;
      ne.exports = lr.default || lr;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce = ae(1);
      Object.defineProperty(ie, "Model", { enumerable: !0, get: function() {
        return ge(ce).default;
      } });
      var le = ae(10);
      Object.defineProperty(ie, "JSONModel", { enumerable: !0, get: function() {
        return ge(le).default;
      } });
      var de = ae(9);
      Object.defineProperty(ie, "OBJModel", { enumerable: !0, get: function() {
        return ge(de).default;
      } });
      var ye = ae(8);
      Object.defineProperty(ie, "MTLModel", { enumerable: !0, get: function() {
        return ge(ye).default;
      } });
      var fe = ae(7);
      Object.defineProperty(ie, "DAEModel", { enumerable: !0, get: function() {
        return ge(fe).default;
      } });
      var Be = ae(6);
      Object.defineProperty(ie, "GLTFModel", { enumerable: !0, get: function() {
        return ge(Be).default;
      } });
      var Ee = ae(3);
      Object.defineProperty(ie, "Tick", { enumerable: !0, get: function() {
        return ge(Ee).default;
      } });
      var me = ae(4);
      function ge(we) {
        return we && we.__esModule ? we : { default: we };
      }
      Object.defineProperty(ie, "DirectionLight", { enumerable: !0, get: function() {
        return me.DirectionLight;
      } }), Object.defineProperty(ie, "AmbientLight", { enumerable: !0, get: function() {
        return me.AmbientLight;
      } });
    }]);
  });
})(react3dViewer);
const StyledBagItem = styled$1.div`
  ${(Q) => {
  const {
    isDragging: ee
  } = Q;
  return css`
      width: 6em;
      height: 6em;
      border: 0 !important;
      opacity: ${ee ? 0 : 1};
      cursor: grab;
      img,
      video {
        max-width: 100%;
      }
    `;
}}
`;
StyledBagItem.displayName = "StyledBagItem";
const PresentationalBagItem = ({
  drag: Q,
  isDragging: ee,
  item: ne
}) => {
  const {
    setSelItem: ie
  } = useStore(), ae = useRef(null), ce = (le) => {
    switch (le.detail) {
      case 1:
        window && window.openInWebaverse ? window.openInWebaverse(ne) : ie(ne);
        break;
    }
  };
  return useEffect(() => {
    const le = setInterval(() => {
      const de = ae && ae.current && ae.current.$container;
      de && de.children && de.children.length > 1 && de.removeChild(de.firstChild);
    }, 1);
    return () => {
      clearInterval(le);
    };
  }, []), ne && /* @__PURE__ */ jsxs(StyledBagItem, {
    className: "flex items-center justify-center class_model",
    ref: Q,
    isDragging: ee,
    onClick: ce,
    children: [isImage(ne && ne.url) && /* @__PURE__ */ jsx("img", {
      className: "w-full h-full",
      src: ne.url
    }), isMedia(ne && ne.url) && /* @__PURE__ */ jsx("video", {
      className: "w-full h-full",
      src: ne.url,
      autoPlay: !0,
      loop: !0,
      muted: !0
    }), isModel(ne && ne.url) && /* @__PURE__ */ jsx(react3dViewer.exports.GLTFModel, {
      ref: ae,
      width: 96,
      height: 96,
      src: ne.url,
      enabled: !1,
      position: {
        x: -0.15,
        y: -0.3,
        z: -0.3
      }
    })]
  });
}, BagItem = ({
  item: Q,
  isForTrade: ee,
  index: ne,
  tradeBoxes: ie,
  updateTradeBoxes: ae,
  tradeLayer: ce
}) => {
  const le = useRef(null), {
    plugActor: de,
    tradeData: ye,
    localUser: fe
  } = useStore();
  Q || (Q = {}), Q.isForTrade = ee;
  const [{
    handlerId: Be
  }, Ee] = useDrop({
    accept: itemTypes.LAYER1,
    canDrop(be, Oe) {
      return ce !== "remote";
    },
    collect(be) {
      return {
        handlerId: be.getHandlerId()
      };
    },
    drop(be, Oe) {
      if (!le.current || Q.canister_id || !ye)
        return;
      const He = be.index, Se = ne, Ge = clone(be.item);
      Ge.slot = Se;
      const Fe = clone(be.tradeBoxes), Pe = clone(Q);
      Pe.slot = He;
      const Je = clone(ie);
      console.log("cloneDragTradeItem: ", Ge), be.tradeLayer === "inventory" && ce === "local" && (async () => {
        const tt = await de.add_item_to_trade(fe, ye.id, Ge);
        console.log("add_item_to_trade res: ", tt);
      })(), be.tradeLayer === "local" && ce === "inventory" && (async () => {
        const tt = await de.remove_item_from_trade(fe, ye.id, Ge.id);
        console.log("remove_item_from_trade res: ", tt);
      })(), ce === be.tradeLayer ? (Fe[He].item = Pe, Fe[Se].item = Ge, ae(Fe)) : (Fe[He].item = Pe, Je[Se].item = Ge, be.updateTradeBoxes(Fe), ae(Je));
    }
  }), [{
    isDragging: me
  }, ge] = useDrag({
    type: itemTypes.LAYER1,
    canDrag: !!Q.canister_id,
    item: () => ({
      index: ne,
      tradeBoxes: ie,
      updateTradeBoxes: ae,
      item: Q,
      tradeLayer: ce
    }),
    collect: (be) => ({
      isDragging: be.isDragging()
    })
  }), we = me ? 0 : 1;
  return ge(Ee(le)), /* @__PURE__ */ jsx("div", {
    className: classnames({
      opacity: we
    }),
    ref: le,
    "data-handler-id": Be,
    children: /* @__PURE__ */ jsx(PresentationalBagItem, {
      drag: ge,
      isDragging: me,
      item: Q
    })
  });
}, Loading = () => {
  const {
    loading: Q
  } = useStore();
  return /* @__PURE__ */ jsx("div", {
    className: classnames("absolute top-0 bottom-0 left-0 right-0 z-10 flex justify-center items-center opacity-30 bg-white", {
      hidden: !Q
    }),
    children: /* @__PURE__ */ jsx("div", {
      className: "w-32 h-32 border-8 rounded-full border-t-green-900 animate-spin"
    })
  });
}, ItemDetails = () => {
  const {
    selItem: Q
  } = useStore(), ee = useRef(null);
  return useEffect(() => {
    const ne = setInterval(() => {
      var ae, ce;
      const ie = (ae = ee == null ? void 0 : ee.current) == null ? void 0 : ae.$container;
      ((ce = ie == null ? void 0 : ie.children) == null ? void 0 : ce.length) > 1 && ie.removeChild(ie.firstChild);
    }, 1);
    return () => {
      clearInterval(ne);
    };
  }, []), Q != null && Q.url ? /* @__PURE__ */ jsxs("div", {
    className: "absolute bottom-0 right-0 z-10 flex flex-col w-1/4 gap-1 p-4 bg-black-100",
    children: [/* @__PURE__ */ jsxs("div", {
      className: "flex flex-col gap-1 font-bold text-red-900",
      children: [/* @__PURE__ */ jsx("div", {
        children: Q == null ? void 0 : Q.collection
      }), /* @__PURE__ */ jsx("div", {
        children: "#7849"
      })]
    }), /* @__PURE__ */ jsxs("div", {
      className: "flex items-center justify-center w-full p-4 bg-black",
      children: [isImage(Q == null ? void 0 : Q.url) && /* @__PURE__ */ jsx("img", {
        className: "w-4/5",
        src: Q.url
      }), isMedia(Q == null ? void 0 : Q.url) && /* @__PURE__ */ jsx("video", {
        className: "w-4/5",
        src: Q.url,
        autoPlay: !0,
        loop: !0,
        muted: !0
      }), isModel(Q == null ? void 0 : Q.url) && /* @__PURE__ */ jsx(react3dViewer.exports.GLTFModel, {
        ref: ee,
        width: 192,
        height: 192,
        src: Q.url,
        enabled: !1,
        position: {
          x: -0.15,
          y: -0.3,
          z: -0.3
        }
      })]
    })]
  }) : /* @__PURE__ */ jsx(Fragment, {});
}, url = new URL(window.location.href), tradeId = url.searchParams.get("tradeId");
tradeId && console.log("I'm joiner. tradeId: ", tradeId);
let inventoryTokens = [], partner;
const updatePartner = (Q) => {
  partner = Q;
}, Trade = () => {
  const {
    authenticated: Q,
    principal: ee,
    login: ne,
    agent: ie
  } = usePlug(), {
    isCreator: ae,
    setIsCreator: ce,
    tradeData: le,
    setTradeData: de,
    remoteBoxes: ye,
    setRemoteBoxes: fe,
    localBoxes: Be,
    setLocalBoxes: Ee,
    inventoryBoxes: me,
    setInventoryBoxes: ge,
    plugActor: we,
    setPlugActor: be,
    tradeStarted: Oe,
    setTradeStarted: He,
    accepted: Se,
    setAccepted: Ge,
    curPage: Fe,
    setCurPage: Pe,
    setLoading: Je,
    localUser: tt,
    setLocalUser: ft,
    curTradeId: Tt,
    setCurTradeId: Xe
  } = useStore(), ht = ee ? window.ic.plug.principalId : "<none>";
  useEffect(() => {
    (async () => {
      if (!ee)
        return;
      Je(!0);
      const Ht = window.ic.plug.principalId;
      console.log("local user: ", Ht), ft(Ht);
      const Lt = Object.values(await getUserTokens({
        agent: ie,
        user: Ht
      }));
      inventoryTokens = clone(Lt), ge(getInventoryBoxes(inventoryTokens)), tradeId && Gt(), Je(!1);
    })();
  }, [ee]), useEffect(() => {
    (async () => {
      if (!we || !tt)
        return;
      Je(!0), console.log("plugActor: ", we);
      let Ht;
      tradeId ? (console.log("***** TRADE DETECTED *****"), Ht = await we.get_trade_by_id(tradeId), ce(!1)) : (Ht = await we.create_trade(), ce(!0)), console.log("trade: ", Ht), Xe(Ht.id), de(Ht), He(!0), Je(!1);
    })();
  }, [we]), useEffect(() => {
    var or, tr;
    const Ht = (tr = (or = window == null ? void 0 : window.ic) == null ? void 0 : or.plug) == null ? void 0 : tr.principalId;
    if (!Ht)
      return;
    const Lt = Principal$3.fromUint8Array(le.host._arr).toText(), Pt = Principal$3.fromUint8Array(le.guest._arr).toText(), yt = Ht === Lt, kt = Ht === Pt;
    let $t = [];
    if (yt)
      $t = le.host_data;
    else if (kt)
      $t = le.guest_data;
    else
      throw new Error("User is not host or guest");
    if (Be.length === $t.length)
      return;
    let Le = !1;
    for (let lr = 0; lr < Be.length; lr++) {
      const gt = Be[lr];
      if ($t.findIndex((Ze) => Ze.id === gt.id) === -1 && gt.item) {
        const Ze = gt.item;
        console.log("***** ADDING ITEM", Ze), console.log("***** tradeData", le);
        const rt = Number(Ze.index);
        console.log("tradeData.id, {name: item.collection, canister: Principal.fromText(item.canister), token_id"), console.log(le.id, {
          name: Ze.metadata.name,
          canister_id: Ze.canister,
          token_id: rt
        }), we.add_item_to_trade(le.id, {
          name: Ze.collection,
          canister_id: Principal$3.fromText(Ze.canister),
          token_id: rt
        }).then(($e) => {
          console.log("tradeResponse", $e), updateTradeData($e[0]);
        }), Le = !0;
      }
    }
    if (!Le) {
      let lr = !1;
      for (let gt = 0; gt < $t.length; gt++) {
        const Ut = $t[gt];
        if (Be.findIndex((rt) => rt.id === Ut.id) === -1)
          return we.remove_item_from_trade(tradeId, Ut.id), lr = !0;
      }
      if (!lr)
        throw new Error("something went wrong");
    }
  }, [Be]), useEffect(() => {
    if (!we || !le || partner)
      return;
    const Ht = setInterval(async () => {
      const Lt = await we.get_trade_by_id(le.id);
      console.log("rtTrade: ", Lt);
      const Pt = Principal$3.fromUint8Array(Lt[0].guest._arr).toText();
      Pt !== null && Pt !== "" && Pt !== nullPrincipal && Pt !== nullPartner && (updatePartner(Pt), clearInterval(Ht), console.log("Trade partner found! guest: ", Pt));
    }, 1e3);
  }, [we, le]), useEffect(() => {
    (async () => {
      if (!we && !Tt && !le)
        return;
      Je(!0);
      const Ht = le.host, Lt = le.guest;
      if (!ae && Lt !== nullPrincipalId && Lt !== tt)
        return console.error("Trade already initialized to another wallet: ", Lt);
      if (ae && Lt !== nullPrincipalId && Lt !== tt && Lt !== Ht && Lt !== partner && (console.log("trade partner found(guest): ", Lt), updatePartner(Lt)), !ae && Ht !== nullPrincipalId && Ht !== tt && Ht !== partner && (console.log("trade partner found(host): ", Ht), await we.join_trade(Tt), updatePartner(Ht)), ae) {
        const Pt = getRemoteBoxes(le.guest_data);
        console.log("guest_data: ", le.guest_data), console.log("remoteBoxes: ", Pt), fe(Pt);
      } else {
        const Pt = getRemoteBoxes(le.host_data);
        console.log("host_data: ", le.host_data), console.log("remoteBoxes: ", Pt), fe(Pt);
      }
      Je(!1);
    })();
  }, [le]), useEffect(() => {
    if (!we)
      return;
    const Ht = setInterval(async () => {
      const Lt = await we.get_trade_by_id(Tt);
      de(Lt);
    }, 10);
    return () => {
      clearInterval(Ht);
    };
  }, [Tt]), useEffect(() => {
    if (!we || !le || !partner)
      return;
    const Ht = setInterval(async () => {
      const Lt = await we.get_trade_by_id(le.id);
      if (JSON.stringify(Lt[0]) === JSON.stringify(le))
        return;
      console.log("updated!"), updateTradeData(Lt[0]);
      const Pt = window.ic.plug.principalId.toText(), yt = Principal$3.fromUint8Array(Lt[0].host._arr).toText(), kt = Principal$3.fromUint8Array(Lt[0].guest._arr).toText();
      if (!(Pt === yt) && !(Pt === kt))
        throw new Error("User is not in this trade!");
      if (yt !== le.host)
        throw new Error("host changed!");
      if (kt !== le.guest)
        throw new Error("guest changed!");
    }, 1e3);
    return () => clearInterval(Ht);
  }, [we, le, partner]);
  const Qt = async () => {
    console.log("connecting..."), ne();
  }, Gt = async () => {
    be(trade_canister);
  }, pt = () => {
    !we || (we.accept(le.id), Ge(!0), console.log("Trade accepted!"));
  }, xt = () => {
    !we || (we.cancel(le.id), Ge(!1), console.log("Trade canceled!"));
  }, Yt = () => {
    Fe <= 1 || Pe(Fe - 1);
  }, Jt = () => {
    const Ht = Math.ceil(inventoryBoxNum / pageBoxNum);
    Fe >= Ht || Pe(Fe + 1);
  };
  return /* @__PURE__ */ jsx("div", {
    className: "w-full h-full",
    children: /* @__PURE__ */ jsxs(DndProvider, {
      backend: HTML5Backend,
      children: [/* @__PURE__ */ jsx(ItemDetails, {}), /* @__PURE__ */ jsxs("div", {
        className: "absolute top-0 left-0 w-3/4 h-full",
        children: [/* @__PURE__ */ jsx(Loading, {}), !Q && /* @__PURE__ */ jsx(Frame, {
          className: "absolute w-full h-full",
          children: /* @__PURE__ */ jsx("div", {
            className: "flex items-center justify-center w-full h-full",
            children: /* @__PURE__ */ jsx(Button$1, {
              variant: "contained",
              onClick: Qt,
              children: "Connect"
            })
          })
        }), Q && !le && /* @__PURE__ */ jsx(Frame, {
          className: "absolute w-full",
          children: /* @__PURE__ */ jsxs("div", {
            className: "flex items-center justify-center w-full h-full",
            children: [!Oe && /* @__PURE__ */ jsx(Button$1, {
              variant: "contained",
              onClick: Gt,
              children: "Start Trade"
            }), Oe && !le && /* @__PURE__ */ jsx(Button$1, {
              variant: "disabled",
              children: "Starting..."
            })]
          })
        }), /* @__PURE__ */ jsxs("div", {
          className: "absolute w-full h-full overflow-auto",
          children: [Q && le && /* @__PURE__ */ jsxs(React__default.Fragment, {
            children: [/* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-col gap-2",
                children: [/* @__PURE__ */ jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [/* @__PURE__ */ jsx("div", {
                    className: "text-2xl",
                    children: "Their Trade"
                  }), /* @__PURE__ */ jsx("div", {
                    className: "text-xl text-blue-900",
                    children: ae && le.guest_accept || !ae && le.host_accept ? "TRADE ACCEPTED" : ""
                  })]
                }), /* @__PURE__ */ jsx("div", {
                  className: "flex flex-wrap gap-3",
                  children: ye.map((Ht, Lt) => /* @__PURE__ */ jsx(RemoteBox$1, {
                    children: /* @__PURE__ */ jsx(BagItem, {
                      item: clone(Ht.item),
                      index: Lt,
                      tradeBoxes: clone(ye),
                      updateTradeBoxes: fe,
                      tradeLayer: "remote"
                    }, `remote_${Ht.id}`)
                  }, Ht.id))
                })]
              })
            }), /* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-col gap-2",
                children: [/* @__PURE__ */ jsx("div", {
                  className: "text-2xl",
                  children: "Your Trade"
                }), /* @__PURE__ */ jsx("div", {
                  className: "flex flex-wrap gap-3",
                  children: Be.map((Ht, Lt) => /* @__PURE__ */ jsx(BagBox$1, {
                    children: /* @__PURE__ */ jsx(BagItem, {
                      isForTrade: !0,
                      item: clone(Ht.item),
                      index: Lt,
                      tradeBoxes: clone(Be),
                      updateTradeBoxes: Ee,
                      tradeLayer: "local"
                    }, `local_${Ht.id}`)
                  }, Ht.id))
                })]
              })
            }), /* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-wrap items-center justify-center w-full h-full gap-8",
                children: [/* @__PURE__ */ jsx(Button$1, {
                  variant: "contained",
                  onClick: pt,
                  disabled: Se || !existItems(Be),
                  color: "success",
                  children: "Accept"
                }), /* @__PURE__ */ jsxs("div", {
                  className: "flex items-center justify-center gap-2",
                  children: [/* @__PURE__ */ jsx("label", {
                    htmlFor: "icp",
                    children: "ICP: "
                  }), /* @__PURE__ */ jsx("input", {
                    className: "w-32 p-0.5 text-xl border rounded opacity-30 bg-amber-900",
                    id: "icp",
                    type: "number"
                  })]
                }), /* @__PURE__ */ jsx(Button$1, {
                  variant: "contained",
                  onClick: xt,
                  disabled: !Se && existItems(Be),
                  color: "error",
                  children: "Cancel"
                })]
              })
            })]
          }), ee && /* @__PURE__ */ jsx(Frame, {
            children: /* @__PURE__ */ jsxs("div", {
              className: "flex flex-col gap-2",
              children: [/* @__PURE__ */ jsxs("div", {
                className: "flex items-center justify-between",
                children: [/* @__PURE__ */ jsx("div", {
                  className: "text-2xl",
                  children: "Inventory"
                }), /* @__PURE__ */ jsxs("div", {
                  className: "flex items-center gap-2 text-xl",
                  children: [/* @__PURE__ */ jsx("div", {
                    className: "cursor-pointer",
                    onClick: Yt,
                    children: "<"
                  }), /* @__PURE__ */ jsx("div", {
                    className: "text-blue-900",
                    children: Fe
                  }), /* @__PURE__ */ jsx("div", {
                    className: "cursor-pointer",
                    onClick: Jt,
                    children: ">"
                  })]
                })]
              }), /* @__PURE__ */ jsx("div", {
                className: "flex flex-wrap gap-3",
                children: me.slice((Fe - 1) * pageBoxNum, Fe * pageBoxNum).map((Ht, Lt) => /* @__PURE__ */ jsx(BagBox$1, {
                  children: /* @__PURE__ */ jsx(BagItem, {
                    item: clone(Ht.item),
                    index: (Fe - 1) * pageBoxNum + Lt,
                    tradeBoxes: clone(me),
                    updateTradeBoxes: ge,
                    tradeLayer: "inventory"
                  }, `inventory_${Ht.id}`)
                }, Ht.id))
              })]
            })
          })]
        })]
      }), /* @__PURE__ */ jsx("div", {
        className: "absolute top-0 right-0 w-1/4 h-full",
        children: /* @__PURE__ */ jsx(Frame, {
          className: "h-full",
          children: /* @__PURE__ */ jsxs("div", {
            className: "p-2",
            children: [/* @__PURE__ */ jsx("b", {
              children: "CONNECTION STATUS"
            }), /* @__PURE__ */ jsx("br", {}), Q && ee ? "Connected with " + ht : "Waiting for IC wallet connection...", /* @__PURE__ */ jsx("br", {}), /* @__PURE__ */ jsx("br", {}), Oe && le && !partner && !tradeId && /* @__PURE__ */ jsxs(Fragment, {
              children: [/* @__PURE__ */ jsx("b", {
                children: " WAITING FOR TRADE PARTNER... "
              }), /* @__PURE__ */ jsx("br", {}), "Send this link to your trade partner", /* @__PURE__ */ jsx("br", {}), /* @__PURE__ */ jsxs("a", {
                className: "text-blue-900",
                href: `${url.host}/?tradeId=${le.id}`,
                children: [url.host, "/?tradeId=", le.id]
              })]
            }), Oe && le && partner && /* @__PURE__ */ jsxs(Fragment, {
              children: ["Trading with ", partner]
            })]
          })
        })
      })]
    })
  });
};
styleInject(css$2);
const canister_id = "lj532-6iaaa-aaaah-qcc7a-cai", whitelist = [canister_id, "vlhm2-4iaaa-aaaam-qaatq-cai", "ryjl3-tyaaa-aaaaa-aaaba-cai"], App = ({
  type: Q
}) => /* @__PURE__ */ jsx(PlugProvider, {
  whitelist,
  children: /* @__PURE__ */ jsx("div", {
    className: "body",
    children: /* @__PURE__ */ jsx("div", {
      className: "fixed top-0 bottom-0 left-0 right-0",
      children: /* @__PURE__ */ jsx(Trade, {
        type: Q
      })
    })
  })
});
export {
  AgentError as A,
  Certificate as C,
  PipeArrayBuffer as P,
  Principal$3 as a,
  App as b,
  decode as d,
  lebDecode as l,
  toHex as t
};
