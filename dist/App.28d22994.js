function _mergeNamespaces(Q, ee) {
  for (var ne = 0; ne < ee.length; ne++) {
    const ie = ee[ne];
    if (typeof ie != "string" && !Array.isArray(ie)) {
      for (const ae in ie)
        if (ae !== "default" && !(ae in Q)) {
          const ce = Object.getOwnPropertyDescriptor(ie, ae);
          ce && Object.defineProperty(Q, ae, ce.get ? ce : {
            enumerable: !0,
            get: () => ie[ae]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(Q, Symbol.toStringTag, { value: "Module" }));
}
var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function getDefaultExportFromCjs(Q) {
  return Q && Q.__esModule && Object.prototype.hasOwnProperty.call(Q, "default") ? Q.default : Q;
}
function getAugmentedNamespace(Q) {
  var ee = Q.default;
  if (typeof ee == "function") {
    var ne = function() {
      return ee.apply(this, arguments);
    };
    ne.prototype = ee.prototype;
  } else
    ne = {};
  return Object.defineProperty(ne, "__esModule", { value: !0 }), Object.keys(Q).forEach(function(ie) {
    var ae = Object.getOwnPropertyDescriptor(Q, ie);
    Object.defineProperty(ne, ie, ae.get ? ae : {
      enumerable: !0,
      get: function() {
        return Q[ie];
      }
    });
  }), ne;
}
var react = { exports: {} }, react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReact_production_min;
function requireReact_production_min() {
  if (hasRequiredReact_production_min)
    return react_production_min;
  hasRequiredReact_production_min = 1;
  var Q = Symbol.for("react.element"), ee = Symbol.for("react.portal"), ne = Symbol.for("react.fragment"), ie = Symbol.for("react.strict_mode"), ae = Symbol.for("react.profiler"), ce = Symbol.for("react.provider"), le = Symbol.for("react.context"), de = Symbol.for("react.forward_ref"), ye = Symbol.for("react.suspense"), he = Symbol.for("react.memo"), Be = Symbol.for("react.lazy"), Ee = Symbol.iterator;
  function me(st) {
    return st === null || typeof st != "object" ? null : (st = Ee && st[Ee] || st["@@iterator"], typeof st == "function" ? st : null);
  }
  var ge = { isMounted: function() {
    return !1;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, be = Object.assign, we = {};
  function Oe(st, at, wt) {
    this.props = st, this.context = at, this.refs = we, this.updater = wt || ge;
  }
  Oe.prototype.isReactComponent = {}, Oe.prototype.setState = function(st, at) {
    if (typeof st != "object" && typeof st != "function" && st != null)
      throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, st, at, "setState");
  }, Oe.prototype.forceUpdate = function(st) {
    this.updater.enqueueForceUpdate(this, st, "forceUpdate");
  };
  function He() {
  }
  He.prototype = Oe.prototype;
  function Se(st, at, wt) {
    this.props = st, this.context = at, this.refs = we, this.updater = wt || ge;
  }
  var Ge = Se.prototype = new He();
  Ge.constructor = Se, be(Ge, Oe.prototype), Ge.isPureReactComponent = !0;
  var Fe = Array.isArray, Pe = Object.prototype.hasOwnProperty, We = { current: null }, tt = { key: !0, ref: !0, __self: !0, __source: !0 };
  function Et(st, at, wt) {
    var Ut, $e = {}, ir = null, tr = null;
    if (at != null)
      for (Ut in at.ref !== void 0 && (tr = at.ref), at.key !== void 0 && (ir = "" + at.key), at)
        Pe.call(at, Ut) && !tt.hasOwnProperty(Ut) && ($e[Ut] = at[Ut]);
    var ar = arguments.length - 2;
    if (ar === 1)
      $e.children = wt;
    else if (1 < ar) {
      for (var ht = Array(ar), qt = 0; qt < ar; qt++)
        ht[qt] = arguments[qt + 2];
      $e.children = ht;
    }
    if (st && st.defaultProps)
      for (Ut in ar = st.defaultProps, ar)
        $e[Ut] === void 0 && ($e[Ut] = ar[Ut]);
    return { $$typeof: Q, type: st, key: ir, ref: tr, props: $e, _owner: We.current };
  }
  function Nt(st, at) {
    return { $$typeof: Q, type: st.type, key: at, ref: st.ref, props: st.props, _owner: st._owner };
  }
  function et(st) {
    return typeof st == "object" && st !== null && st.$$typeof === Q;
  }
  function mt(st) {
    var at = { "=": "=0", ":": "=2" };
    return "$" + st.replace(/[=:]/g, function(wt) {
      return at[wt];
    });
  }
  var Mt = /\/+/g;
  function Ot(st, at) {
    return typeof st == "object" && st !== null && st.key != null ? mt("" + st.key) : at.toString(36);
  }
  function yt(st, at, wt, Ut, $e) {
    var ir = typeof st;
    (ir === "undefined" || ir === "boolean") && (st = null);
    var tr = !1;
    if (st === null)
      tr = !0;
    else
      switch (ir) {
        case "string":
        case "number":
          tr = !0;
          break;
        case "object":
          switch (st.$$typeof) {
            case Q:
            case ee:
              tr = !0;
          }
      }
    if (tr)
      return tr = st, $e = $e(tr), st = Ut === "" ? "." + Ot(tr, 0) : Ut, Fe($e) ? (wt = "", st != null && (wt = st.replace(Mt, "$&/") + "/"), yt($e, at, wt, "", function(qt) {
        return qt;
      })) : $e != null && (et($e) && ($e = Nt($e, wt + (!$e.key || tr && tr.key === $e.key ? "" : ("" + $e.key).replace(Mt, "$&/") + "/") + st)), at.push($e)), 1;
    if (tr = 0, Ut = Ut === "" ? "." : Ut + ":", Fe(st))
      for (var ar = 0; ar < st.length; ar++) {
        ir = st[ar];
        var ht = Ut + Ot(ir, ar);
        tr += yt(ir, at, wt, ht, $e);
      }
    else if (ht = me(st), typeof ht == "function")
      for (st = ht.call(st), ar = 0; !(ir = st.next()).done; )
        ir = ir.value, ht = Ut + Ot(ir, ar++), tr += yt(ir, at, wt, ht, $e);
    else if (ir === "object")
      throw at = String(st), Error("Objects are not valid as a React child (found: " + (at === "[object Object]" ? "object with keys {" + Object.keys(st).join(", ") + "}" : at) + "). If you meant to render a collection of children, use an array instead.");
    return tr;
  }
  function Qt(st, at, wt) {
    if (st == null)
      return st;
    var Ut = [], $e = 0;
    return yt(st, Ut, "", "", function(ir) {
      return at.call(wt, ir, $e++);
    }), Ut;
  }
  function Yt(st) {
    if (st._status === -1) {
      var at = st._result;
      at = at(), at.then(function(wt) {
        (st._status === 0 || st._status === -1) && (st._status = 1, st._result = wt);
      }, function(wt) {
        (st._status === 0 || st._status === -1) && (st._status = 2, st._result = wt);
      }), st._status === -1 && (st._status = 0, st._result = at);
    }
    if (st._status === 1)
      return st._result.default;
    throw st._result;
  }
  var jt = { current: null }, $t = { transition: null }, Wt = { ReactCurrentDispatcher: jt, ReactCurrentBatchConfig: $t, ReactCurrentOwner: We };
  return react_production_min.Children = { map: Qt, forEach: function(st, at, wt) {
    Qt(st, function() {
      at.apply(this, arguments);
    }, wt);
  }, count: function(st) {
    var at = 0;
    return Qt(st, function() {
      at++;
    }), at;
  }, toArray: function(st) {
    return Qt(st, function(at) {
      return at;
    }) || [];
  }, only: function(st) {
    if (!et(st))
      throw Error("React.Children.only expected to receive a single React element child.");
    return st;
  } }, react_production_min.Component = Oe, react_production_min.Fragment = ne, react_production_min.Profiler = ae, react_production_min.PureComponent = Se, react_production_min.StrictMode = ie, react_production_min.Suspense = ye, react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Wt, react_production_min.cloneElement = function(st, at, wt) {
    if (st == null)
      throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + st + ".");
    var Ut = be({}, st.props), $e = st.key, ir = st.ref, tr = st._owner;
    if (at != null) {
      if (at.ref !== void 0 && (ir = at.ref, tr = We.current), at.key !== void 0 && ($e = "" + at.key), st.type && st.type.defaultProps)
        var ar = st.type.defaultProps;
      for (ht in at)
        Pe.call(at, ht) && !tt.hasOwnProperty(ht) && (Ut[ht] = at[ht] === void 0 && ar !== void 0 ? ar[ht] : at[ht]);
    }
    var ht = arguments.length - 2;
    if (ht === 1)
      Ut.children = wt;
    else if (1 < ht) {
      ar = Array(ht);
      for (var qt = 0; qt < ht; qt++)
        ar[qt] = arguments[qt + 2];
      Ut.children = ar;
    }
    return { $$typeof: Q, type: st.type, key: $e, ref: ir, props: Ut, _owner: tr };
  }, react_production_min.createContext = function(st) {
    return st = { $$typeof: le, _currentValue: st, _currentValue2: st, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, st.Provider = { $$typeof: ce, _context: st }, st.Consumer = st;
  }, react_production_min.createElement = Et, react_production_min.createFactory = function(st) {
    var at = Et.bind(null, st);
    return at.type = st, at;
  }, react_production_min.createRef = function() {
    return { current: null };
  }, react_production_min.forwardRef = function(st) {
    return { $$typeof: de, render: st };
  }, react_production_min.isValidElement = et, react_production_min.lazy = function(st) {
    return { $$typeof: Be, _payload: { _status: -1, _result: st }, _init: Yt };
  }, react_production_min.memo = function(st, at) {
    return { $$typeof: he, type: st, compare: at === void 0 ? null : at };
  }, react_production_min.startTransition = function(st) {
    var at = $t.transition;
    $t.transition = {};
    try {
      st();
    } finally {
      $t.transition = at;
    }
  }, react_production_min.unstable_act = function() {
    throw Error("act(...) is not supported in production builds of React.");
  }, react_production_min.useCallback = function(st, at) {
    return jt.current.useCallback(st, at);
  }, react_production_min.useContext = function(st) {
    return jt.current.useContext(st);
  }, react_production_min.useDebugValue = function() {
  }, react_production_min.useDeferredValue = function(st) {
    return jt.current.useDeferredValue(st);
  }, react_production_min.useEffect = function(st, at) {
    return jt.current.useEffect(st, at);
  }, react_production_min.useId = function() {
    return jt.current.useId();
  }, react_production_min.useImperativeHandle = function(st, at, wt) {
    return jt.current.useImperativeHandle(st, at, wt);
  }, react_production_min.useInsertionEffect = function(st, at) {
    return jt.current.useInsertionEffect(st, at);
  }, react_production_min.useLayoutEffect = function(st, at) {
    return jt.current.useLayoutEffect(st, at);
  }, react_production_min.useMemo = function(st, at) {
    return jt.current.useMemo(st, at);
  }, react_production_min.useReducer = function(st, at, wt) {
    return jt.current.useReducer(st, at, wt);
  }, react_production_min.useRef = function(st) {
    return jt.current.useRef(st);
  }, react_production_min.useState = function(st) {
    return jt.current.useState(st);
  }, react_production_min.useSyncExternalStore = function(st, at, wt) {
    return jt.current.useSyncExternalStore(st, at, wt);
  }, react_production_min.useTransition = function() {
    return jt.current.useTransition();
  }, react_production_min.version = "18.2.0", react_production_min;
}
var react_development = { exports: {} };
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReact_development;
function requireReact_development() {
  return hasRequiredReact_development || (hasRequiredReact_development = 1, function(Q, ee) {
    process.env.NODE_ENV !== "production" && function() {
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var ne = "18.2.0", ie = Symbol.for("react.element"), ae = Symbol.for("react.portal"), ce = Symbol.for("react.fragment"), le = Symbol.for("react.strict_mode"), de = Symbol.for("react.profiler"), ye = Symbol.for("react.provider"), he = Symbol.for("react.context"), Be = Symbol.for("react.forward_ref"), Ee = Symbol.for("react.suspense"), me = Symbol.for("react.suspense_list"), ge = Symbol.for("react.memo"), be = Symbol.for("react.lazy"), we = Symbol.for("react.offscreen"), Oe = Symbol.iterator, He = "@@iterator";
      function Se(ze) {
        if (ze === null || typeof ze != "object")
          return null;
        var Ct = Oe && ze[Oe] || ze[He];
        return typeof Ct == "function" ? Ct : null;
      }
      var Ge = {
        current: null
      }, Fe = {
        transition: null
      }, Pe = {
        current: null,
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, We = {
        current: null
      }, tt = {}, Et = null;
      function Nt(ze) {
        Et = ze;
      }
      tt.setExtraStackFrame = function(ze) {
        Et = ze;
      }, tt.getCurrentStack = null, tt.getStackAddendum = function() {
        var ze = "";
        Et && (ze += Et);
        var Ct = tt.getCurrentStack;
        return Ct && (ze += Ct() || ""), ze;
      };
      var et = !1, mt = !1, Mt = !1, Ot = !1, yt = !1, Qt = {
        ReactCurrentDispatcher: Ge,
        ReactCurrentBatchConfig: Fe,
        ReactCurrentOwner: We
      };
      Qt.ReactDebugCurrentFrame = tt, Qt.ReactCurrentActQueue = Pe;
      function Yt(ze) {
        {
          for (var Ct = arguments.length, rr = new Array(Ct > 1 ? Ct - 1 : 0), cr = 1; cr < Ct; cr++)
            rr[cr - 1] = arguments[cr];
          $t("warn", ze, rr);
        }
      }
      function jt(ze) {
        {
          for (var Ct = arguments.length, rr = new Array(Ct > 1 ? Ct - 1 : 0), cr = 1; cr < Ct; cr++)
            rr[cr - 1] = arguments[cr];
          $t("error", ze, rr);
        }
      }
      function $t(ze, Ct, rr) {
        {
          var cr = Qt.ReactDebugCurrentFrame, Pr = cr.getStackAddendum();
          Pr !== "" && (Ct += "%s", rr = rr.concat([Pr]));
          var pn = rr.map(function(on) {
            return String(on);
          });
          pn.unshift("Warning: " + Ct), Function.prototype.apply.call(console[ze], console, pn);
        }
      }
      var Wt = {};
      function st(ze, Ct) {
        {
          var rr = ze.constructor, cr = rr && (rr.displayName || rr.name) || "ReactClass", Pr = cr + "." + Ct;
          if (Wt[Pr])
            return;
          jt("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", Ct, cr), Wt[Pr] = !0;
        }
      }
      var at = {
        isMounted: function(ze) {
          return !1;
        },
        enqueueForceUpdate: function(ze, Ct, rr) {
          st(ze, "forceUpdate");
        },
        enqueueReplaceState: function(ze, Ct, rr, cr) {
          st(ze, "replaceState");
        },
        enqueueSetState: function(ze, Ct, rr, cr) {
          st(ze, "setState");
        }
      }, wt = Object.assign, Ut = {};
      Object.freeze(Ut);
      function $e(ze, Ct, rr) {
        this.props = ze, this.context = Ct, this.refs = Ut, this.updater = rr || at;
      }
      $e.prototype.isReactComponent = {}, $e.prototype.setState = function(ze, Ct) {
        if (typeof ze != "object" && typeof ze != "function" && ze != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, ze, Ct, "setState");
      }, $e.prototype.forceUpdate = function(ze) {
        this.updater.enqueueForceUpdate(this, ze, "forceUpdate");
      };
      {
        var ir = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, tr = function(ze, Ct) {
          Object.defineProperty($e.prototype, ze, {
            get: function() {
              Yt("%s(...) is deprecated in plain JavaScript React classes. %s", Ct[0], Ct[1]);
            }
          });
        };
        for (var ar in ir)
          ir.hasOwnProperty(ar) && tr(ar, ir[ar]);
      }
      function ht() {
      }
      ht.prototype = $e.prototype;
      function qt(ze, Ct, rr) {
        this.props = ze, this.context = Ct, this.refs = Ut, this.updater = rr || at;
      }
      var Xe = qt.prototype = new ht();
      Xe.constructor = qt, wt(Xe, $e.prototype), Xe.isPureReactComponent = !0;
      function nt() {
        var ze = {
          current: null
        };
        return Object.seal(ze), ze;
      }
      var je = Array.isArray;
      function It(ze) {
        return je(ze);
      }
      function lt(ze) {
        {
          var Ct = typeof Symbol == "function" && Symbol.toStringTag, rr = Ct && ze[Symbol.toStringTag] || ze.constructor.name || "Object";
          return rr;
        }
      }
      function Ye(ze) {
        try {
          return _e(ze), !1;
        } catch {
          return !0;
        }
      }
      function _e(ze) {
        return "" + ze;
      }
      function Ie(ze) {
        if (Ye(ze))
          return jt("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", lt(ze)), _e(ze);
      }
      function Ce(ze, Ct, rr) {
        var cr = ze.displayName;
        if (cr)
          return cr;
        var Pr = Ct.displayName || Ct.name || "";
        return Pr !== "" ? rr + "(" + Pr + ")" : rr;
      }
      function ke(ze) {
        return ze.displayName || "Context";
      }
      function Ve(ze) {
        if (ze == null)
          return null;
        if (typeof ze.tag == "number" && jt("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof ze == "function")
          return ze.displayName || ze.name || null;
        if (typeof ze == "string")
          return ze;
        switch (ze) {
          case ce:
            return "Fragment";
          case ae:
            return "Portal";
          case de:
            return "Profiler";
          case le:
            return "StrictMode";
          case Ee:
            return "Suspense";
          case me:
            return "SuspenseList";
        }
        if (typeof ze == "object")
          switch (ze.$$typeof) {
            case he:
              var Ct = ze;
              return ke(Ct) + ".Consumer";
            case ye:
              var rr = ze;
              return ke(rr._context) + ".Provider";
            case Be:
              return Ce(ze, ze.render, "ForwardRef");
            case ge:
              var cr = ze.displayName || null;
              return cr !== null ? cr : Ve(ze.type) || "Memo";
            case be: {
              var Pr = ze, pn = Pr._payload, on = Pr._init;
              try {
                return Ve(on(pn));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var Ze = Object.prototype.hasOwnProperty, ct = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, kt, Jt, Kt;
      Kt = {};
      function Zt(ze) {
        if (Ze.call(ze, "ref")) {
          var Ct = Object.getOwnPropertyDescriptor(ze, "ref").get;
          if (Ct && Ct.isReactWarning)
            return !1;
        }
        return ze.ref !== void 0;
      }
      function De(ze) {
        if (Ze.call(ze, "key")) {
          var Ct = Object.getOwnPropertyDescriptor(ze, "key").get;
          if (Ct && Ct.isReactWarning)
            return !1;
        }
        return ze.key !== void 0;
      }
      function Te(ze, Ct) {
        var rr = function() {
          kt || (kt = !0, jt("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ct));
        };
        rr.isReactWarning = !0, Object.defineProperty(ze, "key", {
          get: rr,
          configurable: !0
        });
      }
      function Re(ze, Ct) {
        var rr = function() {
          Jt || (Jt = !0, jt("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ct));
        };
        rr.isReactWarning = !0, Object.defineProperty(ze, "ref", {
          get: rr,
          configurable: !0
        });
      }
      function ot(ze) {
        if (typeof ze.ref == "string" && We.current && ze.__self && We.current.stateNode !== ze.__self) {
          var Ct = Ve(We.current.type);
          Kt[Ct] || (jt('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', Ct, ze.ref), Kt[Ct] = !0);
        }
      }
      var bt = function(ze, Ct, rr, cr, Pr, pn, on) {
        var Nn = {
          $$typeof: ie,
          type: ze,
          key: Ct,
          ref: rr,
          props: on,
          _owner: pn
        };
        return Nn._store = {}, Object.defineProperty(Nn._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(Nn, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: cr
        }), Object.defineProperty(Nn, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: Pr
        }), Object.freeze && (Object.freeze(Nn.props), Object.freeze(Nn)), Nn;
      };
      function Pt(ze, Ct, rr) {
        var cr, Pr = {}, pn = null, on = null, Nn = null, Cr = null;
        if (Ct != null) {
          Zt(Ct) && (on = Ct.ref, ot(Ct)), De(Ct) && (Ie(Ct.key), pn = "" + Ct.key), Nn = Ct.__self === void 0 ? null : Ct.__self, Cr = Ct.__source === void 0 ? null : Ct.__source;
          for (cr in Ct)
            Ze.call(Ct, cr) && !ct.hasOwnProperty(cr) && (Pr[cr] = Ct[cr]);
        }
        var Jn = arguments.length - 2;
        if (Jn === 1)
          Pr.children = rr;
        else if (Jn > 1) {
          for (var ai = Array(Jn), ti = 0; ti < Jn; ti++)
            ai[ti] = arguments[ti + 2];
          Object.freeze && Object.freeze(ai), Pr.children = ai;
        }
        if (ze && ze.defaultProps) {
          var pi = ze.defaultProps;
          for (cr in pi)
            Pr[cr] === void 0 && (Pr[cr] = pi[cr]);
        }
        if (pn || on) {
          var Xr = typeof ze == "function" ? ze.displayName || ze.name || "Unknown" : ze;
          pn && Te(Pr, Xr), on && Re(Pr, Xr);
        }
        return bt(ze, pn, on, Nn, Cr, We.current, Pr);
      }
      function Vt(ze, Ct) {
        var rr = bt(ze.type, Ct, ze.ref, ze._self, ze._source, ze._owner, ze.props);
        return rr;
      }
      function Ir(ze, Ct, rr) {
        if (ze == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + ze + ".");
        var cr, Pr = wt({}, ze.props), pn = ze.key, on = ze.ref, Nn = ze._self, Cr = ze._source, Jn = ze._owner;
        if (Ct != null) {
          Zt(Ct) && (on = Ct.ref, Jn = We.current), De(Ct) && (Ie(Ct.key), pn = "" + Ct.key);
          var ai;
          ze.type && ze.type.defaultProps && (ai = ze.type.defaultProps);
          for (cr in Ct)
            Ze.call(Ct, cr) && !ct.hasOwnProperty(cr) && (Ct[cr] === void 0 && ai !== void 0 ? Pr[cr] = ai[cr] : Pr[cr] = Ct[cr]);
        }
        var ti = arguments.length - 2;
        if (ti === 1)
          Pr.children = rr;
        else if (ti > 1) {
          for (var pi = Array(ti), Xr = 0; Xr < ti; Xr++)
            pi[Xr] = arguments[Xr + 2];
          Pr.children = pi;
        }
        return bt(ze.type, pn, on, Nn, Cr, Jn, Pr);
      }
      function mr(ze) {
        return typeof ze == "object" && ze !== null && ze.$$typeof === ie;
      }
      var _r = ".", Br = ":";
      function Tr(ze) {
        var Ct = /[=:]/g, rr = {
          "=": "=0",
          ":": "=2"
        }, cr = ze.replace(Ct, function(Pr) {
          return rr[Pr];
        });
        return "$" + cr;
      }
      var cn = !1, oi = /\/+/g;
      function un(ze) {
        return ze.replace(oi, "$&/");
      }
      function Yn(ze, Ct) {
        return typeof ze == "object" && ze !== null && ze.key != null ? (Ie(ze.key), Tr("" + ze.key)) : Ct.toString(36);
      }
      function Vn(ze, Ct, rr, cr, Pr) {
        var pn = typeof ze;
        (pn === "undefined" || pn === "boolean") && (ze = null);
        var on = !1;
        if (ze === null)
          on = !0;
        else
          switch (pn) {
            case "string":
            case "number":
              on = !0;
              break;
            case "object":
              switch (ze.$$typeof) {
                case ie:
                case ae:
                  on = !0;
              }
          }
        if (on) {
          var Nn = ze, Cr = Pr(Nn), Jn = cr === "" ? _r + Yn(Nn, 0) : cr;
          if (It(Cr)) {
            var ai = "";
            Jn != null && (ai = un(Jn) + "/"), Vn(Cr, Ct, ai, "", function(Yr) {
              return Yr;
            });
          } else
            Cr != null && (mr(Cr) && (Cr.key && (!Nn || Nn.key !== Cr.key) && Ie(Cr.key), Cr = Vt(
              Cr,
              rr + (Cr.key && (!Nn || Nn.key !== Cr.key) ? un("" + Cr.key) + "/" : "") + Jn
            )), Ct.push(Cr));
          return 1;
        }
        var ti, pi, Xr = 0, dn = cr === "" ? _r : cr + Br;
        if (It(ze))
          for (var Yo = 0; Yo < ze.length; Yo++)
            ti = ze[Yo], pi = dn + Yn(ti, Yo), Xr += Vn(ti, Ct, rr, pi, Pr);
        else {
          var oa = Se(ze);
          if (typeof oa == "function") {
            var ha = ze;
            oa === ha.entries && (cn || Yt("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), cn = !0);
            for (var Ia = oa.call(ha), Vo, xa = 0; !(Vo = Ia.next()).done; )
              ti = Vo.value, pi = dn + Yn(ti, xa++), Xr += Vn(ti, Ct, rr, pi, Pr);
          } else if (pn === "object") {
            var Lo = String(ze);
            throw new Error("Objects are not valid as a React child (found: " + (Lo === "[object Object]" ? "object with keys {" + Object.keys(ze).join(", ") + "}" : Lo) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return Xr;
      }
      function Dn(ze, Ct, rr) {
        if (ze == null)
          return ze;
        var cr = [], Pr = 0;
        return Vn(ze, cr, "", "", function(pn) {
          return Ct.call(rr, pn, Pr++);
        }), cr;
      }
      function Ln(ze) {
        var Ct = 0;
        return Dn(ze, function() {
          Ct++;
        }), Ct;
      }
      function di(ze, Ct, rr) {
        Dn(ze, function() {
          Ct.apply(this, arguments);
        }, rr);
      }
      function yi(ze) {
        return Dn(ze, function(Ct) {
          return Ct;
        }) || [];
      }
      function Zi(ze) {
        if (!mr(ze))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return ze;
      }
      function ki(ze) {
        var Ct = {
          $$typeof: he,
          _currentValue: ze,
          _currentValue2: ze,
          _threadCount: 0,
          Provider: null,
          Consumer: null,
          _defaultValue: null,
          _globalName: null
        };
        Ct.Provider = {
          $$typeof: ye,
          _context: Ct
        };
        var rr = !1, cr = !1, Pr = !1;
        {
          var pn = {
            $$typeof: he,
            _context: Ct
          };
          Object.defineProperties(pn, {
            Provider: {
              get: function() {
                return cr || (cr = !0, jt("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), Ct.Provider;
              },
              set: function(on) {
                Ct.Provider = on;
              }
            },
            _currentValue: {
              get: function() {
                return Ct._currentValue;
              },
              set: function(on) {
                Ct._currentValue = on;
              }
            },
            _currentValue2: {
              get: function() {
                return Ct._currentValue2;
              },
              set: function(on) {
                Ct._currentValue2 = on;
              }
            },
            _threadCount: {
              get: function() {
                return Ct._threadCount;
              },
              set: function(on) {
                Ct._threadCount = on;
              }
            },
            Consumer: {
              get: function() {
                return rr || (rr = !0, jt("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), Ct.Consumer;
              }
            },
            displayName: {
              get: function() {
                return Ct.displayName;
              },
              set: function(on) {
                Pr || (Yt("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", on), Pr = !0);
              }
            }
          }), Ct.Consumer = pn;
        }
        return Ct._currentRenderer = null, Ct._currentRenderer2 = null, Ct;
      }
      var Pn = -1, ni = 0, Xn = 1, fi = 2;
      function Bi(ze) {
        if (ze._status === Pn) {
          var Ct = ze._result, rr = Ct();
          if (rr.then(function(pn) {
            if (ze._status === ni || ze._status === Pn) {
              var on = ze;
              on._status = Xn, on._result = pn;
            }
          }, function(pn) {
            if (ze._status === ni || ze._status === Pn) {
              var on = ze;
              on._status = fi, on._result = pn;
            }
          }), ze._status === Pn) {
            var cr = ze;
            cr._status = ni, cr._result = rr;
          }
        }
        if (ze._status === Xn) {
          var Pr = ze._result;
          return Pr === void 0 && jt(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, Pr), "default" in Pr || jt(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, Pr), Pr.default;
        } else
          throw ze._result;
      }
      function Ci(ze) {
        var Ct = {
          _status: Pn,
          _result: ze
        }, rr = {
          $$typeof: be,
          _payload: Ct,
          _init: Bi
        };
        {
          var cr, Pr;
          Object.defineProperties(rr, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return cr;
              },
              set: function(pn) {
                jt("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), cr = pn, Object.defineProperty(rr, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return Pr;
              },
              set: function(pn) {
                jt("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), Pr = pn, Object.defineProperty(rr, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return rr;
      }
      function Ii(ze) {
        ze != null && ze.$$typeof === ge ? jt("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof ze != "function" ? jt("forwardRef requires a render function but was given %s.", ze === null ? "null" : typeof ze) : ze.length !== 0 && ze.length !== 2 && jt("forwardRef render functions accept exactly two parameters: props and ref. %s", ze.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), ze != null && (ze.defaultProps != null || ze.propTypes != null) && jt("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var Ct = {
          $$typeof: Be,
          render: ze
        };
        {
          var rr;
          Object.defineProperty(Ct, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return rr;
            },
            set: function(cr) {
              rr = cr, !ze.name && !ze.displayName && (ze.displayName = cr);
            }
          });
        }
        return Ct;
      }
      var Ft;
      Ft = Symbol.for("react.module.reference");
      function sr(ze) {
        return !!(typeof ze == "string" || typeof ze == "function" || ze === ce || ze === de || yt || ze === le || ze === Ee || ze === me || Ot || ze === we || et || mt || Mt || typeof ze == "object" && ze !== null && (ze.$$typeof === be || ze.$$typeof === ge || ze.$$typeof === ye || ze.$$typeof === he || ze.$$typeof === Be || ze.$$typeof === Ft || ze.getModuleId !== void 0));
      }
      function Gr(ze, Ct) {
        sr(ze) || jt("memo: The first argument must be a component. Instead received: %s", ze === null ? "null" : typeof ze);
        var rr = {
          $$typeof: ge,
          type: ze,
          compare: Ct === void 0 ? null : Ct
        };
        {
          var cr;
          Object.defineProperty(rr, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return cr;
            },
            set: function(Pr) {
              cr = Pr, !ze.name && !ze.displayName && (ze.displayName = Pr);
            }
          });
        }
        return rr;
      }
      function zr() {
        var ze = Ge.current;
        return ze === null && jt(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), ze;
      }
      function wn(ze) {
        var Ct = zr();
        if (ze._context !== void 0) {
          var rr = ze._context;
          rr.Consumer === ze ? jt("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : rr.Provider === ze && jt("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return Ct.useContext(ze);
      }
      function Tn(ze) {
        var Ct = zr();
        return Ct.useState(ze);
      }
      function _n(ze, Ct, rr) {
        var cr = zr();
        return cr.useReducer(ze, Ct, rr);
      }
      function vn(ze) {
        var Ct = zr();
        return Ct.useRef(ze);
      }
      function kn(ze, Ct) {
        var rr = zr();
        return rr.useEffect(ze, Ct);
      }
      function Zn(ze, Ct) {
        var rr = zr();
        return rr.useInsertionEffect(ze, Ct);
      }
      function An(ze, Ct) {
        var rr = zr();
        return rr.useLayoutEffect(ze, Ct);
      }
      function nn(ze, Ct) {
        var rr = zr();
        return rr.useCallback(ze, Ct);
      }
      function Kr(ze, Ct) {
        var rr = zr();
        return rr.useMemo(ze, Ct);
      }
      function xt(ze, Ct, rr) {
        var cr = zr();
        return cr.useImperativeHandle(ze, Ct, rr);
      }
      function Sr(ze, Ct) {
        {
          var rr = zr();
          return rr.useDebugValue(ze, Ct);
        }
      }
      function Xt() {
        var ze = zr();
        return ze.useTransition();
      }
      function Vr(ze) {
        var Ct = zr();
        return Ct.useDeferredValue(ze);
      }
      function qe() {
        var ze = zr();
        return ze.useId();
      }
      function Ke(ze, Ct, rr) {
        var cr = zr();
        return cr.useSyncExternalStore(ze, Ct, rr);
      }
      var At = 0, gt, dt, er, dr, ur, Rr, Jr;
      function Mr() {
      }
      Mr.__reactDisabledLog = !0;
      function Zr() {
        {
          if (At === 0) {
            gt = console.log, dt = console.info, er = console.warn, dr = console.error, ur = console.group, Rr = console.groupCollapsed, Jr = console.groupEnd;
            var ze = {
              configurable: !0,
              enumerable: !0,
              value: Mr,
              writable: !0
            };
            Object.defineProperties(console, {
              info: ze,
              log: ze,
              warn: ze,
              error: ze,
              group: ze,
              groupCollapsed: ze,
              groupEnd: ze
            });
          }
          At++;
        }
      }
      function Rn() {
        {
          if (At--, At === 0) {
            var ze = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: wt({}, ze, {
                value: gt
              }),
              info: wt({}, ze, {
                value: dt
              }),
              warn: wt({}, ze, {
                value: er
              }),
              error: wt({}, ze, {
                value: dr
              }),
              group: wt({}, ze, {
                value: ur
              }),
              groupCollapsed: wt({}, ze, {
                value: Rr
              }),
              groupEnd: wt({}, ze, {
                value: Jr
              })
            });
          }
          At < 0 && jt("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var Fn = Qt.ReactCurrentDispatcher, Gn;
      function qr(ze, Ct, rr) {
        {
          if (Gn === void 0)
            try {
              throw Error();
            } catch (Pr) {
              var cr = Pr.stack.trim().match(/\n( *(at )?)/);
              Gn = cr && cr[1] || "";
            }
          return `
` + Gn + ze;
        }
      }
      var jr = !1, bn;
      {
        var gn = typeof WeakMap == "function" ? WeakMap : Map;
        bn = new gn();
      }
      function sn(ze, Ct) {
        if (!ze || jr)
          return "";
        {
          var rr = bn.get(ze);
          if (rr !== void 0)
            return rr;
        }
        var cr;
        jr = !0;
        var Pr = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var pn;
        pn = Fn.current, Fn.current = null, Zr();
        try {
          if (Ct) {
            var on = function() {
              throw Error();
            };
            if (Object.defineProperty(on.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(on, []);
              } catch (dn) {
                cr = dn;
              }
              Reflect.construct(ze, [], on);
            } else {
              try {
                on.call();
              } catch (dn) {
                cr = dn;
              }
              ze.call(on.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (dn) {
              cr = dn;
            }
            ze();
          }
        } catch (dn) {
          if (dn && cr && typeof dn.stack == "string") {
            for (var Nn = dn.stack.split(`
`), Cr = cr.stack.split(`
`), Jn = Nn.length - 1, ai = Cr.length - 1; Jn >= 1 && ai >= 0 && Nn[Jn] !== Cr[ai]; )
              ai--;
            for (; Jn >= 1 && ai >= 0; Jn--, ai--)
              if (Nn[Jn] !== Cr[ai]) {
                if (Jn !== 1 || ai !== 1)
                  do
                    if (Jn--, ai--, ai < 0 || Nn[Jn] !== Cr[ai]) {
                      var ti = `
` + Nn[Jn].replace(" at new ", " at ");
                      return ze.displayName && ti.includes("<anonymous>") && (ti = ti.replace("<anonymous>", ze.displayName)), typeof ze == "function" && bn.set(ze, ti), ti;
                    }
                  while (Jn >= 1 && ai >= 0);
                break;
              }
          }
        } finally {
          jr = !1, Fn.current = pn, Rn(), Error.prepareStackTrace = Pr;
        }
        var pi = ze ? ze.displayName || ze.name : "", Xr = pi ? qr(pi) : "";
        return typeof ze == "function" && bn.set(ze, Xr), Xr;
      }
      function On(ze, Ct, rr) {
        return sn(ze, !1);
      }
      function ii(ze) {
        var Ct = ze.prototype;
        return !!(Ct && Ct.isReactComponent);
      }
      function xn(ze, Ct, rr) {
        if (ze == null)
          return "";
        if (typeof ze == "function")
          return sn(ze, ii(ze));
        if (typeof ze == "string")
          return qr(ze);
        switch (ze) {
          case Ee:
            return qr("Suspense");
          case me:
            return qr("SuspenseList");
        }
        if (typeof ze == "object")
          switch (ze.$$typeof) {
            case Be:
              return On(ze.render);
            case ge:
              return xn(ze.type, Ct, rr);
            case be: {
              var cr = ze, Pr = cr._payload, pn = cr._init;
              try {
                return xn(pn(Pr), Ct, rr);
              } catch {
              }
            }
          }
        return "";
      }
      var Wr = {}, Cn = Qt.ReactDebugCurrentFrame;
      function zn(ze) {
        if (ze) {
          var Ct = ze._owner, rr = xn(ze.type, ze._source, Ct ? Ct.type : null);
          Cn.setExtraStackFrame(rr);
        } else
          Cn.setExtraStackFrame(null);
      }
      function Qi(ze, Ct, rr, cr, Pr) {
        {
          var pn = Function.call.bind(Ze);
          for (var on in ze)
            if (pn(ze, on)) {
              var Nn = void 0;
              try {
                if (typeof ze[on] != "function") {
                  var Cr = Error((cr || "React class") + ": " + rr + " type `" + on + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ze[on] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw Cr.name = "Invariant Violation", Cr;
                }
                Nn = ze[on](Ct, on, cr, rr, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (Jn) {
                Nn = Jn;
              }
              Nn && !(Nn instanceof Error) && (zn(Pr), jt("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", cr || "React class", rr, on, typeof Nn), zn(null)), Nn instanceof Error && !(Nn.message in Wr) && (Wr[Nn.message] = !0, zn(Pr), jt("Failed %s type: %s", rr, Nn.message), zn(null));
            }
        }
      }
      function Mi(ze) {
        if (ze) {
          var Ct = ze._owner, rr = xn(ze.type, ze._source, Ct ? Ct.type : null);
          Nt(rr);
        } else
          Nt(null);
      }
      var Eo;
      Eo = !1;
      function Ao() {
        if (We.current) {
          var ze = Ve(We.current.type);
          if (ze)
            return `

Check the render method of \`` + ze + "`.";
        }
        return "";
      }
      function xi(ze) {
        if (ze !== void 0) {
          var Ct = ze.fileName.replace(/^.*[\\\/]/, ""), rr = ze.lineNumber;
          return `

Check your code at ` + Ct + ":" + rr + ".";
        }
        return "";
      }
      function na(ze) {
        return ze != null ? xi(ze.__source) : "";
      }
      var da = {};
      function Ca(ze) {
        var Ct = Ao();
        if (!Ct) {
          var rr = typeof ze == "string" ? ze : ze.displayName || ze.name;
          rr && (Ct = `

Check the top-level render call using <` + rr + ">.");
        }
        return Ct;
      }
      function ia(ze, Ct) {
        if (!(!ze._store || ze._store.validated || ze.key != null)) {
          ze._store.validated = !0;
          var rr = Ca(Ct);
          if (!da[rr]) {
            da[rr] = !0;
            var cr = "";
            ze && ze._owner && ze._owner !== We.current && (cr = " It was passed a child from " + Ve(ze._owner.type) + "."), Mi(ze), jt('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', rr, cr), Mi(null);
          }
        }
      }
      function wo(ze, Ct) {
        if (typeof ze == "object") {
          if (It(ze))
            for (var rr = 0; rr < ze.length; rr++) {
              var cr = ze[rr];
              mr(cr) && ia(cr, Ct);
            }
          else if (mr(ze))
            ze._store && (ze._store.validated = !0);
          else if (ze) {
            var Pr = Se(ze);
            if (typeof Pr == "function" && Pr !== ze.entries)
              for (var pn = Pr.call(ze), on; !(on = pn.next()).done; )
                mr(on.value) && ia(on.value, Ct);
          }
        }
      }
      function _o(ze) {
        {
          var Ct = ze.type;
          if (Ct == null || typeof Ct == "string")
            return;
          var rr;
          if (typeof Ct == "function")
            rr = Ct.propTypes;
          else if (typeof Ct == "object" && (Ct.$$typeof === Be || Ct.$$typeof === ge))
            rr = Ct.propTypes;
          else
            return;
          if (rr) {
            var cr = Ve(Ct);
            Qi(rr, ze.props, "prop", cr, ze);
          } else if (Ct.PropTypes !== void 0 && !Eo) {
            Eo = !0;
            var Pr = Ve(Ct);
            jt("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", Pr || "Unknown");
          }
          typeof Ct.getDefaultProps == "function" && !Ct.getDefaultProps.isReactClassApproved && jt("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function Mn(ze) {
        {
          for (var Ct = Object.keys(ze.props), rr = 0; rr < Ct.length; rr++) {
            var cr = Ct[rr];
            if (cr !== "children" && cr !== "key") {
              Mi(ze), jt("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", cr), Mi(null);
              break;
            }
          }
          ze.ref !== null && (Mi(ze), jt("Invalid attribute `ref` supplied to `React.Fragment`."), Mi(null));
        }
      }
      function Qr(ze, Ct, rr) {
        var cr = sr(ze);
        if (!cr) {
          var Pr = "";
          (ze === void 0 || typeof ze == "object" && ze !== null && Object.keys(ze).length === 0) && (Pr += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var pn = na(Ct);
          pn ? Pr += pn : Pr += Ao();
          var on;
          ze === null ? on = "null" : It(ze) ? on = "array" : ze !== void 0 && ze.$$typeof === ie ? (on = "<" + (Ve(ze.type) || "Unknown") + " />", Pr = " Did you accidentally export a JSX literal instead of a component?") : on = typeof ze, jt("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", on, Pr);
        }
        var Nn = Pt.apply(this, arguments);
        if (Nn == null)
          return Nn;
        if (cr)
          for (var Cr = 2; Cr < arguments.length; Cr++)
            wo(arguments[Cr], ze);
        return ze === ce ? Mn(Nn) : _o(Nn), Nn;
      }
      var yn = !1;
      function hi(ze) {
        var Ct = Qr.bind(null, ze);
        return Ct.type = ze, yn || (yn = !0, Yt("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(Ct, "type", {
          enumerable: !1,
          get: function() {
            return Yt("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: ze
            }), ze;
          }
        }), Ct;
      }
      function Bt(ze, Ct, rr) {
        for (var cr = Ir.apply(this, arguments), Pr = 2; Pr < arguments.length; Pr++)
          wo(arguments[Pr], cr.type);
        return _o(cr), cr;
      }
      function qi(ze, Ct) {
        var rr = Fe.transition;
        Fe.transition = {};
        var cr = Fe.transition;
        Fe.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          ze();
        } finally {
          if (Fe.transition = rr, rr === null && cr._updatedFibers) {
            var Pr = cr._updatedFibers.size;
            Pr > 10 && Yt("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), cr._updatedFibers.clear();
          }
        }
      }
      var No = !1, Ka = null;
      function li(ze) {
        if (Ka === null)
          try {
            var Ct = ("require" + Math.random()).slice(0, 7), rr = Q && Q[Ct];
            Ka = rr.call(Q, "timers").setImmediate;
          } catch {
            Ka = function(Pr) {
              No === !1 && (No = !0, typeof MessageChannel > "u" && jt("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var pn = new MessageChannel();
              pn.port1.onmessage = Pr, pn.port2.postMessage(void 0);
            };
          }
        return Ka(ze);
      }
      var Kn = 0, jo = !1;
      function fa(ze) {
        {
          var Ct = Kn;
          Kn++, Pe.current === null && (Pe.current = []);
          var rr = Pe.isBatchingLegacy, cr;
          try {
            if (Pe.isBatchingLegacy = !0, cr = ze(), !rr && Pe.didScheduleLegacyUpdate) {
              var Pr = Pe.current;
              Pr !== null && (Pe.didScheduleLegacyUpdate = !1, uo(Pr));
            }
          } catch (pi) {
            throw Qo(Ct), pi;
          } finally {
            Pe.isBatchingLegacy = rr;
          }
          if (cr !== null && typeof cr == "object" && typeof cr.then == "function") {
            var pn = cr, on = !1, Nn = {
              then: function(pi, Xr) {
                on = !0, pn.then(function(dn) {
                  Qo(Ct), Kn === 0 ? yo(dn, pi, Xr) : pi(dn);
                }, function(dn) {
                  Qo(Ct), Xr(dn);
                });
              }
            };
            return !jo && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              on || (jo = !0, jt("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), Nn;
          } else {
            var Cr = cr;
            if (Qo(Ct), Kn === 0) {
              var Jn = Pe.current;
              Jn !== null && (uo(Jn), Pe.current = null);
              var ai = {
                then: function(pi, Xr) {
                  Pe.current === null ? (Pe.current = [], yo(Cr, pi, Xr)) : pi(Cr);
                }
              };
              return ai;
            } else {
              var ti = {
                then: function(pi, Xr) {
                  pi(Cr);
                }
              };
              return ti;
            }
          }
        }
      }
      function Qo(ze) {
        ze !== Kn - 1 && jt("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), Kn = ze;
      }
      function yo(ze, Ct, rr) {
        {
          var cr = Pe.current;
          if (cr !== null)
            try {
              uo(cr), li(function() {
                cr.length === 0 ? (Pe.current = null, Ct(ze)) : yo(ze, Ct, rr);
              });
            } catch (Pr) {
              rr(Pr);
            }
          else
            Ct(ze);
        }
      }
      var ao = !1;
      function uo(ze) {
        if (!ao) {
          ao = !0;
          var Ct = 0;
          try {
            for (; Ct < ze.length; Ct++) {
              var rr = ze[Ct];
              do
                rr = rr(!0);
              while (rr !== null);
            }
            ze.length = 0;
          } catch (cr) {
            throw ze = ze.slice(Ct + 1), cr;
          } finally {
            ao = !1;
          }
        }
      }
      var Za = Qr, ei = Bt, $i = hi, oA = {
        map: Dn,
        forEach: di,
        count: Ln,
        toArray: yi,
        only: Zi
      };
      ee.Children = oA, ee.Component = $e, ee.Fragment = ce, ee.Profiler = de, ee.PureComponent = qt, ee.StrictMode = le, ee.Suspense = Ee, ee.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Qt, ee.cloneElement = ei, ee.createContext = ki, ee.createElement = Za, ee.createFactory = $i, ee.createRef = nt, ee.forwardRef = Ii, ee.isValidElement = mr, ee.lazy = Ci, ee.memo = Gr, ee.startTransition = qi, ee.unstable_act = fa, ee.useCallback = nn, ee.useContext = wn, ee.useDebugValue = Sr, ee.useDeferredValue = Vr, ee.useEffect = kn, ee.useId = qe, ee.useImperativeHandle = xt, ee.useInsertionEffect = Zn, ee.useLayoutEffect = An, ee.useMemo = Kr, ee.useReducer = _n, ee.useRef = vn, ee.useState = Tn, ee.useSyncExternalStore = Ke, ee.useTransition = Xt, ee.version = ne, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    }();
  }(react_development, react_development.exports)), react_development.exports;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReact_production_min() : Q.exports = requireReact_development();
})(react);
const React = /* @__PURE__ */ getDefaultExportFromCjs(react.exports), React$1 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: React
}, [react.exports]), common = {
  black: "#000",
  white: "#fff"
}, common$1 = common, red = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
}, red$1 = red, purple = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
}, purple$1 = purple, blue = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
}, blue$1 = blue, lightBlue = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
}, lightBlue$1 = lightBlue, green = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
}, green$1 = green, orange = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
}, orange$1 = orange, grey = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, grey$1 = grey;
function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function(Q) {
    for (var ee = 1; ee < arguments.length; ee++) {
      var ne = arguments[ee];
      for (var ie in ne)
        Object.prototype.hasOwnProperty.call(ne, ie) && (Q[ie] = ne[ie]);
    }
    return Q;
  }, _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(Q, ee) {
  if (Q == null)
    return {};
  var ne = {}, ie = Object.keys(Q), ae, ce;
  for (ce = 0; ce < ie.length; ce++)
    ae = ie[ce], !(ee.indexOf(ae) >= 0) && (ne[ae] = Q[ae]);
  return ne;
}
function memoize$3(Q) {
  var ee = /* @__PURE__ */ Object.create(null);
  return function(ne) {
    return ee[ne] === void 0 && (ee[ne] = Q(ne)), ee[ne];
  };
}
var reactPropsRegex$1 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, isPropValid = /* @__PURE__ */ memoize$3(
  function(Q) {
    return reactPropsRegex$1.test(Q) || Q.charCodeAt(0) === 111 && Q.charCodeAt(1) === 110 && Q.charCodeAt(2) < 91;
  }
);
function sheetForTag$1(Q) {
  if (Q.sheet)
    return Q.sheet;
  for (var ee = 0; ee < document.styleSheets.length; ee++)
    if (document.styleSheets[ee].ownerNode === Q)
      return document.styleSheets[ee];
}
function createStyleElement(Q) {
  var ee = document.createElement("style");
  return ee.setAttribute("data-emotion", Q.key), Q.nonce !== void 0 && ee.setAttribute("nonce", Q.nonce), ee.appendChild(document.createTextNode("")), ee.setAttribute("data-s", ""), ee;
}
var StyleSheet$1 = /* @__PURE__ */ function() {
  function Q(ne) {
    var ie = this;
    this._insertTag = function(ae) {
      var ce;
      ie.tags.length === 0 ? ie.insertionPoint ? ce = ie.insertionPoint.nextSibling : ie.prepend ? ce = ie.container.firstChild : ce = ie.before : ce = ie.tags[ie.tags.length - 1].nextSibling, ie.container.insertBefore(ae, ce), ie.tags.push(ae);
    }, this.isSpeedy = ne.speedy === void 0 ? process.env.NODE_ENV === "production" : ne.speedy, this.tags = [], this.ctr = 0, this.nonce = ne.nonce, this.key = ne.key, this.container = ne.container, this.prepend = ne.prepend, this.insertionPoint = ne.insertionPoint, this.before = null;
  }
  var ee = Q.prototype;
  return ee.hydrate = function(ie) {
    ie.forEach(this._insertTag);
  }, ee.insert = function(ie) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(createStyleElement(this));
    var ae = this.tags[this.tags.length - 1];
    if (process.env.NODE_ENV !== "production") {
      var ce = ie.charCodeAt(0) === 64 && ie.charCodeAt(1) === 105;
      ce && this._alreadyInsertedOrderInsensitiveRule && console.error(`You're attempting to insert the following rule:
` + ie + "\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules."), this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !ce;
    }
    if (this.isSpeedy) {
      var le = sheetForTag$1(ae);
      try {
        le.insertRule(ie, le.cssRules.length);
      } catch (de) {
        process.env.NODE_ENV !== "production" && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(ie) && console.error('There was a problem inserting the following rule: "' + ie + '"', de);
      }
    } else
      ae.appendChild(document.createTextNode(ie));
    this.ctr++;
  }, ee.flush = function() {
    this.tags.forEach(function(ie) {
      return ie.parentNode && ie.parentNode.removeChild(ie);
    }), this.tags = [], this.ctr = 0, process.env.NODE_ENV !== "production" && (this._alreadyInsertedOrderInsensitiveRule = !1);
  }, Q;
}(), MS = "-ms-", MOZ = "-moz-", WEBKIT = "-webkit-", COMMENT = "comm", RULESET = "rule", DECLARATION = "decl", IMPORT = "@import", KEYFRAMES = "@keyframes", abs = Math.abs, from = String.fromCharCode, assign = Object.assign;
function hash$2(Q, ee) {
  return charat(Q, 0) ^ 45 ? (((ee << 2 ^ charat(Q, 0)) << 2 ^ charat(Q, 1)) << 2 ^ charat(Q, 2)) << 2 ^ charat(Q, 3) : 0;
}
function trim$1(Q) {
  return Q.trim();
}
function match(Q, ee) {
  return (Q = ee.exec(Q)) ? Q[0] : Q;
}
function replace(Q, ee, ne) {
  return Q.replace(ee, ne);
}
function indexof(Q, ee) {
  return Q.indexOf(ee);
}
function charat(Q, ee) {
  return Q.charCodeAt(ee) | 0;
}
function substr(Q, ee, ne) {
  return Q.slice(ee, ne);
}
function strlen(Q) {
  return Q.length;
}
function sizeof(Q) {
  return Q.length;
}
function append(Q, ee) {
  return ee.push(Q), Q;
}
function combine(Q, ee) {
  return Q.map(ee).join("");
}
var line = 1, column = 1, length = 0, position$1 = 0, character = 0, characters = "";
function node(Q, ee, ne, ie, ae, ce, le) {
  return { value: Q, root: ee, parent: ne, type: ie, props: ae, children: ce, line, column, length: le, return: "" };
}
function copy(Q, ee) {
  return assign(node("", null, null, "", null, null, 0), Q, { length: -Q.length }, ee);
}
function char() {
  return character;
}
function prev() {
  return character = position$1 > 0 ? charat(characters, --position$1) : 0, column--, character === 10 && (column = 1, line--), character;
}
function next() {
  return character = position$1 < length ? charat(characters, position$1++) : 0, column++, character === 10 && (column = 1, line++), character;
}
function peek() {
  return charat(characters, position$1);
}
function caret() {
  return position$1;
}
function slice(Q, ee) {
  return substr(characters, Q, ee);
}
function token$1(Q) {
  switch (Q) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(Q) {
  return line = column = 1, length = strlen(characters = Q), position$1 = 0, [];
}
function dealloc(Q) {
  return characters = "", Q;
}
function delimit(Q) {
  return trim$1(slice(position$1 - 1, delimiter(Q === 91 ? Q + 2 : Q === 40 ? Q + 1 : Q)));
}
function whitespace(Q) {
  for (; (character = peek()) && character < 33; )
    next();
  return token$1(Q) > 2 || token$1(character) > 3 ? "" : " ";
}
function escaping(Q, ee) {
  for (; --ee && next() && !(character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97); )
    ;
  return slice(Q, caret() + (ee < 6 && peek() == 32 && next() == 32));
}
function delimiter(Q) {
  for (; next(); )
    switch (character) {
      case Q:
        return position$1;
      case 34:
      case 39:
        Q !== 34 && Q !== 39 && delimiter(character);
        break;
      case 40:
        Q === 41 && delimiter(Q);
        break;
      case 92:
        next();
        break;
    }
  return position$1;
}
function commenter(Q, ee) {
  for (; next() && Q + character !== 47 + 10; )
    if (Q + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(ee, position$1 - 1) + "*" + from(Q === 47 ? Q : next());
}
function identifier(Q) {
  for (; !token$1(peek()); )
    next();
  return slice(Q, position$1);
}
function compile(Q) {
  return dealloc(parse("", null, null, null, [""], Q = alloc(Q), 0, [0], Q));
}
function parse(Q, ee, ne, ie, ae, ce, le, de, ye) {
  for (var he = 0, Be = 0, Ee = le, me = 0, ge = 0, be = 0, we = 1, Oe = 1, He = 1, Se = 0, Ge = "", Fe = ae, Pe = ce, We = ie, tt = Ge; Oe; )
    switch (be = Se, Se = next()) {
      case 40:
        if (be != 108 && charat(tt, Ee - 1) == 58) {
          indexof(tt += replace(delimit(Se), "&", "&\f"), "&\f") != -1 && (He = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        tt += delimit(Se);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        tt += whitespace(be);
        break;
      case 92:
        tt += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), ee, ne), ye);
            break;
          default:
            tt += "/";
        }
        break;
      case 123 * we:
        de[he++] = strlen(tt) * He;
      case 125 * we:
      case 59:
      case 0:
        switch (Se) {
          case 0:
          case 125:
            Oe = 0;
          case 59 + Be:
            ge > 0 && strlen(tt) - Ee && append(ge > 32 ? declaration(tt + ";", ie, ne, Ee - 1) : declaration(replace(tt, " ", "") + ";", ie, ne, Ee - 2), ye);
            break;
          case 59:
            tt += ";";
          default:
            if (append(We = ruleset(tt, ee, ne, he, Be, ae, de, Ge, Fe = [], Pe = [], Ee), ce), Se === 123)
              if (Be === 0)
                parse(tt, ee, We, We, Fe, ce, Ee, de, Pe);
              else
                switch (me === 99 && charat(tt, 3) === 110 ? 100 : me) {
                  case 100:
                  case 109:
                  case 115:
                    parse(Q, We, We, ie && append(ruleset(Q, We, We, 0, 0, ae, de, Ge, ae, Fe = [], Ee), Pe), ae, Pe, Ee, de, ie ? Fe : Pe);
                    break;
                  default:
                    parse(tt, We, We, We, [""], Pe, 0, de, Pe);
                }
        }
        he = Be = ge = 0, we = He = 1, Ge = tt = "", Ee = le;
        break;
      case 58:
        Ee = 1 + strlen(tt), ge = be;
      default:
        if (we < 1) {
          if (Se == 123)
            --we;
          else if (Se == 125 && we++ == 0 && prev() == 125)
            continue;
        }
        switch (tt += from(Se), Se * we) {
          case 38:
            He = Be > 0 ? 1 : (tt += "\f", -1);
            break;
          case 44:
            de[he++] = (strlen(tt) - 1) * He, He = 1;
            break;
          case 64:
            peek() === 45 && (tt += delimit(next())), me = peek(), Be = Ee = strlen(Ge = tt += identifier(caret())), Se++;
            break;
          case 45:
            be === 45 && strlen(tt) == 2 && (we = 0);
        }
    }
  return ce;
}
function ruleset(Q, ee, ne, ie, ae, ce, le, de, ye, he, Be) {
  for (var Ee = ae - 1, me = ae === 0 ? ce : [""], ge = sizeof(me), be = 0, we = 0, Oe = 0; be < ie; ++be)
    for (var He = 0, Se = substr(Q, Ee + 1, Ee = abs(we = le[be])), Ge = Q; He < ge; ++He)
      (Ge = trim$1(we > 0 ? me[He] + " " + Se : replace(Se, /&\f/g, me[He]))) && (ye[Oe++] = Ge);
  return node(Q, ee, ne, ae === 0 ? RULESET : de, ye, he, Be);
}
function comment(Q, ee, ne) {
  return node(Q, ee, ne, COMMENT, from(char()), substr(Q, 2, -2), 0);
}
function declaration(Q, ee, ne, ie) {
  return node(Q, ee, ne, DECLARATION, substr(Q, 0, ie), substr(Q, ie + 1, -1), ie);
}
function serialize(Q, ee) {
  for (var ne = "", ie = sizeof(Q), ae = 0; ae < ie; ae++)
    ne += ee(Q[ae], ae, Q, ee) || "";
  return ne;
}
function stringify(Q, ee, ne, ie) {
  switch (Q.type) {
    case IMPORT:
    case DECLARATION:
      return Q.return = Q.return || Q.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return Q.return = Q.value + "{" + serialize(Q.children, ie) + "}";
    case RULESET:
      Q.value = Q.props.join(",");
  }
  return strlen(ne = serialize(Q.children, ie)) ? Q.return = Q.value + "{" + ne + "}" : "";
}
function middleware(Q) {
  var ee = sizeof(Q);
  return function(ne, ie, ae, ce) {
    for (var le = "", de = 0; de < ee; de++)
      le += Q[de](ne, ie, ae, ce) || "";
    return le;
  };
}
function rulesheet(Q) {
  return function(ee) {
    ee.root || (ee = ee.return) && Q(ee);
  };
}
var identifierWithPointTracking = function(ee, ne, ie) {
  for (var ae = 0, ce = 0; ae = ce, ce = peek(), ae === 38 && ce === 12 && (ne[ie] = 1), !token$1(ce); )
    next();
  return slice(ee, position$1);
}, toRules = function(ee, ne) {
  var ie = -1, ae = 44;
  do
    switch (token$1(ae)) {
      case 0:
        ae === 38 && peek() === 12 && (ne[ie] = 1), ee[ie] += identifierWithPointTracking(position$1 - 1, ne, ie);
        break;
      case 2:
        ee[ie] += delimit(ae);
        break;
      case 4:
        if (ae === 44) {
          ee[++ie] = peek() === 58 ? "&\f" : "", ne[ie] = ee[ie].length;
          break;
        }
      default:
        ee[ie] += from(ae);
    }
  while (ae = next());
  return ee;
}, getRules = function(ee, ne) {
  return dealloc(toRules(alloc(ee), ne));
}, fixedElements = /* @__PURE__ */ new WeakMap(), compat = function(ee) {
  if (!(ee.type !== "rule" || !ee.parent || ee.length < 1)) {
    for (var ne = ee.value, ie = ee.parent, ae = ee.column === ie.column && ee.line === ie.line; ie.type !== "rule"; )
      if (ie = ie.parent, !ie)
        return;
    if (!(ee.props.length === 1 && ne.charCodeAt(0) !== 58 && !fixedElements.get(ie)) && !ae) {
      fixedElements.set(ee, !0);
      for (var ce = [], le = getRules(ne, ce), de = ie.props, ye = 0, he = 0; ye < le.length; ye++)
        for (var Be = 0; Be < de.length; Be++, he++)
          ee.props[he] = ce[ye] ? le[ye].replace(/&\f/g, de[Be]) : de[Be] + " " + le[ye];
    }
  }
}, removeLabel = function(ee) {
  if (ee.type === "decl") {
    var ne = ee.value;
    ne.charCodeAt(0) === 108 && ne.charCodeAt(2) === 98 && (ee.return = "", ee.value = "");
  }
}, ignoreFlag = "emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason", isIgnoringComment = function(ee) {
  return ee.type === "comm" && ee.children.indexOf(ignoreFlag) > -1;
}, createUnsafeSelectorsAlarm = function(ee) {
  return function(ne, ie, ae) {
    if (!(ne.type !== "rule" || ee.compat)) {
      var ce = ne.value.match(/(:first|:nth|:nth-last)-child/g);
      if (ce) {
        for (var le = ne.parent === ae[0], de = le ? ae[0].children : ae, ye = de.length - 1; ye >= 0; ye--) {
          var he = de[ye];
          if (he.line < ne.line)
            break;
          if (he.column < ne.column) {
            if (isIgnoringComment(he))
              return;
            break;
          }
        }
        ce.forEach(function(Be) {
          console.error('The pseudo class "' + Be + '" is potentially unsafe when doing server-side rendering. Try changing it to "' + Be.split("-child")[0] + '-of-type".');
        });
      }
    }
  };
}, isImportRule = function(ee) {
  return ee.type.charCodeAt(1) === 105 && ee.type.charCodeAt(0) === 64;
}, isPrependedWithRegularRules = function(ee, ne) {
  for (var ie = ee - 1; ie >= 0; ie--)
    if (!isImportRule(ne[ie]))
      return !0;
  return !1;
}, nullifyElement = function(ee) {
  ee.type = "", ee.value = "", ee.return = "", ee.children = "", ee.props = "";
}, incorrectImportAlarm = function(ee, ne, ie) {
  !isImportRule(ee) || (ee.parent ? (console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles."), nullifyElement(ee)) : isPrependedWithRegularRules(ne, ie) && (console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules."), nullifyElement(ee)));
};
function prefix(Q, ee) {
  switch (hash$2(Q, ee)) {
    case 5103:
      return WEBKIT + "print-" + Q + Q;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + Q + Q;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + Q + MOZ + Q + MS + Q + Q;
    case 6828:
    case 4268:
      return WEBKIT + Q + MS + Q + Q;
    case 6165:
      return WEBKIT + Q + MS + "flex-" + Q + Q;
    case 5187:
      return WEBKIT + Q + replace(Q, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + Q;
    case 5443:
      return WEBKIT + Q + MS + "flex-item-" + replace(Q, /flex-|-self/, "") + Q;
    case 4675:
      return WEBKIT + Q + MS + "flex-line-pack" + replace(Q, /align-content|flex-|-self/, "") + Q;
    case 5548:
      return WEBKIT + Q + MS + replace(Q, "shrink", "negative") + Q;
    case 5292:
      return WEBKIT + Q + MS + replace(Q, "basis", "preferred-size") + Q;
    case 6060:
      return WEBKIT + "box-" + replace(Q, "-grow", "") + WEBKIT + Q + MS + replace(Q, "grow", "positive") + Q;
    case 4554:
      return WEBKIT + replace(Q, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + Q;
    case 6187:
      return replace(replace(replace(Q, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), Q, "") + Q;
    case 5495:
    case 3959:
      return replace(Q, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(Q, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + Q + Q;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(Q, /(.+)-inline(.+)/, WEBKIT + "$1$2") + Q;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(Q) - 1 - ee > 6)
        switch (charat(Q, ee + 1)) {
          case 109:
            if (charat(Q, ee + 4) !== 45)
              break;
          case 102:
            return replace(Q, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(Q, ee + 3) == 108 ? "$3" : "$2-$3")) + Q;
          case 115:
            return ~indexof(Q, "stretch") ? prefix(replace(Q, "stretch", "fill-available"), ee) + Q : Q;
        }
      break;
    case 4949:
      if (charat(Q, ee + 1) !== 115)
        break;
    case 6444:
      switch (charat(Q, strlen(Q) - 3 - (~indexof(Q, "!important") && 10))) {
        case 107:
          return replace(Q, ":", ":" + WEBKIT) + Q;
        case 101:
          return replace(Q, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(Q, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + Q;
      }
      break;
    case 5936:
      switch (charat(Q, ee + 11)) {
        case 114:
          return WEBKIT + Q + MS + replace(Q, /[svh]\w+-[tblr]{2}/, "tb") + Q;
        case 108:
          return WEBKIT + Q + MS + replace(Q, /[svh]\w+-[tblr]{2}/, "tb-rl") + Q;
        case 45:
          return WEBKIT + Q + MS + replace(Q, /[svh]\w+-[tblr]{2}/, "lr") + Q;
      }
      return WEBKIT + Q + MS + Q + Q;
  }
  return Q;
}
var prefixer = function(ee, ne, ie, ae) {
  if (ee.length > -1 && !ee.return)
    switch (ee.type) {
      case DECLARATION:
        ee.return = prefix(ee.value, ee.length);
        break;
      case KEYFRAMES:
        return serialize([copy(ee, {
          value: replace(ee.value, "@", "@" + WEBKIT)
        })], ae);
      case RULESET:
        if (ee.length)
          return combine(ee.props, function(ce) {
            switch (match(ce, /(::plac\w+|:read-\w+)/)) {
              case ":read-only":
              case ":read-write":
                return serialize([copy(ee, {
                  props: [replace(ce, /:(read-\w+)/, ":" + MOZ + "$1")]
                })], ae);
              case "::placeholder":
                return serialize([copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, ":" + WEBKIT + "input-$1")]
                }), copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, ":" + MOZ + "$1")]
                }), copy(ee, {
                  props: [replace(ce, /:(plac\w+)/, MS + "input-$1")]
                })], ae);
            }
            return "";
          });
    }
}, defaultStylisPlugins = [prefixer], createCache = function(ee) {
  var ne = ee.key;
  if (process.env.NODE_ENV !== "production" && !ne)
    throw new Error(`You have to configure \`key\` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.
If multiple caches share the same key they might "fight" for each other's style elements.`);
  if (ne === "css") {
    var ie = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(ie, function(we) {
      var Oe = we.getAttribute("data-emotion");
      Oe.indexOf(" ") !== -1 && (document.head.appendChild(we), we.setAttribute("data-s", ""));
    });
  }
  var ae = ee.stylisPlugins || defaultStylisPlugins;
  if (process.env.NODE_ENV !== "production" && /[^a-z-]/.test(ne))
    throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + ne + '" was passed');
  var ce = {}, le, de = [];
  le = ee.container || document.head, Array.prototype.forEach.call(
    document.querySelectorAll('style[data-emotion^="' + ne + ' "]'),
    function(we) {
      for (var Oe = we.getAttribute("data-emotion").split(" "), He = 1; He < Oe.length; He++)
        ce[Oe[He]] = !0;
      de.push(we);
    }
  );
  var ye, he = [compat, removeLabel];
  process.env.NODE_ENV !== "production" && he.push(createUnsafeSelectorsAlarm({
    get compat() {
      return be.compat;
    }
  }), incorrectImportAlarm);
  {
    var Be, Ee = [stringify, process.env.NODE_ENV !== "production" ? function(we) {
      we.root || (we.return ? Be.insert(we.return) : we.value && we.type !== COMMENT && Be.insert(we.value + "{}"));
    } : rulesheet(function(we) {
      Be.insert(we);
    })], me = middleware(he.concat(ae, Ee)), ge = function(Oe) {
      return serialize(compile(Oe), me);
    };
    ye = function(Oe, He, Se, Ge) {
      Be = Se, process.env.NODE_ENV !== "production" && He.map !== void 0 && (Be = {
        insert: function(Pe) {
          Se.insert(Pe + He.map);
        }
      }), ge(Oe ? Oe + "{" + He.styles + "}" : He.styles), Ge && (be.inserted[He.name] = !0);
    };
  }
  var be = {
    key: ne,
    sheet: new StyleSheet$1({
      key: ne,
      container: le,
      nonce: ee.nonce,
      speedy: ee.speedy,
      prepend: ee.prepend,
      insertionPoint: ee.insertionPoint
    }),
    nonce: ee.nonce,
    inserted: ce,
    registered: {},
    insert: ye
  };
  return be.sheet.hydrate(de), be;
}, reactIs$4 = { exports: {} }, reactIs_production_min$3 = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$3;
function requireReactIs_production_min$3() {
  if (hasRequiredReactIs_production_min$3)
    return reactIs_production_min$3;
  hasRequiredReactIs_production_min$3 = 1;
  var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, he = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, be = Q ? Symbol.for("react.lazy") : 60116, we = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
  function Ge(Pe) {
    if (typeof Pe == "object" && Pe !== null) {
      var We = Pe.$$typeof;
      switch (We) {
        case ee:
          switch (Pe = Pe.type, Pe) {
            case ye:
            case he:
            case ie:
            case ce:
            case ae:
            case Ee:
              return Pe;
            default:
              switch (Pe = Pe && Pe.$$typeof, Pe) {
                case de:
                case Be:
                case be:
                case ge:
                case le:
                  return Pe;
                default:
                  return We;
              }
          }
        case ne:
          return We;
      }
    }
  }
  function Fe(Pe) {
    return Ge(Pe) === he;
  }
  return reactIs_production_min$3.AsyncMode = ye, reactIs_production_min$3.ConcurrentMode = he, reactIs_production_min$3.ContextConsumer = de, reactIs_production_min$3.ContextProvider = le, reactIs_production_min$3.Element = ee, reactIs_production_min$3.ForwardRef = Be, reactIs_production_min$3.Fragment = ie, reactIs_production_min$3.Lazy = be, reactIs_production_min$3.Memo = ge, reactIs_production_min$3.Portal = ne, reactIs_production_min$3.Profiler = ce, reactIs_production_min$3.StrictMode = ae, reactIs_production_min$3.Suspense = Ee, reactIs_production_min$3.isAsyncMode = function(Pe) {
    return Fe(Pe) || Ge(Pe) === ye;
  }, reactIs_production_min$3.isConcurrentMode = Fe, reactIs_production_min$3.isContextConsumer = function(Pe) {
    return Ge(Pe) === de;
  }, reactIs_production_min$3.isContextProvider = function(Pe) {
    return Ge(Pe) === le;
  }, reactIs_production_min$3.isElement = function(Pe) {
    return typeof Pe == "object" && Pe !== null && Pe.$$typeof === ee;
  }, reactIs_production_min$3.isForwardRef = function(Pe) {
    return Ge(Pe) === Be;
  }, reactIs_production_min$3.isFragment = function(Pe) {
    return Ge(Pe) === ie;
  }, reactIs_production_min$3.isLazy = function(Pe) {
    return Ge(Pe) === be;
  }, reactIs_production_min$3.isMemo = function(Pe) {
    return Ge(Pe) === ge;
  }, reactIs_production_min$3.isPortal = function(Pe) {
    return Ge(Pe) === ne;
  }, reactIs_production_min$3.isProfiler = function(Pe) {
    return Ge(Pe) === ce;
  }, reactIs_production_min$3.isStrictMode = function(Pe) {
    return Ge(Pe) === ae;
  }, reactIs_production_min$3.isSuspense = function(Pe) {
    return Ge(Pe) === Ee;
  }, reactIs_production_min$3.isValidElementType = function(Pe) {
    return typeof Pe == "string" || typeof Pe == "function" || Pe === ie || Pe === he || Pe === ce || Pe === ae || Pe === Ee || Pe === me || typeof Pe == "object" && Pe !== null && (Pe.$$typeof === be || Pe.$$typeof === ge || Pe.$$typeof === le || Pe.$$typeof === de || Pe.$$typeof === Be || Pe.$$typeof === Oe || Pe.$$typeof === He || Pe.$$typeof === Se || Pe.$$typeof === we);
  }, reactIs_production_min$3.typeOf = Ge, reactIs_production_min$3;
}
var reactIs_development$3 = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$3;
function requireReactIs_development$3() {
  return hasRequiredReactIs_development$3 || (hasRequiredReactIs_development$3 = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, he = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, be = Q ? Symbol.for("react.lazy") : 60116, we = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
    function Ge(je) {
      return typeof je == "string" || typeof je == "function" || je === ie || je === he || je === ce || je === ae || je === Ee || je === me || typeof je == "object" && je !== null && (je.$$typeof === be || je.$$typeof === ge || je.$$typeof === le || je.$$typeof === de || je.$$typeof === Be || je.$$typeof === Oe || je.$$typeof === He || je.$$typeof === Se || je.$$typeof === we);
    }
    function Fe(je) {
      if (typeof je == "object" && je !== null) {
        var It = je.$$typeof;
        switch (It) {
          case ee:
            var lt = je.type;
            switch (lt) {
              case ye:
              case he:
              case ie:
              case ce:
              case ae:
              case Ee:
                return lt;
              default:
                var Ye = lt && lt.$$typeof;
                switch (Ye) {
                  case de:
                  case Be:
                  case be:
                  case ge:
                  case le:
                    return Ye;
                  default:
                    return It;
                }
            }
          case ne:
            return It;
        }
      }
    }
    var Pe = ye, We = he, tt = de, Et = le, Nt = ee, et = Be, mt = ie, Mt = be, Ot = ge, yt = ne, Qt = ce, Yt = ae, jt = Ee, $t = !1;
    function Wt(je) {
      return $t || ($t = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), st(je) || Fe(je) === ye;
    }
    function st(je) {
      return Fe(je) === he;
    }
    function at(je) {
      return Fe(je) === de;
    }
    function wt(je) {
      return Fe(je) === le;
    }
    function Ut(je) {
      return typeof je == "object" && je !== null && je.$$typeof === ee;
    }
    function $e(je) {
      return Fe(je) === Be;
    }
    function ir(je) {
      return Fe(je) === ie;
    }
    function tr(je) {
      return Fe(je) === be;
    }
    function ar(je) {
      return Fe(je) === ge;
    }
    function ht(je) {
      return Fe(je) === ne;
    }
    function qt(je) {
      return Fe(je) === ce;
    }
    function Xe(je) {
      return Fe(je) === ae;
    }
    function nt(je) {
      return Fe(je) === Ee;
    }
    reactIs_development$3.AsyncMode = Pe, reactIs_development$3.ConcurrentMode = We, reactIs_development$3.ContextConsumer = tt, reactIs_development$3.ContextProvider = Et, reactIs_development$3.Element = Nt, reactIs_development$3.ForwardRef = et, reactIs_development$3.Fragment = mt, reactIs_development$3.Lazy = Mt, reactIs_development$3.Memo = Ot, reactIs_development$3.Portal = yt, reactIs_development$3.Profiler = Qt, reactIs_development$3.StrictMode = Yt, reactIs_development$3.Suspense = jt, reactIs_development$3.isAsyncMode = Wt, reactIs_development$3.isConcurrentMode = st, reactIs_development$3.isContextConsumer = at, reactIs_development$3.isContextProvider = wt, reactIs_development$3.isElement = Ut, reactIs_development$3.isForwardRef = $e, reactIs_development$3.isFragment = ir, reactIs_development$3.isLazy = tr, reactIs_development$3.isMemo = ar, reactIs_development$3.isPortal = ht, reactIs_development$3.isProfiler = qt, reactIs_development$3.isStrictMode = Xe, reactIs_development$3.isSuspense = nt, reactIs_development$3.isValidElementType = Ge, reactIs_development$3.typeOf = Fe;
  }()), reactIs_development$3;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReactIs_production_min$3() : Q.exports = requireReactIs_development$3();
})(reactIs$4);
var reactIs$3 = reactIs$4.exports, FORWARD_REF_STATICS = {
  $$typeof: !0,
  render: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0
}, MEMO_STATICS = {
  $$typeof: !0,
  compare: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0,
  type: !0
}, TYPE_STATICS$1 = {};
TYPE_STATICS$1[reactIs$3.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS$1[reactIs$3.Memo] = MEMO_STATICS;
var isBrowser$1 = !0;
function getRegisteredStyles(Q, ee, ne) {
  var ie = "";
  return ne.split(" ").forEach(function(ae) {
    Q[ae] !== void 0 ? ee.push(Q[ae] + ";") : ie += ae + " ";
  }), ie;
}
var registerStyles = function(ee, ne, ie) {
  var ae = ee.key + "-" + ne.name;
  (ie === !1 || isBrowser$1 === !1) && ee.registered[ae] === void 0 && (ee.registered[ae] = ne.styles);
}, insertStyles = function(ee, ne, ie) {
  registerStyles(ee, ne, ie);
  var ae = ee.key + "-" + ne.name;
  if (ee.inserted[ne.name] === void 0) {
    var ce = ne;
    do
      ee.insert(ne === ce ? "." + ae : "", ce, ee.sheet, !0), ce = ce.next;
    while (ce !== void 0);
  }
};
function murmur2(Q) {
  for (var ee = 0, ne, ie = 0, ae = Q.length; ae >= 4; ++ie, ae -= 4)
    ne = Q.charCodeAt(ie) & 255 | (Q.charCodeAt(++ie) & 255) << 8 | (Q.charCodeAt(++ie) & 255) << 16 | (Q.charCodeAt(++ie) & 255) << 24, ne = (ne & 65535) * 1540483477 + ((ne >>> 16) * 59797 << 16), ne ^= ne >>> 24, ee = (ne & 65535) * 1540483477 + ((ne >>> 16) * 59797 << 16) ^ (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16);
  switch (ae) {
    case 3:
      ee ^= (Q.charCodeAt(ie + 2) & 255) << 16;
    case 2:
      ee ^= (Q.charCodeAt(ie + 1) & 255) << 8;
    case 1:
      ee ^= Q.charCodeAt(ie) & 255, ee = (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16);
  }
  return ee ^= ee >>> 13, ee = (ee & 65535) * 1540483477 + ((ee >>> 16) * 59797 << 16), ((ee ^ ee >>> 15) >>> 0).toString(36);
}
var unitlessKeys$1 = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, ILLEGAL_ESCAPE_SEQUENCE_ERROR$1 = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`, UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).", hyphenateRegex = /[A-Z]|^ms/g, animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g, isCustomProperty = function(ee) {
  return ee.charCodeAt(1) === 45;
}, isProcessableValue = function(ee) {
  return ee != null && typeof ee != "boolean";
}, processStyleName = /* @__PURE__ */ memoize$3(function(Q) {
  return isCustomProperty(Q) ? Q : Q.replace(hyphenateRegex, "-$&").toLowerCase();
}), processStyleValue = function(ee, ne) {
  switch (ee) {
    case "animation":
    case "animationName":
      if (typeof ne == "string")
        return ne.replace(animationRegex, function(ie, ae, ce) {
          return cursor = {
            name: ae,
            styles: ce,
            next: cursor
          }, ae;
        });
  }
  return unitlessKeys$1[ee] !== 1 && !isCustomProperty(ee) && typeof ne == "number" && ne !== 0 ? ne + "px" : ne;
};
if (process.env.NODE_ENV !== "production") {
  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/, contentValues = ["normal", "none", "initial", "inherit", "unset"], oldProcessStyleValue = processStyleValue, msPattern$1 = /^-ms-/, hyphenPattern = /-(.)/g, hyphenatedCache = {};
  processStyleValue = function(ee, ne) {
    if (ee === "content" && (typeof ne != "string" || contentValues.indexOf(ne) === -1 && !contentValuePattern.test(ne) && (ne.charAt(0) !== ne.charAt(ne.length - 1) || ne.charAt(0) !== '"' && ne.charAt(0) !== "'")))
      throw new Error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + ne + "\"'`");
    var ie = oldProcessStyleValue(ee, ne);
    return ie !== "" && !isCustomProperty(ee) && ee.indexOf("-") !== -1 && hyphenatedCache[ee] === void 0 && (hyphenatedCache[ee] = !0, console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + ee.replace(msPattern$1, "ms-").replace(hyphenPattern, function(ae, ce) {
      return ce.toUpperCase();
    }) + "?")), ie;
  };
}
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(Q, ee, ne) {
  if (ne == null)
    return "";
  if (ne.__emotion_styles !== void 0) {
    if (process.env.NODE_ENV !== "production" && ne.toString() === "NO_COMPONENT_SELECTOR")
      throw new Error(noComponentSelectorMessage);
    return ne;
  }
  switch (typeof ne) {
    case "boolean":
      return "";
    case "object": {
      if (ne.anim === 1)
        return cursor = {
          name: ne.name,
          styles: ne.styles,
          next: cursor
        }, ne.name;
      if (ne.styles !== void 0) {
        var ie = ne.next;
        if (ie !== void 0)
          for (; ie !== void 0; )
            cursor = {
              name: ie.name,
              styles: ie.styles,
              next: cursor
            }, ie = ie.next;
        var ae = ne.styles + ";";
        return process.env.NODE_ENV !== "production" && ne.map !== void 0 && (ae += ne.map), ae;
      }
      return createStringFromObject(Q, ee, ne);
    }
    case "function": {
      if (Q !== void 0) {
        var ce = cursor, le = ne(Q);
        return cursor = ce, handleInterpolation(Q, ee, le);
      } else
        process.env.NODE_ENV !== "production" && console.error("Functions that are interpolated in css calls will be stringified.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`");
      break;
    }
    case "string":
      if (process.env.NODE_ENV !== "production") {
        var de = [], ye = ne.replace(animationRegex, function(Be, Ee, me) {
          var ge = "animation" + de.length;
          return de.push("const " + ge + " = keyframes`" + me.replace(/^@keyframes animation-\w+/, "") + "`"), "${" + ge + "}";
        });
        de.length && console.error("`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\nInstead of doing this:\n\n" + [].concat(de, ["`" + ye + "`"]).join(`
`) + `

You should wrap it with \`css\` like this:

` + ("css`" + ye + "`"));
      }
      break;
  }
  if (ee == null)
    return ne;
  var he = ee[ne];
  return he !== void 0 ? he : ne;
}
function createStringFromObject(Q, ee, ne) {
  var ie = "";
  if (Array.isArray(ne))
    for (var ae = 0; ae < ne.length; ae++)
      ie += handleInterpolation(Q, ee, ne[ae]) + ";";
  else
    for (var ce in ne) {
      var le = ne[ce];
      if (typeof le != "object")
        ee != null && ee[le] !== void 0 ? ie += ce + "{" + ee[le] + "}" : isProcessableValue(le) && (ie += processStyleName(ce) + ":" + processStyleValue(ce, le) + ";");
      else {
        if (ce === "NO_COMPONENT_SELECTOR" && process.env.NODE_ENV !== "production")
          throw new Error(noComponentSelectorMessage);
        if (Array.isArray(le) && typeof le[0] == "string" && (ee == null || ee[le[0]] === void 0))
          for (var de = 0; de < le.length; de++)
            isProcessableValue(le[de]) && (ie += processStyleName(ce) + ":" + processStyleValue(ce, le[de]) + ";");
        else {
          var ye = handleInterpolation(Q, ee, le);
          switch (ce) {
            case "animation":
            case "animationName": {
              ie += processStyleName(ce) + ":" + ye + ";";
              break;
            }
            default:
              process.env.NODE_ENV !== "production" && ce === "undefined" && console.error(UNDEFINED_AS_OBJECT_KEY_ERROR), ie += ce + "{" + ye + "}";
          }
        }
      }
    }
  return ie;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g, sourceMapPattern;
process.env.NODE_ENV !== "production" && (sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g);
var cursor, serializeStyles = function(ee, ne, ie) {
  if (ee.length === 1 && typeof ee[0] == "object" && ee[0] !== null && ee[0].styles !== void 0)
    return ee[0];
  var ae = !0, ce = "";
  cursor = void 0;
  var le = ee[0];
  le == null || le.raw === void 0 ? (ae = !1, ce += handleInterpolation(ie, ne, le)) : (process.env.NODE_ENV !== "production" && le[0] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1), ce += le[0]);
  for (var de = 1; de < ee.length; de++)
    ce += handleInterpolation(ie, ne, ee[de]), ae && (process.env.NODE_ENV !== "production" && le[de] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR$1), ce += le[de]);
  var ye;
  process.env.NODE_ENV !== "production" && (ce = ce.replace(sourceMapPattern, function(me) {
    return ye = me, "";
  })), labelPattern.lastIndex = 0;
  for (var he = "", Be; (Be = labelPattern.exec(ce)) !== null; )
    he += "-" + Be[1];
  var Ee = murmur2(ce) + he;
  return process.env.NODE_ENV !== "production" ? {
    name: Ee,
    styles: ce,
    map: ye,
    next: cursor,
    toString: function() {
      return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
    }
  } : {
    name: Ee,
    styles: ce,
    next: cursor
  };
}, syncFallback = function(ee) {
  return ee();
}, useInsertionEffect = React$1["useInsertionEffect"] ? React$1["useInsertionEffect"] : !1, useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback, useInsertionEffectWithLayoutFallback = useInsertionEffect || react.exports.useLayoutEffect, hasOwnProperty = {}.hasOwnProperty, EmotionCacheContext = /* @__PURE__ */ react.exports.createContext(
  typeof HTMLElement < "u" ? /* @__PURE__ */ createCache({
    key: "css"
  }) : null
);
process.env.NODE_ENV !== "production" && (EmotionCacheContext.displayName = "EmotionCacheContext");
EmotionCacheContext.Provider;
var withEmotionCache = function(ee) {
  return /* @__PURE__ */ react.exports.forwardRef(function(ne, ie) {
    var ae = react.exports.useContext(EmotionCacheContext);
    return ee(ne, ae, ie);
  });
}, ThemeContext$3 = /* @__PURE__ */ react.exports.createContext({});
process.env.NODE_ENV !== "production" && (ThemeContext$3.displayName = "EmotionThemeContext");
var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__", Insertion$2 = function(ee) {
  var ne = ee.cache, ie = ee.serialized, ae = ee.isStringTag;
  return registerStyles(ne, ie, ae), useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(ne, ie, ae);
  }), null;
}, Emotion = /* @__PURE__ */ withEmotionCache(function(Q, ee, ne) {
  var ie = Q.css;
  typeof ie == "string" && ee.registered[ie] !== void 0 && (ie = ee.registered[ie]);
  var ae = Q[typePropName], ce = [ie], le = "";
  typeof Q.className == "string" ? le = getRegisteredStyles(ee.registered, ce, Q.className) : Q.className != null && (le = Q.className + " ");
  var de = serializeStyles(ce, void 0, react.exports.useContext(ThemeContext$3));
  if (process.env.NODE_ENV !== "production" && de.name.indexOf("-") === -1) {
    var ye = Q[labelPropName];
    ye && (de = serializeStyles([de, "label:" + ye + ";"]));
  }
  le += ee.key + "-" + de.name;
  var he = {};
  for (var Be in Q)
    hasOwnProperty.call(Q, Be) && Be !== "css" && Be !== typePropName && (process.env.NODE_ENV === "production" || Be !== labelPropName) && (he[Be] = Q[Be]);
  return he.ref = ne, he.className = le, /* @__PURE__ */ react.exports.createElement(react.exports.Fragment, null, /* @__PURE__ */ react.exports.createElement(Insertion$2, {
    cache: ee,
    serialized: de,
    isStringTag: typeof ae == "string"
  }), /* @__PURE__ */ react.exports.createElement(ae, he));
});
process.env.NODE_ENV !== "production" && (Emotion.displayName = "EmotionCssPropInternal");
var pkg = {
  name: "@emotion/react",
  version: "11.10.5",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  exports: {
    ".": {
      module: {
        worker: "./dist/emotion-react.worker.esm.js",
        browser: "./dist/emotion-react.browser.esm.js",
        default: "./dist/emotion-react.esm.js"
      },
      default: "./dist/emotion-react.cjs.js"
    },
    "./jsx-runtime": {
      module: {
        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
        default: "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
      },
      default: "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
    },
    "./_isolated-hnrs": {
      module: {
        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
        default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
      },
      default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
    },
    "./jsx-dev-runtime": {
      module: {
        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
        default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
      },
      default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
    },
    "./package.json": "./package.json",
    "./types/css-prop": "./types/css-prop.d.ts",
    "./macro": "./macro.js"
  },
  types: "types/index.d.ts",
  files: [
    "src",
    "dist",
    "jsx-runtime",
    "jsx-dev-runtime",
    "_isolated-hnrs",
    "types/*.d.ts",
    "macro.js",
    "macro.d.ts",
    "macro.js.flow"
  ],
  sideEffects: !1,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.18.3",
    "@emotion/babel-plugin": "^11.10.5",
    "@emotion/cache": "^11.10.5",
    "@emotion/serialize": "^1.1.1",
    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.0",
    "@emotion/utils": "^1.2.0",
    "@emotion/weak-memoize": "^0.3.0",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    "@babel/core": "^7.0.0",
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@babel/core": {
      optional: !0
    },
    "@types/react": {
      optional: !0
    }
  },
  devDependencies: {
    "@babel/core": "^7.18.5",
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.10.5",
    "@emotion/css-prettifier": "1.1.1",
    "@emotion/server": "11.10.0",
    "@emotion/styled": "11.10.5",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^4.5.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: [
      "./index.js",
      "./jsx-runtime.js",
      "./jsx-dev-runtime.js",
      "./_isolated-hnrs.js"
    ],
    umdName: "emotionReact",
    exports: {
      envConditions: [
        "browser",
        "worker"
      ],
      extra: {
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": "./macro.js"
      }
    }
  }
}, warnedAboutCssPropForGlobal = !1, Global = /* @__PURE__ */ withEmotionCache(function(Q, ee) {
  process.env.NODE_ENV !== "production" && !warnedAboutCssPropForGlobal && (Q.className || Q.css) && (console.error("It looks like you're using the css prop on Global, did you mean to use the styles prop instead?"), warnedAboutCssPropForGlobal = !0);
  var ne = Q.styles, ie = serializeStyles([ne], void 0, react.exports.useContext(ThemeContext$3)), ae = react.exports.useRef();
  return useInsertionEffectWithLayoutFallback(function() {
    var ce = ee.key + "-global", le = new ee.sheet.constructor({
      key: ce,
      nonce: ee.sheet.nonce,
      container: ee.sheet.container,
      speedy: ee.sheet.isSpeedy
    }), de = !1, ye = document.querySelector('style[data-emotion="' + ce + " " + ie.name + '"]');
    return ee.sheet.tags.length && (le.before = ee.sheet.tags[0]), ye !== null && (de = !0, ye.setAttribute("data-emotion", ce), le.hydrate([ye])), ae.current = [le, de], function() {
      le.flush();
    };
  }, [ee]), useInsertionEffectWithLayoutFallback(function() {
    var ce = ae.current, le = ce[0], de = ce[1];
    if (de) {
      ce[1] = !1;
      return;
    }
    if (ie.next !== void 0 && insertStyles(ee, ie.next, !0), le.tags.length) {
      var ye = le.tags[le.tags.length - 1].nextElementSibling;
      le.before = ye, le.flush();
    }
    ee.insert("", ie, le, !1);
  }, [ee, ie.name]), null;
});
process.env.NODE_ENV !== "production" && (Global.displayName = "EmotionGlobal");
function css$1() {
  for (var Q = arguments.length, ee = new Array(Q), ne = 0; ne < Q; ne++)
    ee[ne] = arguments[ne];
  return serializeStyles(ee);
}
var keyframes = function() {
  var ee = css$1.apply(void 0, arguments), ne = "animation-" + ee.name;
  return {
    name: ne,
    styles: "@keyframes " + ne + "{" + ee.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}, classnames$2 = function Q(ee) {
  for (var ne = ee.length, ie = 0, ae = ""; ie < ne; ie++) {
    var ce = ee[ie];
    if (ce != null) {
      var le = void 0;
      switch (typeof ce) {
        case "boolean":
          break;
        case "object": {
          if (Array.isArray(ce))
            le = Q(ce);
          else {
            process.env.NODE_ENV !== "production" && ce.styles !== void 0 && ce.name !== void 0 && console.error("You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component."), le = "";
            for (var de in ce)
              ce[de] && de && (le && (le += " "), le += de);
          }
          break;
        }
        default:
          le = ce;
      }
      le && (ae && (ae += " "), ae += le);
    }
  }
  return ae;
};
function merge$3(Q, ee, ne) {
  var ie = [], ae = getRegisteredStyles(Q, ie, ne);
  return ie.length < 2 ? ne : ae + ee(ie);
}
var Insertion$1 = function(ee) {
  var ne = ee.cache, ie = ee.serializedArr;
  return useInsertionEffectAlwaysWithSyncFallback(function() {
    for (var ae = 0; ae < ie.length; ae++)
      insertStyles(ne, ie[ae], !1);
  }), null;
}, ClassNames = /* @__PURE__ */ withEmotionCache(function(Q, ee) {
  var ne = !1, ie = [], ae = function() {
    if (ne && process.env.NODE_ENV !== "production")
      throw new Error("css can only be used during render");
    for (var he = arguments.length, Be = new Array(he), Ee = 0; Ee < he; Ee++)
      Be[Ee] = arguments[Ee];
    var me = serializeStyles(Be, ee.registered);
    return ie.push(me), registerStyles(ee, me, !1), ee.key + "-" + me.name;
  }, ce = function() {
    if (ne && process.env.NODE_ENV !== "production")
      throw new Error("cx can only be used during render");
    for (var he = arguments.length, Be = new Array(he), Ee = 0; Ee < he; Ee++)
      Be[Ee] = arguments[Ee];
    return merge$3(ee.registered, ae, classnames$2(Be));
  }, le = {
    css: ae,
    cx: ce,
    theme: react.exports.useContext(ThemeContext$3)
  }, de = Q.children(le);
  return ne = !0, /* @__PURE__ */ react.exports.createElement(react.exports.Fragment, null, /* @__PURE__ */ react.exports.createElement(Insertion$1, {
    cache: ee,
    serializedArr: ie
  }), de);
});
process.env.NODE_ENV !== "production" && (ClassNames.displayName = "EmotionClassNames");
if (process.env.NODE_ENV !== "production") {
  var isBrowser = !0, isTestEnv = typeof jest < "u" || typeof vi < "u";
  if (isBrowser && !isTestEnv) {
    var globalContext = typeof globalThis < "u" ? globalThis : isBrowser ? window : global, globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";
    globalContext[globalKey] && console.warn("You are loading @emotion/react when it is already loaded. Running multiple instances may cause problems. This can happen if multiple versions are used, or if multiple builds of the same version are used."), globalContext[globalKey] = !0;
  }
}
var testOmitPropsOnStringTag = isPropValid, testOmitPropsOnComponent = function(ee) {
  return ee !== "theme";
}, getDefaultShouldForwardProp = function(ee) {
  return typeof ee == "string" && ee.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
}, composeShouldForwardProps = function(ee, ne, ie) {
  var ae;
  if (ne) {
    var ce = ne.shouldForwardProp;
    ae = ee.__emotion_forwardProp && ce ? function(le) {
      return ee.__emotion_forwardProp(le) && ce(le);
    } : ce;
  }
  return typeof ae != "function" && ie && (ae = ee.__emotion_forwardProp), ae;
}, ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`, Insertion = function(ee) {
  var ne = ee.cache, ie = ee.serialized, ae = ee.isStringTag;
  return registerStyles(ne, ie, ae), useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(ne, ie, ae);
  }), null;
}, createStyled$1 = function Q(ee, ne) {
  if (process.env.NODE_ENV !== "production" && ee === void 0)
    throw new Error(`You are trying to create a styled element with an undefined component.
You may have forgotten to import it.`);
  var ie = ee.__emotion_real === ee, ae = ie && ee.__emotion_base || ee, ce, le;
  ne !== void 0 && (ce = ne.label, le = ne.target);
  var de = composeShouldForwardProps(ee, ne, ie), ye = de || getDefaultShouldForwardProp(ae), he = !ye("as");
  return function() {
    var Be = arguments, Ee = ie && ee.__emotion_styles !== void 0 ? ee.__emotion_styles.slice(0) : [];
    if (ce !== void 0 && Ee.push("label:" + ce + ";"), Be[0] == null || Be[0].raw === void 0)
      Ee.push.apply(Ee, Be);
    else {
      process.env.NODE_ENV !== "production" && Be[0][0] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR), Ee.push(Be[0][0]);
      for (var me = Be.length, ge = 1; ge < me; ge++)
        process.env.NODE_ENV !== "production" && Be[0][ge] === void 0 && console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR), Ee.push(Be[ge], Be[0][ge]);
    }
    var be = withEmotionCache(function(we, Oe, He) {
      var Se = he && we.as || ae, Ge = "", Fe = [], Pe = we;
      if (we.theme == null) {
        Pe = {};
        for (var We in we)
          Pe[We] = we[We];
        Pe.theme = react.exports.useContext(ThemeContext$3);
      }
      typeof we.className == "string" ? Ge = getRegisteredStyles(Oe.registered, Fe, we.className) : we.className != null && (Ge = we.className + " ");
      var tt = serializeStyles(Ee.concat(Fe), Oe.registered, Pe);
      Ge += Oe.key + "-" + tt.name, le !== void 0 && (Ge += " " + le);
      var Et = he && de === void 0 ? getDefaultShouldForwardProp(Se) : ye, Nt = {};
      for (var et in we)
        he && et === "as" || Et(et) && (Nt[et] = we[et]);
      return Nt.className = Ge, Nt.ref = He, /* @__PURE__ */ react.exports.createElement(react.exports.Fragment, null, /* @__PURE__ */ react.exports.createElement(Insertion, {
        cache: Oe,
        serialized: tt,
        isStringTag: typeof Se == "string"
      }), /* @__PURE__ */ react.exports.createElement(Se, Nt));
    });
    return be.displayName = ce !== void 0 ? ce : "Styled(" + (typeof ae == "string" ? ae : ae.displayName || ae.name || "Component") + ")", be.defaultProps = ee.defaultProps, be.__emotion_real = be, be.__emotion_base = ae, be.__emotion_styles = Ee, be.__emotion_forwardProp = de, Object.defineProperty(be, "toString", {
      value: function() {
        return le === void 0 && process.env.NODE_ENV !== "production" ? "NO_COMPONENT_SELECTOR" : "." + le;
      }
    }), be.withComponent = function(we, Oe) {
      return Q(we, _extends$1({}, ne, Oe, {
        shouldForwardProp: composeShouldForwardProps(be, Oe, !0)
      })).apply(void 0, Ee);
    }, be;
  };
}, tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], newStyled = createStyled$1.bind();
tags.forEach(function(Q) {
  newStyled[Q] = newStyled(Q);
});
const emStyled = newStyled;
var propTypes = { exports: {} }, reactIs$2 = { exports: {} }, reactIs_production_min$2 = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$2;
function requireReactIs_production_min$2() {
  if (hasRequiredReactIs_production_min$2)
    return reactIs_production_min$2;
  hasRequiredReactIs_production_min$2 = 1;
  var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, he = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, be = Q ? Symbol.for("react.lazy") : 60116, we = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
  function Ge(Pe) {
    if (typeof Pe == "object" && Pe !== null) {
      var We = Pe.$$typeof;
      switch (We) {
        case ee:
          switch (Pe = Pe.type, Pe) {
            case ye:
            case he:
            case ie:
            case ce:
            case ae:
            case Ee:
              return Pe;
            default:
              switch (Pe = Pe && Pe.$$typeof, Pe) {
                case de:
                case Be:
                case be:
                case ge:
                case le:
                  return Pe;
                default:
                  return We;
              }
          }
        case ne:
          return We;
      }
    }
  }
  function Fe(Pe) {
    return Ge(Pe) === he;
  }
  return reactIs_production_min$2.AsyncMode = ye, reactIs_production_min$2.ConcurrentMode = he, reactIs_production_min$2.ContextConsumer = de, reactIs_production_min$2.ContextProvider = le, reactIs_production_min$2.Element = ee, reactIs_production_min$2.ForwardRef = Be, reactIs_production_min$2.Fragment = ie, reactIs_production_min$2.Lazy = be, reactIs_production_min$2.Memo = ge, reactIs_production_min$2.Portal = ne, reactIs_production_min$2.Profiler = ce, reactIs_production_min$2.StrictMode = ae, reactIs_production_min$2.Suspense = Ee, reactIs_production_min$2.isAsyncMode = function(Pe) {
    return Fe(Pe) || Ge(Pe) === ye;
  }, reactIs_production_min$2.isConcurrentMode = Fe, reactIs_production_min$2.isContextConsumer = function(Pe) {
    return Ge(Pe) === de;
  }, reactIs_production_min$2.isContextProvider = function(Pe) {
    return Ge(Pe) === le;
  }, reactIs_production_min$2.isElement = function(Pe) {
    return typeof Pe == "object" && Pe !== null && Pe.$$typeof === ee;
  }, reactIs_production_min$2.isForwardRef = function(Pe) {
    return Ge(Pe) === Be;
  }, reactIs_production_min$2.isFragment = function(Pe) {
    return Ge(Pe) === ie;
  }, reactIs_production_min$2.isLazy = function(Pe) {
    return Ge(Pe) === be;
  }, reactIs_production_min$2.isMemo = function(Pe) {
    return Ge(Pe) === ge;
  }, reactIs_production_min$2.isPortal = function(Pe) {
    return Ge(Pe) === ne;
  }, reactIs_production_min$2.isProfiler = function(Pe) {
    return Ge(Pe) === ce;
  }, reactIs_production_min$2.isStrictMode = function(Pe) {
    return Ge(Pe) === ae;
  }, reactIs_production_min$2.isSuspense = function(Pe) {
    return Ge(Pe) === Ee;
  }, reactIs_production_min$2.isValidElementType = function(Pe) {
    return typeof Pe == "string" || typeof Pe == "function" || Pe === ie || Pe === he || Pe === ce || Pe === ae || Pe === Ee || Pe === me || typeof Pe == "object" && Pe !== null && (Pe.$$typeof === be || Pe.$$typeof === ge || Pe.$$typeof === le || Pe.$$typeof === de || Pe.$$typeof === Be || Pe.$$typeof === Oe || Pe.$$typeof === He || Pe.$$typeof === Se || Pe.$$typeof === we);
  }, reactIs_production_min$2.typeOf = Ge, reactIs_production_min$2;
}
var reactIs_development$2 = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$2;
function requireReactIs_development$2() {
  return hasRequiredReactIs_development$2 || (hasRequiredReactIs_development$2 = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, he = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, be = Q ? Symbol.for("react.lazy") : 60116, we = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
    function Ge(je) {
      return typeof je == "string" || typeof je == "function" || je === ie || je === he || je === ce || je === ae || je === Ee || je === me || typeof je == "object" && je !== null && (je.$$typeof === be || je.$$typeof === ge || je.$$typeof === le || je.$$typeof === de || je.$$typeof === Be || je.$$typeof === Oe || je.$$typeof === He || je.$$typeof === Se || je.$$typeof === we);
    }
    function Fe(je) {
      if (typeof je == "object" && je !== null) {
        var It = je.$$typeof;
        switch (It) {
          case ee:
            var lt = je.type;
            switch (lt) {
              case ye:
              case he:
              case ie:
              case ce:
              case ae:
              case Ee:
                return lt;
              default:
                var Ye = lt && lt.$$typeof;
                switch (Ye) {
                  case de:
                  case Be:
                  case be:
                  case ge:
                  case le:
                    return Ye;
                  default:
                    return It;
                }
            }
          case ne:
            return It;
        }
      }
    }
    var Pe = ye, We = he, tt = de, Et = le, Nt = ee, et = Be, mt = ie, Mt = be, Ot = ge, yt = ne, Qt = ce, Yt = ae, jt = Ee, $t = !1;
    function Wt(je) {
      return $t || ($t = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), st(je) || Fe(je) === ye;
    }
    function st(je) {
      return Fe(je) === he;
    }
    function at(je) {
      return Fe(je) === de;
    }
    function wt(je) {
      return Fe(je) === le;
    }
    function Ut(je) {
      return typeof je == "object" && je !== null && je.$$typeof === ee;
    }
    function $e(je) {
      return Fe(je) === Be;
    }
    function ir(je) {
      return Fe(je) === ie;
    }
    function tr(je) {
      return Fe(je) === be;
    }
    function ar(je) {
      return Fe(je) === ge;
    }
    function ht(je) {
      return Fe(je) === ne;
    }
    function qt(je) {
      return Fe(je) === ce;
    }
    function Xe(je) {
      return Fe(je) === ae;
    }
    function nt(je) {
      return Fe(je) === Ee;
    }
    reactIs_development$2.AsyncMode = Pe, reactIs_development$2.ConcurrentMode = We, reactIs_development$2.ContextConsumer = tt, reactIs_development$2.ContextProvider = Et, reactIs_development$2.Element = Nt, reactIs_development$2.ForwardRef = et, reactIs_development$2.Fragment = mt, reactIs_development$2.Lazy = Mt, reactIs_development$2.Memo = Ot, reactIs_development$2.Portal = yt, reactIs_development$2.Profiler = Qt, reactIs_development$2.StrictMode = Yt, reactIs_development$2.Suspense = jt, reactIs_development$2.isAsyncMode = Wt, reactIs_development$2.isConcurrentMode = st, reactIs_development$2.isContextConsumer = at, reactIs_development$2.isContextProvider = wt, reactIs_development$2.isElement = Ut, reactIs_development$2.isForwardRef = $e, reactIs_development$2.isFragment = ir, reactIs_development$2.isLazy = tr, reactIs_development$2.isMemo = ar, reactIs_development$2.isPortal = ht, reactIs_development$2.isProfiler = qt, reactIs_development$2.isStrictMode = Xe, reactIs_development$2.isSuspense = nt, reactIs_development$2.isValidElementType = Ge, reactIs_development$2.typeOf = Fe;
  }()), reactIs_development$2;
}
var hasRequiredReactIs;
function requireReactIs() {
  return hasRequiredReactIs || (hasRequiredReactIs = 1, function(Q) {
    process.env.NODE_ENV === "production" ? Q.exports = requireReactIs_production_min$2() : Q.exports = requireReactIs_development$2();
  }(reactIs$2)), reactIs$2.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var objectAssign, hasRequiredObjectAssign;
function requireObjectAssign() {
  if (hasRequiredObjectAssign)
    return objectAssign;
  hasRequiredObjectAssign = 1;
  var Q = Object.getOwnPropertySymbols, ee = Object.prototype.hasOwnProperty, ne = Object.prototype.propertyIsEnumerable;
  function ie(ce) {
    if (ce == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(ce);
  }
  function ae() {
    try {
      if (!Object.assign)
        return !1;
      var ce = new String("abc");
      if (ce[5] = "de", Object.getOwnPropertyNames(ce)[0] === "5")
        return !1;
      for (var le = {}, de = 0; de < 10; de++)
        le["_" + String.fromCharCode(de)] = de;
      var ye = Object.getOwnPropertyNames(le).map(function(Be) {
        return le[Be];
      });
      if (ye.join("") !== "0123456789")
        return !1;
      var he = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(Be) {
        he[Be] = Be;
      }), Object.keys(Object.assign({}, he)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return objectAssign = ae() ? Object.assign : function(ce, le) {
    for (var de, ye = ie(ce), he, Be = 1; Be < arguments.length; Be++) {
      de = Object(arguments[Be]);
      for (var Ee in de)
        ee.call(de, Ee) && (ye[Ee] = de[Ee]);
      if (Q) {
        he = Q(de);
        for (var me = 0; me < he.length; me++)
          ne.call(de, he[me]) && (ye[he[me]] = de[he[me]]);
      }
    }
    return ye;
  }, objectAssign;
}
var ReactPropTypesSecret_1, hasRequiredReactPropTypesSecret;
function requireReactPropTypesSecret() {
  if (hasRequiredReactPropTypesSecret)
    return ReactPropTypesSecret_1;
  hasRequiredReactPropTypesSecret = 1;
  var Q = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return ReactPropTypesSecret_1 = Q, ReactPropTypesSecret_1;
}
var has, hasRequiredHas;
function requireHas() {
  return hasRequiredHas || (hasRequiredHas = 1, has = Function.call.bind(Object.prototype.hasOwnProperty)), has;
}
var checkPropTypes_1, hasRequiredCheckPropTypes;
function requireCheckPropTypes() {
  if (hasRequiredCheckPropTypes)
    return checkPropTypes_1;
  hasRequiredCheckPropTypes = 1;
  var Q = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var ee = requireReactPropTypesSecret(), ne = {}, ie = requireHas();
    Q = function(ce) {
      var le = "Warning: " + ce;
      typeof console < "u" && console.error(le);
      try {
        throw new Error(le);
      } catch {
      }
    };
  }
  function ae(ce, le, de, ye, he) {
    if (process.env.NODE_ENV !== "production") {
      for (var Be in ce)
        if (ie(ce, Be)) {
          var Ee;
          try {
            if (typeof ce[Be] != "function") {
              var me = Error(
                (ye || "React class") + ": " + de + " type `" + Be + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof ce[Be] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw me.name = "Invariant Violation", me;
            }
            Ee = ce[Be](le, Be, ye, de, null, ee);
          } catch (be) {
            Ee = be;
          }
          if (Ee && !(Ee instanceof Error) && Q(
            (ye || "React class") + ": type specification of " + de + " `" + Be + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof Ee + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), Ee instanceof Error && !(Ee.message in ne)) {
            ne[Ee.message] = !0;
            var ge = he ? he() : "";
            Q(
              "Failed " + de + " type: " + Ee.message + (ge != null ? ge : "")
            );
          }
        }
    }
  }
  return ae.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (ne = {});
  }, checkPropTypes_1 = ae, checkPropTypes_1;
}
var factoryWithTypeCheckers, hasRequiredFactoryWithTypeCheckers;
function requireFactoryWithTypeCheckers() {
  if (hasRequiredFactoryWithTypeCheckers)
    return factoryWithTypeCheckers;
  hasRequiredFactoryWithTypeCheckers = 1;
  var Q = requireReactIs(), ee = requireObjectAssign(), ne = requireReactPropTypesSecret(), ie = requireHas(), ae = requireCheckPropTypes(), ce = function() {
  };
  process.env.NODE_ENV !== "production" && (ce = function(de) {
    var ye = "Warning: " + de;
    typeof console < "u" && console.error(ye);
    try {
      throw new Error(ye);
    } catch {
    }
  });
  function le() {
    return null;
  }
  return factoryWithTypeCheckers = function(de, ye) {
    var he = typeof Symbol == "function" && Symbol.iterator, Be = "@@iterator";
    function Ee(st) {
      var at = st && (he && st[he] || st[Be]);
      if (typeof at == "function")
        return at;
    }
    var me = "<<anonymous>>", ge = {
      array: He("array"),
      bigint: He("bigint"),
      bool: He("boolean"),
      func: He("function"),
      number: He("number"),
      object: He("object"),
      string: He("string"),
      symbol: He("symbol"),
      any: Se(),
      arrayOf: Ge,
      element: Fe(),
      elementType: Pe(),
      instanceOf: We,
      node: et(),
      objectOf: Et,
      oneOf: tt,
      oneOfType: Nt,
      shape: Mt,
      exact: Ot
    };
    function be(st, at) {
      return st === at ? st !== 0 || 1 / st === 1 / at : st !== st && at !== at;
    }
    function we(st, at) {
      this.message = st, this.data = at && typeof at == "object" ? at : {}, this.stack = "";
    }
    we.prototype = Error.prototype;
    function Oe(st) {
      if (process.env.NODE_ENV !== "production")
        var at = {}, wt = 0;
      function Ut(ir, tr, ar, ht, qt, Xe, nt) {
        if (ht = ht || me, Xe = Xe || ar, nt !== ne) {
          if (ye) {
            var je = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw je.name = "Invariant Violation", je;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var It = ht + ":" + ar;
            !at[It] && wt < 3 && (ce(
              "You are manually calling a React.PropTypes validation function for the `" + Xe + "` prop on `" + ht + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), at[It] = !0, wt++);
          }
        }
        return tr[ar] == null ? ir ? tr[ar] === null ? new we("The " + qt + " `" + Xe + "` is marked as required " + ("in `" + ht + "`, but its value is `null`.")) : new we("The " + qt + " `" + Xe + "` is marked as required in " + ("`" + ht + "`, but its value is `undefined`.")) : null : st(tr, ar, ht, qt, Xe);
      }
      var $e = Ut.bind(null, !1);
      return $e.isRequired = Ut.bind(null, !0), $e;
    }
    function He(st) {
      function at(wt, Ut, $e, ir, tr, ar) {
        var ht = wt[Ut], qt = Yt(ht);
        if (qt !== st) {
          var Xe = jt(ht);
          return new we(
            "Invalid " + ir + " `" + tr + "` of type " + ("`" + Xe + "` supplied to `" + $e + "`, expected ") + ("`" + st + "`."),
            { expectedType: st }
          );
        }
        return null;
      }
      return Oe(at);
    }
    function Se() {
      return Oe(le);
    }
    function Ge(st) {
      function at(wt, Ut, $e, ir, tr) {
        if (typeof st != "function")
          return new we("Property `" + tr + "` of component `" + $e + "` has invalid PropType notation inside arrayOf.");
        var ar = wt[Ut];
        if (!Array.isArray(ar)) {
          var ht = Yt(ar);
          return new we("Invalid " + ir + " `" + tr + "` of type " + ("`" + ht + "` supplied to `" + $e + "`, expected an array."));
        }
        for (var qt = 0; qt < ar.length; qt++) {
          var Xe = st(ar, qt, $e, ir, tr + "[" + qt + "]", ne);
          if (Xe instanceof Error)
            return Xe;
        }
        return null;
      }
      return Oe(at);
    }
    function Fe() {
      function st(at, wt, Ut, $e, ir) {
        var tr = at[wt];
        if (!de(tr)) {
          var ar = Yt(tr);
          return new we("Invalid " + $e + " `" + ir + "` of type " + ("`" + ar + "` supplied to `" + Ut + "`, expected a single ReactElement."));
        }
        return null;
      }
      return Oe(st);
    }
    function Pe() {
      function st(at, wt, Ut, $e, ir) {
        var tr = at[wt];
        if (!Q.isValidElementType(tr)) {
          var ar = Yt(tr);
          return new we("Invalid " + $e + " `" + ir + "` of type " + ("`" + ar + "` supplied to `" + Ut + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return Oe(st);
    }
    function We(st) {
      function at(wt, Ut, $e, ir, tr) {
        if (!(wt[Ut] instanceof st)) {
          var ar = st.name || me, ht = Wt(wt[Ut]);
          return new we("Invalid " + ir + " `" + tr + "` of type " + ("`" + ht + "` supplied to `" + $e + "`, expected ") + ("instance of `" + ar + "`."));
        }
        return null;
      }
      return Oe(at);
    }
    function tt(st) {
      if (!Array.isArray(st))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? ce(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : ce("Invalid argument supplied to oneOf, expected an array.")), le;
      function at(wt, Ut, $e, ir, tr) {
        for (var ar = wt[Ut], ht = 0; ht < st.length; ht++)
          if (be(ar, st[ht]))
            return null;
        var qt = JSON.stringify(st, function(nt, je) {
          var It = jt(je);
          return It === "symbol" ? String(je) : je;
        });
        return new we("Invalid " + ir + " `" + tr + "` of value `" + String(ar) + "` " + ("supplied to `" + $e + "`, expected one of " + qt + "."));
      }
      return Oe(at);
    }
    function Et(st) {
      function at(wt, Ut, $e, ir, tr) {
        if (typeof st != "function")
          return new we("Property `" + tr + "` of component `" + $e + "` has invalid PropType notation inside objectOf.");
        var ar = wt[Ut], ht = Yt(ar);
        if (ht !== "object")
          return new we("Invalid " + ir + " `" + tr + "` of type " + ("`" + ht + "` supplied to `" + $e + "`, expected an object."));
        for (var qt in ar)
          if (ie(ar, qt)) {
            var Xe = st(ar, qt, $e, ir, tr + "." + qt, ne);
            if (Xe instanceof Error)
              return Xe;
          }
        return null;
      }
      return Oe(at);
    }
    function Nt(st) {
      if (!Array.isArray(st))
        return process.env.NODE_ENV !== "production" && ce("Invalid argument supplied to oneOfType, expected an instance of array."), le;
      for (var at = 0; at < st.length; at++) {
        var wt = st[at];
        if (typeof wt != "function")
          return ce(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + $t(wt) + " at index " + at + "."
          ), le;
      }
      function Ut($e, ir, tr, ar, ht) {
        for (var qt = [], Xe = 0; Xe < st.length; Xe++) {
          var nt = st[Xe], je = nt($e, ir, tr, ar, ht, ne);
          if (je == null)
            return null;
          je.data && ie(je.data, "expectedType") && qt.push(je.data.expectedType);
        }
        var It = qt.length > 0 ? ", expected one of type [" + qt.join(", ") + "]" : "";
        return new we("Invalid " + ar + " `" + ht + "` supplied to " + ("`" + tr + "`" + It + "."));
      }
      return Oe(Ut);
    }
    function et() {
      function st(at, wt, Ut, $e, ir) {
        return yt(at[wt]) ? null : new we("Invalid " + $e + " `" + ir + "` supplied to " + ("`" + Ut + "`, expected a ReactNode."));
      }
      return Oe(st);
    }
    function mt(st, at, wt, Ut, $e) {
      return new we(
        (st || "React class") + ": " + at + " type `" + wt + "." + Ut + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + $e + "`."
      );
    }
    function Mt(st) {
      function at(wt, Ut, $e, ir, tr) {
        var ar = wt[Ut], ht = Yt(ar);
        if (ht !== "object")
          return new we("Invalid " + ir + " `" + tr + "` of type `" + ht + "` " + ("supplied to `" + $e + "`, expected `object`."));
        for (var qt in st) {
          var Xe = st[qt];
          if (typeof Xe != "function")
            return mt($e, ir, tr, qt, jt(Xe));
          var nt = Xe(ar, qt, $e, ir, tr + "." + qt, ne);
          if (nt)
            return nt;
        }
        return null;
      }
      return Oe(at);
    }
    function Ot(st) {
      function at(wt, Ut, $e, ir, tr) {
        var ar = wt[Ut], ht = Yt(ar);
        if (ht !== "object")
          return new we("Invalid " + ir + " `" + tr + "` of type `" + ht + "` " + ("supplied to `" + $e + "`, expected `object`."));
        var qt = ee({}, wt[Ut], st);
        for (var Xe in qt) {
          var nt = st[Xe];
          if (ie(st, Xe) && typeof nt != "function")
            return mt($e, ir, tr, Xe, jt(nt));
          if (!nt)
            return new we(
              "Invalid " + ir + " `" + tr + "` key `" + Xe + "` supplied to `" + $e + "`.\nBad object: " + JSON.stringify(wt[Ut], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(st), null, "  ")
            );
          var je = nt(ar, Xe, $e, ir, tr + "." + Xe, ne);
          if (je)
            return je;
        }
        return null;
      }
      return Oe(at);
    }
    function yt(st) {
      switch (typeof st) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !st;
        case "object":
          if (Array.isArray(st))
            return st.every(yt);
          if (st === null || de(st))
            return !0;
          var at = Ee(st);
          if (at) {
            var wt = at.call(st), Ut;
            if (at !== st.entries) {
              for (; !(Ut = wt.next()).done; )
                if (!yt(Ut.value))
                  return !1;
            } else
              for (; !(Ut = wt.next()).done; ) {
                var $e = Ut.value;
                if ($e && !yt($e[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function Qt(st, at) {
      return st === "symbol" ? !0 : at ? at["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && at instanceof Symbol : !1;
    }
    function Yt(st) {
      var at = typeof st;
      return Array.isArray(st) ? "array" : st instanceof RegExp ? "object" : Qt(at, st) ? "symbol" : at;
    }
    function jt(st) {
      if (typeof st > "u" || st === null)
        return "" + st;
      var at = Yt(st);
      if (at === "object") {
        if (st instanceof Date)
          return "date";
        if (st instanceof RegExp)
          return "regexp";
      }
      return at;
    }
    function $t(st) {
      var at = jt(st);
      switch (at) {
        case "array":
        case "object":
          return "an " + at;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + at;
        default:
          return at;
      }
    }
    function Wt(st) {
      return !st.constructor || !st.constructor.name ? me : st.constructor.name;
    }
    return ge.checkPropTypes = ae, ge.resetWarningCache = ae.resetWarningCache, ge.PropTypes = ge, ge;
  }, factoryWithTypeCheckers;
}
var factoryWithThrowingShims, hasRequiredFactoryWithThrowingShims;
function requireFactoryWithThrowingShims() {
  if (hasRequiredFactoryWithThrowingShims)
    return factoryWithThrowingShims;
  hasRequiredFactoryWithThrowingShims = 1;
  var Q = requireReactPropTypesSecret();
  function ee() {
  }
  function ne() {
  }
  return ne.resetWarningCache = ee, factoryWithThrowingShims = function() {
    function ie(le, de, ye, he, Be, Ee) {
      if (Ee !== Q) {
        var me = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw me.name = "Invariant Violation", me;
      }
    }
    ie.isRequired = ie;
    function ae() {
      return ie;
    }
    var ce = {
      array: ie,
      bigint: ie,
      bool: ie,
      func: ie,
      number: ie,
      object: ie,
      string: ie,
      symbol: ie,
      any: ie,
      arrayOf: ae,
      element: ie,
      elementType: ie,
      instanceOf: ae,
      node: ie,
      objectOf: ae,
      oneOf: ae,
      oneOfType: ae,
      shape: ae,
      exact: ae,
      checkPropTypes: ne,
      resetWarningCache: ee
    };
    return ce.PropTypes = ce, ce;
  }, factoryWithThrowingShims;
}
if (process.env.NODE_ENV !== "production") {
  var ReactIs = requireReactIs(), throwOnDirectAccess = !0;
  propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
} else
  propTypes.exports = requireFactoryWithThrowingShims()();
var jsxRuntime = { exports: {} }, reactJsxRuntime_production_min = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_production_min;
function requireReactJsxRuntime_production_min() {
  if (hasRequiredReactJsxRuntime_production_min)
    return reactJsxRuntime_production_min;
  hasRequiredReactJsxRuntime_production_min = 1;
  var Q = react.exports, ee = Symbol.for("react.element"), ne = Symbol.for("react.fragment"), ie = Object.prototype.hasOwnProperty, ae = Q.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, ce = { key: !0, ref: !0, __self: !0, __source: !0 };
  function le(de, ye, he) {
    var Be, Ee = {}, me = null, ge = null;
    he !== void 0 && (me = "" + he), ye.key !== void 0 && (me = "" + ye.key), ye.ref !== void 0 && (ge = ye.ref);
    for (Be in ye)
      ie.call(ye, Be) && !ce.hasOwnProperty(Be) && (Ee[Be] = ye[Be]);
    if (de && de.defaultProps)
      for (Be in ye = de.defaultProps, ye)
        Ee[Be] === void 0 && (Ee[Be] = ye[Be]);
    return { $$typeof: ee, type: de, key: me, ref: ge, props: Ee, _owner: ae.current };
  }
  return reactJsxRuntime_production_min.Fragment = ne, reactJsxRuntime_production_min.jsx = le, reactJsxRuntime_production_min.jsxs = le, reactJsxRuntime_production_min;
}
var reactJsxRuntime_development = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_development;
function requireReactJsxRuntime_development() {
  return hasRequiredReactJsxRuntime_development || (hasRequiredReactJsxRuntime_development = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = react.exports, ee = Symbol.for("react.element"), ne = Symbol.for("react.portal"), ie = Symbol.for("react.fragment"), ae = Symbol.for("react.strict_mode"), ce = Symbol.for("react.profiler"), le = Symbol.for("react.provider"), de = Symbol.for("react.context"), ye = Symbol.for("react.forward_ref"), he = Symbol.for("react.suspense"), Be = Symbol.for("react.suspense_list"), Ee = Symbol.for("react.memo"), me = Symbol.for("react.lazy"), ge = Symbol.for("react.offscreen"), be = Symbol.iterator, we = "@@iterator";
    function Oe(Ft) {
      if (Ft === null || typeof Ft != "object")
        return null;
      var sr = be && Ft[be] || Ft[we];
      return typeof sr == "function" ? sr : null;
    }
    var He = Q.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function Se(Ft) {
      {
        for (var sr = arguments.length, Gr = new Array(sr > 1 ? sr - 1 : 0), zr = 1; zr < sr; zr++)
          Gr[zr - 1] = arguments[zr];
        Ge("error", Ft, Gr);
      }
    }
    function Ge(Ft, sr, Gr) {
      {
        var zr = He.ReactDebugCurrentFrame, wn = zr.getStackAddendum();
        wn !== "" && (sr += "%s", Gr = Gr.concat([wn]));
        var Tn = Gr.map(function(_n) {
          return String(_n);
        });
        Tn.unshift("Warning: " + sr), Function.prototype.apply.call(console[Ft], console, Tn);
      }
    }
    var Fe = !1, Pe = !1, We = !1, tt = !1, Et = !1, Nt;
    Nt = Symbol.for("react.module.reference");
    function et(Ft) {
      return !!(typeof Ft == "string" || typeof Ft == "function" || Ft === ie || Ft === ce || Et || Ft === ae || Ft === he || Ft === Be || tt || Ft === ge || Fe || Pe || We || typeof Ft == "object" && Ft !== null && (Ft.$$typeof === me || Ft.$$typeof === Ee || Ft.$$typeof === le || Ft.$$typeof === de || Ft.$$typeof === ye || Ft.$$typeof === Nt || Ft.getModuleId !== void 0));
    }
    function mt(Ft, sr, Gr) {
      var zr = Ft.displayName;
      if (zr)
        return zr;
      var wn = sr.displayName || sr.name || "";
      return wn !== "" ? Gr + "(" + wn + ")" : Gr;
    }
    function Mt(Ft) {
      return Ft.displayName || "Context";
    }
    function Ot(Ft) {
      if (Ft == null)
        return null;
      if (typeof Ft.tag == "number" && Se("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof Ft == "function")
        return Ft.displayName || Ft.name || null;
      if (typeof Ft == "string")
        return Ft;
      switch (Ft) {
        case ie:
          return "Fragment";
        case ne:
          return "Portal";
        case ce:
          return "Profiler";
        case ae:
          return "StrictMode";
        case he:
          return "Suspense";
        case Be:
          return "SuspenseList";
      }
      if (typeof Ft == "object")
        switch (Ft.$$typeof) {
          case de:
            var sr = Ft;
            return Mt(sr) + ".Consumer";
          case le:
            var Gr = Ft;
            return Mt(Gr._context) + ".Provider";
          case ye:
            return mt(Ft, Ft.render, "ForwardRef");
          case Ee:
            var zr = Ft.displayName || null;
            return zr !== null ? zr : Ot(Ft.type) || "Memo";
          case me: {
            var wn = Ft, Tn = wn._payload, _n = wn._init;
            try {
              return Ot(_n(Tn));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var yt = Object.assign, Qt = 0, Yt, jt, $t, Wt, st, at, wt;
    function Ut() {
    }
    Ut.__reactDisabledLog = !0;
    function $e() {
      {
        if (Qt === 0) {
          Yt = console.log, jt = console.info, $t = console.warn, Wt = console.error, st = console.group, at = console.groupCollapsed, wt = console.groupEnd;
          var Ft = {
            configurable: !0,
            enumerable: !0,
            value: Ut,
            writable: !0
          };
          Object.defineProperties(console, {
            info: Ft,
            log: Ft,
            warn: Ft,
            error: Ft,
            group: Ft,
            groupCollapsed: Ft,
            groupEnd: Ft
          });
        }
        Qt++;
      }
    }
    function ir() {
      {
        if (Qt--, Qt === 0) {
          var Ft = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: yt({}, Ft, {
              value: Yt
            }),
            info: yt({}, Ft, {
              value: jt
            }),
            warn: yt({}, Ft, {
              value: $t
            }),
            error: yt({}, Ft, {
              value: Wt
            }),
            group: yt({}, Ft, {
              value: st
            }),
            groupCollapsed: yt({}, Ft, {
              value: at
            }),
            groupEnd: yt({}, Ft, {
              value: wt
            })
          });
        }
        Qt < 0 && Se("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var tr = He.ReactCurrentDispatcher, ar;
    function ht(Ft, sr, Gr) {
      {
        if (ar === void 0)
          try {
            throw Error();
          } catch (wn) {
            var zr = wn.stack.trim().match(/\n( *(at )?)/);
            ar = zr && zr[1] || "";
          }
        return `
` + ar + Ft;
      }
    }
    var qt = !1, Xe;
    {
      var nt = typeof WeakMap == "function" ? WeakMap : Map;
      Xe = new nt();
    }
    function je(Ft, sr) {
      if (!Ft || qt)
        return "";
      {
        var Gr = Xe.get(Ft);
        if (Gr !== void 0)
          return Gr;
      }
      var zr;
      qt = !0;
      var wn = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var Tn;
      Tn = tr.current, tr.current = null, $e();
      try {
        if (sr) {
          var _n = function() {
            throw Error();
          };
          if (Object.defineProperty(_n.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(_n, []);
            } catch (Sr) {
              zr = Sr;
            }
            Reflect.construct(Ft, [], _n);
          } else {
            try {
              _n.call();
            } catch (Sr) {
              zr = Sr;
            }
            Ft.call(_n.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Sr) {
            zr = Sr;
          }
          Ft();
        }
      } catch (Sr) {
        if (Sr && zr && typeof Sr.stack == "string") {
          for (var vn = Sr.stack.split(`
`), kn = zr.stack.split(`
`), Zn = vn.length - 1, An = kn.length - 1; Zn >= 1 && An >= 0 && vn[Zn] !== kn[An]; )
            An--;
          for (; Zn >= 1 && An >= 0; Zn--, An--)
            if (vn[Zn] !== kn[An]) {
              if (Zn !== 1 || An !== 1)
                do
                  if (Zn--, An--, An < 0 || vn[Zn] !== kn[An]) {
                    var nn = `
` + vn[Zn].replace(" at new ", " at ");
                    return Ft.displayName && nn.includes("<anonymous>") && (nn = nn.replace("<anonymous>", Ft.displayName)), typeof Ft == "function" && Xe.set(Ft, nn), nn;
                  }
                while (Zn >= 1 && An >= 0);
              break;
            }
        }
      } finally {
        qt = !1, tr.current = Tn, ir(), Error.prepareStackTrace = wn;
      }
      var Kr = Ft ? Ft.displayName || Ft.name : "", xt = Kr ? ht(Kr) : "";
      return typeof Ft == "function" && Xe.set(Ft, xt), xt;
    }
    function It(Ft, sr, Gr) {
      return je(Ft, !1);
    }
    function lt(Ft) {
      var sr = Ft.prototype;
      return !!(sr && sr.isReactComponent);
    }
    function Ye(Ft, sr, Gr) {
      if (Ft == null)
        return "";
      if (typeof Ft == "function")
        return je(Ft, lt(Ft));
      if (typeof Ft == "string")
        return ht(Ft);
      switch (Ft) {
        case he:
          return ht("Suspense");
        case Be:
          return ht("SuspenseList");
      }
      if (typeof Ft == "object")
        switch (Ft.$$typeof) {
          case ye:
            return It(Ft.render);
          case Ee:
            return Ye(Ft.type, sr, Gr);
          case me: {
            var zr = Ft, wn = zr._payload, Tn = zr._init;
            try {
              return Ye(Tn(wn), sr, Gr);
            } catch {
            }
          }
        }
      return "";
    }
    var _e = Object.prototype.hasOwnProperty, Ie = {}, Ce = He.ReactDebugCurrentFrame;
    function ke(Ft) {
      if (Ft) {
        var sr = Ft._owner, Gr = Ye(Ft.type, Ft._source, sr ? sr.type : null);
        Ce.setExtraStackFrame(Gr);
      } else
        Ce.setExtraStackFrame(null);
    }
    function Ve(Ft, sr, Gr, zr, wn) {
      {
        var Tn = Function.call.bind(_e);
        for (var _n in Ft)
          if (Tn(Ft, _n)) {
            var vn = void 0;
            try {
              if (typeof Ft[_n] != "function") {
                var kn = Error((zr || "React class") + ": " + Gr + " type `" + _n + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof Ft[_n] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw kn.name = "Invariant Violation", kn;
              }
              vn = Ft[_n](sr, _n, zr, Gr, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (Zn) {
              vn = Zn;
            }
            vn && !(vn instanceof Error) && (ke(wn), Se("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", zr || "React class", Gr, _n, typeof vn), ke(null)), vn instanceof Error && !(vn.message in Ie) && (Ie[vn.message] = !0, ke(wn), Se("Failed %s type: %s", Gr, vn.message), ke(null));
          }
      }
    }
    var Ze = Array.isArray;
    function ct(Ft) {
      return Ze(Ft);
    }
    function kt(Ft) {
      {
        var sr = typeof Symbol == "function" && Symbol.toStringTag, Gr = sr && Ft[Symbol.toStringTag] || Ft.constructor.name || "Object";
        return Gr;
      }
    }
    function Jt(Ft) {
      try {
        return Kt(Ft), !1;
      } catch {
        return !0;
      }
    }
    function Kt(Ft) {
      return "" + Ft;
    }
    function Zt(Ft) {
      if (Jt(Ft))
        return Se("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", kt(Ft)), Kt(Ft);
    }
    var De = He.ReactCurrentOwner, Te = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Re, ot, bt;
    bt = {};
    function Pt(Ft) {
      if (_e.call(Ft, "ref")) {
        var sr = Object.getOwnPropertyDescriptor(Ft, "ref").get;
        if (sr && sr.isReactWarning)
          return !1;
      }
      return Ft.ref !== void 0;
    }
    function Vt(Ft) {
      if (_e.call(Ft, "key")) {
        var sr = Object.getOwnPropertyDescriptor(Ft, "key").get;
        if (sr && sr.isReactWarning)
          return !1;
      }
      return Ft.key !== void 0;
    }
    function Ir(Ft, sr) {
      if (typeof Ft.ref == "string" && De.current && sr && De.current.stateNode !== sr) {
        var Gr = Ot(De.current.type);
        bt[Gr] || (Se('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', Ot(De.current.type), Ft.ref), bt[Gr] = !0);
      }
    }
    function mr(Ft, sr) {
      {
        var Gr = function() {
          Re || (Re = !0, Se("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", sr));
        };
        Gr.isReactWarning = !0, Object.defineProperty(Ft, "key", {
          get: Gr,
          configurable: !0
        });
      }
    }
    function _r(Ft, sr) {
      {
        var Gr = function() {
          ot || (ot = !0, Se("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", sr));
        };
        Gr.isReactWarning = !0, Object.defineProperty(Ft, "ref", {
          get: Gr,
          configurable: !0
        });
      }
    }
    var Br = function(Ft, sr, Gr, zr, wn, Tn, _n) {
      var vn = {
        $$typeof: ee,
        type: Ft,
        key: sr,
        ref: Gr,
        props: _n,
        _owner: Tn
      };
      return vn._store = {}, Object.defineProperty(vn._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(vn, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: zr
      }), Object.defineProperty(vn, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: wn
      }), Object.freeze && (Object.freeze(vn.props), Object.freeze(vn)), vn;
    };
    function Tr(Ft, sr, Gr, zr, wn) {
      {
        var Tn, _n = {}, vn = null, kn = null;
        Gr !== void 0 && (Zt(Gr), vn = "" + Gr), Vt(sr) && (Zt(sr.key), vn = "" + sr.key), Pt(sr) && (kn = sr.ref, Ir(sr, wn));
        for (Tn in sr)
          _e.call(sr, Tn) && !Te.hasOwnProperty(Tn) && (_n[Tn] = sr[Tn]);
        if (Ft && Ft.defaultProps) {
          var Zn = Ft.defaultProps;
          for (Tn in Zn)
            _n[Tn] === void 0 && (_n[Tn] = Zn[Tn]);
        }
        if (vn || kn) {
          var An = typeof Ft == "function" ? Ft.displayName || Ft.name || "Unknown" : Ft;
          vn && mr(_n, An), kn && _r(_n, An);
        }
        return Br(Ft, vn, kn, wn, zr, De.current, _n);
      }
    }
    var cn = He.ReactCurrentOwner, oi = He.ReactDebugCurrentFrame;
    function un(Ft) {
      if (Ft) {
        var sr = Ft._owner, Gr = Ye(Ft.type, Ft._source, sr ? sr.type : null);
        oi.setExtraStackFrame(Gr);
      } else
        oi.setExtraStackFrame(null);
    }
    var Yn;
    Yn = !1;
    function Vn(Ft) {
      return typeof Ft == "object" && Ft !== null && Ft.$$typeof === ee;
    }
    function Dn() {
      {
        if (cn.current) {
          var Ft = Ot(cn.current.type);
          if (Ft)
            return `

Check the render method of \`` + Ft + "`.";
        }
        return "";
      }
    }
    function Ln(Ft) {
      {
        if (Ft !== void 0) {
          var sr = Ft.fileName.replace(/^.*[\\\/]/, ""), Gr = Ft.lineNumber;
          return `

Check your code at ` + sr + ":" + Gr + ".";
        }
        return "";
      }
    }
    var di = {};
    function yi(Ft) {
      {
        var sr = Dn();
        if (!sr) {
          var Gr = typeof Ft == "string" ? Ft : Ft.displayName || Ft.name;
          Gr && (sr = `

Check the top-level render call using <` + Gr + ">.");
        }
        return sr;
      }
    }
    function Zi(Ft, sr) {
      {
        if (!Ft._store || Ft._store.validated || Ft.key != null)
          return;
        Ft._store.validated = !0;
        var Gr = yi(sr);
        if (di[Gr])
          return;
        di[Gr] = !0;
        var zr = "";
        Ft && Ft._owner && Ft._owner !== cn.current && (zr = " It was passed a child from " + Ot(Ft._owner.type) + "."), un(Ft), Se('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', Gr, zr), un(null);
      }
    }
    function ki(Ft, sr) {
      {
        if (typeof Ft != "object")
          return;
        if (ct(Ft))
          for (var Gr = 0; Gr < Ft.length; Gr++) {
            var zr = Ft[Gr];
            Vn(zr) && Zi(zr, sr);
          }
        else if (Vn(Ft))
          Ft._store && (Ft._store.validated = !0);
        else if (Ft) {
          var wn = Oe(Ft);
          if (typeof wn == "function" && wn !== Ft.entries)
            for (var Tn = wn.call(Ft), _n; !(_n = Tn.next()).done; )
              Vn(_n.value) && Zi(_n.value, sr);
        }
      }
    }
    function Pn(Ft) {
      {
        var sr = Ft.type;
        if (sr == null || typeof sr == "string")
          return;
        var Gr;
        if (typeof sr == "function")
          Gr = sr.propTypes;
        else if (typeof sr == "object" && (sr.$$typeof === ye || sr.$$typeof === Ee))
          Gr = sr.propTypes;
        else
          return;
        if (Gr) {
          var zr = Ot(sr);
          Ve(Gr, Ft.props, "prop", zr, Ft);
        } else if (sr.PropTypes !== void 0 && !Yn) {
          Yn = !0;
          var wn = Ot(sr);
          Se("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", wn || "Unknown");
        }
        typeof sr.getDefaultProps == "function" && !sr.getDefaultProps.isReactClassApproved && Se("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function ni(Ft) {
      {
        for (var sr = Object.keys(Ft.props), Gr = 0; Gr < sr.length; Gr++) {
          var zr = sr[Gr];
          if (zr !== "children" && zr !== "key") {
            un(Ft), Se("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", zr), un(null);
            break;
          }
        }
        Ft.ref !== null && (un(Ft), Se("Invalid attribute `ref` supplied to `React.Fragment`."), un(null));
      }
    }
    function Xn(Ft, sr, Gr, zr, wn, Tn) {
      {
        var _n = et(Ft);
        if (!_n) {
          var vn = "";
          (Ft === void 0 || typeof Ft == "object" && Ft !== null && Object.keys(Ft).length === 0) && (vn += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var kn = Ln(wn);
          kn ? vn += kn : vn += Dn();
          var Zn;
          Ft === null ? Zn = "null" : ct(Ft) ? Zn = "array" : Ft !== void 0 && Ft.$$typeof === ee ? (Zn = "<" + (Ot(Ft.type) || "Unknown") + " />", vn = " Did you accidentally export a JSX literal instead of a component?") : Zn = typeof Ft, Se("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", Zn, vn);
        }
        var An = Tr(Ft, sr, Gr, wn, Tn);
        if (An == null)
          return An;
        if (_n) {
          var nn = sr.children;
          if (nn !== void 0)
            if (zr)
              if (ct(nn)) {
                for (var Kr = 0; Kr < nn.length; Kr++)
                  ki(nn[Kr], Ft);
                Object.freeze && Object.freeze(nn);
              } else
                Se("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              ki(nn, Ft);
        }
        return Ft === ie ? ni(An) : Pn(An), An;
      }
    }
    function fi(Ft, sr, Gr) {
      return Xn(Ft, sr, Gr, !0);
    }
    function Bi(Ft, sr, Gr) {
      return Xn(Ft, sr, Gr, !1);
    }
    var Ci = Bi, Ii = fi;
    reactJsxRuntime_development.Fragment = ie, reactJsxRuntime_development.jsx = Ci, reactJsxRuntime_development.jsxs = Ii;
  }()), reactJsxRuntime_development;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReactJsxRuntime_production_min() : Q.exports = requireReactJsxRuntime_development();
})(jsxRuntime);
const Fragment = jsxRuntime.exports.Fragment, jsx = jsxRuntime.exports.jsx, jsxs = jsxRuntime.exports.jsxs;
/** @license MUI v5.10.14
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function styled$4(Q, ee) {
  const ne = emStyled(Q, ee);
  return process.env.NODE_ENV !== "production" ? (...ie) => {
    const ae = typeof Q == "string" ? `"${Q}"` : "component";
    return ie.length === 0 ? console.error([`MUI: Seems like you called \`styled(${ae})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : ie.some((ce) => ce === void 0) && console.error(`MUI: the styled(${ae})(...args) API requires all its args to be defined.`), ne(...ie);
  } : ne;
}
const internal_processStyles = (Q, ee) => {
  Array.isArray(Q.__emotion_styles) && (Q.__emotion_styles = ee(Q.__emotion_styles));
}, responsivePropType = process.env.NODE_ENV !== "production" ? propTypes.exports.oneOfType([propTypes.exports.number, propTypes.exports.string, propTypes.exports.object, propTypes.exports.array]) : {}, responsivePropType$1 = responsivePropType;
function chainPropTypes(Q, ee) {
  return process.env.NODE_ENV === "production" ? () => null : function(...ie) {
    return Q(...ie) || ee(...ie);
  };
}
function isPlainObject$4(Q) {
  return Q !== null && typeof Q == "object" && Q.constructor === Object;
}
function deepmerge(Q, ee, ne = {
  clone: !0
}) {
  const ie = ne.clone ? _extends$1({}, Q) : Q;
  return isPlainObject$4(Q) && isPlainObject$4(ee) && Object.keys(ee).forEach((ae) => {
    ae !== "__proto__" && (isPlainObject$4(ee[ae]) && ae in Q && isPlainObject$4(Q[ae]) ? ie[ae] = deepmerge(Q[ae], ee[ae], ne) : ie[ae] = ee[ae]);
  }), ie;
}
function isClassComponent(Q) {
  const {
    prototype: ee = {}
  } = Q;
  return Boolean(ee.isReactComponent);
}
function elementTypeAcceptingRef(Q, ee, ne, ie, ae) {
  const ce = Q[ee], le = ae || ee;
  if (ce == null || typeof window > "u")
    return null;
  let de;
  return typeof ce == "function" && !isClassComponent(ce) && (de = "Did you accidentally provide a plain function component instead?"), de !== void 0 ? new Error(`Invalid ${ie} \`${le}\` supplied to \`${ne}\`. Expected an element type that can hold a ref. ${de} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const elementTypeAcceptingRef$1 = chainPropTypes(propTypes.exports.elementType, elementTypeAcceptingRef);
function formatMuiErrorMessage(Q) {
  let ee = "https://mui.com/production-error/?code=" + Q;
  for (let ne = 1; ne < arguments.length; ne += 1)
    ee += "&args[]=" + encodeURIComponent(arguments[ne]);
  return "Minified MUI error #" + Q + "; visit " + ee + " for the full message.";
}
var reactIs$1 = { exports: {} }, reactIs_production_min$1 = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min$1;
function requireReactIs_production_min$1() {
  if (hasRequiredReactIs_production_min$1)
    return reactIs_production_min$1;
  hasRequiredReactIs_production_min$1 = 1;
  var Q = Symbol.for("react.element"), ee = Symbol.for("react.portal"), ne = Symbol.for("react.fragment"), ie = Symbol.for("react.strict_mode"), ae = Symbol.for("react.profiler"), ce = Symbol.for("react.provider"), le = Symbol.for("react.context"), de = Symbol.for("react.server_context"), ye = Symbol.for("react.forward_ref"), he = Symbol.for("react.suspense"), Be = Symbol.for("react.suspense_list"), Ee = Symbol.for("react.memo"), me = Symbol.for("react.lazy"), ge = Symbol.for("react.offscreen"), be;
  be = Symbol.for("react.module.reference");
  function we(Oe) {
    if (typeof Oe == "object" && Oe !== null) {
      var He = Oe.$$typeof;
      switch (He) {
        case Q:
          switch (Oe = Oe.type, Oe) {
            case ne:
            case ae:
            case ie:
            case he:
            case Be:
              return Oe;
            default:
              switch (Oe = Oe && Oe.$$typeof, Oe) {
                case de:
                case le:
                case ye:
                case me:
                case Ee:
                case ce:
                  return Oe;
                default:
                  return He;
              }
          }
        case ee:
          return He;
      }
    }
  }
  return reactIs_production_min$1.ContextConsumer = le, reactIs_production_min$1.ContextProvider = ce, reactIs_production_min$1.Element = Q, reactIs_production_min$1.ForwardRef = ye, reactIs_production_min$1.Fragment = ne, reactIs_production_min$1.Lazy = me, reactIs_production_min$1.Memo = Ee, reactIs_production_min$1.Portal = ee, reactIs_production_min$1.Profiler = ae, reactIs_production_min$1.StrictMode = ie, reactIs_production_min$1.Suspense = he, reactIs_production_min$1.SuspenseList = Be, reactIs_production_min$1.isAsyncMode = function() {
    return !1;
  }, reactIs_production_min$1.isConcurrentMode = function() {
    return !1;
  }, reactIs_production_min$1.isContextConsumer = function(Oe) {
    return we(Oe) === le;
  }, reactIs_production_min$1.isContextProvider = function(Oe) {
    return we(Oe) === ce;
  }, reactIs_production_min$1.isElement = function(Oe) {
    return typeof Oe == "object" && Oe !== null && Oe.$$typeof === Q;
  }, reactIs_production_min$1.isForwardRef = function(Oe) {
    return we(Oe) === ye;
  }, reactIs_production_min$1.isFragment = function(Oe) {
    return we(Oe) === ne;
  }, reactIs_production_min$1.isLazy = function(Oe) {
    return we(Oe) === me;
  }, reactIs_production_min$1.isMemo = function(Oe) {
    return we(Oe) === Ee;
  }, reactIs_production_min$1.isPortal = function(Oe) {
    return we(Oe) === ee;
  }, reactIs_production_min$1.isProfiler = function(Oe) {
    return we(Oe) === ae;
  }, reactIs_production_min$1.isStrictMode = function(Oe) {
    return we(Oe) === ie;
  }, reactIs_production_min$1.isSuspense = function(Oe) {
    return we(Oe) === he;
  }, reactIs_production_min$1.isSuspenseList = function(Oe) {
    return we(Oe) === Be;
  }, reactIs_production_min$1.isValidElementType = function(Oe) {
    return typeof Oe == "string" || typeof Oe == "function" || Oe === ne || Oe === ae || Oe === ie || Oe === he || Oe === Be || Oe === ge || typeof Oe == "object" && Oe !== null && (Oe.$$typeof === me || Oe.$$typeof === Ee || Oe.$$typeof === ce || Oe.$$typeof === le || Oe.$$typeof === ye || Oe.$$typeof === be || Oe.getModuleId !== void 0);
  }, reactIs_production_min$1.typeOf = we, reactIs_production_min$1;
}
var reactIs_development$1 = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development$1;
function requireReactIs_development$1() {
  return hasRequiredReactIs_development$1 || (hasRequiredReactIs_development$1 = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = Symbol.for("react.element"), ee = Symbol.for("react.portal"), ne = Symbol.for("react.fragment"), ie = Symbol.for("react.strict_mode"), ae = Symbol.for("react.profiler"), ce = Symbol.for("react.provider"), le = Symbol.for("react.context"), de = Symbol.for("react.server_context"), ye = Symbol.for("react.forward_ref"), he = Symbol.for("react.suspense"), Be = Symbol.for("react.suspense_list"), Ee = Symbol.for("react.memo"), me = Symbol.for("react.lazy"), ge = Symbol.for("react.offscreen"), be = !1, we = !1, Oe = !1, He = !1, Se = !1, Ge;
    Ge = Symbol.for("react.module.reference");
    function Fe(lt) {
      return !!(typeof lt == "string" || typeof lt == "function" || lt === ne || lt === ae || Se || lt === ie || lt === he || lt === Be || He || lt === ge || be || we || Oe || typeof lt == "object" && lt !== null && (lt.$$typeof === me || lt.$$typeof === Ee || lt.$$typeof === ce || lt.$$typeof === le || lt.$$typeof === ye || lt.$$typeof === Ge || lt.getModuleId !== void 0));
    }
    function Pe(lt) {
      if (typeof lt == "object" && lt !== null) {
        var Ye = lt.$$typeof;
        switch (Ye) {
          case Q:
            var _e = lt.type;
            switch (_e) {
              case ne:
              case ae:
              case ie:
              case he:
              case Be:
                return _e;
              default:
                var Ie = _e && _e.$$typeof;
                switch (Ie) {
                  case de:
                  case le:
                  case ye:
                  case me:
                  case Ee:
                  case ce:
                    return Ie;
                  default:
                    return Ye;
                }
            }
          case ee:
            return Ye;
        }
      }
    }
    var We = le, tt = ce, Et = Q, Nt = ye, et = ne, mt = me, Mt = Ee, Ot = ee, yt = ae, Qt = ie, Yt = he, jt = Be, $t = !1, Wt = !1;
    function st(lt) {
      return $t || ($t = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function at(lt) {
      return Wt || (Wt = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function wt(lt) {
      return Pe(lt) === le;
    }
    function Ut(lt) {
      return Pe(lt) === ce;
    }
    function $e(lt) {
      return typeof lt == "object" && lt !== null && lt.$$typeof === Q;
    }
    function ir(lt) {
      return Pe(lt) === ye;
    }
    function tr(lt) {
      return Pe(lt) === ne;
    }
    function ar(lt) {
      return Pe(lt) === me;
    }
    function ht(lt) {
      return Pe(lt) === Ee;
    }
    function qt(lt) {
      return Pe(lt) === ee;
    }
    function Xe(lt) {
      return Pe(lt) === ae;
    }
    function nt(lt) {
      return Pe(lt) === ie;
    }
    function je(lt) {
      return Pe(lt) === he;
    }
    function It(lt) {
      return Pe(lt) === Be;
    }
    reactIs_development$1.ContextConsumer = We, reactIs_development$1.ContextProvider = tt, reactIs_development$1.Element = Et, reactIs_development$1.ForwardRef = Nt, reactIs_development$1.Fragment = et, reactIs_development$1.Lazy = mt, reactIs_development$1.Memo = Mt, reactIs_development$1.Portal = Ot, reactIs_development$1.Profiler = yt, reactIs_development$1.StrictMode = Qt, reactIs_development$1.Suspense = Yt, reactIs_development$1.SuspenseList = jt, reactIs_development$1.isAsyncMode = st, reactIs_development$1.isConcurrentMode = at, reactIs_development$1.isContextConsumer = wt, reactIs_development$1.isContextProvider = Ut, reactIs_development$1.isElement = $e, reactIs_development$1.isForwardRef = ir, reactIs_development$1.isFragment = tr, reactIs_development$1.isLazy = ar, reactIs_development$1.isMemo = ht, reactIs_development$1.isPortal = qt, reactIs_development$1.isProfiler = Xe, reactIs_development$1.isStrictMode = nt, reactIs_development$1.isSuspense = je, reactIs_development$1.isSuspenseList = It, reactIs_development$1.isValidElementType = Fe, reactIs_development$1.typeOf = Pe;
  }()), reactIs_development$1;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReactIs_production_min$1() : Q.exports = requireReactIs_development$1();
})(reactIs$1);
const fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
function getFunctionName(Q) {
  const ee = `${Q}`.match(fnNameMatchRegex);
  return ee && ee[1] || "";
}
function getFunctionComponentName(Q, ee = "") {
  return Q.displayName || Q.name || getFunctionName(Q) || ee;
}
function getWrappedName(Q, ee, ne) {
  const ie = getFunctionComponentName(ee);
  return Q.displayName || (ie !== "" ? `${ne}(${ie})` : ne);
}
function getDisplayName(Q) {
  if (Q != null) {
    if (typeof Q == "string")
      return Q;
    if (typeof Q == "function")
      return getFunctionComponentName(Q, "Component");
    if (typeof Q == "object")
      switch (Q.$$typeof) {
        case reactIs$1.exports.ForwardRef:
          return getWrappedName(Q, Q.render, "ForwardRef");
        case reactIs$1.exports.Memo:
          return getWrappedName(Q, Q.type, "memo");
        default:
          return;
      }
  }
}
const refType = propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object]), refType$1 = refType;
function capitalize(Q) {
  if (typeof Q != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : formatMuiErrorMessage(7));
  return Q.charAt(0).toUpperCase() + Q.slice(1);
}
function setRef$1(Q, ee) {
  typeof Q == "function" ? Q(ee) : Q && (Q.current = ee);
}
const useEnhancedEffect = typeof window < "u" ? react.exports.useLayoutEffect : react.exports.useEffect, useEnhancedEffect$1 = useEnhancedEffect;
function useEventCallback(Q) {
  const ee = react.exports.useRef(Q);
  return useEnhancedEffect$1(() => {
    ee.current = Q;
  }), react.exports.useCallback((...ne) => (0, ee.current)(...ne), []);
}
function useForkRef(...Q) {
  return react.exports.useMemo(() => Q.every((ee) => ee == null) ? null : (ee) => {
    Q.forEach((ne) => {
      setRef$1(ne, ee);
    });
  }, Q);
}
let hadKeyboardEvent = !0, hadFocusVisibleRecently = !1, hadFocusVisibleRecentlyTimeout;
const inputTypesWhitelist = {
  text: !0,
  search: !0,
  url: !0,
  tel: !0,
  email: !0,
  password: !0,
  number: !0,
  date: !0,
  month: !0,
  week: !0,
  time: !0,
  datetime: !0,
  "datetime-local": !0
};
function focusTriggersKeyboardModality(Q) {
  const {
    type: ee,
    tagName: ne
  } = Q;
  return !!(ne === "INPUT" && inputTypesWhitelist[ee] && !Q.readOnly || ne === "TEXTAREA" && !Q.readOnly || Q.isContentEditable);
}
function handleKeyDown(Q) {
  Q.metaKey || Q.altKey || Q.ctrlKey || (hadKeyboardEvent = !0);
}
function handlePointerDown() {
  hadKeyboardEvent = !1;
}
function handleVisibilityChange() {
  this.visibilityState === "hidden" && hadFocusVisibleRecently && (hadKeyboardEvent = !0);
}
function prepare(Q) {
  Q.addEventListener("keydown", handleKeyDown, !0), Q.addEventListener("mousedown", handlePointerDown, !0), Q.addEventListener("pointerdown", handlePointerDown, !0), Q.addEventListener("touchstart", handlePointerDown, !0), Q.addEventListener("visibilitychange", handleVisibilityChange, !0);
}
function isFocusVisible(Q) {
  const {
    target: ee
  } = Q;
  try {
    return ee.matches(":focus-visible");
  } catch {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(ee);
}
function useIsFocusVisible() {
  const Q = react.exports.useCallback((ae) => {
    ae != null && prepare(ae.ownerDocument);
  }, []), ee = react.exports.useRef(!1);
  function ne() {
    return ee.current ? (hadFocusVisibleRecently = !0, window.clearTimeout(hadFocusVisibleRecentlyTimeout), hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
      hadFocusVisibleRecently = !1;
    }, 100), ee.current = !1, !0) : !1;
  }
  function ie(ae) {
    return isFocusVisible(ae) ? (ee.current = !0, !0) : !1;
  }
  return {
    isFocusVisibleRef: ee,
    onFocus: ie,
    onBlur: ne,
    ref: Q
  };
}
function resolveProps(Q, ee) {
  const ne = _extends$1({}, ee);
  return Object.keys(Q).forEach((ie) => {
    ne[ie] === void 0 && (ne[ie] = Q[ie]);
  }), ne;
}
function composeClasses(Q, ee, ne) {
  const ie = {};
  return Object.keys(Q).forEach(
    (ae) => {
      ie[ae] = Q[ae].reduce((ce, le) => (le && (ce.push(ee(le)), ne && ne[le] && ce.push(ne[le])), ce), []).join(" ");
    }
  ), ie;
}
const defaultGenerator = (Q) => Q, createClassNameGenerator = () => {
  let Q = defaultGenerator;
  return {
    configure(ee) {
      Q = ee;
    },
    generate(ee) {
      return Q(ee);
    },
    reset() {
      Q = defaultGenerator;
    }
  };
}, ClassNameGenerator = createClassNameGenerator(), ClassNameGenerator$1 = ClassNameGenerator, globalStateClassesMapping = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  required: "required",
  selected: "selected"
};
function generateUtilityClass(Q, ee, ne = "Mui") {
  const ie = globalStateClassesMapping[ee];
  return ie ? `${ne}-${ie}` : `${ClassNameGenerator$1.generate(Q)}-${ee}`;
}
function generateUtilityClasses(Q, ee, ne = "Mui") {
  const ie = {};
  return ee.forEach((ae) => {
    ie[ae] = generateUtilityClass(Q, ae, ne);
  }), ie;
}
function merge$2(Q, ee) {
  return ee ? deepmerge(Q, ee, {
    clone: !1
  }) : Q;
}
const values$1 = {
  xs: 0,
  sm: 600,
  md: 900,
  lg: 1200,
  xl: 1536
}, defaultBreakpoints = {
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (Q) => `@media (min-width:${values$1[Q]}px)`
};
function handleBreakpoints(Q, ee, ne) {
  const ie = Q.theme || {};
  if (Array.isArray(ee)) {
    const ce = ie.breakpoints || defaultBreakpoints;
    return ee.reduce((le, de, ye) => (le[ce.up(ce.keys[ye])] = ne(ee[ye]), le), {});
  }
  if (typeof ee == "object") {
    const ce = ie.breakpoints || defaultBreakpoints;
    return Object.keys(ee).reduce((le, de) => {
      if (Object.keys(ce.values || values$1).indexOf(de) !== -1) {
        const ye = ce.up(de);
        le[ye] = ne(ee[de], de);
      } else {
        const ye = de;
        le[ye] = ee[ye];
      }
      return le;
    }, {});
  }
  return ne(ee);
}
function createEmptyBreakpointObject(Q = {}) {
  var ee;
  return ((ee = Q.keys) == null ? void 0 : ee.reduce((ie, ae) => {
    const ce = Q.up(ae);
    return ie[ce] = {}, ie;
  }, {})) || {};
}
function removeUnusedBreakpoints(Q, ee) {
  return Q.reduce((ne, ie) => {
    const ae = ne[ie];
    return (!ae || Object.keys(ae).length === 0) && delete ne[ie], ne;
  }, ee);
}
function getPath(Q, ee, ne = !0) {
  if (!ee || typeof ee != "string")
    return null;
  if (Q && Q.vars && ne) {
    const ie = `vars.${ee}`.split(".").reduce((ae, ce) => ae && ae[ce] ? ae[ce] : null, Q);
    if (ie != null)
      return ie;
  }
  return ee.split(".").reduce((ie, ae) => ie && ie[ae] != null ? ie[ae] : null, Q);
}
function getValue$1(Q, ee, ne, ie = ne) {
  let ae;
  return typeof Q == "function" ? ae = Q(ne) : Array.isArray(Q) ? ae = Q[ne] || ie : ae = getPath(Q, ne) || ie, ee && (ae = ee(ae, ie)), ae;
}
function style$1(Q) {
  const {
    prop: ee,
    cssProperty: ne = Q.prop,
    themeKey: ie,
    transform: ae
  } = Q, ce = (le) => {
    if (le[ee] == null)
      return null;
    const de = le[ee], ye = le.theme, he = getPath(ye, ie) || {};
    return handleBreakpoints(le, de, (Ee) => {
      let me = getValue$1(he, ae, Ee);
      return Ee === me && typeof Ee == "string" && (me = getValue$1(he, ae, `${ee}${Ee === "default" ? "" : capitalize(Ee)}`, Ee)), ne === !1 ? me : {
        [ne]: me
      };
    });
  };
  return ce.propTypes = process.env.NODE_ENV !== "production" ? {
    [ee]: responsivePropType$1
  } : {}, ce.filterProps = [ee], ce;
}
function compose(...Q) {
  const ee = Q.reduce((ie, ae) => (ae.filterProps.forEach((ce) => {
    ie[ce] = ae;
  }), ie), {}), ne = (ie) => Object.keys(ie).reduce((ae, ce) => ee[ce] ? merge$2(ae, ee[ce](ie)) : ae, {});
  return ne.propTypes = process.env.NODE_ENV !== "production" ? Q.reduce((ie, ae) => Object.assign(ie, ae.propTypes), {}) : {}, ne.filterProps = Q.reduce((ie, ae) => ie.concat(ae.filterProps), []), ne;
}
function memoize$2(Q) {
  const ee = {};
  return (ne) => (ee[ne] === void 0 && (ee[ne] = Q(ne)), ee[ne]);
}
const properties = {
  m: "margin",
  p: "padding"
}, directions = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, aliases = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, getCssProperties = memoize$2((Q) => {
  if (Q.length > 2)
    if (aliases[Q])
      Q = aliases[Q];
    else
      return [Q];
  const [ee, ne] = Q.split(""), ie = properties[ee], ae = directions[ne] || "";
  return Array.isArray(ae) ? ae.map((ce) => ie + ce) : [ie + ae];
}), marginKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], paddingKeys = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], spacingKeys = [...marginKeys, ...paddingKeys];
function createUnaryUnit(Q, ee, ne, ie) {
  var ae;
  const ce = (ae = getPath(Q, ee, !1)) != null ? ae : ne;
  return typeof ce == "number" ? (le) => typeof le == "string" ? le : (process.env.NODE_ENV !== "production" && typeof le != "number" && console.error(`MUI: Expected ${ie} argument to be a number or a string, got ${le}.`), ce * le) : Array.isArray(ce) ? (le) => typeof le == "string" ? le : (process.env.NODE_ENV !== "production" && (Number.isInteger(le) ? le > ce.length - 1 && console.error([`MUI: The value provided (${le}) overflows.`, `The supported values are: ${JSON.stringify(ce)}.`, `${le} > ${ce.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${ee}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${ee}\` as a number.`].join(`
`))), ce[le]) : typeof ce == "function" ? ce : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${ee}\` value (${ce}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function createUnarySpacing(Q) {
  return createUnaryUnit(Q, "spacing", 8, "spacing");
}
function getValue(Q, ee) {
  if (typeof ee == "string" || ee == null)
    return ee;
  const ne = Math.abs(ee), ie = Q(ne);
  return ee >= 0 ? ie : typeof ie == "number" ? -ie : `-${ie}`;
}
function getStyleFromPropValue(Q, ee) {
  return (ne) => Q.reduce((ie, ae) => (ie[ae] = getValue(ee, ne), ie), {});
}
function resolveCssProperty(Q, ee, ne, ie) {
  if (ee.indexOf(ne) === -1)
    return null;
  const ae = getCssProperties(ne), ce = getStyleFromPropValue(ae, ie), le = Q[ne];
  return handleBreakpoints(Q, le, ce);
}
function style(Q, ee) {
  const ne = createUnarySpacing(Q.theme);
  return Object.keys(Q).map((ie) => resolveCssProperty(Q, ee, ie, ne)).reduce(merge$2, {});
}
process.env.NODE_ENV !== "production" && marginKeys.reduce((Q, ee) => (Q[ee] = responsivePropType$1, Q), {});
process.env.NODE_ENV !== "production" && paddingKeys.reduce((Q, ee) => (Q[ee] = responsivePropType$1, Q), {});
function spacing(Q) {
  return style(Q, spacingKeys);
}
spacing.propTypes = process.env.NODE_ENV !== "production" ? spacingKeys.reduce((Q, ee) => (Q[ee] = responsivePropType$1, Q), {}) : {};
spacing.filterProps = spacingKeys;
function getBorder(Q) {
  return typeof Q != "number" ? Q : `${Q}px solid`;
}
const border = style$1({
  prop: "border",
  themeKey: "borders",
  transform: getBorder
}), borderTop = style$1({
  prop: "borderTop",
  themeKey: "borders",
  transform: getBorder
}), borderRight = style$1({
  prop: "borderRight",
  themeKey: "borders",
  transform: getBorder
}), borderBottom = style$1({
  prop: "borderBottom",
  themeKey: "borders",
  transform: getBorder
}), borderLeft = style$1({
  prop: "borderLeft",
  themeKey: "borders",
  transform: getBorder
}), borderColor = style$1({
  prop: "borderColor",
  themeKey: "palette"
}), borderTopColor = style$1({
  prop: "borderTopColor",
  themeKey: "palette"
}), borderRightColor = style$1({
  prop: "borderRightColor",
  themeKey: "palette"
}), borderBottomColor = style$1({
  prop: "borderBottomColor",
  themeKey: "palette"
}), borderLeftColor = style$1({
  prop: "borderLeftColor",
  themeKey: "palette"
}), borderRadius = (Q) => {
  if (Q.borderRadius !== void 0 && Q.borderRadius !== null) {
    const ee = createUnaryUnit(Q.theme, "shape.borderRadius", 4, "borderRadius"), ne = (ie) => ({
      borderRadius: getValue(ee, ie)
    });
    return handleBreakpoints(Q, Q.borderRadius, ne);
  }
  return null;
};
borderRadius.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: responsivePropType$1
} : {};
borderRadius.filterProps = ["borderRadius"];
const borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius), borders$1 = borders, displayPrint = style$1({
  prop: "displayPrint",
  cssProperty: !1,
  transform: (Q) => ({
    "@media print": {
      display: Q
    }
  })
}), displayRaw = style$1({
  prop: "display"
}), overflow = style$1({
  prop: "overflow"
}), textOverflow = style$1({
  prop: "textOverflow"
}), visibility = style$1({
  prop: "visibility"
}), whiteSpace = style$1({
  prop: "whiteSpace"
}), display = compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace), flexBasis = style$1({
  prop: "flexBasis"
}), flexDirection = style$1({
  prop: "flexDirection"
}), flexWrap = style$1({
  prop: "flexWrap"
}), justifyContent = style$1({
  prop: "justifyContent"
}), alignItems = style$1({
  prop: "alignItems"
}), alignContent = style$1({
  prop: "alignContent"
}), order = style$1({
  prop: "order"
}), flex = style$1({
  prop: "flex"
}), flexGrow = style$1({
  prop: "flexGrow"
}), flexShrink = style$1({
  prop: "flexShrink"
}), alignSelf = style$1({
  prop: "alignSelf"
}), justifyItems = style$1({
  prop: "justifyItems"
}), justifySelf = style$1({
  prop: "justifySelf"
}), flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf), flexbox$1 = flexbox, gap = (Q) => {
  if (Q.gap !== void 0 && Q.gap !== null) {
    const ee = createUnaryUnit(Q.theme, "spacing", 8, "gap"), ne = (ie) => ({
      gap: getValue(ee, ie)
    });
    return handleBreakpoints(Q, Q.gap, ne);
  }
  return null;
};
gap.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: responsivePropType$1
} : {};
gap.filterProps = ["gap"];
const columnGap = (Q) => {
  if (Q.columnGap !== void 0 && Q.columnGap !== null) {
    const ee = createUnaryUnit(Q.theme, "spacing", 8, "columnGap"), ne = (ie) => ({
      columnGap: getValue(ee, ie)
    });
    return handleBreakpoints(Q, Q.columnGap, ne);
  }
  return null;
};
columnGap.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: responsivePropType$1
} : {};
columnGap.filterProps = ["columnGap"];
const rowGap = (Q) => {
  if (Q.rowGap !== void 0 && Q.rowGap !== null) {
    const ee = createUnaryUnit(Q.theme, "spacing", 8, "rowGap"), ne = (ie) => ({
      rowGap: getValue(ee, ie)
    });
    return handleBreakpoints(Q, Q.rowGap, ne);
  }
  return null;
};
rowGap.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: responsivePropType$1
} : {};
rowGap.filterProps = ["rowGap"];
const gridColumn = style$1({
  prop: "gridColumn"
}), gridRow = style$1({
  prop: "gridRow"
}), gridAutoFlow = style$1({
  prop: "gridAutoFlow"
}), gridAutoColumns = style$1({
  prop: "gridAutoColumns"
}), gridAutoRows = style$1({
  prop: "gridAutoRows"
}), gridTemplateColumns = style$1({
  prop: "gridTemplateColumns"
}), gridTemplateRows = style$1({
  prop: "gridTemplateRows"
}), gridTemplateAreas = style$1({
  prop: "gridTemplateAreas"
}), gridArea = style$1({
  prop: "gridArea"
}), grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea), grid$1 = grid;
function transform$1(Q, ee) {
  return ee === "grey" ? ee : Q;
}
const color = style$1({
  prop: "color",
  themeKey: "palette",
  transform: transform$1
}), bgcolor = style$1({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: transform$1
}), backgroundColor = style$1({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: transform$1
}), palette = compose(color, bgcolor, backgroundColor), palette$1 = palette, position = style$1({
  prop: "position"
}), zIndex$2 = style$1({
  prop: "zIndex",
  themeKey: "zIndex"
}), top = style$1({
  prop: "top"
}), right = style$1({
  prop: "right"
}), bottom = style$1({
  prop: "bottom"
}), left = style$1({
  prop: "left"
}), positions = compose(position, zIndex$2, top, right, bottom, left), boxShadow = style$1({
  prop: "boxShadow",
  themeKey: "shadows"
}), shadows$2 = boxShadow;
function transform(Q) {
  return Q <= 1 && Q !== 0 ? `${Q * 100}%` : Q;
}
const width = style$1({
  prop: "width",
  transform
}), maxWidth = (Q) => {
  if (Q.maxWidth !== void 0 && Q.maxWidth !== null) {
    const ee = (ne) => {
      var ie, ae, ce;
      return {
        maxWidth: ((ie = Q.theme) == null || (ae = ie.breakpoints) == null || (ce = ae.values) == null ? void 0 : ce[ne]) || values$1[ne] || transform(ne)
      };
    };
    return handleBreakpoints(Q, Q.maxWidth, ee);
  }
  return null;
};
maxWidth.filterProps = ["maxWidth"];
const minWidth = style$1({
  prop: "minWidth",
  transform
}), height = style$1({
  prop: "height",
  transform
}), maxHeight = style$1({
  prop: "maxHeight",
  transform
}), minHeight = style$1({
  prop: "minHeight",
  transform
});
style$1({
  prop: "size",
  cssProperty: "width",
  transform
});
style$1({
  prop: "size",
  cssProperty: "height",
  transform
});
const boxSizing = style$1({
  prop: "boxSizing"
}), sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing), sizing$1 = sizing, fontFamily = style$1({
  prop: "fontFamily",
  themeKey: "typography"
}), fontSize = style$1({
  prop: "fontSize",
  themeKey: "typography"
}), fontStyle = style$1({
  prop: "fontStyle",
  themeKey: "typography"
}), fontWeight = style$1({
  prop: "fontWeight",
  themeKey: "typography"
}), letterSpacing = style$1({
  prop: "letterSpacing"
}), textTransform = style$1({
  prop: "textTransform"
}), lineHeight = style$1({
  prop: "lineHeight"
}), textAlign = style$1({
  prop: "textAlign"
}), typographyVariant = style$1({
  prop: "typography",
  cssProperty: !1,
  themeKey: "typography"
}), typography = compose(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign, textTransform), typography$1 = typography, filterPropsMapping = {
  borders: borders$1.filterProps,
  display: display.filterProps,
  flexbox: flexbox$1.filterProps,
  grid: grid$1.filterProps,
  positions: positions.filterProps,
  palette: palette$1.filterProps,
  shadows: shadows$2.filterProps,
  sizing: sizing$1.filterProps,
  spacing: spacing.filterProps,
  typography: typography$1.filterProps
}, styleFunctionMapping = {
  borders: borders$1,
  display,
  flexbox: flexbox$1,
  grid: grid$1,
  positions,
  palette: palette$1,
  shadows: shadows$2,
  sizing: sizing$1,
  spacing,
  typography: typography$1
};
Object.keys(filterPropsMapping).reduce((Q, ee) => (filterPropsMapping[ee].forEach((ne) => {
  Q[ne] = styleFunctionMapping[ee];
}), Q), {});
function objectsHaveSameKeys(...Q) {
  const ee = Q.reduce((ie, ae) => ie.concat(Object.keys(ae)), []), ne = new Set(ee);
  return Q.every((ie) => ne.size === Object.keys(ie).length);
}
function callIfFn(Q, ee) {
  return typeof Q == "function" ? Q(ee) : Q;
}
function unstable_createStyleFunctionSx(Q = styleFunctionMapping) {
  const ee = Object.keys(Q).reduce((ae, ce) => (Q[ce].filterProps.forEach((le) => {
    ae[le] = Q[ce];
  }), ae), {});
  function ne(ae, ce, le) {
    const de = {
      [ae]: ce,
      theme: le
    }, ye = ee[ae];
    return ye ? ye(de) : {
      [ae]: ce
    };
  }
  function ie(ae) {
    const {
      sx: ce,
      theme: le = {}
    } = ae || {};
    if (!ce)
      return null;
    function de(ye) {
      let he = ye;
      if (typeof ye == "function")
        he = ye(le);
      else if (typeof ye != "object")
        return ye;
      if (!he)
        return null;
      const Be = createEmptyBreakpointObject(le.breakpoints), Ee = Object.keys(Be);
      let me = Be;
      return Object.keys(he).forEach((ge) => {
        const be = callIfFn(he[ge], le);
        if (be != null)
          if (typeof be == "object")
            if (ee[ge])
              me = merge$2(me, ne(ge, be, le));
            else {
              const we = handleBreakpoints({
                theme: le
              }, be, (Oe) => ({
                [ge]: Oe
              }));
              objectsHaveSameKeys(we, be) ? me[ge] = ie({
                sx: be,
                theme: le
              }) : me = merge$2(me, we);
            }
          else
            me = merge$2(me, ne(ge, be, le));
      }), removeUnusedBreakpoints(Ee, me);
    }
    return Array.isArray(ce) ? ce.map(de) : de(ce);
  }
  return ie;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = ["sx"];
const defaultStyleFunctionSx = styleFunctionSx;
function r$1(Q) {
  var ee, ne, ie = "";
  if (typeof Q == "string" || typeof Q == "number")
    ie += Q;
  else if (typeof Q == "object")
    if (Array.isArray(Q))
      for (ee = 0; ee < Q.length; ee++)
        Q[ee] && (ne = r$1(Q[ee])) && (ie && (ie += " "), ie += ne);
    else
      for (ee in Q)
        Q[ee] && (ie && (ie += " "), ie += ee);
  return ie;
}
function clsx() {
  for (var Q, ee, ne = 0, ie = ""; ne < arguments.length; )
    (Q = arguments[ne++]) && (ee = r$1(Q)) && (ie && (ie += " "), ie += ee);
  return ie;
}
const _excluded$a = ["values", "unit", "step"], sortBreakpointsValues = (Q) => {
  const ee = Object.keys(Q).map((ne) => ({
    key: ne,
    val: Q[ne]
  })) || [];
  return ee.sort((ne, ie) => ne.val - ie.val), ee.reduce((ne, ie) => _extends$1({}, ne, {
    [ie.key]: ie.val
  }), {});
};
function createBreakpoints(Q) {
  const {
    values: ee = {
      xs: 0,
      sm: 600,
      md: 900,
      lg: 1200,
      xl: 1536
    },
    unit: ne = "px",
    step: ie = 5
  } = Q, ae = _objectWithoutPropertiesLoose$1(Q, _excluded$a), ce = sortBreakpointsValues(ee), le = Object.keys(ce);
  function de(me) {
    return `@media (min-width:${typeof ee[me] == "number" ? ee[me] : me}${ne})`;
  }
  function ye(me) {
    return `@media (max-width:${(typeof ee[me] == "number" ? ee[me] : me) - ie / 100}${ne})`;
  }
  function he(me, ge) {
    const be = le.indexOf(ge);
    return `@media (min-width:${typeof ee[me] == "number" ? ee[me] : me}${ne}) and (max-width:${(be !== -1 && typeof ee[le[be]] == "number" ? ee[le[be]] : ge) - ie / 100}${ne})`;
  }
  function Be(me) {
    return le.indexOf(me) + 1 < le.length ? he(me, le[le.indexOf(me) + 1]) : de(me);
  }
  function Ee(me) {
    const ge = le.indexOf(me);
    return ge === 0 ? de(le[1]) : ge === le.length - 1 ? ye(le[ge]) : he(me, le[le.indexOf(me) + 1]).replace("@media", "@media not all and");
  }
  return _extends$1({
    keys: le,
    values: ce,
    up: de,
    down: ye,
    between: he,
    only: Be,
    not: Ee,
    unit: ne
  }, ae);
}
const shape = {
  borderRadius: 4
}, shape$1 = shape;
function createSpacing(Q = 8) {
  if (Q.mui)
    return Q;
  const ee = createUnarySpacing({
    spacing: Q
  }), ne = (...ie) => (process.env.NODE_ENV !== "production" && (ie.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${ie.length}`)), (ie.length === 0 ? [1] : ie).map((ce) => {
    const le = ee(ce);
    return typeof le == "number" ? `${le}px` : le;
  }).join(" "));
  return ne.mui = !0, ne;
}
const _excluded$9 = ["breakpoints", "palette", "spacing", "shape"];
function createTheme$1(Q = {}, ...ee) {
  const {
    breakpoints: ne = {},
    palette: ie = {},
    spacing: ae,
    shape: ce = {}
  } = Q, le = _objectWithoutPropertiesLoose$1(Q, _excluded$9), de = createBreakpoints(ne), ye = createSpacing(ae);
  let he = deepmerge({
    breakpoints: de,
    direction: "ltr",
    components: {},
    palette: _extends$1({
      mode: "light"
    }, ie),
    spacing: ye,
    shape: _extends$1({}, shape$1, ce)
  }, le);
  return he = ee.reduce((Be, Ee) => deepmerge(Be, Ee), he), he;
}
const ThemeContext$1 = /* @__PURE__ */ react.exports.createContext(null);
process.env.NODE_ENV !== "production" && (ThemeContext$1.displayName = "ThemeContext");
const ThemeContext$2 = ThemeContext$1;
function useTheme$2() {
  const Q = react.exports.useContext(ThemeContext$2);
  return process.env.NODE_ENV !== "production" && react.exports.useDebugValue(Q), Q;
}
function isObjectEmpty(Q) {
  return Object.keys(Q).length === 0;
}
function useTheme$1(Q = null) {
  const ee = useTheme$2();
  return !ee || isObjectEmpty(ee) ? Q : ee;
}
const systemDefaultTheme$1 = createTheme$1();
function useTheme(Q = systemDefaultTheme$1) {
  return useTheme$1(Q);
}
const _excluded$8 = ["variant"];
function isEmpty$1(Q) {
  return Q.length === 0;
}
function propsToClassKey(Q) {
  const {
    variant: ee
  } = Q, ne = _objectWithoutPropertiesLoose$1(Q, _excluded$8);
  let ie = ee || "";
  return Object.keys(ne).sort().forEach((ae) => {
    ae === "color" ? ie += isEmpty$1(ie) ? Q[ae] : capitalize(Q[ae]) : ie += `${isEmpty$1(ie) ? ae : capitalize(ae)}${capitalize(Q[ae].toString())}`;
  }), ie;
}
const _excluded$7 = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"], _excluded2 = ["theme"], _excluded3 = ["theme"];
function isEmpty(Q) {
  return Object.keys(Q).length === 0;
}
function isStringTag(Q) {
  return typeof Q == "string" && Q.charCodeAt(0) > 96;
}
const getStyleOverrides = (Q, ee) => ee.components && ee.components[Q] && ee.components[Q].styleOverrides ? ee.components[Q].styleOverrides : null, getVariantStyles = (Q, ee) => {
  let ne = [];
  ee && ee.components && ee.components[Q] && ee.components[Q].variants && (ne = ee.components[Q].variants);
  const ie = {};
  return ne.forEach((ae) => {
    const ce = propsToClassKey(ae.props);
    ie[ce] = ae.style;
  }), ie;
}, variantsResolver = (Q, ee, ne, ie) => {
  var ae, ce;
  const {
    ownerState: le = {}
  } = Q, de = [], ye = ne == null || (ae = ne.components) == null || (ce = ae[ie]) == null ? void 0 : ce.variants;
  return ye && ye.forEach((he) => {
    let Be = !0;
    Object.keys(he.props).forEach((Ee) => {
      le[Ee] !== he.props[Ee] && Q[Ee] !== he.props[Ee] && (Be = !1);
    }), Be && de.push(ee[propsToClassKey(he.props)]);
  }), de;
};
function shouldForwardProp(Q) {
  return Q !== "ownerState" && Q !== "theme" && Q !== "sx" && Q !== "as";
}
const systemDefaultTheme = createTheme$1(), lowercaseFirstLetter = (Q) => Q.charAt(0).toLowerCase() + Q.slice(1);
function createStyled(Q = {}) {
  const {
    defaultTheme: ee = systemDefaultTheme,
    rootShouldForwardProp: ne = shouldForwardProp,
    slotShouldForwardProp: ie = shouldForwardProp,
    styleFunctionSx: ae = defaultStyleFunctionSx
  } = Q, ce = (le) => {
    const de = isEmpty(le.theme) ? ee : le.theme;
    return ae(_extends$1({}, le, {
      theme: de
    }));
  };
  return ce.__mui_systemSx = !0, (le, de = {}) => {
    internal_processStyles(le, (Fe) => Fe.filter((Pe) => !(Pe != null && Pe.__mui_systemSx)));
    const {
      name: ye,
      slot: he,
      skipVariantsResolver: Be,
      skipSx: Ee,
      overridesResolver: me
    } = de, ge = _objectWithoutPropertiesLoose$1(de, _excluded$7), be = Be !== void 0 ? Be : he && he !== "Root" || !1, we = Ee || !1;
    let Oe;
    process.env.NODE_ENV !== "production" && ye && (Oe = `${ye}-${lowercaseFirstLetter(he || "Root")}`);
    let He = shouldForwardProp;
    he === "Root" ? He = ne : he ? He = ie : isStringTag(le) && (He = void 0);
    const Se = styled$4(le, _extends$1({
      shouldForwardProp: He,
      label: Oe
    }, ge)), Ge = (Fe, ...Pe) => {
      const We = Pe ? Pe.map((et) => typeof et == "function" && et.__emotion_real !== et ? (mt) => {
        let {
          theme: Mt
        } = mt, Ot = _objectWithoutPropertiesLoose$1(mt, _excluded2);
        return et(_extends$1({
          theme: isEmpty(Mt) ? ee : Mt
        }, Ot));
      } : et) : [];
      let tt = Fe;
      ye && me && We.push((et) => {
        const mt = isEmpty(et.theme) ? ee : et.theme, Mt = getStyleOverrides(ye, mt);
        if (Mt) {
          const Ot = {};
          return Object.entries(Mt).forEach(([yt, Qt]) => {
            Ot[yt] = typeof Qt == "function" ? Qt(_extends$1({}, et, {
              theme: mt
            })) : Qt;
          }), me(et, Ot);
        }
        return null;
      }), ye && !be && We.push((et) => {
        const mt = isEmpty(et.theme) ? ee : et.theme;
        return variantsResolver(et, getVariantStyles(ye, mt), mt, ye);
      }), we || We.push(ce);
      const Et = We.length - Pe.length;
      if (Array.isArray(Fe) && Et > 0) {
        const et = new Array(Et).fill("");
        tt = [...Fe, ...et], tt.raw = [...Fe.raw, ...et];
      } else
        typeof Fe == "function" && Fe.__emotion_real !== Fe && (tt = (et) => {
          let {
            theme: mt
          } = et, Mt = _objectWithoutPropertiesLoose$1(et, _excluded3);
          return Fe(_extends$1({
            theme: isEmpty(mt) ? ee : mt
          }, Mt));
        });
      const Nt = Se(tt, ...We);
      if (process.env.NODE_ENV !== "production") {
        let et;
        ye && (et = `${ye}${he || ""}`), et === void 0 && (et = `Styled(${getDisplayName(le)})`), Nt.displayName = et;
      }
      return Nt;
    };
    return Se.withConfig && (Ge.withConfig = Se.withConfig), Ge;
  };
}
function getThemeProps(Q) {
  const {
    theme: ee,
    name: ne,
    props: ie
  } = Q;
  return !ee || !ee.components || !ee.components[ne] || !ee.components[ne].defaultProps ? ie : resolveProps(ee.components[ne].defaultProps, ie);
}
function useThemeProps$1({
  props: Q,
  name: ee,
  defaultTheme: ne
}) {
  const ie = useTheme(ne);
  return getThemeProps({
    theme: ie,
    name: ee,
    props: Q
  });
}
function clamp(Q, ee = 0, ne = 1) {
  return process.env.NODE_ENV !== "production" && (Q < ee || Q > ne) && console.error(`MUI: The value provided ${Q} is out of range [${ee}, ${ne}].`), Math.min(Math.max(ee, Q), ne);
}
function hexToRgb(Q) {
  Q = Q.slice(1);
  const ee = new RegExp(`.{1,${Q.length >= 6 ? 2 : 1}}`, "g");
  let ne = Q.match(ee);
  return ne && ne[0].length === 1 && (ne = ne.map((ie) => ie + ie)), ne ? `rgb${ne.length === 4 ? "a" : ""}(${ne.map((ie, ae) => ae < 3 ? parseInt(ie, 16) : Math.round(parseInt(ie, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function decomposeColor(Q) {
  if (Q.type)
    return Q;
  if (Q.charAt(0) === "#")
    return decomposeColor(hexToRgb(Q));
  const ee = Q.indexOf("("), ne = Q.substring(0, ee);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(ne) === -1)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${Q}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : formatMuiErrorMessage(9, Q));
  let ie = Q.substring(ee + 1, Q.length - 1), ae;
  if (ne === "color") {
    if (ie = ie.split(" "), ae = ie.shift(), ie.length === 4 && ie[3].charAt(0) === "/" && (ie[3] = ie[3].slice(1)), ["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(ae) === -1)
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${ae}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : formatMuiErrorMessage(10, ae));
  } else
    ie = ie.split(",");
  return ie = ie.map((ce) => parseFloat(ce)), {
    type: ne,
    values: ie,
    colorSpace: ae
  };
}
function recomposeColor(Q) {
  const {
    type: ee,
    colorSpace: ne
  } = Q;
  let {
    values: ie
  } = Q;
  return ee.indexOf("rgb") !== -1 ? ie = ie.map((ae, ce) => ce < 3 ? parseInt(ae, 10) : ae) : ee.indexOf("hsl") !== -1 && (ie[1] = `${ie[1]}%`, ie[2] = `${ie[2]}%`), ee.indexOf("color") !== -1 ? ie = `${ne} ${ie.join(" ")}` : ie = `${ie.join(", ")}`, `${ee}(${ie})`;
}
function hslToRgb(Q) {
  Q = decomposeColor(Q);
  const {
    values: ee
  } = Q, ne = ee[0], ie = ee[1] / 100, ae = ee[2] / 100, ce = ie * Math.min(ae, 1 - ae), le = (he, Be = (he + ne / 30) % 12) => ae - ce * Math.max(Math.min(Be - 3, 9 - Be, 1), -1);
  let de = "rgb";
  const ye = [Math.round(le(0) * 255), Math.round(le(8) * 255), Math.round(le(4) * 255)];
  return Q.type === "hsla" && (de += "a", ye.push(ee[3])), recomposeColor({
    type: de,
    values: ye
  });
}
function getLuminance(Q) {
  Q = decomposeColor(Q);
  let ee = Q.type === "hsl" || Q.type === "hsla" ? decomposeColor(hslToRgb(Q)).values : Q.values;
  return ee = ee.map((ne) => (Q.type !== "color" && (ne /= 255), ne <= 0.03928 ? ne / 12.92 : ((ne + 0.055) / 1.055) ** 2.4)), Number((0.2126 * ee[0] + 0.7152 * ee[1] + 0.0722 * ee[2]).toFixed(3));
}
function getContrastRatio(Q, ee) {
  const ne = getLuminance(Q), ie = getLuminance(ee);
  return (Math.max(ne, ie) + 0.05) / (Math.min(ne, ie) + 0.05);
}
function alpha(Q, ee) {
  return Q = decomposeColor(Q), ee = clamp(ee), (Q.type === "rgb" || Q.type === "hsl") && (Q.type += "a"), Q.type === "color" ? Q.values[3] = `/${ee}` : Q.values[3] = ee, recomposeColor(Q);
}
function darken(Q, ee) {
  if (Q = decomposeColor(Q), ee = clamp(ee), Q.type.indexOf("hsl") !== -1)
    Q.values[2] *= 1 - ee;
  else if (Q.type.indexOf("rgb") !== -1 || Q.type.indexOf("color") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Q.values[ne] *= 1 - ee;
  return recomposeColor(Q);
}
function lighten(Q, ee) {
  if (Q = decomposeColor(Q), ee = clamp(ee), Q.type.indexOf("hsl") !== -1)
    Q.values[2] += (100 - Q.values[2]) * ee;
  else if (Q.type.indexOf("rgb") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Q.values[ne] += (255 - Q.values[ne]) * ee;
  else if (Q.type.indexOf("color") !== -1)
    for (let ne = 0; ne < 3; ne += 1)
      Q.values[ne] += (1 - Q.values[ne]) * ee;
  return recomposeColor(Q);
}
function createMixins(Q, ee) {
  return _extends$1({
    toolbar: {
      minHeight: 56,
      [Q.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [Q.up("sm")]: {
        minHeight: 64
      }
    }
  }, ee);
}
const _excluded$6 = ["mode", "contrastThreshold", "tonalOffset"], light = {
  text: {
    primary: "rgba(0, 0, 0, 0.87)",
    secondary: "rgba(0, 0, 0, 0.6)",
    disabled: "rgba(0, 0, 0, 0.38)"
  },
  divider: "rgba(0, 0, 0, 0.12)",
  background: {
    paper: common$1.white,
    default: common$1.white
  },
  action: {
    active: "rgba(0, 0, 0, 0.54)",
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    disabled: "rgba(0, 0, 0, 0.26)",
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
}, dark = {
  text: {
    primary: common$1.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: "#121212",
    default: "#121212"
  },
  action: {
    active: common$1.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(Q, ee, ne, ie) {
  const ae = ie.light || ie, ce = ie.dark || ie * 1.5;
  Q[ee] || (Q.hasOwnProperty(ne) ? Q[ee] = Q[ne] : ee === "light" ? Q.light = lighten(Q.main, ae) : ee === "dark" && (Q.dark = darken(Q.main, ce)));
}
function getDefaultPrimary(Q = "light") {
  return Q === "dark" ? {
    main: blue$1[200],
    light: blue$1[50],
    dark: blue$1[400]
  } : {
    main: blue$1[700],
    light: blue$1[400],
    dark: blue$1[800]
  };
}
function getDefaultSecondary(Q = "light") {
  return Q === "dark" ? {
    main: purple$1[200],
    light: purple$1[50],
    dark: purple$1[400]
  } : {
    main: purple$1[500],
    light: purple$1[300],
    dark: purple$1[700]
  };
}
function getDefaultError(Q = "light") {
  return Q === "dark" ? {
    main: red$1[500],
    light: red$1[300],
    dark: red$1[700]
  } : {
    main: red$1[700],
    light: red$1[400],
    dark: red$1[800]
  };
}
function getDefaultInfo(Q = "light") {
  return Q === "dark" ? {
    main: lightBlue$1[400],
    light: lightBlue$1[300],
    dark: lightBlue$1[700]
  } : {
    main: lightBlue$1[700],
    light: lightBlue$1[500],
    dark: lightBlue$1[900]
  };
}
function getDefaultSuccess(Q = "light") {
  return Q === "dark" ? {
    main: green$1[400],
    light: green$1[300],
    dark: green$1[700]
  } : {
    main: green$1[800],
    light: green$1[500],
    dark: green$1[900]
  };
}
function getDefaultWarning(Q = "light") {
  return Q === "dark" ? {
    main: orange$1[400],
    light: orange$1[300],
    dark: orange$1[700]
  } : {
    main: "#ed6c02",
    light: orange$1[500],
    dark: orange$1[900]
  };
}
function createPalette(Q) {
  const {
    mode: ee = "light",
    contrastThreshold: ne = 3,
    tonalOffset: ie = 0.2
  } = Q, ae = _objectWithoutPropertiesLoose$1(Q, _excluded$6), ce = Q.primary || getDefaultPrimary(ee), le = Q.secondary || getDefaultSecondary(ee), de = Q.error || getDefaultError(ee), ye = Q.info || getDefaultInfo(ee), he = Q.success || getDefaultSuccess(ee), Be = Q.warning || getDefaultWarning(ee);
  function Ee(we) {
    const Oe = getContrastRatio(we, dark.text.primary) >= ne ? dark.text.primary : light.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const He = getContrastRatio(we, Oe);
      He < 3 && console.error([`MUI: The contrast ratio of ${He}:1 for ${Oe} on ${we}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return Oe;
  }
  const me = ({
    color: we,
    name: Oe,
    mainShade: He = 500,
    lightShade: Se = 300,
    darkShade: Ge = 700
  }) => {
    if (we = _extends$1({}, we), !we.main && we[He] && (we.main = we[He]), !we.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${Oe ? ` (${Oe})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${He}\` property.` : formatMuiErrorMessage(11, Oe ? ` (${Oe})` : "", He));
    if (typeof we.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${Oe ? ` (${Oe})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(we.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : formatMuiErrorMessage(12, Oe ? ` (${Oe})` : "", JSON.stringify(we.main)));
    return addLightOrDark(we, "light", Se, ie), addLightOrDark(we, "dark", Ge, ie), we.contrastText || (we.contrastText = Ee(we.main)), we;
  }, ge = {
    dark,
    light
  };
  return process.env.NODE_ENV !== "production" && (ge[ee] || console.error(`MUI: The palette mode \`${ee}\` is not supported.`)), deepmerge(_extends$1({
    common: _extends$1({}, common$1),
    mode: ee,
    primary: me({
      color: ce,
      name: "primary"
    }),
    secondary: me({
      color: le,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    error: me({
      color: de,
      name: "error"
    }),
    warning: me({
      color: Be,
      name: "warning"
    }),
    info: me({
      color: ye,
      name: "info"
    }),
    success: me({
      color: he,
      name: "success"
    }),
    grey: grey$1,
    contrastThreshold: ne,
    getContrastText: Ee,
    augmentColor: me,
    tonalOffset: ie
  }, ge[ee]), ae);
}
const _excluded$5 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
function round(Q) {
  return Math.round(Q * 1e5) / 1e5;
}
const caseAllCaps = {
  textTransform: "uppercase"
}, defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(Q, ee) {
  const ne = typeof ee == "function" ? ee(Q) : ee, {
    fontFamily: ie = defaultFontFamily,
    fontSize: ae = 14,
    fontWeightLight: ce = 300,
    fontWeightRegular: le = 400,
    fontWeightMedium: de = 500,
    fontWeightBold: ye = 700,
    htmlFontSize: he = 16,
    allVariants: Be,
    pxToRem: Ee
  } = ne, me = _objectWithoutPropertiesLoose$1(ne, _excluded$5);
  process.env.NODE_ENV !== "production" && (typeof ae != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof he != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const ge = ae / 14, be = Ee || ((He) => `${He / he * ge}rem`), we = (He, Se, Ge, Fe, Pe) => _extends$1({
    fontFamily: ie,
    fontWeight: He,
    fontSize: be(Se),
    lineHeight: Ge
  }, ie === defaultFontFamily ? {
    letterSpacing: `${round(Fe / Se)}em`
  } : {}, Pe, Be), Oe = {
    h1: we(ce, 96, 1.167, -1.5),
    h2: we(ce, 60, 1.2, -0.5),
    h3: we(le, 48, 1.167, 0),
    h4: we(le, 34, 1.235, 0.25),
    h5: we(le, 24, 1.334, 0),
    h6: we(de, 20, 1.6, 0.15),
    subtitle1: we(le, 16, 1.75, 0.15),
    subtitle2: we(de, 14, 1.57, 0.1),
    body1: we(le, 16, 1.5, 0.15),
    body2: we(le, 14, 1.43, 0.15),
    button: we(de, 14, 1.75, 0.4, caseAllCaps),
    caption: we(le, 12, 1.66, 0.4),
    overline: we(le, 12, 2.66, 1, caseAllCaps)
  };
  return deepmerge(_extends$1({
    htmlFontSize: he,
    pxToRem: be,
    fontFamily: ie,
    fontSize: ae,
    fontWeightLight: ce,
    fontWeightRegular: le,
    fontWeightMedium: de,
    fontWeightBold: ye
  }, Oe), me, {
    clone: !1
  });
}
const shadowKeyUmbraOpacity = 0.2, shadowKeyPenumbraOpacity = 0.14, shadowAmbientShadowOpacity = 0.12;
function createShadow(...Q) {
  return [`${Q[0]}px ${Q[1]}px ${Q[2]}px ${Q[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${Q[4]}px ${Q[5]}px ${Q[6]}px ${Q[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${Q[8]}px ${Q[9]}px ${Q[10]}px ${Q[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
}
const shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], shadows$1 = shadows, _excluded$4 = ["duration", "easing", "delay"], easing = {
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  standard: 300,
  complex: 375,
  enteringScreen: 225,
  leavingScreen: 195
};
function formatMs(Q) {
  return `${Math.round(Q)}ms`;
}
function getAutoHeightDuration(Q) {
  if (!Q)
    return 0;
  const ee = Q / 36;
  return Math.round((4 + 15 * ee ** 0.25 + ee / 5) * 10);
}
function createTransitions(Q) {
  const ee = _extends$1({}, easing, Q.easing), ne = _extends$1({}, duration, Q.duration);
  return _extends$1({
    getAutoHeightDuration,
    create: (ae = ["all"], ce = {}) => {
      const {
        duration: le = ne.standard,
        easing: de = ee.easeInOut,
        delay: ye = 0
      } = ce, he = _objectWithoutPropertiesLoose$1(ce, _excluded$4);
      if (process.env.NODE_ENV !== "production") {
        const Be = (me) => typeof me == "string", Ee = (me) => !isNaN(parseFloat(me));
        !Be(ae) && !Array.isArray(ae) && console.error('MUI: Argument "props" must be a string or Array.'), !Ee(le) && !Be(le) && console.error(`MUI: Argument "duration" must be a number or a string but found ${le}.`), Be(de) || console.error('MUI: Argument "easing" must be a string.'), !Ee(ye) && !Be(ye) && console.error('MUI: Argument "delay" must be a number or a string.'), Object.keys(he).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(he).join(",")}].`);
      }
      return (Array.isArray(ae) ? ae : [ae]).map((Be) => `${Be} ${typeof le == "string" ? le : formatMs(le)} ${de} ${typeof ye == "string" ? ye : formatMs(ye)}`).join(",");
    }
  }, Q, {
    easing: ee,
    duration: ne
  });
}
const zIndex = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
}, zIndex$1 = zIndex, _excluded$3 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
function createTheme(Q = {}, ...ee) {
  const {
    mixins: ne = {},
    palette: ie = {},
    transitions: ae = {},
    typography: ce = {}
  } = Q, le = _objectWithoutPropertiesLoose$1(Q, _excluded$3);
  if (Q.vars)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name." : formatMuiErrorMessage(18));
  const de = createPalette(ie), ye = createTheme$1(Q);
  let he = deepmerge(ye, {
    mixins: createMixins(ye.breakpoints, ne),
    palette: de,
    shadows: shadows$1.slice(),
    typography: createTypography(de, ce),
    transitions: createTransitions(ae),
    zIndex: _extends$1({}, zIndex$1)
  });
  if (he = deepmerge(he, le), he = ee.reduce((Be, Ee) => deepmerge(Be, Ee), he), process.env.NODE_ENV !== "production") {
    const Be = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], Ee = (me, ge) => {
      let be;
      for (be in me) {
        const we = me[be];
        if (Be.indexOf(be) !== -1 && Object.keys(we).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const Oe = generateUtilityClass("", be);
            console.error([`MUI: The \`${ge}\` component increases the CSS specificity of the \`${be}\` internal state.`, "You can not override it like this: ", JSON.stringify(me, null, 2), "", `Instead, you need to use the '&.${Oe}' syntax:`, JSON.stringify({
              root: {
                [`&.${Oe}`]: we
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          me[be] = {};
        }
      }
    };
    Object.keys(he.components).forEach((me) => {
      const ge = he.components[me].styleOverrides;
      ge && me.indexOf("Mui") === 0 && Ee(ge, me);
    });
  }
  return he;
}
const defaultTheme = createTheme(), defaultTheme$1 = defaultTheme;
function useThemeProps({
  props: Q,
  name: ee
}) {
  return useThemeProps$1({
    props: Q,
    name: ee,
    defaultTheme: defaultTheme$1
  });
}
const rootShouldForwardProp = (Q) => shouldForwardProp(Q) && Q !== "classes", styled$2 = createStyled({
  defaultTheme: defaultTheme$1,
  rootShouldForwardProp
}), styled$3 = styled$2;
function _setPrototypeOf(Q, ee) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(ie, ae) {
    return ie.__proto__ = ae, ie;
  }, _setPrototypeOf(Q, ee);
}
function _inheritsLoose(Q, ee) {
  Q.prototype = Object.create(ee.prototype), Q.prototype.constructor = Q, _setPrototypeOf(Q, ee);
}
const TransitionGroupContext = React.createContext(null);
function _assertThisInitialized(Q) {
  if (Q === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return Q;
}
function getChildMapping(Q, ee) {
  var ne = function(ce) {
    return ee && react.exports.isValidElement(ce) ? ee(ce) : ce;
  }, ie = /* @__PURE__ */ Object.create(null);
  return Q && react.exports.Children.map(Q, function(ae) {
    return ae;
  }).forEach(function(ae) {
    ie[ae.key] = ne(ae);
  }), ie;
}
function mergeChildMappings(Q, ee) {
  Q = Q || {}, ee = ee || {};
  function ne(Be) {
    return Be in ee ? ee[Be] : Q[Be];
  }
  var ie = /* @__PURE__ */ Object.create(null), ae = [];
  for (var ce in Q)
    ce in ee ? ae.length && (ie[ce] = ae, ae = []) : ae.push(ce);
  var le, de = {};
  for (var ye in ee) {
    if (ie[ye])
      for (le = 0; le < ie[ye].length; le++) {
        var he = ie[ye][le];
        de[ie[ye][le]] = ne(he);
      }
    de[ye] = ne(ye);
  }
  for (le = 0; le < ae.length; le++)
    de[ae[le]] = ne(ae[le]);
  return de;
}
function getProp(Q, ee, ne) {
  return ne[ee] != null ? ne[ee] : Q.props[ee];
}
function getInitialChildMapping(Q, ee) {
  return getChildMapping(Q.children, function(ne) {
    return react.exports.cloneElement(ne, {
      onExited: ee.bind(null, ne),
      in: !0,
      appear: getProp(ne, "appear", Q),
      enter: getProp(ne, "enter", Q),
      exit: getProp(ne, "exit", Q)
    });
  });
}
function getNextChildMapping(Q, ee, ne) {
  var ie = getChildMapping(Q.children), ae = mergeChildMappings(ee, ie);
  return Object.keys(ae).forEach(function(ce) {
    var le = ae[ce];
    if (!!react.exports.isValidElement(le)) {
      var de = ce in ee, ye = ce in ie, he = ee[ce], Be = react.exports.isValidElement(he) && !he.props.in;
      ye && (!de || Be) ? ae[ce] = react.exports.cloneElement(le, {
        onExited: ne.bind(null, le),
        in: !0,
        exit: getProp(le, "exit", Q),
        enter: getProp(le, "enter", Q)
      }) : !ye && de && !Be ? ae[ce] = react.exports.cloneElement(le, {
        in: !1
      }) : ye && de && react.exports.isValidElement(he) && (ae[ce] = react.exports.cloneElement(le, {
        onExited: ne.bind(null, le),
        in: he.props.in,
        exit: getProp(le, "exit", Q),
        enter: getProp(le, "enter", Q)
      }));
    }
  }), ae;
}
var values = Object.values || function(Q) {
  return Object.keys(Q).map(function(ee) {
    return Q[ee];
  });
}, defaultProps = {
  component: "div",
  childFactory: function(ee) {
    return ee;
  }
}, TransitionGroup = /* @__PURE__ */ function(Q) {
  _inheritsLoose(ee, Q);
  function ee(ie, ae) {
    var ce;
    ce = Q.call(this, ie, ae) || this;
    var le = ce.handleExited.bind(_assertThisInitialized(ce));
    return ce.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: le,
      firstRender: !0
    }, ce;
  }
  var ne = ee.prototype;
  return ne.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, ne.componentWillUnmount = function() {
    this.mounted = !1;
  }, ee.getDerivedStateFromProps = function(ae, ce) {
    var le = ce.children, de = ce.handleExited, ye = ce.firstRender;
    return {
      children: ye ? getInitialChildMapping(ae, de) : getNextChildMapping(ae, le, de),
      firstRender: !1
    };
  }, ne.handleExited = function(ae, ce) {
    var le = getChildMapping(this.props.children);
    ae.key in le || (ae.props.onExited && ae.props.onExited(ce), this.mounted && this.setState(function(de) {
      var ye = _extends$1({}, de.children);
      return delete ye[ae.key], {
        children: ye
      };
    }));
  }, ne.render = function() {
    var ae = this.props, ce = ae.component, le = ae.childFactory, de = _objectWithoutPropertiesLoose$1(ae, ["component", "childFactory"]), ye = this.state.contextValue, he = values(this.state.children).map(le);
    return delete de.appear, delete de.enter, delete de.exit, ce === null ? /* @__PURE__ */ jsx(TransitionGroupContext.Provider, {
      value: ye,
      children: he
    }) : /* @__PURE__ */ jsx(TransitionGroupContext.Provider, {
      value: ye,
      children: /* @__PURE__ */ jsx(ce, {
        ...de,
        children: he
      })
    });
  }, ee;
}(React.Component);
TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  component: propTypes.exports.any,
  children: propTypes.exports.node,
  appear: propTypes.exports.bool,
  enter: propTypes.exports.bool,
  exit: propTypes.exports.bool,
  childFactory: propTypes.exports.func
} : {};
TransitionGroup.defaultProps = defaultProps;
const TransitionGroup$1 = TransitionGroup;
function Ripple(Q) {
  const {
    className: ee,
    classes: ne,
    pulsate: ie = !1,
    rippleX: ae,
    rippleY: ce,
    rippleSize: le,
    in: de,
    onExited: ye,
    timeout: he
  } = Q, [Be, Ee] = react.exports.useState(!1), me = clsx(ee, ne.ripple, ne.rippleVisible, ie && ne.ripplePulsate), ge = {
    width: le,
    height: le,
    top: -(le / 2) + ce,
    left: -(le / 2) + ae
  }, be = clsx(ne.child, Be && ne.childLeaving, ie && ne.childPulsate);
  return !de && !Be && Ee(!0), react.exports.useEffect(() => {
    if (!de && ye != null) {
      const we = setTimeout(ye, he);
      return () => {
        clearTimeout(we);
      };
    }
  }, [ye, de, he]), /* @__PURE__ */ jsx("span", {
    className: me,
    style: ge,
    children: /* @__PURE__ */ jsx("span", {
      className: be
    })
  });
}
process.env.NODE_ENV !== "production" && (Ripple.propTypes = {
  classes: propTypes.exports.object.isRequired,
  className: propTypes.exports.string,
  in: propTypes.exports.bool,
  onExited: propTypes.exports.func,
  pulsate: propTypes.exports.bool,
  rippleSize: propTypes.exports.number,
  rippleX: propTypes.exports.number,
  rippleY: propTypes.exports.number,
  timeout: propTypes.exports.number.isRequired
});
const touchRippleClasses = generateUtilityClasses("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), touchRippleClasses$1 = touchRippleClasses, _excluded$2 = ["center", "classes", "className"];
let _ = (Q) => Q, _t, _t2, _t3, _t4;
const DURATION = 550, DELAY_RIPPLE = 80, enterKeyframe = keyframes(_t || (_t = _`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`)), exitKeyframe = keyframes(_t2 || (_t2 = _`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`)), pulsateKeyframe = keyframes(_t3 || (_t3 = _`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`)), TouchRippleRoot = styled$3("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), TouchRippleRipple = styled$3(Ripple, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(_t4 || (_t4 = _`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses$1.rippleVisible, enterKeyframe, DURATION, ({
  theme: Q
}) => Q.transitions.easing.easeInOut, touchRippleClasses$1.ripplePulsate, ({
  theme: Q
}) => Q.transitions.duration.shorter, touchRippleClasses$1.child, touchRippleClasses$1.childLeaving, exitKeyframe, DURATION, ({
  theme: Q
}) => Q.transitions.easing.easeInOut, touchRippleClasses$1.childPulsate, pulsateKeyframe, ({
  theme: Q
}) => Q.transitions.easing.easeInOut), TouchRipple = /* @__PURE__ */ react.exports.forwardRef(function(ee, ne) {
  const ie = useThemeProps({
    props: ee,
    name: "MuiTouchRipple"
  }), {
    center: ae = !1,
    classes: ce = {},
    className: le
  } = ie, de = _objectWithoutPropertiesLoose$1(ie, _excluded$2), [ye, he] = react.exports.useState([]), Be = react.exports.useRef(0), Ee = react.exports.useRef(null);
  react.exports.useEffect(() => {
    Ee.current && (Ee.current(), Ee.current = null);
  }, [ye]);
  const me = react.exports.useRef(!1), ge = react.exports.useRef(null), be = react.exports.useRef(null), we = react.exports.useRef(null);
  react.exports.useEffect(() => () => {
    clearTimeout(ge.current);
  }, []);
  const Oe = react.exports.useCallback((Fe) => {
    const {
      pulsate: Pe,
      rippleX: We,
      rippleY: tt,
      rippleSize: Et,
      cb: Nt
    } = Fe;
    he((et) => [...et, /* @__PURE__ */ jsx(TouchRippleRipple, {
      classes: {
        ripple: clsx(ce.ripple, touchRippleClasses$1.ripple),
        rippleVisible: clsx(ce.rippleVisible, touchRippleClasses$1.rippleVisible),
        ripplePulsate: clsx(ce.ripplePulsate, touchRippleClasses$1.ripplePulsate),
        child: clsx(ce.child, touchRippleClasses$1.child),
        childLeaving: clsx(ce.childLeaving, touchRippleClasses$1.childLeaving),
        childPulsate: clsx(ce.childPulsate, touchRippleClasses$1.childPulsate)
      },
      timeout: DURATION,
      pulsate: Pe,
      rippleX: We,
      rippleY: tt,
      rippleSize: Et
    }, Be.current)]), Be.current += 1, Ee.current = Nt;
  }, [ce]), He = react.exports.useCallback((Fe = {}, Pe = {}, We = () => {
  }) => {
    const {
      pulsate: tt = !1,
      center: Et = ae || Pe.pulsate,
      fakeElement: Nt = !1
    } = Pe;
    if ((Fe == null ? void 0 : Fe.type) === "mousedown" && me.current) {
      me.current = !1;
      return;
    }
    (Fe == null ? void 0 : Fe.type) === "touchstart" && (me.current = !0);
    const et = Nt ? null : we.current, mt = et ? et.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let Mt, Ot, yt;
    if (Et || Fe === void 0 || Fe.clientX === 0 && Fe.clientY === 0 || !Fe.clientX && !Fe.touches)
      Mt = Math.round(mt.width / 2), Ot = Math.round(mt.height / 2);
    else {
      const {
        clientX: Qt,
        clientY: Yt
      } = Fe.touches && Fe.touches.length > 0 ? Fe.touches[0] : Fe;
      Mt = Math.round(Qt - mt.left), Ot = Math.round(Yt - mt.top);
    }
    if (Et)
      yt = Math.sqrt((2 * mt.width ** 2 + mt.height ** 2) / 3), yt % 2 === 0 && (yt += 1);
    else {
      const Qt = Math.max(Math.abs((et ? et.clientWidth : 0) - Mt), Mt) * 2 + 2, Yt = Math.max(Math.abs((et ? et.clientHeight : 0) - Ot), Ot) * 2 + 2;
      yt = Math.sqrt(Qt ** 2 + Yt ** 2);
    }
    Fe != null && Fe.touches ? be.current === null && (be.current = () => {
      Oe({
        pulsate: tt,
        rippleX: Mt,
        rippleY: Ot,
        rippleSize: yt,
        cb: We
      });
    }, ge.current = setTimeout(() => {
      be.current && (be.current(), be.current = null);
    }, DELAY_RIPPLE)) : Oe({
      pulsate: tt,
      rippleX: Mt,
      rippleY: Ot,
      rippleSize: yt,
      cb: We
    });
  }, [ae, Oe]), Se = react.exports.useCallback(() => {
    He({}, {
      pulsate: !0
    });
  }, [He]), Ge = react.exports.useCallback((Fe, Pe) => {
    if (clearTimeout(ge.current), (Fe == null ? void 0 : Fe.type) === "touchend" && be.current) {
      be.current(), be.current = null, ge.current = setTimeout(() => {
        Ge(Fe, Pe);
      });
      return;
    }
    be.current = null, he((We) => We.length > 0 ? We.slice(1) : We), Ee.current = Pe;
  }, []);
  return react.exports.useImperativeHandle(ne, () => ({
    pulsate: Se,
    start: He,
    stop: Ge
  }), [Se, He, Ge]), /* @__PURE__ */ jsx(TouchRippleRoot, _extends$1({
    className: clsx(touchRippleClasses$1.root, ce.root, le),
    ref: we
  }, de, {
    children: /* @__PURE__ */ jsx(TransitionGroup$1, {
      component: null,
      exit: !0,
      children: ye
    })
  }));
});
process.env.NODE_ENV !== "production" && (TouchRipple.propTypes = {
  center: propTypes.exports.bool,
  classes: propTypes.exports.object,
  className: propTypes.exports.string
});
const TouchRipple$1 = TouchRipple;
function getButtonBaseUtilityClass(Q) {
  return generateUtilityClass("MuiButtonBase", Q);
}
const buttonBaseClasses = generateUtilityClasses("MuiButtonBase", ["root", "disabled", "focusVisible"]), buttonBaseClasses$1 = buttonBaseClasses, _excluded$1 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"], useUtilityClasses$1 = (Q) => {
  const {
    disabled: ee,
    focusVisible: ne,
    focusVisibleClassName: ie,
    classes: ae
  } = Q, le = composeClasses({
    root: ["root", ee && "disabled", ne && "focusVisible"]
  }, getButtonBaseUtilityClass, ae);
  return ne && ie && (le.root += ` ${ie}`), le;
}, ButtonBaseRoot = styled$3("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (Q, ee) => ee.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  outline: 0,
  border: 0,
  margin: 0,
  borderRadius: 0,
  padding: 0,
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  WebkitAppearance: "none",
  textDecoration: "none",
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
  },
  [`&.${buttonBaseClasses$1.disabled}`]: {
    pointerEvents: "none",
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), ButtonBase = /* @__PURE__ */ react.exports.forwardRef(function(ee, ne) {
  const ie = useThemeProps({
    props: ee,
    name: "MuiButtonBase"
  }), {
    action: ae,
    centerRipple: ce = !1,
    children: le,
    className: de,
    component: ye = "button",
    disabled: he = !1,
    disableRipple: Be = !1,
    disableTouchRipple: Ee = !1,
    focusRipple: me = !1,
    LinkComponent: ge = "a",
    onBlur: be,
    onClick: we,
    onContextMenu: Oe,
    onDragLeave: He,
    onFocus: Se,
    onFocusVisible: Ge,
    onKeyDown: Fe,
    onKeyUp: Pe,
    onMouseDown: We,
    onMouseLeave: tt,
    onMouseUp: Et,
    onTouchEnd: Nt,
    onTouchMove: et,
    onTouchStart: mt,
    tabIndex: Mt = 0,
    TouchRippleProps: Ot,
    touchRippleRef: yt,
    type: Qt
  } = ie, Yt = _objectWithoutPropertiesLoose$1(ie, _excluded$1), jt = react.exports.useRef(null), $t = react.exports.useRef(null), Wt = useForkRef($t, yt), {
    isFocusVisibleRef: st,
    onFocus: at,
    onBlur: wt,
    ref: Ut
  } = useIsFocusVisible(), [$e, ir] = react.exports.useState(!1);
  he && $e && ir(!1), react.exports.useImperativeHandle(ae, () => ({
    focusVisible: () => {
      ir(!0), jt.current.focus();
    }
  }), []);
  const [tr, ar] = react.exports.useState(!1);
  react.exports.useEffect(() => {
    ar(!0);
  }, []);
  const ht = tr && !Be && !he;
  react.exports.useEffect(() => {
    $e && me && !Be && tr && $t.current.pulsate();
  }, [Be, me, $e, tr]);
  function qt(Re, ot, bt = Ee) {
    return useEventCallback((Pt) => (ot && ot(Pt), !bt && $t.current && $t.current[Re](Pt), !0));
  }
  const Xe = qt("start", We), nt = qt("stop", Oe), je = qt("stop", He), It = qt("stop", Et), lt = qt("stop", (Re) => {
    $e && Re.preventDefault(), tt && tt(Re);
  }), Ye = qt("start", mt), _e = qt("stop", Nt), Ie = qt("stop", et), Ce = qt("stop", (Re) => {
    wt(Re), st.current === !1 && ir(!1), be && be(Re);
  }, !1), ke = useEventCallback((Re) => {
    jt.current || (jt.current = Re.currentTarget), at(Re), st.current === !0 && (ir(!0), Ge && Ge(Re)), Se && Se(Re);
  }), Ve = () => {
    const Re = jt.current;
    return ye && ye !== "button" && !(Re.tagName === "A" && Re.href);
  }, Ze = react.exports.useRef(!1), ct = useEventCallback((Re) => {
    me && !Ze.current && $e && $t.current && Re.key === " " && (Ze.current = !0, $t.current.stop(Re, () => {
      $t.current.start(Re);
    })), Re.target === Re.currentTarget && Ve() && Re.key === " " && Re.preventDefault(), Fe && Fe(Re), Re.target === Re.currentTarget && Ve() && Re.key === "Enter" && !he && (Re.preventDefault(), we && we(Re));
  }), kt = useEventCallback((Re) => {
    me && Re.key === " " && $t.current && $e && !Re.defaultPrevented && (Ze.current = !1, $t.current.stop(Re, () => {
      $t.current.pulsate(Re);
    })), Pe && Pe(Re), we && Re.target === Re.currentTarget && Ve() && Re.key === " " && !Re.defaultPrevented && we(Re);
  });
  let Jt = ye;
  Jt === "button" && (Yt.href || Yt.to) && (Jt = ge);
  const Kt = {};
  Jt === "button" ? (Kt.type = Qt === void 0 ? "button" : Qt, Kt.disabled = he) : (!Yt.href && !Yt.to && (Kt.role = "button"), he && (Kt["aria-disabled"] = he));
  const Zt = useForkRef(ne, Ut, jt);
  process.env.NODE_ENV !== "production" && react.exports.useEffect(() => {
    ht && !$t.current && console.error(["MUI: The `component` prop provided to ButtonBase is invalid.", "Please make sure the children prop is rendered in this custom component."].join(`
`));
  }, [ht]);
  const De = _extends$1({}, ie, {
    centerRipple: ce,
    component: ye,
    disabled: he,
    disableRipple: Be,
    disableTouchRipple: Ee,
    focusRipple: me,
    tabIndex: Mt,
    focusVisible: $e
  }), Te = useUtilityClasses$1(De);
  return /* @__PURE__ */ jsxs(ButtonBaseRoot, _extends$1({
    as: Jt,
    className: clsx(Te.root, de),
    ownerState: De,
    onBlur: Ce,
    onClick: we,
    onContextMenu: nt,
    onFocus: ke,
    onKeyDown: ct,
    onKeyUp: kt,
    onMouseDown: Xe,
    onMouseLeave: lt,
    onMouseUp: It,
    onDragLeave: je,
    onTouchEnd: _e,
    onTouchMove: Ie,
    onTouchStart: Ye,
    ref: Zt,
    tabIndex: he ? -1 : Mt,
    type: Qt
  }, Kt, Yt, {
    children: [le, ht ? /* @__PURE__ */ jsx(TouchRipple$1, _extends$1({
      ref: Wt,
      center: ce
    }, Ot)) : null]
  }));
});
process.env.NODE_ENV !== "production" && (ButtonBase.propTypes = {
  action: refType$1,
  centerRipple: propTypes.exports.bool,
  children: propTypes.exports.node,
  classes: propTypes.exports.object,
  className: propTypes.exports.string,
  component: elementTypeAcceptingRef$1,
  disabled: propTypes.exports.bool,
  disableRipple: propTypes.exports.bool,
  disableTouchRipple: propTypes.exports.bool,
  focusRipple: propTypes.exports.bool,
  focusVisibleClassName: propTypes.exports.string,
  href: propTypes.exports.any,
  LinkComponent: propTypes.exports.elementType,
  onBlur: propTypes.exports.func,
  onClick: propTypes.exports.func,
  onContextMenu: propTypes.exports.func,
  onDragLeave: propTypes.exports.func,
  onFocus: propTypes.exports.func,
  onFocusVisible: propTypes.exports.func,
  onKeyDown: propTypes.exports.func,
  onKeyUp: propTypes.exports.func,
  onMouseDown: propTypes.exports.func,
  onMouseLeave: propTypes.exports.func,
  onMouseUp: propTypes.exports.func,
  onTouchEnd: propTypes.exports.func,
  onTouchMove: propTypes.exports.func,
  onTouchStart: propTypes.exports.func,
  sx: propTypes.exports.oneOfType([propTypes.exports.arrayOf(propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object, propTypes.exports.bool])), propTypes.exports.func, propTypes.exports.object]),
  tabIndex: propTypes.exports.number,
  TouchRippleProps: propTypes.exports.object,
  touchRippleRef: propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.shape({
    current: propTypes.exports.shape({
      pulsate: propTypes.exports.func.isRequired,
      start: propTypes.exports.func.isRequired,
      stop: propTypes.exports.func.isRequired
    })
  })]),
  type: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "reset", "submit"]), propTypes.exports.string])
});
const ButtonBase$1 = ButtonBase;
function getButtonUtilityClass(Q) {
  return generateUtilityClass("MuiButton", Q);
}
const buttonClasses = generateUtilityClasses("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]), buttonClasses$1 = buttonClasses, ButtonGroupContext = /* @__PURE__ */ react.exports.createContext({});
process.env.NODE_ENV !== "production" && (ButtonGroupContext.displayName = "ButtonGroupContext");
const ButtonGroupContext$1 = ButtonGroupContext, _excluded = ["children", "color", "component", "className", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"], useUtilityClasses = (Q) => {
  const {
    color: ee,
    disableElevation: ne,
    fullWidth: ie,
    size: ae,
    variant: ce,
    classes: le
  } = Q, de = {
    root: ["root", ce, `${ce}${capitalize(ee)}`, `size${capitalize(ae)}`, `${ce}Size${capitalize(ae)}`, ee === "inherit" && "colorInherit", ne && "disableElevation", ie && "fullWidth"],
    label: ["label"],
    startIcon: ["startIcon", `iconSize${capitalize(ae)}`],
    endIcon: ["endIcon", `iconSize${capitalize(ae)}`]
  }, ye = composeClasses(de, getButtonUtilityClass, le);
  return _extends$1({}, le, ye);
}, commonIconStyles = (Q) => _extends$1({}, Q.size === "small" && {
  "& > *:nth-of-type(1)": {
    fontSize: 18
  }
}, Q.size === "medium" && {
  "& > *:nth-of-type(1)": {
    fontSize: 20
  }
}, Q.size === "large" && {
  "& > *:nth-of-type(1)": {
    fontSize: 22
  }
}), ButtonRoot = styled$3(ButtonBase$1, {
  shouldForwardProp: (Q) => rootShouldForwardProp(Q) || Q === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (Q, ee) => {
    const {
      ownerState: ne
    } = Q;
    return [ee.root, ee[ne.variant], ee[`${ne.variant}${capitalize(ne.color)}`], ee[`size${capitalize(ne.size)}`], ee[`${ne.variant}Size${capitalize(ne.size)}`], ne.color === "inherit" && ee.colorInherit, ne.disableElevation && ee.disableElevation, ne.fullWidth && ee.fullWidth];
  }
})(({
  theme: Q,
  ownerState: ee
}) => {
  var ne, ie;
  return _extends$1({}, Q.typography.button, {
    minWidth: 64,
    padding: "6px 16px",
    borderRadius: (Q.vars || Q).shape.borderRadius,
    transition: Q.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: Q.transitions.duration.short
    }),
    "&:hover": _extends$1({
      textDecoration: "none",
      backgroundColor: Q.vars ? `rgba(${Q.vars.palette.text.primaryChannel} / ${Q.vars.palette.action.hoverOpacity})` : alpha(Q.palette.text.primary, Q.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "text" && ee.color !== "inherit" && {
      backgroundColor: Q.vars ? `rgba(${Q.vars.palette[ee.color].mainChannel} / ${Q.vars.palette.action.hoverOpacity})` : alpha(Q.palette[ee.color].main, Q.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "outlined" && ee.color !== "inherit" && {
      border: `1px solid ${(Q.vars || Q).palette[ee.color].main}`,
      backgroundColor: Q.vars ? `rgba(${Q.vars.palette[ee.color].mainChannel} / ${Q.vars.palette.action.hoverOpacity})` : alpha(Q.palette[ee.color].main, Q.palette.action.hoverOpacity),
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    }, ee.variant === "contained" && {
      backgroundColor: (Q.vars || Q).palette.grey.A100,
      boxShadow: (Q.vars || Q).shadows[4],
      "@media (hover: none)": {
        boxShadow: (Q.vars || Q).shadows[2],
        backgroundColor: (Q.vars || Q).palette.grey[300]
      }
    }, ee.variant === "contained" && ee.color !== "inherit" && {
      backgroundColor: (Q.vars || Q).palette[ee.color].dark,
      "@media (hover: none)": {
        backgroundColor: (Q.vars || Q).palette[ee.color].main
      }
    }),
    "&:active": _extends$1({}, ee.variant === "contained" && {
      boxShadow: (Q.vars || Q).shadows[8]
    }),
    [`&.${buttonClasses$1.focusVisible}`]: _extends$1({}, ee.variant === "contained" && {
      boxShadow: (Q.vars || Q).shadows[6]
    }),
    [`&.${buttonClasses$1.disabled}`]: _extends$1({
      color: (Q.vars || Q).palette.action.disabled
    }, ee.variant === "outlined" && {
      border: `1px solid ${(Q.vars || Q).palette.action.disabledBackground}`
    }, ee.variant === "outlined" && ee.color === "secondary" && {
      border: `1px solid ${(Q.vars || Q).palette.action.disabled}`
    }, ee.variant === "contained" && {
      color: (Q.vars || Q).palette.action.disabled,
      boxShadow: (Q.vars || Q).shadows[0],
      backgroundColor: (Q.vars || Q).palette.action.disabledBackground
    })
  }, ee.variant === "text" && {
    padding: "6px 8px"
  }, ee.variant === "text" && ee.color !== "inherit" && {
    color: (Q.vars || Q).palette[ee.color].main
  }, ee.variant === "outlined" && {
    padding: "5px 15px",
    border: "1px solid currentColor"
  }, ee.variant === "outlined" && ee.color !== "inherit" && {
    color: (Q.vars || Q).palette[ee.color].main,
    border: Q.vars ? `1px solid rgba(${Q.vars.palette[ee.color].mainChannel} / 0.5)` : `1px solid ${alpha(Q.palette[ee.color].main, 0.5)}`
  }, ee.variant === "contained" && {
    color: Q.vars ? Q.vars.palette.text.primary : (ne = (ie = Q.palette).getContrastText) == null ? void 0 : ne.call(ie, Q.palette.grey[300]),
    backgroundColor: (Q.vars || Q).palette.grey[300],
    boxShadow: (Q.vars || Q).shadows[2]
  }, ee.variant === "contained" && ee.color !== "inherit" && {
    color: (Q.vars || Q).palette[ee.color].contrastText,
    backgroundColor: (Q.vars || Q).palette[ee.color].main
  }, ee.color === "inherit" && {
    color: "inherit",
    borderColor: "currentColor"
  }, ee.size === "small" && ee.variant === "text" && {
    padding: "4px 5px",
    fontSize: Q.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "text" && {
    padding: "8px 11px",
    fontSize: Q.typography.pxToRem(15)
  }, ee.size === "small" && ee.variant === "outlined" && {
    padding: "3px 9px",
    fontSize: Q.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "outlined" && {
    padding: "7px 21px",
    fontSize: Q.typography.pxToRem(15)
  }, ee.size === "small" && ee.variant === "contained" && {
    padding: "4px 10px",
    fontSize: Q.typography.pxToRem(13)
  }, ee.size === "large" && ee.variant === "contained" && {
    padding: "8px 22px",
    fontSize: Q.typography.pxToRem(15)
  }, ee.fullWidth && {
    width: "100%"
  });
}, ({
  ownerState: Q
}) => Q.disableElevation && {
  boxShadow: "none",
  "&:hover": {
    boxShadow: "none"
  },
  [`&.${buttonClasses$1.focusVisible}`]: {
    boxShadow: "none"
  },
  "&:active": {
    boxShadow: "none"
  },
  [`&.${buttonClasses$1.disabled}`]: {
    boxShadow: "none"
  }
}), ButtonStartIcon = styled$3("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (Q, ee) => {
    const {
      ownerState: ne
    } = Q;
    return [ee.startIcon, ee[`iconSize${capitalize(ne.size)}`]];
  }
})(({
  ownerState: Q
}) => _extends$1({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4
}, Q.size === "small" && {
  marginLeft: -2
}, commonIconStyles(Q))), ButtonEndIcon = styled$3("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (Q, ee) => {
    const {
      ownerState: ne
    } = Q;
    return [ee.endIcon, ee[`iconSize${capitalize(ne.size)}`]];
  }
})(({
  ownerState: Q
}) => _extends$1({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8
}, Q.size === "small" && {
  marginRight: -2
}, commonIconStyles(Q))), Button = /* @__PURE__ */ react.exports.forwardRef(function(ee, ne) {
  const ie = react.exports.useContext(ButtonGroupContext$1), ae = resolveProps(ie, ee), ce = useThemeProps({
    props: ae,
    name: "MuiButton"
  }), {
    children: le,
    color: de = "primary",
    component: ye = "button",
    className: he,
    disabled: Be = !1,
    disableElevation: Ee = !1,
    disableFocusRipple: me = !1,
    endIcon: ge,
    focusVisibleClassName: be,
    fullWidth: we = !1,
    size: Oe = "medium",
    startIcon: He,
    type: Se,
    variant: Ge = "text"
  } = ce, Fe = _objectWithoutPropertiesLoose$1(ce, _excluded), Pe = _extends$1({}, ce, {
    color: de,
    component: ye,
    disabled: Be,
    disableElevation: Ee,
    disableFocusRipple: me,
    fullWidth: we,
    size: Oe,
    type: Se,
    variant: Ge
  }), We = useUtilityClasses(Pe), tt = He && /* @__PURE__ */ jsx(ButtonStartIcon, {
    className: We.startIcon,
    ownerState: Pe,
    children: He
  }), Et = ge && /* @__PURE__ */ jsx(ButtonEndIcon, {
    className: We.endIcon,
    ownerState: Pe,
    children: ge
  });
  return /* @__PURE__ */ jsxs(ButtonRoot, _extends$1({
    ownerState: Pe,
    className: clsx(ie.className, We.root, he),
    component: ye,
    disabled: Be,
    focusRipple: !me,
    focusVisibleClassName: clsx(We.focusVisible, be),
    ref: ne,
    type: Se
  }, Fe, {
    classes: We,
    children: [tt, le, Et]
  }));
});
process.env.NODE_ENV !== "production" && (Button.propTypes = {
  children: propTypes.exports.node,
  classes: propTypes.exports.object,
  className: propTypes.exports.string,
  color: propTypes.exports.oneOfType([propTypes.exports.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), propTypes.exports.string]),
  component: propTypes.exports.elementType,
  disabled: propTypes.exports.bool,
  disableElevation: propTypes.exports.bool,
  disableFocusRipple: propTypes.exports.bool,
  disableRipple: propTypes.exports.bool,
  endIcon: propTypes.exports.node,
  focusVisibleClassName: propTypes.exports.string,
  fullWidth: propTypes.exports.bool,
  href: propTypes.exports.string,
  size: propTypes.exports.oneOfType([propTypes.exports.oneOf(["small", "medium", "large"]), propTypes.exports.string]),
  startIcon: propTypes.exports.node,
  sx: propTypes.exports.oneOfType([propTypes.exports.arrayOf(propTypes.exports.oneOfType([propTypes.exports.func, propTypes.exports.object, propTypes.exports.bool])), propTypes.exports.func, propTypes.exports.object]),
  type: propTypes.exports.oneOfType([propTypes.exports.oneOf(["button", "reset", "submit"]), propTypes.exports.string]),
  variant: propTypes.exports.oneOfType([propTypes.exports.oneOf(["contained", "outlined", "text"]), propTypes.exports.string])
});
const Button$1 = Button, DndContext = react.exports.createContext({
  dragDropManager: void 0
});
function formatProdErrorMessage(Q) {
  return "Minified Redux error #" + Q + "; visit https://redux.js.org/Errors?code=" + Q + " for the full message or use the non-minified dev environment for full errors. ";
}
var $$observable = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}(), randomString = function() {
  return Math.random().toString(36).substring(7).split("").join(".");
}, ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};
function isPlainObject$3(Q) {
  if (typeof Q != "object" || Q === null)
    return !1;
  for (var ee = Q; Object.getPrototypeOf(ee) !== null; )
    ee = Object.getPrototypeOf(ee);
  return Object.getPrototypeOf(Q) === ee;
}
function miniKindOf(Q) {
  if (Q === void 0)
    return "undefined";
  if (Q === null)
    return "null";
  var ee = typeof Q;
  switch (ee) {
    case "boolean":
    case "string":
    case "number":
    case "symbol":
    case "function":
      return ee;
  }
  if (Array.isArray(Q))
    return "array";
  if (isDate$1(Q))
    return "date";
  if (isError(Q))
    return "error";
  var ne = ctorName(Q);
  switch (ne) {
    case "Symbol":
    case "Promise":
    case "WeakMap":
    case "WeakSet":
    case "Map":
    case "Set":
      return ne;
  }
  return ee.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function ctorName(Q) {
  return typeof Q.constructor == "function" ? Q.constructor.name : null;
}
function isError(Q) {
  return Q instanceof Error || typeof Q.message == "string" && Q.constructor && typeof Q.constructor.stackTraceLimit == "number";
}
function isDate$1(Q) {
  return Q instanceof Date ? !0 : typeof Q.toDateString == "function" && typeof Q.getDate == "function" && typeof Q.setDate == "function";
}
function kindOf(Q) {
  var ee = typeof Q;
  return process.env.NODE_ENV !== "production" && (ee = miniKindOf(Q)), ee;
}
function createStore$1(Q, ee, ne) {
  var ie;
  if (typeof ee == "function" && typeof ne == "function" || typeof ne == "function" && typeof arguments[3] == "function")
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(0) : "It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
  if (typeof ee == "function" && typeof ne > "u" && (ne = ee, ee = void 0), typeof ne < "u") {
    if (typeof ne != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(1) : "Expected the enhancer to be a function. Instead, received: '" + kindOf(ne) + "'");
    return ne(createStore$1)(Q, ee);
  }
  if (typeof Q != "function")
    throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(2) : "Expected the root reducer to be a function. Instead, received: '" + kindOf(Q) + "'");
  var ae = Q, ce = ee, le = [], de = le, ye = !1;
  function he() {
    de === le && (de = le.slice());
  }
  function Be() {
    if (ye)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(3) : "You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
    return ce;
  }
  function Ee(we) {
    if (typeof we != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(4) : "Expected the listener to be a function. Instead, received: '" + kindOf(we) + "'");
    if (ye)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(5) : "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
    var Oe = !0;
    return he(), de.push(we), function() {
      if (!!Oe) {
        if (ye)
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(6) : "You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
        Oe = !1, he();
        var Se = de.indexOf(we);
        de.splice(Se, 1), le = null;
      }
    };
  }
  function me(we) {
    if (!isPlainObject$3(we))
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(7) : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(we) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    if (typeof we.type > "u")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    if (ye)
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(9) : "Reducers may not dispatch actions.");
    try {
      ye = !0, ce = ae(ce, we);
    } finally {
      ye = !1;
    }
    for (var Oe = le = de, He = 0; He < Oe.length; He++) {
      var Se = Oe[He];
      Se();
    }
    return we;
  }
  function ge(we) {
    if (typeof we != "function")
      throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(10) : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(we));
    ae = we, me({
      type: ActionTypes.REPLACE
    });
  }
  function be() {
    var we, Oe = Ee;
    return we = {
      subscribe: function(Se) {
        if (typeof Se != "object" || Se === null)
          throw new Error(process.env.NODE_ENV === "production" ? formatProdErrorMessage(11) : "Expected the observer to be an object. Instead, received: '" + kindOf(Se) + "'");
        function Ge() {
          Se.next && Se.next(Be());
        }
        Ge();
        var Fe = Oe(Ge);
        return {
          unsubscribe: Fe
        };
      }
    }, we[$$observable] = function() {
      return this;
    }, we;
  }
  return me({
    type: ActionTypes.INIT
  }), ie = {
    dispatch: me,
    subscribe: Ee,
    getState: Be,
    replaceReducer: ge
  }, ie[$$observable] = be, ie;
}
function warning(Q) {
  typeof console < "u" && typeof console.error == "function" && console.error(Q);
  try {
    throw new Error(Q);
  } catch {
  }
}
function isCrushed() {
}
process.env.NODE_ENV !== "production" && typeof isCrushed.name == "string" && isCrushed.name !== "isCrushed" && warning('You are currently using minified code outside of NODE_ENV === "production". This means that you are running a slower development build of Redux. You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) to ensure you have the correct code for your production build.');
function invariant(Q, ee, ...ne) {
  if (isProduction() && ee === void 0)
    throw new Error("invariant requires an error message argument");
  if (!Q) {
    let ie;
    if (ee === void 0)
      ie = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
    else {
      let ae = 0;
      ie = new Error(ee.replace(/%s/g, function() {
        return ne[ae++];
      })), ie.name = "Invariant Violation";
    }
    throw ie.framesToPop = 1, ie;
  }
}
function isProduction() {
  return typeof process < "u" && process.env.NODE_ENV === "production";
}
function get(Q, ee, ne) {
  return ee.split(".").reduce(
    (ie, ae) => ie && ie[ae] ? ie[ae] : ne || null,
    Q
  );
}
function without$1(Q, ee) {
  return Q.filter(
    (ne) => ne !== ee
  );
}
function isObject$1(Q) {
  return typeof Q == "object";
}
function xor(Q, ee) {
  const ne = /* @__PURE__ */ new Map(), ie = (ce) => {
    ne.set(ce, ne.has(ce) ? ne.get(ce) + 1 : 1);
  };
  Q.forEach(ie), ee.forEach(ie);
  const ae = [];
  return ne.forEach((ce, le) => {
    ce === 1 && ae.push(le);
  }), ae;
}
function intersection(Q, ee) {
  return Q.filter(
    (ne) => ee.indexOf(ne) > -1
  );
}
const INIT_COORDS = "dnd-core/INIT_COORDS", BEGIN_DRAG = "dnd-core/BEGIN_DRAG", PUBLISH_DRAG_SOURCE = "dnd-core/PUBLISH_DRAG_SOURCE", HOVER = "dnd-core/HOVER", DROP = "dnd-core/DROP", END_DRAG = "dnd-core/END_DRAG";
function setClientOffset(Q, ee) {
  return {
    type: INIT_COORDS,
    payload: {
      sourceClientOffset: ee || null,
      clientOffset: Q || null
    }
  };
}
const ResetCoordinatesAction = {
  type: INIT_COORDS,
  payload: {
    clientOffset: null,
    sourceClientOffset: null
  }
};
function createBeginDrag(Q) {
  return function(ne = [], ie = {
    publishSource: !0
  }) {
    const { publishSource: ae = !0, clientOffset: ce, getSourceClientOffset: le } = ie, de = Q.getMonitor(), ye = Q.getRegistry();
    Q.dispatch(setClientOffset(ce)), verifyInvariants$1(ne, de, ye);
    const he = getDraggableSource(ne, de);
    if (he == null) {
      Q.dispatch(ResetCoordinatesAction);
      return;
    }
    let Be = null;
    if (ce) {
      if (!le)
        throw new Error("getSourceClientOffset must be defined");
      verifyGetSourceClientOffsetIsFunction(le), Be = le(he);
    }
    Q.dispatch(setClientOffset(ce, Be));
    const me = ye.getSource(he).beginDrag(de, he);
    if (me == null)
      return;
    verifyItemIsObject(me), ye.pinSource(he);
    const ge = ye.getSourceType(he);
    return {
      type: BEGIN_DRAG,
      payload: {
        itemType: ge,
        item: me,
        sourceId: he,
        clientOffset: ce || null,
        sourceClientOffset: Be || null,
        isSourcePublic: !!ae
      }
    };
  };
}
function verifyInvariants$1(Q, ee, ne) {
  invariant(!ee.isDragging(), "Cannot call beginDrag while dragging."), Q.forEach(function(ie) {
    invariant(ne.getSource(ie), "Expected sourceIds to be registered.");
  });
}
function verifyGetSourceClientOffsetIsFunction(Q) {
  invariant(typeof Q == "function", "When clientOffset is provided, getSourceClientOffset must be a function.");
}
function verifyItemIsObject(Q) {
  invariant(isObject$1(Q), "Item must be an object.");
}
function getDraggableSource(Q, ee) {
  let ne = null;
  for (let ie = Q.length - 1; ie >= 0; ie--)
    if (ee.canDragSource(Q[ie])) {
      ne = Q[ie];
      break;
    }
  return ne;
}
function _defineProperty$4(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread$4(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty$4(Q, ae, ne[ae]);
    });
  }
  return Q;
}
function createDrop(Q) {
  return function(ne = {}) {
    const ie = Q.getMonitor(), ae = Q.getRegistry();
    verifyInvariants(ie), getDroppableTargets(ie).forEach((le, de) => {
      const ye = determineDropResult(le, de, ae, ie), he = {
        type: DROP,
        payload: {
          dropResult: _objectSpread$4({}, ne, ye)
        }
      };
      Q.dispatch(he);
    });
  };
}
function verifyInvariants(Q) {
  invariant(Q.isDragging(), "Cannot call drop while not dragging."), invariant(!Q.didDrop(), "Cannot call drop twice during one drag operation.");
}
function determineDropResult(Q, ee, ne, ie) {
  const ae = ne.getTarget(Q);
  let ce = ae ? ae.drop(ie, Q) : void 0;
  return verifyDropResultType(ce), typeof ce > "u" && (ce = ee === 0 ? {} : ie.getDropResult()), ce;
}
function verifyDropResultType(Q) {
  invariant(typeof Q > "u" || isObject$1(Q), "Drop result must either be an object or undefined.");
}
function getDroppableTargets(Q) {
  const ee = Q.getTargetIds().filter(Q.canDropOnTarget, Q);
  return ee.reverse(), ee;
}
function createEndDrag(Q) {
  return function() {
    const ne = Q.getMonitor(), ie = Q.getRegistry();
    verifyIsDragging(ne);
    const ae = ne.getSourceId();
    return ae != null && (ie.getSource(ae, !0).endDrag(ne, ae), ie.unpinSource()), {
      type: END_DRAG
    };
  };
}
function verifyIsDragging(Q) {
  invariant(Q.isDragging(), "Cannot call endDrag while not dragging.");
}
function matchesType(Q, ee) {
  return ee === null ? Q === null : Array.isArray(Q) ? Q.some(
    (ne) => ne === ee
  ) : Q === ee;
}
function createHover(Q) {
  return function(ne, { clientOffset: ie } = {}) {
    verifyTargetIdsIsArray(ne);
    const ae = ne.slice(0), ce = Q.getMonitor(), le = Q.getRegistry(), de = ce.getItemType();
    return removeNonMatchingTargetIds(ae, le, de), checkInvariants(ae, ce, le), hoverAllTargets(ae, ce, le), {
      type: HOVER,
      payload: {
        targetIds: ae,
        clientOffset: ie || null
      }
    };
  };
}
function verifyTargetIdsIsArray(Q) {
  invariant(Array.isArray(Q), "Expected targetIds to be an array.");
}
function checkInvariants(Q, ee, ne) {
  invariant(ee.isDragging(), "Cannot call hover while not dragging."), invariant(!ee.didDrop(), "Cannot call hover after drop.");
  for (let ie = 0; ie < Q.length; ie++) {
    const ae = Q[ie];
    invariant(Q.lastIndexOf(ae) === ie, "Expected targetIds to be unique in the passed array.");
    const ce = ne.getTarget(ae);
    invariant(ce, "Expected targetIds to be registered.");
  }
}
function removeNonMatchingTargetIds(Q, ee, ne) {
  for (let ie = Q.length - 1; ie >= 0; ie--) {
    const ae = Q[ie], ce = ee.getTargetType(ae);
    matchesType(ce, ne) || Q.splice(ie, 1);
  }
}
function hoverAllTargets(Q, ee, ne) {
  Q.forEach(function(ie) {
    ne.getTarget(ie).hover(ee, ie);
  });
}
function createPublishDragSource(Q) {
  return function() {
    if (Q.getMonitor().isDragging())
      return {
        type: PUBLISH_DRAG_SOURCE
      };
  };
}
function createDragDropActions(Q) {
  return {
    beginDrag: createBeginDrag(Q),
    publishDragSource: createPublishDragSource(Q),
    hover: createHover(Q),
    drop: createDrop(Q),
    endDrag: createEndDrag(Q)
  };
}
class DragDropManagerImpl {
  receiveBackend(ee) {
    this.backend = ee;
  }
  getMonitor() {
    return this.monitor;
  }
  getBackend() {
    return this.backend;
  }
  getRegistry() {
    return this.monitor.registry;
  }
  getActions() {
    const ee = this, { dispatch: ne } = this.store;
    function ie(ce) {
      return (...le) => {
        const de = ce.apply(ee, le);
        typeof de < "u" && ne(de);
      };
    }
    const ae = createDragDropActions(this);
    return Object.keys(ae).reduce((ce, le) => {
      const de = ae[le];
      return ce[le] = ie(de), ce;
    }, {});
  }
  dispatch(ee) {
    this.store.dispatch(ee);
  }
  constructor(ee, ne) {
    this.isSetUp = !1, this.handleRefCountChange = () => {
      const ie = this.store.getState().refCount > 0;
      this.backend && (ie && !this.isSetUp ? (this.backend.setup(), this.isSetUp = !0) : !ie && this.isSetUp && (this.backend.teardown(), this.isSetUp = !1));
    }, this.store = ee, this.monitor = ne, ee.subscribe(this.handleRefCountChange);
  }
}
function add(Q, ee) {
  return {
    x: Q.x + ee.x,
    y: Q.y + ee.y
  };
}
function subtract(Q, ee) {
  return {
    x: Q.x - ee.x,
    y: Q.y - ee.y
  };
}
function getSourceClientOffset(Q) {
  const { clientOffset: ee, initialClientOffset: ne, initialSourceClientOffset: ie } = Q;
  return !ee || !ne || !ie ? null : subtract(add(ee, ie), ne);
}
function getDifferenceFromInitialOffset(Q) {
  const { clientOffset: ee, initialClientOffset: ne } = Q;
  return !ee || !ne ? null : subtract(ee, ne);
}
const NONE = [], ALL = [];
NONE.__IS_NONE__ = !0;
ALL.__IS_ALL__ = !0;
function areDirty(Q, ee) {
  return Q === NONE ? !1 : Q === ALL || typeof ee > "u" ? !0 : intersection(ee, Q).length > 0;
}
class DragDropMonitorImpl {
  subscribeToStateChange(ee, ne = {}) {
    const { handlerIds: ie } = ne;
    invariant(typeof ee == "function", "listener must be a function."), invariant(typeof ie > "u" || Array.isArray(ie), "handlerIds, when specified, must be an array of strings.");
    let ae = this.store.getState().stateId;
    const ce = () => {
      const le = this.store.getState(), de = le.stateId;
      try {
        de === ae || de === ae + 1 && !areDirty(le.dirtyHandlerIds, ie) || ee();
      } finally {
        ae = de;
      }
    };
    return this.store.subscribe(ce);
  }
  subscribeToOffsetChange(ee) {
    invariant(typeof ee == "function", "listener must be a function.");
    let ne = this.store.getState().dragOffset;
    const ie = () => {
      const ae = this.store.getState().dragOffset;
      ae !== ne && (ne = ae, ee());
    };
    return this.store.subscribe(ie);
  }
  canDragSource(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getSource(ee);
    return invariant(ne, `Expected to find a valid source. sourceId=${ee}`), this.isDragging() ? !1 : ne.canDrag(this, ee);
  }
  canDropOnTarget(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getTarget(ee);
    if (invariant(ne, `Expected to find a valid target. targetId=${ee}`), !this.isDragging() || this.didDrop())
      return !1;
    const ie = this.registry.getTargetType(ee), ae = this.getItemType();
    return matchesType(ie, ae) && ne.canDrop(this, ee);
  }
  isDragging() {
    return Boolean(this.getItemType());
  }
  isDraggingSource(ee) {
    if (!ee)
      return !1;
    const ne = this.registry.getSource(ee, !0);
    if (invariant(ne, `Expected to find a valid source. sourceId=${ee}`), !this.isDragging() || !this.isSourcePublic())
      return !1;
    const ie = this.registry.getSourceType(ee), ae = this.getItemType();
    return ie !== ae ? !1 : ne.isDragging(this, ee);
  }
  isOverTarget(ee, ne = {
    shallow: !1
  }) {
    if (!ee)
      return !1;
    const { shallow: ie } = ne;
    if (!this.isDragging())
      return !1;
    const ae = this.registry.getTargetType(ee), ce = this.getItemType();
    if (ce && !matchesType(ae, ce))
      return !1;
    const le = this.getTargetIds();
    if (!le.length)
      return !1;
    const de = le.indexOf(ee);
    return ie ? de === le.length - 1 : de > -1;
  }
  getItemType() {
    return this.store.getState().dragOperation.itemType;
  }
  getItem() {
    return this.store.getState().dragOperation.item;
  }
  getSourceId() {
    return this.store.getState().dragOperation.sourceId;
  }
  getTargetIds() {
    return this.store.getState().dragOperation.targetIds;
  }
  getDropResult() {
    return this.store.getState().dragOperation.dropResult;
  }
  didDrop() {
    return this.store.getState().dragOperation.didDrop;
  }
  isSourcePublic() {
    return Boolean(this.store.getState().dragOperation.isSourcePublic);
  }
  getInitialClientOffset() {
    return this.store.getState().dragOffset.initialClientOffset;
  }
  getInitialSourceClientOffset() {
    return this.store.getState().dragOffset.initialSourceClientOffset;
  }
  getClientOffset() {
    return this.store.getState().dragOffset.clientOffset;
  }
  getSourceClientOffset() {
    return getSourceClientOffset(this.store.getState().dragOffset);
  }
  getDifferenceFromInitialOffset() {
    return getDifferenceFromInitialOffset(this.store.getState().dragOffset);
  }
  constructor(ee, ne) {
    this.store = ee, this.registry = ne;
  }
}
const scope = typeof global < "u" ? global : self, BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;
function makeRequestCallFromTimer(Q) {
  return function() {
    const ne = setTimeout(ae, 0), ie = setInterval(ae, 50);
    function ae() {
      clearTimeout(ne), clearInterval(ie), Q();
    }
  };
}
function makeRequestCallFromMutationObserver(Q) {
  let ee = 1;
  const ne = new BrowserMutationObserver(Q), ie = document.createTextNode("");
  return ne.observe(ie, {
    characterData: !0
  }), function() {
    ee = -ee, ie.data = ee;
  };
}
const makeRequestCall = typeof BrowserMutationObserver == "function" ? makeRequestCallFromMutationObserver : makeRequestCallFromTimer;
class AsapQueue {
  enqueueTask(ee) {
    const { queue: ne, requestFlush: ie } = this;
    ne.length || (ie(), this.flushing = !0), ne[ne.length] = ee;
  }
  constructor() {
    this.queue = [], this.pendingErrors = [], this.flushing = !1, this.index = 0, this.capacity = 1024, this.flush = () => {
      const { queue: ee } = this;
      for (; this.index < ee.length; ) {
        const ne = this.index;
        if (this.index++, ee[ne].call(), this.index > this.capacity) {
          for (let ie = 0, ae = ee.length - this.index; ie < ae; ie++)
            ee[ie] = ee[ie + this.index];
          ee.length -= this.index, this.index = 0;
        }
      }
      ee.length = 0, this.index = 0, this.flushing = !1;
    }, this.registerPendingError = (ee) => {
      this.pendingErrors.push(ee), this.requestErrorThrow();
    }, this.requestFlush = makeRequestCall(this.flush), this.requestErrorThrow = makeRequestCallFromTimer(() => {
      if (this.pendingErrors.length)
        throw this.pendingErrors.shift();
    });
  }
}
class RawTask {
  call() {
    try {
      this.task && this.task();
    } catch (ee) {
      this.onError(ee);
    } finally {
      this.task = null, this.release(this);
    }
  }
  constructor(ee, ne) {
    this.onError = ee, this.release = ne, this.task = null;
  }
}
class TaskFactory {
  create(ee) {
    const ne = this.freeTasks, ie = ne.length ? ne.pop() : new RawTask(
      this.onError,
      (ae) => ne[ne.length] = ae
    );
    return ie.task = ee, ie;
  }
  constructor(ee) {
    this.onError = ee, this.freeTasks = [];
  }
}
const asapQueue = new AsapQueue(), taskFactory = new TaskFactory(asapQueue.registerPendingError);
function asap(Q) {
  asapQueue.enqueueTask(taskFactory.create(Q));
}
const ADD_SOURCE = "dnd-core/ADD_SOURCE", ADD_TARGET = "dnd-core/ADD_TARGET", REMOVE_SOURCE = "dnd-core/REMOVE_SOURCE", REMOVE_TARGET = "dnd-core/REMOVE_TARGET";
function addSource(Q) {
  return {
    type: ADD_SOURCE,
    payload: {
      sourceId: Q
    }
  };
}
function addTarget(Q) {
  return {
    type: ADD_TARGET,
    payload: {
      targetId: Q
    }
  };
}
function removeSource(Q) {
  return {
    type: REMOVE_SOURCE,
    payload: {
      sourceId: Q
    }
  };
}
function removeTarget(Q) {
  return {
    type: REMOVE_TARGET,
    payload: {
      targetId: Q
    }
  };
}
function validateSourceContract(Q) {
  invariant(typeof Q.canDrag == "function", "Expected canDrag to be a function."), invariant(typeof Q.beginDrag == "function", "Expected beginDrag to be a function."), invariant(typeof Q.endDrag == "function", "Expected endDrag to be a function.");
}
function validateTargetContract(Q) {
  invariant(typeof Q.canDrop == "function", "Expected canDrop to be a function."), invariant(typeof Q.hover == "function", "Expected hover to be a function."), invariant(typeof Q.drop == "function", "Expected beginDrag to be a function.");
}
function validateType(Q, ee) {
  if (ee && Array.isArray(Q)) {
    Q.forEach(
      (ne) => validateType(ne, !1)
    );
    return;
  }
  invariant(typeof Q == "string" || typeof Q == "symbol", ee ? "Type can only be a string, a symbol, or an array of either." : "Type can only be a string or a symbol.");
}
var HandlerRole;
(function(Q) {
  Q.SOURCE = "SOURCE", Q.TARGET = "TARGET";
})(HandlerRole || (HandlerRole = {}));
let nextUniqueId = 0;
function getNextUniqueId() {
  return nextUniqueId++;
}
function getNextHandlerId(Q) {
  const ee = getNextUniqueId().toString();
  switch (Q) {
    case HandlerRole.SOURCE:
      return `S${ee}`;
    case HandlerRole.TARGET:
      return `T${ee}`;
    default:
      throw new Error(`Unknown Handler Role: ${Q}`);
  }
}
function parseRoleFromHandlerId(Q) {
  switch (Q[0]) {
    case "S":
      return HandlerRole.SOURCE;
    case "T":
      return HandlerRole.TARGET;
    default:
      throw new Error(`Cannot parse handler ID: ${Q}`);
  }
}
function mapContainsValue(Q, ee) {
  const ne = Q.entries();
  let ie = !1;
  do {
    const { done: ae, value: [, ce] } = ne.next();
    if (ce === ee)
      return !0;
    ie = !!ae;
  } while (!ie);
  return !1;
}
class HandlerRegistryImpl {
  addSource(ee, ne) {
    validateType(ee), validateSourceContract(ne);
    const ie = this.addHandler(HandlerRole.SOURCE, ee, ne);
    return this.store.dispatch(addSource(ie)), ie;
  }
  addTarget(ee, ne) {
    validateType(ee, !0), validateTargetContract(ne);
    const ie = this.addHandler(HandlerRole.TARGET, ee, ne);
    return this.store.dispatch(addTarget(ie)), ie;
  }
  containsHandler(ee) {
    return mapContainsValue(this.dragSources, ee) || mapContainsValue(this.dropTargets, ee);
  }
  getSource(ee, ne = !1) {
    return invariant(this.isSourceId(ee), "Expected a valid source ID."), ne && ee === this.pinnedSourceId ? this.pinnedSource : this.dragSources.get(ee);
  }
  getTarget(ee) {
    return invariant(this.isTargetId(ee), "Expected a valid target ID."), this.dropTargets.get(ee);
  }
  getSourceType(ee) {
    return invariant(this.isSourceId(ee), "Expected a valid source ID."), this.types.get(ee);
  }
  getTargetType(ee) {
    return invariant(this.isTargetId(ee), "Expected a valid target ID."), this.types.get(ee);
  }
  isSourceId(ee) {
    return parseRoleFromHandlerId(ee) === HandlerRole.SOURCE;
  }
  isTargetId(ee) {
    return parseRoleFromHandlerId(ee) === HandlerRole.TARGET;
  }
  removeSource(ee) {
    invariant(this.getSource(ee), "Expected an existing source."), this.store.dispatch(removeSource(ee)), asap(() => {
      this.dragSources.delete(ee), this.types.delete(ee);
    });
  }
  removeTarget(ee) {
    invariant(this.getTarget(ee), "Expected an existing target."), this.store.dispatch(removeTarget(ee)), this.dropTargets.delete(ee), this.types.delete(ee);
  }
  pinSource(ee) {
    const ne = this.getSource(ee);
    invariant(ne, "Expected an existing source."), this.pinnedSourceId = ee, this.pinnedSource = ne;
  }
  unpinSource() {
    invariant(this.pinnedSource, "No source is pinned at the time."), this.pinnedSourceId = null, this.pinnedSource = null;
  }
  addHandler(ee, ne, ie) {
    const ae = getNextHandlerId(ee);
    return this.types.set(ae, ne), ee === HandlerRole.SOURCE ? this.dragSources.set(ae, ie) : ee === HandlerRole.TARGET && this.dropTargets.set(ae, ie), ae;
  }
  constructor(ee) {
    this.types = /* @__PURE__ */ new Map(), this.dragSources = /* @__PURE__ */ new Map(), this.dropTargets = /* @__PURE__ */ new Map(), this.pinnedSourceId = null, this.pinnedSource = null, this.store = ee;
  }
}
const strictEquality = (Q, ee) => Q === ee;
function areCoordsEqual(Q, ee) {
  return !Q && !ee ? !0 : !Q || !ee ? !1 : Q.x === ee.x && Q.y === ee.y;
}
function areArraysEqual(Q, ee, ne = strictEquality) {
  if (Q.length !== ee.length)
    return !1;
  for (let ie = 0; ie < Q.length; ++ie)
    if (!ne(Q[ie], ee[ie]))
      return !1;
  return !0;
}
function reduce$5(Q = NONE, ee) {
  switch (ee.type) {
    case HOVER:
      break;
    case ADD_SOURCE:
    case ADD_TARGET:
    case REMOVE_TARGET:
    case REMOVE_SOURCE:
      return NONE;
    case BEGIN_DRAG:
    case PUBLISH_DRAG_SOURCE:
    case END_DRAG:
    case DROP:
    default:
      return ALL;
  }
  const { targetIds: ne = [], prevTargetIds: ie = [] } = ee.payload, ae = xor(ne, ie);
  if (!(ae.length > 0 || !areArraysEqual(ne, ie)))
    return NONE;
  const le = ie[ie.length - 1], de = ne[ne.length - 1];
  return le !== de && (le && ae.push(le), de && ae.push(de)), ae;
}
function _defineProperty$3(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread$3(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty$3(Q, ae, ne[ae]);
    });
  }
  return Q;
}
const initialState$1 = {
  initialSourceClientOffset: null,
  initialClientOffset: null,
  clientOffset: null
};
function reduce$4(Q = initialState$1, ee) {
  const { payload: ne } = ee;
  switch (ee.type) {
    case INIT_COORDS:
    case BEGIN_DRAG:
      return {
        initialSourceClientOffset: ne.sourceClientOffset,
        initialClientOffset: ne.clientOffset,
        clientOffset: ne.clientOffset
      };
    case HOVER:
      return areCoordsEqual(Q.clientOffset, ne.clientOffset) ? Q : _objectSpread$3({}, Q, {
        clientOffset: ne.clientOffset
      });
    case END_DRAG:
    case DROP:
      return initialState$1;
    default:
      return Q;
  }
}
function _defineProperty$2(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread$2(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty$2(Q, ae, ne[ae]);
    });
  }
  return Q;
}
const initialState = {
  itemType: null,
  item: null,
  sourceId: null,
  targetIds: [],
  dropResult: null,
  didDrop: !1,
  isSourcePublic: null
};
function reduce$3(Q = initialState, ee) {
  const { payload: ne } = ee;
  switch (ee.type) {
    case BEGIN_DRAG:
      return _objectSpread$2({}, Q, {
        itemType: ne.itemType,
        item: ne.item,
        sourceId: ne.sourceId,
        isSourcePublic: ne.isSourcePublic,
        dropResult: null,
        didDrop: !1
      });
    case PUBLISH_DRAG_SOURCE:
      return _objectSpread$2({}, Q, {
        isSourcePublic: !0
      });
    case HOVER:
      return _objectSpread$2({}, Q, {
        targetIds: ne.targetIds
      });
    case REMOVE_TARGET:
      return Q.targetIds.indexOf(ne.targetId) === -1 ? Q : _objectSpread$2({}, Q, {
        targetIds: without$1(Q.targetIds, ne.targetId)
      });
    case DROP:
      return _objectSpread$2({}, Q, {
        dropResult: ne.dropResult,
        didDrop: !0,
        targetIds: []
      });
    case END_DRAG:
      return _objectSpread$2({}, Q, {
        itemType: null,
        item: null,
        sourceId: null,
        dropResult: null,
        didDrop: !1,
        isSourcePublic: null,
        targetIds: []
      });
    default:
      return Q;
  }
}
function reduce$2(Q = 0, ee) {
  switch (ee.type) {
    case ADD_SOURCE:
    case ADD_TARGET:
      return Q + 1;
    case REMOVE_SOURCE:
    case REMOVE_TARGET:
      return Q - 1;
    default:
      return Q;
  }
}
function reduce$1(Q = 0) {
  return Q + 1;
}
function _defineProperty$1(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread$1(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty$1(Q, ae, ne[ae]);
    });
  }
  return Q;
}
function reduce(Q = {}, ee) {
  return {
    dirtyHandlerIds: reduce$5(Q.dirtyHandlerIds, {
      type: ee.type,
      payload: _objectSpread$1({}, ee.payload, {
        prevTargetIds: get(Q, "dragOperation.targetIds", [])
      })
    }),
    dragOffset: reduce$4(Q.dragOffset, ee),
    refCount: reduce$2(Q.refCount, ee),
    dragOperation: reduce$3(Q.dragOperation, ee),
    stateId: reduce$1(Q.stateId)
  };
}
function createDragDropManager(Q, ee = void 0, ne = {}, ie = !1) {
  const ae = makeStoreInstance(ie), ce = new DragDropMonitorImpl(ae, new HandlerRegistryImpl(ae)), le = new DragDropManagerImpl(ae, ce), de = Q(le, ee, ne);
  return le.receiveBackend(de), le;
}
function makeStoreInstance(Q) {
  const ee = typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION__;
  return createStore$1(reduce, Q && ee && ee({
    name: "dnd-core",
    instanceId: "dnd-core"
  }));
}
function _objectWithoutProperties(Q, ee) {
  if (Q == null)
    return {};
  var ne = _objectWithoutPropertiesLoose(Q, ee), ie, ae;
  if (Object.getOwnPropertySymbols) {
    var ce = Object.getOwnPropertySymbols(Q);
    for (ae = 0; ae < ce.length; ae++)
      ie = ce[ae], !(ee.indexOf(ie) >= 0) && (!Object.prototype.propertyIsEnumerable.call(Q, ie) || (ne[ie] = Q[ie]));
  }
  return ne;
}
function _objectWithoutPropertiesLoose(Q, ee) {
  if (Q == null)
    return {};
  var ne = {}, ie = Object.keys(Q), ae, ce;
  for (ce = 0; ce < ie.length; ce++)
    ae = ie[ce], !(ee.indexOf(ae) >= 0) && (ne[ae] = Q[ae]);
  return ne;
}
let refCount = 0;
const INSTANCE_SYM = Symbol.for("__REACT_DND_CONTEXT_INSTANCE__");
var DndProvider = /* @__PURE__ */ react.exports.memo(function(ee) {
  var { children: ne } = ee, ie = _objectWithoutProperties(ee, [
    "children"
  ]);
  const [ae, ce] = getDndContextValue(ie);
  return react.exports.useEffect(() => {
    if (ce) {
      const le = getGlobalContext();
      return ++refCount, () => {
        --refCount === 0 && (le[INSTANCE_SYM] = null);
      };
    }
  }, []), /* @__PURE__ */ jsx(DndContext.Provider, {
    value: ae,
    children: ne
  });
});
function getDndContextValue(Q) {
  if ("manager" in Q)
    return [
      {
        dragDropManager: Q.manager
      },
      !1
    ];
  const ee = createSingletonDndContext(Q.backend, Q.context, Q.options, Q.debugMode), ne = !Q.context;
  return [
    ee,
    ne
  ];
}
function createSingletonDndContext(Q, ee = getGlobalContext(), ne, ie) {
  const ae = ee;
  return ae[INSTANCE_SYM] || (ae[INSTANCE_SYM] = {
    dragDropManager: createDragDropManager(Q, ee, ne, ie)
  }), ae[INSTANCE_SYM];
}
function getGlobalContext() {
  return typeof global < "u" ? global : window;
}
var fastDeepEqual = function Q(ee, ne) {
  if (ee === ne)
    return !0;
  if (ee && ne && typeof ee == "object" && typeof ne == "object") {
    if (ee.constructor !== ne.constructor)
      return !1;
    var ie, ae, ce;
    if (Array.isArray(ee)) {
      if (ie = ee.length, ie != ne.length)
        return !1;
      for (ae = ie; ae-- !== 0; )
        if (!Q(ee[ae], ne[ae]))
          return !1;
      return !0;
    }
    if (ee.constructor === RegExp)
      return ee.source === ne.source && ee.flags === ne.flags;
    if (ee.valueOf !== Object.prototype.valueOf)
      return ee.valueOf() === ne.valueOf();
    if (ee.toString !== Object.prototype.toString)
      return ee.toString() === ne.toString();
    if (ce = Object.keys(ee), ie = ce.length, ie !== Object.keys(ne).length)
      return !1;
    for (ae = ie; ae-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(ne, ce[ae]))
        return !1;
    for (ae = ie; ae-- !== 0; ) {
      var le = ce[ae];
      if (!Q(ee[le], ne[le]))
        return !1;
    }
    return !0;
  }
  return ee !== ee && ne !== ne;
};
const useIsomorphicLayoutEffect = typeof window < "u" ? react.exports.useLayoutEffect : react.exports.useEffect;
function useCollector(Q, ee, ne) {
  const [ie, ae] = react.exports.useState(
    () => ee(Q)
  ), ce = react.exports.useCallback(() => {
    const le = ee(Q);
    fastDeepEqual(ie, le) || (ae(le), ne && ne());
  }, [
    ie,
    Q,
    ne
  ]);
  return useIsomorphicLayoutEffect(ce), [
    ie,
    ce
  ];
}
function useMonitorOutput(Q, ee, ne) {
  const [ie, ae] = useCollector(Q, ee, ne);
  return useIsomorphicLayoutEffect(function() {
    const le = Q.getHandlerId();
    if (le != null)
      return Q.subscribeToStateChange(ae, {
        handlerIds: [
          le
        ]
      });
  }, [
    Q,
    ae
  ]), ie;
}
function useCollectedProps(Q, ee, ne) {
  return useMonitorOutput(
    ee,
    Q || (() => ({})),
    () => ne.reconnect()
  );
}
function useOptionalFactory(Q, ee) {
  const ne = [
    ...ee || []
  ];
  return ee == null && typeof Q != "function" && ne.push(Q), react.exports.useMemo(() => typeof Q == "function" ? Q() : Q, ne);
}
function useConnectDragSource(Q) {
  return react.exports.useMemo(
    () => Q.hooks.dragSource(),
    [
      Q
    ]
  );
}
function useConnectDragPreview(Q) {
  return react.exports.useMemo(
    () => Q.hooks.dragPreview(),
    [
      Q
    ]
  );
}
let isCallingCanDrag = !1, isCallingIsDragging = !1;
class DragSourceMonitorImpl {
  receiveHandlerId(ee) {
    this.sourceId = ee;
  }
  getHandlerId() {
    return this.sourceId;
  }
  canDrag() {
    invariant(!isCallingCanDrag, "You may not call monitor.canDrag() inside your canDrag() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");
    try {
      return isCallingCanDrag = !0, this.internalMonitor.canDragSource(this.sourceId);
    } finally {
      isCallingCanDrag = !1;
    }
  }
  isDragging() {
    if (!this.sourceId)
      return !1;
    invariant(!isCallingIsDragging, "You may not call monitor.isDragging() inside your isDragging() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor");
    try {
      return isCallingIsDragging = !0, this.internalMonitor.isDraggingSource(this.sourceId);
    } finally {
      isCallingIsDragging = !1;
    }
  }
  subscribeToStateChange(ee, ne) {
    return this.internalMonitor.subscribeToStateChange(ee, ne);
  }
  isDraggingSource(ee) {
    return this.internalMonitor.isDraggingSource(ee);
  }
  isOverTarget(ee, ne) {
    return this.internalMonitor.isOverTarget(ee, ne);
  }
  getTargetIds() {
    return this.internalMonitor.getTargetIds();
  }
  isSourcePublic() {
    return this.internalMonitor.isSourcePublic();
  }
  getSourceId() {
    return this.internalMonitor.getSourceId();
  }
  subscribeToOffsetChange(ee) {
    return this.internalMonitor.subscribeToOffsetChange(ee);
  }
  canDragSource(ee) {
    return this.internalMonitor.canDragSource(ee);
  }
  canDropOnTarget(ee) {
    return this.internalMonitor.canDropOnTarget(ee);
  }
  getItemType() {
    return this.internalMonitor.getItemType();
  }
  getItem() {
    return this.internalMonitor.getItem();
  }
  getDropResult() {
    return this.internalMonitor.getDropResult();
  }
  didDrop() {
    return this.internalMonitor.didDrop();
  }
  getInitialClientOffset() {
    return this.internalMonitor.getInitialClientOffset();
  }
  getInitialSourceClientOffset() {
    return this.internalMonitor.getInitialSourceClientOffset();
  }
  getSourceClientOffset() {
    return this.internalMonitor.getSourceClientOffset();
  }
  getClientOffset() {
    return this.internalMonitor.getClientOffset();
  }
  getDifferenceFromInitialOffset() {
    return this.internalMonitor.getDifferenceFromInitialOffset();
  }
  constructor(ee) {
    this.sourceId = null, this.internalMonitor = ee.getMonitor();
  }
}
let isCallingCanDrop = !1;
class DropTargetMonitorImpl {
  receiveHandlerId(ee) {
    this.targetId = ee;
  }
  getHandlerId() {
    return this.targetId;
  }
  subscribeToStateChange(ee, ne) {
    return this.internalMonitor.subscribeToStateChange(ee, ne);
  }
  canDrop() {
    if (!this.targetId)
      return !1;
    invariant(!isCallingCanDrop, "You may not call monitor.canDrop() inside your canDrop() implementation. Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor");
    try {
      return isCallingCanDrop = !0, this.internalMonitor.canDropOnTarget(this.targetId);
    } finally {
      isCallingCanDrop = !1;
    }
  }
  isOver(ee) {
    return this.targetId ? this.internalMonitor.isOverTarget(this.targetId, ee) : !1;
  }
  getItemType() {
    return this.internalMonitor.getItemType();
  }
  getItem() {
    return this.internalMonitor.getItem();
  }
  getDropResult() {
    return this.internalMonitor.getDropResult();
  }
  didDrop() {
    return this.internalMonitor.didDrop();
  }
  getInitialClientOffset() {
    return this.internalMonitor.getInitialClientOffset();
  }
  getInitialSourceClientOffset() {
    return this.internalMonitor.getInitialSourceClientOffset();
  }
  getSourceClientOffset() {
    return this.internalMonitor.getSourceClientOffset();
  }
  getClientOffset() {
    return this.internalMonitor.getClientOffset();
  }
  getDifferenceFromInitialOffset() {
    return this.internalMonitor.getDifferenceFromInitialOffset();
  }
  constructor(ee) {
    this.targetId = null, this.internalMonitor = ee.getMonitor();
  }
}
function registerTarget(Q, ee, ne) {
  const ie = ne.getRegistry(), ae = ie.addTarget(Q, ee);
  return [
    ae,
    () => ie.removeTarget(ae)
  ];
}
function registerSource(Q, ee, ne) {
  const ie = ne.getRegistry(), ae = ie.addSource(Q, ee);
  return [
    ae,
    () => ie.removeSource(ae)
  ];
}
function shallowEqual(Q, ee, ne, ie) {
  let ae = ne ? ne.call(ie, Q, ee) : void 0;
  if (ae !== void 0)
    return !!ae;
  if (Q === ee)
    return !0;
  if (typeof Q != "object" || !Q || typeof ee != "object" || !ee)
    return !1;
  const ce = Object.keys(Q), le = Object.keys(ee);
  if (ce.length !== le.length)
    return !1;
  const de = Object.prototype.hasOwnProperty.bind(ee);
  for (let ye = 0; ye < ce.length; ye++) {
    const he = ce[ye];
    if (!de(he))
      return !1;
    const Be = Q[he], Ee = ee[he];
    if (ae = ne ? ne.call(ie, Be, Ee, he) : void 0, ae === !1 || ae === void 0 && Be !== Ee)
      return !1;
  }
  return !0;
}
function isRef(Q) {
  return Q !== null && typeof Q == "object" && Object.prototype.hasOwnProperty.call(Q, "current");
}
function throwIfCompositeComponentElement(Q) {
  if (typeof Q.type == "string")
    return;
  const ee = Q.type.displayName || Q.type.name || "the component";
  throw new Error(`Only native element nodes can now be passed to React DnD connectors.You can either wrap ${ee} into a <div>, or turn it into a drag source or a drop target itself.`);
}
function wrapHookToRecognizeElement(Q) {
  return (ee = null, ne = null) => {
    if (!react.exports.isValidElement(ee)) {
      const ce = ee;
      return Q(ce, ne), ce;
    }
    const ie = ee;
    return throwIfCompositeComponentElement(ie), cloneWithRef(ie, ne ? (ce) => Q(ce, ne) : Q);
  };
}
function wrapConnectorHooks(Q) {
  const ee = {};
  return Object.keys(Q).forEach((ne) => {
    const ie = Q[ne];
    if (ne.endsWith("Ref"))
      ee[ne] = Q[ne];
    else {
      const ae = wrapHookToRecognizeElement(ie);
      ee[ne] = () => ae;
    }
  }), ee;
}
function setRef(Q, ee) {
  typeof Q == "function" ? Q(ee) : Q.current = ee;
}
function cloneWithRef(Q, ee) {
  const ne = Q.ref;
  return invariant(typeof ne != "string", "Cannot connect React DnD to an element with an existing string ref. Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs"), ne ? react.exports.cloneElement(Q, {
    ref: (ie) => {
      setRef(ne, ie), setRef(ee, ie);
    }
  }) : react.exports.cloneElement(Q, {
    ref: ee
  });
}
class SourceConnector {
  receiveHandlerId(ee) {
    this.handlerId !== ee && (this.handlerId = ee, this.reconnect());
  }
  get connectTarget() {
    return this.dragSource;
  }
  get dragSourceOptions() {
    return this.dragSourceOptionsInternal;
  }
  set dragSourceOptions(ee) {
    this.dragSourceOptionsInternal = ee;
  }
  get dragPreviewOptions() {
    return this.dragPreviewOptionsInternal;
  }
  set dragPreviewOptions(ee) {
    this.dragPreviewOptionsInternal = ee;
  }
  reconnect() {
    const ee = this.reconnectDragSource();
    this.reconnectDragPreview(ee);
  }
  reconnectDragSource() {
    const ee = this.dragSource, ne = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();
    return ne && this.disconnectDragSource(), this.handlerId ? ee ? (ne && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDragSource = ee, this.lastConnectedDragSourceOptions = this.dragSourceOptions, this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, ee, this.dragSourceOptions)), ne) : (this.lastConnectedDragSource = ee, ne) : ne;
  }
  reconnectDragPreview(ee = !1) {
    const ne = this.dragPreview, ie = ee || this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();
    if (ie && this.disconnectDragPreview(), !!this.handlerId) {
      if (!ne) {
        this.lastConnectedDragPreview = ne;
        return;
      }
      ie && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDragPreview = ne, this.lastConnectedDragPreviewOptions = this.dragPreviewOptions, this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, ne, this.dragPreviewOptions));
    }
  }
  didHandlerIdChange() {
    return this.lastConnectedHandlerId !== this.handlerId;
  }
  didConnectedDragSourceChange() {
    return this.lastConnectedDragSource !== this.dragSource;
  }
  didConnectedDragPreviewChange() {
    return this.lastConnectedDragPreview !== this.dragPreview;
  }
  didDragSourceOptionsChange() {
    return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);
  }
  didDragPreviewOptionsChange() {
    return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);
  }
  disconnectDragSource() {
    this.dragSourceUnsubscribe && (this.dragSourceUnsubscribe(), this.dragSourceUnsubscribe = void 0);
  }
  disconnectDragPreview() {
    this.dragPreviewUnsubscribe && (this.dragPreviewUnsubscribe(), this.dragPreviewUnsubscribe = void 0, this.dragPreviewNode = null, this.dragPreviewRef = null);
  }
  get dragSource() {
    return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;
  }
  get dragPreview() {
    return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;
  }
  clearDragSource() {
    this.dragSourceNode = null, this.dragSourceRef = null;
  }
  clearDragPreview() {
    this.dragPreviewNode = null, this.dragPreviewRef = null;
  }
  constructor(ee) {
    this.hooks = wrapConnectorHooks({
      dragSource: (ne, ie) => {
        this.clearDragSource(), this.dragSourceOptions = ie || null, isRef(ne) ? this.dragSourceRef = ne : this.dragSourceNode = ne, this.reconnectDragSource();
      },
      dragPreview: (ne, ie) => {
        this.clearDragPreview(), this.dragPreviewOptions = ie || null, isRef(ne) ? this.dragPreviewRef = ne : this.dragPreviewNode = ne, this.reconnectDragPreview();
      }
    }), this.handlerId = null, this.dragSourceRef = null, this.dragSourceOptionsInternal = null, this.dragPreviewRef = null, this.dragPreviewOptionsInternal = null, this.lastConnectedHandlerId = null, this.lastConnectedDragSource = null, this.lastConnectedDragSourceOptions = null, this.lastConnectedDragPreview = null, this.lastConnectedDragPreviewOptions = null, this.backend = ee;
  }
}
class TargetConnector {
  get connectTarget() {
    return this.dropTarget;
  }
  reconnect() {
    const ee = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();
    ee && this.disconnectDropTarget();
    const ne = this.dropTarget;
    if (!!this.handlerId) {
      if (!ne) {
        this.lastConnectedDropTarget = ne;
        return;
      }
      ee && (this.lastConnectedHandlerId = this.handlerId, this.lastConnectedDropTarget = ne, this.lastConnectedDropTargetOptions = this.dropTargetOptions, this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, ne, this.dropTargetOptions));
    }
  }
  receiveHandlerId(ee) {
    ee !== this.handlerId && (this.handlerId = ee, this.reconnect());
  }
  get dropTargetOptions() {
    return this.dropTargetOptionsInternal;
  }
  set dropTargetOptions(ee) {
    this.dropTargetOptionsInternal = ee;
  }
  didHandlerIdChange() {
    return this.lastConnectedHandlerId !== this.handlerId;
  }
  didDropTargetChange() {
    return this.lastConnectedDropTarget !== this.dropTarget;
  }
  didOptionsChange() {
    return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);
  }
  disconnectDropTarget() {
    this.unsubscribeDropTarget && (this.unsubscribeDropTarget(), this.unsubscribeDropTarget = void 0);
  }
  get dropTarget() {
    return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;
  }
  clearDropTarget() {
    this.dropTargetRef = null, this.dropTargetNode = null;
  }
  constructor(ee) {
    this.hooks = wrapConnectorHooks({
      dropTarget: (ne, ie) => {
        this.clearDropTarget(), this.dropTargetOptions = ie, isRef(ne) ? this.dropTargetRef = ne : this.dropTargetNode = ne, this.reconnect();
      }
    }), this.handlerId = null, this.dropTargetRef = null, this.dropTargetOptionsInternal = null, this.lastConnectedHandlerId = null, this.lastConnectedDropTarget = null, this.lastConnectedDropTargetOptions = null, this.backend = ee;
  }
}
function useDragDropManager() {
  const { dragDropManager: Q } = react.exports.useContext(DndContext);
  return invariant(Q != null, "Expected drag drop context"), Q;
}
function useDragSourceConnector(Q, ee) {
  const ne = useDragDropManager(), ie = react.exports.useMemo(
    () => new SourceConnector(ne.getBackend()),
    [
      ne
    ]
  );
  return useIsomorphicLayoutEffect(() => (ie.dragSourceOptions = Q || null, ie.reconnect(), () => ie.disconnectDragSource()), [
    ie,
    Q
  ]), useIsomorphicLayoutEffect(() => (ie.dragPreviewOptions = ee || null, ie.reconnect(), () => ie.disconnectDragPreview()), [
    ie,
    ee
  ]), ie;
}
function useDragSourceMonitor() {
  const Q = useDragDropManager();
  return react.exports.useMemo(
    () => new DragSourceMonitorImpl(Q),
    [
      Q
    ]
  );
}
class DragSourceImpl {
  beginDrag() {
    const ee = this.spec, ne = this.monitor;
    let ie = null;
    return typeof ee.item == "object" ? ie = ee.item : typeof ee.item == "function" ? ie = ee.item(ne) : ie = {}, ie != null ? ie : null;
  }
  canDrag() {
    const ee = this.spec, ne = this.monitor;
    return typeof ee.canDrag == "boolean" ? ee.canDrag : typeof ee.canDrag == "function" ? ee.canDrag(ne) : !0;
  }
  isDragging(ee, ne) {
    const ie = this.spec, ae = this.monitor, { isDragging: ce } = ie;
    return ce ? ce(ae) : ne === ee.getSourceId();
  }
  endDrag() {
    const ee = this.spec, ne = this.monitor, ie = this.connector, { end: ae } = ee;
    ae && ae(ne.getItem(), ne), ie.reconnect();
  }
  constructor(ee, ne, ie) {
    this.spec = ee, this.monitor = ne, this.connector = ie;
  }
}
function useDragSource(Q, ee, ne) {
  const ie = react.exports.useMemo(
    () => new DragSourceImpl(Q, ee, ne),
    [
      ee,
      ne
    ]
  );
  return react.exports.useEffect(() => {
    ie.spec = Q;
  }, [
    Q
  ]), ie;
}
function useDragType(Q) {
  return react.exports.useMemo(() => {
    const ee = Q.type;
    return invariant(ee != null, "spec.type must be defined"), ee;
  }, [
    Q
  ]);
}
function useRegisteredDragSource(Q, ee, ne) {
  const ie = useDragDropManager(), ae = useDragSource(Q, ee, ne), ce = useDragType(Q);
  useIsomorphicLayoutEffect(function() {
    if (ce != null) {
      const [de, ye] = registerSource(ce, ae, ie);
      return ee.receiveHandlerId(de), ne.receiveHandlerId(de), ye;
    }
  }, [
    ie,
    ee,
    ne,
    ae,
    ce
  ]);
}
function useDrag(Q, ee) {
  const ne = useOptionalFactory(Q, ee);
  invariant(!ne.begin, "useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)");
  const ie = useDragSourceMonitor(), ae = useDragSourceConnector(ne.options, ne.previewOptions);
  return useRegisteredDragSource(ne, ie, ae), [
    useCollectedProps(ne.collect, ie, ae),
    useConnectDragSource(ae),
    useConnectDragPreview(ae)
  ];
}
function useConnectDropTarget(Q) {
  return react.exports.useMemo(
    () => Q.hooks.dropTarget(),
    [
      Q
    ]
  );
}
function useDropTargetConnector(Q) {
  const ee = useDragDropManager(), ne = react.exports.useMemo(
    () => new TargetConnector(ee.getBackend()),
    [
      ee
    ]
  );
  return useIsomorphicLayoutEffect(() => (ne.dropTargetOptions = Q || null, ne.reconnect(), () => ne.disconnectDropTarget()), [
    Q
  ]), ne;
}
function useDropTargetMonitor() {
  const Q = useDragDropManager();
  return react.exports.useMemo(
    () => new DropTargetMonitorImpl(Q),
    [
      Q
    ]
  );
}
function useAccept(Q) {
  const { accept: ee } = Q;
  return react.exports.useMemo(() => (invariant(Q.accept != null, "accept must be defined"), Array.isArray(ee) ? ee : [
    ee
  ]), [
    ee
  ]);
}
class DropTargetImpl {
  canDrop() {
    const ee = this.spec, ne = this.monitor;
    return ee.canDrop ? ee.canDrop(ne.getItem(), ne) : !0;
  }
  hover() {
    const ee = this.spec, ne = this.monitor;
    ee.hover && ee.hover(ne.getItem(), ne);
  }
  drop() {
    const ee = this.spec, ne = this.monitor;
    if (ee.drop)
      return ee.drop(ne.getItem(), ne);
  }
  constructor(ee, ne) {
    this.spec = ee, this.monitor = ne;
  }
}
function useDropTarget(Q, ee) {
  const ne = react.exports.useMemo(
    () => new DropTargetImpl(Q, ee),
    [
      ee
    ]
  );
  return react.exports.useEffect(() => {
    ne.spec = Q;
  }, [
    Q
  ]), ne;
}
function useRegisteredDropTarget(Q, ee, ne) {
  const ie = useDragDropManager(), ae = useDropTarget(Q, ee), ce = useAccept(Q);
  useIsomorphicLayoutEffect(function() {
    const [de, ye] = registerTarget(ce, ae, ie);
    return ee.receiveHandlerId(de), ne.receiveHandlerId(de), ye;
  }, [
    ie,
    ee,
    ae,
    ne,
    ce.map(
      (le) => le.toString()
    ).join("|")
  ]);
}
function useDrop(Q, ee) {
  const ne = useOptionalFactory(Q, ee), ie = useDropTargetMonitor(), ae = useDropTargetConnector(ne.options);
  return useRegisteredDropTarget(ne, ie, ae), [
    useCollectedProps(ne.collect, ie, ae),
    useConnectDropTarget(ae)
  ];
}
function memoize$1(Q) {
  let ee = null;
  return () => (ee == null && (ee = Q()), ee);
}
function without(Q, ee) {
  return Q.filter(
    (ne) => ne !== ee
  );
}
function union(Q, ee) {
  const ne = /* @__PURE__ */ new Set(), ie = (ce) => ne.add(ce);
  Q.forEach(ie), ee.forEach(ie);
  const ae = [];
  return ne.forEach(
    (ce) => ae.push(ce)
  ), ae;
}
class EnterLeaveCounter {
  enter(ee) {
    const ne = this.entered.length, ie = (ae) => this.isNodeInDocument(ae) && (!ae.contains || ae.contains(ee));
    return this.entered = union(this.entered.filter(ie), [
      ee
    ]), ne === 0 && this.entered.length > 0;
  }
  leave(ee) {
    const ne = this.entered.length;
    return this.entered = without(this.entered.filter(this.isNodeInDocument), ee), ne > 0 && this.entered.length === 0;
  }
  reset() {
    this.entered = [];
  }
  constructor(ee) {
    this.entered = [], this.isNodeInDocument = ee;
  }
}
class NativeDragSource {
  initializeExposedProperties() {
    Object.keys(this.config.exposeProperties).forEach((ee) => {
      Object.defineProperty(this.item, ee, {
        configurable: !0,
        enumerable: !0,
        get() {
          return console.warn(`Browser doesn't allow reading "${ee}" until the drop event.`), null;
        }
      });
    });
  }
  loadDataTransfer(ee) {
    if (ee) {
      const ne = {};
      Object.keys(this.config.exposeProperties).forEach((ie) => {
        const ae = this.config.exposeProperties[ie];
        ae != null && (ne[ie] = {
          value: ae(ee, this.config.matchesTypes),
          configurable: !0,
          enumerable: !0
        });
      }), Object.defineProperties(this.item, ne);
    }
  }
  canDrag() {
    return !0;
  }
  beginDrag() {
    return this.item;
  }
  isDragging(ee, ne) {
    return ne === ee.getSourceId();
  }
  endDrag() {
  }
  constructor(ee) {
    this.config = ee, this.item = {}, this.initializeExposedProperties();
  }
}
const FILE = "__NATIVE_FILE__", URL$4 = "__NATIVE_URL__", TEXT = "__NATIVE_TEXT__", HTML = "__NATIVE_HTML__", NativeTypes = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  FILE,
  URL: URL$4,
  TEXT,
  HTML
}, Symbol.toStringTag, { value: "Module" }));
function getDataFromDataTransfer(Q, ee, ne) {
  const ie = ee.reduce(
    (ae, ce) => ae || Q.getData(ce),
    ""
  );
  return ie != null ? ie : ne;
}
const nativeTypesConfig = {
  [FILE]: {
    exposeProperties: {
      files: (Q) => Array.prototype.slice.call(Q.files),
      items: (Q) => Q.items,
      dataTransfer: (Q) => Q
    },
    matchesTypes: [
      "Files"
    ]
  },
  [HTML]: {
    exposeProperties: {
      html: (Q, ee) => getDataFromDataTransfer(Q, ee, ""),
      dataTransfer: (Q) => Q
    },
    matchesTypes: [
      "Html",
      "text/html"
    ]
  },
  [URL$4]: {
    exposeProperties: {
      urls: (Q, ee) => getDataFromDataTransfer(Q, ee, "").split(`
`),
      dataTransfer: (Q) => Q
    },
    matchesTypes: [
      "Url",
      "text/uri-list"
    ]
  },
  [TEXT]: {
    exposeProperties: {
      text: (Q, ee) => getDataFromDataTransfer(Q, ee, ""),
      dataTransfer: (Q) => Q
    },
    matchesTypes: [
      "Text",
      "text/plain"
    ]
  }
};
function createNativeDragSource(Q, ee) {
  const ne = nativeTypesConfig[Q];
  if (!ne)
    throw new Error(`native type ${Q} has no configuration`);
  const ie = new NativeDragSource(ne);
  return ie.loadDataTransfer(ee), ie;
}
function matchNativeItemType(Q) {
  if (!Q)
    return null;
  const ee = Array.prototype.slice.call(Q.types || []);
  return Object.keys(nativeTypesConfig).filter((ne) => {
    const ie = nativeTypesConfig[ne];
    return ie != null && ie.matchesTypes ? ie.matchesTypes.some(
      (ae) => ee.indexOf(ae) > -1
    ) : !1;
  })[0] || null;
}
const isFirefox = memoize$1(
  () => /firefox/i.test(navigator.userAgent)
), isSafari = memoize$1(
  () => Boolean(window.safari)
);
class MonotonicInterpolant {
  interpolate(ee) {
    const { xs: ne, ys: ie, c1s: ae, c2s: ce, c3s: le } = this;
    let de = ne.length - 1;
    if (ee === ne[de])
      return ie[de];
    let ye = 0, he = le.length - 1, Be;
    for (; ye <= he; ) {
      Be = Math.floor(0.5 * (ye + he));
      const ge = ne[Be];
      if (ge < ee)
        ye = Be + 1;
      else if (ge > ee)
        he = Be - 1;
      else
        return ie[Be];
    }
    de = Math.max(0, he);
    const Ee = ee - ne[de], me = Ee * Ee;
    return ie[de] + ae[de] * Ee + ce[de] * me + le[de] * Ee * me;
  }
  constructor(ee, ne) {
    const { length: ie } = ee, ae = [];
    for (let ge = 0; ge < ie; ge++)
      ae.push(ge);
    ae.sort(
      (ge, be) => ee[ge] < ee[be] ? -1 : 1
    );
    const ce = [], le = [];
    let de, ye;
    for (let ge = 0; ge < ie - 1; ge++)
      de = ee[ge + 1] - ee[ge], ye = ne[ge + 1] - ne[ge], ce.push(de), le.push(ye / de);
    const he = [
      le[0]
    ];
    for (let ge = 0; ge < ce.length - 1; ge++) {
      const be = le[ge], we = le[ge + 1];
      if (be * we <= 0)
        he.push(0);
      else {
        de = ce[ge];
        const Oe = ce[ge + 1], He = de + Oe;
        he.push(3 * He / ((He + Oe) / be + (He + de) / we));
      }
    }
    he.push(le[le.length - 1]);
    const Be = [], Ee = [];
    let me;
    for (let ge = 0; ge < he.length - 1; ge++) {
      me = le[ge];
      const be = he[ge], we = 1 / ce[ge], Oe = be + he[ge + 1] - me - me;
      Be.push((me - be - Oe) * we), Ee.push(Oe * we * we);
    }
    this.xs = ee, this.ys = ne, this.c1s = he, this.c2s = Be, this.c3s = Ee;
  }
}
const ELEMENT_NODE = 1;
function getNodeClientOffset(Q) {
  const ee = Q.nodeType === ELEMENT_NODE ? Q : Q.parentElement;
  if (!ee)
    return null;
  const { top: ne, left: ie } = ee.getBoundingClientRect();
  return {
    x: ie,
    y: ne
  };
}
function getEventClientOffset(Q) {
  return {
    x: Q.clientX,
    y: Q.clientY
  };
}
function isImageNode(Q) {
  var ee;
  return Q.nodeName === "IMG" && (isFirefox() || !(!((ee = document.documentElement) === null || ee === void 0) && ee.contains(Q)));
}
function getDragPreviewSize(Q, ee, ne, ie) {
  let ae = Q ? ee.width : ne, ce = Q ? ee.height : ie;
  return isSafari() && Q && (ce /= window.devicePixelRatio, ae /= window.devicePixelRatio), {
    dragPreviewWidth: ae,
    dragPreviewHeight: ce
  };
}
function getDragPreviewOffset(Q, ee, ne, ie, ae) {
  const ce = isImageNode(ee), de = getNodeClientOffset(ce ? Q : ee), ye = {
    x: ne.x - de.x,
    y: ne.y - de.y
  }, { offsetWidth: he, offsetHeight: Be } = Q, { anchorX: Ee, anchorY: me } = ie, { dragPreviewWidth: ge, dragPreviewHeight: be } = getDragPreviewSize(ce, ee, he, Be), we = () => {
    let We = new MonotonicInterpolant([
      0,
      0.5,
      1
    ], [
      ye.y,
      ye.y / Be * be,
      ye.y + be - Be
    ]).interpolate(me);
    return isSafari() && ce && (We += (window.devicePixelRatio - 1) * be), We;
  }, Oe = () => new MonotonicInterpolant([
    0,
    0.5,
    1
  ], [
    ye.x,
    ye.x / he * ge,
    ye.x + ge - he
  ]).interpolate(Ee), { offsetX: He, offsetY: Se } = ae, Ge = He === 0 || He, Fe = Se === 0 || Se;
  return {
    x: Ge ? He : Oe(),
    y: Fe ? Se : we()
  };
}
class OptionsReader {
  get window() {
    if (this.globalContext)
      return this.globalContext;
    if (typeof window < "u")
      return window;
  }
  get document() {
    var ee;
    return !((ee = this.globalContext) === null || ee === void 0) && ee.document ? this.globalContext.document : this.window ? this.window.document : void 0;
  }
  get rootElement() {
    var ee;
    return ((ee = this.optionsArgs) === null || ee === void 0 ? void 0 : ee.rootElement) || this.window;
  }
  constructor(ee, ne) {
    this.ownerDocument = null, this.globalContext = ee, this.optionsArgs = ne;
  }
}
function _defineProperty(Q, ee, ne) {
  return ee in Q ? Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : Q[ee] = ne, Q;
}
function _objectSpread(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee] != null ? arguments[ee] : {}, ie = Object.keys(ne);
    typeof Object.getOwnPropertySymbols == "function" && (ie = ie.concat(Object.getOwnPropertySymbols(ne).filter(function(ae) {
      return Object.getOwnPropertyDescriptor(ne, ae).enumerable;
    }))), ie.forEach(function(ae) {
      _defineProperty(Q, ae, ne[ae]);
    });
  }
  return Q;
}
class HTML5BackendImpl {
  profile() {
    var ee, ne;
    return {
      sourcePreviewNodes: this.sourcePreviewNodes.size,
      sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,
      sourceNodeOptions: this.sourceNodeOptions.size,
      sourceNodes: this.sourceNodes.size,
      dragStartSourceIds: ((ee = this.dragStartSourceIds) === null || ee === void 0 ? void 0 : ee.length) || 0,
      dropTargetIds: this.dropTargetIds.length,
      dragEnterTargetIds: this.dragEnterTargetIds.length,
      dragOverTargetIds: ((ne = this.dragOverTargetIds) === null || ne === void 0 ? void 0 : ne.length) || 0
    };
  }
  get window() {
    return this.options.window;
  }
  get document() {
    return this.options.document;
  }
  get rootElement() {
    return this.options.rootElement;
  }
  setup() {
    const ee = this.rootElement;
    if (ee !== void 0) {
      if (ee.__isReactDndBackendSetUp)
        throw new Error("Cannot have two HTML5 backends at the same time.");
      ee.__isReactDndBackendSetUp = !0, this.addEventListeners(ee);
    }
  }
  teardown() {
    const ee = this.rootElement;
    if (ee !== void 0 && (ee.__isReactDndBackendSetUp = !1, this.removeEventListeners(this.rootElement), this.clearCurrentDragSourceNode(), this.asyncEndDragFrameId)) {
      var ne;
      (ne = this.window) === null || ne === void 0 || ne.cancelAnimationFrame(this.asyncEndDragFrameId);
    }
  }
  connectDragPreview(ee, ne, ie) {
    return this.sourcePreviewNodeOptions.set(ee, ie), this.sourcePreviewNodes.set(ee, ne), () => {
      this.sourcePreviewNodes.delete(ee), this.sourcePreviewNodeOptions.delete(ee);
    };
  }
  connectDragSource(ee, ne, ie) {
    this.sourceNodes.set(ee, ne), this.sourceNodeOptions.set(ee, ie);
    const ae = (le) => this.handleDragStart(le, ee), ce = (le) => this.handleSelectStart(le);
    return ne.setAttribute("draggable", "true"), ne.addEventListener("dragstart", ae), ne.addEventListener("selectstart", ce), () => {
      this.sourceNodes.delete(ee), this.sourceNodeOptions.delete(ee), ne.removeEventListener("dragstart", ae), ne.removeEventListener("selectstart", ce), ne.setAttribute("draggable", "false");
    };
  }
  connectDropTarget(ee, ne) {
    const ie = (le) => this.handleDragEnter(le, ee), ae = (le) => this.handleDragOver(le, ee), ce = (le) => this.handleDrop(le, ee);
    return ne.addEventListener("dragenter", ie), ne.addEventListener("dragover", ae), ne.addEventListener("drop", ce), () => {
      ne.removeEventListener("dragenter", ie), ne.removeEventListener("dragover", ae), ne.removeEventListener("drop", ce);
    };
  }
  addEventListeners(ee) {
    !ee.addEventListener || (ee.addEventListener("dragstart", this.handleTopDragStart), ee.addEventListener("dragstart", this.handleTopDragStartCapture, !0), ee.addEventListener("dragend", this.handleTopDragEndCapture, !0), ee.addEventListener("dragenter", this.handleTopDragEnter), ee.addEventListener("dragenter", this.handleTopDragEnterCapture, !0), ee.addEventListener("dragleave", this.handleTopDragLeaveCapture, !0), ee.addEventListener("dragover", this.handleTopDragOver), ee.addEventListener("dragover", this.handleTopDragOverCapture, !0), ee.addEventListener("drop", this.handleTopDrop), ee.addEventListener("drop", this.handleTopDropCapture, !0));
  }
  removeEventListeners(ee) {
    !ee.removeEventListener || (ee.removeEventListener("dragstart", this.handleTopDragStart), ee.removeEventListener("dragstart", this.handleTopDragStartCapture, !0), ee.removeEventListener("dragend", this.handleTopDragEndCapture, !0), ee.removeEventListener("dragenter", this.handleTopDragEnter), ee.removeEventListener("dragenter", this.handleTopDragEnterCapture, !0), ee.removeEventListener("dragleave", this.handleTopDragLeaveCapture, !0), ee.removeEventListener("dragover", this.handleTopDragOver), ee.removeEventListener("dragover", this.handleTopDragOverCapture, !0), ee.removeEventListener("drop", this.handleTopDrop), ee.removeEventListener("drop", this.handleTopDropCapture, !0));
  }
  getCurrentSourceNodeOptions() {
    const ee = this.monitor.getSourceId(), ne = this.sourceNodeOptions.get(ee);
    return _objectSpread({
      dropEffect: this.altKeyPressed ? "copy" : "move"
    }, ne || {});
  }
  getCurrentDropEffect() {
    return this.isDraggingNativeItem() ? "copy" : this.getCurrentSourceNodeOptions().dropEffect;
  }
  getCurrentSourcePreviewNodeOptions() {
    const ee = this.monitor.getSourceId(), ne = this.sourcePreviewNodeOptions.get(ee);
    return _objectSpread({
      anchorX: 0.5,
      anchorY: 0.5,
      captureDraggingState: !1
    }, ne || {});
  }
  isDraggingNativeItem() {
    const ee = this.monitor.getItemType();
    return Object.keys(NativeTypes).some(
      (ne) => NativeTypes[ne] === ee
    );
  }
  beginDragNativeItem(ee, ne) {
    this.clearCurrentDragSourceNode(), this.currentNativeSource = createNativeDragSource(ee, ne), this.currentNativeHandle = this.registry.addSource(ee, this.currentNativeSource), this.actions.beginDrag([
      this.currentNativeHandle
    ]);
  }
  setCurrentDragSourceNode(ee) {
    this.clearCurrentDragSourceNode(), this.currentDragSourceNode = ee;
    const ne = 1e3;
    this.mouseMoveTimeoutTimer = setTimeout(() => {
      var ie;
      return (ie = this.rootElement) === null || ie === void 0 ? void 0 : ie.addEventListener("mousemove", this.endDragIfSourceWasRemovedFromDOM, !0);
    }, ne);
  }
  clearCurrentDragSourceNode() {
    if (this.currentDragSourceNode) {
      if (this.currentDragSourceNode = null, this.rootElement) {
        var ee;
        (ee = this.window) === null || ee === void 0 || ee.clearTimeout(this.mouseMoveTimeoutTimer || void 0), this.rootElement.removeEventListener("mousemove", this.endDragIfSourceWasRemovedFromDOM, !0);
      }
      return this.mouseMoveTimeoutTimer = null, !0;
    }
    return !1;
  }
  handleDragStart(ee, ne) {
    ee.defaultPrevented || (this.dragStartSourceIds || (this.dragStartSourceIds = []), this.dragStartSourceIds.unshift(ne));
  }
  handleDragEnter(ee, ne) {
    this.dragEnterTargetIds.unshift(ne);
  }
  handleDragOver(ee, ne) {
    this.dragOverTargetIds === null && (this.dragOverTargetIds = []), this.dragOverTargetIds.unshift(ne);
  }
  handleDrop(ee, ne) {
    this.dropTargetIds.unshift(ne);
  }
  constructor(ee, ne, ie) {
    this.sourcePreviewNodes = /* @__PURE__ */ new Map(), this.sourcePreviewNodeOptions = /* @__PURE__ */ new Map(), this.sourceNodes = /* @__PURE__ */ new Map(), this.sourceNodeOptions = /* @__PURE__ */ new Map(), this.dragStartSourceIds = null, this.dropTargetIds = [], this.dragEnterTargetIds = [], this.currentNativeSource = null, this.currentNativeHandle = null, this.currentDragSourceNode = null, this.altKeyPressed = !1, this.mouseMoveTimeoutTimer = null, this.asyncEndDragFrameId = null, this.dragOverTargetIds = null, this.lastClientOffset = null, this.hoverRafId = null, this.getSourceClientOffset = (ae) => {
      const ce = this.sourceNodes.get(ae);
      return ce && getNodeClientOffset(ce) || null;
    }, this.endDragNativeItem = () => {
      !this.isDraggingNativeItem() || (this.actions.endDrag(), this.currentNativeHandle && this.registry.removeSource(this.currentNativeHandle), this.currentNativeHandle = null, this.currentNativeSource = null);
    }, this.isNodeInDocument = (ae) => Boolean(ae && this.document && this.document.body && this.document.body.contains(ae)), this.endDragIfSourceWasRemovedFromDOM = () => {
      const ae = this.currentDragSourceNode;
      ae == null || this.isNodeInDocument(ae) || (this.clearCurrentDragSourceNode() && this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover());
    }, this.scheduleHover = (ae) => {
      this.hoverRafId === null && typeof requestAnimationFrame < "u" && (this.hoverRafId = requestAnimationFrame(() => {
        this.monitor.isDragging() && this.actions.hover(ae || [], {
          clientOffset: this.lastClientOffset
        }), this.hoverRafId = null;
      }));
    }, this.cancelHover = () => {
      this.hoverRafId !== null && typeof cancelAnimationFrame < "u" && (cancelAnimationFrame(this.hoverRafId), this.hoverRafId = null);
    }, this.handleTopDragStartCapture = () => {
      this.clearCurrentDragSourceNode(), this.dragStartSourceIds = [];
    }, this.handleTopDragStart = (ae) => {
      if (ae.defaultPrevented)
        return;
      const { dragStartSourceIds: ce } = this;
      this.dragStartSourceIds = null;
      const le = getEventClientOffset(ae);
      this.monitor.isDragging() && (this.actions.endDrag(), this.cancelHover()), this.actions.beginDrag(ce || [], {
        publishSource: !1,
        getSourceClientOffset: this.getSourceClientOffset,
        clientOffset: le
      });
      const { dataTransfer: de } = ae, ye = matchNativeItemType(de);
      if (this.monitor.isDragging()) {
        if (de && typeof de.setDragImage == "function") {
          const Be = this.monitor.getSourceId(), Ee = this.sourceNodes.get(Be), me = this.sourcePreviewNodes.get(Be) || Ee;
          if (me) {
            const { anchorX: ge, anchorY: be, offsetX: we, offsetY: Oe } = this.getCurrentSourcePreviewNodeOptions(), Ge = getDragPreviewOffset(Ee, me, le, {
              anchorX: ge,
              anchorY: be
            }, {
              offsetX: we,
              offsetY: Oe
            });
            de.setDragImage(me, Ge.x, Ge.y);
          }
        }
        try {
          de == null || de.setData("application/json", {});
        } catch {
        }
        this.setCurrentDragSourceNode(ae.target);
        const { captureDraggingState: he } = this.getCurrentSourcePreviewNodeOptions();
        he ? this.actions.publishDragSource() : setTimeout(
          () => this.actions.publishDragSource(),
          0
        );
      } else if (ye)
        this.beginDragNativeItem(ye);
      else {
        if (de && !de.types && (ae.target && !ae.target.hasAttribute || !ae.target.hasAttribute("draggable")))
          return;
        ae.preventDefault();
      }
    }, this.handleTopDragEndCapture = () => {
      this.clearCurrentDragSourceNode() && this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover();
    }, this.handleTopDragEnterCapture = (ae) => {
      if (this.dragEnterTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(ae.dataTransfer);
      }
      if (!this.enterLeaveCounter.enter(ae.target) || this.monitor.isDragging())
        return;
      const { dataTransfer: de } = ae, ye = matchNativeItemType(de);
      ye && this.beginDragNativeItem(ye, de);
    }, this.handleTopDragEnter = (ae) => {
      const { dragEnterTargetIds: ce } = this;
      if (this.dragEnterTargetIds = [], !this.monitor.isDragging())
        return;
      this.altKeyPressed = ae.altKey, ce.length > 0 && this.actions.hover(ce, {
        clientOffset: getEventClientOffset(ae)
      }), ce.some(
        (de) => this.monitor.canDropOnTarget(de)
      ) && (ae.preventDefault(), ae.dataTransfer && (ae.dataTransfer.dropEffect = this.getCurrentDropEffect()));
    }, this.handleTopDragOverCapture = (ae) => {
      if (this.dragOverTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(ae.dataTransfer);
      }
    }, this.handleTopDragOver = (ae) => {
      const { dragOverTargetIds: ce } = this;
      if (this.dragOverTargetIds = [], !this.monitor.isDragging()) {
        ae.preventDefault(), ae.dataTransfer && (ae.dataTransfer.dropEffect = "none");
        return;
      }
      this.altKeyPressed = ae.altKey, this.lastClientOffset = getEventClientOffset(ae), this.scheduleHover(ce), (ce || []).some(
        (de) => this.monitor.canDropOnTarget(de)
      ) ? (ae.preventDefault(), ae.dataTransfer && (ae.dataTransfer.dropEffect = this.getCurrentDropEffect())) : this.isDraggingNativeItem() ? ae.preventDefault() : (ae.preventDefault(), ae.dataTransfer && (ae.dataTransfer.dropEffect = "none"));
    }, this.handleTopDragLeaveCapture = (ae) => {
      this.isDraggingNativeItem() && ae.preventDefault(), this.enterLeaveCounter.leave(ae.target) && (this.isDraggingNativeItem() && setTimeout(
        () => this.endDragNativeItem(),
        0
      ), this.cancelHover());
    }, this.handleTopDropCapture = (ae) => {
      if (this.dropTargetIds = [], this.isDraggingNativeItem()) {
        var ce;
        ae.preventDefault(), (ce = this.currentNativeSource) === null || ce === void 0 || ce.loadDataTransfer(ae.dataTransfer);
      } else
        matchNativeItemType(ae.dataTransfer) && ae.preventDefault();
      this.enterLeaveCounter.reset();
    }, this.handleTopDrop = (ae) => {
      const { dropTargetIds: ce } = this;
      this.dropTargetIds = [], this.actions.hover(ce, {
        clientOffset: getEventClientOffset(ae)
      }), this.actions.drop({
        dropEffect: this.getCurrentDropEffect()
      }), this.isDraggingNativeItem() ? this.endDragNativeItem() : this.monitor.isDragging() && this.actions.endDrag(), this.cancelHover();
    }, this.handleSelectStart = (ae) => {
      const ce = ae.target;
      typeof ce.dragDrop == "function" && (ce.tagName === "INPUT" || ce.tagName === "SELECT" || ce.tagName === "TEXTAREA" || ce.isContentEditable || (ae.preventDefault(), ce.dragDrop()));
    }, this.options = new OptionsReader(ne, ie), this.actions = ee.getActions(), this.monitor = ee.getMonitor(), this.registry = ee.getRegistry(), this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);
  }
}
const HTML5Backend = function(ee, ne, ie) {
  return new HTML5BackendImpl(ee, ne, ie);
};
var __awaiter$d = globalThis && globalThis.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __generator = globalThis && globalThis.__generator || function(Q, ee) {
  var ne = {
    label: 0,
    sent: function() {
      if (ce[0] & 1)
        throw ce[1];
      return ce[1];
    },
    trys: [],
    ops: []
  }, ie, ae, ce, le;
  return le = {
    next: de(0),
    throw: de(1),
    return: de(2)
  }, typeof Symbol == "function" && (le[Symbol.iterator] = function() {
    return this;
  }), le;
  function de(he) {
    return function(Be) {
      return ye([he, Be]);
    };
  }
  function ye(he) {
    if (ie)
      throw new TypeError("Generator is already executing.");
    for (; ne; )
      try {
        if (ie = 1, ae && (ce = he[0] & 2 ? ae.return : he[0] ? ae.throw || ((ce = ae.return) && ce.call(ae), 0) : ae.next) && !(ce = ce.call(ae, he[1])).done)
          return ce;
        switch (ae = 0, ce && (he = [he[0] & 2, ce.value]), he[0]) {
          case 0:
          case 1:
            ce = he;
            break;
          case 4:
            return ne.label++, {
              value: he[1],
              done: !1
            };
          case 5:
            ne.label++, ae = he[1], he = [0];
            continue;
          case 7:
            he = ne.ops.pop(), ne.trys.pop();
            continue;
          default:
            if (ce = ne.trys, !(ce = ce.length > 0 && ce[ce.length - 1]) && (he[0] === 6 || he[0] === 2)) {
              ne = 0;
              continue;
            }
            if (he[0] === 3 && (!ce || he[1] > ce[0] && he[1] < ce[3])) {
              ne.label = he[1];
              break;
            }
            if (he[0] === 6 && ne.label < ce[1]) {
              ne.label = ce[1], ce = he;
              break;
            }
            if (ce && ne.label < ce[2]) {
              ne.label = ce[2], ne.ops.push(he);
              break;
            }
            ce[2] && ne.ops.pop(), ne.trys.pop();
            continue;
        }
        he = ee.call(Q, ne);
      } catch (Be) {
        he = [6, Be], ae = 0;
      } finally {
        ie = ce = 0;
      }
    if (he[0] & 5)
      throw he[1];
    return {
      value: he[0] ? he[1] : void 0,
      done: !0
    };
  }
}, ic = window.ic, plug = ic == null ? void 0 : ic.plug, context = react.exports.createContext({
  authenticated: !1,
  principal: null,
  agent: plug == null ? void 0 : plug.agent,
  login: function() {
  },
  logout: function() {
  },
  createActor: plug == null ? void 0 : plug.createActor,
  requestBalance: plug == null ? void 0 : plug.requestBalance,
  requestTransfer: plug == null ? void 0 : plug.requestTransfer,
  batchTransactions: plug == null ? void 0 : plug.batchTransactions,
  plug
}), Provider = context.Provider, PlugProvider = function(Q) {
  var ee = Q.children, ne = Q.LoggedOut, ie = Q.host, ae = ie === void 0 ? "https://mainnet.dfinity.network" : ie, ce = Q.whitelist, le = ce === void 0 ? [] : ce, de = Q.timeout, ye = de === void 0 ? 12e4 : de, he = react.exports.useState(!1), Be = he[0], Ee = he[1], me = react.exports.useState(null), ge = me[0], be = me[1], we = react.exports.useCallback(function() {
    return __awaiter$d(void 0, void 0, void 0, function() {
      var Se, Ge;
      return __generator(this, function(Fe) {
        switch (Fe.label) {
          case 0:
            return Fe.trys.push([0, 4, , 5]), plug ? [4, plug.requestConnect({
              whitelist: le,
              host: ae,
              timeout: ye
            })] : [3, 3];
          case 1:
            return Se = Fe.sent(), Se ? [4, plug.agent.getPrincipal()] : [3, 3];
          case 2:
            Ge = Fe.sent(), be(Ge), Ee(!0), Fe.label = 3;
          case 3:
            return [3, 5];
          case 4:
            return Fe.sent(), Ee(!1), [3, 5];
          case 5:
            return [2];
        }
      });
    });
  }, [ae, le, ye]), Oe = react.exports.useCallback(function() {
    window.location.reload();
  }, []), He = react.exports.useMemo(function() {
    return {
      authenticated: Be,
      agent: plug == null ? void 0 : plug.agent,
      login: we,
      logout: Oe,
      principal: ge,
      createActor: function(Se) {
        return plug == null ? void 0 : plug.createActor(Se);
      },
      requestBalance: plug == null ? void 0 : plug.requestBalance,
      requestTransfer: plug == null ? void 0 : plug.requestTransfer,
      batchTransactions: plug == null ? void 0 : plug.batchTransactions,
      plug
    };
  }, [Be, plug, we, Oe, ge]);
  return !Be && ne ? /* @__PURE__ */ jsx(Provider, {
    value: He,
    children: ne || null
  }) : /* @__PURE__ */ jsx(Provider, {
    value: He,
    children: ee
  });
}, usePlug = function() {
  var Q = react.exports.useContext(context);
  return Q;
}, e = "colors", t = "sizes", r = "space", n = { gap: r, gridGap: r, columnGap: r, gridColumnGap: r, rowGap: r, gridRowGap: r, inset: r, insetBlock: r, insetBlockEnd: r, insetBlockStart: r, insetInline: r, insetInlineEnd: r, insetInlineStart: r, margin: r, marginTop: r, marginRight: r, marginBottom: r, marginLeft: r, marginBlock: r, marginBlockEnd: r, marginBlockStart: r, marginInline: r, marginInlineEnd: r, marginInlineStart: r, padding: r, paddingTop: r, paddingRight: r, paddingBottom: r, paddingLeft: r, paddingBlock: r, paddingBlockEnd: r, paddingBlockStart: r, paddingInline: r, paddingInlineEnd: r, paddingInlineStart: r, top: r, right: r, bottom: r, left: r, scrollMargin: r, scrollMarginTop: r, scrollMarginRight: r, scrollMarginBottom: r, scrollMarginLeft: r, scrollMarginX: r, scrollMarginY: r, scrollMarginBlock: r, scrollMarginBlockEnd: r, scrollMarginBlockStart: r, scrollMarginInline: r, scrollMarginInlineEnd: r, scrollMarginInlineStart: r, scrollPadding: r, scrollPaddingTop: r, scrollPaddingRight: r, scrollPaddingBottom: r, scrollPaddingLeft: r, scrollPaddingX: r, scrollPaddingY: r, scrollPaddingBlock: r, scrollPaddingBlockEnd: r, scrollPaddingBlockStart: r, scrollPaddingInline: r, scrollPaddingInlineEnd: r, scrollPaddingInlineStart: r, fontSize: "fontSizes", background: e, backgroundColor: e, backgroundImage: e, borderImage: e, border: e, borderBlock: e, borderBlockEnd: e, borderBlockStart: e, borderBottom: e, borderBottomColor: e, borderColor: e, borderInline: e, borderInlineEnd: e, borderInlineStart: e, borderLeft: e, borderLeftColor: e, borderRight: e, borderRightColor: e, borderTop: e, borderTopColor: e, caretColor: e, color: e, columnRuleColor: e, fill: e, outline: e, outlineColor: e, stroke: e, textDecorationColor: e, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t, minBlockSize: t, maxBlockSize: t, inlineSize: t, minInlineSize: t, maxInlineSize: t, width: t, minWidth: t, maxWidth: t, height: t, minHeight: t, maxHeight: t, flexBasis: t, gridTemplateColumns: t, gridTemplateRows: t, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" }, i$1 = (Q, ee) => typeof ee == "function" ? { "()": Function.prototype.toString.call(ee) } : ee, o = () => {
  const Q = /* @__PURE__ */ Object.create(null);
  return (ee, ne, ...ie) => {
    const ae = ((ce) => JSON.stringify(ce, i$1))(ee);
    return ae in Q ? Q[ae] : Q[ae] = ne(ee, ...ie);
  };
}, l = Symbol.for("sxs.internal"), s = (Q, ee) => Object.defineProperties(Q, Object.getOwnPropertyDescriptors(ee)), a = (Q) => {
  for (const ee in Q)
    return !0;
  return !1;
}, { hasOwnProperty: c$1 } = Object.prototype, d = (Q) => Q.includes("-") ? Q : Q.replace(/[A-Z]/g, (ee) => "-" + ee.toLowerCase()), g = /\s+(?![^()]*\))/, p = (Q) => (ee) => Q(...typeof ee == "string" ? String(ee).split(g) : [ee]), u = { appearance: (Q) => ({ WebkitAppearance: Q, appearance: Q }), backfaceVisibility: (Q) => ({ WebkitBackfaceVisibility: Q, backfaceVisibility: Q }), backdropFilter: (Q) => ({ WebkitBackdropFilter: Q, backdropFilter: Q }), backgroundClip: (Q) => ({ WebkitBackgroundClip: Q, backgroundClip: Q }), boxDecorationBreak: (Q) => ({ WebkitBoxDecorationBreak: Q, boxDecorationBreak: Q }), clipPath: (Q) => ({ WebkitClipPath: Q, clipPath: Q }), content: (Q) => ({ content: Q.includes('"') || Q.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(Q) ? Q : `"${Q}"` }), hyphens: (Q) => ({ WebkitHyphens: Q, hyphens: Q }), maskImage: (Q) => ({ WebkitMaskImage: Q, maskImage: Q }), maskSize: (Q) => ({ WebkitMaskSize: Q, maskSize: Q }), tabSize: (Q) => ({ MozTabSize: Q, tabSize: Q }), textSizeAdjust: (Q) => ({ WebkitTextSizeAdjust: Q, textSizeAdjust: Q }), userSelect: (Q) => ({ WebkitUserSelect: Q, userSelect: Q }), marginBlock: p((Q, ee) => ({ marginBlockStart: Q, marginBlockEnd: ee || Q })), marginInline: p((Q, ee) => ({ marginInlineStart: Q, marginInlineEnd: ee || Q })), maxSize: p((Q, ee) => ({ maxBlockSize: Q, maxInlineSize: ee || Q })), minSize: p((Q, ee) => ({ minBlockSize: Q, minInlineSize: ee || Q })), paddingBlock: p((Q, ee) => ({ paddingBlockStart: Q, paddingBlockEnd: ee || Q })), paddingInline: p((Q, ee) => ({ paddingInlineStart: Q, paddingInlineEnd: ee || Q })) }, h = /([\d.]+)([^]*)/, f = (Q, ee) => Q.length ? Q.reduce((ne, ie) => (ne.push(...ee.map((ae) => ae.includes("&") ? ae.replace(/&/g, /[ +>|~]/.test(ie) && /&.*&/.test(ae) ? `:is(${ie})` : ie) : ie + " " + ae)), ne), []) : ee, m = (Q, ee) => Q in b && typeof ee == "string" ? ee.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (ne, ie, ae, ce) => ie + (ae === "stretch" ? `-moz-available${ce};${d(Q)}:${ie}-webkit-fill-available` : `-moz-fit-content${ce};${d(Q)}:${ie}fit-content`) + ce) : String(ee), b = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 }, S = (Q) => Q ? Q + "-" : "", k = (Q, ee, ne) => Q.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (ie, ae, ce, le, de) => le == "$" == !!ce ? ie : (ae || le == "--" ? "calc(" : "") + "var(--" + (le === "$" ? S(ee) + (de.includes("$") ? "" : S(ne)) + de.replace(/\$/g, "-") : de) + ")" + (ae || le == "--" ? "*" + (ae || "") + (ce || "1") + ")" : "")), y = /\s*,\s*(?![^()]*\))/, B = Object.prototype.toString, $ = (Q, ee, ne, ie, ae) => {
  let ce, le, de;
  const ye = (he, Be, Ee) => {
    let me, ge;
    const be = (we) => {
      for (me in we) {
        const Se = me.charCodeAt(0) === 64, Ge = Se && Array.isArray(we[me]) ? we[me] : [we[me]];
        for (ge of Ge) {
          const Fe = /[A-Z]/.test(He = me) ? He : He.replace(/-[^]/g, (We) => We[1].toUpperCase()), Pe = typeof ge == "object" && ge && ge.toString === B && (!ie.utils[Fe] || !Be.length);
          if (Fe in ie.utils && !Pe) {
            const We = ie.utils[Fe];
            if (We !== le) {
              le = We, be(We(ge)), le = null;
              continue;
            }
          } else if (Fe in u) {
            const We = u[Fe];
            if (We !== de) {
              de = We, be(We(ge)), de = null;
              continue;
            }
          }
          if (Se && (Oe = me.slice(1) in ie.media ? "@media " + ie.media[me.slice(1)] : me, me = Oe.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (We, tt, Et, Nt, et, mt) => {
            const Mt = h.test(tt), Ot = 0.0625 * (Mt ? -1 : 1), [yt, Qt] = Mt ? [Nt, tt] : [tt, Nt];
            return "(" + (Et[0] === "=" ? "" : Et[0] === ">" === Mt ? "max-" : "min-") + yt + ":" + (Et[0] !== "=" && Et.length === 1 ? Qt.replace(h, (Yt, jt, $t) => Number(jt) + Ot * (Et === ">" ? 1 : -1) + $t) : Qt) + (et ? ") and (" + (et[0] === ">" ? "min-" : "max-") + yt + ":" + (et.length === 1 ? mt.replace(h, (Yt, jt, $t) => Number(jt) + Ot * (et === ">" ? -1 : 1) + $t) : mt) : "") + ")";
          })), Pe) {
            const We = Se ? Ee.concat(me) : [...Ee], tt = Se ? [...Be] : f(Be, me.split(y));
            ce !== void 0 && ae(x(...ce)), ce = void 0, ye(ge, tt, We);
          } else
            ce === void 0 && (ce = [[], Be, Ee]), me = Se || me.charCodeAt(0) !== 36 ? me : `--${S(ie.prefix)}${me.slice(1).replace(/\$/g, "-")}`, ge = Pe ? ge : typeof ge == "number" ? ge && Fe in I ? String(ge) + "px" : String(ge) : k(m(Fe, ge == null ? "" : ge), ie.prefix, ie.themeMap[Fe]), ce[0].push(`${Se ? `${me} ` : `${d(me)}:`}${ge}`);
        }
      }
      var Oe, He;
    };
    be(he), ce !== void 0 && ae(x(...ce)), ce = void 0;
  };
  ye(Q, ee, ne);
}, x = (Q, ee, ne) => `${ne.map((ie) => `${ie}{`).join("")}${ee.length ? `${ee.join(",")}{` : ""}${Q.join(";")}${ee.length ? "}" : ""}${Array(ne.length ? ne.length + 1 : 0).join("}")}`, I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 }, R = (Q) => String.fromCharCode(Q + (Q > 25 ? 39 : 97)), z = (Q) => ((ee) => {
  let ne, ie = "";
  for (ne = Math.abs(ee); ne > 52; ne = ne / 52 | 0)
    ie = R(ne % 52) + ie;
  return R(ne % 52) + ie;
})(((ee, ne) => {
  let ie = ne.length;
  for (; ie; )
    ee = 33 * ee ^ ne.charCodeAt(--ie);
  return ee;
})(5381, JSON.stringify(Q)) >>> 0), W = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"], j = (Q) => {
  if (Q.href && !Q.href.startsWith(location.origin))
    return !1;
  try {
    return !!Q.cssRules;
  } catch {
    return !1;
  }
}, E = (Q) => {
  let ee;
  const ne = () => {
    const { cssRules: ae } = ee.sheet;
    return [].map.call(ae, (ce, le) => {
      const { cssText: de } = ce;
      let ye = "";
      if (de.startsWith("--sxs"))
        return "";
      if (ae[le - 1] && (ye = ae[le - 1].cssText).startsWith("--sxs")) {
        if (!ce.cssRules.length)
          return "";
        for (const he in ee.rules)
          if (ee.rules[he].group === ce)
            return `--sxs{--sxs:${[...ee.rules[he].cache].join(" ")}}${de}`;
        return ce.cssRules.length ? `${ye}${de}` : "";
      }
      return de;
    }).join("");
  }, ie = () => {
    if (ee) {
      const { rules: de, sheet: ye } = ee;
      if (!ye.deleteRule) {
        for (; Object(Object(ye.cssRules)[0]).type === 3; )
          ye.cssRules.splice(0, 1);
        ye.cssRules = [];
      }
      for (const he in de)
        delete de[he];
    }
    const ae = Object(Q).styleSheets || [];
    for (const de of ae)
      if (j(de)) {
        for (let ye = 0, he = de.cssRules; he[ye]; ++ye) {
          const Be = Object(he[ye]);
          if (Be.type !== 1)
            continue;
          const Ee = Object(he[ye + 1]);
          if (Ee.type !== 4)
            continue;
          ++ye;
          const { cssText: me } = Be;
          if (!me.startsWith("--sxs"))
            continue;
          const ge = me.slice(14, -3).trim().split(/\s+/), be = W[ge[0]];
          be && (ee || (ee = { sheet: de, reset: ie, rules: {}, toString: ne }), ee.rules[be] = { group: Ee, index: ye, cache: new Set(ge) });
        }
        if (ee)
          break;
      }
    if (!ee) {
      const de = (ye, he) => ({ type: he, cssRules: [], insertRule(Be, Ee) {
        this.cssRules.splice(Ee, 0, de(Be, { import: 3, undefined: 1 }[(Be.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return ye === "@media{}" ? `@media{${[].map.call(this.cssRules, (Be) => Be.cssText).join("")}}` : ye;
      } });
      ee = { sheet: Q ? (Q.head || Q).appendChild(document.createElement("style")).sheet : de("", "text/css"), rules: {}, reset: ie, toString: ne };
    }
    const { sheet: ce, rules: le } = ee;
    for (let de = W.length - 1; de >= 0; --de) {
      const ye = W[de];
      if (!le[ye]) {
        const he = W[de + 1], Be = le[he] ? le[he].index : ce.cssRules.length;
        ce.insertRule("@media{}", Be), ce.insertRule(`--sxs{--sxs:${de}}`, Be), le[ye] = { group: ce.cssRules[Be + 1], index: Be, cache: /* @__PURE__ */ new Set([de]) };
      }
      v(le[ye]);
    }
  };
  return ie(), ee;
}, v = (Q) => {
  const ee = Q.group;
  let ne = ee.cssRules.length;
  Q.apply = (ie) => {
    try {
      ee.insertRule(ie, ne), ++ne;
    } catch {
    }
  };
}, T = Symbol(), w = o(), M = (Q, ee) => w(Q, () => (...ne) => {
  let ie = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const ae of ne)
    if (ae != null)
      if (ae[l]) {
        ie.type == null && (ie.type = ae[l].type);
        for (const ce of ae[l].composers)
          ie.composers.add(ce);
      } else
        ae.constructor !== Object || ae.$$typeof ? ie.type == null && (ie.type = ae) : ie.composers.add(C(ae, Q));
  return ie.type == null && (ie.type = "span"), ie.composers.size || ie.composers.add(["PJLV", {}, [], [], {}, []]), P(Q, ie, ee);
}), C = ({ variants: Q, compoundVariants: ee, defaultVariants: ne, ...ie }, ae) => {
  const ce = `${S(ae.prefix)}c-${z(ie)}`, le = [], de = [], ye = /* @__PURE__ */ Object.create(null), he = [];
  for (const me in ne)
    ye[me] = String(ne[me]);
  if (typeof Q == "object" && Q)
    for (const me in Q) {
      Be = ye, Ee = me, c$1.call(Be, Ee) || (ye[me] = "undefined");
      const ge = Q[me];
      for (const be in ge) {
        const we = { [me]: String(be) };
        String(be) === "undefined" && he.push(me);
        const Oe = ge[be], He = [we, Oe, !a(Oe)];
        le.push(He);
      }
    }
  var Be, Ee;
  if (typeof ee == "object" && ee)
    for (const me of ee) {
      let { css: ge, ...be } = me;
      ge = typeof ge == "object" && ge || {};
      for (const Oe in be)
        be[Oe] = String(be[Oe]);
      const we = [be, ge, !a(ge)];
      de.push(we);
    }
  return [ce, ie, le, de, ye, he];
}, P = (Q, ee, ne) => {
  const [ie, ae, ce, le] = L(ee.composers), de = typeof ee.type == "function" || ee.type.$$typeof ? ((Ee) => {
    function me() {
      for (let ge = 0; ge < me[T].length; ge++) {
        const [be, we] = me[T][ge];
        Ee.rules[be].apply(we);
      }
      return me[T] = [], null;
    }
    return me[T] = [], me.rules = {}, W.forEach((ge) => me.rules[ge] = { apply: (be) => me[T].push([ge, be]) }), me;
  })(ne) : null, ye = (de || ne).rules, he = `.${ie}${ae.length > 1 ? `:where(.${ae.slice(1).join(".")})` : ""}`, Be = (Ee) => {
    Ee = typeof Ee == "object" && Ee || A;
    const { css: me, ...ge } = Ee, be = {};
    for (const He in ce)
      if (delete ge[He], He in Ee) {
        let Se = Ee[He];
        typeof Se == "object" && Se ? be[He] = { "@initial": ce[He], ...Se } : (Se = String(Se), be[He] = Se !== "undefined" || le.has(He) ? Se : ce[He]);
      } else
        be[He] = ce[He];
    const we = /* @__PURE__ */ new Set([...ae]);
    for (const [He, Se, Ge, Fe] of ee.composers) {
      ne.rules.styled.cache.has(He) || (ne.rules.styled.cache.add(He), $(Se, [`.${He}`], [], Q, (tt) => {
        ye.styled.apply(tt);
      }));
      const Pe = O(Ge, be, Q.media), We = O(Fe, be, Q.media, !0);
      for (const tt of Pe)
        if (tt !== void 0)
          for (const [Et, Nt, et] of tt) {
            const mt = `${He}-${z(Nt)}-${Et}`;
            we.add(mt);
            const Mt = (et ? ne.rules.resonevar : ne.rules.onevar).cache, Ot = et ? ye.resonevar : ye.onevar;
            Mt.has(mt) || (Mt.add(mt), $(Nt, [`.${mt}`], [], Q, (yt) => {
              Ot.apply(yt);
            }));
          }
      for (const tt of We)
        if (tt !== void 0)
          for (const [Et, Nt] of tt) {
            const et = `${He}-${z(Nt)}-${Et}`;
            we.add(et), ne.rules.allvar.cache.has(et) || (ne.rules.allvar.cache.add(et), $(Nt, [`.${et}`], [], Q, (mt) => {
              ye.allvar.apply(mt);
            }));
          }
    }
    if (typeof me == "object" && me) {
      const He = `${ie}-i${z(me)}-css`;
      we.add(He), ne.rules.inline.cache.has(He) || (ne.rules.inline.cache.add(He), $(me, [`.${He}`], [], Q, (Se) => {
        ye.inline.apply(Se);
      }));
    }
    for (const He of String(Ee.className || "").trim().split(/\s+/))
      He && we.add(He);
    const Oe = ge.className = [...we].join(" ");
    return { type: ee.type, className: Oe, selector: he, props: ge, toString: () => Oe, deferredInjector: de };
  };
  return s(Be, { className: ie, selector: he, [l]: ee, toString: () => (ne.rules.styled.cache.has(ie) || Be(), ie) });
}, L = (Q) => {
  let ee = "";
  const ne = [], ie = {}, ae = [];
  for (const [ce, , , , le, de] of Q) {
    ee === "" && (ee = ce), ne.push(ce), ae.push(...de);
    for (const ye in le) {
      const he = le[ye];
      (ie[ye] === void 0 || he !== "undefined" || de.includes(he)) && (ie[ye] = he);
    }
  }
  return [ee, ne, ie, new Set(ae)];
}, O = (Q, ee, ne, ie) => {
  const ae = [];
  e:
    for (let [ce, le, de] of Q) {
      if (de)
        continue;
      let ye, he = 0, Be = !1;
      for (ye in ce) {
        const Ee = ce[ye];
        let me = ee[ye];
        if (me !== Ee) {
          if (typeof me != "object" || !me)
            continue e;
          {
            let ge, be, we = 0;
            for (const Oe in me) {
              if (Ee === String(me[Oe])) {
                if (Oe !== "@initial") {
                  const He = Oe.slice(1);
                  (be = be || []).push(He in ne ? ne[He] : Oe.replace(/^@media ?/, "")), Be = !0;
                }
                he += we, ge = !0;
              }
              ++we;
            }
            if (be && be.length && (le = { ["@media " + be.join(", ")]: le }), !ge)
              continue e;
          }
        }
      }
      (ae[he] = ae[he] || []).push([ie ? "cv" : `${ye}-${ce[ye]}`, le, Be]);
    }
  return ae;
}, A = {}, N = o(), D = (Q, ee) => N(Q, () => (...ne) => {
  const ie = () => {
    for (let ae of ne) {
      ae = typeof ae == "object" && ae || {};
      let ce = z(ae);
      if (!ee.rules.global.cache.has(ce)) {
        if (ee.rules.global.cache.add(ce), "@import" in ae) {
          let le = [].indexOf.call(ee.sheet.cssRules, ee.rules.themed.group) - 1;
          for (let de of [].concat(ae["@import"]))
            de = de.includes('"') || de.includes("'") ? de : `"${de}"`, ee.sheet.insertRule(`@import ${de};`, le++);
          delete ae["@import"];
        }
        $(ae, [], [], Q, (le) => {
          ee.rules.global.apply(le);
        });
      }
    }
    return "";
  };
  return s(ie, { toString: ie });
}), H = o(), V = (Q, ee) => H(Q, () => (ne) => {
  const ie = `${S(Q.prefix)}k-${z(ne)}`, ae = () => {
    if (!ee.rules.global.cache.has(ie)) {
      ee.rules.global.cache.add(ie);
      const ce = [];
      $(ne, [], [], Q, (de) => ce.push(de));
      const le = `@keyframes ${ie}{${ce.join("")}}`;
      ee.rules.global.apply(le);
    }
    return ie;
  };
  return s(ae, { get name() {
    return ae();
  }, toString: ae });
}), G = class {
  constructor(Q, ee, ne, ie) {
    this.token = Q == null ? "" : String(Q), this.value = ee == null ? "" : String(ee), this.scale = ne == null ? "" : String(ne), this.prefix = ie == null ? "" : String(ie);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
}, F = o(), J = (Q, ee) => F(Q, () => (ne, ie) => {
  ie = typeof ne == "object" && ne || Object(ie);
  const ae = `.${ne = (ne = typeof ne == "string" ? ne : "") || `${S(Q.prefix)}t-${z(ie)}`}`, ce = {}, le = [];
  for (const ye in ie) {
    ce[ye] = {};
    for (const he in ie[ye]) {
      const Be = `--${S(Q.prefix)}${ye}-${he}`, Ee = k(String(ie[ye][he]), Q.prefix, ye);
      ce[ye][he] = new G(he, Ee, ye, Q.prefix), le.push(`${Be}:${Ee}`);
    }
  }
  const de = () => {
    if (le.length && !ee.rules.themed.cache.has(ne)) {
      ee.rules.themed.cache.add(ne);
      const ye = `${ie === Q.theme ? ":root," : ""}.${ne}{${le.join(";")}}`;
      ee.rules.themed.apply(ye);
    }
    return ne;
  };
  return { ...ce, get className() {
    return de();
  }, selector: ae, toString: de };
}), U = o(), X, Y = o(), q = (Q) => {
  const ee = ((ne) => {
    let ie = !1;
    const ae = U(ne, (ce) => {
      ie = !0;
      const le = "prefix" in (ce = typeof ce == "object" && ce || {}) ? String(ce.prefix) : "", de = typeof ce.media == "object" && ce.media || {}, ye = typeof ce.root == "object" ? ce.root || null : globalThis.document || null, he = typeof ce.theme == "object" && ce.theme || {}, Be = { prefix: le, media: de, theme: he, themeMap: typeof ce.themeMap == "object" && ce.themeMap || { ...n }, utils: typeof ce.utils == "object" && ce.utils || {} }, Ee = E(ye), me = { css: M(Be, Ee), globalCss: D(Be, Ee), keyframes: V(Be, Ee), createTheme: J(Be, Ee), reset() {
        Ee.reset(), me.theme.toString();
      }, theme: {}, sheet: Ee, config: Be, prefix: le, getCssText: Ee.toString, toString: Ee.toString };
      return String(me.theme = me.createTheme(he)), me;
    });
    return ie || ae.reset(), ae;
  })(Q);
  return ee.styled = (({ config: ne, sheet: ie }) => Y(ne, () => {
    const ae = M(ne, ie);
    return (...ce) => {
      const le = ae(...ce), de = le[l].type, ye = React.forwardRef((he, Be) => {
        const Ee = he && he.as || de, { props: me, deferredInjector: ge } = le(he);
        return delete me.as, me.ref = Be, ge ? React.createElement(React.Fragment, null, React.createElement(Ee, me), React.createElement(ge, null)) : React.createElement(Ee, me);
      });
      return ye.className = le.className, ye.displayName = `Styled.${de.displayName || de.name || de}`, ye.selector = le.selector, ye.toString = () => le.selector, ye[l] = le[l], ye;
    };
  }))(ee), ee;
}, K = () => X || (X = q()), re = (...Q) => K().styled(...Q);
globalThis && globalThis.__awaiter;
globalThis && globalThis.__generator;
re("button", {
  border: "none",
  background: "linear-gradient(93.07deg, #FFD719 0.61%, #F754D4 33.98%, #1FD1EC 65.84%, #48FA6B 97.7%)",
  padding: "2px",
  borderRadius: "10px",
  cursor: "pointer",
  transition: "transform 0.3s",
  "&:hover": {
    transform: "scale(1.03)"
  },
  "& > div": {
    display: "flex",
    flexDirection: "row",
    alignItems: "center",
    background: "white",
    padding: "5px 12px",
    borderRadius: "10px",
    fontSize: "16px",
    fontWeight: 600
  },
  "& .dark": {
    background: "#111827",
    color: "white"
  },
  "& img": {
    marginRight: "9px"
  },
  variants: {
    dark: {
      true: {
        "& > div": {
          background: "#111827",
          color: "white"
        }
      }
    }
  }
});
globalThis && globalThis.__awaiter;
globalThis && globalThis.__generator;
const alphabet$1 = "abcdefghijklmnopqrstuvwxyz234567", lookupTable$1 = /* @__PURE__ */ Object.create(null);
for (let Q = 0; Q < alphabet$1.length; Q++)
  lookupTable$1[alphabet$1[Q]] = Q;
lookupTable$1[0] = lookupTable$1.o;
lookupTable$1[1] = lookupTable$1.i;
function encode$6(Q) {
  let ee = 0, ne = 0, ie = "";
  function ae(ce) {
    return ee < 0 ? ne |= ce >> -ee : ne = ce << ee & 248, ee > 3 ? (ee -= 8, 1) : (ee < 4 && (ie += alphabet$1[ne >> 3], ee += 5), 0);
  }
  for (let ce = 0; ce < Q.length; )
    ce += ae(Q[ce]);
  return ie + (ee < 0 ? alphabet$1[ne >> 3] : "");
}
function decode$6(Q) {
  let ee = 0, ne = 0;
  const ie = new Uint8Array(Q.length * 4 / 3 | 0);
  let ae = 0;
  function ce(le) {
    let de = lookupTable$1[le.toLowerCase()];
    if (de === void 0)
      throw new Error(`Invalid character: ${JSON.stringify(le)}`);
    de <<= 3, ne |= de >>> ee, ee += 5, ee >= 8 && (ie[ae++] = ne, ee -= 8, ee > 0 ? ne = de << 5 - ee & 255 : ne = 0);
  }
  for (const le of Q)
    ce(le);
  return ie.slice(0, ae);
}
const lookUpTable$1 = new Uint32Array([
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
]);
function getCrc32$1(Q) {
  const ee = new Uint8Array(Q);
  let ne = -1;
  for (let ie = 0; ie < ee.length; ie++) {
    const ce = (ee[ie] ^ ne) & 255;
    ne = lookUpTable$1[ce] ^ ne >>> 8;
  }
  return (ne ^ -1) >>> 0;
}
var sha256$1 = { exports: {} };
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
(function(module) {
  (function() {
    var ERROR = "input is invalid type", WINDOW = typeof window == "object", root = WINDOW ? window : {};
    root.JS_SHA256_NO_WINDOW && (WINDOW = !1);
    var WEB_WORKER = !WINDOW && typeof self == "object", NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
    NODE_JS ? root = commonjsGlobal : WEB_WORKER && (root = self);
    var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && !0 && module.exports, ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", HEX_CHARS = "0123456789abcdef".split(""), EXTRA = [-2147483648, 8388608, 32768, 128], SHIFT = [24, 16, 8, 0], K = [
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ], OUTPUT_TYPES = ["hex", "array", "digest", "arrayBuffer"], blocks = [];
    (root.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(Q) {
      return Object.prototype.toString.call(Q) === "[object Array]";
    }), ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(Q) {
      return typeof Q == "object" && Q.buffer && Q.buffer.constructor === ArrayBuffer;
    });
    var createOutputMethod = function(Q, ee) {
      return function(ne) {
        return new Sha256(ee, !0).update(ne)[Q]();
      };
    }, createMethod = function(Q) {
      var ee = createOutputMethod("hex", Q);
      NODE_JS && (ee = nodeWrap(ee, Q)), ee.create = function() {
        return new Sha256(Q);
      }, ee.update = function(ae) {
        return ee.create().update(ae);
      };
      for (var ne = 0; ne < OUTPUT_TYPES.length; ++ne) {
        var ie = OUTPUT_TYPES[ne];
        ee[ie] = createOutputMethod(ie, Q);
      }
      return ee;
    }, nodeWrap = function(method, is224) {
      var crypto = eval("require('crypto')"), Buffer = eval("require('buffer').Buffer"), algorithm = is224 ? "sha224" : "sha256", nodeMethod = function(Q) {
        if (typeof Q == "string")
          return crypto.createHash(algorithm).update(Q, "utf8").digest("hex");
        if (Q == null)
          throw new Error(ERROR);
        return Q.constructor === ArrayBuffer && (Q = new Uint8Array(Q)), Array.isArray(Q) || ArrayBuffer.isView(Q) || Q.constructor === Buffer ? crypto.createHash(algorithm).update(new Buffer(Q)).digest("hex") : method(Q);
      };
      return nodeMethod;
    }, createHmacOutputMethod = function(Q, ee) {
      return function(ne, ie) {
        return new HmacSha256(ne, ee, !0).update(ie)[Q]();
      };
    }, createHmacMethod = function(Q) {
      var ee = createHmacOutputMethod("hex", Q);
      ee.create = function(ae) {
        return new HmacSha256(ae, Q);
      }, ee.update = function(ae, ce) {
        return ee.create(ae).update(ce);
      };
      for (var ne = 0; ne < OUTPUT_TYPES.length; ++ne) {
        var ie = OUTPUT_TYPES[ne];
        ee[ie] = createHmacOutputMethod(ie, Q);
      }
      return ee;
    };
    function Sha256(Q, ee) {
      ee ? (blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], Q ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = Q;
    }
    Sha256.prototype.update = function(Q) {
      if (!this.finalized) {
        var ee, ne = typeof Q;
        if (ne !== "string") {
          if (ne === "object") {
            if (Q === null)
              throw new Error(ERROR);
            if (ARRAY_BUFFER && Q.constructor === ArrayBuffer)
              Q = new Uint8Array(Q);
            else if (!Array.isArray(Q) && (!ARRAY_BUFFER || !ArrayBuffer.isView(Q)))
              throw new Error(ERROR);
          } else
            throw new Error(ERROR);
          ee = !0;
        }
        for (var ie, ae = 0, ce, le = Q.length, de = this.blocks; ae < le; ) {
          if (this.hashed && (this.hashed = !1, de[0] = this.block, de[16] = de[1] = de[2] = de[3] = de[4] = de[5] = de[6] = de[7] = de[8] = de[9] = de[10] = de[11] = de[12] = de[13] = de[14] = de[15] = 0), ee)
            for (ce = this.start; ae < le && ce < 64; ++ae)
              de[ce >> 2] |= Q[ae] << SHIFT[ce++ & 3];
          else
            for (ce = this.start; ae < le && ce < 64; ++ae)
              ie = Q.charCodeAt(ae), ie < 128 ? de[ce >> 2] |= ie << SHIFT[ce++ & 3] : ie < 2048 ? (de[ce >> 2] |= (192 | ie >> 6) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]) : ie < 55296 || ie >= 57344 ? (de[ce >> 2] |= (224 | ie >> 12) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie >> 6 & 63) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]) : (ie = 65536 + ((ie & 1023) << 10 | Q.charCodeAt(++ae) & 1023), de[ce >> 2] |= (240 | ie >> 18) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie >> 12 & 63) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie >> 6 & 63) << SHIFT[ce++ & 3], de[ce >> 2] |= (128 | ie & 63) << SHIFT[ce++ & 3]);
          this.lastByteIndex = ce, this.bytes += ce - this.start, ce >= 64 ? (this.block = de[16], this.start = ce - 64, this.hash(), this.hashed = !0) : this.start = ce;
        }
        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
      }
    }, Sha256.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = !0;
        var Q = this.blocks, ee = this.lastByteIndex;
        Q[16] = this.block, Q[ee >> 2] |= EXTRA[ee & 3], this.block = Q[16], ee >= 56 && (this.hashed || this.hash(), Q[0] = this.block, Q[16] = Q[1] = Q[2] = Q[3] = Q[4] = Q[5] = Q[6] = Q[7] = Q[8] = Q[9] = Q[10] = Q[11] = Q[12] = Q[13] = Q[14] = Q[15] = 0), Q[14] = this.hBytes << 3 | this.bytes >>> 29, Q[15] = this.bytes << 3, this.hash();
      }
    }, Sha256.prototype.hash = function() {
      var Q = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, ae = this.h4, ce = this.h5, le = this.h6, de = this.h7, ye = this.blocks, he, Be, Ee, me, ge, be, we, Oe, He, Se, Ge;
      for (he = 16; he < 64; ++he)
        ge = ye[he - 15], Be = (ge >>> 7 | ge << 25) ^ (ge >>> 18 | ge << 14) ^ ge >>> 3, ge = ye[he - 2], Ee = (ge >>> 17 | ge << 15) ^ (ge >>> 19 | ge << 13) ^ ge >>> 10, ye[he] = ye[he - 16] + Be + ye[he - 7] + Ee << 0;
      for (Ge = ee & ne, he = 0; he < 64; he += 4)
        this.first ? (this.is224 ? (Oe = 300032, ge = ye[0] - 1413257819, de = ge - 150054599 << 0, ie = ge + 24177077 << 0) : (Oe = 704751109, ge = ye[0] - 210244248, de = ge - 1521486534 << 0, ie = ge + 143694565 << 0), this.first = !1) : (Be = (Q >>> 2 | Q << 30) ^ (Q >>> 13 | Q << 19) ^ (Q >>> 22 | Q << 10), Ee = (ae >>> 6 | ae << 26) ^ (ae >>> 11 | ae << 21) ^ (ae >>> 25 | ae << 7), Oe = Q & ee, me = Oe ^ Q & ne ^ Ge, we = ae & ce ^ ~ae & le, ge = de + Ee + we + K[he] + ye[he], be = Be + me, de = ie + ge << 0, ie = ge + be << 0), Be = (ie >>> 2 | ie << 30) ^ (ie >>> 13 | ie << 19) ^ (ie >>> 22 | ie << 10), Ee = (de >>> 6 | de << 26) ^ (de >>> 11 | de << 21) ^ (de >>> 25 | de << 7), He = ie & Q, me = He ^ ie & ee ^ Oe, we = de & ae ^ ~de & ce, ge = le + Ee + we + K[he + 1] + ye[he + 1], be = Be + me, le = ne + ge << 0, ne = ge + be << 0, Be = (ne >>> 2 | ne << 30) ^ (ne >>> 13 | ne << 19) ^ (ne >>> 22 | ne << 10), Ee = (le >>> 6 | le << 26) ^ (le >>> 11 | le << 21) ^ (le >>> 25 | le << 7), Se = ne & ie, me = Se ^ ne & Q ^ He, we = le & de ^ ~le & ae, ge = ce + Ee + we + K[he + 2] + ye[he + 2], be = Be + me, ce = ee + ge << 0, ee = ge + be << 0, Be = (ee >>> 2 | ee << 30) ^ (ee >>> 13 | ee << 19) ^ (ee >>> 22 | ee << 10), Ee = (ce >>> 6 | ce << 26) ^ (ce >>> 11 | ce << 21) ^ (ce >>> 25 | ce << 7), Ge = ee & ne, me = Ge ^ ee & ie ^ Se, we = ce & le ^ ~ce & de, ge = ae + Ee + we + K[he + 3] + ye[he + 3], be = Be + me, ae = Q + ge << 0, Q = ge + be << 0;
      this.h0 = this.h0 + Q << 0, this.h1 = this.h1 + ee << 0, this.h2 = this.h2 + ne << 0, this.h3 = this.h3 + ie << 0, this.h4 = this.h4 + ae << 0, this.h5 = this.h5 + ce << 0, this.h6 = this.h6 + le << 0, this.h7 = this.h7 + de << 0;
    }, Sha256.prototype.hex = function() {
      this.finalize();
      var Q = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, ae = this.h4, ce = this.h5, le = this.h6, de = this.h7, ye = HEX_CHARS[Q >> 28 & 15] + HEX_CHARS[Q >> 24 & 15] + HEX_CHARS[Q >> 20 & 15] + HEX_CHARS[Q >> 16 & 15] + HEX_CHARS[Q >> 12 & 15] + HEX_CHARS[Q >> 8 & 15] + HEX_CHARS[Q >> 4 & 15] + HEX_CHARS[Q & 15] + HEX_CHARS[ee >> 28 & 15] + HEX_CHARS[ee >> 24 & 15] + HEX_CHARS[ee >> 20 & 15] + HEX_CHARS[ee >> 16 & 15] + HEX_CHARS[ee >> 12 & 15] + HEX_CHARS[ee >> 8 & 15] + HEX_CHARS[ee >> 4 & 15] + HEX_CHARS[ee & 15] + HEX_CHARS[ne >> 28 & 15] + HEX_CHARS[ne >> 24 & 15] + HEX_CHARS[ne >> 20 & 15] + HEX_CHARS[ne >> 16 & 15] + HEX_CHARS[ne >> 12 & 15] + HEX_CHARS[ne >> 8 & 15] + HEX_CHARS[ne >> 4 & 15] + HEX_CHARS[ne & 15] + HEX_CHARS[ie >> 28 & 15] + HEX_CHARS[ie >> 24 & 15] + HEX_CHARS[ie >> 20 & 15] + HEX_CHARS[ie >> 16 & 15] + HEX_CHARS[ie >> 12 & 15] + HEX_CHARS[ie >> 8 & 15] + HEX_CHARS[ie >> 4 & 15] + HEX_CHARS[ie & 15] + HEX_CHARS[ae >> 28 & 15] + HEX_CHARS[ae >> 24 & 15] + HEX_CHARS[ae >> 20 & 15] + HEX_CHARS[ae >> 16 & 15] + HEX_CHARS[ae >> 12 & 15] + HEX_CHARS[ae >> 8 & 15] + HEX_CHARS[ae >> 4 & 15] + HEX_CHARS[ae & 15] + HEX_CHARS[ce >> 28 & 15] + HEX_CHARS[ce >> 24 & 15] + HEX_CHARS[ce >> 20 & 15] + HEX_CHARS[ce >> 16 & 15] + HEX_CHARS[ce >> 12 & 15] + HEX_CHARS[ce >> 8 & 15] + HEX_CHARS[ce >> 4 & 15] + HEX_CHARS[ce & 15] + HEX_CHARS[le >> 28 & 15] + HEX_CHARS[le >> 24 & 15] + HEX_CHARS[le >> 20 & 15] + HEX_CHARS[le >> 16 & 15] + HEX_CHARS[le >> 12 & 15] + HEX_CHARS[le >> 8 & 15] + HEX_CHARS[le >> 4 & 15] + HEX_CHARS[le & 15];
      return this.is224 || (ye += HEX_CHARS[de >> 28 & 15] + HEX_CHARS[de >> 24 & 15] + HEX_CHARS[de >> 20 & 15] + HEX_CHARS[de >> 16 & 15] + HEX_CHARS[de >> 12 & 15] + HEX_CHARS[de >> 8 & 15] + HEX_CHARS[de >> 4 & 15] + HEX_CHARS[de & 15]), ye;
    }, Sha256.prototype.toString = Sha256.prototype.hex, Sha256.prototype.digest = function() {
      this.finalize();
      var Q = this.h0, ee = this.h1, ne = this.h2, ie = this.h3, ae = this.h4, ce = this.h5, le = this.h6, de = this.h7, ye = [
        Q >> 24 & 255,
        Q >> 16 & 255,
        Q >> 8 & 255,
        Q & 255,
        ee >> 24 & 255,
        ee >> 16 & 255,
        ee >> 8 & 255,
        ee & 255,
        ne >> 24 & 255,
        ne >> 16 & 255,
        ne >> 8 & 255,
        ne & 255,
        ie >> 24 & 255,
        ie >> 16 & 255,
        ie >> 8 & 255,
        ie & 255,
        ae >> 24 & 255,
        ae >> 16 & 255,
        ae >> 8 & 255,
        ae & 255,
        ce >> 24 & 255,
        ce >> 16 & 255,
        ce >> 8 & 255,
        ce & 255,
        le >> 24 & 255,
        le >> 16 & 255,
        le >> 8 & 255,
        le & 255
      ];
      return this.is224 || ye.push(de >> 24 & 255, de >> 16 & 255, de >> 8 & 255, de & 255), ye;
    }, Sha256.prototype.array = Sha256.prototype.digest, Sha256.prototype.arrayBuffer = function() {
      this.finalize();
      var Q = new ArrayBuffer(this.is224 ? 28 : 32), ee = new DataView(Q);
      return ee.setUint32(0, this.h0), ee.setUint32(4, this.h1), ee.setUint32(8, this.h2), ee.setUint32(12, this.h3), ee.setUint32(16, this.h4), ee.setUint32(20, this.h5), ee.setUint32(24, this.h6), this.is224 || ee.setUint32(28, this.h7), Q;
    };
    function HmacSha256(Q, ee, ne) {
      var ie, ae = typeof Q;
      if (ae === "string") {
        var ce = [], le = Q.length, de = 0, ye;
        for (ie = 0; ie < le; ++ie)
          ye = Q.charCodeAt(ie), ye < 128 ? ce[de++] = ye : ye < 2048 ? (ce[de++] = 192 | ye >> 6, ce[de++] = 128 | ye & 63) : ye < 55296 || ye >= 57344 ? (ce[de++] = 224 | ye >> 12, ce[de++] = 128 | ye >> 6 & 63, ce[de++] = 128 | ye & 63) : (ye = 65536 + ((ye & 1023) << 10 | Q.charCodeAt(++ie) & 1023), ce[de++] = 240 | ye >> 18, ce[de++] = 128 | ye >> 12 & 63, ce[de++] = 128 | ye >> 6 & 63, ce[de++] = 128 | ye & 63);
        Q = ce;
      } else if (ae === "object") {
        if (Q === null)
          throw new Error(ERROR);
        if (ARRAY_BUFFER && Q.constructor === ArrayBuffer)
          Q = new Uint8Array(Q);
        else if (!Array.isArray(Q) && (!ARRAY_BUFFER || !ArrayBuffer.isView(Q)))
          throw new Error(ERROR);
      } else
        throw new Error(ERROR);
      Q.length > 64 && (Q = new Sha256(ee, !0).update(Q).array());
      var he = [], Be = [];
      for (ie = 0; ie < 64; ++ie) {
        var Ee = Q[ie] || 0;
        he[ie] = 92 ^ Ee, Be[ie] = 54 ^ Ee;
      }
      Sha256.call(this, ee, ne), this.update(Be), this.oKeyPad = he, this.inner = !0, this.sharedMemory = ne;
    }
    HmacSha256.prototype = new Sha256(), HmacSha256.prototype.finalize = function() {
      if (Sha256.prototype.finalize.call(this), this.inner) {
        this.inner = !1;
        var Q = this.array();
        Sha256.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(Q), Sha256.prototype.finalize.call(this);
      }
    };
    var exports = createMethod();
    exports.sha256 = exports, exports.sha224 = createMethod(!0), exports.sha256.hmac = createHmacMethod(), exports.sha224.hmac = createHmacMethod(!0), COMMON_JS ? module.exports = exports : (root.sha256 = exports.sha256, root.sha224 = exports.sha224);
  })();
})(sha256$1);
function sha224$2(Q) {
  const ee = sha256$1.exports.sha224.create();
  return ee.update(Q), new Uint8Array(ee.array());
}
const SELF_AUTHENTICATING_SUFFIX$1 = 2, ANONYMOUS_SUFFIX$1 = 4, MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = "aaaaa-aa", fromHexString$1 = (Q) => {
  var ee;
  return new Uint8Array(((ee = Q.match(/.{1,2}/g)) !== null && ee !== void 0 ? ee : []).map((ne) => parseInt(ne, 16)));
}, toHexString$1 = (Q) => Q.reduce((ee, ne) => ee + ne.toString(16).padStart(2, "0"), "");
class Principal$3 {
  constructor(ee) {
    this._arr = ee, this._isPrincipal = !0;
  }
  static anonymous() {
    return new this(new Uint8Array([ANONYMOUS_SUFFIX$1]));
  }
  static managementCanister() {
    return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);
  }
  static selfAuthenticating(ee) {
    const ne = sha224$2(ee);
    return new this(new Uint8Array([...ne, SELF_AUTHENTICATING_SUFFIX$1]));
  }
  static from(ee) {
    if (typeof ee == "string")
      return Principal$3.fromText(ee);
    if (typeof ee == "object" && ee !== null && ee._isPrincipal === !0)
      return new Principal$3(ee._arr);
    throw new Error(`Impossible to convert ${JSON.stringify(ee)} to Principal.`);
  }
  static fromHex(ee) {
    return new this(fromHexString$1(ee));
  }
  static fromText(ee) {
    const ne = ee.toLowerCase().replace(/-/g, "");
    let ie = decode$6(ne);
    ie = ie.slice(4, ie.length);
    const ae = new this(ie);
    if (ae.toText() !== ee)
      throw new Error(`Principal "${ae.toText()}" does not have a valid checksum (original value "${ee}" may not be a valid Principal ID).`);
    return ae;
  }
  static fromUint8Array(ee) {
    return new this(ee);
  }
  isAnonymous() {
    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX$1;
  }
  toUint8Array() {
    return this._arr;
  }
  toHex() {
    return toHexString$1(this._arr).toUpperCase();
  }
  toText() {
    const ee = new ArrayBuffer(4);
    new DataView(ee).setUint32(0, getCrc32$1(this._arr));
    const ie = new Uint8Array(ee), ae = Uint8Array.from(this._arr), ce = new Uint8Array([...ie, ...ae]), de = encode$6(ce).match(/.{1,5}/g);
    if (!de)
      throw new Error();
    return de.join("-");
  }
  toString() {
    return this.toText();
  }
  compareTo(ee) {
    for (let ne = 0; ne < Math.min(this._arr.length, ee._arr.length); ne++) {
      if (this._arr[ne] < ee._arr[ne])
        return "lt";
      if (this._arr[ne] > ee._arr[ne])
        return "gt";
    }
    return this._arr.length < ee._arr.length ? "lt" : this._arr.length > ee._arr.length ? "gt" : "eq";
  }
  ltEq(ee) {
    const ne = this.compareTo(ee);
    return ne == "lt" || ne == "eq";
  }
  gtEq(ee) {
    const ne = this.compareTo(ee);
    return ne == "gt" || ne == "eq";
  }
}
const tradeBoxNum = 6, inventoryBoxNum = 45, pageBoxNum = 18, itemTypes = {
  LAYER1: "layer1"
}, nullPrincipalId = Principal$3.fromText("rrkah-fqaaa-aaaaa-aaaaq-cai");
var dist = {}, registries = {}, nfts_registry = {}, axios$2 = { exports: {} }, axios$1 = { exports: {} }, bind$2 = function Q(ee, ne) {
  return function() {
    for (var ae = new Array(arguments.length), ce = 0; ce < ae.length; ce++)
      ae[ce] = arguments[ce];
    return ee.apply(ne, ae);
  };
}, bind$1 = bind$2, toString = Object.prototype.toString;
function isArray$1(Q) {
  return toString.call(Q) === "[object Array]";
}
function isUndefined(Q) {
  return typeof Q > "u";
}
function isBuffer(Q) {
  return Q !== null && !isUndefined(Q) && Q.constructor !== null && !isUndefined(Q.constructor) && typeof Q.constructor.isBuffer == "function" && Q.constructor.isBuffer(Q);
}
function isArrayBuffer(Q) {
  return toString.call(Q) === "[object ArrayBuffer]";
}
function isFormData(Q) {
  return typeof FormData < "u" && Q instanceof FormData;
}
function isArrayBufferView(Q) {
  var ee;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ee = ArrayBuffer.isView(Q) : ee = Q && Q.buffer && Q.buffer instanceof ArrayBuffer, ee;
}
function isString(Q) {
  return typeof Q == "string";
}
function isNumber(Q) {
  return typeof Q == "number";
}
function isObject(Q) {
  return Q !== null && typeof Q == "object";
}
function isPlainObject$2(Q) {
  if (toString.call(Q) !== "[object Object]")
    return !1;
  var ee = Object.getPrototypeOf(Q);
  return ee === null || ee === Object.prototype;
}
function isDate(Q) {
  return toString.call(Q) === "[object Date]";
}
function isFile(Q) {
  return toString.call(Q) === "[object File]";
}
function isBlob(Q) {
  return toString.call(Q) === "[object Blob]";
}
function isFunction$1(Q) {
  return toString.call(Q) === "[object Function]";
}
function isStream(Q) {
  return isObject(Q) && isFunction$1(Q.pipe);
}
function isURLSearchParams(Q) {
  return typeof URLSearchParams < "u" && Q instanceof URLSearchParams;
}
function trim(Q) {
  return Q.trim ? Q.trim() : Q.replace(/^\s+|\s+$/g, "");
}
function isStandardBrowserEnv() {
  return typeof navigator < "u" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS") ? !1 : typeof window < "u" && typeof document < "u";
}
function forEach(Q, ee) {
  if (!(Q === null || typeof Q > "u"))
    if (typeof Q != "object" && (Q = [Q]), isArray$1(Q))
      for (var ne = 0, ie = Q.length; ne < ie; ne++)
        ee.call(null, Q[ne], ne, Q);
    else
      for (var ae in Q)
        Object.prototype.hasOwnProperty.call(Q, ae) && ee.call(null, Q[ae], ae, Q);
}
function merge$1() {
  var Q = {};
  function ee(ae, ce) {
    isPlainObject$2(Q[ce]) && isPlainObject$2(ae) ? Q[ce] = merge$1(Q[ce], ae) : isPlainObject$2(ae) ? Q[ce] = merge$1({}, ae) : isArray$1(ae) ? Q[ce] = ae.slice() : Q[ce] = ae;
  }
  for (var ne = 0, ie = arguments.length; ne < ie; ne++)
    forEach(arguments[ne], ee);
  return Q;
}
function extend(Q, ee, ne) {
  return forEach(ee, function(ae, ce) {
    ne && typeof ae == "function" ? Q[ce] = bind$1(ae, ne) : Q[ce] = ae;
  }), Q;
}
function stripBOM(Q) {
  return Q.charCodeAt(0) === 65279 && (Q = Q.slice(1)), Q;
}
var utils$c = {
  isArray: isArray$1,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isObject,
  isPlainObject: isPlainObject$2,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isFunction: isFunction$1,
  isStream,
  isURLSearchParams,
  isStandardBrowserEnv,
  forEach,
  merge: merge$1,
  extend,
  trim,
  stripBOM
}, utils$b = utils$c;
function encode$5(Q) {
  return encodeURIComponent(Q).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
var buildURL$1 = function Q(ee, ne, ie) {
  if (!ne)
    return ee;
  var ae;
  if (ie)
    ae = ie(ne);
  else if (utils$b.isURLSearchParams(ne))
    ae = ne.toString();
  else {
    var ce = [];
    utils$b.forEach(ne, function(ye, he) {
      ye === null || typeof ye > "u" || (utils$b.isArray(ye) ? he = he + "[]" : ye = [ye], utils$b.forEach(ye, function(Ee) {
        utils$b.isDate(Ee) ? Ee = Ee.toISOString() : utils$b.isObject(Ee) && (Ee = JSON.stringify(Ee)), ce.push(encode$5(he) + "=" + encode$5(Ee));
      }));
    }), ae = ce.join("&");
  }
  if (ae) {
    var le = ee.indexOf("#");
    le !== -1 && (ee = ee.slice(0, le)), ee += (ee.indexOf("?") === -1 ? "?" : "&") + ae;
  }
  return ee;
}, utils$a = utils$c;
function InterceptorManager$1() {
  this.handlers = [];
}
InterceptorManager$1.prototype.use = function Q(ee, ne, ie) {
  return this.handlers.push({
    fulfilled: ee,
    rejected: ne,
    synchronous: ie ? ie.synchronous : !1,
    runWhen: ie ? ie.runWhen : null
  }), this.handlers.length - 1;
};
InterceptorManager$1.prototype.eject = function Q(ee) {
  this.handlers[ee] && (this.handlers[ee] = null);
};
InterceptorManager$1.prototype.forEach = function Q(ee) {
  utils$a.forEach(this.handlers, function(ie) {
    ie !== null && ee(ie);
  });
};
var InterceptorManager_1 = InterceptorManager$1, utils$9 = utils$c, normalizeHeaderName = function Q(ee, ne) {
  utils$9.forEach(ee, function(ae, ce) {
    ce !== ne && ce.toUpperCase() === ne.toUpperCase() && (ee[ne] = ae, delete ee[ce]);
  });
}, enhanceError = function Q(ee, ne, ie, ae, ce) {
  return ee.config = ne, ie && (ee.code = ie), ee.request = ae, ee.response = ce, ee.isAxiosError = !0, ee.toJSON = function() {
    return {
      message: this.message,
      name: this.name,
      description: this.description,
      number: this.number,
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }, ee;
}, createError, hasRequiredCreateError;
function requireCreateError() {
  if (hasRequiredCreateError)
    return createError;
  hasRequiredCreateError = 1;
  var Q = enhanceError;
  return createError = function(ne, ie, ae, ce, le) {
    var de = new Error(ne);
    return Q(de, ie, ae, ce, le);
  }, createError;
}
var settle, hasRequiredSettle;
function requireSettle() {
  if (hasRequiredSettle)
    return settle;
  hasRequiredSettle = 1;
  var Q = requireCreateError();
  return settle = function(ne, ie, ae) {
    var ce = ae.config.validateStatus;
    !ae.status || !ce || ce(ae.status) ? ne(ae) : ie(Q(
      "Request failed with status code " + ae.status,
      ae.config,
      null,
      ae.request,
      ae
    ));
  }, settle;
}
var cookies, hasRequiredCookies;
function requireCookies() {
  if (hasRequiredCookies)
    return cookies;
  hasRequiredCookies = 1;
  var Q = utils$c;
  return cookies = Q.isStandardBrowserEnv() ? function() {
    return {
      write: function(ie, ae, ce, le, de, ye) {
        var he = [];
        he.push(ie + "=" + encodeURIComponent(ae)), Q.isNumber(ce) && he.push("expires=" + new Date(ce).toGMTString()), Q.isString(le) && he.push("path=" + le), Q.isString(de) && he.push("domain=" + de), ye === !0 && he.push("secure"), document.cookie = he.join("; ");
      },
      read: function(ie) {
        var ae = document.cookie.match(new RegExp("(^|;\\s*)(" + ie + ")=([^;]*)"));
        return ae ? decodeURIComponent(ae[3]) : null;
      },
      remove: function(ie) {
        this.write(ie, "", Date.now() - 864e5);
      }
    };
  }() : function() {
    return {
      write: function() {
      },
      read: function() {
        return null;
      },
      remove: function() {
      }
    };
  }(), cookies;
}
var isAbsoluteURL, hasRequiredIsAbsoluteURL;
function requireIsAbsoluteURL() {
  return hasRequiredIsAbsoluteURL || (hasRequiredIsAbsoluteURL = 1, isAbsoluteURL = function(ee) {
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(ee);
  }), isAbsoluteURL;
}
var combineURLs, hasRequiredCombineURLs;
function requireCombineURLs() {
  return hasRequiredCombineURLs || (hasRequiredCombineURLs = 1, combineURLs = function(ee, ne) {
    return ne ? ee.replace(/\/+$/, "") + "/" + ne.replace(/^\/+/, "") : ee;
  }), combineURLs;
}
var buildFullPath, hasRequiredBuildFullPath;
function requireBuildFullPath() {
  if (hasRequiredBuildFullPath)
    return buildFullPath;
  hasRequiredBuildFullPath = 1;
  var Q = requireIsAbsoluteURL(), ee = requireCombineURLs();
  return buildFullPath = function(ie, ae) {
    return ie && !Q(ae) ? ee(ie, ae) : ae;
  }, buildFullPath;
}
var parseHeaders, hasRequiredParseHeaders;
function requireParseHeaders() {
  if (hasRequiredParseHeaders)
    return parseHeaders;
  hasRequiredParseHeaders = 1;
  var Q = utils$c, ee = [
    "age",
    "authorization",
    "content-length",
    "content-type",
    "etag",
    "expires",
    "from",
    "host",
    "if-modified-since",
    "if-unmodified-since",
    "last-modified",
    "location",
    "max-forwards",
    "proxy-authorization",
    "referer",
    "retry-after",
    "user-agent"
  ];
  return parseHeaders = function(ie) {
    var ae = {}, ce, le, de;
    return ie && Q.forEach(ie.split(`
`), function(he) {
      if (de = he.indexOf(":"), ce = Q.trim(he.substr(0, de)).toLowerCase(), le = Q.trim(he.substr(de + 1)), ce) {
        if (ae[ce] && ee.indexOf(ce) >= 0)
          return;
        ce === "set-cookie" ? ae[ce] = (ae[ce] ? ae[ce] : []).concat([le]) : ae[ce] = ae[ce] ? ae[ce] + ", " + le : le;
      }
    }), ae;
  }, parseHeaders;
}
var isURLSameOrigin, hasRequiredIsURLSameOrigin;
function requireIsURLSameOrigin() {
  if (hasRequiredIsURLSameOrigin)
    return isURLSameOrigin;
  hasRequiredIsURLSameOrigin = 1;
  var Q = utils$c;
  return isURLSameOrigin = Q.isStandardBrowserEnv() ? function() {
    var ne = /(msie|trident)/i.test(navigator.userAgent), ie = document.createElement("a"), ae;
    function ce(le) {
      var de = le;
      return ne && (ie.setAttribute("href", de), de = ie.href), ie.setAttribute("href", de), {
        href: ie.href,
        protocol: ie.protocol ? ie.protocol.replace(/:$/, "") : "",
        host: ie.host,
        search: ie.search ? ie.search.replace(/^\?/, "") : "",
        hash: ie.hash ? ie.hash.replace(/^#/, "") : "",
        hostname: ie.hostname,
        port: ie.port,
        pathname: ie.pathname.charAt(0) === "/" ? ie.pathname : "/" + ie.pathname
      };
    }
    return ae = ce(window.location.href), function(de) {
      var ye = Q.isString(de) ? ce(de) : de;
      return ye.protocol === ae.protocol && ye.host === ae.host;
    };
  }() : function() {
    return function() {
      return !0;
    };
  }(), isURLSameOrigin;
}
var Cancel_1, hasRequiredCancel;
function requireCancel() {
  if (hasRequiredCancel)
    return Cancel_1;
  hasRequiredCancel = 1;
  function Q(ee) {
    this.message = ee;
  }
  return Q.prototype.toString = function() {
    return "Cancel" + (this.message ? ": " + this.message : "");
  }, Q.prototype.__CANCEL__ = !0, Cancel_1 = Q, Cancel_1;
}
var xhr, hasRequiredXhr;
function requireXhr() {
  if (hasRequiredXhr)
    return xhr;
  hasRequiredXhr = 1;
  var Q = utils$c, ee = requireSettle(), ne = requireCookies(), ie = buildURL$1, ae = requireBuildFullPath(), ce = requireParseHeaders(), le = requireIsURLSameOrigin(), de = requireCreateError(), ye = requireDefaults(), he = requireCancel();
  return xhr = function(Ee) {
    return new Promise(function(ge, be) {
      var we = Ee.data, Oe = Ee.headers, He = Ee.responseType, Se;
      function Ge() {
        Ee.cancelToken && Ee.cancelToken.unsubscribe(Se), Ee.signal && Ee.signal.removeEventListener("abort", Se);
      }
      Q.isFormData(we) && delete Oe["Content-Type"];
      var Fe = new XMLHttpRequest();
      if (Ee.auth) {
        var Pe = Ee.auth.username || "", We = Ee.auth.password ? unescape(encodeURIComponent(Ee.auth.password)) : "";
        Oe.Authorization = "Basic " + btoa(Pe + ":" + We);
      }
      var tt = ae(Ee.baseURL, Ee.url);
      Fe.open(Ee.method.toUpperCase(), ie(tt, Ee.params, Ee.paramsSerializer), !0), Fe.timeout = Ee.timeout;
      function Et() {
        if (!!Fe) {
          var et = "getAllResponseHeaders" in Fe ? ce(Fe.getAllResponseHeaders()) : null, mt = !He || He === "text" || He === "json" ? Fe.responseText : Fe.response, Mt = {
            data: mt,
            status: Fe.status,
            statusText: Fe.statusText,
            headers: et,
            config: Ee,
            request: Fe
          };
          ee(function(yt) {
            ge(yt), Ge();
          }, function(yt) {
            be(yt), Ge();
          }, Mt), Fe = null;
        }
      }
      if ("onloadend" in Fe ? Fe.onloadend = Et : Fe.onreadystatechange = function() {
        !Fe || Fe.readyState !== 4 || Fe.status === 0 && !(Fe.responseURL && Fe.responseURL.indexOf("file:") === 0) || setTimeout(Et);
      }, Fe.onabort = function() {
        !Fe || (be(de("Request aborted", Ee, "ECONNABORTED", Fe)), Fe = null);
      }, Fe.onerror = function() {
        be(de("Network Error", Ee, null, Fe)), Fe = null;
      }, Fe.ontimeout = function() {
        var mt = Ee.timeout ? "timeout of " + Ee.timeout + "ms exceeded" : "timeout exceeded", Mt = Ee.transitional || ye.transitional;
        Ee.timeoutErrorMessage && (mt = Ee.timeoutErrorMessage), be(de(
          mt,
          Ee,
          Mt.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED",
          Fe
        )), Fe = null;
      }, Q.isStandardBrowserEnv()) {
        var Nt = (Ee.withCredentials || le(tt)) && Ee.xsrfCookieName ? ne.read(Ee.xsrfCookieName) : void 0;
        Nt && (Oe[Ee.xsrfHeaderName] = Nt);
      }
      "setRequestHeader" in Fe && Q.forEach(Oe, function(mt, Mt) {
        typeof we > "u" && Mt.toLowerCase() === "content-type" ? delete Oe[Mt] : Fe.setRequestHeader(Mt, mt);
      }), Q.isUndefined(Ee.withCredentials) || (Fe.withCredentials = !!Ee.withCredentials), He && He !== "json" && (Fe.responseType = Ee.responseType), typeof Ee.onDownloadProgress == "function" && Fe.addEventListener("progress", Ee.onDownloadProgress), typeof Ee.onUploadProgress == "function" && Fe.upload && Fe.upload.addEventListener("progress", Ee.onUploadProgress), (Ee.cancelToken || Ee.signal) && (Se = function(et) {
        !Fe || (be(!et || et && et.type ? new he("canceled") : et), Fe.abort(), Fe = null);
      }, Ee.cancelToken && Ee.cancelToken.subscribe(Se), Ee.signal && (Ee.signal.aborted ? Se() : Ee.signal.addEventListener("abort", Se))), we || (we = null), Fe.send(we);
    });
  }, xhr;
}
var defaults_1, hasRequiredDefaults;
function requireDefaults() {
  if (hasRequiredDefaults)
    return defaults_1;
  hasRequiredDefaults = 1;
  var Q = utils$c, ee = normalizeHeaderName, ne = enhanceError, ie = {
    "Content-Type": "application/x-www-form-urlencoded"
  };
  function ae(ye, he) {
    !Q.isUndefined(ye) && Q.isUndefined(ye["Content-Type"]) && (ye["Content-Type"] = he);
  }
  function ce() {
    var ye;
    return (typeof XMLHttpRequest < "u" || typeof process < "u" && Object.prototype.toString.call(process) === "[object process]") && (ye = requireXhr()), ye;
  }
  function le(ye, he, Be) {
    if (Q.isString(ye))
      try {
        return (he || JSON.parse)(ye), Q.trim(ye);
      } catch (Ee) {
        if (Ee.name !== "SyntaxError")
          throw Ee;
      }
    return (Be || JSON.stringify)(ye);
  }
  var de = {
    transitional: {
      silentJSONParsing: !0,
      forcedJSONParsing: !0,
      clarifyTimeoutError: !1
    },
    adapter: ce(),
    transformRequest: [function(he, Be) {
      return ee(Be, "Accept"), ee(Be, "Content-Type"), Q.isFormData(he) || Q.isArrayBuffer(he) || Q.isBuffer(he) || Q.isStream(he) || Q.isFile(he) || Q.isBlob(he) ? he : Q.isArrayBufferView(he) ? he.buffer : Q.isURLSearchParams(he) ? (ae(Be, "application/x-www-form-urlencoded;charset=utf-8"), he.toString()) : Q.isObject(he) || Be && Be["Content-Type"] === "application/json" ? (ae(Be, "application/json"), le(he)) : he;
    }],
    transformResponse: [function(he) {
      var Be = this.transitional || de.transitional, Ee = Be && Be.silentJSONParsing, me = Be && Be.forcedJSONParsing, ge = !Ee && this.responseType === "json";
      if (ge || me && Q.isString(he) && he.length)
        try {
          return JSON.parse(he);
        } catch (be) {
          if (ge)
            throw be.name === "SyntaxError" ? ne(be, this, "E_JSON_PARSE") : be;
        }
      return he;
    }],
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: function(he) {
      return he >= 200 && he < 300;
    },
    headers: {
      common: {
        Accept: "application/json, text/plain, */*"
      }
    }
  };
  return Q.forEach(["delete", "get", "head"], function(he) {
    de.headers[he] = {};
  }), Q.forEach(["post", "put", "patch"], function(he) {
    de.headers[he] = Q.merge(ie);
  }), defaults_1 = de, defaults_1;
}
var utils$8 = utils$c, defaults$2 = requireDefaults(), transformData$1 = function Q(ee, ne, ie) {
  var ae = this || defaults$2;
  return utils$8.forEach(ie, function(le) {
    ee = le.call(ae, ee, ne);
  }), ee;
}, isCancel$1, hasRequiredIsCancel;
function requireIsCancel() {
  return hasRequiredIsCancel || (hasRequiredIsCancel = 1, isCancel$1 = function(ee) {
    return !!(ee && ee.__CANCEL__);
  }), isCancel$1;
}
var utils$7 = utils$c, transformData = transformData$1, isCancel = requireIsCancel(), defaults$1 = requireDefaults(), Cancel = requireCancel();
function throwIfCancellationRequested(Q) {
  if (Q.cancelToken && Q.cancelToken.throwIfRequested(), Q.signal && Q.signal.aborted)
    throw new Cancel("canceled");
}
var dispatchRequest$1 = function Q(ee) {
  throwIfCancellationRequested(ee), ee.headers = ee.headers || {}, ee.data = transformData.call(
    ee,
    ee.data,
    ee.headers,
    ee.transformRequest
  ), ee.headers = utils$7.merge(
    ee.headers.common || {},
    ee.headers[ee.method] || {},
    ee.headers
  ), utils$7.forEach(
    ["delete", "get", "head", "post", "put", "patch", "common"],
    function(ae) {
      delete ee.headers[ae];
    }
  );
  var ne = ee.adapter || defaults$1.adapter;
  return ne(ee).then(function(ae) {
    return throwIfCancellationRequested(ee), ae.data = transformData.call(
      ee,
      ae.data,
      ae.headers,
      ee.transformResponse
    ), ae;
  }, function(ae) {
    return isCancel(ae) || (throwIfCancellationRequested(ee), ae && ae.response && (ae.response.data = transformData.call(
      ee,
      ae.response.data,
      ae.response.headers,
      ee.transformResponse
    ))), Promise.reject(ae);
  });
}, utils$6 = utils$c, mergeConfig$2 = function Q(ee, ne) {
  ne = ne || {};
  var ie = {};
  function ae(Be, Ee) {
    return utils$6.isPlainObject(Be) && utils$6.isPlainObject(Ee) ? utils$6.merge(Be, Ee) : utils$6.isPlainObject(Ee) ? utils$6.merge({}, Ee) : utils$6.isArray(Ee) ? Ee.slice() : Ee;
  }
  function ce(Be) {
    if (utils$6.isUndefined(ne[Be])) {
      if (!utils$6.isUndefined(ee[Be]))
        return ae(void 0, ee[Be]);
    } else
      return ae(ee[Be], ne[Be]);
  }
  function le(Be) {
    if (!utils$6.isUndefined(ne[Be]))
      return ae(void 0, ne[Be]);
  }
  function de(Be) {
    if (utils$6.isUndefined(ne[Be])) {
      if (!utils$6.isUndefined(ee[Be]))
        return ae(void 0, ee[Be]);
    } else
      return ae(void 0, ne[Be]);
  }
  function ye(Be) {
    if (Be in ne)
      return ae(ee[Be], ne[Be]);
    if (Be in ee)
      return ae(void 0, ee[Be]);
  }
  var he = {
    url: le,
    method: le,
    data: le,
    baseURL: de,
    transformRequest: de,
    transformResponse: de,
    paramsSerializer: de,
    timeout: de,
    timeoutMessage: de,
    withCredentials: de,
    adapter: de,
    responseType: de,
    xsrfCookieName: de,
    xsrfHeaderName: de,
    onUploadProgress: de,
    onDownloadProgress: de,
    decompress: de,
    maxContentLength: de,
    maxBodyLength: de,
    transport: de,
    httpAgent: de,
    httpsAgent: de,
    cancelToken: de,
    socketPath: de,
    responseEncoding: de,
    validateStatus: ye
  };
  return utils$6.forEach(Object.keys(ee).concat(Object.keys(ne)), function(Ee) {
    var me = he[Ee] || ce, ge = me(Ee);
    utils$6.isUndefined(ge) && me !== ye || (ie[Ee] = ge);
  }), ie;
}, data, hasRequiredData;
function requireData() {
  return hasRequiredData || (hasRequiredData = 1, data = {
    version: "0.24.0"
  }), data;
}
var VERSION = requireData().version, validators$1 = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach(function(Q, ee) {
  validators$1[Q] = function(ie) {
    return typeof ie === Q || "a" + (ee < 1 ? "n " : " ") + Q;
  };
});
var deprecatedWarnings = {};
validators$1.transitional = function Q(ee, ne, ie) {
  function ae(ce, le) {
    return "[Axios v" + VERSION + "] Transitional option '" + ce + "'" + le + (ie ? ". " + ie : "");
  }
  return function(ce, le, de) {
    if (ee === !1)
      throw new Error(ae(le, " has been removed" + (ne ? " in " + ne : "")));
    return ne && !deprecatedWarnings[le] && (deprecatedWarnings[le] = !0, console.warn(
      ae(
        le,
        " has been deprecated since v" + ne + " and will be removed in the near future"
      )
    )), ee ? ee(ce, le, de) : !0;
  };
};
function assertOptions(Q, ee, ne) {
  if (typeof Q != "object")
    throw new TypeError("options must be an object");
  for (var ie = Object.keys(Q), ae = ie.length; ae-- > 0; ) {
    var ce = ie[ae], le = ee[ce];
    if (le) {
      var de = Q[ce], ye = de === void 0 || le(de, ce, Q);
      if (ye !== !0)
        throw new TypeError("option " + ce + " must be " + ye);
      continue;
    }
    if (ne !== !0)
      throw Error("Unknown option " + ce);
  }
}
var validator$1 = {
  assertOptions,
  validators: validators$1
}, utils$5 = utils$c, buildURL = buildURL$1, InterceptorManager = InterceptorManager_1, dispatchRequest = dispatchRequest$1, mergeConfig$1 = mergeConfig$2, validator = validator$1, validators = validator.validators;
function Axios$1(Q) {
  this.defaults = Q, this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}
Axios$1.prototype.request = function Q(ee) {
  typeof ee == "string" ? (ee = arguments[1] || {}, ee.url = arguments[0]) : ee = ee || {}, ee = mergeConfig$1(this.defaults, ee), ee.method ? ee.method = ee.method.toLowerCase() : this.defaults.method ? ee.method = this.defaults.method.toLowerCase() : ee.method = "get";
  var ne = ee.transitional;
  ne !== void 0 && validator.assertOptions(ne, {
    silentJSONParsing: validators.transitional(validators.boolean),
    forcedJSONParsing: validators.transitional(validators.boolean),
    clarifyTimeoutError: validators.transitional(validators.boolean)
  }, !1);
  var ie = [], ae = !0;
  this.interceptors.request.forEach(function(me) {
    typeof me.runWhen == "function" && me.runWhen(ee) === !1 || (ae = ae && me.synchronous, ie.unshift(me.fulfilled, me.rejected));
  });
  var ce = [];
  this.interceptors.response.forEach(function(me) {
    ce.push(me.fulfilled, me.rejected);
  });
  var le;
  if (!ae) {
    var de = [dispatchRequest, void 0];
    for (Array.prototype.unshift.apply(de, ie), de = de.concat(ce), le = Promise.resolve(ee); de.length; )
      le = le.then(de.shift(), de.shift());
    return le;
  }
  for (var ye = ee; ie.length; ) {
    var he = ie.shift(), Be = ie.shift();
    try {
      ye = he(ye);
    } catch (Ee) {
      Be(Ee);
      break;
    }
  }
  try {
    le = dispatchRequest(ye);
  } catch (Ee) {
    return Promise.reject(Ee);
  }
  for (; ce.length; )
    le = le.then(ce.shift(), ce.shift());
  return le;
};
Axios$1.prototype.getUri = function Q(ee) {
  return ee = mergeConfig$1(this.defaults, ee), buildURL(ee.url, ee.params, ee.paramsSerializer).replace(/^\?/, "");
};
utils$5.forEach(["delete", "get", "head", "options"], function Q(ee) {
  Axios$1.prototype[ee] = function(ne, ie) {
    return this.request(mergeConfig$1(ie || {}, {
      method: ee,
      url: ne,
      data: (ie || {}).data
    }));
  };
});
utils$5.forEach(["post", "put", "patch"], function Q(ee) {
  Axios$1.prototype[ee] = function(ne, ie, ae) {
    return this.request(mergeConfig$1(ae || {}, {
      method: ee,
      url: ne,
      data: ie
    }));
  };
});
var Axios_1 = Axios$1, CancelToken_1, hasRequiredCancelToken;
function requireCancelToken() {
  if (hasRequiredCancelToken)
    return CancelToken_1;
  hasRequiredCancelToken = 1;
  var Q = requireCancel();
  function ee(ne) {
    if (typeof ne != "function")
      throw new TypeError("executor must be a function.");
    var ie;
    this.promise = new Promise(function(le) {
      ie = le;
    });
    var ae = this;
    this.promise.then(function(ce) {
      if (!!ae._listeners) {
        var le, de = ae._listeners.length;
        for (le = 0; le < de; le++)
          ae._listeners[le](ce);
        ae._listeners = null;
      }
    }), this.promise.then = function(ce) {
      var le, de = new Promise(function(ye) {
        ae.subscribe(ye), le = ye;
      }).then(ce);
      return de.cancel = function() {
        ae.unsubscribe(le);
      }, de;
    }, ne(function(le) {
      ae.reason || (ae.reason = new Q(le), ie(ae.reason));
    });
  }
  return ee.prototype.throwIfRequested = function() {
    if (this.reason)
      throw this.reason;
  }, ee.prototype.subscribe = function(ie) {
    if (this.reason) {
      ie(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(ie) : this._listeners = [ie];
  }, ee.prototype.unsubscribe = function(ie) {
    if (!!this._listeners) {
      var ae = this._listeners.indexOf(ie);
      ae !== -1 && this._listeners.splice(ae, 1);
    }
  }, ee.source = function() {
    var ie, ae = new ee(function(le) {
      ie = le;
    });
    return {
      token: ae,
      cancel: ie
    };
  }, CancelToken_1 = ee, CancelToken_1;
}
var spread, hasRequiredSpread;
function requireSpread() {
  return hasRequiredSpread || (hasRequiredSpread = 1, spread = function(ee) {
    return function(ie) {
      return ee.apply(null, ie);
    };
  }), spread;
}
var isAxiosError, hasRequiredIsAxiosError;
function requireIsAxiosError() {
  return hasRequiredIsAxiosError || (hasRequiredIsAxiosError = 1, isAxiosError = function(ee) {
    return typeof ee == "object" && ee.isAxiosError === !0;
  }), isAxiosError;
}
var utils$4 = utils$c, bind = bind$2, Axios = Axios_1, mergeConfig = mergeConfig$2, defaults = requireDefaults();
function createInstance(Q) {
  var ee = new Axios(Q), ne = bind(Axios.prototype.request, ee);
  return utils$4.extend(ne, Axios.prototype, ee), utils$4.extend(ne, ee), ne.create = function(ae) {
    return createInstance(mergeConfig(Q, ae));
  }, ne;
}
var axios = createInstance(defaults);
axios.Axios = Axios;
axios.Cancel = requireCancel();
axios.CancelToken = requireCancelToken();
axios.isCancel = requireIsCancel();
axios.VERSION = requireData().version;
axios.all = function Q(ee) {
  return Promise.all(ee);
};
axios.spread = requireSpread();
axios.isAxiosError = requireIsAxiosError();
axios$1.exports = axios;
axios$1.exports.default = axios;
(function(Q) {
  Q.exports = axios$1.exports;
})(axios$2);
var buffer$1 = {}, base64Js = {};
base64Js.byteLength = byteLength;
base64Js.toByteArray = toByteArray;
base64Js.fromByteArray = fromByteArray;
var lookup = [], revLookup = [], Arr = typeof Uint8Array < "u" ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var i = 0, len = code.length; i < len; ++i)
  lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i;
revLookup["-".charCodeAt(0)] = 62;
revLookup["_".charCodeAt(0)] = 63;
function getLens(Q) {
  var ee = Q.length;
  if (ee % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var ne = Q.indexOf("=");
  ne === -1 && (ne = ee);
  var ie = ne === ee ? 0 : 4 - ne % 4;
  return [ne, ie];
}
function byteLength(Q) {
  var ee = getLens(Q), ne = ee[0], ie = ee[1];
  return (ne + ie) * 3 / 4 - ie;
}
function _byteLength(Q, ee, ne) {
  return (ee + ne) * 3 / 4 - ne;
}
function toByteArray(Q) {
  var ee, ne = getLens(Q), ie = ne[0], ae = ne[1], ce = new Arr(_byteLength(Q, ie, ae)), le = 0, de = ae > 0 ? ie - 4 : ie, ye;
  for (ye = 0; ye < de; ye += 4)
    ee = revLookup[Q.charCodeAt(ye)] << 18 | revLookup[Q.charCodeAt(ye + 1)] << 12 | revLookup[Q.charCodeAt(ye + 2)] << 6 | revLookup[Q.charCodeAt(ye + 3)], ce[le++] = ee >> 16 & 255, ce[le++] = ee >> 8 & 255, ce[le++] = ee & 255;
  return ae === 2 && (ee = revLookup[Q.charCodeAt(ye)] << 2 | revLookup[Q.charCodeAt(ye + 1)] >> 4, ce[le++] = ee & 255), ae === 1 && (ee = revLookup[Q.charCodeAt(ye)] << 10 | revLookup[Q.charCodeAt(ye + 1)] << 4 | revLookup[Q.charCodeAt(ye + 2)] >> 2, ce[le++] = ee >> 8 & 255, ce[le++] = ee & 255), ce;
}
function tripletToBase64(Q) {
  return lookup[Q >> 18 & 63] + lookup[Q >> 12 & 63] + lookup[Q >> 6 & 63] + lookup[Q & 63];
}
function encodeChunk(Q, ee, ne) {
  for (var ie, ae = [], ce = ee; ce < ne; ce += 3)
    ie = (Q[ce] << 16 & 16711680) + (Q[ce + 1] << 8 & 65280) + (Q[ce + 2] & 255), ae.push(tripletToBase64(ie));
  return ae.join("");
}
function fromByteArray(Q) {
  for (var ee, ne = Q.length, ie = ne % 3, ae = [], ce = 16383, le = 0, de = ne - ie; le < de; le += ce)
    ae.push(encodeChunk(Q, le, le + ce > de ? de : le + ce));
  return ie === 1 ? (ee = Q[ne - 1], ae.push(
    lookup[ee >> 2] + lookup[ee << 4 & 63] + "=="
  )) : ie === 2 && (ee = (Q[ne - 2] << 8) + Q[ne - 1], ae.push(
    lookup[ee >> 10] + lookup[ee >> 4 & 63] + lookup[ee << 2 & 63] + "="
  )), ae.join("");
}
var ieee754$1 = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
ieee754$1.read = function(Q, ee, ne, ie, ae) {
  var ce, le, de = ae * 8 - ie - 1, ye = (1 << de) - 1, he = ye >> 1, Be = -7, Ee = ne ? ae - 1 : 0, me = ne ? -1 : 1, ge = Q[ee + Ee];
  for (Ee += me, ce = ge & (1 << -Be) - 1, ge >>= -Be, Be += de; Be > 0; ce = ce * 256 + Q[ee + Ee], Ee += me, Be -= 8)
    ;
  for (le = ce & (1 << -Be) - 1, ce >>= -Be, Be += ie; Be > 0; le = le * 256 + Q[ee + Ee], Ee += me, Be -= 8)
    ;
  if (ce === 0)
    ce = 1 - he;
  else {
    if (ce === ye)
      return le ? NaN : (ge ? -1 : 1) * (1 / 0);
    le = le + Math.pow(2, ie), ce = ce - he;
  }
  return (ge ? -1 : 1) * le * Math.pow(2, ce - ie);
};
ieee754$1.write = function(Q, ee, ne, ie, ae, ce) {
  var le, de, ye, he = ce * 8 - ae - 1, Be = (1 << he) - 1, Ee = Be >> 1, me = ae === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, ge = ie ? 0 : ce - 1, be = ie ? 1 : -1, we = ee < 0 || ee === 0 && 1 / ee < 0 ? 1 : 0;
  for (ee = Math.abs(ee), isNaN(ee) || ee === 1 / 0 ? (de = isNaN(ee) ? 1 : 0, le = Be) : (le = Math.floor(Math.log(ee) / Math.LN2), ee * (ye = Math.pow(2, -le)) < 1 && (le--, ye *= 2), le + Ee >= 1 ? ee += me / ye : ee += me * Math.pow(2, 1 - Ee), ee * ye >= 2 && (le++, ye /= 2), le + Ee >= Be ? (de = 0, le = Be) : le + Ee >= 1 ? (de = (ee * ye - 1) * Math.pow(2, ae), le = le + Ee) : (de = ee * Math.pow(2, Ee - 1) * Math.pow(2, ae), le = 0)); ae >= 8; Q[ne + ge] = de & 255, ge += be, de /= 256, ae -= 8)
    ;
  for (le = le << ae | de, he += ae; he > 0; Q[ne + ge] = le & 255, ge += be, le /= 256, he -= 8)
    ;
  Q[ne + ge - be] |= we * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(Q) {
  const ee = base64Js, ne = ieee754$1, ie = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  Q.Buffer = de, Q.SlowBuffer = Se, Q.INSPECT_MAX_BYTES = 50;
  const ae = 2147483647;
  Q.kMaxLength = ae, de.TYPED_ARRAY_SUPPORT = ce(), !de.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function ce() {
    try {
      const De = new Uint8Array(1), Te = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(Te, Uint8Array.prototype), Object.setPrototypeOf(De, Te), De.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(de.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (!!de.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(de.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (!!de.isBuffer(this))
        return this.byteOffset;
    }
  });
  function le(De) {
    if (De > ae)
      throw new RangeError('The value "' + De + '" is invalid for option "size"');
    const Te = new Uint8Array(De);
    return Object.setPrototypeOf(Te, de.prototype), Te;
  }
  function de(De, Te, Re) {
    if (typeof De == "number") {
      if (typeof Te == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return Ee(De);
    }
    return ye(De, Te, Re);
  }
  de.poolSize = 8192;
  function ye(De, Te, Re) {
    if (typeof De == "string")
      return me(De, Te);
    if (ArrayBuffer.isView(De))
      return be(De);
    if (De == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof De
      );
    if (ct(De, ArrayBuffer) || De && ct(De.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (ct(De, SharedArrayBuffer) || De && ct(De.buffer, SharedArrayBuffer)))
      return we(De, Te, Re);
    if (typeof De == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    const ot = De.valueOf && De.valueOf();
    if (ot != null && ot !== De)
      return de.from(ot, Te, Re);
    const bt = Oe(De);
    if (bt)
      return bt;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof De[Symbol.toPrimitive] == "function")
      return de.from(De[Symbol.toPrimitive]("string"), Te, Re);
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof De
    );
  }
  de.from = function(De, Te, Re) {
    return ye(De, Te, Re);
  }, Object.setPrototypeOf(de.prototype, Uint8Array.prototype), Object.setPrototypeOf(de, Uint8Array);
  function he(De) {
    if (typeof De != "number")
      throw new TypeError('"size" argument must be of type number');
    if (De < 0)
      throw new RangeError('The value "' + De + '" is invalid for option "size"');
  }
  function Be(De, Te, Re) {
    return he(De), De <= 0 ? le(De) : Te !== void 0 ? typeof Re == "string" ? le(De).fill(Te, Re) : le(De).fill(Te) : le(De);
  }
  de.alloc = function(De, Te, Re) {
    return Be(De, Te, Re);
  };
  function Ee(De) {
    return he(De), le(De < 0 ? 0 : He(De) | 0);
  }
  de.allocUnsafe = function(De) {
    return Ee(De);
  }, de.allocUnsafeSlow = function(De) {
    return Ee(De);
  };
  function me(De, Te) {
    if ((typeof Te != "string" || Te === "") && (Te = "utf8"), !de.isEncoding(Te))
      throw new TypeError("Unknown encoding: " + Te);
    const Re = Ge(De, Te) | 0;
    let ot = le(Re);
    const bt = ot.write(De, Te);
    return bt !== Re && (ot = ot.slice(0, bt)), ot;
  }
  function ge(De) {
    const Te = De.length < 0 ? 0 : He(De.length) | 0, Re = le(Te);
    for (let ot = 0; ot < Te; ot += 1)
      Re[ot] = De[ot] & 255;
    return Re;
  }
  function be(De) {
    if (ct(De, Uint8Array)) {
      const Te = new Uint8Array(De);
      return we(Te.buffer, Te.byteOffset, Te.byteLength);
    }
    return ge(De);
  }
  function we(De, Te, Re) {
    if (Te < 0 || De.byteLength < Te)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (De.byteLength < Te + (Re || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let ot;
    return Te === void 0 && Re === void 0 ? ot = new Uint8Array(De) : Re === void 0 ? ot = new Uint8Array(De, Te) : ot = new Uint8Array(De, Te, Re), Object.setPrototypeOf(ot, de.prototype), ot;
  }
  function Oe(De) {
    if (de.isBuffer(De)) {
      const Te = He(De.length) | 0, Re = le(Te);
      return Re.length === 0 || De.copy(Re, 0, 0, Te), Re;
    }
    if (De.length !== void 0)
      return typeof De.length != "number" || kt(De.length) ? le(0) : ge(De);
    if (De.type === "Buffer" && Array.isArray(De.data))
      return ge(De.data);
  }
  function He(De) {
    if (De >= ae)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + ae.toString(16) + " bytes");
    return De | 0;
  }
  function Se(De) {
    return +De != De && (De = 0), de.alloc(+De);
  }
  de.isBuffer = function(Te) {
    return Te != null && Te._isBuffer === !0 && Te !== de.prototype;
  }, de.compare = function(Te, Re) {
    if (ct(Te, Uint8Array) && (Te = de.from(Te, Te.offset, Te.byteLength)), ct(Re, Uint8Array) && (Re = de.from(Re, Re.offset, Re.byteLength)), !de.isBuffer(Te) || !de.isBuffer(Re))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (Te === Re)
      return 0;
    let ot = Te.length, bt = Re.length;
    for (let Pt = 0, Vt = Math.min(ot, bt); Pt < Vt; ++Pt)
      if (Te[Pt] !== Re[Pt]) {
        ot = Te[Pt], bt = Re[Pt];
        break;
      }
    return ot < bt ? -1 : bt < ot ? 1 : 0;
  }, de.isEncoding = function(Te) {
    switch (String(Te).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, de.concat = function(Te, Re) {
    if (!Array.isArray(Te))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (Te.length === 0)
      return de.alloc(0);
    let ot;
    if (Re === void 0)
      for (Re = 0, ot = 0; ot < Te.length; ++ot)
        Re += Te[ot].length;
    const bt = de.allocUnsafe(Re);
    let Pt = 0;
    for (ot = 0; ot < Te.length; ++ot) {
      let Vt = Te[ot];
      if (ct(Vt, Uint8Array))
        Pt + Vt.length > bt.length ? (de.isBuffer(Vt) || (Vt = de.from(Vt)), Vt.copy(bt, Pt)) : Uint8Array.prototype.set.call(
          bt,
          Vt,
          Pt
        );
      else if (de.isBuffer(Vt))
        Vt.copy(bt, Pt);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Pt += Vt.length;
    }
    return bt;
  };
  function Ge(De, Te) {
    if (de.isBuffer(De))
      return De.length;
    if (ArrayBuffer.isView(De) || ct(De, ArrayBuffer))
      return De.byteLength;
    if (typeof De != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof De
      );
    const Re = De.length, ot = arguments.length > 2 && arguments[2] === !0;
    if (!ot && Re === 0)
      return 0;
    let bt = !1;
    for (; ; )
      switch (Te) {
        case "ascii":
        case "latin1":
        case "binary":
          return Re;
        case "utf8":
        case "utf-8":
          return Ie(De).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Re * 2;
        case "hex":
          return Re >>> 1;
        case "base64":
          return Ve(De).length;
        default:
          if (bt)
            return ot ? -1 : Ie(De).length;
          Te = ("" + Te).toLowerCase(), bt = !0;
      }
  }
  de.byteLength = Ge;
  function Fe(De, Te, Re) {
    let ot = !1;
    if ((Te === void 0 || Te < 0) && (Te = 0), Te > this.length || ((Re === void 0 || Re > this.length) && (Re = this.length), Re <= 0) || (Re >>>= 0, Te >>>= 0, Re <= Te))
      return "";
    for (De || (De = "utf8"); ; )
      switch (De) {
        case "hex":
          return Wt(this, Te, Re);
        case "utf8":
        case "utf-8":
          return yt(this, Te, Re);
        case "ascii":
          return jt(this, Te, Re);
        case "latin1":
        case "binary":
          return $t(this, Te, Re);
        case "base64":
          return Ot(this, Te, Re);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return st(this, Te, Re);
        default:
          if (ot)
            throw new TypeError("Unknown encoding: " + De);
          De = (De + "").toLowerCase(), ot = !0;
      }
  }
  de.prototype._isBuffer = !0;
  function Pe(De, Te, Re) {
    const ot = De[Te];
    De[Te] = De[Re], De[Re] = ot;
  }
  de.prototype.swap16 = function() {
    const Te = this.length;
    if (Te % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let Re = 0; Re < Te; Re += 2)
      Pe(this, Re, Re + 1);
    return this;
  }, de.prototype.swap32 = function() {
    const Te = this.length;
    if (Te % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let Re = 0; Re < Te; Re += 4)
      Pe(this, Re, Re + 3), Pe(this, Re + 1, Re + 2);
    return this;
  }, de.prototype.swap64 = function() {
    const Te = this.length;
    if (Te % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let Re = 0; Re < Te; Re += 8)
      Pe(this, Re, Re + 7), Pe(this, Re + 1, Re + 6), Pe(this, Re + 2, Re + 5), Pe(this, Re + 3, Re + 4);
    return this;
  }, de.prototype.toString = function() {
    const Te = this.length;
    return Te === 0 ? "" : arguments.length === 0 ? yt(this, 0, Te) : Fe.apply(this, arguments);
  }, de.prototype.toLocaleString = de.prototype.toString, de.prototype.equals = function(Te) {
    if (!de.isBuffer(Te))
      throw new TypeError("Argument must be a Buffer");
    return this === Te ? !0 : de.compare(this, Te) === 0;
  }, de.prototype.inspect = function() {
    let Te = "";
    const Re = Q.INSPECT_MAX_BYTES;
    return Te = this.toString("hex", 0, Re).replace(/(.{2})/g, "$1 ").trim(), this.length > Re && (Te += " ... "), "<Buffer " + Te + ">";
  }, ie && (de.prototype[ie] = de.prototype.inspect), de.prototype.compare = function(Te, Re, ot, bt, Pt) {
    if (ct(Te, Uint8Array) && (Te = de.from(Te, Te.offset, Te.byteLength)), !de.isBuffer(Te))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Te
      );
    if (Re === void 0 && (Re = 0), ot === void 0 && (ot = Te ? Te.length : 0), bt === void 0 && (bt = 0), Pt === void 0 && (Pt = this.length), Re < 0 || ot > Te.length || bt < 0 || Pt > this.length)
      throw new RangeError("out of range index");
    if (bt >= Pt && Re >= ot)
      return 0;
    if (bt >= Pt)
      return -1;
    if (Re >= ot)
      return 1;
    if (Re >>>= 0, ot >>>= 0, bt >>>= 0, Pt >>>= 0, this === Te)
      return 0;
    let Vt = Pt - bt, Ir = ot - Re;
    const mr = Math.min(Vt, Ir), _r = this.slice(bt, Pt), Br = Te.slice(Re, ot);
    for (let Tr = 0; Tr < mr; ++Tr)
      if (_r[Tr] !== Br[Tr]) {
        Vt = _r[Tr], Ir = Br[Tr];
        break;
      }
    return Vt < Ir ? -1 : Ir < Vt ? 1 : 0;
  };
  function We(De, Te, Re, ot, bt) {
    if (De.length === 0)
      return -1;
    if (typeof Re == "string" ? (ot = Re, Re = 0) : Re > 2147483647 ? Re = 2147483647 : Re < -2147483648 && (Re = -2147483648), Re = +Re, kt(Re) && (Re = bt ? 0 : De.length - 1), Re < 0 && (Re = De.length + Re), Re >= De.length) {
      if (bt)
        return -1;
      Re = De.length - 1;
    } else if (Re < 0)
      if (bt)
        Re = 0;
      else
        return -1;
    if (typeof Te == "string" && (Te = de.from(Te, ot)), de.isBuffer(Te))
      return Te.length === 0 ? -1 : tt(De, Te, Re, ot, bt);
    if (typeof Te == "number")
      return Te = Te & 255, typeof Uint8Array.prototype.indexOf == "function" ? bt ? Uint8Array.prototype.indexOf.call(De, Te, Re) : Uint8Array.prototype.lastIndexOf.call(De, Te, Re) : tt(De, [Te], Re, ot, bt);
    throw new TypeError("val must be string, number or Buffer");
  }
  function tt(De, Te, Re, ot, bt) {
    let Pt = 1, Vt = De.length, Ir = Te.length;
    if (ot !== void 0 && (ot = String(ot).toLowerCase(), ot === "ucs2" || ot === "ucs-2" || ot === "utf16le" || ot === "utf-16le")) {
      if (De.length < 2 || Te.length < 2)
        return -1;
      Pt = 2, Vt /= 2, Ir /= 2, Re /= 2;
    }
    function mr(Br, Tr) {
      return Pt === 1 ? Br[Tr] : Br.readUInt16BE(Tr * Pt);
    }
    let _r;
    if (bt) {
      let Br = -1;
      for (_r = Re; _r < Vt; _r++)
        if (mr(De, _r) === mr(Te, Br === -1 ? 0 : _r - Br)) {
          if (Br === -1 && (Br = _r), _r - Br + 1 === Ir)
            return Br * Pt;
        } else
          Br !== -1 && (_r -= _r - Br), Br = -1;
    } else
      for (Re + Ir > Vt && (Re = Vt - Ir), _r = Re; _r >= 0; _r--) {
        let Br = !0;
        for (let Tr = 0; Tr < Ir; Tr++)
          if (mr(De, _r + Tr) !== mr(Te, Tr)) {
            Br = !1;
            break;
          }
        if (Br)
          return _r;
      }
    return -1;
  }
  de.prototype.includes = function(Te, Re, ot) {
    return this.indexOf(Te, Re, ot) !== -1;
  }, de.prototype.indexOf = function(Te, Re, ot) {
    return We(this, Te, Re, ot, !0);
  }, de.prototype.lastIndexOf = function(Te, Re, ot) {
    return We(this, Te, Re, ot, !1);
  };
  function Et(De, Te, Re, ot) {
    Re = Number(Re) || 0;
    const bt = De.length - Re;
    ot ? (ot = Number(ot), ot > bt && (ot = bt)) : ot = bt;
    const Pt = Te.length;
    ot > Pt / 2 && (ot = Pt / 2);
    let Vt;
    for (Vt = 0; Vt < ot; ++Vt) {
      const Ir = parseInt(Te.substr(Vt * 2, 2), 16);
      if (kt(Ir))
        return Vt;
      De[Re + Vt] = Ir;
    }
    return Vt;
  }
  function Nt(De, Te, Re, ot) {
    return Ze(Ie(Te, De.length - Re), De, Re, ot);
  }
  function et(De, Te, Re, ot) {
    return Ze(Ce(Te), De, Re, ot);
  }
  function mt(De, Te, Re, ot) {
    return Ze(Ve(Te), De, Re, ot);
  }
  function Mt(De, Te, Re, ot) {
    return Ze(ke(Te, De.length - Re), De, Re, ot);
  }
  de.prototype.write = function(Te, Re, ot, bt) {
    if (Re === void 0)
      bt = "utf8", ot = this.length, Re = 0;
    else if (ot === void 0 && typeof Re == "string")
      bt = Re, ot = this.length, Re = 0;
    else if (isFinite(Re))
      Re = Re >>> 0, isFinite(ot) ? (ot = ot >>> 0, bt === void 0 && (bt = "utf8")) : (bt = ot, ot = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    const Pt = this.length - Re;
    if ((ot === void 0 || ot > Pt) && (ot = Pt), Te.length > 0 && (ot < 0 || Re < 0) || Re > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    bt || (bt = "utf8");
    let Vt = !1;
    for (; ; )
      switch (bt) {
        case "hex":
          return Et(this, Te, Re, ot);
        case "utf8":
        case "utf-8":
          return Nt(this, Te, Re, ot);
        case "ascii":
        case "latin1":
        case "binary":
          return et(this, Te, Re, ot);
        case "base64":
          return mt(this, Te, Re, ot);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Mt(this, Te, Re, ot);
        default:
          if (Vt)
            throw new TypeError("Unknown encoding: " + bt);
          bt = ("" + bt).toLowerCase(), Vt = !0;
      }
  }, de.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function Ot(De, Te, Re) {
    return Te === 0 && Re === De.length ? ee.fromByteArray(De) : ee.fromByteArray(De.slice(Te, Re));
  }
  function yt(De, Te, Re) {
    Re = Math.min(De.length, Re);
    const ot = [];
    let bt = Te;
    for (; bt < Re; ) {
      const Pt = De[bt];
      let Vt = null, Ir = Pt > 239 ? 4 : Pt > 223 ? 3 : Pt > 191 ? 2 : 1;
      if (bt + Ir <= Re) {
        let mr, _r, Br, Tr;
        switch (Ir) {
          case 1:
            Pt < 128 && (Vt = Pt);
            break;
          case 2:
            mr = De[bt + 1], (mr & 192) === 128 && (Tr = (Pt & 31) << 6 | mr & 63, Tr > 127 && (Vt = Tr));
            break;
          case 3:
            mr = De[bt + 1], _r = De[bt + 2], (mr & 192) === 128 && (_r & 192) === 128 && (Tr = (Pt & 15) << 12 | (mr & 63) << 6 | _r & 63, Tr > 2047 && (Tr < 55296 || Tr > 57343) && (Vt = Tr));
            break;
          case 4:
            mr = De[bt + 1], _r = De[bt + 2], Br = De[bt + 3], (mr & 192) === 128 && (_r & 192) === 128 && (Br & 192) === 128 && (Tr = (Pt & 15) << 18 | (mr & 63) << 12 | (_r & 63) << 6 | Br & 63, Tr > 65535 && Tr < 1114112 && (Vt = Tr));
        }
      }
      Vt === null ? (Vt = 65533, Ir = 1) : Vt > 65535 && (Vt -= 65536, ot.push(Vt >>> 10 & 1023 | 55296), Vt = 56320 | Vt & 1023), ot.push(Vt), bt += Ir;
    }
    return Yt(ot);
  }
  const Qt = 4096;
  function Yt(De) {
    const Te = De.length;
    if (Te <= Qt)
      return String.fromCharCode.apply(String, De);
    let Re = "", ot = 0;
    for (; ot < Te; )
      Re += String.fromCharCode.apply(
        String,
        De.slice(ot, ot += Qt)
      );
    return Re;
  }
  function jt(De, Te, Re) {
    let ot = "";
    Re = Math.min(De.length, Re);
    for (let bt = Te; bt < Re; ++bt)
      ot += String.fromCharCode(De[bt] & 127);
    return ot;
  }
  function $t(De, Te, Re) {
    let ot = "";
    Re = Math.min(De.length, Re);
    for (let bt = Te; bt < Re; ++bt)
      ot += String.fromCharCode(De[bt]);
    return ot;
  }
  function Wt(De, Te, Re) {
    const ot = De.length;
    (!Te || Te < 0) && (Te = 0), (!Re || Re < 0 || Re > ot) && (Re = ot);
    let bt = "";
    for (let Pt = Te; Pt < Re; ++Pt)
      bt += Jt[De[Pt]];
    return bt;
  }
  function st(De, Te, Re) {
    const ot = De.slice(Te, Re);
    let bt = "";
    for (let Pt = 0; Pt < ot.length - 1; Pt += 2)
      bt += String.fromCharCode(ot[Pt] + ot[Pt + 1] * 256);
    return bt;
  }
  de.prototype.slice = function(Te, Re) {
    const ot = this.length;
    Te = ~~Te, Re = Re === void 0 ? ot : ~~Re, Te < 0 ? (Te += ot, Te < 0 && (Te = 0)) : Te > ot && (Te = ot), Re < 0 ? (Re += ot, Re < 0 && (Re = 0)) : Re > ot && (Re = ot), Re < Te && (Re = Te);
    const bt = this.subarray(Te, Re);
    return Object.setPrototypeOf(bt, de.prototype), bt;
  };
  function at(De, Te, Re) {
    if (De % 1 !== 0 || De < 0)
      throw new RangeError("offset is not uint");
    if (De + Te > Re)
      throw new RangeError("Trying to access beyond buffer length");
  }
  de.prototype.readUintLE = de.prototype.readUIntLE = function(Te, Re, ot) {
    Te = Te >>> 0, Re = Re >>> 0, ot || at(Te, Re, this.length);
    let bt = this[Te], Pt = 1, Vt = 0;
    for (; ++Vt < Re && (Pt *= 256); )
      bt += this[Te + Vt] * Pt;
    return bt;
  }, de.prototype.readUintBE = de.prototype.readUIntBE = function(Te, Re, ot) {
    Te = Te >>> 0, Re = Re >>> 0, ot || at(Te, Re, this.length);
    let bt = this[Te + --Re], Pt = 1;
    for (; Re > 0 && (Pt *= 256); )
      bt += this[Te + --Re] * Pt;
    return bt;
  }, de.prototype.readUint8 = de.prototype.readUInt8 = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 1, this.length), this[Te];
  }, de.prototype.readUint16LE = de.prototype.readUInt16LE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 2, this.length), this[Te] | this[Te + 1] << 8;
  }, de.prototype.readUint16BE = de.prototype.readUInt16BE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 2, this.length), this[Te] << 8 | this[Te + 1];
  }, de.prototype.readUint32LE = de.prototype.readUInt32LE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 4, this.length), (this[Te] | this[Te + 1] << 8 | this[Te + 2] << 16) + this[Te + 3] * 16777216;
  }, de.prototype.readUint32BE = de.prototype.readUInt32BE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 4, this.length), this[Te] * 16777216 + (this[Te + 1] << 16 | this[Te + 2] << 8 | this[Te + 3]);
  }, de.prototype.readBigUInt64LE = Kt(function(Te) {
    Te = Te >>> 0, It(Te, "offset");
    const Re = this[Te], ot = this[Te + 7];
    (Re === void 0 || ot === void 0) && lt(Te, this.length - 8);
    const bt = Re + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 24, Pt = this[++Te] + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + ot * 2 ** 24;
    return BigInt(bt) + (BigInt(Pt) << BigInt(32));
  }), de.prototype.readBigUInt64BE = Kt(function(Te) {
    Te = Te >>> 0, It(Te, "offset");
    const Re = this[Te], ot = this[Te + 7];
    (Re === void 0 || ot === void 0) && lt(Te, this.length - 8);
    const bt = Re * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + this[++Te], Pt = this[++Te] * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + ot;
    return (BigInt(bt) << BigInt(32)) + BigInt(Pt);
  }), de.prototype.readIntLE = function(Te, Re, ot) {
    Te = Te >>> 0, Re = Re >>> 0, ot || at(Te, Re, this.length);
    let bt = this[Te], Pt = 1, Vt = 0;
    for (; ++Vt < Re && (Pt *= 256); )
      bt += this[Te + Vt] * Pt;
    return Pt *= 128, bt >= Pt && (bt -= Math.pow(2, 8 * Re)), bt;
  }, de.prototype.readIntBE = function(Te, Re, ot) {
    Te = Te >>> 0, Re = Re >>> 0, ot || at(Te, Re, this.length);
    let bt = Re, Pt = 1, Vt = this[Te + --bt];
    for (; bt > 0 && (Pt *= 256); )
      Vt += this[Te + --bt] * Pt;
    return Pt *= 128, Vt >= Pt && (Vt -= Math.pow(2, 8 * Re)), Vt;
  }, de.prototype.readInt8 = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 1, this.length), this[Te] & 128 ? (255 - this[Te] + 1) * -1 : this[Te];
  }, de.prototype.readInt16LE = function(Te, Re) {
    Te = Te >>> 0, Re || at(Te, 2, this.length);
    const ot = this[Te] | this[Te + 1] << 8;
    return ot & 32768 ? ot | 4294901760 : ot;
  }, de.prototype.readInt16BE = function(Te, Re) {
    Te = Te >>> 0, Re || at(Te, 2, this.length);
    const ot = this[Te + 1] | this[Te] << 8;
    return ot & 32768 ? ot | 4294901760 : ot;
  }, de.prototype.readInt32LE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 4, this.length), this[Te] | this[Te + 1] << 8 | this[Te + 2] << 16 | this[Te + 3] << 24;
  }, de.prototype.readInt32BE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 4, this.length), this[Te] << 24 | this[Te + 1] << 16 | this[Te + 2] << 8 | this[Te + 3];
  }, de.prototype.readBigInt64LE = Kt(function(Te) {
    Te = Te >>> 0, It(Te, "offset");
    const Re = this[Te], ot = this[Te + 7];
    (Re === void 0 || ot === void 0) && lt(Te, this.length - 8);
    const bt = this[Te + 4] + this[Te + 5] * 2 ** 8 + this[Te + 6] * 2 ** 16 + (ot << 24);
    return (BigInt(bt) << BigInt(32)) + BigInt(Re + this[++Te] * 2 ** 8 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 24);
  }), de.prototype.readBigInt64BE = Kt(function(Te) {
    Te = Te >>> 0, It(Te, "offset");
    const Re = this[Te], ot = this[Te + 7];
    (Re === void 0 || ot === void 0) && lt(Te, this.length - 8);
    const bt = (Re << 24) + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + this[++Te];
    return (BigInt(bt) << BigInt(32)) + BigInt(this[++Te] * 2 ** 24 + this[++Te] * 2 ** 16 + this[++Te] * 2 ** 8 + ot);
  }), de.prototype.readFloatLE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 4, this.length), ne.read(this, Te, !0, 23, 4);
  }, de.prototype.readFloatBE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 4, this.length), ne.read(this, Te, !1, 23, 4);
  }, de.prototype.readDoubleLE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 8, this.length), ne.read(this, Te, !0, 52, 8);
  }, de.prototype.readDoubleBE = function(Te, Re) {
    return Te = Te >>> 0, Re || at(Te, 8, this.length), ne.read(this, Te, !1, 52, 8);
  };
  function wt(De, Te, Re, ot, bt, Pt) {
    if (!de.isBuffer(De))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (Te > bt || Te < Pt)
      throw new RangeError('"value" argument is out of bounds');
    if (Re + ot > De.length)
      throw new RangeError("Index out of range");
  }
  de.prototype.writeUintLE = de.prototype.writeUIntLE = function(Te, Re, ot, bt) {
    if (Te = +Te, Re = Re >>> 0, ot = ot >>> 0, !bt) {
      const Ir = Math.pow(2, 8 * ot) - 1;
      wt(this, Te, Re, ot, Ir, 0);
    }
    let Pt = 1, Vt = 0;
    for (this[Re] = Te & 255; ++Vt < ot && (Pt *= 256); )
      this[Re + Vt] = Te / Pt & 255;
    return Re + ot;
  }, de.prototype.writeUintBE = de.prototype.writeUIntBE = function(Te, Re, ot, bt) {
    if (Te = +Te, Re = Re >>> 0, ot = ot >>> 0, !bt) {
      const Ir = Math.pow(2, 8 * ot) - 1;
      wt(this, Te, Re, ot, Ir, 0);
    }
    let Pt = ot - 1, Vt = 1;
    for (this[Re + Pt] = Te & 255; --Pt >= 0 && (Vt *= 256); )
      this[Re + Pt] = Te / Vt & 255;
    return Re + ot;
  }, de.prototype.writeUint8 = de.prototype.writeUInt8 = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 1, 255, 0), this[Re] = Te & 255, Re + 1;
  }, de.prototype.writeUint16LE = de.prototype.writeUInt16LE = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 2, 65535, 0), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, Re + 2;
  }, de.prototype.writeUint16BE = de.prototype.writeUInt16BE = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 2, 65535, 0), this[Re] = Te >>> 8, this[Re + 1] = Te & 255, Re + 2;
  }, de.prototype.writeUint32LE = de.prototype.writeUInt32LE = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 4, 4294967295, 0), this[Re + 3] = Te >>> 24, this[Re + 2] = Te >>> 16, this[Re + 1] = Te >>> 8, this[Re] = Te & 255, Re + 4;
  }, de.prototype.writeUint32BE = de.prototype.writeUInt32BE = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 4, 4294967295, 0), this[Re] = Te >>> 24, this[Re + 1] = Te >>> 16, this[Re + 2] = Te >>> 8, this[Re + 3] = Te & 255, Re + 4;
  };
  function Ut(De, Te, Re, ot, bt) {
    je(Te, ot, bt, De, Re, 7);
    let Pt = Number(Te & BigInt(4294967295));
    De[Re++] = Pt, Pt = Pt >> 8, De[Re++] = Pt, Pt = Pt >> 8, De[Re++] = Pt, Pt = Pt >> 8, De[Re++] = Pt;
    let Vt = Number(Te >> BigInt(32) & BigInt(4294967295));
    return De[Re++] = Vt, Vt = Vt >> 8, De[Re++] = Vt, Vt = Vt >> 8, De[Re++] = Vt, Vt = Vt >> 8, De[Re++] = Vt, Re;
  }
  function $e(De, Te, Re, ot, bt) {
    je(Te, ot, bt, De, Re, 7);
    let Pt = Number(Te & BigInt(4294967295));
    De[Re + 7] = Pt, Pt = Pt >> 8, De[Re + 6] = Pt, Pt = Pt >> 8, De[Re + 5] = Pt, Pt = Pt >> 8, De[Re + 4] = Pt;
    let Vt = Number(Te >> BigInt(32) & BigInt(4294967295));
    return De[Re + 3] = Vt, Vt = Vt >> 8, De[Re + 2] = Vt, Vt = Vt >> 8, De[Re + 1] = Vt, Vt = Vt >> 8, De[Re] = Vt, Re + 8;
  }
  de.prototype.writeBigUInt64LE = Kt(function(Te, Re = 0) {
    return Ut(this, Te, Re, BigInt(0), BigInt("0xffffffffffffffff"));
  }), de.prototype.writeBigUInt64BE = Kt(function(Te, Re = 0) {
    return $e(this, Te, Re, BigInt(0), BigInt("0xffffffffffffffff"));
  }), de.prototype.writeIntLE = function(Te, Re, ot, bt) {
    if (Te = +Te, Re = Re >>> 0, !bt) {
      const mr = Math.pow(2, 8 * ot - 1);
      wt(this, Te, Re, ot, mr - 1, -mr);
    }
    let Pt = 0, Vt = 1, Ir = 0;
    for (this[Re] = Te & 255; ++Pt < ot && (Vt *= 256); )
      Te < 0 && Ir === 0 && this[Re + Pt - 1] !== 0 && (Ir = 1), this[Re + Pt] = (Te / Vt >> 0) - Ir & 255;
    return Re + ot;
  }, de.prototype.writeIntBE = function(Te, Re, ot, bt) {
    if (Te = +Te, Re = Re >>> 0, !bt) {
      const mr = Math.pow(2, 8 * ot - 1);
      wt(this, Te, Re, ot, mr - 1, -mr);
    }
    let Pt = ot - 1, Vt = 1, Ir = 0;
    for (this[Re + Pt] = Te & 255; --Pt >= 0 && (Vt *= 256); )
      Te < 0 && Ir === 0 && this[Re + Pt + 1] !== 0 && (Ir = 1), this[Re + Pt] = (Te / Vt >> 0) - Ir & 255;
    return Re + ot;
  }, de.prototype.writeInt8 = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 1, 127, -128), Te < 0 && (Te = 255 + Te + 1), this[Re] = Te & 255, Re + 1;
  }, de.prototype.writeInt16LE = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 2, 32767, -32768), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, Re + 2;
  }, de.prototype.writeInt16BE = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 2, 32767, -32768), this[Re] = Te >>> 8, this[Re + 1] = Te & 255, Re + 2;
  }, de.prototype.writeInt32LE = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 4, 2147483647, -2147483648), this[Re] = Te & 255, this[Re + 1] = Te >>> 8, this[Re + 2] = Te >>> 16, this[Re + 3] = Te >>> 24, Re + 4;
  }, de.prototype.writeInt32BE = function(Te, Re, ot) {
    return Te = +Te, Re = Re >>> 0, ot || wt(this, Te, Re, 4, 2147483647, -2147483648), Te < 0 && (Te = 4294967295 + Te + 1), this[Re] = Te >>> 24, this[Re + 1] = Te >>> 16, this[Re + 2] = Te >>> 8, this[Re + 3] = Te & 255, Re + 4;
  }, de.prototype.writeBigInt64LE = Kt(function(Te, Re = 0) {
    return Ut(this, Te, Re, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), de.prototype.writeBigInt64BE = Kt(function(Te, Re = 0) {
    return $e(this, Te, Re, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  function ir(De, Te, Re, ot, bt, Pt) {
    if (Re + ot > De.length)
      throw new RangeError("Index out of range");
    if (Re < 0)
      throw new RangeError("Index out of range");
  }
  function tr(De, Te, Re, ot, bt) {
    return Te = +Te, Re = Re >>> 0, bt || ir(De, Te, Re, 4), ne.write(De, Te, Re, ot, 23, 4), Re + 4;
  }
  de.prototype.writeFloatLE = function(Te, Re, ot) {
    return tr(this, Te, Re, !0, ot);
  }, de.prototype.writeFloatBE = function(Te, Re, ot) {
    return tr(this, Te, Re, !1, ot);
  };
  function ar(De, Te, Re, ot, bt) {
    return Te = +Te, Re = Re >>> 0, bt || ir(De, Te, Re, 8), ne.write(De, Te, Re, ot, 52, 8), Re + 8;
  }
  de.prototype.writeDoubleLE = function(Te, Re, ot) {
    return ar(this, Te, Re, !0, ot);
  }, de.prototype.writeDoubleBE = function(Te, Re, ot) {
    return ar(this, Te, Re, !1, ot);
  }, de.prototype.copy = function(Te, Re, ot, bt) {
    if (!de.isBuffer(Te))
      throw new TypeError("argument should be a Buffer");
    if (ot || (ot = 0), !bt && bt !== 0 && (bt = this.length), Re >= Te.length && (Re = Te.length), Re || (Re = 0), bt > 0 && bt < ot && (bt = ot), bt === ot || Te.length === 0 || this.length === 0)
      return 0;
    if (Re < 0)
      throw new RangeError("targetStart out of bounds");
    if (ot < 0 || ot >= this.length)
      throw new RangeError("Index out of range");
    if (bt < 0)
      throw new RangeError("sourceEnd out of bounds");
    bt > this.length && (bt = this.length), Te.length - Re < bt - ot && (bt = Te.length - Re + ot);
    const Pt = bt - ot;
    return this === Te && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(Re, ot, bt) : Uint8Array.prototype.set.call(
      Te,
      this.subarray(ot, bt),
      Re
    ), Pt;
  }, de.prototype.fill = function(Te, Re, ot, bt) {
    if (typeof Te == "string") {
      if (typeof Re == "string" ? (bt = Re, Re = 0, ot = this.length) : typeof ot == "string" && (bt = ot, ot = this.length), bt !== void 0 && typeof bt != "string")
        throw new TypeError("encoding must be a string");
      if (typeof bt == "string" && !de.isEncoding(bt))
        throw new TypeError("Unknown encoding: " + bt);
      if (Te.length === 1) {
        const Vt = Te.charCodeAt(0);
        (bt === "utf8" && Vt < 128 || bt === "latin1") && (Te = Vt);
      }
    } else
      typeof Te == "number" ? Te = Te & 255 : typeof Te == "boolean" && (Te = Number(Te));
    if (Re < 0 || this.length < Re || this.length < ot)
      throw new RangeError("Out of range index");
    if (ot <= Re)
      return this;
    Re = Re >>> 0, ot = ot === void 0 ? this.length : ot >>> 0, Te || (Te = 0);
    let Pt;
    if (typeof Te == "number")
      for (Pt = Re; Pt < ot; ++Pt)
        this[Pt] = Te;
    else {
      const Vt = de.isBuffer(Te) ? Te : de.from(Te, bt), Ir = Vt.length;
      if (Ir === 0)
        throw new TypeError('The value "' + Te + '" is invalid for argument "value"');
      for (Pt = 0; Pt < ot - Re; ++Pt)
        this[Pt + Re] = Vt[Pt % Ir];
    }
    return this;
  };
  const ht = {};
  function qt(De, Te, Re) {
    ht[De] = class extends Re {
      constructor() {
        super(), Object.defineProperty(this, "message", {
          value: Te.apply(this, arguments),
          writable: !0,
          configurable: !0
        }), this.name = `${this.name} [${De}]`, this.stack, delete this.name;
      }
      get code() {
        return De;
      }
      set code(bt) {
        Object.defineProperty(this, "code", {
          configurable: !0,
          enumerable: !0,
          value: bt,
          writable: !0
        });
      }
      toString() {
        return `${this.name} [${De}]: ${this.message}`;
      }
    };
  }
  qt(
    "ERR_BUFFER_OUT_OF_BOUNDS",
    function(De) {
      return De ? `${De} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    },
    RangeError
  ), qt(
    "ERR_INVALID_ARG_TYPE",
    function(De, Te) {
      return `The "${De}" argument must be of type number. Received type ${typeof Te}`;
    },
    TypeError
  ), qt(
    "ERR_OUT_OF_RANGE",
    function(De, Te, Re) {
      let ot = `The value of "${De}" is out of range.`, bt = Re;
      return Number.isInteger(Re) && Math.abs(Re) > 2 ** 32 ? bt = Xe(String(Re)) : typeof Re == "bigint" && (bt = String(Re), (Re > BigInt(2) ** BigInt(32) || Re < -(BigInt(2) ** BigInt(32))) && (bt = Xe(bt)), bt += "n"), ot += ` It must be ${Te}. Received ${bt}`, ot;
    },
    RangeError
  );
  function Xe(De) {
    let Te = "", Re = De.length;
    const ot = De[0] === "-" ? 1 : 0;
    for (; Re >= ot + 4; Re -= 3)
      Te = `_${De.slice(Re - 3, Re)}${Te}`;
    return `${De.slice(0, Re)}${Te}`;
  }
  function nt(De, Te, Re) {
    It(Te, "offset"), (De[Te] === void 0 || De[Te + Re] === void 0) && lt(Te, De.length - (Re + 1));
  }
  function je(De, Te, Re, ot, bt, Pt) {
    if (De > Re || De < Te) {
      const Vt = typeof Te == "bigint" ? "n" : "";
      let Ir;
      throw Pt > 3 ? Te === 0 || Te === BigInt(0) ? Ir = `>= 0${Vt} and < 2${Vt} ** ${(Pt + 1) * 8}${Vt}` : Ir = `>= -(2${Vt} ** ${(Pt + 1) * 8 - 1}${Vt}) and < 2 ** ${(Pt + 1) * 8 - 1}${Vt}` : Ir = `>= ${Te}${Vt} and <= ${Re}${Vt}`, new ht.ERR_OUT_OF_RANGE("value", Ir, De);
    }
    nt(ot, bt, Pt);
  }
  function It(De, Te) {
    if (typeof De != "number")
      throw new ht.ERR_INVALID_ARG_TYPE(Te, "number", De);
  }
  function lt(De, Te, Re) {
    throw Math.floor(De) !== De ? (It(De, Re), new ht.ERR_OUT_OF_RANGE(Re || "offset", "an integer", De)) : Te < 0 ? new ht.ERR_BUFFER_OUT_OF_BOUNDS() : new ht.ERR_OUT_OF_RANGE(
      Re || "offset",
      `>= ${Re ? 1 : 0} and <= ${Te}`,
      De
    );
  }
  const Ye = /[^+/0-9A-Za-z-_]/g;
  function _e(De) {
    if (De = De.split("=")[0], De = De.trim().replace(Ye, ""), De.length < 2)
      return "";
    for (; De.length % 4 !== 0; )
      De = De + "=";
    return De;
  }
  function Ie(De, Te) {
    Te = Te || 1 / 0;
    let Re;
    const ot = De.length;
    let bt = null;
    const Pt = [];
    for (let Vt = 0; Vt < ot; ++Vt) {
      if (Re = De.charCodeAt(Vt), Re > 55295 && Re < 57344) {
        if (!bt) {
          if (Re > 56319) {
            (Te -= 3) > -1 && Pt.push(239, 191, 189);
            continue;
          } else if (Vt + 1 === ot) {
            (Te -= 3) > -1 && Pt.push(239, 191, 189);
            continue;
          }
          bt = Re;
          continue;
        }
        if (Re < 56320) {
          (Te -= 3) > -1 && Pt.push(239, 191, 189), bt = Re;
          continue;
        }
        Re = (bt - 55296 << 10 | Re - 56320) + 65536;
      } else
        bt && (Te -= 3) > -1 && Pt.push(239, 191, 189);
      if (bt = null, Re < 128) {
        if ((Te -= 1) < 0)
          break;
        Pt.push(Re);
      } else if (Re < 2048) {
        if ((Te -= 2) < 0)
          break;
        Pt.push(
          Re >> 6 | 192,
          Re & 63 | 128
        );
      } else if (Re < 65536) {
        if ((Te -= 3) < 0)
          break;
        Pt.push(
          Re >> 12 | 224,
          Re >> 6 & 63 | 128,
          Re & 63 | 128
        );
      } else if (Re < 1114112) {
        if ((Te -= 4) < 0)
          break;
        Pt.push(
          Re >> 18 | 240,
          Re >> 12 & 63 | 128,
          Re >> 6 & 63 | 128,
          Re & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Pt;
  }
  function Ce(De) {
    const Te = [];
    for (let Re = 0; Re < De.length; ++Re)
      Te.push(De.charCodeAt(Re) & 255);
    return Te;
  }
  function ke(De, Te) {
    let Re, ot, bt;
    const Pt = [];
    for (let Vt = 0; Vt < De.length && !((Te -= 2) < 0); ++Vt)
      Re = De.charCodeAt(Vt), ot = Re >> 8, bt = Re % 256, Pt.push(bt), Pt.push(ot);
    return Pt;
  }
  function Ve(De) {
    return ee.toByteArray(_e(De));
  }
  function Ze(De, Te, Re, ot) {
    let bt;
    for (bt = 0; bt < ot && !(bt + Re >= Te.length || bt >= De.length); ++bt)
      Te[bt + Re] = De[bt];
    return bt;
  }
  function ct(De, Te) {
    return De instanceof Te || De != null && De.constructor != null && De.constructor.name != null && De.constructor.name === Te.name;
  }
  function kt(De) {
    return De !== De;
  }
  const Jt = function() {
    const De = "0123456789abcdef", Te = new Array(256);
    for (let Re = 0; Re < 16; ++Re) {
      const ot = Re * 16;
      for (let bt = 0; bt < 16; ++bt)
        Te[ot + bt] = De[Re] + De[bt];
    }
    return Te;
  }();
  function Kt(De) {
    return typeof BigInt > "u" ? Zt : De;
  }
  function Zt() {
    throw new Error("BigInt not supported");
  }
})(buffer$1);
var ReplicaRejectCode$1;
(function(Q) {
  Q[Q.SysFatal = 1] = "SysFatal", Q[Q.SysTransient = 2] = "SysTransient", Q[Q.DestinationInvalid = 3] = "DestinationInvalid", Q[Q.CanisterReject = 4] = "CanisterReject", Q[Q.CanisterError = 5] = "CanisterError";
})(ReplicaRejectCode$1 || (ReplicaRejectCode$1 = {}));
const alphabet = "abcdefghijklmnopqrstuvwxyz234567", lookupTable = /* @__PURE__ */ Object.create(null);
for (let Q = 0; Q < alphabet.length; Q++)
  lookupTable[alphabet[Q]] = Q;
lookupTable[0] = lookupTable.o;
lookupTable[1] = lookupTable.i;
function encode$4(Q) {
  let ee = 0, ne = 0, ie = "";
  function ae(ce) {
    return ee < 0 ? ne |= ce >> -ee : ne = ce << ee & 248, ee > 3 ? (ee -= 8, 1) : (ee < 4 && (ie += alphabet[ne >> 3], ee += 5), 0);
  }
  for (let ce = 0; ce < Q.length; )
    ce += ae(Q[ce]);
  return ie + (ee < 0 ? alphabet[ne >> 3] : "");
}
function decode$5(Q) {
  let ee = 0, ne = 0;
  const ie = new Uint8Array(Q.length * 4 / 3 | 0);
  let ae = 0;
  function ce(le) {
    let de = lookupTable[le.toLowerCase()];
    if (de === void 0)
      throw new Error(`Invalid character: ${JSON.stringify(le)}`);
    de <<= 3, ne |= de >>> ee, ee += 5, ee >= 8 && (ie[ae++] = ne, ee -= 8, ee > 0 ? ne = de << 5 - ee & 255 : ne = 0);
  }
  for (const le of Q)
    ce(le);
  return ie.slice(0, ae);
}
const lookUpTable = new Uint32Array([
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
]);
function getCrc32(Q) {
  const ee = new Uint8Array(Q);
  let ne = -1;
  for (let ie = 0; ie < ee.length; ie++) {
    const ce = (ee[ie] ^ ne) & 255;
    ne = lookUpTable[ce] ^ ne >>> 8;
  }
  return (ne ^ -1) >>> 0;
}
function sha224$1(Q) {
  const ee = sha256$1.exports.sha224.create();
  return ee.update(Q), new Uint8Array(ee.array());
}
const SELF_AUTHENTICATING_SUFFIX = 2, ANONYMOUS_SUFFIX = 4, fromHexString = (Q) => {
  var ee;
  return new Uint8Array(((ee = Q.match(/.{1,2}/g)) !== null && ee !== void 0 ? ee : []).map((ne) => parseInt(ne, 16)));
}, toHexString = (Q) => Q.reduce((ee, ne) => ee + ne.toString(16).padStart(2, "0"), "");
class Principal$2 {
  constructor(ee) {
    this._arr = ee, this._isPrincipal = !0;
  }
  static anonymous() {
    return new this(new Uint8Array([ANONYMOUS_SUFFIX]));
  }
  static selfAuthenticating(ee) {
    const ne = sha224$1(ee);
    return new this(new Uint8Array([...ne, SELF_AUTHENTICATING_SUFFIX]));
  }
  static from(ee) {
    if (typeof ee == "string")
      return Principal$2.fromText(ee);
    if (typeof ee == "object" && ee !== null && ee._isPrincipal === !0)
      return new Principal$2(ee._arr);
    throw new Error(`Impossible to convert ${JSON.stringify(ee)} to Principal.`);
  }
  static fromHex(ee) {
    return new this(fromHexString(ee));
  }
  static fromText(ee) {
    const ne = ee.toLowerCase().replace(/-/g, "");
    let ie = decode$5(ne);
    ie = ie.slice(4, ie.length);
    const ae = new this(ie);
    if (ae.toText() !== ee)
      throw new Error(`Principal "${ae.toText()}" does not have a valid checksum.`);
    return ae;
  }
  static fromUint8Array(ee) {
    return new this(ee);
  }
  isAnonymous() {
    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;
  }
  toUint8Array() {
    return this._arr;
  }
  toHex() {
    return toHexString(this._arr).toUpperCase();
  }
  toText() {
    const ee = new ArrayBuffer(4);
    new DataView(ee).setUint32(0, getCrc32(this._arr));
    const ie = Uint8Array.from(buffer$1.Buffer.from(ee)), ae = Uint8Array.from(this._arr), ce = new Uint8Array([...ie, ...ae]), de = encode$4(ce).match(/.{1,5}/g);
    if (!de)
      throw new Error();
    return de.join("-");
  }
  toString() {
    return this.toText();
  }
}
const esm$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Principal: Principal$2
}, Symbol.toStringTag, { value: "Module" }));
var src$1 = {}, buffer = {};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(Q) {
  var ee = base64Js, ne = ieee754$1, ie = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  Q.Buffer = de, Q.SlowBuffer = Se, Q.INSPECT_MAX_BYTES = 50;
  var ae = 2147483647;
  Q.kMaxLength = ae, de.TYPED_ARRAY_SUPPORT = ce(), !de.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function ce() {
    try {
      var _e = new Uint8Array(1), Ie = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(Ie, Uint8Array.prototype), Object.setPrototypeOf(_e, Ie), _e.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(de.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (!!de.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(de.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (!!de.isBuffer(this))
        return this.byteOffset;
    }
  });
  function le(_e) {
    if (_e > ae)
      throw new RangeError('The value "' + _e + '" is invalid for option "size"');
    var Ie = new Uint8Array(_e);
    return Object.setPrototypeOf(Ie, de.prototype), Ie;
  }
  function de(_e, Ie, Ce) {
    if (typeof _e == "number") {
      if (typeof Ie == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return Ee(_e);
    }
    return ye(_e, Ie, Ce);
  }
  de.poolSize = 8192;
  function ye(_e, Ie, Ce) {
    if (typeof _e == "string")
      return me(_e, Ie);
    if (ArrayBuffer.isView(_e))
      return be(_e);
    if (_e == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _e
      );
    if (It(_e, ArrayBuffer) || _e && It(_e.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (It(_e, SharedArrayBuffer) || _e && It(_e.buffer, SharedArrayBuffer)))
      return we(_e, Ie, Ce);
    if (typeof _e == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    var ke = _e.valueOf && _e.valueOf();
    if (ke != null && ke !== _e)
      return de.from(ke, Ie, Ce);
    var Ve = Oe(_e);
    if (Ve)
      return Ve;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof _e[Symbol.toPrimitive] == "function")
      return de.from(
        _e[Symbol.toPrimitive]("string"),
        Ie,
        Ce
      );
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _e
    );
  }
  de.from = function(_e, Ie, Ce) {
    return ye(_e, Ie, Ce);
  }, Object.setPrototypeOf(de.prototype, Uint8Array.prototype), Object.setPrototypeOf(de, Uint8Array);
  function he(_e) {
    if (typeof _e != "number")
      throw new TypeError('"size" argument must be of type number');
    if (_e < 0)
      throw new RangeError('The value "' + _e + '" is invalid for option "size"');
  }
  function Be(_e, Ie, Ce) {
    return he(_e), _e <= 0 ? le(_e) : Ie !== void 0 ? typeof Ce == "string" ? le(_e).fill(Ie, Ce) : le(_e).fill(Ie) : le(_e);
  }
  de.alloc = function(_e, Ie, Ce) {
    return Be(_e, Ie, Ce);
  };
  function Ee(_e) {
    return he(_e), le(_e < 0 ? 0 : He(_e) | 0);
  }
  de.allocUnsafe = function(_e) {
    return Ee(_e);
  }, de.allocUnsafeSlow = function(_e) {
    return Ee(_e);
  };
  function me(_e, Ie) {
    if ((typeof Ie != "string" || Ie === "") && (Ie = "utf8"), !de.isEncoding(Ie))
      throw new TypeError("Unknown encoding: " + Ie);
    var Ce = Ge(_e, Ie) | 0, ke = le(Ce), Ve = ke.write(_e, Ie);
    return Ve !== Ce && (ke = ke.slice(0, Ve)), ke;
  }
  function ge(_e) {
    for (var Ie = _e.length < 0 ? 0 : He(_e.length) | 0, Ce = le(Ie), ke = 0; ke < Ie; ke += 1)
      Ce[ke] = _e[ke] & 255;
    return Ce;
  }
  function be(_e) {
    if (It(_e, Uint8Array)) {
      var Ie = new Uint8Array(_e);
      return we(Ie.buffer, Ie.byteOffset, Ie.byteLength);
    }
    return ge(_e);
  }
  function we(_e, Ie, Ce) {
    if (Ie < 0 || _e.byteLength < Ie)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (_e.byteLength < Ie + (Ce || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    var ke;
    return Ie === void 0 && Ce === void 0 ? ke = new Uint8Array(_e) : Ce === void 0 ? ke = new Uint8Array(_e, Ie) : ke = new Uint8Array(_e, Ie, Ce), Object.setPrototypeOf(ke, de.prototype), ke;
  }
  function Oe(_e) {
    if (de.isBuffer(_e)) {
      var Ie = He(_e.length) | 0, Ce = le(Ie);
      return Ce.length === 0 || _e.copy(Ce, 0, 0, Ie), Ce;
    }
    if (_e.length !== void 0)
      return typeof _e.length != "number" || lt(_e.length) ? le(0) : ge(_e);
    if (_e.type === "Buffer" && Array.isArray(_e.data))
      return ge(_e.data);
  }
  function He(_e) {
    if (_e >= ae)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + ae.toString(16) + " bytes");
    return _e | 0;
  }
  function Se(_e) {
    return +_e != _e && (_e = 0), de.alloc(+_e);
  }
  de.isBuffer = function(Ie) {
    return Ie != null && Ie._isBuffer === !0 && Ie !== de.prototype;
  }, de.compare = function(Ie, Ce) {
    if (It(Ie, Uint8Array) && (Ie = de.from(Ie, Ie.offset, Ie.byteLength)), It(Ce, Uint8Array) && (Ce = de.from(Ce, Ce.offset, Ce.byteLength)), !de.isBuffer(Ie) || !de.isBuffer(Ce))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (Ie === Ce)
      return 0;
    for (var ke = Ie.length, Ve = Ce.length, Ze = 0, ct = Math.min(ke, Ve); Ze < ct; ++Ze)
      if (Ie[Ze] !== Ce[Ze]) {
        ke = Ie[Ze], Ve = Ce[Ze];
        break;
      }
    return ke < Ve ? -1 : Ve < ke ? 1 : 0;
  }, de.isEncoding = function(Ie) {
    switch (String(Ie).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, de.concat = function(Ie, Ce) {
    if (!Array.isArray(Ie))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (Ie.length === 0)
      return de.alloc(0);
    var ke;
    if (Ce === void 0)
      for (Ce = 0, ke = 0; ke < Ie.length; ++ke)
        Ce += Ie[ke].length;
    var Ve = de.allocUnsafe(Ce), Ze = 0;
    for (ke = 0; ke < Ie.length; ++ke) {
      var ct = Ie[ke];
      if (It(ct, Uint8Array))
        Ze + ct.length > Ve.length ? de.from(ct).copy(Ve, Ze) : Uint8Array.prototype.set.call(
          Ve,
          ct,
          Ze
        );
      else if (de.isBuffer(ct))
        ct.copy(Ve, Ze);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Ze += ct.length;
    }
    return Ve;
  };
  function Ge(_e, Ie) {
    if (de.isBuffer(_e))
      return _e.length;
    if (ArrayBuffer.isView(_e) || It(_e, ArrayBuffer))
      return _e.byteLength;
    if (typeof _e != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof _e
      );
    var Ce = _e.length, ke = arguments.length > 2 && arguments[2] === !0;
    if (!ke && Ce === 0)
      return 0;
    for (var Ve = !1; ; )
      switch (Ie) {
        case "ascii":
        case "latin1":
        case "binary":
          return Ce;
        case "utf8":
        case "utf-8":
          return ht(_e).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Ce * 2;
        case "hex":
          return Ce >>> 1;
        case "base64":
          return nt(_e).length;
        default:
          if (Ve)
            return ke ? -1 : ht(_e).length;
          Ie = ("" + Ie).toLowerCase(), Ve = !0;
      }
  }
  de.byteLength = Ge;
  function Fe(_e, Ie, Ce) {
    var ke = !1;
    if ((Ie === void 0 || Ie < 0) && (Ie = 0), Ie > this.length || ((Ce === void 0 || Ce > this.length) && (Ce = this.length), Ce <= 0) || (Ce >>>= 0, Ie >>>= 0, Ce <= Ie))
      return "";
    for (_e || (_e = "utf8"); ; )
      switch (_e) {
        case "hex":
          return Wt(this, Ie, Ce);
        case "utf8":
        case "utf-8":
          return yt(this, Ie, Ce);
        case "ascii":
          return jt(this, Ie, Ce);
        case "latin1":
        case "binary":
          return $t(this, Ie, Ce);
        case "base64":
          return Ot(this, Ie, Ce);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return st(this, Ie, Ce);
        default:
          if (ke)
            throw new TypeError("Unknown encoding: " + _e);
          _e = (_e + "").toLowerCase(), ke = !0;
      }
  }
  de.prototype._isBuffer = !0;
  function Pe(_e, Ie, Ce) {
    var ke = _e[Ie];
    _e[Ie] = _e[Ce], _e[Ce] = ke;
  }
  de.prototype.swap16 = function() {
    var Ie = this.length;
    if (Ie % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var Ce = 0; Ce < Ie; Ce += 2)
      Pe(this, Ce, Ce + 1);
    return this;
  }, de.prototype.swap32 = function() {
    var Ie = this.length;
    if (Ie % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var Ce = 0; Ce < Ie; Ce += 4)
      Pe(this, Ce, Ce + 3), Pe(this, Ce + 1, Ce + 2);
    return this;
  }, de.prototype.swap64 = function() {
    var Ie = this.length;
    if (Ie % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var Ce = 0; Ce < Ie; Ce += 8)
      Pe(this, Ce, Ce + 7), Pe(this, Ce + 1, Ce + 6), Pe(this, Ce + 2, Ce + 5), Pe(this, Ce + 3, Ce + 4);
    return this;
  }, de.prototype.toString = function() {
    var Ie = this.length;
    return Ie === 0 ? "" : arguments.length === 0 ? yt(this, 0, Ie) : Fe.apply(this, arguments);
  }, de.prototype.toLocaleString = de.prototype.toString, de.prototype.equals = function(Ie) {
    if (!de.isBuffer(Ie))
      throw new TypeError("Argument must be a Buffer");
    return this === Ie ? !0 : de.compare(this, Ie) === 0;
  }, de.prototype.inspect = function() {
    var Ie = "", Ce = Q.INSPECT_MAX_BYTES;
    return Ie = this.toString("hex", 0, Ce).replace(/(.{2})/g, "$1 ").trim(), this.length > Ce && (Ie += " ... "), "<Buffer " + Ie + ">";
  }, ie && (de.prototype[ie] = de.prototype.inspect), de.prototype.compare = function(Ie, Ce, ke, Ve, Ze) {
    if (It(Ie, Uint8Array) && (Ie = de.from(Ie, Ie.offset, Ie.byteLength)), !de.isBuffer(Ie))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Ie
      );
    if (Ce === void 0 && (Ce = 0), ke === void 0 && (ke = Ie ? Ie.length : 0), Ve === void 0 && (Ve = 0), Ze === void 0 && (Ze = this.length), Ce < 0 || ke > Ie.length || Ve < 0 || Ze > this.length)
      throw new RangeError("out of range index");
    if (Ve >= Ze && Ce >= ke)
      return 0;
    if (Ve >= Ze)
      return -1;
    if (Ce >= ke)
      return 1;
    if (Ce >>>= 0, ke >>>= 0, Ve >>>= 0, Ze >>>= 0, this === Ie)
      return 0;
    for (var ct = Ze - Ve, kt = ke - Ce, Jt = Math.min(ct, kt), Kt = this.slice(Ve, Ze), Zt = Ie.slice(Ce, ke), De = 0; De < Jt; ++De)
      if (Kt[De] !== Zt[De]) {
        ct = Kt[De], kt = Zt[De];
        break;
      }
    return ct < kt ? -1 : kt < ct ? 1 : 0;
  };
  function We(_e, Ie, Ce, ke, Ve) {
    if (_e.length === 0)
      return -1;
    if (typeof Ce == "string" ? (ke = Ce, Ce = 0) : Ce > 2147483647 ? Ce = 2147483647 : Ce < -2147483648 && (Ce = -2147483648), Ce = +Ce, lt(Ce) && (Ce = Ve ? 0 : _e.length - 1), Ce < 0 && (Ce = _e.length + Ce), Ce >= _e.length) {
      if (Ve)
        return -1;
      Ce = _e.length - 1;
    } else if (Ce < 0)
      if (Ve)
        Ce = 0;
      else
        return -1;
    if (typeof Ie == "string" && (Ie = de.from(Ie, ke)), de.isBuffer(Ie))
      return Ie.length === 0 ? -1 : tt(_e, Ie, Ce, ke, Ve);
    if (typeof Ie == "number")
      return Ie = Ie & 255, typeof Uint8Array.prototype.indexOf == "function" ? Ve ? Uint8Array.prototype.indexOf.call(_e, Ie, Ce) : Uint8Array.prototype.lastIndexOf.call(_e, Ie, Ce) : tt(_e, [Ie], Ce, ke, Ve);
    throw new TypeError("val must be string, number or Buffer");
  }
  function tt(_e, Ie, Ce, ke, Ve) {
    var Ze = 1, ct = _e.length, kt = Ie.length;
    if (ke !== void 0 && (ke = String(ke).toLowerCase(), ke === "ucs2" || ke === "ucs-2" || ke === "utf16le" || ke === "utf-16le")) {
      if (_e.length < 2 || Ie.length < 2)
        return -1;
      Ze = 2, ct /= 2, kt /= 2, Ce /= 2;
    }
    function Jt(Re, ot) {
      return Ze === 1 ? Re[ot] : Re.readUInt16BE(ot * Ze);
    }
    var Kt;
    if (Ve) {
      var Zt = -1;
      for (Kt = Ce; Kt < ct; Kt++)
        if (Jt(_e, Kt) === Jt(Ie, Zt === -1 ? 0 : Kt - Zt)) {
          if (Zt === -1 && (Zt = Kt), Kt - Zt + 1 === kt)
            return Zt * Ze;
        } else
          Zt !== -1 && (Kt -= Kt - Zt), Zt = -1;
    } else
      for (Ce + kt > ct && (Ce = ct - kt), Kt = Ce; Kt >= 0; Kt--) {
        for (var De = !0, Te = 0; Te < kt; Te++)
          if (Jt(_e, Kt + Te) !== Jt(Ie, Te)) {
            De = !1;
            break;
          }
        if (De)
          return Kt;
      }
    return -1;
  }
  de.prototype.includes = function(Ie, Ce, ke) {
    return this.indexOf(Ie, Ce, ke) !== -1;
  }, de.prototype.indexOf = function(Ie, Ce, ke) {
    return We(this, Ie, Ce, ke, !0);
  }, de.prototype.lastIndexOf = function(Ie, Ce, ke) {
    return We(this, Ie, Ce, ke, !1);
  };
  function Et(_e, Ie, Ce, ke) {
    Ce = Number(Ce) || 0;
    var Ve = _e.length - Ce;
    ke ? (ke = Number(ke), ke > Ve && (ke = Ve)) : ke = Ve;
    var Ze = Ie.length;
    ke > Ze / 2 && (ke = Ze / 2);
    for (var ct = 0; ct < ke; ++ct) {
      var kt = parseInt(Ie.substr(ct * 2, 2), 16);
      if (lt(kt))
        return ct;
      _e[Ce + ct] = kt;
    }
    return ct;
  }
  function Nt(_e, Ie, Ce, ke) {
    return je(ht(Ie, _e.length - Ce), _e, Ce, ke);
  }
  function et(_e, Ie, Ce, ke) {
    return je(qt(Ie), _e, Ce, ke);
  }
  function mt(_e, Ie, Ce, ke) {
    return je(nt(Ie), _e, Ce, ke);
  }
  function Mt(_e, Ie, Ce, ke) {
    return je(Xe(Ie, _e.length - Ce), _e, Ce, ke);
  }
  de.prototype.write = function(Ie, Ce, ke, Ve) {
    if (Ce === void 0)
      Ve = "utf8", ke = this.length, Ce = 0;
    else if (ke === void 0 && typeof Ce == "string")
      Ve = Ce, ke = this.length, Ce = 0;
    else if (isFinite(Ce))
      Ce = Ce >>> 0, isFinite(ke) ? (ke = ke >>> 0, Ve === void 0 && (Ve = "utf8")) : (Ve = ke, ke = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    var Ze = this.length - Ce;
    if ((ke === void 0 || ke > Ze) && (ke = Ze), Ie.length > 0 && (ke < 0 || Ce < 0) || Ce > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    Ve || (Ve = "utf8");
    for (var ct = !1; ; )
      switch (Ve) {
        case "hex":
          return Et(this, Ie, Ce, ke);
        case "utf8":
        case "utf-8":
          return Nt(this, Ie, Ce, ke);
        case "ascii":
        case "latin1":
        case "binary":
          return et(this, Ie, Ce, ke);
        case "base64":
          return mt(this, Ie, Ce, ke);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Mt(this, Ie, Ce, ke);
        default:
          if (ct)
            throw new TypeError("Unknown encoding: " + Ve);
          Ve = ("" + Ve).toLowerCase(), ct = !0;
      }
  }, de.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function Ot(_e, Ie, Ce) {
    return Ie === 0 && Ce === _e.length ? ee.fromByteArray(_e) : ee.fromByteArray(_e.slice(Ie, Ce));
  }
  function yt(_e, Ie, Ce) {
    Ce = Math.min(_e.length, Ce);
    for (var ke = [], Ve = Ie; Ve < Ce; ) {
      var Ze = _e[Ve], ct = null, kt = Ze > 239 ? 4 : Ze > 223 ? 3 : Ze > 191 ? 2 : 1;
      if (Ve + kt <= Ce) {
        var Jt, Kt, Zt, De;
        switch (kt) {
          case 1:
            Ze < 128 && (ct = Ze);
            break;
          case 2:
            Jt = _e[Ve + 1], (Jt & 192) === 128 && (De = (Ze & 31) << 6 | Jt & 63, De > 127 && (ct = De));
            break;
          case 3:
            Jt = _e[Ve + 1], Kt = _e[Ve + 2], (Jt & 192) === 128 && (Kt & 192) === 128 && (De = (Ze & 15) << 12 | (Jt & 63) << 6 | Kt & 63, De > 2047 && (De < 55296 || De > 57343) && (ct = De));
            break;
          case 4:
            Jt = _e[Ve + 1], Kt = _e[Ve + 2], Zt = _e[Ve + 3], (Jt & 192) === 128 && (Kt & 192) === 128 && (Zt & 192) === 128 && (De = (Ze & 15) << 18 | (Jt & 63) << 12 | (Kt & 63) << 6 | Zt & 63, De > 65535 && De < 1114112 && (ct = De));
        }
      }
      ct === null ? (ct = 65533, kt = 1) : ct > 65535 && (ct -= 65536, ke.push(ct >>> 10 & 1023 | 55296), ct = 56320 | ct & 1023), ke.push(ct), Ve += kt;
    }
    return Yt(ke);
  }
  var Qt = 4096;
  function Yt(_e) {
    var Ie = _e.length;
    if (Ie <= Qt)
      return String.fromCharCode.apply(String, _e);
    for (var Ce = "", ke = 0; ke < Ie; )
      Ce += String.fromCharCode.apply(
        String,
        _e.slice(ke, ke += Qt)
      );
    return Ce;
  }
  function jt(_e, Ie, Ce) {
    var ke = "";
    Ce = Math.min(_e.length, Ce);
    for (var Ve = Ie; Ve < Ce; ++Ve)
      ke += String.fromCharCode(_e[Ve] & 127);
    return ke;
  }
  function $t(_e, Ie, Ce) {
    var ke = "";
    Ce = Math.min(_e.length, Ce);
    for (var Ve = Ie; Ve < Ce; ++Ve)
      ke += String.fromCharCode(_e[Ve]);
    return ke;
  }
  function Wt(_e, Ie, Ce) {
    var ke = _e.length;
    (!Ie || Ie < 0) && (Ie = 0), (!Ce || Ce < 0 || Ce > ke) && (Ce = ke);
    for (var Ve = "", Ze = Ie; Ze < Ce; ++Ze)
      Ve += Ye[_e[Ze]];
    return Ve;
  }
  function st(_e, Ie, Ce) {
    for (var ke = _e.slice(Ie, Ce), Ve = "", Ze = 0; Ze < ke.length - 1; Ze += 2)
      Ve += String.fromCharCode(ke[Ze] + ke[Ze + 1] * 256);
    return Ve;
  }
  de.prototype.slice = function(Ie, Ce) {
    var ke = this.length;
    Ie = ~~Ie, Ce = Ce === void 0 ? ke : ~~Ce, Ie < 0 ? (Ie += ke, Ie < 0 && (Ie = 0)) : Ie > ke && (Ie = ke), Ce < 0 ? (Ce += ke, Ce < 0 && (Ce = 0)) : Ce > ke && (Ce = ke), Ce < Ie && (Ce = Ie);
    var Ve = this.subarray(Ie, Ce);
    return Object.setPrototypeOf(Ve, de.prototype), Ve;
  };
  function at(_e, Ie, Ce) {
    if (_e % 1 !== 0 || _e < 0)
      throw new RangeError("offset is not uint");
    if (_e + Ie > Ce)
      throw new RangeError("Trying to access beyond buffer length");
  }
  de.prototype.readUintLE = de.prototype.readUIntLE = function(Ie, Ce, ke) {
    Ie = Ie >>> 0, Ce = Ce >>> 0, ke || at(Ie, Ce, this.length);
    for (var Ve = this[Ie], Ze = 1, ct = 0; ++ct < Ce && (Ze *= 256); )
      Ve += this[Ie + ct] * Ze;
    return Ve;
  }, de.prototype.readUintBE = de.prototype.readUIntBE = function(Ie, Ce, ke) {
    Ie = Ie >>> 0, Ce = Ce >>> 0, ke || at(Ie, Ce, this.length);
    for (var Ve = this[Ie + --Ce], Ze = 1; Ce > 0 && (Ze *= 256); )
      Ve += this[Ie + --Ce] * Ze;
    return Ve;
  }, de.prototype.readUint8 = de.prototype.readUInt8 = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 1, this.length), this[Ie];
  }, de.prototype.readUint16LE = de.prototype.readUInt16LE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 2, this.length), this[Ie] | this[Ie + 1] << 8;
  }, de.prototype.readUint16BE = de.prototype.readUInt16BE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 2, this.length), this[Ie] << 8 | this[Ie + 1];
  }, de.prototype.readUint32LE = de.prototype.readUInt32LE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 4, this.length), (this[Ie] | this[Ie + 1] << 8 | this[Ie + 2] << 16) + this[Ie + 3] * 16777216;
  }, de.prototype.readUint32BE = de.prototype.readUInt32BE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 4, this.length), this[Ie] * 16777216 + (this[Ie + 1] << 16 | this[Ie + 2] << 8 | this[Ie + 3]);
  }, de.prototype.readIntLE = function(Ie, Ce, ke) {
    Ie = Ie >>> 0, Ce = Ce >>> 0, ke || at(Ie, Ce, this.length);
    for (var Ve = this[Ie], Ze = 1, ct = 0; ++ct < Ce && (Ze *= 256); )
      Ve += this[Ie + ct] * Ze;
    return Ze *= 128, Ve >= Ze && (Ve -= Math.pow(2, 8 * Ce)), Ve;
  }, de.prototype.readIntBE = function(Ie, Ce, ke) {
    Ie = Ie >>> 0, Ce = Ce >>> 0, ke || at(Ie, Ce, this.length);
    for (var Ve = Ce, Ze = 1, ct = this[Ie + --Ve]; Ve > 0 && (Ze *= 256); )
      ct += this[Ie + --Ve] * Ze;
    return Ze *= 128, ct >= Ze && (ct -= Math.pow(2, 8 * Ce)), ct;
  }, de.prototype.readInt8 = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 1, this.length), this[Ie] & 128 ? (255 - this[Ie] + 1) * -1 : this[Ie];
  }, de.prototype.readInt16LE = function(Ie, Ce) {
    Ie = Ie >>> 0, Ce || at(Ie, 2, this.length);
    var ke = this[Ie] | this[Ie + 1] << 8;
    return ke & 32768 ? ke | 4294901760 : ke;
  }, de.prototype.readInt16BE = function(Ie, Ce) {
    Ie = Ie >>> 0, Ce || at(Ie, 2, this.length);
    var ke = this[Ie + 1] | this[Ie] << 8;
    return ke & 32768 ? ke | 4294901760 : ke;
  }, de.prototype.readInt32LE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 4, this.length), this[Ie] | this[Ie + 1] << 8 | this[Ie + 2] << 16 | this[Ie + 3] << 24;
  }, de.prototype.readInt32BE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 4, this.length), this[Ie] << 24 | this[Ie + 1] << 16 | this[Ie + 2] << 8 | this[Ie + 3];
  }, de.prototype.readFloatLE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 4, this.length), ne.read(this, Ie, !0, 23, 4);
  }, de.prototype.readFloatBE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 4, this.length), ne.read(this, Ie, !1, 23, 4);
  }, de.prototype.readDoubleLE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 8, this.length), ne.read(this, Ie, !0, 52, 8);
  }, de.prototype.readDoubleBE = function(Ie, Ce) {
    return Ie = Ie >>> 0, Ce || at(Ie, 8, this.length), ne.read(this, Ie, !1, 52, 8);
  };
  function wt(_e, Ie, Ce, ke, Ve, Ze) {
    if (!de.isBuffer(_e))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (Ie > Ve || Ie < Ze)
      throw new RangeError('"value" argument is out of bounds');
    if (Ce + ke > _e.length)
      throw new RangeError("Index out of range");
  }
  de.prototype.writeUintLE = de.prototype.writeUIntLE = function(Ie, Ce, ke, Ve) {
    if (Ie = +Ie, Ce = Ce >>> 0, ke = ke >>> 0, !Ve) {
      var Ze = Math.pow(2, 8 * ke) - 1;
      wt(this, Ie, Ce, ke, Ze, 0);
    }
    var ct = 1, kt = 0;
    for (this[Ce] = Ie & 255; ++kt < ke && (ct *= 256); )
      this[Ce + kt] = Ie / ct & 255;
    return Ce + ke;
  }, de.prototype.writeUintBE = de.prototype.writeUIntBE = function(Ie, Ce, ke, Ve) {
    if (Ie = +Ie, Ce = Ce >>> 0, ke = ke >>> 0, !Ve) {
      var Ze = Math.pow(2, 8 * ke) - 1;
      wt(this, Ie, Ce, ke, Ze, 0);
    }
    var ct = ke - 1, kt = 1;
    for (this[Ce + ct] = Ie & 255; --ct >= 0 && (kt *= 256); )
      this[Ce + ct] = Ie / kt & 255;
    return Ce + ke;
  }, de.prototype.writeUint8 = de.prototype.writeUInt8 = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 1, 255, 0), this[Ce] = Ie & 255, Ce + 1;
  }, de.prototype.writeUint16LE = de.prototype.writeUInt16LE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 2, 65535, 0), this[Ce] = Ie & 255, this[Ce + 1] = Ie >>> 8, Ce + 2;
  }, de.prototype.writeUint16BE = de.prototype.writeUInt16BE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 2, 65535, 0), this[Ce] = Ie >>> 8, this[Ce + 1] = Ie & 255, Ce + 2;
  }, de.prototype.writeUint32LE = de.prototype.writeUInt32LE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 4, 4294967295, 0), this[Ce + 3] = Ie >>> 24, this[Ce + 2] = Ie >>> 16, this[Ce + 1] = Ie >>> 8, this[Ce] = Ie & 255, Ce + 4;
  }, de.prototype.writeUint32BE = de.prototype.writeUInt32BE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 4, 4294967295, 0), this[Ce] = Ie >>> 24, this[Ce + 1] = Ie >>> 16, this[Ce + 2] = Ie >>> 8, this[Ce + 3] = Ie & 255, Ce + 4;
  }, de.prototype.writeIntLE = function(Ie, Ce, ke, Ve) {
    if (Ie = +Ie, Ce = Ce >>> 0, !Ve) {
      var Ze = Math.pow(2, 8 * ke - 1);
      wt(this, Ie, Ce, ke, Ze - 1, -Ze);
    }
    var ct = 0, kt = 1, Jt = 0;
    for (this[Ce] = Ie & 255; ++ct < ke && (kt *= 256); )
      Ie < 0 && Jt === 0 && this[Ce + ct - 1] !== 0 && (Jt = 1), this[Ce + ct] = (Ie / kt >> 0) - Jt & 255;
    return Ce + ke;
  }, de.prototype.writeIntBE = function(Ie, Ce, ke, Ve) {
    if (Ie = +Ie, Ce = Ce >>> 0, !Ve) {
      var Ze = Math.pow(2, 8 * ke - 1);
      wt(this, Ie, Ce, ke, Ze - 1, -Ze);
    }
    var ct = ke - 1, kt = 1, Jt = 0;
    for (this[Ce + ct] = Ie & 255; --ct >= 0 && (kt *= 256); )
      Ie < 0 && Jt === 0 && this[Ce + ct + 1] !== 0 && (Jt = 1), this[Ce + ct] = (Ie / kt >> 0) - Jt & 255;
    return Ce + ke;
  }, de.prototype.writeInt8 = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 1, 127, -128), Ie < 0 && (Ie = 255 + Ie + 1), this[Ce] = Ie & 255, Ce + 1;
  }, de.prototype.writeInt16LE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 2, 32767, -32768), this[Ce] = Ie & 255, this[Ce + 1] = Ie >>> 8, Ce + 2;
  }, de.prototype.writeInt16BE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 2, 32767, -32768), this[Ce] = Ie >>> 8, this[Ce + 1] = Ie & 255, Ce + 2;
  }, de.prototype.writeInt32LE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 4, 2147483647, -2147483648), this[Ce] = Ie & 255, this[Ce + 1] = Ie >>> 8, this[Ce + 2] = Ie >>> 16, this[Ce + 3] = Ie >>> 24, Ce + 4;
  }, de.prototype.writeInt32BE = function(Ie, Ce, ke) {
    return Ie = +Ie, Ce = Ce >>> 0, ke || wt(this, Ie, Ce, 4, 2147483647, -2147483648), Ie < 0 && (Ie = 4294967295 + Ie + 1), this[Ce] = Ie >>> 24, this[Ce + 1] = Ie >>> 16, this[Ce + 2] = Ie >>> 8, this[Ce + 3] = Ie & 255, Ce + 4;
  };
  function Ut(_e, Ie, Ce, ke, Ve, Ze) {
    if (Ce + ke > _e.length)
      throw new RangeError("Index out of range");
    if (Ce < 0)
      throw new RangeError("Index out of range");
  }
  function $e(_e, Ie, Ce, ke, Ve) {
    return Ie = +Ie, Ce = Ce >>> 0, Ve || Ut(_e, Ie, Ce, 4), ne.write(_e, Ie, Ce, ke, 23, 4), Ce + 4;
  }
  de.prototype.writeFloatLE = function(Ie, Ce, ke) {
    return $e(this, Ie, Ce, !0, ke);
  }, de.prototype.writeFloatBE = function(Ie, Ce, ke) {
    return $e(this, Ie, Ce, !1, ke);
  };
  function ir(_e, Ie, Ce, ke, Ve) {
    return Ie = +Ie, Ce = Ce >>> 0, Ve || Ut(_e, Ie, Ce, 8), ne.write(_e, Ie, Ce, ke, 52, 8), Ce + 8;
  }
  de.prototype.writeDoubleLE = function(Ie, Ce, ke) {
    return ir(this, Ie, Ce, !0, ke);
  }, de.prototype.writeDoubleBE = function(Ie, Ce, ke) {
    return ir(this, Ie, Ce, !1, ke);
  }, de.prototype.copy = function(Ie, Ce, ke, Ve) {
    if (!de.isBuffer(Ie))
      throw new TypeError("argument should be a Buffer");
    if (ke || (ke = 0), !Ve && Ve !== 0 && (Ve = this.length), Ce >= Ie.length && (Ce = Ie.length), Ce || (Ce = 0), Ve > 0 && Ve < ke && (Ve = ke), Ve === ke || Ie.length === 0 || this.length === 0)
      return 0;
    if (Ce < 0)
      throw new RangeError("targetStart out of bounds");
    if (ke < 0 || ke >= this.length)
      throw new RangeError("Index out of range");
    if (Ve < 0)
      throw new RangeError("sourceEnd out of bounds");
    Ve > this.length && (Ve = this.length), Ie.length - Ce < Ve - ke && (Ve = Ie.length - Ce + ke);
    var Ze = Ve - ke;
    return this === Ie && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(Ce, ke, Ve) : Uint8Array.prototype.set.call(
      Ie,
      this.subarray(ke, Ve),
      Ce
    ), Ze;
  }, de.prototype.fill = function(Ie, Ce, ke, Ve) {
    if (typeof Ie == "string") {
      if (typeof Ce == "string" ? (Ve = Ce, Ce = 0, ke = this.length) : typeof ke == "string" && (Ve = ke, ke = this.length), Ve !== void 0 && typeof Ve != "string")
        throw new TypeError("encoding must be a string");
      if (typeof Ve == "string" && !de.isEncoding(Ve))
        throw new TypeError("Unknown encoding: " + Ve);
      if (Ie.length === 1) {
        var Ze = Ie.charCodeAt(0);
        (Ve === "utf8" && Ze < 128 || Ve === "latin1") && (Ie = Ze);
      }
    } else
      typeof Ie == "number" ? Ie = Ie & 255 : typeof Ie == "boolean" && (Ie = Number(Ie));
    if (Ce < 0 || this.length < Ce || this.length < ke)
      throw new RangeError("Out of range index");
    if (ke <= Ce)
      return this;
    Ce = Ce >>> 0, ke = ke === void 0 ? this.length : ke >>> 0, Ie || (Ie = 0);
    var ct;
    if (typeof Ie == "number")
      for (ct = Ce; ct < ke; ++ct)
        this[ct] = Ie;
    else {
      var kt = de.isBuffer(Ie) ? Ie : de.from(Ie, Ve), Jt = kt.length;
      if (Jt === 0)
        throw new TypeError('The value "' + Ie + '" is invalid for argument "value"');
      for (ct = 0; ct < ke - Ce; ++ct)
        this[ct + Ce] = kt[ct % Jt];
    }
    return this;
  };
  var tr = /[^+/0-9A-Za-z-_]/g;
  function ar(_e) {
    if (_e = _e.split("=")[0], _e = _e.trim().replace(tr, ""), _e.length < 2)
      return "";
    for (; _e.length % 4 !== 0; )
      _e = _e + "=";
    return _e;
  }
  function ht(_e, Ie) {
    Ie = Ie || 1 / 0;
    for (var Ce, ke = _e.length, Ve = null, Ze = [], ct = 0; ct < ke; ++ct) {
      if (Ce = _e.charCodeAt(ct), Ce > 55295 && Ce < 57344) {
        if (!Ve) {
          if (Ce > 56319) {
            (Ie -= 3) > -1 && Ze.push(239, 191, 189);
            continue;
          } else if (ct + 1 === ke) {
            (Ie -= 3) > -1 && Ze.push(239, 191, 189);
            continue;
          }
          Ve = Ce;
          continue;
        }
        if (Ce < 56320) {
          (Ie -= 3) > -1 && Ze.push(239, 191, 189), Ve = Ce;
          continue;
        }
        Ce = (Ve - 55296 << 10 | Ce - 56320) + 65536;
      } else
        Ve && (Ie -= 3) > -1 && Ze.push(239, 191, 189);
      if (Ve = null, Ce < 128) {
        if ((Ie -= 1) < 0)
          break;
        Ze.push(Ce);
      } else if (Ce < 2048) {
        if ((Ie -= 2) < 0)
          break;
        Ze.push(
          Ce >> 6 | 192,
          Ce & 63 | 128
        );
      } else if (Ce < 65536) {
        if ((Ie -= 3) < 0)
          break;
        Ze.push(
          Ce >> 12 | 224,
          Ce >> 6 & 63 | 128,
          Ce & 63 | 128
        );
      } else if (Ce < 1114112) {
        if ((Ie -= 4) < 0)
          break;
        Ze.push(
          Ce >> 18 | 240,
          Ce >> 12 & 63 | 128,
          Ce >> 6 & 63 | 128,
          Ce & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Ze;
  }
  function qt(_e) {
    for (var Ie = [], Ce = 0; Ce < _e.length; ++Ce)
      Ie.push(_e.charCodeAt(Ce) & 255);
    return Ie;
  }
  function Xe(_e, Ie) {
    for (var Ce, ke, Ve, Ze = [], ct = 0; ct < _e.length && !((Ie -= 2) < 0); ++ct)
      Ce = _e.charCodeAt(ct), ke = Ce >> 8, Ve = Ce % 256, Ze.push(Ve), Ze.push(ke);
    return Ze;
  }
  function nt(_e) {
    return ee.toByteArray(ar(_e));
  }
  function je(_e, Ie, Ce, ke) {
    for (var Ve = 0; Ve < ke && !(Ve + Ce >= Ie.length || Ve >= _e.length); ++Ve)
      Ie[Ve + Ce] = _e[Ve];
    return Ve;
  }
  function It(_e, Ie) {
    return _e instanceof Ie || _e != null && _e.constructor != null && _e.constructor.name != null && _e.constructor.name === Ie.name;
  }
  function lt(_e) {
    return _e !== _e;
  }
  var Ye = function() {
    for (var _e = "0123456789abcdef", Ie = new Array(256), Ce = 0; Ce < 16; ++Ce)
      for (var ke = Ce * 16, Ve = 0; Ve < 16; ++Ve)
        Ie[ke + Ve] = _e[Ce] + _e[Ve];
    return Ie;
  }();
})(buffer);
var bignumber = { exports: {} };
(function(Q) {
  (function(ee) {
    var ne, ie = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, ae = Math.ceil, ce = Math.floor, le = "[BigNumber Error] ", de = le + "Number primitive has more than 15 significant digits: ", ye = 1e14, he = 14, Be = 9007199254740991, Ee = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], me = 1e7, ge = 1e9;
    function be(We) {
      var tt, Et, Nt, et = $e.prototype = { constructor: $e, toString: null, valueOf: null }, mt = new $e(1), Mt = 20, Ot = 4, yt = -7, Qt = 21, Yt = -1e7, jt = 1e7, $t = !1, Wt = 1, st = 0, at = {
        prefix: "",
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ",",
        decimalSeparator: ".",
        fractionGroupSize: 0,
        fractionGroupSeparator: "\xA0",
        suffix: ""
      }, wt = "0123456789abcdefghijklmnopqrstuvwxyz", Ut = !0;
      function $e(Xe, nt) {
        var je, It, lt, Ye, _e, Ie, Ce, ke, Ve = this;
        if (!(Ve instanceof $e))
          return new $e(Xe, nt);
        if (nt == null) {
          if (Xe && Xe._isBigNumber === !0) {
            Ve.s = Xe.s, !Xe.c || Xe.e > jt ? Ve.c = Ve.e = null : Xe.e < Yt ? Ve.c = [Ve.e = 0] : (Ve.e = Xe.e, Ve.c = Xe.c.slice());
            return;
          }
          if ((Ie = typeof Xe == "number") && Xe * 0 == 0) {
            if (Ve.s = 1 / Xe < 0 ? (Xe = -Xe, -1) : 1, Xe === ~~Xe) {
              for (Ye = 0, _e = Xe; _e >= 10; _e /= 10, Ye++)
                ;
              Ye > jt ? Ve.c = Ve.e = null : (Ve.e = Ye, Ve.c = [Xe]);
              return;
            }
            ke = String(Xe);
          } else {
            if (!ie.test(ke = String(Xe)))
              return Nt(Ve, ke, Ie);
            Ve.s = ke.charCodeAt(0) == 45 ? (ke = ke.slice(1), -1) : 1;
          }
          (Ye = ke.indexOf(".")) > -1 && (ke = ke.replace(".", "")), (_e = ke.search(/e/i)) > 0 ? (Ye < 0 && (Ye = _e), Ye += +ke.slice(_e + 1), ke = ke.substring(0, _e)) : Ye < 0 && (Ye = ke.length);
        } else {
          if (Se(nt, 2, wt.length, "Base"), nt == 10 && Ut)
            return Ve = new $e(Xe), ht(Ve, Mt + Ve.e + 1, Ot);
          if (ke = String(Xe), Ie = typeof Xe == "number") {
            if (Xe * 0 != 0)
              return Nt(Ve, ke, Ie, nt);
            if (Ve.s = 1 / Xe < 0 ? (ke = ke.slice(1), -1) : 1, $e.DEBUG && ke.replace(/^0\.0*|\./, "").length > 15)
              throw Error(de + Xe);
          } else
            Ve.s = ke.charCodeAt(0) === 45 ? (ke = ke.slice(1), -1) : 1;
          for (je = wt.slice(0, nt), Ye = _e = 0, Ce = ke.length; _e < Ce; _e++)
            if (je.indexOf(It = ke.charAt(_e)) < 0) {
              if (It == ".") {
                if (_e > Ye) {
                  Ye = Ce;
                  continue;
                }
              } else if (!lt && (ke == ke.toUpperCase() && (ke = ke.toLowerCase()) || ke == ke.toLowerCase() && (ke = ke.toUpperCase()))) {
                lt = !0, _e = -1, Ye = 0;
                continue;
              }
              return Nt(Ve, String(Xe), Ie, nt);
            }
          Ie = !1, ke = Et(ke, nt, 10, Ve.s), (Ye = ke.indexOf(".")) > -1 ? ke = ke.replace(".", "") : Ye = ke.length;
        }
        for (_e = 0; ke.charCodeAt(_e) === 48; _e++)
          ;
        for (Ce = ke.length; ke.charCodeAt(--Ce) === 48; )
          ;
        if (ke = ke.slice(_e, ++Ce)) {
          if (Ce -= _e, Ie && $e.DEBUG && Ce > 15 && (Xe > Be || Xe !== ce(Xe)))
            throw Error(de + Ve.s * Xe);
          if ((Ye = Ye - _e - 1) > jt)
            Ve.c = Ve.e = null;
          else if (Ye < Yt)
            Ve.c = [Ve.e = 0];
          else {
            if (Ve.e = Ye, Ve.c = [], _e = (Ye + 1) % he, Ye < 0 && (_e += he), _e < Ce) {
              for (_e && Ve.c.push(+ke.slice(0, _e)), Ce -= he; _e < Ce; )
                Ve.c.push(+ke.slice(_e, _e += he));
              _e = he - (ke = ke.slice(_e)).length;
            } else
              _e -= Ce;
            for (; _e--; ke += "0")
              ;
            Ve.c.push(+ke);
          }
        } else
          Ve.c = [Ve.e = 0];
      }
      $e.clone = be, $e.ROUND_UP = 0, $e.ROUND_DOWN = 1, $e.ROUND_CEIL = 2, $e.ROUND_FLOOR = 3, $e.ROUND_HALF_UP = 4, $e.ROUND_HALF_DOWN = 5, $e.ROUND_HALF_EVEN = 6, $e.ROUND_HALF_CEIL = 7, $e.ROUND_HALF_FLOOR = 8, $e.EUCLID = 9, $e.config = $e.set = function(Xe) {
        var nt, je;
        if (Xe != null)
          if (typeof Xe == "object") {
            if (Xe.hasOwnProperty(nt = "DECIMAL_PLACES") && (je = Xe[nt], Se(je, 0, ge, nt), Mt = je), Xe.hasOwnProperty(nt = "ROUNDING_MODE") && (je = Xe[nt], Se(je, 0, 8, nt), Ot = je), Xe.hasOwnProperty(nt = "EXPONENTIAL_AT") && (je = Xe[nt], je && je.pop ? (Se(je[0], -ge, 0, nt), Se(je[1], 0, ge, nt), yt = je[0], Qt = je[1]) : (Se(je, -ge, ge, nt), yt = -(Qt = je < 0 ? -je : je))), Xe.hasOwnProperty(nt = "RANGE"))
              if (je = Xe[nt], je && je.pop)
                Se(je[0], -ge, -1, nt), Se(je[1], 1, ge, nt), Yt = je[0], jt = je[1];
              else if (Se(je, -ge, ge, nt), je)
                Yt = -(jt = je < 0 ? -je : je);
              else
                throw Error(le + nt + " cannot be zero: " + je);
            if (Xe.hasOwnProperty(nt = "CRYPTO"))
              if (je = Xe[nt], je === !!je)
                if (je)
                  if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes))
                    $t = je;
                  else
                    throw $t = !je, Error(le + "crypto unavailable");
                else
                  $t = je;
              else
                throw Error(le + nt + " not true or false: " + je);
            if (Xe.hasOwnProperty(nt = "MODULO_MODE") && (je = Xe[nt], Se(je, 0, 9, nt), Wt = je), Xe.hasOwnProperty(nt = "POW_PRECISION") && (je = Xe[nt], Se(je, 0, ge, nt), st = je), Xe.hasOwnProperty(nt = "FORMAT"))
              if (je = Xe[nt], typeof je == "object")
                at = je;
              else
                throw Error(le + nt + " not an object: " + je);
            if (Xe.hasOwnProperty(nt = "ALPHABET"))
              if (je = Xe[nt], typeof je == "string" && !/^.?$|[+\-.\s]|(.).*\1/.test(je))
                Ut = je.slice(0, 10) == "0123456789", wt = je;
              else
                throw Error(le + nt + " invalid: " + je);
          } else
            throw Error(le + "Object expected: " + Xe);
        return {
          DECIMAL_PLACES: Mt,
          ROUNDING_MODE: Ot,
          EXPONENTIAL_AT: [yt, Qt],
          RANGE: [Yt, jt],
          CRYPTO: $t,
          MODULO_MODE: Wt,
          POW_PRECISION: st,
          FORMAT: at,
          ALPHABET: wt
        };
      }, $e.isBigNumber = function(Xe) {
        if (!Xe || Xe._isBigNumber !== !0)
          return !1;
        if (!$e.DEBUG)
          return !0;
        var nt, je, It = Xe.c, lt = Xe.e, Ye = Xe.s;
        e:
          if ({}.toString.call(It) == "[object Array]") {
            if ((Ye === 1 || Ye === -1) && lt >= -ge && lt <= ge && lt === ce(lt)) {
              if (It[0] === 0) {
                if (lt === 0 && It.length === 1)
                  return !0;
                break e;
              }
              if (nt = (lt + 1) % he, nt < 1 && (nt += he), String(It[0]).length == nt) {
                for (nt = 0; nt < It.length; nt++)
                  if (je = It[nt], je < 0 || je >= ye || je !== ce(je))
                    break e;
                if (je !== 0)
                  return !0;
              }
            }
          } else if (It === null && lt === null && (Ye === null || Ye === 1 || Ye === -1))
            return !0;
        throw Error(le + "Invalid BigNumber: " + Xe);
      }, $e.maximum = $e.max = function() {
        return tr(arguments, et.lt);
      }, $e.minimum = $e.min = function() {
        return tr(arguments, et.gt);
      }, $e.random = function() {
        var Xe = 9007199254740992, nt = Math.random() * Xe & 2097151 ? function() {
          return ce(Math.random() * Xe);
        } : function() {
          return (Math.random() * 1073741824 | 0) * 8388608 + (Math.random() * 8388608 | 0);
        };
        return function(je) {
          var It, lt, Ye, _e, Ie, Ce = 0, ke = [], Ve = new $e(mt);
          if (je == null ? je = Mt : Se(je, 0, ge), _e = ae(je / he), $t)
            if (crypto.getRandomValues) {
              for (It = crypto.getRandomValues(new Uint32Array(_e *= 2)); Ce < _e; )
                Ie = It[Ce] * 131072 + (It[Ce + 1] >>> 11), Ie >= 9e15 ? (lt = crypto.getRandomValues(new Uint32Array(2)), It[Ce] = lt[0], It[Ce + 1] = lt[1]) : (ke.push(Ie % 1e14), Ce += 2);
              Ce = _e / 2;
            } else if (crypto.randomBytes) {
              for (It = crypto.randomBytes(_e *= 7); Ce < _e; )
                Ie = (It[Ce] & 31) * 281474976710656 + It[Ce + 1] * 1099511627776 + It[Ce + 2] * 4294967296 + It[Ce + 3] * 16777216 + (It[Ce + 4] << 16) + (It[Ce + 5] << 8) + It[Ce + 6], Ie >= 9e15 ? crypto.randomBytes(7).copy(It, Ce) : (ke.push(Ie % 1e14), Ce += 7);
              Ce = _e / 7;
            } else
              throw $t = !1, Error(le + "crypto unavailable");
          if (!$t)
            for (; Ce < _e; )
              Ie = nt(), Ie < 9e15 && (ke[Ce++] = Ie % 1e14);
          for (_e = ke[--Ce], je %= he, _e && je && (Ie = Ee[he - je], ke[Ce] = ce(_e / Ie) * Ie); ke[Ce] === 0; ke.pop(), Ce--)
            ;
          if (Ce < 0)
            ke = [Ye = 0];
          else {
            for (Ye = -1; ke[0] === 0; ke.splice(0, 1), Ye -= he)
              ;
            for (Ce = 1, Ie = ke[0]; Ie >= 10; Ie /= 10, Ce++)
              ;
            Ce < he && (Ye -= he - Ce);
          }
          return Ve.e = Ye, Ve.c = ke, Ve;
        };
      }(), $e.sum = function() {
        for (var Xe = 1, nt = arguments, je = new $e(nt[0]); Xe < nt.length; )
          je = je.plus(nt[Xe++]);
        return je;
      }, Et = function() {
        var Xe = "0123456789";
        function nt(je, It, lt, Ye) {
          for (var _e, Ie = [0], Ce, ke = 0, Ve = je.length; ke < Ve; ) {
            for (Ce = Ie.length; Ce--; Ie[Ce] *= It)
              ;
            for (Ie[0] += Ye.indexOf(je.charAt(ke++)), _e = 0; _e < Ie.length; _e++)
              Ie[_e] > lt - 1 && (Ie[_e + 1] == null && (Ie[_e + 1] = 0), Ie[_e + 1] += Ie[_e] / lt | 0, Ie[_e] %= lt);
          }
          return Ie.reverse();
        }
        return function(je, It, lt, Ye, _e) {
          var Ie, Ce, ke, Ve, Ze, ct, kt, Jt, Kt = je.indexOf("."), Zt = Mt, De = Ot;
          for (Kt >= 0 && (Ve = st, st = 0, je = je.replace(".", ""), Jt = new $e(It), ct = Jt.pow(je.length - Kt), st = Ve, Jt.c = nt(
            Pe(Oe(ct.c), ct.e, "0"),
            10,
            lt,
            Xe
          ), Jt.e = Jt.c.length), kt = nt(je, It, lt, _e ? (Ie = wt, Xe) : (Ie = Xe, wt)), ke = Ve = kt.length; kt[--Ve] == 0; kt.pop())
            ;
          if (!kt[0])
            return Ie.charAt(0);
          if (Kt < 0 ? --ke : (ct.c = kt, ct.e = ke, ct.s = Ye, ct = tt(ct, Jt, Zt, De, lt), kt = ct.c, Ze = ct.r, ke = ct.e), Ce = ke + Zt + 1, Kt = kt[Ce], Ve = lt / 2, Ze = Ze || Ce < 0 || kt[Ce + 1] != null, Ze = De < 4 ? (Kt != null || Ze) && (De == 0 || De == (ct.s < 0 ? 3 : 2)) : Kt > Ve || Kt == Ve && (De == 4 || Ze || De == 6 && kt[Ce - 1] & 1 || De == (ct.s < 0 ? 8 : 7)), Ce < 1 || !kt[0])
            je = Ze ? Pe(Ie.charAt(1), -Zt, Ie.charAt(0)) : Ie.charAt(0);
          else {
            if (kt.length = Ce, Ze)
              for (--lt; ++kt[--Ce] > lt; )
                kt[Ce] = 0, Ce || (++ke, kt = [1].concat(kt));
            for (Ve = kt.length; !kt[--Ve]; )
              ;
            for (Kt = 0, je = ""; Kt <= Ve; je += Ie.charAt(kt[Kt++]))
              ;
            je = Pe(je, ke, Ie.charAt(0));
          }
          return je;
        };
      }(), tt = function() {
        function Xe(It, lt, Ye) {
          var _e, Ie, Ce, ke, Ve = 0, Ze = It.length, ct = lt % me, kt = lt / me | 0;
          for (It = It.slice(); Ze--; )
            Ce = It[Ze] % me, ke = It[Ze] / me | 0, _e = kt * Ce + ke * ct, Ie = ct * Ce + _e % me * me + Ve, Ve = (Ie / Ye | 0) + (_e / me | 0) + kt * ke, It[Ze] = Ie % Ye;
          return Ve && (It = [Ve].concat(It)), It;
        }
        function nt(It, lt, Ye, _e) {
          var Ie, Ce;
          if (Ye != _e)
            Ce = Ye > _e ? 1 : -1;
          else
            for (Ie = Ce = 0; Ie < Ye; Ie++)
              if (It[Ie] != lt[Ie]) {
                Ce = It[Ie] > lt[Ie] ? 1 : -1;
                break;
              }
          return Ce;
        }
        function je(It, lt, Ye, _e) {
          for (var Ie = 0; Ye--; )
            It[Ye] -= Ie, Ie = It[Ye] < lt[Ye] ? 1 : 0, It[Ye] = Ie * _e + It[Ye] - lt[Ye];
          for (; !It[0] && It.length > 1; It.splice(0, 1))
            ;
        }
        return function(It, lt, Ye, _e, Ie) {
          var Ce, ke, Ve, Ze, ct, kt, Jt, Kt, Zt, De, Te, Re, ot, bt, Pt, Vt, Ir, mr = It.s == lt.s ? 1 : -1, _r = It.c, Br = lt.c;
          if (!_r || !_r[0] || !Br || !Br[0])
            return new $e(
              !It.s || !lt.s || (_r ? Br && _r[0] == Br[0] : !Br) ? NaN : _r && _r[0] == 0 || !Br ? mr * 0 : mr / 0
            );
          for (Kt = new $e(mr), Zt = Kt.c = [], ke = It.e - lt.e, mr = Ye + ke + 1, Ie || (Ie = ye, ke = we(It.e / he) - we(lt.e / he), mr = mr / he | 0), Ve = 0; Br[Ve] == (_r[Ve] || 0); Ve++)
            ;
          if (Br[Ve] > (_r[Ve] || 0) && ke--, mr < 0)
            Zt.push(1), Ze = !0;
          else {
            for (bt = _r.length, Vt = Br.length, Ve = 0, mr += 2, ct = ce(Ie / (Br[0] + 1)), ct > 1 && (Br = Xe(Br, ct, Ie), _r = Xe(_r, ct, Ie), Vt = Br.length, bt = _r.length), ot = Vt, De = _r.slice(0, Vt), Te = De.length; Te < Vt; De[Te++] = 0)
              ;
            Ir = Br.slice(), Ir = [0].concat(Ir), Pt = Br[0], Br[1] >= Ie / 2 && Pt++;
            do {
              if (ct = 0, Ce = nt(Br, De, Vt, Te), Ce < 0) {
                if (Re = De[0], Vt != Te && (Re = Re * Ie + (De[1] || 0)), ct = ce(Re / Pt), ct > 1)
                  for (ct >= Ie && (ct = Ie - 1), kt = Xe(Br, ct, Ie), Jt = kt.length, Te = De.length; nt(kt, De, Jt, Te) == 1; )
                    ct--, je(kt, Vt < Jt ? Ir : Br, Jt, Ie), Jt = kt.length, Ce = 1;
                else
                  ct == 0 && (Ce = ct = 1), kt = Br.slice(), Jt = kt.length;
                if (Jt < Te && (kt = [0].concat(kt)), je(De, kt, Te, Ie), Te = De.length, Ce == -1)
                  for (; nt(Br, De, Vt, Te) < 1; )
                    ct++, je(De, Vt < Te ? Ir : Br, Te, Ie), Te = De.length;
              } else
                Ce === 0 && (ct++, De = [0]);
              Zt[Ve++] = ct, De[0] ? De[Te++] = _r[ot] || 0 : (De = [_r[ot]], Te = 1);
            } while ((ot++ < bt || De[0] != null) && mr--);
            Ze = De[0] != null, Zt[0] || Zt.splice(0, 1);
          }
          if (Ie == ye) {
            for (Ve = 1, mr = Zt[0]; mr >= 10; mr /= 10, Ve++)
              ;
            ht(Kt, Ye + (Kt.e = Ve + ke * he - 1) + 1, _e, Ze);
          } else
            Kt.e = ke, Kt.r = +Ze;
          return Kt;
        };
      }();
      function ir(Xe, nt, je, It) {
        var lt, Ye, _e, Ie, Ce;
        if (je == null ? je = Ot : Se(je, 0, 8), !Xe.c)
          return Xe.toString();
        if (lt = Xe.c[0], _e = Xe.e, nt == null)
          Ce = Oe(Xe.c), Ce = It == 1 || It == 2 && (_e <= yt || _e >= Qt) ? Fe(Ce, _e) : Pe(Ce, _e, "0");
        else if (Xe = ht(new $e(Xe), nt, je), Ye = Xe.e, Ce = Oe(Xe.c), Ie = Ce.length, It == 1 || It == 2 && (nt <= Ye || Ye <= yt)) {
          for (; Ie < nt; Ce += "0", Ie++)
            ;
          Ce = Fe(Ce, Ye);
        } else if (nt -= _e, Ce = Pe(Ce, Ye, "0"), Ye + 1 > Ie) {
          if (--nt > 0)
            for (Ce += "."; nt--; Ce += "0")
              ;
        } else if (nt += Ye - Ie, nt > 0)
          for (Ye + 1 == Ie && (Ce += "."); nt--; Ce += "0")
            ;
        return Xe.s < 0 && lt ? "-" + Ce : Ce;
      }
      function tr(Xe, nt) {
        for (var je, It = 1, lt = new $e(Xe[0]); It < Xe.length; It++)
          if (je = new $e(Xe[It]), je.s)
            nt.call(lt, je) && (lt = je);
          else {
            lt = je;
            break;
          }
        return lt;
      }
      function ar(Xe, nt, je) {
        for (var It = 1, lt = nt.length; !nt[--lt]; nt.pop())
          ;
        for (lt = nt[0]; lt >= 10; lt /= 10, It++)
          ;
        return (je = It + je * he - 1) > jt ? Xe.c = Xe.e = null : je < Yt ? Xe.c = [Xe.e = 0] : (Xe.e = je, Xe.c = nt), Xe;
      }
      Nt = function() {
        var Xe = /^(-?)0([xbo])(?=\w[\w.]*$)/i, nt = /^([^.]+)\.$/, je = /^\.([^.]+)$/, It = /^-?(Infinity|NaN)$/, lt = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function(Ye, _e, Ie, Ce) {
          var ke, Ve = Ie ? _e : _e.replace(lt, "");
          if (It.test(Ve))
            Ye.s = isNaN(Ve) ? null : Ve < 0 ? -1 : 1;
          else {
            if (!Ie && (Ve = Ve.replace(Xe, function(Ze, ct, kt) {
              return ke = (kt = kt.toLowerCase()) == "x" ? 16 : kt == "b" ? 2 : 8, !Ce || Ce == ke ? ct : Ze;
            }), Ce && (ke = Ce, Ve = Ve.replace(nt, "$1").replace(je, "0.$1")), _e != Ve))
              return new $e(Ve, ke);
            if ($e.DEBUG)
              throw Error(le + "Not a" + (Ce ? " base " + Ce : "") + " number: " + _e);
            Ye.s = null;
          }
          Ye.c = Ye.e = null;
        };
      }();
      function ht(Xe, nt, je, It) {
        var lt, Ye, _e, Ie, Ce, ke, Ve, Ze = Xe.c, ct = Ee;
        if (Ze) {
          e: {
            for (lt = 1, Ie = Ze[0]; Ie >= 10; Ie /= 10, lt++)
              ;
            if (Ye = nt - lt, Ye < 0)
              Ye += he, _e = nt, Ce = Ze[ke = 0], Ve = Ce / ct[lt - _e - 1] % 10 | 0;
            else if (ke = ae((Ye + 1) / he), ke >= Ze.length)
              if (It) {
                for (; Ze.length <= ke; Ze.push(0))
                  ;
                Ce = Ve = 0, lt = 1, Ye %= he, _e = Ye - he + 1;
              } else
                break e;
            else {
              for (Ce = Ie = Ze[ke], lt = 1; Ie >= 10; Ie /= 10, lt++)
                ;
              Ye %= he, _e = Ye - he + lt, Ve = _e < 0 ? 0 : Ce / ct[lt - _e - 1] % 10 | 0;
            }
            if (It = It || nt < 0 || Ze[ke + 1] != null || (_e < 0 ? Ce : Ce % ct[lt - _e - 1]), It = je < 4 ? (Ve || It) && (je == 0 || je == (Xe.s < 0 ? 3 : 2)) : Ve > 5 || Ve == 5 && (je == 4 || It || je == 6 && (Ye > 0 ? _e > 0 ? Ce / ct[lt - _e] : 0 : Ze[ke - 1]) % 10 & 1 || je == (Xe.s < 0 ? 8 : 7)), nt < 1 || !Ze[0])
              return Ze.length = 0, It ? (nt -= Xe.e + 1, Ze[0] = ct[(he - nt % he) % he], Xe.e = -nt || 0) : Ze[0] = Xe.e = 0, Xe;
            if (Ye == 0 ? (Ze.length = ke, Ie = 1, ke--) : (Ze.length = ke + 1, Ie = ct[he - Ye], Ze[ke] = _e > 0 ? ce(Ce / ct[lt - _e] % ct[_e]) * Ie : 0), It)
              for (; ; )
                if (ke == 0) {
                  for (Ye = 1, _e = Ze[0]; _e >= 10; _e /= 10, Ye++)
                    ;
                  for (_e = Ze[0] += Ie, Ie = 1; _e >= 10; _e /= 10, Ie++)
                    ;
                  Ye != Ie && (Xe.e++, Ze[0] == ye && (Ze[0] = 1));
                  break;
                } else {
                  if (Ze[ke] += Ie, Ze[ke] != ye)
                    break;
                  Ze[ke--] = 0, Ie = 1;
                }
            for (Ye = Ze.length; Ze[--Ye] === 0; Ze.pop())
              ;
          }
          Xe.e > jt ? Xe.c = Xe.e = null : Xe.e < Yt && (Xe.c = [Xe.e = 0]);
        }
        return Xe;
      }
      function qt(Xe) {
        var nt, je = Xe.e;
        return je === null ? Xe.toString() : (nt = Oe(Xe.c), nt = je <= yt || je >= Qt ? Fe(nt, je) : Pe(nt, je, "0"), Xe.s < 0 ? "-" + nt : nt);
      }
      return et.absoluteValue = et.abs = function() {
        var Xe = new $e(this);
        return Xe.s < 0 && (Xe.s = 1), Xe;
      }, et.comparedTo = function(Xe, nt) {
        return He(this, new $e(Xe, nt));
      }, et.decimalPlaces = et.dp = function(Xe, nt) {
        var je, It, lt, Ye = this;
        if (Xe != null)
          return Se(Xe, 0, ge), nt == null ? nt = Ot : Se(nt, 0, 8), ht(new $e(Ye), Xe + Ye.e + 1, nt);
        if (!(je = Ye.c))
          return null;
        if (It = ((lt = je.length - 1) - we(this.e / he)) * he, lt = je[lt])
          for (; lt % 10 == 0; lt /= 10, It--)
            ;
        return It < 0 && (It = 0), It;
      }, et.dividedBy = et.div = function(Xe, nt) {
        return tt(this, new $e(Xe, nt), Mt, Ot);
      }, et.dividedToIntegerBy = et.idiv = function(Xe, nt) {
        return tt(this, new $e(Xe, nt), 0, 1);
      }, et.exponentiatedBy = et.pow = function(Xe, nt) {
        var je, It, lt, Ye, _e, Ie, Ce, ke, Ve, Ze = this;
        if (Xe = new $e(Xe), Xe.c && !Xe.isInteger())
          throw Error(le + "Exponent not an integer: " + qt(Xe));
        if (nt != null && (nt = new $e(nt)), Ie = Xe.e > 14, !Ze.c || !Ze.c[0] || Ze.c[0] == 1 && !Ze.e && Ze.c.length == 1 || !Xe.c || !Xe.c[0])
          return Ve = new $e(Math.pow(+qt(Ze), Ie ? 2 - Ge(Xe) : +qt(Xe))), nt ? Ve.mod(nt) : Ve;
        if (Ce = Xe.s < 0, nt) {
          if (nt.c ? !nt.c[0] : !nt.s)
            return new $e(NaN);
          It = !Ce && Ze.isInteger() && nt.isInteger(), It && (Ze = Ze.mod(nt));
        } else {
          if (Xe.e > 9 && (Ze.e > 0 || Ze.e < -1 || (Ze.e == 0 ? Ze.c[0] > 1 || Ie && Ze.c[1] >= 24e7 : Ze.c[0] < 8e13 || Ie && Ze.c[0] <= 9999975e7)))
            return Ye = Ze.s < 0 && Ge(Xe) ? -0 : 0, Ze.e > -1 && (Ye = 1 / Ye), new $e(Ce ? 1 / Ye : Ye);
          st && (Ye = ae(st / he + 2));
        }
        for (Ie ? (je = new $e(0.5), Ce && (Xe.s = 1), ke = Ge(Xe)) : (lt = Math.abs(+qt(Xe)), ke = lt % 2), Ve = new $e(mt); ; ) {
          if (ke) {
            if (Ve = Ve.times(Ze), !Ve.c)
              break;
            Ye ? Ve.c.length > Ye && (Ve.c.length = Ye) : It && (Ve = Ve.mod(nt));
          }
          if (lt) {
            if (lt = ce(lt / 2), lt === 0)
              break;
            ke = lt % 2;
          } else if (Xe = Xe.times(je), ht(Xe, Xe.e + 1, 1), Xe.e > 14)
            ke = Ge(Xe);
          else {
            if (lt = +qt(Xe), lt === 0)
              break;
            ke = lt % 2;
          }
          Ze = Ze.times(Ze), Ye ? Ze.c && Ze.c.length > Ye && (Ze.c.length = Ye) : It && (Ze = Ze.mod(nt));
        }
        return It ? Ve : (Ce && (Ve = mt.div(Ve)), nt ? Ve.mod(nt) : Ye ? ht(Ve, st, Ot, _e) : Ve);
      }, et.integerValue = function(Xe) {
        var nt = new $e(this);
        return Xe == null ? Xe = Ot : Se(Xe, 0, 8), ht(nt, nt.e + 1, Xe);
      }, et.isEqualTo = et.eq = function(Xe, nt) {
        return He(this, new $e(Xe, nt)) === 0;
      }, et.isFinite = function() {
        return !!this.c;
      }, et.isGreaterThan = et.gt = function(Xe, nt) {
        return He(this, new $e(Xe, nt)) > 0;
      }, et.isGreaterThanOrEqualTo = et.gte = function(Xe, nt) {
        return (nt = He(this, new $e(Xe, nt))) === 1 || nt === 0;
      }, et.isInteger = function() {
        return !!this.c && we(this.e / he) > this.c.length - 2;
      }, et.isLessThan = et.lt = function(Xe, nt) {
        return He(this, new $e(Xe, nt)) < 0;
      }, et.isLessThanOrEqualTo = et.lte = function(Xe, nt) {
        return (nt = He(this, new $e(Xe, nt))) === -1 || nt === 0;
      }, et.isNaN = function() {
        return !this.s;
      }, et.isNegative = function() {
        return this.s < 0;
      }, et.isPositive = function() {
        return this.s > 0;
      }, et.isZero = function() {
        return !!this.c && this.c[0] == 0;
      }, et.minus = function(Xe, nt) {
        var je, It, lt, Ye, _e = this, Ie = _e.s;
        if (Xe = new $e(Xe, nt), nt = Xe.s, !Ie || !nt)
          return new $e(NaN);
        if (Ie != nt)
          return Xe.s = -nt, _e.plus(Xe);
        var Ce = _e.e / he, ke = Xe.e / he, Ve = _e.c, Ze = Xe.c;
        if (!Ce || !ke) {
          if (!Ve || !Ze)
            return Ve ? (Xe.s = -nt, Xe) : new $e(Ze ? _e : NaN);
          if (!Ve[0] || !Ze[0])
            return Ze[0] ? (Xe.s = -nt, Xe) : new $e(Ve[0] ? _e : Ot == 3 ? -0 : 0);
        }
        if (Ce = we(Ce), ke = we(ke), Ve = Ve.slice(), Ie = Ce - ke) {
          for ((Ye = Ie < 0) ? (Ie = -Ie, lt = Ve) : (ke = Ce, lt = Ze), lt.reverse(), nt = Ie; nt--; lt.push(0))
            ;
          lt.reverse();
        } else
          for (It = (Ye = (Ie = Ve.length) < (nt = Ze.length)) ? Ie : nt, Ie = nt = 0; nt < It; nt++)
            if (Ve[nt] != Ze[nt]) {
              Ye = Ve[nt] < Ze[nt];
              break;
            }
        if (Ye && (lt = Ve, Ve = Ze, Ze = lt, Xe.s = -Xe.s), nt = (It = Ze.length) - (je = Ve.length), nt > 0)
          for (; nt--; Ve[je++] = 0)
            ;
        for (nt = ye - 1; It > Ie; ) {
          if (Ve[--It] < Ze[It]) {
            for (je = It; je && !Ve[--je]; Ve[je] = nt)
              ;
            --Ve[je], Ve[It] += ye;
          }
          Ve[It] -= Ze[It];
        }
        for (; Ve[0] == 0; Ve.splice(0, 1), --ke)
          ;
        return Ve[0] ? ar(Xe, Ve, ke) : (Xe.s = Ot == 3 ? -1 : 1, Xe.c = [Xe.e = 0], Xe);
      }, et.modulo = et.mod = function(Xe, nt) {
        var je, It, lt = this;
        return Xe = new $e(Xe, nt), !lt.c || !Xe.s || Xe.c && !Xe.c[0] ? new $e(NaN) : !Xe.c || lt.c && !lt.c[0] ? new $e(lt) : (Wt == 9 ? (It = Xe.s, Xe.s = 1, je = tt(lt, Xe, 0, 3), Xe.s = It, je.s *= It) : je = tt(lt, Xe, 0, Wt), Xe = lt.minus(je.times(Xe)), !Xe.c[0] && Wt == 1 && (Xe.s = lt.s), Xe);
      }, et.multipliedBy = et.times = function(Xe, nt) {
        var je, It, lt, Ye, _e, Ie, Ce, ke, Ve, Ze, ct, kt, Jt, Kt, Zt, De = this, Te = De.c, Re = (Xe = new $e(Xe, nt)).c;
        if (!Te || !Re || !Te[0] || !Re[0])
          return !De.s || !Xe.s || Te && !Te[0] && !Re || Re && !Re[0] && !Te ? Xe.c = Xe.e = Xe.s = null : (Xe.s *= De.s, !Te || !Re ? Xe.c = Xe.e = null : (Xe.c = [0], Xe.e = 0)), Xe;
        for (It = we(De.e / he) + we(Xe.e / he), Xe.s *= De.s, Ce = Te.length, Ze = Re.length, Ce < Ze && (Jt = Te, Te = Re, Re = Jt, lt = Ce, Ce = Ze, Ze = lt), lt = Ce + Ze, Jt = []; lt--; Jt.push(0))
          ;
        for (Kt = ye, Zt = me, lt = Ze; --lt >= 0; ) {
          for (je = 0, ct = Re[lt] % Zt, kt = Re[lt] / Zt | 0, _e = Ce, Ye = lt + _e; Ye > lt; )
            ke = Te[--_e] % Zt, Ve = Te[_e] / Zt | 0, Ie = kt * ke + Ve * ct, ke = ct * ke + Ie % Zt * Zt + Jt[Ye] + je, je = (ke / Kt | 0) + (Ie / Zt | 0) + kt * Ve, Jt[Ye--] = ke % Kt;
          Jt[Ye] = je;
        }
        return je ? ++It : Jt.splice(0, 1), ar(Xe, Jt, It);
      }, et.negated = function() {
        var Xe = new $e(this);
        return Xe.s = -Xe.s || null, Xe;
      }, et.plus = function(Xe, nt) {
        var je, It = this, lt = It.s;
        if (Xe = new $e(Xe, nt), nt = Xe.s, !lt || !nt)
          return new $e(NaN);
        if (lt != nt)
          return Xe.s = -nt, It.minus(Xe);
        var Ye = It.e / he, _e = Xe.e / he, Ie = It.c, Ce = Xe.c;
        if (!Ye || !_e) {
          if (!Ie || !Ce)
            return new $e(lt / 0);
          if (!Ie[0] || !Ce[0])
            return Ce[0] ? Xe : new $e(Ie[0] ? It : lt * 0);
        }
        if (Ye = we(Ye), _e = we(_e), Ie = Ie.slice(), lt = Ye - _e) {
          for (lt > 0 ? (_e = Ye, je = Ce) : (lt = -lt, je = Ie), je.reverse(); lt--; je.push(0))
            ;
          je.reverse();
        }
        for (lt = Ie.length, nt = Ce.length, lt - nt < 0 && (je = Ce, Ce = Ie, Ie = je, nt = lt), lt = 0; nt; )
          lt = (Ie[--nt] = Ie[nt] + Ce[nt] + lt) / ye | 0, Ie[nt] = ye === Ie[nt] ? 0 : Ie[nt] % ye;
        return lt && (Ie = [lt].concat(Ie), ++_e), ar(Xe, Ie, _e);
      }, et.precision = et.sd = function(Xe, nt) {
        var je, It, lt, Ye = this;
        if (Xe != null && Xe !== !!Xe)
          return Se(Xe, 1, ge), nt == null ? nt = Ot : Se(nt, 0, 8), ht(new $e(Ye), Xe, nt);
        if (!(je = Ye.c))
          return null;
        if (lt = je.length - 1, It = lt * he + 1, lt = je[lt]) {
          for (; lt % 10 == 0; lt /= 10, It--)
            ;
          for (lt = je[0]; lt >= 10; lt /= 10, It++)
            ;
        }
        return Xe && Ye.e + 1 > It && (It = Ye.e + 1), It;
      }, et.shiftedBy = function(Xe) {
        return Se(Xe, -Be, Be), this.times("1e" + Xe);
      }, et.squareRoot = et.sqrt = function() {
        var Xe, nt, je, It, lt, Ye = this, _e = Ye.c, Ie = Ye.s, Ce = Ye.e, ke = Mt + 4, Ve = new $e("0.5");
        if (Ie !== 1 || !_e || !_e[0])
          return new $e(!Ie || Ie < 0 && (!_e || _e[0]) ? NaN : _e ? Ye : 1 / 0);
        if (Ie = Math.sqrt(+qt(Ye)), Ie == 0 || Ie == 1 / 0 ? (nt = Oe(_e), (nt.length + Ce) % 2 == 0 && (nt += "0"), Ie = Math.sqrt(+nt), Ce = we((Ce + 1) / 2) - (Ce < 0 || Ce % 2), Ie == 1 / 0 ? nt = "5e" + Ce : (nt = Ie.toExponential(), nt = nt.slice(0, nt.indexOf("e") + 1) + Ce), je = new $e(nt)) : je = new $e(Ie + ""), je.c[0]) {
          for (Ce = je.e, Ie = Ce + ke, Ie < 3 && (Ie = 0); ; )
            if (lt = je, je = Ve.times(lt.plus(tt(Ye, lt, ke, 1))), Oe(lt.c).slice(0, Ie) === (nt = Oe(je.c)).slice(0, Ie))
              if (je.e < Ce && --Ie, nt = nt.slice(Ie - 3, Ie + 1), nt == "9999" || !It && nt == "4999") {
                if (!It && (ht(lt, lt.e + Mt + 2, 0), lt.times(lt).eq(Ye))) {
                  je = lt;
                  break;
                }
                ke += 4, Ie += 4, It = 1;
              } else {
                (!+nt || !+nt.slice(1) && nt.charAt(0) == "5") && (ht(je, je.e + Mt + 2, 1), Xe = !je.times(je).eq(Ye));
                break;
              }
        }
        return ht(je, je.e + Mt + 1, Ot, Xe);
      }, et.toExponential = function(Xe, nt) {
        return Xe != null && (Se(Xe, 0, ge), Xe++), ir(this, Xe, nt, 1);
      }, et.toFixed = function(Xe, nt) {
        return Xe != null && (Se(Xe, 0, ge), Xe = Xe + this.e + 1), ir(this, Xe, nt);
      }, et.toFormat = function(Xe, nt, je) {
        var It, lt = this;
        if (je == null)
          Xe != null && nt && typeof nt == "object" ? (je = nt, nt = null) : Xe && typeof Xe == "object" ? (je = Xe, Xe = nt = null) : je = at;
        else if (typeof je != "object")
          throw Error(le + "Argument not an object: " + je);
        if (It = lt.toFixed(Xe, nt), lt.c) {
          var Ye, _e = It.split("."), Ie = +je.groupSize, Ce = +je.secondaryGroupSize, ke = je.groupSeparator || "", Ve = _e[0], Ze = _e[1], ct = lt.s < 0, kt = ct ? Ve.slice(1) : Ve, Jt = kt.length;
          if (Ce && (Ye = Ie, Ie = Ce, Ce = Ye, Jt -= Ye), Ie > 0 && Jt > 0) {
            for (Ye = Jt % Ie || Ie, Ve = kt.substr(0, Ye); Ye < Jt; Ye += Ie)
              Ve += ke + kt.substr(Ye, Ie);
            Ce > 0 && (Ve += ke + kt.slice(Ye)), ct && (Ve = "-" + Ve);
          }
          It = Ze ? Ve + (je.decimalSeparator || "") + ((Ce = +je.fractionGroupSize) ? Ze.replace(
            new RegExp("\\d{" + Ce + "}\\B", "g"),
            "$&" + (je.fractionGroupSeparator || "")
          ) : Ze) : Ve;
        }
        return (je.prefix || "") + It + (je.suffix || "");
      }, et.toFraction = function(Xe) {
        var nt, je, It, lt, Ye, _e, Ie, Ce, ke, Ve, Ze, ct, kt = this, Jt = kt.c;
        if (Xe != null && (Ie = new $e(Xe), !Ie.isInteger() && (Ie.c || Ie.s !== 1) || Ie.lt(mt)))
          throw Error(le + "Argument " + (Ie.isInteger() ? "out of range: " : "not an integer: ") + qt(Ie));
        if (!Jt)
          return new $e(kt);
        for (nt = new $e(mt), ke = je = new $e(mt), It = Ce = new $e(mt), ct = Oe(Jt), Ye = nt.e = ct.length - kt.e - 1, nt.c[0] = Ee[(_e = Ye % he) < 0 ? he + _e : _e], Xe = !Xe || Ie.comparedTo(nt) > 0 ? Ye > 0 ? nt : ke : Ie, _e = jt, jt = 1 / 0, Ie = new $e(ct), Ce.c[0] = 0; Ve = tt(Ie, nt, 0, 1), lt = je.plus(Ve.times(It)), lt.comparedTo(Xe) != 1; )
          je = It, It = lt, ke = Ce.plus(Ve.times(lt = ke)), Ce = lt, nt = Ie.minus(Ve.times(lt = nt)), Ie = lt;
        return lt = tt(Xe.minus(je), It, 0, 1), Ce = Ce.plus(lt.times(ke)), je = je.plus(lt.times(It)), Ce.s = ke.s = kt.s, Ye = Ye * 2, Ze = tt(ke, It, Ye, Ot).minus(kt).abs().comparedTo(
          tt(Ce, je, Ye, Ot).minus(kt).abs()
        ) < 1 ? [ke, It] : [Ce, je], jt = _e, Ze;
      }, et.toNumber = function() {
        return +qt(this);
      }, et.toPrecision = function(Xe, nt) {
        return Xe != null && Se(Xe, 1, ge), ir(this, Xe, nt, 2);
      }, et.toString = function(Xe) {
        var nt, je = this, It = je.s, lt = je.e;
        return lt === null ? It ? (nt = "Infinity", It < 0 && (nt = "-" + nt)) : nt = "NaN" : (Xe == null ? nt = lt <= yt || lt >= Qt ? Fe(Oe(je.c), lt) : Pe(Oe(je.c), lt, "0") : Xe === 10 && Ut ? (je = ht(new $e(je), Mt + lt + 1, Ot), nt = Pe(Oe(je.c), je.e, "0")) : (Se(Xe, 2, wt.length, "Base"), nt = Et(Pe(Oe(je.c), lt, "0"), 10, Xe, It, !0)), It < 0 && je.c[0] && (nt = "-" + nt)), nt;
      }, et.valueOf = et.toJSON = function() {
        return qt(this);
      }, et._isBigNumber = !0, We != null && $e.set(We), $e;
    }
    function we(We) {
      var tt = We | 0;
      return We > 0 || We === tt ? tt : tt - 1;
    }
    function Oe(We) {
      for (var tt, Et, Nt = 1, et = We.length, mt = We[0] + ""; Nt < et; ) {
        for (tt = We[Nt++] + "", Et = he - tt.length; Et--; tt = "0" + tt)
          ;
        mt += tt;
      }
      for (et = mt.length; mt.charCodeAt(--et) === 48; )
        ;
      return mt.slice(0, et + 1 || 1);
    }
    function He(We, tt) {
      var Et, Nt, et = We.c, mt = tt.c, Mt = We.s, Ot = tt.s, yt = We.e, Qt = tt.e;
      if (!Mt || !Ot)
        return null;
      if (Et = et && !et[0], Nt = mt && !mt[0], Et || Nt)
        return Et ? Nt ? 0 : -Ot : Mt;
      if (Mt != Ot)
        return Mt;
      if (Et = Mt < 0, Nt = yt == Qt, !et || !mt)
        return Nt ? 0 : !et ^ Et ? 1 : -1;
      if (!Nt)
        return yt > Qt ^ Et ? 1 : -1;
      for (Ot = (yt = et.length) < (Qt = mt.length) ? yt : Qt, Mt = 0; Mt < Ot; Mt++)
        if (et[Mt] != mt[Mt])
          return et[Mt] > mt[Mt] ^ Et ? 1 : -1;
      return yt == Qt ? 0 : yt > Qt ^ Et ? 1 : -1;
    }
    function Se(We, tt, Et, Nt) {
      if (We < tt || We > Et || We !== ce(We))
        throw Error(le + (Nt || "Argument") + (typeof We == "number" ? We < tt || We > Et ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(We));
    }
    function Ge(We) {
      var tt = We.c.length - 1;
      return we(We.e / he) == tt && We.c[tt] % 2 != 0;
    }
    function Fe(We, tt) {
      return (We.length > 1 ? We.charAt(0) + "." + We.slice(1) : We) + (tt < 0 ? "e" : "e+") + tt;
    }
    function Pe(We, tt, Et) {
      var Nt, et;
      if (tt < 0) {
        for (et = Et + "."; ++tt; et += Et)
          ;
        We = et + We;
      } else if (Nt = We.length, ++tt > Nt) {
        for (et = Et, tt -= Nt; --tt; et += Et)
          ;
        We += et;
      } else
        tt < Nt && (We = We.slice(0, tt) + "." + We.slice(tt));
      return We;
    }
    ne = be(), ne.default = ne.BigNumber = ne, Q.exports ? Q.exports = ne : (ee || (ee = typeof self < "u" && self ? self : window), ee.BigNumber = ne);
  })(commonjsGlobal);
})(bignumber);
var decoder_asm = function Q(ee, ne, ie) {
  var ae = new ee.Uint8Array(ie), ce = ne.pushInt, le = ne.pushInt32, de = ne.pushInt32Neg, ye = ne.pushInt64, he = ne.pushInt64Neg, Be = ne.pushFloat, Ee = ne.pushFloatSingle, me = ne.pushFloatDouble, ge = ne.pushTrue, be = ne.pushFalse, we = ne.pushUndefined, Oe = ne.pushNull, He = ne.pushInfinity, Se = ne.pushInfinityNeg, Ge = ne.pushNaN, Fe = ne.pushNaNNeg, Pe = ne.pushArrayStart, We = ne.pushArrayStartFixed, tt = ne.pushArrayStartFixed32, Et = ne.pushArrayStartFixed64, Nt = ne.pushObjectStart, et = ne.pushObjectStartFixed, mt = ne.pushObjectStartFixed32, Mt = ne.pushObjectStartFixed64, Ot = ne.pushByteString, yt = ne.pushByteStringStart, Qt = ne.pushUtf8String, Yt = ne.pushUtf8StringStart, jt = ne.pushSimpleUnassigned, $t = ne.pushTagStart, Wt = ne.pushTagStart4, st = ne.pushTagStart8, at = ne.pushTagUnassigned, wt = ne.pushBreak, Ut = ee.Math.pow, $e = 0, ir = 0, tr = 0;
  function ar(xt) {
    for (xt = xt | 0, $e = 0, ir = xt; ($e | 0) < (ir | 0) && (tr = Kr[ae[$e] & 255](ae[$e] | 0) | 0, !((tr | 0) > 0)); )
      ;
    return tr | 0;
  }
  function ht(xt) {
    return xt = xt | 0, (($e | 0) + (xt | 0) | 0) < (ir | 0) ? 0 : 1;
  }
  function qt(xt) {
    return xt = xt | 0, ae[xt | 0] << 8 | ae[xt + 1 | 0] | 0;
  }
  function Xe(xt) {
    return xt = xt | 0, ae[xt | 0] << 24 | ae[xt + 1 | 0] << 16 | ae[xt + 2 | 0] << 8 | ae[xt + 3 | 0] | 0;
  }
  function nt(xt) {
    return xt = xt | 0, ce(xt | 0), $e = $e + 1 | 0, 0;
  }
  function je(xt) {
    return xt = xt | 0, ht(1) | 0 ? 1 : (ce(ae[$e + 1 | 0] | 0), $e = $e + 2 | 0, 0);
  }
  function It(xt) {
    return xt = xt | 0, ht(2) | 0 ? 1 : (ce(
      qt($e + 1 | 0) | 0
    ), $e = $e + 3 | 0, 0);
  }
  function lt(xt) {
    return xt = xt | 0, ht(4) | 0 ? 1 : (le(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0
    ), $e = $e + 5 | 0, 0);
  }
  function Ye(xt) {
    return xt = xt | 0, ht(8) | 0 ? 1 : (ye(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0,
      qt($e + 5 | 0) | 0,
      qt($e + 7 | 0) | 0
    ), $e = $e + 9 | 0, 0);
  }
  function _e(xt) {
    return xt = xt | 0, ce(-1 - (xt - 32 | 0) | 0), $e = $e + 1 | 0, 0;
  }
  function Ie(xt) {
    return xt = xt | 0, ht(1) | 0 ? 1 : (ce(
      -1 - (ae[$e + 1 | 0] | 0) | 0
    ), $e = $e + 2 | 0, 0);
  }
  function Ce(xt) {
    xt = xt | 0;
    var Sr = 0;
    return ht(2) | 0 ? 1 : (Sr = qt($e + 1 | 0) | 0, ce(-1 - (Sr | 0) | 0), $e = $e + 3 | 0, 0);
  }
  function ke(xt) {
    return xt = xt | 0, ht(4) | 0 ? 1 : (de(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0
    ), $e = $e + 5 | 0, 0);
  }
  function Ve(xt) {
    return xt = xt | 0, ht(8) | 0 ? 1 : (he(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0,
      qt($e + 5 | 0) | 0,
      qt($e + 7 | 0) | 0
    ), $e = $e + 9 | 0, 0);
  }
  function Ze(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 0;
    return Vr = xt - 64 | 0, ht(Vr | 0) | 0 ? 1 : (Sr = $e + 1 | 0, Xt = ($e + 1 | 0) + (Vr | 0) | 0, Ot(Sr | 0, Xt | 0), $e = Xt | 0, 0);
  }
  function ct(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 0;
    return ht(1) | 0 || (Vr = ae[$e + 1 | 0] | 0, Sr = $e + 2 | 0, Xt = ($e + 2 | 0) + (Vr | 0) | 0, ht(Vr + 1 | 0) | 0) ? 1 : (Ot(Sr | 0, Xt | 0), $e = Xt | 0, 0);
  }
  function kt(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 0;
    return ht(2) | 0 || (Vr = qt($e + 1 | 0) | 0, Sr = $e + 3 | 0, Xt = ($e + 3 | 0) + (Vr | 0) | 0, ht(Vr + 2 | 0) | 0) ? 1 : (Ot(Sr | 0, Xt | 0), $e = Xt | 0, 0);
  }
  function Jt(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 0;
    return ht(4) | 0 || (Vr = Xe($e + 1 | 0) | 0, Sr = $e + 5 | 0, Xt = ($e + 5 | 0) + (Vr | 0) | 0, ht(Vr + 4 | 0) | 0) ? 1 : (Ot(Sr | 0, Xt | 0), $e = Xt | 0, 0);
  }
  function Kt(xt) {
    return xt = xt | 0, 1;
  }
  function Zt(xt) {
    return xt = xt | 0, yt(), $e = $e + 1 | 0, 0;
  }
  function De(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 0;
    return Vr = xt - 96 | 0, ht(Vr | 0) | 0 ? 1 : (Sr = $e + 1 | 0, Xt = ($e + 1 | 0) + (Vr | 0) | 0, Qt(Sr | 0, Xt | 0), $e = Xt | 0, 0);
  }
  function Te(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 0;
    return ht(1) | 0 || (Vr = ae[$e + 1 | 0] | 0, Sr = $e + 2 | 0, Xt = ($e + 2 | 0) + (Vr | 0) | 0, ht(Vr + 1 | 0) | 0) ? 1 : (Qt(Sr | 0, Xt | 0), $e = Xt | 0, 0);
  }
  function Re(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 0;
    return ht(2) | 0 || (Vr = qt($e + 1 | 0) | 0, Sr = $e + 3 | 0, Xt = ($e + 3 | 0) + (Vr | 0) | 0, ht(Vr + 2 | 0) | 0) ? 1 : (Qt(Sr | 0, Xt | 0), $e = Xt | 0, 0);
  }
  function ot(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 0;
    return ht(4) | 0 || (Vr = Xe($e + 1 | 0) | 0, Sr = $e + 5 | 0, Xt = ($e + 5 | 0) + (Vr | 0) | 0, ht(Vr + 4 | 0) | 0) ? 1 : (Qt(Sr | 0, Xt | 0), $e = Xt | 0, 0);
  }
  function bt(xt) {
    return xt = xt | 0, 1;
  }
  function Pt(xt) {
    return xt = xt | 0, Yt(), $e = $e + 1 | 0, 0;
  }
  function Vt(xt) {
    return xt = xt | 0, We(xt - 128 | 0), $e = $e + 1 | 0, 0;
  }
  function Ir(xt) {
    return xt = xt | 0, ht(1) | 0 ? 1 : (We(ae[$e + 1 | 0] | 0), $e = $e + 2 | 0, 0);
  }
  function mr(xt) {
    return xt = xt | 0, ht(2) | 0 ? 1 : (We(
      qt($e + 1 | 0) | 0
    ), $e = $e + 3 | 0, 0);
  }
  function _r(xt) {
    return xt = xt | 0, ht(4) | 0 ? 1 : (tt(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0
    ), $e = $e + 5 | 0, 0);
  }
  function Br(xt) {
    return xt = xt | 0, ht(8) | 0 ? 1 : (Et(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0,
      qt($e + 5 | 0) | 0,
      qt($e + 7 | 0) | 0
    ), $e = $e + 9 | 0, 0);
  }
  function Tr(xt) {
    return xt = xt | 0, Pe(), $e = $e + 1 | 0, 0;
  }
  function cn(xt) {
    xt = xt | 0;
    var Sr = 0;
    return Sr = xt - 160 | 0, ht(Sr | 0) | 0 ? 1 : (et(Sr | 0), $e = $e + 1 | 0, 0);
  }
  function oi(xt) {
    return xt = xt | 0, ht(1) | 0 ? 1 : (et(ae[$e + 1 | 0] | 0), $e = $e + 2 | 0, 0);
  }
  function un(xt) {
    return xt = xt | 0, ht(2) | 0 ? 1 : (et(
      qt($e + 1 | 0) | 0
    ), $e = $e + 3 | 0, 0);
  }
  function Yn(xt) {
    return xt = xt | 0, ht(4) | 0 ? 1 : (mt(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0
    ), $e = $e + 5 | 0, 0);
  }
  function Vn(xt) {
    return xt = xt | 0, ht(8) | 0 ? 1 : (Mt(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0,
      qt($e + 5 | 0) | 0,
      qt($e + 7 | 0) | 0
    ), $e = $e + 9 | 0, 0);
  }
  function Dn(xt) {
    return xt = xt | 0, Nt(), $e = $e + 1 | 0, 0;
  }
  function Ln(xt) {
    return xt = xt | 0, $t(xt - 192 | 0 | 0), $e = $e + 1 | 0, 0;
  }
  function di(xt) {
    return xt = xt | 0, $t(xt | 0), $e = $e + 1 | 0, 0;
  }
  function yi(xt) {
    return xt = xt | 0, $t(xt | 0), $e = $e + 1 | 0, 0;
  }
  function Zi(xt) {
    return xt = xt | 0, $t(xt | 0), $e = $e + 1 | 0, 0;
  }
  function ki(xt) {
    return xt = xt | 0, $t(xt | 0), $e = $e + 1 | 0, 0;
  }
  function Pn(xt) {
    return xt = xt | 0, $t(xt - 192 | 0 | 0), $e = $e + 1 | 0, 0;
  }
  function ni(xt) {
    return xt = xt | 0, $t(xt | 0), $e = $e + 1 | 0, 0;
  }
  function Xn(xt) {
    return xt = xt | 0, $t(xt | 0), $e = $e + 1 | 0, 0;
  }
  function fi(xt) {
    return xt = xt | 0, $t(xt | 0), $e = $e + 1 | 0, 0;
  }
  function Bi(xt) {
    return xt = xt | 0, ht(1) | 0 ? 1 : ($t(ae[$e + 1 | 0] | 0), $e = $e + 2 | 0, 0);
  }
  function Ci(xt) {
    return xt = xt | 0, ht(2) | 0 ? 1 : ($t(
      qt($e + 1 | 0) | 0
    ), $e = $e + 3 | 0, 0);
  }
  function Ii(xt) {
    return xt = xt | 0, ht(4) | 0 ? 1 : (Wt(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0
    ), $e = $e + 5 | 0, 0);
  }
  function Ft(xt) {
    return xt = xt | 0, ht(8) | 0 ? 1 : (st(
      qt($e + 1 | 0) | 0,
      qt($e + 3 | 0) | 0,
      qt($e + 5 | 0) | 0,
      qt($e + 7 | 0) | 0
    ), $e = $e + 9 | 0, 0);
  }
  function sr(xt) {
    return xt = xt | 0, jt((xt | 0) - 224 | 0), $e = $e + 1 | 0, 0;
  }
  function Gr(xt) {
    return xt = xt | 0, be(), $e = $e + 1 | 0, 0;
  }
  function zr(xt) {
    return xt = xt | 0, ge(), $e = $e + 1 | 0, 0;
  }
  function wn(xt) {
    return xt = xt | 0, Oe(), $e = $e + 1 | 0, 0;
  }
  function Tn(xt) {
    return xt = xt | 0, we(), $e = $e + 1 | 0, 0;
  }
  function _n(xt) {
    return xt = xt | 0, ht(1) | 0 ? 1 : (jt(ae[$e + 1 | 0] | 0), $e = $e + 2 | 0, 0);
  }
  function vn(xt) {
    xt = xt | 0;
    var Sr = 0, Xt = 0, Vr = 1, qe = 0, Ke = 0, At = 0;
    return ht(2) | 0 ? 1 : (Sr = ae[$e + 1 | 0] | 0, Xt = ae[$e + 2 | 0] | 0, (Sr | 0) & 128 && (Vr = -1), qe = +(((Sr | 0) & 124) >> 2), Ke = +(((Sr | 0) & 3) << 8 | Xt), +qe == 0 ? Be(+(+Vr * 5960464477539063e-23 * +Ke)) : +qe == 31 ? +Vr == 1 ? +Ke > 0 ? Ge() : He() : +Ke > 0 ? Fe() : Se() : Be(+(+Vr * Ut(2, +(+qe - 25)) * +(1024 + Ke))), $e = $e + 3 | 0, 0);
  }
  function kn(xt) {
    return xt = xt | 0, ht(4) | 0 ? 1 : (Ee(
      ae[$e + 1 | 0] | 0,
      ae[$e + 2 | 0] | 0,
      ae[$e + 3 | 0] | 0,
      ae[$e + 4 | 0] | 0
    ), $e = $e + 5 | 0, 0);
  }
  function Zn(xt) {
    return xt = xt | 0, ht(8) | 0 ? 1 : (me(
      ae[$e + 1 | 0] | 0,
      ae[$e + 2 | 0] | 0,
      ae[$e + 3 | 0] | 0,
      ae[$e + 4 | 0] | 0,
      ae[$e + 5 | 0] | 0,
      ae[$e + 6 | 0] | 0,
      ae[$e + 7 | 0] | 0,
      ae[$e + 8 | 0] | 0
    ), $e = $e + 9 | 0, 0);
  }
  function An(xt) {
    return xt = xt | 0, 1;
  }
  function nn(xt) {
    return xt = xt | 0, wt(), $e = $e + 1 | 0, 0;
  }
  var Kr = [
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    nt,
    je,
    It,
    lt,
    Ye,
    An,
    An,
    An,
    An,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    _e,
    Ie,
    Ce,
    ke,
    Ve,
    An,
    An,
    An,
    An,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    Ze,
    ct,
    kt,
    Jt,
    Kt,
    An,
    An,
    An,
    Zt,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    De,
    Te,
    Re,
    ot,
    bt,
    An,
    An,
    An,
    Pt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Vt,
    Ir,
    mr,
    _r,
    Br,
    An,
    An,
    An,
    Tr,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    cn,
    oi,
    un,
    Yn,
    Vn,
    An,
    An,
    An,
    Dn,
    Ln,
    Ln,
    Ln,
    Ln,
    Ln,
    Ln,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Pn,
    Bi,
    Ci,
    Ii,
    Ft,
    An,
    An,
    An,
    An,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    sr,
    Gr,
    zr,
    wn,
    Tn,
    _n,
    vn,
    kn,
    Zn,
    An,
    An,
    An,
    nn
  ];
  return {
    parse: ar
  };
}, utils$3 = {}, constants$3 = {};
const Bignumber$2 = bignumber.exports.BigNumber;
constants$3.MT = {
  POS_INT: 0,
  NEG_INT: 1,
  BYTE_STRING: 2,
  UTF8_STRING: 3,
  ARRAY: 4,
  MAP: 5,
  TAG: 6,
  SIMPLE_FLOAT: 7
};
constants$3.TAG = {
  DATE_STRING: 0,
  DATE_EPOCH: 1,
  POS_BIGINT: 2,
  NEG_BIGINT: 3,
  DECIMAL_FRAC: 4,
  BIGFLOAT: 5,
  BASE64URL_EXPECTED: 21,
  BASE64_EXPECTED: 22,
  BASE16_EXPECTED: 23,
  CBOR: 24,
  URI: 32,
  BASE64URL: 33,
  BASE64: 34,
  REGEXP: 35,
  MIME: 36
};
constants$3.NUMBYTES = {
  ZERO: 0,
  ONE: 24,
  TWO: 25,
  FOUR: 26,
  EIGHT: 27,
  INDEFINITE: 31
};
constants$3.SIMPLE = {
  FALSE: 20,
  TRUE: 21,
  NULL: 22,
  UNDEFINED: 23
};
constants$3.SYMS = {
  NULL: Symbol("null"),
  UNDEFINED: Symbol("undef"),
  PARENT: Symbol("parent"),
  BREAK: Symbol("break"),
  STREAM: Symbol("stream")
};
constants$3.SHIFT32 = Math.pow(2, 32);
constants$3.SHIFT16 = Math.pow(2, 16);
constants$3.MAX_SAFE_HIGH = 2097151;
constants$3.NEG_ONE = new Bignumber$2(-1);
constants$3.TEN = new Bignumber$2(10);
constants$3.TWO = new Bignumber$2(2);
constants$3.PARENT = {
  ARRAY: 0,
  OBJECT: 1,
  MAP: 2,
  TAG: 3,
  BYTE_STRING: 4,
  UTF8_STRING: 5
};
(function(Q) {
  const { Buffer: ee } = buffer, ne = bignumber.exports.BigNumber, ie = constants$3, ae = ie.SHIFT32, ce = ie.SHIFT16, le = 2097151;
  Q.parseHalf = function(he) {
    var Be, Ee, me;
    return me = he[0] & 128 ? -1 : 1, Be = (he[0] & 124) >> 2, Ee = (he[0] & 3) << 8 | he[1], Be ? Be === 31 ? me * (Ee ? 0 / 0 : 1 / 0) : me * Math.pow(2, Be - 25) * (1024 + Ee) : me * 5960464477539063e-23 * Ee;
  };
  function de(ye) {
    return ye < 16 ? "0" + ye.toString(16) : ye.toString(16);
  }
  Q.arrayBufferToBignumber = function(ye) {
    const he = ye.byteLength;
    let Be = "";
    for (let Ee = 0; Ee < he; Ee++)
      Be += de(ye[Ee]);
    return new ne(Be, 16);
  }, Q.buildMap = (ye) => {
    const he = /* @__PURE__ */ new Map(), Be = Object.keys(ye), Ee = Be.length;
    for (let me = 0; me < Ee; me++)
      he.set(Be[me], ye[Be[me]]);
    return he;
  }, Q.buildInt32 = (ye, he) => ye * ce + he, Q.buildInt64 = (ye, he, Be, Ee) => {
    const me = Q.buildInt32(ye, he), ge = Q.buildInt32(Be, Ee);
    return me > le ? new ne(me).times(ae).plus(ge) : me * ae + ge;
  }, Q.writeHalf = function(he, Be) {
    const Ee = ee.allocUnsafe(4);
    Ee.writeFloatBE(Be, 0);
    const me = Ee.readUInt32BE(0);
    if ((me & 8191) !== 0)
      return !1;
    var ge = me >> 16 & 32768;
    const be = me >> 23 & 255, we = me & 8388607;
    if (be >= 113 && be <= 142)
      ge += (be - 112 << 10) + (we >> 13);
    else if (be >= 103 && be < 113) {
      if (we & (1 << 126 - be) - 1)
        return !1;
      ge += we + 8388608 >> 126 - be;
    } else
      return !1;
    return he.writeUInt16BE(ge, 0), !0;
  }, Q.keySorter = function(ye, he) {
    var Be = ye[0].byteLength, Ee = he[0].byteLength;
    return Be > Ee ? 1 : Ee > Be ? -1 : ye[0].compare(he[0]);
  }, Q.isNegativeZero = (ye) => ye === 0 && 1 / ye < 0, Q.nextPowerOf2 = (ye) => {
    let he = 0;
    if (ye && !(ye & ye - 1))
      return ye;
    for (; ye !== 0; )
      ye >>= 1, he += 1;
    return 1 << he;
  };
})(utils$3);
const constants$2 = constants$3, MT$1 = constants$2.MT, SIMPLE = constants$2.SIMPLE, SYMS$1 = constants$2.SYMS;
class Simple$1 {
  constructor(ee) {
    if (typeof ee != "number")
      throw new Error("Invalid Simple type: " + typeof ee);
    if (ee < 0 || ee > 255 || (ee | 0) !== ee)
      throw new Error("value must be a small positive integer: " + ee);
    this.value = ee;
  }
  toString() {
    return "simple(" + this.value + ")";
  }
  inspect() {
    return "simple(" + this.value + ")";
  }
  encodeCBOR(ee) {
    return ee._pushInt(this.value, MT$1.SIMPLE_FLOAT);
  }
  static isSimple(ee) {
    return ee instanceof Simple$1;
  }
  static decode(ee, ne) {
    switch (ne == null && (ne = !0), ee) {
      case SIMPLE.FALSE:
        return !1;
      case SIMPLE.TRUE:
        return !0;
      case SIMPLE.NULL:
        return ne ? null : SYMS$1.NULL;
      case SIMPLE.UNDEFINED:
        return ne ? void 0 : SYMS$1.UNDEFINED;
      case -1:
        if (!ne)
          throw new Error("Invalid BREAK");
        return SYMS$1.BREAK;
      default:
        return new Simple$1(ee);
    }
  }
}
var simple = Simple$1;
class Tagged$1 {
  constructor(ee, ne, ie) {
    if (this.tag = ee, this.value = ne, this.err = ie, typeof this.tag != "number")
      throw new Error("Invalid tag type (" + typeof this.tag + ")");
    if (this.tag < 0 || (this.tag | 0) !== this.tag)
      throw new Error("Tag must be a positive integer: " + this.tag);
  }
  toString() {
    return `${this.tag}(${JSON.stringify(this.value)})`;
  }
  encodeCBOR(ee) {
    return ee._pushTag(this.tag), ee.pushAny(this.value);
  }
  convert(ee) {
    var ne, ie;
    if (ie = ee != null ? ee[this.tag] : void 0, typeof ie != "function" && (ie = Tagged$1["_tag" + this.tag], typeof ie != "function"))
      return this;
    try {
      return ie.call(Tagged$1, this.value);
    } catch (ae) {
      return ne = ae, this.err = ne, this;
    }
  }
}
var tagged$1 = Tagged$1;
const defaultBase$1 = self.location ? self.location.protocol + "//" + self.location.host : "", URL$3 = self.URL;
class URLWithLegacySupport$2 {
  constructor(ee = "", ne = defaultBase$1) {
    this.super = new URL$3(ee, ne), this.path = this.pathname + this.search, this.auth = this.username && this.password ? this.username + ":" + this.password : null, this.query = this.search && this.search.startsWith("?") ? this.search.slice(1) : null;
  }
  get hash() {
    return this.super.hash;
  }
  get host() {
    return this.super.host;
  }
  get hostname() {
    return this.super.hostname;
  }
  get href() {
    return this.super.href;
  }
  get origin() {
    return this.super.origin;
  }
  get password() {
    return this.super.password;
  }
  get pathname() {
    return this.super.pathname;
  }
  get port() {
    return this.super.port;
  }
  get protocol() {
    return this.super.protocol;
  }
  get search() {
    return this.super.search;
  }
  get searchParams() {
    return this.super.searchParams;
  }
  get username() {
    return this.super.username;
  }
  set hash(ee) {
    this.super.hash = ee;
  }
  set host(ee) {
    this.super.host = ee;
  }
  set hostname(ee) {
    this.super.hostname = ee;
  }
  set href(ee) {
    this.super.href = ee;
  }
  set origin(ee) {
    this.super.origin = ee;
  }
  set password(ee) {
    this.super.password = ee;
  }
  set pathname(ee) {
    this.super.pathname = ee;
  }
  set port(ee) {
    this.super.port = ee;
  }
  set protocol(ee) {
    this.super.protocol = ee;
  }
  set search(ee) {
    this.super.search = ee;
  }
  set searchParams(ee) {
    this.super.searchParams = ee;
  }
  set username(ee) {
    this.super.username = ee;
  }
  createObjectURL(ee) {
    return this.super.createObjectURL(ee);
  }
  revokeObjectURL(ee) {
    this.super.revokeObjectURL(ee);
  }
  toJSON() {
    return this.super.toJSON();
  }
  toString() {
    return this.super.toString();
  }
  format() {
    return this.toString();
  }
}
function format$3(Q) {
  if (typeof Q == "string")
    return new URL$3(Q).toString();
  if (!(Q instanceof URL$3)) {
    const ee = Q.username && Q.password ? `${Q.username}:${Q.password}@` : "", ne = Q.auth ? Q.auth + "@" : "", ie = Q.port ? ":" + Q.port : "", ae = Q.protocol ? Q.protocol + "//" : "", ce = Q.host || "", le = Q.hostname || "", de = Q.search || (Q.query ? "?" + Q.query : ""), ye = Q.hash || "", he = Q.pathname || "", Be = Q.path || he + de;
    return `${ae}${ee || ne}${ce || le + ie}${Be}${ye}`;
  }
}
var urlBrowser = {
  URLWithLegacySupport: URLWithLegacySupport$2,
  URLSearchParams: self.URLSearchParams,
  defaultBase: defaultBase$1,
  format: format$3
};
const { URLWithLegacySupport: URLWithLegacySupport$1, format: format$2 } = urlBrowser;
var relative$1 = (Q, ee = {}, ne = {}, ie) => {
  let ae = ee.protocol ? ee.protocol.replace(":", "") : "http";
  ae = (ne[ae] || ie || ae) + ":";
  let ce;
  try {
    ce = new URLWithLegacySupport$1(Q);
  } catch {
    ce = {};
  }
  const le = Object.assign({}, ee, {
    protocol: ae || ce.protocol,
    host: ee.host || ce.host
  });
  return new URLWithLegacySupport$1(Q, format$2(le)).toString();
};
const {
  URLWithLegacySupport,
  format: format$1,
  URLSearchParams: URLSearchParams$1,
  defaultBase
} = urlBrowser, relative = relative$1;
var isoUrl = {
  URL: URLWithLegacySupport,
  URLSearchParams: URLSearchParams$1,
  format: format$1,
  relative,
  defaultBase
};
const { Buffer: Buffer$4 } = buffer, ieee754 = ieee754$1, Bignumber$1 = bignumber.exports.BigNumber, parser = decoder_asm, utils$2 = utils$3, c = constants$3, Simple = simple, Tagged = tagged$1, { URL: URL$2 } = isoUrl;
class Decoder$1 {
  constructor(ee) {
    ee = ee || {}, !ee.size || ee.size < 65536 ? ee.size = 65536 : ee.size = utils$2.nextPowerOf2(ee.size), this._heap = new ArrayBuffer(ee.size), this._heap8 = new Uint8Array(this._heap), this._buffer = Buffer$4.from(this._heap), this._reset(), this._knownTags = Object.assign({
      0: (ne) => new Date(ne),
      1: (ne) => new Date(ne * 1e3),
      2: (ne) => utils$2.arrayBufferToBignumber(ne),
      3: (ne) => c.NEG_ONE.minus(utils$2.arrayBufferToBignumber(ne)),
      4: (ne) => c.TEN.pow(ne[0]).times(ne[1]),
      5: (ne) => c.TWO.pow(ne[0]).times(ne[1]),
      32: (ne) => new URL$2(ne),
      35: (ne) => new RegExp(ne)
    }, ee.tags), this.parser = parser(commonjsGlobal, {
      log: console.log.bind(console),
      pushInt: this.pushInt.bind(this),
      pushInt32: this.pushInt32.bind(this),
      pushInt32Neg: this.pushInt32Neg.bind(this),
      pushInt64: this.pushInt64.bind(this),
      pushInt64Neg: this.pushInt64Neg.bind(this),
      pushFloat: this.pushFloat.bind(this),
      pushFloatSingle: this.pushFloatSingle.bind(this),
      pushFloatDouble: this.pushFloatDouble.bind(this),
      pushTrue: this.pushTrue.bind(this),
      pushFalse: this.pushFalse.bind(this),
      pushUndefined: this.pushUndefined.bind(this),
      pushNull: this.pushNull.bind(this),
      pushInfinity: this.pushInfinity.bind(this),
      pushInfinityNeg: this.pushInfinityNeg.bind(this),
      pushNaN: this.pushNaN.bind(this),
      pushNaNNeg: this.pushNaNNeg.bind(this),
      pushArrayStart: this.pushArrayStart.bind(this),
      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),
      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),
      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),
      pushObjectStart: this.pushObjectStart.bind(this),
      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),
      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),
      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),
      pushByteString: this.pushByteString.bind(this),
      pushByteStringStart: this.pushByteStringStart.bind(this),
      pushUtf8String: this.pushUtf8String.bind(this),
      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),
      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),
      pushTagUnassigned: this.pushTagUnassigned.bind(this),
      pushTagStart: this.pushTagStart.bind(this),
      pushTagStart4: this.pushTagStart4.bind(this),
      pushTagStart8: this.pushTagStart8.bind(this),
      pushBreak: this.pushBreak.bind(this)
    }, this._heap);
  }
  get _depth() {
    return this._parents.length;
  }
  get _currentParent() {
    return this._parents[this._depth - 1];
  }
  get _ref() {
    return this._currentParent.ref;
  }
  _closeParent() {
    var ee = this._parents.pop();
    if (ee.length > 0)
      throw new Error(`Missing ${ee.length} elements`);
    switch (ee.type) {
      case c.PARENT.TAG:
        this._push(
          this.createTag(ee.ref[0], ee.ref[1])
        );
        break;
      case c.PARENT.BYTE_STRING:
        this._push(this.createByteString(ee.ref, ee.length));
        break;
      case c.PARENT.UTF8_STRING:
        this._push(this.createUtf8String(ee.ref, ee.length));
        break;
      case c.PARENT.MAP:
        if (ee.values % 2 > 0)
          throw new Error("Odd number of elements in the map");
        this._push(this.createMap(ee.ref, ee.length));
        break;
      case c.PARENT.OBJECT:
        if (ee.values % 2 > 0)
          throw new Error("Odd number of elements in the map");
        this._push(this.createObject(ee.ref, ee.length));
        break;
      case c.PARENT.ARRAY:
        this._push(this.createArray(ee.ref, ee.length));
        break;
    }
    this._currentParent && this._currentParent.type === c.PARENT.TAG && this._dec();
  }
  _dec() {
    const ee = this._currentParent;
    ee.length < 0 || (ee.length--, ee.length === 0 && this._closeParent());
  }
  _push(ee, ne) {
    const ie = this._currentParent;
    switch (ie.values++, ie.type) {
      case c.PARENT.ARRAY:
      case c.PARENT.BYTE_STRING:
      case c.PARENT.UTF8_STRING:
        ie.length > -1 ? this._ref[this._ref.length - ie.length] = ee : this._ref.push(ee), this._dec();
        break;
      case c.PARENT.OBJECT:
        ie.tmpKey != null ? (this._ref[ie.tmpKey] = ee, ie.tmpKey = null, this._dec()) : (ie.tmpKey = ee, typeof ie.tmpKey != "string" && (ie.type = c.PARENT.MAP, ie.ref = utils$2.buildMap(ie.ref)));
        break;
      case c.PARENT.MAP:
        ie.tmpKey != null ? (this._ref.set(ie.tmpKey, ee), ie.tmpKey = null, this._dec()) : ie.tmpKey = ee;
        break;
      case c.PARENT.TAG:
        this._ref.push(ee), ne || this._dec();
        break;
      default:
        throw new Error("Unknown parent type");
    }
  }
  _createParent(ee, ne, ie) {
    this._parents[this._depth] = {
      type: ne,
      length: ie,
      ref: ee,
      values: 0,
      tmpKey: null
    };
  }
  _reset() {
    this._res = [], this._parents = [{
      type: c.PARENT.ARRAY,
      length: -1,
      ref: this._res,
      values: 0,
      tmpKey: null
    }];
  }
  createTag(ee, ne) {
    const ie = this._knownTags[ee];
    return ie ? ie(ne) : new Tagged(ee, ne);
  }
  createMap(ee, ne) {
    return ee;
  }
  createObject(ee, ne) {
    return ee;
  }
  createArray(ee, ne) {
    return ee;
  }
  createByteString(ee, ne) {
    return Buffer$4.concat(ee);
  }
  createByteStringFromHeap(ee, ne) {
    return ee === ne ? Buffer$4.alloc(0) : Buffer$4.from(this._heap.slice(ee, ne));
  }
  createInt(ee) {
    return ee;
  }
  createInt32(ee, ne) {
    return utils$2.buildInt32(ee, ne);
  }
  createInt64(ee, ne, ie, ae) {
    return utils$2.buildInt64(ee, ne, ie, ae);
  }
  createFloat(ee) {
    return ee;
  }
  createFloatSingle(ee, ne, ie, ae) {
    return ieee754.read([ee, ne, ie, ae], 0, !1, 23, 4);
  }
  createFloatDouble(ee, ne, ie, ae, ce, le, de, ye) {
    return ieee754.read([ee, ne, ie, ae, ce, le, de, ye], 0, !1, 52, 8);
  }
  createInt32Neg(ee, ne) {
    return -1 - utils$2.buildInt32(ee, ne);
  }
  createInt64Neg(ee, ne, ie, ae) {
    const ce = utils$2.buildInt32(ee, ne), le = utils$2.buildInt32(ie, ae);
    return ce > c.MAX_SAFE_HIGH ? c.NEG_ONE.minus(new Bignumber$1(ce).times(c.SHIFT32).plus(le)) : -1 - (ce * c.SHIFT32 + le);
  }
  createTrue() {
    return !0;
  }
  createFalse() {
    return !1;
  }
  createNull() {
    return null;
  }
  createUndefined() {
  }
  createInfinity() {
    return 1 / 0;
  }
  createInfinityNeg() {
    return -1 / 0;
  }
  createNaN() {
    return NaN;
  }
  createNaNNeg() {
    return NaN;
  }
  createUtf8String(ee, ne) {
    return ee.join("");
  }
  createUtf8StringFromHeap(ee, ne) {
    return ee === ne ? "" : this._buffer.toString("utf8", ee, ne);
  }
  createSimpleUnassigned(ee) {
    return new Simple(ee);
  }
  pushInt(ee) {
    this._push(this.createInt(ee));
  }
  pushInt32(ee, ne) {
    this._push(this.createInt32(ee, ne));
  }
  pushInt64(ee, ne, ie, ae) {
    this._push(this.createInt64(ee, ne, ie, ae));
  }
  pushFloat(ee) {
    this._push(this.createFloat(ee));
  }
  pushFloatSingle(ee, ne, ie, ae) {
    this._push(this.createFloatSingle(ee, ne, ie, ae));
  }
  pushFloatDouble(ee, ne, ie, ae, ce, le, de, ye) {
    this._push(this.createFloatDouble(ee, ne, ie, ae, ce, le, de, ye));
  }
  pushInt32Neg(ee, ne) {
    this._push(this.createInt32Neg(ee, ne));
  }
  pushInt64Neg(ee, ne, ie, ae) {
    this._push(this.createInt64Neg(ee, ne, ie, ae));
  }
  pushTrue() {
    this._push(this.createTrue());
  }
  pushFalse() {
    this._push(this.createFalse());
  }
  pushNull() {
    this._push(this.createNull());
  }
  pushUndefined() {
    this._push(this.createUndefined());
  }
  pushInfinity() {
    this._push(this.createInfinity());
  }
  pushInfinityNeg() {
    this._push(this.createInfinityNeg());
  }
  pushNaN() {
    this._push(this.createNaN());
  }
  pushNaNNeg() {
    this._push(this.createNaNNeg());
  }
  pushArrayStart() {
    this._createParent([], c.PARENT.ARRAY, -1);
  }
  pushArrayStartFixed(ee) {
    this._createArrayStartFixed(ee);
  }
  pushArrayStartFixed32(ee, ne) {
    const ie = utils$2.buildInt32(ee, ne);
    this._createArrayStartFixed(ie);
  }
  pushArrayStartFixed64(ee, ne, ie, ae) {
    const ce = utils$2.buildInt64(ee, ne, ie, ae);
    this._createArrayStartFixed(ce);
  }
  pushObjectStart() {
    this._createObjectStartFixed(-1);
  }
  pushObjectStartFixed(ee) {
    this._createObjectStartFixed(ee);
  }
  pushObjectStartFixed32(ee, ne) {
    const ie = utils$2.buildInt32(ee, ne);
    this._createObjectStartFixed(ie);
  }
  pushObjectStartFixed64(ee, ne, ie, ae) {
    const ce = utils$2.buildInt64(ee, ne, ie, ae);
    this._createObjectStartFixed(ce);
  }
  pushByteStringStart() {
    this._parents[this._depth] = {
      type: c.PARENT.BYTE_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    };
  }
  pushByteString(ee, ne) {
    this._push(this.createByteStringFromHeap(ee, ne));
  }
  pushUtf8StringStart() {
    this._parents[this._depth] = {
      type: c.PARENT.UTF8_STRING,
      length: -1,
      ref: [],
      values: 0,
      tmpKey: null
    };
  }
  pushUtf8String(ee, ne) {
    this._push(this.createUtf8StringFromHeap(ee, ne));
  }
  pushSimpleUnassigned(ee) {
    this._push(this.createSimpleUnassigned(ee));
  }
  pushTagStart(ee) {
    this._parents[this._depth] = {
      type: c.PARENT.TAG,
      length: 1,
      ref: [ee]
    };
  }
  pushTagStart4(ee, ne) {
    this.pushTagStart(utils$2.buildInt32(ee, ne));
  }
  pushTagStart8(ee, ne, ie, ae) {
    this.pushTagStart(utils$2.buildInt64(ee, ne, ie, ae));
  }
  pushTagUnassigned(ee) {
    this._push(this.createTag(ee));
  }
  pushBreak() {
    if (this._currentParent.length > -1)
      throw new Error("Unexpected break");
    this._closeParent();
  }
  _createObjectStartFixed(ee) {
    if (ee === 0) {
      this._push(this.createObject({}));
      return;
    }
    this._createParent({}, c.PARENT.OBJECT, ee);
  }
  _createArrayStartFixed(ee) {
    if (ee === 0) {
      this._push(this.createArray([]));
      return;
    }
    this._createParent(new Array(ee), c.PARENT.ARRAY, ee);
  }
  _decode(ee) {
    if (ee.byteLength === 0)
      throw new Error("Input too short");
    this._reset(), this._heap8.set(ee);
    const ne = this.parser.parse(ee.byteLength);
    if (this._depth > 1) {
      for (; this._currentParent.length === 0; )
        this._closeParent();
      if (this._depth > 1)
        throw new Error("Undeterminated nesting");
    }
    if (ne > 0)
      throw new Error("Failed to parse");
    if (this._res.length === 0)
      throw new Error("No valid result");
  }
  decodeFirst(ee) {
    return this._decode(ee), this._res[0];
  }
  decodeAll(ee) {
    return this._decode(ee), this._res;
  }
  static decode(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$4.from(ee, ne || "hex")), new Decoder$1({ size: ee.length }).decodeFirst(ee);
  }
  static decodeAll(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$4.from(ee, ne || "hex")), new Decoder$1({ size: ee.length }).decodeAll(ee);
  }
}
Decoder$1.decodeFirst = Decoder$1.decode;
var decoder = Decoder$1;
const { Buffer: Buffer$3 } = buffer, Decoder = decoder, utils$1 = utils$3;
class Diagnose extends Decoder {
  createTag(ee, ne) {
    return `${ee}(${ne})`;
  }
  createInt(ee) {
    return super.createInt(ee).toString();
  }
  createInt32(ee, ne) {
    return super.createInt32(ee, ne).toString();
  }
  createInt64(ee, ne, ie, ae) {
    return super.createInt64(ee, ne, ie, ae).toString();
  }
  createInt32Neg(ee, ne) {
    return super.createInt32Neg(ee, ne).toString();
  }
  createInt64Neg(ee, ne, ie, ae) {
    return super.createInt64Neg(ee, ne, ie, ae).toString();
  }
  createTrue() {
    return "true";
  }
  createFalse() {
    return "false";
  }
  createFloat(ee) {
    const ne = super.createFloat(ee);
    return utils$1.isNegativeZero(ee) ? "-0_1" : `${ne}_1`;
  }
  createFloatSingle(ee, ne, ie, ae) {
    return `${super.createFloatSingle(ee, ne, ie, ae)}_2`;
  }
  createFloatDouble(ee, ne, ie, ae, ce, le, de, ye) {
    return `${super.createFloatDouble(ee, ne, ie, ae, ce, le, de, ye)}_3`;
  }
  createByteString(ee, ne) {
    const ie = ee.join(", ");
    return ne === -1 ? `(_ ${ie})` : `h'${ie}`;
  }
  createByteStringFromHeap(ee, ne) {
    return `h'${Buffer$3.from(
      super.createByteStringFromHeap(ee, ne)
    ).toString("hex")}'`;
  }
  createInfinity() {
    return "Infinity_1";
  }
  createInfinityNeg() {
    return "-Infinity_1";
  }
  createNaN() {
    return "NaN_1";
  }
  createNaNNeg() {
    return "-NaN_1";
  }
  createNull() {
    return "null";
  }
  createUndefined() {
    return "undefined";
  }
  createSimpleUnassigned(ee) {
    return `simple(${ee})`;
  }
  createArray(ee, ne) {
    const ie = super.createArray(ee, ne);
    return ne === -1 ? `[_ ${ie.join(", ")}]` : `[${ie.join(", ")}]`;
  }
  createMap(ee, ne) {
    const ie = super.createMap(ee), ae = Array.from(ie.keys()).reduce(collectObject(ie), "");
    return ne === -1 ? `{_ ${ae}}` : `{${ae}}`;
  }
  createObject(ee, ne) {
    const ie = super.createObject(ee), ae = Object.keys(ie).reduce(collectObject(ie), "");
    return ne === -1 ? `{_ ${ae}}` : `{${ae}}`;
  }
  createUtf8String(ee, ne) {
    const ie = ee.join(", ");
    return ne === -1 ? `(_ ${ie})` : `"${ie}"`;
  }
  createUtf8StringFromHeap(ee, ne) {
    return `"${Buffer$3.from(
      super.createUtf8StringFromHeap(ee, ne)
    ).toString("utf8")}"`;
  }
  static diagnose(ee, ne) {
    return typeof ee == "string" && (ee = Buffer$3.from(ee, ne || "hex")), new Diagnose().decodeFirst(ee);
  }
}
var diagnose = Diagnose;
function collectObject(Q) {
  return (ee, ne) => ee ? `${ee}, ${ne}: ${Q[ne]}` : `${ne}: ${Q[ne]}`;
}
const { Buffer: Buffer$2 } = buffer, { URL: URL$1 } = isoUrl, Bignumber = bignumber.exports.BigNumber, utils = utils$3, constants$1 = constants$3, MT = constants$1.MT, NUMBYTES = constants$1.NUMBYTES, SHIFT32 = constants$1.SHIFT32, SYMS = constants$1.SYMS, TAG = constants$1.TAG, HALF = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.TWO, FLOAT = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.FOUR, DOUBLE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.NUMBYTES.EIGHT, TRUE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.TRUE, FALSE = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.FALSE, UNDEFINED = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.UNDEFINED, NULL = constants$1.MT.SIMPLE_FLOAT << 5 | constants$1.SIMPLE.NULL, MAXINT_BN = new Bignumber("0x20000000000000"), BUF_NAN = Buffer$2.from("f97e00", "hex"), BUF_INF_NEG = Buffer$2.from("f9fc00", "hex"), BUF_INF_POS = Buffer$2.from("f97c00", "hex");
function toType(Q) {
  return {}.toString.call(Q).slice(8, -1);
}
class Encoder {
  constructor(ee) {
    ee = ee || {}, this.streaming = typeof ee.stream == "function", this.onData = ee.stream, this.semanticTypes = [
      [URL$1, this._pushUrl],
      [Bignumber, this._pushBigNumber]
    ];
    const ne = ee.genTypes || [], ie = ne.length;
    for (let ae = 0; ae < ie; ae++)
      this.addSemanticType(
        ne[ae][0],
        ne[ae][1]
      );
    this._reset();
  }
  addSemanticType(ee, ne) {
    const ie = this.semanticTypes.length;
    for (let ae = 0; ae < ie; ae++)
      if (this.semanticTypes[ae][0] === ee) {
        const le = this.semanticTypes[ae][1];
        return this.semanticTypes[ae][1] = ne, le;
      }
    return this.semanticTypes.push([ee, ne]), null;
  }
  push(ee) {
    return ee && (this.result[this.offset] = ee, this.resultMethod[this.offset] = 0, this.resultLength[this.offset] = ee.length, this.offset++, this.streaming && this.onData(this.finalize())), !0;
  }
  pushWrite(ee, ne, ie) {
    return this.result[this.offset] = ee, this.resultMethod[this.offset] = ne, this.resultLength[this.offset] = ie, this.offset++, this.streaming && this.onData(this.finalize()), !0;
  }
  _pushUInt8(ee) {
    return this.pushWrite(ee, 1, 1);
  }
  _pushUInt16BE(ee) {
    return this.pushWrite(ee, 2, 2);
  }
  _pushUInt32BE(ee) {
    return this.pushWrite(ee, 3, 4);
  }
  _pushDoubleBE(ee) {
    return this.pushWrite(ee, 4, 8);
  }
  _pushNaN() {
    return this.push(BUF_NAN);
  }
  _pushInfinity(ee) {
    const ne = ee < 0 ? BUF_INF_NEG : BUF_INF_POS;
    return this.push(ne);
  }
  _pushFloat(ee) {
    const ne = Buffer$2.allocUnsafe(2);
    if (utils.writeHalf(ne, ee) && utils.parseHalf(ne) === ee)
      return this._pushUInt8(HALF) && this.push(ne);
    const ie = Buffer$2.allocUnsafe(4);
    return ie.writeFloatBE(ee, 0), ie.readFloatBE(0) === ee ? this._pushUInt8(FLOAT) && this.push(ie) : this._pushUInt8(DOUBLE) && this._pushDoubleBE(ee);
  }
  _pushInt(ee, ne, ie) {
    const ae = ne << 5;
    return ee < 24 ? this._pushUInt8(ae | ee) : ee <= 255 ? this._pushUInt8(ae | NUMBYTES.ONE) && this._pushUInt8(ee) : ee <= 65535 ? this._pushUInt8(ae | NUMBYTES.TWO) && this._pushUInt16BE(ee) : ee <= 4294967295 ? this._pushUInt8(ae | NUMBYTES.FOUR) && this._pushUInt32BE(ee) : ee <= Number.MAX_SAFE_INTEGER ? this._pushUInt8(ae | NUMBYTES.EIGHT) && this._pushUInt32BE(Math.floor(ee / SHIFT32)) && this._pushUInt32BE(ee % SHIFT32) : ne === MT.NEG_INT ? this._pushFloat(ie) : this._pushFloat(ee);
  }
  _pushIntNum(ee) {
    return ee < 0 ? this._pushInt(-ee - 1, MT.NEG_INT, ee) : this._pushInt(ee, MT.POS_INT);
  }
  _pushNumber(ee) {
    switch (!1) {
      case ee === ee:
        return this._pushNaN(ee);
      case isFinite(ee):
        return this._pushInfinity(ee);
      case ee % 1 !== 0:
        return this._pushIntNum(ee);
      default:
        return this._pushFloat(ee);
    }
  }
  _pushString(ee) {
    const ne = Buffer$2.byteLength(ee, "utf8");
    return this._pushInt(ne, MT.UTF8_STRING) && this.pushWrite(ee, 5, ne);
  }
  _pushBoolean(ee) {
    return this._pushUInt8(ee ? TRUE : FALSE);
  }
  _pushUndefined(ee) {
    return this._pushUInt8(UNDEFINED);
  }
  _pushArray(ee, ne) {
    const ie = ne.length;
    if (!ee._pushInt(ie, MT.ARRAY))
      return !1;
    for (let ae = 0; ae < ie; ae++)
      if (!ee.pushAny(ne[ae]))
        return !1;
    return !0;
  }
  _pushTag(ee) {
    return this._pushInt(ee, MT.TAG);
  }
  _pushDate(ee, ne) {
    return ee._pushTag(TAG.DATE_EPOCH) && ee.pushAny(Math.round(ne / 1e3));
  }
  _pushBuffer(ee, ne) {
    return ee._pushInt(ne.length, MT.BYTE_STRING) && ee.push(ne);
  }
  _pushNoFilter(ee, ne) {
    return ee._pushBuffer(ee, ne.slice());
  }
  _pushRegexp(ee, ne) {
    return ee._pushTag(TAG.REGEXP) && ee.pushAny(ne.source);
  }
  _pushSet(ee, ne) {
    if (!ee._pushInt(ne.size, MT.ARRAY))
      return !1;
    for (const ie of ne)
      if (!ee.pushAny(ie))
        return !1;
    return !0;
  }
  _pushUrl(ee, ne) {
    return ee._pushTag(TAG.URI) && ee.pushAny(ne.format());
  }
  _pushBigint(ee) {
    let ne = TAG.POS_BIGINT;
    ee.isNegative() && (ee = ee.negated().minus(1), ne = TAG.NEG_BIGINT);
    let ie = ee.toString(16);
    ie.length % 2 && (ie = "0" + ie);
    const ae = Buffer$2.from(ie, "hex");
    return this._pushTag(ne) && this._pushBuffer(this, ae);
  }
  _pushBigNumber(ee, ne) {
    if (ne.isNaN())
      return ee._pushNaN();
    if (!ne.isFinite())
      return ee._pushInfinity(ne.isNegative() ? -1 / 0 : 1 / 0);
    if (ne.isInteger())
      return ee._pushBigint(ne);
    if (!(ee._pushTag(TAG.DECIMAL_FRAC) && ee._pushInt(2, MT.ARRAY)))
      return !1;
    const ie = ne.decimalPlaces(), ae = ne.multipliedBy(new Bignumber(10).pow(ie));
    return ee._pushIntNum(-ie) ? ae.abs().isLessThan(MAXINT_BN) ? ee._pushIntNum(ae.toNumber()) : ee._pushBigint(ae) : !1;
  }
  _pushMap(ee, ne) {
    return ee._pushInt(ne.size, MT.MAP) ? this._pushRawMap(
      ne.size,
      Array.from(ne)
    ) : !1;
  }
  _pushObject(ee) {
    if (!ee)
      return this._pushUInt8(NULL);
    for (var ne = this.semanticTypes.length, ie = 0; ie < ne; ie++)
      if (ee instanceof this.semanticTypes[ie][0])
        return this.semanticTypes[ie][1].call(ee, this, ee);
    var ae = ee.encodeCBOR;
    if (typeof ae == "function")
      return ae.call(ee, this);
    var ce = Object.keys(ee), le = ce.length;
    return this._pushInt(le, MT.MAP) ? this._pushRawMap(
      le,
      ce.map((de) => [de, ee[de]])
    ) : !1;
  }
  _pushRawMap(ee, ne) {
    ne = ne.map(function(ae) {
      return ae[0] = Encoder.encode(ae[0]), ae;
    }).sort(utils.keySorter);
    for (var ie = 0; ie < ee; ie++)
      if (!this.push(ne[ie][0]) || !this.pushAny(ne[ie][1]))
        return !1;
    return !0;
  }
  write(ee) {
    return this.pushAny(ee);
  }
  pushAny(ee) {
    var ne = toType(ee);
    switch (ne) {
      case "Number":
        return this._pushNumber(ee);
      case "String":
        return this._pushString(ee);
      case "Boolean":
        return this._pushBoolean(ee);
      case "Object":
        return this._pushObject(ee);
      case "Array":
        return this._pushArray(this, ee);
      case "Uint8Array":
        return this._pushBuffer(this, Buffer$2.isBuffer(ee) ? ee : Buffer$2.from(ee));
      case "Null":
        return this._pushUInt8(NULL);
      case "Undefined":
        return this._pushUndefined(ee);
      case "Map":
        return this._pushMap(this, ee);
      case "Set":
        return this._pushSet(this, ee);
      case "URL":
        return this._pushUrl(this, ee);
      case "BigNumber":
        return this._pushBigNumber(this, ee);
      case "Date":
        return this._pushDate(this, ee);
      case "RegExp":
        return this._pushRegexp(this, ee);
      case "Symbol":
        switch (ee) {
          case SYMS.NULL:
            return this._pushObject(null);
          case SYMS.UNDEFINED:
            return this._pushUndefined(void 0);
          default:
            throw new Error("Unknown symbol: " + ee.toString());
        }
      default:
        throw new Error("Unknown type: " + typeof ee + ", " + (ee ? ee.toString() : ""));
    }
  }
  finalize() {
    if (this.offset === 0)
      return null;
    for (var ee = this.result, ne = this.resultLength, ie = this.resultMethod, ae = this.offset, ce = 0, le = 0; le < ae; le++)
      ce += ne[le];
    var de = Buffer$2.allocUnsafe(ce), ye = 0, he = 0;
    for (le = 0; le < ae; le++) {
      switch (he = ne[le], ie[le]) {
        case 0:
          ee[le].copy(de, ye);
          break;
        case 1:
          de.writeUInt8(ee[le], ye, !0);
          break;
        case 2:
          de.writeUInt16BE(ee[le], ye, !0);
          break;
        case 3:
          de.writeUInt32BE(ee[le], ye, !0);
          break;
        case 4:
          de.writeDoubleBE(ee[le], ye, !0);
          break;
        case 5:
          de.write(ee[le], ye, he, "utf8");
          break;
        default:
          throw new Error("unkown method");
      }
      ye += he;
    }
    var Be = de;
    return this._reset(), Be;
  }
  _reset() {
    this.result = [], this.resultMethod = [], this.resultLength = [], this.offset = 0;
  }
  static encode(ee) {
    const ne = new Encoder();
    if (!ne.pushAny(ee))
      throw new Error("Failed to encode input");
    return ne.finalize();
  }
}
var encoder = Encoder;
(function(Q) {
  Q.Diagnose = diagnose, Q.Decoder = decoder, Q.Encoder = encoder, Q.Simple = simple, Q.Tagged = tagged$1, Q.decodeAll = Q.Decoder.decodeAll, Q.decodeFirst = Q.Decoder.decodeFirst, Q.diagnose = Q.Diagnose.diagnose, Q.encode = Q.Encoder.encode, Q.decode = Q.Decoder.decode, Q.leveldb = {
    decode: Q.Decoder.decodeAll,
    encode: Q.Encoder.encode,
    buffer: !0,
    name: "cbor"
  };
})(src$1);
var safeBuffer = { exports: {} };
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
(function(Q, ee) {
  var ne = buffer$1, ie = ne.Buffer;
  function ae(le, de) {
    for (var ye in le)
      de[ye] = le[ye];
  }
  ie.from && ie.alloc && ie.allocUnsafe && ie.allocUnsafeSlow ? Q.exports = ne : (ae(ne, ee), ee.Buffer = ce);
  function ce(le, de, ye) {
    return ie(le, de, ye);
  }
  ce.prototype = Object.create(ie.prototype), ae(ie, ce), ce.from = function(le, de, ye) {
    if (typeof le == "number")
      throw new TypeError("Argument must not be a number");
    return ie(le, de, ye);
  }, ce.alloc = function(le, de, ye) {
    if (typeof le != "number")
      throw new TypeError("Argument must be a number");
    var he = ie(le);
    return de !== void 0 ? typeof ye == "string" ? he.fill(de, ye) : he.fill(de) : he.fill(0), he;
  }, ce.allocUnsafe = function(le) {
    if (typeof le != "number")
      throw new TypeError("Argument must be a number");
    return ie(le);
  }, ce.allocUnsafeSlow = function(le) {
    if (typeof le != "number")
      throw new TypeError("Argument must be a number");
    return ne.SlowBuffer(le);
  };
})(safeBuffer, safeBuffer.exports);
const Buffer$1 = safeBuffer.exports.Buffer;
var bufferPipe = class {
  constructor(ee = Buffer$1.from([])) {
    this.buffer = ee, this._bytesRead = 0, this._bytesWrote = 0;
  }
  read(ee) {
    this._bytesRead += ee;
    const ne = this.buffer.slice(0, ee);
    return this.buffer = this.buffer.slice(ee), ne;
  }
  write(ee) {
    ee = Buffer$1.from(ee), this._bytesWrote += ee.length, this.buffer = Buffer$1.concat([this.buffer, ee]);
  }
  get end() {
    return !this.buffer.length;
  }
  get bytesRead() {
    return this._bytesRead;
  }
  get bytesWrote() {
    return this._bytesWrote;
  }
};
function safeRead$1(Q, ee) {
  if (Q.buffer.length < ee)
    throw new Error("unexpected end of buffer");
  return Q.read(ee);
}
function lebEncode$1(Q) {
  if (typeof Q == "number" && (Q = BigInt(Q)), Q < BigInt(0))
    throw new Error("Cannot leb encode negative values.");
  const ee = new bufferPipe();
  for (; ; ) {
    const ne = Number(Q & BigInt(127));
    if (Q /= BigInt(128), Q === BigInt(0)) {
      ee.write([ne]);
      break;
    } else
      ee.write([ne | 128]);
  }
  return new buffer$1.Buffer(ee.buffer);
}
function lebDecode$1(Q) {
  let ee = BigInt(1), ne = BigInt(0), ie;
  do
    ie = safeRead$1(Q, 1)[0], ne += BigInt(ie & 127).valueOf() * ee, ee *= BigInt(128);
  while (ie >= 128);
  return ne;
}
function slebEncode$1(Q) {
  typeof Q == "number" && (Q = BigInt(Q));
  const ee = Q < BigInt(0);
  ee && (Q = -Q - BigInt(1));
  const ne = new bufferPipe();
  for (; ; ) {
    const ae = ie(Q);
    if (Q /= BigInt(128), ee && Q === BigInt(0) && (ae & 64) !== 0 || !ee && Q === BigInt(0) && (ae & 64) === 0) {
      ne.write([ae]);
      break;
    } else
      ne.write([ae | 128]);
  }
  function ie(ae) {
    const ce = ae % BigInt(128);
    return Number(ee ? BigInt(128) - ce - BigInt(1) : ce);
  }
  return new buffer$1.Buffer(ne.buffer);
}
function slebDecode$1(Q) {
  const ee = new Uint8Array(Q.buffer);
  let ne = 0;
  for (; ne < ee.byteLength; ne++)
    if (ee[ne] < 128) {
      if ((ee[ne] & 64) === 0)
        return lebDecode$1(Q);
      break;
    }
  const ie = new Uint8Array(safeRead$1(Q, ne + 1));
  let ae = BigInt(0);
  for (let ce = ie.byteLength - 1; ce >= 0; ce--)
    ae = ae * BigInt(128) + BigInt(128 - (ie[ce] & 127) - 1);
  return -ae - BigInt(1);
}
function writeUIntLE$1(Q, ee) {
  if (BigInt(Q) < BigInt(0))
    throw new Error("Cannot write negative values.");
  return writeIntLE$1(Q, ee);
}
function writeIntLE$1(Q, ee) {
  Q = BigInt(Q);
  const ne = new bufferPipe();
  let ie = 0, ae = BigInt(256), ce = BigInt(0), le = Number(Q % ae);
  for (ne.write([le]); ++ie < ee; )
    Q < 0 && ce === BigInt(0) && le !== 0 && (ce = BigInt(1)), le = Number((Q / ae - ce) % BigInt(256)), ne.write([le]), ae *= BigInt(256);
  return new buffer$1.Buffer(ne.buffer);
}
function readUIntLE$1(Q, ee) {
  let ne = BigInt(safeRead$1(Q, 1)[0]), ie = BigInt(1), ae = 0;
  for (; ++ae < ee; ) {
    ie *= BigInt(256);
    const ce = BigInt(safeRead$1(Q, 1)[0]);
    ne = ne + ie * ce;
  }
  return ne;
}
function readIntLE$1(Q, ee) {
  let ne = readUIntLE$1(Q, ee);
  const ie = BigInt(2) ** (BigInt(8) * BigInt(ee - 1) + BigInt(7));
  return ne >= ie && (ne -= ie * BigInt(2)), ne;
}
function blobFromBuffer(Q) {
  return Q;
}
function blobFromUint8Array(Q) {
  return buffer$1.Buffer.from(Q);
}
function blobFromText(Q) {
  return buffer$1.Buffer.from(Q);
}
function blobFromHex(Q) {
  return buffer$1.Buffer.from(Q, "hex");
}
function blobToHex(Q) {
  return Q.toString("hex");
}
function blobToUint8Array(Q) {
  return new Uint8Array(Q.slice(0, Q.byteLength));
}
function makeNonce$1() {
  return lebEncode$1(BigInt(+Date.now()) * BigInt(1e5) + BigInt(Math.floor(Math.random() * 1e5)));
}
function idlHash$1(Q) {
  const ne = new TextEncoder().encode(Q);
  let ie = 0;
  for (const ae of ne)
    ie = (ie * 223 + ae) % 2 ** 32;
  return ie;
}
function idlLabelToId$1(Q) {
  if (/^_\d+_$/.test(Q) || /^_0x[0-9a-fA-F]+_$/.test(Q)) {
    const ee = +Q.slice(1, -1);
    if (Number.isSafeInteger(ee) && ee >= 0 && ee < 2 ** 32)
      return ee;
  }
  return idlHash$1(Q);
}
const magicNumber$1 = "DIDL";
function zipWith$1(Q, ee, ne) {
  return Q.map((ie, ae) => ne(ie, ee[ae]));
}
class TypeTable$1 {
  constructor() {
    this._typs = [], this._idx = /* @__PURE__ */ new Map();
  }
  has(ee) {
    return this._idx.has(ee.name);
  }
  add(ee, ne) {
    const ie = this._typs.length;
    this._idx.set(ee.name, ie), this._typs.push(ne);
  }
  merge(ee, ne) {
    const ie = this._idx.get(ee.name), ae = this._idx.get(ne);
    if (ie === void 0)
      throw new Error("Missing type index for " + ee);
    if (ae === void 0)
      throw new Error("Missing type index for " + ne);
    this._typs[ie] = this._typs[ae], this._typs.splice(ae, 1), this._idx.delete(ne);
  }
  encode() {
    const ee = lebEncode$1(this._typs.length), ne = buffer$1.Buffer.concat(this._typs);
    return buffer$1.Buffer.concat([ee, ne]);
  }
  indexOf(ee) {
    if (!this._idx.has(ee))
      throw new Error("Missing type index for " + ee);
    return slebEncode$1(this._idx.get(ee) || 0);
  }
}
class Visitor$1 {
  visitType(ee, ne) {
    throw new Error("Not implemented");
  }
  visitPrimitive(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitEmpty(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitBool(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNull(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitReserved(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitText(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNumber(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFloat(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitFixedInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFixedNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitPrincipal(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitConstruct(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitVec(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitOpt(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRecord(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitTuple(ee, ne, ie) {
    const ae = ne.map((ce, le) => [`_${le}_`, ce]);
    return this.visitRecord(ee, ae, ie);
  }
  visitVariant(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRec(ee, ne, ie) {
    return this.visitConstruct(ne, ie);
  }
  visitFunc(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
  visitService(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
}
class Type$1 {
  display() {
    return this.name;
  }
  valueToString(ee) {
    return toReadableString$1(ee);
  }
  buildTypeTable(ee) {
    ee.has(this) || this._buildTypeTableImpl(ee);
  }
}
class PrimitiveType$1 extends Type$1 {
  checkType(ee) {
    if (this.name !== ee.name)
      throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
    return ee;
  }
  _buildTypeTableImpl(ee) {
  }
}
class ConstructType$1 extends Type$1 {
  checkType(ee) {
    if (ee instanceof RecClass$1) {
      const ne = ee.getType();
      if (typeof ne > "u")
        throw new Error("type mismatch with uninitialized type");
      return ne;
    }
    throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
  }
  encodeType(ee) {
    return ee.indexOf(this.name);
  }
}
class EmptyClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitEmpty(this, ne);
  }
  covariant(ee) {
    return !1;
  }
  encodeValue() {
    throw new Error("Empty cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Empty cannot appear as a value");
  }
  encodeType() {
    return slebEncode$1(-17);
  }
  decodeValue() {
    throw new Error("Empty cannot appear as an output");
  }
  get name() {
    return "empty";
  }
}
class BoolClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitBool(this, ne);
  }
  covariant(ee) {
    return typeof ee == "boolean";
  }
  encodeValue(ee) {
    const ne = buffer$1.Buffer.alloc(1);
    return ne.writeInt8(ee ? 1 : 0, 0), ne;
  }
  encodeType() {
    return slebEncode$1(-2);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = safeRead$1(ee, 1).toString("hex");
    if (ie === "00")
      return !1;
    if (ie === "01")
      return !0;
    throw new Error("Boolean value out of range");
  }
  get name() {
    return "bool";
  }
}
class NullClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitNull(this, ne);
  }
  covariant(ee) {
    return ee === null;
  }
  encodeValue() {
    return buffer$1.Buffer.alloc(0);
  }
  encodeType() {
    return slebEncode$1(-1);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), null;
  }
  get name() {
    return "null";
  }
}
class ReservedClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitReserved(this, ne);
  }
  covariant(ee) {
    return !0;
  }
  encodeValue() {
    return buffer$1.Buffer.alloc(0);
  }
  encodeType() {
    return slebEncode$1(-16);
  }
  decodeValue(ee, ne) {
    return ne.name !== this.name && ne.decodeValue(ee, ne), null;
  }
  get name() {
    return "reserved";
  }
}
function isValidUTF8(Q) {
  return buffer$1.Buffer.compare(new buffer$1.Buffer(Q.toString(), "utf8"), Q) === 0;
}
class TextClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitText(this, ne);
  }
  covariant(ee) {
    return typeof ee == "string";
  }
  encodeValue(ee) {
    const ne = buffer$1.Buffer.from(ee, "utf8"), ie = lebEncode$1(ne.length);
    return buffer$1.Buffer.concat([ie, ne]);
  }
  encodeType() {
    return slebEncode$1(-15);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = lebDecode$1(ee), ae = safeRead$1(ee, Number(ie));
    if (!isValidUTF8(ae))
      throw new Error("Not valid UTF8 text");
    return ae.toString("utf8");
  }
  get name() {
    return "text";
  }
  valueToString(ee) {
    return '"' + ee + '"';
  }
}
class IntClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitInt(this, ne);
  }
  covariant(ee) {
    return typeof ee == "bigint" || Number.isInteger(ee);
  }
  encodeValue(ee) {
    return slebEncode$1(ee);
  }
  encodeType() {
    return slebEncode$1(-4);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), slebDecode$1(ee);
  }
  get name() {
    return "int";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class NatClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitNat(this, ne);
  }
  covariant(ee) {
    return typeof ee == "bigint" && ee >= BigInt(0) || Number.isInteger(ee) && ee >= 0;
  }
  encodeValue(ee) {
    return lebEncode$1(ee);
  }
  encodeType() {
    return slebEncode$1(-3);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), lebDecode$1(ee);
  }
  get name() {
    return "nat";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FloatClass$1 extends PrimitiveType$1 {
  constructor(ee) {
    if (super(), this._bits = ee, ee !== 32 && ee !== 64)
      throw new Error("not a valid float type");
  }
  accept(ee, ne) {
    return ee.visitFloat(this, ne);
  }
  covariant(ee) {
    return typeof ee == "number" || ee instanceof Number;
  }
  encodeValue(ee) {
    const ne = buffer$1.Buffer.allocUnsafe(this._bits / 8);
    return this._bits === 32 ? ne.writeFloatLE(ee, 0) : ne.writeDoubleLE(ee, 0), ne;
  }
  encodeType() {
    const ee = this._bits === 32 ? -13 : -14;
    return slebEncode$1(ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = safeRead$1(ee, this._bits / 8);
    return this._bits === 32 ? ie.readFloatLE(0) : ie.readDoubleLE(0);
  }
  get name() {
    return "float" + this._bits;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedIntClass$1 extends PrimitiveType$1 {
  constructor(ee) {
    super(), this._bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedInt(this, ne);
  }
  covariant(ee) {
    const ne = BigInt(2) ** BigInt(this._bits - 1) * BigInt(-1), ie = BigInt(2) ** BigInt(this._bits - 1) - BigInt(1);
    if (typeof ee == "bigint")
      return ee >= ne && ee <= ie;
    if (Number.isInteger(ee)) {
      const ae = BigInt(ee);
      return ae >= ne && ae <= ie;
    } else
      return !1;
  }
  encodeValue(ee) {
    return writeIntLE$1(ee, this._bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this._bits) - 3;
    return slebEncode$1(-9 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readIntLE$1(ee, this._bits / 8);
    return this._bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `int${this._bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedNatClass$1 extends PrimitiveType$1 {
  constructor(ee) {
    super(), this.bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedNat(this, ne);
  }
  covariant(ee) {
    const ne = BigInt(2) ** BigInt(this.bits);
    return typeof ee == "bigint" && ee >= BigInt(0) ? ee < ne : Number.isInteger(ee) && ee >= 0 ? BigInt(ee) < ne : !1;
  }
  encodeValue(ee) {
    return writeUIntLE$1(ee, this.bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this.bits) - 3;
    return slebEncode$1(-5 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readUIntLE$1(ee, this.bits / 8);
    return this.bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `nat${this.bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class VecClass$1 extends ConstructType$1 {
  constructor(ee) {
    super(), this._type = ee, this._blobOptimization = !1, ee instanceof FixedNatClass$1 && ee.bits === 8 && (this._blobOptimization = !0);
  }
  accept(ee, ne) {
    return ee.visitVec(this, this._type, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.every((ne) => this._type.covariant(ne));
  }
  encodeValue(ee) {
    const ne = lebEncode$1(ee.length);
    return this._blobOptimization ? buffer$1.Buffer.concat([ne, buffer$1.Buffer.from(ee)]) : buffer$1.Buffer.concat([ne, ...ee.map((ie) => this._type.encodeValue(ie))]);
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode$1(-19), ie = this._type.encodeType(ee);
    ee.add(this, buffer$1.Buffer.concat([ne, ie]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VecClass$1))
      throw new Error("Not a vector type");
    const ae = Number(lebDecode$1(ee));
    if (this._blobOptimization)
      return [...new Uint8Array(ee.read(ae))];
    const ce = [];
    for (let le = 0; le < ae; le++)
      ce.push(this._type.decodeValue(ee, ie._type));
    return ce;
  }
  get name() {
    return `vec ${this._type.name}`;
  }
  display() {
    return `vec ${this._type.display()}`;
  }
  valueToString(ee) {
    return "vec {" + ee.map((ie) => this._type.valueToString(ie)).join("; ") + "}";
  }
}
class OptClass$1 extends ConstructType$1 {
  constructor(ee) {
    super(), this._type = ee;
  }
  accept(ee, ne) {
    return ee.visitOpt(this, this._type, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && (ee.length === 0 || ee.length === 1 && this._type.covariant(ee[0]));
  }
  encodeValue(ee) {
    return ee.length === 0 ? buffer$1.Buffer.from([0]) : buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), this._type.encodeValue(ee[0])]);
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode$1(-18), ie = this._type.encodeType(ee);
    ee.add(this, buffer$1.Buffer.concat([ne, ie]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof OptClass$1))
      throw new Error("Not an option type");
    const ae = safeRead$1(ee, 1).toString("hex");
    if (ae === "00")
      return [];
    if (ae === "01")
      return [this._type.decodeValue(ee, ie._type)];
    throw new Error("Not an option value");
  }
  get name() {
    return `opt ${this._type.name}`;
  }
  display() {
    return `opt ${this._type.display()}`;
  }
  valueToString(ee) {
    return ee.length === 0 ? "null" : `opt ${this._type.valueToString(ee[0])}`;
  }
}
class RecordClass$1 extends ConstructType$1 {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId$1(ne[0]) - idlLabelToId$1(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitRecord(this, this._fields, ne);
  }
  tryAsTuple() {
    const ee = [];
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, ae] = this._fields[ne];
      if (ie !== `_${ne}_`)
        return null;
      ee.push(ae);
    }
    return ee;
  }
  covariant(ee) {
    return typeof ee == "object" && this._fields.every(([ne, ie]) => {
      if (!ee.hasOwnProperty(ne))
        throw new Error(`Record is missing key "${ne}".`);
      return ie.covariant(ee[ne]);
    });
  }
  encodeValue(ee) {
    const ne = this._fields.map(([ae]) => ee[ae]), ie = zipWith$1(this._fields, ne, ([, ae], ce) => ae.encodeValue(ce));
    return buffer$1.Buffer.concat(ie);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, le]) => le.buildTypeTable(ee));
    const ne = slebEncode$1(-20), ie = lebEncode$1(this._fields.length), ae = this._fields.map(([ce, le]) => buffer$1.Buffer.concat([lebEncode$1(idlLabelToId$1(ce)), le.encodeType(ee)]));
    ee.add(this, buffer$1.Buffer.concat([ne, ie, buffer$1.Buffer.concat(ae)]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof RecordClass$1))
      throw new Error("Not a record type");
    const ae = {};
    let ce = 0;
    for (const [le, de] of ie._fields) {
      if (ce >= this._fields.length || idlLabelToId$1(this._fields[ce][0]) !== idlLabelToId$1(le)) {
        de.decodeValue(ee, de);
        continue;
      }
      const [ye, he] = this._fields[ce];
      ae[ye] = he.decodeValue(ee, de), ce++;
    }
    if (ce < this._fields.length)
      throw new Error("Cannot find field " + this._fields[ce][0]);
    return ae;
  }
  get name() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.display()).join("; ")}}`;
  }
  valueToString(ee) {
    const ne = this._fields.map(([ae]) => ee[ae]);
    return `record {${zipWith$1(this._fields, ne, ([ae, ce], le) => ae + "=" + ce.valueToString(le)).join("; ")}}`;
  }
}
class TupleClass$1 extends RecordClass$1 {
  constructor(ee) {
    const ne = {};
    ee.forEach((ie, ae) => ne["_" + ae + "_"] = ie), super(ne), this._components = ee;
  }
  accept(ee, ne) {
    return ee.visitTuple(this, this._components, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.length >= this._fields.length && this._components.every((ne, ie) => ne.covariant(ee[ie]));
  }
  encodeValue(ee) {
    const ne = zipWith$1(this._components, ee, (ie, ae) => ie.encodeValue(ae));
    return buffer$1.Buffer.concat(ne);
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof TupleClass$1))
      throw new Error("not a tuple type");
    if (ie._components.length < this._components.length)
      throw new Error("tuple mismatch");
    const ae = [];
    for (const [ce, le] of ie._components.entries())
      ce >= this._components.length ? le.decodeValue(ee, le) : ae.push(this._components[ce].decodeValue(ee, le));
    return ae;
  }
  display() {
    return `record {${this._components.map((ne) => ne.display()).join("; ")}}`;
  }
  valueToString(ee) {
    return `record {${zipWith$1(this._components, ee, (ie, ae) => ie.valueToString(ae)).join("; ")}}`;
  }
}
class VariantClass$1 extends ConstructType$1 {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId$1(ne[0]) - idlLabelToId$1(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitVariant(this, this._fields, ne);
  }
  covariant(ee) {
    return typeof ee == "object" && Object.entries(ee).length === 1 && this._fields.every(([ne, ie]) => !ee.hasOwnProperty(ne) || ie.covariant(ee[ne]));
  }
  encodeValue(ee) {
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, ae] = this._fields[ne];
      if (ee.hasOwnProperty(ie)) {
        const ce = lebEncode$1(ne), le = ae.encodeValue(ee[ie]);
        return buffer$1.Buffer.concat([ce, le]);
      }
    }
    throw Error("Variant has no data: " + ee);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([, ce]) => {
      ce.buildTypeTable(ee);
    });
    const ne = slebEncode$1(-21), ie = lebEncode$1(this._fields.length), ae = this._fields.map(([ce, le]) => buffer$1.Buffer.concat([lebEncode$1(idlLabelToId$1(ce)), le.encodeType(ee)]));
    ee.add(this, buffer$1.Buffer.concat([ne, ie, ...ae]));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VariantClass$1))
      throw new Error("Not a variant type");
    const ae = Number(lebDecode$1(ee));
    if (ae >= ie._fields.length)
      throw Error("Invalid variant index: " + ae);
    const [ce, le] = ie._fields[ae];
    for (const [de, ye] of this._fields)
      if (idlLabelToId$1(ce) === idlLabelToId$1(de)) {
        const he = ye.decodeValue(ee, le);
        return { [de]: he };
      }
    throw new Error("Cannot find field hash " + ce);
  }
  get name() {
    return `variant {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `variant {${this._fields.map(([ne, ie]) => ne + (ie.name === "null" ? "" : `:${ie.display()}`)).join("; ")}}`;
  }
  valueToString(ee) {
    for (const [ne, ie] of this._fields)
      if (ee.hasOwnProperty(ne)) {
        const ae = ie.valueToString(ee[ne]);
        return ae === "null" ? `variant {${ne}}` : `variant {${ne}=${ae}}`;
      }
    throw new Error("Variant has no data: " + ee);
  }
}
class RecClass$1 extends ConstructType$1 {
  constructor() {
    super(...arguments), this._id = RecClass$1._counter++, this._type = void 0;
  }
  accept(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return ee.visitRec(this, this._type, ne);
  }
  fill(ee) {
    this._type = ee;
  }
  getType() {
    return this._type;
  }
  covariant(ee) {
    return this._type ? this._type.covariant(ee) : !1;
  }
  encodeValue(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.encodeValue(ee);
  }
  _buildTypeTableImpl(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    ee.add(this, buffer$1.Buffer.alloc(0)), this._type.buildTypeTable(ee), ee.merge(this, this._type.name);
  }
  decodeValue(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.decodeValue(ee, ne);
  }
  get name() {
    return `rec_${this._id}`;
  }
  display() {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return `\u03BC${this.name}.${this._type.name}`;
  }
  valueToString(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.valueToString(ee);
  }
}
RecClass$1._counter = 0;
function decodePrincipalId$1(Q) {
  if (safeRead$1(Q, 1).toString("hex") !== "01")
    throw new Error("Cannot decode principal");
  const ne = Number(lebDecode$1(Q)), ie = safeRead$1(Q, ne).toString("hex").toUpperCase();
  return Principal$2.fromHex(ie);
}
class PrincipalClass$1 extends PrimitiveType$1 {
  accept(ee, ne) {
    return ee.visitPrincipal(this, ne);
  }
  covariant(ee) {
    return ee && ee._isPrincipal;
  }
  encodeValue(ee) {
    const ne = ee.toHex(), ie = buffer$1.Buffer.from(ne, "hex"), ae = lebEncode$1(ie.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), ae, ie]);
  }
  encodeType() {
    return slebEncode$1(-24);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), decodePrincipalId$1(ee);
  }
  get name() {
    return "principal";
  }
  valueToString(ee) {
    return `${this.name} "${ee.toText()}"`;
  }
}
class FuncClass$1 extends ConstructType$1 {
  constructor(ee, ne, ie = []) {
    super(), this.argTypes = ee, this.retTypes = ne, this.annotations = ie;
  }
  static argsToString(ee, ne) {
    if (ee.length !== ne.length)
      throw new Error("arity mismatch");
    return "(" + ee.map((ie, ae) => ie.valueToString(ne[ae])).join(", ") + ")";
  }
  accept(ee, ne) {
    return ee.visitFunc(this, ne);
  }
  covariant(ee) {
    return Array.isArray(ee) && ee.length === 2 && ee[0] && ee[0]._isPrincipal && typeof ee[1] == "string";
  }
  encodeValue(ee) {
    const ne = ee[0].toHex(), ie = buffer$1.Buffer.from(ne, "hex"), ae = lebEncode$1(ie.length), ce = buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), ae, ie]), le = buffer$1.Buffer.from(ee[1], "utf8"), de = lebEncode$1(le.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), ce, de, le]);
  }
  _buildTypeTableImpl(ee) {
    this.argTypes.forEach((he) => he.buildTypeTable(ee)), this.retTypes.forEach((he) => he.buildTypeTable(ee));
    const ne = slebEncode$1(-22), ie = lebEncode$1(this.argTypes.length), ae = buffer$1.Buffer.concat(this.argTypes.map((he) => he.encodeType(ee))), ce = lebEncode$1(this.retTypes.length), le = buffer$1.Buffer.concat(this.retTypes.map((he) => he.encodeType(ee))), de = lebEncode$1(this.annotations.length), ye = buffer$1.Buffer.concat(this.annotations.map((he) => this.encodeAnnotation(he)));
    ee.add(this, buffer$1.Buffer.concat([ne, ie, ae, ce, le, de, ye]));
  }
  decodeValue(ee) {
    if (safeRead$1(ee, 1).toString("hex") !== "01")
      throw new Error("Cannot decode function reference");
    const ie = decodePrincipalId$1(ee), ae = Number(lebDecode$1(ee)), ce = safeRead$1(ee, ae);
    if (!isValidUTF8(ce))
      throw new Error("Not valid UTF8 method name");
    const le = ce.toString("utf8");
    return [ie, le];
  }
  get name() {
    const ee = this.argTypes.map((ae) => ae.name).join(", "), ne = this.retTypes.map((ae) => ae.name).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) -> (${ne})${ie}`;
  }
  valueToString([ee, ne]) {
    return `func "${ee.toText()}".${ne}`;
  }
  display() {
    const ee = this.argTypes.map((ae) => ae.display()).join(", "), ne = this.retTypes.map((ae) => ae.display()).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) \u2192 (${ne})${ie}`;
  }
  encodeAnnotation(ee) {
    if (ee === "query")
      return buffer$1.Buffer.from([1]);
    if (ee === "oneway")
      return buffer$1.Buffer.from([2]);
    throw new Error("Illeagal function annotation");
  }
}
class ServiceClass$1 extends ConstructType$1 {
  constructor(ee) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId$1(ne[0]) - idlLabelToId$1(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitService(this, ne);
  }
  covariant(ee) {
    return ee && ee._isPrincipal;
  }
  encodeValue(ee) {
    const ne = ee.toHex(), ie = buffer$1.Buffer.from(ne, "hex"), ae = lebEncode$1(ie.length);
    return buffer$1.Buffer.concat([buffer$1.Buffer.from([1]), ae, ie]);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, le]) => le.buildTypeTable(ee));
    const ne = slebEncode$1(-23), ie = lebEncode$1(this._fields.length), ae = this._fields.map(([ce, le]) => {
      const de = buffer$1.Buffer.from(ce, "utf8"), ye = lebEncode$1(de.length);
      return buffer$1.Buffer.concat([ye, de, le.encodeType(ee)]);
    });
    ee.add(this, buffer$1.Buffer.concat([ne, ie, buffer$1.Buffer.concat(ae)]));
  }
  decodeValue(ee) {
    return decodePrincipalId$1(ee);
  }
  get name() {
    return `service {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  valueToString(ee) {
    return `service "${ee.toText()}"`;
  }
}
function toReadableString$1(Q) {
  return JSON.stringify(Q, (ee, ne) => typeof ne == "bigint" ? `BigInt(${ne})` : ne);
}
function encode$3(Q, ee) {
  if (ee.length < Q.length)
    throw Error("Wrong number of message arguments");
  const ne = new TypeTable$1();
  Q.forEach((ye) => ye.buildTypeTable(ne));
  const ie = buffer$1.Buffer.from(magicNumber$1, "utf8"), ae = ne.encode(), ce = lebEncode$1(ee.length), le = buffer$1.Buffer.concat(Q.map((ye) => ye.encodeType(ne))), de = buffer$1.Buffer.concat(zipWith$1(Q, ee, (ye, he) => {
    if (!ye.covariant(he))
      throw new Error(`Invalid ${ye.display()} argument: ${toReadableString$1(he)}`);
    return ye.encodeValue(he);
  }));
  return buffer$1.Buffer.concat([ie, ae, ce, le, de]);
}
function decode$4(Q, ee) {
  const ne = new bufferPipe(ee);
  if (ee.byteLength < magicNumber$1.length)
    throw new Error("Message length smaller than magic number");
  const ie = safeRead$1(ne, magicNumber$1.length).toString();
  if (ie !== magicNumber$1)
    throw new Error("Wrong magic number: " + ie);
  function ae(me) {
    const ge = [], be = Number(lebDecode$1(me));
    for (let He = 0; He < be; He++) {
      const Se = Number(slebDecode$1(me));
      switch (Se) {
        case -18:
        case -19: {
          const Ge = Number(slebDecode$1(me));
          ge.push([Se, Ge]);
          break;
        }
        case -20:
        case -21: {
          const Ge = [];
          let Fe = Number(lebDecode$1(me)), Pe;
          for (; Fe--; ) {
            const We = Number(lebDecode$1(me));
            if (We >= Math.pow(2, 32))
              throw new Error("field id out of 32-bit range");
            if (typeof Pe == "number" && Pe >= We)
              throw new Error("field id collision or not sorted");
            Pe = We;
            const tt = Number(slebDecode$1(me));
            Ge.push([We, tt]);
          }
          ge.push([Se, Ge]);
          break;
        }
        case -22: {
          for (let Fe = 0; Fe < 2; Fe++) {
            let Pe = Number(lebDecode$1(me));
            for (; Pe--; )
              slebDecode$1(me);
          }
          const Ge = Number(lebDecode$1(me));
          safeRead$1(me, Ge), ge.push([Se, void 0]);
          break;
        }
        case -23: {
          let Ge = Number(lebDecode$1(me));
          for (; Ge--; ) {
            const Fe = Number(lebDecode$1(me));
            safeRead$1(me, Fe), slebDecode$1(me);
          }
          ge.push([Se, void 0]);
          break;
        }
        default:
          throw new Error("Illegal op_code: " + Se);
      }
    }
    const we = [], Oe = Number(lebDecode$1(me));
    for (let He = 0; He < Oe; He++)
      we.push(Number(slebDecode$1(me)));
    return [ge, we];
  }
  const [ce, le] = ae(ne);
  if (le.length < Q.length)
    throw new Error("Wrong number of return values");
  const de = ce.map((me) => Rec$1());
  function ye(me) {
    if (me < -24)
      throw new Error("future value not supported");
    if (me < 0)
      switch (me) {
        case -1:
          return Null$1;
        case -2:
          return Bool$1;
        case -3:
          return Nat$1;
        case -4:
          return Int$1;
        case -5:
          return Nat8$1;
        case -6:
          return Nat16$1;
        case -7:
          return Nat32$1;
        case -8:
          return Nat64$1;
        case -9:
          return Int8$1;
        case -10:
          return Int16$1;
        case -11:
          return Int32$1;
        case -12:
          return Int64$1;
        case -13:
          return Float32$1;
        case -14:
          return Float64$1;
        case -15:
          return Text$1;
        case -16:
          return Reserved$1;
        case -17:
          return Empty$1;
        case -24:
          return Principal$1;
        default:
          throw new Error("Illegal op_code: " + me);
      }
    if (me >= ce.length)
      throw new Error("type index out of range");
    return de[me];
  }
  function he(me) {
    switch (me[0]) {
      case -19: {
        const ge = ye(me[1]);
        return Vec$1(ge);
      }
      case -18: {
        const ge = ye(me[1]);
        return Opt$1(ge);
      }
      case -20: {
        const ge = {};
        for (const [Oe, He] of me[1]) {
          const Se = `_${Oe}_`;
          ge[Se] = ye(He);
        }
        const be = Record$1(ge), we = be.tryAsTuple();
        return Array.isArray(we) ? Tuple$1(...we) : be;
      }
      case -21: {
        const ge = {};
        for (const [be, we] of me[1]) {
          const Oe = `_${be}_`;
          ge[Oe] = ye(we);
        }
        return Variant$1(ge);
      }
      case -22:
        return Func$1([], [], []);
      case -23:
        return Service$1({});
      default:
        throw new Error("Illegal op_code: " + me[0]);
    }
  }
  ce.forEach((me, ge) => {
    const be = he(me);
    de[ge].fill(be);
  });
  const Be = le.map((me) => ye(me)), Ee = Q.map((me, ge) => me.decodeValue(ne, Be[ge]));
  for (let me = Q.length; me < Be.length; me++)
    Be[me].decodeValue(ne, Be[me]);
  if (ne.buffer.length > 0)
    throw new Error("decode: Left-over bytes");
  return Ee;
}
const Empty$1 = new EmptyClass$1(), Reserved$1 = new ReservedClass$1(), Bool$1 = new BoolClass$1(), Null$1 = new NullClass$1(), Text$1 = new TextClass$1(), Int$1 = new IntClass$1(), Nat$1 = new NatClass$1(), Float32$1 = new FloatClass$1(32), Float64$1 = new FloatClass$1(64), Int8$1 = new FixedIntClass$1(8), Int16$1 = new FixedIntClass$1(16), Int32$1 = new FixedIntClass$1(32), Int64$1 = new FixedIntClass$1(64), Nat8$1 = new FixedNatClass$1(8), Nat16$1 = new FixedNatClass$1(16), Nat32$1 = new FixedNatClass$1(32), Nat64$1 = new FixedNatClass$1(64), Principal$1 = new PrincipalClass$1();
function Tuple$1(...Q) {
  return new TupleClass$1(Q);
}
function Vec$1(Q) {
  return new VecClass$1(Q);
}
function Opt$1(Q) {
  return new OptClass$1(Q);
}
function Record$1(Q) {
  return new RecordClass$1(Q);
}
function Variant$1(Q) {
  return new VariantClass$1(Q);
}
function Rec$1() {
  return new RecClass$1();
}
function Func$1(Q, ee, ne = []) {
  return new FuncClass$1(Q, ee, ne);
}
function Service$1(Q) {
  return new ServiceClass$1(Q);
}
const IDL$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Visitor: Visitor$1,
  Type: Type$1,
  PrimitiveType: PrimitiveType$1,
  ConstructType: ConstructType$1,
  EmptyClass: EmptyClass$1,
  BoolClass: BoolClass$1,
  NullClass: NullClass$1,
  ReservedClass: ReservedClass$1,
  TextClass: TextClass$1,
  IntClass: IntClass$1,
  NatClass: NatClass$1,
  FloatClass: FloatClass$1,
  FixedIntClass: FixedIntClass$1,
  FixedNatClass: FixedNatClass$1,
  VecClass: VecClass$1,
  OptClass: OptClass$1,
  RecordClass: RecordClass$1,
  TupleClass: TupleClass$1,
  VariantClass: VariantClass$1,
  RecClass: RecClass$1,
  PrincipalClass: PrincipalClass$1,
  FuncClass: FuncClass$1,
  ServiceClass: ServiceClass$1,
  encode: encode$3,
  decode: decode$4,
  Empty: Empty$1,
  Reserved: Reserved$1,
  Bool: Bool$1,
  Null: Null$1,
  Text: Text$1,
  Int: Int$1,
  Nat: Nat$1,
  Float32: Float32$1,
  Float64: Float64$1,
  Int8: Int8$1,
  Int16: Int16$1,
  Int32: Int32$1,
  Int64: Int64$1,
  Nat8: Nat8$1,
  Nat16: Nat16$1,
  Nat32: Nat32$1,
  Nat64: Nat64$1,
  Principal: Principal$1,
  Tuple: Tuple$1,
  Vec: Vec$1,
  Opt: Opt$1,
  Record: Record$1,
  Variant: Variant$1,
  Rec: Rec$1,
  Func: Func$1,
  Service: Service$1
}, Symbol.toStringTag, { value: "Module" }));
function toHex$1(Q) {
  return blobToHex(Q);
}
function hash$1(Q) {
  const ee = sha256$1.exports.sha256.create().update(Q).arrayBuffer();
  return blobFromUint8Array(new Uint8Array(ee));
}
function hashValue$1(Q) {
  if (Q instanceof src$1.Tagged)
    return hashValue$1(Q.value);
  if (typeof Q == "string")
    return hashString$1(Q);
  if (typeof Q == "number")
    return hash$1(lebEncode$1(Q));
  if (buffer$1.Buffer.isBuffer(Q))
    return hash$1(blobFromUint8Array(new Uint8Array(Q)));
  if (Q instanceof Uint8Array || Q instanceof ArrayBuffer)
    return hash$1(blobFromUint8Array(new Uint8Array(Q)));
  if (Array.isArray(Q)) {
    const ee = Q.map(hashValue$1);
    return hash$1(buffer$1.Buffer.concat(ee));
  } else {
    if (Q instanceof Principal$2)
      return hash$1(blobFromUint8Array(Q.toUint8Array()));
    if (typeof Q == "object" && Q !== null && typeof Q.toHash == "function")
      return hashValue$1(Q.toHash());
    if (typeof Q == "bigint")
      return hash$1(lebEncode$1(Q));
  }
  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${Q}`), {
    value: Q
  });
}
const hashString$1 = (Q) => {
  const ne = new TextEncoder().encode(Q);
  return hash$1(buffer$1.Buffer.from(ne));
};
function concat$2(Q) {
  return buffer$1.Buffer.concat(Q);
}
function requestIdOf$1(Q) {
  const ie = Object.entries(Q).filter(([, le]) => le !== void 0).map(([le, de]) => {
    const ye = hashString$1(le), he = hashValue$1(de);
    return [ye, he];
  }).sort(([le], [de]) => buffer$1.Buffer.compare(buffer$1.Buffer.from(le), buffer$1.Buffer.from(de))), ae = concat$2(ie.map(concat$2));
  return hash$1(ae);
}
var __rest = globalThis && globalThis.__rest || function(Q, ee) {
  var ne = {};
  for (var ie in Q)
    Object.prototype.hasOwnProperty.call(Q, ie) && ee.indexOf(ie) < 0 && (ne[ie] = Q[ie]);
  if (Q != null && typeof Object.getOwnPropertySymbols == "function")
    for (var ae = 0, ie = Object.getOwnPropertySymbols(Q); ae < ie.length; ae++)
      ee.indexOf(ie[ae]) < 0 && Object.prototype.propertyIsEnumerable.call(Q, ie[ae]) && (ne[ie[ae]] = Q[ie[ae]]);
  return ne;
};
const domainSeparator = buffer$1.Buffer.from(new TextEncoder().encode(`
ic-request`));
class SignIdentity {
  getPrincipal() {
    return this._principal || (this._principal = Principal$2.selfAuthenticating(this.getPublicKey().toDer())), this._principal;
  }
  async transformRequest(ee) {
    const { body: ne } = ee, ie = __rest(ee, ["body"]), ae = await requestIdOf$1(ne);
    return Object.assign(Object.assign({}, ie), { body: {
      content: ne,
      sender_pubkey: this.getPublicKey().toDer(),
      sender_sig: await this.sign(buffer$1.Buffer.concat([domainSeparator, ae]))
    } });
  }
}
class AnonymousIdentity$1 {
  getPrincipal() {
    return Principal$2.anonymous();
  }
  async transformRequest(ee) {
    return Object.assign(Object.assign({}, ee), { body: { content: ee.body } });
  }
}
function createIdentityDescriptor(Q) {
  return "getPublicKey" in Q ? { type: "PublicKeyIdentity", publicKey: Q.getPublicKey().toDer().toString("hex") } : { type: "AnonymousIdentity" };
}
function isIdentityDescriptor(Q) {
  var ee, ne;
  switch ((ee = Q) === null || ee === void 0 ? void 0 : ee.type) {
    case "AnonymousIdentity":
      return !0;
    case "PublicKeyIdentity":
      return typeof ((ne = Q) === null || ne === void 0 ? void 0 : ne.publicKey) == "string";
  }
  return !1;
}
var src = {}, serializer$2 = {}, value = {};
Object.defineProperty(value, "__esModule", { value: !0 });
const MAX_U64_NUMBER = 9007199254740992;
function _concat(Q, ...ee) {
  const ne = new Uint8Array(Q.byteLength + ee.reduce((ae, ce) => ae + ce.byteLength, 0));
  ne.set(new Uint8Array(Q), 0);
  let ie = Q.byteLength;
  for (const ae of ee)
    ne.set(new Uint8Array(ae), ie), ie += ae.byteLength;
  return ne.buffer;
}
function _serializeValue(Q, ee, ne) {
  ne = ne.replace(/[^0-9a-fA-F]/g, "");
  const ie = 2 ** (ee - 24);
  ne = ne.slice(-ie * 2).padStart(ie * 2, "0");
  const ae = [(Q << 5) + ee].concat(ne.match(/../g).map((ce) => parseInt(ce, 16)));
  return new Uint8Array(ae).buffer;
}
function _serializeNumber(Q, ee) {
  if (ee < 24)
    return new Uint8Array([(Q << 5) + ee]).buffer;
  {
    const ne = ee <= 255 ? 24 : ee <= 65535 ? 25 : ee <= 4294967295 ? 26 : 27;
    return _serializeValue(Q, ne, ee.toString(16));
  }
}
function _serializeString(Q) {
  const ee = [];
  for (let ne = 0; ne < Q.length; ne++) {
    let ie = Q.charCodeAt(ne);
    ie < 128 ? ee.push(ie) : ie < 2048 ? ee.push(192 | ie >> 6, 128 | ie & 63) : ie < 55296 || ie >= 57344 ? ee.push(224 | ie >> 12, 128 | ie >> 6 & 63, 128 | ie & 63) : (ne++, ie = (ie & 1023) << 10 | Q.charCodeAt(ne) & 1023, ee.push(240 | ie >> 18, 128 | ie >> 12 & 63, 128 | ie >> 6 & 63, 128 | ie & 63));
  }
  return _concat(new Uint8Array(_serializeNumber(3, Q.length)), new Uint8Array(ee));
}
function tagged(Q, ee) {
  if (Q == 14277111)
    return _concat(new Uint8Array([217, 217, 247]), ee);
  if (Q < 24)
    return _concat(new Uint8Array([(6 << 5) + Q]), ee);
  {
    const ne = Q <= 255 ? 24 : Q <= 65535 ? 25 : Q <= 4294967295 ? 26 : 27, ie = 2 ** (ne - 24), ae = Q.toString(16).slice(-ie * 2).padStart(ie * 2, "0"), ce = [(6 << 5) + ne].concat(ae.match(/../g).map((le) => parseInt(le, 16)));
    return new Uint8Array(ce).buffer;
  }
}
value.tagged = tagged;
function raw(Q) {
  return new Uint8Array(Q).buffer;
}
value.raw = raw;
function uSmall(Q) {
  if (isNaN(Q))
    throw new RangeError("Invalid number.");
  Q = Math.min(Math.max(0, Q), 23);
  const ee = [(0 << 5) + Q];
  return new Uint8Array(ee).buffer;
}
value.uSmall = uSmall;
function u8(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, Q), 255), Q = Q.toString(16), _serializeValue(0, 24, Q);
}
value.u8 = u8;
function u16(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, Q), 65535), Q = Q.toString(16), _serializeValue(0, 25, Q);
}
value.u16 = u16;
function u32(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, Q), 4294967295), Q = Q.toString(16), _serializeValue(0, 26, Q);
}
value.u32 = u32;
function u64(Q, ee) {
  if (typeof Q == "string" && ee == 16) {
    if (Q.match(/[^0-9a-fA-F]/))
      throw new RangeError("Invalid number.");
    return _serializeValue(0, 27, Q);
  }
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, Q), MAX_U64_NUMBER), Q = Q.toString(16), _serializeValue(0, 27, Q);
}
value.u64 = u64;
function iSmall(Q) {
  if (isNaN(Q))
    throw new RangeError("Invalid number.");
  if (Q === 0)
    return uSmall(0);
  Q = Math.min(Math.max(0, -Q), 24) - 1;
  const ee = [(1 << 5) + Q];
  return new Uint8Array(ee).buffer;
}
value.iSmall = iSmall;
function i8(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, -Q - 1), 255), Q = Q.toString(16), _serializeValue(1, 24, Q);
}
value.i8 = i8;
function i16(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, -Q - 1), 65535), Q = Q.toString(16), _serializeValue(1, 25, Q);
}
value.i16 = i16;
function i32(Q, ee) {
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, -Q - 1), 4294967295), Q = Q.toString(16), _serializeValue(1, 26, Q);
}
value.i32 = i32;
function i64(Q, ee) {
  if (typeof Q == "string" && ee == 16) {
    if (Q.startsWith("-") ? Q = Q.slice(1) : Q = "0", Q.match(/[^0-9a-fA-F]/) || Q.length > 16)
      throw new RangeError("Invalid number.");
    let ne = !1, ie = Q.split("").reduceRight((ae, ce) => {
      if (ne)
        return ce + ae;
      let le = parseInt(ce, 16) - 1;
      return le >= 0 ? (ne = !0, le.toString(16) + ae) : "f" + ae;
    }, "");
    return ne ? _serializeValue(1, 27, ie) : u64(0);
  }
  if (Q = parseInt("" + Q, ee), isNaN(Q))
    throw new RangeError("Invalid number.");
  return Q = Math.min(Math.max(0, -Q - 1), 9007199254740992), Q = Q.toString(16), _serializeValue(1, 27, Q);
}
value.i64 = i64;
function number$1(Q) {
  return Q >= 0 ? Q < 24 ? uSmall(Q) : Q <= 255 ? u8(Q) : Q <= 65535 ? u16(Q) : Q <= 4294967295 ? u32(Q) : u64(Q) : Q >= -24 ? iSmall(Q) : Q >= -255 ? i8(Q) : Q >= -65535 ? i16(Q) : Q >= -4294967295 ? i32(Q) : i64(Q);
}
value.number = number$1;
function bytes(Q) {
  return _concat(_serializeNumber(2, Q.byteLength), Q);
}
value.bytes = bytes;
function string(Q) {
  return _serializeString(Q);
}
value.string = string;
function array(Q) {
  return _concat(_serializeNumber(4, Q.length), ...Q);
}
value.array = array;
function map(Q, ee = !1) {
  Q instanceof Map || (Q = new Map(Object.entries(Q)));
  let ne = Array.from(Q.entries());
  return ee && (ne = ne.sort(([ie], [ae]) => ie.localeCompare(ae))), _concat(_serializeNumber(5, Q.size), ...ne.map(([ie, ae]) => _concat(_serializeString(ie), ae)));
}
value.map = map;
function singleFloat(Q) {
  const ee = new Float32Array([Q]);
  return _concat(new Uint8Array([(7 << 5) + 26]), new Uint8Array(ee.buffer));
}
value.singleFloat = singleFloat;
function doubleFloat(Q) {
  const ee = new Float64Array([Q]);
  return _concat(new Uint8Array([(7 << 5) + 27]), new Uint8Array(ee.buffer));
}
value.doubleFloat = doubleFloat;
function bool(Q) {
  return Q ? true_() : false_();
}
value.bool = bool;
function true_() {
  return raw(new Uint8Array([(7 << 5) + 21]));
}
value.true_ = true_;
function false_() {
  return raw(new Uint8Array([(7 << 5) + 20]));
}
value.false_ = false_;
function null_() {
  return raw(new Uint8Array([(7 << 5) + 22]));
}
value.null_ = null_;
function undefined_() {
  return raw(new Uint8Array([(7 << 5) + 23]));
}
value.undefined_ = undefined_;
var __importStar = commonjsGlobal && commonjsGlobal.__importStar || function(Q) {
  if (Q && Q.__esModule)
    return Q;
  var ee = {};
  if (Q != null)
    for (var ne in Q)
      Object.hasOwnProperty.call(Q, ne) && (ee[ne] = Q[ne]);
  return ee.default = Q, ee;
};
Object.defineProperty(serializer$2, "__esModule", { value: !0 });
const cbor$1 = __importStar(value), BufferClasses = [
  ArrayBuffer,
  Uint8Array,
  Uint16Array,
  Uint32Array,
  Int8Array,
  Int16Array,
  Int32Array,
  Float32Array,
  Float64Array
];
class JsonDefaultCborEncoder {
  constructor(ee, ne = !1) {
    this._serializer = ee, this._stable = ne, this.name = "jsonDefault", this.priority = -100;
  }
  match(ee) {
    return ["undefined", "boolean", "number", "string", "object"].indexOf(typeof ee) != -1;
  }
  encode(ee) {
    switch (typeof ee) {
      case "undefined":
        return cbor$1.undefined_();
      case "boolean":
        return cbor$1.bool(ee);
      case "number":
        return Math.floor(ee) === ee ? cbor$1.number(ee) : cbor$1.doubleFloat(ee);
      case "string":
        return cbor$1.string(ee);
      case "object":
        if (ee === null)
          return cbor$1.null_();
        if (Array.isArray(ee))
          return cbor$1.array(ee.map((ne) => this._serializer.serializeValue(ne)));
        if (BufferClasses.find((ne) => ee instanceof ne))
          return cbor$1.bytes(ee.buffer);
        if (Object.getOwnPropertyNames(ee).indexOf("toJSON") !== -1)
          return this.encode(ee.toJSON());
        if (ee instanceof Map) {
          const ne = /* @__PURE__ */ new Map();
          for (const [ie, ae] of ee.entries())
            ne.set(ie, this._serializer.serializeValue(ae));
          return cbor$1.map(ne, this._stable);
        } else {
          const ne = /* @__PURE__ */ new Map();
          for (const [ie, ae] of Object.entries(ee))
            ne.set(ie, this._serializer.serializeValue(ae));
          return cbor$1.map(ne, this._stable);
        }
      default:
        throw new Error("Invalid value.");
    }
  }
}
serializer$2.JsonDefaultCborEncoder = JsonDefaultCborEncoder;
class ToCborEncoder {
  constructor() {
    this.name = "cborEncoder", this.priority = -90;
  }
  match(ee) {
    return typeof ee == "object" && typeof ee.toCBOR == "function";
  }
  encode(ee) {
    return ee.toCBOR();
  }
}
serializer$2.ToCborEncoder = ToCborEncoder;
class CborSerializer {
  constructor() {
    this._encoders = /* @__PURE__ */ new Set();
  }
  static withDefaultEncoders(ee = !1) {
    const ne = new this();
    return ne.addEncoder(new JsonDefaultCborEncoder(ne, ee)), ne.addEncoder(new ToCborEncoder()), ne;
  }
  removeEncoder(ee) {
    for (const ne of this._encoders.values())
      ne.name == ee && this._encoders.delete(ne);
  }
  addEncoder(ee) {
    this._encoders.add(ee);
  }
  getEncoderFor(ee) {
    let ne = null;
    for (const ie of this._encoders)
      (!ne || ie.priority > ne.priority) && ie.match(ee) && (ne = ie);
    if (ne === null)
      throw new Error("Could not find an encoder for value.");
    return ne;
  }
  serializeValue(ee) {
    return this.getEncoderFor(ee).encode(ee);
  }
  serialize(ee) {
    return this.serializeValue(ee);
  }
}
serializer$2.CborSerializer = CborSerializer;
class SelfDescribeCborSerializer extends CborSerializer {
  serialize(ee) {
    return cbor$1.raw(new Uint8Array([
      ...new Uint8Array([217, 217, 247]),
      ...new Uint8Array(super.serializeValue(ee))
    ]));
  }
}
serializer$2.SelfDescribeCborSerializer = SelfDescribeCborSerializer;
(function(Q) {
  function ee(ae) {
    for (var ce in ae)
      Q.hasOwnProperty(ce) || (Q[ce] = ae[ce]);
  }
  var ne = commonjsGlobal && commonjsGlobal.__importStar || function(ae) {
    if (ae && ae.__esModule)
      return ae;
    var ce = {};
    if (ae != null)
      for (var le in ae)
        Object.hasOwnProperty.call(ae, le) && (ce[le] = ae[le]);
    return ce.default = ae, ce;
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), ee(serializer$2);
  const ie = ne(value);
  Q.value = ie;
})(src);
class PrincipalEncoder$1 {
  get name() {
    return "Principal";
  }
  get priority() {
    return 0;
  }
  match(ee) {
    return ee && ee._isPrincipal === !0;
  }
  encode(ee) {
    return src.value.bytes(ee.toUint8Array().buffer);
  }
}
class BufferEncoder$1 {
  get name() {
    return "Buffer";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return buffer$1.Buffer.isBuffer(ee);
  }
  encode(ee) {
    return src.value.bytes(new Uint8Array(ee));
  }
}
class BigIntEncoder$1 {
  get name() {
    return "BigInt";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return typeof ee == "bigint";
  }
  encode(ee) {
    return ee > BigInt(0) ? src.value.tagged(2, src.value.bytes(blobFromHex(ee.toString(16)))) : src.value.tagged(3, src.value.bytes(blobFromHex((BigInt("-1") * ee).toString(16))));
  }
}
const serializer$1 = src.SelfDescribeCborSerializer.withDefaultEncoders(!0);
serializer$1.addEncoder(new PrincipalEncoder$1());
serializer$1.addEncoder(new BufferEncoder$1());
serializer$1.addEncoder(new BigIntEncoder$1());
var CborTag$1;
(function(Q) {
  Q[Q.Uint64LittleEndian = 71] = "Uint64LittleEndian", Q[Q.Semantic = 55799] = "Semantic";
})(CborTag$1 || (CborTag$1 = {}));
const encode$2 = (Q) => buffer$1.Buffer.from(serializer$1.serialize(Q));
function decodePositiveBigInt$1(Q) {
  const ee = Q.byteLength;
  let ne = BigInt(0);
  for (let ie = 0; ie < ee; ie++)
    ne = ne * BigInt(256) + BigInt(Q[ie]);
  return ne;
}
function decode$3(Q) {
  return new src$1.Decoder({
    size: Q.byteLength,
    tags: {
      2: (ie) => decodePositiveBigInt$1(ie),
      3: (ie) => -decodePositiveBigInt$1(ie),
      [CborTag$1.Semantic]: (ie) => ie
    }
  }).decodeFirst(Q);
}
const cbor = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get CborTag() {
    return CborTag$1;
  },
  encode: encode$2,
  decode: decode$3
}, Symbol.toStringTag, { value: "Module" })), NANOSECONDS_PER_MILLISECONDS$1 = BigInt(1e6), REPLICA_PERMITTED_DRIFT_MILLISECONDS$1 = BigInt(60 * 1e3);
class Expiry$1 {
  constructor(ee) {
    this._value = (BigInt(Date.now()) + BigInt(ee) - REPLICA_PERMITTED_DRIFT_MILLISECONDS$1) * NANOSECONDS_PER_MILLISECONDS$1;
  }
  toCBOR() {
    return src.value.u64(this._value.toString(16), 16);
  }
  toHash() {
    return lebEncode$1(this._value);
  }
}
function makeNonceTransform$1(Q = makeNonce$1) {
  return async (ee) => {
    ee.endpoint === "call" && (ee.body.nonce = Q());
  };
}
function makeExpiryTransform(Q) {
  return async (ee) => {
    ee.body.ingress_expiry = new Expiry$1(Q);
  };
}
var SubmitRequestType$1;
(function(Q) {
  Q.Call = "call";
})(SubmitRequestType$1 || (SubmitRequestType$1 = {}));
var RequestStatusResponseStatus$1;
(function(Q) {
  Q.Received = "received", Q.Processing = "processing", Q.Replied = "replied", Q.Rejected = "rejected", Q.Unknown = "unknown", Q.Done = "done";
})(RequestStatusResponseStatus$1 || (RequestStatusResponseStatus$1 = {}));
const DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1 = 5 * 60 * 1e3, IC_ROOT_KEY$1 = "308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d9685f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484b01291091c5f87b98883463f98091a0baaae";
function getDefaultFetch$1() {
  const Q = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.fetch.bind(self) : global.fetch.bind(global) : window.fetch.bind(window);
  if (!Q)
    throw new Error("Could not find default `fetch` implementation.");
  return Q;
}
class HttpAgent$1 {
  constructor(ee = {}) {
    if (this._pipeline = [], this._rootKeyFetched = !1, this.rootKey = blobFromHex(IC_ROOT_KEY$1), ee.source) {
      if (!(ee.source instanceof HttpAgent$1))
        throw new Error("An Agent's source can only be another HttpAgent");
      this._pipeline = [...ee.source._pipeline], this._identity = ee.source._identity, this._fetch = ee.source._fetch, this._host = ee.source._host, this._credentials = ee.source._credentials;
    } else
      this._fetch = ee.fetch || getDefaultFetch$1() || fetch.bind(global);
    if (ee.host !== void 0)
      !ee.host.match(/^[a-z]+:/) && typeof window < "u" ? this._host = new URL(window.location.protocol + "//" + ee.host) : this._host = new URL(ee.host);
    else if (ee.source !== void 0)
      this._host = ee.source._host;
    else {
      const ne = typeof window < "u" ? window.location : void 0;
      if (!ne)
        throw new Error("Must specify a host to connect to.");
      this._host = new URL(ne + "");
    }
    if (ee.credentials) {
      const { name: ne, password: ie } = ee.credentials;
      this._credentials = `${ne}${ie ? ":" + ie : ""}`;
    }
    this._identity = Promise.resolve(ee.identity || new AnonymousIdentity$1());
  }
  addTransform(ee, ne = ee.priority || 0) {
    const ie = this._pipeline.findIndex((ae) => (ae.priority || 0) < ne);
    this._pipeline.splice(ie >= 0 ? ie : this._pipeline.length, 0, Object.assign(ee, { priority: ne }));
  }
  async getPrincipal() {
    return (await this._identity).getPrincipal();
  }
  async call(ee, ne, ie) {
    const ae = await (ie !== void 0 ? await ie : await this._identity), ce = Principal$2.from(ee), le = ne.effectiveCanisterId ? Principal$2.from(ne.effectiveCanisterId) : ce, de = ae.getPrincipal() || Principal$2.anonymous(), ye = {
      request_type: SubmitRequestType$1.Call,
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: de,
      ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
    };
    let he = await this._transform({
      request: {
        body: null,
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "call",
      body: ye
    });
    he = await ae.transformRequest(he);
    const Be = encode$2(he.body), [Ee, me] = await Promise.all([
      this._fetch("" + new URL(`/api/v2/canister/${le.toText()}/call`, this._host), Object.assign(Object.assign({}, he.request), { body: Be })),
      requestIdOf$1(ye)
    ]);
    if (!Ee.ok)
      throw new Error(`Server returned an error:
  Code: ${Ee.status} (${Ee.statusText})
  Body: ${await Ee.text()}
`);
    return {
      requestId: me,
      response: {
        ok: Ee.ok,
        status: Ee.status,
        statusText: Ee.statusText
      }
    };
  }
  async query(ee, ne, ie) {
    const ae = await (ie !== void 0 ? await ie : await this._identity), ce = typeof ee == "string" ? Principal$2.fromText(ee) : ee, le = (ae == null ? void 0 : ae.getPrincipal()) || Principal$2.anonymous(), de = {
      request_type: "query",
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: le,
      ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
    };
    let ye = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read",
      body: de
    });
    ye = await ae.transformRequest(ye);
    const he = encode$2(ye.body), Be = await this._fetch("" + new URL(`/api/v2/canister/${ce.toText()}/query`, this._host), Object.assign(Object.assign({}, ye.request), { body: he }));
    if (!Be.ok)
      throw new Error(`Server returned an error:
  Code: ${Be.status} (${Be.statusText})
  Body: ${await Be.text()}
`);
    return decode$3(buffer$1.Buffer.from(await Be.arrayBuffer()));
  }
  async readState(ee, ne, ie) {
    const ae = typeof ee == "string" ? Principal$2.fromText(ee) : ee, ce = await (ie !== void 0 ? await ie : await this._identity), le = (ce == null ? void 0 : ce.getPrincipal()) || Principal$2.anonymous();
    let de = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read_state",
      body: {
        request_type: "read_state",
        paths: ne.paths,
        sender: le,
        ingress_expiry: new Expiry$1(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS$1)
      }
    });
    de = await ce.transformRequest(de);
    const ye = encode$2(de.body), he = await this._fetch("" + new URL(`/api/v2/canister/${ae}/read_state`, this._host), Object.assign(Object.assign({}, de.request), { body: ye }));
    if (!he.ok)
      throw new Error(`Server returned an error:
  Code: ${he.status} (${he.statusText})
  Body: ${await he.text()}
`);
    return decode$3(buffer$1.Buffer.from(await he.arrayBuffer()));
  }
  async status() {
    const ee = this._credentials ? {
      Authorization: "Basic " + btoa(this._credentials)
    } : {}, ne = await this._fetch("" + new URL("/api/v2/status", this._host), { headers: ee });
    if (!ne.ok)
      throw new Error(`Server returned an error:
  Code: ${ne.status} (${ne.statusText})
  Body: ${await ne.text()}
`);
    const ie = await ne.arrayBuffer();
    return decode$3(new Uint8Array(ie));
  }
  async fetchRootKey() {
    return this._rootKeyFetched || (this.rootKey = blobFromUint8Array((await this.status()).root_key), this._rootKeyFetched = !0), this.rootKey;
  }
  _transform(ee) {
    let ne = Promise.resolve(ee);
    for (const ie of this._pipeline)
      ne = ne.then((ae) => ie(ae).then((ce) => ce || ae));
    return ne;
  }
}
var ProxyMessageKind$1;
(function(Q) {
  Q.Error = "err", Q.GetPrincipal = "gp", Q.GetPrincipalResponse = "gpr", Q.Query = "q", Q.QueryResponse = "qr", Q.Call = "c", Q.CallResponse = "cr", Q.ReadState = "rs", Q.ReadStateResponse = "rsr", Q.Status = "s", Q.StatusResponse = "sr";
})(ProxyMessageKind$1 || (ProxyMessageKind$1 = {}));
class ProxyStubAgent {
  constructor(ee, ne) {
    this._frontend = ee, this._agent = ne;
  }
  onmessage(ee) {
    switch (ee.type) {
      case ProxyMessageKind$1.GetPrincipal:
        this._agent.getPrincipal().then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.GetPrincipalResponse,
            response: ne.toText()
          });
        });
        break;
      case ProxyMessageKind$1.Query:
        this._agent.query(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.QueryResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind$1.Call:
        this._agent.call(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.CallResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind$1.ReadState:
        this._agent.readState(...ee.args).then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.ReadStateResponse,
            response: ne
          });
        });
        break;
      case ProxyMessageKind$1.Status:
        this._agent.status().then((ne) => {
          this._frontend({
            id: ee.id,
            type: ProxyMessageKind$1.StatusResponse,
            response: ne
          });
        });
        break;
      default:
        throw new Error(`Invalid message received: ${JSON.stringify(ee)}`);
    }
  }
}
class ProxyAgent {
  constructor(ee) {
    this._backend = ee, this._nextId = 0, this._pendingCalls = /* @__PURE__ */ new Map(), this.rootKey = null;
  }
  onmessage(ee) {
    const ne = ee.id, ie = this._pendingCalls.get(ne);
    if (!ie)
      throw new Error("A proxy get the same message twice...");
    this._pendingCalls.delete(ne);
    const [ae, ce] = ie;
    switch (ee.type) {
      case ProxyMessageKind$1.Error:
        return ce(ee.error);
      case ProxyMessageKind$1.GetPrincipalResponse:
      case ProxyMessageKind$1.CallResponse:
      case ProxyMessageKind$1.QueryResponse:
      case ProxyMessageKind$1.ReadStateResponse:
      case ProxyMessageKind$1.StatusResponse:
        return ae(ee.response);
      default:
        throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(ee)}`);
    }
  }
  async getPrincipal() {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.GetPrincipal
    }).then((ee) => {
      if (typeof ee != "string")
        throw new Error("Invalid principal received.");
      return Principal$2.fromText(ee);
    });
  }
  readState(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.ReadState,
      args: [ee.toString(), ne]
    });
  }
  call(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Call,
      args: [ee.toString(), ne]
    });
  }
  status() {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Status
    });
  }
  query(ee, ne) {
    return this._sendAndWait({
      id: this._nextId++,
      type: ProxyMessageKind$1.Query,
      args: [ee.toString(), ne]
    });
  }
  async _sendAndWait(ee) {
    return new Promise((ne, ie) => {
      this._pendingCalls.set(ee.id, [ne, ie]), this._backend(ee);
    });
  }
  async fetchRootKey() {
    const ee = (await this.status()).root_key;
    return this.rootKey = ee, ee;
  }
}
function getDefaultAgent$1() {
  const Q = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.ic.agent : global.ic.agent : window.ic.agent;
  if (!Q)
    throw new Error("No Agent could be found.");
  return Q;
}
const managementCanisterIdl$1 = ({ IDL: Q }) => {
  const ee = Q.Principal, ne = Q.Vec(Q.Nat8), ie = Q.Record({
    compute_allocation: Q.Opt(Q.Nat),
    memory_allocation: Q.Opt(Q.Nat)
  });
  return Q.Service({
    provisional_create_canister_with_cycles: Q.Func([Q.Record({ amount: Q.Opt(Q.Nat), settings: Q.Opt(ie) })], [Q.Record({ canister_id: ee })], []),
    create_canister: Q.Func([], [Q.Record({ canister_id: ee })], []),
    install_code: Q.Func([
      Q.Record({
        mode: Q.Variant({ install: Q.Null, reinstall: Q.Null, upgrade: Q.Null }),
        canister_id: ee,
        wasm_module: ne,
        arg: Q.Vec(Q.Nat8)
      })
    ], [], []),
    set_controller: Q.Func([Q.Record({ canister_id: ee, new_controller: Q.Principal })], [], [])
  });
};
function getManagementCanister$1(Q) {
  function ee(ne, ie, ae) {
    const ce = ie[0];
    let le = Principal$2.fromHex("");
    return ce && typeof ce == "object" && ce.canister_id && (le = Principal$2.from(ce.canister_id)), { effectiveCanisterId: le };
  }
  return Actor$1.createActor(managementCanisterIdl$1, Object.assign(Object.assign(Object.assign({}, Q), { canisterId: Principal$2.fromHex("") }), {
    callTransform: ee,
    queryTransform: ee
  }));
}
class AgentError$1 extends Error {
}
var decode$2;
(function() {
  for (var Q = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", ee = new Uint8Array(256), ne = 0; ne < Q.length; ne++)
    ee[Q.charCodeAt(ne)] = ne;
  decode$2 = function(ie) {
    var ae = ie.length * 0.75, ce = ie.length, le, de = 0, ye, he, Be, Ee;
    ie[ie.length - 1] === "=" && (ae--, ie[ie.length - 2] === "=" && ae--);
    var me = new ArrayBuffer(ae), ge = new Uint8Array(me);
    for (le = 0; le < ce; le += 4)
      ye = ee[ie.charCodeAt(le)], he = ee[ie.charCodeAt(le + 1)], Be = ee[ie.charCodeAt(le + 2)], Ee = ee[ie.charCodeAt(le + 3)], ge[de++] = ye << 2 | he >> 4, ge[de++] = (he & 15) << 4 | Be >> 2, ge[de++] = (Be & 3) << 6 | Ee & 63;
    return me;
  };
})();
let wasm$1;
const wasmBytesBase64$1 = `
    AGFzbQEAAAABXg9gAn9/AGABfwBgA39/fwBgAn9/AX9gAX8Bf2ADf39/AX9gBH9/f38AYAV/f39/fwBgBn9/f39/fwF/
    YAAAYAZ/f39/f38AYAV/fn5+fgBgAAF/YAF/AX5gAn9/AX4DvAG6AQgEAAEAAAABAgEDAAAMAAACAQEKAQAHBgEAAQEA
    AgcCAgABAgAGAAgOBAEBBAAAAQALAQkAAwMAAQQBAAICAAIBAQEBAQEGAQACAQEEAAECAQEABQMBAQMEAwQCAwAAAAEA
    AAAAAAEFAQEAAAACAQIAAQMAAQAGBAACAgMEAAAAAAAGAAQABAQEBAAAAwIAAgACAAEBAAAAAQEBAAEAAAAAAgAAAQAB
    AQEBAQEBAQEBAQIBAAAAAQ0AAQQFAXABBQUFAwEAEQYJAX8BQYCAwAALBzYEBm1lbW9yeQIACGJsc19pbml0AA0KYmxz
    X3ZlcmlmeQAnEV9fd2JpbmRnZW5fbWFsbG9jAHwJDQEAQQELBLgBCrkBtwEKiO8CugGXVQIQfwV+IwBB4OEAayIGJABB
    KxABIgkEQCAJQfSgwABBKxBnIQwDQCAHQStHBEAgByAMaiIJQV9BfyAJLQAAIglBn39qQf8BcUEaSRsgCXE6AAAgB0EB
    aiEHDAELC0EAIQcgBkGoA2pBOBByGiAGQQE2AuADIAZB6ANqQTgQciEPIAZBoARqQQE2AgAgBkGoBmpBoKfAABBfIAZB
    qAZqECkhCSAGQbgVakGAAhByGiAGQdjbAGpBgAEQchogBkGbI2pBgQIQciENIAZBsAxqQcAAEHIaIAZByM8AakHAABBy
    GiAGQdDVAGpBwAAQchogBkEAOgCaIyAGIAlB/wBqIhBBA3ZBAWoiCkEBdCILOgCZIyAGIApBB3Y6AJgjIAtBf2pBBXYi
    CEEBaiERA0AgB0ErRwRAIAcgDWogByAMai0AADoAACAHQQFqIQcMAQsLIAZBKzoAxiMgBkEgaiAGQZgjakEvQdinwAAQ
    ggEgBkGwDGpBwAAgAiADIAYoAiAgBigCJBATQQAhDUEAIAtrIRIgBkGZI2ohE0EBIQNBACEJA0ACQCANIAMgEUtyRQRA
    IAMgCEshDSADIAMgCE1qIQJBACEHA0AgB0EgRgRAIAYgAzoAmCNBACEHA0AgB0ErRwRAIAcgE2ogByAMai0AADoAACAH
    QQFqIQcMAQsLIAZBKzoAxCMgBkEYaiAGQZgjakEtQeinwAAQggFBACEHIAZByM8AakEAIAZB0NUAakEgIAYoAhggBigC
    HBATIAkgEmohAyAJIAlBgAIgCUGAAksbIg5rIRQgBkG4FWogCWohFQJAA0AgB0EgRg0FIAcgFGpFDQEgByAVaiAGQcjP
    AGogB2otAAA6AAAgAyAHQQFqIgdqDQALIAIhAyALIQkMBQsgDkGAAkH4p8AAEDwABSAGQcjPAGogB2oiDiAOLQAAIAZB
    sAxqIAdqLQAAcyIOOgAAIAZB0NUAaiAHaiAOOgAAIAdBAWohBwwBCwALAAsgEEGACEkhDUEAIQNBACEJA0ACQCAJQQJH
    BEAgCUEBaiELIAZBuBVqIANqIQJBACEHAkADQCAHIApGBEAgDQRAIAZByM8AakHwABByGiAGQdjbAGohCCAKIQcDQCAH
    BEAgBkHIzwBqQQgQLiAGIAYpA8hPIAgxAAB8NwPITyAHQX9qIQcgCEEBaiEIDAELCyAGQcjPAGoQRSAGQdDVAGogBkGo
    BmoQMCAGQZgjakHwABByGiAGQcjPAGogBkHQ1QBqEDZBAEgNBUEAIQIDQCAGQdDVAGpBARAuIAJBAWohAiAGQcjPAGog
    BkHQ1QBqEDZBf0oNAAsDQCACQQFIDQZBACEHA0AgB0HoAEYEQCAGIAYpA7hWQgGHNwO4VkEAIQcDQCAHQfAARwRAIAZB
    mCNqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQcMAQsLIAZBmCNqIAZB0NUAahBkIAZBmCNqEEUgBikDgCRCP4chF0EA
    IQcDQCAHQfAARwRAIAZByM8AaiAHaiIIIAZBmCNqIAdqKQMAIhYgCCkDAIUgF4MgFoU3AwAgB0EIaiEHDAELCyACQX9q
    IQIMAgUgBkHQ1QBqIAdqIgggCEEIaikDAEI5hkKAgICAgICAgAKDIAgpAwBCAYeENwMAIAdBCGohBwwBCwALAAsACyAK
    QYABQaChwAAQPQALIAMgB2oiCEH/AU0EQCAHQYABRg0CIAZB2NsAaiAHaiACIAdqLQAAOgAAIAdBAWohBwwBCwsgCEGA
    AkGwocAAEDwAC0GAAUGAAUHAocAAEDwACyAGQShqIAZBqANqEAIgBkG4EmogDxACIAZBKGogBkG4EmoQDCAGQegBakHo
    g8AAEF8CQAJAIAZB6AFqEFoNACAGQShqEIQBDQAgBkGIPWoQS0EAIQcgBkGIwwBqQTgQchogBkG4IWpBOBByGiAGQYjA
    AGoQSyAGQcjEAGoQSyAGQcjJAGoQSyAGQcjMAGoQSyAGQagGahBLIAZBsAxqEEsgBkHIzwBqEEsgBkHQ1QBqEEsgBkHY
    2wBqEEsgBkG4FWoQSyAGQZgjaiAGQcjJAGpBwAEQZxogBkHYJGogBkHIzABqQcABEGcaIAZBmCZqIAZBqAZqQcABEGca
    IAZB2CdqIAZBsAxqQcABEGcaIAZBmClqIAZByM8AakHAARBnGiAGQdgqaiAGQdDVAGpBwAEQZxogBkGYLGogBkHY2wBq
    QcABEGcaIAZB2C1qIAZBuBVqQcABEGcaIAZBuBVqQecAEHIaIAZBiMAAaiAGQShqEH8gBkGIwABqEBggBkGYI2ogBkEo
    ahB/A0AgB0HACkYEQCAGQbghaiAGQegBahBrIAYpA7ghIRcgBkG4IWpBARCdASAGQbghahBEIAYpA7ghIRYgBkGIwwBq
    IAZBuCFqEGsgBkGIwwBqQQEQnQEgBkGIwwBqEEQgBkG4IWogBkGIwwBqIBdCAoGnEE8gBkGIwABqIAZBKGogFkICgacQ
    bSAGQcjEAGogBkGIwABqEH8gBkG4IWoQKUEDaiIJQQJ2IgdBAWohAkEAIQgCQAJAAkADQAJAIAZBuCFqQQUQjAEhAyAC
    IAhGBEAgCUGYA0kNASACQecAQbCEwAAQPAALIAhB5wBGDQIgBkG4FWogCGogA0FwaiIDOgAAIAZBuCFqIANBGHRBGHUQ
    ngEgBkG4IWoQRCAGQbghakEEEDsgCEEBaiEIDAELCyAGQbgVaiACaiADOgAAIANBGHRBGHVBf2oiA0EBdiECIANBD0sN
    ASAGQYg9aiAGQZgjaiACQcABbGoQfwNAIAdBf0YEQCAGQYg9aiAGQcjEAGoQcyAGQZgjaiAGQYg9akHAARBnGgwICyAH
    QeYASw0DIAZBiMAAaiAGQZgjaiAGQbgVaiAHaiwAABAfIAdBf2ohByAGQYg9ahAYIAZBiD1qEBggBkGIPWoQGCAGQYg9
    ahAYIAZBiD1qIAZBiMAAahAMDAALAAtB5wBB5wBBoITAABA8AAsgAkEIQcCEwAAQPAALIAdB5wBB0ITAABA8AAUgBkHI
    xABqIAZBmCNqIAdqIgIQfyACQcABaiICIAZByMQAahB/IAIgBkGIwABqEAwgB0HAAWohBwwBCwALAAsgBkGYI2oQSwsgB
    kEoaiAGQZgjahB/IAZBKGoQRyAMEAlBACEHIAZBqAZqQTAQchogBkGwDGpBoKfAABBfAkACQAJAAkACQANAAkAgB0EwRg
    RAIAYgBi0AqAZBH3E6AKgGIAZByM8AaiAGQagGahBdIAENAUEAQQBB8ILAABA8AAsgASAHRg0CIAZBqAZqIAdqIAAgB2o
    tAAA6AAAgB0EBaiEHDAELC0EAIQcCQCAALAAAIgJBAE4EQCAAQTBqIQAgAUEwIAFBMEsbQVBqIQIDQCAHQTBGBEAgBkHY
    2wBqIAZBqAZqEF0gBkHoAWoQSyAGQegBaiAGQcjPAGoQtAEgBkGoAmoiACAGQdjbAGoQtAEgBkHoAmoQaSAGQegBahBEI
    AZBuBVqIAZB6AFqEE0gBkGYI2ogABCFASAGQZgjahADIAZBmCNqIAZBuBVqEFkNAyAGQegBahCUAQwDCyACIAdGDQQgBk
    GoBmogB2ogACAHai0AADoAACAHQQFqIQcMAAsACyAGQZgjahBLIAZB0NUAakE4EHIaIAZBATYCiFYgBkGYI2ogBkHIzwB
    qELQBIAZBmCNqEEQgBkGYJGoQaSAGQdjbAGogBkGYI2oQTQJAIAZB2NsAaiAGQdDVAGoQXEEBRwRAIAZBmCNqEJQBDAEL
    IAZBuBVqIAZB2NsAaiAGQdDVAGoQIyAGQbgVahBYBEAgBkG4FWoQQSAGQbgVahBECyAGQdgjaiAGQbgVahClAQsgAkEgc
    UEFdiAGQdgjahBMQQFGRwRAIAZBmCNqEKYBCyAGQegBaiAGQZgjakHAARBnGgsgBkHQPGpB8IHAABBfIAZB6AFqEIQBRQ
    0CDAMLIAEgAUHggsAAEDwACyAHQTBqIAFBgIPAABA8AAsgBkGoA2oQSyAGQagDaiAGQegBahB/IAZBuBJqEEsgBkG4Emo
    gBkHoAWoQfyAGQbgSahBHIAZByMcAakHwgcAAEF8gBkGYI2pBqILAABBfIAZBiMMAaiAGQZgjahCLAUEAIQAgBkG4IWpB
    OBByGiAGQfAhakE4EHIhCSAGQdjbAGpB8IHAABBfIAZBuBVqQYCAwAAQXyAGQZgjakE4EHIaIAZBkCNqIQsgBkGwFWohC
    gJAAkADQCAAQQdGDQIgAEEBaiEBIAZBuBVqIABBA3RqIQxCACEXQQAhAwNAIANBf2ohByAKIANBA3RqIQIgCyAAIANqQQ
    N0aiEIA0AgB0EGRgRAIAEhAAwDCyAIQQhqIQggAkEIaiECIAAgB0EBaiIHakEGSw0ACyAAQQZNBEAgB0EGSw0DIAdBAWo
    hAyAGQQhqIAIpAwAiFiAWQj+HIAwpAwAiFiAWQj+HEDEgCCAGKQMIIhkgF3wiFiAIKQMAIhp8IhhC//////////8DgzcD
    ACAYIBZUrSAWIBlUrSAGQRBqKQMAIBdCP4d8fCAaQj+HfHxCBoYgGEI6iIQhFwwBCwsLIABBB0G0ncAAEDwACyAHQQdBx
    J3AABA8AAsgBkG4IWogBkHQPGoQayAGQbghaiAGQZgjahAkIAkgBkHQPGoQayAJIAZBmCNqEBwgCSAGQdjbAGoQYyAGQb
    gSaiAGQYjDAGoQSCAGQbghahApIQAgBkGIyABqIAZBuCFqIAZByMcAahCNASAGQYjIAGoQKSAASQRAIAZBuCFqIAZBiMg
    AahBrIAZBqANqEKYBCyAJECkhACAGQYjIAGogCSAGQcjHAGoQjQEgBkGIyABqECkgAEkEQCAJIAZBiMgAahBrIAZBuBJq
    EKYBCyAGQbghahBEIAkQREEAIQcgBkHIyABqQTgQchogBkGIyQBqQTgQchogBkGYO2pBOBByGiAGQYg9ahBLIAZBiMAAa
    hBLIAZByMQAahBLIAZByMkAahBLIAZByMwAahBLIAZBqAZqEEsgBkGwDGoQSyAGQcjPAGoQSyAGQdDVAGoQSyAGQdjbAG
    oQSyAGQbgVahBLIAZBmCNqIAZByMkAakHAARBnGiAGQdgkaiAGQcjMAGpBwAEQZyEAIAZBmCZqIAZBqAZqQcABEGchASA
    GQdgnaiAGQbAMakHAARBnIQsgBkGYKWogBkHIzwBqQcABEGchCiAGQdgqaiAGQdDVAGpBwAEQZyECIAZBmCxqIAZB2NsA
    akHAARBnIQMgBkHYLWogBkG4FWpBwAEQZyEIIAZBuBVqQcwBEHIaIAZByMgAaiAGQbghahBrIAZBiMkAaiAJEGsgACAGQ
    agDahB/IAAgBkG4EmoQcyABIAZBqANqEH8gASAGQbgSahAMIAZBiD1qIAZBuBJqEH8gBkGIPWoQGCAGQcjEAGogABB/IA
    ZBmCNqIAZByMQAahB/IAZBmCNqIAZBiD1qEHMgBkHIxABqIAEQfyALIAZByMQAahB/IAsgBkGIPWoQDCAGQYjAAGogBkG
    oA2oQfyAGQYjAAGoQGCAGQcjEAGogABB/IAIgBkHIxABqEH8gAiAGQYjAAGoQDCAGQcjEAGogARB/IAMgBkHIxABqEH8g
    AyAGQYjAAGoQDCAGQcjEAGogAhB/IAogBkHIxABqEH8gCiAGQYg9ahBzIAZByMQAaiADEH8gCCAGQcjEAGoQfyAIIAZBi
    D1qEAwgBikDyEghFyAGQcjIAGpBARCdASAGQcjIAGoQRCAGKQPISCEWIAZBmDtqIAZByMgAahBrIAZBmDtqQQEQnQEgBk
    GYO2oQRCAGQcjIAGogBkGYO2ogF0ICgacQTyAGQYjAAGogBkGoA2ogFkICgacQbSAGQcjEAGogBkGIwABqEH8gBikDiEk
    hFyAGQYjJAGpBARCdASAGQYjJAGoQRCAGKQOISSEWIAZBmDtqIAZBiMkAahBrIAZBmDtqQQEQnQEgBkGYO2oQRCAGQYjJ
    AGogBkGYO2ogF0ICgacQTyAGQYg9aiAGQbgSaiAWQgKBpxBtIAZByMQAaiAGQYg9ahAMIAZBmDtqIAZByMgAahBrIAZBm
    DtqIAZBiMkAahBhIAZBmDtqEEQgBkGYO2oQKUEBaiICQQF2IghBAWohAAJAAkACQAJAA0ACQCAGQcjIAGpBAxCMASEBIA
    AgB0YEQCAGQYjJAGpBAxCMASEDIAJBlgNJDQEgAEHMAUG0g8AAEDwACyAGQcjIAGogAUF8aiIBEJ4BIAZByMgAahBEIAZ
    ByMgAakECEDsgBkGIyQBqIAZBiMkAakEDEIwBQXxqIgMQngEgBkGIyQBqEEQgBkGIyQBqQQIQOyAHQcwBRg0CIAZBuBVq
    IAdqIAMgAUECdGo6AAAgB0EBaiEHDAELCyAGQbgVaiAAaiADIAFBAnRqIgA6AAAgAEEYdEEYdUF/aiIBQQF2IQAgAUEPS
    w0BIAZBiD1qIAZBmCNqIABBwAFsahB/A0AgCEF/Rg0EIAhBywFLDQMgBkGIwABqIAZBmCNqIAZBuBVqIAhqLAAAEB8gCE
    F/aiEIIAZBiD1qEBggBkGIPWoQGCAGQYg9aiAGQYjAAGoQDAwACwALQcwBQcwBQaSDwAAQPAALIABBCEHEg8AAEDwACyA
    IQcwBQdSDwAAQPAALIAZBiD1qIAZByMQAahBzIAZBqANqIAZBiD1qQcABEGcaQX8hByAGQagDahCEAUUNASAGQegBahCm
    AUEAIQcgBkHIzwBqQeAAEHIaIAUEQANAIAdB4ABGBEAgBiAGLQDIT0EfcToAyE8gBkHQ1QBqIAZByM8AahAhAkACQAJAI
    AQsAAAiA0F/SgRAIARB4ABqIQAgBUHgACAFQeAASxtBoH9qIQFBACEHA0AgB0HgAEYEQCAGQZgjaiAGQcjPAGoQISAGQa
    gDaiAGQdDVAGogBkGYI2oQPwwDCyABIAdGDQMgBkHIzwBqIAdqIAAgB2otAAA6AAAgB0EBaiEHDAALAAsgBkGYI2oQKiA
    GQYjAAGpBOBByGiAGQQE2AsBAIAZBmCNqIAZB0NUAahCQASAGQZgkaiIBELABIAZBmCVqELABIAZBmCNqEKgBIAZB2NsA
    aiAGQZgjahAmIAZBuBVqIAZB2NsAahBeIAZBuBVqEKYBIAZBuBVqIAZB2NsAahAPIAZBsAxqIAZBuBVqQcAAEGcaAkAgB
    kGwDGogBkGIwABqEFxBAUcEQCAGQZgjahCYAQwBCyAGQdjbAGoQhwFFBEAgBkHIxABqIAZBmNwAaiIAEIUBIAZByMkAai
    AGQdjbAGoQhQEgBkHIzABqIAZB2NsAahCFASAGQagGakE4EHIaIAZBATYC4AYgBkGwDGpBOBByGiAGQQE2AugMIAZByMQ
    AahADIAZByMkAahADIAZByMQAaiAGQcjJAGoQeCAGQcjEAGoQRCAGQbgVaiAGQcjEAGogBkGIwABqECMgBkHIyQBqIAZB
    uBVqEKUBIAZByMQAaiAGQcjJAGoQpQEgBkHIyQBqIAZB2NsAahClASAGQcjJAGogBkHIxABqEHggBkHIyQBqEEQgBkHIy
    QBqEEIgBkHIxABqIAAQpQEgBkHIxABqEEIgBkHIyQBqIAZBsAxqEFwhAiAGQcjMAGogBkGwDGoQpQEgBkHIzABqEEEgBk
    HIzABqEEQgBkGoBmogBkHIyQBqEKUBIAZBqAZqEEEgBkGoBmoQRCAGQcjJAGogBkGoBmpBASACayICEHkgBkGwDGogBkH
    IzABqIAIQeSAGQbgVaiAGQcjJAGogBkGwDGoQIyAGQdjbAGogBkG4FWoQpQEgBkHIzABqIAZByMkAahClASAGQcjMAGog
    BkGwDGoQNCAGQcjMAGogBkHY2wBqEEggACAGQcjMAGoQpQEgACAGQcjEAGoQSCAGQagGaiAGQdjbAGoQpQEgBkHY2wBqI
    AAgAhB5IAAgBkGoBmogAhB5IAZB2NsAahCJASEAIAZBuBVqIAZB2NsAahBeIAZBuBVqEDogBkG4FWoQqAEgBkHY2wBqIA
    ZBuBVqIAAQjwELIAZB2NsAahCJAQRAIAZB2NsAahA6CyAGQdjbAGoQqwEgASAGQdjbAGoQkAELQQAhAgJAIAEQhwENACA
    GQdgkahBMIgINACABEEwhAgsgA0EgcUEFdiACQQFGRwRAIAZBmCNqEJwBCyAGQagDaiAGQZgjakGAAxBnGgsgBkHIyABq
    QfCBwAAQXyAGQagDahCIAQ0FIAZBuBJqECogBkG4FWoQKiAGQdDVAGoQKiAGQdjbAGoQKiAGQZgjahAqIAZBuBhqIAZB0
    NUAakGAAxBnIQ0gBkG4G2ogBkHY2wBqQYADEGchCSAGQbgeaiAGQZgjakGAAxBnIQAgBkHY2wBqQbiAwAAQXyAGQZgjak
    HwgMAAEF8gBkGIwwBqIAZB2NsAaiAGQZgjahBJIAZBiMkAakHwgcAAEF9BACEHIAZBuCFqQTgQchogBkHwIWpBqAEQciE
    DIAZBsAxqQfCBwAAQXyAGQcjPAGpBgIDAABBfIAZB4CJqIQEgBkGoImohDyAGQdDVAGogBkHIyABqEF8DQCAHQagBRg0C
    IAZBuCFqIAdqIgIgBkHQ1QBqEGsgAiAGQcjPAGoQJCAHQThqIQcgBkHQ1QBqIAZByM8AahAcDAALAAsgB0HgAGogBUGwp
    MAAEDwACyABIAZB0NUAahBrQQAhByAGQdjbAGpBOBByGiAGQZgjaiADIAZBsAxqEI0BIAZB2NsAaiAGQZgjahBrIAMgBk
    HY2wBqEGsgBkGYI2ogASAGQbAMahCNASAGQdjbAGogBkGYI2oQayABIAZB2NsAahBrIAZBiD1qECogBkGIwwBqEEAgBkG
    IwwBqEKgBIAZBmDtqQTgQchogBkG4FWogBkGoA2oQfgNAIAdBgAlGBEACQCAGQbgVaiECQQAhBwNAIAdB4AFHBEAgBkG4
    IWogB2oiBBApIQUgBkGYI2ogBCAGQYjJAGoQjQEgBkGYO2ogBkGYI2oQayAGQZg7ahApIAVJBEAgBCAGQZg7ahBrIAIQn
    AELIAQQRCAHQThqIQcgAkGAA2ohAgwBCwsgBkHIxABqECogBkGIwABqECogBkGYI2oQKiAGQcjJAGoQKiAGQcjMAGoQKi
    AGQagGahAqIAZBsAxqECogBkHIzwBqECogBkHQ1QBqECogBkHY2wBqECogBkGYJmogBkHIyQBqQYADEGchAiAGQZgpaiA
    GQcjMAGpBgAMQZyEEIAZBmCxqIAZBqAZqQYADEGchBSAGQZgvaiAGQbAMakGAAxBnIQsgBkGYMmogBkHIzwBqQYADEGch
    CiAGQZg1aiAGQdDVAGpBgAMQZyEIIAZBmDhqIAZB2NsAakGAAxBnIQxBACEHIAZBqAZqQTgQchogBkGwDGogBkG4IWoQX
    yAGQcjPAGogAxBfIAZB0NUAaiAPEF8gBkHY2wBqIAEQXyAGQegMaiAGQcjPAGpBOBBnGiAGQaANaiAGQdDVAGpBOBBnGi
    AGQdgNaiAGQdjbAGpBOBBnGiAGQdDVAGpBlwMQchogBkHY2wBqQZcDEHIaA0AgB0HgAUYEQAJAIAZBmCNqIAZBuBVqEH4
    gBkHIxABqIAZBmCNqEH4gAiAGQcjEAGoQfiACIA0QCyAEIAZByMQAahB+IAQgCRALIAZByMQAaiACEH4gBSAGQcjEAGoQ
    fiAFIAkQCyAGQcjEAGogBkGYI2oQfiALIAZByMQAahB+IAsgABALIAZByMQAaiACEH4gCiAGQcjEAGoQfiAKIAAQCyAGQ
    cjEAGogBBB+IAggBkHIxABqEH4gCCAAEAsgBkHIxABqIAUQfiAMIAZByMQAahB+IAwgABALIAZBsAxqQQEgBikDsAxCAo
    GnayIFEJ0BIAZBsAxqEEQgBkGoBmoQdEEAIQAgBkGwDGohAgJAAkACQAJAA38gAEEERgR/IAZBqAZqECkiA0GXA08NAiA
    DQQFqIQkgBkHY2wBqIANqQQE6AAAgBkHY2wBqIQggAwVBACEHA0AgB0E4RwRAIAZBqAZqIAdqIgEgASkDACACIAdqKQMA
    hDcDACAHQQhqIQcMAQsLIAJBOGohAiAAQQFqIQAMAQsLIQcDQCAHBEAgBkGwDGpBARA7IAggBikDsAxCAoGnQQF0QX9qO
    gAAIAdBf2ohByAIQQFqIQgMAQsLQQAhBwNAIAcgCUYEQCAGQYjAAGogBkGYI2ogBkHQ1QBqIANqLQAAQRl0QRh1QQFyEC
    AgA0F/aiEHA0AgB0F/Rg0GIAZBiMAAahAUIAdBlgNLDQUgBkHIxABqIAZBmCNqIAZB2NsAaiAHai0AACAGQdDVAGogB2o
    tAABBAXRqQRh0QRh1ECAgB0F/aiEHIAZBiMAAaiAGQcjEAGoQCwwACwALIAdBlwNGDQIgB0EBaiEBQQAhACAGQdDVAGog
    B2oiC0EAOgAAIAZB2NsAaiAHai0AACEKQQEhAkE4IQcDQCAHQeABRgRAIAEhBwwCBSAGQbAMaiAHaiIEKQMAIRcgBEEBE
    DsgBCAKIBdCAoGnbCIIQRh0QRl1EJ4BIAQQRCALIAAgAiAIbGoiADoAACAHQThqIQcgAkEBdCECDAELAAsACwALIANBlw
    NBkKXAABA8AAtBlwNBlwNBoKXAABA8AAsgB0GXA0GwpcAAEDwACyAGQcjEAGogBkGIwABqEH4gBkHIzwBqECogBkHIzwB
    qIAZBuBVqEH4gBkHIzwBqEJwBIAZByMQAaiAGQcjPAGoQCyAGQYjAAGogBkHIxABqIAUQbyAGQbgSaiAGQYjAAGoQfkF/
    IQcgBkG4EmoQiAFFDQogBkG4EmoQOCAGQbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZBmDtqIAZBuBVqIAZBmCNqEEkgB
    kGYPGpBOBByGiAGQdA8akE4EHIaIAZBiD1qECogBkHoAWoQhAFFBEAgBkEoahCEAQ0BIAZBiMAAahAqIAZBiMAAaiAGQb
    gSahB+IAZBiMAAahBKIAZBiMMAahBLIAZBiMMAaiAGQegBahB/IAZBiMMAahBHIAZByMQAahAqIAZByMQAaiAGQagDahB
    +IAZByMQAahBKIAZBuCFqEEsgBkG4IWogBkEoahB/IAZBuCFqEEcgBkGYI2ogBkGIwwBqEIUBIAZByMcAaiAGQZgjahCF
    ASAGQZgjaiAGQcjDAGoQhQEgBkGIyABqIAZBmCNqEIUBIAZBmCNqIAZBuCFqEIUBIAZByMgAaiAGQZgjahCFASAGQZgja
    iAGQfghahCFASAGQYjJAGogBkGYI2oQhQEgBkHIyQBqECogBkHIzABqECogBkHQ1QBqEGAgBkHIyQBqIAZBiMAAahB+IA
    ZByMwAaiAGQcjEAGoQfiAGQbAMahAqIAZBsAxqIAZBiMAAahB+IAZBsAxqEJwBIAZByM8AahAqIAZByM8AaiAGQcjEAGo
    QfiAGQcjPAGoQnAEgBkHQPGogBkGYPGoQVEF/aiEHA0AgB0EBTQRAIAZB0NUAahCTASAGQagGaiAGQdDVAGpBiAYQZxoM
    BgsgBkHQ1QBqEBsgBkHY2wBqIAZByMkAaiAGQcjHAGogBkGIyABqEBcgBkG4FWogBkHIzABqIAZByMgAaiAGQYjJAGoQF
    yAGQdjbAGogBkG4FWoQBiAGQdDVAGogBkHY2wBqEAQCQAJAIAZB0DxqIAdBf2oiBxBXIAZBmDxqIAcQV2tBAWoOAwECAA
    ILIAZB2NsAaiAGQcjJAGogBkGIwABqIAZByMcAaiAGQYjIAGoQFiAGQZgjaiAGQcjMAGogBkHIxABqIAZByMgAaiAGQYj
    JAGoQFiAGQdjbAGogBkGYI2oQBiAGQdDVAGogBkHY2wBqEAQMAQsgBkHY2wBqIAZByMkAaiAGQbAMaiAGQcjHAGogBkGI
    yABqEBYgBkGYI2ogBkHIzABqIAZByM8AaiAGQcjIAGogBkGIyQBqEBYgBkHY2wBqIAZBmCNqEAYgBkHQ1QBqIAZB2NsAa
    hAEDAALAAsgBkGoBmogBkGoA2ogBkEoahAQDAMLBSAGQbAMaiAHahBEIAdBOGohBwwBCwsgBkGoBmogBkG4EmogBkHoAW
    oQEAsFIAZBiD1qIAZBuBVqIAdqIgIQfiACQYADaiIEIAZBiD1qEH4gBkGYI2ogBkGIwwBqEF4gBkGYI2oQMiAEEKYBIAJ
    BgARqIgUQpgEgAkGABWoiAhCmASACEKsBIAQgBkGYI2oQDyAFIAZBmCNqEA8gBSAGQYjDAGoQDyAHQYADaiEHDAELCyAG
    QbgVakG4gMAAEF8gBkGYI2pB8IDAABBfIAZByMQAaiAGQbgVaiAGQZgjahBJIAZBiMAAakGAgMAAEF8gBkGwDGogBkGoB
    moQaiAGQcjPAGogBkGwDGoQaiAGQdDVAGogBkHIzwBqEI4BIAZB2NsAaiAGQcjRAGoiARCOASAGQbgVaiAGQcjPAGoQjg
    EgBkGYI2oQLyAGQcjPAGoQmQEgBkHQ1QBqECIgBkHY2wBqIAZByNMAaiIAEBkgBkHY2wBqEGYgBkHQ1QBqIAZB2NsAahC
    BASAGQdDVAGoQrAEgBkHY2wBqIAAQkgEgBkHY2wBqECIgBkHY2wBqEGYgBkG4FWogARAZIAZB2NsAaiAGQbgVahCBASAG
    QdjbAGoQrAEgBkG4FWogARCSASAGQbgVahAiIAZBmCNqIAZByM8AahCSASAGQZgjaiAAEBkgBkG4FWogBkGYI2oQgQEgB
    kG4FWoQrAEgBkGYI2ogARCSASAGQZgjaiAGQbgVahAZIAZBmCNqEGYgBkHIzwBqIAZB0NUAahAZIAZBmCNqIAZByM8Aah
    CWASAAIAZB2NsAahAZIAAQZiAGQZgjaiAAEJYBIAZBmCNqEKwBIAZByMkAaiAGQZgjahBeIAZByMwAaiAGQZgkaiICEF4
    gBkHIyQBqEDIgBkHIzABqEDIgBkHIzABqEFUgBkHIzABqEKgBIAZByMkAaiAGQcjMAGoQfSAGQcjJAGoQQCAGQZgjaiAG
    QcjJAGoQDyAGQcjJAGoQOiAGQcjJAGoQqAEgAiAGQcjJAGoQDyAGQcjPAGogBkHQ1QBqEJIBIAZByM8AaiAGQZgjahAZI
    AEgBkHY2wBqEJIBIAEgBkGYI2oQGSAAIAZBuBVqEJIBIAAgBkGYI2oQGSAGQQU2AshVIAZBsAxqEJMBIAZBsAxqIAZByM
    8AahAOIAZByM8AaiAGQbAMahBsIAZBsAxqIAZByMQAahA3IAZBsAxqIAZByMQAahA3IAZBsAxqIAZByM8AahAOIAZB0NU
    AaiAGQbAMahBqIAZB0NUAahAaIAZB0NUAaiAGQbAMahAOIAZBmCNqIAZBsAxqIAZBiMAAahAdIAZB2NsAaiAGQZgjahBq
    IAZB2NsAahCTASAGQbgVaiAGQbAMahBqIAZBuBVqEJMBIAZBsAxqIAZB2NsAahBsIAZBsAxqIAZBuBVqEA4gBkGYI2ogB
    kGwDGogBkGIwABqEB0gBkHY2wBqIAZBmCNqEGwgBkHY2wBqEJMBIAZBuBVqIAZBsAxqEGwgBkG4FWoQkwEgBkGwDGogBk
    HY2wBqEGwgBkGwDGogBkG4FWoQDiAGQZgjaiAGQbAMaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQdjbAGoQkwEgBkG
    4FWogBkGwDGoQbCAGQbgVaiAGQcjEAGoQNyAGQbAMaiAGQdjbAGoQbCAGQbAMaiAGQbgVahAOIAZBmCNqIAZBsAxqIAZB
    iMAAahAdIAZB2NsAaiAGQZgjahBsIAZBmCNqIAZB2NsAaiAGQYjAAGoQHSAGQdjbAGogBkGYI2oQbCAGQbgVaiAGQbAMa
    hBsIAZBuBVqIAZByMQAahA3IAZBuBVqIAZByMQAahA3IAZB2NsAaiAGQbgVahAOIAZBuBVqIAZBsAxqEGwgBkG4FWoQkw
    EgBkGwDGogBkHY2wBqEGwgBkGwDGogBkG4FWoQDiAGQbAMaiAGQdDVAGoQDiAGQbAMahCaASAGQagGaiAGQbAMakGIBhB
    nGiAGQZgjahBuIAZBqAZqIAZBmCNqEHtFDQMgBkGoB2ogAhB7RQ0DIAZBqAhqEIYBRQ0DQQAhByAGQagKahCGAUUNAwwE
    CyAFIAdHBEAgBkHIzwBqIAdqIAQgB2otAAA6AAAgB0EBaiEHDAELCyAFIAVBoKTAABA8AAtBAEEAQZCkwAAQPAALQX8hB
    wsgBkHg4QBqJAAgBw8LQQAhByAGQbAMakE4EHIaA0AgB0E4RwRAIAZBsAxqIAdqIAZByM8AaiAHaikDADcDACAHQQhqIQ
    cMAQsLIAZBmCNqIAZBsAxqEIsBIAZBqANqIAlBBnRqIAZBmCNqQcAAEGcaIAMgCmohAyALIQkMAAsACyAHIAlqIQkgAiE
    DDAALAAtBK0EBQaS5wQAoAgAiAEEBIAAbEQAAAAvBKgIIfwF+AkACQAJAAkAgAEH1AU8EQCAAQc3/e08NAiAAQQtqIgBB
    eHEhBkHYtcEAKAIAIgdFDQFBHyEIQQAgBmshBQJAAkAgBkH///8HTQRAIAZBBiAAQQh2ZyIAa0EfcXZBAXEgAEEBdGtBP
    mohCAsgCEECdEHkt8EAaigCACIABEAgBkEAQRkgCEEBdmtBH3EgCEEfRht0IQMDQAJAIABBBGooAgBBeHEiBCAGSQ0AIA
    QgBmsiBCAFTw0AIAAhAiAEIgUNAEEAIQUMAwsgAEEUaigCACIEIAEgBCAAIANBHXZBBHFqQRBqKAIAIgBHGyABIAQbIQE
    gA0EBdCEDIAANAAsgAQRAIAEhAAwCCyACDQILQQAhAkECIAhBH3F0IgBBACAAa3IgB3EiAEUNAyAAQQAgAGtxaEECdEHk
    t8EAaigCACIARQ0DCwNAIAAgAiAAQQRqKAIAQXhxIgEgBk8gASAGayIDIAVJcSIEGyECIAMgBSAEGyEFIAAoAhAiAQR/I
    AEFIABBFGooAgALIgANAAsgAkUNAgtB5LjBACgCACIAIAZPQQAgBSAAIAZrTxsNASACKAIYIQcCQAJAIAIgAigCDCIBRg
    RAIAJBFEEQIAJBFGoiAygCACIBG2ooAgAiAA0BQQAhAQwCCyACKAIIIgAgATYCDCABIAA2AggMAQsgAyACQRBqIAEbIQM
    DQCADIQQgACIBQRRqIgMoAgAiAEUEQCABQRBqIQMgASgCECEACyAADQALIARBADYCAAsCQCAHRQ0AAkAgAiACKAIcQQJ0
    QeS3wQBqIgAoAgBHBEAgB0EQQRQgBygCECACRhtqIAE2AgAgAUUNAgwBCyAAIAE2AgAgAQ0AQdi1wQBB2LXBACgCAEF+I
    AIoAhx3cTYCAAwBCyABIAc2AhggAigCECIABEAgASAANgIQIAAgATYCGAsgAkEUaigCACIARQ0AIAFBFGogADYCACAAIA
    E2AhgLAkAgBUEQTwRAIAIgBkEDcjYCBCACIAZqIgcgBUEBcjYCBCAFIAdqIAU2AgAgBUGAAk8EQEEfIQAgB0IANwIQIAV
    B////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIAcgADYCHCAAQQJ0QeS3wQBqIQQCQAJAAkACQEHY
    tcEAKAIAIgNBASAAQR9xdCIBcQRAIAQoAgAiA0EEaigCAEF4cSAFRw0BIAMhAAwCC0HYtcEAIAEgA3I2AgAgBCAHNgIAI
    AcgBDYCGAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAMgAUEddkEEcWpBEGoiBCgCACIARQ0CIAFBAXQhASAAIQ
    MgAEEEaigCAEF4cSAFRw0ACwsgACgCCCIBIAc2AgwgACAHNgIIIAdBADYCGCAHIAA2AgwgByABNgIIDAQLIAQgBzYCACA
    HIAM2AhgLIAcgBzYCDCAHIAc2AggMAgsgBUEDdiIBQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASABdCIBcQRAIAAoAggM
    AQtB1LXBACABIANyNgIAIAALIQUgACAHNgIIIAUgBzYCDCAHIAA2AgwgByAFNgIIDAELIAIgBSAGaiIAQQNyNgIEIAAgA
    moiACAAKAIEQQFyNgIECyACQQhqDwsCQAJAQdS1wQAoAgAiB0EQIABBC2pBeHEgAEELSRsiBkEDdiIBdiICQQNxRQRAIA
    ZB5LjBACgCAE0NAyACDQFB2LXBACgCACIARQ0DIABBACAAa3FoQQJ0QeS3wQBqKAIAIgFBBGooAgBBeHEgBmshBSABIQM
    DQCABKAIQIgBFBEAgAUEUaigCACIARQ0ECyAAQQRqKAIAQXhxIAZrIgIgBSACIAVJIgIbIQUgACADIAIbIQMgACEBDAAL
    AAsCQCACQX9zQQFxIAFqIgVBA3QiAEHktcEAaigCACIDQQhqIgIoAgAiASAAQdy1wQBqIgBHBEAgASAANgIMIAAgATYCC
    AwBC0HUtcEAIAdBfiAFd3E2AgALIAMgBUEDdCIAQQNyNgIEIAAgA2oiACAAKAIEQQFyNgIEIAIPCwJAQQIgAXQiAEEAIA
    BrciACIAF0cSIAQQAgAGtxaCIBQQN0IgBB5LXBAGooAgAiA0EIaiIEKAIAIgIgAEHctcEAaiIARwRAIAIgADYCDCAAIAI
    2AggMAQtB1LXBACAHQX4gAXdxNgIACyADIAZBA3I2AgQgAyAGaiIFIAFBA3QiACAGayIHQQFyNgIEIAAgA2ogBzYCAEHk
    uMEAKAIAIgAEQCAAQQN2IgJBA3RB3LXBAGohAEHsuMEAKAIAIQgCf0HUtcEAKAIAIgFBASACQR9xdCICcQRAIAAoAggMA
    QtB1LXBACABIAJyNgIAIAALIQMgACAINgIIIAMgCDYCDCAIIAA2AgwgCCADNgIIC0HsuMEAIAU2AgBB5LjBACAHNgIAIA
    QPCyADKAIYIQcCQAJAIAMgAygCDCIBRgRAIANBFEEQIANBFGoiASgCACICG2ooAgAiAA0BQQAhAQwCCyADKAIIIgAgATY
    CDCABIAA2AggMAQsgASADQRBqIAIbIQIDQCACIQQgACIBQRRqIgIoAgAiAEUEQCABQRBqIQIgASgCECEACyAADQALIARB
    ADYCAAsgB0UNAyADIAMoAhxBAnRB5LfBAGoiACgCAEcEQCAHQRBBFCAHKAIQIANGG2ogATYCACABRQ0EDAMLIAAgATYCA
    CABDQJB2LXBAEHYtcEAKAIAQX4gAygCHHdxNgIADAMLAkACQAJAAkACQEHkuMEAKAIAIgEgBkkEQEHouMEAKAIAIgAgBk
    sNA0EAIQUgBkGvgARqIgJBEHZAACIAQX9GDQYgAEEQdCIDRQ0GQfS4wQAgAkGAgHxxIgVB9LjBACgCAGoiAjYCAEH4uME
    AQfi4wQAoAgAiACACIAAgAksbNgIAQfC4wQAoAgAiBEUNAUH8uMEAIQADQCAAKAIAIgEgACgCBCICaiADRg0DIAAoAggi
    AA0ACwwEC0HsuMEAKAIAIQMCfyABIAZrIgJBD00EQEHsuMEAQQA2AgBB5LjBAEEANgIAIAMgAUEDcjYCBCABIANqIgJBB
    GohACACKAIEQQFyDAELQeS4wQAgAjYCAEHsuMEAIAMgBmoiADYCACAAIAJBAXI2AgQgASADaiACNgIAIANBBGohACAGQQ
    NyCyEGIAAgBjYCACADQQhqDwtBkLnBACgCACIAQQAgACADTRtFBEBBkLnBACADNgIAC0GUucEAQf8fNgIAQYC5wQAgBTY
    CAEH8uMEAIAM2AgBB6LXBAEHctcEANgIAQfC1wQBB5LXBADYCAEHktcEAQdy1wQA2AgBB+LXBAEHstcEANgIAQey1wQBB
    5LXBADYCAEGAtsEAQfS1wQA2AgBB9LXBAEHstcEANgIAQYi2wQBB/LXBADYCAEH8tcEAQfS1wQA2AgBBkLbBAEGEtsEAN
    gIAQYS2wQBB/LXBADYCAEGYtsEAQYy2wQA2AgBBjLbBAEGEtsEANgIAQaC2wQBBlLbBADYCAEGUtsEAQYy2wQA2AgBBiL
    nBAEEANgIAQai2wQBBnLbBADYCAEGctsEAQZS2wQA2AgBBpLbBAEGctsEANgIAQbC2wQBBpLbBADYCAEGstsEAQaS2wQA
    2AgBBuLbBAEGstsEANgIAQbS2wQBBrLbBADYCAEHAtsEAQbS2wQA2AgBBvLbBAEG0tsEANgIAQci2wQBBvLbBADYCAEHE
    tsEAQby2wQA2AgBB0LbBAEHEtsEANgIAQcy2wQBBxLbBADYCAEHYtsEAQcy2wQA2AgBB1LbBAEHMtsEANgIAQeC2wQBB1
    LbBADYCAEHctsEAQdS2wQA2AgBB6LbBAEHctsEANgIAQfC2wQBB5LbBADYCAEHktsEAQdy2wQA2AgBB+LbBAEHstsEANg
    IAQey2wQBB5LbBADYCAEGAt8EAQfS2wQA2AgBB9LbBAEHstsEANgIAQYi3wQBB/LbBADYCAEH8tsEAQfS2wQA2AgBBkLf
    BAEGEt8EANgIAQYS3wQBB/LbBADYCAEGYt8EAQYy3wQA2AgBBjLfBAEGEt8EANgIAQaC3wQBBlLfBADYCAEGUt8EAQYy3
    wQA2AgBBqLfBAEGct8EANgIAQZy3wQBBlLfBADYCAEGwt8EAQaS3wQA2AgBBpLfBAEGct8EANgIAQbi3wQBBrLfBADYCA
    EGst8EAQaS3wQA2AgBBwLfBAEG0t8EANgIAQbS3wQBBrLfBADYCAEHIt8EAQby3wQA2AgBBvLfBAEG0t8EANgIAQdC3wQ
    BBxLfBADYCAEHEt8EAQby3wQA2AgBB2LfBAEHMt8EANgIAQcy3wQBBxLfBADYCAEHgt8EAQdS3wQA2AgBB1LfBAEHMt8E
    ANgIAQfC4wQAgAzYCAEHct8EAQdS3wQA2AgBB6LjBACAFQVhqIgA2AgAgAyAAQQFyNgIEIAAgA2pBKDYCBEGMucEAQYCA
    gAE2AgAMAwsgAEEMaigCACADIARNciABIARLcg0BIAAgAiAFajYCBEHwuMEAQfC4wQAoAgAiA0EPakF4cSIBQXhqNgIAQ
    ei4wQBB6LjBACgCACAFaiICIAMgAWtqQQhqIgA2AgAgAUF8aiAAQQFyNgIAIAIgA2pBKDYCBEGMucEAQYCAgAE2AgAMAg
    tB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2AgQgASAGQQNyNgIEIAFBCGohBQwCC0G
    QucEAQZC5wQAoAgAiACADIAAgA0kbNgIAIAMgBWohAUH8uMEAIQACQANAIAEgACgCAEcEQCAAKAIIIgANAQwCCwsgAEEM
    aigCAA0AIAAgAzYCACAAIAAoAgQgBWo2AgQgAyAGQQNyNgIEIAMgBmohBCABIANrIAZrIQYCQAJAIAFB8LjBACgCAEcEQ
    EHsuMEAKAIAIAFGDQEgAUEEaigCACIAQQNxQQFGBEAgASAAQXhxIgAQFSAAIAZqIQYgACABaiEBCyABIAEoAgRBfnE2Ag
    QgBCAGQQFyNgIEIAQgBmogBjYCACAGQYACTwRAQR8hBSAEQgA3AhAgBkH///8HTQRAIAZBBiAGQQh2ZyIAa0EfcXZBAXE
    gAEEBdGtBPmohBQsgBCAFNgIcIAVBAnRB5LfBAGohAQJAAkACQAJAQdi1wQAoAgAiAkEBIAVBH3F0IgBxBEAgASgCACIC
    QQRqKAIAQXhxIAZHDQEgAiEFDAILQdi1wQAgACACcjYCACABIAQ2AgAgBCABNgIYDAMLIAZBAEEZIAVBAXZrQR9xIAVBH
    0YbdCEBA0AgAiABQR12QQRxakEQaiIAKAIAIgVFDQIgAUEBdCEBIAUiAkEEaigCAEF4cSAGRw0ACwsgBSgCCCIAIAQ2Ag
    wgBSAENgIIIARBADYCGCAEIAU2AgwgBCAANgIIDAULIAAgBDYCACAEIAI2AhgLIAQgBDYCDCAEIAQ2AggMAwsgBkEDdiI
    CQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQUgACAENgIIIAUg
    BDYCDCAEIAA2AgwgBCAFNgIIDAILQfC4wQAgBDYCAEHouMEAQei4wQAoAgAgBmoiADYCACAEIABBAXI2AgQMAQtB7LjBA
    CAENgIAQeS4wQBB5LjBACgCACAGaiIANgIAIAQgAEEBcjYCBCAAIARqIAA2AgALIANBCGoPC0H8uMEAIQADQAJAIAAoAg
    AiAiAETQRAIAIgACgCBGoiAiAESw0BCyAAKAIIIQAMAQsLQfC4wQAgAzYCAEHouMEAIAVBWGoiADYCACADIABBAXI2AgQ
    gACADakEoNgIEQYy5wQBBgICAATYCACAEIAJBYGpBeHFBeGoiACAAIARBEGpJGyIBQRs2AgRB/LjBACkCACEJIAFBEGpB
    hLnBACkCADcCACABIAk3AghBgLnBACAFNgIAQfy4wQAgAzYCAEGEucEAIAFBCGo2AgBBiLnBAEEANgIAIAFBHGohAANAI
    ABBBzYCACACIABBBGoiAEsNAAsgASAERg0AIAEgASgCBEF+cTYCBCAEIAEgBGsiBUEBcjYCBCABIAU2AgAgBUGAAk8EQE
    EfIQAgBEIANwIQIAVB////B00EQCAFQQYgBUEIdmciAGtBH3F2QQFxIABBAXRrQT5qIQALIARBHGogADYCACAAQQJ0QeS
    3wQBqIQMCQAJAAkACQEHYtcEAKAIAIgFBASAAQR9xdCICcQRAIAMoAgAiAkEEaigCAEF4cSAFRw0BIAIhAAwCC0HYtcEA
    IAEgAnI2AgAgAyAENgIAIARBGGogAzYCAAwDCyAFQQBBGSAAQQF2a0EfcSAAQR9GG3QhAQNAIAIgAUEddkEEcWpBEGoiA
    ygCACIARQ0CIAFBAXQhASAAIQIgAEEEaigCAEF4cSAFRw0ACwsgACgCCCICIAQ2AgwgACAENgIIIARBGGpBADYCACAEIA
    A2AgwgBCACNgIIDAMLIAMgBDYCACAEQRhqIAI2AgALIAQgBDYCDCAEIAQ2AggMAQsgBUEDdiICQQN0Qdy1wQBqIQACf0H
    UtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQEgACAENgIIIAEgBDYCDCAEIAA2AgwgBCAB
    NgIIC0EAIQVB6LjBACgCACIAIAZNDQBB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2A
    gQgASAGQQNyNgIEIAFBCGoPCyAFDwsgASAHNgIYIAMoAhAiAARAIAEgADYCECAAIAE2AhgLIANBFGooAgAiAEUNACABQR
    RqIAA2AgAgACABNgIYCwJAIAVBEE8EQCADIAZBA3I2AgQgAyAGaiIEIAVBAXI2AgQgBCAFaiAFNgIAQeS4wQAoAgAiAAR
    AIABBA3YiAkEDdEHctcEAaiEAQey4wQAoAgAhBwJ/QdS1wQAoAgAiAUEBIAJBH3F0IgJxBEAgACgCCAwBC0HUtcEAIAEg
    AnI2AgAgAAshAiAAIAc2AgggAiAHNgIMIAcgADYCDCAHIAI2AggLQey4wQAgBDYCAEHkuMEAIAU2AgAMAQsgAyAFIAZqI
    gBBA3I2AgQgACADaiIAIAAoAgRBAXI2AgQLIANBCGoLtA8BA38jAEGAC2siAiQAIAJBCGoQSyACQcgBakE4EHIaIAJBAT
    YCgAIgAkGIAmpBOBByGiACQQE2AsACIAJByAJqQTgQchogAkEBNgKAAyACQYgDakE4EHIaIAJBATYCwAMgAkHIA2pBOBB
    yGiACQQE2AoAEIAJBiARqQQEQigEgAkHIBGpBOBByGiACQQE2AoAFIAJBiAVqQTgQchogAkEBNgLABSACQcgFaiABEIUB
    IAJBiAZqQTgQchogAkEBNgLABiACQcgGakE4EHIaIAJBATYCgAcgAkGIB2pBOBByGiACQQE2AsAHIAJByAdqQTgQchogA
    kEBNgKACCACQcgFahBYIQMgAkHICWpB4ITAABBfIAJBiApqIAJByAlqEIsBIAJByAFqIAJBiApqEKUBIAJByAlqQZiFwA
    AQXyACQYgKaiACQcgJahCLASACQYgCaiACQYgKahClASACQcgFahADIAJByAVqQQsQUiACQYgGaiACQcgFahClASACQYg
    GaiACQYgEahB4IAJBiAZqEEQgAkGIBmogAkHIBWoQSCACQYgFaiACQcgBahClASACQYgFaiACQYgGahBIIAJBiAZqIAJB
    iARqEHggAkGIBmoQRCACQYgGaiACQYgCahBIIAJBiAZqEEEgAkGIBmoQRCACQYgDaiACQYgGahClASACQcgDaiACQcgFa
    hClASACQcgDaiACQYgDahBIIAJByAdqIAJBiANqEKUBIAJByAdqEAMgAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgGai
    ACQcgBahClASACQYgGaiACQcgGahBIIAJByAdqIAJBiAZqEHggAkHIB2oQRCACQcgHaiACQYgDahBIIAJByAZqIAJBiAV
    qEEggAkGIBmogAkGIAmoQpQEgAkGIBmogAkHIBmoQSCACQcgHaiACQYgGahB4IAJByAdqEEQgAkGIBmogAkHIB2oQpQEg
    AkGIBmogAkGIBWoQSCACQYgGaiACQYgHahBcIQQgAkGIBWogAkGIBmoQpQEgAkGIBWogAkGIB2oQNCACQYgFaiACQcgHa
    hBIIAJBiANqIAJBiAVqEEggAkHIA2ogAkGIBWoQSCACQcgFaiABEEggAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgFai
    ACQcgGahClASACQYgFaiACQcgFahBIIAJByAVqIAJBiAZqEKUBIAJByAVqQQsQUiACQcgJakHQhcAAEF8gAkGICmogAkH
    ICWoQiwEgAkHIAmogAkGICmoQpQEgAkHIAmogAkGIB2oQSCACQYgDaiACQcgDakEBIARrIgEQeSACQcgGaiACQYgFaiAB
    EHkgAkGIBmogAkHIBWogARB5IAJBiAdqIAJByAJqIAEQeSACQYgKaiACQYgGaiACQYgHahAjIAJByARqIAJBiApqEKUBI
    AJByARqIAJByAZqEEggAkHIBGoQWCEBIAJBiAZqIAJByARqEKUBIAJBiAZqEEEgAkGIBmoQRCACQcgEaiACQYgGaiABIA
    NzEHkgAkGICmpBiIbAABBfIAJBiAhqIAJBiApqEIsBQTghAQNAIAFBoAVGRQRAIAJBiAhqIAJBiANqEEggAkHICWogAUG
    IhsAAahBfIAFBOGohASACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQYgIaiACQYgGahB4IAJBiAhqEEQMAQsL
    IAJByAhqIAJBiANqEIUBIAJByAlqQaiLwAAQXyACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQcgIaiACQYgGa
    hB4IAJByAhqEERBACEBA0AgAUH4A0ZFBEAgAkHICGogAkGIA2oQSCACQcgJaiABQeCLwABqEF8gAUE4aiEBIAJBiApqIA
    JByAlqEIsBIAJBiAZqIAJBiApqEKUBIAJByAhqIAJBiAZqEHggAkHICGoQRAwBCwsgAkGICmpB2I/AABBfIAJBiAlqIAJ
    BiApqEIsBQQAhAQNAIAFByAZGBEACQCACQcgJaiACQYgDahCFASACQcgKakHYlsAAEF8gAkGICmogAkHICmoQiwEgAkGI
    BmogAkGICmoQpQEgAkHICWogAkGIBmoQeCACQcgJahBEQQAhAQNAIAFBkAZGDQEgAkHICWogAkGIA2oQSCACQcgKaiABQ
    ZCXwABqEF8gAUE4aiEBIAJBiApqIAJByApqEIsBIAJBiAZqIAJBiApqEKUBIAJByAlqIAJBiAZqEHggAkHICWoQRAwACw
    ALBSACQYgJaiACQYgDahBIIAJByAlqIAFBkJDAAGoQXyABQThqIQEgAkGICmogAkHICWoQiwEgAkGIBmogAkGICmoQpQE
    gAkGICWogAkGIBmoQeCACQYgJahBEDAELCyACQYgJaiACQcgEahBIIAJBiAZqIAJBiAhqEKUBIAJBiAZqIAJByAlqEEgg
    AkEIaiACQYgGahClASACQYgGaiACQYgJahClASACQYgGaiACQcgIahBIIAJByABqIAJBiAZqEKUBIAJBiAZqIAJByAhqE
    KUBIAJBiAZqIAJByAlqEEggAkGIAWogAkGIBmoQpQEgACACQQhqQcABEGcaIAJBgAtqJAALzQ0CE38IfiMAQYADayIBJA
    AgADQCOCIUIBR+QoCAgBBaBEAgABASCyABQeABakHoABByGiABQcgBaiAAKQMAIhggGEI/hyIZIBggGRAxIAEgASkDyAE
    iFEL//////////wODNwPYASABQdABaikDACIXQgaGIBRCOoiEIRUgF0I6iCEaIABBCGoiCyEFIAAhBkEBIQcDQCAHQQZP
    BEAgAEEYaiEMIABBKGohCyAAQRBqIQcgACkDMCEYQQQhBkEAIQkgAUGgAWohDUEDIQpBAiEIQQchBQJAAkADQCAFQQpLD
    QIgBiAIIAYgCEsbIQ4gBiAKIAYgCksbQQN0QWhqIQ8gAUGYAWogBUEDdCIQIABqQVBqKQMAIhQgFEI/hyAYIBhCP4ciGR
    AxIAVBAWoiEUEBdiESIA0pAwAhFyABKQOYASEUIAshAyAHIQQgBUF7aiITIQICQANAIAIgDkcEQCACQQdGDQIgAUGIAWo
    gBCkDACIWIBZCP4cgAykDACIWIBZCP4cQMSABKQOIASIWIBR8IhQgFlStIAFBkAFqKQMAIBd8fCEXIANBeGohAyAEQQhq
    IQQgAkEBaiECDAELCyABQdgBaiAQaiAUQgGGIhYgFXwiFUL//////////wODNwMAIAFB+ABqIAAgE0EDdGopAwAiGyAbQ
    j+HIBggGRAxIBUgFlStIBdCAYYgFEI/iIQgGnx8IhRCOochGiAUQgaGIBVCOoiEIRkgBUECaiEFIAFBgAFqKQMAIRcgAS
    kDeCEUIAshAyAJIQIDQCACIA9GBEAgAUHYAGogACASQQN0aikDACIVIBVCP4ciFiAVIBYQMSABQdgBaiARQQN0aiAUQgG
    GIhYgGXwiFSABKQNYfCIZQv//////////A4M3AwAgGSAVVK0gAUHgAGopAwAgFSAWVK0gF0IBhiAUQj+IhCAafHx8fCIU
    QjqHIRogFEIGhiAZQjqIhCEVIApBAmohCiAJQRBqIQkgCEECaiEIIAZBAWohBiAHQRBqIQcMAwsgAkEgRg0DIAFB6ABqI
    AIgDGopAwAiFSAVQj+HIAMpAwAiFSAVQj+HEDEgASkDaCIVIBR8IhQgFVStIAFB8ABqKQMAIBd8fCEXIANBeGohAyACQQ
    hqIQIMAAsACwtBB0EHQbSewAAQPAALQQdBB0HEnsAAEDwACyABQagBaiAAKQMoIhQgFEI/hyAYIBhCP4ciFBAxIAEgFSA
    BKQOoASIVQgGGIhl8IhdC//////////8DgzcDsAIgAUG4AWogGCAUIBggFBAxIAEgFyAZVK0gAUGwAWopAwBCAYYgFUI/
    iIQgGnx8IhhCBoYgF0I6iIQiFyABKQO4AXwiFEL//////////wODNwO4AiABIBQgF1StIAFBwAFqKQMAIBhCOod8fEIGh
    iAUQjqIhDcDwAIgAUHIAmogAUHYAWoQBSAAIAFByAJqEGsgAEECNgI4IAFBgANqJAAPCyABQcgAaiAAIAdBA3QiDGopAw
    AiFCAUQj+HIBggGRAxIAdBAWoiDUEBdiEOIAFB0ABqKQMAIRcgASkDSCEUIAghAiAGIQMgCiEEIAshCQNAIAJFBEAgAUH
    YAWogDGogFEIBhiIWIBV8IhVC//////////8DgzcDACABQShqIAAgDUEDdCIMaikDACIbIBtCP4cgGCAZEDEgFSAWVK0g
    F0IBhiAUQj+IhCAafHwiFEI6hyEaIBRCBoYgFUI6iIQhFiAHQQJqIQkgAUEwaikDACEXQQAhAiABKQMoIRQgBSEDIAshB
    ANAIAIgCGpFBEAgAUEIaiAAIA5BA3RqKQMAIhUgFUI/hyIbIBUgGxAxIAFB2AFqIAxqIBRCAYYiGyAWfCIVIAEpAwh8Ih
    ZC//////////8DgzcDACAWIBVUrSABQRBqKQMAIBUgG1StIBdCAYYgFEI/iIQgGnx8fHwiFEI6hyEaIBRCBoYgFkI6iIQ
    hFSAFQRBqIQUgCEEBaiEIIAZBEGohBiAKQQJqIQogCSEHDAQLIAIgB2oiDUEGTQRAIAFBGGogBCkDACIVIBVCP4cgAykD
    ACIVIBVCP4cQMSABKQMYIhUgFHwiFCAVVK0gAUEgaikDACAXfHwhFyADQXhqIQMgAkF/aiECIARBCGohBAwBCwsgDUEHQ
    aSewAAQPAALIARBBk0EQCABQThqIAkpAwAiFiAWQj+HIAMpAwAiFiAWQj+HEDEgASkDOCIWIBR8IhQgFlStIAFBQGspAw
    AgF3x8IRcgAkF/aiECIANBeGohAyAEQX9qIQQgCUEIaiEJDAELCwsgBEEHQZSewAAQPAAL7wwBBH8jAEHADWsiAiQAAkA
    gACgCgAYiA0EBRwRAIAEoAoAGIgRBAUYNAQJAAkACQAJAIARBA00EQCADQX5xQQJGDQEgAiAAEI4BIAJBgAJqEC8gAkGA
    BGoQLyACQYAGahAvIAJBgAhqIAAQjgEgAkGACmoQLyACIAEQGSACQYAIaiAAQYACaiIFEJYBIAJBgAhqEKwBIAJBgAJqI
    AJBgAhqEJIBIAJBgAJqIAEQGSACQYAIaiAFEJIBIAJBgAhqIABBgARqIgMQlgEgAkGACGoQrAEgAkGABmogAkGACGoQkg
    EgBEECRg0CIAJBwAxqIAFBgAVqEF4gAkGABmogAkHADGoQogEMAwsgAiAAEI4BIAJBgAJqEC8gAkGABGoQLyACQYAGahA
    vIAIgARAZAkACQCAEQQRGIgQNACAAKAKABkEERg0AIAJBgARqIABBgAJqEJIBIAJBgARqIAFBgAJqEBkMAQsgAkHADGpB
    OBByGiACQQE2AvgMIAJBgA1qQTgQchogAkG4DWpBATYCACACQYAIakE4EHIaIAJBATYCuAggAkHACGpBOBByGiACQfgIa
    kEBNgIAIAJBgApqIABBgANqIgMQXiACQYAIaiACQYAKahCQASACQYAKaiABQYADaiIFEF4gAkGACGogAkGACmoQDyACQc
    AMahCpASAERQRAIAJBgApqIAMQXiACQcAMaiACQYAKahCQASACQYAKaiABQYACahBeIAJBwAxqIAJBgApqEA8LIAAoAoA
    GQQRHBEAgAkGACmogAEGAAmoQXiACQcAMaiACQYAKahCQASACQYAKaiAFEF4gAkHADGogAkGACmoQDwsgAkGABGogAkHA
    DGogAkGACGoQoQEgAkGABGoQZgsgAkGACGogABCOASACQYAKaiABEI4BIAJBgAhqIABBgAJqIgQQlgEgAkGACGoQrAEgA
    kGACmogAUGAAmoiBRCWASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAQQkgEgAkGACG
    ogAEGABGoiAxCWASACQYAIahCsASACQYAKaiAFEJIBIAJBgApqIAFBgARqIgUQlgEgAkGACmoQrAEgAkGABmogAkGACGo
    QkgEgAkGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAI
    ahCWASAEIAJBgAJqEJIBIAQgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQ
    YAIaiADEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBRCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIA
    JBgAhqEJYBIAJBgAhqIAMQkgEgAkGACGogBRAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgAyACQYAEahCSASADIAJBgAp
    qEJYBIAJBgAZqIAJBgApqEJYBIAJBgAhqEGYgBCACQYAIahCWAQwDCyAAIAEQBgwECyACQcAMaiABQYAFahBeIAJBgAxq
    IAJBwAxqQcAAEGcaIAJBgAZqIAJBgAxqEKMBCyACQYAGahBmIAJBgAhqIAIQkgEgAkGACGoQKyACQYACaiACQYAIahCWA
    SAFIAJBgAJqEJIBIAJBgARqIAJBgAhqEJIBIAJBgAhqIAAQkgEgAkGACGogAxCWASACQYAIahCsASACQYAKaiABEJIBIA
    JBgApqIAFBgARqEJYBIAJBgApqEKwBIAJBgAhqIAJBgApqEBkgAkGABGogAkGACGoQlgEgAkGACGogAxCSAQJAIARBAkc
    EQCACQcAMaiABQYAFahBeIAJBgAhqIAJBwAxqEKIBDAELIAJBwAxqIAFBgAVqEF4gAkGADGogAkHADGpBwAAQZxogAkGA
    CGogAkGADGoQowELIAJBgAhqEGYgAkGACmogAkGACGoQkgEgAkGACmoQKyADIAJBgARqEJIBIAMgAkGACmoQlgEgAkGAB
    mogAkGACmoQlgEgAkGACGoQZiAFIAJBgAhqEJYBCyACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIABBBT
    YCgAYgABCZAQwBCyAAIAEQbAsgAkHADWokAAuaCQIPfwt+IwBBwAJrIgIkACACQeAAakGgp8AAEF8gAEE4EHIhDCACQZg
    BakHwABByGiACQZACakEwEHIaIAwQdCACIAEpAwAiFEL9//P/z///+QF+Qv//////////A4MiETcDiAIgAkHQAGogEUIA
    IAIpA2AiGCAYQj+HIhoQMSAUIAIpA1AiEXwiFiARVK0gAkHYAGopAwAgFEI/h3x8IhRCOocgASkDCCIRQj+HfCARIBRCB
    oYgFkI6iIQiEXwiEiARVK18IRNBASEDAkADQAJAIANBB0YEQCACQZACaiEJIAJB6ABqIQpBByEEIAJB4ABqIQ0gAkGIAm
    ohDkEGIQ8MAQsgA0EBdiIAQQFqIQUgCiAAayEGIAkgAEEDdCIHayEAIAdBCGohCCACQUBrIANBA3QiBCACQeAAamopAwA
    iFiAWQj+HIhQgAikDiAIiESARQj+HEDEgAkHIAGopAwAgEiAVfCIRIBJUrSATIBd8fHwgESACKQNAfCITIBFUrXwhEiAD
    QQFqIQcDQCADIAVNBEAgAkGIAmogBGogE0L9//P/z///+QF+Qv//////////A4MiETcDACACQTBqIBFCACAYIBoQMSACQ
    SBqIBFCACAWIBQQMSACQZgBaiADQQR0aiIAIAJBKGopAwAiGzcDCCAAIAIpAyAiGTcDACACKQMwIhEgE3wiFiARVK0gAk
    E4aikDACASfHwiFEI6hyABIAdBA3RqKQMAIhFCP4d8IBEgFEIGhiAWQjqIhCIRfCISIBFUrXwhEyAVIBl8IhUgGVStIBc
    gG3x8IRcgCUEIaiEJIApBAWohCiAHIQMMAwsgBkEGSw0DIAJBEGogAkHgAGogCGopAwAgAkHgAGogAGopAwB9IhEgEUI/
    hyACQYgCaiAAaikDACACQYgCaiAIaikDAH0iESARQj+HEDEgAikDECIRIBN8IhMgEVStIAJBGGopAwAgEnx8IRIgBUEBa
    iEFIABBeGohACAGQX9qIQYgCEEIaiEIDAALAAsLA0ACQCAEQQ1HBEAgDyAEQQF2IgBrIQUgDiAAQQN0IgtrIRAgDSALay
    EIIBMgF3wgEiAVfCITIBJUrXwhEiAEQQFqIQdBMCEAIAkhBiAKIQMDQCAAIAtGDQIgBUEGTQRAIAIgAyALaikDACAAIAh
    qKQMAfSIRIBFCP4cgACAQaikDACAGIAtqKQMAfSIRIBFCP4cQMSACKQMAIhEgE3wiEyARVK0gAkEIaikDACASfHwhEiAF
    QX9qIQUgBkEIaiEGIANBCGohAyAAQXhqIQAMAQsLIAVBB0HknsAAEDwACyAMIBJC//////////8DgzcDMCACQcACaiQAD
    wsgBEEDdCAMakFIaiATQv//////////A4M3AwAgEkI6hyABIAdBA3RqKQMAIhFCP4d8IBEgEkIGhiATQjqIhCIRfCISIB
    FUrXwhEyAXIARBBHQgAmpBOGoiAEEIaikDAH0gFSAAKQMAIhFUrX0hFyAOQQhqIQ4gDUEIaiENIA9BAWohDyAVIBF9IRU
    gByEEDAALAAsgBkEHQdSewAAQPAAL+QkBBH8jAEGACWsiAiQAIAJBgAhqIAAQXiACIAJBgAhqEF4gAkGACGogAEGAAWoi
    BBBeIAJBgAFqIAJBgAhqEF4gAkGACGogARBeIAIgAkGACGoQDyACQYAIaiABQYABaiIFEF4gAkGAAWogAkGACGoQDyAAK
    AKABiEDAkACQCABKAKABkECRwRAIANBAkYNASACQYAIaiAAQYAFahBeIAJBgAJqIAJBgAhqEF4gAkGACGogAUGABWoQXi
    ACQYACaiACQYAIahAPDAILIANBAkYEQCACQYAIaiAAQYAFahBeIAJBgAdqIAJBgAhqQcAAEGcaIAJBgAZqIAJBgAdqEIU
    BIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGABmogAkGAB2oQSCACQYAIakE4EHIaIAJBATYCuAggAkHA
    CGpBOBByIAJB+AhqQQE2AgAgAkGACGogAkGABmoQpQEQsgEgAkGAAmogAkGACGpBgAEQZxoMAgsgAkGACGogAEGABWoQX
    iACQYACaiACQYAIahBeIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAEMAQsgAkGACG
    ogAUGABWoQXiACQYACaiACQYAIahBeIAJBgAhqIABBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAE
    LIAJBgAhqIAAQXiACQYADaiACQYAIahBeIAJBgAhqIAEQXiACQYAEaiACQYAIahBeIAJBgAhqIAQQXiACQYADaiACQYAI
    ahCVASACQYADahCoASACQYAIaiAFEF4gAkGABGogAkGACGoQlQEgAkGABGoQqAEgAkGABWogAkGAA2oQXiACQYAFaiACQ
    YAEahAPIAJBgAZqIAIQXiACQYAGaiACQYABahCVASACQYAGahA6IAJBgAVqIAJBgAZqEJUBIAJBgAhqIAAQXiACQYADai
    ACQYAIahCQASACQYAIaiAAQYAFaiIDEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogARBeIAJBgARqIAJBgAh
    qEJABIAJBgAhqIAFBgAVqIgEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAHaiACQYADahBeIAJBgAdqIAJBgARq
    EA8gAkGABmogAhCQASACQYAGaiACQYACahCVASACQYAGahA6IAJBgAdqIAJBgAZqEJUBIAJBgAhqIAQQXiACQYADaiACQ
    YAIahCQASACQYAIaiADEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogBRBeIAJBgARqIAJBgAhqEJABIAJBgA
    hqIAEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAIaiACQYADahBeIAJBgAhqIAJBgARqEA8gAkGABmogAkGAAWo
    QkAEgAkGABmogAkGAAmoQlQEgAkGABmoQOiACQYAIaiACQYAGahCVASACQYABahBVIAIgAkGAAWoQlQEgACACIAJBgAVq
    EKEBIAJBgAJqEFUgAkGAAmoQqAEgAEGAA2ogAkGAAmoQkAEgAEGAAmoQqQEgAkGACGoQqAEgAkGACGoQVSAAQYAEaiIBI
    AJBgAhqIAJBgAdqEKEBIAAQrAEgARCsASAAQQQ2AoAGIAJBgAlqJAALnwgBB38jAEGgC2siASQAIAFBCGpBoKfAABBfIA
    FBCGpBARCeAQNAIAJBMEYEQCABIAEpAzhCAYc3AzggAUEIakEBEJ4BIAFBCGpBARA7QQAhAiABQYABakE4EHIaIAFB4Ap
    qQTgQchogAUGACWpBOBByGiABQQE2ArgBIAFBwAFqQTgQciEEIAFB+AFqQQE2AgAgAUGAAmpBOBByGiABQbgCakEBNgIA
    IAFBwAJqQTgQchogAUH4AmpBATYCACABQYADakE4EHIaIAFBuANqQQE2AgAgAUHAA2pBOBByGiABQfgDakEBNgIAIAFBg
    ARqQTgQchogAUG4BGpBATYCACABQcAEakE4EHIaIAFB+ARqQQE2AgAgAUGABWpBOBByGiABQbgFakEBNgIAIAFBwAVqQT
    gQchogAUH4BWpBATYCACABQYAGakE4EHIaIAFBuAZqQQE2AgAgAUHABmpBOBByGiABQfgGakEBNgIAIAFBgAdqQTgQcho
    gAUG4B2pBATYCACABQcAHakE4EHIaIAFB+AdqQQE2AgAgAUGACGogAUHgCmpBOBBnGiABQbgIakEBNgIAIAFBwAhqIAFB
    gAlqQTgQZxogAUH4CGpBATYCACABQYAJakHnABByGiABQegJaiAAEIUBIAFB6AlqEEQgAUGoCmogAUEIahBfIAFBqApqE
    EQgAUGoCmoQKUEDaiIFQQJ2IgNBAWohBgJAAkACQAJAAkACQANAAkAgAiAGRgRAIAFBgAFqEGkgBCABQegJahClASABQe
    AKakE4EHIaIAFBATYCmAtBgHkhAgwBCyABQagKaiABQagKakEEEIwBIgcQngEgAUGoCmoQRCACQecARg0CIAFBgAlqIAJ
    qIAc6AAAgAUGoCmpBBBA7IAJBAWohAgwBCwsDQCACBEAgAUHgCmogAUGAAWogAmoiBEHAB2oQpQEgBEGACGoiBCABQeAK
    ahClASAEIAFB6AlqEEggAkFAayECDAELCyAFQZwDTw0BIAFBgAlqIANqLAAAIgJBD0sNAiABQUBrIAFBgAFqIAJBBnRqE
    IUBIANBf2ohAgNAIAJBf0YNBiABQUBrEAMgAUFAaxADIAFBQGsQAyABQUBrEAMgAkHmAEsNBCABQYAJaiACai0AACIDQQ
    9LDQUgAUFAayABQYABaiADQQZ0ahBIIAJBf2ohAgwACwALQecAQecAQYSjwAAQPAALIANB5wBBlKPAABA8AAsgAkEQQaS
    jwAAQPAALIAJB5wBBtKPAABA8AAsgA0EYdEEYdUEQQcSjwAAQPAALIAFBQGsQEiAAIAFBQGsQpQEgAUGgC2okAAUgAUEI
    aiACaiIDIANBCGopAwBCOYZCgICAgICAgIACgyADKQMAQgGHhDcDACACQQhqIQIMAQsLC8EHAhJ/BX4jAEGQAmsiBCQAI
    ABB8AAQciEPIARBMGpB4AEQchogBEEwaiEAAkADQCADQThGBEACQCAPIAQpAzAiGEL//////////wODNwMAIAFBCGohCS
    ACQQhqIQogAiEMIAEhDUF4IRBBASEGIBghFSAEQThqKQMAIhkhFwNAAkAgF0IGhiAVQjqIhCEWIBdCOochFyAGQQdGBEA
    gAUEIaiEMIAJBCGohDUEHIQBBBiEKDAELIAsgBkEBdiIFayEAIAwgBUEDdCIIayERIA0gCGshEiAEQTBqIAZBBHRqIgVB
    CGopAwAgGXwgBSkDACIVIBh8IhggFVStfCIZIBd8IBYgGHwiFSAYVK18IRcgCEFQaiETIAggEGohFCAGQQFqIQ5BACEDI
    AkhByAKIQUDQCADIBRGBEAgDyAGQQN0aiAVQv//////////A4M3AwAgDEEIaiEMIA1BCGohDSALQQFqIQsgEEF4aiEQIA
    4hBgwDCyADIBNGDQYgAEEGSw0DIARBEGogAyARaikDACAFIAhqKQMAfSIWIBZCP4cgByAIaikDACADIBJqKQMAfSIWIBZ
    CP4cQMSAEKQMQIhYgFXwiFSAWVK0gBEEYaikDACAXfHwhFyAAQX9qIQAgB0EIaiEHIAVBCGohBSADQXhqIQMMAAsACwsD
    QAJAIABBDUcEQCAKIABBAXYiBWshByACIAVBA3QiCWshCCABIAlrIQsgGSAAQQR0IARqQUBqIgVBCGopAwB9IBggBSkDA
    CIVVK19IhkgF3wgGCAVfSIYIBZ8IhcgGFStfCEVIABBAWohBkEwIQMgDCEFIA0hDgNAIAMgCUYNAiAHQQZNBEAgBCADIA
    hqKQMAIAkgDmopAwB9IhYgFkI/hyAFIAlqKQMAIAMgC2opAwB9IhYgFkI/hxAxIAQpAwAiFiAXfCIXIBZUrSAEQQhqKQM
    AIBV8fCEVIAdBf2ohByAFQQhqIQUgDkEIaiEOIANBeGohAwwBCwsgB0EHQYSewAAQPAALIA8gFjcDaCAEQZACaiQADwsg
    DyAAQQN0aiAXQv//////////A4M3AwAgFUIGhiAXQjqIhCEWIAJBCGohAiABQQhqIQEgCkEBaiEKIBVCOochFyAGIQAMA
    AsACwUgBEEgaiACIANqKQMAIhUgFUI/hyABIANqKQMAIhUgFUI/hxAxIAAgBEEoaikDADcDCCAAIAQpAyA3AwAgAEEQai
    EAIANBCGohAwwBCwsgAEEHQfSdwAAQPAALQQdBB0HkncAAEDwAC8sIAQV/IABBeGoiASAAQXxqKAIAIgNBeHEiAGohAgJ
    AAkAgA0EBcQ0AIANBA3FFDQEgASgCACIDIABqIQAgASADayIBQey4wQAoAgBGBEAgAigCBEEDcUEDRw0BQeS4wQAgADYC
    ACACIAIoAgRBfnE2AgQgASAAQQFyNgIEIAAgAWogADYCAA8LIAEgAxAVCwJAIAJBBGoiBCgCACIDQQJxBEAgBCADQX5xN
    gIAIAEgAEEBcjYCBCAAIAFqIAA2AgAMAQsCQCACQfC4wQAoAgBHBEBB7LjBACgCACACRg0BIAIgA0F4cSICEBUgASAAIA
    JqIgBBAXI2AgQgACABaiAANgIAIAFB7LjBACgCAEcNAkHkuMEAIAA2AgAPC0HwuMEAIAE2AgBB6LjBAEHouMEAKAIAIAB
    qIgA2AgAgASAAQQFyNgIEQey4wQAoAgAgAUYEQEHkuMEAQQA2AgBB7LjBAEEANgIAC0GMucEAKAIAIgIgAE8NAkHwuMEA
    KAIAIgBFDQICQEHouMEAKAIAIgNBKUkNAEH8uMEAIQEDQCABKAIAIgQgAE0EQCAEIAEoAgRqIABLDQILIAEoAggiAQ0AC
    wtBlLnBAAJ/Qf8fQYS5wQAoAgAiAEUNABpBACEBA0AgAUEBaiEBIAAoAggiAA0ACyABQf8fIAFB/x9LGws2AgAgAyACTQ
    0CQYy5wQBBfzYCAA8LQey4wQAgATYCAEHkuMEAQeS4wQAoAgAgAGoiADYCACABIABBAXI2AgQgACABaiAANgIADwtBlLn
    BAAJ/AkAgAEGAAk8EQEEfIQIgAUIANwIQIABB////B00EQCAAQQYgAEEIdmciAmtBH3F2QQFxIAJBAXRrQT5qIQILIAFB
    HGogAjYCACACQQJ0QeS3wQBqIQMCQAJAAkACQAJAQdi1wQAoAgAiBEEBIAJBH3F0IgVxBEAgAygCACIDQQRqKAIAQXhxI
    ABHDQEgAyECDAILQdi1wQAgBCAFcjYCACADIAE2AgAMAwsgAEEAQRkgAkEBdmtBH3EgAkEfRht0IQQDQCADIARBHXZBBH
    FqQRBqIgUoAgAiAkUNAiAEQQF0IQQgAiEDIAJBBGooAgBBeHEgAEcNAAsLIAIoAggiACABNgIMIAIgATYCCCABQRhqQQA
    2AgAgASACNgIMIAEgADYCCAwCCyAFIAE2AgALIAFBGGogAzYCACABIAE2AgwgASABNgIIC0GUucEAQZS5wQAoAgBBf2oi
    ADYCACAADQNBhLnBACgCACIADQFB/x8MAgsgAEEDdiICQQN0Qdy1wQBqIQACf0HUtcEAKAIAIgNBASACdCICcQRAIAAoA
    ggMAQtB1LXBACACIANyNgIAIAALIQIgACABNgIIIAIgATYCDCABIAA2AgwgASACNgIIDwtBACEBA0AgAUEBaiEBIAAoAg
    giAA0ACyABQf8fIAFB/x9LGws2AgALC9AHAgp/An4jAEEwayIIJABBJyECAkAgADUCACIMQpDOAFQEQCAMIQ0MAQsDQCA
    IQQlqIAJqIgBBfGogDEKQzgCAIg1C8LF/fiAMfKciA0H//wNxQeQAbiIEQQF0QeaowABqLwAAOwAAIABBfmogBEGcf2wg
    A2pB//8DcUEBdEHmqMAAai8AADsAACACQXxqIQIgDEL/wdcvViANIQwNAAsLIA2nIgBB4wBKBEAgAkF+aiICIAhBCWpqI
    A2nIgNB//8DcUHkAG4iAEGcf2wgA2pB//8DcUEBdEHmqMAAai8AADsAAAsCQCAAQQpOBEAgAkF+aiIFIAhBCWpqIABBAX
    RB5qjAAGovAAA7AAAMAQsgAkF/aiIFIAhBCWpqIABBMGo6AAALQScgBWshA0EBIQJBK0GAgMQAIAEoAgAiAEEBcSIGGyE
    EIABBHXRBH3VB9KrAAHEhByAIQQlqIAVqIQUCQCABKAIIQQFHBEAgASAEIAcQUw0BIAEoAhggBSADIAFBHGooAgAoAgwR
    BQAhAgwBCyABQQxqKAIAIgkgAyAGaiIGTQRAIAEgBCAHEFMNASABKAIYIAUgAyABQRxqKAIAKAIMEQUAIQIMAQsCQAJAA
    kACQCAAQQhxBEAgASgCBCEKIAFBMDYCBCABLQAgIQsgAUEBOgAgIAEgBCAHEFMNBUEAIQIgCSAGayIAIQRBASABLQAgIg
    cgB0EDRhtBA3FBAWsOAwIBAgMLQQAhAiAJIAZrIgAhCQJAAkACQEEBIAEtACAiBiAGQQNGG0EDcUEBaw4DAQABAgsgAEE
    BdiECIABBAWpBAXYhCQwBC0EAIQkgACECCyACQQFqIQIDQCACQX9qIgJFDQQgASgCGCABKAIEIAEoAhwoAhARAwBFDQAL
    QQEhAgwECyAAQQF2IQIgAEEBakEBdiEEDAELQQAhBCAAIQILIAJBAWohAgJAA0AgAkF/aiICRQ0BIAEoAhggASgCBCABK
    AIcKAIQEQMARQ0AC0EBIQIMAgsgASgCBCEHQQEhAiABKAIYIAUgAyABKAIcKAIMEQUADQEgBEEBaiEAIAEoAhwhAyABKA
    IYIQQDQCAAQX9qIgAEQCAEIAcgAygCEBEDAEUNAQwDCwsgASALOgAgIAEgCjYCBEEAIQIMAQsgASgCBCEGQQEhAiABIAQ
    gBxBTDQAgASgCGCAFIAMgASgCHCgCDBEFAA0AIAlBAWohACABKAIcIQMgASgCGCEBA0AgAEF/aiIARQRAQQAhAgwCCyAB
    IAYgAygCEBEDAEUNAAsLIAhBMGokACACC7gGAQV/IwBBgAhrIgIkACACIAAQXiACIAEQDyACQYABaiAAQYABaiIDEF4gA
    kGAAWogAUGAAWoiBRAPIAJBgAJqIABBgAJqIgQQXiACQYACaiABQYACaiIGEA8gAkGAA2ogABBeIAJBgANqIAMQlQEgAk
    GAA2oQqAEgAkGABGogARBeIAJBgARqIAUQlQEgAkGABGoQqAEgAkGAA2ogAkGABGoQDyACQYAEaiACEJABIAJBgARqIAJ
    BgAFqEJUBIAJBgANqIAJBgARqEH0gAkGAA2oQqAEgAkGABGogAxCQASACQYAEaiAEEJUBIAJBgARqEKgBIAJBgAVqIAUQ
    XiACQYAFaiAGEJUBIAJBgAVqEKgBIAJBgARqIAJBgAVqEA8gAkGABWogAkGAAWoQkAEgAkGABWogAkGAAmoQlQEgAkGAB
    GogAkGABWoQfSACQYAEahCoASACQYAFaiAAEJABIAJBgAVqIAQQlQEgAkGABWoQqAEgAkGABmogARBeIAJBgAZqIAYQlQ
    EgAkGABmoQqAEgAkGABWogAkGABmoQDyACQYAGaiACEJABIAJBgAZqIAJBgAJqEJUBIAJBgAZqIAJBgAVqELUBIAJBgAZ
    qEKgBIAJBgAVqIAIQkAEgAkGABWogAhCVASACIAJBgAVqEJUBIAIQqAEgAkGAAmpBDBCfASACQYACahBVIAJBgAJqEKgB
    IAJBgAdqIAJBgAFqEF4gAkGAB2ogAkGAAmoQlQEgAkGAB2oQqAEgAkGAAWogAkGAAmoQfSACQYABahCoASACQYAGakEME
    J8BIAJBgAZqEFUgAkGABmoQqAEgAkGABWogAkGABmoQkAEgAkGABWogAkGABGoQDyACQYACaiACQYADahCQASACQYACai
    ACQYABahAPIAJBgAVqIAJBgAJqELUBIAJBgAZqIAIQDyACQYABaiACQYAHahAPIAJBgAZqIAJBgAFqEJUBIAIgAkGAA2o
    QDyACQYAHaiACQYAEahAPIAJBgAdqIAIQlQEgACACQYAFahCQASAAEKgBIAMgAkGABmoQkAEgAxCoASAEIAJBgAdqEJAB
    IAQQqAEgAkGACGokAAv2BQEFfyMAQYAEayICJAAgAiAAEIUBIAIgARBIIAJBQGsgAEFAayIDEIUBIAJBQGsgAUFAayIFE
    EggAkGAAWogAEGAAWoiBBCFASACQYABaiABQYABaiIGEEggAkHAAWogABCFASACQcABaiADEHggAkHAAWoQRCACQYACai
    ABEIUBIAJBgAJqIAUQeCACQYACahBEIAJBwAFqIAJBgAJqEEggAkGAAmogAhClASACQYACaiACQUBrEHggAkHAAWogAkG
    AAmoQgAEgAkHAAWoQRCACQYACaiADEKUBIAJBgAJqIAQQeCACQYACahBEIAJBwAJqIAUQhQEgAkHAAmogBhB4IAJBwAJq
    EEQgAkGAAmogAkHAAmoQSCACQcACaiACQUBrEKUBIAJBwAJqIAJBgAFqEHggAkGAAmogAkHAAmoQgAEgAkGAAmoQRCACQ
    cACaiAAEKUBIAJBwAJqIAQQeCACQcACahBEIAJBgANqIAEQhQEgAkGAA2ogBhB4IAJBgANqEEQgAkHAAmogAkGAA2oQSC
    ACQYADaiACEKUBIAJBgANqIAJBgAFqEHggAkGAA2ogAkHAAmoQswEgAkGAA2oQRCACQcACaiACEKUBIAJBwAJqIAIQeCA
    CIAJBwAJqEHggAhBEIAJBgAFqQQwQUiACQcADaiACQUBrEIUBIAJBwANqIAJBgAFqEHggAkHAA2oQRCACQUBrIAJBgAFq
    EIABIAJBQGsQRCACQYADakEMEFIgAkHAAmogAkGAA2oQpQEgAkHAAmogAkGAAmoQSCACQYABaiACQcABahClASACQYABa
    iACQUBrEEggAkHAAmogAkGAAWoQswEgAkGAA2ogAhBIIAJBQGsgAkHAA2oQSCACQYADaiACQUBrEHggAiACQcABahBIIA
    JBwANqIAJBgAJqEEggAkHAA2ogAhB4IAAgAkHAAmoQpQEgABBEIAMgAkGAA2oQpQEgAxBEIAQgAkHAA2oQpQEgBBBEIAJ
    BgARqJAALxQUBBH8jAEHwEmsiACQAIAAQOEF/IQEgABCIAUUEQCAAQYADakE4EHIaIABBuANqQTgQchogAEG4A2ogAEGA
    A2oQVCAAQfAKakG4gMAAEF8gAEHwDWpB8IDAABBfIABB8ANqIABB8ApqIABB8A1qEEkgAEHwBGpBOBByGiAAQQE2AqgFI
    ABBsAVqQTgQchogAEHoBWpBATYCACAAQfAFakE4EHIaIABBATYCqAYgAEGwBmpBOBByGiAAQegGakEBNgIAIABB8AZqQT
    gQchogAEEBNgKoByAAQbAHakE4EHIaIABB6AdqQQE2AgBBf2ohAyAAQfAHahAqIABB8AdqIAAQfiAAQfAKahAqIABB8Ap
    qIABB8AdqEH4gAEHwDWoQKiAAQfANaiAAQfAHahB+IABB8A1qEJwBAkACQAJAA0AgAiEBIANBAkkNAyAAQfAKaiAAQfAE
    aiAAQfAFaiAAQfAGahAlIAFBxABNBEAgAEHwEGogAEHwBGogAEHwBWogAEHwBmoQRiABQQh0QdCrwABqIABB8BBqEJIBI
    AFBAWohAgJAAkAgAEG4A2ogA0F/aiIDEFcgAEGAA2ogAxBXa0EBag4DAQMAAwsgAEHwCmogAEHwB2ogAEHwBGogAEHwBW
    ogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYgAkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQI
    MAgsgAEHwCmogAEHwDWogAEHwBGogAEHwBWogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYg
    AkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQIMAQsLIAFBxQBBvIHAABA8AAtBxQBBxQBBzIHAABA8AAtBxQBBxQBB3IHAA
    BA8AAtBACEBCyAAQfASaiQAIAEL8gQBBH8jAEGADGsiAiQAIAIgABCOASACQYACahAvIAJBgARqIABBgAJqIgMQjgEgAk
    GABmoQLyACQYAIaiAAEI4BIAJBgApqIAEQjgEgAiABEBkgAkGABGogAUGAAmoiBBAZIAJBgAhqIAMQlgEgAkGACmogBBC
    WASACQYAIahCsASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAMQkgEgAkGACGogAEGA
    BGoiBRCWASACQYAKaiAEEJIBIAJBgApqIAFBgARqIgQQlgEgAkGACGoQrAEgAkGACmoQrAEgAkGABmogAkGACGoQkgEgA
    kGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAIahCWAS
    ADIAJBgAJqEJIBIAMgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQYAIaiA
    FEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBBCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIAJBgAhq
    EJYBIAJBgAhqIAUQkgEgAkGACGogBBAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgBSACQYAEahCSASAFIAJBgApqEJYBI
    AJBgAZqIAJBgApqEJYBIAJBgAhqEGYgAyACQYAIahCWASACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIA
    BBBTYCgAYgABCZASACQYAMaiQAC68EAQV/IwBBkAZrIgIkACAAQUBrIQQCQCABQfgAaigCACABKAI4aqwgAEH4AGooAgA
    iAyAAKAI4IgVqrH5CgICAEFMNACAFQQJOBH8gABASIAAoAngFIAMLQQJIDQAgBBASCyACQaCnwAAQX0EAIQMgAkE4akHw
    ABByGiABQUBrIQUDQCADQThGBEAgAkHwAGohBkEAIQMDQCADQThGRQRAIAMgBmogAiADaikDADcDACADQQhqIQMMAQsLI
    AJBqAFqIAAQXyACQeABaiABEF8gAkGYAmogACABEAggAkGIA2ogBCAFEAggAkGoAWogBBBhIAJBqAFqEEQgAkHgAWogBR
    BhIAJB4AFqEEQgAkH4A2ogAkGoAWogAkHgAWoQCEEAIQMgAkHoBGpB8AAQchoDQCADQfAARkUEQCACQegEaiADaiACQZg
    CaiADaikDADcDACADQQhqIQMMAQsLIAJB6ARqIAJBiANqEGVBACEDA0AgA0HwAEZFBEAgAkGIA2ogA2oiASACQThqIANq
    KQMAIAEpAwB9NwMAIANBCGohAwwBCwsgAkGYAmogAkGIA2oQZSACQZgCahBFIAJB+ANqIAJB6ARqEGQgAkH4A2oQRSACQ
    dgFaiACQZgCahAFIAAgAkHYBWoQayAAQQM2AjggAkHYBWogAkH4A2oQBSAEIAJB2AVqEGsgAEECNgJ4IAJBkAZqJAAFIA
    JBOGogA2pCADcDACADQQhqIQMMAQsLC5QEAQF/IwBB0CJrIgMkACADQcAWakG4gMAAEF8gA0HIHGpB8IDAABBfIANBCGo
    gA0HAFmogA0HIHGoQSSADQYgBakE4EHIaIANBwAFqQTgQchogA0H4AWoQKgJAIAIQhAFFBEAgA0H4BGoQKiADQfgEaiAB
    EH4gA0H4BGoQSiADQfgHahBLIANB+AdqIAIQfyADQfgHahBHIANByBxqIANB+AdqEIUBIANBuAlqIANByBxqEIUBIANBy
    BxqIANBuAhqEIUBIANB+AlqIANByBxqEIUBIANBuApqECogA0G4DWoQYCADQbgKaiADQfgEahB+IANBwBNqECogA0HAE2
    ogA0H4BGoQfiADQcATahCcASADQcABaiADQYgBahBUQX9qIQIDQCACQQFNBEAgA0G4DWoQkwEgACADQbgNakGIBhBnGgw
    DBSADQbgNahAbIANBwBZqIANBuApqIANBuAlqIANB+AlqEBcCQAJAAkAgA0HAAWogAkF/aiICEFcgA0GIAWogAhBXa0EB
    ag4DAQIAAgsgA0HIHGogA0G4CmogA0H4BGogA0G4CWogA0H4CWoQFiADQcAWaiADQcgcahAGDAELIANByBxqIANBuApqI
    ANBwBNqIANBuAlqIANB+AlqEBYgA0HAFmogA0HIHGoQBgsgA0G4DWogA0HAFmoQBAwBCwALAAsgABBgCyADQdAiaiQAC8
    MDARV/A0AgAUHAAUYEQAJAIABBKGohCyAAQRRqKAIAIgwhCCAAQRBqKAIAIg0hAyAAQQxqKAIAIg4hAiAAKAIIIg8hASA
    AQRhqKAIAIhAhCiAAQRxqKAIAIhEhBCAAQSBqKAIAIhIhByAAQSRqKAIAIhMhBgNAIAchCSAEIQcgCiEEIAVBgAJGDQEg
    AiADcSEUIAIgA3MhFSAFIAtqKAIAIAVB9J7AAGooAgAgBEEadyAEQRV3cyAEQQd3cyAGaiAJIARBf3NxIAQgB3FyampqI
    gYgCGohCiAFQQRqIQUgAyEIIAIhAyABIQIgAUEedyABQRN3cyABQQp3cyAUIAEgFXFzaiAGaiEBIAkhBgwACwALBSAAIA
    FqIgNB6ABqIANBzABqKAIAIANBKGooAgAgA0EsaigCACICQRl3IAJBDndzIAJBA3ZzIANB4ABqKAIAIgJBD3cgAkENd3M
    gAkEKdnNqamo2AgAgAUEEaiEBDAELCyAAIAYgE2o2AiQgACAJIBJqNgIgIAAgByARajYCHCAAIAQgEGo2AhggACAIIAxq
    NgIUIAAgAyANajYCECAAIAIgDmo2AgwgACABIA9qNgIIC9YDAgZ/An4jAEHwAGsiASQAIAFBoKfAABBfIAFBOGogARBfI
    AAQRAJAAkACQCABAn8gACgCOCICQRBMBEAgAkF/ahA5DAELIAEpAzAiCEIBfCIHIAhUDQEgACkDMCIIQoCAgICAgICAgH
    9RQQAgB0J/URsNAiABQThqIAggB3+nECghByABIAEpA2ggB0I6hnw3A2ggACABQThqEGIgABBEQQILIgMQLSAAQQhqIQQ
    DQCADRQ0DIAEgASkDCEI5hkKAgICAgICAgAKDIAEpAwBCAYeEIgc3AwAgASAAKQMAIAd9IgdC//////////8DgzcDOEEA
    IQIDQCAHQjqHIQcgAkEoRkUEQCABIAJqIgVBCGoiBiAFQRBqKQMAQjmGQoCAgICAgICAAoMgBikDAEIBh4QiCDcDACABI
    AJqQUBrIAIgBGopAwAgCH0gB3wiB0L//////////wODNwMAIAJBCGohAgwBCwsgASABKQMwQgGHIgg3AzAgASAAKQMwIA
    h9IAd8Igc3A2ggACABQThqIAdCP4enQQFqEE8gA0F/aiEDDAALAAtBoKLAAEEZQbyiwAAQWwALQdCiwABBH0G8osAAEFs
    ACyAAQQE2AjggAUHwAGokAAuhAwEBfyMAQZADayIGJAAgBkEIakHAABByGiAGQcgAakGoAhByGiAGQcgAahBDA0AgAQRA
    IAZByABqQQAQPiABQX9qIQEMAQUCQCACBEAgBkHIAGogAiADEHoLIAQEQCAGQcgAaiAEIAUQegsgBkGIA2pCADcDACAGQ
    YADakIANwMAIAZB+AJqQgA3AwAgBkIANwPwAiAGKAJIIQEgBigCTCECIAZByABqQYABED4DQCAGKAJIQf8DcUHAA0ZFBE
    AgBkHIAGpBABA+DAELCyAGQawBaiABNgIAIAZBqAFqIAI2AgAgBkHIAGoQEUEAIQJBACEBA0AgAUEgRkUEQCAGQfACaiA
    BaiABQXxxIAZqQdAAaigCACACQX9zQRhxdjoAACACQQhqIQIgAUEBaiEBDAELCyAGQcgAahBDQQAhAQNAIAFBIEZFBEAg
    BkEIaiABaiAGQfACaiABai0AADoAACABQQFqIQEMAQsLQQAhAQNAIAFBIEYNASAAIAFqIAZBCGogAWotAAA6AAAgAUEBa
    iEBDAALAAsLCyAGQZADaiQAC6EDAQN/IwBBgAZrIgEkACABIABBgAFqIgMQXiABQYABaiADEF4gAUGAAWoQMiABQYACai
    ABEF4gAUGAAmogAEGAAmoiAhAPIAFBgANqIAIQXiABQYADahAyIAIgAUGAAWoQkAEgAiABQYABahCVASACEKgBIAIQpwE
    gAhCnASACEKgBIAFBgANqQQwQnwEgAUGAA2oQVSABQYADahCoASABQYAEaiABQYADahBeIAFBgARqIAIQDyABQYAFaiAB
    QYABahBeIAFBgAVqIAFBgANqEJUBIAFBgAVqEKgBIAIgAUGAAmoQDyABQYACaiABQYADahCQASABQYACaiABQYADahCVA
    SABQYADaiABQYACahCVASABQYADahCoASABQYABaiABQYADahB9IAFBgAFqEKgBIAFBgAVqIAFBgAFqEA8gAUGABWogAU
    GABGoQlQEgAUGAAmogABCQASABQYACaiABEA8gACABQYABahCQASAAEKgBIAAgAUGAAmoQDyAAEKcBIAAQqAEgAyABQYA
    FahCQASADEKgBIAFBgAZqJAALhQMBBH8CQAJAIAFBgAJPBEAgAEEYaigCACEEAkACQCAAIAAoAgwiAkYEQCAAQRRBECAA
    QRRqIgIoAgAiAxtqKAIAIgENAUEAIQIMAgsgACgCCCIBIAI2AgwgAiABNgIIDAELIAIgAEEQaiADGyEDA0AgAyEFIAEiA
    kEUaiIDKAIAIgFFBEAgAkEQaiEDIAIoAhAhAQsgAQ0ACyAFQQA2AgALIARFDQIgACAAQRxqKAIAQQJ0QeS3wQBqIgEoAg
    BHBEAgBEEQQRQgBCgCECAARhtqIAI2AgAgAkUNAwwCCyABIAI2AgAgAg0BQdi1wQBB2LXBACgCAEF+IAAoAhx3cTYCAA8
    LIABBDGooAgAiAiAAQQhqKAIAIgBHBEAgACACNgIMIAIgADYCCA8LQdS1wQBB1LXBACgCAEF+IAFBA3Z3cTYCAAwBCyAC
    IAQ2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgAEEUaigCACIARQ0AIAJBFGogADYCACAAIAI2AhgLC7MCAQF/IwBBg
    AtrIgUkACAFEC8gBUGAAmoQLyAFQYAEahAvIAVBgAZqQTgQchogBUEBNgK4BiAFQcAGakE4EHIaIAVB+AZqQQE2AgAgBU
    GAB2pBOBByGiAFQQE2ArgHIAVBwAdqQTgQchogBUH4B2pBATYCACAFQYAIakE4EHIaIAVBATYCuAggBUHACGpBOBByGiA
    FQfgIakEBNgIAIAEgAiAFQYAGaiAFQYAHaiAFQYAIahAeIAVBgAhqIAMQoAEgBUGABmogBBCgASAFQYAJaiAFQYAGaiAF
    QYAHahCRASAFIAVBgAlqEJIBIAVBgAlqIAVBgAhqEJsBIAVBgARqIAVBgAlqEJIBIAVBgARqEGYgACAFIAVBgAJqIAVBg
    ARqEHYgAEEDNgKABiAFQYALaiQAC7ECAQF/IwBBgAtrIgQkACAEEC8gBEGAAmoQLyAEQYAEahAvIARBgAZqQTgQchogBE
    EBNgK4BiAEQcAGakE4EHIaIARB+AZqQQE2AgAgBEGAB2pBOBByGiAEQQE2ArgHIARBwAdqQTgQchogBEH4B2pBATYCACA
    EQYAIakE4EHIaIARBATYCuAggBEHACGpBOBByGiAEQfgIakEBNgIAIAEgBEGABmogBEGAB2ogBEGACGoQJSAEQYAIaiAC
    EKABIARBgAZqIAMQoAEgBEGACWogBEGABmogBEGAB2oQkQEgBCAEQYAJahCSASAEQYAJaiAEQYAIahCbASAEQYAEaiAEQ
    YAJahCSASAEQYAEahBmIAAgBCAEQYACaiAEQYAEahB2IABBAzYCgAYgBEGAC2okAAvJAgEDfyMAQcACayIBJAAgASAAQU
    BrIgMQhQEgARADIAFBQGsgAxCFASABQUBrIABBgAFqIgIQSCABQYABaiACEIUBIAFBgAFqEAMgAiABEKUBIAIgARB4IAI
    QRCACEE4gAhBOIAIQRCABQYABakEMEFIgAUHAAWogAUGAAWoQhQEgAUHAAWogAhBIIAFBgAJqIAEQhQEgAUGAAmogAUGA
    AWoQeCABQYACahBEIAIgAUFAaxBIIAFBQGsgAUGAAWoQpQEgAUFAayABQYABahB4IAFBgAFqIAFBQGsQeCABIAFBgAFqE
    IABIAEQRCABQYACaiABEEggAUGAAmogAUHAAWoQeCABQUBrIAAQpQEgAUFAayADEEggACABEKUBIAAQRCAAIAFBQGsQSC
    AAEE4gABBEIAMgAUGAAmoQpQEgAxBEIAFBwAJqJAALrQIBA38jAEGABGsiAiQAIAIgABBeIAJBgAFqIABBgAFqIgMQXiA
    CQYACakE4EHIaIAJBATYCuAIgAkHAAmpBOBByGiACQfgCakEBNgIAIAJBgANqIAMQXiACIAEQDyACQYABaiABQYABaiIE
    EA8gAkGAAmogBBCQASACQYACaiABEJUBIAJBgANqIAAQlQEgAkGAAmoQqAEgAkGAA2oQqAEgAkGAA2ogAkGAAmoQDyACQ
    YACaiACEJABIAJBgAJqEDogAkGAA2ogAkGAAmoQlQEgAkGAA2oQqAEgAkGAAmogAkGAAWoQkAEgAkGAAmoQOiADIAJBgA
    NqEJABIAMgAkGAAmoQlQEgAkGAAWoQVSAAIAJBgAFqEJABIAAgAhCVASAAEKwBIAJBgARqJAALvQIBA38jAEGACGsiASQ
    AIAEgABCOASABQYACaiAAQYAEaiICEI4BIAFBgARqIABBgAJqIgMQjgEgAUGABmoQLyAAECIgAUGABmogABCSASABQYAG
    aiAAEJYBIAAgAUGABmoQlgEgABCsASABELYBIAEQrwEgACABEJYBIAFBgAJqECIgAUGAAmoQZiABQYAGaiABQYACahCSA
    SABQYAGaiABQYACahCWASABQYACaiABQYAGahCWASABQYACahCsASABQYAEahAiIAFBgAZqIAFBgARqEJIBIAFBgAZqIA
    FBgARqEJYBIAFBgARqIAFBgAZqEJYBIAFBgARqEKwBIAMQrgEgAxCvASACELYBIAIQrwEgAyABQYACahCWASACIAFBgAR
    qEJYBIABBBTYCgAYgABCaASABQYAIaiQAC7ICAQN/IwBBgAhrIgEkACAAKAKABkEBRwRAIAEgABCOASABQYACaiAAQYAC
    aiIDEI4BIAFBgARqIABBgARqIgIQjgEgAUGABmogABCOASABECIgAUGAAmogAhAZIAFBgAJqEK8BIAFBgAJqEKwBIAFBg
    ARqECIgAUGABmogAxAZIAFBgAZqEK8BIAIgABCWASACIAMQlgEgAhCsASACECIgACABEJIBIAEgAUGAAmoQlgEgARCsAS
    ABIAFBgARqEJYBIAEgAUGABmoQlgEgARCsASABECsgAUGAAmoQZiABQYAEahBmIAAgAUGAAmoQlgEgAyABQYAEahCSASA
    DIAFBgAZqEJYBIAIgARCWASAAQQRBBSAAKAKABkF+cUECRhs2AoAGIAAQmQELIAFBgAhqJAALigIBAn8jAEHgAWsiAiQA
    IAAQRCACQQhqQTAQchogAkIBNwMAIAJBOGogABBfIAJB8ABqIAEQXyACQagBakE4EHIaIAAQdANAIAJBOGogAkHwAGoQN
    UF/TARAA0ACQCADQQBMDQAgAkHwAGpBARA7IAJBARA7IAJBqAFqIAJBOGoQayACQagBaiACQfAAahBiIAJBqAFqEEQgAk
    E4aiACQagBaiACKQPYAUI/h6dBAWoiARBPIAJBqAFqIAAQayACQagBaiACEGEgAkGoAWoQRCAAIAJBqAFqIAEQTyADQX9
    qIQMMAQsLBSACQQEQLSACQfAAakEBEC0gA0EBaiEDDAELCyACQeABaiQAC54CAQF/IwBBgA1rIgMkACADIAEQaiADEJkB
    IANBiAZqIAIQXyADQYgGahBEIANBwAZqIANBiAZqEF8gA0HABmpBAxAoGiADQcAGahBEIANB+AZqIAMQagJAIANBwAZqE
    FpFBEAgA0HABmoQKUF/aiECA0AgAkEBTQRAIANB+AZqEJoBDAMLIANB+AZqEBoCQAJAIANBwAZqIAJBf2oiAhBXIANBiA
    ZqIAIQV2tBAWoOAwECAAILIANB+AZqIAMQDgwBCyADEJMBIANB+AZqIAMQDiADEJMBDAALAAsgA0H4BmoQsAEgA0H4B2o
    QqQEgA0H4CGoQrQEgA0H4CmoQrQEgA0EBNgL4DAsgACADQfgGakGIBhBnGiADQYANaiQAC5ACAQJ/IwBBgAJrIgUkACAF
    QYABaiAAEF4gAiAFQYABahCQASAFQYABaiAAQYABahBeIAQgBUGAAWoQkAEgBUGAAWogAEGAAmoiBhBeIAUgBUGAAWoQX
    iAFQYABaiAGEF4gAyAFQYABahCQASAFQYABaiABQYABaiIGEF4gBSAFQYABahAPIAVBgAFqIAEQXiADIAVBgAFqEA8gAi
    ADEH0gAhCoASAEIAUQfSAEEKgBIAUgAhCQASACEFUgAhCoASAFQYABaiAGEF4gBSAFQYABahAPIAMgBBCQASAFQYABaiA
    BEF4gAyAFQYABahAPIAMgBRB9IAMQqAEgBBA6IAQQqAEgACABEAsgBUGAAmokAAvkAQECfyMAQcABayIDJAAgAxBLIAAg
    ASACQR91IgQgAnMgBEF/c2pBAm0iAkF/akEfdhBtIAAgAUHAAWogAkEBc0F/akEfdhBtIAAgAUGAA2ogAkECc0F/akEfd
    hBtIAAgAUHABGogAkEDc0F/akEfdhBtIAAgAUGABmogAkEEc0F/akEfdhBtIAAgAUHAB2ogAkEFc0F/akEfdhBtIAAgAU
    GACWogAkEGc0F/akEfdhBtIAAgAUHACmogAkEHc0F/akEfdhBtIAMgABB/IAMQpgEgACADIARBAXEQbSADQcABaiQAC+Q
    BAQJ/IwBBgANrIgMkACADECogACABIAJBH3UiBCACcyAEQX9zakECbSICQX9qQR92EG8gACABQYADaiACQQFzQX9qQR92
    EG8gACABQYAGaiACQQJzQX9qQR92EG8gACABQYAJaiACQQNzQX9qQR92EG8gACABQYAMaiACQQRzQX9qQR92EG8gACABQ
    YAPaiACQQVzQX9qQR92EG8gACABQYASaiACQQZzQX9qQR92EG8gACABQYAVaiACQQdzQX9qQR92EG8gAyAAEH4gAxCcAS
    AAIAMgBEEBcRBvIANBgANqJAALvAEBAn8jAEGwAWsiAiQAIAJBMBByIQIDQCADQTBGBEACQCABQTBqIQEgAkEwaiACEHV
    BACEDA0AgA0EwRg0BIAIgA2ogASADai0AADoAACADQQFqIQMMAAsACwUgAiADaiABIANqLQAAOgAAIANBAWohAwwBCwsg
    AkHwAGogAhB1IABBOBByIgBBATYCOCAAQUBrQTgQciAAQfgAakEBNgIAIAAgAkHwAGoQpQEgAkEwahClASACQbABaiQAC
    9QBAQJ/IwBBgANrIgEkACABIAAQXiABQYABaiAAQYABaiICEF4gAUGAAmogABBeIAFBgAJqIAIQDyABIAIQlQEgAUGAAW
    oQVSABQYABaiAAEJUBIAEQqAEgAUGAAWoQqAEgACABEJABIAAgAUGAAWoQDyABQYABaiABQYACahCQASABQYABahBVIAF
    BgAFqIAFBgAJqEJUBIAFBgAFqEKgBIAFBgAFqEDogACABQYABahCVASABQYACahCnASACIAFBgAJqEJABIAAQrAEgAUGA
    A2okAAvEAQEBfyMAQYADayIDJAAgA0EIaiABEIUBAkAgAkUEQCADQQhqEAcMAQsgA0EIaiACEKUBCyADQcgAakHYo8AAE
    F8gA0GAAWogA0HIAGoQiwEgA0HAAWogA0EIahCFASADQcABahADIANBwAFqIAEQSCAAIAEQhQEgACADQQhqEEggA0GAAm
    ogA0HAAWoQhQEgABBYIQEgA0HAAmogABCFASADQcACahBBIANBwAJqEEQgACADQcACaiABEHkgA0GAA2okAAufAQEBfyM
    AQfAAayICJAAgAiABEF9BACEBIAJBOGpBOBByGiAAEEQCQCAAIAIQNUEASA0AA0AgAkEBEC0gAUEBaiEBIAAgAhA1QX9K
    DQALA0AgAUEATA0BIAJBARA7IAJBOGogABBrIAJBOGogAhBiIAJBOGoQRCAAIAJBOGogAikDaEI/h6dBAWoQTyABQX9qI
    QEMAAsACyACQfAAaiQAC7IBAQF/IwBBgAJrIgQkACAEQYABaiAAEF4gAyAEQYABahCQASAEQYABaiAAQYABahBeIAQgBE
    GAAWoQXiAEQYABaiAAQYACahBeIAIgBEGAAWoQkAEgASAEEJABIAEgAhAPIAMQMiAEEDIgAhAyIAEQpwEgARA6IAEQqAE
    gARBVIAEQqAEgAkEMEJ8BIANBAxCfASACEFUgAhCoASACIAQQfSACEKgBIAAQFCAEQYACaiQAC58BAQJ/IwBBgAJrIgIk
    ACAAIAEQXiAAEDIgAkGIAWpB2KTAABBfIAJBCGpBOBByGiACQQE2AkAgAkHIAGpBOBByIAJBgAFqQQE2AgAgAkHAAWogA
    kGIAWoQiwEgAkEIaiACQcABahClARCyASACQQhqEKgBIAJBCGoQVSACQQhqEKgBIAAgARAPIAAgAkEIahCVASAAEKsBIA
    JBgAJqJAALowEBAX8jAEEwayIGJAAgBkEQaiAAIAEQsQEgBiAGKAIUIgA2AhwgBiAGKAIQIgE2AhggBkEIaiACIAMQsQE
    gBiAGKAIMIgI2AiQgBiAGKAIIIgM2AiAgBiAEIAUQsQEgBiAGKAIEIgQ2AiwgBiAGKAIAIgU2AiggASAAIAMgAiAFIAQQ
    ACAGQShqEKQBIAZBIGoQpAEgBkEYahCkASAGQTBqJAALiAECA38DfiMAQRBrIgIkAAN+IANBOEYEfiACQRBqJAAgBgUgA
    iAAIANqIgQpAwAiBSAFQj+HIAGsIgUgBUI/hxAxIAQgAikDACIHIAZ8IgVC//////////8DgzcDACAFIAdUrSACQQhqKQ
    MAIAZCP4d8fEIGhiAFQjqIhCEGIANBCGohAwwBCwsLhAECA38BfiMAQUBqIgEkACABQQhqIAAQXyABQQhqEEQgAUE4aiE
    CQQYhA0HcAiEAAn8DQEEAIANBAEgNARogAikDACIEUARAIAJBeGohAiAAQUZqIQAgA0F/aiEDDAELCwN/IARQBH8gAAUg
    AEEBaiEAIARCAn8hBAwBCwsLIAFBQGskAAuHAQEBfyMAQcABayIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAa
    kEBNgIAIAEQUCABQYgBakE4EHIaIABBgAFqIAFBgAEQZxogAEGAAmpBOBByGiAAQbgCakEBNgIAIABBvAJqIAFBhAFqQT
    wQZxogAEH4AmpBATYCACABQcABaiQAC48BAQJ/IwBBgAJrIgEkACAAEKwBIAEgABBeIAFBgAFqQTgQchogAUEBNgK4ASA
    BQcABakE4EHIaIAFB+AFqQQE2AgAgASAAQYABaiICEJUBIAEQOiABQYABaiABEJABIAFBgAFqIAIQlQEgAiABEJABIAIg
    ABCVASAAIAFBgAFqEJABIAAQrAEgAUGAAmokAAt9AgF/An4jAEGAAWsiASQAIAFBCGogABCFASABQQhqEBIgAUHIAGogA
    UEIahCDAUEIIQADQCAAQThGRQRAIAFByABqIABqKQMAIAKEIQIgAEEIaiEADAELCyABKQNIIQMgAUGAAWokACACQn98IA
    NCAYVCf3yDQjqIp0EBcQuJAQIBfwJ+IAAgACkDMCABQT9xrSIDhiAAKQMoQTogAWtBP3GtIgSHhDcDMCAAQShqIQFBBiE
    CA0AgAkEBTQRAIAAgACkDACADhkL//////////wODNwMABSABIAEpAwAgA4ZC//////////8DgyABQXhqIgEpAwAgBIeE
    NwMAIAJBf2ohAgwBCwsLiQECAX8CfiAAIAApA2BBOiABQTpwIgFrrSIEhyAAKQNoIAGtIgOGhDcDaCAAQeAAaiEBQQ0hA
    gNAIAJBAU0EQCAAIAApAwAgA4ZC//////////8DgzcDAAUgASABKQMAIAOGQv//////////A4MgAUF4aiIBKQMAIASHhD
    cDACACQX9qIQIMAQsLC3EBAX8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAakEBNgIAIAFBCGpBOBB
    yGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAEG8AWogAUEEakE8EGcaIABB+AFqQQE2AgAgAUFAayQAC4EBAgF/AX4gAEHw
    ABByIQADQCACQThGBEACQCAAIAEpAzAiA0I6hzcDOCAAIANC//////////8DgzcDMCAAQUBrIQBBACECA0AgAkEwRg0BI
    AAgAmpCADcDACACQQhqIQIMAAsACwUgACACaiABIAJqKQMANwMAIAJBCGohAgwBCwsLdQECfiAAIANCIIgiBSABQiCIIg
    Z+IAIgA358IAEgBH58IANC/////w+DIgIgAUL/////D4MiAX4iA0IgiCACIAZ+fCICQiCIfCABIAV+IAJC/////w+DfCI
    BQiCIfDcDCCAAIANC/////w+DIAFCIIaENwMAC3YBAn8jAEHAAWsiASQAIAEgABCFASABQUBrIAAQhQEgAUGAAWogAEFA
    ayICEIUBIAEgAhB4IAFBQGsgABB4IAFBQGsQRCACIAFBQGsQSCABQYABahBBIAAgAUGAAWoQeCABEEQgABBEIAAgARBII
    AFBwAFqJAALkwEBAn9B0LXBAEHQtcEAKAIAQQFqNgIAAkACQEGYucEAKAIAQQFGBEBBnLnBAEGcucEAKAIAQQFqIgA2Ag
    AgAEECSw0CQaC5wQAoAgAiAUF/Sg0BDAILQZi5wQBCgYCAgBA3AwBBoLnBACgCACIAQQBIDQFBoLnBACAANgIAAAtBoLn
    BACABNgIAIABBAUsNAAALAAtnAQJ/IwBBQGoiAiQAIAAQRCACIAAQhQECQCABRQRAIAAQBwwBCyAAIAEQpQELQQAhAQNA
    IAFBAUsgA3JFBEAgABADIAFBAEchAyABIAFFaiEBDAELCyAAIAIQSCAAEBIgAkFAayQAC18CAX8EfkIBIQNBMCECA38gA
    kF4RgR/IARCAYYgA3ynQX9qBSABIAJqKQMAIgUgACACaikDACIGfUI6hyADgyAEhCEEIAJBeGohAiAFIAaFQn98QjqHIA
    ODIQMMAQsLC2ACAX8EfkIBIQNB6AAhAgN/IAJBeEYEfyAEQgGGIAN8p0F/agUgASACaikDACIFIAAgAmopAwAiBn1COoc
    gA4MgBIQhBCACQXhqIQIgBSAGhUJ/fEI6hyADgyEDDAELCwt3AQN/IwBBgAJrIgIkACACIAEQXiACQYABaiABEF4gAhAy
    IAJBgAFqIAIQDyAAIAJBgAFqEJcBIABBgAJqIgMgAkGAAWoQlwEgAEGABGoiBCACQYABahCXASADIAEQogEgBCACEKIBI
    ABBBTYCgAYgAkGAAmokAAt6AQF/IwBB4ANrIgEkACABQYABakHApcAAEF8gAUG4AWpB+KXAABBfIAEgAUGAAWogAUG4AW
    oQSSABQfACakGwpsAAEF8gAUGoA2pB6KbAABBfIAFB8AFqIAFB8AJqIAFBqANqEEkgACABIAFB8AFqED8gAUHgA2okAAt
    nACAAQQF2IAByIgBBAnYgAHIiAEEEdiAAciIAQQh2IAByIgBBEHYgAHIiACAAQQF2QdWq1aoFcWsiAEECdkGz5syZA3Eg
    AEGz5syZA3FqIgBBBHYgAGpBj568+ABxQYGChAhsQRh2C2cBAn8jAEGAAWsiASQAIAEgABCFASABQUBrQTgQchogAUEBN
    gJ4IAEgAEFAayICEHggARBBIAFBQGsgARClASABQUBrIAIQeCACIAEQpQEgAiAAEHggACABQUBrEKUBIAFBgAFqJAALaA
    IBfwJ+IAFBP3GtIQNBOiABa0E/ca0hBEEAIQEDQCABQTBGBEAgACAAKQMwIAOHNwMwBSAAIAFqIgIgAkEIaikDACAEhkL
    //////////wODIAIpAwAgA4eENwMAIAFBCGohAQwBCwsLbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYC
    ACADQSxqQQI2AgAgA0ICNwIMIANBlKjAADYCCCADQQI2AiQgAyADQSBqNgIYIAMgAzYCKCADIANBBGo2AiAgA0EIaiACE
    HAAC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakECNgIAIANCAjcCDCADQbCqwAA2AgggA0
    ECNgIkIAMgA0EgajYCGCADIANBBGo2AiggAyADNgIgIANBCGogAhBwAAtlAQJ/IAAgACgCACICQQhqIgM2AgAgACACQQN
    2QTxxakEoaiICIAFB/wFxIAIoAgBBCHRyNgIAAkACQCADRQRAIABBADYCACAAIAAoAgRBAWo2AgQMAQsgA0H/A3ENAQsg
    ABARCwtnAQF/IwBBgAJrIgMkACAAECogACABEJABIABBgAFqIgEgAhCQASAAQYACahCwASAAEKgBIAMgABAmIANBgAFqI
    AEQXiADQYABahAyIANBgAFqIAMQe0UEQCAAEJgBCyADQYACaiQAC18BAn8jAEGAAWsiASQAIAAQqAEgASAAEIUBIAFBQG
    sgAEFAayICEIUBIAEQAyABQUBrEAMgASABQUBrEHggAUEAEDQgACABEEggARBBIAEQRCACIAEQSCABQYABaiQAC10BAn8
    jAEFAaiIBJAAgAUEIakGgp8AAEF8gAUEIaiAAKAI4QX9qEDkiAhAtIAAgAUEIahBjIABBASACQQFqQR9xdCICNgI4IAJB
    gICAEE4EQCAAEBILIAFBQGskAAtfAgF/AX4jAEHwAGsiASQAIAFBoKfAABBfIAApAwAhAiABQThqIAAQXyAAQQEQOyABQ
    ThqIAEQYSABQThqEEQgAUE4akEBEDsgACABQThqIAJCAoGnEE8gAUHwAGokAAt7AQJ/IABBKGohAgNAIAFBgAJGBEAgAE
    LnzKfQ1tDrs7t/NwIIIABCADcCACAAQSBqQquzj/yRo7Pw2wA3AgAgAEEYakL/pLmIxZHagpt/NwIAIABBEGpC8ua746O
    n/aelfzcCAAUgASACakEANgIAIAFBBGohAQwBCwsLaQICfwF+IAAgACkDACIDQv//////////A4M3AwBBCCEBA0AgA0I6
    hyEDIAFBMEYEQCAAIAApAzAgA3w3AzAFIAAgAWoiAiACKQMAIAN8IgNC//////////8DgzcDACABQQhqIQEMAQsLC2oCA
    n8BfiAAIAApAwAiA0L//////////wODNwMAQQghAQNAIANCOochAyABQegARgRAIAAgACkDaCADfDcDaAUgACABaiICIA
    IpAwAgA3wiA0L//////////wODNwMAIAFBCGohAQwBCwsLWQEBfyMAQYADayIEJAAgBCADEF4gBBBAIARBgAFqIAEQXiA
    EQYACaiACEF4gBEGAAWogBBAPIARBgAJqIAQQDyAAIARBgAFqIARBgAJqEJEBIARBgANqJAALWQECfyMAQUBqIgEkAAJA
    IAAQhAENACABQQEQigEgAEGAAWoiAiABEFkNACACQQAQNCAAIAIQSCAAEBIgAEFAayIAIAIQSCAAEBIgAiABEKUBCyABQ
    UBrJAALVwEBfyMAQbABayICJAAgATQCOCAANAI4fkKAgIAQWQRAIAAQEgsgAkEIaiAAIAEQCCACQfgAaiACQQhqEAUgAC
    ACQfgAahBrIABBAjYCOCACQbABaiQAC08BAn8jAEFAaiIDJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgA
    gAyABEIsBIAAgAxClASADIAIQiwEgAxClASADQUBrJAALWQECfyMAQYABayIBJAACQCAAEIgBDQAgARBQIABBgAJqIgIg
    ARB7DQAgAhBAIAAgAhAPIAAQqwEgAEGAAWoiACACEA8gABCrASACIAEQkAELIAFBgAFqJAALSwEBfyMAQUBqIgEkACAAQ
    TgQciIAQQE2AjggAUEBEIoBIABBQGsgAUHAABBnGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAUFAayQAC0sBAn8jAEHwAG
    siASQAIAAQd0UEQCABQaCnwAAQXyABQThqIAAQgwEgASABQThqEGIgARBEIAFBOGogARA1IQILIAFB8ABqJAAgAgtPAQF
    /IwBBgAFrIgIkACAAIAEQhQEgABADIAJByABqQdikwAAQXyACQQhqIAJByABqEIsBIAAgARBIIAAgAkEIahB4IAAQEiAC
    QYABaiQAC0kBAn8DQCABQThGRQRAIAAgAWoiAiACKQMAQgGGNwMAIAFBCGohAQwBCwsgACAAKAI4QQF0IgE2AjggAUGAg
    IAQTgRAIAAQEgsLQgIBfwJ+QQAgAmusIQQDQCADQThHBEAgACADaiICIAIpAwAiBSABIANqKQMAhSAEgyAFhTcDACADQQ
    hqIQMMAQsLC0YBAn8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgAgAUEBEIoBIAAgARClARC
    yASABQUBrJAALTgEBfyMAQYAEayIBJAAgABAvIAEQLyABQYACahAvIABBgAJqIAFBgAIQZxogAEGABGogAUGAAmpBgAIQ
    ZxogAEEANgKABiABQYAEaiQAC0sBAX8jAEFAaiICJAACQCAAKAI4IAFsQYCAgBBOBEAgAiABEIoBIAAgAhBIDAELIAAgA
    RAoGiAAIAAoAjggAWw2AjgLIAJBQGskAAtKAAJ/IAFBgIDEAEcEQEEBIAAoAhggASAAQRxqKAIAKAIQEQMADQEaCyACRQ
    RAQQAPCyAAKAIYIAJBACAAQRxqKAIAKAIMEQUACwtCAQF/IwBBQGoiAiQAIAJBCGpBgIDAABBfIAEgAkEIahBrIAEQRCA
    AIAEQayAAQQMQKBogABBEIAAQKSACQUBrJAALSQECfyMAQcABayIBJAAgASAAEF4gAUGAAWogABCFASAAIABBQGsiAhCl
    ASAAEEEgAiABQYABahClASAAIAEQlQEgAUHAAWokAAtIAQF/IwBB4AFrIgEkACABQeihwAAQXyABQThqIAAgARAIIAFBq
    AFqIAFBOGoQBSAAIAFBqAFqEGsgAEECNgI4IAFB4AFqJAALPgEBfyABQTpuIQIgAUGVA00EQCAAIAJBA3RqKQMAQgEgAU
    H//wNxQTpwrYaDQgBVDwsgAkEHQdSdwAAQPAALQAIBfwF+IwBBgAFrIgEkACABQQhqIAAQhQEgAUEIahASIAFByABqIAF
    BCGoQgwEgASkDSCABQYABaiQAQgKBpws8AQF/IwBBgAFrIgIkACACIAAQhQEgAkFAayABEIUBIAIQEiACQUBrEBIgAiAC
    QUBrEDUgAkGAAWokAEULPAIBfwF+A38gAUE4RgR/IAJCf3xCgICAgICAgIAEg0I6iKcFIAAgAWopAwAgAoQhAiABQQhqI
    QEMAQsLC0cBAX8jAEEgayIDJAAgA0EUakEANgIAIANB9KrAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2Ag
    AgAyACEHAACzkBAX8jAEFAaiICJAAgAiAAEIUBIAIQByABBEAgASACEKUBCyACEAMgAiAAEEggAhAsIAJBQGskAAs6AQF
    /IABBOBByIQADQCACQTBGRQRAIABBCBAtIAAgACkDACABIAJqMQAAfDcDACACQQFqIQIMAQsLCzQBAX8gAEE4EHIiAEEB
    NgI4IABBQGtBOBByIABB+ABqQQE2AgAgACABEKUBIAFBQGsQpQELMAEBfyAAQTgQciEAA0AgAkE4RwRAIAAgAmogASACa
    ikDADcDACACQQhqIQIMAQsLCz8BAX8jAEGAAmsiASQAIAAQUSABEG4gACABEJIBIABBgAJqEK0BIABBgARqEK0BIABBAT
    YCgAYgAUGAAmokAAswAQJ/A0AgAkE4RwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLMAECfwNAIAJ
    BOEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLCzABAn8DQCACQThHBEAgACACaiIDIAEgAmopAwAg
    AykDAH03AwAgAkEIaiECDAELCwsxAQJ/A0AgAkHwAEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLC
    zEBAn8DQCACQfAARwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLOQECfyMAQYABayIBJAAgASAAQY
    ABaiICEF4gAiAAEJABIAEQVSAAIAEQkAEgABCsASABQYABaiQACzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACABQQFqIQE
    gA0EBaiEDIAJBf2oiAg0ACwsgAAtIAQN/IwBBEGsiASQAIAAoAgwhAyAAKAIIIgJFBEBB9KrAAEErQaCrwAAQWwALIAEg
    AzYCCCABIAA2AgQgASACNgIAIAEQcQALMgEBfyAAQgE3AwBBCCEBA0AgAUE4RkUEQCAAIAFqQgA3AwAgAUEIaiEBDAELC
    yAAEFYLNwAgABBRIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahCSASAAIAEoAoAGNgKABgsoAQF/A0AgAk
    E4RwRAIAAgAmogASACaikDADcDACACQQhqIQIMAQsLCzMAIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahC
    SASAAIAEoAoAGNgKABgsoACAAIAEgAhB5IABBQGsgAUFAayACEHkgAEGAAWogAUGAAWogAhB5Cy4BAX8jAEGAAWsiASQA
    IAAQLyABEFAgACABEJABIABBgAFqEKkBIAFBgAFqJAALLQAgACABIAIQjwEgAEGAAWogAUGAAWogAhCPASAAQYACaiABQ
    YACaiACEI8BCzQBAX8jAEEQayICJAAgAiABNgIMIAIgADYCCCACQaSowAA2AgQgAkH0qsAANgIAIAIQaAALPgEBfyMAQR
    BrIgEkACABQQhqIABBCGooAgA2AgAgASAAKQIANwMAIAEoAgAiAEEUaigCABogACgCBBoQMwALKQEBfyABBEAgACECA0A
    gAkEAOgAAIAJBAWohAiABQX9qIgENAAsLIAALKwEBfyMAQcABayICJAAgAhBLIAIgARB/IAIQpgEgACACEAwgAkHAAWok
    AAsiAQF/A0AgAUE4RwRAIAAgAWpCADcDACABQQhqIQEMAQsLCycBAX8jAEFAaiICJAAgAkEIaiABEF0gACACQQhqEIsBI
    AJBQGskAAsrACAAEFEgACABEJIBIABBgAJqIAIQkgEgAEGABGogAxCSASAAQQU2AoAGCyMBAX8jAEFAaiIBJAAgASAAEI
    UBIAEQEiABEFogAUFAayQACykAIAAgARBhIAAgACgCOCABKAI4aiIBNgI4IAFBgICAEE4EQCAAEBILCyUAIAAgASACEE8
    gAEEAIAJrIAAoAjgiACABKAI4c3EgAHM2AjgLIwADQCACBEAgACABLQAAED4gAkF/aiECIAFBAWohAQwBCwsLIgACQCAA
    IAEQWUUNACAAQUBrIAFBQGsQWUUNAEEBDwtBAAskAAJAIABBfE0EQCAARQRAQQQhAAwCCyAAEAEiAA0BCwALIAALJwEBf
    yMAQYABayICJAAgAiABEF4gAhA6IAAgAhCVASACQYABaiQACycAIAAgARCQASAAQYABaiABQYABahCQASAAQYACaiABQY
    ACahCQAQslACAAIAEQpQEgAEFAayABQUBrEKUBIABBgAFqIAFBgAFqEKUBCyUBAX8jAEFAaiICJAAgAiABEIUBIAIQQSA
    AIAIQeCACQUBrJAALKAEBfyMAQYACayICJAAgAiABEI4BIAIQKyAAIAIQlgEgAkGAAmokAAsjAEGEAiACSQRAIAJBhAIg
    AxA9AAsgACACNgIEIAAgATYCAAsiAQF/IwBB8ABrIgIkACACIAEQMCAAIAIQBSACQfAAaiQACxwAAkAgABB3RQ0AIABBg
    AFqEHdFDQBBAQ8LQQALHwAgAEE4EHIiAEEBNgI4IAAgARBrIAAgASgCODYCOAseAAJAIAAQhwFFDQAgAEGAAWoQhwFFDQ
    BBAQ8LQQALGwACQCAAEHdFDQAgAEFAaxB3RQ0AQQEPC0EACx4AAkAgABCHAUUNACAAQYACahCHAUUNAEEBDwtBAAsaAQF
    /IAAQWCIBIABBQGsQWCABcyAAEHdxcwsaACAAQTgQciIAQQE2AjggACABEJ0BIAAQVgsZACAAQTgQciIAQQE2AjggACAB
    EGsgABBWCxcAIAAQRCAAKAIAQX8gAUEfcXRBf3NxCxoAIAAgARBfIAAgAhAkIAAgAhBjIAAgAhAkCxwAIAAQLyAAIAEQk
    AEgAEGAAWogAUGAAWoQkAELGAAgACABIAIQeSAAQUBrIAFBQGsgAhB5CxYAIAAgARClASAAQUBrIAFBQGsQpQELGAAgAB
    AvIAAgARCQASAAQYABaiACEJABCxgAIAAgARCQASAAQYABaiABQYABahCQAQsZACAAEK4BIABBgAJqELYBIABBgARqEK4
    BCxcAIAAQsgEgAEFAaxBpIABBgAFqELIBCxQAIAAgARB4IABBQGsgAUFAaxB4CxgAIAAgARCVASAAQYABaiABQYABahCV
    AQsYACAAEKYBIABBgAFqIgAQpgEgACABEA8LGQAgABCpASAAQYABahCwASAAQYACahCpAQsZACAAEKwBIABBgAJqEKwBI
    ABBgARqEKwBCxkAIAAQqgEgAEGAAmoQqgEgAEGABGoQqgELFgAgABAvIAAgARCQASAAQYABahCpAQsWACAAQYABaiIAEK
    gBIAAQOiAAEKgBCxQAIAAQRCAAIAApAwAgAax8NwMACxQAIAAQRCAAIAApAwAgAax9NwMACxEAIAAgARBSIABBQGsgARB
    SCxEAIAAgARBIIABBQGsgARBICxQAIAAgARCQASAAQYABaiACEJABCxIAIAAgARAPIABBgAFqIAEQDwsUACAAIAEQoAEg
    AEGAAWogARCgAQsRACAAKAIEBEAgACgCABAJCwsSACAAIAEQayAAIAEoAjg2AjgLDwAgAEFAayIAEEEgABBECw0AIAAQT
    iAAQUBrEE4LDQAgABBEIABBQGsQRAsPACAAELIBIABBQGsQsgELEAAgABCrASAAQYABahCrAQsNACAAEBIgAEFAaxASCx
    AAIAAQqAEgAEGAAWoQqAELEAAgABCpASAAQYABahCpAQsPACAAQYABahA6IAAQrAELEAAgABCnASAAQYABahCnAQsOACA
    AEGkgAEFAaxCyAQsQACAAIAI2AgQgACABNgIACw0AIAAQdCAAQQE2AjgLDAAgABBBIAAgARB4CwwAIAAgARBrIAAQVgsN
    ACAAEDogACABEJUBCwsAIAAQOiAAEKwBCwwAQunQotvMouq7RgsDAAELAwABCwv+PZoCAEGCgMAACwcBAAAAAQI0AEG4g
    MAAC9sBuF8jku11BwFjT+D5WE+pA2dPnKtLeD0Akew9ffXy9AMD1g8fDSwgAK1vjPCZwa4A8DtNkAEAAADzStxtEor3AI
    uwH1tTsFYDgvLFYx+X7AAysL/NHtseAkehVLifHyMCQHo6ogw4sQGz4sMPAAAAAHNyYy9ibHMxMjM4MS9wYWlyLnJzqAA
    QABQAAAAHAQAACQAAAKgAEAAUAAAADAEAAA0AAACoABAAFAAAABEBAAANAAAAAAAAAAEAAAD///8Dv/+W/78AaQM7VYAd
    moCAAefMIPV1pkwBp+1zAEGogsAACyz+//7///8BAosAgILYBPYB4Y1oiW++kwLOdqvfPagdAMZpulHOdt8Dy1nGFwBB4
    ILAAAuRAZABEAATAAAA0AEAABgAAACQARAAEwAAANQBAAARAAAAkAEQABMAAADWAQAAHAAAAHNyYy9ibHMxMjM4MS9lY3
    AucnMAkAEQABMAAAAZBQAADQAAAJABEAATAAAAGwUAAAkAAACQARAAEwAAABwFAAARAAAAkAEQABMAAAAfBQAAHAAAAAA
    AAAABAAEAAAABAjQAQaCEwAALuSCQARAAEwAAAGcEAAARAAAAkAEQABMAAABsBAAADQAAAJABEAATAAAAbgQAABUAAACQ
    ARAAEwAAAHAEAAAgAAAAHUxYLQgo9ADXXz44aOPbAInJGoj9roEBomOjmrkPTgGY6rCCSW3JAoBOWs9QOu4AimlEAQAAA
    ADgKxeO6UjMAXSpOluMVsgAolXvNe/8FADngsIBPcnDA8EWIDvuPnUAusRiAAwgWgDRCCkuAQAAALgh6L1iEMUA3/4Vlz
    tIpQGLCDH8A9S9AbsR/Cc0UtIDHfAS2hvXowEqPc423S/bAshidB8AAAAAKdKiiy66yAHqR06TLeDGAiSMtsYkvPEDAo/
    w3iCL+AGd1zE97u2BA4ilRy+cg4kDSMIIbgAAAAB7+wUWP99nAjJ7Fwrjx90CaW+GFDsANgMrVFv+4Zl3A8x9+g1bVtIB
    Aju2nPiBcwIH2iEDAQAAAJ4MOb5nECQDX97JALfLQgIx+rexS69LAYydZXIx6AACyy7dIo8TXQHUDYML8enzAuH4sWkBA
    AAAF+OXhGqYcQFbpdOtpXylAPrkHV2MkmwBFovSVX2eswF1O8QNmb5jAc0s5B7x42kCH8/TgAAAAACOyPDjGFbLAOdrHT
    0yPvIBmzNTJw/vYgALmsY2bZ2sAuVtNVN+EdEAIQ4duvj2agBw54F7AQAAAITtOaEl8tcBt7JLQTBKlADaqLKGnI8hAiN
    AhjM+PJkAhhWxv1LmigOwyY1aShP5A1Nl7dYAAAAAgyllb8bBEwFzRs+5ckvDAQgK+Wh+CbkCTntu5kll9wGxPNu1Sqf3
    AwZIdMD/xFwDUDIMYwEAAADZlYis6UwVARTxnQfMG4oChYnB+oJZtgK7IfzsX0loAZnbmVSOEeQDLK2Q2RB9ZgCjJpfpA
    AAAAGFomx1kiLMB8WQcxDiXuAEzNQgzG58oA8zGl/w2qpUB5PXXElTlBwN0goHTbRvzA2ZxjncBAAAAsNyerJ2fFwD4p1
    yCSo8PA1jJJY7GHlAC46GVD2alzAEkA84bmgrRATESRAc7nl0C2wVA1QAAAAC7g8uz8e40ALrVMMa8qTwCg7SGHg3HMwK
    X1V8Qqr1sAecXfByoRyECrC5iwcvqUAI+7ZRyAQAAALdJRnNiFqwCq1uLuXy1MABhhSxO22y1A4nJfwFciyICPjBrhRWY
    2QEHRAIu0MygA7HyBRoBAAAACt3saNGEYwELQBne0pLTATFZwTGPlzMBfdvdQN9bugO0gvaAZqWzAo9b2xG1SnoCqxP8l
    QAAAABB1qF5Oux2AxHckO6qpJkAOFCDmPNn2gBA0K3ZhMV1AI1/4Myjx68Bz4Kkl+BTaQNqzw6hAAAAAF5azL2b2fcBxL
    R4RCdSbgH6gMUimN8cAltmoKIpbwgDY39umQHPdABs/SyMLCpZA6nCekoBAAAAOkrobkl0JQA7G3jD49TsAKfO6e0qBnM
    AuDglhk69ZgJXD1chZ1ngAxiDz0OGTVoAz6osdwAAAAClBGOfovktAHDEowjxkjQAQPeCiUvyzgMOKTS1cjqnAzVXOenG
    BgUD30NOVe6ZOQGOXzXnAAAAAB6iMjVbOZ0DVAdezQfqpgC9qW0wO4NOAK017oqBhGYBx9//faDnQwNXx5sCKkWKACAWj
    joBAAAA2CzGjZPoDQMEcT27D0m1AZcE/dYovIoCMlNFlcVa/AAkCFtU60B8A/urDrK/uGIBGlglNAAAAAAZPrhcujnCAD
    +3PyWfJfQAas3qrBEL4ACZ8kczxmm9AUGJbx+Z8r8BivlNoJfI6AHlL5ayAAAAAP87K8huJ8gBeboJLBshqgI9cfWLxIg
    lAJsEMADCMygD6EFwNjblmAJEHC3SEGfVAt6lYSUBAAAAHBvSQPr5PAEmfg+Nb6A1AlUrxor8F4YAVnLqIm2NLgHv1QFv
    +tNLA4u5LIZrxj8DSNWojAAAAAAEtshpvla0AMEdB7C/n0ABZisb8FqpTwG3XuVoWRI+Ah0Yy7Uu30IDzkKpk/PAQwLp5
    GteAQAAAEsidVRxHmsC4e1rXtkmQQC6Rs6nltP1AKxmo5WhXwcCPWde/KPESAN9VqhAxDORA0WWElwAAAAAMwGY2/XT2Q
    IQmcoIRyvkA2zMWQbE0zICmU8AVjA1IAA7e3XcFeN7AisAv9ymskcDSjlaJAAAAAD4HpcL8ARMAYN8hGRkcBQCbPAzRnu
    ADgGcADvCmtCoALGnekQ/9QQAWEJVdObkBgDByoKxAAAAAI5NB9CkyAcCs4E10QZ9cwKdJEP2EfnnA6+5GAnDq+ICWTVS
    zO3S/gNQMEaut73NAwipRosBAAAAMsER0BpxEwA6v+6PM5fOAxsDYZ44FuQDYET/JL2yLQPLL82T+0MdA+NCf4NvNN8Ae
    eQTlwEAAAAwHHPK66qvA8qbrlN3FdwDs7lDTR7t5wFhGvjba0WeAgwqxCNKoa0Dea+OSG2vYQChp7vhAAAAAIel23tXDj
    cA2OiB4XGAlAGd5qsM8qHmAi16sAl3nlkAvTqPu6FNHgKIJyP6EpplA4sBxJ8AAAAAKftwGKNMXgFoTfq3P1SRAS9kQsg
    mbNoADvR/YPeO/wIFChd0xqYsAa9Jpvcbrs4AU418mAAAAADy1ulfhfhhAbJX0IORsB4CenTzNNbEEwDFSC0Thq8oA7hb
    5zxreScA9F2yLO8G6wO8ubBKAAAAAPClMzaxOrIBphygVrLJ2AMD4kRVrdPDAUHZ9d62vlID0Kd0oKbwuAFHeISI2tIYA
    KT8A2YBAAAA2/7o8uzatgEQKhBkAjf+Ae7CrVETIv0DDObhQjmP7wM2VRnEKRWiAvjTK9fEP/gD3j/AjAAAAADL9OWwd1
    w1Ail7h7GnrhYA5J3PUTLAPgKSJ3DkrTvkAqcq1FdndNgCRh0mXggHJgJuN4YfAAAAAPbhLcdA4t8A7kgBLIqFVAMmfdo
    AFLnkAxINi3OMYlkD4lIllEk7agAy4Si9mZulArqGxwwAAAAAlsZBLlrnlwD4L+qLZcRZAWxN03q2PjQCQT704DyVsAHp
    IxKDRvt2A7UNRHUEljsBEGqZNAEAAAAzuweXcUWYAq/w6M6mux4D0Dw9VFbJ9gJKrUiloSI5AhOtEfrcgEkBwkdnCbiT6
    AKBfNmQAAAAAI9LYx06RxUAEeAlTTxcvQDKBaLKVmPNAzvJTOHOiZcBD8RxwRl4DQJXCcmaD3C3AYEd+uAAAAAA9wbtJh
    Pc+gE0IDPFYe9FASDkgCSUJ98A0i0Hn6ScUwJbVr/yds1TAUP3otjOk8sCDkBgJgAAAADMRTNXOLGZAkewQu742AEAMGm
    42QCa7wJz9ZkIfCtmA0YzVJYUX7QAUUzY8PifHQMUlWutAAAAAJIQVuIptYQCpfqu3xsmWgJvURN56oyoAT4wSgs5vysC
    /5R/RwzFSAIHS2H9z0AHAnS2y6wAAAAAqGqPupy0+AAAgcHg06dwARqHXGpjbrMBZDmkmIbt5gDQbZwdkdIaACgEPFJvA
    akDniUvTQAAAABVP5G4i/RuAI3XbEr1qBcCc7xPfernkgEhTO0e9oSPAfcWMpCEStkDZYGgOoebwgHaXKVnAQAAAEpdU1
    WdPSMD2iCS5O69+AMshbQ5v8RQAxWvgmS9GpMDDPv5xEzX0QNT+YbGSBjbANOObIYBAAAA2S6BFVpB7gAYuXcAAmw9AJI
    rE1djIP0AzfpfP33oewE3pOVu/6a7An4374D6qY8Di/A+agEAAABcd2oSmRMaAU/ux2JpAKcCXx0FoADEWwJNd73jMzTq
    A/3sXkuC6awAzaHu8Mt2pgIIfABmAQAAAKy3+ap/R8YCgDhz6ndu4wCfRKb18LaHAbMXB2JDVRkDUgG3gjF4rAK6mexny
    7ZhAJdSno0AAAAAHQClESMUOQJ2e7v0A3fFAiBqkeyd/KABu1DB7qY9fAKc0cbcjSL4AkQyAyz50BcBlQcOvgAAAAAWVF
    9EmG3SAGrrpaCwPNkAJxf0anKeSAL2SDhM83ZvA8UV0dG07YkD70iDfOWUYwKHKH1rAQAAAPJnvz21OCUCR+Jbvo01XwF
    nyi7NedJdAtYwxPy5RlUBhcR4V7GObgGfq+rbiTaQAQYz31gAAAAAPaBJLiwQ9gJMjafU2IEJAYr3AT5FbzUAhJJyVhPH
    3ANPyIW4SMNDAFsvg4YHSOAAwnUtlgEAAADBYzawU5JHAUAbCIO9I9oAf6Dncr61MgIMu5svYOKVA20aYOnq0PoAUASGl
    CwmpwLDxBJhAQAAAHNyYy9ibHMxMjM4MS9iaWcucnMAoA4QABMAAADMAQAALQAAAKAOEAATAAAAzAEAADUAAACgDhAAEw
    AAABkCAAANAAAAoA4QABMAAAA4AwAAGAAAAKAOEAATAAAAOAMAACEAAACgDhAAEwAAAEIDAAAhAAAAoA4QABMAAABbAwA
    AFwAAAKAOEAATAAAAZAMAABcAAACgDhAAEwAAAHIDAAAwAAAAoA4QABMAAAB7AwAAMAAAAKAOEAATAAAApwMAABgAAACg
    DhAAEwAAALUDAAAYAAAAmC+KQpFEN3HP+8C1pdu16VvCVjnxEfFZpII/ktVeHKuYqgfYAVuDEr6FMSTDfQxVdF2+cv6x3
    oCnBtybdPGbwcFpm+SGR77vxp3BD8yhDCRvLOktqoR0StypsFzaiPl2UlE+mG3GMajIJwOwx39Zv/ML4MZHkafVUWPKBm
    cpKRSFCrcnOCEbLvxtLE0TDThTVHMKZbsKanYuycKBhSxykqHov6JLZhqocItLwqNRbMcZ6JLRJAaZ1oU1DvRwoGoQFsG
    kGQhsNx5Md0gntbywNLMMHDlKqthOT8qcW/NvLmjugo90b2OleBR4yIQIAseM+v++kOtsUKT3o/m+8nhxxkJMU19TSUdf
    QkxTMTIzODFHMV9YTUQ6U0hBLTI1Nl9TU1dVX1JPX05VTF8A0BAQABMAAAA/AAAALgAAANAQEAATAAAAPQAAABUAAADQE
    BAAEwAAAD0AAAANAAAAc3JjL2JsczEyMzgxL2Jscy5ycwAAAAAArve+1aE5BgLok91iZEwkAdIsbk61CS0C2+VwMbbEEQ
    GZYzb76G2KA7ycH+3PFk8AK2qmngEAAABhdHRlbXB0IHRvIGRpdmlkZSBieSB6ZXJvAAAAbxEQABIAAAB8AQAAFAAAAAA
    AAABhdHRlbXB0IHRvIGRpdmlkZSB3aXRoIG92ZXJmbG93c3JjL2JsczEyMzgxL2ZwLnJzAAAAbxEQABIAAAASAgAADQAA
    AG8REAASAAAAHgIAACYAAABvERAAEgAAAB4CAAAjAAAAbxEQABIAAAAkAgAAFwAAAG8REAASAAAAJAIAABQAAAAAAAAAq
    qr//////gHu//9UrP//AupBYg9rDyoBw5z9ShTOEwJLd2TXrEtDAu3pxpKm+V8Cox4RoAEAAABAEhAAFAAAABUBAAATAA
    AAQBIQABQAAAAeAQAAGAAAAEASEAAUAAAAJAEAABwAAABzcmMvYmxzMTIzODEvZWNwMi5ycwAAAAAEAEGQpcAAC7wGQBI
    QABQAAADmAgAACQAAAEASEAAUAAAA7gIAAA0AAABAEhAAFAAAAP4CAAAhAAAAuL0hwchWgAD1+24BqskAA7pwFz2uR7YA
    RNEK7ADpUwN65MZREMUtA0kBgkmkwiMALyuqJAAAAAB+KwRdBX2sAflVF+WERDwDNJME9ce9GwJp12rYgmRCA9BrWWVPJ
    4gA6DRrH9hnnAAFtgI+AQAAAAEouAiGVJMBeKIo6w5zsgIjyRINFpWmAQq1nU73MqoCm/2tGjUu2gJxczJjhFufAHdSXc
    4AAAAAvnlf8F8HqQJqaAc710nDAfOzmulytSoB0pm8jp0W+gEoPsuZi8IrAKw0qwwzzakDAkpsYAAAAACrqv/////+Ae7
    //1Ss//8C6kFiD2sPKgHDnP1KFM4TAkt3ZNesS0MC7enGkqb5XwKjHhGgAQAAAAgUEAALAAAAjwEAAA8AAAAIFBAACwAA
    AKcBAAATAAAACBQQAAsAAACqAQAADQAAAHNyYy9obWFjLnJzADQUEAAgAAAAVBQQABIAAAADAAAAAAAAAAEAAAAEAAAAa
    W5kZXggb3V0IG9mIGJvdW5kczogdGhlIGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAwMDAxMDIwMzA0MDUwNjA3MDgwOT
    EwMTExMjEzMTQxNTE2MTcxODE5MjAyMTIyMjMyNDI1MjYyNzI4MjkzMDMxMzIzMzM0MzUzNjM3MzgzOTQwNDE0MjQzNDQ
    0NTQ2NDc0ODQ5NTA1MTUyNTM1NDU1NTY1NzU4NTk2MDYxNjI2MzY0NjU2NjY3Njg2OTcwNzE3MjczNzQ3NTc2Nzc3ODc5
    ODA4MTgyODM4NDg1ODY4Nzg4ODk5MDkxOTI5Mzk0OTU5Njk3OTg5OQAAQBUQABAAAABQFRAAIgAAAHJhbmdlIGVuZCBpb
    mRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAABjYWxsZWQgYE9wdGlvbjo6dW53cmFwKClgIG9uIG
    EgYE5vbmVgIHZhbHVlALAVEAAcAAAA7gEAAB4AAABsaWJyYXJ5L3N0ZC9zcmMvcGFuaWNraW5nLnJzAEGIrMAACwEBAEH
    IrMAACwEBAEGIrcAACwEBAEHIrcAACwEBAEGIrsAACwEBAEHIrsAACwEBAEGIr8AACwEBAEHIr8AACwEBAEGIsMAACwEB
    AEHIsMAACwEBAEGIscAACwEBAEHIscAACwEBAEGIssAACwEBAEHIssAACwEBAEGIs8AACwEBAEHIs8AACwEBAEGItMAAC
    wEBAEHItMAACwEBAEGItcAACwEBAEHItcAACwEBAEGItsAACwEBAEHItsAACwEBAEGIt8AACwEBAEHIt8AACwEBAEGIuM
    AACwEBAEHIuMAACwEBAEGIucAACwEBAEHIucAACwEBAEGIusAACwEBAEHIusAACwEBAEGIu8AACwEBAEHIu8AACwEBAEG
    IvMAACwEBAEHIvMAACwEBAEGIvcAACwEBAEHIvcAACwEBAEGIvsAACwEBAEHIvsAACwEBAEGIv8AACwEBAEHIv8AACwEB
    AEGIwMAACwEBAEHIwMAACwEBAEGIwcAACwEBAEHIwcAACwEBAEGIwsAACwEBAEHIwsAACwEBAEGIw8AACwEBAEHIw8AAC
    wEBAEGIxMAACwEBAEHIxMAACwEBAEGIxcAACwEBAEHIxcAACwEBAEGIxsAACwEBAEHIxsAACwEBAEGIx8AACwEBAEHIx8
    AACwEBAEGIyMAACwEBAEHIyMAACwEBAEGIycAACwEBAEHIycAACwEBAEGIysAACwEBAEHIysAACwEBAEGIy8AACwEBAEH
    Iy8AACwEBAEGIzMAACwEBAEHIzMAACwEBAEGIzcAACwEBAEHIzcAACwEBAEGIzsAACwEBAEHIzsAACwEBAEGIz8AACwEB
    AEHIz8AACwEBAEGI0MAACwEBAEHI0MAACwEBAEGI0cAACwEBAEHI0cAACwEBAEGI0sAACwEBAEHI0sAACwEBAEGI08AAC
    wEBAEHI08AACwEBAEGI1MAACwEBAEHI1MAACwEBAEGI1cAACwEBAEHI1cAACwEBAEGI1sAACwEBAEHI1sAACwEBAEGI18
    AACwEBAEHI18AACwEBAEGI2MAACwEBAEHI2MAACwEBAEGI2cAACwEBAEHI2cAACwEBAEGI2sAACwEBAEHI2sAACwEBAEG
    I28AACwEBAEHI28AACwEBAEGI3MAACwEBAEHI3MAACwEBAEGI3cAACwEBAEHI3cAACwEBAEGI3sAACwEBAEHI3sAACwEB
    AEGI38AACwEBAEHI38AACwEBAEGI4MAACwEBAEHI4MAACwEBAEGI4cAACwEBAEHI4cAACwEBAEGI4sAACwEBAEHI4sAAC
    wEBAEGI48AACwEBAEHI48AACwEBAEGI5MAACwEBAEHI5MAACwEBAEGI5cAACwEBAEHI5cAACwEBAEGI5sAACwEBAEHI5s
    AACwEBAEGI58AACwEBAEHI58AACwEBAEGI6MAACwEBAEHI6MAACwEBAEGI6cAACwEBAEHI6cAACwEBAEGI6sAACwEBAEH
    I6sAACwEBAEGI68AACwEBAEHI68AACwEBAEGI7MAACwEBAEHI7MAACwEBAEGI7cAACwEBAEHI7cAACwEBAEGI7sAACwEB
    AEHI7sAACwEBAEGI78AACwEBAEHI78AACwEBAEGI8MAACwEBAEHI8MAACwEBAEGI8cAACwEBAEHI8cAACwEBAEGI8sAAC
    wEBAEHI8sAACwEBAEGI88AACwEBAEHI88AACwEBAEGI9MAACwEBAEHI9MAACwEBAEGI9cAACwEBAEHI9cAACwEBAEGI9s
    AACwEBAEHI9sAACwEBAEGI98AACwEBAEHI98AACwEBAEGI+MAACwEBAEHI+MAACwEBAEGI+cAACwEBAEHI+cAACwEBAEG
    I+sAACwEBAEHI+sAACwEBAEGI+8AACwEBAEHI+8AACwEBAEGI/MAACwEBAEHI/MAACwEBAEGI/cAACwEBAEHI/cAACwEB
    AEGI/sAACwEBAEHI/sAACwEBAEGI/8AACwEBAEHI/8AACwEBAEGIgMEACwEBAEHIgMEACwEBAEGIgcEACwEBAEHIgcEAC
    wEBAEGIgsEACwEBAEHIgsEACwEBAEGIg8EACwEBAEHIg8EACwEBAEGIhMEACwEBAEHIhMEACwEBAEGIhcEACwEBAEHIhc
    EACwEBAEGIhsEACwEBAEHIhsEACwEBAEGIh8EACwEBAEHIh8EACwEBAEGIiMEACwEBAEHIiMEACwEBAEGIicEACwEBAEH
    IicEACwEBAEGIisEACwEBAEHIisEACwEBAEGIi8EACwEBAEHIi8EACwEBAEGIjMEACwEBAEHIjMEACwEBAEGIjcEACwEB
    AEHIjcEACwEBAEGIjsEACwEBAEHIjsEACwEBAEGIj8EACwEBAEHIj8EACwEBAEGIkMEACwEBAEHIkMEACwEBAEGIkcEAC
    wEBAEHIkcEACwEBAEGIksEACwEBAEHIksEACwEBAEGIk8EACwEBAEHIk8EACwEBAEGIlMEACwEBAEHIlMEACwEBAEGIlc
    EACwEBAEHIlcEACwEBAEGIlsEACwEBAEHIlsEACwEBAEGIl8EACwEBAEHIl8EACwEBAEGImMEACwEBAEHImMEACwEBAEG
    ImcEACwEBAEHImcEACwEBAEGImsEACwEBAEHImsEACwEBAEGIm8EACwEBAEHIm8EACwEBAEGInMEACwEBAEHInMEACwEB
    AEGIncEACwEBAEHIncEACwEBAEGInsEACwEBAEHInsEACwEBAEGIn8EACwEBAEHIn8EACwEBAEGIoMEACwEBAEHIoMEAC
    wEBAEGIocEACwEBAEHIocEACwEBAEGIosEACwEBAEHIosEACwEBAEGIo8EACwEBAEHIo8EACwEBAEGIpMEACwEBAEHIpM
    EACwEBAEGIpcEACwEBAEHIpcEACwEBAEGIpsEACwEBAEHIpsEACwEBAEGIp8EACwEBAEHIp8EACwEBAEGIqMEACwEBAEH
    IqMEACwEBAEGIqcEACwEBAEHIqcEACwEBAEGIqsEACwEBAEHIqsEACwEBAEGIq8EACwEBAEHIq8EACwEBAEGIrMEACwEB
    AEHIrMEACwEBAEGIrcEACwEBAEHIrcEACwEBAEGIrsEACwEBAEHIrsEACwEBAEGIr8EACwEBAEHIr8EACwEBAEGIsMEAC
    wEBAEHIsMEACwEBAEGIscEACwEBAEHIscEACwEBAEGIssEACwEBAEHIssEACwEBAEGIs8EACwEBAEHIs8EACwEBAEGItM
    EACwEBAEHItMEACwEBAEGItcEACwEBAEHItcEACwEBAHsJcHJvZHVjZXJzAghsYW5ndWFnZQEEUnVzdAAMcHJvY2Vzc2V
    kLWJ5AwVydXN0Yx0xLjQ5LjAgKGUxODg0YThlMyAyMDIwLTEyLTI5KQZ3YWxydXMGMC4xOC4wDHdhc20tYmluZGdlbhIw
    LjIuNzAgKGI2MzU1YzI3MCk=
`.replace(/[^0-9a-zA-Z/+]/g, ""), wasmBytes$1 = decode$2(wasmBytesBase64$1);
function bls_init$1() {
  return wasm$1.bls_init();
}
let cachegetUint8Memory0$1 = null;
function getUint8Memory0$1() {
  return (cachegetUint8Memory0$1 === null || cachegetUint8Memory0$1.buffer !== wasm$1.memory.buffer) && (cachegetUint8Memory0$1 = new Uint8Array(wasm$1.memory.buffer)), cachegetUint8Memory0$1;
}
function passArray8ToWasm0$1(Q, ee) {
  const ne = ee(Q.length * 1);
  return getUint8Memory0$1().set(Q, ne / 1), [ne, Q.length];
}
function bls_verify$1(Q, ee, ne) {
  const [ie, ae] = passArray8ToWasm0$1(Q, wasm$1.__wbindgen_malloc), [ce, le] = passArray8ToWasm0$1(ee, wasm$1.__wbindgen_malloc), [de, ye] = passArray8ToWasm0$1(ne, wasm$1.__wbindgen_malloc);
  return wasm$1.bls_verify(ie, ae, ce, le, de, ye);
}
async function load$1(Q, ee) {
  if (typeof Response == "function" && Q instanceof Response) {
    const ne = await Q.arrayBuffer();
    return await WebAssembly.instantiate(ne, ee);
  } else {
    const ne = await WebAssembly.instantiate(Q, ee);
    return ne instanceof WebAssembly.Instance ? { instance: ne, module: Q } : ne;
  }
}
async function init$e() {
  const Q = {}, { instance: ee, module: ne } = await load$1(wasmBytes$1, Q);
  return wasm$1 = ee.exports, init$e.__wbindgen_wasm_module = ne, wasm$1;
}
let verify$1;
async function blsVerify$1(Q, ee, ne) {
  if (!verify$1) {
    if (await init$e(), bls_init$1() !== 0)
      throw new Error("Cannot initialize BLS");
    verify$1 = (ie, ae, ce) => bls_verify$1(ae, ce, ie) === 0;
  }
  return verify$1(Q, ee, ne);
}
class UnverifiedCertificateError extends AgentError$1 {
  constructor() {
    super("Cannot lookup unverified certificate. Call 'verify()' first.");
  }
}
function hashTreeToString(Q) {
  const ee = (ie) => ie.split(`
`).map((ae) => "  " + ae).join(`
`);
  function ne(ie) {
    const ae = new TextDecoder(void 0, { fatal: !0 });
    try {
      return JSON.stringify(ae.decode(ie));
    } catch {
      return `data(...${ie.byteLength} bytes)`;
    }
  }
  switch (Q[0]) {
    case 0:
      return "()";
    case 1: {
      const ie = hashTreeToString(Q[1]), ae = hashTreeToString(Q[2]);
      return `sub(
 left:
${ee(ie)}
---
 right:
${ee(ae)}
)`;
    }
    case 2: {
      const ie = ne(Q[1]), ae = hashTreeToString(Q[2]);
      return `label(
 label:
${ee(ie)}
 sub:
${ee(ae)}
)`;
    }
    case 3:
      return `leaf(...${Q[1].byteLength} bytes)`;
    case 4:
      return `pruned(${blobToHex(blobFromUint8Array(new Uint8Array(Q[1])))}`;
    default:
      return `unknown(${JSON.stringify(Q[0])})`;
  }
}
function isBufferEqual$1(Q, ee) {
  if (Q.length !== ee.length)
    return !1;
  for (let ne = 0; ne < Q.length; ne++)
    if (Q[ne] !== ee[ne])
      return !1;
  return !0;
}
class Certificate$1 {
  constructor(ee, ne = getDefaultAgent$1()) {
    this._agent = ne, this.verified = !1, this._rootKey = null, this.cert = decode$3(ee.certificate);
  }
  lookupEx(ee) {
    return this.checkState(), lookupPathEx(ee, this.cert.tree);
  }
  lookup(ee) {
    return this.checkState(), lookup_path$1(ee, this.cert.tree);
  }
  async verify() {
    const ee = await reconstruct$1(this.cert.tree), ne = await this._checkDelegation(this.cert.delegation), ie = this.cert.signature, ae = extractDER$1(ne), ce = buffer$1.Buffer.concat([domain_sep$1("ic-state-root"), ee]), le = await blsVerify$1(ae, ie, ce);
    return this.verified = le, le;
  }
  checkState() {
    if (!this.verified)
      throw new UnverifiedCertificateError();
  }
  async _checkDelegation(ee) {
    if (!ee) {
      if (!this._rootKey) {
        if (this._agent.rootKey)
          return this._rootKey = this._agent.rootKey, this._rootKey;
        throw new Error("Agent does not have a rootKey. Do you need to call 'fetchRootKey'?");
      }
      return this._rootKey;
    }
    const ne = new Certificate$1(ee, this._agent);
    if (!await ne.verify())
      throw new Error("fail to verify delegation certificate");
    const ie = ne.lookupEx(["subnet", ee.subnet_id, "public_key"]);
    if (!ie)
      throw new Error(`Could not find subnet key for subnet 0x${ee.subnet_id.toString("hex")}`);
    return buffer$1.Buffer.from(ie);
  }
}
const DER_PREFIX$1 = buffer$1.Buffer.from("308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100", "hex"), KEY_LENGTH$1 = 96;
function extractDER$1(Q) {
  const ee = DER_PREFIX$1.length + KEY_LENGTH$1;
  if (Q.length !== ee)
    throw new TypeError(`BLS DER-encoded public key must be ${ee} bytes long`);
  const ne = Q.slice(0, DER_PREFIX$1.length);
  if (!isBufferEqual$1(ne, DER_PREFIX$1))
    throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX$1}, but get ${ne}`);
  return Q.slice(DER_PREFIX$1.length);
}
async function reconstruct$1(Q) {
  switch (Q[0]) {
    case 0:
      return hash$1(domain_sep$1("ic-hashtree-empty"));
    case 4:
      return buffer$1.Buffer.from(Q[1]);
    case 3:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-leaf"),
        buffer$1.Buffer.from(Q[1])
      ]));
    case 2:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-labeled"),
        buffer$1.Buffer.from(Q[1]),
        buffer$1.Buffer.from(await reconstruct$1(Q[2]))
      ]));
    case 1:
      return hash$1(buffer$1.Buffer.concat([
        domain_sep$1("ic-hashtree-fork"),
        buffer$1.Buffer.from(await reconstruct$1(Q[1])),
        buffer$1.Buffer.from(await reconstruct$1(Q[2]))
      ]));
    default:
      throw new Error("unreachable");
  }
}
function domain_sep$1(Q) {
  const ee = buffer$1.Buffer.alloc(1);
  return ee.writeUInt8(Q.length, 0), buffer$1.Buffer.concat([ee, buffer$1.Buffer.from(Q)]);
}
function lookupPathEx(Q, ee) {
  const ne = lookup_path$1(Q.map((ie) => typeof ie == "string" ? blobFromText(ie) : blobFromUint8Array(new Uint8Array(ie))), ee);
  return ne && blobToUint8Array(ne);
}
function lookup_path$1(Q, ee) {
  if (Q.length === 0)
    switch (ee[0]) {
      case 3:
        return buffer$1.Buffer.from(ee[1]);
      default:
        return;
    }
  const ne = find_label$1(Q[0], flatten_forks$1(ee));
  if (ne)
    return lookup_path$1(Q.slice(1), ne);
}
function flatten_forks$1(Q) {
  switch (Q[0]) {
    case 0:
      return [];
    case 1:
      return flatten_forks$1(Q[1]).concat(flatten_forks$1(Q[2]));
    default:
      return [Q];
  }
}
function find_label$1(Q, ee) {
  if (ee.length !== 0) {
    for (const ne of ee)
      if (ne[0] === 2) {
        const ie = buffer$1.Buffer.from(ne[1]);
        if (isBufferEqual$1(Q, ie))
          return ne[2];
      }
  }
}
const FIVE_MINUTES_IN_MSEC$1 = 5 * 60 * 1e3;
function defaultStrategy$1() {
  return chain$1(conditionalDelay$1(once$2(), 1e3), backoff$1(1e3, 1.2), timeout$1(FIVE_MINUTES_IN_MSEC$1));
}
function once$2() {
  let Q = !0;
  return async () => Q ? (Q = !1, !0) : !1;
}
function conditionalDelay$1(Q, ee) {
  return async (ne, ie, ae) => {
    if (await Q(ne, ie, ae))
      return new Promise((ce) => setTimeout(ce, ee));
  };
}
function maxAttempts(Q) {
  let ee = Q;
  return async (ne, ie, ae) => {
    if (--ee <= 0)
      throw new Error(`Failed to retrieve a reply for request after ${Q} attempts:
  Request ID: ${toHex$1(ie)}
  Request status: ${ae}
`);
  };
}
function throttle(Q) {
  return () => new Promise((ee) => setTimeout(ee, Q));
}
function timeout$1(Q) {
  const ee = Date.now() + Q;
  return async (ne, ie, ae) => {
    if (Date.now() > ee)
      throw new Error(`Request timed out after ${Q} msec:
  Request ID: ${toHex$1(ie)}
  Request status: ${ae}
`);
  };
}
function backoff$1(Q, ee) {
  let ne = Q;
  return () => new Promise((ie) => setTimeout(() => {
    ne *= ee, ie();
  }, ne));
}
function chain$1(...Q) {
  return async (ee, ne, ie) => {
    for (const ae of Q)
      await ae(ee, ne, ie);
  };
}
const strategy = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  defaultStrategy: defaultStrategy$1,
  once: once$2,
  conditionalDelay: conditionalDelay$1,
  maxAttempts,
  throttle,
  timeout: timeout$1,
  backoff: backoff$1,
  chain: chain$1
}, Symbol.toStringTag, { value: "Module" }));
async function pollForResponse$1(Q, ee, ne, ie) {
  const ae = [blobFromText("request_status"), ne], ce = await Q.readState(ee, { paths: [ae] }), le = new Certificate$1(ce, Q);
  if (!await le.verify())
    throw new Error("Fail to verify certificate");
  const ye = le.lookup([...ae, blobFromText("status")]);
  let he;
  switch (typeof ye > "u" ? he = RequestStatusResponseStatus$1.Unknown : he = ye.toString(), he) {
    case RequestStatusResponseStatus$1.Replied:
      return le.lookup([...ae, blobFromText("reply")]);
    case RequestStatusResponseStatus$1.Received:
    case RequestStatusResponseStatus$1.Unknown:
    case RequestStatusResponseStatus$1.Processing:
      return await ie(ee, ne, he), pollForResponse$1(Q, ee, ne, ie);
    case RequestStatusResponseStatus$1.Rejected: {
      const Be = le.lookup([...ae, blobFromText("reject_code")]).toString(), Ee = le.lookup([...ae, blobFromText("reject_message")]).toString();
      throw new Error(`Call was rejected:
  Request ID: ${toHex$1(ne)}
  Reject code: ${Be}
  Reject text: ${Ee}
`);
    }
    case RequestStatusResponseStatus$1.Done:
      throw new Error(`Call was marked as done but we never saw the reply:
  Request ID: ${toHex$1(ne)}
`);
  }
  throw new Error("unreachable");
}
const index$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  pollForResponse: pollForResponse$1,
  strategy,
  defaultStrategy: defaultStrategy$1
}, Symbol.toStringTag, { value: "Module" }));
class ActorCallError$1 extends AgentError$1 {
  constructor(ee, ne, ie, ae) {
    super([
      "Call failed:",
      `  Canister: ${ee.toText()}`,
      `  Method: ${ne} (${ie})`,
      ...Object.getOwnPropertyNames(ae).map((ce) => `  "${ce}": ${JSON.stringify(ae[ce])}`)
    ].join(`
`)), this.canisterId = ee, this.methodName = ne, this.type = ie, this.props = ae;
  }
}
class QueryCallRejectedError$1 extends ActorCallError$1 {
  constructor(ee, ne, ie) {
    var ae;
    super(ee, ne, "query", {
      Status: ie.status,
      Code: (ae = ReplicaRejectCode$1[ie.reject_code]) !== null && ae !== void 0 ? ae : `Unknown Code "${ie.reject_code}"`,
      Message: ie.reject_message
    }), this.result = ie;
  }
}
class UpdateCallRejectedError$1 extends ActorCallError$1 {
  constructor(ee, ne, ie, ae) {
    super(ee, ne, "update", {
      "Request ID": toHex$1(ie),
      "HTTP status code": ae.status.toString(),
      "HTTP status text": ae.statusText
    }), this.requestId = ie, this.response = ae;
  }
}
var CanisterInstallMode$1;
(function(Q) {
  Q.Install = "install", Q.Reinstall = "reinstall", Q.Upgrade = "upgrade";
})(CanisterInstallMode$1 || (CanisterInstallMode$1 = {}));
const metadataSymbol$1 = Symbol.for("ic-agent-metadata");
class Actor$1 {
  constructor(ee) {
    this[metadataSymbol$1] = Object.freeze(ee);
  }
  static agentOf(ee) {
    return ee[metadataSymbol$1].config.agent;
  }
  static interfaceOf(ee) {
    return ee[metadataSymbol$1].service;
  }
  static canisterIdOf(ee) {
    return Principal$2.from(ee[metadataSymbol$1].config.canisterId);
  }
  static async install(ee, ne) {
    const ie = ee.mode === void 0 ? CanisterInstallMode$1.Install : ee.mode, ae = ee.arg ? [...ee.arg] : [], ce = [...ee.module], le = typeof ne.canisterId == "string" ? Principal$2.fromText(ne.canisterId) : ne.canisterId;
    await getManagementCanister$1(ne).install_code({
      mode: { [ie]: null },
      arg: ae,
      wasm_module: ce,
      canister_id: le
    });
  }
  static async createCanister(ee) {
    const { canister_id: ne } = await getManagementCanister$1(ee || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
    return ne;
  }
  static async createAndInstallCanister(ee, ne, ie) {
    const ae = await this.createCanister(ie);
    return await this.install(Object.assign({}, ne), Object.assign(Object.assign({}, ie), { canisterId: ae })), this.createActor(ee, Object.assign(Object.assign({}, ie), { canisterId: ae }));
  }
  static createActorClass(ee) {
    const ne = ee({ IDL: IDL$1 });
    class ie extends Actor$1 {
      constructor(ce) {
        const le = typeof ce.canisterId == "string" ? Principal$2.fromText(ce.canisterId) : ce.canisterId;
        super({
          config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG$1), ce), { canisterId: le }),
          service: ne
        });
        for (const [de, ye] of ne._fields)
          this[de] = _createActorMethod$1(this, de, ye);
      }
    }
    return ie;
  }
  static createActor(ee, ne) {
    return new (this.createActorClass(ee))(ne);
  }
}
function decodeReturnValue$1(Q, ee) {
  const ne = decode$4(Q, buffer$1.Buffer.from(ee));
  switch (ne.length) {
    case 0:
      return;
    case 1:
      return ne[0];
    default:
      return ne;
  }
}
const DEFAULT_ACTOR_CONFIG$1 = {
  pollingStrategyFactory: defaultStrategy$1
};
function _createActorMethod$1(Q, ee, ne) {
  let ie;
  ne.annotations.includes("query") ? ie = async (ce, ...le) => {
    var de, ye;
    ce = Object.assign(Object.assign({}, ce), (ye = (de = Q[metadataSymbol$1].config).queryTransform) === null || ye === void 0 ? void 0 : ye.call(de, ee, le, Object.assign(Object.assign({}, Q[metadataSymbol$1].config), ce)));
    const he = ce.agent || Q[metadataSymbol$1].config.agent || getDefaultAgent$1(), Be = Principal$2.from(ce.canisterId || Q[metadataSymbol$1].config.canisterId), Ee = encode$3(ne.argTypes, le), me = await he.query(Be, { methodName: ee, arg: Ee });
    switch (me.status) {
      case "rejected":
        throw new QueryCallRejectedError$1(Be, ee, me);
      case "replied":
        return decodeReturnValue$1(ne.retTypes, me.reply.arg);
    }
  } : ie = async (ce, ...le) => {
    var de, ye;
    ce = Object.assign(Object.assign({}, ce), (ye = (de = Q[metadataSymbol$1].config).callTransform) === null || ye === void 0 ? void 0 : ye.call(de, ee, le, Object.assign(Object.assign({}, Q[metadataSymbol$1].config), ce)));
    const he = ce.agent || Q[metadataSymbol$1].config.agent || getDefaultAgent$1(), { canisterId: Be, effectiveCanisterId: Ee, pollingStrategyFactory: me } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG$1), Q[metadataSymbol$1].config), ce), ge = Principal$2.from(Be), be = Ee !== void 0 ? Principal$2.from(Ee) : ge, we = encode$3(ne.argTypes, le), { requestId: Oe, response: He } = await he.call(ge, {
      methodName: ee,
      arg: we,
      effectiveCanisterId: be
    });
    if (!He.ok)
      throw new UpdateCallRejectedError$1(ge, ee, Oe, He);
    const Se = me(), Ge = await pollForResponse$1(he, be, Oe, Se);
    if (Ge !== void 0)
      return decodeReturnValue$1(ne.retTypes, Ge);
    if (ne.retTypes.length === 0)
      return;
    throw new Error(`Call was returned undefined, but type [${ne.retTypes.join(",")}].`);
  };
  const ae = (...ce) => ie({}, ...ce);
  return ae.withOptions = (ce) => (...le) => ie(ce, ...le), ae;
}
const assetCanister = ({ IDL: Q }) => Q.Service({
  retrieve: Q.Func([Q.Text], [Q.Vec(Q.Nat8)], ["query"]),
  store: Q.Func([Q.Text, Q.Vec(Q.Nat8)], [], [])
});
function createAssetCanisterActor(Q) {
  return Actor$1.createActor(assetCanister, Q);
}
const esm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  polling: index$1,
  Cbor: cbor,
  ActorCallError: ActorCallError$1,
  QueryCallRejectedError: QueryCallRejectedError$1,
  UpdateCallRejectedError: UpdateCallRejectedError$1,
  get CanisterInstallMode() {
    return CanisterInstallMode$1;
  },
  Actor: Actor$1,
  get ReplicaRejectCode() {
    return ReplicaRejectCode$1;
  },
  Expiry: Expiry$1,
  makeNonceTransform: makeNonceTransform$1,
  makeExpiryTransform,
  get RequestStatusResponseStatus() {
    return RequestStatusResponseStatus$1;
  },
  HttpAgent: HttpAgent$1,
  get ProxyMessageKind() {
    return ProxyMessageKind$1;
  },
  ProxyStubAgent,
  ProxyAgent,
  getDefaultAgent: getDefaultAgent$1,
  SignIdentity,
  AnonymousIdentity: AnonymousIdentity$1,
  createIdentityDescriptor,
  isIdentityDescriptor,
  UnverifiedCertificateError,
  hashTreeToString,
  Certificate: Certificate$1,
  reconstruct: reconstruct$1,
  lookupPathEx,
  lookup_path: lookup_path$1,
  get SubmitRequestType() {
    return SubmitRequestType$1;
  },
  createAssetCanisterActor,
  getManagementCanister: getManagementCanister$1,
  toHex: toHex$1,
  hash: hash$1,
  requestIdOf: requestIdOf$1,
  get verify() {
    return verify$1;
  },
  blsVerify: blsVerify$1
}, Symbol.toStringTag, { value: "Module" })), require$$5 = /* @__PURE__ */ getAugmentedNamespace(esm), require$$4 = /* @__PURE__ */ getAugmentedNamespace(esm$1);
var browserPonyfill = { exports: {} };
(function(Q, ee) {
  var ne = typeof self < "u" ? self : commonjsGlobal, ie = function() {
    function ce() {
      this.fetch = !1, this.DOMException = ne.DOMException;
    }
    return ce.prototype = ne, new ce();
  }();
  (function(ce) {
    (function(le) {
      var de = {
        searchParams: "URLSearchParams" in ce,
        iterable: "Symbol" in ce && "iterator" in Symbol,
        blob: "FileReader" in ce && "Blob" in ce && function() {
          try {
            return new Blob(), !0;
          } catch {
            return !1;
          }
        }(),
        formData: "FormData" in ce,
        arrayBuffer: "ArrayBuffer" in ce
      };
      function ye(yt) {
        return yt && DataView.prototype.isPrototypeOf(yt);
      }
      if (de.arrayBuffer)
        var he = [
          "[object Int8Array]",
          "[object Uint8Array]",
          "[object Uint8ClampedArray]",
          "[object Int16Array]",
          "[object Uint16Array]",
          "[object Int32Array]",
          "[object Uint32Array]",
          "[object Float32Array]",
          "[object Float64Array]"
        ], Be = ArrayBuffer.isView || function(yt) {
          return yt && he.indexOf(Object.prototype.toString.call(yt)) > -1;
        };
      function Ee(yt) {
        if (typeof yt != "string" && (yt = String(yt)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(yt))
          throw new TypeError("Invalid character in header field name");
        return yt.toLowerCase();
      }
      function me(yt) {
        return typeof yt != "string" && (yt = String(yt)), yt;
      }
      function ge(yt) {
        var Qt = {
          next: function() {
            var Yt = yt.shift();
            return { done: Yt === void 0, value: Yt };
          }
        };
        return de.iterable && (Qt[Symbol.iterator] = function() {
          return Qt;
        }), Qt;
      }
      function be(yt) {
        this.map = {}, yt instanceof be ? yt.forEach(function(Qt, Yt) {
          this.append(Yt, Qt);
        }, this) : Array.isArray(yt) ? yt.forEach(function(Qt) {
          this.append(Qt[0], Qt[1]);
        }, this) : yt && Object.getOwnPropertyNames(yt).forEach(function(Qt) {
          this.append(Qt, yt[Qt]);
        }, this);
      }
      be.prototype.append = function(yt, Qt) {
        yt = Ee(yt), Qt = me(Qt);
        var Yt = this.map[yt];
        this.map[yt] = Yt ? Yt + ", " + Qt : Qt;
      }, be.prototype.delete = function(yt) {
        delete this.map[Ee(yt)];
      }, be.prototype.get = function(yt) {
        return yt = Ee(yt), this.has(yt) ? this.map[yt] : null;
      }, be.prototype.has = function(yt) {
        return this.map.hasOwnProperty(Ee(yt));
      }, be.prototype.set = function(yt, Qt) {
        this.map[Ee(yt)] = me(Qt);
      }, be.prototype.forEach = function(yt, Qt) {
        for (var Yt in this.map)
          this.map.hasOwnProperty(Yt) && yt.call(Qt, this.map[Yt], Yt, this);
      }, be.prototype.keys = function() {
        var yt = [];
        return this.forEach(function(Qt, Yt) {
          yt.push(Yt);
        }), ge(yt);
      }, be.prototype.values = function() {
        var yt = [];
        return this.forEach(function(Qt) {
          yt.push(Qt);
        }), ge(yt);
      }, be.prototype.entries = function() {
        var yt = [];
        return this.forEach(function(Qt, Yt) {
          yt.push([Yt, Qt]);
        }), ge(yt);
      }, de.iterable && (be.prototype[Symbol.iterator] = be.prototype.entries);
      function we(yt) {
        if (yt.bodyUsed)
          return Promise.reject(new TypeError("Already read"));
        yt.bodyUsed = !0;
      }
      function Oe(yt) {
        return new Promise(function(Qt, Yt) {
          yt.onload = function() {
            Qt(yt.result);
          }, yt.onerror = function() {
            Yt(yt.error);
          };
        });
      }
      function He(yt) {
        var Qt = new FileReader(), Yt = Oe(Qt);
        return Qt.readAsArrayBuffer(yt), Yt;
      }
      function Se(yt) {
        var Qt = new FileReader(), Yt = Oe(Qt);
        return Qt.readAsText(yt), Yt;
      }
      function Ge(yt) {
        for (var Qt = new Uint8Array(yt), Yt = new Array(Qt.length), jt = 0; jt < Qt.length; jt++)
          Yt[jt] = String.fromCharCode(Qt[jt]);
        return Yt.join("");
      }
      function Fe(yt) {
        if (yt.slice)
          return yt.slice(0);
        var Qt = new Uint8Array(yt.byteLength);
        return Qt.set(new Uint8Array(yt)), Qt.buffer;
      }
      function Pe() {
        return this.bodyUsed = !1, this._initBody = function(yt) {
          this._bodyInit = yt, yt ? typeof yt == "string" ? this._bodyText = yt : de.blob && Blob.prototype.isPrototypeOf(yt) ? this._bodyBlob = yt : de.formData && FormData.prototype.isPrototypeOf(yt) ? this._bodyFormData = yt : de.searchParams && URLSearchParams.prototype.isPrototypeOf(yt) ? this._bodyText = yt.toString() : de.arrayBuffer && de.blob && ye(yt) ? (this._bodyArrayBuffer = Fe(yt.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : de.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(yt) || Be(yt)) ? this._bodyArrayBuffer = Fe(yt) : this._bodyText = yt = Object.prototype.toString.call(yt) : this._bodyText = "", this.headers.get("content-type") || (typeof yt == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : de.searchParams && URLSearchParams.prototype.isPrototypeOf(yt) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
        }, de.blob && (this.blob = function() {
          var yt = we(this);
          if (yt)
            return yt;
          if (this._bodyBlob)
            return Promise.resolve(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as blob");
          return Promise.resolve(new Blob([this._bodyText]));
        }, this.arrayBuffer = function() {
          return this._bodyArrayBuffer ? we(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(He);
        }), this.text = function() {
          var yt = we(this);
          if (yt)
            return yt;
          if (this._bodyBlob)
            return Se(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(Ge(this._bodyArrayBuffer));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as text");
          return Promise.resolve(this._bodyText);
        }, de.formData && (this.formData = function() {
          return this.text().then(Nt);
        }), this.json = function() {
          return this.text().then(JSON.parse);
        }, this;
      }
      var We = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
      function tt(yt) {
        var Qt = yt.toUpperCase();
        return We.indexOf(Qt) > -1 ? Qt : yt;
      }
      function Et(yt, Qt) {
        Qt = Qt || {};
        var Yt = Qt.body;
        if (yt instanceof Et) {
          if (yt.bodyUsed)
            throw new TypeError("Already read");
          this.url = yt.url, this.credentials = yt.credentials, Qt.headers || (this.headers = new be(yt.headers)), this.method = yt.method, this.mode = yt.mode, this.signal = yt.signal, !Yt && yt._bodyInit != null && (Yt = yt._bodyInit, yt.bodyUsed = !0);
        } else
          this.url = String(yt);
        if (this.credentials = Qt.credentials || this.credentials || "same-origin", (Qt.headers || !this.headers) && (this.headers = new be(Qt.headers)), this.method = tt(Qt.method || this.method || "GET"), this.mode = Qt.mode || this.mode || null, this.signal = Qt.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && Yt)
          throw new TypeError("Body not allowed for GET or HEAD requests");
        this._initBody(Yt);
      }
      Et.prototype.clone = function() {
        return new Et(this, { body: this._bodyInit });
      };
      function Nt(yt) {
        var Qt = new FormData();
        return yt.trim().split("&").forEach(function(Yt) {
          if (Yt) {
            var jt = Yt.split("="), $t = jt.shift().replace(/\+/g, " "), Wt = jt.join("=").replace(/\+/g, " ");
            Qt.append(decodeURIComponent($t), decodeURIComponent(Wt));
          }
        }), Qt;
      }
      function et(yt) {
        var Qt = new be(), Yt = yt.replace(/\r?\n[\t ]+/g, " ");
        return Yt.split(/\r?\n/).forEach(function(jt) {
          var $t = jt.split(":"), Wt = $t.shift().trim();
          if (Wt) {
            var st = $t.join(":").trim();
            Qt.append(Wt, st);
          }
        }), Qt;
      }
      Pe.call(Et.prototype);
      function mt(yt, Qt) {
        Qt || (Qt = {}), this.type = "default", this.status = Qt.status === void 0 ? 200 : Qt.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in Qt ? Qt.statusText : "OK", this.headers = new be(Qt.headers), this.url = Qt.url || "", this._initBody(yt);
      }
      Pe.call(mt.prototype), mt.prototype.clone = function() {
        return new mt(this._bodyInit, {
          status: this.status,
          statusText: this.statusText,
          headers: new be(this.headers),
          url: this.url
        });
      }, mt.error = function() {
        var yt = new mt(null, { status: 0, statusText: "" });
        return yt.type = "error", yt;
      };
      var Mt = [301, 302, 303, 307, 308];
      mt.redirect = function(yt, Qt) {
        if (Mt.indexOf(Qt) === -1)
          throw new RangeError("Invalid status code");
        return new mt(null, { status: Qt, headers: { location: yt } });
      }, le.DOMException = ce.DOMException;
      try {
        new le.DOMException();
      } catch {
        le.DOMException = function(Qt, Yt) {
          this.message = Qt, this.name = Yt;
          var jt = Error(Qt);
          this.stack = jt.stack;
        }, le.DOMException.prototype = Object.create(Error.prototype), le.DOMException.prototype.constructor = le.DOMException;
      }
      function Ot(yt, Qt) {
        return new Promise(function(Yt, jt) {
          var $t = new Et(yt, Qt);
          if ($t.signal && $t.signal.aborted)
            return jt(new le.DOMException("Aborted", "AbortError"));
          var Wt = new XMLHttpRequest();
          function st() {
            Wt.abort();
          }
          Wt.onload = function() {
            var at = {
              status: Wt.status,
              statusText: Wt.statusText,
              headers: et(Wt.getAllResponseHeaders() || "")
            };
            at.url = "responseURL" in Wt ? Wt.responseURL : at.headers.get("X-Request-URL");
            var wt = "response" in Wt ? Wt.response : Wt.responseText;
            Yt(new mt(wt, at));
          }, Wt.onerror = function() {
            jt(new TypeError("Network request failed"));
          }, Wt.ontimeout = function() {
            jt(new TypeError("Network request failed"));
          }, Wt.onabort = function() {
            jt(new le.DOMException("Aborted", "AbortError"));
          }, Wt.open($t.method, $t.url, !0), $t.credentials === "include" ? Wt.withCredentials = !0 : $t.credentials === "omit" && (Wt.withCredentials = !1), "responseType" in Wt && de.blob && (Wt.responseType = "blob"), $t.headers.forEach(function(at, wt) {
            Wt.setRequestHeader(wt, at);
          }), $t.signal && ($t.signal.addEventListener("abort", st), Wt.onreadystatechange = function() {
            Wt.readyState === 4 && $t.signal.removeEventListener("abort", st);
          }), Wt.send(typeof $t._bodyInit > "u" ? null : $t._bodyInit);
        });
      }
      return Ot.polyfill = !0, ce.fetch || (ce.fetch = Ot, ce.Headers = be, ce.Request = Et, ce.Response = mt), le.Headers = be, le.Request = Et, le.Response = mt, le.fetch = Ot, Object.defineProperty(le, "__esModule", { value: !0 }), le;
    })({});
  })(ie), ie.fetch.ponyfill = !0, delete ie.fetch.polyfill;
  var ae = ie;
  ee = ae.fetch, ee.default = ae.fetch, ee.fetch = ae.fetch, ee.Headers = ae.Headers, ee.Request = ae.Request, ee.Response = ae.Response, Q.exports = ee;
})(browserPonyfill, browserPonyfill.exports);
var ext = {}, ext_did = {};
Object.defineProperty(ext_did, "__esModule", { value: !0 });
ext_did.init = void 0;
ext_did.default = ({ IDL: Q }) => {
  const ee = Q.Nat32, ne = Q.Text, ie = Q.Text, ae = Q.Nat, ce = Q.Int, le = Q.Vec(Q.Nat8), de = Q.Vec(Q.Nat8), ye = Q.Record({
    locked: Q.Opt(ce),
    seller: Q.Principal,
    price: Q.Nat64
  }), he = Q.Variant({
    principal: Q.Principal,
    address: ne
  }), Be = Q.Variant({
    InvalidToken: ie,
    Other: Q.Text
  }), Ee = Q.Record({
    token: ie,
    user: he
  }), me = Q.Variant({ ok: ae, err: Be }), ge = Q.Variant({
    ok: Q.Tuple(ne, Q.Opt(ye)),
    err: Be
  }), be = Q.Variant({
    ok: Q.Vec(ee),
    err: Be
  }), we = Q.Variant({
    ok: Q.Vec(Q.Tuple(ee, Q.Opt(ye), Q.Opt(Q.Vec(Q.Nat8)))),
    err: Be
  }), Oe = Q.Record({
    to: he,
    token: ie,
    notify: Q.Bool,
    from: he,
    memo: de,
    subaccount: Q.Opt(le),
    amount: ae,
    fee: Q.Nat
  }), He = Q.Variant({
    ok: ae,
    err: Q.Variant({
      CannotNotify: ne,
      InsufficientBalance: Q.Null,
      InvalidToken: ie,
      Rejected: Q.Null,
      Unauthorized: ne,
      Other: Q.Text
    })
  }), Se = Q.Variant({
    fungible: Q.Record({
      decimals: Q.Nat8,
      metadata: Q.Opt(Q.Vec(Q.Nat8)),
      name: Q.Text,
      symbol: Q.Text
    }),
    nonfungible: Q.Record({ metadata: Q.Opt(Q.Vec(Q.Nat8)) })
  }), Ge = Q.Variant({ ok: Se, err: Be }), Fe = Q.Variant({ ok: ae, err: Be });
  return Q.Service({
    extensions: Q.Func([], [Q.Vec(Q.Text)], ["query"]),
    balance: Q.Func([Ee], [me], ["query"]),
    details: Q.Func([ie], [ge], ["query"]),
    tokens: Q.Func([ne], [be], ["query"]),
    tokens_ext: Q.Func([ne], [we], ["query"]),
    transfer: Q.Func([Oe], [He], []),
    metadata: Q.Func([ie], [Ge], ["query"]),
    supply: Q.Func([ie], [Fe], ["query"])
  });
};
const init$d = () => [];
ext_did.init = init$d;
var _default = {};
Object.defineProperty(_default, "__esModule", { value: !0 });
class NFT {
  constructor(ee, ne) {
    this.agent = ne, this.canisterId = ee;
  }
}
_default.default = NFT;
var account = {}, cryptoJs = { exports: {} };
function commonjsRequire(Q) {
  throw new Error('Could not dynamically require "' + Q + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var core = { exports: {} };
const __viteBrowserExternal = {}, __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: __viteBrowserExternal
}, Symbol.toStringTag, { value: "Module" })), require$$0 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);
var hasRequiredCore;
function requireCore() {
  return hasRequiredCore || (hasRequiredCore = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie();
    })(commonjsGlobal, function() {
      var ne = ne || function(ie, ae) {
        var ce;
        if (typeof window < "u" && window.crypto && (ce = window.crypto), typeof self < "u" && self.crypto && (ce = self.crypto), typeof globalThis < "u" && globalThis.crypto && (ce = globalThis.crypto), !ce && typeof window < "u" && window.msCrypto && (ce = window.msCrypto), !ce && typeof commonjsGlobal < "u" && commonjsGlobal.crypto && (ce = commonjsGlobal.crypto), !ce && typeof commonjsRequire == "function")
          try {
            ce = require$$0;
          } catch {
          }
        var le = function() {
          if (ce) {
            if (typeof ce.getRandomValues == "function")
              try {
                return ce.getRandomValues(new Uint32Array(1))[0];
              } catch {
              }
            if (typeof ce.randomBytes == "function")
              try {
                return ce.randomBytes(4).readInt32LE();
              } catch {
              }
          }
          throw new Error("Native crypto module could not be used to get secure random number.");
        }, de = Object.create || function() {
          function Se() {
          }
          return function(Ge) {
            var Fe;
            return Se.prototype = Ge, Fe = new Se(), Se.prototype = null, Fe;
          };
        }(), ye = {}, he = ye.lib = {}, Be = he.Base = function() {
          return {
            extend: function(Se) {
              var Ge = de(this);
              return Se && Ge.mixIn(Se), (!Ge.hasOwnProperty("init") || this.init === Ge.init) && (Ge.init = function() {
                Ge.$super.init.apply(this, arguments);
              }), Ge.init.prototype = Ge, Ge.$super = this, Ge;
            },
            create: function() {
              var Se = this.extend();
              return Se.init.apply(Se, arguments), Se;
            },
            init: function() {
            },
            mixIn: function(Se) {
              for (var Ge in Se)
                Se.hasOwnProperty(Ge) && (this[Ge] = Se[Ge]);
              Se.hasOwnProperty("toString") && (this.toString = Se.toString);
            },
            clone: function() {
              return this.init.prototype.extend(this);
            }
          };
        }(), Ee = he.WordArray = Be.extend({
          init: function(Se, Ge) {
            Se = this.words = Se || [], Ge != ae ? this.sigBytes = Ge : this.sigBytes = Se.length * 4;
          },
          toString: function(Se) {
            return (Se || ge).stringify(this);
          },
          concat: function(Se) {
            var Ge = this.words, Fe = Se.words, Pe = this.sigBytes, We = Se.sigBytes;
            if (this.clamp(), Pe % 4)
              for (var tt = 0; tt < We; tt++) {
                var Et = Fe[tt >>> 2] >>> 24 - tt % 4 * 8 & 255;
                Ge[Pe + tt >>> 2] |= Et << 24 - (Pe + tt) % 4 * 8;
              }
            else
              for (var Nt = 0; Nt < We; Nt += 4)
                Ge[Pe + Nt >>> 2] = Fe[Nt >>> 2];
            return this.sigBytes += We, this;
          },
          clamp: function() {
            var Se = this.words, Ge = this.sigBytes;
            Se[Ge >>> 2] &= 4294967295 << 32 - Ge % 4 * 8, Se.length = ie.ceil(Ge / 4);
          },
          clone: function() {
            var Se = Be.clone.call(this);
            return Se.words = this.words.slice(0), Se;
          },
          random: function(Se) {
            for (var Ge = [], Fe = 0; Fe < Se; Fe += 4)
              Ge.push(le());
            return new Ee.init(Ge, Se);
          }
        }), me = ye.enc = {}, ge = me.Hex = {
          stringify: function(Se) {
            for (var Ge = Se.words, Fe = Se.sigBytes, Pe = [], We = 0; We < Fe; We++) {
              var tt = Ge[We >>> 2] >>> 24 - We % 4 * 8 & 255;
              Pe.push((tt >>> 4).toString(16)), Pe.push((tt & 15).toString(16));
            }
            return Pe.join("");
          },
          parse: function(Se) {
            for (var Ge = Se.length, Fe = [], Pe = 0; Pe < Ge; Pe += 2)
              Fe[Pe >>> 3] |= parseInt(Se.substr(Pe, 2), 16) << 24 - Pe % 8 * 4;
            return new Ee.init(Fe, Ge / 2);
          }
        }, be = me.Latin1 = {
          stringify: function(Se) {
            for (var Ge = Se.words, Fe = Se.sigBytes, Pe = [], We = 0; We < Fe; We++) {
              var tt = Ge[We >>> 2] >>> 24 - We % 4 * 8 & 255;
              Pe.push(String.fromCharCode(tt));
            }
            return Pe.join("");
          },
          parse: function(Se) {
            for (var Ge = Se.length, Fe = [], Pe = 0; Pe < Ge; Pe++)
              Fe[Pe >>> 2] |= (Se.charCodeAt(Pe) & 255) << 24 - Pe % 4 * 8;
            return new Ee.init(Fe, Ge);
          }
        }, we = me.Utf8 = {
          stringify: function(Se) {
            try {
              return decodeURIComponent(escape(be.stringify(Se)));
            } catch {
              throw new Error("Malformed UTF-8 data");
            }
          },
          parse: function(Se) {
            return be.parse(unescape(encodeURIComponent(Se)));
          }
        }, Oe = he.BufferedBlockAlgorithm = Be.extend({
          reset: function() {
            this._data = new Ee.init(), this._nDataBytes = 0;
          },
          _append: function(Se) {
            typeof Se == "string" && (Se = we.parse(Se)), this._data.concat(Se), this._nDataBytes += Se.sigBytes;
          },
          _process: function(Se) {
            var Ge, Fe = this._data, Pe = Fe.words, We = Fe.sigBytes, tt = this.blockSize, Et = tt * 4, Nt = We / Et;
            Se ? Nt = ie.ceil(Nt) : Nt = ie.max((Nt | 0) - this._minBufferSize, 0);
            var et = Nt * tt, mt = ie.min(et * 4, We);
            if (et) {
              for (var Mt = 0; Mt < et; Mt += tt)
                this._doProcessBlock(Pe, Mt);
              Ge = Pe.splice(0, et), Fe.sigBytes -= mt;
            }
            return new Ee.init(Ge, mt);
          },
          clone: function() {
            var Se = Be.clone.call(this);
            return Se._data = this._data.clone(), Se;
          },
          _minBufferSize: 0
        });
        he.Hasher = Oe.extend({
          cfg: Be.extend(),
          init: function(Se) {
            this.cfg = this.cfg.extend(Se), this.reset();
          },
          reset: function() {
            Oe.reset.call(this), this._doReset();
          },
          update: function(Se) {
            return this._append(Se), this._process(), this;
          },
          finalize: function(Se) {
            Se && this._append(Se);
            var Ge = this._doFinalize();
            return Ge;
          },
          blockSize: 16,
          _createHelper: function(Se) {
            return function(Ge, Fe) {
              return new Se.init(Fe).finalize(Ge);
            };
          },
          _createHmacHelper: function(Se) {
            return function(Ge, Fe) {
              return new He.HMAC.init(Se, Fe).finalize(Ge);
            };
          }
        });
        var He = ye.algo = {};
        return ye;
      }(Math);
      return ne;
    });
  }(core)), core.exports;
}
var x64Core = { exports: {} }, hasRequiredX64Core;
function requireX64Core() {
  return hasRequiredX64Core || (hasRequiredX64Core = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.Base, de = ce.WordArray, ye = ae.x64 = {};
        ye.Word = le.extend({
          init: function(he, Be) {
            this.high = he, this.low = Be;
          }
        }), ye.WordArray = le.extend({
          init: function(he, Be) {
            he = this.words = he || [], Be != ie ? this.sigBytes = Be : this.sigBytes = he.length * 8;
          },
          toX32: function() {
            for (var he = this.words, Be = he.length, Ee = [], me = 0; me < Be; me++) {
              var ge = he[me];
              Ee.push(ge.high), Ee.push(ge.low);
            }
            return de.create(Ee, this.sigBytes);
          },
          clone: function() {
            for (var he = le.clone.call(this), Be = he.words = this.words.slice(0), Ee = Be.length, me = 0; me < Ee; me++)
              Be[me] = Be[me].clone();
            return he;
          }
        });
      }(), ne;
    });
  }(x64Core)), x64Core.exports;
}
var libTypedarrays = { exports: {} }, hasRequiredLibTypedarrays;
function requireLibTypedarrays() {
  return hasRequiredLibTypedarrays || (hasRequiredLibTypedarrays = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        if (typeof ArrayBuffer == "function") {
          var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ce.init, de = ce.init = function(ye) {
            if (ye instanceof ArrayBuffer && (ye = new Uint8Array(ye)), (ye instanceof Int8Array || typeof Uint8ClampedArray < "u" && ye instanceof Uint8ClampedArray || ye instanceof Int16Array || ye instanceof Uint16Array || ye instanceof Int32Array || ye instanceof Uint32Array || ye instanceof Float32Array || ye instanceof Float64Array) && (ye = new Uint8Array(ye.buffer, ye.byteOffset, ye.byteLength)), ye instanceof Uint8Array) {
              for (var he = ye.byteLength, Be = [], Ee = 0; Ee < he; Ee++)
                Be[Ee >>> 2] |= ye[Ee] << 24 - Ee % 4 * 8;
              le.call(this, Be, he);
            } else
              le.apply(this, arguments);
          };
          de.prototype = ce;
        }
      }(), ne.lib.WordArray;
    });
  }(libTypedarrays)), libTypedarrays.exports;
}
var encUtf16 = { exports: {} }, hasRequiredEncUtf16;
function requireEncUtf16() {
  return hasRequiredEncUtf16 || (hasRequiredEncUtf16 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ie.enc;
        le.Utf16 = le.Utf16BE = {
          stringify: function(ye) {
            for (var he = ye.words, Be = ye.sigBytes, Ee = [], me = 0; me < Be; me += 2) {
              var ge = he[me >>> 2] >>> 16 - me % 4 * 8 & 65535;
              Ee.push(String.fromCharCode(ge));
            }
            return Ee.join("");
          },
          parse: function(ye) {
            for (var he = ye.length, Be = [], Ee = 0; Ee < he; Ee++)
              Be[Ee >>> 1] |= ye.charCodeAt(Ee) << 16 - Ee % 2 * 16;
            return ce.create(Be, he * 2);
          }
        }, le.Utf16LE = {
          stringify: function(ye) {
            for (var he = ye.words, Be = ye.sigBytes, Ee = [], me = 0; me < Be; me += 2) {
              var ge = de(he[me >>> 2] >>> 16 - me % 4 * 8 & 65535);
              Ee.push(String.fromCharCode(ge));
            }
            return Ee.join("");
          },
          parse: function(ye) {
            for (var he = ye.length, Be = [], Ee = 0; Ee < he; Ee++)
              Be[Ee >>> 1] |= de(ye.charCodeAt(Ee) << 16 - Ee % 2 * 16);
            return ce.create(Be, he * 2);
          }
        };
        function de(ye) {
          return ye << 8 & 4278255360 | ye >>> 8 & 16711935;
        }
      }(), ne.enc.Utf16;
    });
  }(encUtf16)), encUtf16.exports;
}
var encBase64 = { exports: {} }, hasRequiredEncBase64;
function requireEncBase64() {
  return hasRequiredEncBase64 || (hasRequiredEncBase64 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ie.enc;
        le.Base64 = {
          stringify: function(ye) {
            var he = ye.words, Be = ye.sigBytes, Ee = this._map;
            ye.clamp();
            for (var me = [], ge = 0; ge < Be; ge += 3)
              for (var be = he[ge >>> 2] >>> 24 - ge % 4 * 8 & 255, we = he[ge + 1 >>> 2] >>> 24 - (ge + 1) % 4 * 8 & 255, Oe = he[ge + 2 >>> 2] >>> 24 - (ge + 2) % 4 * 8 & 255, He = be << 16 | we << 8 | Oe, Se = 0; Se < 4 && ge + Se * 0.75 < Be; Se++)
                me.push(Ee.charAt(He >>> 6 * (3 - Se) & 63));
            var Ge = Ee.charAt(64);
            if (Ge)
              for (; me.length % 4; )
                me.push(Ge);
            return me.join("");
          },
          parse: function(ye) {
            var he = ye.length, Be = this._map, Ee = this._reverseMap;
            if (!Ee) {
              Ee = this._reverseMap = [];
              for (var me = 0; me < Be.length; me++)
                Ee[Be.charCodeAt(me)] = me;
            }
            var ge = Be.charAt(64);
            if (ge) {
              var be = ye.indexOf(ge);
              be !== -1 && (he = be);
            }
            return de(ye, he, Ee);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
        };
        function de(ye, he, Be) {
          for (var Ee = [], me = 0, ge = 0; ge < he; ge++)
            if (ge % 4) {
              var be = Be[ye.charCodeAt(ge - 1)] << ge % 4 * 2, we = Be[ye.charCodeAt(ge)] >>> 6 - ge % 4 * 2, Oe = be | we;
              Ee[me >>> 2] |= Oe << 24 - me % 4 * 8, me++;
            }
          return ce.create(Ee, me);
        }
      }(), ne.enc.Base64;
    });
  }(encBase64)), encBase64.exports;
}
var encBase64url = { exports: {} }, hasRequiredEncBase64url;
function requireEncBase64url() {
  return hasRequiredEncBase64url || (hasRequiredEncBase64url = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ie.enc;
        le.Base64url = {
          stringify: function(ye, he = !0) {
            var Be = ye.words, Ee = ye.sigBytes, me = he ? this._safe_map : this._map;
            ye.clamp();
            for (var ge = [], be = 0; be < Ee; be += 3)
              for (var we = Be[be >>> 2] >>> 24 - be % 4 * 8 & 255, Oe = Be[be + 1 >>> 2] >>> 24 - (be + 1) % 4 * 8 & 255, He = Be[be + 2 >>> 2] >>> 24 - (be + 2) % 4 * 8 & 255, Se = we << 16 | Oe << 8 | He, Ge = 0; Ge < 4 && be + Ge * 0.75 < Ee; Ge++)
                ge.push(me.charAt(Se >>> 6 * (3 - Ge) & 63));
            var Fe = me.charAt(64);
            if (Fe)
              for (; ge.length % 4; )
                ge.push(Fe);
            return ge.join("");
          },
          parse: function(ye, he = !0) {
            var Be = ye.length, Ee = he ? this._safe_map : this._map, me = this._reverseMap;
            if (!me) {
              me = this._reverseMap = [];
              for (var ge = 0; ge < Ee.length; ge++)
                me[Ee.charCodeAt(ge)] = ge;
            }
            var be = Ee.charAt(64);
            if (be) {
              var we = ye.indexOf(be);
              we !== -1 && (Be = we);
            }
            return de(ye, Be, me);
          },
          _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
          _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
        };
        function de(ye, he, Be) {
          for (var Ee = [], me = 0, ge = 0; ge < he; ge++)
            if (ge % 4) {
              var be = Be[ye.charCodeAt(ge - 1)] << ge % 4 * 2, we = Be[ye.charCodeAt(ge)] >>> 6 - ge % 4 * 2, Oe = be | we;
              Ee[me >>> 2] |= Oe << 24 - me % 4 * 8, me++;
            }
          return ce.create(Ee, me);
        }
      }(), ne.enc.Base64url;
    });
  }(encBase64url)), encBase64url.exports;
}
var md5 = { exports: {} }, hasRequiredMd5;
function requireMd5() {
  return hasRequiredMd5 || (hasRequiredMd5 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.WordArray, de = ce.Hasher, ye = ae.algo, he = [];
        (function() {
          for (var we = 0; we < 64; we++)
            he[we] = ie.abs(ie.sin(we + 1)) * 4294967296 | 0;
        })();
        var Be = ye.MD5 = de.extend({
          _doReset: function() {
            this._hash = new le.init([
              1732584193,
              4023233417,
              2562383102,
              271733878
            ]);
          },
          _doProcessBlock: function(we, Oe) {
            for (var He = 0; He < 16; He++) {
              var Se = Oe + He, Ge = we[Se];
              we[Se] = (Ge << 8 | Ge >>> 24) & 16711935 | (Ge << 24 | Ge >>> 8) & 4278255360;
            }
            var Fe = this._hash.words, Pe = we[Oe + 0], We = we[Oe + 1], tt = we[Oe + 2], Et = we[Oe + 3], Nt = we[Oe + 4], et = we[Oe + 5], mt = we[Oe + 6], Mt = we[Oe + 7], Ot = we[Oe + 8], yt = we[Oe + 9], Qt = we[Oe + 10], Yt = we[Oe + 11], jt = we[Oe + 12], $t = we[Oe + 13], Wt = we[Oe + 14], st = we[Oe + 15], at = Fe[0], wt = Fe[1], Ut = Fe[2], $e = Fe[3];
            at = Ee(at, wt, Ut, $e, Pe, 7, he[0]), $e = Ee($e, at, wt, Ut, We, 12, he[1]), Ut = Ee(Ut, $e, at, wt, tt, 17, he[2]), wt = Ee(wt, Ut, $e, at, Et, 22, he[3]), at = Ee(at, wt, Ut, $e, Nt, 7, he[4]), $e = Ee($e, at, wt, Ut, et, 12, he[5]), Ut = Ee(Ut, $e, at, wt, mt, 17, he[6]), wt = Ee(wt, Ut, $e, at, Mt, 22, he[7]), at = Ee(at, wt, Ut, $e, Ot, 7, he[8]), $e = Ee($e, at, wt, Ut, yt, 12, he[9]), Ut = Ee(Ut, $e, at, wt, Qt, 17, he[10]), wt = Ee(wt, Ut, $e, at, Yt, 22, he[11]), at = Ee(at, wt, Ut, $e, jt, 7, he[12]), $e = Ee($e, at, wt, Ut, $t, 12, he[13]), Ut = Ee(Ut, $e, at, wt, Wt, 17, he[14]), wt = Ee(wt, Ut, $e, at, st, 22, he[15]), at = me(at, wt, Ut, $e, We, 5, he[16]), $e = me($e, at, wt, Ut, mt, 9, he[17]), Ut = me(Ut, $e, at, wt, Yt, 14, he[18]), wt = me(wt, Ut, $e, at, Pe, 20, he[19]), at = me(at, wt, Ut, $e, et, 5, he[20]), $e = me($e, at, wt, Ut, Qt, 9, he[21]), Ut = me(Ut, $e, at, wt, st, 14, he[22]), wt = me(wt, Ut, $e, at, Nt, 20, he[23]), at = me(at, wt, Ut, $e, yt, 5, he[24]), $e = me($e, at, wt, Ut, Wt, 9, he[25]), Ut = me(Ut, $e, at, wt, Et, 14, he[26]), wt = me(wt, Ut, $e, at, Ot, 20, he[27]), at = me(at, wt, Ut, $e, $t, 5, he[28]), $e = me($e, at, wt, Ut, tt, 9, he[29]), Ut = me(Ut, $e, at, wt, Mt, 14, he[30]), wt = me(wt, Ut, $e, at, jt, 20, he[31]), at = ge(at, wt, Ut, $e, et, 4, he[32]), $e = ge($e, at, wt, Ut, Ot, 11, he[33]), Ut = ge(Ut, $e, at, wt, Yt, 16, he[34]), wt = ge(wt, Ut, $e, at, Wt, 23, he[35]), at = ge(at, wt, Ut, $e, We, 4, he[36]), $e = ge($e, at, wt, Ut, Nt, 11, he[37]), Ut = ge(Ut, $e, at, wt, Mt, 16, he[38]), wt = ge(wt, Ut, $e, at, Qt, 23, he[39]), at = ge(at, wt, Ut, $e, $t, 4, he[40]), $e = ge($e, at, wt, Ut, Pe, 11, he[41]), Ut = ge(Ut, $e, at, wt, Et, 16, he[42]), wt = ge(wt, Ut, $e, at, mt, 23, he[43]), at = ge(at, wt, Ut, $e, yt, 4, he[44]), $e = ge($e, at, wt, Ut, jt, 11, he[45]), Ut = ge(Ut, $e, at, wt, st, 16, he[46]), wt = ge(wt, Ut, $e, at, tt, 23, he[47]), at = be(at, wt, Ut, $e, Pe, 6, he[48]), $e = be($e, at, wt, Ut, Mt, 10, he[49]), Ut = be(Ut, $e, at, wt, Wt, 15, he[50]), wt = be(wt, Ut, $e, at, et, 21, he[51]), at = be(at, wt, Ut, $e, jt, 6, he[52]), $e = be($e, at, wt, Ut, Et, 10, he[53]), Ut = be(Ut, $e, at, wt, Qt, 15, he[54]), wt = be(wt, Ut, $e, at, We, 21, he[55]), at = be(at, wt, Ut, $e, Ot, 6, he[56]), $e = be($e, at, wt, Ut, st, 10, he[57]), Ut = be(Ut, $e, at, wt, mt, 15, he[58]), wt = be(wt, Ut, $e, at, $t, 21, he[59]), at = be(at, wt, Ut, $e, Nt, 6, he[60]), $e = be($e, at, wt, Ut, Yt, 10, he[61]), Ut = be(Ut, $e, at, wt, tt, 15, he[62]), wt = be(wt, Ut, $e, at, yt, 21, he[63]), Fe[0] = Fe[0] + at | 0, Fe[1] = Fe[1] + wt | 0, Fe[2] = Fe[2] + Ut | 0, Fe[3] = Fe[3] + $e | 0;
          },
          _doFinalize: function() {
            var we = this._data, Oe = we.words, He = this._nDataBytes * 8, Se = we.sigBytes * 8;
            Oe[Se >>> 5] |= 128 << 24 - Se % 32;
            var Ge = ie.floor(He / 4294967296), Fe = He;
            Oe[(Se + 64 >>> 9 << 4) + 15] = (Ge << 8 | Ge >>> 24) & 16711935 | (Ge << 24 | Ge >>> 8) & 4278255360, Oe[(Se + 64 >>> 9 << 4) + 14] = (Fe << 8 | Fe >>> 24) & 16711935 | (Fe << 24 | Fe >>> 8) & 4278255360, we.sigBytes = (Oe.length + 1) * 4, this._process();
            for (var Pe = this._hash, We = Pe.words, tt = 0; tt < 4; tt++) {
              var Et = We[tt];
              We[tt] = (Et << 8 | Et >>> 24) & 16711935 | (Et << 24 | Et >>> 8) & 4278255360;
            }
            return Pe;
          },
          clone: function() {
            var we = de.clone.call(this);
            return we._hash = this._hash.clone(), we;
          }
        });
        function Ee(we, Oe, He, Se, Ge, Fe, Pe) {
          var We = we + (Oe & He | ~Oe & Se) + Ge + Pe;
          return (We << Fe | We >>> 32 - Fe) + Oe;
        }
        function me(we, Oe, He, Se, Ge, Fe, Pe) {
          var We = we + (Oe & Se | He & ~Se) + Ge + Pe;
          return (We << Fe | We >>> 32 - Fe) + Oe;
        }
        function ge(we, Oe, He, Se, Ge, Fe, Pe) {
          var We = we + (Oe ^ He ^ Se) + Ge + Pe;
          return (We << Fe | We >>> 32 - Fe) + Oe;
        }
        function be(we, Oe, He, Se, Ge, Fe, Pe) {
          var We = we + (He ^ (Oe | ~Se)) + Ge + Pe;
          return (We << Fe | We >>> 32 - Fe) + Oe;
        }
        ae.MD5 = de._createHelper(Be), ae.HmacMD5 = de._createHmacHelper(Be);
      }(Math), ne.MD5;
    });
  }(md5)), md5.exports;
}
var sha1 = { exports: {} }, hasRequiredSha1;
function requireSha1() {
  return hasRequiredSha1 || (hasRequiredSha1 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ae.Hasher, de = ie.algo, ye = [], he = de.SHA1 = le.extend({
          _doReset: function() {
            this._hash = new ce.init([
              1732584193,
              4023233417,
              2562383102,
              271733878,
              3285377520
            ]);
          },
          _doProcessBlock: function(Be, Ee) {
            for (var me = this._hash.words, ge = me[0], be = me[1], we = me[2], Oe = me[3], He = me[4], Se = 0; Se < 80; Se++) {
              if (Se < 16)
                ye[Se] = Be[Ee + Se] | 0;
              else {
                var Ge = ye[Se - 3] ^ ye[Se - 8] ^ ye[Se - 14] ^ ye[Se - 16];
                ye[Se] = Ge << 1 | Ge >>> 31;
              }
              var Fe = (ge << 5 | ge >>> 27) + He + ye[Se];
              Se < 20 ? Fe += (be & we | ~be & Oe) + 1518500249 : Se < 40 ? Fe += (be ^ we ^ Oe) + 1859775393 : Se < 60 ? Fe += (be & we | be & Oe | we & Oe) - 1894007588 : Fe += (be ^ we ^ Oe) - 899497514, He = Oe, Oe = we, we = be << 30 | be >>> 2, be = ge, ge = Fe;
            }
            me[0] = me[0] + ge | 0, me[1] = me[1] + be | 0, me[2] = me[2] + we | 0, me[3] = me[3] + Oe | 0, me[4] = me[4] + He | 0;
          },
          _doFinalize: function() {
            var Be = this._data, Ee = Be.words, me = this._nDataBytes * 8, ge = Be.sigBytes * 8;
            return Ee[ge >>> 5] |= 128 << 24 - ge % 32, Ee[(ge + 64 >>> 9 << 4) + 14] = Math.floor(me / 4294967296), Ee[(ge + 64 >>> 9 << 4) + 15] = me, Be.sigBytes = Ee.length * 4, this._process(), this._hash;
          },
          clone: function() {
            var Be = le.clone.call(this);
            return Be._hash = this._hash.clone(), Be;
          }
        });
        ie.SHA1 = le._createHelper(he), ie.HmacSHA1 = le._createHmacHelper(he);
      }(), ne.SHA1;
    });
  }(sha1)), sha1.exports;
}
var sha256 = { exports: {} }, hasRequiredSha256;
function requireSha256() {
  return hasRequiredSha256 || (hasRequiredSha256 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.WordArray, de = ce.Hasher, ye = ae.algo, he = [], Be = [];
        (function() {
          function ge(He) {
            for (var Se = ie.sqrt(He), Ge = 2; Ge <= Se; Ge++)
              if (!(He % Ge))
                return !1;
            return !0;
          }
          function be(He) {
            return (He - (He | 0)) * 4294967296 | 0;
          }
          for (var we = 2, Oe = 0; Oe < 64; )
            ge(we) && (Oe < 8 && (he[Oe] = be(ie.pow(we, 1 / 2))), Be[Oe] = be(ie.pow(we, 1 / 3)), Oe++), we++;
        })();
        var Ee = [], me = ye.SHA256 = de.extend({
          _doReset: function() {
            this._hash = new le.init(he.slice(0));
          },
          _doProcessBlock: function(ge, be) {
            for (var we = this._hash.words, Oe = we[0], He = we[1], Se = we[2], Ge = we[3], Fe = we[4], Pe = we[5], We = we[6], tt = we[7], Et = 0; Et < 64; Et++) {
              if (Et < 16)
                Ee[Et] = ge[be + Et] | 0;
              else {
                var Nt = Ee[Et - 15], et = (Nt << 25 | Nt >>> 7) ^ (Nt << 14 | Nt >>> 18) ^ Nt >>> 3, mt = Ee[Et - 2], Mt = (mt << 15 | mt >>> 17) ^ (mt << 13 | mt >>> 19) ^ mt >>> 10;
                Ee[Et] = et + Ee[Et - 7] + Mt + Ee[Et - 16];
              }
              var Ot = Fe & Pe ^ ~Fe & We, yt = Oe & He ^ Oe & Se ^ He & Se, Qt = (Oe << 30 | Oe >>> 2) ^ (Oe << 19 | Oe >>> 13) ^ (Oe << 10 | Oe >>> 22), Yt = (Fe << 26 | Fe >>> 6) ^ (Fe << 21 | Fe >>> 11) ^ (Fe << 7 | Fe >>> 25), jt = tt + Yt + Ot + Be[Et] + Ee[Et], $t = Qt + yt;
              tt = We, We = Pe, Pe = Fe, Fe = Ge + jt | 0, Ge = Se, Se = He, He = Oe, Oe = jt + $t | 0;
            }
            we[0] = we[0] + Oe | 0, we[1] = we[1] + He | 0, we[2] = we[2] + Se | 0, we[3] = we[3] + Ge | 0, we[4] = we[4] + Fe | 0, we[5] = we[5] + Pe | 0, we[6] = we[6] + We | 0, we[7] = we[7] + tt | 0;
          },
          _doFinalize: function() {
            var ge = this._data, be = ge.words, we = this._nDataBytes * 8, Oe = ge.sigBytes * 8;
            return be[Oe >>> 5] |= 128 << 24 - Oe % 32, be[(Oe + 64 >>> 9 << 4) + 14] = ie.floor(we / 4294967296), be[(Oe + 64 >>> 9 << 4) + 15] = we, ge.sigBytes = be.length * 4, this._process(), this._hash;
          },
          clone: function() {
            var ge = de.clone.call(this);
            return ge._hash = this._hash.clone(), ge;
          }
        });
        ae.SHA256 = de._createHelper(me), ae.HmacSHA256 = de._createHmacHelper(me);
      }(Math), ne.SHA256;
    });
  }(sha256)), sha256.exports;
}
var sha224 = { exports: {} }, hasRequiredSha224;
function requireSha224() {
  return hasRequiredSha224 || (hasRequiredSha224 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireSha256());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ie.algo, de = le.SHA256, ye = le.SHA224 = de.extend({
          _doReset: function() {
            this._hash = new ce.init([
              3238371032,
              914150663,
              812702999,
              4144912697,
              4290775857,
              1750603025,
              1694076839,
              3204075428
            ]);
          },
          _doFinalize: function() {
            var he = de._doFinalize.call(this);
            return he.sigBytes -= 4, he;
          }
        });
        ie.SHA224 = de._createHelper(ye), ie.HmacSHA224 = de._createHmacHelper(ye);
      }(), ne.SHA224;
    });
  }(sha224)), sha224.exports;
}
var sha512 = { exports: {} }, hasRequiredSha512;
function requireSha512() {
  return hasRequiredSha512 || (hasRequiredSha512 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireX64Core());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.Hasher, le = ie.x64, de = le.Word, ye = le.WordArray, he = ie.algo;
        function Be() {
          return de.create.apply(de, arguments);
        }
        var Ee = [
          Be(1116352408, 3609767458),
          Be(1899447441, 602891725),
          Be(3049323471, 3964484399),
          Be(3921009573, 2173295548),
          Be(961987163, 4081628472),
          Be(1508970993, 3053834265),
          Be(2453635748, 2937671579),
          Be(2870763221, 3664609560),
          Be(3624381080, 2734883394),
          Be(310598401, 1164996542),
          Be(607225278, 1323610764),
          Be(1426881987, 3590304994),
          Be(1925078388, 4068182383),
          Be(2162078206, 991336113),
          Be(2614888103, 633803317),
          Be(3248222580, 3479774868),
          Be(3835390401, 2666613458),
          Be(4022224774, 944711139),
          Be(264347078, 2341262773),
          Be(604807628, 2007800933),
          Be(770255983, 1495990901),
          Be(1249150122, 1856431235),
          Be(1555081692, 3175218132),
          Be(1996064986, 2198950837),
          Be(2554220882, 3999719339),
          Be(2821834349, 766784016),
          Be(2952996808, 2566594879),
          Be(3210313671, 3203337956),
          Be(3336571891, 1034457026),
          Be(3584528711, 2466948901),
          Be(113926993, 3758326383),
          Be(338241895, 168717936),
          Be(666307205, 1188179964),
          Be(773529912, 1546045734),
          Be(1294757372, 1522805485),
          Be(1396182291, 2643833823),
          Be(1695183700, 2343527390),
          Be(1986661051, 1014477480),
          Be(2177026350, 1206759142),
          Be(2456956037, 344077627),
          Be(2730485921, 1290863460),
          Be(2820302411, 3158454273),
          Be(3259730800, 3505952657),
          Be(3345764771, 106217008),
          Be(3516065817, 3606008344),
          Be(3600352804, 1432725776),
          Be(4094571909, 1467031594),
          Be(275423344, 851169720),
          Be(430227734, 3100823752),
          Be(506948616, 1363258195),
          Be(659060556, 3750685593),
          Be(883997877, 3785050280),
          Be(958139571, 3318307427),
          Be(1322822218, 3812723403),
          Be(1537002063, 2003034995),
          Be(1747873779, 3602036899),
          Be(1955562222, 1575990012),
          Be(2024104815, 1125592928),
          Be(2227730452, 2716904306),
          Be(2361852424, 442776044),
          Be(2428436474, 593698344),
          Be(2756734187, 3733110249),
          Be(3204031479, 2999351573),
          Be(3329325298, 3815920427),
          Be(3391569614, 3928383900),
          Be(3515267271, 566280711),
          Be(3940187606, 3454069534),
          Be(4118630271, 4000239992),
          Be(116418474, 1914138554),
          Be(174292421, 2731055270),
          Be(289380356, 3203993006),
          Be(460393269, 320620315),
          Be(685471733, 587496836),
          Be(852142971, 1086792851),
          Be(1017036298, 365543100),
          Be(1126000580, 2618297676),
          Be(1288033470, 3409855158),
          Be(1501505948, 4234509866),
          Be(1607167915, 987167468),
          Be(1816402316, 1246189591)
        ], me = [];
        (function() {
          for (var be = 0; be < 80; be++)
            me[be] = Be();
        })();
        var ge = he.SHA512 = ce.extend({
          _doReset: function() {
            this._hash = new ye.init([
              new de.init(1779033703, 4089235720),
              new de.init(3144134277, 2227873595),
              new de.init(1013904242, 4271175723),
              new de.init(2773480762, 1595750129),
              new de.init(1359893119, 2917565137),
              new de.init(2600822924, 725511199),
              new de.init(528734635, 4215389547),
              new de.init(1541459225, 327033209)
            ]);
          },
          _doProcessBlock: function(be, we) {
            for (var Oe = this._hash.words, He = Oe[0], Se = Oe[1], Ge = Oe[2], Fe = Oe[3], Pe = Oe[4], We = Oe[5], tt = Oe[6], Et = Oe[7], Nt = He.high, et = He.low, mt = Se.high, Mt = Se.low, Ot = Ge.high, yt = Ge.low, Qt = Fe.high, Yt = Fe.low, jt = Pe.high, $t = Pe.low, Wt = We.high, st = We.low, at = tt.high, wt = tt.low, Ut = Et.high, $e = Et.low, ir = Nt, tr = et, ar = mt, ht = Mt, qt = Ot, Xe = yt, nt = Qt, je = Yt, It = jt, lt = $t, Ye = Wt, _e = st, Ie = at, Ce = wt, ke = Ut, Ve = $e, Ze = 0; Ze < 80; Ze++) {
              var ct, kt, Jt = me[Ze];
              if (Ze < 16)
                kt = Jt.high = be[we + Ze * 2] | 0, ct = Jt.low = be[we + Ze * 2 + 1] | 0;
              else {
                var Kt = me[Ze - 15], Zt = Kt.high, De = Kt.low, Te = (Zt >>> 1 | De << 31) ^ (Zt >>> 8 | De << 24) ^ Zt >>> 7, Re = (De >>> 1 | Zt << 31) ^ (De >>> 8 | Zt << 24) ^ (De >>> 7 | Zt << 25), ot = me[Ze - 2], bt = ot.high, Pt = ot.low, Vt = (bt >>> 19 | Pt << 13) ^ (bt << 3 | Pt >>> 29) ^ bt >>> 6, Ir = (Pt >>> 19 | bt << 13) ^ (Pt << 3 | bt >>> 29) ^ (Pt >>> 6 | bt << 26), mr = me[Ze - 7], _r = mr.high, Br = mr.low, Tr = me[Ze - 16], cn = Tr.high, oi = Tr.low;
                ct = Re + Br, kt = Te + _r + (ct >>> 0 < Re >>> 0 ? 1 : 0), ct = ct + Ir, kt = kt + Vt + (ct >>> 0 < Ir >>> 0 ? 1 : 0), ct = ct + oi, kt = kt + cn + (ct >>> 0 < oi >>> 0 ? 1 : 0), Jt.high = kt, Jt.low = ct;
              }
              var un = It & Ye ^ ~It & Ie, Yn = lt & _e ^ ~lt & Ce, Vn = ir & ar ^ ir & qt ^ ar & qt, Dn = tr & ht ^ tr & Xe ^ ht & Xe, Ln = (ir >>> 28 | tr << 4) ^ (ir << 30 | tr >>> 2) ^ (ir << 25 | tr >>> 7), di = (tr >>> 28 | ir << 4) ^ (tr << 30 | ir >>> 2) ^ (tr << 25 | ir >>> 7), yi = (It >>> 14 | lt << 18) ^ (It >>> 18 | lt << 14) ^ (It << 23 | lt >>> 9), Zi = (lt >>> 14 | It << 18) ^ (lt >>> 18 | It << 14) ^ (lt << 23 | It >>> 9), ki = Ee[Ze], Pn = ki.high, ni = ki.low, Xn = Ve + Zi, fi = ke + yi + (Xn >>> 0 < Ve >>> 0 ? 1 : 0), Xn = Xn + Yn, fi = fi + un + (Xn >>> 0 < Yn >>> 0 ? 1 : 0), Xn = Xn + ni, fi = fi + Pn + (Xn >>> 0 < ni >>> 0 ? 1 : 0), Xn = Xn + ct, fi = fi + kt + (Xn >>> 0 < ct >>> 0 ? 1 : 0), Bi = di + Dn, Ci = Ln + Vn + (Bi >>> 0 < di >>> 0 ? 1 : 0);
              ke = Ie, Ve = Ce, Ie = Ye, Ce = _e, Ye = It, _e = lt, lt = je + Xn | 0, It = nt + fi + (lt >>> 0 < je >>> 0 ? 1 : 0) | 0, nt = qt, je = Xe, qt = ar, Xe = ht, ar = ir, ht = tr, tr = Xn + Bi | 0, ir = fi + Ci + (tr >>> 0 < Xn >>> 0 ? 1 : 0) | 0;
            }
            et = He.low = et + tr, He.high = Nt + ir + (et >>> 0 < tr >>> 0 ? 1 : 0), Mt = Se.low = Mt + ht, Se.high = mt + ar + (Mt >>> 0 < ht >>> 0 ? 1 : 0), yt = Ge.low = yt + Xe, Ge.high = Ot + qt + (yt >>> 0 < Xe >>> 0 ? 1 : 0), Yt = Fe.low = Yt + je, Fe.high = Qt + nt + (Yt >>> 0 < je >>> 0 ? 1 : 0), $t = Pe.low = $t + lt, Pe.high = jt + It + ($t >>> 0 < lt >>> 0 ? 1 : 0), st = We.low = st + _e, We.high = Wt + Ye + (st >>> 0 < _e >>> 0 ? 1 : 0), wt = tt.low = wt + Ce, tt.high = at + Ie + (wt >>> 0 < Ce >>> 0 ? 1 : 0), $e = Et.low = $e + Ve, Et.high = Ut + ke + ($e >>> 0 < Ve >>> 0 ? 1 : 0);
          },
          _doFinalize: function() {
            var be = this._data, we = be.words, Oe = this._nDataBytes * 8, He = be.sigBytes * 8;
            we[He >>> 5] |= 128 << 24 - He % 32, we[(He + 128 >>> 10 << 5) + 30] = Math.floor(Oe / 4294967296), we[(He + 128 >>> 10 << 5) + 31] = Oe, be.sigBytes = we.length * 4, this._process();
            var Se = this._hash.toX32();
            return Se;
          },
          clone: function() {
            var be = ce.clone.call(this);
            return be._hash = this._hash.clone(), be;
          },
          blockSize: 1024 / 32
        });
        ie.SHA512 = ce._createHelper(ge), ie.HmacSHA512 = ce._createHmacHelper(ge);
      }(), ne.SHA512;
    });
  }(sha512)), sha512.exports;
}
var sha384 = { exports: {} }, hasRequiredSha384;
function requireSha384() {
  return hasRequiredSha384 || (hasRequiredSha384 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireX64Core(), requireSha512());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.x64, ce = ae.Word, le = ae.WordArray, de = ie.algo, ye = de.SHA512, he = de.SHA384 = ye.extend({
          _doReset: function() {
            this._hash = new le.init([
              new ce.init(3418070365, 3238371032),
              new ce.init(1654270250, 914150663),
              new ce.init(2438529370, 812702999),
              new ce.init(355462360, 4144912697),
              new ce.init(1731405415, 4290775857),
              new ce.init(2394180231, 1750603025),
              new ce.init(3675008525, 1694076839),
              new ce.init(1203062813, 3204075428)
            ]);
          },
          _doFinalize: function() {
            var Be = ye._doFinalize.call(this);
            return Be.sigBytes -= 16, Be;
          }
        });
        ie.SHA384 = ye._createHelper(he), ie.HmacSHA384 = ye._createHmacHelper(he);
      }(), ne.SHA384;
    });
  }(sha384)), sha384.exports;
}
var sha3 = { exports: {} }, hasRequiredSha3;
function requireSha3() {
  return hasRequiredSha3 || (hasRequiredSha3 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireX64Core());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.WordArray, de = ce.Hasher, ye = ae.x64, he = ye.Word, Be = ae.algo, Ee = [], me = [], ge = [];
        (function() {
          for (var Oe = 1, He = 0, Se = 0; Se < 24; Se++) {
            Ee[Oe + 5 * He] = (Se + 1) * (Se + 2) / 2 % 64;
            var Ge = He % 5, Fe = (2 * Oe + 3 * He) % 5;
            Oe = Ge, He = Fe;
          }
          for (var Oe = 0; Oe < 5; Oe++)
            for (var He = 0; He < 5; He++)
              me[Oe + 5 * He] = He + (2 * Oe + 3 * He) % 5 * 5;
          for (var Pe = 1, We = 0; We < 24; We++) {
            for (var tt = 0, Et = 0, Nt = 0; Nt < 7; Nt++) {
              if (Pe & 1) {
                var et = (1 << Nt) - 1;
                et < 32 ? Et ^= 1 << et : tt ^= 1 << et - 32;
              }
              Pe & 128 ? Pe = Pe << 1 ^ 113 : Pe <<= 1;
            }
            ge[We] = he.create(tt, Et);
          }
        })();
        var be = [];
        (function() {
          for (var Oe = 0; Oe < 25; Oe++)
            be[Oe] = he.create();
        })();
        var we = Be.SHA3 = de.extend({
          cfg: de.cfg.extend({
            outputLength: 512
          }),
          _doReset: function() {
            for (var Oe = this._state = [], He = 0; He < 25; He++)
              Oe[He] = new he.init();
            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
          },
          _doProcessBlock: function(Oe, He) {
            for (var Se = this._state, Ge = this.blockSize / 2, Fe = 0; Fe < Ge; Fe++) {
              var Pe = Oe[He + 2 * Fe], We = Oe[He + 2 * Fe + 1];
              Pe = (Pe << 8 | Pe >>> 24) & 16711935 | (Pe << 24 | Pe >>> 8) & 4278255360, We = (We << 8 | We >>> 24) & 16711935 | (We << 24 | We >>> 8) & 4278255360;
              var tt = Se[Fe];
              tt.high ^= We, tt.low ^= Pe;
            }
            for (var Et = 0; Et < 24; Et++) {
              for (var Nt = 0; Nt < 5; Nt++) {
                for (var et = 0, mt = 0, Mt = 0; Mt < 5; Mt++) {
                  var tt = Se[Nt + 5 * Mt];
                  et ^= tt.high, mt ^= tt.low;
                }
                var Ot = be[Nt];
                Ot.high = et, Ot.low = mt;
              }
              for (var Nt = 0; Nt < 5; Nt++)
                for (var yt = be[(Nt + 4) % 5], Qt = be[(Nt + 1) % 5], Yt = Qt.high, jt = Qt.low, et = yt.high ^ (Yt << 1 | jt >>> 31), mt = yt.low ^ (jt << 1 | Yt >>> 31), Mt = 0; Mt < 5; Mt++) {
                  var tt = Se[Nt + 5 * Mt];
                  tt.high ^= et, tt.low ^= mt;
                }
              for (var $t = 1; $t < 25; $t++) {
                var et, mt, tt = Se[$t], Wt = tt.high, st = tt.low, at = Ee[$t];
                at < 32 ? (et = Wt << at | st >>> 32 - at, mt = st << at | Wt >>> 32 - at) : (et = st << at - 32 | Wt >>> 64 - at, mt = Wt << at - 32 | st >>> 64 - at);
                var wt = be[me[$t]];
                wt.high = et, wt.low = mt;
              }
              var Ut = be[0], $e = Se[0];
              Ut.high = $e.high, Ut.low = $e.low;
              for (var Nt = 0; Nt < 5; Nt++)
                for (var Mt = 0; Mt < 5; Mt++) {
                  var $t = Nt + 5 * Mt, tt = Se[$t], ir = be[$t], tr = be[(Nt + 1) % 5 + 5 * Mt], ar = be[(Nt + 2) % 5 + 5 * Mt];
                  tt.high = ir.high ^ ~tr.high & ar.high, tt.low = ir.low ^ ~tr.low & ar.low;
                }
              var tt = Se[0], ht = ge[Et];
              tt.high ^= ht.high, tt.low ^= ht.low;
            }
          },
          _doFinalize: function() {
            var Oe = this._data, He = Oe.words;
            this._nDataBytes * 8;
            var Se = Oe.sigBytes * 8, Ge = this.blockSize * 32;
            He[Se >>> 5] |= 1 << 24 - Se % 32, He[(ie.ceil((Se + 1) / Ge) * Ge >>> 5) - 1] |= 128, Oe.sigBytes = He.length * 4, this._process();
            for (var Fe = this._state, Pe = this.cfg.outputLength / 8, We = Pe / 8, tt = [], Et = 0; Et < We; Et++) {
              var Nt = Fe[Et], et = Nt.high, mt = Nt.low;
              et = (et << 8 | et >>> 24) & 16711935 | (et << 24 | et >>> 8) & 4278255360, mt = (mt << 8 | mt >>> 24) & 16711935 | (mt << 24 | mt >>> 8) & 4278255360, tt.push(mt), tt.push(et);
            }
            return new le.init(tt, Pe);
          },
          clone: function() {
            for (var Oe = de.clone.call(this), He = Oe._state = this._state.slice(0), Se = 0; Se < 25; Se++)
              He[Se] = He[Se].clone();
            return Oe;
          }
        });
        ae.SHA3 = de._createHelper(we), ae.HmacSHA3 = de._createHmacHelper(we);
      }(Math), ne.SHA3;
    });
  }(sha3)), sha3.exports;
}
var ripemd160 = { exports: {} }, hasRequiredRipemd160;
function requireRipemd160() {
  return hasRequiredRipemd160 || (hasRequiredRipemd160 = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      /** @preserve
      			(c) 2012 by Cédric Mesnil. All rights reserved.
      
      			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
      
      			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      
      			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
      			*/
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.WordArray, de = ce.Hasher, ye = ae.algo, he = le.create([
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13
        ]), Be = le.create([
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11
        ]), Ee = le.create([
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6
        ]), me = le.create([
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11
        ]), ge = le.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), be = le.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), we = ye.RIPEMD160 = de.extend({
          _doReset: function() {
            this._hash = le.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          },
          _doProcessBlock: function(We, tt) {
            for (var Et = 0; Et < 16; Et++) {
              var Nt = tt + Et, et = We[Nt];
              We[Nt] = (et << 8 | et >>> 24) & 16711935 | (et << 24 | et >>> 8) & 4278255360;
            }
            var mt = this._hash.words, Mt = ge.words, Ot = be.words, yt = he.words, Qt = Be.words, Yt = Ee.words, jt = me.words, $t, Wt, st, at, wt, Ut, $e, ir, tr, ar;
            Ut = $t = mt[0], $e = Wt = mt[1], ir = st = mt[2], tr = at = mt[3], ar = wt = mt[4];
            for (var ht, Et = 0; Et < 80; Et += 1)
              ht = $t + We[tt + yt[Et]] | 0, Et < 16 ? ht += Oe(Wt, st, at) + Mt[0] : Et < 32 ? ht += He(Wt, st, at) + Mt[1] : Et < 48 ? ht += Se(Wt, st, at) + Mt[2] : Et < 64 ? ht += Ge(Wt, st, at) + Mt[3] : ht += Fe(Wt, st, at) + Mt[4], ht = ht | 0, ht = Pe(ht, Yt[Et]), ht = ht + wt | 0, $t = wt, wt = at, at = Pe(st, 10), st = Wt, Wt = ht, ht = Ut + We[tt + Qt[Et]] | 0, Et < 16 ? ht += Fe($e, ir, tr) + Ot[0] : Et < 32 ? ht += Ge($e, ir, tr) + Ot[1] : Et < 48 ? ht += Se($e, ir, tr) + Ot[2] : Et < 64 ? ht += He($e, ir, tr) + Ot[3] : ht += Oe($e, ir, tr) + Ot[4], ht = ht | 0, ht = Pe(ht, jt[Et]), ht = ht + ar | 0, Ut = ar, ar = tr, tr = Pe(ir, 10), ir = $e, $e = ht;
            ht = mt[1] + st + tr | 0, mt[1] = mt[2] + at + ar | 0, mt[2] = mt[3] + wt + Ut | 0, mt[3] = mt[4] + $t + $e | 0, mt[4] = mt[0] + Wt + ir | 0, mt[0] = ht;
          },
          _doFinalize: function() {
            var We = this._data, tt = We.words, Et = this._nDataBytes * 8, Nt = We.sigBytes * 8;
            tt[Nt >>> 5] |= 128 << 24 - Nt % 32, tt[(Nt + 64 >>> 9 << 4) + 14] = (Et << 8 | Et >>> 24) & 16711935 | (Et << 24 | Et >>> 8) & 4278255360, We.sigBytes = (tt.length + 1) * 4, this._process();
            for (var et = this._hash, mt = et.words, Mt = 0; Mt < 5; Mt++) {
              var Ot = mt[Mt];
              mt[Mt] = (Ot << 8 | Ot >>> 24) & 16711935 | (Ot << 24 | Ot >>> 8) & 4278255360;
            }
            return et;
          },
          clone: function() {
            var We = de.clone.call(this);
            return We._hash = this._hash.clone(), We;
          }
        });
        function Oe(We, tt, Et) {
          return We ^ tt ^ Et;
        }
        function He(We, tt, Et) {
          return We & tt | ~We & Et;
        }
        function Se(We, tt, Et) {
          return (We | ~tt) ^ Et;
        }
        function Ge(We, tt, Et) {
          return We & Et | tt & ~Et;
        }
        function Fe(We, tt, Et) {
          return We ^ (tt | ~Et);
        }
        function Pe(We, tt) {
          return We << tt | We >>> 32 - tt;
        }
        ae.RIPEMD160 = de._createHelper(we), ae.HmacRIPEMD160 = de._createHmacHelper(we);
      }(), ne.RIPEMD160;
    });
  }(ripemd160)), ripemd160.exports;
}
var hmac = { exports: {} }, hasRequiredHmac;
function requireHmac() {
  return hasRequiredHmac || (hasRequiredHmac = 1, function(Q, ee) {
    (function(ne, ie) {
      Q.exports = ie(requireCore());
    })(commonjsGlobal, function(ne) {
      (function() {
        var ie = ne, ae = ie.lib, ce = ae.Base, le = ie.enc, de = le.Utf8, ye = ie.algo;
        ye.HMAC = ce.extend({
          init: function(he, Be) {
            he = this._hasher = new he.init(), typeof Be == "string" && (Be = de.parse(Be));
            var Ee = he.blockSize, me = Ee * 4;
            Be.sigBytes > me && (Be = he.finalize(Be)), Be.clamp();
            for (var ge = this._oKey = Be.clone(), be = this._iKey = Be.clone(), we = ge.words, Oe = be.words, He = 0; He < Ee; He++)
              we[He] ^= 1549556828, Oe[He] ^= 909522486;
            ge.sigBytes = be.sigBytes = me, this.reset();
          },
          reset: function() {
            var he = this._hasher;
            he.reset(), he.update(this._iKey);
          },
          update: function(he) {
            return this._hasher.update(he), this;
          },
          finalize: function(he) {
            var Be = this._hasher, Ee = Be.finalize(he);
            Be.reset();
            var me = Be.finalize(this._oKey.clone().concat(Ee));
            return me;
          }
        });
      })();
    });
  }(hmac)), hmac.exports;
}
var pbkdf2 = { exports: {} }, hasRequiredPbkdf2;
function requirePbkdf2() {
  return hasRequiredPbkdf2 || (hasRequiredPbkdf2 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireSha1(), requireHmac());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.Base, le = ae.WordArray, de = ie.algo, ye = de.SHA1, he = de.HMAC, Be = de.PBKDF2 = ce.extend({
          cfg: ce.extend({
            keySize: 128 / 32,
            hasher: ye,
            iterations: 1
          }),
          init: function(Ee) {
            this.cfg = this.cfg.extend(Ee);
          },
          compute: function(Ee, me) {
            for (var ge = this.cfg, be = he.create(ge.hasher, Ee), we = le.create(), Oe = le.create([1]), He = we.words, Se = Oe.words, Ge = ge.keySize, Fe = ge.iterations; He.length < Ge; ) {
              var Pe = be.update(me).finalize(Oe);
              be.reset();
              for (var We = Pe.words, tt = We.length, Et = Pe, Nt = 1; Nt < Fe; Nt++) {
                Et = be.finalize(Et), be.reset();
                for (var et = Et.words, mt = 0; mt < tt; mt++)
                  We[mt] ^= et[mt];
              }
              we.concat(Pe), Se[0]++;
            }
            return we.sigBytes = Ge * 4, we;
          }
        });
        ie.PBKDF2 = function(Ee, me, ge) {
          return Be.create(ge).compute(Ee, me);
        };
      }(), ne.PBKDF2;
    });
  }(pbkdf2)), pbkdf2.exports;
}
var evpkdf = { exports: {} }, hasRequiredEvpkdf;
function requireEvpkdf() {
  return hasRequiredEvpkdf || (hasRequiredEvpkdf = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireSha1(), requireHmac());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.Base, le = ae.WordArray, de = ie.algo, ye = de.MD5, he = de.EvpKDF = ce.extend({
          cfg: ce.extend({
            keySize: 128 / 32,
            hasher: ye,
            iterations: 1
          }),
          init: function(Be) {
            this.cfg = this.cfg.extend(Be);
          },
          compute: function(Be, Ee) {
            for (var me, ge = this.cfg, be = ge.hasher.create(), we = le.create(), Oe = we.words, He = ge.keySize, Se = ge.iterations; Oe.length < He; ) {
              me && be.update(me), me = be.update(Be).finalize(Ee), be.reset();
              for (var Ge = 1; Ge < Se; Ge++)
                me = be.finalize(me), be.reset();
              we.concat(me);
            }
            return we.sigBytes = He * 4, we;
          }
        });
        ie.EvpKDF = function(Be, Ee, me) {
          return he.create(me).compute(Be, Ee);
        };
      }(), ne.EvpKDF;
    });
  }(evpkdf)), evpkdf.exports;
}
var cipherCore = { exports: {} }, hasRequiredCipherCore;
function requireCipherCore() {
  return hasRequiredCipherCore || (hasRequiredCipherCore = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEvpkdf());
    })(commonjsGlobal, function(ne) {
      ne.lib.Cipher || function(ie) {
        var ae = ne, ce = ae.lib, le = ce.Base, de = ce.WordArray, ye = ce.BufferedBlockAlgorithm, he = ae.enc;
        he.Utf8;
        var Be = he.Base64, Ee = ae.algo, me = Ee.EvpKDF, ge = ce.Cipher = ye.extend({
          cfg: le.extend(),
          createEncryptor: function(et, mt) {
            return this.create(this._ENC_XFORM_MODE, et, mt);
          },
          createDecryptor: function(et, mt) {
            return this.create(this._DEC_XFORM_MODE, et, mt);
          },
          init: function(et, mt, Mt) {
            this.cfg = this.cfg.extend(Mt), this._xformMode = et, this._key = mt, this.reset();
          },
          reset: function() {
            ye.reset.call(this), this._doReset();
          },
          process: function(et) {
            return this._append(et), this._process();
          },
          finalize: function(et) {
            et && this._append(et);
            var mt = this._doFinalize();
            return mt;
          },
          keySize: 128 / 32,
          ivSize: 128 / 32,
          _ENC_XFORM_MODE: 1,
          _DEC_XFORM_MODE: 2,
          _createHelper: function() {
            function et(mt) {
              return typeof mt == "string" ? Nt : We;
            }
            return function(mt) {
              return {
                encrypt: function(Mt, Ot, yt) {
                  return et(Ot).encrypt(mt, Mt, Ot, yt);
                },
                decrypt: function(Mt, Ot, yt) {
                  return et(Ot).decrypt(mt, Mt, Ot, yt);
                }
              };
            };
          }()
        });
        ce.StreamCipher = ge.extend({
          _doFinalize: function() {
            var et = this._process(!0);
            return et;
          },
          blockSize: 1
        });
        var be = ae.mode = {}, we = ce.BlockCipherMode = le.extend({
          createEncryptor: function(et, mt) {
            return this.Encryptor.create(et, mt);
          },
          createDecryptor: function(et, mt) {
            return this.Decryptor.create(et, mt);
          },
          init: function(et, mt) {
            this._cipher = et, this._iv = mt;
          }
        }), Oe = be.CBC = function() {
          var et = we.extend();
          et.Encryptor = et.extend({
            processBlock: function(Mt, Ot) {
              var yt = this._cipher, Qt = yt.blockSize;
              mt.call(this, Mt, Ot, Qt), yt.encryptBlock(Mt, Ot), this._prevBlock = Mt.slice(Ot, Ot + Qt);
            }
          }), et.Decryptor = et.extend({
            processBlock: function(Mt, Ot) {
              var yt = this._cipher, Qt = yt.blockSize, Yt = Mt.slice(Ot, Ot + Qt);
              yt.decryptBlock(Mt, Ot), mt.call(this, Mt, Ot, Qt), this._prevBlock = Yt;
            }
          });
          function mt(Mt, Ot, yt) {
            var Qt, Yt = this._iv;
            Yt ? (Qt = Yt, this._iv = ie) : Qt = this._prevBlock;
            for (var jt = 0; jt < yt; jt++)
              Mt[Ot + jt] ^= Qt[jt];
          }
          return et;
        }(), He = ae.pad = {}, Se = He.Pkcs7 = {
          pad: function(et, mt) {
            for (var Mt = mt * 4, Ot = Mt - et.sigBytes % Mt, yt = Ot << 24 | Ot << 16 | Ot << 8 | Ot, Qt = [], Yt = 0; Yt < Ot; Yt += 4)
              Qt.push(yt);
            var jt = de.create(Qt, Ot);
            et.concat(jt);
          },
          unpad: function(et) {
            var mt = et.words[et.sigBytes - 1 >>> 2] & 255;
            et.sigBytes -= mt;
          }
        };
        ce.BlockCipher = ge.extend({
          cfg: ge.cfg.extend({
            mode: Oe,
            padding: Se
          }),
          reset: function() {
            var et;
            ge.reset.call(this);
            var mt = this.cfg, Mt = mt.iv, Ot = mt.mode;
            this._xformMode == this._ENC_XFORM_MODE ? et = Ot.createEncryptor : (et = Ot.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == et ? this._mode.init(this, Mt && Mt.words) : (this._mode = et.call(Ot, this, Mt && Mt.words), this._mode.__creator = et);
          },
          _doProcessBlock: function(et, mt) {
            this._mode.processBlock(et, mt);
          },
          _doFinalize: function() {
            var et, mt = this.cfg.padding;
            return this._xformMode == this._ENC_XFORM_MODE ? (mt.pad(this._data, this.blockSize), et = this._process(!0)) : (et = this._process(!0), mt.unpad(et)), et;
          },
          blockSize: 128 / 32
        });
        var Ge = ce.CipherParams = le.extend({
          init: function(et) {
            this.mixIn(et);
          },
          toString: function(et) {
            return (et || this.formatter).stringify(this);
          }
        }), Fe = ae.format = {}, Pe = Fe.OpenSSL = {
          stringify: function(et) {
            var mt, Mt = et.ciphertext, Ot = et.salt;
            return Ot ? mt = de.create([1398893684, 1701076831]).concat(Ot).concat(Mt) : mt = Mt, mt.toString(Be);
          },
          parse: function(et) {
            var mt, Mt = Be.parse(et), Ot = Mt.words;
            return Ot[0] == 1398893684 && Ot[1] == 1701076831 && (mt = de.create(Ot.slice(2, 4)), Ot.splice(0, 4), Mt.sigBytes -= 16), Ge.create({ ciphertext: Mt, salt: mt });
          }
        }, We = ce.SerializableCipher = le.extend({
          cfg: le.extend({
            format: Pe
          }),
          encrypt: function(et, mt, Mt, Ot) {
            Ot = this.cfg.extend(Ot);
            var yt = et.createEncryptor(Mt, Ot), Qt = yt.finalize(mt), Yt = yt.cfg;
            return Ge.create({
              ciphertext: Qt,
              key: Mt,
              iv: Yt.iv,
              algorithm: et,
              mode: Yt.mode,
              padding: Yt.padding,
              blockSize: et.blockSize,
              formatter: Ot.format
            });
          },
          decrypt: function(et, mt, Mt, Ot) {
            Ot = this.cfg.extend(Ot), mt = this._parse(mt, Ot.format);
            var yt = et.createDecryptor(Mt, Ot).finalize(mt.ciphertext);
            return yt;
          },
          _parse: function(et, mt) {
            return typeof et == "string" ? mt.parse(et, this) : et;
          }
        }), tt = ae.kdf = {}, Et = tt.OpenSSL = {
          execute: function(et, mt, Mt, Ot) {
            Ot || (Ot = de.random(64 / 8));
            var yt = me.create({ keySize: mt + Mt }).compute(et, Ot), Qt = de.create(yt.words.slice(mt), Mt * 4);
            return yt.sigBytes = mt * 4, Ge.create({ key: yt, iv: Qt, salt: Ot });
          }
        }, Nt = ce.PasswordBasedCipher = We.extend({
          cfg: We.cfg.extend({
            kdf: Et
          }),
          encrypt: function(et, mt, Mt, Ot) {
            Ot = this.cfg.extend(Ot);
            var yt = Ot.kdf.execute(Mt, et.keySize, et.ivSize);
            Ot.iv = yt.iv;
            var Qt = We.encrypt.call(this, et, mt, yt.key, Ot);
            return Qt.mixIn(yt), Qt;
          },
          decrypt: function(et, mt, Mt, Ot) {
            Ot = this.cfg.extend(Ot), mt = this._parse(mt, Ot.format);
            var yt = Ot.kdf.execute(Mt, et.keySize, et.ivSize, mt.salt);
            Ot.iv = yt.iv;
            var Qt = We.decrypt.call(this, et, mt, yt.key, Ot);
            return Qt;
          }
        });
      }();
    });
  }(cipherCore)), cipherCore.exports;
}
var modeCfb = { exports: {} }, hasRequiredModeCfb;
function requireModeCfb() {
  return hasRequiredModeCfb || (hasRequiredModeCfb = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.CFB = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        ie.Encryptor = ie.extend({
          processBlock: function(ce, le) {
            var de = this._cipher, ye = de.blockSize;
            ae.call(this, ce, le, ye, de), this._prevBlock = ce.slice(le, le + ye);
          }
        }), ie.Decryptor = ie.extend({
          processBlock: function(ce, le) {
            var de = this._cipher, ye = de.blockSize, he = ce.slice(le, le + ye);
            ae.call(this, ce, le, ye, de), this._prevBlock = he;
          }
        });
        function ae(ce, le, de, ye) {
          var he, Be = this._iv;
          Be ? (he = Be.slice(0), this._iv = void 0) : he = this._prevBlock, ye.encryptBlock(he, 0);
          for (var Ee = 0; Ee < de; Ee++)
            ce[le + Ee] ^= he[Ee];
        }
        return ie;
      }(), ne.mode.CFB;
    });
  }(modeCfb)), modeCfb.exports;
}
var modeCtr = { exports: {} }, hasRequiredModeCtr;
function requireModeCtr() {
  return hasRequiredModeCtr || (hasRequiredModeCtr = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.CTR = function() {
        var ie = ne.lib.BlockCipherMode.extend(), ae = ie.Encryptor = ie.extend({
          processBlock: function(ce, le) {
            var de = this._cipher, ye = de.blockSize, he = this._iv, Be = this._counter;
            he && (Be = this._counter = he.slice(0), this._iv = void 0);
            var Ee = Be.slice(0);
            de.encryptBlock(Ee, 0), Be[ye - 1] = Be[ye - 1] + 1 | 0;
            for (var me = 0; me < ye; me++)
              ce[le + me] ^= Ee[me];
          }
        });
        return ie.Decryptor = ae, ie;
      }(), ne.mode.CTR;
    });
  }(modeCtr)), modeCtr.exports;
}
var modeCtrGladman = { exports: {} }, hasRequiredModeCtrGladman;
function requireModeCtrGladman() {
  return hasRequiredModeCtrGladman || (hasRequiredModeCtrGladman = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      /** @preserve
       * Counter block mode compatible with  Dr Brian Gladman fileenc.c
       * derived from CryptoJS.mode.CTR
       * Jan Hruby jhruby.web@gmail.com
       */
      return ne.mode.CTRGladman = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        function ae(de) {
          if ((de >> 24 & 255) === 255) {
            var ye = de >> 16 & 255, he = de >> 8 & 255, Be = de & 255;
            ye === 255 ? (ye = 0, he === 255 ? (he = 0, Be === 255 ? Be = 0 : ++Be) : ++he) : ++ye, de = 0, de += ye << 16, de += he << 8, de += Be;
          } else
            de += 1 << 24;
          return de;
        }
        function ce(de) {
          return (de[0] = ae(de[0])) === 0 && (de[1] = ae(de[1])), de;
        }
        var le = ie.Encryptor = ie.extend({
          processBlock: function(de, ye) {
            var he = this._cipher, Be = he.blockSize, Ee = this._iv, me = this._counter;
            Ee && (me = this._counter = Ee.slice(0), this._iv = void 0), ce(me);
            var ge = me.slice(0);
            he.encryptBlock(ge, 0);
            for (var be = 0; be < Be; be++)
              de[ye + be] ^= ge[be];
          }
        });
        return ie.Decryptor = le, ie;
      }(), ne.mode.CTRGladman;
    });
  }(modeCtrGladman)), modeCtrGladman.exports;
}
var modeOfb = { exports: {} }, hasRequiredModeOfb;
function requireModeOfb() {
  return hasRequiredModeOfb || (hasRequiredModeOfb = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.OFB = function() {
        var ie = ne.lib.BlockCipherMode.extend(), ae = ie.Encryptor = ie.extend({
          processBlock: function(ce, le) {
            var de = this._cipher, ye = de.blockSize, he = this._iv, Be = this._keystream;
            he && (Be = this._keystream = he.slice(0), this._iv = void 0), de.encryptBlock(Be, 0);
            for (var Ee = 0; Ee < ye; Ee++)
              ce[le + Ee] ^= Be[Ee];
          }
        });
        return ie.Decryptor = ae, ie;
      }(), ne.mode.OFB;
    });
  }(modeOfb)), modeOfb.exports;
}
var modeEcb = { exports: {} }, hasRequiredModeEcb;
function requireModeEcb() {
  return hasRequiredModeEcb || (hasRequiredModeEcb = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.mode.ECB = function() {
        var ie = ne.lib.BlockCipherMode.extend();
        return ie.Encryptor = ie.extend({
          processBlock: function(ae, ce) {
            this._cipher.encryptBlock(ae, ce);
          }
        }), ie.Decryptor = ie.extend({
          processBlock: function(ae, ce) {
            this._cipher.decryptBlock(ae, ce);
          }
        }), ie;
      }(), ne.mode.ECB;
    });
  }(modeEcb)), modeEcb.exports;
}
var padAnsix923 = { exports: {} }, hasRequiredPadAnsix923;
function requirePadAnsix923() {
  return hasRequiredPadAnsix923 || (hasRequiredPadAnsix923 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.AnsiX923 = {
        pad: function(ie, ae) {
          var ce = ie.sigBytes, le = ae * 4, de = le - ce % le, ye = ce + de - 1;
          ie.clamp(), ie.words[ye >>> 2] |= de << 24 - ye % 4 * 8, ie.sigBytes += de;
        },
        unpad: function(ie) {
          var ae = ie.words[ie.sigBytes - 1 >>> 2] & 255;
          ie.sigBytes -= ae;
        }
      }, ne.pad.Ansix923;
    });
  }(padAnsix923)), padAnsix923.exports;
}
var padIso10126 = { exports: {} }, hasRequiredPadIso10126;
function requirePadIso10126() {
  return hasRequiredPadIso10126 || (hasRequiredPadIso10126 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.Iso10126 = {
        pad: function(ie, ae) {
          var ce = ae * 4, le = ce - ie.sigBytes % ce;
          ie.concat(ne.lib.WordArray.random(le - 1)).concat(ne.lib.WordArray.create([le << 24], 1));
        },
        unpad: function(ie) {
          var ae = ie.words[ie.sigBytes - 1 >>> 2] & 255;
          ie.sigBytes -= ae;
        }
      }, ne.pad.Iso10126;
    });
  }(padIso10126)), padIso10126.exports;
}
var padIso97971 = { exports: {} }, hasRequiredPadIso97971;
function requirePadIso97971() {
  return hasRequiredPadIso97971 || (hasRequiredPadIso97971 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.Iso97971 = {
        pad: function(ie, ae) {
          ie.concat(ne.lib.WordArray.create([2147483648], 1)), ne.pad.ZeroPadding.pad(ie, ae);
        },
        unpad: function(ie) {
          ne.pad.ZeroPadding.unpad(ie), ie.sigBytes--;
        }
      }, ne.pad.Iso97971;
    });
  }(padIso97971)), padIso97971.exports;
}
var padZeropadding = { exports: {} }, hasRequiredPadZeropadding;
function requirePadZeropadding() {
  return hasRequiredPadZeropadding || (hasRequiredPadZeropadding = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.ZeroPadding = {
        pad: function(ie, ae) {
          var ce = ae * 4;
          ie.clamp(), ie.sigBytes += ce - (ie.sigBytes % ce || ce);
        },
        unpad: function(ie) {
          for (var ae = ie.words, ce = ie.sigBytes - 1, ce = ie.sigBytes - 1; ce >= 0; ce--)
            if (ae[ce >>> 2] >>> 24 - ce % 4 * 8 & 255) {
              ie.sigBytes = ce + 1;
              break;
            }
        }
      }, ne.pad.ZeroPadding;
    });
  }(padZeropadding)), padZeropadding.exports;
}
var padNopadding = { exports: {} }, hasRequiredPadNopadding;
function requirePadNopadding() {
  return hasRequiredPadNopadding || (hasRequiredPadNopadding = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return ne.pad.NoPadding = {
        pad: function() {
        },
        unpad: function() {
        }
      }, ne.pad.NoPadding;
    });
  }(padNopadding)), padNopadding.exports;
}
var formatHex = { exports: {} }, hasRequiredFormatHex;
function requireFormatHex() {
  return hasRequiredFormatHex || (hasRequiredFormatHex = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function(ie) {
        var ae = ne, ce = ae.lib, le = ce.CipherParams, de = ae.enc, ye = de.Hex, he = ae.format;
        he.Hex = {
          stringify: function(Be) {
            return Be.ciphertext.toString(ye);
          },
          parse: function(Be) {
            var Ee = ye.parse(Be);
            return le.create({ ciphertext: Ee });
          }
        };
      }(), ne.format.Hex;
    });
  }(formatHex)), formatHex.exports;
}
var aes = { exports: {} }, hasRequiredAes;
function requireAes() {
  return hasRequiredAes || (hasRequiredAes = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.BlockCipher, le = ie.algo, de = [], ye = [], he = [], Be = [], Ee = [], me = [], ge = [], be = [], we = [], Oe = [];
        (function() {
          for (var Ge = [], Fe = 0; Fe < 256; Fe++)
            Fe < 128 ? Ge[Fe] = Fe << 1 : Ge[Fe] = Fe << 1 ^ 283;
          for (var Pe = 0, We = 0, Fe = 0; Fe < 256; Fe++) {
            var tt = We ^ We << 1 ^ We << 2 ^ We << 3 ^ We << 4;
            tt = tt >>> 8 ^ tt & 255 ^ 99, de[Pe] = tt, ye[tt] = Pe;
            var Et = Ge[Pe], Nt = Ge[Et], et = Ge[Nt], mt = Ge[tt] * 257 ^ tt * 16843008;
            he[Pe] = mt << 24 | mt >>> 8, Be[Pe] = mt << 16 | mt >>> 16, Ee[Pe] = mt << 8 | mt >>> 24, me[Pe] = mt;
            var mt = et * 16843009 ^ Nt * 65537 ^ Et * 257 ^ Pe * 16843008;
            ge[tt] = mt << 24 | mt >>> 8, be[tt] = mt << 16 | mt >>> 16, we[tt] = mt << 8 | mt >>> 24, Oe[tt] = mt, Pe ? (Pe = Et ^ Ge[Ge[Ge[et ^ Et]]], We ^= Ge[Ge[We]]) : Pe = We = 1;
          }
        })();
        var He = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], Se = le.AES = ce.extend({
          _doReset: function() {
            var Ge;
            if (!(this._nRounds && this._keyPriorReset === this._key)) {
              for (var Fe = this._keyPriorReset = this._key, Pe = Fe.words, We = Fe.sigBytes / 4, tt = this._nRounds = We + 6, Et = (tt + 1) * 4, Nt = this._keySchedule = [], et = 0; et < Et; et++)
                et < We ? Nt[et] = Pe[et] : (Ge = Nt[et - 1], et % We ? We > 6 && et % We == 4 && (Ge = de[Ge >>> 24] << 24 | de[Ge >>> 16 & 255] << 16 | de[Ge >>> 8 & 255] << 8 | de[Ge & 255]) : (Ge = Ge << 8 | Ge >>> 24, Ge = de[Ge >>> 24] << 24 | de[Ge >>> 16 & 255] << 16 | de[Ge >>> 8 & 255] << 8 | de[Ge & 255], Ge ^= He[et / We | 0] << 24), Nt[et] = Nt[et - We] ^ Ge);
              for (var mt = this._invKeySchedule = [], Mt = 0; Mt < Et; Mt++) {
                var et = Et - Mt;
                if (Mt % 4)
                  var Ge = Nt[et];
                else
                  var Ge = Nt[et - 4];
                Mt < 4 || et <= 4 ? mt[Mt] = Ge : mt[Mt] = ge[de[Ge >>> 24]] ^ be[de[Ge >>> 16 & 255]] ^ we[de[Ge >>> 8 & 255]] ^ Oe[de[Ge & 255]];
              }
            }
          },
          encryptBlock: function(Ge, Fe) {
            this._doCryptBlock(Ge, Fe, this._keySchedule, he, Be, Ee, me, de);
          },
          decryptBlock: function(Ge, Fe) {
            var Pe = Ge[Fe + 1];
            Ge[Fe + 1] = Ge[Fe + 3], Ge[Fe + 3] = Pe, this._doCryptBlock(Ge, Fe, this._invKeySchedule, ge, be, we, Oe, ye);
            var Pe = Ge[Fe + 1];
            Ge[Fe + 1] = Ge[Fe + 3], Ge[Fe + 3] = Pe;
          },
          _doCryptBlock: function(Ge, Fe, Pe, We, tt, Et, Nt, et) {
            for (var mt = this._nRounds, Mt = Ge[Fe] ^ Pe[0], Ot = Ge[Fe + 1] ^ Pe[1], yt = Ge[Fe + 2] ^ Pe[2], Qt = Ge[Fe + 3] ^ Pe[3], Yt = 4, jt = 1; jt < mt; jt++) {
              var $t = We[Mt >>> 24] ^ tt[Ot >>> 16 & 255] ^ Et[yt >>> 8 & 255] ^ Nt[Qt & 255] ^ Pe[Yt++], Wt = We[Ot >>> 24] ^ tt[yt >>> 16 & 255] ^ Et[Qt >>> 8 & 255] ^ Nt[Mt & 255] ^ Pe[Yt++], st = We[yt >>> 24] ^ tt[Qt >>> 16 & 255] ^ Et[Mt >>> 8 & 255] ^ Nt[Ot & 255] ^ Pe[Yt++], at = We[Qt >>> 24] ^ tt[Mt >>> 16 & 255] ^ Et[Ot >>> 8 & 255] ^ Nt[yt & 255] ^ Pe[Yt++];
              Mt = $t, Ot = Wt, yt = st, Qt = at;
            }
            var $t = (et[Mt >>> 24] << 24 | et[Ot >>> 16 & 255] << 16 | et[yt >>> 8 & 255] << 8 | et[Qt & 255]) ^ Pe[Yt++], Wt = (et[Ot >>> 24] << 24 | et[yt >>> 16 & 255] << 16 | et[Qt >>> 8 & 255] << 8 | et[Mt & 255]) ^ Pe[Yt++], st = (et[yt >>> 24] << 24 | et[Qt >>> 16 & 255] << 16 | et[Mt >>> 8 & 255] << 8 | et[Ot & 255]) ^ Pe[Yt++], at = (et[Qt >>> 24] << 24 | et[Mt >>> 16 & 255] << 16 | et[Ot >>> 8 & 255] << 8 | et[yt & 255]) ^ Pe[Yt++];
            Ge[Fe] = $t, Ge[Fe + 1] = Wt, Ge[Fe + 2] = st, Ge[Fe + 3] = at;
          },
          keySize: 256 / 32
        });
        ie.AES = ce._createHelper(Se);
      }(), ne.AES;
    });
  }(aes)), aes.exports;
}
var tripledes = { exports: {} }, hasRequiredTripledes;
function requireTripledes() {
  return hasRequiredTripledes || (hasRequiredTripledes = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.WordArray, le = ae.BlockCipher, de = ie.algo, ye = [
          57,
          49,
          41,
          33,
          25,
          17,
          9,
          1,
          58,
          50,
          42,
          34,
          26,
          18,
          10,
          2,
          59,
          51,
          43,
          35,
          27,
          19,
          11,
          3,
          60,
          52,
          44,
          36,
          63,
          55,
          47,
          39,
          31,
          23,
          15,
          7,
          62,
          54,
          46,
          38,
          30,
          22,
          14,
          6,
          61,
          53,
          45,
          37,
          29,
          21,
          13,
          5,
          28,
          20,
          12,
          4
        ], he = [
          14,
          17,
          11,
          24,
          1,
          5,
          3,
          28,
          15,
          6,
          21,
          10,
          23,
          19,
          12,
          4,
          26,
          8,
          16,
          7,
          27,
          20,
          13,
          2,
          41,
          52,
          31,
          37,
          47,
          55,
          30,
          40,
          51,
          45,
          33,
          48,
          44,
          49,
          39,
          56,
          34,
          53,
          46,
          42,
          50,
          36,
          29,
          32
        ], Be = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], Ee = [
          {
            0: 8421888,
            268435456: 32768,
            536870912: 8421378,
            805306368: 2,
            1073741824: 512,
            1342177280: 8421890,
            1610612736: 8389122,
            1879048192: 8388608,
            2147483648: 514,
            2415919104: 8389120,
            2684354560: 33280,
            2952790016: 8421376,
            3221225472: 32770,
            3489660928: 8388610,
            3758096384: 0,
            4026531840: 33282,
            134217728: 0,
            402653184: 8421890,
            671088640: 33282,
            939524096: 32768,
            1207959552: 8421888,
            1476395008: 512,
            1744830464: 8421378,
            2013265920: 2,
            2281701376: 8389120,
            2550136832: 33280,
            2818572288: 8421376,
            3087007744: 8389122,
            3355443200: 8388610,
            3623878656: 32770,
            3892314112: 514,
            4160749568: 8388608,
            1: 32768,
            268435457: 2,
            536870913: 8421888,
            805306369: 8388608,
            1073741825: 8421378,
            1342177281: 33280,
            1610612737: 512,
            1879048193: 8389122,
            2147483649: 8421890,
            2415919105: 8421376,
            2684354561: 8388610,
            2952790017: 33282,
            3221225473: 514,
            3489660929: 8389120,
            3758096385: 32770,
            4026531841: 0,
            134217729: 8421890,
            402653185: 8421376,
            671088641: 8388608,
            939524097: 512,
            1207959553: 32768,
            1476395009: 8388610,
            1744830465: 2,
            2013265921: 33282,
            2281701377: 32770,
            2550136833: 8389122,
            2818572289: 514,
            3087007745: 8421888,
            3355443201: 8389120,
            3623878657: 0,
            3892314113: 33280,
            4160749569: 8421378
          },
          {
            0: 1074282512,
            16777216: 16384,
            33554432: 524288,
            50331648: 1074266128,
            67108864: 1073741840,
            83886080: 1074282496,
            100663296: 1073758208,
            117440512: 16,
            134217728: 540672,
            150994944: 1073758224,
            167772160: 1073741824,
            184549376: 540688,
            201326592: 524304,
            218103808: 0,
            234881024: 16400,
            251658240: 1074266112,
            8388608: 1073758208,
            25165824: 540688,
            41943040: 16,
            58720256: 1073758224,
            75497472: 1074282512,
            92274688: 1073741824,
            109051904: 524288,
            125829120: 1074266128,
            142606336: 524304,
            159383552: 0,
            176160768: 16384,
            192937984: 1074266112,
            209715200: 1073741840,
            226492416: 540672,
            243269632: 1074282496,
            260046848: 16400,
            268435456: 0,
            285212672: 1074266128,
            301989888: 1073758224,
            318767104: 1074282496,
            335544320: 1074266112,
            352321536: 16,
            369098752: 540688,
            385875968: 16384,
            402653184: 16400,
            419430400: 524288,
            436207616: 524304,
            452984832: 1073741840,
            469762048: 540672,
            486539264: 1073758208,
            503316480: 1073741824,
            520093696: 1074282512,
            276824064: 540688,
            293601280: 524288,
            310378496: 1074266112,
            327155712: 16384,
            343932928: 1073758208,
            360710144: 1074282512,
            377487360: 16,
            394264576: 1073741824,
            411041792: 1074282496,
            427819008: 1073741840,
            444596224: 1073758224,
            461373440: 524304,
            478150656: 0,
            494927872: 16400,
            511705088: 1074266128,
            528482304: 540672
          },
          {
            0: 260,
            1048576: 0,
            2097152: 67109120,
            3145728: 65796,
            4194304: 65540,
            5242880: 67108868,
            6291456: 67174660,
            7340032: 67174400,
            8388608: 67108864,
            9437184: 67174656,
            10485760: 65792,
            11534336: 67174404,
            12582912: 67109124,
            13631488: 65536,
            14680064: 4,
            15728640: 256,
            524288: 67174656,
            1572864: 67174404,
            2621440: 0,
            3670016: 67109120,
            4718592: 67108868,
            5767168: 65536,
            6815744: 65540,
            7864320: 260,
            8912896: 4,
            9961472: 256,
            11010048: 67174400,
            12058624: 65796,
            13107200: 65792,
            14155776: 67109124,
            15204352: 67174660,
            16252928: 67108864,
            16777216: 67174656,
            17825792: 65540,
            18874368: 65536,
            19922944: 67109120,
            20971520: 256,
            22020096: 67174660,
            23068672: 67108868,
            24117248: 0,
            25165824: 67109124,
            26214400: 67108864,
            27262976: 4,
            28311552: 65792,
            29360128: 67174400,
            30408704: 260,
            31457280: 65796,
            32505856: 67174404,
            17301504: 67108864,
            18350080: 260,
            19398656: 67174656,
            20447232: 0,
            21495808: 65540,
            22544384: 67109120,
            23592960: 256,
            24641536: 67174404,
            25690112: 65536,
            26738688: 67174660,
            27787264: 65796,
            28835840: 67108868,
            29884416: 67109124,
            30932992: 67174400,
            31981568: 4,
            33030144: 65792
          },
          {
            0: 2151682048,
            65536: 2147487808,
            131072: 4198464,
            196608: 2151677952,
            262144: 0,
            327680: 4198400,
            393216: 2147483712,
            458752: 4194368,
            524288: 2147483648,
            589824: 4194304,
            655360: 64,
            720896: 2147487744,
            786432: 2151678016,
            851968: 4160,
            917504: 4096,
            983040: 2151682112,
            32768: 2147487808,
            98304: 64,
            163840: 2151678016,
            229376: 2147487744,
            294912: 4198400,
            360448: 2151682112,
            425984: 0,
            491520: 2151677952,
            557056: 4096,
            622592: 2151682048,
            688128: 4194304,
            753664: 4160,
            819200: 2147483648,
            884736: 4194368,
            950272: 4198464,
            1015808: 2147483712,
            1048576: 4194368,
            1114112: 4198400,
            1179648: 2147483712,
            1245184: 0,
            1310720: 4160,
            1376256: 2151678016,
            1441792: 2151682048,
            1507328: 2147487808,
            1572864: 2151682112,
            1638400: 2147483648,
            1703936: 2151677952,
            1769472: 4198464,
            1835008: 2147487744,
            1900544: 4194304,
            1966080: 64,
            2031616: 4096,
            1081344: 2151677952,
            1146880: 2151682112,
            1212416: 0,
            1277952: 4198400,
            1343488: 4194368,
            1409024: 2147483648,
            1474560: 2147487808,
            1540096: 64,
            1605632: 2147483712,
            1671168: 4096,
            1736704: 2147487744,
            1802240: 2151678016,
            1867776: 4160,
            1933312: 2151682048,
            1998848: 4194304,
            2064384: 4198464
          },
          {
            0: 128,
            4096: 17039360,
            8192: 262144,
            12288: 536870912,
            16384: 537133184,
            20480: 16777344,
            24576: 553648256,
            28672: 262272,
            32768: 16777216,
            36864: 537133056,
            40960: 536871040,
            45056: 553910400,
            49152: 553910272,
            53248: 0,
            57344: 17039488,
            61440: 553648128,
            2048: 17039488,
            6144: 553648256,
            10240: 128,
            14336: 17039360,
            18432: 262144,
            22528: 537133184,
            26624: 553910272,
            30720: 536870912,
            34816: 537133056,
            38912: 0,
            43008: 553910400,
            47104: 16777344,
            51200: 536871040,
            55296: 553648128,
            59392: 16777216,
            63488: 262272,
            65536: 262144,
            69632: 128,
            73728: 536870912,
            77824: 553648256,
            81920: 16777344,
            86016: 553910272,
            90112: 537133184,
            94208: 16777216,
            98304: 553910400,
            102400: 553648128,
            106496: 17039360,
            110592: 537133056,
            114688: 262272,
            118784: 536871040,
            122880: 0,
            126976: 17039488,
            67584: 553648256,
            71680: 16777216,
            75776: 17039360,
            79872: 537133184,
            83968: 536870912,
            88064: 17039488,
            92160: 128,
            96256: 553910272,
            100352: 262272,
            104448: 553910400,
            108544: 0,
            112640: 553648128,
            116736: 16777344,
            120832: 262144,
            124928: 537133056,
            129024: 536871040
          },
          {
            0: 268435464,
            256: 8192,
            512: 270532608,
            768: 270540808,
            1024: 268443648,
            1280: 2097152,
            1536: 2097160,
            1792: 268435456,
            2048: 0,
            2304: 268443656,
            2560: 2105344,
            2816: 8,
            3072: 270532616,
            3328: 2105352,
            3584: 8200,
            3840: 270540800,
            128: 270532608,
            384: 270540808,
            640: 8,
            896: 2097152,
            1152: 2105352,
            1408: 268435464,
            1664: 268443648,
            1920: 8200,
            2176: 2097160,
            2432: 8192,
            2688: 268443656,
            2944: 270532616,
            3200: 0,
            3456: 270540800,
            3712: 2105344,
            3968: 268435456,
            4096: 268443648,
            4352: 270532616,
            4608: 270540808,
            4864: 8200,
            5120: 2097152,
            5376: 268435456,
            5632: 268435464,
            5888: 2105344,
            6144: 2105352,
            6400: 0,
            6656: 8,
            6912: 270532608,
            7168: 8192,
            7424: 268443656,
            7680: 270540800,
            7936: 2097160,
            4224: 8,
            4480: 2105344,
            4736: 2097152,
            4992: 268435464,
            5248: 268443648,
            5504: 8200,
            5760: 270540808,
            6016: 270532608,
            6272: 270540800,
            6528: 270532616,
            6784: 8192,
            7040: 2105352,
            7296: 2097160,
            7552: 0,
            7808: 268435456,
            8064: 268443656
          },
          {
            0: 1048576,
            16: 33555457,
            32: 1024,
            48: 1049601,
            64: 34604033,
            80: 0,
            96: 1,
            112: 34603009,
            128: 33555456,
            144: 1048577,
            160: 33554433,
            176: 34604032,
            192: 34603008,
            208: 1025,
            224: 1049600,
            240: 33554432,
            8: 34603009,
            24: 0,
            40: 33555457,
            56: 34604032,
            72: 1048576,
            88: 33554433,
            104: 33554432,
            120: 1025,
            136: 1049601,
            152: 33555456,
            168: 34603008,
            184: 1048577,
            200: 1024,
            216: 34604033,
            232: 1,
            248: 1049600,
            256: 33554432,
            272: 1048576,
            288: 33555457,
            304: 34603009,
            320: 1048577,
            336: 33555456,
            352: 34604032,
            368: 1049601,
            384: 1025,
            400: 34604033,
            416: 1049600,
            432: 1,
            448: 0,
            464: 34603008,
            480: 33554433,
            496: 1024,
            264: 1049600,
            280: 33555457,
            296: 34603009,
            312: 1,
            328: 33554432,
            344: 1048576,
            360: 1025,
            376: 34604032,
            392: 33554433,
            408: 34603008,
            424: 0,
            440: 34604033,
            456: 1049601,
            472: 1024,
            488: 33555456,
            504: 1048577
          },
          {
            0: 134219808,
            1: 131072,
            2: 134217728,
            3: 32,
            4: 131104,
            5: 134350880,
            6: 134350848,
            7: 2048,
            8: 134348800,
            9: 134219776,
            10: 133120,
            11: 134348832,
            12: 2080,
            13: 0,
            14: 134217760,
            15: 133152,
            2147483648: 2048,
            2147483649: 134350880,
            2147483650: 134219808,
            2147483651: 134217728,
            2147483652: 134348800,
            2147483653: 133120,
            2147483654: 133152,
            2147483655: 32,
            2147483656: 134217760,
            2147483657: 2080,
            2147483658: 131104,
            2147483659: 134350848,
            2147483660: 0,
            2147483661: 134348832,
            2147483662: 134219776,
            2147483663: 131072,
            16: 133152,
            17: 134350848,
            18: 32,
            19: 2048,
            20: 134219776,
            21: 134217760,
            22: 134348832,
            23: 131072,
            24: 0,
            25: 131104,
            26: 134348800,
            27: 134219808,
            28: 134350880,
            29: 133120,
            30: 2080,
            31: 134217728,
            2147483664: 131072,
            2147483665: 2048,
            2147483666: 134348832,
            2147483667: 133152,
            2147483668: 32,
            2147483669: 134348800,
            2147483670: 134217728,
            2147483671: 134219808,
            2147483672: 134350880,
            2147483673: 134217760,
            2147483674: 134219776,
            2147483675: 0,
            2147483676: 133120,
            2147483677: 2080,
            2147483678: 131104,
            2147483679: 134350848
          }
        ], me = [
          4160749569,
          528482304,
          33030144,
          2064384,
          129024,
          8064,
          504,
          2147483679
        ], ge = de.DES = le.extend({
          _doReset: function() {
            for (var He = this._key, Se = He.words, Ge = [], Fe = 0; Fe < 56; Fe++) {
              var Pe = ye[Fe] - 1;
              Ge[Fe] = Se[Pe >>> 5] >>> 31 - Pe % 32 & 1;
            }
            for (var We = this._subKeys = [], tt = 0; tt < 16; tt++) {
              for (var Et = We[tt] = [], Nt = Be[tt], Fe = 0; Fe < 24; Fe++)
                Et[Fe / 6 | 0] |= Ge[(he[Fe] - 1 + Nt) % 28] << 31 - Fe % 6, Et[4 + (Fe / 6 | 0)] |= Ge[28 + (he[Fe + 24] - 1 + Nt) % 28] << 31 - Fe % 6;
              Et[0] = Et[0] << 1 | Et[0] >>> 31;
              for (var Fe = 1; Fe < 7; Fe++)
                Et[Fe] = Et[Fe] >>> (Fe - 1) * 4 + 3;
              Et[7] = Et[7] << 5 | Et[7] >>> 27;
            }
            for (var et = this._invSubKeys = [], Fe = 0; Fe < 16; Fe++)
              et[Fe] = We[15 - Fe];
          },
          encryptBlock: function(He, Se) {
            this._doCryptBlock(He, Se, this._subKeys);
          },
          decryptBlock: function(He, Se) {
            this._doCryptBlock(He, Se, this._invSubKeys);
          },
          _doCryptBlock: function(He, Se, Ge) {
            this._lBlock = He[Se], this._rBlock = He[Se + 1], be.call(this, 4, 252645135), be.call(this, 16, 65535), we.call(this, 2, 858993459), we.call(this, 8, 16711935), be.call(this, 1, 1431655765);
            for (var Fe = 0; Fe < 16; Fe++) {
              for (var Pe = Ge[Fe], We = this._lBlock, tt = this._rBlock, Et = 0, Nt = 0; Nt < 8; Nt++)
                Et |= Ee[Nt][((tt ^ Pe[Nt]) & me[Nt]) >>> 0];
              this._lBlock = tt, this._rBlock = We ^ Et;
            }
            var et = this._lBlock;
            this._lBlock = this._rBlock, this._rBlock = et, be.call(this, 1, 1431655765), we.call(this, 8, 16711935), we.call(this, 2, 858993459), be.call(this, 16, 65535), be.call(this, 4, 252645135), He[Se] = this._lBlock, He[Se + 1] = this._rBlock;
          },
          keySize: 64 / 32,
          ivSize: 64 / 32,
          blockSize: 64 / 32
        });
        function be(He, Se) {
          var Ge = (this._lBlock >>> He ^ this._rBlock) & Se;
          this._rBlock ^= Ge, this._lBlock ^= Ge << He;
        }
        function we(He, Se) {
          var Ge = (this._rBlock >>> He ^ this._lBlock) & Se;
          this._lBlock ^= Ge, this._rBlock ^= Ge << He;
        }
        ie.DES = le._createHelper(ge);
        var Oe = de.TripleDES = le.extend({
          _doReset: function() {
            var He = this._key, Se = He.words;
            if (Se.length !== 2 && Se.length !== 4 && Se.length < 6)
              throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
            var Ge = Se.slice(0, 2), Fe = Se.length < 4 ? Se.slice(0, 2) : Se.slice(2, 4), Pe = Se.length < 6 ? Se.slice(0, 2) : Se.slice(4, 6);
            this._des1 = ge.createEncryptor(ce.create(Ge)), this._des2 = ge.createEncryptor(ce.create(Fe)), this._des3 = ge.createEncryptor(ce.create(Pe));
          },
          encryptBlock: function(He, Se) {
            this._des1.encryptBlock(He, Se), this._des2.decryptBlock(He, Se), this._des3.encryptBlock(He, Se);
          },
          decryptBlock: function(He, Se) {
            this._des3.decryptBlock(He, Se), this._des2.encryptBlock(He, Se), this._des1.decryptBlock(He, Se);
          },
          keySize: 192 / 32,
          ivSize: 64 / 32,
          blockSize: 64 / 32
        });
        ie.TripleDES = le._createHelper(Oe);
      }(), ne.TripleDES;
    });
  }(tripledes)), tripledes.exports;
}
var rc4 = { exports: {} }, hasRequiredRc4;
function requireRc4() {
  return hasRequiredRc4 || (hasRequiredRc4 = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.StreamCipher, le = ie.algo, de = le.RC4 = ce.extend({
          _doReset: function() {
            for (var Be = this._key, Ee = Be.words, me = Be.sigBytes, ge = this._S = [], be = 0; be < 256; be++)
              ge[be] = be;
            for (var be = 0, we = 0; be < 256; be++) {
              var Oe = be % me, He = Ee[Oe >>> 2] >>> 24 - Oe % 4 * 8 & 255;
              we = (we + ge[be] + He) % 256;
              var Se = ge[be];
              ge[be] = ge[we], ge[we] = Se;
            }
            this._i = this._j = 0;
          },
          _doProcessBlock: function(Be, Ee) {
            Be[Ee] ^= ye.call(this);
          },
          keySize: 256 / 32,
          ivSize: 0
        });
        function ye() {
          for (var Be = this._S, Ee = this._i, me = this._j, ge = 0, be = 0; be < 4; be++) {
            Ee = (Ee + 1) % 256, me = (me + Be[Ee]) % 256;
            var we = Be[Ee];
            Be[Ee] = Be[me], Be[me] = we, ge |= Be[(Be[Ee] + Be[me]) % 256] << 24 - be * 8;
          }
          return this._i = Ee, this._j = me, ge;
        }
        ie.RC4 = ce._createHelper(de);
        var he = le.RC4Drop = de.extend({
          cfg: de.cfg.extend({
            drop: 192
          }),
          _doReset: function() {
            de._doReset.call(this);
            for (var Be = this.cfg.drop; Be > 0; Be--)
              ye.call(this);
          }
        });
        ie.RC4Drop = ce._createHelper(he);
      }(), ne.RC4;
    });
  }(rc4)), rc4.exports;
}
var rabbit = { exports: {} }, hasRequiredRabbit;
function requireRabbit() {
  return hasRequiredRabbit || (hasRequiredRabbit = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.StreamCipher, le = ie.algo, de = [], ye = [], he = [], Be = le.Rabbit = ce.extend({
          _doReset: function() {
            for (var me = this._key.words, ge = this.cfg.iv, be = 0; be < 4; be++)
              me[be] = (me[be] << 8 | me[be] >>> 24) & 16711935 | (me[be] << 24 | me[be] >>> 8) & 4278255360;
            var we = this._X = [
              me[0],
              me[3] << 16 | me[2] >>> 16,
              me[1],
              me[0] << 16 | me[3] >>> 16,
              me[2],
              me[1] << 16 | me[0] >>> 16,
              me[3],
              me[2] << 16 | me[1] >>> 16
            ], Oe = this._C = [
              me[2] << 16 | me[2] >>> 16,
              me[0] & 4294901760 | me[1] & 65535,
              me[3] << 16 | me[3] >>> 16,
              me[1] & 4294901760 | me[2] & 65535,
              me[0] << 16 | me[0] >>> 16,
              me[2] & 4294901760 | me[3] & 65535,
              me[1] << 16 | me[1] >>> 16,
              me[3] & 4294901760 | me[0] & 65535
            ];
            this._b = 0;
            for (var be = 0; be < 4; be++)
              Ee.call(this);
            for (var be = 0; be < 8; be++)
              Oe[be] ^= we[be + 4 & 7];
            if (ge) {
              var He = ge.words, Se = He[0], Ge = He[1], Fe = (Se << 8 | Se >>> 24) & 16711935 | (Se << 24 | Se >>> 8) & 4278255360, Pe = (Ge << 8 | Ge >>> 24) & 16711935 | (Ge << 24 | Ge >>> 8) & 4278255360, We = Fe >>> 16 | Pe & 4294901760, tt = Pe << 16 | Fe & 65535;
              Oe[0] ^= Fe, Oe[1] ^= We, Oe[2] ^= Pe, Oe[3] ^= tt, Oe[4] ^= Fe, Oe[5] ^= We, Oe[6] ^= Pe, Oe[7] ^= tt;
              for (var be = 0; be < 4; be++)
                Ee.call(this);
            }
          },
          _doProcessBlock: function(me, ge) {
            var be = this._X;
            Ee.call(this), de[0] = be[0] ^ be[5] >>> 16 ^ be[3] << 16, de[1] = be[2] ^ be[7] >>> 16 ^ be[5] << 16, de[2] = be[4] ^ be[1] >>> 16 ^ be[7] << 16, de[3] = be[6] ^ be[3] >>> 16 ^ be[1] << 16;
            for (var we = 0; we < 4; we++)
              de[we] = (de[we] << 8 | de[we] >>> 24) & 16711935 | (de[we] << 24 | de[we] >>> 8) & 4278255360, me[ge + we] ^= de[we];
          },
          blockSize: 128 / 32,
          ivSize: 64 / 32
        });
        function Ee() {
          for (var me = this._X, ge = this._C, be = 0; be < 8; be++)
            ye[be] = ge[be];
          ge[0] = ge[0] + 1295307597 + this._b | 0, ge[1] = ge[1] + 3545052371 + (ge[0] >>> 0 < ye[0] >>> 0 ? 1 : 0) | 0, ge[2] = ge[2] + 886263092 + (ge[1] >>> 0 < ye[1] >>> 0 ? 1 : 0) | 0, ge[3] = ge[3] + 1295307597 + (ge[2] >>> 0 < ye[2] >>> 0 ? 1 : 0) | 0, ge[4] = ge[4] + 3545052371 + (ge[3] >>> 0 < ye[3] >>> 0 ? 1 : 0) | 0, ge[5] = ge[5] + 886263092 + (ge[4] >>> 0 < ye[4] >>> 0 ? 1 : 0) | 0, ge[6] = ge[6] + 1295307597 + (ge[5] >>> 0 < ye[5] >>> 0 ? 1 : 0) | 0, ge[7] = ge[7] + 3545052371 + (ge[6] >>> 0 < ye[6] >>> 0 ? 1 : 0) | 0, this._b = ge[7] >>> 0 < ye[7] >>> 0 ? 1 : 0;
          for (var be = 0; be < 8; be++) {
            var we = me[be] + ge[be], Oe = we & 65535, He = we >>> 16, Se = ((Oe * Oe >>> 17) + Oe * He >>> 15) + He * He, Ge = ((we & 4294901760) * we | 0) + ((we & 65535) * we | 0);
            he[be] = Se ^ Ge;
          }
          me[0] = he[0] + (he[7] << 16 | he[7] >>> 16) + (he[6] << 16 | he[6] >>> 16) | 0, me[1] = he[1] + (he[0] << 8 | he[0] >>> 24) + he[7] | 0, me[2] = he[2] + (he[1] << 16 | he[1] >>> 16) + (he[0] << 16 | he[0] >>> 16) | 0, me[3] = he[3] + (he[2] << 8 | he[2] >>> 24) + he[1] | 0, me[4] = he[4] + (he[3] << 16 | he[3] >>> 16) + (he[2] << 16 | he[2] >>> 16) | 0, me[5] = he[5] + (he[4] << 8 | he[4] >>> 24) + he[3] | 0, me[6] = he[6] + (he[5] << 16 | he[5] >>> 16) + (he[4] << 16 | he[4] >>> 16) | 0, me[7] = he[7] + (he[6] << 8 | he[6] >>> 24) + he[5] | 0;
        }
        ie.Rabbit = ce._createHelper(Be);
      }(), ne.Rabbit;
    });
  }(rabbit)), rabbit.exports;
}
var rabbitLegacy = { exports: {} }, hasRequiredRabbitLegacy;
function requireRabbitLegacy() {
  return hasRequiredRabbitLegacy || (hasRequiredRabbitLegacy = 1, function(Q, ee) {
    (function(ne, ie, ae) {
      Q.exports = ie(requireCore(), requireEncBase64(), requireMd5(), requireEvpkdf(), requireCipherCore());
    })(commonjsGlobal, function(ne) {
      return function() {
        var ie = ne, ae = ie.lib, ce = ae.StreamCipher, le = ie.algo, de = [], ye = [], he = [], Be = le.RabbitLegacy = ce.extend({
          _doReset: function() {
            var me = this._key.words, ge = this.cfg.iv, be = this._X = [
              me[0],
              me[3] << 16 | me[2] >>> 16,
              me[1],
              me[0] << 16 | me[3] >>> 16,
              me[2],
              me[1] << 16 | me[0] >>> 16,
              me[3],
              me[2] << 16 | me[1] >>> 16
            ], we = this._C = [
              me[2] << 16 | me[2] >>> 16,
              me[0] & 4294901760 | me[1] & 65535,
              me[3] << 16 | me[3] >>> 16,
              me[1] & 4294901760 | me[2] & 65535,
              me[0] << 16 | me[0] >>> 16,
              me[2] & 4294901760 | me[3] & 65535,
              me[1] << 16 | me[1] >>> 16,
              me[3] & 4294901760 | me[0] & 65535
            ];
            this._b = 0;
            for (var Oe = 0; Oe < 4; Oe++)
              Ee.call(this);
            for (var Oe = 0; Oe < 8; Oe++)
              we[Oe] ^= be[Oe + 4 & 7];
            if (ge) {
              var He = ge.words, Se = He[0], Ge = He[1], Fe = (Se << 8 | Se >>> 24) & 16711935 | (Se << 24 | Se >>> 8) & 4278255360, Pe = (Ge << 8 | Ge >>> 24) & 16711935 | (Ge << 24 | Ge >>> 8) & 4278255360, We = Fe >>> 16 | Pe & 4294901760, tt = Pe << 16 | Fe & 65535;
              we[0] ^= Fe, we[1] ^= We, we[2] ^= Pe, we[3] ^= tt, we[4] ^= Fe, we[5] ^= We, we[6] ^= Pe, we[7] ^= tt;
              for (var Oe = 0; Oe < 4; Oe++)
                Ee.call(this);
            }
          },
          _doProcessBlock: function(me, ge) {
            var be = this._X;
            Ee.call(this), de[0] = be[0] ^ be[5] >>> 16 ^ be[3] << 16, de[1] = be[2] ^ be[7] >>> 16 ^ be[5] << 16, de[2] = be[4] ^ be[1] >>> 16 ^ be[7] << 16, de[3] = be[6] ^ be[3] >>> 16 ^ be[1] << 16;
            for (var we = 0; we < 4; we++)
              de[we] = (de[we] << 8 | de[we] >>> 24) & 16711935 | (de[we] << 24 | de[we] >>> 8) & 4278255360, me[ge + we] ^= de[we];
          },
          blockSize: 128 / 32,
          ivSize: 64 / 32
        });
        function Ee() {
          for (var me = this._X, ge = this._C, be = 0; be < 8; be++)
            ye[be] = ge[be];
          ge[0] = ge[0] + 1295307597 + this._b | 0, ge[1] = ge[1] + 3545052371 + (ge[0] >>> 0 < ye[0] >>> 0 ? 1 : 0) | 0, ge[2] = ge[2] + 886263092 + (ge[1] >>> 0 < ye[1] >>> 0 ? 1 : 0) | 0, ge[3] = ge[3] + 1295307597 + (ge[2] >>> 0 < ye[2] >>> 0 ? 1 : 0) | 0, ge[4] = ge[4] + 3545052371 + (ge[3] >>> 0 < ye[3] >>> 0 ? 1 : 0) | 0, ge[5] = ge[5] + 886263092 + (ge[4] >>> 0 < ye[4] >>> 0 ? 1 : 0) | 0, ge[6] = ge[6] + 1295307597 + (ge[5] >>> 0 < ye[5] >>> 0 ? 1 : 0) | 0, ge[7] = ge[7] + 3545052371 + (ge[6] >>> 0 < ye[6] >>> 0 ? 1 : 0) | 0, this._b = ge[7] >>> 0 < ye[7] >>> 0 ? 1 : 0;
          for (var be = 0; be < 8; be++) {
            var we = me[be] + ge[be], Oe = we & 65535, He = we >>> 16, Se = ((Oe * Oe >>> 17) + Oe * He >>> 15) + He * He, Ge = ((we & 4294901760) * we | 0) + ((we & 65535) * we | 0);
            he[be] = Se ^ Ge;
          }
          me[0] = he[0] + (he[7] << 16 | he[7] >>> 16) + (he[6] << 16 | he[6] >>> 16) | 0, me[1] = he[1] + (he[0] << 8 | he[0] >>> 24) + he[7] | 0, me[2] = he[2] + (he[1] << 16 | he[1] >>> 16) + (he[0] << 16 | he[0] >>> 16) | 0, me[3] = he[3] + (he[2] << 8 | he[2] >>> 24) + he[1] | 0, me[4] = he[4] + (he[3] << 16 | he[3] >>> 16) + (he[2] << 16 | he[2] >>> 16) | 0, me[5] = he[5] + (he[4] << 8 | he[4] >>> 24) + he[3] | 0, me[6] = he[6] + (he[5] << 16 | he[5] >>> 16) + (he[4] << 16 | he[4] >>> 16) | 0, me[7] = he[7] + (he[6] << 8 | he[6] >>> 24) + he[5] | 0;
        }
        ie.RabbitLegacy = ce._createHelper(Be);
      }(), ne.RabbitLegacy;
    });
  }(rabbitLegacy)), rabbitLegacy.exports;
}
(function(Q, ee) {
  (function(ne, ie, ae) {
    Q.exports = ie(requireCore(), requireX64Core(), requireLibTypedarrays(), requireEncUtf16(), requireEncBase64(), requireEncBase64url(), requireMd5(), requireSha1(), requireSha256(), requireSha224(), requireSha512(), requireSha384(), requireSha3(), requireRipemd160(), requireHmac(), requirePbkdf2(), requireEvpkdf(), requireCipherCore(), requireModeCfb(), requireModeCtr(), requireModeCtrGladman(), requireModeOfb(), requireModeEcb(), requirePadAnsix923(), requirePadIso10126(), requirePadIso97971(), requirePadZeropadding(), requirePadNopadding(), requireFormatHex(), requireAes(), requireTripledes(), requireRc4(), requireRabbit(), requireRabbitLegacy());
  })(commonjsGlobal, function(ne) {
    return ne;
  });
})(cryptoJs);
var Buffer = buffer$1.Buffer, CRC_TABLE = [
  0,
  1996959894,
  3993919788,
  2567524794,
  124634137,
  1886057615,
  3915621685,
  2657392035,
  249268274,
  2044508324,
  3772115230,
  2547177864,
  162941995,
  2125561021,
  3887607047,
  2428444049,
  498536548,
  1789927666,
  4089016648,
  2227061214,
  450548861,
  1843258603,
  4107580753,
  2211677639,
  325883990,
  1684777152,
  4251122042,
  2321926636,
  335633487,
  1661365465,
  4195302755,
  2366115317,
  997073096,
  1281953886,
  3579855332,
  2724688242,
  1006888145,
  1258607687,
  3524101629,
  2768942443,
  901097722,
  1119000684,
  3686517206,
  2898065728,
  853044451,
  1172266101,
  3705015759,
  2882616665,
  651767980,
  1373503546,
  3369554304,
  3218104598,
  565507253,
  1454621731,
  3485111705,
  3099436303,
  671266974,
  1594198024,
  3322730930,
  2970347812,
  795835527,
  1483230225,
  3244367275,
  3060149565,
  1994146192,
  31158534,
  2563907772,
  4023717930,
  1907459465,
  112637215,
  2680153253,
  3904427059,
  2013776290,
  251722036,
  2517215374,
  3775830040,
  2137656763,
  141376813,
  2439277719,
  3865271297,
  1802195444,
  476864866,
  2238001368,
  4066508878,
  1812370925,
  453092731,
  2181625025,
  4111451223,
  1706088902,
  314042704,
  2344532202,
  4240017532,
  1658658271,
  366619977,
  2362670323,
  4224994405,
  1303535960,
  984961486,
  2747007092,
  3569037538,
  1256170817,
  1037604311,
  2765210733,
  3554079995,
  1131014506,
  879679996,
  2909243462,
  3663771856,
  1141124467,
  855842277,
  2852801631,
  3708648649,
  1342533948,
  654459306,
  3188396048,
  3373015174,
  1466479909,
  544179635,
  3110523913,
  3462522015,
  1591671054,
  702138776,
  2966460450,
  3352799412,
  1504918807,
  783551873,
  3082640443,
  3233442989,
  3988292384,
  2596254646,
  62317068,
  1957810842,
  3939845945,
  2647816111,
  81470997,
  1943803523,
  3814918930,
  2489596804,
  225274430,
  2053790376,
  3826175755,
  2466906013,
  167816743,
  2097651377,
  4027552580,
  2265490386,
  503444072,
  1762050814,
  4150417245,
  2154129355,
  426522225,
  1852507879,
  4275313526,
  2312317920,
  282753626,
  1742555852,
  4189708143,
  2394877945,
  397917763,
  1622183637,
  3604390888,
  2714866558,
  953729732,
  1340076626,
  3518719985,
  2797360999,
  1068828381,
  1219638859,
  3624741850,
  2936675148,
  906185462,
  1090812512,
  3747672003,
  2825379669,
  829329135,
  1181335161,
  3412177804,
  3160834842,
  628085408,
  1382605366,
  3423369109,
  3138078467,
  570562233,
  1426400815,
  3317316542,
  2998733608,
  733239954,
  1555261956,
  3268935591,
  3050360625,
  752459403,
  1541320221,
  2607071920,
  3965973030,
  1969922972,
  40735498,
  2617837225,
  3943577151,
  1913087877,
  83908371,
  2512341634,
  3803740692,
  2075208622,
  213261112,
  2463272603,
  3855990285,
  2094854071,
  198958881,
  2262029012,
  4057260610,
  1759359992,
  534414190,
  2176718541,
  4139329115,
  1873836001,
  414664567,
  2282248934,
  4279200368,
  1711684554,
  285281116,
  2405801727,
  4167216745,
  1634467795,
  376229701,
  2685067896,
  3608007406,
  1308918612,
  956543938,
  2808555105,
  3495958263,
  1231636301,
  1047427035,
  2932959818,
  3654703836,
  1088359270,
  936918e3,
  2847714899,
  3736837829,
  1202900863,
  817233897,
  3183342108,
  3401237130,
  1404277552,
  615818150,
  3134207493,
  3453421203,
  1423857449,
  601450431,
  3009837614,
  3294710456,
  1567103746,
  711928724,
  3020668471,
  3272380065,
  1510334235,
  755167117
];
typeof Int32Array < "u" && (CRC_TABLE = new Int32Array(CRC_TABLE));
function ensureBuffer(Q) {
  if (Buffer.isBuffer(Q))
    return Q;
  var ee = typeof Buffer.alloc == "function" && typeof Buffer.from == "function";
  if (typeof Q == "number")
    return ee ? Buffer.alloc(Q) : new Buffer(Q);
  if (typeof Q == "string")
    return ee ? Buffer.from(Q) : new Buffer(Q);
  throw new Error("input must be buffer, number, or string, received " + typeof Q);
}
function bufferizeInt(Q) {
  var ee = ensureBuffer(4);
  return ee.writeInt32BE(Q, 0), ee;
}
function _crc32(Q, ee) {
  Q = ensureBuffer(Q), Buffer.isBuffer(ee) && (ee = ee.readUInt32BE(0));
  for (var ne = ~~ee ^ -1, ie = 0; ie < Q.length; ie++)
    ne = CRC_TABLE[(ne ^ Q[ie]) & 255] ^ ne >>> 8;
  return ne ^ -1;
}
function crc32() {
  return bufferizeInt(_crc32.apply(null, arguments));
}
crc32.signed = function() {
  return _crc32.apply(null, arguments);
};
crc32.unsigned = function() {
  return _crc32.apply(null, arguments) >>> 0;
};
var bufferCrc32 = crc32, __importDefault$8 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(account, "__esModule", { value: !0 });
account.getAccountId = void 0;
const crypto_js_1 = __importDefault$8(cryptoJs.exports), buffer_crc32_1 = __importDefault$8(bufferCrc32), ACCOUNT_DOMAIN_SEPERATOR = `
account-id`, SUB_ACCOUNT_ZERO = buffer$1.Buffer.alloc(32), byteArrayToWordArray = (Q) => {
  const ee = [];
  let ne;
  for (ne = 0; ne < Q.length; ne += 1)
    ee[ne / 4 | 0] |= Q[ne] << 24 - 8 * ne;
  return crypto_js_1.default.lib.WordArray.create(ee, Q.length);
}, wordToByteArray = (Q, ee) => {
  const ne = [];
  return ee > 0 && ne.push(Q >>> 24), ee > 1 && ne.push(Q >>> 16 & 255), ee > 2 && ne.push(Q >>> 8 & 255), ee > 3 && ne.push(Q & 255), ne;
}, wordArrayToByteArray = (Q, ee) => {
  Q.hasOwnProperty("sigBytes") && Q.hasOwnProperty("words") && (ee = Q.sigBytes, Q = Q.words);
  let ne = [], ie, ae = 0;
  for (; ee > 0; )
    ie = wordToByteArray(Q[ae], Math.min(4, ee)), ee -= ie.length, ne = [...ne, ie], ae++;
  return [].concat.apply([], ne);
}, intToHex = (Q) => Q < 0 ? (Number(Q) >>> 0).toString(16) : Number(Q).toString(16), generateChecksum = (Q) => {
  const ee = buffer_crc32_1.default.unsigned(buffer$1.Buffer.from(Q));
  return intToHex(ee).padStart(8, "0");
}, getAccountId = (Q, ee) => {
  const ne = crypto_js_1.default.algo.SHA224.create();
  ne.update(ACCOUNT_DOMAIN_SEPERATOR), ne.update(byteArrayToWordArray(Q.toUint8Array()));
  const ie = buffer$1.Buffer.from(SUB_ACCOUNT_ZERO);
  ee && ie.writeUInt32BE(ee), ne.update(byteArrayToWordArray(ie));
  const ae = ne.finalize(), ce = wordArrayToByteArray(ae, 28);
  return generateChecksum(ce) + ae.toString();
};
account.getAccountId = getAccountId;
account.default = {};
var number = {};
Object.defineProperty(number, "__esModule", { value: !0 });
number.from32bits = number.to32bits = void 0;
const to32bits = (Q) => {
  const ee = new ArrayBuffer(4);
  return new DataView(ee).setUint32(0, Q), Array.from(new Uint8Array(ee));
};
number.to32bits = to32bits;
const from32bits = (Q) => {
  let ee;
  for (let ne = 0; ne < 4; ne += 1)
    ee = ee << 8 | Q[ne];
  return ee;
};
number.from32bits = from32bits;
var canisters = {};
Object.defineProperty(canisters, "__esModule", { value: !0 });
canisters.NFT_CANISTERS = void 0;
canisters.NFT_CANISTERS = {
  WRAPPED_PUNKS: "bxdf4-baaaa-aaaah-qaruq-cai",
  WRAPPED_DRIP: "3db6u-aiaaa-aaaah-qbjbq-cai",
  IC_PUNKS: "qcg3w-tyaaa-aaaah-qakea-cai",
  IC_DRIP: "d3ttm-qaaaa-aaaai-qam4a-cai",
  ICP_BUNNY_MAIN: "xkbqi-2qaaa-aaaah-qbpqq-cai",
  ICP_BUNNY_STORAGE: [
    "efqhu-yqaaa-aaaaf-qaeda-cai",
    "ecrba-viaaa-aaaaf-qaedq-cai",
    "fp7fo-2aaaa-aaaaf-qaeea-cai",
    "fi6d2-xyaaa-aaaaf-qaeeq-cai",
    "fb5ig-bqaaa-aaaaf-qaefa-cai",
    "fg4os-miaaa-aaaaf-qaefq-cai",
    "ft377-naaaa-aaaaf-qaega-cai",
    "fu2zl-ayaaa-aaaaf-qaegq-cai",
    "f5zsx-wqaaa-aaaaf-qaeha-cai",
    "f2yud-3iaaa-aaaaf-qaehq-cai"
  ]
};
var standards = {};
(function(Q) {
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.NFT = Q.TOKEN = void 0, Q.TOKEN = {
    dip20: "DIP20",
    xtc: "XTC",
    wicp: "WICP",
    ext: "EXT",
    icp: "ICP",
    rosetta: "ROSETTA"
  }, Q.NFT = {
    ext: "EXT",
    icpunks: "ICPunks",
    departuresLabs: "DepartureLabs",
    erc721: "ERC721",
    dip721: "DIP721",
    c3: "C3",
    nftOrigyn: "nftOrigyn"
  }, Q.default = {
    TOKEN: Q.TOKEN,
    NFT: Q.NFT
  };
})(standards);
var __awaiter$c = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$7 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(ext, "__esModule", { value: !0 });
const agent_1$7 = require$$5, principal_1$6 = require$$4, ext_did_1 = __importDefault$7(ext_did), default_1$5 = __importDefault$7(_default), account_1$1 = account, number_1 = number, canisters_1$1 = canisters, standards_1$5 = standards, getTokenIdentifier = (Q, ee) => {
  const ne = buffer$1.Buffer.from(`
tid`), ie = new Uint8Array([
    ...ne,
    ...principal_1$6.Principal.fromText(Q).toUint8Array(),
    ...(0, number_1.to32bits)(ee)
  ]);
  return principal_1$6.Principal.fromUint8Array(ie).toText();
}, extImageUrl = (Q, ee, ne) => ({
  [canisters_1$1.NFT_CANISTERS.WRAPPED_PUNKS]: `https://${canisters_1$1.NFT_CANISTERS.IC_PUNKS}.raw.ic0.app/Token/${ee}`,
  [canisters_1$1.NFT_CANISTERS.WRAPPED_DRIP]: `https://${canisters_1$1.NFT_CANISTERS.IC_DRIP}.raw.ic0.app?tokenId=${ee}`
})[Q] || `https://${Q}.raw.ic0.app/?type=thumbnail&tokenid=${ne}`;
class EXT extends default_1$5.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$5.NFT.ext, this.actor = agent_1$7.Actor.createActor(ext_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getUserTokens(ee) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ne = (0, account_1$1.getAccountId)(ee), ie = yield this.actor.tokens_ext(ne);
      if ("err" in ie)
        throw new Error(`${Object.keys(ie.err)[0]}: ${Object.values(ie.err)[0]}`);
      return (ie.ok || []).map((ce) => {
        const le = ce[2], de = ce[0];
        return this.serializeTokenData(le, getTokenIdentifier(this.canisterId, de), de);
      });
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  transfer(ee, ne) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ie = getTokenIdentifier(this.canisterId, ne), ae = yield this.agent.getPrincipal(), ce = new Array(32).fill(0), le = yield this.actor.transfer({
        to: { principal: ee },
        from: { principal: ae },
        token: ie,
        amount: BigInt(1),
        memo: ce,
        notify: !1,
        subaccount: [],
        fee: BigInt(0)
      });
      if ("err" in le)
        throw new Error(`${Object.keys(le.err)[0]}: ${Object.values(le.err)[0]}`);
    });
  }
  details(ee) {
    return __awaiter$c(this, void 0, void 0, function* () {
      const ne = getTokenIdentifier(this.canisterId, ee), ie = yield this.actor.metadata(ne);
      if ("err" in ie)
        throw new Error(`${Object.keys(ie.err)[0]}: ${Object.values(ie.err)[0]}`);
      const { metadata: ae = {} } = "nonfungible" in ie.ok ? ie.ok.nonfungible : {};
      return this.serializeTokenData(ae, ne, ee);
    });
  }
  serializeTokenData(ee, ne, ie) {
    return {
      id: ne,
      index: BigInt(ie),
      canister: this.canisterId,
      metadata: ee.length ? ee[0] : void 0,
      url: extImageUrl(this.canisterId, ie, ne),
      standard: this.standard
    };
  }
}
ext.default = EXT;
var ic_punks = {}, icpunks_did = {};
Object.defineProperty(icpunks_did, "__esModule", { value: !0 });
icpunks_did.init = void 0;
icpunks_did.default = ({ IDL: Q }) => {
  const ee = Q.Record({ value: Q.Text, name: Q.Text }), ne = Q.Record({
    id: Q.Nat,
    url: Q.Text,
    owner: Q.Principal,
    desc: Q.Text,
    name: Q.Text,
    properties: Q.Vec(ee)
  }), ie = Q.Nat;
  return Q.Service({
    data_of: Q.Func([ie], [ne], []),
    transfer_to: Q.Func([Q.Principal, ie], [Q.Bool], []),
    user_tokens: Q.Func([Q.Principal], [Q.Vec(Q.Nat)], [])
  });
};
const init$c = ({ IDL: Q }) => [Q.Text, Q.Text, Q.Nat, Q.Principal];
icpunks_did.init = init$c;
var __awaiter$b = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$6 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(ic_punks, "__esModule", { value: !0 });
const agent_1$6 = require$$5, icpunks_did_1 = __importDefault$6(icpunks_did), default_1$4 = __importDefault$6(_default), canisters_1 = canisters, standards_1$4 = standards, getICPBunnyCanisterId = (Q) => canisters_1.NFT_CANISTERS.ICP_BUNNY_STORAGE[Q % 10], imageUrl = (Q, ee, ne) => ({
  [canisters_1.NFT_CANISTERS.ICP_BUNNY_MAIN]: `https://${getICPBunnyCanisterId(ee)}.raw.ic0.app/Token/${ee}`
})[Q] || `https://${Q}.raw.ic0.app${ne}`;
class ICPUNKS extends default_1$4.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$4.NFT.icpunks, this.serializeTokenData = (ie) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: imageUrl(this.canisterId, Number.parseInt(ie.id.toString(), 10), ie.url),
      name: ie.name,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$6.Actor.createActor(icpunks_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$b(this, void 0, void 0, function* () {
      const ne = yield this.actor.user_tokens(ee);
      return (yield Promise.all(ne.map((ae) => this.actor.data_of(ae)))).map((ae) => this.serializeTokenData(ae));
    });
  }
  transfer(ee, ne) {
    return __awaiter$b(this, void 0, void 0, function* () {
      if (!(yield this.actor.transfer_to(ee, BigInt(ne))))
        throw new Error("Error transfering token");
    });
  }
  details(ee) {
    return __awaiter$b(this, void 0, void 0, function* () {
      const ne = yield this.actor.data_of(BigInt(ee));
      return this.serializeTokenData(ne);
    });
  }
}
ic_punks.default = ICPUNKS;
var nft_origyn = {}, nft_origyn_did = {};
Object.defineProperty(nft_origyn_did, "__esModule", { value: !0 });
nft_origyn_did.init = void 0;
nft_origyn_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec(), ne = Q.Rec(), ie = Q.Principal;
  Q.Record({
    owner: ie,
    storage_space: Q.Opt(Q.Nat)
  });
  const ae = Q.Text, ce = Q.Text, le = Q.Variant({
    principal: Q.Principal,
    address: ce
  }), de = Q.Record({
    token: ae,
    user: le
  }), ye = Q.Nat, he = Q.Variant({
    InvalidToken: ae,
    Other: Q.Text
  }), Be = Q.Variant({
    ok: ye,
    err: he
  }), Ee = Q.Record({
    value: ee,
    name: Q.Text,
    immutable: Q.Bool
  });
  ee.fill(Q.Variant({
    Int: Q.Int,
    Nat: Q.Nat,
    Empty: Q.Null,
    Nat16: Q.Nat16,
    Nat32: Q.Nat32,
    Nat64: Q.Nat64,
    Blob: Q.Vec(Q.Nat8),
    Bool: Q.Bool,
    Int8: Q.Int8,
    Nat8: Q.Nat8,
    Nats: Q.Variant({
      thawed: Q.Vec(Q.Nat),
      frozen: Q.Vec(Q.Nat)
    }),
    Text: Q.Text,
    Bytes: Q.Variant({
      thawed: Q.Vec(Q.Nat8),
      frozen: Q.Vec(Q.Nat8)
    }),
    Int16: Q.Int16,
    Int32: Q.Int32,
    Int64: Q.Int64,
    Option: Q.Opt(ee),
    Floats: Q.Variant({
      thawed: Q.Vec(Q.Float64),
      frozen: Q.Vec(Q.Float64)
    }),
    Float: Q.Float64,
    Principal: Q.Principal,
    Array: Q.Variant({
      thawed: Q.Vec(ee),
      frozen: Q.Vec(ee)
    }),
    Class: Q.Vec(Ee)
  }));
  const me = Q.Variant({
    account_id: Q.Text,
    principal: Q.Principal,
    extensible: ee
  }), ge = Q.Record({
    fee: Q.Nat,
    decimals: Q.Nat,
    canister: Q.Principal,
    standard: Q.Variant({
      EXTFungible: Q.Null,
      DIP20: Q.Null,
      Ledger: Q.Null
    }),
    symbol: Q.Text
  }), be = Q.Variant({
    ic: ge,
    extensible: ee
  }), we = Q.Record({
    token: be,
    token_id: Q.Text,
    seller: me,
    lock_to_date: Q.Opt(Q.Int),
    buyer: me,
    amount: Q.Nat,
    sale_id: Q.Opt(Q.Text)
  }), Oe = Q.Record({
    staker: me,
    token_id: Q.Text,
    amount: Q.Nat
  }), He = Q.Record({
    nfts: Q.Vec(Q.Text),
    sales: Q.Vec(we),
    stake: Q.Vec(Oe),
    multi_canister: Q.Opt(Q.Vec(Q.Principal)),
    escrow: Q.Vec(we)
  }), Se = Q.Variant({
    nyi: Q.Null,
    storage_configuration_error: Q.Null,
    escrow_withdraw_payment_failed: Q.Null,
    token_not_found: Q.Null,
    owner_not_found: Q.Null,
    content_not_found: Q.Null,
    auction_ended: Q.Null,
    out_of_range: Q.Null,
    sale_id_does_not_match: Q.Null,
    sale_not_found: Q.Null,
    item_not_owned: Q.Null,
    property_not_found: Q.Null,
    validate_trx_wrong_host: Q.Null,
    withdraw_too_large: Q.Null,
    content_not_deserializable: Q.Null,
    bid_too_low: Q.Null,
    validate_deposit_wrong_amount: Q.Null,
    existing_sale_found: Q.Null,
    asset_mismatch: Q.Null,
    escrow_cannot_be_removed: Q.Null,
    deposit_burned: Q.Null,
    cannot_restage_minted_token: Q.Null,
    cannot_find_status_in_metadata: Q.Null,
    receipt_data_mismatch: Q.Null,
    validate_deposit_failed: Q.Null,
    unauthorized_access: Q.Null,
    item_already_minted: Q.Null,
    no_escrow_found: Q.Null,
    escrow_owner_not_the_owner: Q.Null,
    improper_interface: Q.Null,
    app_id_not_found: Q.Null,
    token_non_transferable: Q.Null,
    sale_not_over: Q.Null,
    update_class_error: Q.Null,
    malformed_metadata: Q.Null,
    token_id_mismatch: Q.Null,
    id_not_found_in_metadata: Q.Null,
    auction_not_started: Q.Null,
    library_not_found: Q.Null,
    attempt_to_stage_system_data: Q.Null,
    validate_deposit_wrong_buyer: Q.Null,
    not_enough_storage: Q.Null,
    sales_withdraw_payment_failed: Q.Null
  }), Ge = Q.Record({
    text: Q.Text,
    error: Se,
    number: Q.Nat32,
    flag_point: Q.Text
  }), Fe = Q.Variant({
    ok: He,
    err: Ge
  }), Pe = Q.Variant({
    ok: ce,
    err: he
  }), We = Q.Variant({ ok: me, err: Ge }), tt = Q.Record({
    token: be,
    token_id: Q.Text,
    seller: me,
    buyer: me,
    amount: Q.Nat
  }), Et = Q.Record({
    escrow_receipt: tt,
    sale_id: Q.Text
  }), Nt = Q.Variant({
    nat: Q.Nat,
    text: Q.Text,
    extensible: ee
  }), et = Q.Record({
    start_price: Q.Nat,
    token: be,
    reserve: Q.Opt(Q.Nat),
    start_date: Q.Int,
    min_increase: Q.Variant({
      amount: Q.Nat,
      percentage: Q.Float64
    }),
    allow_list: Q.Opt(Q.Vec(Q.Principal)),
    buy_now: Q.Opt(Q.Nat),
    ending: Q.Variant({
      waitForQuiet: Q.Record({
        max: Q.Nat,
        date: Q.Int,
        fade: Q.Float64,
        extention: Q.Nat64
      }),
      date: Q.Int
    })
  }), mt = Q.Variant({
    flat: Q.Record({ token: be, amount: Q.Nat }),
    extensible: Q.Variant({ candyClass: Q.Null }),
    instant: Q.Null,
    auction: et,
    dutch: Q.Record({
      start_price: Q.Nat,
      reserve: Q.Opt(Q.Nat),
      decay_per_hour: Q.Float64
    })
  }), Mt = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: be,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: be,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: be, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: mt,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), Ot = Q.Variant({ ok: Mt, err: Ge }), yt = Q.Principal, Qt = Q.Record({
    freezing_threshold: Q.Nat,
    controllers: Q.Opt(Q.Vec(Q.Principal)),
    memory_allocation: Q.Nat,
    compute_allocation: Q.Nat
  }), Yt = Q.Record({
    status: Q.Variant({
      stopped: Q.Null,
      stopping: Q.Null,
      running: Q.Null
    }),
    memory_size: Q.Nat,
    cycles: Q.Nat,
    settings: Qt,
    module_hash: Q.Opt(Q.Vec(Q.Nat8))
  }), jt = Q.Record({
    token_id: Q.Text,
    chunk: Q.Opt(Q.Nat),
    library_id: Q.Text
  }), $t = Q.Record({
    allocated_space: Q.Nat,
    token_id: Q.Text,
    available_space: Q.Nat,
    canister: Q.Principal,
    chunks: Q.Vec(Q.Nat),
    library_id: Q.Text
  }), Wt = Q.Variant({
    remote: Q.Record({
      args: jt,
      canister: Q.Principal
    }),
    chunk: Q.Record({
      total_chunks: Q.Nat,
      content: Q.Vec(Q.Nat8),
      storage_allocation: $t,
      current_chunk: Q.Opt(Q.Nat)
    })
  }), st = Q.Variant({ ok: Wt, err: Ge }), at = Q.Record({
    multi_canister_count: Q.Opt(Q.Nat),
    managers: Q.Opt(Q.Vec(Q.Principal)),
    owner: Q.Opt(Q.Principal),
    metadata: Q.Opt(ee),
    logo: Q.Opt(Q.Text),
    name: Q.Opt(Q.Text),
    network: Q.Opt(Q.Principal),
    fields: Q.Opt(Q.Vec(Q.Tuple(Q.Text, Q.Opt(Q.Nat), Q.Opt(Q.Nat)))),
    token_ids_count: Q.Opt(Q.Nat),
    available_space: Q.Opt(Q.Nat),
    multi_canister: Q.Opt(Q.Vec(Q.Principal)),
    token_ids: Q.Opt(Q.Vec(Q.Text)),
    total_supply: Q.Opt(Q.Nat),
    symbol: Q.Opt(Q.Text),
    allocated_storage: Q.Opt(Q.Nat)
  }), wt = Q.Variant({ ok: at, err: Ge }), Ut = Q.Variant({
    metadata: Q.Opt(ee),
    logo: Q.Opt(Q.Text),
    name: Q.Opt(Q.Text),
    symbol: Q.Opt(Q.Text)
  }), $e = Q.Vec(Ut), ir = Q.Variant({ ok: Q.Bool, err: Ge }), tr = Q.Record({
    data: ee,
    event: Q.Text,
    timestamp: Q.Int,
    caller: Q.Opt(Q.Principal)
  }), ar = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: be,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: be,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: be, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: mt,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), ht = Q.Variant({
    ok: ar,
    err: Ge
  }), qt = Q.Record({
    token: be,
    trx_id: Nt,
    seller: me,
    buyer: me,
    amount: Q.Nat,
    sale_id: Q.Opt(Q.Text)
  }), Xe = Q.Record({
    token_id: Q.Text,
    deposit: qt,
    lock_to_date: Q.Opt(Q.Int)
  }), nt = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: be,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: be,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: be, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: mt,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), je = Q.Record({
    balance: Q.Nat,
    receipt: tt,
    transaction: nt
  }), It = Q.Variant({ ok: je, err: Ge }), lt = Q.Variant({ ok: Q.Text, err: Ge }), Ye = Q.Record({
    available_space: Q.Nat,
    allocated_storage: Q.Nat
  }), _e = Q.Variant({ ok: Ye, err: Ge }), Ie = Q.Variant({
    ok: Q.Vec(nt),
    err: Ge
  }), Ce = Q.Tuple(Q.Text, Q.Text), ke = Q.Record({
    url: Q.Text,
    method: Q.Text,
    body: Q.Vec(Q.Nat8),
    headers: Q.Vec(Ce)
  }), Ve = Q.Tuple(Q.Text, Q.Text), Ze = Q.Record({
    key: Q.Text,
    index: Q.Nat,
    content_encoding: Q.Text
  }), ct = Q.Variant({
    Callback: Q.Record({
      token: Ze,
      callback: Q.Func([], [], [])
    })
  }), kt = Q.Record({
    body: Q.Vec(Q.Nat8),
    headers: Q.Vec(Ve),
    streaming_strategy: Q.Opt(ct),
    status_code: Q.Nat16
  }), Jt = Q.Record({
    token: Q.Opt(Ze),
    body: Q.Vec(Q.Nat8)
  }), Kt = Q.Variant({
    UpdateOwner: Q.Principal,
    UpdateManagers: Q.Vec(Q.Principal),
    UpdateNetwork: Q.Opt(Q.Principal)
  }), Zt = Q.Variant({
    add_storage_canisters: Q.Vec(Q.Tuple(Q.Principal, Q.Nat, Q.Tuple(Q.Nat, Q.Nat, Q.Nat)))
  }), De = Q.Variant({
    add_storage_canisters: Q.Tuple(Q.Nat, Q.Nat)
  }), Te = Q.Variant({
    ok: De,
    err: Ge
  }), Re = Q.Record({
    pricing: mt,
    escrow_receipt: Q.Opt(tt)
  }), ot = Q.Record({
    token_id: Q.Text,
    sales_config: Re
  }), bt = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: be,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: be,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: be, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: mt,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), Pt = Q.Variant({
    ok: bt,
    err: Ge
  }), Vt = Q.Variant({
    fungible: Q.Record({
      decimals: Q.Nat8,
      metadata: Q.Opt(Q.Vec(Q.Nat8)),
      name: Q.Text,
      symbol: Q.Text
    }),
    nonfungible: Q.Record({ metadata: Q.Opt(Q.Vec(Q.Nat8)) })
  }), Ir = Q.Variant({ ok: Vt, err: he }), mr = Q.Record({
    status: Q.Variant({
      closed: Q.Null,
      open: Q.Null,
      not_started: Q.Null
    }),
    participants: Q.Vec(Q.Tuple(Q.Principal, Q.Int)),
    current_bid_amount: Q.Nat,
    winner: Q.Opt(me),
    end_date: Q.Int,
    wait_for_quiet_count: Q.Opt(Q.Nat),
    current_escrow: Q.Opt(tt),
    allow_list: Q.Opt(Q.Vec(Q.Tuple(Q.Principal, Q.Bool))),
    min_next_bid: Q.Nat,
    config: mt
  }), _r = Q.Record({
    token_id: Q.Text,
    sale_type: Q.Variant({ auction: mr }),
    sale_id: Q.Text
  }), Br = Q.Record({
    metadata: ee,
    current_sale: Q.Opt(_r)
  }), Tr = Q.Variant({ ok: Br, err: Ge }), cn = Q.Variant({
    UnauthorizedOperator: Q.Null,
    SelfTransfer: Q.Null,
    TokenNotFound: Q.Null,
    UnauthorizedOwner: Q.Null,
    TxNotFound: Q.Null,
    SelfApprove: Q.Null,
    OperatorNotFound: Q.Null,
    ExistedNFT: Q.Null,
    OwnerNotFound: Q.Null,
    Other: Q.Text
  }), oi = Q.Variant({
    Ok: Q.Opt(Q.Principal),
    Err: cn
  }), un = Q.Record({
    to: me,
    token_id: Q.Text,
    from: me
  }), Yn = Q.Record({
    transaction: nt,
    assets: Q.Vec(ee)
  }), Vn = Q.Variant({
    ok: Yn,
    err: Ge
  }), Dn = Q.Record({
    content: Q.Vec(Q.Nat8),
    token_id: Q.Text,
    chunk: Q.Nat,
    filedata: ee,
    library_id: Q.Text
  }), Ln = Q.Record({ canister: Q.Principal }), di = Q.Variant({
    ok: Ln,
    err: Ge
  }), yi = Q.Vec(Q.Nat8), Zi = Q.Vec(Q.Nat8), ki = Q.Record({
    to: le,
    token: ae,
    notify: Q.Bool,
    from: le,
    memo: yi,
    subaccount: Q.Opt(Zi),
    amount: ye
  }), Pn = Q.Variant({
    ok: ye,
    err: Q.Variant({
      CannotNotify: ce,
      InsufficientBalance: Q.Null,
      InvalidToken: ae,
      Rejected: Q.Null,
      Unauthorized: ce,
      Other: Q.Text
    })
  }), ni = Q.Variant({ Ok: Q.Nat, Err: cn }), Xn = Q.Variant({
    Set: ee,
    Lock: ee,
    Next: Q.Vec(ne)
  });
  ne.fill(Q.Record({ mode: Xn, name: Q.Text }));
  const fi = Q.Record({
    id: Q.Text,
    update: Q.Vec(ne)
  }), Bi = Q.Variant({
    update: Q.Record({
      token_id: Q.Text,
      update: fi,
      app_id: Q.Text
    }),
    replace: Q.Record({ token_id: Q.Text, data: ee })
  }), Ci = Q.Bool, Ii = Q.Variant({
    ok: Ci,
    err: Ge
  }), Ft = Q.Record({
    token: be,
    token_id: Q.Text,
    seller: me,
    withdraw_to: me,
    buyer: me,
    amount: Q.Nat
  }), sr = Q.Variant({
    sale: Ft,
    escrow: Ft
  }), Gr = Q.Record({
    token_id: Q.Text,
    txn_type: Q.Variant({
      escrow_deposit: Q.Record({
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_network_updated: Q.Record({
        network: Q.Principal,
        extensible: ee
      }),
      escrow_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      }),
      canister_managers_updated: Q.Record({
        managers: Q.Vec(Q.Principal),
        extensible: ee
      }),
      auction_bid: Q.Record({
        token: be,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Text
      }),
      burn: Q.Null,
      data: Q.Null,
      sale_ended: Q.Record({
        token: be,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat,
        sale_id: Q.Opt(Q.Text)
      }),
      mint: Q.Record({
        to: me,
        from: me,
        sale: Q.Opt(Q.Record({ token: be, amount: Q.Nat })),
        extensible: ee
      }),
      extensible: ee,
      owner_transfer: Q.Record({
        to: me,
        from: me,
        extensible: ee
      }),
      sale_opened: Q.Record({
        pricing: mt,
        extensible: ee,
        sale_id: Q.Text
      }),
      canister_owner_updated: Q.Record({
        owner: Q.Principal,
        extensible: ee
      }),
      sale_withdraw: Q.Record({
        fee: Q.Nat,
        token: be,
        token_id: Q.Text,
        trx_id: Nt,
        seller: me,
        extensible: ee,
        buyer: me,
        amount: Q.Nat
      })
    }),
    timestamp: Q.Int,
    index: Q.Nat
  }), zr = Q.Variant({ ok: Gr, err: Ge });
  return Q.Service({
    __advance_time: Q.Func([Q.Int], [Q.Int], []),
    __set_time_mode: Q.Func([Q.Variant({ test: Q.Null, standard: Q.Null })], [Q.Bool], []),
    balance: Q.Func([de], [Be], ["query"]),
    balanceEXT: Q.Func([de], [Be], ["query"]),
    balanceOfDip721: Q.Func([Q.Principal], [Q.Nat], ["query"]),
    balance_of_nft_origyn: Q.Func([me], [Fe], ["query"]),
    bearer: Q.Func([ae], [Pe], ["query"]),
    bearerEXT: Q.Func([ae], [Pe], ["query"]),
    bearer_batch_nft_origyn: Q.Func([Q.Vec(Q.Text)], [Q.Vec(We)], ["query"]),
    bearer_nft_origyn: Q.Func([Q.Text], [We], ["query"]),
    bid_nft_origyn: Q.Func([Et], [Ot], []),
    canister_status: Q.Func([Q.Record({ canister_id: yt })], [Yt], []),
    chunk_nft_origyn: Q.Func([jt], [st], ["query"]),
    collection_nft_origyn: Q.Func([
      Q.Opt(Q.Vec(Q.Tuple(Q.Text, Q.Opt(Q.Nat), Q.Opt(Q.Nat))))
    ], [wt], ["query"]),
    collection_update_origyn: Q.Func([$e], [ir], []),
    current_log: Q.Func([], [Q.Vec(tr)], ["query"]),
    cycles: Q.Func([], [Q.Nat], ["query"]),
    end_sale_nft_origyn: Q.Func([Q.Text], [ht], []),
    escrow_nft_origyn: Q.Func([Xe], [It], []),
    getEXTTokenIdentifier: Q.Func([Q.Text], [Q.Text], ["query"]),
    get_access_key: Q.Func([], [lt], ["query"]),
    get_canister_managers_nft_origyn: Q.Func([], [Q.Vec(ie)], ["query"]),
    get_canister_network_nft_origyn: Q.Func([], [Q.Opt(ie)], ["query"]),
    get_canister_owner_nft_origyn: Q.Func([], [ie], ["query"]),
    get_nat_as_token_id_origyn: Q.Func([Q.Nat], [Q.Text], ["query"]),
    get_owner_soulbound: Q.Func([ee], [Q.Bool], []),
    get_storage_metrics: Q.Func([], [_e], ["query"]),
    get_token_id_as_nat_origyn: Q.Func([Q.Text], [Q.Nat], ["query"]),
    harvest_log: Q.Func([Q.Nat], [Q.Vec(Q.Vec(tr))], []),
    history_nft_origyn: Q.Func([Q.Text, Q.Opt(Q.Nat), Q.Opt(Q.Nat)], [Ie], ["query"]),
    http_access_key: Q.Func([], [lt], []),
    http_request: Q.Func([ke], [kt], ["query"]),
    http_request_streaming_callback: Q.Func([Ze], [Jt], ["query"]),
    log_history_page: Q.Func([Q.Nat], [Q.Vec(tr)], ["query"]),
    log_history_page_chunk: Q.Func([Q.Nat, Q.Nat, Q.Nat], [Q.Vec(tr)], ["query"]),
    log_history_size: Q.Func([], [Q.Nat], ["query"]),
    manage_nft_origyn: Q.Func([Kt], [ir], []),
    manage_storage_nft_origyn: Q.Func([Zt], [Te], []),
    market_transfer_batch_nft_origyn: Q.Func([Q.Vec(ot)], [Q.Vec(Pt)], []),
    market_transfer_nft_origyn: Q.Func([ot], [Pt], []),
    metadata: Q.Func([ae], [Ir], ["query"]),
    mint__batch_nft_origyn: Q.Func([Q.Vec(Q.Tuple(Q.Text, me))], [Q.Vec(lt)], []),
    mint_nft_origyn: Q.Func([Q.Text, me], [lt], []),
    nftStreamingCallback: Q.Func([Ze], [Jt], ["query"]),
    nft_batch_origyn: Q.Func([Q.Vec(Q.Text)], [Q.Vec(Tr)], ["query"]),
    nft_origyn: Q.Func([Q.Text], [Tr], ["query"]),
    nuke_log: Q.Func([], [], []),
    ownerOf: Q.Func([Q.Nat], [oi], ["query"]),
    ownerOfDIP721: Q.Func([Q.Nat], [oi], ["query"]),
    owner_transfer_nft_origyn: Q.Func([un], [Vn], []),
    set_log_harvester_id: Q.Func([Q.Principal], [], []),
    stage_batch_nft_origyn: Q.Func([Q.Vec(Q.Record({ metadata: ee }))], [Q.Vec(lt)], []),
    stage_library_nft_origyn: Q.Func([Dn], [di], []),
    stage_nft_origyn: Q.Func([Q.Record({ metadata: ee })], [lt], []),
    transfer: Q.Func([ki], [Pn], []),
    transferEXT: Q.Func([ki], [Pn], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ni], []),
    transferFromDip721: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ni], []),
    update_app_nft_origyn: Q.Func([Bi], [Ii], []),
    whoami: Q.Func([], [Q.Principal], ["query"]),
    withdraw_nft_origyn: Q.Func([sr], [zr], [])
  });
};
const init$b = ({ IDL: Q }) => {
  const ee = Q.Principal;
  return [Q.Record({
    owner: ee,
    storage_space: Q.Opt(Q.Nat)
  })];
};
nft_origyn_did.init = init$b;
var __awaiter$a = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$5 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(nft_origyn, "__esModule", { value: !0 });
const agent_1$5 = require$$5, nft_origyn_did_1 = __importDefault$5(nft_origyn_did), default_1$3 = __importDefault$5(_default), standards_1$3 = standards;
class NFTOrigyn extends default_1$3.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$3.NFT.nftOrigyn, this.serializeTokenData = (ie) => {
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
      const ae = ie.ok.metadata, ce = ae.Class.find(({ name: le }) => le === "id").value.Text;
      return {
        index: ce,
        canister: this.canisterId,
        url: `https://${this.canisterId}.raw.ic0.app/-/${ce}`,
        name: ce,
        metadata: ae,
        standard: this.standard
      };
    }, this.actor = agent_1$5.Actor.createActor(nft_origyn_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getUserTokens(ee) {
    return __awaiter$a(this, void 0, void 0, function* () {
      const ne = yield this.actor.balance_of_nft_origyn({ principal: ee });
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      return (yield Promise.all(ne.ok.nfts.map((ae) => __awaiter$a(this, void 0, void 0, function* () {
        const ce = yield this.actor.nft_origyn(ae);
        if ("err" in ce)
          throw new Error(Object.keys(ce.err)[0]);
        return { detail: ce, principal: ee };
      })))).map((ae) => this.serializeTokenData(ae.detail));
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  transfer(ee, ne) {
    return __awaiter$a(this, void 0, void 0, function* () {
      yield this.agent.getPrincipal();
      const ie = yield this.actor.balance_of_nft_origyn({ principal: ee });
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
      const ae = ie.ok.escrow.find(({ token_id: le }) => le === ne);
      if (!ae)
        throw new Error("No pending escrows for transfer.");
      const ce = yield this.actor.market_transfer_nft_origyn({
        token_id: ne,
        sales_config: {
          pricing: { instant: null },
          escrow_receipt: [ae]
        }
      });
      if ("err" in ce)
        throw new Error(Object.keys(ce.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$a(this, void 0, void 0, function* () {
      const ne = yield this.actor.nft_origyn(ee);
      return this.serializeTokenData(ne);
    });
  }
}
nft_origyn.default = NFTOrigyn;
var departure_labs = {}, departure_labs_did = {};
Object.defineProperty(departure_labs_did, "__esModule", { value: !0 });
departure_labs_did.init = void 0;
departure_labs_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec(), ne = Q.Rec(), ie = Q.Rec(), ae = Q.Func([], [], []), ce = Q.Variant({
    Init: Q.Record({ size: Q.Nat, callback: Q.Opt(ae) }),
    Chunk: Q.Record({
      chunk: Q.Vec(Q.Nat8),
      callback: Q.Opt(ae)
    })
  }), le = Q.Variant({
    Put: Q.Record({
      key: Q.Text,
      contentType: Q.Text,
      callback: Q.Opt(ae),
      payload: Q.Variant({
        StagedData: Q.Null,
        Payload: Q.Vec(Q.Nat8)
      })
    }),
    Remove: Q.Record({ key: Q.Text, callback: Q.Opt(ae) }),
    StagedWrite: ce
  }), de = Q.Record({
    p: Q.Principal,
    id: Q.Text,
    isAuthorized: Q.Bool
  }), ye = Q.Variant({
    Immutable: Q.Null,
    NotFound: Q.Null,
    Unauthorized: Q.Null,
    InvalidRequest: Q.Null,
    AuthorizedPrincipalLimitReached: Q.Nat
  }), he = Q.Variant({ ok: Q.Null, err: ye }), Be = Q.Record({
    nft_payload_size: Q.Nat,
    memory_size: Q.Nat,
    max_live_size: Q.Nat,
    cycles: Q.Nat,
    total_minted: Q.Nat,
    heap_size: Q.Nat,
    authorized_users: Q.Vec(Q.Principal)
  }), Ee = Q.Func([], [], []), me = Q.Variant({
    ContractAuthorize: Q.Record({
      isAuthorized: Q.Bool,
      user: Q.Principal
    }),
    Mint: Q.Record({ id: Q.Text, owner: Q.Principal })
  }), ge = Q.Variant({
    Authorize: Q.Record({
      id: Q.Text,
      isAuthorized: Q.Bool,
      user: Q.Principal
    }),
    Transfer: Q.Record({
      id: Q.Text,
      to: Q.Principal,
      from: Q.Principal
    })
  }), be = Q.Record({
    topupCallback: Ee,
    createdAt: Q.Int,
    topupAmount: Q.Nat,
    event: Q.Variant({ ContractEvent: me, TokenEvent: ge })
  }), we = Q.Func([be], [], []), Oe = Q.Record({
    failedCalls: Q.Nat,
    failedCallsLimit: Q.Nat,
    callback: Q.Opt(we),
    noTopupCallLimit: Q.Nat,
    callsSinceLastTopup: Q.Nat
  }), He = Q.Record({
    name: Q.Text,
    symbol: Q.Text
  }), Se = Q.Tuple(Q.Text, Q.Text), Ge = Q.Record({
    url: Q.Text,
    method: Q.Text,
    body: Q.Vec(Q.Nat8),
    headers: Q.Vec(Se)
  }), Fe = Q.Record({
    key: Q.Text,
    index: Q.Nat,
    content_encoding: Q.Text
  }), Pe = Q.Record({
    token: Q.Opt(Fe),
    body: Q.Vec(Q.Nat8)
  }), We = Q.Func([Fe], [Pe], ["query"]), tt = Q.Variant({
    Callback: Q.Record({
      token: Fe,
      callback: We
    })
  }), Et = Q.Record({
    body: Q.Vec(Q.Nat8),
    headers: Q.Vec(Se),
    streaming_strategy: Q.Opt(tt),
    status_code: Q.Nat16
  }), Nt = Q.Variant({
    Int: Q.Int,
    Nat: Q.Nat,
    Empty: Q.Null,
    Bool: Q.Bool,
    Text: Q.Text,
    Float: Q.Float64,
    Principal: Q.Principal,
    Class: Q.Vec(ee)
  });
  ee.fill(Q.Record({ value: Nt, name: Q.Text, immutable: Q.Bool }));
  const et = Q.Vec(ee), mt = Q.Record({
    contentType: Q.Text,
    owner: Q.Opt(Q.Principal),
    properties: et,
    isPrivate: Q.Bool,
    payload: Q.Variant({
      StagedData: Q.Null,
      Payload: Q.Vec(Q.Nat8)
    })
  }), Mt = Q.Variant({ ok: Q.Principal, err: ye });
  ne.fill(Q.Record({ name: Q.Text, next: Q.Vec(ne) }));
  const Ot = Q.Variant({ All: Q.Null, Some: Q.Vec(ne) }), yt = Q.Record({ id: Q.Text, mode: Ot }), Qt = Q.Variant({ ok: et, err: ye }), Yt = Q.Record({
    data: Q.Vec(Q.Nat8),
    totalPages: Q.Nat,
    nextPage: Q.Opt(Q.Nat)
  }), jt = Q.Variant({
    Complete: Q.Vec(Q.Nat8),
    Chunk: Yt
  }), $t = Q.Record({
    id: Q.Text,
    contentType: Q.Text,
    owner: Q.Principal,
    createdAt: Q.Int,
    properties: et,
    payload: jt
  }), Wt = Q.Variant({ ok: $t, err: ye }), st = Q.Variant({ ok: Yt, err: ye }), at = Q.Record({
    id: Q.Text,
    contentType: Q.Text,
    owner: Q.Principal,
    createdAt: Q.Int,
    properties: et
  }), wt = Q.Variant({ ok: at, err: ye }), Ut = Q.Variant({
    Set: we,
    Remove: Q.Null
  }), $e = Q.Variant({ Set: Nt, Next: Q.Vec(ie) });
  ie.fill(Q.Record({ mode: $e, name: Q.Text }));
  const ir = Q.Record({
    id: Q.Text,
    update: Q.Vec(ie)
  });
  return Q.Service({
    assetRequest: Q.Func([le], [], []),
    authorize: Q.Func([de], [he], []),
    balanceOf: Q.Func([Q.Principal], [Q.Vec(Q.Text)], []),
    getAuthorized: Q.Func([Q.Text], [Q.Vec(Q.Principal)], ["query"]),
    getContractInfo: Q.Func([], [Be], []),
    getEventCallbackStatus: Q.Func([], [Oe], []),
    getMetadata: Q.Func([], [He], ["query"]),
    getTotalMinted: Q.Func([], [Q.Nat], ["query"]),
    http_request: Q.Func([Ge], [Et], ["query"]),
    http_request_streaming_callback: Q.Func([Fe], [Pe], ["query"]),
    init: Q.Func([Q.Vec(Q.Principal), He], [], []),
    isAuthorized: Q.Func([Q.Text, Q.Principal], [Q.Bool], ["query"]),
    listAssets: Q.Func([], [Q.Vec(Q.Tuple(Q.Text, Q.Text, Q.Nat))], ["query"]),
    mint: Q.Func([mt], [Q.Text], []),
    nftStreamingCallback: Q.Func([Fe], [Pe], ["query"]),
    ownerOf: Q.Func([Q.Text], [Mt], ["query"]),
    queryProperties: Q.Func([yt], [Qt], ["query"]),
    staticStreamingCallback: Q.Func([Fe], [Pe], ["query"]),
    tokenByIndex: Q.Func([Q.Text], [Wt], []),
    tokenChunkByIndex: Q.Func([Q.Text, Q.Nat], [st], []),
    tokenMetadataByIndex: Q.Func([Q.Text], [wt], []),
    transfer: Q.Func([Q.Principal, Q.Text], [he], []),
    updateContractOwners: Q.Func([Q.Principal, Q.Bool], [he], []),
    updateEventCallback: Q.Func([Ut], [], []),
    updateProperties: Q.Func([ir], [Qt], []),
    wallet_receive: Q.Func([], [], []),
    writeStaged: Q.Func([ce], [], [])
  });
};
const init$a = ({}) => [];
departure_labs_did.init = init$a;
var __awaiter$9 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$4 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(departure_labs, "__esModule", { value: !0 });
const agent_1$4 = require$$5, departure_labs_did_1 = __importDefault$4(departure_labs_did), default_1$2 = __importDefault$4(_default), standards_1$2 = standards;
class DepartureLabs extends default_1$2.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$2.NFT.departuresLabs, this.serializeTokenData = (ie) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: `https://${this.canisterId}.raw.ic0.app/nft/${ie.id}`,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$4.Actor.createActor(departure_labs_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ne = yield this.actor.balanceOf(ee);
      return (yield Promise.all(ne.map((ae) => __awaiter$9(this, void 0, void 0, function* () {
        const ce = yield this.actor.tokenMetadataByIndex(ae);
        if ("err" in ce)
          throw new Error(Object.keys(ce.err)[0]);
        return ce.ok;
      })))).map((ae) => this.serializeTokenData(ae));
    });
  }
  transfer(ee, ne) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ie = yield this.actor.transfer(ee, ne.toString(10));
      if ("err" in ie)
        throw new Error(Object.keys(ie.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$9(this, void 0, void 0, function* () {
      const ne = yield this.actor.tokenMetadataByIndex(ee.toString(10));
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      return this.serializeTokenData(ne.ok);
    });
  }
}
departure_labs.default = DepartureLabs;
var dip_721 = {}, dip_721_did = {};
Object.defineProperty(dip_721_did, "__esModule", { value: !0 });
dip_721_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  Q.Record({
    cap: Q.Opt(Q.Principal),
    logo: Q.Opt(Q.Text),
    name: Q.Opt(Q.Text),
    custodians: Q.Opt(Q.Vec(Q.Principal)),
    symbol: Q.Opt(Q.Text)
  });
  const ne = Q.Variant({
    UnauthorizedOperator: Q.Null,
    SelfTransfer: Q.Null,
    TokenNotFound: Q.Null,
    UnauthorizedOwner: Q.Null,
    SelfApprove: Q.Null,
    OperatorNotFound: Q.Null,
    ExistedNFT: Q.Null,
    OwnerNotFound: Q.Null
  }), ie = Q.Variant({ Ok: Q.Nat, Err: ne }), ae = Q.Variant({ Ok: Q.Bool, Err: ne }), ce = Q.Record({
    logo: Q.Opt(Q.Text),
    name: Q.Opt(Q.Text),
    created_at: Q.Nat64,
    upgraded_at: Q.Nat64,
    custodians: Q.Vec(Q.Principal),
    symbol: Q.Opt(Q.Text)
  });
  ee.fill(Q.Vec(Q.Tuple(Q.Text, Q.Variant({
    Nat64Content: Q.Nat64,
    Nat32Content: Q.Nat32,
    BoolContent: Q.Bool,
    Nat8Content: Q.Nat8,
    Int64Content: Q.Int64,
    IntContent: Q.Int,
    NatContent: Q.Nat,
    Nat16Content: Q.Nat16,
    Int32Content: Q.Int32,
    Int8Content: Q.Int8,
    FloatContent: Q.Float64,
    Int16Content: Q.Int16,
    BlobContent: Q.Vec(Q.Nat8),
    NestedContent: ee,
    Principal: Q.Principal,
    TextContent: Q.Text
  }))));
  const le = Q.Variant({
    Nat64Content: Q.Nat64,
    Nat32Content: Q.Nat32,
    BoolContent: Q.Bool,
    Nat8Content: Q.Nat8,
    Int64Content: Q.Int64,
    IntContent: Q.Int,
    NatContent: Q.Nat,
    Nat16Content: Q.Nat16,
    Int32Content: Q.Int32,
    Int8Content: Q.Int8,
    FloatContent: Q.Float64,
    Int16Content: Q.Int16,
    BlobContent: Q.Vec(Q.Nat8),
    NestedContent: ee,
    Principal: Q.Principal,
    TextContent: Q.Text
  }), de = Q.Variant({
    Ok: Q.Opt(Q.Principal),
    Err: ne
  }), ye = Q.Variant({
    Ok: Q.Vec(Q.Nat),
    Err: ne
  }), he = Q.Record({
    transferred_at: Q.Opt(Q.Nat64),
    transferred_by: Q.Opt(Q.Principal),
    owner: Q.Opt(Q.Principal),
    operator: Q.Opt(Q.Principal),
    approved_at: Q.Opt(Q.Nat64),
    approved_by: Q.Opt(Q.Principal),
    properties: Q.Vec(Q.Tuple(Q.Text, le)),
    is_burned: Q.Bool,
    token_identifier: Q.Nat,
    burned_at: Q.Opt(Q.Nat64),
    burned_by: Q.Opt(Q.Principal),
    minted_at: Q.Nat64,
    minted_by: Q.Principal
  }), Be = Q.Variant({
    Ok: Q.Vec(he),
    Err: ne
  }), Ee = Q.Record({
    cycles: Q.Nat,
    total_transactions: Q.Nat,
    total_unique_holders: Q.Nat,
    total_supply: Q.Nat
  }), me = Q.Variant({
    Burn: Q.Null,
    Mint: Q.Null,
    Approval: Q.Null
  }), ge = Q.Variant({ Ok: he, Err: ne });
  return Q.Service({
    approve: Q.Func([Q.Principal, Q.Nat], [ie], []),
    balanceOf: Q.Func([Q.Principal], [ie], ["query"]),
    burn: Q.Func([Q.Nat], [ie], []),
    custodians: Q.Func([], [Q.Vec(Q.Principal)], ["query"]),
    cycles: Q.Func([], [Q.Nat], ["query"]),
    dfx_info: Q.Func([], [Q.Text], ["query"]),
    dip721_approve: Q.Func([Q.Principal, Q.Nat], [ie], []),
    dip721_balance_of: Q.Func([Q.Principal], [ie], ["query"]),
    dip721_burn: Q.Func([Q.Nat], [ie], []),
    dip721_custodians: Q.Func([], [Q.Vec(Q.Principal)], ["query"]),
    dip721_cycles: Q.Func([], [Q.Nat], ["query"]),
    dip721_is_approved_for_all: Q.Func([Q.Principal, Q.Principal], [ae], ["query"]),
    dip721_logo: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    dip721_metadata: Q.Func([], [ce], ["query"]),
    dip721_mint: Q.Func([Q.Principal, Q.Nat, Q.Vec(Q.Tuple(Q.Text, le))], [ie], []),
    dip721_name: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    dip721_operator_of: Q.Func([Q.Nat], [de], ["query"]),
    dip721_operator_token_identifiers: Q.Func([Q.Principal], [ye], ["query"]),
    dip721_operator_token_metadata: Q.Func([Q.Principal], [Be], ["query"]),
    dip721_owner_of: Q.Func([Q.Nat], [de], ["query"]),
    dip721_owner_token_identifiers: Q.Func([Q.Principal], [ye], ["query"]),
    dip721_owner_token_metadata: Q.Func([Q.Principal], [Be], ["query"]),
    dip721_set_approval_for_all: Q.Func([Q.Principal, Q.Bool], [ie], []),
    dip721_set_custodians: Q.Func([Q.Vec(Q.Principal)], [], []),
    dip721_set_logo: Q.Func([Q.Text], [], []),
    dip721_set_name: Q.Func([Q.Text], [], []),
    dip721_set_symbol: Q.Func([Q.Text], [], []),
    dip721_stats: Q.Func([], [Ee], ["query"]),
    dip721_supported_interfaces: Q.Func([], [Q.Vec(me)], ["query"]),
    dip721_symbol: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    dip721_token_metadata: Q.Func([Q.Nat], [ge], ["query"]),
    dip721_total_supply: Q.Func([], [Q.Nat], ["query"]),
    dip721_total_transactions: Q.Func([], [Q.Nat], ["query"]),
    dip721_total_unique_holders: Q.Func([], [Q.Nat], ["query"]),
    dip721_transfer: Q.Func([Q.Principal, Q.Nat], [ie], []),
    dip721_transfer_from: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ie], []),
    git_commit_hash: Q.Func([], [Q.Text], ["query"]),
    isApprovedForAll: Q.Func([Q.Principal, Q.Principal], [ae], ["query"]),
    logo: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    metadata: Q.Func([], [ce], ["query"]),
    mint: Q.Func([Q.Principal, Q.Nat, Q.Vec(Q.Tuple(Q.Text, le))], [ie], []),
    name: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    operatorOf: Q.Func([Q.Nat], [de], ["query"]),
    operatorTokenIdentifiers: Q.Func([Q.Principal], [ye], ["query"]),
    operatorTokenMetadata: Q.Func([Q.Principal], [Be], ["query"]),
    ownerOf: Q.Func([Q.Nat], [de], ["query"]),
    ownerTokenIdentifiers: Q.Func([Q.Principal], [ye], ["query"]),
    ownerTokenMetadata: Q.Func([Q.Principal], [Be], ["query"]),
    rust_toolchain_info: Q.Func([], [Q.Text], ["query"]),
    setApprovalForAll: Q.Func([Q.Principal, Q.Bool], [ie], []),
    setCustodians: Q.Func([Q.Vec(Q.Principal)], [], []),
    setLogo: Q.Func([Q.Text], [], []),
    setName: Q.Func([Q.Text], [], []),
    setSymbol: Q.Func([Q.Text], [], []),
    stats: Q.Func([], [Ee], ["query"]),
    supportedInterfaces: Q.Func([], [Q.Vec(me)], ["query"]),
    symbol: Q.Func([], [Q.Opt(Q.Text)], ["query"]),
    tokenMetadata: Q.Func([Q.Nat], [ge], ["query"]),
    totalSupply: Q.Func([], [Q.Nat], ["query"]),
    totalTransactions: Q.Func([], [Q.Nat], ["query"]),
    totalUniqueHolders: Q.Func([], [Q.Nat], ["query"]),
    transfer: Q.Func([Q.Principal, Q.Nat], [ie], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ie], [])
  });
};
var __awaiter$8 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$3 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(dip_721, "__esModule", { value: !0 });
const agent_1$3 = require$$5, dip_721_did_1 = __importDefault$3(dip_721_did), default_1$1 = __importDefault$3(_default), standards_1$1 = standards, extractMetadataValue = (Q) => {
  const ee = Object.keys(Q)[0], ne = Q[ee];
  return typeof ne == "object" ? JSON.stringify(ne) : ne;
};
class ERC721 extends default_1$1.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1$1.NFT.dip721, this.actor = agent_1$3.Actor.createActor(dip_721_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  backwardsCompatibleGuard(ee, ne) {
    return (ie = []) => __awaiter$8(this, void 0, void 0, function* () {
      let ae;
      try {
        ae = yield this.actor[ne](...ie);
      } catch {
        ae = yield this.actor[ee](...ie);
      }
      return ae;
    });
  }
  getUserTokens(ee) {
    return __awaiter$8(this, void 0, void 0, function* () {
      const ae = (yield this.backwardsCompatibleGuard("ownerTokenMetadata", "dip721_owner_token_metadata")([ee])).Ok || [];
      return ae.length ? ae.map((le) => {
        var de, ye;
        const he = le.token_identifier, Be = this.formatMetadata(le);
        if (!Be)
          return;
        const Ee = (ye = (de = le.operator) === null || de === void 0 ? void 0 : de[0]) === null || ye === void 0 ? void 0 : ye.toText();
        return this.serializeTokenData(Be, he, ee.toText(), Ee);
      }).filter((le) => le) : [];
    });
  }
  transfer(ee, ne) {
    return __awaiter$8(this, void 0, void 0, function* () {
      const ae = yield this.backwardsCompatibleGuard("transfer", "dip721_transfer")([ee, BigInt(ne)]);
      if ("Err" in ae)
        throw new Error(`${Object.keys(ae.Err)[0]}: ${Object.values(ae.Err)[0]}`);
    });
  }
  details(ee) {
    var ne, ie, ae, ce, le, de;
    return __awaiter$8(this, void 0, void 0, function* () {
      const he = yield this.backwardsCompatibleGuard("tokenMetadata", "dip721_token_metadata")([BigInt(ee)]);
      if ("Err" in he)
        throw new Error(`${Object.keys(he.Err)[0]}: ${Object.values(he.Err)[0]}`);
      const Be = he == null ? void 0 : he.Ok, Ee = this.formatMetadata(Be), me = (ae = (ie = (ne = Be == null ? void 0 : Be.owner) === null || ne === void 0 ? void 0 : ne[0]) === null || ie === void 0 ? void 0 : ie.toText) === null || ae === void 0 ? void 0 : ae.call(ie), ge = (de = (le = (ce = Be == null ? void 0 : Be.operator) === null || ce === void 0 ? void 0 : ce[0]) === null || le === void 0 ? void 0 : le.toText) === null || de === void 0 ? void 0 : de.call(le);
      return this.serializeTokenData(Ee, ee, me, ge);
    });
  }
  getMetadata() {
    var ee;
    return __awaiter$8(this, void 0, void 0, function* () {
      const ie = yield this.backwardsCompatibleGuard("metadata", "dip721_get_metadata")();
      return {
        icon: ie == null ? void 0 : ie.logo[0],
        name: ((ee = ie == null ? void 0 : ie.name) === null || ee === void 0 ? void 0 : ee[0]) || "",
        standard: this.standard,
        canisterId: this.canisterId,
        tokens: [],
        description: ""
      };
    });
  }
  serializeTokenData(ee, ne, ie, ae) {
    var ce, le;
    return {
      index: BigInt(ne),
      canister: this.canisterId,
      metadata: ee,
      owner: ie,
      url: ((le = (ce = ee == null ? void 0 : ee.location) === null || ce === void 0 ? void 0 : ce.value) === null || le === void 0 ? void 0 : le.TextContent) || "",
      standard: this.standard,
      operator: ae
    };
  }
  formatMetadata(ee) {
    const ne = { properties: new Array() };
    if (!(ee != null && ee.properties) || !Array.isArray(ee.properties)) {
      console.warn(`Oops! Failed to format the metadata properties for token, field is missing or invalid. See ${JSON.stringify(ee)}`), console.log(ee);
      return;
    }
    return ee.properties.forEach((ie) => {
      const ae = ie[0];
      ne[ae] = { value: ie[1] };
      const ce = (() => {
        try {
          return extractMetadataValue(ie[1]);
        } catch (le) {
          console.warn(`Oops! Failed to extract metadata value for property ${ae}, is that a valid key value pair?`), console.error(le);
        }
      })();
      ne.properties = [
        ...ne.properties,
        { name: ie[0], value: ce }
      ];
    }), ne.properties = ne.properties.filter(({ name: ie }) => !["location", "thumbnail", "contentHash", "contentType"].includes(ie)), ne;
  }
}
dip_721.default = ERC721;
var constants = {};
Object.defineProperty(constants, "__esModule", { value: !0 });
constants.KYASSHU_URL = constants.IC_HOST = void 0;
constants.IC_HOST = "https://ic0.app/";
constants.KYASSHU_URL = "https://kyasshu.fleek.co";
var nft_registry_did = {};
Object.defineProperty(nft_registry_did, "__esModule", { value: !0 });
nft_registry_did.init = void 0;
nft_registry_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  ee.fill(Q.Variant({
    I64: Q.Int64,
    U64: Q.Nat64,
    Vec: Q.Vec(ee),
    Slice: Q.Vec(Q.Nat8),
    Text: Q.Text,
    True: Q.Null,
    False: Q.Null,
    Float: Q.Float64,
    Principal: Q.Principal
  }));
  const ne = Q.Record({
    thumbnail: Q.Text,
    name: Q.Text,
    frontend: Q.Opt(Q.Text),
    description: Q.Text,
    details: Q.Vec(Q.Tuple(Q.Text, ee)),
    principal_id: Q.Principal
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistentItem: Q.Null
  }), ae = Q.Variant({
    Ok: Q.Opt(Q.Text),
    Err: ie
  });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get: Q.Func([Q.Principal], [Q.Opt(ne)], ["query"]),
    get_all: Q.Func([], [Q.Vec(ne)], ["query"]),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Principal], [ae], []),
    set_controller: Q.Func([Q.Principal], [ae], [])
  });
};
const init$9 = () => [];
nft_registry_did.init = init$9;
var standard_registry = {}, registry_standard_did = {};
Object.defineProperty(registry_standard_did, "__esModule", { value: !0 });
registry_standard_did.init = void 0;
registry_standard_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  ee.fill(Q.Variant({
    I64: Q.Int64,
    U64: Q.Nat64,
    Vec: Q.Vec(ee),
    Slice: Q.Vec(Q.Nat8),
    Text: Q.Text,
    True: Q.Null,
    False: Q.Null,
    Float: Q.Float64,
    Principal: Q.Principal
  }));
  const ne = Q.Record({
    thumbnail: Q.Text,
    name: Q.Text,
    frontend: Q.Opt(Q.Text),
    description: Q.Text,
    principal_id: Q.Principal,
    details: Q.Vec(Q.Tuple(Q.Text, ee))
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistantCanister: Q.Null
  }), ae = Q.Variant({ Ok: Q.Opt(Q.Text), Err: ie });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get: Q.Func([Q.Principal], [Q.Opt(ne)], ["query"]),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Principal], [ae], [])
  });
};
const init$8 = () => [];
registry_standard_did.init = init$8;
var registry = {};
(function(Q) {
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.formatMetadata = Q.formatRegistryDetails = Q.parseDetailValue = void 0;
  const ee = ["True", "False"], ne = (ce) => {
    const le = Object.keys(ce)[0], de = ee.includes(le) ? Boolean(le) : Object.values(ce)[0];
    return Array.isArray(de) ? de.map((ye) => typeof de == "number" ? ye : (0, Q.parseDetailValue)(ye)) : de;
  };
  Q.parseDetailValue = ne;
  const ie = (ce) => {
    const le = {};
    for (const [de, ye] of ce)
      le[de] = (0, Q.parseDetailValue)(ye);
    return le;
  };
  Q.formatRegistryDetails = ie;
  const ae = (ce) => Object.assign(Object.assign({}, ce), { details: (0, Q.formatRegistryDetails)(ce.details) });
  Q.formatMetadata = ae;
})(registry);
var __awaiter$7 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$2 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(standard_registry, "__esModule", { value: !0 });
const agent_1$2 = require$$5, principal_1$5 = require$$4, constants_1 = constants, registry_standard_did_1 = __importDefault$2(registry_standard_did), registry_1 = registry, cross_fetch_1$1 = __importDefault$2(browserPonyfill.exports), DEFAULT_AGENT = new agent_1$2.HttpAgent({ fetch: cross_fetch_1$1.default, host: constants_1.IC_HOST });
class Registry {
  constructor(ee, ne = DEFAULT_AGENT) {
    this.name = () => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.name();
    }), this.add = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.add(ie != null ? ie : []);
    }), this.get = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      const ae = yield this.actor.get(principal_1$5.Principal.fromText(ie));
      if (ae.length !== 0)
        return (0, registry_1.formatMetadata)(ae[0]);
    }), this.remove = (ie) => __awaiter$7(this, void 0, void 0, function* () {
      return this.actor.remove(principal_1$5.Principal.fromText(ie));
    }), this.actor = agent_1$2.Actor.createActor(registry_standard_did_1.default, {
      agent: ne,
      canisterId: ee
    }), this.canisterId = ee;
  }
}
standard_registry.default = Registry;
var actorFactory = {};
(function(Q) {
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.generateActor = Q.createExtendedActorClass = void 0;
  const ee = require$$5, ne = require$$4, ie = (ce, le, de, ye) => {
    class he extends ee.Actor.createActorClass(ye) {
      constructor() {
        const Ee = typeof de == "string" ? ne.Principal.fromText(de) : de;
        super({ agent: ce, canisterId: Ee }), Object.keys(this).forEach((me) => {
          this[`_${me}`] = this[me];
        }), Object.keys(le).forEach((me) => {
          this[me] = (...ge) => le[me](this, ...ge);
        });
      }
    }
    return he;
  };
  Q.createExtendedActorClass = ie;
  function ae({ agent: ce, canisterId: le, IDL: de }) {
    return ee.Actor.createActor(de, {
      agent: ce,
      canisterId: ne.Principal.fromText(le)
    });
  }
  Q.generateActor = ae, Q.default = { createExtendedActorClass: Q.createExtendedActorClass, generateActor: ae };
})(actorFactory);
var ccc = {}, c3_did = {};
Object.defineProperty(c3_did, "__esModule", { value: !0 });
c3_did.init = void 0;
c3_did.default = ({ IDL: Q }) => {
  const ee = Q.Nat, ne = Q.Nat, ie = Q.Variant({
    ok: ne,
    err: Q.Variant({
      ListOnMarketPlace: Q.Null,
      NotAllowTransferToSelf: Q.Null,
      NotOwnerOrNotApprove: Q.Null,
      Other: Q.Null
    })
  }), ae = Q.Record({
    id: Q.Nat,
    rarityScore: Q.Float64
  }), ce = Q.Variant({
    ok: ae,
    err: Q.Variant({ NotFoundIndex: Q.Null })
  });
  return Q.Service({
    getAllNFT: Q.Func([Q.Principal], [Q.Vec(Q.Tuple(ee, Q.Principal))], ["query"]),
    getNftStoreCIDByIndex: Q.Func([ee], [Q.Principal], ["query"]),
    getTokenById: Q.Func([Q.Nat], [ce], ["query"]),
    transferFrom: Q.Func([Q.Principal, Q.Principal, ee], [ie], [])
  });
};
const init$7 = ({ IDL: Q }) => [Q.Principal, Q.Principal, Q.Principal];
c3_did.init = init$7;
var __awaiter$6 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault$1 = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(ccc, "__esModule", { value: !0 });
const agent_1$1 = require$$5, c3_did_1 = __importDefault$1(c3_did), default_1 = __importDefault$1(_default), standards_1 = standards;
class CCC extends default_1.default {
  constructor(ee, ne) {
    super(ee, ne), this.standard = standards_1.NFT.c3, this.serializeTokenData = (ie, ae) => ({
      index: BigInt(ie.id),
      canister: this.canisterId,
      url: `https://${ae.toText()}.raw.ic0.app/token/${ie.id}`,
      name: `${ie.id}`,
      metadata: ie,
      standard: this.standard
    }), this.actor = agent_1$1.Actor.createActor(c3_did_1.default, {
      agent: ne,
      canisterId: ee
    });
  }
  getMetadata() {
    throw new Error("Method not implemented.");
  }
  getUserTokens(ee) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ne = yield this.actor.getAllNFT(ee);
      return (yield Promise.all(ne.map((ae) => __awaiter$6(this, void 0, void 0, function* () {
        const ce = ae[0], le = ae[1], de = yield this.actor.getTokenById(ce);
        if ("err" in de)
          throw new Error(Object.keys(de.err)[0]);
        return { detail: de.ok, principal: le };
      })))).map((ae) => this.serializeTokenData(ae.detail, ae.principal));
    });
  }
  transfer(ee, ne) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ie = yield this.agent.getPrincipal(), ae = yield this.actor.transferFrom(ie, ee, BigInt(ne));
      if ("err" in ae)
        throw new Error(Object.keys(ae.err)[0]);
    });
  }
  details(ee) {
    return __awaiter$6(this, void 0, void 0, function* () {
      const ne = yield this.actor.getTokenById(BigInt(ee));
      if ("err" in ne)
        throw new Error(Object.keys(ne.err)[0]);
      const ie = yield this.actor.getNftStoreCIDByIndex(BigInt(ee));
      if (!ie)
        throw new Error("Error tokenIndex");
      return this.serializeTokenData(ne.ok, ie);
    });
  }
}
ccc.default = CCC;
(function(Q) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Yt, jt, $t, Wt) {
    function st(at) {
      return at instanceof $t ? at : new $t(function(wt) {
        wt(at);
      });
    }
    return new ($t || ($t = Promise))(function(at, wt) {
      function Ut(tr) {
        try {
          ir(Wt.next(tr));
        } catch (ar) {
          wt(ar);
        }
      }
      function $e(tr) {
        try {
          ir(Wt.throw(tr));
        } catch (ar) {
          wt(ar);
        }
      }
      function ir(tr) {
        tr.done ? at(tr.value) : st(tr.value).then(Ut, $e);
      }
      ir((Wt = Wt.apply(Yt, jt || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Yt) {
    return Yt && Yt.__esModule ? Yt : { default: Yt };
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.getCachedUserNFTs = Q.getBatchedNFTs = Q.getAllUserNFTs = Q.getAllNFTS = Q.getNFTInfo = Q.getNFTActor = Q.getUserCollectionTokens = Q.NFTRegistry = void 0;
  const ie = ne(axios$2.exports), ae = require$$5, ce = require$$4, le = ne(browserPonyfill.exports), de = ne(ext), ye = ne(ic_punks), he = ne(nft_origyn), Be = ne(departure_labs), Ee = ne(dip_721), me = standards, ge = constants, be = ne(nft_registry_did), we = ne(standard_registry), Oe = actorFactory, He = registry, Se = ne(ccc), Ge = "ctqxp-yyaaa-aaaah-abbda-cai", Fe = 5, Pe = {
    [me.NFT.ext]: de.default,
    [me.NFT.icpunks]: ye.default,
    [me.NFT.nftOrigyn]: he.default,
    [me.NFT.departuresLabs]: Be.default,
    [me.NFT.erc721]: Ee.default,
    [me.NFT.dip721]: Ee.default,
    [me.NFT.c3]: Se.default
  }, We = new ae.HttpAgent({ fetch: le.default, host: ge.IC_HOST });
  class tt extends we.default {
    constructor(jt) {
      super(Ge, jt), this.getAll = () => ee(this, void 0, void 0, function* () {
        return (yield this.actor.get_all()).map(He.formatMetadata);
      }), this.actor = (0, Oe.generateActor)({ agent: jt || We, canisterId: Ge, IDL: be.default });
    }
  }
  Q.NFTRegistry = tt;
  const Et = (Yt, jt, $t = We, Wt = () => {
  }) => ee(void 0, void 0, void 0, function* () {
    try {
      const at = yield (0, Q.getNFTActor)({
        canisterId: Yt.principal_id.toString(),
        agent: $t,
        standard: Yt.standard
      }).getUserTokens(jt), wt = {
        name: Yt.name,
        canisterId: Yt.principal_id.toString(),
        standard: Yt.standard,
        description: Yt.description,
        icon: Yt.icon,
        tokens: at.map((Ut) => Object.assign(Object.assign({}, Ut), { collection: Yt.name }))
      };
      return Wt && (yield Wt == null ? void 0 : Wt(wt)), wt;
    } catch (st) {
      return console.error(st), {
        name: Yt.name,
        canisterId: Yt.principal_id.toString(),
        standard: Yt.standard,
        tokens: []
      };
    }
  });
  Q.getUserCollectionTokens = Et;
  const Nt = ({ standard: Yt }) => {
    const jt = Yt.toUpperCase(), $t = me.NFT.dip721.toUpperCase(), Wt = jt.startsWith($t), st = jt.split($t).filter((wt) => wt).length > 0;
    return Wt && st ? (console.warn(`Warning! Use the term DIP721, not ${Yt}, suffixed and others are being deprecated and support will be dropped soon!`), me.NFT.dip721) : jt;
  }, et = ({ canisterId: Yt, agent: jt, standard: $t }) => {
    const Wt = Nt({
      standard: $t
    });
    if (!(Wt in Pe))
      throw console.error(`Standard ${Wt} is not implemented`), new Error(`standard is not supported: ${Wt}`);
    return new Pe[Wt](Yt, jt);
  };
  Q.getNFTActor = et;
  const mt = ({ nftCanisterId: Yt, agent: jt = We }) => ee(void 0, void 0, void 0, function* () {
    const Wt = yield new tt(jt).get(Yt);
    return Wt && Object.assign(Object.assign({}, Wt), { icon: Wt.thumbnail, standard: Wt.details.standard });
  });
  Q.getNFTInfo = mt;
  const Mt = ({ agent: Yt = We } = {}) => ee(void 0, void 0, void 0, function* () {
    return (yield new tt(Yt).getAll()).map((Wt) => Object.assign(Object.assign({}, Wt), { icon: Wt.thumbnail, standard: Wt.details.standard }));
  });
  Q.getAllNFTS = Mt;
  const Ot = ({ user: Yt, agent: jt = We }) => ee(void 0, void 0, void 0, function* () {
    const $t = yield (0, Q.getAllNFTS)({ agent: jt }), Wt = Yt instanceof ce.Principal ? Yt : ce.Principal.fromText(Yt);
    return (yield Promise.all($t.map((at) => (0, Q.getUserCollectionTokens)(at, Wt, jt)))).filter((at) => at.tokens.length);
  });
  Q.getAllUserNFTs = Ot;
  const yt = ({ principal: Yt, callback: jt, batchSize: $t = Fe, onFinish: Wt, agent: st = We }) => ee(void 0, void 0, void 0, function* () {
    const at = yield (0, Q.getAllNFTS)({ agent: st });
    let wt = [];
    for (let Ut = 0; Ut < at.length; Ut += $t) {
      const $e = at.slice(Ut, Ut + $t), ir = yield Promise.all($e.map((tr) => (0, Q.getUserCollectionTokens)(tr, Yt, st, jt)));
      wt = [...wt, ...ir];
    }
    return Wt && (yield Wt == null ? void 0 : Wt(wt)), wt.filter((Ut) => {
      var $e;
      return ($e = Ut == null ? void 0 : Ut.tokens) === null || $e === void 0 ? void 0 : $e.length;
    });
  });
  Q.getBatchedNFTs = yt;
  const Qt = ({ userPID: Yt, refresh: jt }) => ee(void 0, void 0, void 0, function* () {
    const $t = `${ge.KYASSHU_URL}/dab/user/nfts/${Yt}`;
    return (yield ie.default.get($t, { params: { refresh: jt } })).data;
  });
  Q.getCachedUserNFTs = Qt, Q.default = {
    getBatchedNFTs: Q.getBatchedNFTs,
    getNFTActor: Q.getNFTActor,
    getNFTInfo: Q.getNFTInfo,
    getAllNFTS: Q.getAllNFTS,
    getAllUserNFTs: Q.getAllUserNFTs,
    getCachedUserNFTs: Q.getCachedUserNFTs
  };
})(nfts_registry);
var canister_registry = {}, canister_registry_did = {};
Object.defineProperty(canister_registry_did, "__esModule", { value: !0 });
canister_registry_did.init = void 0;
canister_registry_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  ee.fill(Q.Variant({
    I64: Q.Int64,
    U64: Q.Nat64,
    Vec: Q.Vec(ee),
    Slice: Q.Vec(Q.Nat8),
    Text: Q.Text,
    True: Q.Null,
    False: Q.Null,
    Float: Q.Float64,
    Principal: Q.Principal
  }));
  const ne = Q.Record({
    thumbnail: Q.Text,
    name: Q.Text,
    frontend: Q.Opt(Q.Text),
    description: Q.Text,
    principal_id: Q.Principal,
    details: Q.Vec(Q.Tuple(Q.Text, ee))
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistentItem: Q.Null
  }), ae = Q.Variant({
    Ok: Q.Opt(Q.Text),
    Err: ie
  });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get: Q.Func([Q.Principal], [Q.Opt(ne)], ["query"]),
    get_all: Q.Func([], [Q.Vec(ne)], ["query"]),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Principal], [ae], [])
  });
};
const init$6 = () => [];
canister_registry_did.init = init$6;
(function(Q) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Se, Ge, Fe, Pe) {
    function We(tt) {
      return tt instanceof Fe ? tt : new Fe(function(Et) {
        Et(tt);
      });
    }
    return new (Fe || (Fe = Promise))(function(tt, Et) {
      function Nt(Mt) {
        try {
          mt(Pe.next(Mt));
        } catch (Ot) {
          Et(Ot);
        }
      }
      function et(Mt) {
        try {
          mt(Pe.throw(Mt));
        } catch (Ot) {
          Et(Ot);
        }
      }
      function mt(Mt) {
        Mt.done ? tt(Mt.value) : We(Mt.value).then(Nt, et);
      }
      mt((Pe = Pe.apply(Se, Ge || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Se) {
    return Se && Se.__esModule ? Se : { default: Se };
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.getAll = Q.getMultipleCanisterInfo = Q.getCanisterInfo = Q.CanisterRegistry = void 0;
  const ie = require$$5, ae = ne(browserPonyfill.exports), ce = ne(canister_registry_did), le = constants, de = ne(standard_registry), ye = actorFactory, he = registry, Be = require$$4, Ee = "curr3-vaaaa-aaaah-abbdq-cai", me = new ie.HttpAgent({ fetch: ae.default, host: le.IC_HOST }), ge = (Se) => {
    if (!Se)
      return Se;
    const { thumbnail: Ge, name: Fe, description: Pe, frontend: We, details: tt } = Se;
    return { url: (We == null ? void 0 : We[0]) || "", name: Fe, description: Pe, version: Number(tt.version), logo_url: Ge };
  };
  class be extends de.default {
    constructor(Ge) {
      super(Ee, Ge), this.getAll = () => ee(this, void 0, void 0, function* () {
        return (yield this.actor.get_all()).map(he.formatMetadata);
      }), this.actor = (0, ye.generateActor)({ agent: Ge || me, canisterId: Ee, IDL: ce.default });
    }
  }
  Q.CanisterRegistry = be;
  const we = ({ canisterId: Se, agent: Ge = me }) => ee(void 0, void 0, void 0, function* () {
    const Pe = yield new be(Ge).get(Be.Principal.from(Se).toString()), We = ge(Pe);
    return We && Object.assign(Object.assign({}, We), { canisterId: Se.toString() });
  });
  Q.getCanisterInfo = we;
  const Oe = ({ canisterIds: Se, agent: Ge = me }) => ee(void 0, void 0, void 0, function* () {
    const Fe = yield Promise.all(Se.map((Pe) => (0, Q.getCanisterInfo)({ canisterId: Pe, agent: Ge })));
    return Fe.length === 0 ? [] : Fe.filter((Pe) => !!Pe);
  });
  Q.getMultipleCanisterInfo = Oe;
  const He = (Se) => ee(void 0, void 0, void 0, function* () {
    return (yield new be(Se).getAll()).map(ge);
  });
  Q.getAll = He, Q.default = {
    getCanisterInfo: Q.getCanisterInfo,
    getMultipleCanisterInfo: Q.getMultipleCanisterInfo,
    getAll: (Se) => new be(Se).getAll
  };
})(canister_registry);
var token_registry = {}, token_registry_did = {};
Object.defineProperty(token_registry_did, "__esModule", { value: !0 });
token_registry_did.init = void 0;
token_registry_did.default = ({ IDL: Q }) => {
  const ee = Q.Rec();
  ee.fill(Q.Variant({
    I64: Q.Int64,
    U64: Q.Nat64,
    Vec: Q.Vec(ee),
    Slice: Q.Vec(Q.Nat8),
    Text: Q.Text,
    True: Q.Null,
    False: Q.Null,
    Float: Q.Float64,
    Principal: Q.Principal
  }));
  const ne = Q.Record({
    thumbnail: Q.Text,
    name: Q.Text,
    frontend: Q.Opt(Q.Text),
    description: Q.Text,
    principal_id: Q.Principal,
    details: Q.Vec(Q.Tuple(Q.Text, ee))
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistentItem: Q.Null
  }), ae = Q.Variant({
    Ok: Q.Opt(Q.Text),
    Err: ie
  });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get: Q.Func([Q.Principal], [Q.Opt(ne)], ["query"]),
    get_all: Q.Func([], [Q.Vec(ne)], ["query"]),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Principal], [ae], []),
    set_controller: Q.Func([Q.Principal], [ae], [])
  });
};
const init$5 = () => [];
token_registry_did.init = init$5;
var token_standards = {}, methods = {}, __awaiter$5 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(methods, "__esModule", { value: !0 });
methods.parseAmountToSend = methods.getDecimalsFromMetadata = void 0;
const send$5 = (Q, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getMetadata$5 = (Q) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getBalance$5 = (Q, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), burnXTC$5 = (Q, ee) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getDecimals$5 = (Q) => __awaiter$5(void 0, void 0, void 0, function* () {
  throw Error("Standard Not Implemented");
}), getDecimalsFromMetadata = (Q) => "fungible" in Q ? Q.fungible.decimals : 0;
methods.getDecimalsFromMetadata = getDecimalsFromMetadata;
const parseAmountToSend = (Q, ee) => BigInt(parseFloat(Q) * Math.pow(10, ee));
methods.parseAmountToSend = parseAmountToSend;
methods.default = {
  send: send$5,
  getMetadata: getMetadata$5,
  getBalance: getBalance$5,
  burnXTC: burnXTC$5,
  getDecimals: getDecimals$5
};
var xtcMethods = {}, __awaiter$4 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(xtcMethods, "__esModule", { value: !0 });
const principal_1$4 = require$$4, methods_1$4 = methods, getMetadata$4 = (Q) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ee = yield Q._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$4 = (Q, { to: ee, amount: ne }) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ie = yield Q._transferErc20(principal_1$4.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$4 = (Q, ee) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$4(Q);
  return { value: (yield Q._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$4 = (Q, { to: ee, amount: ne }) => __awaiter$4(void 0, void 0, void 0, function* () {
  const ie = yield getDecimals$4(Q), ae = (0, methods_1$4.parseAmountToSend)(ne, ie);
  return Q._burn({ canister_id: ee, amount: ae });
}), getDecimals$4 = (Q) => __awaiter$4(void 0, void 0, void 0, function* () {
  return (0, methods_1$4.getDecimalsFromMetadata)(yield getMetadata$4(Q));
});
xtcMethods.default = {
  send: send$4,
  getMetadata: getMetadata$4,
  getBalance: getBalance$4,
  burnXTC: burnXTC$4,
  getDecimals: getDecimals$4
};
var extMethods = {}, __awaiter$3 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(extMethods, "__esModule", { value: !0 });
const agent_1 = require$$5, principal_1$3 = require$$4, methods_1$3 = methods, getMetadata$3 = (Q) => __awaiter$3(void 0, void 0, void 0, function* () {
  Q._balance;
  const ee = agent_1.Actor.canisterIdOf(Q).toText();
  if (!(yield Q._extensions()).includes("@ext/common"))
    throw new Error("The provided canister does not implement commont extension");
  const ie = yield Q._metadata(ee);
  if ("ok" in ie)
    return ie.ok;
  throw new Error(Object.keys(ie.err)[0]);
}), send$3 = (Q, { to: ee, from: ne, amount: ie }) => __awaiter$3(void 0, void 0, void 0, function* () {
  const ae = new Array(32).fill(0), ce = agent_1.Actor.canisterIdOf(Q).toText(), le = {
    to: { principal: principal_1$3.Principal.fromText(ee) },
    from: { principal: principal_1$3.Principal.from(ne) },
    amount: ie,
    token: ce,
    memo: ae,
    notify: !1,
    subaccount: [],
    fee: BigInt(0)
  }, de = yield Q._transfer(le);
  if ("ok" in de)
    return { amount: de.ok.toString() };
  throw new Error(Object.keys(de.err)[0]);
}), getBalance$3 = (Q, ee) => __awaiter$3(void 0, void 0, void 0, function* () {
  const ne = agent_1.Actor.canisterIdOf(Q).toText(), ie = yield Q._balance({
    token: ne,
    user: { principal: ee }
  }), ae = yield getDecimals$3(Q);
  if ("ok" in ie)
    return { value: ie.ok.toString(), decimals: ae };
  throw new Error(Object.keys(ie.err)[0]);
}), burnXTC$3 = (Q, ee) => __awaiter$3(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$3 = (Q) => __awaiter$3(void 0, void 0, void 0, function* () {
  return (0, methods_1$3.getDecimalsFromMetadata)(yield getMetadata$3(Q));
});
extMethods.default = {
  send: send$3,
  getMetadata: getMetadata$3,
  getBalance: getBalance$3,
  burnXTC: burnXTC$3,
  getDecimals: getDecimals$3
};
var dip20Methods = {}, __awaiter$2 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(dip20Methods, "__esModule", { value: !0 });
const principal_1$2 = require$$4, methods_1$2 = methods, getMetadata$2 = (Q) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ee = yield Q._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$2 = (Q, { to: ee, amount: ne }) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ie = yield Q._transfer(principal_1$2.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$2 = (Q, ee) => __awaiter$2(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$2(Q);
  return { value: (yield Q._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$2 = (Q, ee) => __awaiter$2(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$2 = (Q) => __awaiter$2(void 0, void 0, void 0, function* () {
  return (0, methods_1$2.getDecimalsFromMetadata)(yield getMetadata$2(Q));
});
dip20Methods.default = {
  send: send$2,
  getMetadata: getMetadata$2,
  getBalance: getBalance$2,
  burnXTC: burnXTC$2,
  getDecimals: getDecimals$2
};
var xtc_did = {};
Object.defineProperty(xtc_did, "__esModule", { value: !0 });
xtc_did.init = void 0;
xtc_did.default = ({ IDL: Q }) => {
  const ee = Q.Variant({
    InsufficientAllowance: Q.Null,
    InsufficientBalance: Q.Null,
    ErrorOperationStyle: Q.Null,
    Unauthorized: Q.Null,
    LedgerTrap: Q.Null,
    ErrorTo: Q.Null,
    Other: Q.Null,
    BlockUsed: Q.Null,
    AmountTooSmall: Q.Null
  }), ne = Q.Variant({ Ok: Q.Nat, Err: ee }), ie = Q.Nat64, ae = Q.Variant({
    InsufficientBalance: Q.Null,
    InvalidTokenContract: Q.Null,
    NotSufficientLiquidity: Q.Null
  }), ce = Q.Variant({ Ok: ie, Err: ae }), le = Q.Variant({
    FAILED: Q.Null,
    SUCCEEDED: Q.Null
  }), de = Q.Variant({
    Approve: Q.Record({ to: Q.Principal, from: Q.Principal }),
    Burn: Q.Record({ to: Q.Principal, from: Q.Principal }),
    Mint: Q.Record({ to: Q.Principal }),
    CanisterCreated: Q.Record({
      from: Q.Principal,
      canister: Q.Principal
    }),
    CanisterCalled: Q.Record({
      from: Q.Principal,
      method_name: Q.Text,
      canister: Q.Principal
    }),
    Transfer: Q.Record({ to: Q.Principal, from: Q.Principal }),
    TransferFrom: Q.Record({
      to: Q.Principal,
      from: Q.Principal,
      caller: Q.Principal
    })
  }), ye = Q.Record({
    fee: Q.Nat64,
    status: le,
    kind: de,
    cycles: Q.Nat64,
    timestamp: Q.Nat64
  }), he = Q.Record({
    data: Q.Vec(ye),
    next_offset: ie,
    next_canister_id: Q.Opt(Q.Principal)
  }), Be = Q.Record({
    fee: Q.Nat,
    decimals: Q.Nat8,
    owner: Q.Principal,
    logo: Q.Text,
    name: Q.Text,
    totalSupply: Q.Nat,
    symbol: Q.Text
  }), Ee = Q.Variant({
    transferFrom: Q.Null,
    burn: Q.Null,
    mint: Q.Null,
    approve: Q.Null,
    canisterCalled: Q.Null,
    transfer: Q.Null,
    canisterCreated: Q.Null
  }), me = Q.Int, ge = Q.Record({
    op: Ee,
    to: Q.Principal,
    fee: Q.Nat,
    status: le,
    from: Q.Principal,
    timestamp: me,
    caller: Q.Opt(Q.Principal),
    index: Q.Nat,
    amount: Q.Nat
  }), be = Q.Variant({ NotSufficientLiquidity: Q.Null }), we = Q.Variant({ Ok: ie, Err: be }), Oe = Q.Record({
    fee: Q.Nat,
    transfers_count: Q.Nat64,
    balance: Q.Nat64,
    mints_count: Q.Nat64,
    transfers_from_count: Q.Nat64,
    canisters_created_count: Q.Nat64,
    supply: Q.Nat,
    burns_count: Q.Nat64,
    approvals_count: Q.Nat64,
    proxy_calls_count: Q.Nat64,
    history_events: Q.Nat64
  }), He = Q.Variant({
    Ok: Q.Record({ return: Q.Vec(Q.Nat8) }),
    Err: Q.Text
  }), Se = Q.Variant({
    Ok: Q.Record({ canister_id: Q.Principal }),
    Err: Q.Text
  }), Ge = Q.Variant({ Ok: Q.Null, Err: Q.Text });
  return Q.Service({
    allowance: Q.Func([Q.Principal, Q.Principal], [Q.Nat], ["query"]),
    approve: Q.Func([Q.Principal, Q.Nat], [ne], []),
    balance: Q.Func([Q.Opt(Q.Principal)], [Q.Nat64], []),
    balanceOf: Q.Func([Q.Principal], [Q.Nat], ["query"]),
    burn: Q.Func([Q.Record({ canister_id: Q.Principal, amount: Q.Nat64 })], [ce], []),
    decimals: Q.Func([], [Q.Nat8], ["query"]),
    events: Q.Func([Q.Record({ offset: Q.Opt(Q.Nat64), limit: Q.Nat16 })], [he], ["query"]),
    getMetadata: Q.Func([], [Be], ["query"]),
    getTransaction: Q.Func([Q.Nat], [ge], []),
    getTransactions: Q.Func([Q.Nat, Q.Nat], [Q.Vec(ge)], []),
    get_transaction: Q.Func([ie], [Q.Opt(ye)], []),
    halt: Q.Func([], [], []),
    historySize: Q.Func([], [Q.Nat], ["query"]),
    logo: Q.Func([], [Q.Text], ["query"]),
    mint: Q.Func([Q.Principal, Q.Nat], [we], []),
    name: Q.Func([], [Q.Text], ["query"]),
    nameErc20: Q.Func([], [Q.Text], ["query"]),
    stats: Q.Func([], [Oe], ["query"]),
    symbol: Q.Func([], [Q.Text], ["query"]),
    totalSupply: Q.Func([], [Q.Nat], ["query"]),
    transfer: Q.Func([Q.Principal, Q.Nat], [ne], []),
    transferErc20: Q.Func([Q.Principal, Q.Nat], [ne], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ne], []),
    wallet_balance: Q.Func([], [Q.Record({ amount: Q.Nat64 })], ["query"]),
    wallet_call: Q.Func([
      Q.Record({
        args: Q.Vec(Q.Nat8),
        cycles: Q.Nat64,
        method_name: Q.Text,
        canister: Q.Principal
      })
    ], [He], []),
    wallet_create_canister: Q.Func([
      Q.Record({
        controller: Q.Opt(Q.Principal),
        cycles: Q.Nat64
      })
    ], [Se], []),
    wallet_create_wallet: Q.Func([
      Q.Record({
        controller: Q.Opt(Q.Principal),
        cycles: Q.Nat64
      })
    ], [Se], []),
    wallet_send: Q.Func([Q.Record({ canister: Q.Principal, amount: Q.Nat64 })], [Ge], [])
  });
};
const init$4 = () => [];
xtc_did.init = init$4;
var dip_20_did = {};
Object.defineProperty(dip_20_did, "__esModule", { value: !0 });
dip_20_did.init = void 0;
dip_20_did.default = ({ IDL: Q }) => {
  const ee = Q.Variant({
    InsufficientAllowance: Q.Null,
    InsufficientBalance: Q.Null,
    ErrorOperationStyle: Q.Null,
    Unauthorized: Q.Null,
    LedgerTrap: Q.Null,
    ErrorTo: Q.Null,
    Other: Q.Null,
    BlockUsed: Q.Null,
    AmountTooSmall: Q.Null
  }), ne = Q.Variant({ Ok: Q.Nat, Err: ee }), ie = Q.Record({
    fee: Q.Nat,
    decimals: Q.Nat8,
    owner: Q.Principal,
    logo: Q.Text,
    name: Q.Text,
    totalSupply: Q.Nat,
    symbol: Q.Text
  }), ae = Q.Record({
    holderNumber: Q.Nat64,
    deployTime: Q.Nat64,
    metadata: ie,
    historySize: Q.Nat64,
    cycles: Q.Nat64,
    feeTo: Q.Principal
  });
  return Q.Service({
    allowance: Q.Func([Q.Principal, Q.Principal], [Q.Nat], ["query"]),
    approve: Q.Func([Q.Principal, Q.Nat], [ne], []),
    balanceOf: Q.Func([Q.Principal], [Q.Nat], ["query"]),
    decimals: Q.Func([], [Q.Nat8], ["query"]),
    getAllowanceSize: Q.Func([], [Q.Nat64], ["query"]),
    getBlockUsed: Q.Func([], [Q.Vec(Q.Nat64)], ["query"]),
    getHolders: Q.Func([Q.Nat64, Q.Nat64], [Q.Vec(Q.Tuple(Q.Principal, Q.Nat))], ["query"]),
    getMetadata: Q.Func([], [ie], ["query"]),
    getTokenInfo: Q.Func([], [ae], ["query"]),
    getUserApprovals: Q.Func([Q.Principal], [Q.Vec(Q.Tuple(Q.Principal, Q.Nat))], ["query"]),
    historySize: Q.Func([], [Q.Nat64], ["query"]),
    isBlockUsed: Q.Func([Q.Nat64], [Q.Bool], ["query"]),
    logo: Q.Func([], [Q.Text], ["query"]),
    mint: Q.Func([Q.Opt(Q.Vec(Q.Nat8)), Q.Nat64], [ne], []),
    mintFor: Q.Func([Q.Opt(Q.Vec(Q.Nat8)), Q.Nat64, Q.Principal], [ne], []),
    name: Q.Func([], [Q.Text], ["query"]),
    owner: Q.Func([], [Q.Principal], ["query"]),
    setFee: Q.Func([Q.Nat], [], []),
    setFeeTo: Q.Func([Q.Principal], [], []),
    setGenesis: Q.Func([], [ne], []),
    setLogo: Q.Func([Q.Text], [], []),
    setName: Q.Func([Q.Text], [], []),
    setOwner: Q.Func([Q.Principal], [], []),
    symbol: Q.Func([], [Q.Text], ["query"]),
    totalSupply: Q.Func([], [Q.Nat], ["query"]),
    transfer: Q.Func([Q.Principal, Q.Nat], [ne], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ne], []),
    withdraw: Q.Func([Q.Nat64, Q.Text], [ne], [])
  });
};
const init$3 = ({ IDL: Q }) => [
  Q.Text,
  Q.Text,
  Q.Text,
  Q.Nat8,
  Q.Nat,
  Q.Principal,
  Q.Nat,
  Q.Principal,
  Q.Principal
];
dip_20_did.init = init$3;
var ledger_did = {};
Object.defineProperty(ledger_did, "__esModule", { value: !0 });
ledger_did.init = void 0;
ledger_did.default = ({ IDL: Q }) => {
  const ee = Q.Text, ne = Q.Record({ secs: Q.Nat64, nanos: Q.Nat32 }), ie = Q.Record({
    max_message_size_bytes: Q.Opt(Q.Nat32),
    node_max_memory_size_bytes: Q.Opt(Q.Nat32),
    controller_id: Q.Principal
  }), ae = Q.Record({ e8s: Q.Nat64 });
  Q.Record({
    send_whitelist: Q.Vec(Q.Tuple(Q.Principal)),
    minting_account: ee,
    transaction_window: Q.Opt(ne),
    max_message_size_bytes: Q.Opt(Q.Nat32),
    archive_options: Q.Opt(ie),
    initial_values: Q.Vec(Q.Tuple(ee, ae))
  });
  const ce = Q.Record({ account: ee }), le = Q.Vec(Q.Nat8), de = Q.Nat64, ye = Q.Record({
    to_subaccount: Q.Opt(le),
    from_subaccount: Q.Opt(le),
    to_canister: Q.Principal,
    max_fee: ae,
    block_height: de
  }), he = Q.Nat64, Be = Q.Record({ timestamp_nanos: Q.Nat64 }), Ee = Q.Record({
    to: ee,
    fee: ae,
    memo: he,
    from_subaccount: Q.Opt(le),
    created_at_time: Q.Opt(Be),
    amount: ae
  });
  return Q.Service({
    account_balance_dfx: Q.Func([ce], [ae], ["query"]),
    notify_dfx: Q.Func([ye], [], []),
    send_dfx: Q.Func([Ee], [de], [])
  });
};
const init$2 = ({ IDL: Q }) => {
  const ee = Q.Text, ne = Q.Record({ secs: Q.Nat64, nanos: Q.Nat32 }), ie = Q.Record({
    max_message_size_bytes: Q.Opt(Q.Nat32),
    node_max_memory_size_bytes: Q.Opt(Q.Nat32),
    controller_id: Q.Principal
  }), ae = Q.Record({ e8s: Q.Nat64 });
  return [Q.Record({
    send_whitelist: Q.Vec(Q.Tuple(Q.Principal)),
    minting_account: ee,
    transaction_window: Q.Opt(ne),
    max_message_size_bytes: Q.Opt(Q.Nat32),
    archive_options: Q.Opt(ie),
    initial_values: Q.Vec(Q.Tuple(ee, ae))
  })];
};
ledger_did.init = init$2;
var wicp_did = {};
Object.defineProperty(wicp_did, "__esModule", { value: !0 });
wicp_did.init = void 0;
wicp_did.default = ({ IDL: Q }) => {
  const ee = Q.Variant({
    InsufficientAllowance: Q.Null,
    InsufficientBalance: Q.Null,
    ErrorOperationStyle: Q.Null,
    Unauthorized: Q.Null,
    LedgerTrap: Q.Null,
    ErrorTo: Q.Null,
    Other: Q.Null,
    BlockUsed: Q.Null,
    AmountTooSmall: Q.Null
  }), ne = Q.Variant({ Ok: Q.Nat, Err: ee }), ie = Q.Record({
    fee: Q.Nat,
    decimals: Q.Nat8,
    owner: Q.Principal,
    logo: Q.Text,
    name: Q.Text,
    totalSupply: Q.Nat,
    symbol: Q.Text
  }), ae = Q.Record({
    holderNumber: Q.Nat64,
    deployTime: Q.Nat64,
    metadata: ie,
    historySize: Q.Nat64,
    cycles: Q.Nat64,
    feeTo: Q.Principal
  });
  return Q.Service({
    allowance: Q.Func([Q.Principal, Q.Principal], [Q.Nat], ["query"]),
    approve: Q.Func([Q.Principal, Q.Nat], [ne], []),
    balanceOf: Q.Func([Q.Principal], [Q.Nat], ["query"]),
    decimals: Q.Func([], [Q.Nat8], ["query"]),
    getAllowanceSize: Q.Func([], [Q.Nat64], ["query"]),
    getHolders: Q.Func([Q.Nat64, Q.Nat64], [Q.Vec(Q.Tuple(Q.Principal, Q.Nat))], ["query"]),
    getLogo: Q.Func([], [Q.Text], ["query"]),
    getMetadata: Q.Func([], [ie], ["query"]),
    getTokenInfo: Q.Func([], [ae], ["query"]),
    getUserApprovals: Q.Func([Q.Principal], [Q.Vec(Q.Tuple(Q.Principal, Q.Nat))], ["query"]),
    historySize: Q.Func([], [Q.Nat64], ["query"]),
    mint: Q.Func([Q.Opt(Q.Vec(Q.Nat8)), Q.Nat64], [ne], []),
    name: Q.Func([], [Q.Text], ["query"]),
    owner: Q.Func([], [Q.Principal], ["query"]),
    setFee: Q.Func([Q.Nat], [], []),
    setFeeTo: Q.Func([Q.Principal], [], []),
    setLogo: Q.Func([Q.Text], [], []),
    setName: Q.Func([Q.Text], [], []),
    setOwner: Q.Func([Q.Principal], [], []),
    symbol: Q.Func([], [Q.Text], ["query"]),
    totalSupply: Q.Func([], [Q.Nat], ["query"]),
    transfer: Q.Func([Q.Principal, Q.Nat], [ne], []),
    transferFrom: Q.Func([Q.Principal, Q.Principal, Q.Nat], [ne], []),
    withdraw: Q.Func([Q.Nat64, Q.Text], [ne], [])
  });
};
const init$1 = ({ IDL: Q }) => [
  Q.Text,
  Q.Text,
  Q.Text,
  Q.Nat8,
  Q.Nat,
  Q.Principal,
  Q.Nat,
  Q.Principal,
  Q.Principal
];
wicp_did.init = init$1;
var wicpMethods = {}, __awaiter$1 = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
};
Object.defineProperty(wicpMethods, "__esModule", { value: !0 });
const principal_1$1 = require$$4, methods_1$1 = methods, getMetadata$1 = (Q) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ee = yield Q._getMetadata();
  return {
    fungible: {
      symbol: ee.symbol,
      decimals: ee.decimals,
      name: ee.name,
      logo: ee.logo,
      fee: ee.fee,
      totalSupply: ee.totalSupply,
      owner: ee.owner
    }
  };
}), send$1 = (Q, { to: ee, amount: ne }) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ie = yield Q._transfer(principal_1$1.Principal.fromText(ee), ne);
  if ("Ok" in ie)
    return { transactionId: ie.Ok.toString() };
  throw new Error(Object.keys(ie.Err)[0]);
}), getBalance$1 = (Q, ee) => __awaiter$1(void 0, void 0, void 0, function* () {
  const ne = yield getDecimals$1(Q);
  return { value: (yield Q._balanceOf(ee)).toString(), decimals: ne };
}), burnXTC$1 = (Q, ee) => __awaiter$1(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals$1 = (Q) => __awaiter$1(void 0, void 0, void 0, function* () {
  return (0, methods_1$1.getDecimalsFromMetadata)(yield getMetadata$1(Q));
});
wicpMethods.default = {
  send: send$1,
  getMetadata: getMetadata$1,
  getBalance: getBalance$1,
  burnXTC: burnXTC$1,
  getDecimals: getDecimals$1
};
var rosettaMethods = {}, validations = {};
(function(Q) {
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.validateToken = Q.validateCanisterId = Q.validateAccountId = Q.validatePrincipalId = Q.isValidPrincipal = Q.ALPHANUM_REGEX = Q.PRINCIPAL_REGEX = Q.CANISTER_MAX_LENGTH = void 0;
  const ee = require$$4;
  Q.CANISTER_MAX_LENGTH = 27, Q.PRINCIPAL_REGEX = /(\w{5}-){10}\w{3}/, Q.ALPHANUM_REGEX = /^[a-zA-Z0-9]+$/;
  const ne = (de) => ee.Principal.fromText(de).toText() === de;
  Q.isValidPrincipal = ne;
  const ie = (de) => {
    try {
      return Boolean(Q.PRINCIPAL_REGEX.test(de) && (0, Q.isValidPrincipal)(de));
    } catch {
      return !1;
    }
  };
  Q.validatePrincipalId = ie;
  const ae = (de) => de.length === 64 && Q.ALPHANUM_REGEX.test(de);
  Q.validateAccountId = ae;
  const ce = (de) => {
    try {
      return Boolean(de.length <= Q.CANISTER_MAX_LENGTH && (0, Q.isValidPrincipal)(de));
    } catch {
      return !1;
    }
  };
  Q.validateCanisterId = ce;
  const le = (de) => Boolean(!!de.decimal && !!de.name && !!de.symbol);
  Q.validateToken = le;
})(validations);
var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(Q, ee, ne, ie) {
  function ae(ce) {
    return ce instanceof ne ? ce : new ne(function(le) {
      le(ce);
    });
  }
  return new (ne || (ne = Promise))(function(ce, le) {
    function de(Be) {
      try {
        he(ie.next(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function ye(Be) {
      try {
        he(ie.throw(Be));
      } catch (Ee) {
        le(Ee);
      }
    }
    function he(Be) {
      Be.done ? ce(Be.value) : ae(Be.value).then(de, ye);
    }
    he((ie = ie.apply(Q, ee || [])).next());
  });
}, __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function(Q) {
  return Q && Q.__esModule ? Q : { default: Q };
};
Object.defineProperty(rosettaMethods, "__esModule", { value: !0 });
const principal_1 = require$$4, cross_fetch_1 = __importDefault(browserPonyfill.exports), methods_1 = methods, account_1 = account, validations_1 = validations, DECIMALS = 8, NET_ID = {
  blockchain: "Internet Computer",
  network: "00000000000000020101"
}, ROSETTA_URL = "https://rosetta-api.internetcomputer.org", getMetadata = (Q) => __awaiter(void 0, void 0, void 0, function* () {
  return {
    fungible: {
      symbol: "ICP",
      decimals: DECIMALS,
      name: "ICP",
      fee: 1e4
    }
  };
}), send = (Q, { to: ee, amount: ne, opts: ie }) => __awaiter(void 0, void 0, void 0, function* () {
  const ae = {
    fee: BigInt(1e4),
    memo: BigInt(0)
  };
  return { height: yield (yield Q._send_dfx({
    to: (0, validations_1.isValidPrincipal)(ee) ? (0, account_1.getAccountId)(principal_1.Principal.fromText(ee)) : ee,
    fee: { e8s: (ie == null ? void 0 : ie.fee) || ae.fee },
    amount: { e8s: ne },
    memo: ie != null && ie.memo ? BigInt(ie.memo) : ae.memo,
    from_subaccount: [],
    created_at_time: []
  })).toString() };
}), getBalance = (Q, ee) => __awaiter(void 0, void 0, void 0, function* () {
  const ne = (0, account_1.getAccountId)(ee), ie = yield getDecimals(), ae = yield (0, cross_fetch_1.default)(`${ROSETTA_URL}/account/balance`, {
    method: "POST",
    body: JSON.stringify({
      network_identifier: NET_ID,
      account_identifier: {
        address: ne
      }
    }),
    headers: {
      "Content-Type": "application/json",
      Accept: "*/*"
    }
  });
  if (!ae.ok)
    return { value: "Error", decimals: ie, error: ae.statusText };
  const { balances: ce } = yield ae.json(), [{ value: le, currency: de }] = ce;
  return { value: le, decimals: de.decimals };
}), burnXTC = (Q, ee) => __awaiter(void 0, void 0, void 0, function* () {
  throw new Error("BURN NOT SUPPORTED");
}), getDecimals = (Q) => __awaiter(void 0, void 0, void 0, function* () {
  return (0, methods_1.getDecimalsFromMetadata)(yield getMetadata());
});
rosettaMethods.default = {
  send,
  getMetadata,
  getBalance,
  burnXTC,
  getDecimals
};
var icpStandardMethods = {}, hasRequiredIcpStandardMethods;
function requireIcpStandardMethods() {
  if (hasRequiredIcpStandardMethods)
    return icpStandardMethods;
  hasRequiredIcpStandardMethods = 1;
  var Q = commonjsGlobal && commonjsGlobal.__awaiter || function(me, ge, be, we) {
    function Oe(He) {
      return He instanceof be ? He : new be(function(Se) {
        Se(He);
      });
    }
    return new (be || (be = Promise))(function(He, Se) {
      function Ge(We) {
        try {
          Pe(we.next(We));
        } catch (tt) {
          Se(tt);
        }
      }
      function Fe(We) {
        try {
          Pe(we.throw(We));
        } catch (tt) {
          Se(tt);
        }
      }
      function Pe(We) {
        We.done ? He(We.value) : Oe(We.value).then(Ge, Fe);
      }
      Pe((we = we.apply(me, ge || [])).next());
    });
  };
  Object.defineProperty(icpStandardMethods, "__esModule", { value: !0 });
  const ee = require$$4, ne = require$$5, ie = methods, ae = account, ce = validations, le = requireRegistries(), de = (me) => Q(void 0, void 0, void 0, function* () {
    var ge, be, we;
    const Oe = ne.Actor.agentOf(me);
    try {
      const Se = yield new le.TokenRegistry(Oe).get(ne.Actor.canisterIdOf(me).toString()), { fee: Ge = 2e-3, decimals: Fe = 8 } = (Se == null ? void 0 : Se.details) || {}, Pe = Number((ge = Ge == null ? void 0 : Ge.toString) === null || ge === void 0 ? void 0 : ge.call(Ge)), We = Number((be = Fe == null ? void 0 : Fe.toString) === null || be === void 0 ? void 0 : be.call(Fe)), tt = Pe * Math.pow(10, We);
      return {
        fungible: {
          symbol: ((we = Se == null ? void 0 : Se.details) === null || we === void 0 ? void 0 : we.symbol) || "ICP",
          name: (Se == null ? void 0 : Se.name) || "ICP",
          decimals: We,
          fee: tt
        }
      };
    } catch (He) {
      return console.error("Error while fetching token metadata, falling back to default values", He), {
        fungible: {
          symbol: "ICP",
          name: "ICP",
          decimals: 8,
          fee: 1e4
        }
      };
    }
  }), ye = (me, { to: ge, amount: be, opts: we }) => Q(void 0, void 0, void 0, function* () {
    const Oe = yield de(me), { fee: He = 2e-3, decimals: Se = BigInt(8) } = (Oe == null ? void 0 : Oe.fungible) || {}, Ge = {
      fee: BigInt(He * Math.pow(10, parseInt(Se.toString(), 10))),
      memo: BigInt(0)
    };
    return { height: yield (yield me._send_dfx({
      to: (0, ce.validatePrincipalId)(ge) ? (0, ae.getAccountId)(ee.Principal.fromText(ge)) : ge,
      fee: { e8s: (we == null ? void 0 : we.fee) || Ge.fee },
      amount: { e8s: be },
      memo: we != null && we.memo ? BigInt(we.memo) : Ge.memo,
      from_subaccount: [],
      created_at_time: []
    })).toString() };
  }), he = (me, ge) => Q(void 0, void 0, void 0, function* () {
    try {
      const be = (0, ae.getAccountId)(ge);
      return { value: (yield me._account_balance_dfx({ account: be })).e8s.toString(), decimals: 8 };
    } catch {
      return {
        value: "Error",
        decimals: 8,
        error: "Error while fetching your balance"
      };
    }
  }), Be = (me, ge) => Q(void 0, void 0, void 0, function* () {
    throw new Error("BURN NOT SUPPORTED");
  }), Ee = (me) => Q(void 0, void 0, void 0, function* () {
    return (0, ie.getDecimalsFromMetadata)(yield de(me));
  });
  return icpStandardMethods.default = {
    send: ye,
    getMetadata: de,
    getBalance: he,
    burnXTC: Be,
    getDecimals: Ee
  }, icpStandardMethods;
}
var hasRequiredToken_standards;
function requireToken_standards() {
  if (hasRequiredToken_standards)
    return token_standards;
  hasRequiredToken_standards = 1;
  var Q = commonjsGlobal && commonjsGlobal.__awaiter || function(Fe, Pe, We, tt) {
    function Et(Nt) {
      return Nt instanceof We ? Nt : new We(function(et) {
        et(Nt);
      });
    }
    return new (We || (We = Promise))(function(Nt, et) {
      function mt(yt) {
        try {
          Ot(tt.next(yt));
        } catch (Qt) {
          et(Qt);
        }
      }
      function Mt(yt) {
        try {
          Ot(tt.throw(yt));
        } catch (Qt) {
          et(Qt);
        }
      }
      function Ot(yt) {
        yt.done ? Nt(yt.value) : Et(yt.value).then(mt, Mt);
      }
      Ot((tt = tt.apply(Fe, Pe || [])).next());
    });
  }, ee = commonjsGlobal && commonjsGlobal.__importDefault || function(Fe) {
    return Fe && Fe.__esModule ? Fe : { default: Fe };
  };
  Object.defineProperty(token_standards, "__esModule", { value: !0 }), token_standards.parseBalance = token_standards.createTokenActor = void 0;
  const ne = actorFactory, ie = ee(methods), ae = ee(xtcMethods), ce = ee(extMethods), le = ee(dip20Methods), de = ee(ext_did), ye = ee(xtc_did), he = ee(dip_20_did), Be = ee(ledger_did), Ee = standards, me = ee(wicp_did), ge = ee(wicpMethods), be = ee(rosettaMethods), we = ee(requireIcpStandardMethods()), Oe = (Fe) => ({
    [Ee.TOKEN.xtc]: ae.default,
    [Ee.TOKEN.ext]: ce.default,
    [Ee.TOKEN.dip20]: le.default,
    [Ee.TOKEN.wicp]: ge.default,
    [Ee.TOKEN.rosetta]: be.default,
    [Ee.TOKEN.icp]: we.default
  })[Fe] || ie.default, He = (Fe) => {
    const Pe = {
      [Ee.TOKEN.xtc]: ye.default,
      [Ee.TOKEN.ext]: de.default,
      [Ee.TOKEN.dip20]: he.default,
      [Ee.TOKEN.wicp]: me.default,
      [Ee.TOKEN.rosetta]: Be.default,
      [Ee.TOKEN.icp]: Be.default
    }[Fe];
    if (!Pe)
      throw new Error(`Standard ${Fe} Not Implemented`);
    return Pe;
  }, Se = (Fe, Pe, We) => Q(void 0, void 0, void 0, function* () {
    const tt = He(We);
    return new ((0, ne.createExtendedActorClass)(Pe, Oe(We), Fe, tt))();
  });
  token_standards.createTokenActor = Se;
  const Ge = (Fe) => (parseInt(Fe.value, 10) / Math.pow(10, Fe.decimals)).toString();
  return token_standards.parseBalance = Ge, token_standards.default = {}, token_standards;
}
var hasRequiredToken_registry;
function requireToken_registry() {
  return hasRequiredToken_registry || (hasRequiredToken_registry = 1, function(Q) {
    var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(He, Se, Ge, Fe) {
      function Pe(We) {
        return We instanceof Ge ? We : new Ge(function(tt) {
          tt(We);
        });
      }
      return new (Ge || (Ge = Promise))(function(We, tt) {
        function Et(mt) {
          try {
            et(Fe.next(mt));
          } catch (Mt) {
            tt(Mt);
          }
        }
        function Nt(mt) {
          try {
            et(Fe.throw(mt));
          } catch (Mt) {
            tt(Mt);
          }
        }
        function et(mt) {
          mt.done ? We(mt.value) : Pe(mt.value).then(Et, Nt);
        }
        et((Fe = Fe.apply(He, Se || [])).next());
      });
    }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(He) {
      return He && He.__esModule ? He : { default: He };
    };
    Object.defineProperty(Q, "__esModule", { value: !0 }), Q.getTokens = Q.TokenRegistry = Q.getTokenActor = Q.TOKEN_STANDARDS = void 0;
    const ie = require$$5, ae = ne(browserPonyfill.exports), ce = ne(token_registry_did), le = ne(standard_registry), de = actorFactory, ye = registry, he = constants, Be = requireToken_standards(), Ee = standards, me = "b7hhy-tyaaa-aaaah-abbja-cai", ge = new ie.HttpAgent({ fetch: ae.default, host: he.IC_HOST });
    Q.TOKEN_STANDARDS = Object.values(Ee.TOKEN);
    const be = ({ canisterId: He, agent: Se, standard: Ge }) => {
      if (!Q.TOKEN_STANDARDS.includes(Ge))
        throw console.error(`Standard ${Ge} is not implemented`), new Error(`standard is not supported: ${Ge}`);
      return (0, Be.createTokenActor)(He, Se, Ge);
    };
    Q.getTokenActor = be;
    class we extends le.default {
      constructor(Se) {
        super(me, Se), this.getAll = () => ee(this, void 0, void 0, function* () {
          return (yield this.actor.get_all()).map(ye.formatMetadata);
        }), this.actor = (0, de.generateActor)({
          agent: Se || ge,
          canisterId: me,
          IDL: ce.default
        });
      }
    }
    Q.TokenRegistry = we;
    const Oe = ({ agent: He = ge } = {}) => ee(void 0, void 0, void 0, function* () {
      return (yield new we(He).getAll()).map((Fe) => Object.assign(Object.assign({}, Fe), { logo: Fe.thumbnail, name: Fe.name, description: Fe.description, website: Fe.frontend.length ? Fe.frontend[0] : "", principal_id: Fe.principal_id, standard: Fe.details.standard, total_supply: [Fe.details.total_supply], symbol: Fe.details.symbol }));
    });
    Q.getTokens = Oe, Q.default = {
      getTokenActor: Q.getTokenActor,
      getTokens: Q.getTokens,
      addToken: ({ agent: He, tokenInfo: Se }) => ee(void 0, void 0, void 0, function* () {
        return new we(He).add(Se);
      }),
      removeToken: ({ agent: He, canisterId: Se }) => ee(void 0, void 0, void 0, function* () {
        return new we(He).remove(Se);
      })
    };
  }(token_registry)), token_registry;
}
var address_book = {}, address_book_did = {};
Object.defineProperty(address_book_did, "__esModule", { value: !0 });
const addressBookIDL = ({ IDL: Q }) => {
  const ee = Q.Variant({
    PrincipalId: Q.Principal,
    AccountId: Q.Text,
    Icns: Q.Text
  }), ne = Q.Record({
    name: Q.Text,
    description: Q.Opt(Q.Text),
    emoji: Q.Opt(Q.Text),
    value: ee
  }), ie = Q.Variant({
    NotAuthorized: Q.Null,
    BadParameters: Q.Null,
    Unknown: Q.Text,
    NonExistentItem: Q.Null
  }), ae = Q.Variant({
    Ok: Q.Null,
    Err: ie
  });
  return Q.Service({
    add: Q.Func([ne], [ae], []),
    get_all: Q.Func([], [Q.Vec(ne)], []),
    name: Q.Func([], [Q.Text], ["query"]),
    remove: Q.Func([Q.Text], [ae], [])
  });
};
address_book_did.default = addressBookIDL;
(function(Q) {
  var ee = commonjsGlobal && commonjsGlobal.__awaiter || function(Be, Ee, me, ge) {
    function be(we) {
      return we instanceof me ? we : new me(function(Oe) {
        Oe(we);
      });
    }
    return new (me || (me = Promise))(function(we, Oe) {
      function He(Fe) {
        try {
          Ge(ge.next(Fe));
        } catch (Pe) {
          Oe(Pe);
        }
      }
      function Se(Fe) {
        try {
          Ge(ge.throw(Fe));
        } catch (Pe) {
          Oe(Pe);
        }
      }
      function Ge(Fe) {
        Fe.done ? we(Fe.value) : be(Fe.value).then(He, Se);
      }
      Ge((ge = ge.apply(Be, Ee || [])).next());
    });
  }, ne = commonjsGlobal && commonjsGlobal.__importDefault || function(Be) {
    return Be && Be.__esModule ? Be : { default: Be };
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.removeAddress = Q.addAddress = Q.getAddresses = Q.getAddressBookActor = void 0;
  const ie = require$$5, ae = ne(address_book_did), ce = "i73cm-daaaa-aaaah-abhea-cai", le = (Be) => ie.Actor.createActor(ae.default, { agent: Be, canisterId: ce });
  Q.getAddressBookActor = le;
  const de = (Be) => ee(void 0, void 0, void 0, function* () {
    return (yield (0, Q.getAddressBookActor)(Be).get_all()).map((ge) => ({
      name: ge.name,
      description: ge.description,
      emoji: ge.emoji,
      value: ge.value
    }));
  });
  Q.getAddresses = de;
  const ye = (Be, Ee) => ee(void 0, void 0, void 0, function* () {
    return yield (0, Q.getAddressBookActor)(Be).add({
      name: Ee.name,
      description: Ee.description,
      emoji: Ee.emoji,
      value: Ee.value
    });
  });
  Q.addAddress = ye;
  const he = (Be, Ee) => ee(void 0, void 0, void 0, function* () {
    return yield (0, Q.getAddressBookActor)(Be).remove(Ee);
  });
  Q.removeAddress = he, Q.default = {
    getAddressBookActor: Q.getAddressBookActor,
    getAddresses: Q.getAddresses,
    addAddress: Q.addAddress,
    removeAddress: Q.removeAddress
  };
})(address_book);
var hasRequiredRegistries;
function requireRegistries() {
  return hasRequiredRegistries || (hasRequiredRegistries = 1, function(Q) {
    var ee = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(ie, ae, ce, le) {
      le === void 0 && (le = ce);
      var de = Object.getOwnPropertyDescriptor(ae, ce);
      (!de || ("get" in de ? !ae.__esModule : de.writable || de.configurable)) && (de = { enumerable: !0, get: function() {
        return ae[ce];
      } }), Object.defineProperty(ie, le, de);
    } : function(ie, ae, ce, le) {
      le === void 0 && (le = ce), ie[le] = ae[ce];
    }), ne = commonjsGlobal && commonjsGlobal.__exportStar || function(ie, ae) {
      for (var ce in ie)
        ce !== "default" && !Object.prototype.hasOwnProperty.call(ae, ce) && ee(ae, ie, ce);
    };
    Object.defineProperty(Q, "__esModule", { value: !0 }), ne(nfts_registry, Q), ne(canister_registry, Q), ne(requireToken_registry(), Q), ne(address_book, Q);
  }(registries)), registries;
}
var nft = {};
Object.defineProperty(nft, "__esModule", { value: !0 });
var token = {};
Object.defineProperty(token, "__esModule", { value: !0 });
(function(Q) {
  var ee = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(he, Be, Ee, me) {
    me === void 0 && (me = Ee);
    var ge = Object.getOwnPropertyDescriptor(Be, Ee);
    (!ge || ("get" in ge ? !Be.__esModule : ge.writable || ge.configurable)) && (ge = { enumerable: !0, get: function() {
      return Be[Ee];
    } }), Object.defineProperty(he, me, ge);
  } : function(he, Be, Ee, me) {
    me === void 0 && (me = Ee), he[me] = Be[Ee];
  }), ne = commonjsGlobal && commonjsGlobal.__setModuleDefault || (Object.create ? function(he, Be) {
    Object.defineProperty(he, "default", { enumerable: !0, value: Be });
  } : function(he, Be) {
    he.default = Be;
  }), ie = commonjsGlobal && commonjsGlobal.__exportStar || function(he, Be) {
    for (var Ee in he)
      Ee !== "default" && !Object.prototype.hasOwnProperty.call(Be, Ee) && ee(Be, he, Ee);
  }, ae = commonjsGlobal && commonjsGlobal.__importStar || function(he) {
    if (he && he.__esModule)
      return he;
    var Be = {};
    if (he != null)
      for (var Ee in he)
        Ee !== "default" && Object.prototype.hasOwnProperty.call(he, Ee) && ee(Be, he, Ee);
    return ne(Be, he), Be;
  }, ce = commonjsGlobal && commonjsGlobal.__importDefault || function(he) {
    return he && he.__esModule ? he : { default: he };
  };
  Object.defineProperty(Q, "__esModule", { value: !0 }), Q.HttpAgent = Q.Principal = Q.standards = Q.TokenInterfaces = Q.NFTInterfaces = void 0, ie(requireRegistries(), Q), ie(nft, Q), ie(token, Q), Q.NFTInterfaces = ae(nft), Q.TokenInterfaces = ae(token);
  var le = standards;
  Object.defineProperty(Q, "standards", { enumerable: !0, get: function() {
    return ce(le).default;
  } });
  var de = require$$4;
  Object.defineProperty(Q, "Principal", { enumerable: !0, get: function() {
    return de.Principal;
  } });
  var ye = require$$5;
  Object.defineProperty(Q, "HttpAgent", { enumerable: !0, get: function() {
    return ye.HttpAgent;
  } });
})(dist);
const clone = (Q) => structuredClone(Q), getRemoteBoxes = (Q) => [...Array(tradeBoxNum).keys()].map((ne) => {
  var ie;
  return {
    id: ne,
    item: (ie = Q.find((ae) => ae.slot === ne)) != null ? ie : null
  };
}), getInventoryBoxes = (Q) => [...Array(inventoryBoxNum).keys()].map((ne) => {
  var ie;
  return {
    id: ne,
    item: (ie = Q.find((ae) => ae.slot === ne)) != null ? ie : null
  };
}), getUserTokens = async ({
  agent: Q,
  user: ee
}) => {
  const ne = await dist.getAllUserNFTs({
    agent: Q,
    user: ee
  });
  console.log("collections: ", ne);
  const ie = {};
  let ae = 0;
  return ne.forEach((ce) => {
    ce.name.toLowerCase().includes("cipher") || ce.tokens.forEach((le) => {
      var he, Be, Ee;
      let de = {
        id: ae.toString(),
        canister_id: le.canister,
        collection: le.collection,
        index: le.index.toString(),
        slot: ae
      };
      const ye = (Be = (he = le.metadata) == null ? void 0 : he.json) == null ? void 0 : Be.value.TextContent;
      if (ye) {
        const me = JSON.parse(ye);
        de.name = me.name, de.url = (Ee = me.animation_url) != null ? Ee : me.image;
      } else
        de.name = le.collection, de.url = le.url;
      ie[ae] = de, ae++;
    });
  }), console.log("newTokens: ", ie), ie;
}, getExtension = (Q) => Q.split(".").pop().toLowerCase(), isImage = (Q) => {
  if (!Q)
    return !1;
  const ee = ["apng", "avif", "gif", "jpg", "jpeg", "jfif", "pjpeg", "pjp", "png", "svg", "webp", "bmp", "ico", "cur", "tif", "tiff"], ne = getExtension(Q);
  return ee.indexOf(ne) >= 0;
}, isMedia = (Q) => {
  if (!Q)
    return !1;
  const ee = ["mp4", "mov", "wav", "mp3", "ogg", "webm", "avi"], ne = getExtension(Q);
  return ee.indexOf(ne) >= 0;
}, isModel = (Q) => {
  if (!Q)
    return !1;
  const ee = ["glb"], ne = getExtension(Q);
  return ee.indexOf(ne) >= 0;
}, existItems = (Q) => !Q || !Q.length ? !1 : !!Q.filter((ne) => {
  var ie;
  return (ie = ne == null ? void 0 : ne.item) == null ? void 0 : ie.canister_id;
}).length, createStoreImpl = (Q) => {
  let ee;
  const ne = /* @__PURE__ */ new Set(), ie = (ye, he) => {
    const Be = typeof ye == "function" ? ye(ee) : ye;
    if (!Object.is(Be, ee)) {
      const Ee = ee;
      ee = (he != null ? he : typeof Be != "object") ? Be : Object.assign({}, ee, Be), ne.forEach((me) => me(ee, Ee));
    }
  }, ae = () => ee, de = { setState: ie, getState: ae, subscribe: (ye) => (ne.add(ye), () => ne.delete(ye)), destroy: () => ne.clear() };
  return ee = Q(ie, ae, de), de;
}, createStore = (Q) => Q ? createStoreImpl(Q) : createStoreImpl;
var withSelector = { exports: {} }, withSelector_production_min = {}, shim = { exports: {} }, useSyncExternalStoreShim_production_min = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_production_min;
function requireUseSyncExternalStoreShim_production_min() {
  if (hasRequiredUseSyncExternalStoreShim_production_min)
    return useSyncExternalStoreShim_production_min;
  hasRequiredUseSyncExternalStoreShim_production_min = 1;
  var Q = react.exports;
  function ee(Ee, me) {
    return Ee === me && (Ee !== 0 || 1 / Ee === 1 / me) || Ee !== Ee && me !== me;
  }
  var ne = typeof Object.is == "function" ? Object.is : ee, ie = Q.useState, ae = Q.useEffect, ce = Q.useLayoutEffect, le = Q.useDebugValue;
  function de(Ee, me) {
    var ge = me(), be = ie({ inst: { value: ge, getSnapshot: me } }), we = be[0].inst, Oe = be[1];
    return ce(function() {
      we.value = ge, we.getSnapshot = me, ye(we) && Oe({ inst: we });
    }, [Ee, ge, me]), ae(function() {
      return ye(we) && Oe({ inst: we }), Ee(function() {
        ye(we) && Oe({ inst: we });
      });
    }, [Ee]), le(ge), ge;
  }
  function ye(Ee) {
    var me = Ee.getSnapshot;
    Ee = Ee.value;
    try {
      var ge = me();
      return !ne(Ee, ge);
    } catch {
      return !0;
    }
  }
  function he(Ee, me) {
    return me();
  }
  var Be = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? he : de;
  return useSyncExternalStoreShim_production_min.useSyncExternalStore = Q.useSyncExternalStore !== void 0 ? Q.useSyncExternalStore : Be, useSyncExternalStoreShim_production_min;
}
var useSyncExternalStoreShim_development = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredUseSyncExternalStoreShim_development;
function requireUseSyncExternalStoreShim_development() {
  return hasRequiredUseSyncExternalStoreShim_development || (hasRequiredUseSyncExternalStoreShim_development = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var Q = react.exports, ee = Q.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function ne(Ge) {
      {
        for (var Fe = arguments.length, Pe = new Array(Fe > 1 ? Fe - 1 : 0), We = 1; We < Fe; We++)
          Pe[We - 1] = arguments[We];
        ie("error", Ge, Pe);
      }
    }
    function ie(Ge, Fe, Pe) {
      {
        var We = ee.ReactDebugCurrentFrame, tt = We.getStackAddendum();
        tt !== "" && (Fe += "%s", Pe = Pe.concat([tt]));
        var Et = Pe.map(function(Nt) {
          return String(Nt);
        });
        Et.unshift("Warning: " + Fe), Function.prototype.apply.call(console[Ge], console, Et);
      }
    }
    function ae(Ge, Fe) {
      return Ge === Fe && (Ge !== 0 || 1 / Ge === 1 / Fe) || Ge !== Ge && Fe !== Fe;
    }
    var ce = typeof Object.is == "function" ? Object.is : ae, le = Q.useState, de = Q.useEffect, ye = Q.useLayoutEffect, he = Q.useDebugValue, Be = !1, Ee = !1;
    function me(Ge, Fe, Pe) {
      Be || Q.startTransition !== void 0 && (Be = !0, ne("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var We = Fe();
      if (!Ee) {
        var tt = Fe();
        ce(We, tt) || (ne("The result of getSnapshot should be cached to avoid an infinite loop"), Ee = !0);
      }
      var Et = le({
        inst: {
          value: We,
          getSnapshot: Fe
        }
      }), Nt = Et[0].inst, et = Et[1];
      return ye(function() {
        Nt.value = We, Nt.getSnapshot = Fe, ge(Nt) && et({
          inst: Nt
        });
      }, [Ge, We, Fe]), de(function() {
        ge(Nt) && et({
          inst: Nt
        });
        var mt = function() {
          ge(Nt) && et({
            inst: Nt
          });
        };
        return Ge(mt);
      }, [Ge]), he(We), We;
    }
    function ge(Ge) {
      var Fe = Ge.getSnapshot, Pe = Ge.value;
      try {
        var We = Fe();
        return !ce(Pe, We);
      } catch {
        return !0;
      }
    }
    function be(Ge, Fe, Pe) {
      return Fe();
    }
    var we = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", Oe = !we, He = Oe ? be : me, Se = Q.useSyncExternalStore !== void 0 ? Q.useSyncExternalStore : He;
    useSyncExternalStoreShim_development.useSyncExternalStore = Se, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), useSyncExternalStoreShim_development;
}
var hasRequiredShim;
function requireShim() {
  return hasRequiredShim || (hasRequiredShim = 1, function(Q) {
    process.env.NODE_ENV === "production" ? Q.exports = requireUseSyncExternalStoreShim_production_min() : Q.exports = requireUseSyncExternalStoreShim_development();
  }(shim)), shim.exports;
}
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredWithSelector_production_min;
function requireWithSelector_production_min() {
  if (hasRequiredWithSelector_production_min)
    return withSelector_production_min;
  hasRequiredWithSelector_production_min = 1;
  var Q = react.exports, ee = requireShim();
  function ne(he, Be) {
    return he === Be && (he !== 0 || 1 / he === 1 / Be) || he !== he && Be !== Be;
  }
  var ie = typeof Object.is == "function" ? Object.is : ne, ae = ee.useSyncExternalStore, ce = Q.useRef, le = Q.useEffect, de = Q.useMemo, ye = Q.useDebugValue;
  return withSelector_production_min.useSyncExternalStoreWithSelector = function(he, Be, Ee, me, ge) {
    var be = ce(null);
    if (be.current === null) {
      var we = { hasValue: !1, value: null };
      be.current = we;
    } else
      we = be.current;
    be = de(function() {
      function He(We) {
        if (!Se) {
          if (Se = !0, Ge = We, We = me(We), ge !== void 0 && we.hasValue) {
            var tt = we.value;
            if (ge(tt, We))
              return Fe = tt;
          }
          return Fe = We;
        }
        if (tt = Fe, ie(Ge, We))
          return tt;
        var Et = me(We);
        return ge !== void 0 && ge(tt, Et) ? tt : (Ge = We, Fe = Et);
      }
      var Se = !1, Ge, Fe, Pe = Ee === void 0 ? null : Ee;
      return [function() {
        return He(Be());
      }, Pe === null ? void 0 : function() {
        return He(Pe());
      }];
    }, [Be, Ee, me, ge]);
    var Oe = ae(he, be[0], be[1]);
    return le(function() {
      we.hasValue = !0, we.value = Oe;
    }, [Oe]), ye(Oe), Oe;
  }, withSelector_production_min;
}
var withSelector_development = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredWithSelector_development;
function requireWithSelector_development() {
  return hasRequiredWithSelector_development || (hasRequiredWithSelector_development = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var Q = react.exports, ee = requireShim();
    function ne(Be, Ee) {
      return Be === Ee && (Be !== 0 || 1 / Be === 1 / Ee) || Be !== Be && Ee !== Ee;
    }
    var ie = typeof Object.is == "function" ? Object.is : ne, ae = ee.useSyncExternalStore, ce = Q.useRef, le = Q.useEffect, de = Q.useMemo, ye = Q.useDebugValue;
    function he(Be, Ee, me, ge, be) {
      var we = ce(null), Oe;
      we.current === null ? (Oe = {
        hasValue: !1,
        value: null
      }, we.current = Oe) : Oe = we.current;
      var He = de(function() {
        var Pe = !1, We, tt, Et = function(Mt) {
          if (!Pe) {
            Pe = !0, We = Mt;
            var Ot = ge(Mt);
            if (be !== void 0 && Oe.hasValue) {
              var yt = Oe.value;
              if (be(yt, Ot))
                return tt = yt, yt;
            }
            return tt = Ot, Ot;
          }
          var Qt = We, Yt = tt;
          if (ie(Qt, Mt))
            return Yt;
          var jt = ge(Mt);
          return be !== void 0 && be(Yt, jt) ? Yt : (We = Mt, tt = jt, jt);
        }, Nt = me === void 0 ? null : me, et = function() {
          return Et(Ee());
        }, mt = Nt === null ? void 0 : function() {
          return Et(Nt());
        };
        return [et, mt];
      }, [Ee, me, ge, be]), Se = He[0], Ge = He[1], Fe = ae(Be, Se, Ge);
      return le(function() {
        Oe.hasValue = !0, Oe.value = Fe;
      }, [Fe]), ye(Fe), Fe;
    }
    withSelector_development.useSyncExternalStoreWithSelector = he, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), withSelector_development;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireWithSelector_production_min() : Q.exports = requireWithSelector_development();
})(withSelector);
const useSyncExternalStoreExports = /* @__PURE__ */ getDefaultExportFromCjs(withSelector.exports), { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;
function useStore$1(Q, ee = Q.getState, ne) {
  const ie = useSyncExternalStoreWithSelector(
    Q.subscribe,
    Q.getState,
    Q.getServerState || Q.getState,
    ee,
    ne
  );
  return react.exports.useDebugValue(ie), ie;
}
const createImpl = (Q) => {
  const ee = typeof Q == "function" ? createStore(Q) : Q, ne = (ie, ae) => useStore$1(ee, ie, ae);
  return Object.assign(ne, ee), ne;
}, create = (Q) => Q ? createImpl(Q) : createImpl, initRemoteBoxes = [...Array(tradeBoxNum).keys()].map((Q) => ({
  id: Q,
  item: null
})), initLocalBoxes = [...Array(tradeBoxNum).keys()].map((Q) => ({
  id: Q,
  item: null
})), initInventoryBoxes = [...Array(inventoryBoxNum).keys()].map((Q) => ({
  id: Q,
  type: "all",
  item: null
})), useStore = create((Q) => ({
  plugActor: null,
  setPlugActor: (ee) => Q((ne) => ({
    plugActor: ee
  })),
  isCreator: !1,
  setIsCreator: (ee) => Q((ne) => ({
    isCreator: ee
  })),
  localUser: null,
  setLocalUser: (ee) => Q((ne) => ({
    localUser: ee
  })),
  curTradeId: null,
  setCurTradeId: (ee) => Q((ne) => ({
    curTradeId: ee
  })),
  tradeData: null,
  setTradeData: (ee) => Q((ne) => ({
    tradeData: ee
  })),
  tradeStarted: !1,
  setTradeStarted: (ee) => Q((ne) => ({
    tradeStarted: ee
  })),
  remoteBoxes: clone(initRemoteBoxes),
  setRemoteBoxes: (ee) => Q((ne) => ({
    remoteBoxes: ee
  })),
  localBoxes: clone(initLocalBoxes),
  setLocalBoxes: (ee) => Q((ne) => ({
    localBoxes: ee
  })),
  inventoryBoxes: initInventoryBoxes,
  setInventoryBoxes: (ee) => Q((ne) => ({
    inventoryBoxes: ee
  })),
  accepted: !1,
  setAccepted: (ee) => Q((ne) => ({
    accepted: ee
  })),
  boxNumPerPage: pageBoxNum,
  setBoxNumPerPage: (ee) => Q((ne) => ({
    boxNumPerPage: ee
  })),
  curPage: 1,
  setCurPage: (ee) => Q((ne) => ({
    curPage: ee
  })),
  selItem: null,
  setSelItem: (ee) => Q((ne) => ({
    selItem: ee
  })),
  loading: !1,
  setLoading: (ee) => Q((ne) => ({
    loading: ee
  }))
}));
var ReplicaRejectCode;
(function(Q) {
  Q[Q.SysFatal = 1] = "SysFatal", Q[Q.SysTransient = 2] = "SysTransient", Q[Q.DestinationInvalid = 3] = "DestinationInvalid", Q[Q.CanisterReject = 4] = "CanisterReject", Q[Q.CanisterError = 5] = "CanisterError";
})(ReplicaRejectCode || (ReplicaRejectCode = {}));
class AgentError extends Error {
  constructor(ee) {
    super(ee), this.message = ee, Object.setPrototypeOf(this, AgentError.prototype);
  }
}
function concat$1(...Q) {
  const ee = new Uint8Array(Q.reduce((ie, ae) => ie + ae.byteLength, 0));
  let ne = 0;
  for (const ie of Q)
    ee.set(new Uint8Array(ie), ne), ne += ie.byteLength;
  return ee;
}
class PipeArrayBuffer {
  constructor(ee, ne = (ee == null ? void 0 : ee.byteLength) || 0) {
    this._buffer = ee || new ArrayBuffer(0), this._view = new Uint8Array(this._buffer, 0, ne);
  }
  get buffer() {
    return this._view.slice();
  }
  get byteLength() {
    return this._view.byteLength;
  }
  read(ee) {
    const ne = this._view.subarray(0, ee);
    return this._view = this._view.subarray(ee), ne.slice().buffer;
  }
  readUint8() {
    const ee = this._view[0];
    return this._view = this._view.subarray(1), ee;
  }
  write(ee) {
    const ne = new Uint8Array(ee), ie = this._view.byteLength;
    this._view.byteOffset + this._view.byteLength + ne.byteLength >= this._buffer.byteLength ? this.alloc(ne.byteLength) : this._view = new Uint8Array(this._buffer, this._view.byteOffset, this._view.byteLength + ne.byteLength), this._view.set(ne, ie);
  }
  get end() {
    return this._view.byteLength === 0;
  }
  alloc(ee) {
    const ne = new ArrayBuffer((this._buffer.byteLength + ee) * 1.2 | 0), ie = new Uint8Array(ne, 0, this._view.byteLength + ee);
    ie.set(this._view), this._buffer = ne, this._view = ie;
  }
}
function idlHash(Q) {
  const ne = new TextEncoder().encode(Q);
  let ie = 0;
  for (const ae of ne)
    ie = (ie * 223 + ae) % 2 ** 32;
  return ie;
}
function idlLabelToId(Q) {
  if (/^_\d+_$/.test(Q) || /^_0x[0-9a-fA-F]+_$/.test(Q)) {
    const ee = +Q.slice(1, -1);
    if (Number.isSafeInteger(ee) && ee >= 0 && ee < 2 ** 32)
      return ee;
  }
  return idlHash(Q);
}
function eob() {
  throw new Error("unexpected end of buffer");
}
function safeRead(Q, ee) {
  return Q.byteLength < ee && eob(), Q.read(ee);
}
function safeReadUint8(Q) {
  const ee = Q.readUint8();
  return ee === void 0 && eob(), ee;
}
function lebEncode(Q) {
  if (typeof Q == "number" && (Q = BigInt(Q)), Q < BigInt(0))
    throw new Error("Cannot leb encode negative values.");
  const ee = (Q === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(Q)))) + 1, ne = new PipeArrayBuffer(new ArrayBuffer(ee), 0);
  for (; ; ) {
    const ie = Number(Q & BigInt(127));
    if (Q /= BigInt(128), Q === BigInt(0)) {
      ne.write(new Uint8Array([ie]));
      break;
    } else
      ne.write(new Uint8Array([ie | 128]));
  }
  return ne.buffer;
}
function lebDecode(Q) {
  let ee = BigInt(1), ne = BigInt(0), ie;
  do
    ie = safeReadUint8(Q), ne += BigInt(ie & 127).valueOf() * ee, ee *= BigInt(128);
  while (ie >= 128);
  return ne;
}
function slebEncode(Q) {
  typeof Q == "number" && (Q = BigInt(Q));
  const ee = Q < BigInt(0);
  ee && (Q = -Q - BigInt(1));
  const ne = (Q === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(Q)))) + 1, ie = new PipeArrayBuffer(new ArrayBuffer(ne), 0);
  for (; ; ) {
    const ce = ae(Q);
    if (Q /= BigInt(128), ee && Q === BigInt(0) && (ce & 64) !== 0 || !ee && Q === BigInt(0) && (ce & 64) === 0) {
      ie.write(new Uint8Array([ce]));
      break;
    } else
      ie.write(new Uint8Array([ce | 128]));
  }
  function ae(ce) {
    const le = ce % BigInt(128);
    return Number(ee ? BigInt(128) - le - BigInt(1) : le);
  }
  return ie.buffer;
}
function slebDecode(Q) {
  const ee = new Uint8Array(Q.buffer);
  let ne = 0;
  for (; ne < ee.byteLength; ne++)
    if (ee[ne] < 128) {
      if ((ee[ne] & 64) === 0)
        return lebDecode(Q);
      break;
    }
  const ie = new Uint8Array(safeRead(Q, ne + 1));
  let ae = BigInt(0);
  for (let ce = ie.byteLength - 1; ce >= 0; ce--)
    ae = ae * BigInt(128) + BigInt(128 - (ie[ce] & 127) - 1);
  return -ae - BigInt(1);
}
function writeUIntLE(Q, ee) {
  if (BigInt(Q) < BigInt(0))
    throw new Error("Cannot write negative values.");
  return writeIntLE(Q, ee);
}
function writeIntLE(Q, ee) {
  Q = BigInt(Q);
  const ne = new PipeArrayBuffer(new ArrayBuffer(Math.min(1, ee)), 0);
  let ie = 0, ae = BigInt(256), ce = BigInt(0), le = Number(Q % ae);
  for (ne.write(new Uint8Array([le])); ++ie < ee; )
    Q < 0 && ce === BigInt(0) && le !== 0 && (ce = BigInt(1)), le = Number((Q / ae - ce) % BigInt(256)), ne.write(new Uint8Array([le])), ae *= BigInt(256);
  return ne.buffer;
}
function readUIntLE(Q, ee) {
  let ne = BigInt(safeReadUint8(Q)), ie = BigInt(1), ae = 0;
  for (; ++ae < ee; ) {
    ie *= BigInt(256);
    const ce = BigInt(safeReadUint8(Q));
    ne = ne + ie * ce;
  }
  return ne;
}
function readIntLE(Q, ee) {
  let ne = readUIntLE(Q, ee);
  const ie = BigInt(2) ** (BigInt(8) * BigInt(ee - 1) + BigInt(7));
  return ne >= ie && (ne -= ie * BigInt(2)), ne;
}
function iexp2(Q) {
  const ee = BigInt(Q);
  if (Q < 0)
    throw new RangeError("Input must be non-negative");
  return BigInt(1) << ee;
}
const magicNumber = "DIDL", toReadableString_max = 400;
function zipWith(Q, ee, ne) {
  return Q.map((ie, ae) => ne(ie, ee[ae]));
}
class TypeTable {
  constructor() {
    this._typs = [], this._idx = /* @__PURE__ */ new Map();
  }
  has(ee) {
    return this._idx.has(ee.name);
  }
  add(ee, ne) {
    const ie = this._typs.length;
    this._idx.set(ee.name, ie), this._typs.push(ne);
  }
  merge(ee, ne) {
    const ie = this._idx.get(ee.name), ae = this._idx.get(ne);
    if (ie === void 0)
      throw new Error("Missing type index for " + ee);
    if (ae === void 0)
      throw new Error("Missing type index for " + ne);
    this._typs[ie] = this._typs[ae], this._typs.splice(ae, 1), this._idx.delete(ne);
  }
  encode() {
    const ee = lebEncode(this._typs.length), ne = concat$1(...this._typs);
    return concat$1(ee, ne);
  }
  indexOf(ee) {
    if (!this._idx.has(ee))
      throw new Error("Missing type index for " + ee);
    return slebEncode(this._idx.get(ee) || 0);
  }
}
class Visitor {
  visitType(ee, ne) {
    throw new Error("Not implemented");
  }
  visitPrimitive(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitEmpty(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitBool(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNull(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitReserved(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitText(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitNumber(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFloat(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitFixedInt(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitFixedNat(ee, ne) {
    return this.visitNumber(ee, ne);
  }
  visitPrincipal(ee, ne) {
    return this.visitPrimitive(ee, ne);
  }
  visitConstruct(ee, ne) {
    return this.visitType(ee, ne);
  }
  visitVec(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitOpt(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRecord(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitTuple(ee, ne, ie) {
    const ae = ne.map((ce, le) => [`_${le}_`, ce]);
    return this.visitRecord(ee, ae, ie);
  }
  visitVariant(ee, ne, ie) {
    return this.visitConstruct(ee, ie);
  }
  visitRec(ee, ne, ie) {
    return this.visitConstruct(ne, ie);
  }
  visitFunc(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
  visitService(ee, ne) {
    return this.visitConstruct(ee, ne);
  }
}
class Type {
  display() {
    return this.name;
  }
  valueToString(ee) {
    return toReadableString(ee);
  }
  buildTypeTable(ee) {
    ee.has(this) || this._buildTypeTableImpl(ee);
  }
}
class PrimitiveType extends Type {
  checkType(ee) {
    if (this.name !== ee.name)
      throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
    return ee;
  }
  _buildTypeTableImpl(ee) {
  }
}
class ConstructType extends Type {
  checkType(ee) {
    if (ee instanceof RecClass) {
      const ne = ee.getType();
      if (typeof ne > "u")
        throw new Error("type mismatch with uninitialized type");
      return ne;
    }
    throw new Error(`type mismatch: type on the wire ${ee.name}, expect type ${this.name}`);
  }
  encodeType(ee) {
    return ee.indexOf(this.name);
  }
}
class EmptyClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitEmpty(this, ne);
  }
  covariant(ee) {
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue() {
    throw new Error("Empty cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Empty cannot appear as a value");
  }
  encodeType() {
    return slebEncode(-17);
  }
  decodeValue() {
    throw new Error("Empty cannot appear as an output");
  }
  get name() {
    return "empty";
  }
}
class UnknownClass extends Type {
  checkType(ee) {
    throw new Error("Method not implemented for unknown.");
  }
  accept(ee, ne) {
    throw ee.visitType(this, ne);
  }
  covariant(ee) {
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue() {
    throw new Error("Unknown cannot appear as a function argument");
  }
  valueToString() {
    throw new Error("Unknown cannot appear as a value");
  }
  encodeType() {
    throw new Error("Unknown cannot be serialized");
  }
  decodeValue(ee, ne) {
    let ie = ne.decodeValue(ee, ne);
    Object(ie) !== ie && (ie = Object(ie));
    let ae;
    return ne instanceof RecClass ? ae = () => ne.getType() : ae = () => ne, Object.defineProperty(ie, "type", {
      value: ae,
      writable: !0,
      enumerable: !1,
      configurable: !0
    }), ie;
  }
  _buildTypeTableImpl() {
    throw new Error("Unknown cannot be serialized");
  }
  get name() {
    return "Unknown";
  }
}
class BoolClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitBool(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "boolean")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return new Uint8Array([ee ? 1 : 0]);
  }
  encodeType() {
    return slebEncode(-2);
  }
  decodeValue(ee, ne) {
    switch (this.checkType(ne), safeReadUint8(ee)) {
      case 0:
        return !1;
      case 1:
        return !0;
      default:
        throw new Error("Boolean value out of range");
    }
  }
  get name() {
    return "bool";
  }
}
class NullClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitNull(this, ne);
  }
  covariant(ee) {
    if (ee === null)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue() {
    return new ArrayBuffer(0);
  }
  encodeType() {
    return slebEncode(-1);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), null;
  }
  get name() {
    return "null";
  }
}
class ReservedClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitReserved(this, ne);
  }
  covariant(ee) {
    return !0;
  }
  encodeValue() {
    return new ArrayBuffer(0);
  }
  encodeType() {
    return slebEncode(-16);
  }
  decodeValue(ee, ne) {
    return ne.name !== this.name && ne.decodeValue(ee, ne), null;
  }
  get name() {
    return "reserved";
  }
}
class TextClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitText(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "string")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = new TextEncoder().encode(ee), ie = lebEncode(ne.byteLength);
    return concat$1(ie, ne);
  }
  encodeType() {
    return slebEncode(-15);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = lebDecode(ee), ae = safeRead(ee, Number(ie));
    return new TextDecoder("utf8", { fatal: !0 }).decode(ae);
  }
  get name() {
    return "text";
  }
  valueToString(ee) {
    return '"' + ee + '"';
  }
}
class IntClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitInt(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "bigint" || Number.isInteger(ee))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return slebEncode(ee);
  }
  encodeType() {
    return slebEncode(-4);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), slebDecode(ee);
  }
  get name() {
    return "int";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class NatClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitNat(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "bigint" && ee >= BigInt(0) || Number.isInteger(ee) && ee >= 0)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return lebEncode(ee);
  }
  encodeType() {
    return slebEncode(-3);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), lebDecode(ee);
  }
  get name() {
    return "nat";
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FloatClass extends PrimitiveType {
  constructor(ee) {
    if (super(), this._bits = ee, ee !== 32 && ee !== 64)
      throw new Error("not a valid float type");
  }
  accept(ee, ne) {
    return ee.visitFloat(this, ne);
  }
  covariant(ee) {
    if (typeof ee == "number" || ee instanceof Number)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = new ArrayBuffer(this._bits / 8), ie = new DataView(ne);
    return this._bits === 32 ? ie.setFloat32(0, ee, !0) : ie.setFloat64(0, ee, !0), ne;
  }
  encodeType() {
    const ee = this._bits === 32 ? -13 : -14;
    return slebEncode(ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = safeRead(ee, this._bits / 8), ae = new DataView(ie);
    return this._bits === 32 ? ae.getFloat32(0, !0) : ae.getFloat64(0, !0);
  }
  get name() {
    return "float" + this._bits;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedIntClass extends PrimitiveType {
  constructor(ee) {
    super(), this._bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedInt(this, ne);
  }
  covariant(ee) {
    const ne = iexp2(this._bits - 1) * BigInt(-1), ie = iexp2(this._bits - 1) - BigInt(1);
    let ae = !1;
    if (typeof ee == "bigint")
      ae = ee >= ne && ee <= ie;
    else if (Number.isInteger(ee)) {
      const ce = BigInt(ee);
      ae = ce >= ne && ce <= ie;
    } else
      ae = !1;
    if (ae)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return writeIntLE(ee, this._bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this._bits) - 3;
    return slebEncode(-9 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readIntLE(ee, this._bits / 8);
    return this._bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `int${this._bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class FixedNatClass extends PrimitiveType {
  constructor(ee) {
    super(), this._bits = ee;
  }
  accept(ee, ne) {
    return ee.visitFixedNat(this, ne);
  }
  covariant(ee) {
    const ne = iexp2(this._bits);
    let ie = !1;
    if (typeof ee == "bigint" && ee >= BigInt(0) ? ie = ee < ne : Number.isInteger(ee) && ee >= 0 ? ie = BigInt(ee) < ne : ie = !1, ie)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return writeUIntLE(ee, this._bits / 8);
  }
  encodeType() {
    const ee = Math.log2(this._bits) - 3;
    return slebEncode(-5 - ee);
  }
  decodeValue(ee, ne) {
    this.checkType(ne);
    const ie = readUIntLE(ee, this._bits / 8);
    return this._bits <= 32 ? Number(ie) : ie;
  }
  get name() {
    return `nat${this._bits}`;
  }
  valueToString(ee) {
    return ee.toString();
  }
}
class VecClass extends ConstructType {
  constructor(ee) {
    super(), this._type = ee, this._blobOptimization = !1, ee instanceof FixedNatClass && ee._bits === 8 && (this._blobOptimization = !0);
  }
  accept(ee, ne) {
    return ee.visitVec(this, this._type, ne);
  }
  covariant(ee) {
    const ne = this._type instanceof FixedNatClass ? this._type._bits : this._type instanceof FixedIntClass ? this._type._bits : 0;
    if (ArrayBuffer.isView(ee) && ne == ee.BYTES_PER_ELEMENT * 8 || Array.isArray(ee) && ee.every((ie, ae) => {
      try {
        return this._type.covariant(ie);
      } catch (ce) {
        throw new Error(`Invalid ${this.display()} argument: 

index ${ae} -> ${ce.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = lebEncode(ee.length);
    if (this._blobOptimization)
      return concat$1(ne, new Uint8Array(ee));
    if (ArrayBuffer.isView(ee))
      return concat$1(ne, new Uint8Array(ee.buffer));
    const ie = new PipeArrayBuffer(new ArrayBuffer(ne.byteLength + ee.length), 0);
    ie.write(ne);
    for (const ae of ee) {
      const ce = this._type.encodeValue(ae);
      ie.write(new Uint8Array(ce));
    }
    return ie.buffer;
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode(-19), ie = this._type.encodeType(ee);
    ee.add(this, concat$1(ne, ie));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VecClass))
      throw new Error("Not a vector type");
    const ae = Number(lebDecode(ee));
    if (this._type instanceof FixedNatClass) {
      if (this._type._bits == 8)
        return new Uint8Array(ee.read(ae));
      if (this._type._bits == 16)
        return new Uint16Array(ee.read(ae * 2));
      if (this._type._bits == 32)
        return new Uint32Array(ee.read(ae * 4));
      if (this._type._bits == 64)
        return new BigUint64Array(ee.read(ae * 8));
    }
    if (this._type instanceof FixedIntClass) {
      if (this._type._bits == 8)
        return new Int8Array(ee.read(ae));
      if (this._type._bits == 16)
        return new Int16Array(ee.read(ae * 2));
      if (this._type._bits == 32)
        return new Int32Array(ee.read(ae * 4));
      if (this._type._bits == 64)
        return new BigInt64Array(ee.read(ae * 8));
    }
    const ce = [];
    for (let le = 0; le < ae; le++)
      ce.push(this._type.decodeValue(ee, ie._type));
    return ce;
  }
  get name() {
    return `vec ${this._type.name}`;
  }
  display() {
    return `vec ${this._type.display()}`;
  }
  valueToString(ee) {
    return "vec {" + ee.map((ie) => this._type.valueToString(ie)).join("; ") + "}";
  }
}
class OptClass extends ConstructType {
  constructor(ee) {
    super(), this._type = ee;
  }
  accept(ee, ne) {
    return ee.visitOpt(this, this._type, ne);
  }
  covariant(ee) {
    try {
      if (Array.isArray(ee) && (ee.length === 0 || ee.length === 1 && this._type.covariant(ee[0])))
        return !0;
    } catch (ne) {
      throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)} 

-> ${ne.message}`);
    }
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    return ee.length === 0 ? new Uint8Array([0]) : concat$1(new Uint8Array([1]), this._type.encodeValue(ee[0]));
  }
  _buildTypeTableImpl(ee) {
    this._type.buildTypeTable(ee);
    const ne = slebEncode(-18), ie = this._type.encodeType(ee);
    ee.add(this, concat$1(ne, ie));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof OptClass))
      throw new Error("Not an option type");
    switch (safeReadUint8(ee)) {
      case 0:
        return [];
      case 1:
        return [this._type.decodeValue(ee, ie._type)];
      default:
        throw new Error("Not an option value");
    }
  }
  get name() {
    return `opt ${this._type.name}`;
  }
  display() {
    return `opt ${this._type.display()}`;
  }
  valueToString(ee) {
    return ee.length === 0 ? "null" : `opt ${this._type.valueToString(ee[0])}`;
  }
}
class RecordClass extends ConstructType {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitRecord(this, this._fields, ne);
  }
  tryAsTuple() {
    const ee = [];
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, ae] = this._fields[ne];
      if (ie !== `_${ne}_`)
        return null;
      ee.push(ae);
    }
    return ee;
  }
  covariant(ee) {
    if (typeof ee == "object" && this._fields.every(([ne, ie]) => {
      if (!ee.hasOwnProperty(ne))
        throw new Error(`Record is missing key "${ne}".`);
      try {
        return ie.covariant(ee[ne]);
      } catch (ae) {
        throw new Error(`Invalid ${this.display()} argument: 

field ${ne} -> ${ae.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = this._fields.map(([ae]) => ee[ae]), ie = zipWith(this._fields, ne, ([, ae], ce) => ae.encodeValue(ce));
    return concat$1(...ie);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, le]) => le.buildTypeTable(ee));
    const ne = slebEncode(-20), ie = lebEncode(this._fields.length), ae = this._fields.map(([ce, le]) => concat$1(lebEncode(idlLabelToId(ce)), le.encodeType(ee)));
    ee.add(this, concat$1(ne, ie, concat$1(...ae)));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof RecordClass))
      throw new Error("Not a record type");
    const ae = {};
    let ce = 0, le = 0;
    for (; le < ie._fields.length; ) {
      const [de, ye] = ie._fields[le];
      if (ce >= this._fields.length) {
        ye.decodeValue(ee, ye), le++;
        continue;
      }
      const [he, Be] = this._fields[ce], Ee = idlLabelToId(this._fields[ce][0]), me = idlLabelToId(de);
      if (Ee === me)
        ae[he] = Be.decodeValue(ee, ye), ce++, le++;
      else if (me > Ee)
        if (Be instanceof OptClass || Be instanceof ReservedClass)
          ae[he] = [], ce++;
        else
          throw new Error("Cannot find required field " + he);
      else
        ye.decodeValue(ee, ye), le++;
    }
    for (const [de, ye] of this._fields.slice(ce))
      if (ye instanceof OptClass || ye instanceof ReservedClass)
        ae[de] = [];
      else
        throw new Error("Cannot find required field " + de);
    return ae;
  }
  get name() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `record {${this._fields.map(([ne, ie]) => ne + ":" + ie.display()).join("; ")}}`;
  }
  valueToString(ee) {
    const ne = this._fields.map(([ae]) => ee[ae]);
    return `record {${zipWith(this._fields, ne, ([ae, ce], le) => ae + "=" + ce.valueToString(le)).join("; ")}}`;
  }
}
class TupleClass extends RecordClass {
  constructor(ee) {
    const ne = {};
    ee.forEach((ie, ae) => ne["_" + ae + "_"] = ie), super(ne), this._components = ee;
  }
  accept(ee, ne) {
    return ee.visitTuple(this, this._components, ne);
  }
  covariant(ee) {
    if (Array.isArray(ee) && ee.length >= this._fields.length && this._components.every((ne, ie) => {
      try {
        return ne.covariant(ee[ie]);
      } catch (ae) {
        throw new Error(`Invalid ${this.display()} argument: 

index ${ie} -> ${ae.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = zipWith(this._components, ee, (ie, ae) => ie.encodeValue(ae));
    return concat$1(...ne);
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof TupleClass))
      throw new Error("not a tuple type");
    if (ie._components.length < this._components.length)
      throw new Error("tuple mismatch");
    const ae = [];
    for (const [ce, le] of ie._components.entries())
      ce >= this._components.length ? le.decodeValue(ee, le) : ae.push(this._components[ce].decodeValue(ee, le));
    return ae;
  }
  display() {
    return `record {${this._components.map((ne) => ne.display()).join("; ")}}`;
  }
  valueToString(ee) {
    return `record {${zipWith(this._components, ee, (ie, ae) => ie.valueToString(ae)).join("; ")}}`;
  }
}
class VariantClass extends ConstructType {
  constructor(ee = {}) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitVariant(this, this._fields, ne);
  }
  covariant(ee) {
    if (typeof ee == "object" && Object.entries(ee).length === 1 && this._fields.every(([ne, ie]) => {
      try {
        return !ee.hasOwnProperty(ne) || ie.covariant(ee[ne]);
      } catch (ae) {
        throw new Error(`Invalid ${this.display()} argument: 

variant ${ne} -> ${ae.message}`);
      }
    }))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    for (let ne = 0; ne < this._fields.length; ne++) {
      const [ie, ae] = this._fields[ne];
      if (ee.hasOwnProperty(ie)) {
        const ce = lebEncode(ne), le = ae.encodeValue(ee[ie]);
        return concat$1(ce, le);
      }
    }
    throw Error("Variant has no data: " + ee);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([, ce]) => {
      ce.buildTypeTable(ee);
    });
    const ne = slebEncode(-21), ie = lebEncode(this._fields.length), ae = this._fields.map(([ce, le]) => concat$1(lebEncode(idlLabelToId(ce)), le.encodeType(ee)));
    ee.add(this, concat$1(ne, ie, ...ae));
  }
  decodeValue(ee, ne) {
    const ie = this.checkType(ne);
    if (!(ie instanceof VariantClass))
      throw new Error("Not a variant type");
    const ae = Number(lebDecode(ee));
    if (ae >= ie._fields.length)
      throw Error("Invalid variant index: " + ae);
    const [ce, le] = ie._fields[ae];
    for (const [de, ye] of this._fields)
      if (idlLabelToId(ce) === idlLabelToId(de)) {
        const he = ye.decodeValue(ee, le);
        return { [de]: he };
      }
    throw new Error("Cannot find field hash " + ce);
  }
  get name() {
    return `variant {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  display() {
    return `variant {${this._fields.map(([ne, ie]) => ne + (ie.name === "null" ? "" : `:${ie.display()}`)).join("; ")}}`;
  }
  valueToString(ee) {
    for (const [ne, ie] of this._fields)
      if (ee.hasOwnProperty(ne)) {
        const ae = ie.valueToString(ee[ne]);
        return ae === "null" ? `variant {${ne}}` : `variant {${ne}=${ae}}`;
      }
    throw new Error("Variant has no data: " + ee);
  }
}
class RecClass extends ConstructType {
  constructor() {
    super(...arguments), this._id = RecClass._counter++, this._type = void 0;
  }
  accept(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return ee.visitRec(this, this._type, ne);
  }
  fill(ee) {
    this._type = ee;
  }
  getType() {
    return this._type;
  }
  covariant(ee) {
    if (this._type && this._type.covariant(ee))
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.encodeValue(ee);
  }
  _buildTypeTableImpl(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    ee.add(this, new Uint8Array([])), this._type.buildTypeTable(ee), ee.merge(this, this._type.name);
  }
  decodeValue(ee, ne) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.decodeValue(ee, ne);
  }
  get name() {
    return `rec_${this._id}`;
  }
  display() {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return `\u03BC${this.name}.${this._type.name}`;
  }
  valueToString(ee) {
    if (!this._type)
      throw Error("Recursive type uninitialized.");
    return this._type.valueToString(ee);
  }
}
RecClass._counter = 0;
function decodePrincipalId(Q) {
  if (safeReadUint8(Q) !== 1)
    throw new Error("Cannot decode principal");
  const ne = Number(lebDecode(Q));
  return Principal$3.fromUint8Array(new Uint8Array(safeRead(Q, ne)));
}
class PrincipalClass extends PrimitiveType {
  accept(ee, ne) {
    return ee.visitPrincipal(this, ne);
  }
  covariant(ee) {
    if (ee && ee._isPrincipal)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = ee.toUint8Array(), ie = lebEncode(ne.byteLength);
    return concat$1(new Uint8Array([1]), ie, ne);
  }
  encodeType() {
    return slebEncode(-24);
  }
  decodeValue(ee, ne) {
    return this.checkType(ne), decodePrincipalId(ee);
  }
  get name() {
    return "principal";
  }
  valueToString(ee) {
    return `${this.name} "${ee.toText()}"`;
  }
}
class FuncClass extends ConstructType {
  constructor(ee, ne, ie = []) {
    super(), this.argTypes = ee, this.retTypes = ne, this.annotations = ie;
  }
  static argsToString(ee, ne) {
    if (ee.length !== ne.length)
      throw new Error("arity mismatch");
    return "(" + ee.map((ie, ae) => ie.valueToString(ne[ae])).join(", ") + ")";
  }
  accept(ee, ne) {
    return ee.visitFunc(this, ne);
  }
  covariant(ee) {
    if (Array.isArray(ee) && ee.length === 2 && ee[0] && ee[0]._isPrincipal && typeof ee[1] == "string")
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue([ee, ne]) {
    const ie = ee.toUint8Array(), ae = lebEncode(ie.byteLength), ce = concat$1(new Uint8Array([1]), ae, ie), le = new TextEncoder().encode(ne), de = lebEncode(le.byteLength);
    return concat$1(new Uint8Array([1]), ce, de, le);
  }
  _buildTypeTableImpl(ee) {
    this.argTypes.forEach((he) => he.buildTypeTable(ee)), this.retTypes.forEach((he) => he.buildTypeTable(ee));
    const ne = slebEncode(-22), ie = lebEncode(this.argTypes.length), ae = concat$1(...this.argTypes.map((he) => he.encodeType(ee))), ce = lebEncode(this.retTypes.length), le = concat$1(...this.retTypes.map((he) => he.encodeType(ee))), de = lebEncode(this.annotations.length), ye = concat$1(...this.annotations.map((he) => this.encodeAnnotation(he)));
    ee.add(this, concat$1(ne, ie, ae, ce, le, de, ye));
  }
  decodeValue(ee) {
    if (safeReadUint8(ee) !== 1)
      throw new Error("Cannot decode function reference");
    const ie = decodePrincipalId(ee), ae = Number(lebDecode(ee)), ce = safeRead(ee, ae), de = new TextDecoder("utf8", { fatal: !0 }).decode(ce);
    return [ie, de];
  }
  get name() {
    const ee = this.argTypes.map((ae) => ae.name).join(", "), ne = this.retTypes.map((ae) => ae.name).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) -> (${ne})${ie}`;
  }
  valueToString([ee, ne]) {
    return `func "${ee.toText()}".${ne}`;
  }
  display() {
    const ee = this.argTypes.map((ae) => ae.display()).join(", "), ne = this.retTypes.map((ae) => ae.display()).join(", "), ie = " " + this.annotations.join(" ");
    return `(${ee}) \u2192 (${ne})${ie}`;
  }
  encodeAnnotation(ee) {
    if (ee === "query")
      return new Uint8Array([1]);
    if (ee === "oneway")
      return new Uint8Array([2]);
    throw new Error("Illegal function annotation");
  }
}
class ServiceClass extends ConstructType {
  constructor(ee) {
    super(), this._fields = Object.entries(ee).sort((ne, ie) => idlLabelToId(ne[0]) - idlLabelToId(ie[0]));
  }
  accept(ee, ne) {
    return ee.visitService(this, ne);
  }
  covariant(ee) {
    if (ee && ee._isPrincipal)
      return !0;
    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(ee)}`);
  }
  encodeValue(ee) {
    const ne = ee.toUint8Array(), ie = lebEncode(ne.length);
    return concat$1(new Uint8Array([1]), ie, ne);
  }
  _buildTypeTableImpl(ee) {
    this._fields.forEach(([ce, le]) => le.buildTypeTable(ee));
    const ne = slebEncode(-23), ie = lebEncode(this._fields.length), ae = this._fields.map(([ce, le]) => {
      const de = new TextEncoder().encode(ce), ye = lebEncode(de.length);
      return concat$1(ye, de, le.encodeType(ee));
    });
    ee.add(this, concat$1(ne, ie, ...ae));
  }
  decodeValue(ee) {
    return decodePrincipalId(ee);
  }
  get name() {
    return `service {${this._fields.map(([ne, ie]) => ne + ":" + ie.name).join("; ")}}`;
  }
  valueToString(ee) {
    return `service "${ee.toText()}"`;
  }
}
function toReadableString(Q) {
  const ee = JSON.stringify(Q, (ne, ie) => typeof ie == "bigint" ? `BigInt(${ie})` : ie);
  return ee && ee.length > toReadableString_max ? ee.substring(0, toReadableString_max - 3) + "..." : ee;
}
function encode$1(Q, ee) {
  if (ee.length < Q.length)
    throw Error("Wrong number of message arguments");
  const ne = new TypeTable();
  Q.forEach((ye) => ye.buildTypeTable(ne));
  const ie = new TextEncoder().encode(magicNumber), ae = ne.encode(), ce = lebEncode(ee.length), le = concat$1(...Q.map((ye) => ye.encodeType(ne))), de = concat$1(...zipWith(Q, ee, (ye, he) => {
    try {
      ye.covariant(he);
    } catch (Be) {
      throw new Error(Be.message + `

`);
    }
    return ye.encodeValue(he);
  }));
  return concat$1(ie, ae, ce, le, de);
}
function decode$1(Q, ee) {
  const ne = new PipeArrayBuffer(ee);
  if (ee.byteLength < magicNumber.length)
    throw new Error("Message length smaller than magic number");
  const ie = safeRead(ne, magicNumber.length), ae = new TextDecoder().decode(ie);
  if (ae !== magicNumber)
    throw new Error("Wrong magic number: " + JSON.stringify(ae));
  function ce(ge) {
    const be = [], we = Number(lebDecode(ge));
    for (let Se = 0; Se < we; Se++) {
      const Ge = Number(slebDecode(ge));
      switch (Ge) {
        case -18:
        case -19: {
          const Fe = Number(slebDecode(ge));
          be.push([Ge, Fe]);
          break;
        }
        case -20:
        case -21: {
          const Fe = [];
          let Pe = Number(lebDecode(ge)), We;
          for (; Pe--; ) {
            const tt = Number(lebDecode(ge));
            if (tt >= Math.pow(2, 32))
              throw new Error("field id out of 32-bit range");
            if (typeof We == "number" && We >= tt)
              throw new Error("field id collision or not sorted");
            We = tt;
            const Et = Number(slebDecode(ge));
            Fe.push([tt, Et]);
          }
          be.push([Ge, Fe]);
          break;
        }
        case -22: {
          const Fe = [];
          let Pe = Number(lebDecode(ge));
          for (; Pe--; )
            Fe.push(Number(slebDecode(ge)));
          const We = [];
          let tt = Number(lebDecode(ge));
          for (; tt--; )
            We.push(Number(slebDecode(ge)));
          const Et = [];
          let Nt = Number(lebDecode(ge));
          for (; Nt--; )
            switch (Number(lebDecode(ge))) {
              case 1: {
                Et.push("query");
                break;
              }
              case 2: {
                Et.push("oneway");
                break;
              }
              default:
                throw new Error("unknown annotation");
            }
          be.push([Ge, [Fe, We, Et]]);
          break;
        }
        case -23: {
          let Fe = Number(lebDecode(ge));
          const Pe = [];
          for (; Fe--; ) {
            const We = Number(lebDecode(ge)), tt = new TextDecoder().decode(safeRead(ge, We)), Et = slebDecode(ge);
            Pe.push([tt, Et]);
          }
          be.push([Ge, Pe]);
          break;
        }
        default:
          throw new Error("Illegal op_code: " + Ge);
      }
    }
    const Oe = [], He = Number(lebDecode(ge));
    for (let Se = 0; Se < He; Se++)
      Oe.push(Number(slebDecode(ge)));
    return [be, Oe];
  }
  const [le, de] = ce(ne);
  if (de.length < Q.length)
    throw new Error("Wrong number of return values");
  const ye = le.map((ge) => Rec());
  function he(ge) {
    if (ge < -24)
      throw new Error("future value not supported");
    if (ge < 0)
      switch (ge) {
        case -1:
          return Null;
        case -2:
          return Bool;
        case -3:
          return Nat;
        case -4:
          return Int;
        case -5:
          return Nat8;
        case -6:
          return Nat16;
        case -7:
          return Nat32;
        case -8:
          return Nat64;
        case -9:
          return Int8;
        case -10:
          return Int16;
        case -11:
          return Int32;
        case -12:
          return Int64;
        case -13:
          return Float32;
        case -14:
          return Float64;
        case -15:
          return Text;
        case -16:
          return Reserved;
        case -17:
          return Empty;
        case -24:
          return Principal;
        default:
          throw new Error("Illegal op_code: " + ge);
      }
    if (ge >= le.length)
      throw new Error("type index out of range");
    return ye[ge];
  }
  function Be(ge) {
    switch (ge[0]) {
      case -19: {
        const be = he(ge[1]);
        return Vec(be);
      }
      case -18: {
        const be = he(ge[1]);
        return Opt(be);
      }
      case -20: {
        const be = {};
        for (const [He, Se] of ge[1]) {
          const Ge = `_${He}_`;
          be[Ge] = he(Se);
        }
        const we = Record(be), Oe = we.tryAsTuple();
        return Array.isArray(Oe) ? Tuple(...Oe) : we;
      }
      case -21: {
        const be = {};
        for (const [we, Oe] of ge[1]) {
          const He = `_${we}_`;
          be[He] = he(Oe);
        }
        return Variant(be);
      }
      case -22: {
        const [be, we, Oe] = ge[1];
        return Func(be.map((He) => he(He)), we.map((He) => he(He)), Oe);
      }
      case -23: {
        const be = {}, we = ge[1];
        for (const [Oe, He] of we) {
          let Se = he(He);
          if (Se instanceof RecClass && (Se = Se.getType()), !(Se instanceof FuncClass))
            throw new Error("Illegal service definition: services can only contain functions");
          be[Oe] = Se;
        }
        return Service(be);
      }
      default:
        throw new Error("Illegal op_code: " + ge[0]);
    }
  }
  le.forEach((ge, be) => {
    const we = Be(ge);
    ye[be].fill(we);
  });
  const Ee = de.map((ge) => he(ge)), me = Q.map((ge, be) => ge.decodeValue(ne, Ee[be]));
  for (let ge = Q.length; ge < Ee.length; ge++)
    Ee[ge].decodeValue(ne, Ee[ge]);
  if (ne.byteLength > 0)
    throw new Error("decode: Left-over bytes");
  return me;
}
const Empty = new EmptyClass(), Reserved = new ReservedClass(), Unknown = new UnknownClass(), Bool = new BoolClass(), Null = new NullClass(), Text = new TextClass(), Int = new IntClass(), Nat = new NatClass(), Float32 = new FloatClass(32), Float64 = new FloatClass(64), Int8 = new FixedIntClass(8), Int16 = new FixedIntClass(16), Int32 = new FixedIntClass(32), Int64 = new FixedIntClass(64), Nat8 = new FixedNatClass(8), Nat16 = new FixedNatClass(16), Nat32 = new FixedNatClass(32), Nat64 = new FixedNatClass(64), Principal = new PrincipalClass();
function Tuple(...Q) {
  return new TupleClass(Q);
}
function Vec(Q) {
  return new VecClass(Q);
}
function Opt(Q) {
  return new OptClass(Q);
}
function Record(Q) {
  return new RecordClass(Q);
}
function Variant(Q) {
  return new VariantClass(Q);
}
function Rec() {
  return new RecClass();
}
function Func(Q, ee, ne = []) {
  return new FuncClass(Q, ee, ne);
}
function Service(Q) {
  return new ServiceClass(Q);
}
const IDL = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Visitor,
  Type,
  PrimitiveType,
  ConstructType,
  EmptyClass,
  UnknownClass,
  BoolClass,
  NullClass,
  ReservedClass,
  TextClass,
  IntClass,
  NatClass,
  FloatClass,
  FixedIntClass,
  FixedNatClass,
  VecClass,
  OptClass,
  RecordClass,
  TupleClass,
  VariantClass,
  RecClass,
  PrincipalClass,
  FuncClass,
  ServiceClass,
  encode: encode$1,
  decode: decode$1,
  Empty,
  Reserved,
  Unknown,
  Bool,
  Null,
  Text,
  Int,
  Nat,
  Float32,
  Float64,
  Int8,
  Int16,
  Int32,
  Int64,
  Nat8,
  Nat16,
  Nat32,
  Nat64,
  Principal,
  Tuple,
  Vec,
  Opt,
  Record,
  Variant,
  Rec,
  Func,
  Service
}, Symbol.toStringTag, { value: "Module" }));
function concat(...Q) {
  const ee = new Uint8Array(Q.reduce((ie, ae) => ie + ae.byteLength, 0));
  let ne = 0;
  for (const ie of Q)
    ee.set(new Uint8Array(ie), ne), ne += ie.byteLength;
  return ee.buffer;
}
function toHex(Q) {
  return [...new Uint8Array(Q)].map((ee) => ee.toString(16).padStart(2, "0")).join("");
}
const hexRe = new RegExp(/^([0-9A-F]{2})*$/i);
function fromHex(Q) {
  if (!hexRe.test(Q))
    throw new Error("Invalid hexadecimal string.");
  const ee = [...Q].reduce((ne, ie, ae) => (ne[ae / 2 | 0] = (ne[ae / 2 | 0] || "") + ie, ne), []).map((ne) => Number.parseInt(ne, 16));
  return new Uint8Array(ee).buffer;
}
function compare(Q, ee) {
  if (Q.byteLength !== ee.byteLength)
    return Q.byteLength - ee.byteLength;
  const ne = new Uint8Array(Q), ie = new Uint8Array(ee);
  for (let ae = 0; ae < ne.length; ae++)
    if (ne[ae] !== ie[ae])
      return ne[ae] - ie[ae];
  return 0;
}
function hash(Q) {
  return sha256$1.exports.sha256.create().update(new Uint8Array(Q)).arrayBuffer();
}
function hashValue(Q) {
  if (Q instanceof src$1.Tagged)
    return hashValue(Q.value);
  if (typeof Q == "string")
    return hashString(Q);
  if (typeof Q == "number")
    return hash(lebEncode(Q));
  if (Q instanceof ArrayBuffer || ArrayBuffer.isView(Q))
    return hash(Q);
  if (Array.isArray(Q)) {
    const ee = Q.map(hashValue);
    return hash(concat(...ee));
  } else {
    if (Q && typeof Q == "object" && Q._isPrincipal)
      return hash(Q.toUint8Array());
    if (typeof Q == "object" && Q !== null && typeof Q.toHash == "function")
      return hashValue(Q.toHash());
    if (typeof Q == "bigint")
      return hash(lebEncode(Q));
  }
  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${Q}`), {
    value: Q
  });
}
const hashString = (Q) => {
  const ee = new TextEncoder().encode(Q);
  return hash(ee);
};
function requestIdOf(Q) {
  const ie = Object.entries(Q).filter(([, le]) => le !== void 0).map(([le, de]) => {
    const ye = hashString(le), he = hashValue(de);
    return [ye, he];
  }).sort(([le], [de]) => compare(le, de)), ae = concat(...ie.map((le) => concat(...le)));
  return hash(ae);
}
globalThis && globalThis.__rest;
new TextEncoder().encode(`
ic-request`);
class AnonymousIdentity {
  getPrincipal() {
    return Principal$3.anonymous();
  }
  async transformRequest(ee) {
    return Object.assign(Object.assign({}, ee), { body: { content: ee.body } });
  }
}
class PrincipalEncoder {
  get name() {
    return "Principal";
  }
  get priority() {
    return 0;
  }
  match(ee) {
    return ee && ee._isPrincipal === !0;
  }
  encode(ee) {
    return src.value.bytes(ee.toUint8Array());
  }
}
class BufferEncoder {
  get name() {
    return "Buffer";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return ee instanceof ArrayBuffer || ArrayBuffer.isView(ee);
  }
  encode(ee) {
    return src.value.bytes(new Uint8Array(ee));
  }
}
class BigIntEncoder {
  get name() {
    return "BigInt";
  }
  get priority() {
    return 1;
  }
  match(ee) {
    return typeof ee == "bigint";
  }
  encode(ee) {
    return ee > BigInt(0) ? src.value.tagged(2, src.value.bytes(fromHex(ee.toString(16)))) : src.value.tagged(3, src.value.bytes(fromHex((BigInt("-1") * ee).toString(16))));
  }
}
const serializer = src.SelfDescribeCborSerializer.withDefaultEncoders(!0);
serializer.addEncoder(new PrincipalEncoder());
serializer.addEncoder(new BufferEncoder());
serializer.addEncoder(new BigIntEncoder());
var CborTag;
(function(Q) {
  Q[Q.Uint64LittleEndian = 71] = "Uint64LittleEndian", Q[Q.Semantic = 55799] = "Semantic";
})(CborTag || (CborTag = {}));
function encode(Q) {
  return serializer.serialize(Q);
}
function decodePositiveBigInt(Q) {
  const ee = Q.byteLength;
  let ne = BigInt(0);
  for (let ie = 0; ie < ee; ie++)
    ne = ne * BigInt(256) + BigInt(Q[ie]);
  return ne;
}
class Uint8ArrayDecoder extends src$1.Decoder {
  createByteString(ee) {
    return concat(...ee);
  }
  createByteStringFromHeap(ee, ne) {
    return ee === ne ? new ArrayBuffer(0) : new Uint8Array(this._heap.slice(ee, ne));
  }
}
function decode(Q) {
  const ee = new Uint8Array(Q);
  return new Uint8ArrayDecoder({
    size: ee.byteLength,
    tags: {
      2: (ie) => decodePositiveBigInt(ie),
      3: (ie) => -decodePositiveBigInt(ie),
      [CborTag.Semantic]: (ie) => ie
    }
  }).decodeFirst(ee);
}
var SubmitRequestType;
(function(Q) {
  Q.Call = "call";
})(SubmitRequestType || (SubmitRequestType = {}));
function makeNonce() {
  const Q = new ArrayBuffer(16), ee = new DataView(Q), ne = BigInt(+Date.now()), ie = Math.floor(Math.random() * 4294967295), ae = Math.floor(Math.random() * 4294967295);
  if (typeof ee.setBigUint64 == "function")
    ee.setBigUint64(0, ne);
  else {
    const ce = BigInt(1) << BigInt(32);
    ee.setUint32(0, Number(ne >> BigInt(32))), ee.setUint32(4, Number(ne % ce));
  }
  return ee.setUint32(8, ie), ee.setUint32(12, ae), Q;
}
const NANOSECONDS_PER_MILLISECONDS = BigInt(1e6), REPLICA_PERMITTED_DRIFT_MILLISECONDS = BigInt(60 * 1e3);
class Expiry {
  constructor(ee) {
    this._value = (BigInt(Date.now()) + BigInt(ee) - REPLICA_PERMITTED_DRIFT_MILLISECONDS) * NANOSECONDS_PER_MILLISECONDS;
  }
  toCBOR() {
    return src.value.u64(this._value.toString(16), 16);
  }
  toHash() {
    return lebEncode(this._value);
  }
}
function makeNonceTransform(Q = makeNonce) {
  return async (ee) => {
    ee.endpoint === "call" && (ee.body.nonce = Q());
  };
}
var RequestStatusResponseStatus;
(function(Q) {
  Q.Received = "received", Q.Processing = "processing", Q.Replied = "replied", Q.Rejected = "rejected", Q.Unknown = "unknown", Q.Done = "done";
})(RequestStatusResponseStatus || (RequestStatusResponseStatus = {}));
const DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1e3, IC_ROOT_KEY = "308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d9685f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484b01291091c5f87b98883463f98091a0baaae", IC0_DOMAIN = "ic0.app", IC0_SUB_DOMAIN = ".ic0.app";
class HttpDefaultFetchError extends AgentError {
  constructor(ee) {
    super(ee), this.message = ee;
  }
}
class IdentityInvalidError extends AgentError {
  constructor(ee) {
    super(ee), this.message = ee;
  }
}
function getDefaultFetch() {
  let Q;
  if (typeof window < "u")
    if (window.fetch)
      Q = window.fetch.bind(window);
    else
      throw new HttpDefaultFetchError("Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.");
  else if (typeof global < "u")
    if (global.fetch)
      Q = global.fetch.bind(global);
    else
      throw new HttpDefaultFetchError("Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.");
  else
    typeof self < "u" && self.fetch && (Q = self.fetch.bind(self));
  if (Q)
    return Q;
  throw new HttpDefaultFetchError("Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.");
}
class HttpAgent {
  constructor(ee = {}) {
    if (this.rootKey = fromHex(IC_ROOT_KEY), this._pipeline = [], this._timeDiffMsecs = 0, this._rootKeyFetched = !1, this._retryTimes = 3, this._isAgent = !0, ee.source) {
      if (!(ee.source instanceof HttpAgent))
        throw new Error("An Agent's source can only be another HttpAgent");
      this._pipeline = [...ee.source._pipeline], this._identity = ee.source._identity, this._fetch = ee.source._fetch, this._host = ee.source._host, this._credentials = ee.source._credentials;
    } else
      this._fetch = ee.fetch || getDefaultFetch() || fetch.bind(global);
    if (ee.host !== void 0)
      !ee.host.match(/^[a-z]+:/) && typeof window < "u" ? this._host = new URL(window.location.protocol + "//" + ee.host) : this._host = new URL(ee.host);
    else if (ee.source !== void 0)
      this._host = ee.source._host;
    else {
      const ne = typeof window < "u" ? window.location : void 0;
      if (!ne)
        throw new Error("Must specify a host to connect to.");
      this._host = new URL(ne + "");
    }
    if (ee.retryTimes !== void 0 && (this._retryTimes = ee.retryTimes), this._host.hostname.endsWith(IC0_SUB_DOMAIN) && (this._host.hostname = IC0_DOMAIN), ee.credentials) {
      const { name: ne, password: ie } = ee.credentials;
      this._credentials = `${ne}${ie ? ":" + ie : ""}`;
    }
    this._identity = Promise.resolve(ee.identity || new AnonymousIdentity()), ee.disableNonce || this.addTransform(makeNonceTransform(makeNonce));
  }
  isLocal() {
    const ee = this._host.hostname;
    return ee === "127.0.0.1" || ee.endsWith("localhost");
  }
  addTransform(ee, ne = ee.priority || 0) {
    const ie = this._pipeline.findIndex((ae) => (ae.priority || 0) < ne);
    this._pipeline.splice(ie >= 0 ? ie : this._pipeline.length, 0, Object.assign(ee, { priority: ne }));
  }
  async getPrincipal() {
    if (!this._identity)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    return (await this._identity).getPrincipal();
  }
  async call(ee, ne, ie) {
    const ae = await (ie !== void 0 ? await ie : await this._identity);
    if (!ae)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const ce = Principal$3.from(ee), le = ne.effectiveCanisterId ? Principal$3.from(ne.effectiveCanisterId) : ce, de = ae.getPrincipal() || Principal$3.anonymous();
    let ye = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS);
    Math.abs(this._timeDiffMsecs) > 1e3 * 30 && (ye = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS + this._timeDiffMsecs));
    const he = {
      request_type: SubmitRequestType.Call,
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: de,
      ingress_expiry: ye
    };
    let Be = await this._transform({
      request: {
        body: null,
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "call",
      body: he
    });
    Be = await ae.transformRequest(Be);
    const Ee = encode(Be.body), me = this._requestAndRetry(() => this._fetch("" + new URL(`/api/v2/canister/${le.toText()}/call`, this._host), Object.assign(Object.assign({}, Be.request), { body: Ee }))), [ge, be] = await Promise.all([me, requestIdOf(he)]);
    return {
      requestId: be,
      response: {
        ok: ge.ok,
        status: ge.status,
        statusText: ge.statusText
      }
    };
  }
  async _requestAndRetry(ee, ne = 0) {
    if (ne > this._retryTimes && this._retryTimes !== 0)
      throw new Error(`AgentError: Exceeded configured limit of ${this._retryTimes} retry attempts. Please check your network connection or try again in a few moments`);
    const ie = await ee();
    if (!ie.ok) {
      const ae = await ie.clone().text(), ce = `Server returned an error:
  Code: ${ie.status} (${ie.statusText})
  Body: ${ae}
`;
      if (this._retryTimes > ne)
        return console.warn(ce + "  Retrying request."), await this._requestAndRetry(ee, ne + 1);
      throw new Error(ce);
    }
    return ie;
  }
  async query(ee, ne, ie) {
    const ae = await (ie !== void 0 ? await ie : await this._identity);
    if (!ae)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const ce = typeof ee == "string" ? Principal$3.fromText(ee) : ee, le = (ae == null ? void 0 : ae.getPrincipal()) || Principal$3.anonymous(), de = {
      request_type: "query",
      canister_id: ce,
      method_name: ne.methodName,
      arg: ne.arg,
      sender: le,
      ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
    };
    let ye = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read",
      body: de
    });
    ye = await (ae == null ? void 0 : ae.transformRequest(ye));
    const he = encode(ye.body), Be = await this._requestAndRetry(() => this._fetch("" + new URL(`/api/v2/canister/${ce.toText()}/query`, this._host), Object.assign(Object.assign({}, ye.request), { body: he })));
    return decode(await Be.arrayBuffer());
  }
  async createReadStateRequest(ee, ne) {
    const ie = await (ne !== void 0 ? await ne : await this._identity);
    if (!ie)
      throw new IdentityInvalidError("This identity has expired due this application's security policy. Please refresh your authentication.");
    const ae = (ie == null ? void 0 : ie.getPrincipal()) || Principal$3.anonymous(), ce = await this._transform({
      request: {
        method: "POST",
        headers: Object.assign({ "Content-Type": "application/cbor" }, this._credentials ? { Authorization: "Basic " + btoa(this._credentials) } : {})
      },
      endpoint: "read_state",
      body: {
        request_type: "read_state",
        paths: ee.paths,
        sender: ae,
        ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS)
      }
    });
    return ie == null ? void 0 : ie.transformRequest(ce);
  }
  async readState(ee, ne, ie, ae) {
    const ce = typeof ee == "string" ? Principal$3.fromText(ee) : ee, le = ae != null ? ae : await this.createReadStateRequest(ne, ie), de = encode(le.body), ye = await this._fetch("" + new URL(`/api/v2/canister/${ce}/read_state`, this._host), Object.assign(Object.assign({}, le.request), { body: de }));
    if (!ye.ok)
      throw new Error(`Server returned an error:
  Code: ${ye.status} (${ye.statusText})
  Body: ${await ye.text()}
`);
    return decode(await ye.arrayBuffer());
  }
  async syncTime(ee) {
    const ne = await import("./index.4c1d66a6.js"), ie = Date.now();
    try {
      ee || console.log("Syncing time with the IC. No canisterId provided, so falling back to ryjl3-tyaaa-aaaaa-aaaba-cai");
      const ce = (await ne.request({
        canisterId: ee != null ? ee : Principal$3.from("ryjl3-tyaaa-aaaaa-aaaba-cai"),
        agent: this,
        paths: ["time"]
      })).get("time");
      ce && (this._timeDiffMsecs = Number(ce) - Number(ie));
    } catch (ae) {
      console.error("Caught exception while attempting to sync time:", ae);
    }
  }
  async status() {
    const ee = this._credentials ? {
      Authorization: "Basic " + btoa(this._credentials)
    } : {}, ne = await this._requestAndRetry(() => this._fetch("" + new URL("/api/v2/status", this._host), { headers: ee }));
    return decode(await ne.arrayBuffer());
  }
  async fetchRootKey() {
    return this._rootKeyFetched || (this.rootKey = (await this.status()).root_key, this._rootKeyFetched = !0), this.rootKey;
  }
  invalidateIdentity() {
    this._identity = null;
  }
  replaceIdentity(ee) {
    this._identity = Promise.resolve(ee);
  }
  _transform(ee) {
    let ne = Promise.resolve(ee);
    for (const ie of this._pipeline)
      ne = ne.then((ae) => ie(ae).then((ce) => ce || ae));
    return ne;
  }
}
var ProxyMessageKind;
(function(Q) {
  Q.Error = "err", Q.GetPrincipal = "gp", Q.GetPrincipalResponse = "gpr", Q.Query = "q", Q.QueryResponse = "qr", Q.Call = "c", Q.CallResponse = "cr", Q.ReadState = "rs", Q.ReadStateResponse = "rsr", Q.Status = "s", Q.StatusResponse = "sr";
})(ProxyMessageKind || (ProxyMessageKind = {}));
function getDefaultAgent() {
  const Q = typeof window > "u" ? typeof global > "u" ? typeof self > "u" ? void 0 : self.ic.agent : global.ic.agent : window.ic.agent;
  if (!Q)
    throw new Error("No Agent could be found.");
  return Q;
}
const managementCanisterIdl = ({ IDL: Q }) => {
  const ee = Q.Principal, ne = Q.Record({
    controllers: Q.Vec(Q.Principal),
    freezing_threshold: Q.Nat,
    memory_allocation: Q.Nat,
    compute_allocation: Q.Nat
  }), ie = Q.Record({
    controllers: Q.Opt(Q.Vec(Q.Principal)),
    freezing_threshold: Q.Opt(Q.Nat),
    memory_allocation: Q.Opt(Q.Nat),
    compute_allocation: Q.Opt(Q.Nat)
  }), ae = Q.Vec(Q.Nat8);
  return Q.Service({
    canister_status: Q.Func([Q.Record({ canister_id: ee })], [
      Q.Record({
        status: Q.Variant({
          stopped: Q.Null,
          stopping: Q.Null,
          running: Q.Null
        }),
        memory_size: Q.Nat,
        cycles: Q.Nat,
        settings: ne,
        module_hash: Q.Opt(Q.Vec(Q.Nat8))
      })
    ], []),
    create_canister: Q.Func([Q.Record({ settings: Q.Opt(ie) })], [Q.Record({ canister_id: ee })], []),
    delete_canister: Q.Func([Q.Record({ canister_id: ee })], [], []),
    deposit_cycles: Q.Func([Q.Record({ canister_id: ee })], [], []),
    install_code: Q.Func([
      Q.Record({
        arg: Q.Vec(Q.Nat8),
        wasm_module: ae,
        mode: Q.Variant({
          reinstall: Q.Null,
          upgrade: Q.Null,
          install: Q.Null
        }),
        canister_id: ee
      })
    ], [], []),
    provisional_create_canister_with_cycles: Q.Func([
      Q.Record({
        settings: Q.Opt(ie),
        amount: Q.Opt(Q.Nat)
      })
    ], [Q.Record({ canister_id: ee })], []),
    provisional_top_up_canister: Q.Func([Q.Record({ canister_id: ee, amount: Q.Nat })], [], []),
    raw_rand: Q.Func([], [Q.Vec(Q.Nat8)], []),
    start_canister: Q.Func([Q.Record({ canister_id: ee })], [], []),
    stop_canister: Q.Func([Q.Record({ canister_id: ee })], [], []),
    uninstall_code: Q.Func([Q.Record({ canister_id: ee })], [], []),
    update_settings: Q.Func([
      Q.Record({
        canister_id: Q.Principal,
        settings: ie
      })
    ], [], [])
  });
};
function getManagementCanister(Q) {
  function ee(ne, ie, ae) {
    const ce = ie[0];
    let le = Principal$3.fromHex("");
    return ce && typeof ce == "object" && ce.canister_id && (le = Principal$3.from(ce.canister_id)), { effectiveCanisterId: le };
  }
  return Actor.createActor(managementCanisterIdl, Object.assign(Object.assign(Object.assign({}, Q), { canisterId: Principal$3.fromHex("") }), {
    callTransform: ee,
    queryTransform: ee
  }));
}
const wasmBytesBase64 = "";
let wasm;
const wasmBytes = decode$2(wasmBytesBase64);
function bls_init() {
  return wasm.bls_init();
}
let cachegetUint8Memory0 = null;
function getUint8Memory0() {
  return (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) && (cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer)), cachegetUint8Memory0;
}
function passArray8ToWasm0(Q, ee) {
  const ne = ee(Q.length * 1);
  return getUint8Memory0().set(Q, ne / 1), [ne, Q.length];
}
function bls_verify(Q, ee, ne) {
  const [ie, ae] = passArray8ToWasm0(Q, wasm.__wbindgen_malloc), [ce, le] = passArray8ToWasm0(ee, wasm.__wbindgen_malloc), [de, ye] = passArray8ToWasm0(ne, wasm.__wbindgen_malloc);
  return wasm.bls_verify(ie, ae, ce, le, de, ye);
}
async function load(Q, ee) {
  if (typeof Response == "function" && Q instanceof Response) {
    const ne = await Q.arrayBuffer();
    return await WebAssembly.instantiate(ne, ee);
  } else {
    const ne = await WebAssembly.instantiate(Q, ee);
    return ne instanceof WebAssembly.Instance ? { instance: ne, module: Q } : ne;
  }
}
async function init() {
  const Q = {}, { instance: ee, module: ne } = await load(wasmBytes, Q);
  return wasm = ee.exports, init.__wbindgen_wasm_module = ne, wasm;
}
let verify;
async function blsVerify(Q, ee, ne) {
  if (!verify) {
    if (await init(), bls_init() !== 0)
      throw new Error("Cannot initialize BLS");
    verify = (ie, ae, ce) => bls_verify(ae, ce, ie) === 0;
  }
  return verify(Q, ee, ne);
}
class CertificateVerificationError extends AgentError {
  constructor(ee) {
    super(`Invalid certificate: ${ee}`);
  }
}
function isBufferEqual(Q, ee) {
  if (Q.byteLength !== ee.byteLength)
    return !1;
  const ne = new Uint8Array(Q), ie = new Uint8Array(ee);
  for (let ae = 0; ae < ne.length; ae++)
    if (ne[ae] !== ie[ae])
      return !1;
  return !0;
}
class Certificate {
  constructor(ee, ne, ie, ae) {
    this._rootKey = ne, this._canisterId = ie, this._blsVerify = ae, this.cert = decode(new Uint8Array(ee));
  }
  static async create(ee) {
    let ne = ee.blsVerify;
    ne || (ne = blsVerify);
    const ie = new Certificate(ee.certificate, ee.rootKey, ee.canisterId, ne);
    return await ie.verify(), ie;
  }
  lookup(ee) {
    return lookup_path(ee, this.cert.tree);
  }
  async verify() {
    const ee = await reconstruct(this.cert.tree), ne = await this._checkDelegationAndGetKey(this.cert.delegation), ie = this.cert.signature, ae = extractDER(ne), ce = concat(domain_sep("ic-state-root"), ee);
    let le = !1;
    try {
      le = await this._blsVerify(new Uint8Array(ae), new Uint8Array(ie), new Uint8Array(ce));
    } catch {
      le = !1;
    }
    if (!le)
      throw new CertificateVerificationError("Signature verification failed");
  }
  async _checkDelegationAndGetKey(ee) {
    if (!ee)
      return this._rootKey;
    const ne = await Certificate.create({
      certificate: ee.certificate,
      rootKey: this._rootKey,
      canisterId: this._canisterId
    }), ie = ne.lookup(["subnet", ee.subnet_id, "canister_ranges"]);
    if (!ie)
      throw new CertificateVerificationError(`Could not find canister ranges for subnet 0x${toHex(ee.subnet_id)}`);
    if (!decode(ie).map((ye) => [
      Principal$3.fromUint8Array(ye[0]),
      Principal$3.fromUint8Array(ye[1])
    ]).some((ye) => ye[0].ltEq(this._canisterId) && ye[1].gtEq(this._canisterId)))
      throw new CertificateVerificationError(`Canister ${this._canisterId} not in range of delegations for subnet 0x${toHex(ee.subnet_id)}`);
    const de = ne.lookup(["subnet", ee.subnet_id, "public_key"]);
    if (!de)
      throw new Error(`Could not find subnet key for subnet 0x${toHex(ee.subnet_id)}`);
    return de;
  }
}
const DER_PREFIX = fromHex("308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100"), KEY_LENGTH = 96;
function extractDER(Q) {
  const ee = DER_PREFIX.byteLength + KEY_LENGTH;
  if (Q.byteLength !== ee)
    throw new TypeError(`BLS DER-encoded public key must be ${ee} bytes long`);
  const ne = Q.slice(0, DER_PREFIX.byteLength);
  if (!isBufferEqual(ne, DER_PREFIX))
    throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${ne}`);
  return Q.slice(DER_PREFIX.byteLength);
}
async function reconstruct(Q) {
  switch (Q[0]) {
    case 0:
      return hash(domain_sep("ic-hashtree-empty"));
    case 4:
      return Q[1];
    case 3:
      return hash(concat(domain_sep("ic-hashtree-leaf"), Q[1]));
    case 2:
      return hash(concat(domain_sep("ic-hashtree-labeled"), Q[1], await reconstruct(Q[2])));
    case 1:
      return hash(concat(domain_sep("ic-hashtree-fork"), await reconstruct(Q[1]), await reconstruct(Q[2])));
    default:
      throw new Error("unreachable");
  }
}
function domain_sep(Q) {
  const ee = new Uint8Array([Q.length]), ne = new TextEncoder().encode(Q);
  return concat(ee, ne);
}
function lookup_path(Q, ee) {
  if (Q.length === 0)
    switch (ee[0]) {
      case 3:
        return new Uint8Array(ee[1]).buffer;
      default:
        return;
    }
  const ne = typeof Q[0] == "string" ? new TextEncoder().encode(Q[0]) : Q[0], ie = find_label(ne, flatten_forks(ee));
  if (ie)
    return lookup_path(Q.slice(1), ie);
}
function flatten_forks(Q) {
  switch (Q[0]) {
    case 0:
      return [];
    case 1:
      return flatten_forks(Q[1]).concat(flatten_forks(Q[2]));
    default:
      return [Q];
  }
}
function find_label(Q, ee) {
  if (ee.length !== 0) {
    for (const ne of ee)
      if (ne[0] === 2) {
        const ie = ne[1];
        if (isBufferEqual(Q, ie))
          return ne[2];
      }
  }
}
const FIVE_MINUTES_IN_MSEC = 5 * 60 * 1e3;
function defaultStrategy() {
  return chain(conditionalDelay(once$1(), 1e3), backoff(1e3, 1.2), timeout(FIVE_MINUTES_IN_MSEC));
}
function once$1() {
  let Q = !0;
  return async () => Q ? (Q = !1, !0) : !1;
}
function conditionalDelay(Q, ee) {
  return async (ne, ie, ae) => {
    if (await Q(ne, ie, ae))
      return new Promise((ce) => setTimeout(ce, ee));
  };
}
function timeout(Q) {
  const ee = Date.now() + Q;
  return async (ne, ie, ae) => {
    if (Date.now() > ee)
      throw new Error(`Request timed out after ${Q} msec:
  Request ID: ${toHex(ie)}
  Request status: ${ae}
`);
  };
}
function backoff(Q, ee) {
  let ne = Q;
  return () => new Promise((ie) => setTimeout(() => {
    ne *= ee, ie();
  }, ne));
}
function chain(...Q) {
  return async (ee, ne, ie) => {
    for (const ae of Q)
      await ae(ee, ne, ie);
  };
}
async function pollForResponse(Q, ee, ne, ie, ae, ce) {
  var le;
  const de = [new TextEncoder().encode("request_status"), ne], ye = ae != null ? ae : await ((le = Q.createReadStateRequest) === null || le === void 0 ? void 0 : le.call(Q, { paths: [de] })), he = await Q.readState(ee, { paths: [de] }, void 0, ye);
  if (Q.rootKey == null)
    throw new Error("Agent root key not initialized before polling");
  const Be = await Certificate.create({
    certificate: he.certificate,
    rootKey: Q.rootKey,
    canisterId: ee,
    blsVerify: ce
  }), Ee = Be.lookup([...de, new TextEncoder().encode("status")]);
  let me;
  switch (typeof Ee > "u" ? me = RequestStatusResponseStatus.Unknown : me = new TextDecoder().decode(Ee), me) {
    case RequestStatusResponseStatus.Replied:
      return Be.lookup([...de, "reply"]);
    case RequestStatusResponseStatus.Received:
    case RequestStatusResponseStatus.Unknown:
    case RequestStatusResponseStatus.Processing:
      return await ie(ee, ne, me), pollForResponse(Q, ee, ne, ie, ye);
    case RequestStatusResponseStatus.Rejected: {
      const ge = new Uint8Array(Be.lookup([...de, "reject_code"]))[0], be = new TextDecoder().decode(Be.lookup([...de, "reject_message"]));
      throw new Error(`Call was rejected:
  Request ID: ${toHex(ne)}
  Reject code: ${ge}
  Reject text: ${be}
`);
    }
    case RequestStatusResponseStatus.Done:
      throw new Error(`Call was marked as done but we never saw the reply:
  Request ID: ${toHex(ne)}
`);
  }
  throw new Error("unreachable");
}
class ActorCallError extends AgentError {
  constructor(ee, ne, ie, ae) {
    super([
      "Call failed:",
      `  Canister: ${ee.toText()}`,
      `  Method: ${ne} (${ie})`,
      ...Object.getOwnPropertyNames(ae).map((ce) => `  "${ce}": ${JSON.stringify(ae[ce])}`)
    ].join(`
`)), this.canisterId = ee, this.methodName = ne, this.type = ie, this.props = ae;
  }
}
class QueryCallRejectedError extends ActorCallError {
  constructor(ee, ne, ie) {
    var ae;
    super(ee, ne, "query", {
      Status: ie.status,
      Code: (ae = ReplicaRejectCode[ie.reject_code]) !== null && ae !== void 0 ? ae : `Unknown Code "${ie.reject_code}"`,
      Message: ie.reject_message
    }), this.result = ie;
  }
}
class UpdateCallRejectedError extends ActorCallError {
  constructor(ee, ne, ie, ae) {
    super(ee, ne, "update", {
      "Request ID": toHex(ie),
      "HTTP status code": ae.status.toString(),
      "HTTP status text": ae.statusText
    }), this.requestId = ie, this.response = ae;
  }
}
var CanisterInstallMode;
(function(Q) {
  Q.Install = "install", Q.Reinstall = "reinstall", Q.Upgrade = "upgrade";
})(CanisterInstallMode || (CanisterInstallMode = {}));
const metadataSymbol = Symbol.for("ic-agent-metadata");
class Actor {
  constructor(ee) {
    this[metadataSymbol] = Object.freeze(ee);
  }
  static agentOf(ee) {
    return ee[metadataSymbol].config.agent;
  }
  static interfaceOf(ee) {
    return ee[metadataSymbol].service;
  }
  static canisterIdOf(ee) {
    return Principal$3.from(ee[metadataSymbol].config.canisterId);
  }
  static async install(ee, ne) {
    const ie = ee.mode === void 0 ? CanisterInstallMode.Install : ee.mode, ae = ee.arg ? [...new Uint8Array(ee.arg)] : [], ce = [...new Uint8Array(ee.module)], le = typeof ne.canisterId == "string" ? Principal$3.fromText(ne.canisterId) : ne.canisterId;
    await getManagementCanister(ne).install_code({
      mode: { [ie]: null },
      arg: ae,
      wasm_module: ce,
      canister_id: le
    });
  }
  static async createCanister(ee) {
    const { canister_id: ne } = await getManagementCanister(ee || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });
    return ne;
  }
  static async createAndInstallCanister(ee, ne, ie) {
    const ae = await this.createCanister(ie);
    return await this.install(Object.assign({}, ne), Object.assign(Object.assign({}, ie), { canisterId: ae })), this.createActor(ee, Object.assign(Object.assign({}, ie), { canisterId: ae }));
  }
  static createActorClass(ee) {
    const ne = ee({ IDL });
    class ie extends Actor {
      constructor(ce) {
        const le = typeof ce.canisterId == "string" ? Principal$3.fromText(ce.canisterId) : ce.canisterId;
        super({
          config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), ce), { canisterId: le }),
          service: ne
        });
        for (const [de, ye] of ne._fields)
          this[de] = _createActorMethod(this, de, ye, ce.blsVerify);
      }
    }
    return ie;
  }
  static createActor(ee, ne) {
    return new (this.createActorClass(ee))(ne);
  }
}
function decodeReturnValue(Q, ee) {
  const ne = decode$1(Q, buffer$1.Buffer.from(ee));
  switch (ne.length) {
    case 0:
      return;
    case 1:
      return ne[0];
    default:
      return ne;
  }
}
const DEFAULT_ACTOR_CONFIG = {
  pollingStrategyFactory: defaultStrategy
};
function _createActorMethod(Q, ee, ne, ie) {
  let ae;
  ne.annotations.includes("query") ? ae = async (le, ...de) => {
    var ye, he;
    le = Object.assign(Object.assign({}, le), (he = (ye = Q[metadataSymbol].config).queryTransform) === null || he === void 0 ? void 0 : he.call(ye, ee, de, Object.assign(Object.assign({}, Q[metadataSymbol].config), le)));
    const Be = le.agent || Q[metadataSymbol].config.agent || getDefaultAgent(), Ee = Principal$3.from(le.canisterId || Q[metadataSymbol].config.canisterId), me = encode$1(ne.argTypes, de), ge = await Be.query(Ee, { methodName: ee, arg: me });
    switch (ge.status) {
      case "rejected":
        throw new QueryCallRejectedError(Ee, ee, ge);
      case "replied":
        return decodeReturnValue(ne.retTypes, ge.reply.arg);
    }
  } : ae = async (le, ...de) => {
    var ye, he;
    le = Object.assign(Object.assign({}, le), (he = (ye = Q[metadataSymbol].config).callTransform) === null || he === void 0 ? void 0 : he.call(ye, ee, de, Object.assign(Object.assign({}, Q[metadataSymbol].config), le)));
    const Be = le.agent || Q[metadataSymbol].config.agent || getDefaultAgent(), { canisterId: Ee, effectiveCanisterId: me, pollingStrategyFactory: ge } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), Q[metadataSymbol].config), le), be = Principal$3.from(Ee), we = me !== void 0 ? Principal$3.from(me) : be, Oe = encode$1(ne.argTypes, de), { requestId: He, response: Se } = await Be.call(be, {
      methodName: ee,
      arg: Oe,
      effectiveCanisterId: we
    });
    if (!Se.ok)
      throw new UpdateCallRejectedError(be, ee, He, Se);
    const Ge = ge(), Fe = await pollForResponse(Be, we, He, Ge, ie);
    if (Fe !== void 0)
      return decodeReturnValue(ne.retTypes, Fe);
    if (ne.retTypes.length === 0)
      return;
    throw new Error(`Call was returned undefined, but type [${ne.retTypes.join(",")}].`);
  };
  const ce = (...le) => ae({}, ...le);
  return ce.withOptions = (le) => (...de) => ae(le, ...de), ce;
}
const idlFactory = ({ IDL: Q }) => {
  const ee = Q.Record({
    token_id: Q.Int,
    name: Q.Text,
    canister_id: Q.Principal
  }), ne = Q.Record({
    id: Q.Text,
    host_escrow: Q.Vec(ee),
    host_data: Q.Vec(ee),
    fulfilled: Q.Bool,
    host: Q.Principal,
    guest_data: Q.Vec(ee),
    host_accept: Q.Bool,
    guest_escrow: Q.Vec(ee),
    guest: Q.Principal,
    guest_accept: Q.Bool
  });
  return Q.Service({
    accept: Q.Func([Q.Text], [ne], []),
    add_item_to_escrow: Q.Func([Q.Text, ee], [ne], []),
    add_item_to_trade: Q.Func([Q.Text, ee], [ne], []),
    cancel: Q.Func([Q.Text], [ne], []),
    create_trade: Q.Func([], [ne], []),
    delete_trade: Q.Func([Q.Text], [ne], []),
    get_all_trades: Q.Func([], [Q.Vec(ne)], ["query"]),
    get_escrow_items: Q.Func([Q.Text], [Q.Vec(ee)], ["query"]),
    get_escrow_items_self: Q.Func([Q.Text], [Q.Vec(ee)], ["query"]),
    get_trade_by_id: Q.Func([Q.Text], [Q.Opt(ne)], ["query"]),
    join_trade: Q.Func([Q.Text], [ne], []),
    leave_trade: Q.Func([Q.Text], [ne], []),
    remove_item_from_escrow: Q.Func([Q.Text, ee], [ne], []),
    remove_item_from_trade: Q.Func([Q.Text, ee], [ne], []),
    withdraw_from_escrow: Q.Func([Q.Text, ee], [ee], [])
  });
}, canister_id$1 = "rrkah-fqaaa-aaaaa-aaaaq-cai", createActor = (Q, ee = {}) => {
  const ne = ee.agent || new HttpAgent({ ...ee.agentOptions });
  return ee.agent && ee.agentOptions && console.warn(
    "Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."
  ), ne.fetchRootKey().catch((ie) => {
    console.warn(
      "Unable to fetch root key. Check to ensure that your local replica is running"
    ), console.error(ie);
  }), Actor.createActor(idlFactory, {
    agent: ne,
    canister_id: Q,
    ...ee.actorOptions
  });
}, trade_canister = createActor(canister_id$1, {
  agentOptions: {
    host: "http://127.0.0.1:4943"
  }
});
var stylis_min = { exports: {} };
(function(Q, ee) {
  (function(ne) {
    Q.exports = ne(null);
  })(function ne(ie) {
    var ae = /^\0+/g, ce = /[\0\r\f]/g, le = /: */g, de = /zoo|gra/, ye = /([,: ])(transform)/g, he = /,+\s*(?![^(]*[)])/g, Be = / +\s*(?![^(]*[)])/g, Ee = / *[\0] */g, me = /,\r+?/g, ge = /([\t\r\n ])*\f?&/g, be = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g, we = /\W+/g, Oe = /@(k\w+)\s*(\S*)\s*/, He = /::(place)/g, Se = /:(read-only)/g, Ge = /\s+(?=[{\];=:>])/g, Fe = /([[}=:>])\s+/g, Pe = /(\{[^{]+?);(?=\})/g, We = /\s{2,}/g, tt = /([^\(])(:+) */g, Et = /[svh]\w+-[tblr]{2}/, Nt = /\(\s*(.*)\s*\)/g, et = /([\s\S]*?);/g, mt = /-self|flex-/g, Mt = /[^]*?(:[rp][el]a[\w-]+)[^]*/, Ot = /stretch|:\s*\w+\-(?:conte|avail)/, yt = /([^-])(image-set\()/, Qt = "-webkit-", Yt = "-moz-", jt = "-ms-", $t = 59, Wt = 125, st = 123, at = 40, wt = 41, Ut = 91, $e = 93, ir = 10, tr = 13, ar = 9, ht = 64, qt = 32, Xe = 38, nt = 45, je = 95, It = 42, lt = 44, Ye = 58, _e = 39, Ie = 34, Ce = 47, ke = 62, Ve = 43, Ze = 126, ct = 0, kt = 12, Jt = 11, Kt = 107, Zt = 109, De = 115, Te = 112, Re = 111, ot = 105, bt = 99, Pt = 100, Vt = 112, Ir = 1, mr = 1, _r = 0, Br = 1, Tr = 1, cn = 1, oi = 0, un = 0, Yn = 0, Vn = [], Dn = [], Ln = 0, di = null, yi = -2, Zi = -1, ki = 0, Pn = 1, ni = 2, Xn = 3, fi = 0, Bi = 1, Ci = "", Ii = "", Ft = "";
    function sr(nn, Kr, xt, Sr, Xt) {
      for (var Vr, qe, Ke = 0, At = 0, gt = 0, dt = 0, er = 0, dr = 0, ur = 0, Rr = 0, Jr = 0, Mr = 0, Zr = 0, Rn = 0, Fn = 0, Gn = 0, qr = 0, jr = 0, bn = 0, gn = 0, sn = 0, On = xt.length, ii = On - 1, xn = "", Wr = "", Cn = "", zn = "", Qi = "", Mi = ""; qr < On; ) {
        if (ur = xt.charCodeAt(qr), qr === ii && At + dt + gt + Ke !== 0 && (At !== 0 && (ur = At === Ce ? ir : Ce), dt = gt = Ke = 0, On++, ii++), At + dt + gt + Ke === 0) {
          if (qr === ii && (jr > 0 && (Wr = Wr.replace(ce, "")), Wr.trim().length > 0)) {
            switch (ur) {
              case qt:
              case ar:
              case $t:
              case tr:
              case ir:
                break;
              default:
                Wr += xt.charAt(qr);
            }
            ur = $t;
          }
          if (bn === 1)
            switch (ur) {
              case st:
              case Wt:
              case $t:
              case Ie:
              case _e:
              case at:
              case wt:
              case lt:
                bn = 0;
              case ar:
              case tr:
              case ir:
              case qt:
                break;
              default:
                for (bn = 0, sn = qr, er = ur, qr--, ur = $t; sn < On; )
                  switch (xt.charCodeAt(sn++)) {
                    case ir:
                    case tr:
                    case $t:
                      ++qr, ur = er, sn = On;
                      break;
                    case Ye:
                      jr > 0 && (++qr, ur = er);
                    case st:
                      sn = On;
                  }
            }
          switch (ur) {
            case st:
              for (er = (Wr = Wr.trim()).charCodeAt(0), Zr = 1, sn = ++qr; qr < On; ) {
                switch (ur = xt.charCodeAt(qr)) {
                  case st:
                    Zr++;
                    break;
                  case Wt:
                    Zr--;
                    break;
                  case Ce:
                    switch (dr = xt.charCodeAt(qr + 1)) {
                      case It:
                      case Ce:
                        qr = kn(dr, qr, ii, xt);
                    }
                    break;
                  case Ut:
                    ur++;
                  case at:
                    ur++;
                  case Ie:
                  case _e:
                    for (; qr++ < ii && xt.charCodeAt(qr) !== ur; )
                      ;
                }
                if (Zr === 0)
                  break;
                qr++;
              }
              switch (Cn = xt.substring(sn, qr), er === ct && (er = (Wr = Wr.replace(ae, "").trim()).charCodeAt(0)), er) {
                case ht:
                  switch (jr > 0 && (Wr = Wr.replace(ce, "")), dr = Wr.charCodeAt(1)) {
                    case Pt:
                    case Zt:
                    case De:
                    case nt:
                      Vr = Kr;
                      break;
                    default:
                      Vr = Vn;
                  }
                  if (sn = (Cn = sr(Kr, Vr, Cn, dr, Xt + 1)).length, Yn > 0 && sn === 0 && (sn = Wr.length), Ln > 0 && (Vr = Gr(Vn, Wr, gn), qe = vn(Xn, Cn, Vr, Kr, mr, Ir, sn, dr, Xt, Sr), Wr = Vr.join(""), qe !== void 0 && (sn = (Cn = qe.trim()).length) === 0 && (dr = 0, Cn = "")), sn > 0)
                    switch (dr) {
                      case De:
                        Wr = Wr.replace(Nt, _n);
                      case Pt:
                      case Zt:
                      case nt:
                        Cn = Wr + "{" + Cn + "}";
                        break;
                      case Kt:
                        Cn = (Wr = Wr.replace(Oe, "$1 $2" + (Bi > 0 ? Ci : ""))) + "{" + Cn + "}", Tr === 1 || Tr === 2 && Tn("@" + Cn, 3) ? Cn = "@" + Qt + Cn + "@" + Cn : Cn = "@" + Cn;
                        break;
                      default:
                        Cn = Wr + Cn, Sr === Vt && (zn += Cn, Cn = "");
                    }
                  else
                    Cn = "";
                  break;
                default:
                  Cn = sr(Kr, Gr(Kr, Wr, gn), Cn, Sr, Xt + 1);
              }
              Qi += Cn, Rn = 0, bn = 0, Gn = 0, jr = 0, gn = 0, Fn = 0, Wr = "", Cn = "", ur = xt.charCodeAt(++qr);
              break;
            case Wt:
            case $t:
              if ((sn = (Wr = (jr > 0 ? Wr.replace(ce, "") : Wr).trim()).length) > 1)
                switch (Gn === 0 && ((er = Wr.charCodeAt(0)) === nt || er > 96 && er < 123) && (sn = (Wr = Wr.replace(" ", ":")).length), Ln > 0 && (qe = vn(Pn, Wr, Kr, nn, mr, Ir, zn.length, Sr, Xt, Sr)) !== void 0 && (sn = (Wr = qe.trim()).length) === 0 && (Wr = "\0\0"), er = Wr.charCodeAt(0), dr = Wr.charCodeAt(1), er) {
                  case ct:
                    break;
                  case ht:
                    if (dr === ot || dr === bt) {
                      Mi += Wr + xt.charAt(qr);
                      break;
                    }
                  default:
                    if (Wr.charCodeAt(sn - 1) === Ye)
                      break;
                    zn += wn(Wr, er, dr, Wr.charCodeAt(2));
                }
              Rn = 0, bn = 0, Gn = 0, jr = 0, gn = 0, Wr = "", ur = xt.charCodeAt(++qr);
          }
        }
        switch (ur) {
          case tr:
          case ir:
            if (At + dt + gt + Ke + un === 0)
              switch (Mr) {
                case wt:
                case _e:
                case Ie:
                case ht:
                case Ze:
                case ke:
                case It:
                case Ve:
                case Ce:
                case nt:
                case Ye:
                case lt:
                case $t:
                case st:
                case Wt:
                  break;
                default:
                  Gn > 0 && (bn = 1);
              }
            At === Ce ? At = 0 : Br + Rn === 0 && Sr !== Kt && Wr.length > 0 && (jr = 1, Wr += "\0"), Ln * fi > 0 && vn(ki, Wr, Kr, nn, mr, Ir, zn.length, Sr, Xt, Sr), Ir = 1, mr++;
            break;
          case $t:
          case Wt:
            if (At + dt + gt + Ke === 0) {
              Ir++;
              break;
            }
          default:
            switch (Ir++, xn = xt.charAt(qr), ur) {
              case ar:
              case qt:
                if (dt + Ke + At === 0)
                  switch (Rr) {
                    case lt:
                    case Ye:
                    case ar:
                    case qt:
                      xn = "";
                      break;
                    default:
                      ur !== qt && (xn = " ");
                  }
                break;
              case ct:
                xn = "\\0";
                break;
              case kt:
                xn = "\\f";
                break;
              case Jt:
                xn = "\\v";
                break;
              case Xe:
                dt + At + Ke === 0 && Br > 0 && (gn = 1, jr = 1, xn = "\f" + xn);
                break;
              case 108:
                if (dt + At + Ke + _r === 0 && Gn > 0)
                  switch (qr - Gn) {
                    case 2:
                      Rr === Te && xt.charCodeAt(qr - 3) === Ye && (_r = Rr);
                    case 8:
                      Jr === Re && (_r = Jr);
                  }
                break;
              case Ye:
                dt + At + Ke === 0 && (Gn = qr);
                break;
              case lt:
                At + gt + dt + Ke === 0 && (jr = 1, xn += "\r");
                break;
              case Ie:
              case _e:
                At === 0 && (dt = dt === ur ? 0 : dt === 0 ? ur : dt);
                break;
              case Ut:
                dt + At + gt === 0 && Ke++;
                break;
              case $e:
                dt + At + gt === 0 && Ke--;
                break;
              case wt:
                dt + At + Ke === 0 && gt--;
                break;
              case at:
                if (dt + At + Ke === 0) {
                  if (Rn === 0)
                    switch (2 * Rr + 3 * Jr) {
                      case 533:
                        break;
                      default:
                        Zr = 0, Rn = 1;
                    }
                  gt++;
                }
                break;
              case ht:
                At + gt + dt + Ke + Gn + Fn === 0 && (Fn = 1);
                break;
              case It:
              case Ce:
                if (dt + Ke + gt > 0)
                  break;
                switch (At) {
                  case 0:
                    switch (2 * ur + 3 * xt.charCodeAt(qr + 1)) {
                      case 235:
                        At = Ce;
                        break;
                      case 220:
                        sn = qr, At = It;
                    }
                    break;
                  case It:
                    ur === Ce && Rr === It && sn + 2 !== qr && (xt.charCodeAt(sn + 2) === 33 && (zn += xt.substring(sn, qr + 1)), xn = "", At = 0);
                }
            }
            if (At === 0) {
              if (Br + dt + Ke + Fn === 0 && Sr !== Kt && ur !== $t)
                switch (ur) {
                  case lt:
                  case Ze:
                  case ke:
                  case Ve:
                  case wt:
                  case at:
                    if (Rn === 0) {
                      switch (Rr) {
                        case ar:
                        case qt:
                        case ir:
                        case tr:
                          xn += "\0";
                          break;
                        default:
                          xn = "\0" + xn + (ur === lt ? "" : "\0");
                      }
                      jr = 1;
                    } else
                      switch (ur) {
                        case at:
                          Gn + 7 === qr && Rr === 108 && (Gn = 0), Rn = ++Zr;
                          break;
                        case wt:
                          (Rn = --Zr) == 0 && (jr = 1, xn += "\0");
                      }
                    break;
                  case ar:
                  case qt:
                    switch (Rr) {
                      case ct:
                      case st:
                      case Wt:
                      case $t:
                      case lt:
                      case kt:
                      case ar:
                      case qt:
                      case ir:
                      case tr:
                        break;
                      default:
                        Rn === 0 && (jr = 1, xn += "\0");
                    }
                }
              Wr += xn, ur !== qt && ur !== ar && (Mr = ur);
            }
        }
        Jr = Rr, Rr = ur, qr++;
      }
      if (sn = zn.length, Yn > 0 && sn === 0 && Qi.length === 0 && Kr[0].length !== 0 && (Sr !== Zt || Kr.length === 1 && (Br > 0 ? Ii : Ft) === Kr[0]) && (sn = Kr.join(",").length + 2), sn > 0) {
        if (Vr = Br === 0 && Sr !== Kt ? function(Eo) {
          for (var Ao, xi, na = 0, da = Eo.length, Ca = Array(da); na < da; ++na) {
            for (var ia = Eo[na].split(Ee), wo = "", _o = 0, Mn = 0, Qr = 0, yn = 0, hi = ia.length; _o < hi; ++_o)
              if (!((Mn = (xi = ia[_o]).length) === 0 && hi > 1)) {
                if (Qr = wo.charCodeAt(wo.length - 1), yn = xi.charCodeAt(0), Ao = "", _o !== 0)
                  switch (Qr) {
                    case It:
                    case Ze:
                    case ke:
                    case Ve:
                    case qt:
                    case at:
                      break;
                    default:
                      Ao = " ";
                  }
                switch (yn) {
                  case Xe:
                    xi = Ao + Ii;
                  case Ze:
                  case ke:
                  case Ve:
                  case qt:
                  case wt:
                  case at:
                    break;
                  case Ut:
                    xi = Ao + xi + Ii;
                    break;
                  case Ye:
                    switch (2 * xi.charCodeAt(1) + 3 * xi.charCodeAt(2)) {
                      case 530:
                        if (cn > 0) {
                          xi = Ao + xi.substring(8, Mn - 1);
                          break;
                        }
                      default:
                        (_o < 1 || ia[_o - 1].length < 1) && (xi = Ao + Ii + xi);
                    }
                    break;
                  case lt:
                    Ao = "";
                  default:
                    Mn > 1 && xi.indexOf(":") > 0 ? xi = Ao + xi.replace(tt, "$1" + Ii + "$2") : xi = Ao + xi + Ii;
                }
                wo += xi;
              }
            Ca[na] = wo.replace(ce, "").trim();
          }
          return Ca;
        }(Kr) : Kr, Ln > 0 && (qe = vn(ni, zn, Vr, nn, mr, Ir, sn, Sr, Xt, Sr)) !== void 0 && (zn = qe).length === 0)
          return Mi + zn + Qi;
        if (zn = Vr.join(",") + "{" + zn + "}", Tr * _r != 0) {
          switch (Tr === 2 && !Tn(zn, 2) && (_r = 0), _r) {
            case Re:
              zn = zn.replace(Se, ":" + Yt + "$1") + zn;
              break;
            case Te:
              zn = zn.replace(He, "::" + Qt + "input-$1") + zn.replace(He, "::" + Yt + "$1") + zn.replace(He, ":" + jt + "input-$1") + zn;
          }
          _r = 0;
        }
      }
      return Mi + zn + Qi;
    }
    function Gr(nn, Kr, xt) {
      var Sr = Kr.trim().split(me), Xt = Sr, Vr = Sr.length, qe = nn.length;
      switch (qe) {
        case 0:
        case 1:
          for (var Ke = 0, At = qe === 0 ? "" : nn[0] + " "; Ke < Vr; ++Ke)
            Xt[Ke] = zr(At, Xt[Ke], xt, qe).trim();
          break;
        default:
          Ke = 0;
          var gt = 0;
          for (Xt = []; Ke < Vr; ++Ke)
            for (var dt = 0; dt < qe; ++dt)
              Xt[gt++] = zr(nn[dt] + " ", Sr[Ke], xt, qe).trim();
      }
      return Xt;
    }
    function zr(nn, Kr, xt, Sr) {
      var Xt = Kr, Vr = Xt.charCodeAt(0);
      switch (Vr < 33 && (Vr = (Xt = Xt.trim()).charCodeAt(0)), Vr) {
        case Xe:
          switch (Br + Sr) {
            case 0:
            case 1:
              if (nn.trim().length === 0)
                break;
            default:
              return Xt.replace(ge, "$1" + nn.trim());
          }
          break;
        case Ye:
          switch (Xt.charCodeAt(1)) {
            case 103:
              if (cn > 0 && Br > 0)
                return Xt.replace(be, "$1").replace(ge, "$1" + Ft);
              break;
            default:
              return nn.trim() + Xt.replace(ge, "$1" + nn.trim());
          }
        default:
          if (xt * Br > 0 && Xt.indexOf("\f") > 0)
            return Xt.replace(ge, (nn.charCodeAt(0) === Ye ? "" : "$1") + nn.trim());
      }
      return nn + Xt;
    }
    function wn(nn, Kr, xt, Sr) {
      var Xt, Vr = 0, qe = nn + ";", Ke = 2 * Kr + 3 * xt + 4 * Sr;
      if (Ke === 944)
        return function(At) {
          var gt = At.length, dt = At.indexOf(":", 9) + 1, er = At.substring(0, dt).trim(), dr = At.substring(dt, gt - 1).trim();
          switch (At.charCodeAt(9) * Bi) {
            case 0:
              break;
            case nt:
              if (At.charCodeAt(10) !== 110)
                break;
            default:
              for (var ur = dr.split((dr = "", he)), Rr = 0, dt = 0, gt = ur.length; Rr < gt; dt = 0, ++Rr) {
                for (var Jr = ur[Rr], Mr = Jr.split(Be); Jr = Mr[dt]; ) {
                  var Zr = Jr.charCodeAt(0);
                  if (Bi === 1 && (Zr > ht && Zr < 90 || Zr > 96 && Zr < 123 || Zr === je || Zr === nt && Jr.charCodeAt(1) !== nt))
                    switch (isNaN(parseFloat(Jr)) + (Jr.indexOf("(") !== -1)) {
                      case 1:
                        switch (Jr) {
                          case "infinite":
                          case "alternate":
                          case "backwards":
                          case "running":
                          case "normal":
                          case "forwards":
                          case "both":
                          case "none":
                          case "linear":
                          case "ease":
                          case "ease-in":
                          case "ease-out":
                          case "ease-in-out":
                          case "paused":
                          case "reverse":
                          case "alternate-reverse":
                          case "inherit":
                          case "initial":
                          case "unset":
                          case "step-start":
                          case "step-end":
                            break;
                          default:
                            Jr += Ci;
                        }
                    }
                  Mr[dt++] = Jr;
                }
                dr += (Rr === 0 ? "" : ",") + Mr.join(" ");
              }
          }
          return dr = er + dr + ";", Tr === 1 || Tr === 2 && Tn(dr, 1) ? Qt + dr + dr : dr;
        }(qe);
      if (Tr === 0 || Tr === 2 && !Tn(qe, 1))
        return qe;
      switch (Ke) {
        case 1015:
          return qe.charCodeAt(10) === 97 ? Qt + qe + qe : qe;
        case 951:
          return qe.charCodeAt(3) === 116 ? Qt + qe + qe : qe;
        case 963:
          return qe.charCodeAt(5) === 110 ? Qt + qe + qe : qe;
        case 1009:
          if (qe.charCodeAt(4) !== 100)
            break;
        case 969:
        case 942:
          return Qt + qe + qe;
        case 978:
          return Qt + qe + Yt + qe + qe;
        case 1019:
        case 983:
          return Qt + qe + Yt + qe + jt + qe + qe;
        case 883:
          return qe.charCodeAt(8) === nt ? Qt + qe + qe : qe.indexOf("image-set(", 11) > 0 ? qe.replace(yt, "$1" + Qt + "$2") + qe : qe;
        case 932:
          if (qe.charCodeAt(4) === nt)
            switch (qe.charCodeAt(5)) {
              case 103:
                return Qt + "box-" + qe.replace("-grow", "") + Qt + qe + jt + qe.replace("grow", "positive") + qe;
              case 115:
                return Qt + qe + jt + qe.replace("shrink", "negative") + qe;
              case 98:
                return Qt + qe + jt + qe.replace("basis", "preferred-size") + qe;
            }
          return Qt + qe + jt + qe + qe;
        case 964:
          return Qt + qe + jt + "flex-" + qe + qe;
        case 1023:
          if (qe.charCodeAt(8) !== 99)
            break;
          return Xt = qe.substring(qe.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify"), Qt + "box-pack" + Xt + Qt + qe + jt + "flex-pack" + Xt + qe;
        case 1005:
          return de.test(qe) ? qe.replace(le, ":" + Qt) + qe.replace(le, ":" + Yt) + qe : qe;
        case 1e3:
          switch (Vr = (Xt = qe.substring(13).trim()).indexOf("-") + 1, Xt.charCodeAt(0) + Xt.charCodeAt(Vr)) {
            case 226:
              Xt = qe.replace(Et, "tb");
              break;
            case 232:
              Xt = qe.replace(Et, "tb-rl");
              break;
            case 220:
              Xt = qe.replace(Et, "lr");
              break;
            default:
              return qe;
          }
          return Qt + qe + jt + Xt + qe;
        case 1017:
          if (qe.indexOf("sticky", 9) === -1)
            return qe;
        case 975:
          switch (Vr = (qe = nn).length - 10, Ke = (Xt = (qe.charCodeAt(Vr) === 33 ? qe.substring(0, Vr) : qe).substring(nn.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | Xt.charCodeAt(7))) {
            case 203:
              if (Xt.charCodeAt(8) < 111)
                break;
            case 115:
              qe = qe.replace(Xt, Qt + Xt) + ";" + qe;
              break;
            case 207:
            case 102:
              qe = qe.replace(Xt, Qt + (Ke > 102 ? "inline-" : "") + "box") + ";" + qe.replace(Xt, Qt + Xt) + ";" + qe.replace(Xt, jt + Xt + "box") + ";" + qe;
          }
          return qe + ";";
        case 938:
          if (qe.charCodeAt(5) === nt)
            switch (qe.charCodeAt(6)) {
              case 105:
                return Xt = qe.replace("-items", ""), Qt + qe + Qt + "box-" + Xt + jt + "flex-" + Xt + qe;
              case 115:
                return Qt + qe + jt + "flex-item-" + qe.replace(mt, "") + qe;
              default:
                return Qt + qe + jt + "flex-line-pack" + qe.replace("align-content", "").replace(mt, "") + qe;
            }
          break;
        case 973:
        case 989:
          if (qe.charCodeAt(3) !== nt || qe.charCodeAt(4) === 122)
            break;
        case 931:
        case 953:
          if (Ot.test(nn) === !0)
            return (Xt = nn.substring(nn.indexOf(":") + 1)).charCodeAt(0) === 115 ? wn(nn.replace("stretch", "fill-available"), Kr, xt, Sr).replace(":fill-available", ":stretch") : qe.replace(Xt, Qt + Xt) + qe.replace(Xt, Yt + Xt.replace("fill-", "")) + qe;
          break;
        case 962:
          if (qe = Qt + qe + (qe.charCodeAt(5) === 102 ? jt + qe : "") + qe, xt + Sr === 211 && qe.charCodeAt(13) === 105 && qe.indexOf("transform", 10) > 0)
            return qe.substring(0, qe.indexOf(";", 27) + 1).replace(ye, "$1" + Qt + "$2") + qe;
      }
      return qe;
    }
    function Tn(nn, Kr) {
      var xt = nn.indexOf(Kr === 1 ? ":" : "{"), Sr = nn.substring(0, Kr !== 3 ? xt : 10), Xt = nn.substring(xt + 1, nn.length - 1);
      return di(Kr !== 2 ? Sr : Sr.replace(Mt, "$1"), Xt, Kr);
    }
    function _n(nn, Kr) {
      var xt = wn(Kr, Kr.charCodeAt(0), Kr.charCodeAt(1), Kr.charCodeAt(2));
      return xt !== Kr + ";" ? xt.replace(et, " or ($1)").substring(4) : "(" + Kr + ")";
    }
    function vn(nn, Kr, xt, Sr, Xt, Vr, qe, Ke, At, gt) {
      for (var dt, er = 0, dr = Kr; er < Ln; ++er)
        switch (dt = Dn[er].call(An, nn, dr, xt, Sr, Xt, Vr, qe, Ke, At, gt)) {
          case void 0:
          case !1:
          case !0:
          case null:
            break;
          default:
            dr = dt;
        }
      if (dr !== Kr)
        return dr;
    }
    function kn(nn, Kr, xt, Sr) {
      for (var Xt = Kr + 1; Xt < xt; ++Xt)
        switch (Sr.charCodeAt(Xt)) {
          case Ce:
            if (nn === It && Sr.charCodeAt(Xt - 1) === It && Kr + 2 !== Xt)
              return Xt + 1;
            break;
          case ir:
            if (nn === Ce)
              return Xt + 1;
        }
      return Xt;
    }
    function Zn(nn) {
      for (var Kr in nn) {
        var xt = nn[Kr];
        switch (Kr) {
          case "keyframe":
            Bi = 0 | xt;
            break;
          case "global":
            cn = 0 | xt;
            break;
          case "cascade":
            Br = 0 | xt;
            break;
          case "compress":
            oi = 0 | xt;
            break;
          case "semicolon":
            un = 0 | xt;
            break;
          case "preserve":
            Yn = 0 | xt;
            break;
          case "prefix":
            di = null, xt ? typeof xt != "function" ? Tr = 1 : (Tr = 2, di = xt) : Tr = 0;
        }
      }
      return Zn;
    }
    function An(nn, Kr) {
      if (this !== void 0 && this.constructor === An)
        return ne(nn);
      var xt = nn, Sr = xt.charCodeAt(0);
      Sr < 33 && (Sr = (xt = xt.trim()).charCodeAt(0)), Bi > 0 && (Ci = xt.replace(we, Sr === Ut ? "" : "-")), Sr = 1, Br === 1 ? Ft = xt : Ii = xt;
      var Xt, Vr = [Ft];
      Ln > 0 && (Xt = vn(Zi, Kr, Vr, Vr, mr, Ir, 0, 0, 0, 0)) !== void 0 && typeof Xt == "string" && (Kr = Xt);
      var qe = sr(Vn, Vr, Kr, 0, 0);
      return Ln > 0 && (Xt = vn(yi, qe, Vr, Vr, mr, Ir, qe.length, 0, 0, 0)) !== void 0 && typeof (qe = Xt) != "string" && (Sr = 0), Ci = "", Ft = "", Ii = "", _r = 0, mr = 1, Ir = 1, oi * Sr == 0 ? qe : qe.replace(ce, "").replace(Ge, "").replace(Fe, "$1").replace(Pe, "$1").replace(We, " ");
    }
    return An.use = function nn(Kr) {
      switch (Kr) {
        case void 0:
        case null:
          Ln = Dn.length = 0;
          break;
        default:
          if (typeof Kr == "function")
            Dn[Ln++] = Kr;
          else if (typeof Kr == "object")
            for (var xt = 0, Sr = Kr.length; xt < Sr; ++xt)
              nn(Kr[xt]);
          else
            fi = 0 | !!Kr;
      }
      return nn;
    }, An.set = Zn, ie !== void 0 && Zn(ie), An;
  });
})(stylis_min);
const Stylis = stylis_min.exports;
var stylisRuleSheet = { exports: {} };
(function(Q, ee) {
  (function(ne) {
    Q.exports = ne();
  })(function() {
    return function(ne) {
      var ie = "/*|*/", ae = ie + "}";
      function ce(le) {
        if (le)
          try {
            ne(le + "}");
          } catch {
          }
      }
      return function(de, ye, he, Be, Ee, me, ge, be, we, Oe) {
        switch (de) {
          case 1:
            if (we === 0 && ye.charCodeAt(0) === 64)
              return ne(ye + ";"), "";
            break;
          case 2:
            if (be === 0)
              return ye + ie;
            break;
          case 3:
            switch (be) {
              case 102:
              case 112:
                return ne(he[0] + ye), "";
              default:
                return ye + (Oe === 0 ? ie : "");
            }
          case -2:
            ye.split(ae).forEach(ce);
        }
      };
    };
  });
})(stylisRuleSheet);
const _insertRulePlugin = stylisRuleSheet.exports;
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, reactIs = { exports: {} }, reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_production_min;
function requireReactIs_production_min() {
  if (hasRequiredReactIs_production_min)
    return reactIs_production_min;
  hasRequiredReactIs_production_min = 1;
  var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, he = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, be = Q ? Symbol.for("react.lazy") : 60116, we = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
  function Ge(Pe) {
    if (typeof Pe == "object" && Pe !== null) {
      var We = Pe.$$typeof;
      switch (We) {
        case ee:
          switch (Pe = Pe.type, Pe) {
            case ye:
            case he:
            case ie:
            case ce:
            case ae:
            case Ee:
              return Pe;
            default:
              switch (Pe = Pe && Pe.$$typeof, Pe) {
                case de:
                case Be:
                case be:
                case ge:
                case le:
                  return Pe;
                default:
                  return We;
              }
          }
        case ne:
          return We;
      }
    }
  }
  function Fe(Pe) {
    return Ge(Pe) === he;
  }
  return reactIs_production_min.AsyncMode = ye, reactIs_production_min.ConcurrentMode = he, reactIs_production_min.ContextConsumer = de, reactIs_production_min.ContextProvider = le, reactIs_production_min.Element = ee, reactIs_production_min.ForwardRef = Be, reactIs_production_min.Fragment = ie, reactIs_production_min.Lazy = be, reactIs_production_min.Memo = ge, reactIs_production_min.Portal = ne, reactIs_production_min.Profiler = ce, reactIs_production_min.StrictMode = ae, reactIs_production_min.Suspense = Ee, reactIs_production_min.isAsyncMode = function(Pe) {
    return Fe(Pe) || Ge(Pe) === ye;
  }, reactIs_production_min.isConcurrentMode = Fe, reactIs_production_min.isContextConsumer = function(Pe) {
    return Ge(Pe) === de;
  }, reactIs_production_min.isContextProvider = function(Pe) {
    return Ge(Pe) === le;
  }, reactIs_production_min.isElement = function(Pe) {
    return typeof Pe == "object" && Pe !== null && Pe.$$typeof === ee;
  }, reactIs_production_min.isForwardRef = function(Pe) {
    return Ge(Pe) === Be;
  }, reactIs_production_min.isFragment = function(Pe) {
    return Ge(Pe) === ie;
  }, reactIs_production_min.isLazy = function(Pe) {
    return Ge(Pe) === be;
  }, reactIs_production_min.isMemo = function(Pe) {
    return Ge(Pe) === ge;
  }, reactIs_production_min.isPortal = function(Pe) {
    return Ge(Pe) === ne;
  }, reactIs_production_min.isProfiler = function(Pe) {
    return Ge(Pe) === ce;
  }, reactIs_production_min.isStrictMode = function(Pe) {
    return Ge(Pe) === ae;
  }, reactIs_production_min.isSuspense = function(Pe) {
    return Ge(Pe) === Ee;
  }, reactIs_production_min.isValidElementType = function(Pe) {
    return typeof Pe == "string" || typeof Pe == "function" || Pe === ie || Pe === he || Pe === ce || Pe === ae || Pe === Ee || Pe === me || typeof Pe == "object" && Pe !== null && (Pe.$$typeof === be || Pe.$$typeof === ge || Pe.$$typeof === le || Pe.$$typeof === de || Pe.$$typeof === Be || Pe.$$typeof === Oe || Pe.$$typeof === He || Pe.$$typeof === Se || Pe.$$typeof === we);
  }, reactIs_production_min.typeOf = Ge, reactIs_production_min;
}
var reactIs_development = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactIs_development;
function requireReactIs_development() {
  return hasRequiredReactIs_development || (hasRequiredReactIs_development = 1, process.env.NODE_ENV !== "production" && function() {
    var Q = typeof Symbol == "function" && Symbol.for, ee = Q ? Symbol.for("react.element") : 60103, ne = Q ? Symbol.for("react.portal") : 60106, ie = Q ? Symbol.for("react.fragment") : 60107, ae = Q ? Symbol.for("react.strict_mode") : 60108, ce = Q ? Symbol.for("react.profiler") : 60114, le = Q ? Symbol.for("react.provider") : 60109, de = Q ? Symbol.for("react.context") : 60110, ye = Q ? Symbol.for("react.async_mode") : 60111, he = Q ? Symbol.for("react.concurrent_mode") : 60111, Be = Q ? Symbol.for("react.forward_ref") : 60112, Ee = Q ? Symbol.for("react.suspense") : 60113, me = Q ? Symbol.for("react.suspense_list") : 60120, ge = Q ? Symbol.for("react.memo") : 60115, be = Q ? Symbol.for("react.lazy") : 60116, we = Q ? Symbol.for("react.block") : 60121, Oe = Q ? Symbol.for("react.fundamental") : 60117, He = Q ? Symbol.for("react.responder") : 60118, Se = Q ? Symbol.for("react.scope") : 60119;
    function Ge(je) {
      return typeof je == "string" || typeof je == "function" || je === ie || je === he || je === ce || je === ae || je === Ee || je === me || typeof je == "object" && je !== null && (je.$$typeof === be || je.$$typeof === ge || je.$$typeof === le || je.$$typeof === de || je.$$typeof === Be || je.$$typeof === Oe || je.$$typeof === He || je.$$typeof === Se || je.$$typeof === we);
    }
    function Fe(je) {
      if (typeof je == "object" && je !== null) {
        var It = je.$$typeof;
        switch (It) {
          case ee:
            var lt = je.type;
            switch (lt) {
              case ye:
              case he:
              case ie:
              case ce:
              case ae:
              case Ee:
                return lt;
              default:
                var Ye = lt && lt.$$typeof;
                switch (Ye) {
                  case de:
                  case Be:
                  case be:
                  case ge:
                  case le:
                    return Ye;
                  default:
                    return It;
                }
            }
          case ne:
            return It;
        }
      }
    }
    var Pe = ye, We = he, tt = de, Et = le, Nt = ee, et = Be, mt = ie, Mt = be, Ot = ge, yt = ne, Qt = ce, Yt = ae, jt = Ee, $t = !1;
    function Wt(je) {
      return $t || ($t = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), st(je) || Fe(je) === ye;
    }
    function st(je) {
      return Fe(je) === he;
    }
    function at(je) {
      return Fe(je) === de;
    }
    function wt(je) {
      return Fe(je) === le;
    }
    function Ut(je) {
      return typeof je == "object" && je !== null && je.$$typeof === ee;
    }
    function $e(je) {
      return Fe(je) === Be;
    }
    function ir(je) {
      return Fe(je) === ie;
    }
    function tr(je) {
      return Fe(je) === be;
    }
    function ar(je) {
      return Fe(je) === ge;
    }
    function ht(je) {
      return Fe(je) === ne;
    }
    function qt(je) {
      return Fe(je) === ce;
    }
    function Xe(je) {
      return Fe(je) === ae;
    }
    function nt(je) {
      return Fe(je) === Ee;
    }
    reactIs_development.AsyncMode = Pe, reactIs_development.ConcurrentMode = We, reactIs_development.ContextConsumer = tt, reactIs_development.ContextProvider = Et, reactIs_development.Element = Nt, reactIs_development.ForwardRef = et, reactIs_development.Fragment = mt, reactIs_development.Lazy = Mt, reactIs_development.Memo = Ot, reactIs_development.Portal = yt, reactIs_development.Profiler = Qt, reactIs_development.StrictMode = Yt, reactIs_development.Suspense = jt, reactIs_development.isAsyncMode = Wt, reactIs_development.isConcurrentMode = st, reactIs_development.isContextConsumer = at, reactIs_development.isContextProvider = wt, reactIs_development.isElement = Ut, reactIs_development.isForwardRef = $e, reactIs_development.isFragment = ir, reactIs_development.isLazy = tr, reactIs_development.isMemo = ar, reactIs_development.isPortal = ht, reactIs_development.isProfiler = qt, reactIs_development.isStrictMode = Xe, reactIs_development.isSuspense = nt, reactIs_development.isValidElementType = Ge, reactIs_development.typeOf = Fe;
  }()), reactIs_development;
}
(function(Q) {
  process.env.NODE_ENV === "production" ? Q.exports = requireReactIs_production_min() : Q.exports = requireReactIs_development();
})(reactIs);
var safeIsNaN = Number.isNaN || function Q(ee) {
  return typeof ee == "number" && ee !== ee;
};
function isEqual(Q, ee) {
  return !!(Q === ee || safeIsNaN(Q) && safeIsNaN(ee));
}
function areInputsEqual(Q, ee) {
  if (Q.length !== ee.length)
    return !1;
  for (var ne = 0; ne < Q.length; ne++)
    if (!isEqual(Q[ne], ee[ne]))
      return !1;
  return !0;
}
function memoizeOne(Q, ee) {
  ee === void 0 && (ee = areInputsEqual);
  var ne, ie = [], ae, ce = !1;
  function le() {
    for (var de = [], ye = 0; ye < arguments.length; ye++)
      de[ye] = arguments[ye];
    return ce && ne === this && ee(de, ie) || (ae = Q.apply(this, de), ce = !0, ne = this, ie = de), ae;
  }
  return le;
}
function memoize(Q) {
  var ee = {};
  return function(ne) {
    return ee[ne] === void 0 && (ee[ne] = Q(ne)), ee[ne];
  };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, index = memoize(
  function(Q) {
    return reactPropsRegex.test(Q) || Q.charCodeAt(0) === 111 && Q.charCodeAt(1) === 110 && Q.charCodeAt(2) < 91;
  }
);
function getType(Q) {
  return Object.prototype.toString.call(Q).slice(8, -1);
}
function isPlainObject$1(Q) {
  return getType(Q) !== "Object" ? !1 : Q.constructor === Object && Object.getPrototypeOf(Q) === Object.prototype;
}
function isArray(Q) {
  return getType(Q) === "Array";
}
function isSymbol(Q) {
  return getType(Q) === "Symbol";
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __spreadArrays() {
  for (var Q = 0, ee = 0, ne = arguments.length; ee < ne; ee++)
    Q += arguments[ee].length;
  for (var ie = Array(Q), ae = 0, ee = 0; ee < ne; ee++)
    for (var ce = arguments[ee], le = 0, de = ce.length; le < de; le++, ae++)
      ie[ae] = ce[le];
  return ie;
}
function assignProp(Q, ee, ne, ie) {
  var ae = ie.propertyIsEnumerable(ee) ? "enumerable" : "nonenumerable";
  ae === "enumerable" && (Q[ee] = ne), ae === "nonenumerable" && Object.defineProperty(Q, ee, {
    value: ne,
    enumerable: !1,
    writable: !0,
    configurable: !0
  });
}
function mergeRecursively(Q, ee, ne) {
  if (!isPlainObject$1(ee))
    return ne && isArray(ne) && ne.forEach(function(he) {
      ee = he(Q, ee);
    }), ee;
  var ie = {};
  if (isPlainObject$1(Q)) {
    var ae = Object.getOwnPropertyNames(Q), ce = Object.getOwnPropertySymbols(Q);
    ie = __spreadArrays(ae, ce).reduce(function(he, Be) {
      var Ee = Q[Be];
      return (!isSymbol(Be) && !Object.getOwnPropertyNames(ee).includes(Be) || isSymbol(Be) && !Object.getOwnPropertySymbols(ee).includes(Be)) && assignProp(he, Be, Ee, Q), he;
    }, {});
  }
  var le = Object.getOwnPropertyNames(ee), de = Object.getOwnPropertySymbols(ee), ye = __spreadArrays(le, de).reduce(function(he, Be) {
    var Ee = ee[Be], me = isPlainObject$1(Q) ? Q[Be] : void 0;
    return ne && isArray(ne) && ne.forEach(function(ge) {
      Ee = ge(me, Ee);
    }), me !== void 0 && isPlainObject$1(Ee) && (Ee = mergeRecursively(me, Ee, ne)), assignProp(he, Be, Ee, ee), he;
  }, ie);
  return ye;
}
function merge(Q) {
  for (var ee = [], ne = 1; ne < arguments.length; ne++)
    ee[ne - 1] = arguments[ne];
  var ie = null, ae = Q;
  return isPlainObject$1(Q) && Q.extensions && Object.keys(Q).length === 1 && (ae = {}, ie = Q.extensions), ee.reduce(function(ce, le) {
    return mergeRecursively(ce, le, ie);
  }, ae);
}
var interleave = function(Q, ee) {
  for (var ne = [Q[0]], ie = 0, ae = ee.length; ie < ae; ie += 1)
    ne.push(ee[ie], Q[ie + 1]);
  return ne;
}, _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Q) {
  return typeof Q;
} : function(Q) {
  return Q && typeof Symbol == "function" && Q.constructor === Symbol && Q !== Symbol.prototype ? "symbol" : typeof Q;
}, classCallCheck = function(Q, ee) {
  if (!(Q instanceof ee))
    throw new TypeError("Cannot call a class as a function");
}, createClass = function() {
  function Q(ee, ne) {
    for (var ie = 0; ie < ne.length; ie++) {
      var ae = ne[ie];
      ae.enumerable = ae.enumerable || !1, ae.configurable = !0, "value" in ae && (ae.writable = !0), Object.defineProperty(ee, ae.key, ae);
    }
  }
  return function(ee, ne, ie) {
    return ne && Q(ee.prototype, ne), ie && Q(ee, ie), ee;
  };
}(), _extends = Object.assign || function(Q) {
  for (var ee = 1; ee < arguments.length; ee++) {
    var ne = arguments[ee];
    for (var ie in ne)
      Object.prototype.hasOwnProperty.call(ne, ie) && (Q[ie] = ne[ie]);
  }
  return Q;
}, inherits = function(Q, ee) {
  if (typeof ee != "function" && ee !== null)
    throw new TypeError("Super expression must either be null or a function, not " + typeof ee);
  Q.prototype = Object.create(ee && ee.prototype, {
    constructor: {
      value: Q,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  }), ee && (Object.setPrototypeOf ? Object.setPrototypeOf(Q, ee) : Q.__proto__ = ee);
}, objectWithoutProperties = function(Q, ee) {
  var ne = {};
  for (var ie in Q)
    ee.indexOf(ie) >= 0 || !Object.prototype.hasOwnProperty.call(Q, ie) || (ne[ie] = Q[ie]);
  return ne;
}, possibleConstructorReturn = function(Q, ee) {
  if (!Q)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return ee && (typeof ee == "object" || typeof ee == "function") ? ee : Q;
}, isPlainObject = function(Q) {
  return (typeof Q > "u" ? "undefined" : _typeof(Q)) === "object" && Q.constructor === Object;
}, EMPTY_ARRAY = Object.freeze([]), EMPTY_OBJECT = Object.freeze({});
function isFunction(Q) {
  return typeof Q == "function";
}
function getComponentName(Q) {
  return (process.env.NODE_ENV !== "production" ? typeof Q == "string" && Q : !1) || Q.displayName || Q.name || "Component";
}
function isStatelessFunction(Q) {
  return typeof Q == "function" && !(Q.prototype && Q.prototype.isReactComponent);
}
function isStyledComponent(Q) {
  return Q && typeof Q.styledComponentId == "string";
}
var SC_ATTR = typeof process < "u" && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled", SC_VERSION_ATTR = "data-styled-version", SC_STREAM_ATTR = "data-styled-streamed", IS_BROWSER = typeof window < "u" && "HTMLElement" in window, DISABLE_SPEEDY = typeof SC_DISABLE_SPEEDY == "boolean" && SC_DISABLE_SPEEDY || typeof process < "u" && (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY) || process.env.NODE_ENV !== "production", ERRORS = process.env.NODE_ENV !== "production" ? {
  1: `Cannot create styled-component for component: %s.

`,
  2: `Can't collect styles once you've consumed a \`ServerStyleSheet\`'s styles! \`ServerStyleSheet\` is a one off instance for each server-side render cycle.

- Are you trying to reuse it across renders?
- Are you accidentally calling collectStyles twice?

`,
  3: `Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.

`,
  4: `The \`StyleSheetManager\` expects a valid target or sheet prop!

- Does this error occur on the client and is your target falsy?
- Does this error occur on the server and is the sheet falsy?

`,
  5: `The clone method cannot be used on the client!

- Are you running in a client-like environment on the server?
- Are you trying to run SSR on the client?

`,
  6: `Trying to insert a new style tag, but the given Node is unmounted!

- Are you using a custom target that isn't mounted?
- Does your document not have a valid head element?
- Have you accidentally removed a style tag manually?

`,
  7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',
  8: `ThemeProvider: Please make your "theme" prop an object.

`,
  9: "Missing document `<head>`\n\n",
  10: `Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021

`,
  11: `_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.

`,
  12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",
  13: `%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.
`
} : {};
function format() {
  for (var Q = arguments.length <= 0 ? void 0 : arguments[0], ee = [], ne = 1, ie = arguments.length; ne < ie; ne += 1)
    ee.push(arguments.length <= ne ? void 0 : arguments[ne]);
  return ee.forEach(function(ae) {
    Q = Q.replace(/%[a-z]/, ae);
  }), Q;
}
var StyledComponentsError = function(Q) {
  inherits(ee, Q);
  function ee(ne) {
    classCallCheck(this, ee);
    for (var ie = arguments.length, ae = Array(ie > 1 ? ie - 1 : 0), ce = 1; ce < ie; ce++)
      ae[ce - 1] = arguments[ce];
    if (process.env.NODE_ENV === "production")
      var le = possibleConstructorReturn(this, Q.call(this, "An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#" + ne + " for more information." + (ae.length > 0 ? " Additional arguments: " + ae.join(", ") : "")));
    else
      var le = possibleConstructorReturn(this, Q.call(this, format.apply(void 0, [ERRORS[ne]].concat(ae)).trim()));
    return possibleConstructorReturn(le);
  }
  return ee;
}(Error), SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm, extractComps = function(Q) {
  var ee = "" + (Q || ""), ne = [];
  return ee.replace(SC_COMPONENT_ID, function(ie, ae, ce) {
    return ne.push({
      componentId: ae,
      matchIndex: ce
    }), ie;
  }), ne.map(function(ie, ae) {
    var ce = ie.componentId, le = ie.matchIndex, de = ne[ae + 1], ye = de ? ee.slice(le, de.matchIndex) : ee.slice(le);
    return {
      componentId: ce,
      cssFromDOM: ye
    };
  });
}, COMMENT_REGEX = /^\s*\/\/.*$/gm, stylisSplitter = new Stylis({
  global: !1,
  cascade: !0,
  keyframe: !1,
  prefix: !1,
  compress: !1,
  semicolon: !0
}), stylis = new Stylis({
  global: !1,
  cascade: !0,
  keyframe: !1,
  prefix: !0,
  compress: !1,
  semicolon: !1
}), parsingRules = [], returnRulesPlugin = function Q(ee) {
  if (ee === -2) {
    var ne = parsingRules;
    return parsingRules = [], ne;
  }
}, parseRulesPlugin = _insertRulePlugin(function(Q) {
  parsingRules.push(Q);
}), _componentId = void 0, _selector = void 0, _selectorRegexp = void 0, selfReferenceReplacer = function Q(ee, ne, ie) {
  return ne > 0 && ie.slice(0, ne).indexOf(_selector) !== -1 && ie.slice(ne - _selector.length, ne) !== _selector ? "." + _componentId : ee;
}, selfReferenceReplacementPlugin = function Q(ee, ne, ie) {
  ee === 2 && ie.length && ie[0].lastIndexOf(_selector) > 0 && (ie[0] = ie[0].replace(_selectorRegexp, selfReferenceReplacer));
};
stylis.use([selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);
stylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);
var splitByRules = function Q(ee) {
  return stylisSplitter("", ee);
};
function stringifyRules(Q, ee, ne) {
  var ie = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "&", ae = Q.join("").replace(COMMENT_REGEX, ""), ce = ee && ne ? ne + " " + ee + " { " + ae + " }" : ae;
  return _componentId = ie, _selector = ee, _selectorRegexp = new RegExp("\\" + _selector + "\\b", "g"), stylis(ne || !ee ? "" : ee, ce);
}
var getNonce = function() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : null;
}, addNameForId = function Q(ee, ne, ie) {
  if (ie) {
    var ae = ee[ne] || (ee[ne] = /* @__PURE__ */ Object.create(null));
    ae[ie] = !0;
  }
}, resetIdNames = function Q(ee, ne) {
  ee[ne] = /* @__PURE__ */ Object.create(null);
}, hasNameForId = function Q(ee) {
  return function(ne, ie) {
    return ee[ne] !== void 0 && ee[ne][ie];
  };
}, stringifyNames = function Q(ee) {
  var ne = "";
  for (var ie in ee)
    ne += Object.keys(ee[ie]).join(" ") + " ";
  return ne.trim();
}, cloneNames = function Q(ee) {
  var ne = /* @__PURE__ */ Object.create(null);
  for (var ie in ee)
    ne[ie] = _extends({}, ee[ie]);
  return ne;
}, sheetForTag = function Q(ee) {
  if (ee.sheet)
    return ee.sheet;
  for (var ne = ee.ownerDocument.styleSheets.length, ie = 0; ie < ne; ie += 1) {
    var ae = ee.ownerDocument.styleSheets[ie];
    if (ae.ownerNode === ee)
      return ae;
  }
  throw new StyledComponentsError(10);
}, safeInsertRule = function Q(ee, ne, ie) {
  if (!ne)
    return !1;
  var ae = ee.cssRules.length;
  try {
    ee.insertRule(ne, ie <= ae ? ie : ae);
  } catch {
    return !1;
  }
  return !0;
}, deleteRules = function Q(ee, ne, ie) {
  for (var ae = ne - ie, ce = ne; ce > ae; ce -= 1)
    ee.deleteRule(ce);
}, makeTextMarker = function Q(ee) {
  return `
/* sc-component-id: ` + ee + ` */
`;
}, addUpUntilIndex = function Q(ee, ne) {
  for (var ie = 0, ae = 0; ae <= ne; ae += 1)
    ie += ee[ae];
  return ie;
}, makeStyleTag = function Q(ee, ne, ie) {
  var ae = document;
  ee ? ae = ee.ownerDocument : ne && (ae = ne.ownerDocument);
  var ce = ae.createElement("style");
  ce.setAttribute(SC_ATTR, ""), ce.setAttribute(SC_VERSION_ATTR, "4.4.1");
  var le = getNonce();
  if (le && ce.setAttribute("nonce", le), ce.appendChild(ae.createTextNode("")), ee && !ne)
    ee.appendChild(ce);
  else {
    if (!ne || !ee || !ne.parentNode)
      throw new StyledComponentsError(6);
    ne.parentNode.insertBefore(ce, ie ? ne : ne.nextSibling);
  }
  return ce;
}, wrapAsHtmlTag = function Q(ee, ne) {
  return function(ie) {
    var ae = getNonce(), ce = [ae && 'nonce="' + ae + '"', SC_ATTR + '="' + stringifyNames(ne) + '"', SC_VERSION_ATTR + '="4.4.1"', ie], le = ce.filter(Boolean).join(" ");
    return "<style " + le + ">" + ee() + "</style>";
  };
}, wrapAsElement = function Q(ee, ne) {
  return function() {
    var ie, ae = (ie = {}, ie[SC_ATTR] = stringifyNames(ne), ie[SC_VERSION_ATTR] = "4.4.1", ie), ce = getNonce();
    return ce && (ae.nonce = ce), /* @__PURE__ */ jsx("style", {
      ...ae,
      dangerouslySetInnerHTML: {
        __html: ee()
      }
    });
  };
}, getIdsFromMarkersFactory = function Q(ee) {
  return function() {
    return Object.keys(ee);
  };
}, makeSpeedyTag = function Q(ee, ne) {
  var ie = /* @__PURE__ */ Object.create(null), ae = /* @__PURE__ */ Object.create(null), ce = [], le = ne !== void 0, de = !1, ye = function(ge) {
    var be = ae[ge];
    return be !== void 0 ? be : (ae[ge] = ce.length, ce.push(0), resetIdNames(ie, ge), ae[ge]);
  }, he = function(ge, be, we) {
    for (var Oe = ye(ge), He = sheetForTag(ee), Se = addUpUntilIndex(ce, Oe), Ge = 0, Fe = [], Pe = be.length, We = 0; We < Pe; We += 1) {
      var tt = be[We], Et = le;
      Et && tt.indexOf("@import") !== -1 ? Fe.push(tt) : safeInsertRule(He, tt, Se + Ge) && (Et = !1, Ge += 1);
    }
    le && Fe.length > 0 && (de = !0, ne().insertRules(ge + "-import", Fe)), ce[Oe] += Ge, addNameForId(ie, ge, we);
  }, Be = function(ge) {
    var be = ae[ge];
    if (be !== void 0 && ee.isConnected !== !1) {
      var we = ce[be], Oe = sheetForTag(ee), He = addUpUntilIndex(ce, be) - 1;
      deleteRules(Oe, He, we), ce[be] = 0, resetIdNames(ie, ge), le && de && ne().removeRules(ge + "-import");
    }
  }, Ee = function() {
    var ge = sheetForTag(ee), be = ge.cssRules, we = "";
    for (var Oe in ae) {
      we += makeTextMarker(Oe);
      for (var He = ae[Oe], Se = addUpUntilIndex(ce, He), Ge = ce[He], Fe = Se - Ge; Fe < Se; Fe += 1) {
        var Pe = be[Fe];
        Pe !== void 0 && (we += Pe.cssText);
      }
    }
    return we;
  };
  return {
    clone: function() {
      throw new StyledComponentsError(5);
    },
    css: Ee,
    getIds: getIdsFromMarkersFactory(ae),
    hasNameForId: hasNameForId(ie),
    insertMarker: ye,
    insertRules: he,
    removeRules: Be,
    sealed: !1,
    styleTag: ee,
    toElement: wrapAsElement(Ee, ie),
    toHTML: wrapAsHtmlTag(Ee, ie)
  };
}, makeTextNode = function Q(ee, ne) {
  return ee.createTextNode(makeTextMarker(ne));
}, makeBrowserTag = function Q(ee, ne) {
  var ie = /* @__PURE__ */ Object.create(null), ae = /* @__PURE__ */ Object.create(null), ce = ne !== void 0, le = !1, de = function(me) {
    var ge = ae[me];
    return ge !== void 0 ? ge : (ae[me] = makeTextNode(ee.ownerDocument, me), ee.appendChild(ae[me]), ie[me] = /* @__PURE__ */ Object.create(null), ae[me]);
  }, ye = function(me, ge, be) {
    for (var we = de(me), Oe = [], He = ge.length, Se = 0; Se < He; Se += 1) {
      var Ge = ge[Se], Fe = ce;
      if (Fe && Ge.indexOf("@import") !== -1)
        Oe.push(Ge);
      else {
        Fe = !1;
        var Pe = Se === He - 1 ? "" : " ";
        we.appendData("" + Ge + Pe);
      }
    }
    addNameForId(ie, me, be), ce && Oe.length > 0 && (le = !0, ne().insertRules(me + "-import", Oe));
  }, he = function(me) {
    var ge = ae[me];
    if (ge !== void 0) {
      var be = makeTextNode(ee.ownerDocument, me);
      ee.replaceChild(be, ge), ae[me] = be, resetIdNames(ie, me), ce && le && ne().removeRules(me + "-import");
    }
  }, Be = function() {
    var me = "";
    for (var ge in ae)
      me += ae[ge].data;
    return me;
  };
  return {
    clone: function() {
      throw new StyledComponentsError(5);
    },
    css: Be,
    getIds: getIdsFromMarkersFactory(ae),
    hasNameForId: hasNameForId(ie),
    insertMarker: de,
    insertRules: ye,
    removeRules: he,
    sealed: !1,
    styleTag: ee,
    toElement: wrapAsElement(Be, ie),
    toHTML: wrapAsHtmlTag(Be, ie)
  };
}, makeServerTag = function Q(ee, ne) {
  var ie = ee === void 0 ? /* @__PURE__ */ Object.create(null) : ee, ae = ne === void 0 ? /* @__PURE__ */ Object.create(null) : ne, ce = function(me) {
    var ge = ae[me];
    return ge !== void 0 ? ge : ae[me] = [""];
  }, le = function(me, ge, be) {
    var we = ce(me);
    we[0] += ge.join(" "), addNameForId(ie, me, be);
  }, de = function(me) {
    var ge = ae[me];
    ge !== void 0 && (ge[0] = "", resetIdNames(ie, me));
  }, ye = function() {
    var me = "";
    for (var ge in ae) {
      var be = ae[ge][0];
      be && (me += makeTextMarker(ge) + be);
    }
    return me;
  }, he = function() {
    var me = cloneNames(ie), ge = /* @__PURE__ */ Object.create(null);
    for (var be in ae)
      ge[be] = [ae[be][0]];
    return Q(me, ge);
  }, Be = {
    clone: he,
    css: ye,
    getIds: getIdsFromMarkersFactory(ae),
    hasNameForId: hasNameForId(ie),
    insertMarker: ce,
    insertRules: le,
    removeRules: de,
    sealed: !1,
    styleTag: null,
    toElement: wrapAsElement(ye, ie),
    toHTML: wrapAsHtmlTag(ye, ie)
  };
  return Be;
}, makeTag = function Q(ee, ne, ie, ae, ce) {
  if (IS_BROWSER && !ie) {
    var le = makeStyleTag(ee, ne, ae);
    return DISABLE_SPEEDY ? makeBrowserTag(le, ce) : makeSpeedyTag(le, ce);
  }
  return makeServerTag();
}, rehydrate = function Q(ee, ne, ie) {
  for (var ae = 0, ce = ie.length; ae < ce; ae += 1) {
    var le = ie[ae], de = le.componentId, ye = le.cssFromDOM, he = splitByRules(ye);
    ee.insertRules(de, he);
  }
  for (var Be = 0, Ee = ne.length; Be < Ee; Be += 1) {
    var me = ne[Be];
    me.parentNode && me.parentNode.removeChild(me);
  }
}, SPLIT_REGEX = /\s+/, MAX_SIZE = void 0;
IS_BROWSER ? MAX_SIZE = DISABLE_SPEEDY ? 40 : 1e3 : MAX_SIZE = -1;
var sheetRunningId = 0, master = void 0, StyleSheet = function() {
  function Q() {
    var ee = this, ne = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : IS_BROWSER ? document.head : null, ie = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    classCallCheck(this, Q), this.getImportRuleTag = function() {
      var ae = ee.importRuleTag;
      if (ae !== void 0)
        return ae;
      var ce = ee.tags[0], le = !0;
      return ee.importRuleTag = makeTag(ee.target, ce ? ce.styleTag : null, ee.forceServer, le);
    }, sheetRunningId += 1, this.id = sheetRunningId, this.forceServer = ie, this.target = ie ? null : ne, this.tagMap = {}, this.deferred = {}, this.rehydratedNames = {}, this.ignoreRehydratedNames = {}, this.tags = [], this.capacity = 1, this.clones = [];
  }
  return Q.prototype.rehydrate = function() {
    if (!IS_BROWSER || this.forceServer)
      return this;
    var ne = [], ie = [], ae = !1, ce = document.querySelectorAll("style[" + SC_ATTR + "][" + SC_VERSION_ATTR + '="4.4.1"]'), le = ce.length;
    if (!le)
      return this;
    for (var de = 0; de < le; de += 1) {
      var ye = ce[de];
      ae || (ae = !!ye.getAttribute(SC_STREAM_ATTR));
      for (var he = (ye.getAttribute(SC_ATTR) || "").trim().split(SPLIT_REGEX), Be = he.length, Ee = 0, me; Ee < Be; Ee += 1)
        me = he[Ee], this.rehydratedNames[me] = !0;
      ie.push.apply(ie, extractComps(ye.textContent)), ne.push(ye);
    }
    var ge = ie.length;
    if (!ge)
      return this;
    var be = this.makeTag(null);
    rehydrate(be, ne, ie), this.capacity = Math.max(1, MAX_SIZE - ge), this.tags.push(be);
    for (var we = 0; we < ge; we += 1)
      this.tagMap[ie[we].componentId] = be;
    return this;
  }, Q.reset = function() {
    var ne = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    master = new Q(void 0, ne).rehydrate();
  }, Q.prototype.clone = function() {
    var ne = new Q(this.target, this.forceServer);
    return this.clones.push(ne), ne.tags = this.tags.map(function(ie) {
      for (var ae = ie.getIds(), ce = ie.clone(), le = 0; le < ae.length; le += 1)
        ne.tagMap[ae[le]] = ce;
      return ce;
    }), ne.rehydratedNames = _extends({}, this.rehydratedNames), ne.deferred = _extends({}, this.deferred), ne;
  }, Q.prototype.sealAllTags = function() {
    this.capacity = 1, this.tags.forEach(function(ne) {
      ne.sealed = !0;
    });
  }, Q.prototype.makeTag = function(ne) {
    var ie = ne ? ne.styleTag : null, ae = !1;
    return makeTag(this.target, ie, this.forceServer, ae, this.getImportRuleTag);
  }, Q.prototype.getTagForId = function(ne) {
    var ie = this.tagMap[ne];
    if (ie !== void 0 && !ie.sealed)
      return ie;
    var ae = this.tags[this.tags.length - 1];
    return this.capacity -= 1, this.capacity === 0 && (this.capacity = MAX_SIZE, ae = this.makeTag(ae), this.tags.push(ae)), this.tagMap[ne] = ae;
  }, Q.prototype.hasId = function(ne) {
    return this.tagMap[ne] !== void 0;
  }, Q.prototype.hasNameForId = function(ne, ie) {
    if (this.ignoreRehydratedNames[ne] === void 0 && this.rehydratedNames[ie])
      return !0;
    var ae = this.tagMap[ne];
    return ae !== void 0 && ae.hasNameForId(ne, ie);
  }, Q.prototype.deferredInject = function(ne, ie) {
    if (this.tagMap[ne] === void 0) {
      for (var ae = this.clones, ce = 0; ce < ae.length; ce += 1)
        ae[ce].deferredInject(ne, ie);
      this.getTagForId(ne).insertMarker(ne), this.deferred[ne] = ie;
    }
  }, Q.prototype.inject = function(ne, ie, ae) {
    for (var ce = this.clones, le = 0; le < ce.length; le += 1)
      ce[le].inject(ne, ie, ae);
    var de = this.getTagForId(ne);
    if (this.deferred[ne] !== void 0) {
      var ye = this.deferred[ne].concat(ie);
      de.insertRules(ne, ye, ae), this.deferred[ne] = void 0;
    } else
      de.insertRules(ne, ie, ae);
  }, Q.prototype.remove = function(ne) {
    var ie = this.tagMap[ne];
    if (ie !== void 0) {
      for (var ae = this.clones, ce = 0; ce < ae.length; ce += 1)
        ae[ce].remove(ne);
      ie.removeRules(ne), this.ignoreRehydratedNames[ne] = !0, this.deferred[ne] = void 0;
    }
  }, Q.prototype.toHTML = function() {
    return this.tags.map(function(ne) {
      return ne.toHTML();
    }).join("");
  }, Q.prototype.toReactElements = function() {
    var ne = this.id;
    return this.tags.map(function(ie, ae) {
      var ce = "sc-" + ne + "-" + ae;
      return react.exports.cloneElement(ie.toElement(), {
        key: ce
      });
    });
  }, createClass(Q, null, [{
    key: "master",
    get: function() {
      return master || (master = new Q().rehydrate());
    }
  }, {
    key: "instance",
    get: function() {
      return Q.master;
    }
  }]), Q;
}(), Keyframes = function() {
  function Q(ee, ne) {
    var ie = this;
    classCallCheck(this, Q), this.inject = function(ae) {
      ae.hasNameForId(ie.id, ie.name) || ae.inject(ie.id, ie.rules, ie.name);
    }, this.toString = function() {
      throw new StyledComponentsError(12, String(ie.name));
    }, this.name = ee, this.rules = ne, this.id = "sc-keyframes-" + ee;
  }
  return Q.prototype.getName = function() {
    return this.name;
  }, Q;
}(), uppercasePattern = /([A-Z])/g, msPattern = /^ms-/;
function hyphenateStyleName(Q) {
  return Q.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
}
function addUnitIfNeeded(Q, ee) {
  return ee == null || typeof ee == "boolean" || ee === "" ? "" : typeof ee == "number" && ee !== 0 && !(Q in unitlessKeys) ? ee + "px" : String(ee).trim();
}
var isFalsish = function Q(ee) {
  return ee == null || ee === !1 || ee === "";
}, objToCssArray = function Q(ee, ne) {
  var ie = [], ae = Object.keys(ee);
  return ae.forEach(function(ce) {
    if (!isFalsish(ee[ce])) {
      if (isPlainObject(ee[ce]))
        return ie.push.apply(ie, Q(ee[ce], ce)), ie;
      if (isFunction(ee[ce]))
        return ie.push(hyphenateStyleName(ce) + ":", ee[ce], ";"), ie;
      ie.push(hyphenateStyleName(ce) + ": " + addUnitIfNeeded(ce, ee[ce]) + ";");
    }
    return ie;
  }), ne ? [ne + " {"].concat(ie, ["}"]) : ie;
};
function flatten(Q, ee, ne) {
  if (Array.isArray(Q)) {
    for (var ie = [], ae = 0, ce = Q.length, le; ae < ce; ae += 1)
      le = flatten(Q[ae], ee, ne), le !== null && (Array.isArray(le) ? ie.push.apply(ie, le) : ie.push(le));
    return ie;
  }
  if (isFalsish(Q))
    return null;
  if (isStyledComponent(Q))
    return "." + Q.styledComponentId;
  if (isFunction(Q))
    if (isStatelessFunction(Q) && ee) {
      var de = Q(ee);
      return process.env.NODE_ENV !== "production" && reactIs.exports.isElement(de) && console.warn(getComponentName(Q) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), flatten(de, ee, ne);
    } else
      return Q;
  return Q instanceof Keyframes ? ne ? (Q.inject(ne), Q.getName()) : Q : isPlainObject(Q) ? objToCssArray(Q) : Q.toString();
}
function css(Q) {
  for (var ee = arguments.length, ne = Array(ee > 1 ? ee - 1 : 0), ie = 1; ie < ee; ie++)
    ne[ie - 1] = arguments[ie];
  return isFunction(Q) || isPlainObject(Q) ? flatten(interleave(EMPTY_ARRAY, [Q].concat(ne))) : flatten(interleave(Q, ne));
}
function constructWithOptions(Q, ee) {
  var ne = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT;
  if (!reactIs.exports.isValidElementType(ee))
    throw new StyledComponentsError(1, String(ee));
  var ie = function() {
    return Q(ee, ne, css.apply(void 0, arguments));
  };
  return ie.withConfig = function(ae) {
    return constructWithOptions(Q, ee, _extends({}, ne, ae));
  }, ie.attrs = function(ae) {
    return constructWithOptions(Q, ee, _extends({}, ne, {
      attrs: Array.prototype.concat(ne.attrs, ae).filter(Boolean)
    }));
  }, ie;
}
function murmurhash(Q) {
  for (var ee = Q.length | 0, ne = ee | 0, ie = 0, ae; ee >= 4; )
    ae = Q.charCodeAt(ie) & 255 | (Q.charCodeAt(++ie) & 255) << 8 | (Q.charCodeAt(++ie) & 255) << 16 | (Q.charCodeAt(++ie) & 255) << 24, ae = 1540483477 * (ae & 65535) + ((1540483477 * (ae >>> 16) & 65535) << 16), ae ^= ae >>> 24, ae = 1540483477 * (ae & 65535) + ((1540483477 * (ae >>> 16) & 65535) << 16), ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16) ^ ae, ee -= 4, ++ie;
  switch (ee) {
    case 3:
      ne ^= (Q.charCodeAt(ie + 2) & 255) << 16;
    case 2:
      ne ^= (Q.charCodeAt(ie + 1) & 255) << 8;
    case 1:
      ne ^= Q.charCodeAt(ie) & 255, ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16);
  }
  return ne ^= ne >>> 13, ne = 1540483477 * (ne & 65535) + ((1540483477 * (ne >>> 16) & 65535) << 16), (ne ^ ne >>> 15) >>> 0;
}
var charsLength = 52, getAlphabeticChar = function Q(ee) {
  return String.fromCharCode(ee + (ee > 25 ? 39 : 97));
};
function generateAlphabeticName(Q) {
  var ee = "", ne = void 0;
  for (ne = Q; ne > charsLength; ne = Math.floor(ne / charsLength))
    ee = getAlphabeticChar(ne % charsLength) + ee;
  return getAlphabeticChar(ne % charsLength) + ee;
}
function hasFunctionObjectKey(Q) {
  for (var ee in Q)
    if (isFunction(Q[ee]))
      return !0;
  return !1;
}
function isStaticRules(Q, ee) {
  for (var ne = 0; ne < Q.length; ne += 1) {
    var ie = Q[ne];
    if (Array.isArray(ie) && !isStaticRules(ie, ee))
      return !1;
    if (isFunction(ie) && !isStyledComponent(ie))
      return !1;
  }
  return !ee.some(function(ae) {
    return isFunction(ae) || hasFunctionObjectKey(ae);
  });
}
var hasher = function Q(ee) {
  return generateAlphabeticName(murmurhash(ee));
}, ComponentStyle = function() {
  function Q(ee, ne, ie) {
    classCallCheck(this, Q), this.rules = ee, this.isStatic = process.env.NODE_ENV === "production" && isStaticRules(ee, ne), this.componentId = ie, StyleSheet.master.hasId(ie) || StyleSheet.master.deferredInject(ie, []);
  }
  return Q.prototype.generateAndInjectStyles = function(ne, ie) {
    var ae = this.isStatic, ce = this.componentId, le = this.lastClassName;
    if (IS_BROWSER && ae && typeof le == "string" && ie.hasNameForId(ce, le))
      return le;
    var de = flatten(this.rules, ne, ie), ye = hasher(this.componentId + de.join(""));
    return ie.hasNameForId(ce, ye) || ie.inject(this.componentId, stringifyRules(de, "." + ye, void 0, ce), ye), this.lastClassName = ye, ye;
  }, Q.generateName = function(ne) {
    return hasher(ne);
  }, Q;
}(), LIMIT = 200, createWarnTooManyClasses = function(Q) {
  var ee = {}, ne = !1;
  return function(ie) {
    ne || (ee[ie] = !0, Object.keys(ee).length >= LIMIT && (console.warn("Over " + LIMIT + " classes were generated for component " + Q + `. 
Consider using the attrs method, together with a style object for frequently changed styles.
Example:
  const Component = styled.div.attrs(props => ({
    style: {
      background: props.background,
    },
  }))\`width: 100%;\`

  <Component />`), ne = !0, ee = {}));
  };
}, determineTheme = function(Q, ee) {
  var ne = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT, ie = ne ? Q.theme === ne.theme : !1, ae = Q.theme && !ie ? Q.theme : ee || ne.theme;
  return ae;
}, escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g, dashesAtEnds = /(^-|-$)/g;
function escape$1(Q) {
  return Q.replace(escapeRegex, "-").replace(dashesAtEnds, "");
}
function isTag(Q) {
  return typeof Q == "string" && (process.env.NODE_ENV !== "production" ? Q.charAt(0) === Q.charAt(0).toLowerCase() : !0);
}
function generateDisplayName(Q) {
  return isTag(Q) ? "styled." + Q : "Styled(" + getComponentName(Q) + ")";
}
var _TYPE_STATICS, REACT_STATICS = {
  childContextTypes: !0,
  contextTypes: !0,
  defaultProps: !0,
  displayName: !0,
  getDerivedStateFromProps: !0,
  propTypes: !0,
  type: !0
}, KNOWN_STATICS = {
  name: !0,
  length: !0,
  prototype: !0,
  caller: !0,
  callee: !0,
  arguments: !0,
  arity: !0
}, TYPE_STATICS = (_TYPE_STATICS = {}, _TYPE_STATICS[reactIs.exports.ForwardRef] = {
  $$typeof: !0,
  render: !0
}, _TYPE_STATICS), defineProperty$1 = Object.defineProperty, getOwnPropertyNames = Object.getOwnPropertyNames, _Object$getOwnPropert = Object.getOwnPropertySymbols, getOwnPropertySymbols = _Object$getOwnPropert === void 0 ? function() {
  return [];
} : _Object$getOwnPropert, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor, getPrototypeOf = Object.getPrototypeOf, objectPrototype = Object.prototype, arrayPrototype = Array.prototype;
function hoistNonReactStatics(Q, ee, ne) {
  if (typeof ee != "string") {
    var ie = getPrototypeOf(ee);
    ie && ie !== objectPrototype && hoistNonReactStatics(Q, ie, ne);
    for (var ae = arrayPrototype.concat(
      getOwnPropertyNames(ee),
      getOwnPropertySymbols(ee)
    ), ce = TYPE_STATICS[Q.$$typeof] || REACT_STATICS, le = TYPE_STATICS[ee.$$typeof] || REACT_STATICS, de = ae.length, ye = void 0, he = void 0; de--; )
      if (he = ae[de], !KNOWN_STATICS[he] && !(ne && ne[he]) && !(le && le[he]) && !(ce && ce[he]) && (ye = getOwnPropertyDescriptor(ee, he), ye))
        try {
          defineProperty$1(Q, he, ye);
        } catch {
        }
    return Q;
  }
  return Q;
}
function isDerivedReactComponent(Q) {
  return !!(Q && Q.prototype && Q.prototype.isReactComponent);
}
var once = function(Q) {
  var ee = !1;
  return function() {
    ee || (ee = !0, Q.apply(void 0, arguments));
  };
}, ThemeContext = react.exports.createContext(), ThemeConsumer = ThemeContext.Consumer;
(function(Q) {
  inherits(ee, Q);
  function ee(ne) {
    classCallCheck(this, ee);
    var ie = possibleConstructorReturn(this, Q.call(this, ne));
    return ie.getContext = memoizeOne(ie.getContext.bind(ie)), ie.renderInner = ie.renderInner.bind(ie), ie;
  }
  return ee.prototype.render = function() {
    return this.props.children ? /* @__PURE__ */ jsx(ThemeContext.Consumer, {
      children: this.renderInner
    }) : null;
  }, ee.prototype.renderInner = function(ie) {
    var ae = this.getContext(this.props.theme, ie);
    return /* @__PURE__ */ jsx(ThemeContext.Provider, {
      value: ae,
      children: this.props.children
    });
  }, ee.prototype.getTheme = function(ie, ae) {
    if (isFunction(ie)) {
      var ce = ie(ae);
      if (process.env.NODE_ENV !== "production" && (ce === null || Array.isArray(ce) || (typeof ce > "u" ? "undefined" : _typeof(ce)) !== "object"))
        throw new StyledComponentsError(7);
      return ce;
    }
    if (ie === null || Array.isArray(ie) || (typeof ie > "u" ? "undefined" : _typeof(ie)) !== "object")
      throw new StyledComponentsError(8);
    return _extends({}, ae, ie);
  }, ee.prototype.getContext = function(ie, ae) {
    return this.getTheme(ie, ae);
  }, ee;
})(react.exports.Component);
var ServerStyleSheet = function() {
  function Q() {
    classCallCheck(this, Q), this.masterSheet = StyleSheet.master, this.instance = this.masterSheet.clone(), this.sealed = !1;
  }
  return Q.prototype.seal = function() {
    if (!this.sealed) {
      var ne = this.masterSheet.clones.indexOf(this.instance);
      this.masterSheet.clones.splice(ne, 1), this.sealed = !0;
    }
  }, Q.prototype.collectStyles = function(ne) {
    if (this.sealed)
      throw new StyledComponentsError(2);
    return /* @__PURE__ */ jsx(StyleSheetManager, {
      sheet: this.instance,
      children: ne
    });
  }, Q.prototype.getStyleTags = function() {
    return this.seal(), this.instance.toHTML();
  }, Q.prototype.getStyleElement = function() {
    return this.seal(), this.instance.toReactElements();
  }, Q.prototype.interleaveWithNodeStream = function(ne) {
    throw new StyledComponentsError(3);
  }, Q;
}(), StyleSheetContext = react.exports.createContext(), StyleSheetConsumer = StyleSheetContext.Consumer, StyleSheetManager = function(Q) {
  inherits(ee, Q);
  function ee(ne) {
    classCallCheck(this, ee);
    var ie = possibleConstructorReturn(this, Q.call(this, ne));
    return ie.getContext = memoizeOne(ie.getContext), ie;
  }
  return ee.prototype.getContext = function(ie, ae) {
    if (ie)
      return ie;
    if (ae)
      return new StyleSheet(ae);
    throw new StyledComponentsError(4);
  }, ee.prototype.render = function() {
    var ie = this.props, ae = ie.children, ce = ie.sheet, le = ie.target;
    return /* @__PURE__ */ jsx(StyleSheetContext.Provider, {
      value: this.getContext(ce, le),
      children: process.env.NODE_ENV !== "production" ? React.Children.only(ae) : ae
    });
  }, ee;
}(react.exports.Component);
process.env.NODE_ENV !== "production" && (StyleSheetManager.propTypes = {
  sheet: propTypes.exports.oneOfType([propTypes.exports.instanceOf(StyleSheet), propTypes.exports.instanceOf(ServerStyleSheet)]),
  target: propTypes.exports.shape({
    appendChild: propTypes.exports.func.isRequired
  })
});
var identifiers = {};
function generateId(Q, ee, ne) {
  var ie = typeof ee != "string" ? "sc" : escape$1(ee), ae = (identifiers[ie] || 0) + 1;
  identifiers[ie] = ae;
  var ce = ie + "-" + Q.generateName(ie + ae);
  return ne ? ne + "-" + ce : ce;
}
var StyledComponent = function(Q) {
  inherits(ee, Q);
  function ee() {
    classCallCheck(this, ee);
    var ne = possibleConstructorReturn(this, Q.call(this));
    return ne.attrs = {}, ne.renderOuter = ne.renderOuter.bind(ne), ne.renderInner = ne.renderInner.bind(ne), process.env.NODE_ENV !== "production" && (ne.warnInnerRef = once(function(ie) {
      return console.warn('The "innerRef" API has been removed in styled-components v4 in favor of React 16 ref forwarding, use "ref" instead like a typical component. "innerRef" was detected on component "' + ie + '".');
    }), ne.warnAttrsFnObjectKeyDeprecated = once(function(ie, ae) {
      return console.warn('Functions as object-form attrs({}) keys are now deprecated and will be removed in a future version of styled-components. Switch to the new attrs(props => ({})) syntax instead for easier and more powerful composition. The attrs key in question is "' + ie + '" on component "' + ae + '".', `
 ` + new Error().stack);
    }), ne.warnNonStyledComponentAttrsObjectKey = once(function(ie, ae) {
      return console.warn(`It looks like you've used a non styled-component as the value for the "` + ie + '" prop in an object-form attrs constructor of "' + ae + `".
You should use the new function-form attrs constructor which avoids this issue: attrs(props => ({ yourStuff }))
To continue using the deprecated object syntax, you'll need to wrap your component prop in a function to make it available inside the styled component (you'll still get the deprecation warning though.)
` + ("For example, { " + ie + ": () => InnerComponent } instead of { " + ie + ": InnerComponent }"));
    })), ne;
  }
  return ee.prototype.render = function() {
    return /* @__PURE__ */ jsx(StyleSheetConsumer, {
      children: this.renderOuter
    });
  }, ee.prototype.renderOuter = function() {
    var ie = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : StyleSheet.master;
    return this.styleSheet = ie, this.props.forwardedComponent.componentStyle.isStatic ? this.renderInner() : /* @__PURE__ */ jsx(ThemeConsumer, {
      children: this.renderInner
    });
  }, ee.prototype.renderInner = function(ie) {
    var ae = this.props.forwardedComponent, ce = ae.componentStyle, le = ae.defaultProps, de = ae.displayName, ye = ae.foldedComponentIds, he = ae.styledComponentId, Be = ae.target, Ee = void 0;
    ce.isStatic ? Ee = this.generateAndInjectStyles(EMPTY_OBJECT, this.props) : Ee = this.generateAndInjectStyles(determineTheme(this.props, ie, le) || EMPTY_OBJECT, this.props);
    var me = this.props.as || this.attrs.as || Be, ge = isTag(me), be = {}, we = _extends({}, this.props, this.attrs), Oe = void 0;
    for (Oe in we)
      process.env.NODE_ENV !== "production" && Oe === "innerRef" && ge && this.warnInnerRef(de), !(Oe === "forwardedComponent" || Oe === "as") && (Oe === "forwardedRef" ? be.ref = we[Oe] : Oe === "forwardedAs" ? be.as = we[Oe] : (!ge || index(Oe)) && (be[Oe] = we[Oe]));
    return this.props.style && this.attrs.style && (be.style = _extends({}, this.attrs.style, this.props.style)), be.className = Array.prototype.concat(ye, he, Ee !== he ? Ee : null, this.props.className, this.attrs.className).filter(Boolean).join(" "), react.exports.createElement(me, be);
  }, ee.prototype.buildExecutionContext = function(ie, ae, ce) {
    var le = this, de = _extends({}, ae, {
      theme: ie
    });
    return ce.length && (this.attrs = {}, ce.forEach(function(ye) {
      var he = ye, Be = !1, Ee = void 0, me = void 0;
      isFunction(he) && (he = he(de), Be = !0);
      for (me in he)
        Ee = he[me], Be || isFunction(Ee) && !isDerivedReactComponent(Ee) && !isStyledComponent(Ee) && (process.env.NODE_ENV !== "production" && le.warnAttrsFnObjectKeyDeprecated(me, ae.forwardedComponent.displayName), Ee = Ee(de), process.env.NODE_ENV !== "production" && React.isValidElement(Ee) && le.warnNonStyledComponentAttrsObjectKey(me, ae.forwardedComponent.displayName)), le.attrs[me] = Ee, de[me] = Ee;
    })), de;
  }, ee.prototype.generateAndInjectStyles = function(ie, ae) {
    var ce = ae.forwardedComponent, le = ce.attrs, de = ce.componentStyle, ye = ce.warnTooManyClasses;
    if (de.isStatic && !le.length)
      return de.generateAndInjectStyles(EMPTY_OBJECT, this.styleSheet);
    var he = de.generateAndInjectStyles(this.buildExecutionContext(ie, ae, le), this.styleSheet);
    return process.env.NODE_ENV !== "production" && ye && ye(he), he;
  }, ee;
}(react.exports.Component);
function createStyledComponent(Q, ee, ne) {
  var ie = isStyledComponent(Q), ae = !isTag(Q), ce = ee.displayName, le = ce === void 0 ? generateDisplayName(Q) : ce, de = ee.componentId, ye = de === void 0 ? generateId(ComponentStyle, ee.displayName, ee.parentComponentId) : de, he = ee.ParentComponent, Be = he === void 0 ? StyledComponent : he, Ee = ee.attrs, me = Ee === void 0 ? EMPTY_ARRAY : Ee, ge = ee.displayName && ee.componentId ? escape$1(ee.displayName) + "-" + ee.componentId : ee.componentId || ye, be = ie && Q.attrs ? Array.prototype.concat(Q.attrs, me).filter(Boolean) : me, we = new ComponentStyle(ie ? Q.componentStyle.rules.concat(ne) : ne, be, ge), Oe = void 0, He = function(Ge, Fe) {
    return /* @__PURE__ */ jsx(Be, {
      ...Ge,
      forwardedComponent: Oe,
      forwardedRef: Fe
    });
  };
  return He.displayName = le, Oe = React.forwardRef(He), Oe.displayName = le, Oe.attrs = be, Oe.componentStyle = we, Oe.foldedComponentIds = ie ? Array.prototype.concat(Q.foldedComponentIds, Q.styledComponentId) : EMPTY_ARRAY, Oe.styledComponentId = ge, Oe.target = ie ? Q.target : Q, Oe.withComponent = function(Ge) {
    var Fe = ee.componentId, Pe = objectWithoutProperties(ee, ["componentId"]), We = Fe && Fe + "-" + (isTag(Ge) ? Ge : escape$1(getComponentName(Ge))), tt = _extends({}, Pe, {
      attrs: be,
      componentId: We,
      ParentComponent: Be
    });
    return createStyledComponent(Ge, tt, ne);
  }, Object.defineProperty(Oe, "defaultProps", {
    get: function() {
      return this._foldedDefaultProps;
    },
    set: function(Ge) {
      this._foldedDefaultProps = ie ? merge(Q.defaultProps, Ge) : Ge;
    }
  }), process.env.NODE_ENV !== "production" && (Oe.warnTooManyClasses = createWarnTooManyClasses(le)), Oe.toString = function() {
    return "." + Oe.styledComponentId;
  }, ae && hoistNonReactStatics(Oe, Q, {
    attrs: !0,
    componentStyle: !0,
    displayName: !0,
    foldedComponentIds: !0,
    styledComponentId: !0,
    target: !0,
    withComponent: !0
  }), Oe;
}
var domElements = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "marker",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], styled = function Q(ee) {
  return constructWithOptions(createStyledComponent, ee);
};
domElements.forEach(function(Q) {
  styled[Q] = styled(Q);
});
IS_BROWSER && (window.scCGSHMRCache = {});
process.env.NODE_ENV !== "production" && typeof navigator < "u" && navigator.product === "ReactNative" && console.warn(`It looks like you've imported 'styled-components' on React Native.
Perhaps you're looking to import 'styled-components/native'?
Read more about this at https://www.styled-components.com/docs/basics#react-native`);
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && typeof window < "u" && typeof navigator < "u" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Node.js") === -1 && navigator.userAgent.indexOf("jsdom") === -1 && (window["__styled-components-init__"] = window["__styled-components-init__"] || 0, window["__styled-components-init__"] === 1 && console.warn(`It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles not rendering properly, errors happening during rehydration process and makes your application bigger without a good reason.

See https://s-c.sh/2BAXzed for more info.`), window["__styled-components-init__"] += 1);
const styled$1 = styled, StyledFrame = styled$1.div`
  align-self: flex-end;
  display: flex;
  background-image: url("frame/left-top-corner.png"),
    url("frame/right-top-corner.png"), url("frame/left-bottom-corner.png"),
    url("frame/right-bottom-corner.png"), url("frame/top-horizontal-bar.png"),
    url("frame/bottom-horizontal-bar.png"), url("frame/left-vertical-bar.png"),
    url("frame/right-vertical-bar.png"), url("frame/bg2.jpg");
  background-position: left top, right top, left 1px bottom, right 1px bottom,
    left 1px, left 1px bottom, left 1px bottom, right 1px top, center top;
  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat, repeat-x,
    repeat-x, repeat-y, repeat-y, no-repeat;
  background-color: #1d2123;
  position: relative;
  padding: 8px;
`;
StyledFrame.displayName = "StyledFrame";
const Frame = ({
  className: Q,
  children: ee
}) => /* @__PURE__ */ jsx(StyledFrame, {
  className: Q,
  children: /* @__PURE__ */ jsx("div", {
    className: "w-full h-full p-3 rounded shadow-inner bg-[url('/frame/bg.jpg')] bg-center bg-cover",
    children: ee
  })
}), StyledBagBox = styled$1.div`
  ${(Q) => {
  const {
    canDrop: ee,
    isOver: ne
  } = Q;
  return css`
      position: relative;
      border: ${ee ? `1px solid ${ne ? "green" : "gold"}` : "1px solid #0c1e20"};
      position: relative;
      width: 6em;
      display: flex;
      height: 6em;
      align-items: center;
      justify-content: center;
      background-image: radial-gradient(#0c1e20 0%, #101010 66%);
      border-radius: 2px;
      box-shadow: 0px 0px 0px 2px #2f3639;
    `;
}}
`;
StyledBagBox.displayName = "StyledBagBox";
const RemoteBox = ({
  className: Q,
  children: ee
}) => /* @__PURE__ */ jsx(StyledBagBox, {
  className: Q,
  isOver: !1,
  canDrop: !1,
  children: ee
}), RemoteBox$1 = react.exports.memo(RemoteBox), BagBox = ({
  className: Q,
  children: ee,
  isOver: ne,
  canDrop: ie
}) => /* @__PURE__ */ jsx(StyledBagBox, {
  className: Q,
  isOver: ne,
  canDrop: ie,
  children: ee
}), BagBox$1 = react.exports.memo(BagBox);
var classnames$1 = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(Q) {
  (function() {
    var ee = {}.hasOwnProperty;
    function ne() {
      for (var ie = [], ae = 0; ae < arguments.length; ae++) {
        var ce = arguments[ae];
        if (!!ce) {
          var le = typeof ce;
          if (le === "string" || le === "number")
            ie.push(ce);
          else if (Array.isArray(ce)) {
            if (ce.length) {
              var de = ne.apply(null, ce);
              de && ie.push(de);
            }
          } else if (le === "object") {
            if (ce.toString !== Object.prototype.toString && !ce.toString.toString().includes("[native code]")) {
              ie.push(ce.toString());
              continue;
            }
            for (var ye in ce)
              ee.call(ce, ye) && ce[ye] && ie.push(ye);
          }
        }
      }
      return ie.join(" ");
    }
    Q.exports ? (ne.default = ne, Q.exports = ne) : window.classNames = ne;
  })();
})(classnames$1);
const classnames = classnames$1.exports;
var react3dViewer = { exports: {} };
/*!
 *  react-3d-viewer v1.0.12
 *  By https://github.com/dwqdaiwenqi 
 *  Github: https://github.com/dwqdaiwenqi/react-3d-viewer
 *  MIT Licensed.
 */
(function(Q, ee) {
  (function(ne, ie) {
    Q.exports = ie();
  })(window, function() {
    return function(ne) {
      var ie = {};
      function ae(ce) {
        if (ie[ce])
          return ie[ce].exports;
        var le = ie[ce] = { i: ce, l: !1, exports: {} };
        return ne[ce].call(le.exports, le, le.exports, ae), le.l = !0, le.exports;
      }
      return ae.m = ne, ae.c = ie, ae.d = function(ce, le, de) {
        ae.o(ce, le) || Object.defineProperty(ce, le, { enumerable: !0, get: de });
      }, ae.r = function(ce) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(ce, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(ce, "__esModule", { value: !0 });
      }, ae.t = function(ce, le) {
        if (1 & le && (ce = ae(ce)), 8 & le || 4 & le && typeof ce == "object" && ce && ce.__esModule)
          return ce;
        var de = /* @__PURE__ */ Object.create(null);
        if (ae.r(de), Object.defineProperty(de, "default", { enumerable: !0, value: ce }), 2 & le && typeof ce != "string")
          for (var ye in ce)
            ae.d(de, ye, function(he) {
              return ce[he];
            }.bind(null, ye));
        return de;
      }, ae.n = function(ce) {
        var le = ce && ce.__esModule ? function() {
          return ce.default;
        } : function() {
          return ce;
        };
        return ae.d(le, "a", le), le;
      }, ae.o = function(ce, le) {
        return Object.prototype.hasOwnProperty.call(ce, le);
      }, ae.p = "", ae(ae.s = 13);
    }([function(ne, ie, ae) {
      function ce() {
      }
      ae.r(ie), ae.d(ie, "WebGLRenderTargetCube", function() {
        return fa;
      }), ae.d(ie, "WebGLRenderTarget", function() {
        return jo;
      }), ae.d(ie, "WebGLRenderer", function() {
        return AA;
      }), ae.d(ie, "ShaderLib", function() {
        return rr;
      }), ae.d(ie, "UniformsLib", function() {
        return Ct;
      }), ae.d(ie, "UniformsUtils", function() {
        return $i;
      }), ae.d(ie, "ShaderChunk", function() {
        return ei;
      }), ae.d(ie, "FogExp2", function() {
        return ns;
      }), ae.d(ie, "Fog", function() {
        return is;
      }), ae.d(ie, "Scene", function() {
        return Nc;
      }), ae.d(ie, "Sprite", function() {
        return Ds;
      }), ae.d(ie, "LOD", function() {
        return qs;
      }), ae.d(ie, "SkinnedMesh", function() {
        return Fc;
      }), ae.d(ie, "Skeleton", function() {
        return $s;
      }), ae.d(ie, "Bone", function() {
        return kc;
      }), ae.d(ie, "Mesh", function() {
        return lo;
      }), ae.d(ie, "LineSegments", function() {
        return gi;
      }), ae.d(ie, "LineLoop", function() {
        return Gc;
      }), ae.d(ie, "Line", function() {
        return fo;
      }), ae.d(ie, "Points", function() {
        return os;
      }), ae.d(ie, "Group", function() {
        return rs;
      }), ae.d(ie, "VideoTexture", function() {
        return uA;
      }), ae.d(ie, "DataTexture", function() {
        return Qo;
      }), ae.d(ie, "CompressedTexture", function() {
        return as;
      }), ae.d(ie, "CubeTexture", function() {
        return aa;
      }), ae.d(ie, "CanvasTexture", function() {
        return js;
      }), ae.d(ie, "DepthTexture", function() {
        return Ys;
      }), ae.d(ie, "Texture", function() {
        return li;
      }), ae.d(ie, "CompressedTextureLoader", function() {
        return vu;
      }), ae.d(ie, "DataTextureLoader", function() {
        return hA;
      }), ae.d(ie, "CubeTextureLoader", function() {
        return pA;
      }), ae.d(ie, "TextureLoader", function() {
        return Pc;
      }), ae.d(ie, "ObjectLoader", function() {
        return bu;
      }), ae.d(ie, "MaterialLoader", function() {
        return eA;
      }), ae.d(ie, "BufferGeometryLoader", function() {
        return BA;
      }), ae.d(ie, "DefaultLoadingManager", function() {
        return go;
      }), ae.d(ie, "LoadingManager", function() {
        return fA;
      }), ae.d(ie, "JSONLoader", function() {
        return CA;
      }), ae.d(ie, "ImageLoader", function() {
        return fc;
      }), ae.d(ie, "ImageBitmapLoader", function() {
        return IA;
      }), ae.d(ie, "FontLoader", function() {
        return Qu;
      }), ae.d(ie, "FileLoader", function() {
        return Go;
      }), ae.d(ie, "Loader", function() {
        return xs;
      }), ae.d(ie, "LoaderUtils", function() {
        return vA;
      }), ae.d(ie, "Cache", function() {
        return qa;
      }), ae.d(ie, "AudioLoader", function() {
        return _A;
      }), ae.d(ie, "SpotLightShadow", function() {
        return Dc;
      }), ae.d(ie, "SpotLight", function() {
        return qc;
      }), ae.d(ie, "PointLight", function() {
        return $c;
      }), ae.d(ie, "RectAreaLight", function() {
        return Lc;
      }), ae.d(ie, "HemisphereLight", function() {
        return Hc;
      }), ae.d(ie, "DirectionalLightShadow", function() {
        return jc;
      }), ae.d(ie, "DirectionalLight", function() {
        return Yc;
      }), ae.d(ie, "AmbientLight", function() {
        return Vc;
      }), ae.d(ie, "LightShadow", function() {
        return $a;
      }), ae.d(ie, "Light", function() {
        return wi;
      }), ae.d(ie, "StereoCamera", function() {
        return Su;
      }), ae.d(ie, "PerspectiveCamera", function() {
        return Si;
      }), ae.d(ie, "OrthographicCamera", function() {
        return ai;
      }), ae.d(ie, "CubeCamera", function() {
        return Ec;
      }), ae.d(ie, "ArrayCamera", function() {
        return Us;
      }), ae.d(ie, "Camera", function() {
        return Jn;
      }), ae.d(ie, "AudioListener", function() {
        return QA;
      }), ae.d(ie, "PositionalAudio", function() {
        return SA;
      }), ae.d(ie, "AudioContext", function() {
        return wA;
      }), ae.d(ie, "AudioAnalyser", function() {
        return TA;
      }), ae.d(ie, "Audio", function() {
        return bs;
      }), ae.d(ie, "VectorKeyframeTrack", function() {
        return Is;
      }), ae.d(ie, "StringKeyframeTrack", function() {
        return Xc;
      }), ae.d(ie, "QuaternionKeyframeTrack", function() {
        return mc;
      }), ae.d(ie, "NumberKeyframeTrack", function() {
        return Cs;
      }), ae.d(ie, "ColorKeyframeTrack", function() {
        return Kc;
      }), ae.d(ie, "BooleanKeyframeTrack", function() {
        return Wc;
      }), ae.d(ie, "PropertyMixer", function() {
        return RA;
      }), ae.d(ie, "PropertyBinding", function() {
        return to;
      }), ae.d(ie, "KeyframeTrack", function() {
        return Yi;
      }), ae.d(ie, "AnimationUtils", function() {
        return eo;
      }), ae.d(ie, "AnimationObjectGroup", function() {
        return Mu;
      }), ae.d(ie, "AnimationMixer", function() {
        return NA;
      }), ae.d(ie, "AnimationClip", function() {
        return To;
      }), ae.d(ie, "Uniform", function() {
        return rA;
      }), ae.d(ie, "InstancedBufferGeometry", function() {
        return kA;
      }), ae.d(ie, "BufferGeometry", function() {
        return an;
      }), ae.d(ie, "Geometry", function() {
        return Xr;
      }), ae.d(ie, "InterleavedBufferAttribute", function() {
        return Hs;
      }), ae.d(ie, "InstancedInterleavedBuffer", function() {
        return FA;
      }), ae.d(ie, "InterleavedBuffer", function() {
        return Qa;
      }), ae.d(ie, "InstancedBufferAttribute", function() {
        return GA;
      }), ae.d(ie, "Face3", function() {
        return ti;
      }), ae.d(ie, "Object3D", function() {
        return Cr;
      }), ae.d(ie, "Raycaster", function() {
        return ku;
      }), ae.d(ie, "Layers", function() {
        return on;
      }), ae.d(ie, "EventDispatcher", function() {
        return ce;
      }), ae.d(ie, "Clock", function() {
        return Gu;
      }), ae.d(ie, "QuaternionLinearInterpolant", function() {
        return Zc;
      }), ae.d(ie, "LinearInterpolant", function() {
        return gc;
      }), ae.d(ie, "DiscreteInterpolant", function() {
        return Jc;
      }), ae.d(ie, "CubicInterpolant", function() {
        return zc;
      }), ae.d(ie, "Interpolant", function() {
        return Io;
      }), ae.d(ie, "Triangle", function() {
        return vo;
      }), ae.d(ie, "Math", function() {
        return Mn;
      }), ae.d(ie, "Spherical", function() {
        return Ou;
      }), ae.d(ie, "Cylindrical", function() {
        return Pu;
      }), ae.d(ie, "Plane", function() {
        return uo;
      }), ae.d(ie, "Frustum", function() {
        return Za;
      }), ae.d(ie, "Sphere", function() {
        return ao;
      }), ae.d(ie, "Ray", function() {
        return _a;
      }), ae.d(ie, "Matrix4", function() {
        return yn;
      }), ae.d(ie, "Matrix3", function() {
        return qi;
      }), ae.d(ie, "Box3", function() {
        return yo;
      }), ae.d(ie, "Box2", function() {
        return PA;
      }), ae.d(ie, "Line3", function() {
        return UA;
      }), ae.d(ie, "Euler", function() {
        return pn;
      }), ae.d(ie, "Vector4", function() {
        return Kn;
      }), ae.d(ie, "Vector3", function() {
        return Bt;
      }), ae.d(ie, "Vector2", function() {
        return Qr;
      }), ae.d(ie, "Quaternion", function() {
        return hi;
      }), ae.d(ie, "Color", function() {
        return ze;
      }), ae.d(ie, "ImmediateRenderObject", function() {
        return yc;
      }), ae.d(ie, "VertexNormalsHelper", function() {
        return Bc;
      }), ae.d(ie, "SpotLightHelper", function() {
        return ws;
      }), ae.d(ie, "SkeletonHelper", function() {
        return _s;
      }), ae.d(ie, "PointLightHelper", function() {
        return Qs;
      }), ae.d(ie, "RectAreaLightHelper", function() {
        return Ss;
      }), ae.d(ie, "HemisphereLightHelper", function() {
        return Ts;
      }), ae.d(ie, "GridHelper", function() {
        return vc;
      }), ae.d(ie, "PolarGridHelper", function() {
        return nA;
      }), ae.d(ie, "FaceNormalsHelper", function() {
        return Cc;
      }), ae.d(ie, "DirectionalLightHelper", function() {
        return Rs;
      }), ae.d(ie, "CameraHelper", function() {
        return Ic;
      }), ae.d(ie, "BoxHelper", function() {
        return ja;
      }), ae.d(ie, "Box3Helper", function() {
        return xc;
      }), ae.d(ie, "PlaneHelper", function() {
        return bc;
      }), ae.d(ie, "ArrowHelper", function() {
        return Ya;
      }), ae.d(ie, "AxesHelper", function() {
        return wc;
      }), ae.d(ie, "Shape", function() {
        return ya;
      }), ae.d(ie, "Path", function() {
        return Do;
      }), ae.d(ie, "ShapePath", function() {
        return xA;
      }), ae.d(ie, "Font", function() {
        return bA;
      }), ae.d(ie, "CurvePath", function() {
        return ua;
      }), ae.d(ie, "Curve", function() {
        return Bn;
      }), ae.d(ie, "ImageUtils", function() {
        return No;
      }), ae.d(ie, "ShapeUtils", function() {
        return sa;
      }), ae.d(ie, "WebGLUtils", function() {
        return lu;
      }), ae.d(ie, "WireframeGeometry", function() {
        return ss;
      }), ae.d(ie, "ParametricGeometry", function() {
        return Vs;
      }), ae.d(ie, "ParametricBufferGeometry", function() {
        return cs;
      }), ae.d(ie, "TetrahedronGeometry", function() {
        return zs;
      }), ae.d(ie, "TetrahedronBufferGeometry", function() {
        return As;
      }), ae.d(ie, "OctahedronGeometry", function() {
        return Js;
      }), ae.d(ie, "OctahedronBufferGeometry", function() {
        return Sa;
      }), ae.d(ie, "IcosahedronGeometry", function() {
        return Ws;
      }), ae.d(ie, "IcosahedronBufferGeometry", function() {
        return us;
      }), ae.d(ie, "DodecahedronGeometry", function() {
        return Ks;
      }), ae.d(ie, "DodecahedronBufferGeometry", function() {
        return ls;
      }), ae.d(ie, "PolyhedronGeometry", function() {
        return Ls;
      }), ae.d(ie, "PolyhedronBufferGeometry", function() {
        return ho;
      }), ae.d(ie, "TubeGeometry", function() {
        return Zs;
      }), ae.d(ie, "TubeBufferGeometry", function() {
        return ds;
      }), ae.d(ie, "TorusKnotGeometry", function() {
        return Xs;
      }), ae.d(ie, "TorusKnotBufferGeometry", function() {
        return fs;
      }), ae.d(ie, "TorusGeometry", function() {
        return ec;
      }), ae.d(ie, "TorusBufferGeometry", function() {
        return hs;
      }), ae.d(ie, "TextGeometry", function() {
        return ac;
      }), ae.d(ie, "TextBufferGeometry", function() {
        return ps;
      }), ae.d(ie, "SphereGeometry", function() {
        return sc;
      }), ae.d(ie, "SphereBufferGeometry", function() {
        return Ma;
      }), ae.d(ie, "RingGeometry", function() {
        return cc;
      }), ae.d(ie, "RingBufferGeometry", function() {
        return gs;
      }), ae.d(ie, "PlaneGeometry", function() {
        return Os;
      }), ae.d(ie, "PlaneBufferGeometry", function() {
        return wa;
      }), ae.d(ie, "LatheGeometry", function() {
        return Ac;
      }), ae.d(ie, "LatheBufferGeometry", function() {
        return ms;
      }), ae.d(ie, "ShapeGeometry", function() {
        return Na;
      }), ae.d(ie, "ShapeBufferGeometry", function() {
        return ka;
      }), ae.d(ie, "ExtrudeGeometry", function() {
        return Ra;
      }), ae.d(ie, "ExtrudeBufferGeometry", function() {
        return zo;
      }), ae.d(ie, "EdgesGeometry", function() {
        return Es;
      }), ae.d(ie, "ConeGeometry", function() {
        return uc;
      }), ae.d(ie, "ConeBufferGeometry", function() {
        return lc;
      }), ae.d(ie, "CylinderGeometry", function() {
        return Fa;
      }), ae.d(ie, "CylinderBufferGeometry", function() {
        return ca;
      }), ae.d(ie, "CircleGeometry", function() {
        return dc;
      }), ae.d(ie, "CircleBufferGeometry", function() {
        return ys;
      }), ae.d(ie, "BoxGeometry", function() {
        return Xa;
      }), ae.d(ie, "BoxBufferGeometry", function() {
        return ba;
      }), ae.d(ie, "ShadowMaterial", function() {
        return Ga;
      }), ae.d(ie, "SpriteMaterial", function() {
        return Ea;
      }), ae.d(ie, "RawShaderMaterial", function() {
        return Bs;
      }), ae.d(ie, "ShaderMaterial", function() {
        return So;
      }), ae.d(ie, "PointsMaterial", function() {
        return ko;
      }), ae.d(ie, "MeshPhysicalMaterial", function() {
        return Oa;
      }), ae.d(ie, "MeshStandardMaterial", function() {
        return Jo;
      }), ae.d(ie, "MeshPhongMaterial", function() {
        return Fo;
      }), ae.d(ie, "MeshToonMaterial", function() {
        return Pa;
      }), ae.d(ie, "MeshNormalMaterial", function() {
        return Ua;
      }), ae.d(ie, "MeshLambertMaterial", function() {
        return Ha;
      }), ae.d(ie, "MeshDepthMaterial", function() {
        return ga;
      }), ae.d(ie, "MeshDistanceMaterial", function() {
        return ma;
      }), ae.d(ie, "MeshBasicMaterial", function() {
        return Bo;
      }), ae.d(ie, "LineDashedMaterial", function() {
        return Da;
      }), ae.d(ie, "LineBasicMaterial", function() {
        return Ai;
      }), ae.d(ie, "Material", function() {
        return Un;
      }), ae.d(ie, "Float64BufferAttribute", function() {
        return Gs;
      }), ae.d(ie, "Float32BufferAttribute", function() {
        return Yr;
      }), ae.d(ie, "Uint32BufferAttribute", function() {
        return Lo;
      }), ae.d(ie, "Int32BufferAttribute", function() {
        return xa;
      }), ae.d(ie, "Uint16BufferAttribute", function() {
        return Vo;
      }), ae.d(ie, "Int16BufferAttribute", function() {
        return Ia;
      }), ae.d(ie, "Uint8ClampedBufferAttribute", function() {
        return ha;
      }), ae.d(ie, "Uint8BufferAttribute", function() {
        return oa;
      }), ae.d(ie, "Int8BufferAttribute", function() {
        return Yo;
      }), ae.d(ie, "BufferAttribute", function() {
        return dn;
      }), ae.d(ie, "ArcCurve", function() {
        return vs;
      }), ae.d(ie, "CatmullRomCurve3", function() {
        return Xi;
      }), ae.d(ie, "CubicBezierCurve", function() {
        return Oo;
      }), ae.d(ie, "CubicBezierCurve3", function() {
        return Wo;
      }), ae.d(ie, "EllipseCurve", function() {
        return Co;
      }), ae.d(ie, "LineCurve", function() {
        return mo;
      }), ae.d(ie, "LineCurve3", function() {
        return Po;
      }), ae.d(ie, "QuadraticBezierCurve", function() {
        return Uo;
      }), ae.d(ie, "QuadraticBezierCurve3", function() {
        return Ko;
      }), ae.d(ie, "SplineCurve", function() {
        return Ho;
      }), ae.d(ie, "REVISION", function() {
        return le;
      }), ae.d(ie, "MOUSE", function() {
        return de;
      }), ae.d(ie, "CullFaceNone", function() {
        return ye;
      }), ae.d(ie, "CullFaceBack", function() {
        return he;
      }), ae.d(ie, "CullFaceFront", function() {
        return Be;
      }), ae.d(ie, "CullFaceFrontBack", function() {
        return Ee;
      }), ae.d(ie, "FrontFaceDirectionCW", function() {
        return me;
      }), ae.d(ie, "FrontFaceDirectionCCW", function() {
        return ge;
      }), ae.d(ie, "BasicShadowMap", function() {
        return be;
      }), ae.d(ie, "PCFShadowMap", function() {
        return we;
      }), ae.d(ie, "PCFSoftShadowMap", function() {
        return Oe;
      }), ae.d(ie, "FrontSide", function() {
        return He;
      }), ae.d(ie, "BackSide", function() {
        return Se;
      }), ae.d(ie, "DoubleSide", function() {
        return Ge;
      }), ae.d(ie, "FlatShading", function() {
        return Fe;
      }), ae.d(ie, "SmoothShading", function() {
        return Pe;
      }), ae.d(ie, "NoColors", function() {
        return We;
      }), ae.d(ie, "FaceColors", function() {
        return tt;
      }), ae.d(ie, "VertexColors", function() {
        return Et;
      }), ae.d(ie, "NoBlending", function() {
        return Nt;
      }), ae.d(ie, "NormalBlending", function() {
        return et;
      }), ae.d(ie, "AdditiveBlending", function() {
        return mt;
      }), ae.d(ie, "SubtractiveBlending", function() {
        return Mt;
      }), ae.d(ie, "MultiplyBlending", function() {
        return Ot;
      }), ae.d(ie, "CustomBlending", function() {
        return yt;
      }), ae.d(ie, "AddEquation", function() {
        return Qt;
      }), ae.d(ie, "SubtractEquation", function() {
        return Yt;
      }), ae.d(ie, "ReverseSubtractEquation", function() {
        return jt;
      }), ae.d(ie, "MinEquation", function() {
        return $t;
      }), ae.d(ie, "MaxEquation", function() {
        return Wt;
      }), ae.d(ie, "ZeroFactor", function() {
        return st;
      }), ae.d(ie, "OneFactor", function() {
        return at;
      }), ae.d(ie, "SrcColorFactor", function() {
        return wt;
      }), ae.d(ie, "OneMinusSrcColorFactor", function() {
        return Ut;
      }), ae.d(ie, "SrcAlphaFactor", function() {
        return $e;
      }), ae.d(ie, "OneMinusSrcAlphaFactor", function() {
        return ir;
      }), ae.d(ie, "DstAlphaFactor", function() {
        return tr;
      }), ae.d(ie, "OneMinusDstAlphaFactor", function() {
        return ar;
      }), ae.d(ie, "DstColorFactor", function() {
        return ht;
      }), ae.d(ie, "OneMinusDstColorFactor", function() {
        return qt;
      }), ae.d(ie, "SrcAlphaSaturateFactor", function() {
        return Xe;
      }), ae.d(ie, "NeverDepth", function() {
        return nt;
      }), ae.d(ie, "AlwaysDepth", function() {
        return je;
      }), ae.d(ie, "LessDepth", function() {
        return It;
      }), ae.d(ie, "LessEqualDepth", function() {
        return lt;
      }), ae.d(ie, "EqualDepth", function() {
        return Ye;
      }), ae.d(ie, "GreaterEqualDepth", function() {
        return _e;
      }), ae.d(ie, "GreaterDepth", function() {
        return Ie;
      }), ae.d(ie, "NotEqualDepth", function() {
        return Ce;
      }), ae.d(ie, "MultiplyOperation", function() {
        return ke;
      }), ae.d(ie, "MixOperation", function() {
        return Ve;
      }), ae.d(ie, "AddOperation", function() {
        return Ze;
      }), ae.d(ie, "NoToneMapping", function() {
        return ct;
      }), ae.d(ie, "LinearToneMapping", function() {
        return kt;
      }), ae.d(ie, "ReinhardToneMapping", function() {
        return Jt;
      }), ae.d(ie, "Uncharted2ToneMapping", function() {
        return Kt;
      }), ae.d(ie, "CineonToneMapping", function() {
        return Zt;
      }), ae.d(ie, "UVMapping", function() {
        return De;
      }), ae.d(ie, "CubeReflectionMapping", function() {
        return Te;
      }), ae.d(ie, "CubeRefractionMapping", function() {
        return Re;
      }), ae.d(ie, "EquirectangularReflectionMapping", function() {
        return ot;
      }), ae.d(ie, "EquirectangularRefractionMapping", function() {
        return bt;
      }), ae.d(ie, "SphericalReflectionMapping", function() {
        return Pt;
      }), ae.d(ie, "CubeUVReflectionMapping", function() {
        return Vt;
      }), ae.d(ie, "CubeUVRefractionMapping", function() {
        return Ir;
      }), ae.d(ie, "RepeatWrapping", function() {
        return mr;
      }), ae.d(ie, "ClampToEdgeWrapping", function() {
        return _r;
      }), ae.d(ie, "MirroredRepeatWrapping", function() {
        return Br;
      }), ae.d(ie, "NearestFilter", function() {
        return Tr;
      }), ae.d(ie, "NearestMipMapNearestFilter", function() {
        return cn;
      }), ae.d(ie, "NearestMipMapLinearFilter", function() {
        return oi;
      }), ae.d(ie, "LinearFilter", function() {
        return un;
      }), ae.d(ie, "LinearMipMapNearestFilter", function() {
        return Yn;
      }), ae.d(ie, "LinearMipMapLinearFilter", function() {
        return Vn;
      }), ae.d(ie, "UnsignedByteType", function() {
        return Dn;
      }), ae.d(ie, "ByteType", function() {
        return Ln;
      }), ae.d(ie, "ShortType", function() {
        return di;
      }), ae.d(ie, "UnsignedShortType", function() {
        return yi;
      }), ae.d(ie, "IntType", function() {
        return Zi;
      }), ae.d(ie, "UnsignedIntType", function() {
        return ki;
      }), ae.d(ie, "FloatType", function() {
        return Pn;
      }), ae.d(ie, "HalfFloatType", function() {
        return ni;
      }), ae.d(ie, "UnsignedShort4444Type", function() {
        return Xn;
      }), ae.d(ie, "UnsignedShort5551Type", function() {
        return fi;
      }), ae.d(ie, "UnsignedShort565Type", function() {
        return Bi;
      }), ae.d(ie, "UnsignedInt248Type", function() {
        return Ci;
      }), ae.d(ie, "AlphaFormat", function() {
        return Ii;
      }), ae.d(ie, "RGBFormat", function() {
        return Ft;
      }), ae.d(ie, "RGBAFormat", function() {
        return sr;
      }), ae.d(ie, "LuminanceFormat", function() {
        return Gr;
      }), ae.d(ie, "LuminanceAlphaFormat", function() {
        return zr;
      }), ae.d(ie, "RGBEFormat", function() {
        return wn;
      }), ae.d(ie, "DepthFormat", function() {
        return Tn;
      }), ae.d(ie, "DepthStencilFormat", function() {
        return _n;
      }), ae.d(ie, "RGB_S3TC_DXT1_Format", function() {
        return vn;
      }), ae.d(ie, "RGBA_S3TC_DXT1_Format", function() {
        return kn;
      }), ae.d(ie, "RGBA_S3TC_DXT3_Format", function() {
        return Zn;
      }), ae.d(ie, "RGBA_S3TC_DXT5_Format", function() {
        return An;
      }), ae.d(ie, "RGB_PVRTC_4BPPV1_Format", function() {
        return nn;
      }), ae.d(ie, "RGB_PVRTC_2BPPV1_Format", function() {
        return Kr;
      }), ae.d(ie, "RGBA_PVRTC_4BPPV1_Format", function() {
        return xt;
      }), ae.d(ie, "RGBA_PVRTC_2BPPV1_Format", function() {
        return Sr;
      }), ae.d(ie, "RGB_ETC1_Format", function() {
        return Xt;
      }), ae.d(ie, "RGBA_ASTC_4x4_Format", function() {
        return Vr;
      }), ae.d(ie, "RGBA_ASTC_5x4_Format", function() {
        return qe;
      }), ae.d(ie, "RGBA_ASTC_5x5_Format", function() {
        return Ke;
      }), ae.d(ie, "RGBA_ASTC_6x5_Format", function() {
        return At;
      }), ae.d(ie, "RGBA_ASTC_6x6_Format", function() {
        return gt;
      }), ae.d(ie, "RGBA_ASTC_8x5_Format", function() {
        return dt;
      }), ae.d(ie, "RGBA_ASTC_8x6_Format", function() {
        return er;
      }), ae.d(ie, "RGBA_ASTC_8x8_Format", function() {
        return dr;
      }), ae.d(ie, "RGBA_ASTC_10x5_Format", function() {
        return ur;
      }), ae.d(ie, "RGBA_ASTC_10x6_Format", function() {
        return Rr;
      }), ae.d(ie, "RGBA_ASTC_10x8_Format", function() {
        return Jr;
      }), ae.d(ie, "RGBA_ASTC_10x10_Format", function() {
        return Mr;
      }), ae.d(ie, "RGBA_ASTC_12x10_Format", function() {
        return Zr;
      }), ae.d(ie, "RGBA_ASTC_12x12_Format", function() {
        return Rn;
      }), ae.d(ie, "LoopOnce", function() {
        return Fn;
      }), ae.d(ie, "LoopRepeat", function() {
        return Gn;
      }), ae.d(ie, "LoopPingPong", function() {
        return qr;
      }), ae.d(ie, "InterpolateDiscrete", function() {
        return jr;
      }), ae.d(ie, "InterpolateLinear", function() {
        return bn;
      }), ae.d(ie, "InterpolateSmooth", function() {
        return gn;
      }), ae.d(ie, "ZeroCurvatureEnding", function() {
        return sn;
      }), ae.d(ie, "ZeroSlopeEnding", function() {
        return On;
      }), ae.d(ie, "WrapAroundEnding", function() {
        return ii;
      }), ae.d(ie, "TrianglesDrawMode", function() {
        return xn;
      }), ae.d(ie, "TriangleStripDrawMode", function() {
        return Wr;
      }), ae.d(ie, "TriangleFanDrawMode", function() {
        return Cn;
      }), ae.d(ie, "LinearEncoding", function() {
        return zn;
      }), ae.d(ie, "sRGBEncoding", function() {
        return Qi;
      }), ae.d(ie, "GammaEncoding", function() {
        return Mi;
      }), ae.d(ie, "RGBEEncoding", function() {
        return Eo;
      }), ae.d(ie, "LogLuvEncoding", function() {
        return Ao;
      }), ae.d(ie, "RGBM7Encoding", function() {
        return xi;
      }), ae.d(ie, "RGBM16Encoding", function() {
        return na;
      }), ae.d(ie, "RGBDEncoding", function() {
        return da;
      }), ae.d(ie, "BasicDepthPacking", function() {
        return Ca;
      }), ae.d(ie, "RGBADepthPacking", function() {
        return ia;
      }), ae.d(ie, "TangentSpaceNormalMap", function() {
        return wo;
      }), ae.d(ie, "ObjectSpaceNormalMap", function() {
        return _o;
      }), ae.d(ie, "CubeGeometry", function() {
        return Xa;
      }), ae.d(ie, "Face4", function() {
        return Pl;
      }), ae.d(ie, "LineStrip", function() {
        return Ul;
      }), ae.d(ie, "LinePieces", function() {
        return Hl;
      }), ae.d(ie, "MeshFaceMaterial", function() {
        return Dl;
      }), ae.d(ie, "MultiMaterial", function() {
        return ql;
      }), ae.d(ie, "PointCloud", function() {
        return $l;
      }), ae.d(ie, "Particle", function() {
        return jl;
      }), ae.d(ie, "ParticleSystem", function() {
        return Yl;
      }), ae.d(ie, "PointCloudMaterial", function() {
        return Vl;
      }), ae.d(ie, "ParticleBasicMaterial", function() {
        return Ll;
      }), ae.d(ie, "ParticleSystemMaterial", function() {
        return zl;
      }), ae.d(ie, "Vertex", function() {
        return Jl;
      }), ae.d(ie, "DynamicBufferAttribute", function() {
        return Wl;
      }), ae.d(ie, "Int8Attribute", function() {
        return Kl;
      }), ae.d(ie, "Uint8Attribute", function() {
        return Zl;
      }), ae.d(ie, "Uint8ClampedAttribute", function() {
        return Xl;
      }), ae.d(ie, "Int16Attribute", function() {
        return ed;
      }), ae.d(ie, "Uint16Attribute", function() {
        return td;
      }), ae.d(ie, "Int32Attribute", function() {
        return rd;
      }), ae.d(ie, "Uint32Attribute", function() {
        return nd;
      }), ae.d(ie, "Float32Attribute", function() {
        return id;
      }), ae.d(ie, "Float64Attribute", function() {
        return od;
      }), ae.d(ie, "ClosedSplineCurve3", function() {
        return Uu;
      }), ae.d(ie, "SplineCurve3", function() {
        return Hu;
      }), ae.d(ie, "Spline", function() {
        return HA;
      }), ae.d(ie, "AxisHelper", function() {
        return ad;
      }), ae.d(ie, "BoundingBoxHelper", function() {
        return sd;
      }), ae.d(ie, "EdgesHelper", function() {
        return cd;
      }), ae.d(ie, "WireframeHelper", function() {
        return Ad;
      }), ae.d(ie, "XHRLoader", function() {
        return ud;
      }), ae.d(ie, "BinaryTextureLoader", function() {
        return ld;
      }), ae.d(ie, "GeometryUtils", function() {
        return dd;
      }), ae.d(ie, "Projector", function() {
        return fd;
      }), ae.d(ie, "CanvasRenderer", function() {
        return hd;
      }), ae.d(ie, "SceneUtils", function() {
        return pd;
      }), ae.d(ie, "LensFlare", function() {
        return gd;
      }), Number.EPSILON === void 0 && (Number.EPSILON = Math.pow(2, -52)), Number.isInteger === void 0 && (Number.isInteger = function(Z) {
        return typeof Z == "number" && isFinite(Z) && Math.floor(Z) === Z;
      }), Math.sign === void 0 && (Math.sign = function(Z) {
        return Z < 0 ? -1 : Z > 0 ? 1 : +Z;
      }), !("name" in Function.prototype) && Object.defineProperty(Function.prototype, "name", { get: function() {
        return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
      } }), Object.assign === void 0 && (Object.assign = function(Z) {
        if (Z == null)
          throw new TypeError("Cannot convert undefined or null to object");
        for (var te = Object(Z), oe = 1; oe < arguments.length; oe++) {
          var se = arguments[oe];
          if (se != null)
            for (var Ae in se)
              Object.prototype.hasOwnProperty.call(se, Ae) && (te[Ae] = se[Ae]);
        }
        return te;
      }), Object.assign(ce.prototype, { addEventListener: function(Z, te) {
        this._listeners === void 0 && (this._listeners = {});
        var oe = this._listeners;
        oe[Z] === void 0 && (oe[Z] = []), oe[Z].indexOf(te) === -1 && oe[Z].push(te);
      }, hasEventListener: function(Z, te) {
        if (this._listeners === void 0)
          return !1;
        var oe = this._listeners;
        return oe[Z] !== void 0 && oe[Z].indexOf(te) !== -1;
      }, removeEventListener: function(Z, te) {
        if (this._listeners !== void 0) {
          var oe = this._listeners[Z];
          if (oe !== void 0) {
            var se = oe.indexOf(te);
            se !== -1 && oe.splice(se, 1);
          }
        }
      }, dispatchEvent: function(Z) {
        if (this._listeners !== void 0) {
          var te = this._listeners[Z.type];
          if (te !== void 0) {
            Z.target = this;
            for (var oe = te.slice(0), se = 0, Ae = oe.length; se < Ae; se++)
              oe[se].call(this, Z);
          }
        }
      } });
      var le = "95", de = { LEFT: 0, MIDDLE: 1, RIGHT: 2 }, ye = 0, he = 1, Be = 2, Ee = 3, me = 0, ge = 1, be = 0, we = 1, Oe = 2, He = 0, Se = 1, Ge = 2, Fe = 1, Pe = 2, We = 0, tt = 1, Et = 2, Nt = 0, et = 1, mt = 2, Mt = 3, Ot = 4, yt = 5, Qt = 100, Yt = 101, jt = 102, $t = 103, Wt = 104, st = 200, at = 201, wt = 202, Ut = 203, $e = 204, ir = 205, tr = 206, ar = 207, ht = 208, qt = 209, Xe = 210, nt = 0, je = 1, It = 2, lt = 3, Ye = 4, _e = 5, Ie = 6, Ce = 7, ke = 0, Ve = 1, Ze = 2, ct = 0, kt = 1, Jt = 2, Kt = 3, Zt = 4, De = 300, Te = 301, Re = 302, ot = 303, bt = 304, Pt = 305, Vt = 306, Ir = 307, mr = 1e3, _r = 1001, Br = 1002, Tr = 1003, cn = 1004, oi = 1005, un = 1006, Yn = 1007, Vn = 1008, Dn = 1009, Ln = 1010, di = 1011, yi = 1012, Zi = 1013, ki = 1014, Pn = 1015, ni = 1016, Xn = 1017, fi = 1018, Bi = 1019, Ci = 1020, Ii = 1021, Ft = 1022, sr = 1023, Gr = 1024, zr = 1025, wn = sr, Tn = 1026, _n = 1027, vn = 33776, kn = 33777, Zn = 33778, An = 33779, nn = 35840, Kr = 35841, xt = 35842, Sr = 35843, Xt = 36196, Vr = 37808, qe = 37809, Ke = 37810, At = 37811, gt = 37812, dt = 37813, er = 37814, dr = 37815, ur = 37816, Rr = 37817, Jr = 37818, Mr = 37819, Zr = 37820, Rn = 37821, Fn = 2200, Gn = 2201, qr = 2202, jr = 2300, bn = 2301, gn = 2302, sn = 2400, On = 2401, ii = 2402, xn = 0, Wr = 1, Cn = 2, zn = 3e3, Qi = 3001, Mi = 3007, Eo = 3002, Ao = 3003, xi = 3004, na = 3005, da = 3006, Ca = 3200, ia = 3201, wo = 0, _o = 1, Mn = { DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: function() {
        for (var Z = [], te = 0; te < 256; te++)
          Z[te] = (te < 16 ? "0" : "") + te.toString(16);
        return function() {
          var oe = 4294967295 * Math.random() | 0, se = 4294967295 * Math.random() | 0, Ae = 4294967295 * Math.random() | 0, ue = 4294967295 * Math.random() | 0;
          return (Z[255 & oe] + Z[oe >> 8 & 255] + Z[oe >> 16 & 255] + Z[oe >> 24 & 255] + "-" + Z[255 & se] + Z[se >> 8 & 255] + "-" + Z[se >> 16 & 15 | 64] + Z[se >> 24 & 255] + "-" + Z[63 & Ae | 128] + Z[Ae >> 8 & 255] + "-" + Z[Ae >> 16 & 255] + Z[Ae >> 24 & 255] + Z[255 & ue] + Z[ue >> 8 & 255] + Z[ue >> 16 & 255] + Z[ue >> 24 & 255]).toUpperCase();
        };
      }(), clamp: function(Z, te, oe) {
        return Math.max(te, Math.min(oe, Z));
      }, euclideanModulo: function(Z, te) {
        return (Z % te + te) % te;
      }, mapLinear: function(Z, te, oe, se, Ae) {
        return se + (Z - te) * (Ae - se) / (oe - te);
      }, lerp: function(Z, te, oe) {
        return (1 - oe) * Z + oe * te;
      }, smoothstep: function(Z, te, oe) {
        return Z <= te ? 0 : Z >= oe ? 1 : (Z = (Z - te) / (oe - te)) * Z * (3 - 2 * Z);
      }, smootherstep: function(Z, te, oe) {
        return Z <= te ? 0 : Z >= oe ? 1 : (Z = (Z - te) / (oe - te)) * Z * Z * (Z * (6 * Z - 15) + 10);
      }, randInt: function(Z, te) {
        return Z + Math.floor(Math.random() * (te - Z + 1));
      }, randFloat: function(Z, te) {
        return Z + Math.random() * (te - Z);
      }, randFloatSpread: function(Z) {
        return Z * (0.5 - Math.random());
      }, degToRad: function(Z) {
        return Z * Mn.DEG2RAD;
      }, radToDeg: function(Z) {
        return Z * Mn.RAD2DEG;
      }, isPowerOfTwo: function(Z) {
        return (Z & Z - 1) == 0 && Z !== 0;
      }, ceilPowerOfTwo: function(Z) {
        return Math.pow(2, Math.ceil(Math.log(Z) / Math.LN2));
      }, floorPowerOfTwo: function(Z) {
        return Math.pow(2, Math.floor(Math.log(Z) / Math.LN2));
      } };
      function Qr(Z, te) {
        this.x = Z || 0, this.y = te || 0;
      }
      function yn() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
      }
      function hi(Z, te, oe, se) {
        this._x = Z || 0, this._y = te || 0, this._z = oe || 0, this._w = se !== void 0 ? se : 1;
      }
      function Bt(Z, te, oe) {
        this.x = Z || 0, this.y = te || 0, this.z = oe || 0;
      }
      function qi() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
      }
      Object.defineProperties(Qr.prototype, { width: { get: function() {
        return this.x;
      }, set: function(Z) {
        this.x = Z;
      } }, height: { get: function() {
        return this.y;
      }, set: function(Z) {
        this.y = Z;
      } } }), Object.assign(Qr.prototype, { isVector2: !0, set: function(Z, te) {
        return this.x = Z, this.y = te, this;
      }, setScalar: function(Z) {
        return this.x = Z, this.y = Z, this;
      }, setX: function(Z) {
        return this.x = Z, this;
      }, setY: function(Z) {
        return this.y = Z, this;
      }, setComponent: function(Z, te) {
        switch (Z) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          default:
            throw new Error("index is out of range: " + Z);
        }
        return this;
      }, getComponent: function(Z) {
        switch (Z) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          default:
            throw new Error("index is out of range: " + Z);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y);
      }, copy: function(Z) {
        return this.x = Z.x, this.y = Z.y, this;
      }, add: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Z, te)) : (this.x += Z.x, this.y += Z.y, this);
      }, addScalar: function(Z) {
        return this.x += Z, this.y += Z, this;
      }, addVectors: function(Z, te) {
        return this.x = Z.x + te.x, this.y = Z.y + te.y, this;
      }, addScaledVector: function(Z, te) {
        return this.x += Z.x * te, this.y += Z.y * te, this;
      }, sub: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Z, te)) : (this.x -= Z.x, this.y -= Z.y, this);
      }, subScalar: function(Z) {
        return this.x -= Z, this.y -= Z, this;
      }, subVectors: function(Z, te) {
        return this.x = Z.x - te.x, this.y = Z.y - te.y, this;
      }, multiply: function(Z) {
        return this.x *= Z.x, this.y *= Z.y, this;
      }, multiplyScalar: function(Z) {
        return this.x *= Z, this.y *= Z, this;
      }, divide: function(Z) {
        return this.x /= Z.x, this.y /= Z.y, this;
      }, divideScalar: function(Z) {
        return this.multiplyScalar(1 / Z);
      }, applyMatrix3: function(Z) {
        var te = this.x, oe = this.y, se = Z.elements;
        return this.x = se[0] * te + se[3] * oe + se[6], this.y = se[1] * te + se[4] * oe + se[7], this;
      }, min: function(Z) {
        return this.x = Math.min(this.x, Z.x), this.y = Math.min(this.y, Z.y), this;
      }, max: function(Z) {
        return this.x = Math.max(this.x, Z.x), this.y = Math.max(this.y, Z.y), this;
      }, clamp: function(Z, te) {
        return this.x = Math.max(Z.x, Math.min(te.x, this.x)), this.y = Math.max(Z.y, Math.min(te.y, this.y)), this;
      }, clampScalar: function() {
        var Z = new Qr(), te = new Qr();
        return function(oe, se) {
          return Z.set(oe, oe), te.set(se, se), this.clamp(Z, te);
        };
      }(), clampLength: function(Z, te) {
        var oe = this.length();
        return this.divideScalar(oe || 1).multiplyScalar(Math.max(Z, Math.min(te, oe)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this;
      }, dot: function(Z) {
        return this.x * Z.x + this.y * Z.y;
      }, cross: function(Z) {
        return this.x * Z.y - this.y * Z.x;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, angle: function() {
        var Z = Math.atan2(this.y, this.x);
        return Z < 0 && (Z += 2 * Math.PI), Z;
      }, distanceTo: function(Z) {
        return Math.sqrt(this.distanceToSquared(Z));
      }, distanceToSquared: function(Z) {
        var te = this.x - Z.x, oe = this.y - Z.y;
        return te * te + oe * oe;
      }, manhattanDistanceTo: function(Z) {
        return Math.abs(this.x - Z.x) + Math.abs(this.y - Z.y);
      }, setLength: function(Z) {
        return this.normalize().multiplyScalar(Z);
      }, lerp: function(Z, te) {
        return this.x += (Z.x - this.x) * te, this.y += (Z.y - this.y) * te, this;
      }, lerpVectors: function(Z, te, oe) {
        return this.subVectors(te, Z).multiplyScalar(oe).add(Z);
      }, equals: function(Z) {
        return Z.x === this.x && Z.y === this.y;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this.x = Z[te], this.y = Z[te + 1], this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this.x, Z[te + 1] = this.y, Z;
      }, fromBufferAttribute: function(Z, te, oe) {
        return oe !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = Z.getX(te), this.y = Z.getY(te), this;
      }, rotateAround: function(Z, te) {
        var oe = Math.cos(te), se = Math.sin(te), Ae = this.x - Z.x, ue = this.y - Z.y;
        return this.x = Ae * oe - ue * se + Z.x, this.y = Ae * se + ue * oe + Z.y, this;
      } }), Object.assign(yn.prototype, { isMatrix4: !0, set: function(Z, te, oe, se, Ae, ue, fe, pe, ve, xe, Me, Ne, Qe, Ue, Je, rt) {
        var it = this.elements;
        return it[0] = Z, it[4] = te, it[8] = oe, it[12] = se, it[1] = Ae, it[5] = ue, it[9] = fe, it[13] = pe, it[2] = ve, it[6] = xe, it[10] = Me, it[14] = Ne, it[3] = Qe, it[7] = Ue, it[11] = Je, it[15] = rt, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, clone: function() {
        return new yn().fromArray(this.elements);
      }, copy: function(Z) {
        var te = this.elements, oe = Z.elements;
        return te[0] = oe[0], te[1] = oe[1], te[2] = oe[2], te[3] = oe[3], te[4] = oe[4], te[5] = oe[5], te[6] = oe[6], te[7] = oe[7], te[8] = oe[8], te[9] = oe[9], te[10] = oe[10], te[11] = oe[11], te[12] = oe[12], te[13] = oe[13], te[14] = oe[14], te[15] = oe[15], this;
      }, copyPosition: function(Z) {
        var te = this.elements, oe = Z.elements;
        return te[12] = oe[12], te[13] = oe[13], te[14] = oe[14], this;
      }, extractBasis: function(Z, te, oe) {
        return Z.setFromMatrixColumn(this, 0), te.setFromMatrixColumn(this, 1), oe.setFromMatrixColumn(this, 2), this;
      }, makeBasis: function(Z, te, oe) {
        return this.set(Z.x, te.x, oe.x, 0, Z.y, te.y, oe.y, 0, Z.z, te.z, oe.z, 0, 0, 0, 0, 1), this;
      }, extractRotation: function() {
        var Z = new Bt();
        return function(te) {
          var oe = this.elements, se = te.elements, Ae = 1 / Z.setFromMatrixColumn(te, 0).length(), ue = 1 / Z.setFromMatrixColumn(te, 1).length(), fe = 1 / Z.setFromMatrixColumn(te, 2).length();
          return oe[0] = se[0] * Ae, oe[1] = se[1] * Ae, oe[2] = se[2] * Ae, oe[3] = 0, oe[4] = se[4] * ue, oe[5] = se[5] * ue, oe[6] = se[6] * ue, oe[7] = 0, oe[8] = se[8] * fe, oe[9] = se[9] * fe, oe[10] = se[10] * fe, oe[11] = 0, oe[12] = 0, oe[13] = 0, oe[14] = 0, oe[15] = 1, this;
        };
      }(), makeRotationFromEuler: function(Z) {
        Z && Z.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var te = this.elements, oe = Z.x, se = Z.y, Ae = Z.z, ue = Math.cos(oe), fe = Math.sin(oe), pe = Math.cos(se), ve = Math.sin(se), xe = Math.cos(Ae), Me = Math.sin(Ae);
        if (Z.order === "XYZ") {
          var Ne = ue * xe, Qe = ue * Me, Ue = fe * xe, Je = fe * Me;
          te[0] = pe * xe, te[4] = -pe * Me, te[8] = ve, te[1] = Qe + Ue * ve, te[5] = Ne - Je * ve, te[9] = -fe * pe, te[2] = Je - Ne * ve, te[6] = Ue + Qe * ve, te[10] = ue * pe;
        } else if (Z.order === "YXZ") {
          var rt = pe * xe, it = pe * Me, ft = ve * xe, vt = ve * Me;
          te[0] = rt + vt * fe, te[4] = ft * fe - it, te[8] = ue * ve, te[1] = ue * Me, te[5] = ue * xe, te[9] = -fe, te[2] = it * fe - ft, te[6] = vt + rt * fe, te[10] = ue * pe;
        } else if (Z.order === "ZXY")
          rt = pe * xe, it = pe * Me, ft = ve * xe, vt = ve * Me, te[0] = rt - vt * fe, te[4] = -ue * Me, te[8] = ft + it * fe, te[1] = it + ft * fe, te[5] = ue * xe, te[9] = vt - rt * fe, te[2] = -ue * ve, te[6] = fe, te[10] = ue * pe;
        else if (Z.order === "ZYX")
          Ne = ue * xe, Qe = ue * Me, Ue = fe * xe, Je = fe * Me, te[0] = pe * xe, te[4] = Ue * ve - Qe, te[8] = Ne * ve + Je, te[1] = pe * Me, te[5] = Je * ve + Ne, te[9] = Qe * ve - Ue, te[2] = -ve, te[6] = fe * pe, te[10] = ue * pe;
        else if (Z.order === "YZX") {
          var ut = ue * pe, Gt = ue * ve, Ht = fe * pe, pt = fe * ve;
          te[0] = pe * xe, te[4] = pt - ut * Me, te[8] = Ht * Me + Gt, te[1] = Me, te[5] = ue * xe, te[9] = -fe * xe, te[2] = -ve * xe, te[6] = Gt * Me + Ht, te[10] = ut - pt * Me;
        } else
          Z.order === "XZY" && (ut = ue * pe, Gt = ue * ve, Ht = fe * pe, pt = fe * ve, te[0] = pe * xe, te[4] = -Me, te[8] = ve * xe, te[1] = ut * Me + pt, te[5] = ue * xe, te[9] = Gt * Me - Ht, te[2] = Ht * Me - Gt, te[6] = fe * xe, te[10] = pt * Me + ut);
        return te[3] = 0, te[7] = 0, te[11] = 0, te[12] = 0, te[13] = 0, te[14] = 0, te[15] = 1, this;
      }, makeRotationFromQuaternion: function() {
        var Z = new Bt(0, 0, 0), te = new Bt(1, 1, 1);
        return function(oe) {
          return this.compose(Z, oe, te);
        };
      }(), lookAt: function() {
        var Z = new Bt(), te = new Bt(), oe = new Bt();
        return function(se, Ae, ue) {
          var fe = this.elements;
          return oe.subVectors(se, Ae), oe.lengthSq() === 0 && (oe.z = 1), oe.normalize(), Z.crossVectors(ue, oe), Z.lengthSq() === 0 && (Math.abs(ue.z) === 1 ? oe.x += 1e-4 : oe.z += 1e-4, oe.normalize(), Z.crossVectors(ue, oe)), Z.normalize(), te.crossVectors(oe, Z), fe[0] = Z.x, fe[4] = te.x, fe[8] = oe.x, fe[1] = Z.y, fe[5] = te.y, fe[9] = oe.y, fe[2] = Z.z, fe[6] = te.z, fe[10] = oe.z, this;
        };
      }(), multiply: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(Z, te)) : this.multiplyMatrices(this, Z);
      }, premultiply: function(Z) {
        return this.multiplyMatrices(Z, this);
      }, multiplyMatrices: function(Z, te) {
        var oe = Z.elements, se = te.elements, Ae = this.elements, ue = oe[0], fe = oe[4], pe = oe[8], ve = oe[12], xe = oe[1], Me = oe[5], Ne = oe[9], Qe = oe[13], Ue = oe[2], Je = oe[6], rt = oe[10], it = oe[14], ft = oe[3], vt = oe[7], ut = oe[11], Gt = oe[15], Ht = se[0], pt = se[4], Tt = se[8], zt = se[12], Dt = se[1], or = se[5], Lt = se[9], lr = se[13], gr = se[2], xr = se[6], vr = se[10], Dr = se[14], Or = se[3], yr = se[7], Nr = se[11], pr = se[15];
        return Ae[0] = ue * Ht + fe * Dt + pe * gr + ve * Or, Ae[4] = ue * pt + fe * or + pe * xr + ve * yr, Ae[8] = ue * Tt + fe * Lt + pe * vr + ve * Nr, Ae[12] = ue * zt + fe * lr + pe * Dr + ve * pr, Ae[1] = xe * Ht + Me * Dt + Ne * gr + Qe * Or, Ae[5] = xe * pt + Me * or + Ne * xr + Qe * yr, Ae[9] = xe * Tt + Me * Lt + Ne * vr + Qe * Nr, Ae[13] = xe * zt + Me * lr + Ne * Dr + Qe * pr, Ae[2] = Ue * Ht + Je * Dt + rt * gr + it * Or, Ae[6] = Ue * pt + Je * or + rt * xr + it * yr, Ae[10] = Ue * Tt + Je * Lt + rt * vr + it * Nr, Ae[14] = Ue * zt + Je * lr + rt * Dr + it * pr, Ae[3] = ft * Ht + vt * Dt + ut * gr + Gt * Or, Ae[7] = ft * pt + vt * or + ut * xr + Gt * yr, Ae[11] = ft * Tt + vt * Lt + ut * vr + Gt * Nr, Ae[15] = ft * zt + vt * lr + ut * Dr + Gt * pr, this;
      }, multiplyScalar: function(Z) {
        var te = this.elements;
        return te[0] *= Z, te[4] *= Z, te[8] *= Z, te[12] *= Z, te[1] *= Z, te[5] *= Z, te[9] *= Z, te[13] *= Z, te[2] *= Z, te[6] *= Z, te[10] *= Z, te[14] *= Z, te[3] *= Z, te[7] *= Z, te[11] *= Z, te[15] *= Z, this;
      }, applyToBufferAttribute: function() {
        var Z = new Bt();
        return function(te) {
          for (var oe = 0, se = te.count; oe < se; oe++)
            Z.x = te.getX(oe), Z.y = te.getY(oe), Z.z = te.getZ(oe), Z.applyMatrix4(this), te.setXYZ(oe, Z.x, Z.y, Z.z);
          return te;
        };
      }(), determinant: function() {
        var Z = this.elements, te = Z[0], oe = Z[4], se = Z[8], Ae = Z[12], ue = Z[1], fe = Z[5], pe = Z[9], ve = Z[13], xe = Z[2], Me = Z[6], Ne = Z[10], Qe = Z[14];
        return Z[3] * (+Ae * pe * Me - se * ve * Me - Ae * fe * Ne + oe * ve * Ne + se * fe * Qe - oe * pe * Qe) + Z[7] * (+te * pe * Qe - te * ve * Ne + Ae * ue * Ne - se * ue * Qe + se * ve * xe - Ae * pe * xe) + Z[11] * (+te * ve * Me - te * fe * Qe - Ae * ue * Me + oe * ue * Qe + Ae * fe * xe - oe * ve * xe) + Z[15] * (-se * fe * xe - te * pe * Me + te * fe * Ne + se * ue * Me - oe * ue * Ne + oe * pe * xe);
      }, transpose: function() {
        var Z, te = this.elements;
        return Z = te[1], te[1] = te[4], te[4] = Z, Z = te[2], te[2] = te[8], te[8] = Z, Z = te[6], te[6] = te[9], te[9] = Z, Z = te[3], te[3] = te[12], te[12] = Z, Z = te[7], te[7] = te[13], te[13] = Z, Z = te[11], te[11] = te[14], te[14] = Z, this;
      }, setPosition: function(Z) {
        var te = this.elements;
        return te[12] = Z.x, te[13] = Z.y, te[14] = Z.z, this;
      }, getInverse: function(Z, te) {
        var oe = this.elements, se = Z.elements, Ae = se[0], ue = se[1], fe = se[2], pe = se[3], ve = se[4], xe = se[5], Me = se[6], Ne = se[7], Qe = se[8], Ue = se[9], Je = se[10], rt = se[11], it = se[12], ft = se[13], vt = se[14], ut = se[15], Gt = Ue * vt * Ne - ft * Je * Ne + ft * Me * rt - xe * vt * rt - Ue * Me * ut + xe * Je * ut, Ht = it * Je * Ne - Qe * vt * Ne - it * Me * rt + ve * vt * rt + Qe * Me * ut - ve * Je * ut, pt = Qe * ft * Ne - it * Ue * Ne + it * xe * rt - ve * ft * rt - Qe * xe * ut + ve * Ue * ut, Tt = it * Ue * Me - Qe * ft * Me - it * xe * Je + ve * ft * Je + Qe * xe * vt - ve * Ue * vt, zt = Ae * Gt + ue * Ht + fe * pt + pe * Tt;
        if (zt === 0) {
          var Dt = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
          if (te === !0)
            throw new Error(Dt);
          return console.warn(Dt), this.identity();
        }
        var or = 1 / zt;
        return oe[0] = Gt * or, oe[1] = (ft * Je * pe - Ue * vt * pe - ft * fe * rt + ue * vt * rt + Ue * fe * ut - ue * Je * ut) * or, oe[2] = (xe * vt * pe - ft * Me * pe + ft * fe * Ne - ue * vt * Ne - xe * fe * ut + ue * Me * ut) * or, oe[3] = (Ue * Me * pe - xe * Je * pe - Ue * fe * Ne + ue * Je * Ne + xe * fe * rt - ue * Me * rt) * or, oe[4] = Ht * or, oe[5] = (Qe * vt * pe - it * Je * pe + it * fe * rt - Ae * vt * rt - Qe * fe * ut + Ae * Je * ut) * or, oe[6] = (it * Me * pe - ve * vt * pe - it * fe * Ne + Ae * vt * Ne + ve * fe * ut - Ae * Me * ut) * or, oe[7] = (ve * Je * pe - Qe * Me * pe + Qe * fe * Ne - Ae * Je * Ne - ve * fe * rt + Ae * Me * rt) * or, oe[8] = pt * or, oe[9] = (it * Ue * pe - Qe * ft * pe - it * ue * rt + Ae * ft * rt + Qe * ue * ut - Ae * Ue * ut) * or, oe[10] = (ve * ft * pe - it * xe * pe + it * ue * Ne - Ae * ft * Ne - ve * ue * ut + Ae * xe * ut) * or, oe[11] = (Qe * xe * pe - ve * Ue * pe - Qe * ue * Ne + Ae * Ue * Ne + ve * ue * rt - Ae * xe * rt) * or, oe[12] = Tt * or, oe[13] = (Qe * ft * fe - it * Ue * fe + it * ue * Je - Ae * ft * Je - Qe * ue * vt + Ae * Ue * vt) * or, oe[14] = (it * xe * fe - ve * ft * fe - it * ue * Me + Ae * ft * Me + ve * ue * vt - Ae * xe * vt) * or, oe[15] = (ve * Ue * fe - Qe * xe * fe + Qe * ue * Me - Ae * Ue * Me - ve * ue * Je + Ae * xe * Je) * or, this;
      }, scale: function(Z) {
        var te = this.elements, oe = Z.x, se = Z.y, Ae = Z.z;
        return te[0] *= oe, te[4] *= se, te[8] *= Ae, te[1] *= oe, te[5] *= se, te[9] *= Ae, te[2] *= oe, te[6] *= se, te[10] *= Ae, te[3] *= oe, te[7] *= se, te[11] *= Ae, this;
      }, getMaxScaleOnAxis: function() {
        var Z = this.elements, te = Z[0] * Z[0] + Z[1] * Z[1] + Z[2] * Z[2], oe = Z[4] * Z[4] + Z[5] * Z[5] + Z[6] * Z[6], se = Z[8] * Z[8] + Z[9] * Z[9] + Z[10] * Z[10];
        return Math.sqrt(Math.max(te, oe, se));
      }, makeTranslation: function(Z, te, oe) {
        return this.set(1, 0, 0, Z, 0, 1, 0, te, 0, 0, 1, oe, 0, 0, 0, 1), this;
      }, makeRotationX: function(Z) {
        var te = Math.cos(Z), oe = Math.sin(Z);
        return this.set(1, 0, 0, 0, 0, te, -oe, 0, 0, oe, te, 0, 0, 0, 0, 1), this;
      }, makeRotationY: function(Z) {
        var te = Math.cos(Z), oe = Math.sin(Z);
        return this.set(te, 0, oe, 0, 0, 1, 0, 0, -oe, 0, te, 0, 0, 0, 0, 1), this;
      }, makeRotationZ: function(Z) {
        var te = Math.cos(Z), oe = Math.sin(Z);
        return this.set(te, -oe, 0, 0, oe, te, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      }, makeRotationAxis: function(Z, te) {
        var oe = Math.cos(te), se = Math.sin(te), Ae = 1 - oe, ue = Z.x, fe = Z.y, pe = Z.z, ve = Ae * ue, xe = Ae * fe;
        return this.set(ve * ue + oe, ve * fe - se * pe, ve * pe + se * fe, 0, ve * fe + se * pe, xe * fe + oe, xe * pe - se * ue, 0, ve * pe - se * fe, xe * pe + se * ue, Ae * pe * pe + oe, 0, 0, 0, 0, 1), this;
      }, makeScale: function(Z, te, oe) {
        return this.set(Z, 0, 0, 0, 0, te, 0, 0, 0, 0, oe, 0, 0, 0, 0, 1), this;
      }, makeShear: function(Z, te, oe) {
        return this.set(1, te, oe, 0, Z, 1, oe, 0, Z, te, 1, 0, 0, 0, 0, 1), this;
      }, compose: function(Z, te, oe) {
        var se = this.elements, Ae = te._x, ue = te._y, fe = te._z, pe = te._w, ve = Ae + Ae, xe = ue + ue, Me = fe + fe, Ne = Ae * ve, Qe = Ae * xe, Ue = Ae * Me, Je = ue * xe, rt = ue * Me, it = fe * Me, ft = pe * ve, vt = pe * xe, ut = pe * Me, Gt = oe.x, Ht = oe.y, pt = oe.z;
        return se[0] = (1 - (Je + it)) * Gt, se[1] = (Qe + ut) * Gt, se[2] = (Ue - vt) * Gt, se[3] = 0, se[4] = (Qe - ut) * Ht, se[5] = (1 - (Ne + it)) * Ht, se[6] = (rt + ft) * Ht, se[7] = 0, se[8] = (Ue + vt) * pt, se[9] = (rt - ft) * pt, se[10] = (1 - (Ne + Je)) * pt, se[11] = 0, se[12] = Z.x, se[13] = Z.y, se[14] = Z.z, se[15] = 1, this;
      }, decompose: function() {
        var Z = new Bt(), te = new yn();
        return function(oe, se, Ae) {
          var ue = this.elements, fe = Z.set(ue[0], ue[1], ue[2]).length(), pe = Z.set(ue[4], ue[5], ue[6]).length(), ve = Z.set(ue[8], ue[9], ue[10]).length();
          this.determinant() < 0 && (fe = -fe), oe.x = ue[12], oe.y = ue[13], oe.z = ue[14], te.copy(this);
          var xe = 1 / fe, Me = 1 / pe, Ne = 1 / ve;
          return te.elements[0] *= xe, te.elements[1] *= xe, te.elements[2] *= xe, te.elements[4] *= Me, te.elements[5] *= Me, te.elements[6] *= Me, te.elements[8] *= Ne, te.elements[9] *= Ne, te.elements[10] *= Ne, se.setFromRotationMatrix(te), Ae.x = fe, Ae.y = pe, Ae.z = ve, this;
        };
      }(), makePerspective: function(Z, te, oe, se, Ae, ue) {
        ue === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        var fe = this.elements, pe = 2 * Ae / (te - Z), ve = 2 * Ae / (oe - se), xe = (te + Z) / (te - Z), Me = (oe + se) / (oe - se), Ne = -(ue + Ae) / (ue - Ae), Qe = -2 * ue * Ae / (ue - Ae);
        return fe[0] = pe, fe[4] = 0, fe[8] = xe, fe[12] = 0, fe[1] = 0, fe[5] = ve, fe[9] = Me, fe[13] = 0, fe[2] = 0, fe[6] = 0, fe[10] = Ne, fe[14] = Qe, fe[3] = 0, fe[7] = 0, fe[11] = -1, fe[15] = 0, this;
      }, makeOrthographic: function(Z, te, oe, se, Ae, ue) {
        var fe = this.elements, pe = 1 / (te - Z), ve = 1 / (oe - se), xe = 1 / (ue - Ae), Me = (te + Z) * pe, Ne = (oe + se) * ve, Qe = (ue + Ae) * xe;
        return fe[0] = 2 * pe, fe[4] = 0, fe[8] = 0, fe[12] = -Me, fe[1] = 0, fe[5] = 2 * ve, fe[9] = 0, fe[13] = -Ne, fe[2] = 0, fe[6] = 0, fe[10] = -2 * xe, fe[14] = -Qe, fe[3] = 0, fe[7] = 0, fe[11] = 0, fe[15] = 1, this;
      }, equals: function(Z) {
        for (var te = this.elements, oe = Z.elements, se = 0; se < 16; se++)
          if (te[se] !== oe[se])
            return !1;
        return !0;
      }, fromArray: function(Z, te) {
        te === void 0 && (te = 0);
        for (var oe = 0; oe < 16; oe++)
          this.elements[oe] = Z[oe + te];
        return this;
      }, toArray: function(Z, te) {
        Z === void 0 && (Z = []), te === void 0 && (te = 0);
        var oe = this.elements;
        return Z[te] = oe[0], Z[te + 1] = oe[1], Z[te + 2] = oe[2], Z[te + 3] = oe[3], Z[te + 4] = oe[4], Z[te + 5] = oe[5], Z[te + 6] = oe[6], Z[te + 7] = oe[7], Z[te + 8] = oe[8], Z[te + 9] = oe[9], Z[te + 10] = oe[10], Z[te + 11] = oe[11], Z[te + 12] = oe[12], Z[te + 13] = oe[13], Z[te + 14] = oe[14], Z[te + 15] = oe[15], Z;
      } }), Object.assign(hi, { slerp: function(Z, te, oe, se) {
        return oe.copy(Z).slerp(te, se);
      }, slerpFlat: function(Z, te, oe, se, Ae, ue, fe) {
        var pe = oe[se + 0], ve = oe[se + 1], xe = oe[se + 2], Me = oe[se + 3], Ne = Ae[ue + 0], Qe = Ae[ue + 1], Ue = Ae[ue + 2], Je = Ae[ue + 3];
        if (Me !== Je || pe !== Ne || ve !== Qe || xe !== Ue) {
          var rt = 1 - fe, it = pe * Ne + ve * Qe + xe * Ue + Me * Je, ft = it >= 0 ? 1 : -1, vt = 1 - it * it;
          if (vt > Number.EPSILON) {
            var ut = Math.sqrt(vt), Gt = Math.atan2(ut, it * ft);
            rt = Math.sin(rt * Gt) / ut, fe = Math.sin(fe * Gt) / ut;
          }
          var Ht = fe * ft;
          if (pe = pe * rt + Ne * Ht, ve = ve * rt + Qe * Ht, xe = xe * rt + Ue * Ht, Me = Me * rt + Je * Ht, rt === 1 - fe) {
            var pt = 1 / Math.sqrt(pe * pe + ve * ve + xe * xe + Me * Me);
            pe *= pt, ve *= pt, xe *= pt, Me *= pt;
          }
        }
        Z[te] = pe, Z[te + 1] = ve, Z[te + 2] = xe, Z[te + 3] = Me;
      } }), Object.defineProperties(hi.prototype, { x: { get: function() {
        return this._x;
      }, set: function(Z) {
        this._x = Z, this.onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(Z) {
        this._y = Z, this.onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(Z) {
        this._z = Z, this.onChangeCallback();
      } }, w: { get: function() {
        return this._w;
      }, set: function(Z) {
        this._w = Z, this.onChangeCallback();
      } } }), Object.assign(hi.prototype, { set: function(Z, te, oe, se) {
        return this._x = Z, this._y = te, this._z = oe, this._w = se, this.onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._w);
      }, copy: function(Z) {
        return this._x = Z.x, this._y = Z.y, this._z = Z.z, this._w = Z.w, this.onChangeCallback(), this;
      }, setFromEuler: function(Z, te) {
        if (!Z || !Z.isEuler)
          throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        var oe = Z._x, se = Z._y, Ae = Z._z, ue = Z.order, fe = Math.cos, pe = Math.sin, ve = fe(oe / 2), xe = fe(se / 2), Me = fe(Ae / 2), Ne = pe(oe / 2), Qe = pe(se / 2), Ue = pe(Ae / 2);
        return ue === "XYZ" ? (this._x = Ne * xe * Me + ve * Qe * Ue, this._y = ve * Qe * Me - Ne * xe * Ue, this._z = ve * xe * Ue + Ne * Qe * Me, this._w = ve * xe * Me - Ne * Qe * Ue) : ue === "YXZ" ? (this._x = Ne * xe * Me + ve * Qe * Ue, this._y = ve * Qe * Me - Ne * xe * Ue, this._z = ve * xe * Ue - Ne * Qe * Me, this._w = ve * xe * Me + Ne * Qe * Ue) : ue === "ZXY" ? (this._x = Ne * xe * Me - ve * Qe * Ue, this._y = ve * Qe * Me + Ne * xe * Ue, this._z = ve * xe * Ue + Ne * Qe * Me, this._w = ve * xe * Me - Ne * Qe * Ue) : ue === "ZYX" ? (this._x = Ne * xe * Me - ve * Qe * Ue, this._y = ve * Qe * Me + Ne * xe * Ue, this._z = ve * xe * Ue - Ne * Qe * Me, this._w = ve * xe * Me + Ne * Qe * Ue) : ue === "YZX" ? (this._x = Ne * xe * Me + ve * Qe * Ue, this._y = ve * Qe * Me + Ne * xe * Ue, this._z = ve * xe * Ue - Ne * Qe * Me, this._w = ve * xe * Me - Ne * Qe * Ue) : ue === "XZY" && (this._x = Ne * xe * Me - ve * Qe * Ue, this._y = ve * Qe * Me - Ne * xe * Ue, this._z = ve * xe * Ue + Ne * Qe * Me, this._w = ve * xe * Me + Ne * Qe * Ue), te !== !1 && this.onChangeCallback(), this;
      }, setFromAxisAngle: function(Z, te) {
        var oe = te / 2, se = Math.sin(oe);
        return this._x = Z.x * se, this._y = Z.y * se, this._z = Z.z * se, this._w = Math.cos(oe), this.onChangeCallback(), this;
      }, setFromRotationMatrix: function(Z) {
        var te, oe = Z.elements, se = oe[0], Ae = oe[4], ue = oe[8], fe = oe[1], pe = oe[5], ve = oe[9], xe = oe[2], Me = oe[6], Ne = oe[10], Qe = se + pe + Ne;
        return Qe > 0 ? (te = 0.5 / Math.sqrt(Qe + 1), this._w = 0.25 / te, this._x = (Me - ve) * te, this._y = (ue - xe) * te, this._z = (fe - Ae) * te) : se > pe && se > Ne ? (te = 2 * Math.sqrt(1 + se - pe - Ne), this._w = (Me - ve) / te, this._x = 0.25 * te, this._y = (Ae + fe) / te, this._z = (ue + xe) / te) : pe > Ne ? (te = 2 * Math.sqrt(1 + pe - se - Ne), this._w = (ue - xe) / te, this._x = (Ae + fe) / te, this._y = 0.25 * te, this._z = (ve + Me) / te) : (te = 2 * Math.sqrt(1 + Ne - se - pe), this._w = (fe - Ae) / te, this._x = (ue + xe) / te, this._y = (ve + Me) / te, this._z = 0.25 * te), this.onChangeCallback(), this;
      }, setFromUnitVectors: function() {
        var Z, te = new Bt();
        return function(oe, se) {
          return te === void 0 && (te = new Bt()), (Z = oe.dot(se) + 1) < 1e-6 ? (Z = 0, Math.abs(oe.x) > Math.abs(oe.z) ? te.set(-oe.y, oe.x, 0) : te.set(0, -oe.z, oe.y)) : te.crossVectors(oe, se), this._x = te.x, this._y = te.y, this._z = te.z, this._w = Z, this.normalize();
        };
      }(), angleTo: function(Z) {
        return 2 * Math.acos(Math.abs(Mn.clamp(this.dot(Z), -1, 1)));
      }, rotateTowards: function(Z, te) {
        var oe = this.angleTo(Z);
        if (oe === 0)
          return this;
        var se = Math.min(1, te / oe);
        return this.slerp(Z, se), this;
      }, inverse: function() {
        return this.conjugate();
      }, conjugate: function() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this;
      }, dot: function(Z) {
        return this._x * Z._x + this._y * Z._y + this._z * Z._z + this._w * Z._w;
      }, lengthSq: function() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
      }, length: function() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
      }, normalize: function() {
        var Z = this.length();
        return Z === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (Z = 1 / Z, this._x = this._x * Z, this._y = this._y * Z, this._z = this._z * Z, this._w = this._w * Z), this.onChangeCallback(), this;
      }, multiply: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(Z, te)) : this.multiplyQuaternions(this, Z);
      }, premultiply: function(Z) {
        return this.multiplyQuaternions(Z, this);
      }, multiplyQuaternions: function(Z, te) {
        var oe = Z._x, se = Z._y, Ae = Z._z, ue = Z._w, fe = te._x, pe = te._y, ve = te._z, xe = te._w;
        return this._x = oe * xe + ue * fe + se * ve - Ae * pe, this._y = se * xe + ue * pe + Ae * fe - oe * ve, this._z = Ae * xe + ue * ve + oe * pe - se * fe, this._w = ue * xe - oe * fe - se * pe - Ae * ve, this.onChangeCallback(), this;
      }, slerp: function(Z, te) {
        if (te === 0)
          return this;
        if (te === 1)
          return this.copy(Z);
        var oe = this._x, se = this._y, Ae = this._z, ue = this._w, fe = ue * Z._w + oe * Z._x + se * Z._y + Ae * Z._z;
        if (fe < 0 ? (this._w = -Z._w, this._x = -Z._x, this._y = -Z._y, this._z = -Z._z, fe = -fe) : this.copy(Z), fe >= 1)
          return this._w = ue, this._x = oe, this._y = se, this._z = Ae, this;
        var pe = 1 - fe * fe;
        if (pe <= Number.EPSILON) {
          var ve = 1 - te;
          return this._w = ve * ue + te * this._w, this._x = ve * oe + te * this._x, this._y = ve * se + te * this._y, this._z = ve * Ae + te * this._z, this.normalize();
        }
        var xe = Math.sqrt(pe), Me = Math.atan2(xe, fe), Ne = Math.sin((1 - te) * Me) / xe, Qe = Math.sin(te * Me) / xe;
        return this._w = ue * Ne + this._w * Qe, this._x = oe * Ne + this._x * Qe, this._y = se * Ne + this._y * Qe, this._z = Ae * Ne + this._z * Qe, this.onChangeCallback(), this;
      }, equals: function(Z) {
        return Z._x === this._x && Z._y === this._y && Z._z === this._z && Z._w === this._w;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this._x = Z[te], this._y = Z[te + 1], this._z = Z[te + 2], this._w = Z[te + 3], this.onChangeCallback(), this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this._x, Z[te + 1] = this._y, Z[te + 2] = this._z, Z[te + 3] = this._w, Z;
      }, onChange: function(Z) {
        return this.onChangeCallback = Z, this;
      }, onChangeCallback: function() {
      } }), Object.assign(Bt.prototype, { isVector3: !0, set: function(Z, te, oe) {
        return this.x = Z, this.y = te, this.z = oe, this;
      }, setScalar: function(Z) {
        return this.x = Z, this.y = Z, this.z = Z, this;
      }, setX: function(Z) {
        return this.x = Z, this;
      }, setY: function(Z) {
        return this.y = Z, this;
      }, setZ: function(Z) {
        return this.z = Z, this;
      }, setComponent: function(Z, te) {
        switch (Z) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          case 2:
            this.z = te;
            break;
          default:
            throw new Error("index is out of range: " + Z);
        }
        return this;
      }, getComponent: function(Z) {
        switch (Z) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          default:
            throw new Error("index is out of range: " + Z);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z);
      }, copy: function(Z) {
        return this.x = Z.x, this.y = Z.y, this.z = Z.z, this;
      }, add: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Z, te)) : (this.x += Z.x, this.y += Z.y, this.z += Z.z, this);
      }, addScalar: function(Z) {
        return this.x += Z, this.y += Z, this.z += Z, this;
      }, addVectors: function(Z, te) {
        return this.x = Z.x + te.x, this.y = Z.y + te.y, this.z = Z.z + te.z, this;
      }, addScaledVector: function(Z, te) {
        return this.x += Z.x * te, this.y += Z.y * te, this.z += Z.z * te, this;
      }, sub: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Z, te)) : (this.x -= Z.x, this.y -= Z.y, this.z -= Z.z, this);
      }, subScalar: function(Z) {
        return this.x -= Z, this.y -= Z, this.z -= Z, this;
      }, subVectors: function(Z, te) {
        return this.x = Z.x - te.x, this.y = Z.y - te.y, this.z = Z.z - te.z, this;
      }, multiply: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(Z, te)) : (this.x *= Z.x, this.y *= Z.y, this.z *= Z.z, this);
      }, multiplyScalar: function(Z) {
        return this.x *= Z, this.y *= Z, this.z *= Z, this;
      }, multiplyVectors: function(Z, te) {
        return this.x = Z.x * te.x, this.y = Z.y * te.y, this.z = Z.z * te.z, this;
      }, applyEuler: function() {
        var Z = new hi();
        return function(te) {
          return te && te.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(Z.setFromEuler(te));
        };
      }(), applyAxisAngle: function() {
        var Z = new hi();
        return function(te, oe) {
          return this.applyQuaternion(Z.setFromAxisAngle(te, oe));
        };
      }(), applyMatrix3: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = Z.elements;
        return this.x = Ae[0] * te + Ae[3] * oe + Ae[6] * se, this.y = Ae[1] * te + Ae[4] * oe + Ae[7] * se, this.z = Ae[2] * te + Ae[5] * oe + Ae[8] * se, this;
      }, applyMatrix4: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = Z.elements, ue = 1 / (Ae[3] * te + Ae[7] * oe + Ae[11] * se + Ae[15]);
        return this.x = (Ae[0] * te + Ae[4] * oe + Ae[8] * se + Ae[12]) * ue, this.y = (Ae[1] * te + Ae[5] * oe + Ae[9] * se + Ae[13]) * ue, this.z = (Ae[2] * te + Ae[6] * oe + Ae[10] * se + Ae[14]) * ue, this;
      }, applyQuaternion: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = Z.x, ue = Z.y, fe = Z.z, pe = Z.w, ve = pe * te + ue * se - fe * oe, xe = pe * oe + fe * te - Ae * se, Me = pe * se + Ae * oe - ue * te, Ne = -Ae * te - ue * oe - fe * se;
        return this.x = ve * pe + Ne * -Ae + xe * -fe - Me * -ue, this.y = xe * pe + Ne * -ue + Me * -Ae - ve * -fe, this.z = Me * pe + Ne * -fe + ve * -ue - xe * -Ae, this;
      }, project: function() {
        var Z = new yn();
        return function(te) {
          return Z.multiplyMatrices(te.projectionMatrix, Z.getInverse(te.matrixWorld)), this.applyMatrix4(Z);
        };
      }(), unproject: function() {
        var Z = new yn();
        return function(te) {
          return Z.multiplyMatrices(te.matrixWorld, Z.getInverse(te.projectionMatrix)), this.applyMatrix4(Z);
        };
      }(), transformDirection: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = Z.elements;
        return this.x = Ae[0] * te + Ae[4] * oe + Ae[8] * se, this.y = Ae[1] * te + Ae[5] * oe + Ae[9] * se, this.z = Ae[2] * te + Ae[6] * oe + Ae[10] * se, this.normalize();
      }, divide: function(Z) {
        return this.x /= Z.x, this.y /= Z.y, this.z /= Z.z, this;
      }, divideScalar: function(Z) {
        return this.multiplyScalar(1 / Z);
      }, min: function(Z) {
        return this.x = Math.min(this.x, Z.x), this.y = Math.min(this.y, Z.y), this.z = Math.min(this.z, Z.z), this;
      }, max: function(Z) {
        return this.x = Math.max(this.x, Z.x), this.y = Math.max(this.y, Z.y), this.z = Math.max(this.z, Z.z), this;
      }, clamp: function(Z, te) {
        return this.x = Math.max(Z.x, Math.min(te.x, this.x)), this.y = Math.max(Z.y, Math.min(te.y, this.y)), this.z = Math.max(Z.z, Math.min(te.z, this.z)), this;
      }, clampScalar: function() {
        var Z = new Bt(), te = new Bt();
        return function(oe, se) {
          return Z.set(oe, oe, oe), te.set(se, se, se), this.clamp(Z, te);
        };
      }(), clampLength: function(Z, te) {
        var oe = this.length();
        return this.divideScalar(oe || 1).multiplyScalar(Math.max(Z, Math.min(te, oe)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
      }, dot: function(Z) {
        return this.x * Z.x + this.y * Z.y + this.z * Z.z;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(Z) {
        return this.normalize().multiplyScalar(Z);
      }, lerp: function(Z, te) {
        return this.x += (Z.x - this.x) * te, this.y += (Z.y - this.y) * te, this.z += (Z.z - this.z) * te, this;
      }, lerpVectors: function(Z, te, oe) {
        return this.subVectors(te, Z).multiplyScalar(oe).add(Z);
      }, cross: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(Z, te)) : this.crossVectors(this, Z);
      }, crossVectors: function(Z, te) {
        var oe = Z.x, se = Z.y, Ae = Z.z, ue = te.x, fe = te.y, pe = te.z;
        return this.x = se * pe - Ae * fe, this.y = Ae * ue - oe * pe, this.z = oe * fe - se * ue, this;
      }, projectOnVector: function(Z) {
        var te = Z.dot(this) / Z.lengthSq();
        return this.copy(Z).multiplyScalar(te);
      }, projectOnPlane: function() {
        var Z = new Bt();
        return function(te) {
          return Z.copy(this).projectOnVector(te), this.sub(Z);
        };
      }(), reflect: function() {
        var Z = new Bt();
        return function(te) {
          return this.sub(Z.copy(te).multiplyScalar(2 * this.dot(te)));
        };
      }(), angleTo: function(Z) {
        var te = this.dot(Z) / Math.sqrt(this.lengthSq() * Z.lengthSq());
        return Math.acos(Mn.clamp(te, -1, 1));
      }, distanceTo: function(Z) {
        return Math.sqrt(this.distanceToSquared(Z));
      }, distanceToSquared: function(Z) {
        var te = this.x - Z.x, oe = this.y - Z.y, se = this.z - Z.z;
        return te * te + oe * oe + se * se;
      }, manhattanDistanceTo: function(Z) {
        return Math.abs(this.x - Z.x) + Math.abs(this.y - Z.y) + Math.abs(this.z - Z.z);
      }, setFromSpherical: function(Z) {
        var te = Math.sin(Z.phi) * Z.radius;
        return this.x = te * Math.sin(Z.theta), this.y = Math.cos(Z.phi) * Z.radius, this.z = te * Math.cos(Z.theta), this;
      }, setFromCylindrical: function(Z) {
        return this.x = Z.radius * Math.sin(Z.theta), this.y = Z.y, this.z = Z.radius * Math.cos(Z.theta), this;
      }, setFromMatrixPosition: function(Z) {
        var te = Z.elements;
        return this.x = te[12], this.y = te[13], this.z = te[14], this;
      }, setFromMatrixScale: function(Z) {
        var te = this.setFromMatrixColumn(Z, 0).length(), oe = this.setFromMatrixColumn(Z, 1).length(), se = this.setFromMatrixColumn(Z, 2).length();
        return this.x = te, this.y = oe, this.z = se, this;
      }, setFromMatrixColumn: function(Z, te) {
        return this.fromArray(Z.elements, 4 * te);
      }, equals: function(Z) {
        return Z.x === this.x && Z.y === this.y && Z.z === this.z;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this.x = Z[te], this.y = Z[te + 1], this.z = Z[te + 2], this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this.x, Z[te + 1] = this.y, Z[te + 2] = this.z, Z;
      }, fromBufferAttribute: function(Z, te, oe) {
        return oe !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = Z.getX(te), this.y = Z.getY(te), this.z = Z.getZ(te), this;
      } }), Object.assign(qi.prototype, { isMatrix3: !0, set: function(Z, te, oe, se, Ae, ue, fe, pe, ve) {
        var xe = this.elements;
        return xe[0] = Z, xe[1] = se, xe[2] = fe, xe[3] = te, xe[4] = Ae, xe[5] = pe, xe[6] = oe, xe[7] = ue, xe[8] = ve, this;
      }, identity: function() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
      }, clone: function() {
        return new this.constructor().fromArray(this.elements);
      }, copy: function(Z) {
        var te = this.elements, oe = Z.elements;
        return te[0] = oe[0], te[1] = oe[1], te[2] = oe[2], te[3] = oe[3], te[4] = oe[4], te[5] = oe[5], te[6] = oe[6], te[7] = oe[7], te[8] = oe[8], this;
      }, setFromMatrix4: function(Z) {
        var te = Z.elements;
        return this.set(te[0], te[4], te[8], te[1], te[5], te[9], te[2], te[6], te[10]), this;
      }, applyToBufferAttribute: function() {
        var Z = new Bt();
        return function(te) {
          for (var oe = 0, se = te.count; oe < se; oe++)
            Z.x = te.getX(oe), Z.y = te.getY(oe), Z.z = te.getZ(oe), Z.applyMatrix3(this), te.setXYZ(oe, Z.x, Z.y, Z.z);
          return te;
        };
      }(), multiply: function(Z) {
        return this.multiplyMatrices(this, Z);
      }, premultiply: function(Z) {
        return this.multiplyMatrices(Z, this);
      }, multiplyMatrices: function(Z, te) {
        var oe = Z.elements, se = te.elements, Ae = this.elements, ue = oe[0], fe = oe[3], pe = oe[6], ve = oe[1], xe = oe[4], Me = oe[7], Ne = oe[2], Qe = oe[5], Ue = oe[8], Je = se[0], rt = se[3], it = se[6], ft = se[1], vt = se[4], ut = se[7], Gt = se[2], Ht = se[5], pt = se[8];
        return Ae[0] = ue * Je + fe * ft + pe * Gt, Ae[3] = ue * rt + fe * vt + pe * Ht, Ae[6] = ue * it + fe * ut + pe * pt, Ae[1] = ve * Je + xe * ft + Me * Gt, Ae[4] = ve * rt + xe * vt + Me * Ht, Ae[7] = ve * it + xe * ut + Me * pt, Ae[2] = Ne * Je + Qe * ft + Ue * Gt, Ae[5] = Ne * rt + Qe * vt + Ue * Ht, Ae[8] = Ne * it + Qe * ut + Ue * pt, this;
      }, multiplyScalar: function(Z) {
        var te = this.elements;
        return te[0] *= Z, te[3] *= Z, te[6] *= Z, te[1] *= Z, te[4] *= Z, te[7] *= Z, te[2] *= Z, te[5] *= Z, te[8] *= Z, this;
      }, determinant: function() {
        var Z = this.elements, te = Z[0], oe = Z[1], se = Z[2], Ae = Z[3], ue = Z[4], fe = Z[5], pe = Z[6], ve = Z[7], xe = Z[8];
        return te * ue * xe - te * fe * ve - oe * Ae * xe + oe * fe * pe + se * Ae * ve - se * ue * pe;
      }, getInverse: function(Z, te) {
        Z && Z.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
        var oe = Z.elements, se = this.elements, Ae = oe[0], ue = oe[1], fe = oe[2], pe = oe[3], ve = oe[4], xe = oe[5], Me = oe[6], Ne = oe[7], Qe = oe[8], Ue = Qe * ve - xe * Ne, Je = xe * Me - Qe * pe, rt = Ne * pe - ve * Me, it = Ae * Ue + ue * Je + fe * rt;
        if (it === 0) {
          var ft = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
          if (te === !0)
            throw new Error(ft);
          return console.warn(ft), this.identity();
        }
        var vt = 1 / it;
        return se[0] = Ue * vt, se[1] = (fe * Ne - Qe * ue) * vt, se[2] = (xe * ue - fe * ve) * vt, se[3] = Je * vt, se[4] = (Qe * Ae - fe * Me) * vt, se[5] = (fe * pe - xe * Ae) * vt, se[6] = rt * vt, se[7] = (ue * Me - Ne * Ae) * vt, se[8] = (ve * Ae - ue * pe) * vt, this;
      }, transpose: function() {
        var Z, te = this.elements;
        return Z = te[1], te[1] = te[3], te[3] = Z, Z = te[2], te[2] = te[6], te[6] = Z, Z = te[5], te[5] = te[7], te[7] = Z, this;
      }, getNormalMatrix: function(Z) {
        return this.setFromMatrix4(Z).getInverse(this).transpose();
      }, transposeIntoArray: function(Z) {
        var te = this.elements;
        return Z[0] = te[0], Z[1] = te[3], Z[2] = te[6], Z[3] = te[1], Z[4] = te[4], Z[5] = te[7], Z[6] = te[2], Z[7] = te[5], Z[8] = te[8], this;
      }, setUvTransform: function(Z, te, oe, se, Ae, ue, fe) {
        var pe = Math.cos(Ae), ve = Math.sin(Ae);
        this.set(oe * pe, oe * ve, -oe * (pe * ue + ve * fe) + ue + Z, -se * ve, se * pe, -se * (-ve * ue + pe * fe) + fe + te, 0, 0, 1);
      }, scale: function(Z, te) {
        var oe = this.elements;
        return oe[0] *= Z, oe[3] *= Z, oe[6] *= Z, oe[1] *= te, oe[4] *= te, oe[7] *= te, this;
      }, rotate: function(Z) {
        var te = Math.cos(Z), oe = Math.sin(Z), se = this.elements, Ae = se[0], ue = se[3], fe = se[6], pe = se[1], ve = se[4], xe = se[7];
        return se[0] = te * Ae + oe * pe, se[3] = te * ue + oe * ve, se[6] = te * fe + oe * xe, se[1] = -oe * Ae + te * pe, se[4] = -oe * ue + te * ve, se[7] = -oe * fe + te * xe, this;
      }, translate: function(Z, te) {
        var oe = this.elements;
        return oe[0] += Z * oe[2], oe[3] += Z * oe[5], oe[6] += Z * oe[8], oe[1] += te * oe[2], oe[4] += te * oe[5], oe[7] += te * oe[8], this;
      }, equals: function(Z) {
        for (var te = this.elements, oe = Z.elements, se = 0; se < 9; se++)
          if (te[se] !== oe[se])
            return !1;
        return !0;
      }, fromArray: function(Z, te) {
        te === void 0 && (te = 0);
        for (var oe = 0; oe < 9; oe++)
          this.elements[oe] = Z[oe + te];
        return this;
      }, toArray: function(Z, te) {
        Z === void 0 && (Z = []), te === void 0 && (te = 0);
        var oe = this.elements;
        return Z[te] = oe[0], Z[te + 1] = oe[1], Z[te + 2] = oe[2], Z[te + 3] = oe[3], Z[te + 4] = oe[4], Z[te + 5] = oe[5], Z[te + 6] = oe[6], Z[te + 7] = oe[7], Z[te + 8] = oe[8], Z;
      } });
      var No = { getDataURL: function(Z) {
        var te;
        if (Z instanceof HTMLCanvasElement)
          te = Z;
        else {
          typeof OffscreenCanvas < "u" ? te = new OffscreenCanvas(Z.width, Z.height) : ((te = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")).width = Z.width, te.height = Z.height);
          var oe = te.getContext("2d");
          Z instanceof ImageData ? oe.putImageData(Z, 0, 0) : oe.drawImage(Z, 0, 0, Z.width, Z.height);
        }
        return te.width > 2048 || te.height > 2048 ? te.toDataURL("image/jpeg", 0.6) : te.toDataURL("image/png");
      } }, Ka = 0;
      function li(Z, te, oe, se, Ae, ue, fe, pe, ve, xe) {
        Object.defineProperty(this, "id", { value: Ka++ }), this.uuid = Mn.generateUUID(), this.name = "", this.image = Z !== void 0 ? Z : li.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = te !== void 0 ? te : li.DEFAULT_MAPPING, this.wrapS = oe !== void 0 ? oe : _r, this.wrapT = se !== void 0 ? se : _r, this.magFilter = Ae !== void 0 ? Ae : un, this.minFilter = ue !== void 0 ? ue : Vn, this.anisotropy = ve !== void 0 ? ve : 1, this.format = fe !== void 0 ? fe : sr, this.type = pe !== void 0 ? pe : Dn, this.offset = new Qr(0, 0), this.repeat = new Qr(1, 1), this.center = new Qr(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new qi(), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = xe !== void 0 ? xe : zn, this.version = 0, this.onUpdate = null;
      }
      function Kn(Z, te, oe, se) {
        this.x = Z || 0, this.y = te || 0, this.z = oe || 0, this.w = se !== void 0 ? se : 1;
      }
      function jo(Z, te, oe) {
        this.width = Z, this.height = te, this.scissor = new Kn(0, 0, Z, te), this.scissorTest = !1, this.viewport = new Kn(0, 0, Z, te), (oe = oe || {}).minFilter === void 0 && (oe.minFilter = un), this.texture = new li(void 0, void 0, oe.wrapS, oe.wrapT, oe.magFilter, oe.minFilter, oe.format, oe.type, oe.anisotropy, oe.encoding), this.texture.generateMipmaps = oe.generateMipmaps === void 0 || oe.generateMipmaps, this.depthBuffer = oe.depthBuffer === void 0 || oe.depthBuffer, this.stencilBuffer = oe.stencilBuffer === void 0 || oe.stencilBuffer, this.depthTexture = oe.depthTexture !== void 0 ? oe.depthTexture : null;
      }
      function fa(Z, te, oe) {
        jo.call(this, Z, te, oe), this.activeCubeFace = 0, this.activeMipMapLevel = 0;
      }
      function Qo(Z, te, oe, se, Ae, ue, fe, pe, ve, xe, Me, Ne) {
        li.call(this, null, ue, fe, pe, ve, xe, se, Ae, Me, Ne), this.image = { data: Z, width: te, height: oe }, this.magFilter = ve !== void 0 ? ve : Tr, this.minFilter = xe !== void 0 ? xe : Tr, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
      }
      function yo(Z, te) {
        this.min = Z !== void 0 ? Z : new Bt(1 / 0, 1 / 0, 1 / 0), this.max = te !== void 0 ? te : new Bt(-1 / 0, -1 / 0, -1 / 0);
      }
      function ao(Z, te) {
        this.center = Z !== void 0 ? Z : new Bt(), this.radius = te !== void 0 ? te : 0;
      }
      function uo(Z, te) {
        this.normal = Z !== void 0 ? Z : new Bt(1, 0, 0), this.constant = te !== void 0 ? te : 0;
      }
      function Za(Z, te, oe, se, Ae, ue) {
        this.planes = [Z !== void 0 ? Z : new uo(), te !== void 0 ? te : new uo(), oe !== void 0 ? oe : new uo(), se !== void 0 ? se : new uo(), Ae !== void 0 ? Ae : new uo(), ue !== void 0 ? ue : new uo()];
      }
      li.DEFAULT_IMAGE = void 0, li.DEFAULT_MAPPING = De, li.prototype = Object.assign(Object.create(ce.prototype), { constructor: li, isTexture: !0, updateMatrix: function() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.name = Z.name, this.image = Z.image, this.mipmaps = Z.mipmaps.slice(0), this.mapping = Z.mapping, this.wrapS = Z.wrapS, this.wrapT = Z.wrapT, this.magFilter = Z.magFilter, this.minFilter = Z.minFilter, this.anisotropy = Z.anisotropy, this.format = Z.format, this.type = Z.type, this.offset.copy(Z.offset), this.repeat.copy(Z.repeat), this.center.copy(Z.center), this.rotation = Z.rotation, this.matrixAutoUpdate = Z.matrixAutoUpdate, this.matrix.copy(Z.matrix), this.generateMipmaps = Z.generateMipmaps, this.premultiplyAlpha = Z.premultiplyAlpha, this.flipY = Z.flipY, this.unpackAlignment = Z.unpackAlignment, this.encoding = Z.encoding, this;
      }, toJSON: function(Z) {
        var te = Z === void 0 || typeof Z == "string";
        if (!te && Z.textures[this.uuid] !== void 0)
          return Z.textures[this.uuid];
        var oe = { metadata: { version: 4.5, type: "Texture", generator: "Texture.toJSON" }, uuid: this.uuid, name: this.name, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY };
        if (this.image !== void 0) {
          var se = this.image;
          if (se.uuid === void 0 && (se.uuid = Mn.generateUUID()), !te && Z.images[se.uuid] === void 0) {
            var Ae;
            if (Array.isArray(se)) {
              Ae = [];
              for (var ue = 0, fe = se.length; ue < fe; ue++)
                Ae.push(No.getDataURL(se[ue]));
            } else
              Ae = No.getDataURL(se);
            Z.images[se.uuid] = { uuid: se.uuid, url: Ae };
          }
          oe.image = se.uuid;
        }
        return te || (Z.textures[this.uuid] = oe), oe;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      }, transformUv: function(Z) {
        if (this.mapping === De) {
          if (Z.applyMatrix3(this.matrix), Z.x < 0 || Z.x > 1)
            switch (this.wrapS) {
              case mr:
                Z.x = Z.x - Math.floor(Z.x);
                break;
              case _r:
                Z.x = Z.x < 0 ? 0 : 1;
                break;
              case Br:
                Math.abs(Math.floor(Z.x) % 2) === 1 ? Z.x = Math.ceil(Z.x) - Z.x : Z.x = Z.x - Math.floor(Z.x);
            }
          if (Z.y < 0 || Z.y > 1)
            switch (this.wrapT) {
              case mr:
                Z.y = Z.y - Math.floor(Z.y);
                break;
              case _r:
                Z.y = Z.y < 0 ? 0 : 1;
                break;
              case Br:
                Math.abs(Math.floor(Z.y) % 2) === 1 ? Z.y = Math.ceil(Z.y) - Z.y : Z.y = Z.y - Math.floor(Z.y);
            }
          this.flipY && (Z.y = 1 - Z.y);
        }
      } }), Object.defineProperty(li.prototype, "needsUpdate", { set: function(Z) {
        Z === !0 && this.version++;
      } }), Object.assign(Kn.prototype, { isVector4: !0, set: function(Z, te, oe, se) {
        return this.x = Z, this.y = te, this.z = oe, this.w = se, this;
      }, setScalar: function(Z) {
        return this.x = Z, this.y = Z, this.z = Z, this.w = Z, this;
      }, setX: function(Z) {
        return this.x = Z, this;
      }, setY: function(Z) {
        return this.y = Z, this;
      }, setZ: function(Z) {
        return this.z = Z, this;
      }, setW: function(Z) {
        return this.w = Z, this;
      }, setComponent: function(Z, te) {
        switch (Z) {
          case 0:
            this.x = te;
            break;
          case 1:
            this.y = te;
            break;
          case 2:
            this.z = te;
            break;
          case 3:
            this.w = te;
            break;
          default:
            throw new Error("index is out of range: " + Z);
        }
        return this;
      }, getComponent: function(Z) {
        switch (Z) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          case 3:
            return this.w;
          default:
            throw new Error("index is out of range: " + Z);
        }
      }, clone: function() {
        return new this.constructor(this.x, this.y, this.z, this.w);
      }, copy: function(Z) {
        return this.x = Z.x, this.y = Z.y, this.z = Z.z, this.w = Z.w !== void 0 ? Z.w : 1, this;
      }, add: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(Z, te)) : (this.x += Z.x, this.y += Z.y, this.z += Z.z, this.w += Z.w, this);
      }, addScalar: function(Z) {
        return this.x += Z, this.y += Z, this.z += Z, this.w += Z, this;
      }, addVectors: function(Z, te) {
        return this.x = Z.x + te.x, this.y = Z.y + te.y, this.z = Z.z + te.z, this.w = Z.w + te.w, this;
      }, addScaledVector: function(Z, te) {
        return this.x += Z.x * te, this.y += Z.y * te, this.z += Z.z * te, this.w += Z.w * te, this;
      }, sub: function(Z, te) {
        return te !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(Z, te)) : (this.x -= Z.x, this.y -= Z.y, this.z -= Z.z, this.w -= Z.w, this);
      }, subScalar: function(Z) {
        return this.x -= Z, this.y -= Z, this.z -= Z, this.w -= Z, this;
      }, subVectors: function(Z, te) {
        return this.x = Z.x - te.x, this.y = Z.y - te.y, this.z = Z.z - te.z, this.w = Z.w - te.w, this;
      }, multiplyScalar: function(Z) {
        return this.x *= Z, this.y *= Z, this.z *= Z, this.w *= Z, this;
      }, applyMatrix4: function(Z) {
        var te = this.x, oe = this.y, se = this.z, Ae = this.w, ue = Z.elements;
        return this.x = ue[0] * te + ue[4] * oe + ue[8] * se + ue[12] * Ae, this.y = ue[1] * te + ue[5] * oe + ue[9] * se + ue[13] * Ae, this.z = ue[2] * te + ue[6] * oe + ue[10] * se + ue[14] * Ae, this.w = ue[3] * te + ue[7] * oe + ue[11] * se + ue[15] * Ae, this;
      }, divideScalar: function(Z) {
        return this.multiplyScalar(1 / Z);
      }, setAxisAngleFromQuaternion: function(Z) {
        this.w = 2 * Math.acos(Z.w);
        var te = Math.sqrt(1 - Z.w * Z.w);
        return te < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = Z.x / te, this.y = Z.y / te, this.z = Z.z / te), this;
      }, setAxisAngleFromRotationMatrix: function(Z) {
        var te, oe, se, Ae, ue = Z.elements, fe = ue[0], pe = ue[4], ve = ue[8], xe = ue[1], Me = ue[5], Ne = ue[9], Qe = ue[2], Ue = ue[6], Je = ue[10];
        if (Math.abs(pe - xe) < 0.01 && Math.abs(ve - Qe) < 0.01 && Math.abs(Ne - Ue) < 0.01) {
          if (Math.abs(pe + xe) < 0.1 && Math.abs(ve + Qe) < 0.1 && Math.abs(Ne + Ue) < 0.1 && Math.abs(fe + Me + Je - 3) < 0.1)
            return this.set(1, 0, 0, 0), this;
          te = Math.PI;
          var rt = (fe + 1) / 2, it = (Me + 1) / 2, ft = (Je + 1) / 2, vt = (pe + xe) / 4, ut = (ve + Qe) / 4, Gt = (Ne + Ue) / 4;
          return rt > it && rt > ft ? rt < 0.01 ? (oe = 0, se = 0.707106781, Ae = 0.707106781) : (se = vt / (oe = Math.sqrt(rt)), Ae = ut / oe) : it > ft ? it < 0.01 ? (oe = 0.707106781, se = 0, Ae = 0.707106781) : (oe = vt / (se = Math.sqrt(it)), Ae = Gt / se) : ft < 0.01 ? (oe = 0.707106781, se = 0.707106781, Ae = 0) : (oe = ut / (Ae = Math.sqrt(ft)), se = Gt / Ae), this.set(oe, se, Ae, te), this;
        }
        var Ht = Math.sqrt((Ue - Ne) * (Ue - Ne) + (ve - Qe) * (ve - Qe) + (xe - pe) * (xe - pe));
        return Math.abs(Ht) < 1e-3 && (Ht = 1), this.x = (Ue - Ne) / Ht, this.y = (ve - Qe) / Ht, this.z = (xe - pe) / Ht, this.w = Math.acos((fe + Me + Je - 1) / 2), this;
      }, min: function(Z) {
        return this.x = Math.min(this.x, Z.x), this.y = Math.min(this.y, Z.y), this.z = Math.min(this.z, Z.z), this.w = Math.min(this.w, Z.w), this;
      }, max: function(Z) {
        return this.x = Math.max(this.x, Z.x), this.y = Math.max(this.y, Z.y), this.z = Math.max(this.z, Z.z), this.w = Math.max(this.w, Z.w), this;
      }, clamp: function(Z, te) {
        return this.x = Math.max(Z.x, Math.min(te.x, this.x)), this.y = Math.max(Z.y, Math.min(te.y, this.y)), this.z = Math.max(Z.z, Math.min(te.z, this.z)), this.w = Math.max(Z.w, Math.min(te.w, this.w)), this;
      }, clampScalar: function() {
        var Z, te;
        return function(oe, se) {
          return Z === void 0 && (Z = new Kn(), te = new Kn()), Z.set(oe, oe, oe, oe), te.set(se, se, se, se), this.clamp(Z, te);
        };
      }(), clampLength: function(Z, te) {
        var oe = this.length();
        return this.divideScalar(oe || 1).multiplyScalar(Math.max(Z, Math.min(te, oe)));
      }, floor: function() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
      }, ceil: function() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
      }, round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
      }, roundToZero: function() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
      }, negate: function() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
      }, dot: function(Z) {
        return this.x * Z.x + this.y * Z.y + this.z * Z.z + this.w * Z.w;
      }, lengthSq: function() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
      }, length: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
      }, manhattanLength: function() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
      }, normalize: function() {
        return this.divideScalar(this.length() || 1);
      }, setLength: function(Z) {
        return this.normalize().multiplyScalar(Z);
      }, lerp: function(Z, te) {
        return this.x += (Z.x - this.x) * te, this.y += (Z.y - this.y) * te, this.z += (Z.z - this.z) * te, this.w += (Z.w - this.w) * te, this;
      }, lerpVectors: function(Z, te, oe) {
        return this.subVectors(te, Z).multiplyScalar(oe).add(Z);
      }, equals: function(Z) {
        return Z.x === this.x && Z.y === this.y && Z.z === this.z && Z.w === this.w;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this.x = Z[te], this.y = Z[te + 1], this.z = Z[te + 2], this.w = Z[te + 3], this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this.x, Z[te + 1] = this.y, Z[te + 2] = this.z, Z[te + 3] = this.w, Z;
      }, fromBufferAttribute: function(Z, te, oe) {
        return oe !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = Z.getX(te), this.y = Z.getY(te), this.z = Z.getZ(te), this.w = Z.getW(te), this;
      } }), jo.prototype = Object.assign(Object.create(ce.prototype), { constructor: jo, isWebGLRenderTarget: !0, setSize: function(Z, te) {
        this.width === Z && this.height === te || (this.width = Z, this.height = te, this.dispose()), this.viewport.set(0, 0, Z, te), this.scissor.set(0, 0, Z, te);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.width = Z.width, this.height = Z.height, this.viewport.copy(Z.viewport), this.texture = Z.texture.clone(), this.depthBuffer = Z.depthBuffer, this.stencilBuffer = Z.stencilBuffer, this.depthTexture = Z.depthTexture, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), fa.prototype = Object.create(jo.prototype), fa.prototype.constructor = fa, fa.prototype.isWebGLRenderTargetCube = !0, Qo.prototype = Object.create(li.prototype), Qo.prototype.constructor = Qo, Qo.prototype.isDataTexture = !0, Object.assign(yo.prototype, { isBox3: !0, set: function(Z, te) {
        return this.min.copy(Z), this.max.copy(te), this;
      }, setFromArray: function(Z) {
        for (var te = 1 / 0, oe = 1 / 0, se = 1 / 0, Ae = -1 / 0, ue = -1 / 0, fe = -1 / 0, pe = 0, ve = Z.length; pe < ve; pe += 3) {
          var xe = Z[pe], Me = Z[pe + 1], Ne = Z[pe + 2];
          xe < te && (te = xe), Me < oe && (oe = Me), Ne < se && (se = Ne), xe > Ae && (Ae = xe), Me > ue && (ue = Me), Ne > fe && (fe = Ne);
        }
        return this.min.set(te, oe, se), this.max.set(Ae, ue, fe), this;
      }, setFromBufferAttribute: function(Z) {
        for (var te = 1 / 0, oe = 1 / 0, se = 1 / 0, Ae = -1 / 0, ue = -1 / 0, fe = -1 / 0, pe = 0, ve = Z.count; pe < ve; pe++) {
          var xe = Z.getX(pe), Me = Z.getY(pe), Ne = Z.getZ(pe);
          xe < te && (te = xe), Me < oe && (oe = Me), Ne < se && (se = Ne), xe > Ae && (Ae = xe), Me > ue && (ue = Me), Ne > fe && (fe = Ne);
        }
        return this.min.set(te, oe, se), this.max.set(Ae, ue, fe), this;
      }, setFromPoints: function(Z) {
        this.makeEmpty();
        for (var te = 0, oe = Z.length; te < oe; te++)
          this.expandByPoint(Z[te]);
        return this;
      }, setFromCenterAndSize: function() {
        var Z = new Bt();
        return function(te, oe) {
          var se = Z.copy(oe).multiplyScalar(0.5);
          return this.min.copy(te).sub(se), this.max.copy(te).add(se), this;
        };
      }(), setFromObject: function(Z) {
        return this.makeEmpty(), this.expandByObject(Z);
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.min.copy(Z.min), this.max.copy(Z.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
      }, getCenter: function(Z) {
        return Z === void 0 && (console.warn("THREE.Box3: .getCenter() target is now required"), Z = new Bt()), this.isEmpty() ? Z.set(0, 0, 0) : Z.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(Z) {
        return Z === void 0 && (console.warn("THREE.Box3: .getSize() target is now required"), Z = new Bt()), this.isEmpty() ? Z.set(0, 0, 0) : Z.subVectors(this.max, this.min);
      }, expandByPoint: function(Z) {
        return this.min.min(Z), this.max.max(Z), this;
      }, expandByVector: function(Z) {
        return this.min.sub(Z), this.max.add(Z), this;
      }, expandByScalar: function(Z) {
        return this.min.addScalar(-Z), this.max.addScalar(Z), this;
      }, expandByObject: function() {
        var Z, te, oe, se = new Bt();
        function Ae(ue) {
          var fe = ue.geometry;
          if (fe !== void 0) {
            if (fe.isGeometry) {
              var pe = fe.vertices;
              for (te = 0, oe = pe.length; te < oe; te++)
                se.copy(pe[te]), se.applyMatrix4(ue.matrixWorld), Z.expandByPoint(se);
            } else if (fe.isBufferGeometry) {
              var ve = fe.attributes.position;
              if (ve !== void 0)
                for (te = 0, oe = ve.count; te < oe; te++)
                  se.fromBufferAttribute(ve, te).applyMatrix4(ue.matrixWorld), Z.expandByPoint(se);
            }
          }
        }
        return function(ue) {
          return Z = this, ue.updateMatrixWorld(!0), ue.traverse(Ae), this;
        };
      }(), containsPoint: function(Z) {
        return !(Z.x < this.min.x || Z.x > this.max.x || Z.y < this.min.y || Z.y > this.max.y || Z.z < this.min.z || Z.z > this.max.z);
      }, containsBox: function(Z) {
        return this.min.x <= Z.min.x && Z.max.x <= this.max.x && this.min.y <= Z.min.y && Z.max.y <= this.max.y && this.min.z <= Z.min.z && Z.max.z <= this.max.z;
      }, getParameter: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Box3: .getParameter() target is now required"), te = new Bt()), te.set((Z.x - this.min.x) / (this.max.x - this.min.x), (Z.y - this.min.y) / (this.max.y - this.min.y), (Z.z - this.min.z) / (this.max.z - this.min.z));
      }, intersectsBox: function(Z) {
        return !(Z.max.x < this.min.x || Z.min.x > this.max.x || Z.max.y < this.min.y || Z.min.y > this.max.y || Z.max.z < this.min.z || Z.min.z > this.max.z);
      }, intersectsSphere: function() {
        var Z = new Bt();
        return function(te) {
          return this.clampPoint(te.center, Z), Z.distanceToSquared(te.center) <= te.radius * te.radius;
        };
      }(), intersectsPlane: function(Z) {
        var te, oe;
        return Z.normal.x > 0 ? (te = Z.normal.x * this.min.x, oe = Z.normal.x * this.max.x) : (te = Z.normal.x * this.max.x, oe = Z.normal.x * this.min.x), Z.normal.y > 0 ? (te += Z.normal.y * this.min.y, oe += Z.normal.y * this.max.y) : (te += Z.normal.y * this.max.y, oe += Z.normal.y * this.min.y), Z.normal.z > 0 ? (te += Z.normal.z * this.min.z, oe += Z.normal.z * this.max.z) : (te += Z.normal.z * this.max.z, oe += Z.normal.z * this.min.z), te <= Z.constant && oe >= Z.constant;
      }, intersectsTriangle: function() {
        var Z = new Bt(), te = new Bt(), oe = new Bt(), se = new Bt(), Ae = new Bt(), ue = new Bt(), fe = new Bt(), pe = new Bt(), ve = new Bt(), xe = new Bt();
        function Me(Ne) {
          var Qe, Ue;
          for (Qe = 0, Ue = Ne.length - 3; Qe <= Ue; Qe += 3) {
            fe.fromArray(Ne, Qe);
            var Je = ve.x * Math.abs(fe.x) + ve.y * Math.abs(fe.y) + ve.z * Math.abs(fe.z), rt = Z.dot(fe), it = te.dot(fe), ft = oe.dot(fe);
            if (Math.max(-Math.max(rt, it, ft), Math.min(rt, it, ft)) > Je)
              return !1;
          }
          return !0;
        }
        return function(Ne) {
          if (this.isEmpty())
            return !1;
          this.getCenter(pe), ve.subVectors(this.max, pe), Z.subVectors(Ne.a, pe), te.subVectors(Ne.b, pe), oe.subVectors(Ne.c, pe), se.subVectors(te, Z), Ae.subVectors(oe, te), ue.subVectors(Z, oe);
          var Qe = [0, -se.z, se.y, 0, -Ae.z, Ae.y, 0, -ue.z, ue.y, se.z, 0, -se.x, Ae.z, 0, -Ae.x, ue.z, 0, -ue.x, -se.y, se.x, 0, -Ae.y, Ae.x, 0, -ue.y, ue.x, 0];
          return !!Me(Qe) && !!Me(Qe = [1, 0, 0, 0, 1, 0, 0, 0, 1]) && (xe.crossVectors(se, Ae), Me(Qe = [xe.x, xe.y, xe.z]));
        };
      }(), clampPoint: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Box3: .clampPoint() target is now required"), te = new Bt()), te.copy(Z).clamp(this.min, this.max);
      }, distanceToPoint: function() {
        var Z = new Bt();
        return function(te) {
          return Z.copy(te).clamp(this.min, this.max).sub(te).length();
        };
      }(), getBoundingSphere: function() {
        var Z = new Bt();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Box3: .getBoundingSphere() target is now required"), te = new ao()), this.getCenter(te.center), te.radius = 0.5 * this.getSize(Z).length(), te;
        };
      }(), intersect: function(Z) {
        return this.min.max(Z.min), this.max.min(Z.max), this.isEmpty() && this.makeEmpty(), this;
      }, union: function(Z) {
        return this.min.min(Z.min), this.max.max(Z.max), this;
      }, applyMatrix4: function(Z) {
        if (this.isEmpty())
          return this;
        var te = Z.elements, oe = te[0] * this.min.x, se = te[1] * this.min.x, Ae = te[2] * this.min.x, ue = te[0] * this.max.x, fe = te[1] * this.max.x, pe = te[2] * this.max.x, ve = te[4] * this.min.y, xe = te[5] * this.min.y, Me = te[6] * this.min.y, Ne = te[4] * this.max.y, Qe = te[5] * this.max.y, Ue = te[6] * this.max.y, Je = te[8] * this.min.z, rt = te[9] * this.min.z, it = te[10] * this.min.z, ft = te[8] * this.max.z, vt = te[9] * this.max.z, ut = te[10] * this.max.z;
        return this.min.x = Math.min(oe, ue) + Math.min(ve, Ne) + Math.min(Je, ft) + te[12], this.min.y = Math.min(se, fe) + Math.min(xe, Qe) + Math.min(rt, vt) + te[13], this.min.z = Math.min(Ae, pe) + Math.min(Me, Ue) + Math.min(it, ut) + te[14], this.max.x = Math.max(oe, ue) + Math.max(ve, Ne) + Math.max(Je, ft) + te[12], this.max.y = Math.max(se, fe) + Math.max(xe, Qe) + Math.max(rt, vt) + te[13], this.max.z = Math.max(Ae, pe) + Math.max(Me, Ue) + Math.max(it, ut) + te[14], this;
      }, translate: function(Z) {
        return this.min.add(Z), this.max.add(Z), this;
      }, equals: function(Z) {
        return Z.min.equals(this.min) && Z.max.equals(this.max);
      } }), Object.assign(ao.prototype, { set: function(Z, te) {
        return this.center.copy(Z), this.radius = te, this;
      }, setFromPoints: function() {
        var Z = new yo();
        return function(te, oe) {
          var se = this.center;
          oe !== void 0 ? se.copy(oe) : Z.setFromPoints(te).getCenter(se);
          for (var Ae = 0, ue = 0, fe = te.length; ue < fe; ue++)
            Ae = Math.max(Ae, se.distanceToSquared(te[ue]));
          return this.radius = Math.sqrt(Ae), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.center.copy(Z.center), this.radius = Z.radius, this;
      }, empty: function() {
        return this.radius <= 0;
      }, containsPoint: function(Z) {
        return Z.distanceToSquared(this.center) <= this.radius * this.radius;
      }, distanceToPoint: function(Z) {
        return Z.distanceTo(this.center) - this.radius;
      }, intersectsSphere: function(Z) {
        var te = this.radius + Z.radius;
        return Z.center.distanceToSquared(this.center) <= te * te;
      }, intersectsBox: function(Z) {
        return Z.intersectsSphere(this);
      }, intersectsPlane: function(Z) {
        return Math.abs(Z.distanceToPoint(this.center)) <= this.radius;
      }, clampPoint: function(Z, te) {
        var oe = this.center.distanceToSquared(Z);
        return te === void 0 && (console.warn("THREE.Sphere: .clampPoint() target is now required"), te = new Bt()), te.copy(Z), oe > this.radius * this.radius && (te.sub(this.center).normalize(), te.multiplyScalar(this.radius).add(this.center)), te;
      }, getBoundingBox: function(Z) {
        return Z === void 0 && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), Z = new yo()), Z.set(this.center, this.center), Z.expandByScalar(this.radius), Z;
      }, applyMatrix4: function(Z) {
        return this.center.applyMatrix4(Z), this.radius = this.radius * Z.getMaxScaleOnAxis(), this;
      }, translate: function(Z) {
        return this.center.add(Z), this;
      }, equals: function(Z) {
        return Z.center.equals(this.center) && Z.radius === this.radius;
      } }), Object.assign(uo.prototype, { set: function(Z, te) {
        return this.normal.copy(Z), this.constant = te, this;
      }, setComponents: function(Z, te, oe, se) {
        return this.normal.set(Z, te, oe), this.constant = se, this;
      }, setFromNormalAndCoplanarPoint: function(Z, te) {
        return this.normal.copy(Z), this.constant = -te.dot(this.normal), this;
      }, setFromCoplanarPoints: function() {
        var Z = new Bt(), te = new Bt();
        return function(oe, se, Ae) {
          var ue = Z.subVectors(Ae, se).cross(te.subVectors(oe, se)).normalize();
          return this.setFromNormalAndCoplanarPoint(ue, oe), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.normal.copy(Z.normal), this.constant = Z.constant, this;
      }, normalize: function() {
        var Z = 1 / this.normal.length();
        return this.normal.multiplyScalar(Z), this.constant *= Z, this;
      }, negate: function() {
        return this.constant *= -1, this.normal.negate(), this;
      }, distanceToPoint: function(Z) {
        return this.normal.dot(Z) + this.constant;
      }, distanceToSphere: function(Z) {
        return this.distanceToPoint(Z.center) - Z.radius;
      }, projectPoint: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Plane: .projectPoint() target is now required"), te = new Bt()), te.copy(this.normal).multiplyScalar(-this.distanceToPoint(Z)).add(Z);
      }, intersectLine: function() {
        var Z = new Bt();
        return function(te, oe) {
          oe === void 0 && (console.warn("THREE.Plane: .intersectLine() target is now required"), oe = new Bt());
          var se = te.delta(Z), Ae = this.normal.dot(se);
          if (Ae === 0)
            return this.distanceToPoint(te.start) === 0 ? oe.copy(te.start) : void 0;
          var ue = -(te.start.dot(this.normal) + this.constant) / Ae;
          return ue < 0 || ue > 1 ? void 0 : oe.copy(se).multiplyScalar(ue).add(te.start);
        };
      }(), intersectsLine: function(Z) {
        var te = this.distanceToPoint(Z.start), oe = this.distanceToPoint(Z.end);
        return te < 0 && oe > 0 || oe < 0 && te > 0;
      }, intersectsBox: function(Z) {
        return Z.intersectsPlane(this);
      }, intersectsSphere: function(Z) {
        return Z.intersectsPlane(this);
      }, coplanarPoint: function(Z) {
        return Z === void 0 && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), Z = new Bt()), Z.copy(this.normal).multiplyScalar(-this.constant);
      }, applyMatrix4: function() {
        var Z = new Bt(), te = new qi();
        return function(oe, se) {
          var Ae = se || te.getNormalMatrix(oe), ue = this.coplanarPoint(Z).applyMatrix4(oe), fe = this.normal.applyMatrix3(Ae).normalize();
          return this.constant = -ue.dot(fe), this;
        };
      }(), translate: function(Z) {
        return this.constant -= Z.dot(this.normal), this;
      }, equals: function(Z) {
        return Z.normal.equals(this.normal) && Z.constant === this.constant;
      } }), Object.assign(Za.prototype, { set: function(Z, te, oe, se, Ae, ue) {
        var fe = this.planes;
        return fe[0].copy(Z), fe[1].copy(te), fe[2].copy(oe), fe[3].copy(se), fe[4].copy(Ae), fe[5].copy(ue), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        for (var te = this.planes, oe = 0; oe < 6; oe++)
          te[oe].copy(Z.planes[oe]);
        return this;
      }, setFromMatrix: function(Z) {
        var te = this.planes, oe = Z.elements, se = oe[0], Ae = oe[1], ue = oe[2], fe = oe[3], pe = oe[4], ve = oe[5], xe = oe[6], Me = oe[7], Ne = oe[8], Qe = oe[9], Ue = oe[10], Je = oe[11], rt = oe[12], it = oe[13], ft = oe[14], vt = oe[15];
        return te[0].setComponents(fe - se, Me - pe, Je - Ne, vt - rt).normalize(), te[1].setComponents(fe + se, Me + pe, Je + Ne, vt + rt).normalize(), te[2].setComponents(fe + Ae, Me + ve, Je + Qe, vt + it).normalize(), te[3].setComponents(fe - Ae, Me - ve, Je - Qe, vt - it).normalize(), te[4].setComponents(fe - ue, Me - xe, Je - Ue, vt - ft).normalize(), te[5].setComponents(fe + ue, Me + xe, Je + Ue, vt + ft).normalize(), this;
      }, intersectsObject: function() {
        var Z = new ao();
        return function(te) {
          var oe = te.geometry;
          return oe.boundingSphere === null && oe.computeBoundingSphere(), Z.copy(oe.boundingSphere).applyMatrix4(te.matrixWorld), this.intersectsSphere(Z);
        };
      }(), intersectsSprite: function() {
        var Z = new ao();
        return function(te) {
          return Z.center.set(0, 0, 0), Z.radius = 0.7071067811865476, Z.applyMatrix4(te.matrixWorld), this.intersectsSphere(Z);
        };
      }(), intersectsSphere: function(Z) {
        for (var te = this.planes, oe = Z.center, se = -Z.radius, Ae = 0; Ae < 6; Ae++)
          if (te[Ae].distanceToPoint(oe) < se)
            return !1;
        return !0;
      }, intersectsBox: function() {
        var Z = new Bt();
        return function(te) {
          for (var oe = this.planes, se = 0; se < 6; se++) {
            var Ae = oe[se];
            if (Z.x = Ae.normal.x > 0 ? te.max.x : te.min.x, Z.y = Ae.normal.y > 0 ? te.max.y : te.min.y, Z.z = Ae.normal.z > 0 ? te.max.z : te.min.z, Ae.distanceToPoint(Z) < 0)
              return !1;
          }
          return !0;
        };
      }(), containsPoint: function(Z) {
        for (var te = this.planes, oe = 0; oe < 6; oe++)
          if (te[oe].distanceToPoint(Z) < 0)
            return !1;
        return !0;
      } });
      var ei = { alphamap_fragment: `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif
`, alphamap_pars_fragment: `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif
`, alphatest_fragment: `#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif
`, aomap_fragment: `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( PHYSICAL )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif
`, aomap_pars_fragment: `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, begin_vertex: `
vec3 transformed = vec3( position );
`, beginnormal_vertex: `
vec3 objectNormal = vec3( normal );
`, bsdfs: `float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	if( decayExponent > 0.0 ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		return distanceFalloff * maxDistanceCutoffFactor;
#else
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
#endif
	}
	return 1.0;
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;
	return specularColor * AB.x + AB.y;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
`, bumpmap_pars_fragment: `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif
`, clipping_planes_fragment: `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	#endif
#endif
`, clipping_planes_pars_fragment: `#if NUM_CLIPPING_PLANES > 0
	#if ! defined( PHYSICAL ) && ! defined( PHONG )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif
`, clipping_planes_pars_vertex: `#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	varying vec3 vViewPosition;
#endif
`, clipping_planes_vertex: `#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	vViewPosition = - mvPosition.xyz;
#endif
`, color_fragment: `#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`, color_pars_fragment: `#ifdef USE_COLOR
	varying vec3 vColor;
#endif
`, color_pars_vertex: `#ifdef USE_COLOR
	varying vec3 vColor;
#endif`, color_vertex: `#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`, common: `#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#define saturate(a) clamp( a, 0.0, 1.0 )
#define whiteCompliment(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
`, cube_uv_reflection_fragment: `#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_textureSize (1024.0)
int getFaceFromDirection(vec3 direction) {
	vec3 absDirection = abs(direction);
	int face = -1;
	if( absDirection.x > absDirection.z ) {
		if(absDirection.x > absDirection.y )
			face = direction.x > 0.0 ? 0 : 3;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	else {
		if(absDirection.z > absDirection.y )
			face = direction.z > 0.0 ? 2 : 5;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	return face;
}
#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)
#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))
vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {
	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);
	float dxRoughness = dFdx(roughness);
	float dyRoughness = dFdy(roughness);
	vec3 dx = dFdx( vec * scale * dxRoughness );
	vec3 dy = dFdy( vec * scale * dyRoughness );
	float d = max( dot( dx, dx ), dot( dy, dy ) );
	d = clamp(d, 1.0, cubeUV_rangeClamp);
	float mipLevel = 0.5 * log2(d);
	return vec2(floor(mipLevel), fract(mipLevel));
}
#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)
#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)
vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {
	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;
	float a = 16.0 * cubeUV_rcpTextureSize;
	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );
	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;
	float powScale = exp2_packed.x * exp2_packed.y;
	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;
	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;
	bool bRes = mipLevel == 0.0;
	scale =  bRes && (scale < a) ? a : scale;
	vec3 r;
	vec2 offset;
	int face = getFaceFromDirection(direction);
	float rcpPowScale = 1.0 / powScale;
	if( face == 0) {
		r = vec3(direction.x, -direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 1) {
		r = vec3(direction.y, direction.x, direction.z);
		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 2) {
		r = vec3(direction.z, direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;
	}
	else if( face == 3) {
		r = vec3(direction.x, direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else if( face == 4) {
		r = vec3(direction.y, direction.x, -direction.z);
		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	else {
		r = vec3(direction.z, -direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;
	}
	r = normalize(r);
	float texelOffset = 0.5 * cubeUV_rcpTextureSize;
	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;
	vec2 base = offset + vec2( texelOffset );
	return base + s * ( scale - 2.0 * texelOffset );
}
#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)
vec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {
	float roughnessVal = roughness* cubeUV_maxLods3;
	float r1 = floor(roughnessVal);
	float r2 = r1 + 1.0;
	float t = fract(roughnessVal);
	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);
	float s = mipInfo.y;
	float level0 = mipInfo.x;
	float level1 = level0 + 1.0;
	level1 = level1 > 5.0 ? 5.0 : level1;
	level0 += min( floor( s + 0.5 ), 5.0 );
	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);
	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));
	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);
	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));
	vec4 result = mix(color10, color20, t);
	return vec4(result.rgb, 1.0);
}
#endif
`, defaultnormal_vertex: `vec3 transformedNormal = normalMatrix * objectNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
`, displacementmap_pars_vertex: `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif
`, displacementmap_vertex: `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );
#endif
`, emissivemap_fragment: `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif
`, emissivemap_pars_fragment: `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif
`, encodings_fragment: `  gl_FragColor = linearToOutputTexel( gl_FragColor );
`, encodings_pars_fragment: `
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.xyz * value.w * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M            = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.x, max( value.g, value.b ) );
	float D      = max( maxRange / maxRGB, 1.0 );
	D            = min( floor( D ) / 255.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;
	Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract(Le);
	vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;
	return vec4( max(vRGB, 0.0), 1.0 );
}
`, envmap_fragment: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToVertex, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	envColor = envMapTexelToLinear( envColor );
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif
`, envmap_pars_fragment: `#if defined( USE_ENVMAP ) || defined( PHYSICAL )
	uniform float reflectivity;
	uniform float envMapIntensity;
#endif
#ifdef USE_ENVMAP
	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )
		varying vec3 vWorldPosition;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif
`, envmap_pars_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif
`, envmap_physical_pars_fragment: `#if defined( USE_ENVMAP ) && defined( PHYSICAL )
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );
		#else
			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif
`, envmap_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif
`, fog_vertex: `
#ifdef USE_FOG
fogDepth = -mvPosition.z;
#endif`, fog_pars_vertex: `#ifdef USE_FOG
  varying float fogDepth;
#endif
`, fog_fragment: `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif
`, fog_pars_fragment: `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif
`, gradientmap_pars_fragment: `#ifdef TOON
	uniform sampler2D gradientMap;
	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
		float dotNL = dot( normal, lightDirection );
		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
		#ifdef USE_GRADIENTMAP
			return texture2D( gradientMap, coord ).rgb;
		#else
			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
		#endif
	}
#endif
`, lightmap_fragment: `#ifdef USE_LIGHTMAP
	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
#endif
`, lightmap_pars_fragment: `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, lights_lambert_vertex: `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif
`, lights_pars_begin: `uniform vec3 ambientLightColor;
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
		float shadowCameraNear;
		float shadowCameraFar;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif
`, lights_phong_fragment: `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`, lights_phong_pars_fragment: `varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	#ifdef TOON
		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#else
		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
		vec3 irradiance = dotNL * directLight.color;
	#endif
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)
`, lights_physical_fragment: `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );
#ifdef STANDARD
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );
#endif
`, lights_physical_pars_fragment: `struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
	#ifndef STANDARD
		float clearCoat;
		float clearCoatRoughness;
	#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearCoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos - halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos + halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos + halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos - halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifndef STANDARD
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );
	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	#ifndef STANDARD
		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	#ifndef STANDARD
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		float dotNL = dotNV;
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );
	#ifndef STANDARD
		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )
#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}
`, lights_fragment_begin: `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = normalize( vViewPosition );
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearCoatRadiance = vec3( 0.0 );
#endif
`, lights_fragment_maps: `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )
		irradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );
	#ifndef STANDARD
		clearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );
	#endif
#endif
`, lights_fragment_end: `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );
#endif
`, logdepthbuf_fragment: `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, logdepthbuf_pars_fragment: `#ifdef USE_LOGDEPTHBUF
	uniform float logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
#endif
`, logdepthbuf_pars_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
	uniform float logDepthBufFC;
#endif`, logdepthbuf_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
	#else
		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
		gl_Position.z *= gl_Position.w;
	#endif
#endif
`, map_fragment: `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif
`, map_pars_fragment: `#ifdef USE_MAP
	uniform sampler2D map;
#endif
`, map_particle_fragment: `#ifdef USE_MAP
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
`, map_particle_pars_fragment: `#ifdef USE_MAP
	uniform mat3 uvTransform;
	uniform sampler2D map;
#endif
`, metalnessmap_fragment: `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif
`, metalnessmap_pars_fragment: `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, morphnormal_vertex: `#ifdef USE_MORPHNORMALS
	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];
	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];
	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];
	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];
#endif
`, morphtarget_pars_vertex: `#ifdef USE_MORPHTARGETS
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`, morphtarget_vertex: `#ifdef USE_MORPHTARGETS
	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];
	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];
	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];
	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];
	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];
	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];
	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];
	#endif
#endif
`, normal_fragment_begin: `#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
#endif
`, normal_fragment_maps: `#ifdef USE_NORMALMAP
	#ifdef OBJECTSPACE_NORMALMAP
		normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
		#ifdef FLIP_SIDED
			normal = - normal;
		#endif
		#ifdef DOUBLE_SIDED
			normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		normal = normalize( normalMatrix * normal );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif
`, normalmap_pars_fragment: `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
	#ifdef OBJECTSPACE_NORMALMAP
		uniform mat3 normalMatrix;
	#else
		vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {
			vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
			vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
			vec2 st0 = dFdx( vUv.st );
			vec2 st1 = dFdy( vUv.st );
			float scale = sign( st1.t * st0.s - st0.t * st1.s );
			vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
			vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
			vec3 N = normalize( surf_norm );
			mat3 tsn = mat3( S, T, N );
			vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
			mapN.xy *= normalScale;
			mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			return normalize( tsn * mapN );
		}
	#endif
#endif
`, packing: `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}
`, premultiplied_alpha_fragment: `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif
`, project_vertex: `vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
gl_Position = projectionMatrix * mvPosition;
`, dithering_fragment: `#if defined( DITHERING )
  gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif
`, dithering_pars_fragment: `#if defined( DITHERING )
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif
`, roughnessmap_fragment: `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif
`, roughnessmap_pars_fragment: `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, shadowmap_pars_fragment: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = floor( uv * size + 0.5 ) / size;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif
`, shadowmap_pars_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
#endif
`, shadowmap_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif
`, shadowmask_pars_fragment: `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}
`, skinbase_vertex: `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, skinning_pars_vertex: `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif
`, skinning_vertex: `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif
`, skinnormal_vertex: `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
#endif
`, specularmap_fragment: `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, specularmap_pars_fragment: `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, tonemapping_fragment: `#if defined( TONE_MAPPING )
  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif
`, tonemapping_pars_fragment: `#ifndef saturate
	#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
`, uv_pars_fragment: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
#endif`, uv_pars_vertex: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
`, uv_vertex: `#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, uv2_pars_fragment: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, uv2_pars_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
#endif`, uv2_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = uv2;
#endif`, worldpos_vertex: `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
#endif
`, cube_frag: `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldPosition;
void main() {
	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );
	gl_FragColor.a *= opacity;
}
`, cube_vert: `varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}
`, depth_frag: `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}
`, depth_vert: `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`, distanceRGBA_frag: `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}
`, distanceRGBA_vert: `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}
`, equirect_frag: `uniform sampler2D tEquirect;
varying vec3 vWorldPosition;
#include <common>
void main() {
	vec3 direction = normalize( vWorldPosition );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	gl_FragColor = texture2D( tEquirect, sampleUV );
}
`, equirect_vert: `varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}
`, linedashed_frag: `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, linedashed_vert: `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
`, meshbasic_frag: `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, meshbasic_vert: `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}
`, meshlambert_frag: `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshlambert_vert: `#define LAMBERT
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, meshphong_frag: `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshphong_vert: `#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, meshphysical_frag: `#define PHYSICAL
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifndef STANDARD
	uniform float clearCoat;
	uniform float clearCoatRoughness;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}
`, meshphysical_vert: `#define PHYSICAL
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, normal_frag: `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}
`, normal_vert: `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )
	vViewPosition = - mvPosition.xyz;
#endif
}
`, points_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, points_vert: `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#ifdef USE_SIZEATTENUATION
		gl_PointSize = size * ( scale / - mvPosition.z );
	#else
		gl_PointSize = size;
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}
`, shadow_frag: `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <fog_fragment>
}
`, shadow_vert: `#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}
`, sprite_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`, sprite_vert: `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	vec4 mvPosition;
	mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}
` }, $i = { merge: function(Z) {
        for (var te = {}, oe = 0; oe < Z.length; oe++) {
          var se = this.clone(Z[oe]);
          for (var Ae in se)
            te[Ae] = se[Ae];
        }
        return te;
      }, clone: function(Z) {
        var te = {};
        for (var oe in Z)
          for (var se in te[oe] = {}, Z[oe]) {
            var Ae = Z[oe][se];
            Ae && (Ae.isColor || Ae.isMatrix3 || Ae.isMatrix4 || Ae.isVector2 || Ae.isVector3 || Ae.isVector4 || Ae.isTexture) ? te[oe][se] = Ae.clone() : Array.isArray(Ae) ? te[oe][se] = Ae.slice() : te[oe][se] = Ae;
          }
        return te;
      } }, oA = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 };
      function ze(Z, te, oe) {
        return te === void 0 && oe === void 0 ? this.set(Z) : this.setRGB(Z, te, oe);
      }
      Object.assign(ze.prototype, { isColor: !0, r: 1, g: 1, b: 1, set: function(Z) {
        return Z && Z.isColor ? this.copy(Z) : typeof Z == "number" ? this.setHex(Z) : typeof Z == "string" && this.setStyle(Z), this;
      }, setScalar: function(Z) {
        return this.r = Z, this.g = Z, this.b = Z, this;
      }, setHex: function(Z) {
        return Z = Math.floor(Z), this.r = (Z >> 16 & 255) / 255, this.g = (Z >> 8 & 255) / 255, this.b = (255 & Z) / 255, this;
      }, setRGB: function(Z, te, oe) {
        return this.r = Z, this.g = te, this.b = oe, this;
      }, setHSL: function() {
        function Z(te, oe, se) {
          return se < 0 && (se += 1), se > 1 && (se -= 1), se < 1 / 6 ? te + 6 * (oe - te) * se : se < 0.5 ? oe : se < 2 / 3 ? te + 6 * (oe - te) * (2 / 3 - se) : te;
        }
        return function(te, oe, se) {
          if (te = Mn.euclideanModulo(te, 1), oe = Mn.clamp(oe, 0, 1), se = Mn.clamp(se, 0, 1), oe === 0)
            this.r = this.g = this.b = se;
          else {
            var Ae = se <= 0.5 ? se * (1 + oe) : se + oe - se * oe, ue = 2 * se - Ae;
            this.r = Z(ue, Ae, te + 1 / 3), this.g = Z(ue, Ae, te), this.b = Z(ue, Ae, te - 1 / 3);
          }
          return this;
        };
      }(), setStyle: function(Z) {
        function te(Ne) {
          Ne !== void 0 && parseFloat(Ne) < 1 && console.warn("THREE.Color: Alpha component of " + Z + " will be ignored.");
        }
        var oe;
        if (oe = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(Z)) {
          var se, Ae = oe[1], ue = oe[2];
          switch (Ae) {
            case "rgb":
            case "rgba":
              if (se = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(ue))
                return this.r = Math.min(255, parseInt(se[1], 10)) / 255, this.g = Math.min(255, parseInt(se[2], 10)) / 255, this.b = Math.min(255, parseInt(se[3], 10)) / 255, te(se[5]), this;
              if (se = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(ue))
                return this.r = Math.min(100, parseInt(se[1], 10)) / 100, this.g = Math.min(100, parseInt(se[2], 10)) / 100, this.b = Math.min(100, parseInt(se[3], 10)) / 100, te(se[5]), this;
              break;
            case "hsl":
            case "hsla":
              if (se = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(ue)) {
                var fe = parseFloat(se[1]) / 360, pe = parseInt(se[2], 10) / 100, ve = parseInt(se[3], 10) / 100;
                return te(se[5]), this.setHSL(fe, pe, ve);
              }
          }
        } else if (oe = /^\#([A-Fa-f0-9]+)$/.exec(Z)) {
          var xe, Me = (xe = oe[1]).length;
          if (Me === 3)
            return this.r = parseInt(xe.charAt(0) + xe.charAt(0), 16) / 255, this.g = parseInt(xe.charAt(1) + xe.charAt(1), 16) / 255, this.b = parseInt(xe.charAt(2) + xe.charAt(2), 16) / 255, this;
          if (Me === 6)
            return this.r = parseInt(xe.charAt(0) + xe.charAt(1), 16) / 255, this.g = parseInt(xe.charAt(2) + xe.charAt(3), 16) / 255, this.b = parseInt(xe.charAt(4) + xe.charAt(5), 16) / 255, this;
        }
        return Z && Z.length > 0 && ((xe = oA[Z]) !== void 0 ? this.setHex(xe) : console.warn("THREE.Color: Unknown color " + Z)), this;
      }, clone: function() {
        return new this.constructor(this.r, this.g, this.b);
      }, copy: function(Z) {
        return this.r = Z.r, this.g = Z.g, this.b = Z.b, this;
      }, copyGammaToLinear: function(Z, te) {
        return te === void 0 && (te = 2), this.r = Math.pow(Z.r, te), this.g = Math.pow(Z.g, te), this.b = Math.pow(Z.b, te), this;
      }, copyLinearToGamma: function(Z, te) {
        te === void 0 && (te = 2);
        var oe = te > 0 ? 1 / te : 1;
        return this.r = Math.pow(Z.r, oe), this.g = Math.pow(Z.g, oe), this.b = Math.pow(Z.b, oe), this;
      }, convertGammaToLinear: function(Z) {
        return this.copyGammaToLinear(this, Z), this;
      }, convertLinearToGamma: function(Z) {
        return this.copyLinearToGamma(this, Z), this;
      }, copySRGBToLinear: function() {
        function Z(te) {
          return te < 0.04045 ? 0.0773993808 * te : Math.pow(0.9478672986 * te + 0.0521327014, 2.4);
        }
        return function(te) {
          return this.r = Z(te.r), this.g = Z(te.g), this.b = Z(te.b), this;
        };
      }(), copyLinearToSRGB: function() {
        function Z(te) {
          return te < 31308e-7 ? 12.92 * te : 1.055 * Math.pow(te, 0.41666) - 0.055;
        }
        return function(te) {
          return this.r = Z(te.r), this.g = Z(te.g), this.b = Z(te.b), this;
        };
      }(), convertSRGBToLinear: function() {
        return this.copySRGBToLinear(this), this;
      }, convertLinearToSRGB: function() {
        return this.copyLinearToSRGB(this), this;
      }, getHex: function() {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;
      }, getHexString: function() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
      }, getHSL: function(Z) {
        Z === void 0 && (console.warn("THREE.Color: .getHSL() target is now required"), Z = { h: 0, s: 0, l: 0 });
        var te, oe, se = this.r, Ae = this.g, ue = this.b, fe = Math.max(se, Ae, ue), pe = Math.min(se, Ae, ue), ve = (pe + fe) / 2;
        if (pe === fe)
          te = 0, oe = 0;
        else {
          var xe = fe - pe;
          switch (oe = ve <= 0.5 ? xe / (fe + pe) : xe / (2 - fe - pe), fe) {
            case se:
              te = (Ae - ue) / xe + (Ae < ue ? 6 : 0);
              break;
            case Ae:
              te = (ue - se) / xe + 2;
              break;
            case ue:
              te = (se - Ae) / xe + 4;
          }
          te /= 6;
        }
        return Z.h = te, Z.s = oe, Z.l = ve, Z;
      }, getStyle: function() {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")";
      }, offsetHSL: function() {
        var Z = {};
        return function(te, oe, se) {
          return this.getHSL(Z), Z.h += te, Z.s += oe, Z.l += se, this.setHSL(Z.h, Z.s, Z.l), this;
        };
      }(), add: function(Z) {
        return this.r += Z.r, this.g += Z.g, this.b += Z.b, this;
      }, addColors: function(Z, te) {
        return this.r = Z.r + te.r, this.g = Z.g + te.g, this.b = Z.b + te.b, this;
      }, addScalar: function(Z) {
        return this.r += Z, this.g += Z, this.b += Z, this;
      }, sub: function(Z) {
        return this.r = Math.max(0, this.r - Z.r), this.g = Math.max(0, this.g - Z.g), this.b = Math.max(0, this.b - Z.b), this;
      }, multiply: function(Z) {
        return this.r *= Z.r, this.g *= Z.g, this.b *= Z.b, this;
      }, multiplyScalar: function(Z) {
        return this.r *= Z, this.g *= Z, this.b *= Z, this;
      }, lerp: function(Z, te) {
        return this.r += (Z.r - this.r) * te, this.g += (Z.g - this.g) * te, this.b += (Z.b - this.b) * te, this;
      }, equals: function(Z) {
        return Z.r === this.r && Z.g === this.g && Z.b === this.b;
      }, fromArray: function(Z, te) {
        return te === void 0 && (te = 0), this.r = Z[te], this.g = Z[te + 1], this.b = Z[te + 2], this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this.r, Z[te + 1] = this.g, Z[te + 2] = this.b, Z;
      }, toJSON: function() {
        return this.getHex();
      } });
      var Ct = { common: { diffuse: { value: new ze(15658734) }, opacity: { value: 1 }, map: { value: null }, uvTransform: { value: new qi() }, alphaMap: { value: null } }, specularmap: { specularMap: { value: null } }, envmap: { envMap: { value: null }, flipEnvMap: { value: -1 }, reflectivity: { value: 1 }, refractionRatio: { value: 0.98 }, maxMipLevel: { value: 0 } }, aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } }, lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } }, emissivemap: { emissiveMap: { value: null } }, bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } }, normalmap: { normalMap: { value: null }, normalScale: { value: new Qr(1, 1) } }, displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } }, roughnessmap: { roughnessMap: { value: null } }, metalnessmap: { metalnessMap: { value: null } }, gradientmap: { gradientMap: { value: null } }, fog: { fogDensity: { value: 25e-5 }, fogNear: { value: 1 }, fogFar: { value: 2e3 }, fogColor: { value: new ze(16777215) } }, lights: { ambientLightColor: { value: [] }, directionalLights: { value: [], properties: { direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, directionalShadowMap: { value: [] }, directionalShadowMatrix: { value: [] }, spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, spotShadowMap: { value: [] }, spotShadowMatrix: { value: [] }, pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {} } }, pointShadowMap: { value: [] }, pointShadowMatrix: { value: [] }, hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } }, rectAreaLights: { value: [], properties: { color: {}, position: {}, width: {}, height: {} } } }, points: { diffuse: { value: new ze(15658734) }, opacity: { value: 1 }, size: { value: 1 }, scale: { value: 1 }, map: { value: null }, uvTransform: { value: new qi() } }, sprite: { diffuse: { value: new ze(15658734) }, opacity: { value: 1 }, center: { value: new Qr(0.5, 0.5) }, rotation: { value: 0 }, map: { value: null }, uvTransform: { value: new qi() } } }, rr = { basic: { uniforms: $i.merge([Ct.common, Ct.specularmap, Ct.envmap, Ct.aomap, Ct.lightmap, Ct.fog]), vertexShader: ei.meshbasic_vert, fragmentShader: ei.meshbasic_frag }, lambert: { uniforms: $i.merge([Ct.common, Ct.specularmap, Ct.envmap, Ct.aomap, Ct.lightmap, Ct.emissivemap, Ct.fog, Ct.lights, { emissive: { value: new ze(0) } }]), vertexShader: ei.meshlambert_vert, fragmentShader: ei.meshlambert_frag }, phong: { uniforms: $i.merge([Ct.common, Ct.specularmap, Ct.envmap, Ct.aomap, Ct.lightmap, Ct.emissivemap, Ct.bumpmap, Ct.normalmap, Ct.displacementmap, Ct.gradientmap, Ct.fog, Ct.lights, { emissive: { value: new ze(0) }, specular: { value: new ze(1118481) }, shininess: { value: 30 } }]), vertexShader: ei.meshphong_vert, fragmentShader: ei.meshphong_frag }, standard: { uniforms: $i.merge([Ct.common, Ct.envmap, Ct.aomap, Ct.lightmap, Ct.emissivemap, Ct.bumpmap, Ct.normalmap, Ct.displacementmap, Ct.roughnessmap, Ct.metalnessmap, Ct.fog, Ct.lights, { emissive: { value: new ze(0) }, roughness: { value: 0.5 }, metalness: { value: 0.5 }, envMapIntensity: { value: 1 } }]), vertexShader: ei.meshphysical_vert, fragmentShader: ei.meshphysical_frag }, points: { uniforms: $i.merge([Ct.points, Ct.fog]), vertexShader: ei.points_vert, fragmentShader: ei.points_frag }, dashed: { uniforms: $i.merge([Ct.common, Ct.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } }]), vertexShader: ei.linedashed_vert, fragmentShader: ei.linedashed_frag }, depth: { uniforms: $i.merge([Ct.common, Ct.displacementmap]), vertexShader: ei.depth_vert, fragmentShader: ei.depth_frag }, normal: { uniforms: $i.merge([Ct.common, Ct.bumpmap, Ct.normalmap, Ct.displacementmap, { opacity: { value: 1 } }]), vertexShader: ei.normal_vert, fragmentShader: ei.normal_frag }, sprite: { uniforms: $i.merge([Ct.sprite, Ct.fog]), vertexShader: ei.sprite_vert, fragmentShader: ei.sprite_frag }, cube: { uniforms: { tCube: { value: null }, tFlip: { value: -1 }, opacity: { value: 1 } }, vertexShader: ei.cube_vert, fragmentShader: ei.cube_frag }, equirect: { uniforms: { tEquirect: { value: null } }, vertexShader: ei.equirect_vert, fragmentShader: ei.equirect_frag }, distanceRGBA: { uniforms: $i.merge([Ct.common, Ct.displacementmap, { referencePosition: { value: new Bt() }, nearDistance: { value: 1 }, farDistance: { value: 1e3 } }]), vertexShader: ei.distanceRGBA_vert, fragmentShader: ei.distanceRGBA_frag }, shadow: { uniforms: $i.merge([Ct.lights, Ct.fog, { color: { value: new ze(0) }, opacity: { value: 1 } }]), vertexShader: ei.shadow_vert, fragmentShader: ei.shadow_frag } };
      function cr() {
        var Z = null, te = !1, oe = null;
        function se(Ae, ue) {
          te !== !1 && (oe(Ae, ue), Z.requestAnimationFrame(se));
        }
        return { start: function() {
          te !== !0 && oe !== null && (Z.requestAnimationFrame(se), te = !0);
        }, stop: function() {
          te = !1;
        }, setAnimationLoop: function(Ae) {
          oe = Ae;
        }, setContext: function(Ae) {
          Z = Ae;
        } };
      }
      function Pr(Z) {
        var te = /* @__PURE__ */ new WeakMap();
        return { get: function(oe) {
          return oe.isInterleavedBufferAttribute && (oe = oe.data), te.get(oe);
        }, remove: function(oe) {
          oe.isInterleavedBufferAttribute && (oe = oe.data);
          var se = te.get(oe);
          se && (Z.deleteBuffer(se.buffer), te.delete(oe));
        }, update: function(oe, se) {
          oe.isInterleavedBufferAttribute && (oe = oe.data);
          var Ae = te.get(oe);
          Ae === void 0 ? te.set(oe, function(ue, fe) {
            var pe = ue.array, ve = ue.dynamic ? Z.DYNAMIC_DRAW : Z.STATIC_DRAW, xe = Z.createBuffer();
            Z.bindBuffer(fe, xe), Z.bufferData(fe, pe, ve), ue.onUploadCallback();
            var Me = Z.FLOAT;
            return pe instanceof Float32Array ? Me = Z.FLOAT : pe instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : pe instanceof Uint16Array ? Me = Z.UNSIGNED_SHORT : pe instanceof Int16Array ? Me = Z.SHORT : pe instanceof Uint32Array ? Me = Z.UNSIGNED_INT : pe instanceof Int32Array ? Me = Z.INT : pe instanceof Int8Array ? Me = Z.BYTE : pe instanceof Uint8Array && (Me = Z.UNSIGNED_BYTE), { buffer: xe, type: Me, bytesPerElement: pe.BYTES_PER_ELEMENT, version: ue.version };
          }(oe, se)) : Ae.version < oe.version && (function(ue, fe, pe) {
            var ve = fe.array, xe = fe.updateRange;
            Z.bindBuffer(pe, ue), fe.dynamic === !1 ? Z.bufferData(pe, ve, Z.STATIC_DRAW) : xe.count === -1 ? Z.bufferSubData(pe, 0, ve) : xe.count === 0 ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (Z.bufferSubData(pe, xe.offset * ve.BYTES_PER_ELEMENT, ve.subarray(xe.offset, xe.offset + xe.count)), xe.count = -1);
          }(Ae.buffer, oe, se), Ae.version = oe.version);
        } };
      }
      function pn(Z, te, oe, se) {
        this._x = Z || 0, this._y = te || 0, this._z = oe || 0, this._order = se || pn.DefaultOrder;
      }
      function on() {
        this.mask = 1;
      }
      rr.physical = { uniforms: $i.merge([rr.standard.uniforms, { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } }]), vertexShader: ei.meshphysical_vert, fragmentShader: ei.meshphysical_frag }, pn.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], pn.DefaultOrder = "XYZ", Object.defineProperties(pn.prototype, { x: { get: function() {
        return this._x;
      }, set: function(Z) {
        this._x = Z, this.onChangeCallback();
      } }, y: { get: function() {
        return this._y;
      }, set: function(Z) {
        this._y = Z, this.onChangeCallback();
      } }, z: { get: function() {
        return this._z;
      }, set: function(Z) {
        this._z = Z, this.onChangeCallback();
      } }, order: { get: function() {
        return this._order;
      }, set: function(Z) {
        this._order = Z, this.onChangeCallback();
      } } }), Object.assign(pn.prototype, { isEuler: !0, set: function(Z, te, oe, se) {
        return this._x = Z, this._y = te, this._z = oe, this._order = se || this._order, this.onChangeCallback(), this;
      }, clone: function() {
        return new this.constructor(this._x, this._y, this._z, this._order);
      }, copy: function(Z) {
        return this._x = Z._x, this._y = Z._y, this._z = Z._z, this._order = Z._order, this.onChangeCallback(), this;
      }, setFromRotationMatrix: function(Z, te, oe) {
        var se = Mn.clamp, Ae = Z.elements, ue = Ae[0], fe = Ae[4], pe = Ae[8], ve = Ae[1], xe = Ae[5], Me = Ae[9], Ne = Ae[2], Qe = Ae[6], Ue = Ae[10];
        return (te = te || this._order) === "XYZ" ? (this._y = Math.asin(se(pe, -1, 1)), Math.abs(pe) < 0.99999 ? (this._x = Math.atan2(-Me, Ue), this._z = Math.atan2(-fe, ue)) : (this._x = Math.atan2(Qe, xe), this._z = 0)) : te === "YXZ" ? (this._x = Math.asin(-se(Me, -1, 1)), Math.abs(Me) < 0.99999 ? (this._y = Math.atan2(pe, Ue), this._z = Math.atan2(ve, xe)) : (this._y = Math.atan2(-Ne, ue), this._z = 0)) : te === "ZXY" ? (this._x = Math.asin(se(Qe, -1, 1)), Math.abs(Qe) < 0.99999 ? (this._y = Math.atan2(-Ne, Ue), this._z = Math.atan2(-fe, xe)) : (this._y = 0, this._z = Math.atan2(ve, ue))) : te === "ZYX" ? (this._y = Math.asin(-se(Ne, -1, 1)), Math.abs(Ne) < 0.99999 ? (this._x = Math.atan2(Qe, Ue), this._z = Math.atan2(ve, ue)) : (this._x = 0, this._z = Math.atan2(-fe, xe))) : te === "YZX" ? (this._z = Math.asin(se(ve, -1, 1)), Math.abs(ve) < 0.99999 ? (this._x = Math.atan2(-Me, xe), this._y = Math.atan2(-Ne, ue)) : (this._x = 0, this._y = Math.atan2(pe, Ue))) : te === "XZY" ? (this._z = Math.asin(-se(fe, -1, 1)), Math.abs(fe) < 0.99999 ? (this._x = Math.atan2(Qe, xe), this._y = Math.atan2(pe, ue)) : (this._x = Math.atan2(-Me, Ue), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + te), this._order = te, oe !== !1 && this.onChangeCallback(), this;
      }, setFromQuaternion: function() {
        var Z = new yn();
        return function(te, oe, se) {
          return Z.makeRotationFromQuaternion(te), this.setFromRotationMatrix(Z, oe, se);
        };
      }(), setFromVector3: function(Z, te) {
        return this.set(Z.x, Z.y, Z.z, te || this._order);
      }, reorder: function() {
        var Z = new hi();
        return function(te) {
          return Z.setFromEuler(this), this.setFromQuaternion(Z, te);
        };
      }(), equals: function(Z) {
        return Z._x === this._x && Z._y === this._y && Z._z === this._z && Z._order === this._order;
      }, fromArray: function(Z) {
        return this._x = Z[0], this._y = Z[1], this._z = Z[2], Z[3] !== void 0 && (this._order = Z[3]), this.onChangeCallback(), this;
      }, toArray: function(Z, te) {
        return Z === void 0 && (Z = []), te === void 0 && (te = 0), Z[te] = this._x, Z[te + 1] = this._y, Z[te + 2] = this._z, Z[te + 3] = this._order, Z;
      }, toVector3: function(Z) {
        return Z ? Z.set(this._x, this._y, this._z) : new Bt(this._x, this._y, this._z);
      }, onChange: function(Z) {
        return this.onChangeCallback = Z, this;
      }, onChangeCallback: function() {
      } }), Object.assign(on.prototype, { set: function(Z) {
        this.mask = 1 << Z | 0;
      }, enable: function(Z) {
        this.mask |= 1 << Z | 0;
      }, toggle: function(Z) {
        this.mask ^= 1 << Z | 0;
      }, disable: function(Z) {
        this.mask &= ~(1 << Z | 0);
      }, test: function(Z) {
        return (this.mask & Z.mask) != 0;
      } });
      var Nn = 0;
      function Cr() {
        Object.defineProperty(this, "id", { value: Nn++ }), this.uuid = Mn.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Cr.DefaultUp.clone();
        var Z = new Bt(), te = new pn(), oe = new hi(), se = new Bt(1, 1, 1);
        te.onChange(function() {
          oe.setFromEuler(te, !1);
        }), oe.onChange(function() {
          te.setFromQuaternion(oe, void 0, !1);
        }), Object.defineProperties(this, { position: { enumerable: !0, value: Z }, rotation: { enumerable: !0, value: te }, quaternion: { enumerable: !0, value: oe }, scale: { enumerable: !0, value: se }, modelViewMatrix: { value: new yn() }, normalMatrix: { value: new qi() } }), this.matrix = new yn(), this.matrixWorld = new yn(), this.matrixAutoUpdate = Cr.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new on(), this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {};
      }
      function Jn() {
        Cr.call(this), this.type = "Camera", this.matrixWorldInverse = new yn(), this.projectionMatrix = new yn();
      }
      function ai(Z, te, oe, se, Ae, ue) {
        Jn.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = Z, this.right = te, this.top = oe, this.bottom = se, this.near = Ae !== void 0 ? Ae : 0.1, this.far = ue !== void 0 ? ue : 2e3, this.updateProjectionMatrix();
      }
      function ti(Z, te, oe, se, Ae, ue) {
        this.a = Z, this.b = te, this.c = oe, this.normal = se && se.isVector3 ? se : new Bt(), this.vertexNormals = Array.isArray(se) ? se : [], this.color = Ae && Ae.isColor ? Ae : new ze(), this.vertexColors = Array.isArray(Ae) ? Ae : [], this.materialIndex = ue !== void 0 ? ue : 0;
      }
      Cr.DefaultUp = new Bt(0, 1, 0), Cr.DefaultMatrixAutoUpdate = !0, Cr.prototype = Object.assign(Object.create(ce.prototype), { constructor: Cr, isObject3D: !0, onBeforeRender: function() {
      }, onAfterRender: function() {
      }, applyMatrix: function(Z) {
        this.matrix.multiplyMatrices(Z, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale);
      }, applyQuaternion: function(Z) {
        return this.quaternion.premultiply(Z), this;
      }, setRotationFromAxisAngle: function(Z, te) {
        this.quaternion.setFromAxisAngle(Z, te);
      }, setRotationFromEuler: function(Z) {
        this.quaternion.setFromEuler(Z, !0);
      }, setRotationFromMatrix: function(Z) {
        this.quaternion.setFromRotationMatrix(Z);
      }, setRotationFromQuaternion: function(Z) {
        this.quaternion.copy(Z);
      }, rotateOnAxis: function() {
        var Z = new hi();
        return function(te, oe) {
          return Z.setFromAxisAngle(te, oe), this.quaternion.multiply(Z), this;
        };
      }(), rotateOnWorldAxis: function() {
        var Z = new hi();
        return function(te, oe) {
          return Z.setFromAxisAngle(te, oe), this.quaternion.premultiply(Z), this;
        };
      }(), rotateX: function() {
        var Z = new Bt(1, 0, 0);
        return function(te) {
          return this.rotateOnAxis(Z, te);
        };
      }(), rotateY: function() {
        var Z = new Bt(0, 1, 0);
        return function(te) {
          return this.rotateOnAxis(Z, te);
        };
      }(), rotateZ: function() {
        var Z = new Bt(0, 0, 1);
        return function(te) {
          return this.rotateOnAxis(Z, te);
        };
      }(), translateOnAxis: function() {
        var Z = new Bt();
        return function(te, oe) {
          return Z.copy(te).applyQuaternion(this.quaternion), this.position.add(Z.multiplyScalar(oe)), this;
        };
      }(), translateX: function() {
        var Z = new Bt(1, 0, 0);
        return function(te) {
          return this.translateOnAxis(Z, te);
        };
      }(), translateY: function() {
        var Z = new Bt(0, 1, 0);
        return function(te) {
          return this.translateOnAxis(Z, te);
        };
      }(), translateZ: function() {
        var Z = new Bt(0, 0, 1);
        return function(te) {
          return this.translateOnAxis(Z, te);
        };
      }(), localToWorld: function(Z) {
        return Z.applyMatrix4(this.matrixWorld);
      }, worldToLocal: function() {
        var Z = new yn();
        return function(te) {
          return te.applyMatrix4(Z.getInverse(this.matrixWorld));
        };
      }(), lookAt: function() {
        var Z = new yn(), te = new Bt();
        return function(oe, se, Ae) {
          oe.isVector3 ? te.copy(oe) : te.set(oe, se, Ae), this.isCamera ? Z.lookAt(this.position, te, this.up) : Z.lookAt(te, this.position, this.up), this.quaternion.setFromRotationMatrix(Z);
        };
      }(), add: function(Z) {
        if (arguments.length > 1) {
          for (var te = 0; te < arguments.length; te++)
            this.add(arguments[te]);
          return this;
        }
        return Z === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", Z), this) : (Z && Z.isObject3D ? (Z.parent !== null && Z.parent.remove(Z), Z.parent = this, Z.dispatchEvent({ type: "added" }), this.children.push(Z)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", Z), this);
      }, remove: function(Z) {
        if (arguments.length > 1) {
          for (var te = 0; te < arguments.length; te++)
            this.remove(arguments[te]);
          return this;
        }
        var oe = this.children.indexOf(Z);
        return oe !== -1 && (Z.parent = null, Z.dispatchEvent({ type: "removed" }), this.children.splice(oe, 1)), this;
      }, getObjectById: function(Z) {
        return this.getObjectByProperty("id", Z);
      }, getObjectByName: function(Z) {
        return this.getObjectByProperty("name", Z);
      }, getObjectByProperty: function(Z, te) {
        if (this[Z] === te)
          return this;
        for (var oe = 0, se = this.children.length; oe < se; oe++) {
          var Ae = this.children[oe].getObjectByProperty(Z, te);
          if (Ae !== void 0)
            return Ae;
        }
      }, getWorldPosition: function(Z) {
        return Z === void 0 && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), Z = new Bt()), this.updateMatrixWorld(!0), Z.setFromMatrixPosition(this.matrixWorld);
      }, getWorldQuaternion: function() {
        var Z = new Bt(), te = new Bt();
        return function(oe) {
          return oe === void 0 && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), oe = new hi()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Z, oe, te), oe;
        };
      }(), getWorldScale: function() {
        var Z = new Bt(), te = new hi();
        return function(oe) {
          return oe === void 0 && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), oe = new Bt()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Z, te, oe), oe;
        };
      }(), getWorldDirection: function() {
        var Z = new hi();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), te = new Bt()), this.getWorldQuaternion(Z), te.set(0, 0, 1).applyQuaternion(Z);
        };
      }(), raycast: function() {
      }, traverse: function(Z) {
        Z(this);
        for (var te = this.children, oe = 0, se = te.length; oe < se; oe++)
          te[oe].traverse(Z);
      }, traverseVisible: function(Z) {
        if (this.visible !== !1) {
          Z(this);
          for (var te = this.children, oe = 0, se = te.length; oe < se; oe++)
            te[oe].traverseVisible(Z);
        }
      }, traverseAncestors: function(Z) {
        var te = this.parent;
        te !== null && (Z(te), te.traverseAncestors(Z));
      }, updateMatrix: function() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
      }, updateMatrixWorld: function(Z) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || Z) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, Z = !0);
        for (var te = this.children, oe = 0, se = te.length; oe < se; oe++)
          te[oe].updateMatrixWorld(Z);
      }, toJSON: function(Z) {
        var te = Z === void 0 || typeof Z == "string", oe = {};
        te && (Z = { geometries: {}, materials: {}, textures: {}, images: {}, shapes: {} }, oe.metadata = { version: 4.5, type: "Object", generator: "Object3D.toJSON" });
        var se = {};
        function Ae(it, ft) {
          return it[ft.uuid] === void 0 && (it[ft.uuid] = ft.toJSON(Z)), ft.uuid;
        }
        if (se.uuid = this.uuid, se.type = this.type, this.name !== "" && (se.name = this.name), this.castShadow === !0 && (se.castShadow = !0), this.receiveShadow === !0 && (se.receiveShadow = !0), this.visible === !1 && (se.visible = !1), this.frustumCulled === !1 && (se.frustumCulled = !1), this.renderOrder !== 0 && (se.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (se.userData = this.userData), se.layers = this.layers.mask, se.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (se.matrixAutoUpdate = !1), this.isMesh || this.isLine || this.isPoints) {
          se.geometry = Ae(Z.geometries, this.geometry);
          var ue = this.geometry.parameters;
          if (ue !== void 0 && ue.shapes !== void 0) {
            var fe = ue.shapes;
            if (Array.isArray(fe))
              for (var pe = 0, ve = fe.length; pe < ve; pe++) {
                var xe = fe[pe];
                Ae(Z.shapes, xe);
              }
            else
              Ae(Z.shapes, fe);
          }
        }
        if (this.material !== void 0)
          if (Array.isArray(this.material)) {
            var Me = [];
            for (pe = 0, ve = this.material.length; pe < ve; pe++)
              Me.push(Ae(Z.materials, this.material[pe]));
            se.material = Me;
          } else
            se.material = Ae(Z.materials, this.material);
        if (this.children.length > 0)
          for (se.children = [], pe = 0; pe < this.children.length; pe++)
            se.children.push(this.children[pe].toJSON(Z).object);
        if (te) {
          var Ne = rt(Z.geometries), Qe = rt(Z.materials), Ue = rt(Z.textures), Je = rt(Z.images);
          fe = rt(Z.shapes), Ne.length > 0 && (oe.geometries = Ne), Qe.length > 0 && (oe.materials = Qe), Ue.length > 0 && (oe.textures = Ue), Je.length > 0 && (oe.images = Je), fe.length > 0 && (oe.shapes = fe);
        }
        return oe.object = se, oe;
        function rt(it) {
          var ft = [];
          for (var vt in it) {
            var ut = it[vt];
            delete ut.metadata, ft.push(ut);
          }
          return ft;
        }
      }, clone: function(Z) {
        return new this.constructor().copy(this, Z);
      }, copy: function(Z, te) {
        if (te === void 0 && (te = !0), this.name = Z.name, this.up.copy(Z.up), this.position.copy(Z.position), this.quaternion.copy(Z.quaternion), this.scale.copy(Z.scale), this.matrix.copy(Z.matrix), this.matrixWorld.copy(Z.matrixWorld), this.matrixAutoUpdate = Z.matrixAutoUpdate, this.matrixWorldNeedsUpdate = Z.matrixWorldNeedsUpdate, this.layers.mask = Z.layers.mask, this.visible = Z.visible, this.castShadow = Z.castShadow, this.receiveShadow = Z.receiveShadow, this.frustumCulled = Z.frustumCulled, this.renderOrder = Z.renderOrder, this.userData = JSON.parse(JSON.stringify(Z.userData)), te === !0)
          for (var oe = 0; oe < Z.children.length; oe++) {
            var se = Z.children[oe];
            this.add(se.clone());
          }
        return this;
      } }), Jn.prototype = Object.assign(Object.create(Cr.prototype), { constructor: Jn, isCamera: !0, copy: function(Z, te) {
        return Cr.prototype.copy.call(this, Z, te), this.matrixWorldInverse.copy(Z.matrixWorldInverse), this.projectionMatrix.copy(Z.projectionMatrix), this;
      }, getWorldDirection: function() {
        var Z = new hi();
        return function(te) {
          return te === void 0 && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), te = new Bt()), this.getWorldQuaternion(Z), te.set(0, 0, -1).applyQuaternion(Z);
        };
      }(), updateMatrixWorld: function(Z) {
        Cr.prototype.updateMatrixWorld.call(this, Z), this.matrixWorldInverse.getInverse(this.matrixWorld);
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), ai.prototype = Object.assign(Object.create(Jn.prototype), { constructor: ai, isOrthographicCamera: !0, copy: function(Z, te) {
        return Jn.prototype.copy.call(this, Z, te), this.left = Z.left, this.right = Z.right, this.top = Z.top, this.bottom = Z.bottom, this.near = Z.near, this.far = Z.far, this.zoom = Z.zoom, this.view = Z.view === null ? null : Object.assign({}, Z.view), this;
      }, setViewOffset: function(Z, te, oe, se, Ae, ue) {
        this.view === null && (this.view = { enabled: !0, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = !0, this.view.fullWidth = Z, this.view.fullHeight = te, this.view.offsetX = oe, this.view.offsetY = se, this.view.width = Ae, this.view.height = ue, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var Z = (this.right - this.left) / (2 * this.zoom), te = (this.top - this.bottom) / (2 * this.zoom), oe = (this.right + this.left) / 2, se = (this.top + this.bottom) / 2, Ae = oe - Z, ue = oe + Z, fe = se + te, pe = se - te;
        if (this.view !== null && this.view.enabled) {
          var ve = this.zoom / (this.view.width / this.view.fullWidth), xe = this.zoom / (this.view.height / this.view.fullHeight), Me = (this.right - this.left) / this.view.width, Ne = (this.top - this.bottom) / this.view.height;
          ue = (Ae += Me * (this.view.offsetX / ve)) + Me * (this.view.width / ve), pe = (fe -= Ne * (this.view.offsetY / xe)) - Ne * (this.view.height / xe);
        }
        this.projectionMatrix.makeOrthographic(Ae, ue, fe, pe, this.near, this.far);
      }, toJSON: function(Z) {
        var te = Cr.prototype.toJSON.call(this, Z);
        return te.object.zoom = this.zoom, te.object.left = this.left, te.object.right = this.right, te.object.top = this.top, te.object.bottom = this.bottom, te.object.near = this.near, te.object.far = this.far, this.view !== null && (te.object.view = Object.assign({}, this.view)), te;
      } }), Object.assign(ti.prototype, { clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        this.a = Z.a, this.b = Z.b, this.c = Z.c, this.normal.copy(Z.normal), this.color.copy(Z.color), this.materialIndex = Z.materialIndex;
        for (var te = 0, oe = Z.vertexNormals.length; te < oe; te++)
          this.vertexNormals[te] = Z.vertexNormals[te].clone();
        for (te = 0, oe = Z.vertexColors.length; te < oe; te++)
          this.vertexColors[te] = Z.vertexColors[te].clone();
        return this;
      } });
      var pi = 0;
      function Xr() {
        Object.defineProperty(this, "id", { value: pi += 2 }), this.uuid = Mn.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = !1, this.verticesNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1;
      }
      function dn(Z, te, oe) {
        if (Array.isArray(Z))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = Z, this.itemSize = te, this.count = Z !== void 0 ? Z.length / te : 0, this.normalized = oe === !0, this.dynamic = !1, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function Yo(Z, te, oe) {
        dn.call(this, new Int8Array(Z), te, oe);
      }
      function oa(Z, te, oe) {
        dn.call(this, new Uint8Array(Z), te, oe);
      }
      function ha(Z, te, oe) {
        dn.call(this, new Uint8ClampedArray(Z), te, oe);
      }
      function Ia(Z, te, oe) {
        dn.call(this, new Int16Array(Z), te, oe);
      }
      function Vo(Z, te, oe) {
        dn.call(this, new Uint16Array(Z), te, oe);
      }
      function xa(Z, te, oe) {
        dn.call(this, new Int32Array(Z), te, oe);
      }
      function Lo(Z, te, oe) {
        dn.call(this, new Uint32Array(Z), te, oe);
      }
      function Yr(Z, te, oe) {
        dn.call(this, new Float32Array(Z), te, oe);
      }
      function Gs(Z, te, oe) {
        dn.call(this, new Float64Array(Z), te, oe);
      }
      function DA() {
        this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1;
      }
      function qA(Z) {
        if (Z.length === 0)
          return -1 / 0;
        for (var te = Z[0], oe = 1, se = Z.length; oe < se; ++oe)
          Z[oe] > te && (te = Z[oe]);
        return te;
      }
      Xr.prototype = Object.assign(Object.create(ce.prototype), { constructor: Xr, isGeometry: !0, applyMatrix: function(Z) {
        for (var te = new qi().getNormalMatrix(Z), oe = 0, se = this.vertices.length; oe < se; oe++)
          this.vertices[oe].applyMatrix4(Z);
        for (oe = 0, se = this.faces.length; oe < se; oe++) {
          var Ae = this.faces[oe];
          Ae.normal.applyMatrix3(te).normalize();
          for (var ue = 0, fe = Ae.vertexNormals.length; ue < fe; ue++)
            Ae.vertexNormals[ue].applyMatrix3(te).normalize();
        }
        return this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this;
      }, rotateX: function() {
        var Z = new yn();
        return function(te) {
          return Z.makeRotationX(te), this.applyMatrix(Z), this;
        };
      }(), rotateY: function() {
        var Z = new yn();
        return function(te) {
          return Z.makeRotationY(te), this.applyMatrix(Z), this;
        };
      }(), rotateZ: function() {
        var Z = new yn();
        return function(te) {
          return Z.makeRotationZ(te), this.applyMatrix(Z), this;
        };
      }(), translate: function() {
        var Z = new yn();
        return function(te, oe, se) {
          return Z.makeTranslation(te, oe, se), this.applyMatrix(Z), this;
        };
      }(), scale: function() {
        var Z = new yn();
        return function(te, oe, se) {
          return Z.makeScale(te, oe, se), this.applyMatrix(Z), this;
        };
      }(), lookAt: function() {
        var Z = new Cr();
        return function(te) {
          Z.lookAt(te), Z.updateMatrix(), this.applyMatrix(Z.matrix);
        };
      }(), fromBufferGeometry: function(Z) {
        var te = this, oe = Z.index !== null ? Z.index.array : void 0, se = Z.attributes, Ae = se.position.array, ue = se.normal !== void 0 ? se.normal.array : void 0, fe = se.color !== void 0 ? se.color.array : void 0, pe = se.uv !== void 0 ? se.uv.array : void 0, ve = se.uv2 !== void 0 ? se.uv2.array : void 0;
        ve !== void 0 && (this.faceVertexUvs[1] = []);
        for (var xe = [], Me = [], Ne = [], Qe = 0, Ue = 0; Qe < Ae.length; Qe += 3, Ue += 2)
          te.vertices.push(new Bt(Ae[Qe], Ae[Qe + 1], Ae[Qe + 2])), ue !== void 0 && xe.push(new Bt(ue[Qe], ue[Qe + 1], ue[Qe + 2])), fe !== void 0 && te.colors.push(new ze(fe[Qe], fe[Qe + 1], fe[Qe + 2])), pe !== void 0 && Me.push(new Qr(pe[Ue], pe[Ue + 1])), ve !== void 0 && Ne.push(new Qr(ve[Ue], ve[Ue + 1]));
        function Je(ut, Gt, Ht, pt) {
          var Tt = new ti(ut, Gt, Ht, ue !== void 0 ? [xe[ut].clone(), xe[Gt].clone(), xe[Ht].clone()] : [], fe !== void 0 ? [te.colors[ut].clone(), te.colors[Gt].clone(), te.colors[Ht].clone()] : [], pt);
          te.faces.push(Tt), pe !== void 0 && te.faceVertexUvs[0].push([Me[ut].clone(), Me[Gt].clone(), Me[Ht].clone()]), ve !== void 0 && te.faceVertexUvs[1].push([Ne[ut].clone(), Ne[Gt].clone(), Ne[Ht].clone()]);
        }
        var rt = Z.groups;
        if (rt.length > 0)
          for (Qe = 0; Qe < rt.length; Qe++)
            for (var it = rt[Qe], ft = it.start, vt = (Ue = ft, ft + it.count); Ue < vt; Ue += 3)
              oe !== void 0 ? Je(oe[Ue], oe[Ue + 1], oe[Ue + 2], it.materialIndex) : Je(Ue, Ue + 1, Ue + 2, it.materialIndex);
        else if (oe !== void 0)
          for (Qe = 0; Qe < oe.length; Qe += 3)
            Je(oe[Qe], oe[Qe + 1], oe[Qe + 2]);
        else
          for (Qe = 0; Qe < Ae.length / 3; Qe += 3)
            Je(Qe, Qe + 1, Qe + 2);
        return this.computeFaceNormals(), Z.boundingBox !== null && (this.boundingBox = Z.boundingBox.clone()), Z.boundingSphere !== null && (this.boundingSphere = Z.boundingSphere.clone()), this;
      }, center: function() {
        var Z = new Bt();
        return function() {
          return this.computeBoundingBox(), this.boundingBox.getCenter(Z).negate(), this.translate(Z.x, Z.y, Z.z), this;
        };
      }(), normalize: function() {
        this.computeBoundingSphere();
        var Z = this.boundingSphere.center, te = this.boundingSphere.radius, oe = te === 0 ? 1 : 1 / te, se = new yn();
        return se.set(oe, 0, 0, -oe * Z.x, 0, oe, 0, -oe * Z.y, 0, 0, oe, -oe * Z.z, 0, 0, 0, 1), this.applyMatrix(se), this;
      }, computeFaceNormals: function() {
        for (var Z = new Bt(), te = new Bt(), oe = 0, se = this.faces.length; oe < se; oe++) {
          var Ae = this.faces[oe], ue = this.vertices[Ae.a], fe = this.vertices[Ae.b], pe = this.vertices[Ae.c];
          Z.subVectors(pe, fe), te.subVectors(ue, fe), Z.cross(te), Z.normalize(), Ae.normal.copy(Z);
        }
      }, computeVertexNormals: function(Z) {
        var te, oe, se, Ae, ue, fe;
        for (Z === void 0 && (Z = !0), fe = new Array(this.vertices.length), te = 0, oe = this.vertices.length; te < oe; te++)
          fe[te] = new Bt();
        if (Z) {
          var pe, ve, xe, Me = new Bt(), Ne = new Bt();
          for (se = 0, Ae = this.faces.length; se < Ae; se++)
            ue = this.faces[se], pe = this.vertices[ue.a], ve = this.vertices[ue.b], xe = this.vertices[ue.c], Me.subVectors(xe, ve), Ne.subVectors(pe, ve), Me.cross(Ne), fe[ue.a].add(Me), fe[ue.b].add(Me), fe[ue.c].add(Me);
        } else
          for (this.computeFaceNormals(), se = 0, Ae = this.faces.length; se < Ae; se++)
            fe[(ue = this.faces[se]).a].add(ue.normal), fe[ue.b].add(ue.normal), fe[ue.c].add(ue.normal);
        for (te = 0, oe = this.vertices.length; te < oe; te++)
          fe[te].normalize();
        for (se = 0, Ae = this.faces.length; se < Ae; se++) {
          var Qe = (ue = this.faces[se]).vertexNormals;
          Qe.length === 3 ? (Qe[0].copy(fe[ue.a]), Qe[1].copy(fe[ue.b]), Qe[2].copy(fe[ue.c])) : (Qe[0] = fe[ue.a].clone(), Qe[1] = fe[ue.b].clone(), Qe[2] = fe[ue.c].clone());
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      }, computeFlatVertexNormals: function() {
        var Z, te, oe;
        for (this.computeFaceNormals(), Z = 0, te = this.faces.length; Z < te; Z++) {
          var se = (oe = this.faces[Z]).vertexNormals;
          se.length === 3 ? (se[0].copy(oe.normal), se[1].copy(oe.normal), se[2].copy(oe.normal)) : (se[0] = oe.normal.clone(), se[1] = oe.normal.clone(), se[2] = oe.normal.clone());
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      }, computeMorphNormals: function() {
        var Z, te, oe, se, Ae;
        for (oe = 0, se = this.faces.length; oe < se; oe++)
          for ((Ae = this.faces[oe]).__originalFaceNormal ? Ae.__originalFaceNormal.copy(Ae.normal) : Ae.__originalFaceNormal = Ae.normal.clone(), Ae.__originalVertexNormals || (Ae.__originalVertexNormals = []), Z = 0, te = Ae.vertexNormals.length; Z < te; Z++)
            Ae.__originalVertexNormals[Z] ? Ae.__originalVertexNormals[Z].copy(Ae.vertexNormals[Z]) : Ae.__originalVertexNormals[Z] = Ae.vertexNormals[Z].clone();
        var ue = new Xr();
        for (ue.faces = this.faces, Z = 0, te = this.morphTargets.length; Z < te; Z++) {
          if (!this.morphNormals[Z]) {
            this.morphNormals[Z] = {}, this.morphNormals[Z].faceNormals = [], this.morphNormals[Z].vertexNormals = [];
            var fe = this.morphNormals[Z].faceNormals, pe = this.morphNormals[Z].vertexNormals;
            for (oe = 0, se = this.faces.length; oe < se; oe++)
              ve = new Bt(), xe = { a: new Bt(), b: new Bt(), c: new Bt() }, fe.push(ve), pe.push(xe);
          }
          var ve, xe, Me = this.morphNormals[Z];
          for (ue.vertices = this.morphTargets[Z].vertices, ue.computeFaceNormals(), ue.computeVertexNormals(), oe = 0, se = this.faces.length; oe < se; oe++)
            Ae = this.faces[oe], ve = Me.faceNormals[oe], xe = Me.vertexNormals[oe], ve.copy(Ae.normal), xe.a.copy(Ae.vertexNormals[0]), xe.b.copy(Ae.vertexNormals[1]), xe.c.copy(Ae.vertexNormals[2]);
        }
        for (oe = 0, se = this.faces.length; oe < se; oe++)
          (Ae = this.faces[oe]).normal = Ae.__originalFaceNormal, Ae.vertexNormals = Ae.__originalVertexNormals;
      }, computeBoundingBox: function() {
        this.boundingBox === null && (this.boundingBox = new yo()), this.boundingBox.setFromPoints(this.vertices);
      }, computeBoundingSphere: function() {
        this.boundingSphere === null && (this.boundingSphere = new ao()), this.boundingSphere.setFromPoints(this.vertices);
      }, merge: function(Z, te, oe) {
        if (Z && Z.isGeometry) {
          var se, Ae = this.vertices.length, ue = this.vertices, fe = Z.vertices, pe = this.faces, ve = Z.faces, xe = this.faceVertexUvs[0], Me = Z.faceVertexUvs[0], Ne = this.colors, Qe = Z.colors;
          oe === void 0 && (oe = 0), te !== void 0 && (se = new qi().getNormalMatrix(te));
          for (var Ue = 0, Je = fe.length; Ue < Je; Ue++) {
            var rt = fe[Ue].clone();
            te !== void 0 && rt.applyMatrix4(te), ue.push(rt);
          }
          for (Ue = 0, Je = Qe.length; Ue < Je; Ue++)
            Ne.push(Qe[Ue].clone());
          for (Ue = 0, Je = ve.length; Ue < Je; Ue++) {
            var it, ft, vt, ut = ve[Ue], Gt = ut.vertexNormals, Ht = ut.vertexColors;
            (it = new ti(ut.a + Ae, ut.b + Ae, ut.c + Ae)).normal.copy(ut.normal), se !== void 0 && it.normal.applyMatrix3(se).normalize();
            for (var pt = 0, Tt = Gt.length; pt < Tt; pt++)
              ft = Gt[pt].clone(), se !== void 0 && ft.applyMatrix3(se).normalize(), it.vertexNormals.push(ft);
            for (it.color.copy(ut.color), pt = 0, Tt = Ht.length; pt < Tt; pt++)
              vt = Ht[pt], it.vertexColors.push(vt.clone());
            it.materialIndex = ut.materialIndex + oe, pe.push(it);
          }
          for (Ue = 0, Je = Me.length; Ue < Je; Ue++) {
            var zt = Me[Ue], Dt = [];
            if (zt !== void 0) {
              for (pt = 0, Tt = zt.length; pt < Tt; pt++)
                Dt.push(zt[pt].clone());
              xe.push(Dt);
            }
          }
        } else
          console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", Z);
      }, mergeMesh: function(Z) {
        Z && Z.isMesh ? (Z.matrixAutoUpdate && Z.updateMatrix(), this.merge(Z.geometry, Z.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", Z);
      }, mergeVertices: function() {
        var Z, te, oe, se, Ae, ue, fe, pe, ve = {}, xe = [], Me = [], Ne = Math.pow(10, 4);
        for (oe = 0, se = this.vertices.length; oe < se; oe++)
          Z = this.vertices[oe], ve[te = Math.round(Z.x * Ne) + "_" + Math.round(Z.y * Ne) + "_" + Math.round(Z.z * Ne)] === void 0 ? (ve[te] = oe, xe.push(this.vertices[oe]), Me[oe] = xe.length - 1) : Me[oe] = Me[ve[te]];
        var Qe = [];
        for (oe = 0, se = this.faces.length; oe < se; oe++) {
          (Ae = this.faces[oe]).a = Me[Ae.a], Ae.b = Me[Ae.b], Ae.c = Me[Ae.c], ue = [Ae.a, Ae.b, Ae.c];
          for (var Ue = 0; Ue < 3; Ue++)
            if (ue[Ue] === ue[(Ue + 1) % 3]) {
              Qe.push(oe);
              break;
            }
        }
        for (oe = Qe.length - 1; oe >= 0; oe--) {
          var Je = Qe[oe];
          for (this.faces.splice(Je, 1), fe = 0, pe = this.faceVertexUvs.length; fe < pe; fe++)
            this.faceVertexUvs[fe].splice(Je, 1);
        }
        var rt = this.vertices.length - xe.length;
        return this.vertices = xe, rt;
      }, setFromPoints: function(Z) {
        this.vertices = [];
        for (var te = 0, oe = Z.length; te < oe; te++) {
          var se = Z[te];
          this.vertices.push(new Bt(se.x, se.y, se.z || 0));
        }
        return this;
      }, sortFacesByMaterialIndex: function() {
        for (var Z = this.faces, te = Z.length, oe = 0; oe < te; oe++)
          Z[oe]._id = oe;
        Z.sort(function(ve, xe) {
          return ve.materialIndex - xe.materialIndex;
        });
        var se, Ae, ue = this.faceVertexUvs[0], fe = this.faceVertexUvs[1];
        for (ue && ue.length === te && (se = []), fe && fe.length === te && (Ae = []), oe = 0; oe < te; oe++) {
          var pe = Z[oe]._id;
          se && se.push(ue[pe]), Ae && Ae.push(fe[pe]);
        }
        se && (this.faceVertexUvs[0] = se), Ae && (this.faceVertexUvs[1] = Ae);
      }, toJSON: function() {
        var Z = { metadata: { version: 4.5, type: "Geometry", generator: "Geometry.toJSON" } };
        if (Z.uuid = this.uuid, Z.type = this.type, this.name !== "" && (Z.name = this.name), this.parameters !== void 0) {
          var te = this.parameters;
          for (var oe in te)
            te[oe] !== void 0 && (Z[oe] = te[oe]);
          return Z;
        }
        for (var se = [], Ae = 0; Ae < this.vertices.length; Ae++) {
          var ue = this.vertices[Ae];
          se.push(ue.x, ue.y, ue.z);
        }
        var fe = [], pe = [], ve = {}, xe = [], Me = {}, Ne = [], Qe = {};
        for (Ae = 0; Ae < this.faces.length; Ae++) {
          var Ue = this.faces[Ae], Je = this.faceVertexUvs[0][Ae] !== void 0, rt = Ue.normal.length() > 0, it = Ue.vertexNormals.length > 0, ft = Ue.color.r !== 1 || Ue.color.g !== 1 || Ue.color.b !== 1, vt = Ue.vertexColors.length > 0, ut = 0;
          if (ut = Tt(ut = Tt(ut = Tt(ut = Tt(ut = Tt(ut = Tt(ut = Tt(ut = Tt(ut, 0, 0), 1, !0), 2, !1), 3, Je), 4, rt), 5, it), 6, ft), 7, vt), fe.push(ut), fe.push(Ue.a, Ue.b, Ue.c), fe.push(Ue.materialIndex), Je) {
            var Gt = this.faceVertexUvs[0][Ae];
            fe.push(or(Gt[0]), or(Gt[1]), or(Gt[2]));
          }
          if (rt && fe.push(zt(Ue.normal)), it) {
            var Ht = Ue.vertexNormals;
            fe.push(zt(Ht[0]), zt(Ht[1]), zt(Ht[2]));
          }
          if (ft && fe.push(Dt(Ue.color)), vt) {
            var pt = Ue.vertexColors;
            fe.push(Dt(pt[0]), Dt(pt[1]), Dt(pt[2]));
          }
        }
        function Tt(Lt, lr, gr) {
          return gr ? Lt | 1 << lr : Lt & ~(1 << lr);
        }
        function zt(Lt) {
          var lr = Lt.x.toString() + Lt.y.toString() + Lt.z.toString();
          return ve[lr] !== void 0 || (ve[lr] = pe.length / 3, pe.push(Lt.x, Lt.y, Lt.z)), ve[lr];
        }
        function Dt(Lt) {
          var lr = Lt.r.toString() + Lt.g.toString() + Lt.b.toString();
          return Me[lr] !== void 0 || (Me[lr] = xe.length, xe.push(Lt.getHex())), Me[lr];
        }
        function or(Lt) {
          var lr = Lt.x.toString() + Lt.y.toString();
          return Qe[lr] !== void 0 || (Qe[lr] = Ne.length / 2, Ne.push(Lt.x, Lt.y)), Qe[lr];
        }
        return Z.data = {}, Z.data.vertices = se, Z.data.normals = pe, xe.length > 0 && (Z.data.colors = xe), Ne.length > 0 && (Z.data.uvs = [Ne]), Z.data.faces = fe, Z;
      }, clone: function() {
        return new Xr().copy(this);
      }, copy: function(Z) {
        var te, oe, se, Ae, ue, fe;
        this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = Z.name;
        var pe = Z.vertices;
        for (te = 0, oe = pe.length; te < oe; te++)
          this.vertices.push(pe[te].clone());
        var ve = Z.colors;
        for (te = 0, oe = ve.length; te < oe; te++)
          this.colors.push(ve[te].clone());
        var xe = Z.faces;
        for (te = 0, oe = xe.length; te < oe; te++)
          this.faces.push(xe[te].clone());
        for (te = 0, oe = Z.faceVertexUvs.length; te < oe; te++) {
          var Me = Z.faceVertexUvs[te];
          for (this.faceVertexUvs[te] === void 0 && (this.faceVertexUvs[te] = []), se = 0, Ae = Me.length; se < Ae; se++) {
            var Ne = Me[se], Qe = [];
            for (ue = 0, fe = Ne.length; ue < fe; ue++) {
              var Ue = Ne[ue];
              Qe.push(Ue.clone());
            }
            this.faceVertexUvs[te].push(Qe);
          }
        }
        var Je = Z.morphTargets;
        for (te = 0, oe = Je.length; te < oe; te++) {
          var rt = {};
          if (rt.name = Je[te].name, Je[te].vertices !== void 0)
            for (rt.vertices = [], se = 0, Ae = Je[te].vertices.length; se < Ae; se++)
              rt.vertices.push(Je[te].vertices[se].clone());
          if (Je[te].normals !== void 0)
            for (rt.normals = [], se = 0, Ae = Je[te].normals.length; se < Ae; se++)
              rt.normals.push(Je[te].normals[se].clone());
          this.morphTargets.push(rt);
        }
        var it = Z.morphNormals;
        for (te = 0, oe = it.length; te < oe; te++) {
          var ft = {};
          if (it[te].vertexNormals !== void 0)
            for (ft.vertexNormals = [], se = 0, Ae = it[te].vertexNormals.length; se < Ae; se++) {
              var vt = it[te].vertexNormals[se], ut = {};
              ut.a = vt.a.clone(), ut.b = vt.b.clone(), ut.c = vt.c.clone(), ft.vertexNormals.push(ut);
            }
          if (it[te].faceNormals !== void 0)
            for (ft.faceNormals = [], se = 0, Ae = it[te].faceNormals.length; se < Ae; se++)
              ft.faceNormals.push(it[te].faceNormals[se].clone());
          this.morphNormals.push(ft);
        }
        var Gt = Z.skinWeights;
        for (te = 0, oe = Gt.length; te < oe; te++)
          this.skinWeights.push(Gt[te].clone());
        var Ht = Z.skinIndices;
        for (te = 0, oe = Ht.length; te < oe; te++)
          this.skinIndices.push(Ht[te].clone());
        var pt = Z.lineDistances;
        for (te = 0, oe = pt.length; te < oe; te++)
          this.lineDistances.push(pt[te]);
        var Tt = Z.boundingBox;
        Tt !== null && (this.boundingBox = Tt.clone());
        var zt = Z.boundingSphere;
        return zt !== null && (this.boundingSphere = zt.clone()), this.elementsNeedUpdate = Z.elementsNeedUpdate, this.verticesNeedUpdate = Z.verticesNeedUpdate, this.uvsNeedUpdate = Z.uvsNeedUpdate, this.normalsNeedUpdate = Z.normalsNeedUpdate, this.colorsNeedUpdate = Z.colorsNeedUpdate, this.lineDistancesNeedUpdate = Z.lineDistancesNeedUpdate, this.groupsNeedUpdate = Z.groupsNeedUpdate, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Object.defineProperty(dn.prototype, "needsUpdate", { set: function(Z) {
        Z === !0 && this.version++;
      } }), Object.assign(dn.prototype, { isBufferAttribute: !0, onUploadCallback: function() {
      }, setArray: function(Z) {
        if (Array.isArray(Z))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        return this.count = Z !== void 0 ? Z.length / this.itemSize : 0, this.array = Z, this;
      }, setDynamic: function(Z) {
        return this.dynamic = Z, this;
      }, copy: function(Z) {
        return this.name = Z.name, this.array = new Z.array.constructor(Z.array), this.itemSize = Z.itemSize, this.count = Z.count, this.normalized = Z.normalized, this.dynamic = Z.dynamic, this;
      }, copyAt: function(Z, te, oe) {
        Z *= this.itemSize, oe *= te.itemSize;
        for (var se = 0, Ae = this.itemSize; se < Ae; se++)
          this.array[Z + se] = te.array[oe + se];
        return this;
      }, copyArray: function(Z) {
        return this.array.set(Z), this;
      }, copyColorsArray: function(Z) {
        for (var te = this.array, oe = 0, se = 0, Ae = Z.length; se < Ae; se++) {
          var ue = Z[se];
          ue === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", se), ue = new ze()), te[oe++] = ue.r, te[oe++] = ue.g, te[oe++] = ue.b;
        }
        return this;
      }, copyVector2sArray: function(Z) {
        for (var te = this.array, oe = 0, se = 0, Ae = Z.length; se < Ae; se++) {
          var ue = Z[se];
          ue === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", se), ue = new Qr()), te[oe++] = ue.x, te[oe++] = ue.y;
        }
        return this;
      }, copyVector3sArray: function(Z) {
        for (var te = this.array, oe = 0, se = 0, Ae = Z.length; se < Ae; se++) {
          var ue = Z[se];
          ue === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", se), ue = new Bt()), te[oe++] = ue.x, te[oe++] = ue.y, te[oe++] = ue.z;
        }
        return this;
      }, copyVector4sArray: function(Z) {
        for (var te = this.array, oe = 0, se = 0, Ae = Z.length; se < Ae; se++) {
          var ue = Z[se];
          ue === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", se), ue = new Kn()), te[oe++] = ue.x, te[oe++] = ue.y, te[oe++] = ue.z, te[oe++] = ue.w;
        }
        return this;
      }, set: function(Z, te) {
        return te === void 0 && (te = 0), this.array.set(Z, te), this;
      }, getX: function(Z) {
        return this.array[Z * this.itemSize];
      }, setX: function(Z, te) {
        return this.array[Z * this.itemSize] = te, this;
      }, getY: function(Z) {
        return this.array[Z * this.itemSize + 1];
      }, setY: function(Z, te) {
        return this.array[Z * this.itemSize + 1] = te, this;
      }, getZ: function(Z) {
        return this.array[Z * this.itemSize + 2];
      }, setZ: function(Z, te) {
        return this.array[Z * this.itemSize + 2] = te, this;
      }, getW: function(Z) {
        return this.array[Z * this.itemSize + 3];
      }, setW: function(Z, te) {
        return this.array[Z * this.itemSize + 3] = te, this;
      }, setXY: function(Z, te, oe) {
        return Z *= this.itemSize, this.array[Z + 0] = te, this.array[Z + 1] = oe, this;
      }, setXYZ: function(Z, te, oe, se) {
        return Z *= this.itemSize, this.array[Z + 0] = te, this.array[Z + 1] = oe, this.array[Z + 2] = se, this;
      }, setXYZW: function(Z, te, oe, se, Ae) {
        return Z *= this.itemSize, this.array[Z + 0] = te, this.array[Z + 1] = oe, this.array[Z + 2] = se, this.array[Z + 3] = Ae, this;
      }, onUpload: function(Z) {
        return this.onUploadCallback = Z, this;
      }, clone: function() {
        return new this.constructor(this.array, this.itemSize).copy(this);
      } }), Yo.prototype = Object.create(dn.prototype), Yo.prototype.constructor = Yo, oa.prototype = Object.create(dn.prototype), oa.prototype.constructor = oa, ha.prototype = Object.create(dn.prototype), ha.prototype.constructor = ha, Ia.prototype = Object.create(dn.prototype), Ia.prototype.constructor = Ia, Vo.prototype = Object.create(dn.prototype), Vo.prototype.constructor = Vo, xa.prototype = Object.create(dn.prototype), xa.prototype.constructor = xa, Lo.prototype = Object.create(dn.prototype), Lo.prototype.constructor = Lo, Yr.prototype = Object.create(dn.prototype), Yr.prototype.constructor = Yr, Gs.prototype = Object.create(dn.prototype), Gs.prototype.constructor = Gs, Object.assign(DA.prototype, { computeGroups: function(Z) {
        for (var te, oe = [], se = void 0, Ae = Z.faces, ue = 0; ue < Ae.length; ue++) {
          var fe = Ae[ue];
          fe.materialIndex !== se && (se = fe.materialIndex, te !== void 0 && (te.count = 3 * ue - te.start, oe.push(te)), te = { start: 3 * ue, materialIndex: se });
        }
        te !== void 0 && (te.count = 3 * ue - te.start, oe.push(te)), this.groups = oe;
      }, fromGeometry: function(Z) {
        var te, oe = Z.faces, se = Z.vertices, Ae = Z.faceVertexUvs, ue = Ae[0] && Ae[0].length > 0, fe = Ae[1] && Ae[1].length > 0, pe = Z.morphTargets, ve = pe.length;
        if (ve > 0) {
          te = [];
          for (var xe = 0; xe < ve; xe++)
            te[xe] = [];
          this.morphTargets.position = te;
        }
        var Me, Ne = Z.morphNormals, Qe = Ne.length;
        if (Qe > 0) {
          for (Me = [], xe = 0; xe < Qe; xe++)
            Me[xe] = [];
          this.morphTargets.normal = Me;
        }
        var Ue = Z.skinIndices, Je = Z.skinWeights, rt = Ue.length === se.length, it = Je.length === se.length;
        for (se.length > 0 && oe.length === 0 && console.error("THREE.DirectGeometry: Faceless geometries are not supported."), xe = 0; xe < oe.length; xe++) {
          var ft = oe[xe];
          this.vertices.push(se[ft.a], se[ft.b], se[ft.c]);
          var vt = ft.vertexNormals;
          if (vt.length === 3)
            this.normals.push(vt[0], vt[1], vt[2]);
          else {
            var ut = ft.normal;
            this.normals.push(ut, ut, ut);
          }
          var Gt, Ht = ft.vertexColors;
          if (Ht.length === 3)
            this.colors.push(Ht[0], Ht[1], Ht[2]);
          else {
            var pt = ft.color;
            this.colors.push(pt, pt, pt);
          }
          ue === !0 && ((Gt = Ae[0][xe]) !== void 0 ? this.uvs.push(Gt[0], Gt[1], Gt[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", xe), this.uvs.push(new Qr(), new Qr(), new Qr()))), fe === !0 && ((Gt = Ae[1][xe]) !== void 0 ? this.uvs2.push(Gt[0], Gt[1], Gt[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", xe), this.uvs2.push(new Qr(), new Qr(), new Qr())));
          for (var Tt = 0; Tt < ve; Tt++) {
            var zt = pe[Tt].vertices;
            te[Tt].push(zt[ft.a], zt[ft.b], zt[ft.c]);
          }
          for (Tt = 0; Tt < Qe; Tt++) {
            var Dt = Ne[Tt].vertexNormals[xe];
            Me[Tt].push(Dt.a, Dt.b, Dt.c);
          }
          rt && this.skinIndices.push(Ue[ft.a], Ue[ft.b], Ue[ft.c]), it && this.skinWeights.push(Je[ft.a], Je[ft.b], Je[ft.c]);
        }
        return this.computeGroups(Z), this.verticesNeedUpdate = Z.verticesNeedUpdate, this.normalsNeedUpdate = Z.normalsNeedUpdate, this.colorsNeedUpdate = Z.colorsNeedUpdate, this.uvsNeedUpdate = Z.uvsNeedUpdate, this.groupsNeedUpdate = Z.groupsNeedUpdate, this;
      } });
      var ju = 1;
      function an() {
        Object.defineProperty(this, "id", { value: ju += 2 }), this.uuid = Mn.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = { start: 0, count: 1 / 0 }, this.userData = {};
      }
      function Xa(Z, te, oe, se, Ae, ue) {
        Xr.call(this), this.type = "BoxGeometry", this.parameters = { width: Z, height: te, depth: oe, widthSegments: se, heightSegments: Ae, depthSegments: ue }, this.fromBufferGeometry(new ba(Z, te, oe, se, Ae, ue)), this.mergeVertices();
      }
      function ba(Z, te, oe, se, Ae, ue) {
        an.call(this), this.type = "BoxBufferGeometry", this.parameters = { width: Z, height: te, depth: oe, widthSegments: se, heightSegments: Ae, depthSegments: ue };
        var fe = this;
        Z = Z || 1, te = te || 1, oe = oe || 1, se = Math.floor(se) || 1, Ae = Math.floor(Ae) || 1;
        var pe = [], ve = [], xe = [], Me = [], Ne = 0, Qe = 0;
        function Ue(Je, rt, it, ft, vt, ut, Gt, Ht, pt, Tt, zt) {
          var Dt, or, Lt = ut / pt, lr = Gt / Tt, gr = ut / 2, xr = Gt / 2, vr = Ht / 2, Dr = pt + 1, Or = Tt + 1, yr = 0, Nr = 0, pr = new Bt();
          for (or = 0; or < Or; or++) {
            var tn = or * lr - xr;
            for (Dt = 0; Dt < Dr; Dt++) {
              var Ur = Dt * Lt - gr;
              pr[Je] = Ur * ft, pr[rt] = tn * vt, pr[it] = vr, ve.push(pr.x, pr.y, pr.z), pr[Je] = 0, pr[rt] = 0, pr[it] = Ht > 0 ? 1 : -1, xe.push(pr.x, pr.y, pr.z), Me.push(Dt / pt), Me.push(1 - or / Tt), yr += 1;
            }
          }
          for (or = 0; or < Tt; or++)
            for (Dt = 0; Dt < pt; Dt++) {
              var mn = Ne + Dt + Dr * or, Qn = Ne + Dt + Dr * (or + 1), mi = Ne + (Dt + 1) + Dr * (or + 1), Fi = Ne + (Dt + 1) + Dr * or;
              pe.push(mn, Qn, Fi), pe.push(Qn, mi, Fi), Nr += 6;
            }
          fe.addGroup(Qe, Nr, zt), Qe += Nr, Ne += yr;
        }
        Ue("z", "y", "x", -1, -1, oe, te, Z, ue = Math.floor(ue) || 1, Ae, 0), Ue("z", "y", "x", 1, -1, oe, te, -Z, ue, Ae, 1), Ue("x", "z", "y", 1, 1, Z, oe, te, se, ue, 2), Ue("x", "z", "y", 1, -1, Z, oe, -te, se, ue, 3), Ue("x", "y", "z", 1, -1, Z, te, oe, se, Ae, 4), Ue("x", "y", "z", -1, -1, Z, te, -oe, se, Ae, 5), this.setIndex(pe), this.addAttribute("position", new Yr(ve, 3)), this.addAttribute("normal", new Yr(xe, 3)), this.addAttribute("uv", new Yr(Me, 2));
      }
      function Os(Z, te, oe, se) {
        Xr.call(this), this.type = "PlaneGeometry", this.parameters = { width: Z, height: te, widthSegments: oe, heightSegments: se }, this.fromBufferGeometry(new wa(Z, te, oe, se)), this.mergeVertices();
      }
      function wa(Z, te, oe, se) {
        an.call(this), this.type = "PlaneBufferGeometry", this.parameters = { width: Z, height: te, widthSegments: oe, heightSegments: se };
        var Ae, ue, fe = (Z = Z || 1) / 2, pe = (te = te || 1) / 2, ve = Math.floor(oe) || 1, xe = Math.floor(se) || 1, Me = ve + 1, Ne = xe + 1, Qe = Z / ve, Ue = te / xe, Je = [], rt = [], it = [], ft = [];
        for (ue = 0; ue < Ne; ue++) {
          var vt = ue * Ue - pe;
          for (Ae = 0; Ae < Me; Ae++) {
            var ut = Ae * Qe - fe;
            rt.push(ut, -vt, 0), it.push(0, 0, 1), ft.push(Ae / ve), ft.push(1 - ue / xe);
          }
        }
        for (ue = 0; ue < xe; ue++)
          for (Ae = 0; Ae < ve; Ae++) {
            var Gt = Ae + Me * ue, Ht = Ae + Me * (ue + 1), pt = Ae + 1 + Me * (ue + 1), Tt = Ae + 1 + Me * ue;
            Je.push(Gt, Ht, Tt), Je.push(Ht, pt, Tt);
          }
        this.setIndex(Je), this.addAttribute("position", new Yr(rt, 3)), this.addAttribute("normal", new Yr(it, 3)), this.addAttribute("uv", new Yr(ft, 2));
      }
      an.prototype = Object.assign(Object.create(ce.prototype), { constructor: an, isBufferGeometry: !0, getIndex: function() {
        return this.index;
      }, setIndex: function(Z) {
        Array.isArray(Z) ? this.index = new (qA(Z) > 65535 ? Lo : Vo)(Z, 1) : this.index = Z;
      }, addAttribute: function(Z, te) {
        return te && te.isBufferAttribute || te && te.isInterleavedBufferAttribute ? Z === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(te), this) : (this.attributes[Z] = te, this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.addAttribute(Z, new dn(arguments[1], arguments[2])));
      }, getAttribute: function(Z) {
        return this.attributes[Z];
      }, removeAttribute: function(Z) {
        return delete this.attributes[Z], this;
      }, addGroup: function(Z, te, oe) {
        this.groups.push({ start: Z, count: te, materialIndex: oe !== void 0 ? oe : 0 });
      }, clearGroups: function() {
        this.groups = [];
      }, setDrawRange: function(Z, te) {
        this.drawRange.start = Z, this.drawRange.count = te;
      }, applyMatrix: function(Z) {
        var te = this.attributes.position;
        te !== void 0 && (Z.applyToBufferAttribute(te), te.needsUpdate = !0);
        var oe = this.attributes.normal;
        return oe !== void 0 && (new qi().getNormalMatrix(Z).applyToBufferAttribute(oe), oe.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
      }, rotateX: function() {
        var Z = new yn();
        return function(te) {
          return Z.makeRotationX(te), this.applyMatrix(Z), this;
        };
      }(), rotateY: function() {
        var Z = new yn();
        return function(te) {
          return Z.makeRotationY(te), this.applyMatrix(Z), this;
        };
      }(), rotateZ: function() {
        var Z = new yn();
        return function(te) {
          return Z.makeRotationZ(te), this.applyMatrix(Z), this;
        };
      }(), translate: function() {
        var Z = new yn();
        return function(te, oe, se) {
          return Z.makeTranslation(te, oe, se), this.applyMatrix(Z), this;
        };
      }(), scale: function() {
        var Z = new yn();
        return function(te, oe, se) {
          return Z.makeScale(te, oe, se), this.applyMatrix(Z), this;
        };
      }(), lookAt: function() {
        var Z = new Cr();
        return function(te) {
          Z.lookAt(te), Z.updateMatrix(), this.applyMatrix(Z.matrix);
        };
      }(), center: function() {
        var Z = new Bt();
        return function() {
          return this.computeBoundingBox(), this.boundingBox.getCenter(Z).negate(), this.translate(Z.x, Z.y, Z.z), this;
        };
      }(), setFromObject: function(Z) {
        var te = Z.geometry;
        if (Z.isPoints || Z.isLine) {
          var oe = new Yr(3 * te.vertices.length, 3), se = new Yr(3 * te.colors.length, 3);
          if (this.addAttribute("position", oe.copyVector3sArray(te.vertices)), this.addAttribute("color", se.copyColorsArray(te.colors)), te.lineDistances && te.lineDistances.length === te.vertices.length) {
            var Ae = new Yr(te.lineDistances.length, 1);
            this.addAttribute("lineDistance", Ae.copyArray(te.lineDistances));
          }
          te.boundingSphere !== null && (this.boundingSphere = te.boundingSphere.clone()), te.boundingBox !== null && (this.boundingBox = te.boundingBox.clone());
        } else
          Z.isMesh && te && te.isGeometry && this.fromGeometry(te);
        return this;
      }, setFromPoints: function(Z) {
        for (var te = [], oe = 0, se = Z.length; oe < se; oe++) {
          var Ae = Z[oe];
          te.push(Ae.x, Ae.y, Ae.z || 0);
        }
        return this.addAttribute("position", new Yr(te, 3)), this;
      }, updateFromObject: function(Z) {
        var te, oe = Z.geometry;
        if (Z.isMesh) {
          var se = oe.__directGeometry;
          if (oe.elementsNeedUpdate === !0 && (se = void 0, oe.elementsNeedUpdate = !1), se === void 0)
            return this.fromGeometry(oe);
          se.verticesNeedUpdate = oe.verticesNeedUpdate, se.normalsNeedUpdate = oe.normalsNeedUpdate, se.colorsNeedUpdate = oe.colorsNeedUpdate, se.uvsNeedUpdate = oe.uvsNeedUpdate, se.groupsNeedUpdate = oe.groupsNeedUpdate, oe.verticesNeedUpdate = !1, oe.normalsNeedUpdate = !1, oe.colorsNeedUpdate = !1, oe.uvsNeedUpdate = !1, oe.groupsNeedUpdate = !1, oe = se;
        }
        return oe.verticesNeedUpdate === !0 && ((te = this.attributes.position) !== void 0 && (te.copyVector3sArray(oe.vertices), te.needsUpdate = !0), oe.verticesNeedUpdate = !1), oe.normalsNeedUpdate === !0 && ((te = this.attributes.normal) !== void 0 && (te.copyVector3sArray(oe.normals), te.needsUpdate = !0), oe.normalsNeedUpdate = !1), oe.colorsNeedUpdate === !0 && ((te = this.attributes.color) !== void 0 && (te.copyColorsArray(oe.colors), te.needsUpdate = !0), oe.colorsNeedUpdate = !1), oe.uvsNeedUpdate && ((te = this.attributes.uv) !== void 0 && (te.copyVector2sArray(oe.uvs), te.needsUpdate = !0), oe.uvsNeedUpdate = !1), oe.lineDistancesNeedUpdate && ((te = this.attributes.lineDistance) !== void 0 && (te.copyArray(oe.lineDistances), te.needsUpdate = !0), oe.lineDistancesNeedUpdate = !1), oe.groupsNeedUpdate && (oe.computeGroups(Z.geometry), this.groups = oe.groups, oe.groupsNeedUpdate = !1), this;
      }, fromGeometry: function(Z) {
        return Z.__directGeometry = new DA().fromGeometry(Z), this.fromDirectGeometry(Z.__directGeometry);
      }, fromDirectGeometry: function(Z) {
        var te = new Float32Array(3 * Z.vertices.length);
        if (this.addAttribute("position", new dn(te, 3).copyVector3sArray(Z.vertices)), Z.normals.length > 0) {
          var oe = new Float32Array(3 * Z.normals.length);
          this.addAttribute("normal", new dn(oe, 3).copyVector3sArray(Z.normals));
        }
        if (Z.colors.length > 0) {
          var se = new Float32Array(3 * Z.colors.length);
          this.addAttribute("color", new dn(se, 3).copyColorsArray(Z.colors));
        }
        if (Z.uvs.length > 0) {
          var Ae = new Float32Array(2 * Z.uvs.length);
          this.addAttribute("uv", new dn(Ae, 2).copyVector2sArray(Z.uvs));
        }
        if (Z.uvs2.length > 0) {
          var ue = new Float32Array(2 * Z.uvs2.length);
          this.addAttribute("uv2", new dn(ue, 2).copyVector2sArray(Z.uvs2));
        }
        for (var fe in this.groups = Z.groups, Z.morphTargets) {
          for (var pe = [], ve = Z.morphTargets[fe], xe = 0, Me = ve.length; xe < Me; xe++) {
            var Ne = ve[xe], Qe = new Yr(3 * Ne.length, 3);
            pe.push(Qe.copyVector3sArray(Ne));
          }
          this.morphAttributes[fe] = pe;
        }
        if (Z.skinIndices.length > 0) {
          var Ue = new Yr(4 * Z.skinIndices.length, 4);
          this.addAttribute("skinIndex", Ue.copyVector4sArray(Z.skinIndices));
        }
        if (Z.skinWeights.length > 0) {
          var Je = new Yr(4 * Z.skinWeights.length, 4);
          this.addAttribute("skinWeight", Je.copyVector4sArray(Z.skinWeights));
        }
        return Z.boundingSphere !== null && (this.boundingSphere = Z.boundingSphere.clone()), Z.boundingBox !== null && (this.boundingBox = Z.boundingBox.clone()), this;
      }, computeBoundingBox: function() {
        this.boundingBox === null && (this.boundingBox = new yo());
        var Z = this.attributes.position;
        Z !== void 0 ? this.boundingBox.setFromBufferAttribute(Z) : this.boundingBox.makeEmpty(), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
      }, computeBoundingSphere: function() {
        var Z = new yo(), te = new Bt();
        return function() {
          this.boundingSphere === null && (this.boundingSphere = new ao());
          var oe = this.attributes.position;
          if (oe) {
            var se = this.boundingSphere.center;
            Z.setFromBufferAttribute(oe), Z.getCenter(se);
            for (var Ae = 0, ue = 0, fe = oe.count; ue < fe; ue++)
              te.x = oe.getX(ue), te.y = oe.getY(ue), te.z = oe.getZ(ue), Ae = Math.max(Ae, se.distanceToSquared(te));
            this.boundingSphere.radius = Math.sqrt(Ae), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
          }
        };
      }(), computeFaceNormals: function() {
      }, computeVertexNormals: function() {
        var Z = this.index, te = this.attributes, oe = this.groups;
        if (te.position) {
          var se = te.position.array;
          if (te.normal === void 0)
            this.addAttribute("normal", new dn(new Float32Array(se.length), 3));
          else
            for (var Ae = te.normal.array, ue = 0, fe = Ae.length; ue < fe; ue++)
              Ae[ue] = 0;
          var pe, ve, xe, Me = te.normal.array, Ne = new Bt(), Qe = new Bt(), Ue = new Bt(), Je = new Bt(), rt = new Bt();
          if (Z) {
            var it = Z.array;
            oe.length === 0 && this.addGroup(0, it.length);
            for (var ft = 0, vt = oe.length; ft < vt; ++ft) {
              var ut = oe[ft], Gt = ut.start;
              for (ue = Gt, fe = Gt + ut.count; ue < fe; ue += 3)
                pe = 3 * it[ue + 0], ve = 3 * it[ue + 1], xe = 3 * it[ue + 2], Ne.fromArray(se, pe), Qe.fromArray(se, ve), Ue.fromArray(se, xe), Je.subVectors(Ue, Qe), rt.subVectors(Ne, Qe), Je.cross(rt), Me[pe] += Je.x, Me[pe + 1] += Je.y, Me[pe + 2] += Je.z, Me[ve] += Je.x, Me[ve + 1] += Je.y, Me[ve + 2] += Je.z, Me[xe] += Je.x, Me[xe + 1] += Je.y, Me[xe + 2] += Je.z;
            }
          } else
            for (ue = 0, fe = se.length; ue < fe; ue += 9)
              Ne.fromArray(se, ue), Qe.fromArray(se, ue + 3), Ue.fromArray(se, ue + 6), Je.subVectors(Ue, Qe), rt.subVectors(Ne, Qe), Je.cross(rt), Me[ue] = Je.x, Me[ue + 1] = Je.y, Me[ue + 2] = Je.z, Me[ue + 3] = Je.x, Me[ue + 4] = Je.y, Me[ue + 5] = Je.z, Me[ue + 6] = Je.x, Me[ue + 7] = Je.y, Me[ue + 8] = Je.z;
          this.normalizeNormals(), te.normal.needsUpdate = !0;
        }
      }, merge: function(Z, te) {
        if (Z && Z.isBufferGeometry) {
          te === void 0 && (te = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
          var oe = this.attributes;
          for (var se in oe)
            if (Z.attributes[se] !== void 0)
              for (var Ae = oe[se].array, ue = Z.attributes[se], fe = ue.array, pe = 0, ve = ue.itemSize * te; pe < fe.length; pe++, ve++)
                Ae[ve] = fe[pe];
          return this;
        }
        console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", Z);
      }, normalizeNormals: function() {
        var Z = new Bt();
        return function() {
          for (var te = this.attributes.normal, oe = 0, se = te.count; oe < se; oe++)
            Z.x = te.getX(oe), Z.y = te.getY(oe), Z.z = te.getZ(oe), Z.normalize(), te.setXYZ(oe, Z.x, Z.y, Z.z);
        };
      }(), toNonIndexed: function() {
        if (this.index === null)
          return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
        var Z = new an(), te = this.index.array, oe = this.attributes;
        for (var se in oe) {
          for (var Ae = oe[se], ue = Ae.array, fe = Ae.itemSize, pe = new ue.constructor(te.length * fe), ve = 0, xe = 0, Me = 0, Ne = te.length; Me < Ne; Me++) {
            ve = te[Me] * fe;
            for (var Qe = 0; Qe < fe; Qe++)
              pe[xe++] = ue[ve++];
          }
          Z.addAttribute(se, new dn(pe, fe));
        }
        var Ue = this.groups;
        for (Me = 0, Ne = Ue.length; Me < Ne; Me++) {
          var Je = Ue[Me];
          Z.addGroup(Je.start, Je.count, Je.materialIndex);
        }
        return Z;
      }, toJSON: function() {
        var Z = { metadata: { version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON" } };
        if (Z.uuid = this.uuid, Z.type = this.type, this.name !== "" && (Z.name = this.name), Object.keys(this.userData).length > 0 && (Z.userData = this.userData), this.parameters !== void 0) {
          var te = this.parameters;
          for (var oe in te)
            te[oe] !== void 0 && (Z[oe] = te[oe]);
          return Z;
        }
        Z.data = { attributes: {} };
        var se = this.index;
        if (se !== null) {
          var Ae = Array.prototype.slice.call(se.array);
          Z.data.index = { type: se.array.constructor.name, array: Ae };
        }
        var ue = this.attributes;
        for (var oe in ue) {
          var fe = ue[oe];
          Ae = Array.prototype.slice.call(fe.array), Z.data.attributes[oe] = { itemSize: fe.itemSize, type: fe.array.constructor.name, array: Ae, normalized: fe.normalized };
        }
        var pe = this.groups;
        pe.length > 0 && (Z.data.groups = JSON.parse(JSON.stringify(pe)));
        var ve = this.boundingSphere;
        return ve !== null && (Z.data.boundingSphere = { center: ve.center.toArray(), radius: ve.radius }), Z;
      }, clone: function() {
        return new an().copy(this);
      }, copy: function(Z) {
        var te, oe, se;
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = Z.name;
        var Ae = Z.index;
        Ae !== null && this.setIndex(Ae.clone());
        var ue = Z.attributes;
        for (te in ue) {
          var fe = ue[te];
          this.addAttribute(te, fe.clone());
        }
        var pe = Z.morphAttributes;
        for (te in pe) {
          var ve = [], xe = pe[te];
          for (oe = 0, se = xe.length; oe < se; oe++)
            ve.push(xe[oe].clone());
          this.morphAttributes[te] = ve;
        }
        var Me = Z.groups;
        for (oe = 0, se = Me.length; oe < se; oe++) {
          var Ne = Me[oe];
          this.addGroup(Ne.start, Ne.count, Ne.materialIndex);
        }
        var Qe = Z.boundingBox;
        Qe !== null && (this.boundingBox = Qe.clone());
        var Ue = Z.boundingSphere;
        return Ue !== null && (this.boundingSphere = Ue.clone()), this.drawRange.start = Z.drawRange.start, this.drawRange.count = Z.drawRange.count, this.userData = Z.userData, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Xa.prototype = Object.create(Xr.prototype), Xa.prototype.constructor = Xa, ba.prototype = Object.create(an.prototype), ba.prototype.constructor = ba, Os.prototype = Object.create(Xr.prototype), Os.prototype.constructor = Os, wa.prototype = Object.create(an.prototype), wa.prototype.constructor = wa;
      var Yu = 0;
      function Un() {
        Object.defineProperty(this, "id", { value: Yu++ }), this.uuid = Mn.generateUUID(), this.name = "", this.type = "Material", this.fog = !0, this.lights = !0, this.blending = et, this.side = He, this.flatShading = !1, this.vertexColors = We, this.opacity = 1, this.transparent = !1, this.blendSrc = $e, this.blendDst = ir, this.blendEquation = Qt, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = lt, this.depthTest = !0, this.depthWrite = !0, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaTest = 0, this.premultipliedAlpha = !1, this.overdraw = 0, this.visible = !0, this.userData = {}, this.needsUpdate = !0;
      }
      function Bo(Z) {
        Un.call(this), this.type = "MeshBasicMaterial", this.color = new ze(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.lights = !1, this.setValues(Z);
      }
      function So(Z) {
        Un.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, this.fragmentShader = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = { derivatives: !1, fragDepth: !1, drawBuffers: !1, shaderTextureLOD: !1 }, this.defaultAttributeValues = { color: [1, 1, 1], uv: [0, 0], uv2: [0, 0] }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, Z !== void 0 && (Z.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(Z));
      }
      function _a(Z, te) {
        this.origin = Z !== void 0 ? Z : new Bt(), this.direction = te !== void 0 ? te : new Bt();
      }
      function vo(Z, te, oe) {
        this.a = Z !== void 0 ? Z : new Bt(), this.b = te !== void 0 ? te : new Bt(), this.c = oe !== void 0 ? oe : new Bt();
      }
      function lo(Z, te) {
        Cr.call(this), this.type = "Mesh", this.geometry = Z !== void 0 ? Z : new an(), this.material = te !== void 0 ? te : new Bo({ color: 16777215 * Math.random() }), this.drawMode = xn, this.updateMorphTargets();
      }
      function Vu(Z, te) {
        return Math.abs(te[1]) - Math.abs(Z[1]);
      }
      function aa(Z, te, oe, se, Ae, ue, fe, pe, ve, xe) {
        Z = Z !== void 0 ? Z : [], te = te !== void 0 ? te : Te, li.call(this, Z, te, oe, se, Ae, ue, fe, pe, ve, xe), this.flipY = !1;
      }
      Un.prototype = Object.assign(Object.create(ce.prototype), { constructor: Un, isMaterial: !0, onBeforeCompile: function() {
      }, setValues: function(Z) {
        if (Z !== void 0)
          for (var te in Z) {
            var oe = Z[te];
            if (oe !== void 0)
              if (te !== "shading") {
                var se = this[te];
                se !== void 0 ? se && se.isColor ? se.set(oe) : se && se.isVector3 && oe && oe.isVector3 ? se.copy(oe) : this[te] = te === "overdraw" ? Number(oe) : oe : console.warn("THREE." + this.type + ": '" + te + "' is not a property of this material.");
              } else
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = oe === Fe;
            else
              console.warn("THREE.Material: '" + te + "' parameter is undefined.");
          }
      }, toJSON: function(Z) {
        var te = Z === void 0 || typeof Z == "string";
        te && (Z = { textures: {}, images: {} });
        var oe = { metadata: { version: 4.5, type: "Material", generator: "Material.toJSON" } };
        function se(fe) {
          var pe = [];
          for (var ve in fe) {
            var xe = fe[ve];
            delete xe.metadata, pe.push(xe);
          }
          return pe;
        }
        if (oe.uuid = this.uuid, oe.type = this.type, this.name !== "" && (oe.name = this.name), this.color && this.color.isColor && (oe.color = this.color.getHex()), this.roughness !== void 0 && (oe.roughness = this.roughness), this.metalness !== void 0 && (oe.metalness = this.metalness), this.emissive && this.emissive.isColor && (oe.emissive = this.emissive.getHex()), this.emissiveIntensity !== 1 && (oe.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (oe.specular = this.specular.getHex()), this.shininess !== void 0 && (oe.shininess = this.shininess), this.clearCoat !== void 0 && (oe.clearCoat = this.clearCoat), this.clearCoatRoughness !== void 0 && (oe.clearCoatRoughness = this.clearCoatRoughness), this.map && this.map.isTexture && (oe.map = this.map.toJSON(Z).uuid), this.alphaMap && this.alphaMap.isTexture && (oe.alphaMap = this.alphaMap.toJSON(Z).uuid), this.lightMap && this.lightMap.isTexture && (oe.lightMap = this.lightMap.toJSON(Z).uuid), this.aoMap && this.aoMap.isTexture && (oe.aoMap = this.aoMap.toJSON(Z).uuid, oe.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (oe.bumpMap = this.bumpMap.toJSON(Z).uuid, oe.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (oe.normalMap = this.normalMap.toJSON(Z).uuid, oe.normalMapType = this.normalMapType, oe.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (oe.displacementMap = this.displacementMap.toJSON(Z).uuid, oe.displacementScale = this.displacementScale, oe.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (oe.roughnessMap = this.roughnessMap.toJSON(Z).uuid), this.metalnessMap && this.metalnessMap.isTexture && (oe.metalnessMap = this.metalnessMap.toJSON(Z).uuid), this.emissiveMap && this.emissiveMap.isTexture && (oe.emissiveMap = this.emissiveMap.toJSON(Z).uuid), this.specularMap && this.specularMap.isTexture && (oe.specularMap = this.specularMap.toJSON(Z).uuid), this.envMap && this.envMap.isTexture && (oe.envMap = this.envMap.toJSON(Z).uuid, oe.reflectivity = this.reflectivity), this.gradientMap && this.gradientMap.isTexture && (oe.gradientMap = this.gradientMap.toJSON(Z).uuid), this.size !== void 0 && (oe.size = this.size), this.sizeAttenuation !== void 0 && (oe.sizeAttenuation = this.sizeAttenuation), this.blending !== et && (oe.blending = this.blending), this.flatShading === !0 && (oe.flatShading = this.flatShading), this.side !== He && (oe.side = this.side), this.vertexColors !== We && (oe.vertexColors = this.vertexColors), this.opacity < 1 && (oe.opacity = this.opacity), this.transparent === !0 && (oe.transparent = this.transparent), oe.depthFunc = this.depthFunc, oe.depthTest = this.depthTest, oe.depthWrite = this.depthWrite, this.rotation !== 0 && (oe.rotation = this.rotation), this.linewidth !== 1 && (oe.linewidth = this.linewidth), this.dashSize !== void 0 && (oe.dashSize = this.dashSize), this.gapSize !== void 0 && (oe.gapSize = this.gapSize), this.scale !== void 0 && (oe.scale = this.scale), this.dithering === !0 && (oe.dithering = !0), this.alphaTest > 0 && (oe.alphaTest = this.alphaTest), this.premultipliedAlpha === !0 && (oe.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (oe.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (oe.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (oe.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (oe.wireframeLinejoin = this.wireframeLinejoin), this.morphTargets === !0 && (oe.morphTargets = !0), this.skinning === !0 && (oe.skinning = !0), this.visible === !1 && (oe.visible = !1), JSON.stringify(this.userData) !== "{}" && (oe.userData = this.userData), te) {
          var Ae = se(Z.textures), ue = se(Z.images);
          Ae.length > 0 && (oe.textures = Ae), ue.length > 0 && (oe.images = ue);
        }
        return oe;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        this.name = Z.name, this.fog = Z.fog, this.lights = Z.lights, this.blending = Z.blending, this.side = Z.side, this.flatShading = Z.flatShading, this.vertexColors = Z.vertexColors, this.opacity = Z.opacity, this.transparent = Z.transparent, this.blendSrc = Z.blendSrc, this.blendDst = Z.blendDst, this.blendEquation = Z.blendEquation, this.blendSrcAlpha = Z.blendSrcAlpha, this.blendDstAlpha = Z.blendDstAlpha, this.blendEquationAlpha = Z.blendEquationAlpha, this.depthFunc = Z.depthFunc, this.depthTest = Z.depthTest, this.depthWrite = Z.depthWrite, this.colorWrite = Z.colorWrite, this.precision = Z.precision, this.polygonOffset = Z.polygonOffset, this.polygonOffsetFactor = Z.polygonOffsetFactor, this.polygonOffsetUnits = Z.polygonOffsetUnits, this.dithering = Z.dithering, this.alphaTest = Z.alphaTest, this.premultipliedAlpha = Z.premultipliedAlpha, this.overdraw = Z.overdraw, this.visible = Z.visible, this.userData = JSON.parse(JSON.stringify(Z.userData)), this.clipShadows = Z.clipShadows, this.clipIntersection = Z.clipIntersection;
        var te = Z.clippingPlanes, oe = null;
        if (te !== null) {
          var se = te.length;
          oe = new Array(se);
          for (var Ae = 0; Ae !== se; ++Ae)
            oe[Ae] = te[Ae].clone();
        }
        return this.clippingPlanes = oe, this.shadowSide = Z.shadowSide, this;
      }, dispose: function() {
        this.dispatchEvent({ type: "dispose" });
      } }), Bo.prototype = Object.create(Un.prototype), Bo.prototype.constructor = Bo, Bo.prototype.isMeshBasicMaterial = !0, Bo.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.color.copy(Z.color), this.map = Z.map, this.lightMap = Z.lightMap, this.lightMapIntensity = Z.lightMapIntensity, this.aoMap = Z.aoMap, this.aoMapIntensity = Z.aoMapIntensity, this.specularMap = Z.specularMap, this.alphaMap = Z.alphaMap, this.envMap = Z.envMap, this.combine = Z.combine, this.reflectivity = Z.reflectivity, this.refractionRatio = Z.refractionRatio, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.wireframeLinecap = Z.wireframeLinecap, this.wireframeLinejoin = Z.wireframeLinejoin, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this;
      }, So.prototype = Object.create(Un.prototype), So.prototype.constructor = So, So.prototype.isShaderMaterial = !0, So.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.fragmentShader = Z.fragmentShader, this.vertexShader = Z.vertexShader, this.uniforms = $i.clone(Z.uniforms), this.defines = Object.assign({}, Z.defines), this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.lights = Z.lights, this.clipping = Z.clipping, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this.extensions = Z.extensions, this;
      }, So.prototype.toJSON = function(Z) {
        var te = Un.prototype.toJSON.call(this, Z);
        return te.uniforms = this.uniforms, te.vertexShader = this.vertexShader, te.fragmentShader = this.fragmentShader, te;
      }, Object.assign(_a.prototype, { set: function(Z, te) {
        return this.origin.copy(Z), this.direction.copy(te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.origin.copy(Z.origin), this.direction.copy(Z.direction), this;
      }, at: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Ray: .at() target is now required"), te = new Bt()), te.copy(this.direction).multiplyScalar(Z).add(this.origin);
      }, lookAt: function(Z) {
        return this.direction.copy(Z).sub(this.origin).normalize(), this;
      }, recast: function() {
        var Z = new Bt();
        return function(te) {
          return this.origin.copy(this.at(te, Z)), this;
        };
      }(), closestPointToPoint: function(Z, te) {
        te === void 0 && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), te = new Bt()), te.subVectors(Z, this.origin);
        var oe = te.dot(this.direction);
        return oe < 0 ? te.copy(this.origin) : te.copy(this.direction).multiplyScalar(oe).add(this.origin);
      }, distanceToPoint: function(Z) {
        return Math.sqrt(this.distanceSqToPoint(Z));
      }, distanceSqToPoint: function() {
        var Z = new Bt();
        return function(te) {
          var oe = Z.subVectors(te, this.origin).dot(this.direction);
          return oe < 0 ? this.origin.distanceToSquared(te) : (Z.copy(this.direction).multiplyScalar(oe).add(this.origin), Z.distanceToSquared(te));
        };
      }(), distanceSqToSegment: function() {
        var Z = new Bt(), te = new Bt(), oe = new Bt();
        return function(se, Ae, ue, fe) {
          Z.copy(se).add(Ae).multiplyScalar(0.5), te.copy(Ae).sub(se).normalize(), oe.copy(this.origin).sub(Z);
          var pe, ve, xe, Me, Ne = 0.5 * se.distanceTo(Ae), Qe = -this.direction.dot(te), Ue = oe.dot(this.direction), Je = -oe.dot(te), rt = oe.lengthSq(), it = Math.abs(1 - Qe * Qe);
          if (it > 0)
            if (ve = Qe * Ue - Je, Me = Ne * it, (pe = Qe * Je - Ue) >= 0)
              if (ve >= -Me)
                if (ve <= Me) {
                  var ft = 1 / it;
                  xe = (pe *= ft) * (pe + Qe * (ve *= ft) + 2 * Ue) + ve * (Qe * pe + ve + 2 * Je) + rt;
                } else
                  ve = Ne, xe = -(pe = Math.max(0, -(Qe * ve + Ue))) * pe + ve * (ve + 2 * Je) + rt;
              else
                ve = -Ne, xe = -(pe = Math.max(0, -(Qe * ve + Ue))) * pe + ve * (ve + 2 * Je) + rt;
            else
              ve <= -Me ? xe = -(pe = Math.max(0, -(-Qe * Ne + Ue))) * pe + (ve = pe > 0 ? -Ne : Math.min(Math.max(-Ne, -Je), Ne)) * (ve + 2 * Je) + rt : ve <= Me ? (pe = 0, xe = (ve = Math.min(Math.max(-Ne, -Je), Ne)) * (ve + 2 * Je) + rt) : xe = -(pe = Math.max(0, -(Qe * Ne + Ue))) * pe + (ve = pe > 0 ? Ne : Math.min(Math.max(-Ne, -Je), Ne)) * (ve + 2 * Je) + rt;
          else
            ve = Qe > 0 ? -Ne : Ne, xe = -(pe = Math.max(0, -(Qe * ve + Ue))) * pe + ve * (ve + 2 * Je) + rt;
          return ue && ue.copy(this.direction).multiplyScalar(pe).add(this.origin), fe && fe.copy(te).multiplyScalar(ve).add(Z), xe;
        };
      }(), intersectSphere: function() {
        var Z = new Bt();
        return function(te, oe) {
          Z.subVectors(te.center, this.origin);
          var se = Z.dot(this.direction), Ae = Z.dot(Z) - se * se, ue = te.radius * te.radius;
          if (Ae > ue)
            return null;
          var fe = Math.sqrt(ue - Ae), pe = se - fe, ve = se + fe;
          return pe < 0 && ve < 0 ? null : pe < 0 ? this.at(ve, oe) : this.at(pe, oe);
        };
      }(), intersectsSphere: function(Z) {
        return this.distanceToPoint(Z.center) <= Z.radius;
      }, distanceToPlane: function(Z) {
        var te = Z.normal.dot(this.direction);
        if (te === 0)
          return Z.distanceToPoint(this.origin) === 0 ? 0 : null;
        var oe = -(this.origin.dot(Z.normal) + Z.constant) / te;
        return oe >= 0 ? oe : null;
      }, intersectPlane: function(Z, te) {
        var oe = this.distanceToPlane(Z);
        return oe === null ? null : this.at(oe, te);
      }, intersectsPlane: function(Z) {
        var te = Z.distanceToPoint(this.origin);
        return te === 0 || Z.normal.dot(this.direction) * te < 0;
      }, intersectBox: function(Z, te) {
        var oe, se, Ae, ue, fe, pe, ve = 1 / this.direction.x, xe = 1 / this.direction.y, Me = 1 / this.direction.z, Ne = this.origin;
        return ve >= 0 ? (oe = (Z.min.x - Ne.x) * ve, se = (Z.max.x - Ne.x) * ve) : (oe = (Z.max.x - Ne.x) * ve, se = (Z.min.x - Ne.x) * ve), xe >= 0 ? (Ae = (Z.min.y - Ne.y) * xe, ue = (Z.max.y - Ne.y) * xe) : (Ae = (Z.max.y - Ne.y) * xe, ue = (Z.min.y - Ne.y) * xe), oe > ue || Ae > se ? null : ((Ae > oe || oe != oe) && (oe = Ae), (ue < se || se != se) && (se = ue), Me >= 0 ? (fe = (Z.min.z - Ne.z) * Me, pe = (Z.max.z - Ne.z) * Me) : (fe = (Z.max.z - Ne.z) * Me, pe = (Z.min.z - Ne.z) * Me), oe > pe || fe > se ? null : ((fe > oe || oe != oe) && (oe = fe), (pe < se || se != se) && (se = pe), se < 0 ? null : this.at(oe >= 0 ? oe : se, te)));
      }, intersectsBox: function() {
        var Z = new Bt();
        return function(te) {
          return this.intersectBox(te, Z) !== null;
        };
      }(), intersectTriangle: function() {
        var Z = new Bt(), te = new Bt(), oe = new Bt(), se = new Bt();
        return function(Ae, ue, fe, pe, ve) {
          te.subVectors(ue, Ae), oe.subVectors(fe, Ae), se.crossVectors(te, oe);
          var xe, Me = this.direction.dot(se);
          if (Me > 0) {
            if (pe)
              return null;
            xe = 1;
          } else {
            if (!(Me < 0))
              return null;
            xe = -1, Me = -Me;
          }
          Z.subVectors(this.origin, Ae);
          var Ne = xe * this.direction.dot(oe.crossVectors(Z, oe));
          if (Ne < 0)
            return null;
          var Qe = xe * this.direction.dot(te.cross(Z));
          if (Qe < 0 || Ne + Qe > Me)
            return null;
          var Ue = -xe * Z.dot(se);
          return Ue < 0 ? null : this.at(Ue / Me, ve);
        };
      }(), applyMatrix4: function(Z) {
        return this.origin.applyMatrix4(Z), this.direction.transformDirection(Z), this;
      }, equals: function(Z) {
        return Z.origin.equals(this.origin) && Z.direction.equals(this.direction);
      } }), Object.assign(vo, { getNormal: function() {
        var Z = new Bt();
        return function(te, oe, se, Ae) {
          Ae === void 0 && (console.warn("THREE.Triangle: .getNormal() target is now required"), Ae = new Bt()), Ae.subVectors(se, oe), Z.subVectors(te, oe), Ae.cross(Z);
          var ue = Ae.lengthSq();
          return ue > 0 ? Ae.multiplyScalar(1 / Math.sqrt(ue)) : Ae.set(0, 0, 0);
        };
      }(), getBarycoord: function() {
        var Z = new Bt(), te = new Bt(), oe = new Bt();
        return function(se, Ae, ue, fe, pe) {
          Z.subVectors(fe, Ae), te.subVectors(ue, Ae), oe.subVectors(se, Ae);
          var ve = Z.dot(Z), xe = Z.dot(te), Me = Z.dot(oe), Ne = te.dot(te), Qe = te.dot(oe), Ue = ve * Ne - xe * xe;
          if (pe === void 0 && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), pe = new Bt()), Ue === 0)
            return pe.set(-2, -1, -1);
          var Je = 1 / Ue, rt = (Ne * Me - xe * Qe) * Je, it = (ve * Qe - xe * Me) * Je;
          return pe.set(1 - rt - it, it, rt);
        };
      }(), containsPoint: function() {
        var Z = new Bt();
        return function(te, oe, se, Ae) {
          return vo.getBarycoord(te, oe, se, Ae, Z), Z.x >= 0 && Z.y >= 0 && Z.x + Z.y <= 1;
        };
      }() }), Object.assign(vo.prototype, { set: function(Z, te, oe) {
        return this.a.copy(Z), this.b.copy(te), this.c.copy(oe), this;
      }, setFromPointsAndIndices: function(Z, te, oe, se) {
        return this.a.copy(Z[te]), this.b.copy(Z[oe]), this.c.copy(Z[se]), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.a.copy(Z.a), this.b.copy(Z.b), this.c.copy(Z.c), this;
      }, getArea: function() {
        var Z = new Bt(), te = new Bt();
        return function() {
          return Z.subVectors(this.c, this.b), te.subVectors(this.a, this.b), 0.5 * Z.cross(te).length();
        };
      }(), getMidpoint: function(Z) {
        return Z === void 0 && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), Z = new Bt()), Z.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
      }, getNormal: function(Z) {
        return vo.getNormal(this.a, this.b, this.c, Z);
      }, getPlane: function(Z) {
        return Z === void 0 && (console.warn("THREE.Triangle: .getPlane() target is now required"), Z = new Bt()), Z.setFromCoplanarPoints(this.a, this.b, this.c);
      }, getBarycoord: function(Z, te) {
        return vo.getBarycoord(Z, this.a, this.b, this.c, te);
      }, containsPoint: function(Z) {
        return vo.containsPoint(Z, this.a, this.b, this.c);
      }, intersectsBox: function(Z) {
        return Z.intersectsTriangle(this);
      }, closestPointToPoint: function() {
        var Z = new Bt(), te = new Bt(), oe = new Bt(), se = new Bt(), Ae = new Bt(), ue = new Bt();
        return function(fe, pe) {
          pe === void 0 && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), pe = new Bt());
          var ve, xe, Me = this.a, Ne = this.b, Qe = this.c;
          Z.subVectors(Ne, Me), te.subVectors(Qe, Me), se.subVectors(fe, Me);
          var Ue = Z.dot(se), Je = te.dot(se);
          if (Ue <= 0 && Je <= 0)
            return pe.copy(Me);
          Ae.subVectors(fe, Ne);
          var rt = Z.dot(Ae), it = te.dot(Ae);
          if (rt >= 0 && it <= rt)
            return pe.copy(Ne);
          var ft = Ue * it - rt * Je;
          if (ft <= 0 && Ue >= 0 && rt <= 0)
            return ve = Ue / (Ue - rt), pe.copy(Me).addScaledVector(Z, ve);
          ue.subVectors(fe, Qe);
          var vt = Z.dot(ue), ut = te.dot(ue);
          if (ut >= 0 && vt <= ut)
            return pe.copy(Qe);
          var Gt = vt * Je - Ue * ut;
          if (Gt <= 0 && Je >= 0 && ut <= 0)
            return xe = Je / (Je - ut), pe.copy(Me).addScaledVector(te, xe);
          var Ht = rt * ut - vt * it;
          if (Ht <= 0 && it - rt >= 0 && vt - ut >= 0)
            return oe.subVectors(Qe, Ne), xe = (it - rt) / (it - rt + (vt - ut)), pe.copy(Ne).addScaledVector(oe, xe);
          var pt = 1 / (Ht + Gt + ft);
          return ve = Gt * pt, xe = ft * pt, pe.copy(Me).addScaledVector(Z, ve).addScaledVector(te, xe);
        };
      }(), equals: function(Z) {
        return Z.a.equals(this.a) && Z.b.equals(this.b) && Z.c.equals(this.c);
      } }), lo.prototype = Object.assign(Object.create(Cr.prototype), { constructor: lo, isMesh: !0, setDrawMode: function(Z) {
        this.drawMode = Z;
      }, copy: function(Z) {
        return Cr.prototype.copy.call(this, Z), this.drawMode = Z.drawMode, Z.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = Z.morphTargetInfluences.slice()), Z.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, Z.morphTargetDictionary)), this;
      }, updateMorphTargets: function() {
        var Z, te, oe, se = this.geometry;
        if (se.isBufferGeometry) {
          var Ae = se.morphAttributes, ue = Object.keys(Ae);
          if (ue.length > 0) {
            var fe = Ae[ue[0]];
            if (fe !== void 0)
              for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, Z = 0, te = fe.length; Z < te; Z++)
                oe = fe[Z].name || String(Z), this.morphTargetInfluences.push(0), this.morphTargetDictionary[oe] = Z;
          }
        } else {
          var pe = se.morphTargets;
          if (pe !== void 0 && pe.length > 0)
            for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, Z = 0, te = pe.length; Z < te; Z++)
              oe = pe[Z].name || String(Z), this.morphTargetInfluences.push(0), this.morphTargetDictionary[oe] = Z;
        }
      }, raycast: function() {
        var Z = new yn(), te = new _a(), oe = new ao(), se = new Bt(), Ae = new Bt(), ue = new Bt(), fe = new Bt(), pe = new Bt(), ve = new Bt(), xe = new Qr(), Me = new Qr(), Ne = new Qr(), Qe = new Bt(), Ue = new Bt(), Je = new Bt();
        function rt(vt, ut, Gt, Ht, pt, Tt, zt) {
          return vo.getBarycoord(vt, ut, Gt, Ht, Qe), pt.multiplyScalar(Qe.x), Tt.multiplyScalar(Qe.y), zt.multiplyScalar(Qe.z), pt.add(Tt).add(zt), pt.clone();
        }
        function it(vt, ut, Gt, Ht, pt, Tt, zt, Dt) {
          if ((ut.side === Se ? Ht.intersectTriangle(zt, Tt, pt, !0, Dt) : Ht.intersectTriangle(pt, Tt, zt, ut.side !== Ge, Dt)) === null)
            return null;
          Je.copy(Dt), Je.applyMatrix4(vt.matrixWorld);
          var or = Gt.ray.origin.distanceTo(Je);
          return or < Gt.near || or > Gt.far ? null : { distance: or, point: Je.clone(), object: vt };
        }
        function ft(vt, ut, Gt, Ht, pt, Tt, zt, Dt, or) {
          se.fromBufferAttribute(pt, zt), Ae.fromBufferAttribute(pt, Dt), ue.fromBufferAttribute(pt, or);
          var Lt = it(vt, ut, Gt, Ht, se, Ae, ue, Ue);
          if (Lt) {
            Tt && (xe.fromBufferAttribute(Tt, zt), Me.fromBufferAttribute(Tt, Dt), Ne.fromBufferAttribute(Tt, or), Lt.uv = rt(Ue, se, Ae, ue, xe, Me, Ne));
            var lr = new ti(zt, Dt, or);
            vo.getNormal(se, Ae, ue, lr.normal), Lt.face = lr;
          }
          return Lt;
        }
        return function(vt, ut) {
          var Gt, Ht = this.geometry, pt = this.material, Tt = this.matrixWorld;
          if (pt !== void 0 && (Ht.boundingSphere === null && Ht.computeBoundingSphere(), oe.copy(Ht.boundingSphere), oe.applyMatrix4(Tt), vt.ray.intersectsSphere(oe) !== !1 && (Z.getInverse(Tt), te.copy(vt.ray).applyMatrix4(Z), Ht.boundingBox === null || te.intersectsBox(Ht.boundingBox) !== !1))) {
            if (Ht.isBufferGeometry) {
              var zt, Dt, or, Lt, lr, gr, xr, vr, Dr, Or = Ht.index, yr = Ht.attributes.position, Nr = Ht.attributes.uv, pr = Ht.groups, tn = Ht.drawRange;
              if (Or !== null)
                if (Array.isArray(pt))
                  for (Lt = 0, gr = pr.length; Lt < gr; Lt++)
                    for (Dr = pt[(vr = pr[Lt]).materialIndex], lr = Math.max(vr.start, tn.start), xr = Math.min(vr.start + vr.count, tn.start + tn.count); lr < xr; lr += 3)
                      zt = Or.getX(lr), Dt = Or.getX(lr + 1), or = Or.getX(lr + 2), (Gt = ft(this, Dr, vt, te, yr, Nr, zt, Dt, or)) && (Gt.faceIndex = Math.floor(lr / 3), ut.push(Gt));
                else
                  for (Lt = Math.max(0, tn.start), gr = Math.min(Or.count, tn.start + tn.count); Lt < gr; Lt += 3)
                    zt = Or.getX(Lt), Dt = Or.getX(Lt + 1), or = Or.getX(Lt + 2), (Gt = ft(this, pt, vt, te, yr, Nr, zt, Dt, or)) && (Gt.faceIndex = Math.floor(Lt / 3), ut.push(Gt));
              else if (yr !== void 0)
                if (Array.isArray(pt))
                  for (Lt = 0, gr = pr.length; Lt < gr; Lt++)
                    for (Dr = pt[(vr = pr[Lt]).materialIndex], lr = Math.max(vr.start, tn.start), xr = Math.min(vr.start + vr.count, tn.start + tn.count); lr < xr; lr += 3)
                      (Gt = ft(this, Dr, vt, te, yr, Nr, zt = lr, Dt = lr + 1, or = lr + 2)) && (Gt.faceIndex = Math.floor(lr / 3), ut.push(Gt));
                else
                  for (Lt = Math.max(0, tn.start), gr = Math.min(yr.count, tn.start + tn.count); Lt < gr; Lt += 3)
                    (Gt = ft(this, pt, vt, te, yr, Nr, zt = Lt, Dt = Lt + 1, or = Lt + 2)) && (Gt.faceIndex = Math.floor(Lt / 3), ut.push(Gt));
            } else if (Ht.isGeometry) {
              var Ur, mn, Qn, mi, Fi = Array.isArray(pt), ci = Ht.vertices, Hr = Ht.faces, Wn = Ht.faceVertexUvs[0];
              Wn.length > 0 && (mi = Wn);
              for (var Ti = 0, ro = Hr.length; Ti < ro; Ti++) {
                var Ni = Hr[Ti], co = Fi ? pt[Ni.materialIndex] : pt;
                if (co !== void 0) {
                  if (Ur = ci[Ni.a], mn = ci[Ni.b], Qn = ci[Ni.c], co.morphTargets === !0) {
                    var Oi = Ht.morphTargets, qo = this.morphTargetInfluences;
                    se.set(0, 0, 0), Ae.set(0, 0, 0), ue.set(0, 0, 0);
                    for (var $o = 0, Vi = Oi.length; $o < Vi; $o++) {
                      var Pi = qo[$o];
                      if (Pi !== 0) {
                        var Ba = Oi[$o].vertices;
                        se.addScaledVector(fe.subVectors(Ba[Ni.a], Ur), Pi), Ae.addScaledVector(pe.subVectors(Ba[Ni.b], mn), Pi), ue.addScaledVector(ve.subVectors(Ba[Ni.c], Qn), Pi);
                      }
                    }
                    se.add(Ur), Ae.add(mn), ue.add(Qn), Ur = se, mn = Ae, Qn = ue;
                  }
                  if (Gt = it(this, co, vt, te, Ur, mn, Qn, Ue)) {
                    if (mi && mi[Ti]) {
                      var no = mi[Ti];
                      xe.copy(no[0]), Me.copy(no[1]), Ne.copy(no[2]), Gt.uv = rt(Ue, Ur, mn, Qn, xe, Me, Ne);
                    }
                    Gt.face = Ni, Gt.faceIndex = Ti, ut.push(Gt);
                  }
                }
              }
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), aa.prototype = Object.create(li.prototype), aa.prototype.constructor = aa, aa.prototype.isCubeTexture = !0, Object.defineProperty(aa.prototype, "images", { get: function() {
        return this.image;
      }, set: function(Z) {
        this.image = Z;
      } });
      var $A = new li(), jA = new aa();
      function YA() {
        this.seq = [], this.map = {};
      }
      var VA = [], LA = [], zA = new Float32Array(16), JA = new Float32Array(9), WA = new Float32Array(4);
      function es(Z, te, oe) {
        var se = Z[0];
        if (se <= 0 || se > 0)
          return Z;
        var Ae = te * oe, ue = VA[Ae];
        if (ue === void 0 && (ue = new Float32Array(Ae), VA[Ae] = ue), te !== 0) {
          se.toArray(ue, 0);
          for (var fe = 1, pe = 0; fe !== te; ++fe)
            pe += oe, Z[fe].toArray(ue, pe);
        }
        return ue;
      }
      function bi(Z, te) {
        if (Z.length !== te.length)
          return !1;
        for (var oe = 0, se = Z.length; oe < se; oe++)
          if (Z[oe] !== te[oe])
            return !1;
        return !0;
      }
      function ji(Z, te) {
        for (var oe = 0, se = te.length; oe < se; oe++)
          Z[oe] = te[oe];
      }
      function KA(Z, te) {
        var oe = LA[te];
        oe === void 0 && (oe = new Int32Array(te), LA[te] = oe);
        for (var se = 0; se !== te; ++se)
          oe[se] = Z.allocTextureUnit();
        return oe;
      }
      function Lu(Z, te) {
        var oe = this.cache;
        oe[0] !== te && (Z.uniform1f(this.addr, te), oe[0] = te);
      }
      function zu(Z, te) {
        var oe = this.cache;
        oe[0] !== te && (Z.uniform1i(this.addr, te), oe[0] = te);
      }
      function Ju(Z, te) {
        var oe = this.cache;
        if (te.x !== void 0)
          oe[0] === te.x && oe[1] === te.y || (Z.uniform2f(this.addr, te.x, te.y), oe[0] = te.x, oe[1] = te.y);
        else {
          if (bi(oe, te))
            return;
          Z.uniform2fv(this.addr, te), ji(oe, te);
        }
      }
      function Wu(Z, te) {
        var oe = this.cache;
        if (te.x !== void 0)
          oe[0] === te.x && oe[1] === te.y && oe[2] === te.z || (Z.uniform3f(this.addr, te.x, te.y, te.z), oe[0] = te.x, oe[1] = te.y, oe[2] = te.z);
        else if (te.r !== void 0)
          oe[0] === te.r && oe[1] === te.g && oe[2] === te.b || (Z.uniform3f(this.addr, te.r, te.g, te.b), oe[0] = te.r, oe[1] = te.g, oe[2] = te.b);
        else {
          if (bi(oe, te))
            return;
          Z.uniform3fv(this.addr, te), ji(oe, te);
        }
      }
      function Ku(Z, te) {
        var oe = this.cache;
        if (te.x !== void 0)
          oe[0] === te.x && oe[1] === te.y && oe[2] === te.z && oe[3] === te.w || (Z.uniform4f(this.addr, te.x, te.y, te.z, te.w), oe[0] = te.x, oe[1] = te.y, oe[2] = te.z, oe[3] = te.w);
        else {
          if (bi(oe, te))
            return;
          Z.uniform4fv(this.addr, te), ji(oe, te);
        }
      }
      function Zu(Z, te) {
        var oe = this.cache, se = te.elements;
        if (se === void 0) {
          if (bi(oe, te))
            return;
          Z.uniformMatrix2fv(this.addr, !1, te), ji(oe, te);
        } else {
          if (bi(oe, se))
            return;
          WA.set(se), Z.uniformMatrix2fv(this.addr, !1, WA), ji(oe, se);
        }
      }
      function Xu(Z, te) {
        var oe = this.cache, se = te.elements;
        if (se === void 0) {
          if (bi(oe, te))
            return;
          Z.uniformMatrix3fv(this.addr, !1, te), ji(oe, te);
        } else {
          if (bi(oe, se))
            return;
          JA.set(se), Z.uniformMatrix3fv(this.addr, !1, JA), ji(oe, se);
        }
      }
      function el(Z, te) {
        var oe = this.cache, se = te.elements;
        if (se === void 0) {
          if (bi(oe, te))
            return;
          Z.uniformMatrix4fv(this.addr, !1, te), ji(oe, te);
        } else {
          if (bi(oe, se))
            return;
          zA.set(se), Z.uniformMatrix4fv(this.addr, !1, zA), ji(oe, se);
        }
      }
      function tl(Z, te, oe) {
        var se = this.cache, Ae = oe.allocTextureUnit();
        se[0] !== Ae && (Z.uniform1i(this.addr, Ae), se[0] = Ae), oe.setTexture2D(te || $A, Ae);
      }
      function rl(Z, te, oe) {
        var se = this.cache, Ae = oe.allocTextureUnit();
        se[0] !== Ae && (Z.uniform1i(this.addr, Ae), se[0] = Ae), oe.setTextureCube(te || jA, Ae);
      }
      function ZA(Z, te) {
        var oe = this.cache;
        bi(oe, te) || (Z.uniform2iv(this.addr, te), ji(oe, te));
      }
      function XA(Z, te) {
        var oe = this.cache;
        bi(oe, te) || (Z.uniform3iv(this.addr, te), ji(oe, te));
      }
      function eu(Z, te) {
        var oe = this.cache;
        bi(oe, te) || (Z.uniform4iv(this.addr, te), ji(oe, te));
      }
      function nl(Z, te) {
        var oe = this.cache;
        bi(oe, te) || (Z.uniform1fv(this.addr, te), ji(oe, te));
      }
      function il(Z, te) {
        var oe = this.cache;
        bi(oe, te) || (Z.uniform1iv(this.addr, te), ji(oe, te));
      }
      function ol(Z, te) {
        var oe = this.cache, se = es(te, this.size, 2);
        bi(oe, se) || (Z.uniform2fv(this.addr, se), this.updateCache(se));
      }
      function al(Z, te) {
        var oe = this.cache, se = es(te, this.size, 3);
        bi(oe, se) || (Z.uniform3fv(this.addr, se), this.updateCache(se));
      }
      function sl(Z, te) {
        var oe = this.cache, se = es(te, this.size, 4);
        bi(oe, se) || (Z.uniform4fv(this.addr, se), this.updateCache(se));
      }
      function cl(Z, te) {
        var oe = this.cache, se = es(te, this.size, 4);
        bi(oe, se) || (Z.uniformMatrix2fv(this.addr, !1, se), this.updateCache(se));
      }
      function Al(Z, te) {
        var oe = this.cache, se = es(te, this.size, 9);
        bi(oe, se) || (Z.uniformMatrix3fv(this.addr, !1, se), this.updateCache(se));
      }
      function ul(Z, te) {
        var oe = this.cache, se = es(te, this.size, 16);
        bi(oe, se) || (Z.uniformMatrix4fv(this.addr, !1, se), this.updateCache(se));
      }
      function ll(Z, te, oe) {
        var se = this.cache, Ae = te.length, ue = KA(oe, Ae);
        bi(se, ue) === !1 && (Z.uniform1iv(this.addr, ue), ji(se, ue));
        for (var fe = 0; fe !== Ae; ++fe)
          oe.setTexture2D(te[fe] || $A, ue[fe]);
      }
      function dl(Z, te, oe) {
        var se = this.cache, Ae = te.length, ue = KA(oe, Ae);
        bi(se, ue) === !1 && (Z.uniform1iv(this.addr, ue), ji(se, ue));
        for (var fe = 0; fe !== Ae; ++fe)
          oe.setTextureCube(te[fe] || jA, ue[fe]);
      }
      function fl(Z, te, oe) {
        this.id = Z, this.addr = oe, this.cache = [], this.setValue = function(se) {
          switch (se) {
            case 5126:
              return Lu;
            case 35664:
              return Ju;
            case 35665:
              return Wu;
            case 35666:
              return Ku;
            case 35674:
              return Zu;
            case 35675:
              return Xu;
            case 35676:
              return el;
            case 35678:
            case 36198:
              return tl;
            case 35680:
              return rl;
            case 5124:
            case 35670:
              return zu;
            case 35667:
            case 35671:
              return ZA;
            case 35668:
            case 35672:
              return XA;
            case 35669:
            case 35673:
              return eu;
          }
        }(te.type);
      }
      function tu(Z, te, oe) {
        this.id = Z, this.addr = oe, this.cache = [], this.size = te.size, this.setValue = function(se) {
          switch (se) {
            case 5126:
              return nl;
            case 35664:
              return ol;
            case 35665:
              return al;
            case 35666:
              return sl;
            case 35674:
              return cl;
            case 35675:
              return Al;
            case 35676:
              return ul;
            case 35678:
              return ll;
            case 35680:
              return dl;
            case 5124:
            case 35670:
              return il;
            case 35667:
            case 35671:
              return ZA;
            case 35668:
            case 35672:
              return XA;
            case 35669:
            case 35673:
              return eu;
          }
        }(te.type);
      }
      function ru(Z) {
        this.id = Z, YA.call(this);
      }
      tu.prototype.updateCache = function(Z) {
        var te = this.cache;
        Z instanceof Float32Array && te.length !== Z.length && (this.cache = new Float32Array(Z.length)), ji(te, Z);
      }, ru.prototype.setValue = function(Z, te, oe) {
        for (var se = this.seq, Ae = 0, ue = se.length; Ae !== ue; ++Ae) {
          var fe = se[Ae];
          fe.setValue(Z, te[fe.id], oe);
        }
      };
      var aA = /([\w\d_]+)(\])?(\[|\.)?/g;
      function nu(Z, te) {
        Z.seq.push(te), Z.map[te.id] = te;
      }
      function hl(Z, te, oe) {
        var se = Z.name, Ae = se.length;
        for (aA.lastIndex = 0; ; ) {
          var ue = aA.exec(se), fe = aA.lastIndex, pe = ue[1], ve = ue[2] === "]", xe = ue[3];
          if (ve && (pe |= 0), xe === void 0 || xe === "[" && fe + 2 === Ae) {
            nu(oe, xe === void 0 ? new fl(pe, Z, te) : new tu(pe, Z, te));
            break;
          }
          var Me = oe.map[pe];
          Me === void 0 && nu(oe, Me = new ru(pe)), oe = Me;
        }
      }
      function pa(Z, te, oe) {
        YA.call(this), this.renderer = oe;
        for (var se = Z.getProgramParameter(te, Z.ACTIVE_UNIFORMS), Ae = 0; Ae < se; ++Ae) {
          var ue = Z.getActiveUniform(te, Ae);
          hl(ue, Z.getUniformLocation(te, ue.name), this);
        }
      }
      function iu(Z, te, oe) {
        var se = Z.createShader(te);
        return Z.shaderSource(se, oe), Z.compileShader(se), Z.getShaderParameter(se, Z.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."), Z.getShaderInfoLog(se) !== "" && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", te === Z.VERTEX_SHADER ? "vertex" : "fragment", Z.getShaderInfoLog(se), function(Ae) {
          for (var ue = Ae.split(`
`), fe = 0; fe < ue.length; fe++)
            ue[fe] = fe + 1 + ": " + ue[fe];
          return ue.join(`
`);
        }(oe)), se;
      }
      pa.prototype.setValue = function(Z, te, oe) {
        var se = this.map[te];
        se !== void 0 && se.setValue(Z, oe, this.renderer);
      }, pa.prototype.setOptional = function(Z, te, oe) {
        var se = te[oe];
        se !== void 0 && this.setValue(Z, oe, se);
      }, pa.upload = function(Z, te, oe, se) {
        for (var Ae = 0, ue = te.length; Ae !== ue; ++Ae) {
          var fe = te[Ae], pe = oe[fe.id];
          pe.needsUpdate !== !1 && fe.setValue(Z, pe.value, se);
        }
      }, pa.seqWithValue = function(Z, te) {
        for (var oe = [], se = 0, Ae = Z.length; se !== Ae; ++se) {
          var ue = Z[se];
          ue.id in te && oe.push(ue);
        }
        return oe;
      };
      var pl = 0;
      function ou(Z) {
        switch (Z) {
          case zn:
            return ["Linear", "( value )"];
          case Qi:
            return ["sRGB", "( value )"];
          case Eo:
            return ["RGBE", "( value )"];
          case xi:
            return ["RGBM", "( value, 7.0 )"];
          case na:
            return ["RGBM", "( value, 16.0 )"];
          case da:
            return ["RGBD", "( value, 256.0 )"];
          case Mi:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
          default:
            throw new Error("unsupported encoding: " + Z);
        }
      }
      function sA(Z, te) {
        var oe = ou(te);
        return "vec4 " + Z + "( vec4 value ) { return " + oe[0] + "ToLinear" + oe[1] + "; }";
      }
      function Ps(Z) {
        return Z !== "";
      }
      function au(Z, te) {
        return Z.replace(/NUM_DIR_LIGHTS/g, te.numDirLights).replace(/NUM_SPOT_LIGHTS/g, te.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, te.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, te.numPointLights).replace(/NUM_HEMI_LIGHTS/g, te.numHemiLights);
      }
      function su(Z, te) {
        return Z.replace(/NUM_CLIPPING_PLANES/g, te.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, te.numClippingPlanes - te.numClipIntersection);
      }
      function cA(Z) {
        return Z.replace(/^[ \t]*#include +<([\w\d./]+)>/gm, function(te, oe) {
          var se = ei[oe];
          if (se === void 0)
            throw new Error("Can not resolve #include <" + oe + ">");
          return cA(se);
        });
      }
      function cu(Z) {
        return Z.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(te, oe, se, Ae) {
          for (var ue = "", fe = parseInt(oe); fe < parseInt(se); fe++)
            ue += Ae.replace(/\[ i \]/g, "[ " + fe + " ]");
          return ue;
        });
      }
      function gl(Z, te, oe, se, Ae, ue, fe) {
        var pe = Z.context, ve = se.defines, xe = Ae.vertexShader, Me = Ae.fragmentShader, Ne = "SHADOWMAP_TYPE_BASIC";
        ue.shadowMapType === we ? Ne = "SHADOWMAP_TYPE_PCF" : ue.shadowMapType === Oe && (Ne = "SHADOWMAP_TYPE_PCF_SOFT");
        var Qe = "ENVMAP_TYPE_CUBE", Ue = "ENVMAP_MODE_REFLECTION", Je = "ENVMAP_BLENDING_MULTIPLY";
        if (ue.envMap) {
          switch (se.envMap.mapping) {
            case Te:
            case Re:
              Qe = "ENVMAP_TYPE_CUBE";
              break;
            case Vt:
            case Ir:
              Qe = "ENVMAP_TYPE_CUBE_UV";
              break;
            case ot:
            case bt:
              Qe = "ENVMAP_TYPE_EQUIREC";
              break;
            case Pt:
              Qe = "ENVMAP_TYPE_SPHERE";
          }
          switch (se.envMap.mapping) {
            case Re:
            case bt:
              Ue = "ENVMAP_MODE_REFRACTION";
          }
          switch (se.combine) {
            case ke:
              Je = "ENVMAP_BLENDING_MULTIPLY";
              break;
            case Ve:
              Je = "ENVMAP_BLENDING_MIX";
              break;
            case Ze:
              Je = "ENVMAP_BLENDING_ADD";
          }
        }
        var rt, it, ft = Z.gammaFactor > 0 ? Z.gammaFactor : 1, vt = fe.isWebGL2 ? "" : function(yr, Nr, pr) {
          return [(yr = yr || {}).derivatives || Nr.envMapCubeUV || Nr.bumpMap || Nr.normalMap && !Nr.objectSpaceNormalMap || Nr.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (yr.fragDepth || Nr.logarithmicDepthBuffer) && pr.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", yr.drawBuffers && pr.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (yr.shaderTextureLOD || Nr.envMap) && pr.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Ps).join(`
`);
        }(se.extensions, ue, te), ut = function(yr) {
          var Nr = [];
          for (var pr in yr) {
            var tn = yr[pr];
            tn !== !1 && Nr.push("#define " + pr + " " + tn);
          }
          return Nr.join(`
`);
        }(ve), Gt = pe.createProgram();
        if (se.isRawShaderMaterial ? ((rt = [ut].filter(Ps).join(`
`)).length > 0 && (rt += `
`), (it = [vt, ut].filter(Ps).join(`
`)).length > 0 && (it += `
`)) : (rt = ["precision " + ue.precision + " float;", "precision " + ue.precision + " int;", "#define SHADER_NAME " + Ae.name, ut, ue.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + ft, "#define MAX_BONES " + ue.maxBones, ue.useFog && ue.fog ? "#define USE_FOG" : "", ue.useFog && ue.fogExp ? "#define FOG_EXP2" : "", ue.map ? "#define USE_MAP" : "", ue.envMap ? "#define USE_ENVMAP" : "", ue.envMap ? "#define " + Ue : "", ue.lightMap ? "#define USE_LIGHTMAP" : "", ue.aoMap ? "#define USE_AOMAP" : "", ue.emissiveMap ? "#define USE_EMISSIVEMAP" : "", ue.bumpMap ? "#define USE_BUMPMAP" : "", ue.normalMap ? "#define USE_NORMALMAP" : "", ue.normalMap && ue.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", ue.displacementMap && ue.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", ue.specularMap ? "#define USE_SPECULARMAP" : "", ue.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", ue.metalnessMap ? "#define USE_METALNESSMAP" : "", ue.alphaMap ? "#define USE_ALPHAMAP" : "", ue.vertexColors ? "#define USE_COLOR" : "", ue.flatShading ? "#define FLAT_SHADED" : "", ue.skinning ? "#define USE_SKINNING" : "", ue.useVertexTexture ? "#define BONE_TEXTURE" : "", ue.morphTargets ? "#define USE_MORPHTARGETS" : "", ue.morphNormals && ue.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", ue.doubleSided ? "#define DOUBLE_SIDED" : "", ue.flipSided ? "#define FLIP_SIDED" : "", ue.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", ue.shadowMapEnabled ? "#define " + Ne : "", ue.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", ue.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", ue.logarithmicDepthBuffer && (fe.isWebGL2 || te.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", `
`].filter(Ps).join(`
`), it = [vt, "precision " + ue.precision + " float;", "precision " + ue.precision + " int;", "#define SHADER_NAME " + Ae.name, ut, ue.alphaTest ? "#define ALPHATEST " + ue.alphaTest + (ue.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + ft, ue.useFog && ue.fog ? "#define USE_FOG" : "", ue.useFog && ue.fogExp ? "#define FOG_EXP2" : "", ue.map ? "#define USE_MAP" : "", ue.envMap ? "#define USE_ENVMAP" : "", ue.envMap ? "#define " + Qe : "", ue.envMap ? "#define " + Ue : "", ue.envMap ? "#define " + Je : "", ue.lightMap ? "#define USE_LIGHTMAP" : "", ue.aoMap ? "#define USE_AOMAP" : "", ue.emissiveMap ? "#define USE_EMISSIVEMAP" : "", ue.bumpMap ? "#define USE_BUMPMAP" : "", ue.normalMap ? "#define USE_NORMALMAP" : "", ue.normalMap && ue.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", ue.specularMap ? "#define USE_SPECULARMAP" : "", ue.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", ue.metalnessMap ? "#define USE_METALNESSMAP" : "", ue.alphaMap ? "#define USE_ALPHAMAP" : "", ue.vertexColors ? "#define USE_COLOR" : "", ue.gradientMap ? "#define USE_GRADIENTMAP" : "", ue.flatShading ? "#define FLAT_SHADED" : "", ue.doubleSided ? "#define DOUBLE_SIDED" : "", ue.flipSided ? "#define FLIP_SIDED" : "", ue.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", ue.shadowMapEnabled ? "#define " + Ne : "", ue.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", ue.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", ue.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", ue.logarithmicDepthBuffer && (fe.isWebGL2 || te.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", ue.envMap && (fe.isWebGL2 || te.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", ue.toneMapping !== ct ? "#define TONE_MAPPING" : "", ue.toneMapping !== ct ? ei.tonemapping_pars_fragment : "", ue.toneMapping !== ct ? function(yr, Nr) {
          var pr;
          switch (Nr) {
            case kt:
              pr = "Linear";
              break;
            case Jt:
              pr = "Reinhard";
              break;
            case Kt:
              pr = "Uncharted2";
              break;
            case Zt:
              pr = "OptimizedCineon";
              break;
            default:
              throw new Error("unsupported toneMapping: " + Nr);
          }
          return "vec3 " + yr + "( vec3 color ) { return " + pr + "ToneMapping( color ); }";
        }("toneMapping", ue.toneMapping) : "", ue.dithering ? "#define DITHERING" : "", ue.outputEncoding || ue.mapEncoding || ue.envMapEncoding || ue.emissiveMapEncoding ? ei.encodings_pars_fragment : "", ue.mapEncoding ? sA("mapTexelToLinear", ue.mapEncoding) : "", ue.envMapEncoding ? sA("envMapTexelToLinear", ue.envMapEncoding) : "", ue.emissiveMapEncoding ? sA("emissiveMapTexelToLinear", ue.emissiveMapEncoding) : "", ue.outputEncoding ? function(yr, Nr) {
          var pr = ou(Nr);
          return "vec4 " + yr + "( vec4 value ) { return LinearTo" + pr[0] + pr[1] + "; }";
        }("linearToOutputTexel", ue.outputEncoding) : "", ue.depthPacking ? "#define DEPTH_PACKING " + se.depthPacking : "", `
`].filter(Ps).join(`
`)), xe = su(xe = au(xe = cA(xe), ue), ue), Me = su(Me = au(Me = cA(Me), ue), ue), xe = cu(xe), Me = cu(Me), fe.isWebGL2 && !se.isRawShaderMaterial) {
          var Ht = !1, pt = /^\s*#version\s+300\s+es\s*\n/;
          se.isShaderMaterial && xe.match(pt) !== null && Me.match(pt) !== null && (Ht = !0, xe = xe.replace(pt, ""), Me = Me.replace(pt, "")), rt = [`#version 300 es
`, "#define attribute in", "#define varying out", "#define texture2D texture"].join(`
`) + `
` + rt, it = [`#version 300 es
`, "#define varying in", Ht ? "" : "out highp vec4 pc_fragColor;", Ht ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join(`
`) + `
` + it;
        }
        var Tt = rt + xe, zt = it + Me, Dt = iu(pe, pe.VERTEX_SHADER, Tt), or = iu(pe, pe.FRAGMENT_SHADER, zt);
        pe.attachShader(Gt, Dt), pe.attachShader(Gt, or), se.index0AttributeName !== void 0 ? pe.bindAttribLocation(Gt, 0, se.index0AttributeName) : ue.morphTargets === !0 && pe.bindAttribLocation(Gt, 0, "position"), pe.linkProgram(Gt);
        var Lt, lr, gr = pe.getProgramInfoLog(Gt).trim(), xr = pe.getShaderInfoLog(Dt).trim(), vr = pe.getShaderInfoLog(or).trim(), Dr = !0, Or = !0;
        return pe.getProgramParameter(Gt, pe.LINK_STATUS) === !1 ? (Dr = !1, console.error("THREE.WebGLProgram: shader error: ", pe.getError(), "gl.VALIDATE_STATUS", pe.getProgramParameter(Gt, pe.VALIDATE_STATUS), "gl.getProgramInfoLog", gr, xr, vr)) : gr !== "" ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", gr) : xr !== "" && vr !== "" || (Or = !1), Or && (this.diagnostics = { runnable: Dr, material: se, programLog: gr, vertexShader: { log: xr, prefix: rt }, fragmentShader: { log: vr, prefix: it } }), pe.deleteShader(Dt), pe.deleteShader(or), this.getUniforms = function() {
          return Lt === void 0 && (Lt = new pa(pe, Gt, Z)), Lt;
        }, this.getAttributes = function() {
          return lr === void 0 && (lr = function(yr, Nr) {
            for (var pr = {}, tn = yr.getProgramParameter(Nr, yr.ACTIVE_ATTRIBUTES), Ur = 0; Ur < tn; Ur++) {
              var mn = yr.getActiveAttrib(Nr, Ur).name;
              pr[mn] = yr.getAttribLocation(Nr, mn);
            }
            return pr;
          }(pe, Gt)), lr;
        }, this.destroy = function() {
          pe.deleteProgram(Gt), this.program = void 0;
        }, Object.defineProperties(this, { uniforms: { get: function() {
          return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."), this.getUniforms();
        } }, attributes: { get: function() {
          return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."), this.getAttributes();
        } } }), this.name = Ae.name, this.id = pl++, this.code = oe, this.usedTimes = 1, this.program = Gt, this.vertexShader = Dt, this.fragmentShader = or, this;
      }
      function ml(Z, te, oe) {
        var se = [], Ae = { MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "phong", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite" }, ue = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
        function fe(pe, ve) {
          var xe;
          return pe ? pe.isTexture ? xe = pe.encoding : pe.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), xe = pe.texture.encoding) : xe = zn, xe === zn && ve && (xe = Mi), xe;
        }
        this.getParameters = function(pe, ve, xe, Me, Ne, Qe, Ue) {
          var Je = Ae[pe.type], rt = Ue.isSkinnedMesh ? function(vt) {
            var ut = vt.skeleton.bones;
            if (oe.floatVertexTextures)
              return 1024;
            var Gt = oe.maxVertexUniforms, Ht = Math.floor((Gt - 20) / 4), pt = Math.min(Ht, ut.length);
            return pt < ut.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + ut.length + " bones. This GPU supports " + pt + "."), 0) : pt;
          }(Ue) : 0, it = oe.precision;
          pe.precision !== null && (it = oe.getMaxPrecision(pe.precision)) !== pe.precision && console.warn("THREE.WebGLProgram.getParameters:", pe.precision, "not supported, using", it, "instead.");
          var ft = Z.getRenderTarget();
          return { shaderID: Je, precision: it, supportsVertexTextures: oe.vertexTextures, outputEncoding: fe(ft ? ft.texture : null, Z.gammaOutput), map: !!pe.map, mapEncoding: fe(pe.map, Z.gammaInput), envMap: !!pe.envMap, envMapMode: pe.envMap && pe.envMap.mapping, envMapEncoding: fe(pe.envMap, Z.gammaInput), envMapCubeUV: !!pe.envMap && (pe.envMap.mapping === Vt || pe.envMap.mapping === Ir), lightMap: !!pe.lightMap, aoMap: !!pe.aoMap, emissiveMap: !!pe.emissiveMap, emissiveMapEncoding: fe(pe.emissiveMap, Z.gammaInput), bumpMap: !!pe.bumpMap, normalMap: !!pe.normalMap, objectSpaceNormalMap: pe.normalMapType === _o, displacementMap: !!pe.displacementMap, roughnessMap: !!pe.roughnessMap, metalnessMap: !!pe.metalnessMap, specularMap: !!pe.specularMap, alphaMap: !!pe.alphaMap, gradientMap: !!pe.gradientMap, combine: pe.combine, vertexColors: pe.vertexColors, fog: !!Me, useFog: pe.fog, fogExp: Me && Me.isFogExp2, flatShading: pe.flatShading, sizeAttenuation: pe.sizeAttenuation, logarithmicDepthBuffer: oe.logarithmicDepthBuffer, skinning: pe.skinning && rt > 0, maxBones: rt, useVertexTexture: oe.floatVertexTextures, morphTargets: pe.morphTargets, morphNormals: pe.morphNormals, maxMorphTargets: Z.maxMorphTargets, maxMorphNormals: Z.maxMorphNormals, numDirLights: ve.directional.length, numPointLights: ve.point.length, numSpotLights: ve.spot.length, numRectAreaLights: ve.rectArea.length, numHemiLights: ve.hemi.length, numClippingPlanes: Ne, numClipIntersection: Qe, dithering: pe.dithering, shadowMapEnabled: Z.shadowMap.enabled && Ue.receiveShadow && xe.length > 0, shadowMapType: Z.shadowMap.type, toneMapping: Z.toneMapping, physicallyCorrectLights: Z.physicallyCorrectLights, premultipliedAlpha: pe.premultipliedAlpha, alphaTest: pe.alphaTest, doubleSided: pe.side === Ge, flipSided: pe.side === Se, depthPacking: pe.depthPacking !== void 0 && pe.depthPacking };
        }, this.getProgramCode = function(pe, ve) {
          var xe = [];
          if (ve.shaderID ? xe.push(ve.shaderID) : (xe.push(pe.fragmentShader), xe.push(pe.vertexShader)), pe.defines !== void 0)
            for (var Me in pe.defines)
              xe.push(Me), xe.push(pe.defines[Me]);
          for (var Ne = 0; Ne < ue.length; Ne++)
            xe.push(ve[ue[Ne]]);
          return xe.push(pe.onBeforeCompile.toString()), xe.push(Z.gammaOutput), xe.join();
        }, this.acquireProgram = function(pe, ve, xe, Me) {
          for (var Ne, Qe = 0, Ue = se.length; Qe < Ue; Qe++) {
            var Je = se[Qe];
            if (Je.code === Me) {
              ++(Ne = Je).usedTimes;
              break;
            }
          }
          return Ne === void 0 && (Ne = new gl(Z, te, Me, pe, ve, xe, oe), se.push(Ne)), Ne;
        }, this.releaseProgram = function(pe) {
          if (--pe.usedTimes == 0) {
            var ve = se.indexOf(pe);
            se[ve] = se[se.length - 1], se.pop(), pe.destroy();
          }
        }, this.programs = se;
      }
      function El(Z, te) {
        return Z.renderOrder !== te.renderOrder ? Z.renderOrder - te.renderOrder : Z.program && te.program && Z.program !== te.program ? Z.program.id - te.program.id : Z.material.id !== te.material.id ? Z.material.id - te.material.id : Z.z !== te.z ? Z.z - te.z : Z.id - te.id;
      }
      function yl(Z, te) {
        return Z.renderOrder !== te.renderOrder ? Z.renderOrder - te.renderOrder : Z.z !== te.z ? te.z - Z.z : Z.id - te.id;
      }
      function Bl() {
        var Z = {};
        return { get: function(te, oe) {
          var se = te.id + "," + oe.id, Ae = Z[se];
          return Ae === void 0 && (Ae = new function() {
            var ue = [], fe = 0, pe = [], ve = [];
            return { opaque: pe, transparent: ve, init: function() {
              fe = 0, pe.length = 0, ve.length = 0;
            }, push: function(xe, Me, Ne, Qe, Ue) {
              var Je = ue[fe];
              Je === void 0 ? (Je = { id: xe.id, object: xe, geometry: Me, material: Ne, program: Ne.program, renderOrder: xe.renderOrder, z: Qe, group: Ue }, ue[fe] = Je) : (Je.id = xe.id, Je.object = xe, Je.geometry = Me, Je.material = Ne, Je.program = Ne.program, Je.renderOrder = xe.renderOrder, Je.z = Qe, Je.group = Ue), (Ne.transparent === !0 ? ve : pe).push(Je), fe++;
            }, sort: function() {
              pe.length > 1 && pe.sort(El), ve.length > 1 && ve.sort(yl);
            } };
          }(), Z[se] = Ae), Ae;
        }, dispose: function() {
          Z = {};
        } };
      }
      var ts, vl = 0;
      function Cl() {
        var Z = new function() {
          var ue = {};
          return { get: function(fe) {
            if (ue[fe.id] !== void 0)
              return ue[fe.id];
            var pe;
            switch (fe.type) {
              case "DirectionalLight":
                pe = { direction: new Bt(), color: new ze(), shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Qr() };
                break;
              case "SpotLight":
                pe = { position: new Bt(), direction: new Bt(), color: new ze(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Qr() };
                break;
              case "PointLight":
                pe = { position: new Bt(), color: new ze(), distance: 0, decay: 0, shadow: !1, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Qr(), shadowCameraNear: 1, shadowCameraFar: 1e3 };
                break;
              case "HemisphereLight":
                pe = { direction: new Bt(), skyColor: new ze(), groundColor: new ze() };
                break;
              case "RectAreaLight":
                pe = { color: new ze(), position: new Bt(), halfWidth: new Bt(), halfHeight: new Bt() };
            }
            return ue[fe.id] = pe, pe;
          } };
        }(), te = { id: vl++, hash: { stateID: -1, directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, shadowsLength: -1 }, ambient: [0, 0, 0], directional: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], point: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [] }, oe = new Bt(), se = new yn(), Ae = new yn();
        return { setup: function(ue, fe, pe) {
          for (var ve = 0, xe = 0, Me = 0, Ne = 0, Qe = 0, Ue = 0, Je = 0, rt = 0, it = pe.matrixWorldInverse, ft = 0, vt = ue.length; ft < vt; ft++) {
            var ut = ue[ft], Gt = ut.color, Ht = ut.intensity, pt = ut.distance, Tt = ut.shadow && ut.shadow.map ? ut.shadow.map.texture : null;
            if (ut.isAmbientLight)
              ve += Gt.r * Ht, xe += Gt.g * Ht, Me += Gt.b * Ht;
            else if (ut.isDirectionalLight) {
              if ((Dt = Z.get(ut)).color.copy(ut.color).multiplyScalar(ut.intensity), Dt.direction.setFromMatrixPosition(ut.matrixWorld), oe.setFromMatrixPosition(ut.target.matrixWorld), Dt.direction.sub(oe), Dt.direction.transformDirection(it), Dt.shadow = ut.castShadow, ut.castShadow) {
                var zt = ut.shadow;
                Dt.shadowBias = zt.bias, Dt.shadowRadius = zt.radius, Dt.shadowMapSize = zt.mapSize;
              }
              te.directionalShadowMap[Ne] = Tt, te.directionalShadowMatrix[Ne] = ut.shadow.matrix, te.directional[Ne] = Dt, Ne++;
            } else if (ut.isSpotLight)
              (Dt = Z.get(ut)).position.setFromMatrixPosition(ut.matrixWorld), Dt.position.applyMatrix4(it), Dt.color.copy(Gt).multiplyScalar(Ht), Dt.distance = pt, Dt.direction.setFromMatrixPosition(ut.matrixWorld), oe.setFromMatrixPosition(ut.target.matrixWorld), Dt.direction.sub(oe), Dt.direction.transformDirection(it), Dt.coneCos = Math.cos(ut.angle), Dt.penumbraCos = Math.cos(ut.angle * (1 - ut.penumbra)), Dt.decay = ut.distance === 0 ? 0 : ut.decay, Dt.shadow = ut.castShadow, ut.castShadow && (zt = ut.shadow, Dt.shadowBias = zt.bias, Dt.shadowRadius = zt.radius, Dt.shadowMapSize = zt.mapSize), te.spotShadowMap[Ue] = Tt, te.spotShadowMatrix[Ue] = ut.shadow.matrix, te.spot[Ue] = Dt, Ue++;
            else if (ut.isRectAreaLight)
              (Dt = Z.get(ut)).color.copy(Gt).multiplyScalar(Ht), Dt.position.setFromMatrixPosition(ut.matrixWorld), Dt.position.applyMatrix4(it), Ae.identity(), se.copy(ut.matrixWorld), se.premultiply(it), Ae.extractRotation(se), Dt.halfWidth.set(0.5 * ut.width, 0, 0), Dt.halfHeight.set(0, 0.5 * ut.height, 0), Dt.halfWidth.applyMatrix4(Ae), Dt.halfHeight.applyMatrix4(Ae), te.rectArea[Je] = Dt, Je++;
            else if (ut.isPointLight)
              (Dt = Z.get(ut)).position.setFromMatrixPosition(ut.matrixWorld), Dt.position.applyMatrix4(it), Dt.color.copy(ut.color).multiplyScalar(ut.intensity), Dt.distance = ut.distance, Dt.decay = ut.distance === 0 ? 0 : ut.decay, Dt.shadow = ut.castShadow, ut.castShadow && (zt = ut.shadow, Dt.shadowBias = zt.bias, Dt.shadowRadius = zt.radius, Dt.shadowMapSize = zt.mapSize, Dt.shadowCameraNear = zt.camera.near, Dt.shadowCameraFar = zt.camera.far), te.pointShadowMap[Qe] = Tt, te.pointShadowMatrix[Qe] = ut.shadow.matrix, te.point[Qe] = Dt, Qe++;
            else if (ut.isHemisphereLight) {
              var Dt;
              (Dt = Z.get(ut)).direction.setFromMatrixPosition(ut.matrixWorld), Dt.direction.transformDirection(it), Dt.direction.normalize(), Dt.skyColor.copy(ut.color).multiplyScalar(Ht), Dt.groundColor.copy(ut.groundColor).multiplyScalar(Ht), te.hemi[rt] = Dt, rt++;
            }
          }
          te.ambient[0] = ve, te.ambient[1] = xe, te.ambient[2] = Me, te.directional.length = Ne, te.spot.length = Ue, te.rectArea.length = Je, te.point.length = Qe, te.hemi.length = rt, te.hash.stateID = te.id, te.hash.directionalLength = Ne, te.hash.pointLength = Qe, te.hash.spotLength = Ue, te.hash.rectAreaLength = Je, te.hash.hemiLength = rt, te.hash.shadowsLength = fe.length;
        }, state: te };
      }
      function Au() {
        var Z = new Cl(), te = [], oe = [];
        return { init: function() {
          te.length = 0, oe.length = 0;
        }, state: { lightsArray: te, shadowsArray: oe, lights: Z }, setupLights: function(se) {
          Z.setup(te, oe, se);
        }, pushLight: function(se) {
          te.push(se);
        }, pushShadow: function(se) {
          oe.push(se);
        } };
      }
      function ga(Z) {
        Un.call(this), this.type = "MeshDepthMaterial", this.depthPacking = Ca, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.setValues(Z);
      }
      function ma(Z) {
        Un.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new Bt(), this.nearDistance = 1, this.farDistance = 1e3, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.lights = !1, this.setValues(Z);
      }
      function uu(Z, te, oe) {
        for (var se = new Za(), Ae = new yn(), ue = new Qr(), fe = new Qr(oe, oe), pe = new Bt(), ve = new Bt(), xe = 1, Me = 2, Ne = 1 + (xe | Me), Qe = new Array(Ne), Ue = new Array(Ne), Je = {}, rt = { 0: Se, 1: He, 2: Ge }, it = [new Bt(1, 0, 0), new Bt(-1, 0, 0), new Bt(0, 0, 1), new Bt(0, 0, -1), new Bt(0, 1, 0), new Bt(0, -1, 0)], ft = [new Bt(0, 1, 0), new Bt(0, 1, 0), new Bt(0, 1, 0), new Bt(0, 1, 0), new Bt(0, 0, 1), new Bt(0, 0, -1)], vt = [new Kn(), new Kn(), new Kn(), new Kn(), new Kn(), new Kn()], ut = 0; ut !== Ne; ++ut) {
          var Gt = (ut & xe) != 0, Ht = (ut & Me) != 0, pt = new ga({ depthPacking: ia, morphTargets: Gt, skinning: Ht });
          Qe[ut] = pt;
          var Tt = new ma({ morphTargets: Gt, skinning: Ht });
          Ue[ut] = Tt;
        }
        var zt = this;
        function Dt(Lt, lr, gr, xr, vr, Dr) {
          var Or = Lt.geometry, yr = null, Nr = Qe, pr = Lt.customDepthMaterial;
          if (gr && (Nr = Ue, pr = Lt.customDistanceMaterial), pr)
            yr = pr;
          else {
            var tn = !1;
            lr.morphTargets && (Or && Or.isBufferGeometry ? tn = Or.morphAttributes && Or.morphAttributes.position && Or.morphAttributes.position.length > 0 : Or && Or.isGeometry && (tn = Or.morphTargets && Or.morphTargets.length > 0)), Lt.isSkinnedMesh && lr.skinning === !1 && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", Lt);
            var Ur = Lt.isSkinnedMesh && lr.skinning, mn = 0;
            tn && (mn |= xe), Ur && (mn |= Me), yr = Nr[mn];
          }
          if (Z.localClippingEnabled && lr.clipShadows === !0 && lr.clippingPlanes.length !== 0) {
            var Qn = yr.uuid, mi = lr.uuid, Fi = Je[Qn];
            Fi === void 0 && (Fi = {}, Je[Qn] = Fi);
            var ci = Fi[mi];
            ci === void 0 && (ci = yr.clone(), Fi[mi] = ci), yr = ci;
          }
          return yr.visible = lr.visible, yr.wireframe = lr.wireframe, yr.side = lr.shadowSide != null ? lr.shadowSide : rt[lr.side], yr.clipShadows = lr.clipShadows, yr.clippingPlanes = lr.clippingPlanes, yr.clipIntersection = lr.clipIntersection, yr.wireframeLinewidth = lr.wireframeLinewidth, yr.linewidth = lr.linewidth, gr && yr.isMeshDistanceMaterial && (yr.referencePosition.copy(xr), yr.nearDistance = vr, yr.farDistance = Dr), yr;
        }
        function or(Lt, lr, gr, xr) {
          if (Lt.visible !== !1) {
            if (Lt.layers.test(lr.layers) && (Lt.isMesh || Lt.isLine || Lt.isPoints) && Lt.castShadow && (!Lt.frustumCulled || se.intersectsObject(Lt))) {
              Lt.modelViewMatrix.multiplyMatrices(gr.matrixWorldInverse, Lt.matrixWorld);
              var vr = te.update(Lt), Dr = Lt.material;
              if (Array.isArray(Dr))
                for (var Or = vr.groups, yr = 0, Nr = Or.length; yr < Nr; yr++) {
                  var pr = Or[yr], tn = Dr[pr.materialIndex];
                  if (tn && tn.visible) {
                    var Ur = Dt(Lt, tn, xr, ve, gr.near, gr.far);
                    Z.renderBufferDirect(gr, null, vr, Ur, Lt, pr);
                  }
                }
              else
                Dr.visible && (Ur = Dt(Lt, Dr, xr, ve, gr.near, gr.far), Z.renderBufferDirect(gr, null, vr, Ur, Lt, null));
            }
            for (var mn = Lt.children, Qn = 0, mi = mn.length; Qn < mi; Qn++)
              or(mn[Qn], lr, gr, xr);
          }
        }
        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = we, this.render = function(Lt, lr, gr) {
          if (zt.enabled !== !1 && (zt.autoUpdate !== !1 || zt.needsUpdate !== !1) && Lt.length !== 0) {
            var xr, vr = Z.context, Dr = Z.state;
            Dr.disable(vr.BLEND), Dr.buffers.color.setClear(1, 1, 1, 1), Dr.buffers.depth.setTest(!0), Dr.setScissorTest(!1);
            for (var Or = 0, yr = Lt.length; Or < yr; Or++) {
              var Nr = Lt[Or], pr = Nr.shadow, tn = Nr && Nr.isPointLight;
              if (pr !== void 0) {
                var Ur = pr.camera;
                if (ue.copy(pr.mapSize), ue.min(fe), tn) {
                  var mn = ue.x, Qn = ue.y;
                  vt[0].set(2 * mn, Qn, mn, Qn), vt[1].set(0, Qn, mn, Qn), vt[2].set(3 * mn, Qn, mn, Qn), vt[3].set(mn, Qn, mn, Qn), vt[4].set(3 * mn, 0, mn, Qn), vt[5].set(mn, 0, mn, Qn), ue.x *= 4, ue.y *= 2;
                }
                if (pr.map === null) {
                  var mi = { minFilter: Tr, magFilter: Tr, format: sr };
                  pr.map = new jo(ue.x, ue.y, mi), pr.map.texture.name = Nr.name + ".shadowMap", Ur.updateProjectionMatrix();
                }
                pr.isSpotLightShadow && pr.update(Nr);
                var Fi = pr.map, ci = pr.matrix;
                ve.setFromMatrixPosition(Nr.matrixWorld), Ur.position.copy(ve), tn ? (xr = 6, ci.makeTranslation(-ve.x, -ve.y, -ve.z)) : (xr = 1, pe.setFromMatrixPosition(Nr.target.matrixWorld), Ur.lookAt(pe), Ur.updateMatrixWorld(), ci.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), ci.multiply(Ur.projectionMatrix), ci.multiply(Ur.matrixWorldInverse)), Z.setRenderTarget(Fi), Z.clear();
                for (var Hr = 0; Hr < xr; Hr++) {
                  if (tn) {
                    pe.copy(Ur.position), pe.add(it[Hr]), Ur.up.copy(ft[Hr]), Ur.lookAt(pe), Ur.updateMatrixWorld();
                    var Wn = vt[Hr];
                    Dr.viewport(Wn);
                  }
                  Ae.multiplyMatrices(Ur.projectionMatrix, Ur.matrixWorldInverse), se.setFromMatrix(Ae), or(lr, gr, Ur, tn);
                }
              } else
                console.warn("THREE.WebGLShadowMap:", Nr, "has no shadow.");
            }
            zt.needsUpdate = !1;
          }
        };
      }
      function Il(Z, te, oe, se, Ae, ue, fe) {
        var pe, ve = {};
        function xe(pt, Tt) {
          if (pt.width > Tt || pt.height > Tt) {
            if ("data" in pt)
              return void console.warn("THREE.WebGLRenderer: image in DataTexture is too big (" + pt.width + "x" + pt.height + ").");
            var zt = Tt / Math.max(pt.width, pt.height), Dt = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            return Dt.width = Math.floor(pt.width * zt), Dt.height = Math.floor(pt.height * zt), Dt.getContext("2d").drawImage(pt, 0, 0, pt.width, pt.height, 0, 0, Dt.width, Dt.height), console.warn("THREE.WebGLRenderer: image is too big (" + pt.width + "x" + pt.height + "). Resized to " + Dt.width + "x" + Dt.height), Dt;
          }
          return pt;
        }
        function Me(pt) {
          return Mn.isPowerOfTwo(pt.width) && Mn.isPowerOfTwo(pt.height);
        }
        function Ne(pt, Tt) {
          return pt.generateMipmaps && Tt && pt.minFilter !== Tr && pt.minFilter !== un;
        }
        function Qe(pt, Tt, zt, Dt) {
          Z.generateMipmap(pt), se.get(Tt).__maxMipLevel = Math.log(Math.max(zt, Dt)) * Math.LOG2E;
        }
        function Ue(pt, Tt) {
          if (!Ae.isWebGL2)
            return pt;
          if (pt === Z.RGB) {
            if (Tt === Z.FLOAT)
              return Z.RGB32F;
            if (Tt === Z.HALF_FLOAT)
              return Z.RGB16F;
            if (Tt === Z.UNSIGNED_BYTE)
              return Z.RGB8;
          }
          if (pt === Z.RGBA) {
            if (Tt === Z.FLOAT)
              return Z.RGBA32F;
            if (Tt === Z.HALF_FLOAT)
              return Z.RGBA16F;
            if (Tt === Z.UNSIGNED_BYTE)
              return Z.RGBA8;
          }
          return pt;
        }
        function Je(pt) {
          return pt === Tr || pt === cn || pt === oi ? Z.NEAREST : Z.LINEAR;
        }
        function rt(pt) {
          var Tt = pt.target;
          Tt.removeEventListener("dispose", rt), function(zt) {
            var Dt = se.get(zt);
            if (zt.image && Dt.__image__webglTextureCube)
              Z.deleteTexture(Dt.__image__webglTextureCube);
            else {
              if (Dt.__webglInit === void 0)
                return;
              Z.deleteTexture(Dt.__webglTexture);
            }
            se.remove(zt);
          }(Tt), Tt.isVideoTexture && delete ve[Tt.id], fe.memory.textures--;
        }
        function it(pt) {
          var Tt = pt.target;
          Tt.removeEventListener("dispose", it), function(zt) {
            var Dt = se.get(zt), or = se.get(zt.texture);
            if (!!zt) {
              if (or.__webglTexture !== void 0 && Z.deleteTexture(or.__webglTexture), zt.depthTexture && zt.depthTexture.dispose(), zt.isWebGLRenderTargetCube)
                for (var Lt = 0; Lt < 6; Lt++)
                  Z.deleteFramebuffer(Dt.__webglFramebuffer[Lt]), Dt.__webglDepthbuffer && Z.deleteRenderbuffer(Dt.__webglDepthbuffer[Lt]);
              else
                Z.deleteFramebuffer(Dt.__webglFramebuffer), Dt.__webglDepthbuffer && Z.deleteRenderbuffer(Dt.__webglDepthbuffer);
              se.remove(zt.texture), se.remove(zt);
            }
          }(Tt), fe.memory.textures--;
        }
        function ft(pt, Tt) {
          var zt = se.get(pt);
          if (pt.isVideoTexture && function(or) {
            var Lt = or.id, lr = fe.render.frame;
            ve[Lt] !== lr && (ve[Lt] = lr, or.update());
          }(pt), pt.version > 0 && zt.__version !== pt.version) {
            var Dt = pt.image;
            if (Dt === void 0)
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else {
              if (Dt.complete !== !1)
                return void function(or, Lt, lr) {
                  or.__webglInit === void 0 && (or.__webglInit = !0, Lt.addEventListener("dispose", rt), or.__webglTexture = Z.createTexture(), fe.memory.textures++), oe.activeTexture(Z.TEXTURE0 + lr), oe.bindTexture(Z.TEXTURE_2D, or.__webglTexture), Z.pixelStorei(Z.UNPACK_FLIP_Y_WEBGL, Lt.flipY), Z.pixelStorei(Z.UNPACK_PREMULTIPLY_ALPHA_WEBGL, Lt.premultiplyAlpha), Z.pixelStorei(Z.UNPACK_ALIGNMENT, Lt.unpackAlignment);
                  var gr = xe(Lt.image, Ae.maxTextureSize);
                  (function(Ur) {
                    return !Ae.isWebGL2 && (Ur.wrapS !== _r || Ur.wrapT !== _r || Ur.minFilter !== Tr && Ur.minFilter !== un);
                  })(Lt) && Me(gr) === !1 && (gr = function(Ur) {
                    return Ur instanceof HTMLImageElement || Ur instanceof HTMLCanvasElement || Ur instanceof ImageBitmap ? (pe === void 0 && (pe = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), pe.width = Mn.floorPowerOfTwo(Ur.width), pe.height = Mn.floorPowerOfTwo(Ur.height), pe.getContext("2d").drawImage(Ur, 0, 0, pe.width, pe.height), console.warn("THREE.WebGLRenderer: image is not power of two (" + Ur.width + "x" + Ur.height + "). Resized to " + pe.width + "x" + pe.height), pe) : Ur;
                  }(gr));
                  var xr = Me(gr), vr = ue.convert(Lt.format), Dr = ue.convert(Lt.type), Or = Ue(vr, Dr);
                  vt(Z.TEXTURE_2D, Lt, xr);
                  var yr, Nr = Lt.mipmaps;
                  if (Lt.isDepthTexture) {
                    if (Or = Z.DEPTH_COMPONENT, Lt.type === Pn) {
                      if (!Ae.isWebGL2)
                        throw new Error("Float Depth Texture only supported in WebGL2.0");
                      Or = Z.DEPTH_COMPONENT32F;
                    } else
                      Ae.isWebGL2 && (Or = Z.DEPTH_COMPONENT16);
                    Lt.format === Tn && Or === Z.DEPTH_COMPONENT && Lt.type !== yi && Lt.type !== ki && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), Lt.type = yi, Dr = ue.convert(Lt.type)), Lt.format === _n && (Or = Z.DEPTH_STENCIL, Lt.type !== Ci && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), Lt.type = Ci, Dr = ue.convert(Lt.type))), oe.texImage2D(Z.TEXTURE_2D, 0, Or, gr.width, gr.height, 0, vr, Dr, null);
                  } else if (Lt.isDataTexture)
                    if (Nr.length > 0 && xr) {
                      for (var pr = 0, tn = Nr.length; pr < tn; pr++)
                        yr = Nr[pr], oe.texImage2D(Z.TEXTURE_2D, pr, Or, yr.width, yr.height, 0, vr, Dr, yr.data);
                      Lt.generateMipmaps = !1, or.__maxMipLevel = Nr.length - 1;
                    } else
                      oe.texImage2D(Z.TEXTURE_2D, 0, Or, gr.width, gr.height, 0, vr, Dr, gr.data), or.__maxMipLevel = 0;
                  else if (Lt.isCompressedTexture) {
                    for (var pr = 0, tn = Nr.length; pr < tn; pr++)
                      yr = Nr[pr], Lt.format !== sr && Lt.format !== Ft ? oe.getCompressedTextureFormats().indexOf(vr) > -1 ? oe.compressedTexImage2D(Z.TEXTURE_2D, pr, Or, yr.width, yr.height, 0, yr.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : oe.texImage2D(Z.TEXTURE_2D, pr, Or, yr.width, yr.height, 0, vr, Dr, yr.data);
                    or.__maxMipLevel = Nr.length - 1;
                  } else if (Nr.length > 0 && xr) {
                    for (var pr = 0, tn = Nr.length; pr < tn; pr++)
                      yr = Nr[pr], oe.texImage2D(Z.TEXTURE_2D, pr, Or, vr, Dr, yr);
                    Lt.generateMipmaps = !1, or.__maxMipLevel = Nr.length - 1;
                  } else
                    oe.texImage2D(Z.TEXTURE_2D, 0, Or, vr, Dr, gr), or.__maxMipLevel = 0;
                  Ne(Lt, xr) && Qe(Z.TEXTURE_2D, Lt, gr.width, gr.height), or.__version = Lt.version, Lt.onUpdate && Lt.onUpdate(Lt);
                }(zt, pt, Tt);
              console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            }
          }
          oe.activeTexture(Z.TEXTURE0 + Tt), oe.bindTexture(Z.TEXTURE_2D, zt.__webglTexture);
        }
        function vt(pt, Tt, zt) {
          var Dt;
          if (zt ? (Z.texParameteri(pt, Z.TEXTURE_WRAP_S, ue.convert(Tt.wrapS)), Z.texParameteri(pt, Z.TEXTURE_WRAP_T, ue.convert(Tt.wrapT)), Z.texParameteri(pt, Z.TEXTURE_MAG_FILTER, ue.convert(Tt.magFilter)), Z.texParameteri(pt, Z.TEXTURE_MIN_FILTER, ue.convert(Tt.minFilter))) : (Z.texParameteri(pt, Z.TEXTURE_WRAP_S, Z.CLAMP_TO_EDGE), Z.texParameteri(pt, Z.TEXTURE_WRAP_T, Z.CLAMP_TO_EDGE), Tt.wrapS === _r && Tt.wrapT === _r || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), Z.texParameteri(pt, Z.TEXTURE_MAG_FILTER, Je(Tt.magFilter)), Z.texParameteri(pt, Z.TEXTURE_MIN_FILTER, Je(Tt.minFilter)), Tt.minFilter !== Tr && Tt.minFilter !== un && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), Dt = te.get("EXT_texture_filter_anisotropic")) {
            if (Tt.type === Pn && te.get("OES_texture_float_linear") === null || Tt.type === ni && (Ae.isWebGL2 || te.get("OES_texture_half_float_linear")) === null)
              return;
            (Tt.anisotropy > 1 || se.get(Tt).__currentAnisotropy) && (Z.texParameterf(pt, Dt.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(Tt.anisotropy, Ae.getMaxAnisotropy())), se.get(Tt).__currentAnisotropy = Tt.anisotropy);
          }
        }
        function ut(pt, Tt, zt, Dt) {
          var or = ue.convert(Tt.texture.format), Lt = ue.convert(Tt.texture.type), lr = Ue(or, Lt);
          oe.texImage2D(Dt, 0, lr, Tt.width, Tt.height, 0, or, Lt, null), Z.bindFramebuffer(Z.FRAMEBUFFER, pt), Z.framebufferTexture2D(Z.FRAMEBUFFER, zt, Dt, se.get(Tt.texture).__webglTexture, 0), Z.bindFramebuffer(Z.FRAMEBUFFER, null);
        }
        function Gt(pt, Tt) {
          Z.bindRenderbuffer(Z.RENDERBUFFER, pt), Tt.depthBuffer && !Tt.stencilBuffer ? (Z.renderbufferStorage(Z.RENDERBUFFER, Z.DEPTH_COMPONENT16, Tt.width, Tt.height), Z.framebufferRenderbuffer(Z.FRAMEBUFFER, Z.DEPTH_ATTACHMENT, Z.RENDERBUFFER, pt)) : Tt.depthBuffer && Tt.stencilBuffer ? (Z.renderbufferStorage(Z.RENDERBUFFER, Z.DEPTH_STENCIL, Tt.width, Tt.height), Z.framebufferRenderbuffer(Z.FRAMEBUFFER, Z.DEPTH_STENCIL_ATTACHMENT, Z.RENDERBUFFER, pt)) : Z.renderbufferStorage(Z.RENDERBUFFER, Z.RGBA4, Tt.width, Tt.height), Z.bindRenderbuffer(Z.RENDERBUFFER, null);
        }
        function Ht(pt) {
          var Tt = se.get(pt), zt = pt.isWebGLRenderTargetCube === !0;
          if (pt.depthTexture) {
            if (zt)
              throw new Error("target.depthTexture not supported in Cube render targets");
            (function(or, Lt) {
              if (Lt && Lt.isWebGLRenderTargetCube)
                throw new Error("Depth Texture with cube render targets is not supported");
              if (Z.bindFramebuffer(Z.FRAMEBUFFER, or), !Lt.depthTexture || !Lt.depthTexture.isDepthTexture)
                throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
              se.get(Lt.depthTexture).__webglTexture && Lt.depthTexture.image.width === Lt.width && Lt.depthTexture.image.height === Lt.height || (Lt.depthTexture.image.width = Lt.width, Lt.depthTexture.image.height = Lt.height, Lt.depthTexture.needsUpdate = !0), ft(Lt.depthTexture, 0);
              var lr = se.get(Lt.depthTexture).__webglTexture;
              if (Lt.depthTexture.format === Tn)
                Z.framebufferTexture2D(Z.FRAMEBUFFER, Z.DEPTH_ATTACHMENT, Z.TEXTURE_2D, lr, 0);
              else {
                if (Lt.depthTexture.format !== _n)
                  throw new Error("Unknown depthTexture format");
                Z.framebufferTexture2D(Z.FRAMEBUFFER, Z.DEPTH_STENCIL_ATTACHMENT, Z.TEXTURE_2D, lr, 0);
              }
            })(Tt.__webglFramebuffer, pt);
          } else if (zt) {
            Tt.__webglDepthbuffer = [];
            for (var Dt = 0; Dt < 6; Dt++)
              Z.bindFramebuffer(Z.FRAMEBUFFER, Tt.__webglFramebuffer[Dt]), Tt.__webglDepthbuffer[Dt] = Z.createRenderbuffer(), Gt(Tt.__webglDepthbuffer[Dt], pt);
          } else
            Z.bindFramebuffer(Z.FRAMEBUFFER, Tt.__webglFramebuffer), Tt.__webglDepthbuffer = Z.createRenderbuffer(), Gt(Tt.__webglDepthbuffer, pt);
          Z.bindFramebuffer(Z.FRAMEBUFFER, null);
        }
        this.setTexture2D = ft, this.setTextureCube = function(pt, Tt) {
          var zt = se.get(pt);
          if (pt.image.length === 6)
            if (pt.version > 0 && zt.__version !== pt.version) {
              zt.__image__webglTextureCube || (pt.addEventListener("dispose", rt), zt.__image__webglTextureCube = Z.createTexture(), fe.memory.textures++), oe.activeTexture(Z.TEXTURE0 + Tt), oe.bindTexture(Z.TEXTURE_CUBE_MAP, zt.__image__webglTextureCube), Z.pixelStorei(Z.UNPACK_FLIP_Y_WEBGL, pt.flipY);
              for (var Dt = pt && pt.isCompressedTexture, or = pt.image[0] && pt.image[0].isDataTexture, Lt = [], lr = 0; lr < 6; lr++)
                Lt[lr] = Dt || or ? or ? pt.image[lr].image : pt.image[lr] : xe(pt.image[lr], Ae.maxCubemapSize);
              var gr = Lt[0], xr = Me(gr), vr = ue.convert(pt.format), Dr = ue.convert(pt.type), Or = Ue(vr, Dr);
              for (vt(Z.TEXTURE_CUBE_MAP, pt, xr), lr = 0; lr < 6; lr++)
                if (Dt)
                  for (var yr, Nr = Lt[lr].mipmaps, pr = 0, tn = Nr.length; pr < tn; pr++)
                    yr = Nr[pr], pt.format !== sr && pt.format !== Ft ? oe.getCompressedTextureFormats().indexOf(vr) > -1 ? oe.compressedTexImage2D(Z.TEXTURE_CUBE_MAP_POSITIVE_X + lr, pr, Or, yr.width, yr.height, 0, yr.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : oe.texImage2D(Z.TEXTURE_CUBE_MAP_POSITIVE_X + lr, pr, Or, yr.width, yr.height, 0, vr, Dr, yr.data);
                else
                  or ? oe.texImage2D(Z.TEXTURE_CUBE_MAP_POSITIVE_X + lr, 0, Or, Lt[lr].width, Lt[lr].height, 0, vr, Dr, Lt[lr].data) : oe.texImage2D(Z.TEXTURE_CUBE_MAP_POSITIVE_X + lr, 0, Or, vr, Dr, Lt[lr]);
              zt.__maxMipLevel = Dt ? Nr.length - 1 : 0, Ne(pt, xr) && Qe(Z.TEXTURE_CUBE_MAP, pt, gr.width, gr.height), zt.__version = pt.version, pt.onUpdate && pt.onUpdate(pt);
            } else
              oe.activeTexture(Z.TEXTURE0 + Tt), oe.bindTexture(Z.TEXTURE_CUBE_MAP, zt.__image__webglTextureCube);
        }, this.setTextureCubeDynamic = function(pt, Tt) {
          oe.activeTexture(Z.TEXTURE0 + Tt), oe.bindTexture(Z.TEXTURE_CUBE_MAP, se.get(pt).__webglTexture);
        }, this.setupRenderTarget = function(pt) {
          var Tt = se.get(pt), zt = se.get(pt.texture);
          pt.addEventListener("dispose", it), zt.__webglTexture = Z.createTexture(), fe.memory.textures++;
          var Dt = pt.isWebGLRenderTargetCube === !0, or = Me(pt);
          if (Dt) {
            Tt.__webglFramebuffer = [];
            for (var Lt = 0; Lt < 6; Lt++)
              Tt.__webglFramebuffer[Lt] = Z.createFramebuffer();
          } else
            Tt.__webglFramebuffer = Z.createFramebuffer();
          if (Dt) {
            for (oe.bindTexture(Z.TEXTURE_CUBE_MAP, zt.__webglTexture), vt(Z.TEXTURE_CUBE_MAP, pt.texture, or), Lt = 0; Lt < 6; Lt++)
              ut(Tt.__webglFramebuffer[Lt], pt, Z.COLOR_ATTACHMENT0, Z.TEXTURE_CUBE_MAP_POSITIVE_X + Lt);
            Ne(pt.texture, or) && Qe(Z.TEXTURE_CUBE_MAP, pt.texture, pt.width, pt.height), oe.bindTexture(Z.TEXTURE_CUBE_MAP, null);
          } else
            oe.bindTexture(Z.TEXTURE_2D, zt.__webglTexture), vt(Z.TEXTURE_2D, pt.texture, or), ut(Tt.__webglFramebuffer, pt, Z.COLOR_ATTACHMENT0, Z.TEXTURE_2D), Ne(pt.texture, or) && Qe(Z.TEXTURE_2D, pt.texture, pt.width, pt.height), oe.bindTexture(Z.TEXTURE_2D, null);
          pt.depthBuffer && Ht(pt);
        }, this.updateRenderTargetMipmap = function(pt) {
          var Tt = pt.texture;
          if (Ne(Tt, Me(pt))) {
            var zt = pt.isWebGLRenderTargetCube ? Z.TEXTURE_CUBE_MAP : Z.TEXTURE_2D, Dt = se.get(Tt).__webglTexture;
            oe.bindTexture(zt, Dt), Qe(zt, Tt, pt.width, pt.height), oe.bindTexture(zt, null);
          }
        };
      }
      function lu(Z, te, oe) {
        return { convert: function(se) {
          var Ae;
          if (se === mr)
            return Z.REPEAT;
          if (se === _r)
            return Z.CLAMP_TO_EDGE;
          if (se === Br)
            return Z.MIRRORED_REPEAT;
          if (se === Tr)
            return Z.NEAREST;
          if (se === cn)
            return Z.NEAREST_MIPMAP_NEAREST;
          if (se === oi)
            return Z.NEAREST_MIPMAP_LINEAR;
          if (se === un)
            return Z.LINEAR;
          if (se === Yn)
            return Z.LINEAR_MIPMAP_NEAREST;
          if (se === Vn)
            return Z.LINEAR_MIPMAP_LINEAR;
          if (se === Dn)
            return Z.UNSIGNED_BYTE;
          if (se === Xn)
            return Z.UNSIGNED_SHORT_4_4_4_4;
          if (se === fi)
            return Z.UNSIGNED_SHORT_5_5_5_1;
          if (se === Bi)
            return Z.UNSIGNED_SHORT_5_6_5;
          if (se === Ln)
            return Z.BYTE;
          if (se === di)
            return Z.SHORT;
          if (se === yi)
            return Z.UNSIGNED_SHORT;
          if (se === Zi)
            return Z.INT;
          if (se === ki)
            return Z.UNSIGNED_INT;
          if (se === Pn)
            return Z.FLOAT;
          if (se === ni) {
            if (oe.isWebGL2)
              return Z.HALF_FLOAT;
            if ((Ae = te.get("OES_texture_half_float")) !== null)
              return Ae.HALF_FLOAT_OES;
          }
          if (se === Ii)
            return Z.ALPHA;
          if (se === Ft)
            return Z.RGB;
          if (se === sr)
            return Z.RGBA;
          if (se === Gr)
            return Z.LUMINANCE;
          if (se === zr)
            return Z.LUMINANCE_ALPHA;
          if (se === Tn)
            return Z.DEPTH_COMPONENT;
          if (se === _n)
            return Z.DEPTH_STENCIL;
          if (se === Qt)
            return Z.FUNC_ADD;
          if (se === Yt)
            return Z.FUNC_SUBTRACT;
          if (se === jt)
            return Z.FUNC_REVERSE_SUBTRACT;
          if (se === st)
            return Z.ZERO;
          if (se === at)
            return Z.ONE;
          if (se === wt)
            return Z.SRC_COLOR;
          if (se === Ut)
            return Z.ONE_MINUS_SRC_COLOR;
          if (se === $e)
            return Z.SRC_ALPHA;
          if (se === ir)
            return Z.ONE_MINUS_SRC_ALPHA;
          if (se === tr)
            return Z.DST_ALPHA;
          if (se === ar)
            return Z.ONE_MINUS_DST_ALPHA;
          if (se === ht)
            return Z.DST_COLOR;
          if (se === qt)
            return Z.ONE_MINUS_DST_COLOR;
          if (se === Xe)
            return Z.SRC_ALPHA_SATURATE;
          if ((se === vn || se === kn || se === Zn || se === An) && (Ae = te.get("WEBGL_compressed_texture_s3tc")) !== null) {
            if (se === vn)
              return Ae.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (se === kn)
              return Ae.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (se === Zn)
              return Ae.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (se === An)
              return Ae.COMPRESSED_RGBA_S3TC_DXT5_EXT;
          }
          if ((se === nn || se === Kr || se === xt || se === Sr) && (Ae = te.get("WEBGL_compressed_texture_pvrtc")) !== null) {
            if (se === nn)
              return Ae.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (se === Kr)
              return Ae.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (se === xt)
              return Ae.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (se === Sr)
              return Ae.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
          }
          if (se === Xt && (Ae = te.get("WEBGL_compressed_texture_etc1")) !== null)
            return Ae.COMPRESSED_RGB_ETC1_WEBGL;
          if ((se === Vr || se === qe || se === Ke || se === At || se === gt || se === dt || se === er || se === dr || se === ur || se === Rr || se === Jr || se === Mr || se === Zr || se === Rn) && (Ae = te.get("WEBGL_compressed_texture_astc")) !== null)
            return se;
          if (se === $t || se === Wt) {
            if (oe.isWebGL2) {
              if (se === $t)
                return Z.MIN;
              if (se === Wt)
                return Z.MAX;
            }
            if ((Ae = te.get("EXT_blend_minmax")) !== null) {
              if (se === $t)
                return Ae.MIN_EXT;
              if (se === Wt)
                return Ae.MAX_EXT;
            }
          }
          if (se === Ci) {
            if (oe.isWebGL2)
              return Z.UNSIGNED_INT_24_8;
            if ((Ae = te.get("WEBGL_depth_texture")) !== null)
              return Ae.UNSIGNED_INT_24_8_WEBGL;
          }
          return 0;
        } };
      }
      function rs() {
        Cr.call(this), this.type = "Group";
      }
      function Si(Z, te, oe, se) {
        Jn.call(this), this.type = "PerspectiveCamera", this.fov = Z !== void 0 ? Z : 50, this.zoom = 1, this.near = oe !== void 0 ? oe : 0.1, this.far = se !== void 0 ? se : 2e3, this.focus = 10, this.aspect = te !== void 0 ? te : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
      }
      function Us(Z) {
        Si.call(this), this.cameras = Z || [];
      }
      function du(Z) {
        var te = this, oe = null, se = null, Ae = null, ue = [], fe = new yn(), pe = new yn();
        typeof window < "u" && "VRFrameData" in window && (se = new window.VRFrameData(), window.addEventListener("vrdisplaypresentchange", ft, !1));
        var ve = new yn(), xe = new hi(), Me = new Bt(), Ne = new Si();
        Ne.bounds = new Kn(0, 0, 0.5, 1), Ne.layers.enable(1);
        var Qe = new Si();
        Qe.bounds = new Kn(0.5, 0, 0.5, 1), Qe.layers.enable(2);
        var Ue, Je, rt = new Us([Ne, Qe]);
        function it() {
          return oe !== null && oe.isPresenting === !0;
        }
        function ft() {
          if (it()) {
            var Ht = oe.getEyeParameters("left"), pt = Ht.renderWidth, Tt = Ht.renderHeight;
            Je = Z.getPixelRatio(), Ue = Z.getSize(), Z.setDrawingBufferSize(2 * pt, Tt, 1), Gt.start();
          } else
            te.enabled && (Z.setDrawingBufferSize(Ue.width, Ue.height, Je), Gt.stop());
        }
        rt.layers.enable(1), rt.layers.enable(2);
        var vt = [];
        function ut(Ht) {
          for (var pt = navigator.getGamepads && navigator.getGamepads(), Tt = 0, zt = 0, Dt = pt.length; Tt < Dt; Tt++) {
            var or = pt[Tt];
            if (or && (or.id === "Daydream Controller" || or.id === "Gear VR Controller" || or.id === "Oculus Go Controller" || or.id === "OpenVR Gamepad" || or.id.startsWith("Oculus Touch") || or.id.startsWith("Spatial Controller"))) {
              if (zt === Ht)
                return or;
              zt++;
            }
          }
        }
        this.enabled = !1, this.userHeight = 1.6, this.getController = function(Ht) {
          var pt = ue[Ht];
          return pt === void 0 && ((pt = new rs()).matrixAutoUpdate = !1, pt.visible = !1, ue[Ht] = pt), pt;
        }, this.getDevice = function() {
          return oe;
        }, this.setDevice = function(Ht) {
          Ht !== void 0 && (oe = Ht), Gt.setContext(Ht);
        }, this.setPoseTarget = function(Ht) {
          Ht !== void 0 && (Ae = Ht);
        }, this.getCamera = function(Ht) {
          if (oe === null)
            return Ht.position.set(0, te.userHeight, 0), Ht;
          oe.depthNear = Ht.near, oe.depthFar = Ht.far, oe.getFrameData(se);
          var pt = oe.stageParameters;
          pt ? fe.fromArray(pt.sittingToStandingTransform) : fe.makeTranslation(0, te.userHeight, 0);
          var Tt = se.pose, zt = Ae !== null ? Ae : Ht;
          if (zt.matrix.copy(fe), zt.matrix.decompose(zt.position, zt.quaternion, zt.scale), Tt.orientation !== null && (xe.fromArray(Tt.orientation), zt.quaternion.multiply(xe)), Tt.position !== null && (xe.setFromRotationMatrix(fe), Me.fromArray(Tt.position), Me.applyQuaternion(xe), zt.position.add(Me)), zt.updateMatrixWorld(), oe.isPresenting === !1)
            return Ht;
          Ne.near = Ht.near, Qe.near = Ht.near, Ne.far = Ht.far, Qe.far = Ht.far, rt.matrixWorld.copy(Ht.matrixWorld), rt.matrixWorldInverse.copy(Ht.matrixWorldInverse), Ne.matrixWorldInverse.fromArray(se.leftViewMatrix), Qe.matrixWorldInverse.fromArray(se.rightViewMatrix), pe.getInverse(fe), Ne.matrixWorldInverse.multiply(pe), Qe.matrixWorldInverse.multiply(pe);
          var Dt = zt.parent;
          Dt !== null && (ve.getInverse(Dt.matrixWorld), Ne.matrixWorldInverse.multiply(ve), Qe.matrixWorldInverse.multiply(ve)), Ne.matrixWorld.getInverse(Ne.matrixWorldInverse), Qe.matrixWorld.getInverse(Qe.matrixWorldInverse), Ne.projectionMatrix.fromArray(se.leftProjectionMatrix), Qe.projectionMatrix.fromArray(se.rightProjectionMatrix), rt.projectionMatrix.copy(Ne.projectionMatrix);
          var or = oe.getLayers();
          if (or.length) {
            var Lt = or[0];
            Lt.leftBounds !== null && Lt.leftBounds.length === 4 && Ne.bounds.fromArray(Lt.leftBounds), Lt.rightBounds !== null && Lt.rightBounds.length === 4 && Qe.bounds.fromArray(Lt.rightBounds);
          }
          return function() {
            for (var lr = 0; lr < ue.length; lr++) {
              var gr = ue[lr], xr = ut(lr);
              if (xr !== void 0 && xr.pose !== void 0) {
                if (xr.pose === null)
                  return;
                var vr = xr.pose;
                vr.hasPosition === !1 && gr.position.set(0.2, -0.6, -0.05), vr.position !== null && gr.position.fromArray(vr.position), vr.orientation !== null && gr.quaternion.fromArray(vr.orientation), gr.matrix.compose(gr.position, gr.quaternion, gr.scale), gr.matrix.premultiply(fe), gr.matrix.decompose(gr.position, gr.quaternion, gr.scale), gr.matrixWorldNeedsUpdate = !0, gr.visible = !0;
                var Dr = xr.id === "Daydream Controller" ? 0 : 1;
                vt[lr] !== xr.buttons[Dr].pressed && (vt[lr] = xr.buttons[Dr].pressed, vt[lr] === !0 ? gr.dispatchEvent({ type: "selectstart" }) : (gr.dispatchEvent({ type: "selectend" }), gr.dispatchEvent({ type: "select" })));
              } else
                gr.visible = !1;
            }
          }(), rt;
        }, this.getStandingMatrix = function() {
          return fe;
        }, this.isPresenting = it;
        var Gt = new cr();
        this.setAnimationLoop = function(Ht) {
          Gt.setAnimationLoop(Ht);
        }, this.submitFrame = function() {
          it() && oe.submitFrame();
        }, this.dispose = function() {
          typeof window < "u" && window.removeEventListener("vrdisplaypresentchange", ft);
        };
      }
      function AA(Z) {
        console.log("THREE.WebGLRenderer", le);
        var te = (Z = Z || {}).canvas !== void 0 ? Z.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), oe = Z.context !== void 0 ? Z.context : null, se = Z.alpha !== void 0 && Z.alpha, Ae = Z.depth === void 0 || Z.depth, ue = Z.stencil === void 0 || Z.stencil, fe = Z.antialias !== void 0 && Z.antialias, pe = Z.premultipliedAlpha === void 0 || Z.premultipliedAlpha, ve = Z.preserveDrawingBuffer !== void 0 && Z.preserveDrawingBuffer, xe = Z.powerPreference !== void 0 ? Z.powerPreference : "default", Me = null, Ne = null;
        this.domElement = te, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.physicallyCorrectLights = !1, this.toneMapping = kt, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
        var Qe, Ue, Je, rt, it, ft, vt, ut, Gt, Ht, pt, Tt, zt, Dt, or, Lt, lr, gr, xr = this, vr = !1, Dr = null, Or = null, yr = null, Nr = -1, pr = { geometry: null, program: null, wireframe: !1 }, tn = null, Ur = null, mn = new Kn(), Qn = new Kn(), mi = null, Fi = 0, ci = te.width, Hr = te.height, Wn = 1, Ti = new Kn(0, 0, ci, Hr), ro = new Kn(0, 0, ci, Hr), Ni = !1, co = new Za(), Oi = new function() {
          var Le = this, St = null, Rt = 0, nr = !1, fr = !1, en = new uo(), Er = new qi(), hr = { value: null, needsUpdate: !1 };
          function Lr() {
            hr.value !== St && (hr.value = St, hr.needsUpdate = Rt > 0), Le.numPlanes = Rt, Le.numIntersection = 0;
          }
          function wr(br, fn, hn, rn) {
            var kr = br !== null ? br.length : 0, ln = null;
            if (kr !== 0) {
              if (ln = hr.value, rn !== !0 || ln === null) {
                var Sn = hn + 4 * kr, En = fn.matrixWorldInverse;
                Er.getNormalMatrix(En), (ln === null || ln.length < Sn) && (ln = new Float32Array(Sn));
                for (var In = 0, $n = hn; In !== kr; ++In, $n += 4)
                  en.copy(br[In]).applyMatrix4(En, Er), en.normal.toArray(ln, $n), ln[$n + 3] = en.constant;
              }
              hr.value = ln, hr.needsUpdate = !0;
            }
            return Le.numPlanes = kr, ln;
          }
          this.uniform = hr, this.numPlanes = 0, this.numIntersection = 0, this.init = function(br, fn, hn) {
            var rn = br.length !== 0 || fn || Rt !== 0 || nr;
            return nr = fn, St = wr(br, hn, 0), Rt = br.length, rn;
          }, this.beginShadows = function() {
            fr = !0, wr(null);
          }, this.endShadows = function() {
            fr = !1, Lr();
          }, this.setState = function(br, fn, hn, rn, kr, ln) {
            if (!nr || br === null || br.length === 0 || fr && !hn)
              fr ? wr(null) : Lr();
            else {
              var Sn = fr ? 0 : Rt, En = 4 * Sn, In = kr.clippingState || null;
              hr.value = In, In = wr(br, rn, En, ln);
              for (var $n = 0; $n !== En; ++$n)
                In[$n] = St[$n];
              kr.clippingState = In, this.numIntersection = fn ? this.numPlanes : 0, this.numPlanes += Sn;
            }
          };
        }(), qo = !1, $o = !1, Vi = new yn(), Pi = new Bt();
        function Ba() {
          return Or === null ? Wn : 1;
        }
        try {
          var no = { alpha: se, depth: Ae, stencil: ue, antialias: fe, premultipliedAlpha: pe, preserveDrawingBuffer: ve, powerPreference: xe };
          if (te.addEventListener("webglcontextlost", ui, !1), te.addEventListener("webglcontextrestored", Ri, !1), (Qe = oe || te.getContext("webgl", no) || te.getContext("experimental-webgl", no)) === null)
            throw te.getContext("webgl") !== null ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
          Qe.getShaderPrecisionFormat === void 0 && (Qe.getShaderPrecisionFormat = function() {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
        } catch (Le) {
          console.error("THREE.WebGLRenderer: " + Le.message);
        }
        function Ro() {
          Ue = new function(Le) {
            var St = {};
            return { get: function(Rt) {
              if (St[Rt] !== void 0)
                return St[Rt];
              var nr;
              switch (Rt) {
                case "WEBGL_depth_texture":
                  nr = Le.getExtension("WEBGL_depth_texture") || Le.getExtension("MOZ_WEBGL_depth_texture") || Le.getExtension("WEBKIT_WEBGL_depth_texture");
                  break;
                case "EXT_texture_filter_anisotropic":
                  nr = Le.getExtension("EXT_texture_filter_anisotropic") || Le.getExtension("MOZ_EXT_texture_filter_anisotropic") || Le.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                  break;
                case "WEBGL_compressed_texture_s3tc":
                  nr = Le.getExtension("WEBGL_compressed_texture_s3tc") || Le.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || Le.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                  break;
                case "WEBGL_compressed_texture_pvrtc":
                  nr = Le.getExtension("WEBGL_compressed_texture_pvrtc") || Le.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                  break;
                default:
                  nr = Le.getExtension(Rt);
              }
              return nr === null && console.warn("THREE.WebGLRenderer: " + Rt + " extension not supported."), St[Rt] = nr, nr;
            } };
          }(Qe), (Je = new function(Le, St, Rt) {
            var nr;
            function fr($n) {
              if ($n === "highp") {
                if (Le.getShaderPrecisionFormat(Le.VERTEX_SHADER, Le.HIGH_FLOAT).precision > 0 && Le.getShaderPrecisionFormat(Le.FRAGMENT_SHADER, Le.HIGH_FLOAT).precision > 0)
                  return "highp";
                $n = "mediump";
              }
              return $n === "mediump" && Le.getShaderPrecisionFormat(Le.VERTEX_SHADER, Le.MEDIUM_FLOAT).precision > 0 && Le.getShaderPrecisionFormat(Le.FRAGMENT_SHADER, Le.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
            }
            var en = typeof WebGL2RenderingContext < "u" && Le instanceof WebGL2RenderingContext, Er = Rt.precision !== void 0 ? Rt.precision : "highp", hr = fr(Er);
            hr !== Er && (console.warn("THREE.WebGLRenderer:", Er, "not supported, using", hr, "instead."), Er = hr);
            var Lr = Rt.logarithmicDepthBuffer === !0, wr = Le.getParameter(Le.MAX_TEXTURE_IMAGE_UNITS), br = Le.getParameter(Le.MAX_VERTEX_TEXTURE_IMAGE_UNITS), fn = Le.getParameter(Le.MAX_TEXTURE_SIZE), hn = Le.getParameter(Le.MAX_CUBE_MAP_TEXTURE_SIZE), rn = Le.getParameter(Le.MAX_VERTEX_ATTRIBS), kr = Le.getParameter(Le.MAX_VERTEX_UNIFORM_VECTORS), ln = Le.getParameter(Le.MAX_VARYING_VECTORS), Sn = Le.getParameter(Le.MAX_FRAGMENT_UNIFORM_VECTORS), En = br > 0, In = en || !!St.get("OES_texture_float");
            return { isWebGL2: en, getMaxAnisotropy: function() {
              if (nr !== void 0)
                return nr;
              var $n = St.get("EXT_texture_filter_anisotropic");
              return nr = $n !== null ? Le.getParameter($n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;
            }, getMaxPrecision: fr, precision: Er, logarithmicDepthBuffer: Lr, maxTextures: wr, maxVertexTextures: br, maxTextureSize: fn, maxCubemapSize: hn, maxAttributes: rn, maxVertexUniforms: kr, maxVaryings: ln, maxFragmentUniforms: Sn, vertexTextures: En, floatFragmentTextures: In, floatVertexTextures: En && In };
          }(Qe, Ue, Z)).isWebGL2 || (Ue.get("WEBGL_depth_texture"), Ue.get("OES_texture_float"), Ue.get("OES_texture_half_float"), Ue.get("OES_texture_half_float_linear"), Ue.get("OES_standard_derivatives"), Ue.get("OES_element_index_uint"), Ue.get("ANGLE_instanced_arrays")), Ue.get("OES_texture_float_linear"), gr = new lu(Qe, Ue, Je), (rt = new function(Le, St, Rt, nr) {
            var fr = new function() {
              var Ar = !1, jn = new Kn(), ri = null, Di = new Kn(0, 0, 0, 0);
              return { setMask: function(Hn) {
                ri === Hn || Ar || (Le.colorMask(Hn, Hn, Hn, Hn), ri = Hn);
              }, setLocked: function(Hn) {
                Ar = Hn;
              }, setClear: function(Hn, Ki, bo, oo, Mc) {
                Mc === !0 && (Hn *= oo, Ki *= oo, bo *= oo), jn.set(Hn, Ki, bo, oo), Di.equals(jn) === !1 && (Le.clearColor(Hn, Ki, bo, oo), Di.copy(jn));
              }, reset: function() {
                Ar = !1, ri = null, Di.set(-1, 0, 0, 0);
              } };
            }(), en = new function() {
              var Ar = !1, jn = null, ri = null, Di = null;
              return { setTest: function(Hn) {
                Hn ? Hi(Le.DEPTH_TEST) : ta(Le.DEPTH_TEST);
              }, setMask: function(Hn) {
                jn === Hn || Ar || (Le.depthMask(Hn), jn = Hn);
              }, setFunc: function(Hn) {
                if (ri !== Hn) {
                  if (Hn)
                    switch (Hn) {
                      case nt:
                        Le.depthFunc(Le.NEVER);
                        break;
                      case je:
                        Le.depthFunc(Le.ALWAYS);
                        break;
                      case It:
                        Le.depthFunc(Le.LESS);
                        break;
                      case lt:
                        Le.depthFunc(Le.LEQUAL);
                        break;
                      case Ye:
                        Le.depthFunc(Le.EQUAL);
                        break;
                      case _e:
                        Le.depthFunc(Le.GEQUAL);
                        break;
                      case Ie:
                        Le.depthFunc(Le.GREATER);
                        break;
                      case Ce:
                        Le.depthFunc(Le.NOTEQUAL);
                        break;
                      default:
                        Le.depthFunc(Le.LEQUAL);
                    }
                  else
                    Le.depthFunc(Le.LEQUAL);
                  ri = Hn;
                }
              }, setLocked: function(Hn) {
                Ar = Hn;
              }, setClear: function(Hn) {
                Di !== Hn && (Le.clearDepth(Hn), Di = Hn);
              }, reset: function() {
                Ar = !1, jn = null, ri = null, Di = null;
              } };
            }(), Er = new function() {
              var Ar = !1, jn = null, ri = null, Di = null, Hn = null, Ki = null, bo = null, oo = null, Mc = null;
              return { setTest: function(Gi) {
                Gi ? Hi(Le.STENCIL_TEST) : ta(Le.STENCIL_TEST);
              }, setMask: function(Gi) {
                jn === Gi || Ar || (Le.stencilMask(Gi), jn = Gi);
              }, setFunc: function(Gi, Ja, Wa) {
                ri === Gi && Di === Ja && Hn === Wa || (Le.stencilFunc(Gi, Ja, Wa), ri = Gi, Di = Ja, Hn = Wa);
              }, setOp: function(Gi, Ja, Wa) {
                Ki === Gi && bo === Ja && oo === Wa || (Le.stencilOp(Gi, Ja, Wa), Ki = Gi, bo = Ja, oo = Wa);
              }, setLocked: function(Gi) {
                Ar = Gi;
              }, setClear: function(Gi) {
                Mc !== Gi && (Le.clearStencil(Gi), Mc = Gi);
              }, reset: function() {
                Ar = !1, jn = null, ri = null, Di = null, Hn = null, Ki = null, bo = null, oo = null, Mc = null;
              } };
            }(), hr = Le.getParameter(Le.MAX_VERTEX_ATTRIBS), Lr = new Uint8Array(hr), wr = new Uint8Array(hr), br = new Uint8Array(hr), fn = {}, hn = null, rn = null, kr = null, ln = null, Sn = null, En = null, In = null, $n = null, _i = null, $r = !1, Fr = null, ea = null, Ms = null, Wi = null, Mo = null, La = Le.getParameter(Le.MAX_COMBINED_TEXTURE_IMAGE_UNITS), la = !1, va = 0, io = Le.getParameter(Le.VERSION);
            io.indexOf("WebGL") !== -1 ? (va = parseFloat(/^WebGL\ ([0-9])/.exec(io)[1]), la = va >= 1) : io.indexOf("OpenGL ES") !== -1 && (va = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(io)[1]), la = va >= 2);
            var Ui = null, Ns = {}, Sc = new Kn(), za = new Kn();
            function Tc(Ar, jn, ri) {
              var Di = new Uint8Array(4), Hn = Le.createTexture();
              Le.bindTexture(Ar, Hn), Le.texParameteri(Ar, Le.TEXTURE_MIN_FILTER, Le.NEAREST), Le.texParameteri(Ar, Le.TEXTURE_MAG_FILTER, Le.NEAREST);
              for (var Ki = 0; Ki < ri; Ki++)
                Le.texImage2D(jn + Ki, 0, Le.RGBA, 1, 1, 0, Le.RGBA, Le.UNSIGNED_BYTE, Di);
              return Hn;
            }
            var ks = {};
            function Rc(Ar, jn) {
              Lr[Ar] = 1, wr[Ar] === 0 && (Le.enableVertexAttribArray(Ar), wr[Ar] = 1), br[Ar] !== jn && ((nr.isWebGL2 ? Le : St.get("ANGLE_instanced_arrays"))[nr.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](Ar, jn), br[Ar] = jn);
            }
            function Hi(Ar) {
              fn[Ar] !== !0 && (Le.enable(Ar), fn[Ar] = !0);
            }
            function ta(Ar) {
              fn[Ar] !== !1 && (Le.disable(Ar), fn[Ar] = !1);
            }
            function Fs(Ar, jn, ri, Di, Hn, Ki, bo, oo) {
              if (Ar !== Nt ? Hi(Le.BLEND) : ta(Le.BLEND), Ar !== yt) {
                if (Ar !== kr || oo !== $r)
                  switch (Ar) {
                    case mt:
                      oo ? (Le.blendEquationSeparate(Le.FUNC_ADD, Le.FUNC_ADD), Le.blendFuncSeparate(Le.ONE, Le.ONE, Le.ONE, Le.ONE)) : (Le.blendEquation(Le.FUNC_ADD), Le.blendFunc(Le.SRC_ALPHA, Le.ONE));
                      break;
                    case Mt:
                      oo ? (Le.blendEquationSeparate(Le.FUNC_ADD, Le.FUNC_ADD), Le.blendFuncSeparate(Le.ZERO, Le.ZERO, Le.ONE_MINUS_SRC_COLOR, Le.ONE_MINUS_SRC_ALPHA)) : (Le.blendEquation(Le.FUNC_ADD), Le.blendFunc(Le.ZERO, Le.ONE_MINUS_SRC_COLOR));
                      break;
                    case Ot:
                      oo ? (Le.blendEquationSeparate(Le.FUNC_ADD, Le.FUNC_ADD), Le.blendFuncSeparate(Le.ZERO, Le.SRC_COLOR, Le.ZERO, Le.SRC_ALPHA)) : (Le.blendEquation(Le.FUNC_ADD), Le.blendFunc(Le.ZERO, Le.SRC_COLOR));
                      break;
                    default:
                      oo ? (Le.blendEquationSeparate(Le.FUNC_ADD, Le.FUNC_ADD), Le.blendFuncSeparate(Le.ONE, Le.ONE_MINUS_SRC_ALPHA, Le.ONE, Le.ONE_MINUS_SRC_ALPHA)) : (Le.blendEquationSeparate(Le.FUNC_ADD, Le.FUNC_ADD), Le.blendFuncSeparate(Le.SRC_ALPHA, Le.ONE_MINUS_SRC_ALPHA, Le.ONE, Le.ONE_MINUS_SRC_ALPHA));
                  }
                ln = null, Sn = null, En = null, In = null, $n = null, _i = null;
              } else
                Hn = Hn || jn, Ki = Ki || ri, bo = bo || Di, jn === ln && Hn === In || (Le.blendEquationSeparate(Rt.convert(jn), Rt.convert(Hn)), ln = jn, In = Hn), ri === Sn && Di === En && Ki === $n && bo === _i || (Le.blendFuncSeparate(Rt.convert(ri), Rt.convert(Di), Rt.convert(Ki), Rt.convert(bo)), Sn = ri, En = Di, $n = Ki, _i = bo);
              kr = Ar, $r = oo;
            }
            function ra(Ar) {
              Fr !== Ar && (Ar ? Le.frontFace(Le.CW) : Le.frontFace(Le.CCW), Fr = Ar);
            }
            function Du(Ar) {
              Ar !== ye ? (Hi(Le.CULL_FACE), Ar !== ea && (Ar === he ? Le.cullFace(Le.BACK) : Ar === Be ? Le.cullFace(Le.FRONT) : Le.cullFace(Le.FRONT_AND_BACK))) : ta(Le.CULL_FACE), ea = Ar;
            }
            function qu(Ar, jn, ri) {
              Ar ? (Hi(Le.POLYGON_OFFSET_FILL), Wi === jn && Mo === ri || (Le.polygonOffset(jn, ri), Wi = jn, Mo = ri)) : ta(Le.POLYGON_OFFSET_FILL);
            }
            function $u(Ar) {
              Ar === void 0 && (Ar = Le.TEXTURE0 + La - 1), Ui !== Ar && (Le.activeTexture(Ar), Ui = Ar);
            }
            return ks[Le.TEXTURE_2D] = Tc(Le.TEXTURE_2D, Le.TEXTURE_2D, 1), ks[Le.TEXTURE_CUBE_MAP] = Tc(Le.TEXTURE_CUBE_MAP, Le.TEXTURE_CUBE_MAP_POSITIVE_X, 6), fr.setClear(0, 0, 0, 1), en.setClear(1), Er.setClear(0), Hi(Le.DEPTH_TEST), en.setFunc(lt), ra(!1), Du(he), Hi(Le.CULL_FACE), Hi(Le.BLEND), Fs(et), { buffers: { color: fr, depth: en, stencil: Er }, initAttributes: function() {
              for (var Ar = 0, jn = Lr.length; Ar < jn; Ar++)
                Lr[Ar] = 0;
            }, enableAttribute: function(Ar) {
              Rc(Ar, 0);
            }, enableAttributeAndDivisor: Rc, disableUnusedAttributes: function() {
              for (var Ar = 0, jn = wr.length; Ar !== jn; ++Ar)
                wr[Ar] !== Lr[Ar] && (Le.disableVertexAttribArray(Ar), wr[Ar] = 0);
            }, enable: Hi, disable: ta, getCompressedTextureFormats: function() {
              if (hn === null && (hn = [], St.get("WEBGL_compressed_texture_pvrtc") || St.get("WEBGL_compressed_texture_s3tc") || St.get("WEBGL_compressed_texture_etc1") || St.get("WEBGL_compressed_texture_astc")))
                for (var Ar = Le.getParameter(Le.COMPRESSED_TEXTURE_FORMATS), jn = 0; jn < Ar.length; jn++)
                  hn.push(Ar[jn]);
              return hn;
            }, useProgram: function(Ar) {
              return rn !== Ar && (Le.useProgram(Ar), rn = Ar, !0);
            }, setBlending: Fs, setMaterial: function(Ar, jn) {
              Ar.side === Ge ? ta(Le.CULL_FACE) : Hi(Le.CULL_FACE);
              var ri = Ar.side === Se;
              jn && (ri = !ri), ra(ri), Ar.blending === et && Ar.transparent === !1 ? Fs(Nt) : Fs(Ar.blending, Ar.blendEquation, Ar.blendSrc, Ar.blendDst, Ar.blendEquationAlpha, Ar.blendSrcAlpha, Ar.blendDstAlpha, Ar.premultipliedAlpha), en.setFunc(Ar.depthFunc), en.setTest(Ar.depthTest), en.setMask(Ar.depthWrite), fr.setMask(Ar.colorWrite), qu(Ar.polygonOffset, Ar.polygonOffsetFactor, Ar.polygonOffsetUnits);
            }, setFlipSided: ra, setCullFace: Du, setLineWidth: function(Ar) {
              Ar !== Ms && (la && Le.lineWidth(Ar), Ms = Ar);
            }, setPolygonOffset: qu, setScissorTest: function(Ar) {
              Ar ? Hi(Le.SCISSOR_TEST) : ta(Le.SCISSOR_TEST);
            }, activeTexture: $u, bindTexture: function(Ar, jn) {
              Ui === null && $u();
              var ri = Ns[Ui];
              ri === void 0 && (ri = { type: void 0, texture: void 0 }, Ns[Ui] = ri), ri.type === Ar && ri.texture === jn || (Le.bindTexture(Ar, jn || ks[Ar]), ri.type = Ar, ri.texture = jn);
            }, compressedTexImage2D: function() {
              try {
                Le.compressedTexImage2D.apply(Le, arguments);
              } catch (Ar) {
                console.error("THREE.WebGLState:", Ar);
              }
            }, texImage2D: function() {
              try {
                Le.texImage2D.apply(Le, arguments);
              } catch (Ar) {
                console.error("THREE.WebGLState:", Ar);
              }
            }, scissor: function(Ar) {
              Sc.equals(Ar) === !1 && (Le.scissor(Ar.x, Ar.y, Ar.z, Ar.w), Sc.copy(Ar));
            }, viewport: function(Ar) {
              za.equals(Ar) === !1 && (Le.viewport(Ar.x, Ar.y, Ar.z, Ar.w), za.copy(Ar));
            }, reset: function() {
              for (var Ar = 0; Ar < wr.length; Ar++)
                wr[Ar] === 1 && (Le.disableVertexAttribArray(Ar), wr[Ar] = 0);
              fn = {}, hn = null, Ui = null, Ns = {}, rn = null, kr = null, Fr = null, ea = null, fr.reset(), en.reset(), Er.reset();
            } };
          }(Qe, Ue, gr, Je)).scissor(Qn.copy(ro).multiplyScalar(Wn)), rt.viewport(mn.copy(Ti).multiplyScalar(Wn)), it = new function(Le) {
            var St = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
            return { memory: { geometries: 0, textures: 0 }, render: St, programs: null, autoReset: !0, reset: function() {
              St.frame++, St.calls = 0, St.triangles = 0, St.points = 0, St.lines = 0;
            }, update: function(Rt, nr, fr) {
              switch (fr = fr || 1, St.calls++, nr) {
                case Le.TRIANGLES:
                  St.triangles += fr * (Rt / 3);
                  break;
                case Le.TRIANGLE_STRIP:
                case Le.TRIANGLE_FAN:
                  St.triangles += fr * (Rt - 2);
                  break;
                case Le.LINES:
                  St.lines += fr * (Rt / 2);
                  break;
                case Le.LINE_STRIP:
                  St.lines += fr * (Rt - 1);
                  break;
                case Le.LINE_LOOP:
                  St.lines += fr * Rt;
                  break;
                case Le.POINTS:
                  St.points += fr * Rt;
                  break;
                default:
                  console.error("THREE.WebGLInfo: Unknown draw mode:", nr);
              }
            } };
          }(Qe), ft = new function() {
            var Le = /* @__PURE__ */ new WeakMap();
            return { get: function(St) {
              var Rt = Le.get(St);
              return Rt === void 0 && (Rt = {}, Le.set(St, Rt)), Rt;
            }, remove: function(St) {
              Le.delete(St);
            }, update: function(St, Rt, nr) {
              Le.get(St)[Rt] = nr;
            }, dispose: function() {
              Le = /* @__PURE__ */ new WeakMap();
            } };
          }(), vt = new Il(Qe, Ue, rt, ft, Je, gr, it), ut = new Pr(Qe), Gt = new function(Le, St, Rt) {
            var nr = {}, fr = {};
            function en(Er) {
              var hr = Er.target, Lr = nr[hr.id];
              for (var wr in Lr.index !== null && St.remove(Lr.index), Lr.attributes)
                St.remove(Lr.attributes[wr]);
              hr.removeEventListener("dispose", en), delete nr[hr.id];
              var br = fr[Lr.id];
              br && (St.remove(br), delete fr[Lr.id]), Rt.memory.geometries--;
            }
            return { get: function(Er, hr) {
              var Lr = nr[hr.id];
              return Lr || (hr.addEventListener("dispose", en), hr.isBufferGeometry ? Lr = hr : hr.isGeometry && (hr._bufferGeometry === void 0 && (hr._bufferGeometry = new an().setFromObject(Er)), Lr = hr._bufferGeometry), nr[hr.id] = Lr, Rt.memory.geometries++, Lr);
            }, update: function(Er) {
              var hr = Er.index, Lr = Er.attributes;
              for (var wr in hr !== null && St.update(hr, Le.ELEMENT_ARRAY_BUFFER), Lr)
                St.update(Lr[wr], Le.ARRAY_BUFFER);
              var br = Er.morphAttributes;
              for (var wr in br)
                for (var fn = br[wr], hn = 0, rn = fn.length; hn < rn; hn++)
                  St.update(fn[hn], Le.ARRAY_BUFFER);
            }, getWireframeAttribute: function(Er) {
              var hr = fr[Er.id];
              if (hr)
                return hr;
              var Lr, wr = [], br = Er.index, fn = Er.attributes;
              if (br !== null)
                for (var hn = 0, rn = (Lr = br.array).length; hn < rn; hn += 3) {
                  var kr = Lr[hn + 0], ln = Lr[hn + 1], Sn = Lr[hn + 2];
                  wr.push(kr, ln, ln, Sn, Sn, kr);
                }
              else
                for (hn = 0, rn = (Lr = fn.position.array).length / 3 - 1; hn < rn; hn += 3)
                  kr = hn + 0, ln = hn + 1, Sn = hn + 2, wr.push(kr, ln, ln, Sn, Sn, kr);
              return hr = new (qA(wr) > 65535 ? Lo : Vo)(wr, 1), St.update(hr, Le.ELEMENT_ARRAY_BUFFER), fr[Er.id] = hr, hr;
            } };
          }(Qe, ut, it), Ht = new function(Le, St) {
            var Rt = {};
            return { update: function(nr) {
              var fr = St.render.frame, en = nr.geometry, Er = Le.get(nr, en);
              return Rt[Er.id] !== fr && (en.isGeometry && Er.updateFromObject(nr), Le.update(Er), Rt[Er.id] = fr), Er;
            }, dispose: function() {
              Rt = {};
            } };
          }(Gt, it), or = new function(Le) {
            var St = {}, Rt = new Float32Array(8);
            return { update: function(nr, fr, en, Er) {
              var hr = nr.morphTargetInfluences, Lr = hr.length, wr = St[fr.id];
              if (wr === void 0) {
                wr = [];
                for (var br = 0; br < Lr; br++)
                  wr[br] = [br, 0];
                St[fr.id] = wr;
              }
              var fn = en.morphTargets && fr.morphAttributes.position, hn = en.morphNormals && fr.morphAttributes.normal;
              for (br = 0; br < Lr; br++)
                (rn = wr[br])[1] !== 0 && (fn && fr.removeAttribute("morphTarget" + br), hn && fr.removeAttribute("morphNormal" + br));
              for (br = 0; br < Lr; br++)
                (rn = wr[br])[0] = br, rn[1] = hr[br];
              for (wr.sort(Vu), br = 0; br < 8; br++) {
                var rn;
                if (rn = wr[br]) {
                  var kr = rn[0], ln = rn[1];
                  if (ln) {
                    fn && fr.addAttribute("morphTarget" + br, fn[kr]), hn && fr.addAttribute("morphNormal" + br, hn[kr]), Rt[br] = ln;
                    continue;
                  }
                }
                Rt[br] = 0;
              }
              Er.getUniforms().setValue(Le, "morphTargetInfluences", Rt);
            } };
          }(Qe), pt = new ml(xr, Ue, Je), Tt = new Bl(), zt = new function() {
            var Le = {};
            return { get: function(St, Rt) {
              var nr;
              return Le[St.id] === void 0 ? (nr = new Au(), Le[St.id] = {}, Le[St.id][Rt.id] = nr) : Le[St.id][Rt.id] === void 0 ? (nr = new Au(), Le[St.id][Rt.id] = nr) : nr = Le[St.id][Rt.id], nr;
            }, dispose: function() {
              Le = {};
            } };
          }(), Dt = new function(Le, St, Rt, nr) {
            var fr, en, Er, hr = new ze(0), Lr = 0;
            function wr(br, fn) {
              St.buffers.color.setClear(br.r, br.g, br.b, fn, nr);
            }
            return { getClearColor: function() {
              return hr;
            }, setClearColor: function(br, fn) {
              hr.set(br), wr(hr, Lr = fn !== void 0 ? fn : 1);
            }, getClearAlpha: function() {
              return Lr;
            }, setClearAlpha: function(br) {
              wr(hr, Lr = br);
            }, render: function(br, fn, hn, rn) {
              var kr = fn.background;
              kr === null ? wr(hr, Lr) : kr && kr.isColor && (wr(kr, 1), rn = !0), (Le.autoClear || rn) && Le.clear(Le.autoClearColor, Le.autoClearDepth, Le.autoClearStencil), kr && kr.isCubeTexture ? (Er === void 0 && ((Er = new lo(new ba(1, 1, 1), new So({ uniforms: rr.cube.uniforms, vertexShader: rr.cube.vertexShader, fragmentShader: rr.cube.fragmentShader, side: Se, depthTest: !0, depthWrite: !1, fog: !1 }))).geometry.removeAttribute("normal"), Er.geometry.removeAttribute("uv"), Er.onBeforeRender = function(ln, Sn, En) {
                this.matrixWorld.copyPosition(En.matrixWorld);
              }, Rt.update(Er)), Er.material.uniforms.tCube.value = kr, br.push(Er, Er.geometry, Er.material, 0, null)) : kr && kr.isTexture && (fr === void 0 && (fr = new ai(-1, 1, 1, -1, 0, 1), en = new lo(new wa(2, 2), new Bo({ depthTest: !1, depthWrite: !1, fog: !1 })), Rt.update(en)), en.material.map = kr, Le.renderBufferDirect(fr, null, en.geometry, en.material, en, null));
            } };
          }(xr, rt, Ht, pe), Lt = new function(Le, St, Rt, nr) {
            var fr;
            this.setMode = function(en) {
              fr = en;
            }, this.render = function(en, Er) {
              Le.drawArrays(fr, en, Er), Rt.update(Er, fr);
            }, this.renderInstances = function(en, Er, hr) {
              var Lr;
              if (nr.isWebGL2)
                Lr = Le;
              else if ((Lr = St.get("ANGLE_instanced_arrays")) === null)
                return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
              Lr[nr.isWebGL2 ? "drawArraysInstanced" : "drawArraysInstancedANGLE"](fr, Er, hr, en.maxInstancedCount), Rt.update(hr, fr, en.maxInstancedCount);
            };
          }(Qe, Ue, it, Je), lr = new function(Le, St, Rt, nr) {
            var fr, en, Er;
            this.setMode = function(hr) {
              fr = hr;
            }, this.setIndex = function(hr) {
              en = hr.type, Er = hr.bytesPerElement;
            }, this.render = function(hr, Lr) {
              Le.drawElements(fr, Lr, en, hr * Er), Rt.update(Lr, fr);
            }, this.renderInstances = function(hr, Lr, wr) {
              var br;
              if (nr.isWebGL2)
                br = Le;
              else if ((br = St.get("ANGLE_instanced_arrays")) === null)
                return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
              br[nr.isWebGL2 ? "drawElementsInstanced" : "drawElementsInstancedANGLE"](fr, wr, en, Lr * Er, hr.maxInstancedCount), Rt.update(wr, fr, hr.maxInstancedCount);
            };
          }(Qe, Ue, it, Je), it.programs = pt.programs, xr.context = Qe, xr.capabilities = Je, xr.extensions = Ue, xr.properties = ft, xr.renderLists = Tt, xr.state = rt, xr.info = it;
        }
        Ro();
        var qn = "xr" in navigator ? new function(Le) {
          var St = Le.context, Rt = null, nr = null, fr = null, en = null, Er = [], hr = [];
          function Lr() {
            return nr !== null && fr !== null;
          }
          var wr = new Si();
          wr.layers.enable(1), wr.viewport = new Kn();
          var br = new Si();
          br.layers.enable(2), br.viewport = new Kn();
          var fn = new Us([wr, br]);
          function hn(En) {
            var In = Er[hr.indexOf(En.inputSource)];
            In && In.dispatchEvent({ type: En.type });
          }
          function rn() {
            Le.setFramebuffer(null), Sn.stop();
          }
          function kr(En, In) {
            In === null ? En.matrixWorld.copy(En.matrix) : En.matrixWorld.multiplyMatrices(In.matrixWorld, En.matrix), En.matrixWorldInverse.getInverse(En.matrixWorld);
          }
          fn.layers.enable(1), fn.layers.enable(2), this.enabled = !1, this.getController = function(En) {
            var In = Er[En];
            return In === void 0 && ((In = new rs()).matrixAutoUpdate = !1, In.visible = !1, Er[En] = In), In;
          }, this.getDevice = function() {
            return Rt;
          }, this.setDevice = function(En) {
            En !== void 0 && (Rt = En), En instanceof XRDevice && St.setCompatibleXRDevice(En);
          }, this.setSession = function(En, In) {
            (nr = En) !== null && (nr.addEventListener("select", hn), nr.addEventListener("selectstart", hn), nr.addEventListener("selectend", hn), nr.addEventListener("end", rn), nr.baseLayer = new XRWebGLLayer(nr, St), nr.requestFrameOfReference(In.frameOfReferenceType).then(function($n) {
              fr = $n, Le.setFramebuffer(nr.baseLayer.framebuffer), Sn.setContext(nr), Sn.start();
            }), hr = nr.getInputSources(), nr.addEventListener("inputsourceschange", function() {
              hr = nr.getInputSources(), console.log(hr);
            }));
          }, this.getCamera = function(En) {
            if (Lr()) {
              var In = En.parent, $n = fn.cameras;
              kr(fn, In);
              for (var _i = 0; _i < $n.length; _i++)
                kr($n[_i], In);
              En.matrixWorld.copy(fn.matrixWorld);
              for (var $r = En.children, Fr = (_i = 0, $r.length); _i < Fr; _i++)
                $r[_i].updateMatrixWorld(!0);
              return fn;
            }
            return En;
          }, this.isPresenting = Lr;
          var ln = null, Sn = new cr();
          Sn.setAnimationLoop(function(En, In) {
            if ((en = In.getDevicePose(fr)) !== null)
              for (var $n = nr.baseLayer, _i = In.views, $r = 0; $r < _i.length; $r++) {
                var Fr = _i[$r], ea = $n.getViewport(Fr), Ms = en.getViewMatrix(Fr), Wi = fn.cameras[$r];
                Wi.matrix.fromArray(Ms).getInverse(Wi.matrix), Wi.projectionMatrix.fromArray(Fr.projectionMatrix), Wi.viewport.set(ea.x, ea.y, ea.width, ea.height), $r === 0 && (fn.matrix.copy(Wi.matrix), fn.projectionMatrix.copy(Wi.projectionMatrix));
              }
            for ($r = 0; $r < Er.length; $r++) {
              var Mo = Er[$r], La = hr[$r];
              if (La) {
                var la = In.getInputPose(La, fr);
                if (la !== null) {
                  Mo.matrix.elements = la.pointerMatrix, Mo.matrix.decompose(Mo.position, Mo.rotation, Mo.scale), Mo.visible = !0;
                  continue;
                }
              }
              Mo.visible = !1;
            }
            ln && ln(En);
          }), this.setAnimationLoop = function(En) {
            ln = En;
          }, this.dispose = function() {
          }, this.getStandingMatrix = function() {
            return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."), new THREE.Matrix4();
          }, this.submitFrame = function() {
          };
        }(xr) : new du(xr);
        this.vr = qn;
        var si = new uu(xr, Ht, Je.maxTextureSize);
        function ui(Le) {
          Le.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), vr = !0;
        }
        function Ri() {
          console.log("THREE.WebGLRenderer: Context Restored."), vr = !1, Ro();
        }
        function Ei(Le) {
          var St = Le.target;
          St.removeEventListener("dispose", Ei), function(Rt) {
            Li(Rt), ft.remove(Rt);
          }(St);
        }
        function Li(Le) {
          var St = ft.get(Le).program;
          Le.program = void 0, St !== void 0 && pt.releaseProgram(St);
        }
        this.shadowMap = si, this.getContext = function() {
          return Qe;
        }, this.getContextAttributes = function() {
          return Qe.getContextAttributes();
        }, this.forceContextLoss = function() {
          var Le = Ue.get("WEBGL_lose_context");
          Le && Le.loseContext();
        }, this.forceContextRestore = function() {
          var Le = Ue.get("WEBGL_lose_context");
          Le && Le.restoreContext();
        }, this.getPixelRatio = function() {
          return Wn;
        }, this.setPixelRatio = function(Le) {
          Le !== void 0 && (Wn = Le, this.setSize(ci, Hr, !1));
        }, this.getSize = function() {
          return { width: ci, height: Hr };
        }, this.setSize = function(Le, St, Rt) {
          qn.isPresenting() ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (ci = Le, Hr = St, te.width = Le * Wn, te.height = St * Wn, Rt !== !1 && (te.style.width = Le + "px", te.style.height = St + "px"), this.setViewport(0, 0, Le, St));
        }, this.getDrawingBufferSize = function() {
          return { width: ci * Wn, height: Hr * Wn };
        }, this.setDrawingBufferSize = function(Le, St, Rt) {
          ci = Le, Hr = St, Wn = Rt, te.width = Le * Rt, te.height = St * Rt, this.setViewport(0, 0, Le, St);
        }, this.getCurrentViewport = function() {
          return mn;
        }, this.setViewport = function(Le, St, Rt, nr) {
          Ti.set(Le, Hr - St - nr, Rt, nr), rt.viewport(mn.copy(Ti).multiplyScalar(Wn));
        }, this.setScissor = function(Le, St, Rt, nr) {
          ro.set(Le, Hr - St - nr, Rt, nr), rt.scissor(Qn.copy(ro).multiplyScalar(Wn));
        }, this.setScissorTest = function(Le) {
          rt.setScissorTest(Ni = Le);
        }, this.getClearColor = function() {
          return Dt.getClearColor();
        }, this.setClearColor = function() {
          Dt.setClearColor.apply(Dt, arguments);
        }, this.getClearAlpha = function() {
          return Dt.getClearAlpha();
        }, this.setClearAlpha = function() {
          Dt.setClearAlpha.apply(Dt, arguments);
        }, this.clear = function(Le, St, Rt) {
          var nr = 0;
          (Le === void 0 || Le) && (nr |= Qe.COLOR_BUFFER_BIT), (St === void 0 || St) && (nr |= Qe.DEPTH_BUFFER_BIT), (Rt === void 0 || Rt) && (nr |= Qe.STENCIL_BUFFER_BIT), Qe.clear(nr);
        }, this.clearColor = function() {
          this.clear(!0, !1, !1);
        }, this.clearDepth = function() {
          this.clear(!1, !0, !1);
        }, this.clearStencil = function() {
          this.clear(!1, !1, !0);
        }, this.clearTarget = function(Le, St, Rt, nr) {
          this.setRenderTarget(Le), this.clear(St, Rt, nr);
        }, this.dispose = function() {
          te.removeEventListener("webglcontextlost", ui, !1), te.removeEventListener("webglcontextrestored", Ri, !1), Tt.dispose(), zt.dispose(), ft.dispose(), Ht.dispose(), qn.dispose(), Ji.stop();
        }, this.renderBufferImmediate = function(Le, St) {
          rt.initAttributes();
          var Rt = ft.get(Le);
          Le.hasPositions && !Rt.position && (Rt.position = Qe.createBuffer()), Le.hasNormals && !Rt.normal && (Rt.normal = Qe.createBuffer()), Le.hasUvs && !Rt.uv && (Rt.uv = Qe.createBuffer()), Le.hasColors && !Rt.color && (Rt.color = Qe.createBuffer());
          var nr = St.getAttributes();
          Le.hasPositions && (Qe.bindBuffer(Qe.ARRAY_BUFFER, Rt.position), Qe.bufferData(Qe.ARRAY_BUFFER, Le.positionArray, Qe.DYNAMIC_DRAW), rt.enableAttribute(nr.position), Qe.vertexAttribPointer(nr.position, 3, Qe.FLOAT, !1, 0, 0)), Le.hasNormals && (Qe.bindBuffer(Qe.ARRAY_BUFFER, Rt.normal), Qe.bufferData(Qe.ARRAY_BUFFER, Le.normalArray, Qe.DYNAMIC_DRAW), rt.enableAttribute(nr.normal), Qe.vertexAttribPointer(nr.normal, 3, Qe.FLOAT, !1, 0, 0)), Le.hasUvs && (Qe.bindBuffer(Qe.ARRAY_BUFFER, Rt.uv), Qe.bufferData(Qe.ARRAY_BUFFER, Le.uvArray, Qe.DYNAMIC_DRAW), rt.enableAttribute(nr.uv), Qe.vertexAttribPointer(nr.uv, 2, Qe.FLOAT, !1, 0, 0)), Le.hasColors && (Qe.bindBuffer(Qe.ARRAY_BUFFER, Rt.color), Qe.bufferData(Qe.ARRAY_BUFFER, Le.colorArray, Qe.DYNAMIC_DRAW), rt.enableAttribute(nr.color), Qe.vertexAttribPointer(nr.color, 3, Qe.FLOAT, !1, 0, 0)), rt.disableUnusedAttributes(), Qe.drawArrays(Qe.TRIANGLES, 0, Le.count), Le.count = 0;
        }, this.renderBufferDirect = function(Le, St, Rt, nr, fr, en) {
          var Er = fr.isMesh && fr.normalMatrix.determinant() < 0;
          rt.setMaterial(nr, Er);
          var hr = iA(Le, St, nr, fr), Lr = !1;
          pr.geometry === Rt.id && pr.program === hr.id && pr.wireframe === (nr.wireframe === !0) || (pr.geometry = Rt.id, pr.program = hr.id, pr.wireframe = nr.wireframe === !0, Lr = !0), fr.morphTargetInfluences && (or.update(fr, Rt, nr, hr), Lr = !0);
          var wr, br = Rt.index, fn = Rt.attributes.position, hn = 1;
          nr.wireframe === !0 && (br = Gt.getWireframeAttribute(Rt), hn = 2);
          var rn = Lt;
          br !== null && (wr = ut.get(br), (rn = lr).setIndex(wr)), Lr && (function(ea, Ms, Wi) {
            if (Wi && Wi.isInstancedBufferGeometry & !Je.isWebGL2 && Ue.get("ANGLE_instanced_arrays") === null)
              return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            rt.initAttributes();
            var Mo = Wi.attributes, La = Ms.getAttributes(), la = ea.defaultAttributeValues;
            for (var va in La) {
              var io = La[va];
              if (io >= 0) {
                var Ui = Mo[va];
                if (Ui !== void 0) {
                  var Ns = Ui.normalized, Sc = Ui.itemSize, za = ut.get(Ui);
                  if (za === void 0)
                    continue;
                  var Tc = za.buffer, ks = za.type, Rc = za.bytesPerElement;
                  if (Ui.isInterleavedBufferAttribute) {
                    var Hi = Ui.data, ta = Hi.stride, Fs = Ui.offset;
                    Hi && Hi.isInstancedInterleavedBuffer ? (rt.enableAttributeAndDivisor(io, Hi.meshPerAttribute), Wi.maxInstancedCount === void 0 && (Wi.maxInstancedCount = Hi.meshPerAttribute * Hi.count)) : rt.enableAttribute(io), Qe.bindBuffer(Qe.ARRAY_BUFFER, Tc), Qe.vertexAttribPointer(io, Sc, ks, Ns, ta * Rc, Fs * Rc);
                  } else
                    Ui.isInstancedBufferAttribute ? (rt.enableAttributeAndDivisor(io, Ui.meshPerAttribute), Wi.maxInstancedCount === void 0 && (Wi.maxInstancedCount = Ui.meshPerAttribute * Ui.count)) : rt.enableAttribute(io), Qe.bindBuffer(Qe.ARRAY_BUFFER, Tc), Qe.vertexAttribPointer(io, Sc, ks, Ns, 0, 0);
                } else if (la !== void 0) {
                  var ra = la[va];
                  if (ra !== void 0)
                    switch (ra.length) {
                      case 2:
                        Qe.vertexAttrib2fv(io, ra);
                        break;
                      case 3:
                        Qe.vertexAttrib3fv(io, ra);
                        break;
                      case 4:
                        Qe.vertexAttrib4fv(io, ra);
                        break;
                      default:
                        Qe.vertexAttrib1fv(io, ra);
                    }
                }
              }
            }
            rt.disableUnusedAttributes();
          }(nr, hr, Rt), br !== null && Qe.bindBuffer(Qe.ELEMENT_ARRAY_BUFFER, wr.buffer));
          var kr = 1 / 0;
          br !== null ? kr = br.count : fn !== void 0 && (kr = fn.count);
          var ln = Rt.drawRange.start * hn, Sn = Rt.drawRange.count * hn, En = en !== null ? en.start * hn : 0, In = en !== null ? en.count * hn : 1 / 0, $n = Math.max(ln, En), _i = Math.min(kr, ln + Sn, En + In) - 1, $r = Math.max(0, _i - $n + 1);
          if ($r !== 0) {
            if (fr.isMesh)
              if (nr.wireframe === !0)
                rt.setLineWidth(nr.wireframeLinewidth * Ba()), rn.setMode(Qe.LINES);
              else
                switch (fr.drawMode) {
                  case xn:
                    rn.setMode(Qe.TRIANGLES);
                    break;
                  case Wr:
                    rn.setMode(Qe.TRIANGLE_STRIP);
                    break;
                  case Cn:
                    rn.setMode(Qe.TRIANGLE_FAN);
                }
            else if (fr.isLine) {
              var Fr = nr.linewidth;
              Fr === void 0 && (Fr = 1), rt.setLineWidth(Fr * Ba()), fr.isLineSegments ? rn.setMode(Qe.LINES) : fr.isLineLoop ? rn.setMode(Qe.LINE_LOOP) : rn.setMode(Qe.LINE_STRIP);
            } else
              fr.isPoints ? rn.setMode(Qe.POINTS) : fr.isSprite && rn.setMode(Qe.TRIANGLES);
            Rt && Rt.isInstancedBufferGeometry ? Rt.maxInstancedCount > 0 && rn.renderInstances(Rt, $n, $r) : rn.render($n, $r);
          }
        }, this.compile = function(Le, St) {
          (Ne = zt.get(Le, St)).init(), Le.traverse(function(Rt) {
            Rt.isLight && (Ne.pushLight(Rt), Rt.castShadow && Ne.pushShadow(Rt));
          }), Ne.setupLights(St), Le.traverse(function(Rt) {
            if (Rt.material)
              if (Array.isArray(Rt.material))
                for (var nr = 0; nr < Rt.material.length; nr++)
                  Va(Rt.material[nr], Le.fog, Rt);
              else
                Va(Rt.material, Le.fog, Rt);
          });
        };
        var zi = null, Ji = new cr();
        function xo(Le, St, Rt, nr) {
          for (var fr = 0, en = Le.length; fr < en; fr++) {
            var Er = Le[fr], hr = Er.object, Lr = Er.geometry, wr = nr === void 0 ? Er.material : nr, br = Er.group;
            if (Rt.isArrayCamera) {
              Ur = Rt;
              for (var fn = Rt.cameras, hn = 0, rn = fn.length; hn < rn; hn++) {
                var kr = fn[hn];
                if (hr.layers.test(kr.layers)) {
                  if ("viewport" in kr)
                    rt.viewport(mn.copy(kr.viewport));
                  else {
                    var ln = kr.bounds, Sn = ln.x * ci, En = ln.y * Hr, In = ln.z * ci, $n = ln.w * Hr;
                    rt.viewport(mn.set(Sn, En, In, $n).multiplyScalar(Wn));
                  }
                  Zo(hr, St, kr, Lr, wr, br);
                }
              }
            } else
              Ur = null, Zo(hr, St, Rt, Lr, wr, br);
          }
        }
        function Zo(Le, St, Rt, nr, fr, en) {
          if (Le.onBeforeRender(xr, St, Rt, nr, fr, en), Ne = zt.get(St, Ur || Rt), Le.modelViewMatrix.multiplyMatrices(Rt.matrixWorldInverse, Le.matrixWorld), Le.normalMatrix.getNormalMatrix(Le.modelViewMatrix), Le.isImmediateRenderObject) {
            rt.setMaterial(fr);
            var Er = iA(Rt, St.fog, fr, Le);
            pr.geometry = null, pr.program = null, pr.wireframe = !1, function(hr, Lr) {
              hr.render(function(wr) {
                xr.renderBufferImmediate(wr, Lr);
              });
            }(Le, Er);
          } else
            xr.renderBufferDirect(Rt, St.fog, nr, fr, Le, en);
          Le.onAfterRender(xr, St, Rt, nr, fr, en), Ne = zt.get(St, Ur || Rt);
        }
        function Va(Le, St, Rt) {
          var nr = ft.get(Le), fr = Ne.state.lights, en = Ne.state.shadowsArray, Er = nr.lightsHash, hr = fr.state.hash, Lr = pt.getParameters(Le, fr.state, en, St, Oi.numPlanes, Oi.numIntersection, Rt), wr = pt.getProgramCode(Le, Lr), br = nr.program, fn = !0;
          if (br === void 0)
            Le.addEventListener("dispose", Ei);
          else if (br.code !== wr)
            Li(Le);
          else if (Er.stateID !== hr.stateID || Er.directionalLength !== hr.directionalLength || Er.pointLength !== hr.pointLength || Er.spotLength !== hr.spotLength || Er.rectAreaLength !== hr.rectAreaLength || Er.hemiLength !== hr.hemiLength || Er.shadowsLength !== hr.shadowsLength)
            Er.stateID = hr.stateID, Er.directionalLength = hr.directionalLength, Er.pointLength = hr.pointLength, Er.spotLength = hr.spotLength, Er.rectAreaLength = hr.rectAreaLength, Er.hemiLength = hr.hemiLength, Er.shadowsLength = hr.shadowsLength, fn = !1;
          else {
            if (Lr.shaderID !== void 0)
              return;
            fn = !1;
          }
          if (fn) {
            if (Lr.shaderID) {
              var hn = rr[Lr.shaderID];
              nr.shader = { name: Le.type, uniforms: $i.clone(hn.uniforms), vertexShader: hn.vertexShader, fragmentShader: hn.fragmentShader };
            } else
              nr.shader = { name: Le.type, uniforms: Le.uniforms, vertexShader: Le.vertexShader, fragmentShader: Le.fragmentShader };
            Le.onBeforeCompile(nr.shader, xr), wr = pt.getProgramCode(Le, Lr), br = pt.acquireProgram(Le, nr.shader, Lr, wr), nr.program = br, Le.program = br;
          }
          var rn = br.getAttributes();
          if (Le.morphTargets) {
            Le.numSupportedMorphTargets = 0;
            for (var kr = 0; kr < xr.maxMorphTargets; kr++)
              rn["morphTarget" + kr] >= 0 && Le.numSupportedMorphTargets++;
          }
          if (Le.morphNormals)
            for (Le.numSupportedMorphNormals = 0, kr = 0; kr < xr.maxMorphNormals; kr++)
              rn["morphNormal" + kr] >= 0 && Le.numSupportedMorphNormals++;
          var ln = nr.shader.uniforms;
          (Le.isShaderMaterial || Le.isRawShaderMaterial) && Le.clipping !== !0 || (nr.numClippingPlanes = Oi.numPlanes, nr.numIntersection = Oi.numIntersection, ln.clippingPlanes = Oi.uniform), nr.fog = St, Er === void 0 && (nr.lightsHash = Er = {}), Er.stateID = hr.stateID, Er.directionalLength = hr.directionalLength, Er.pointLength = hr.pointLength, Er.spotLength = hr.spotLength, Er.rectAreaLength = hr.rectAreaLength, Er.hemiLength = hr.hemiLength, Er.shadowsLength = hr.shadowsLength, Le.lights && (ln.ambientLightColor.value = fr.state.ambient, ln.directionalLights.value = fr.state.directional, ln.spotLights.value = fr.state.spot, ln.rectAreaLights.value = fr.state.rectArea, ln.pointLights.value = fr.state.point, ln.hemisphereLights.value = fr.state.hemi, ln.directionalShadowMap.value = fr.state.directionalShadowMap, ln.directionalShadowMatrix.value = fr.state.directionalShadowMatrix, ln.spotShadowMap.value = fr.state.spotShadowMap, ln.spotShadowMatrix.value = fr.state.spotShadowMatrix, ln.pointShadowMap.value = fr.state.pointShadowMap, ln.pointShadowMatrix.value = fr.state.pointShadowMatrix);
          var Sn = nr.program.getUniforms(), En = pa.seqWithValue(Sn.seq, ln);
          nr.uniformsList = En;
        }
        function iA(Le, St, Rt, nr) {
          Fi = 0;
          var fr = ft.get(Rt), en = Ne.state.lights, Er = fr.lightsHash, hr = en.state.hash;
          if (qo && ($o || Le !== tn)) {
            var Lr = Le === tn && Rt.id === Nr;
            Oi.setState(Rt.clippingPlanes, Rt.clipIntersection, Rt.clipShadows, Le, fr, Lr);
          }
          Rt.needsUpdate === !1 && (fr.program === void 0 || Rt.fog && fr.fog !== St ? Rt.needsUpdate = !0 : (!Rt.lights || Er.stateID === hr.stateID && Er.directionalLength === hr.directionalLength && Er.pointLength === hr.pointLength && Er.spotLength === hr.spotLength && Er.rectAreaLength === hr.rectAreaLength && Er.hemiLength === hr.hemiLength && Er.shadowsLength === hr.shadowsLength) && (fr.numClippingPlanes === void 0 || fr.numClippingPlanes === Oi.numPlanes && fr.numIntersection === Oi.numIntersection) || (Rt.needsUpdate = !0)), Rt.needsUpdate && (Va(Rt, St, nr), Rt.needsUpdate = !1);
          var wr = !1, br = !1, fn = !1, hn = fr.program, rn = hn.getUniforms(), kr = fr.shader.uniforms;
          if (rt.useProgram(hn.program) && (wr = !0, br = !0, fn = !0), Rt.id !== Nr && (Nr = Rt.id, br = !0), wr || Le !== tn) {
            if (rn.setValue(Qe, "projectionMatrix", Le.projectionMatrix), Je.logarithmicDepthBuffer && rn.setValue(Qe, "logDepthBufFC", 2 / (Math.log(Le.far + 1) / Math.LN2)), tn !== (Ur || Le) && (tn = Ur || Le, br = !0, fn = !0), Rt.isShaderMaterial || Rt.isMeshPhongMaterial || Rt.isMeshStandardMaterial || Rt.envMap) {
              var ln = rn.map.cameraPosition;
              ln !== void 0 && ln.setValue(Qe, Pi.setFromMatrixPosition(Le.matrixWorld));
            }
            (Rt.isMeshPhongMaterial || Rt.isMeshLambertMaterial || Rt.isMeshBasicMaterial || Rt.isMeshStandardMaterial || Rt.isShaderMaterial || Rt.skinning) && rn.setValue(Qe, "viewMatrix", Le.matrixWorldInverse);
          }
          if (Rt.skinning) {
            rn.setOptional(Qe, nr, "bindMatrix"), rn.setOptional(Qe, nr, "bindMatrixInverse");
            var Sn = nr.skeleton;
            if (Sn) {
              var En = Sn.bones;
              if (Je.floatVertexTextures) {
                if (Sn.boneTexture === void 0) {
                  var In = Math.sqrt(4 * En.length);
                  In = Mn.ceilPowerOfTwo(In), In = Math.max(In, 4);
                  var $n = new Float32Array(In * In * 4);
                  $n.set(Sn.boneMatrices);
                  var _i = new Qo($n, In, In, sr, Pn);
                  _i.needsUpdate = !0, Sn.boneMatrices = $n, Sn.boneTexture = _i, Sn.boneTextureSize = In;
                }
                rn.setValue(Qe, "boneTexture", Sn.boneTexture), rn.setValue(Qe, "boneTextureSize", Sn.boneTextureSize);
              } else
                rn.setOptional(Qe, Sn, "boneMatrices");
            }
          }
          return br && (rn.setValue(Qe, "toneMappingExposure", xr.toneMappingExposure), rn.setValue(Qe, "toneMappingWhitePoint", xr.toneMappingWhitePoint), Rt.lights && function($r, Fr) {
            $r.ambientLightColor.needsUpdate = Fr, $r.directionalLights.needsUpdate = Fr, $r.pointLights.needsUpdate = Fr, $r.spotLights.needsUpdate = Fr, $r.rectAreaLights.needsUpdate = Fr, $r.hemisphereLights.needsUpdate = Fr;
          }(kr, fn), St && Rt.fog && function($r, Fr) {
            $r.fogColor.value = Fr.color, Fr.isFog ? ($r.fogNear.value = Fr.near, $r.fogFar.value = Fr.far) : Fr.isFogExp2 && ($r.fogDensity.value = Fr.density);
          }(kr, St), Rt.isMeshBasicMaterial ? Xo(kr, Rt) : Rt.isMeshLambertMaterial ? (Xo(kr, Rt), function($r, Fr) {
            Fr.emissiveMap && ($r.emissiveMap.value = Fr.emissiveMap);
          }(kr, Rt)) : Rt.isMeshPhongMaterial ? (Xo(kr, Rt), Rt.isMeshToonMaterial ? function($r, Fr) {
            _c($r, Fr), Fr.gradientMap && ($r.gradientMap.value = Fr.gradientMap);
          }(kr, Rt) : _c(kr, Rt)) : Rt.isMeshStandardMaterial ? (Xo(kr, Rt), Rt.isMeshPhysicalMaterial ? function($r, Fr) {
            Qc($r, Fr), $r.reflectivity.value = Fr.reflectivity, $r.clearCoat.value = Fr.clearCoat, $r.clearCoatRoughness.value = Fr.clearCoatRoughness;
          }(kr, Rt) : Qc(kr, Rt)) : Rt.isMeshDepthMaterial ? (Xo(kr, Rt), function($r, Fr) {
            Fr.displacementMap && ($r.displacementMap.value = Fr.displacementMap, $r.displacementScale.value = Fr.displacementScale, $r.displacementBias.value = Fr.displacementBias);
          }(kr, Rt)) : Rt.isMeshDistanceMaterial ? (Xo(kr, Rt), function($r, Fr) {
            Fr.displacementMap && ($r.displacementMap.value = Fr.displacementMap, $r.displacementScale.value = Fr.displacementScale, $r.displacementBias.value = Fr.displacementBias), $r.referencePosition.value.copy(Fr.referencePosition), $r.nearDistance.value = Fr.nearDistance, $r.farDistance.value = Fr.farDistance;
          }(kr, Rt)) : Rt.isMeshNormalMaterial ? (Xo(kr, Rt), function($r, Fr) {
            Fr.bumpMap && ($r.bumpMap.value = Fr.bumpMap, $r.bumpScale.value = Fr.bumpScale, Fr.side === Se && ($r.bumpScale.value *= -1)), Fr.normalMap && ($r.normalMap.value = Fr.normalMap, $r.normalScale.value.copy(Fr.normalScale), Fr.side === Se && $r.normalScale.value.negate()), Fr.displacementMap && ($r.displacementMap.value = Fr.displacementMap, $r.displacementScale.value = Fr.displacementScale, $r.displacementBias.value = Fr.displacementBias);
          }(kr, Rt)) : Rt.isLineBasicMaterial ? (function($r, Fr) {
            $r.diffuse.value = Fr.color, $r.opacity.value = Fr.opacity;
          }(kr, Rt), Rt.isLineDashedMaterial && function($r, Fr) {
            $r.dashSize.value = Fr.dashSize, $r.totalSize.value = Fr.dashSize + Fr.gapSize, $r.scale.value = Fr.scale;
          }(kr, Rt)) : Rt.isPointsMaterial ? function($r, Fr) {
            $r.diffuse.value = Fr.color, $r.opacity.value = Fr.opacity, $r.size.value = Fr.size * Wn, $r.scale.value = 0.5 * Hr, $r.map.value = Fr.map, Fr.map !== null && (Fr.map.matrixAutoUpdate === !0 && Fr.map.updateMatrix(), $r.uvTransform.value.copy(Fr.map.matrix));
          }(kr, Rt) : Rt.isSpriteMaterial ? function($r, Fr) {
            $r.diffuse.value = Fr.color, $r.opacity.value = Fr.opacity, $r.rotation.value = Fr.rotation, $r.map.value = Fr.map, Fr.map !== null && (Fr.map.matrixAutoUpdate === !0 && Fr.map.updateMatrix(), $r.uvTransform.value.copy(Fr.map.matrix));
          }(kr, Rt) : Rt.isShadowMaterial && (kr.color.value = Rt.color, kr.opacity.value = Rt.opacity), kr.ltc_1 !== void 0 && (kr.ltc_1.value = Ct.LTC_1), kr.ltc_2 !== void 0 && (kr.ltc_2.value = Ct.LTC_2), pa.upload(Qe, fr.uniformsList, kr, xr)), Rt.isShaderMaterial && Rt.uniformsNeedUpdate === !0 && (pa.upload(Qe, fr.uniformsList, kr, xr), Rt.uniformsNeedUpdate = !1), Rt.isSpriteMaterial && rn.setValue(Qe, "center", nr.center), rn.setValue(Qe, "modelViewMatrix", nr.modelViewMatrix), rn.setValue(Qe, "normalMatrix", nr.normalMatrix), rn.setValue(Qe, "modelMatrix", nr.matrixWorld), hn;
        }
        function Xo(Le, St) {
          var Rt;
          Le.opacity.value = St.opacity, St.color && (Le.diffuse.value = St.color), St.emissive && Le.emissive.value.copy(St.emissive).multiplyScalar(St.emissiveIntensity), St.map && (Le.map.value = St.map), St.alphaMap && (Le.alphaMap.value = St.alphaMap), St.specularMap && (Le.specularMap.value = St.specularMap), St.envMap && (Le.envMap.value = St.envMap, Le.flipEnvMap.value = St.envMap && St.envMap.isCubeTexture ? -1 : 1, Le.reflectivity.value = St.reflectivity, Le.refractionRatio.value = St.refractionRatio, Le.maxMipLevel.value = ft.get(St.envMap).__maxMipLevel), St.lightMap && (Le.lightMap.value = St.lightMap, Le.lightMapIntensity.value = St.lightMapIntensity), St.aoMap && (Le.aoMap.value = St.aoMap, Le.aoMapIntensity.value = St.aoMapIntensity), St.map ? Rt = St.map : St.specularMap ? Rt = St.specularMap : St.displacementMap ? Rt = St.displacementMap : St.normalMap ? Rt = St.normalMap : St.bumpMap ? Rt = St.bumpMap : St.roughnessMap ? Rt = St.roughnessMap : St.metalnessMap ? Rt = St.metalnessMap : St.alphaMap ? Rt = St.alphaMap : St.emissiveMap && (Rt = St.emissiveMap), Rt !== void 0 && (Rt.isWebGLRenderTarget && (Rt = Rt.texture), Rt.matrixAutoUpdate === !0 && Rt.updateMatrix(), Le.uvTransform.value.copy(Rt.matrix));
        }
        function _c(Le, St) {
          Le.specular.value = St.specular, Le.shininess.value = Math.max(St.shininess, 1e-4), St.emissiveMap && (Le.emissiveMap.value = St.emissiveMap), St.bumpMap && (Le.bumpMap.value = St.bumpMap, Le.bumpScale.value = St.bumpScale, St.side === Se && (Le.bumpScale.value *= -1)), St.normalMap && (Le.normalMap.value = St.normalMap, Le.normalScale.value.copy(St.normalScale), St.side === Se && Le.normalScale.value.negate()), St.displacementMap && (Le.displacementMap.value = St.displacementMap, Le.displacementScale.value = St.displacementScale, Le.displacementBias.value = St.displacementBias);
        }
        function Qc(Le, St) {
          Le.roughness.value = St.roughness, Le.metalness.value = St.metalness, St.roughnessMap && (Le.roughnessMap.value = St.roughnessMap), St.metalnessMap && (Le.metalnessMap.value = St.metalnessMap), St.emissiveMap && (Le.emissiveMap.value = St.emissiveMap), St.bumpMap && (Le.bumpMap.value = St.bumpMap, Le.bumpScale.value = St.bumpScale, St.side === Se && (Le.bumpScale.value *= -1)), St.normalMap && (Le.normalMap.value = St.normalMap, Le.normalScale.value.copy(St.normalScale), St.side === Se && Le.normalScale.value.negate()), St.displacementMap && (Le.displacementMap.value = St.displacementMap, Le.displacementScale.value = St.displacementScale, Le.displacementBias.value = St.displacementBias), St.envMap && (Le.envMapIntensity.value = St.envMapIntensity);
        }
        Ji.setAnimationLoop(function(Le) {
          qn.isPresenting() || zi && zi(Le);
        }), typeof window < "u" && Ji.setContext(window), this.setAnimationLoop = function(Le) {
          zi = Le, qn.setAnimationLoop(Le), Ji.start();
        }, this.render = function(Le, St, Rt, nr) {
          if (St && St.isCamera) {
            if (!vr) {
              pr.geometry = null, pr.program = null, pr.wireframe = !1, Nr = -1, tn = null, Le.autoUpdate === !0 && Le.updateMatrixWorld(), St.parent === null && St.updateMatrixWorld(), qn.enabled && (St = qn.getCamera(St)), (Ne = zt.get(Le, St)).init(), Le.onBeforeRender(xr, Le, St, Rt), Vi.multiplyMatrices(St.projectionMatrix, St.matrixWorldInverse), co.setFromMatrix(Vi), $o = this.localClippingEnabled, qo = Oi.init(this.clippingPlanes, $o, St), (Me = Tt.get(Le, St)).init(), function Lr(wr, br, fn) {
                if (wr.visible !== !1) {
                  var hn = wr.layers.test(br.layers);
                  if (hn) {
                    if (wr.isLight)
                      Ne.pushLight(wr), wr.castShadow && Ne.pushShadow(wr);
                    else if (wr.isSprite) {
                      if (!wr.frustumCulled || co.intersectsSprite(wr)) {
                        fn && Pi.setFromMatrixPosition(wr.matrixWorld).applyMatrix4(Vi);
                        var rn = Ht.update(wr), kr = wr.material;
                        Me.push(wr, rn, kr, Pi.z, null);
                      }
                    } else if (wr.isImmediateRenderObject)
                      fn && Pi.setFromMatrixPosition(wr.matrixWorld).applyMatrix4(Vi), Me.push(wr, null, wr.material, Pi.z, null);
                    else if ((wr.isMesh || wr.isLine || wr.isPoints) && (wr.isSkinnedMesh && wr.skeleton.update(), !wr.frustumCulled || co.intersectsObject(wr))) {
                      fn && Pi.setFromMatrixPosition(wr.matrixWorld).applyMatrix4(Vi);
                      var rn = Ht.update(wr), kr = wr.material;
                      if (Array.isArray(kr))
                        for (var ln = rn.groups, Sn = 0, En = ln.length; Sn < En; Sn++) {
                          var In = ln[Sn], $n = kr[In.materialIndex];
                          $n && $n.visible && Me.push(wr, rn, $n, Pi.z, In);
                        }
                      else
                        kr.visible && Me.push(wr, rn, kr, Pi.z, null);
                    }
                  }
                  for (var _i = wr.children, Sn = 0, En = _i.length; Sn < En; Sn++)
                    Lr(_i[Sn], br, fn);
                }
              }(Le, St, xr.sortObjects), xr.sortObjects === !0 && Me.sort(), qo && Oi.beginShadows();
              var fr = Ne.state.shadowsArray;
              si.render(fr, Le, St), Ne.setupLights(St), qo && Oi.endShadows(), this.info.autoReset && this.info.reset(), Rt === void 0 && (Rt = null), this.setRenderTarget(Rt), Dt.render(Me, Le, St, nr);
              var en = Me.opaque, Er = Me.transparent;
              if (Le.overrideMaterial) {
                var hr = Le.overrideMaterial;
                en.length && xo(en, Le, St, hr), Er.length && xo(Er, Le, St, hr);
              } else
                en.length && xo(en, Le, St), Er.length && xo(Er, Le, St);
              Rt && vt.updateRenderTargetMipmap(Rt), rt.buffers.depth.setTest(!0), rt.buffers.depth.setMask(!0), rt.buffers.color.setMask(!0), rt.setPolygonOffset(!1), Le.onAfterRender(xr, Le, St), qn.enabled && qn.submitFrame(), Me = null, Ne = null;
            }
          } else
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
        }, this.allocTextureUnit = function() {
          var Le = Fi;
          return Le >= Je.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + Le + " texture units while this GPU supports only " + Je.maxTextures), Fi += 1, Le;
        }, this.setTexture2D = function() {
          var Le = !1;
          return function(St, Rt) {
            St && St.isWebGLRenderTarget && (Le || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."), Le = !0), St = St.texture), vt.setTexture2D(St, Rt);
          };
        }(), this.setTexture = function() {
          var Le = !1;
          return function(St, Rt) {
            Le || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."), Le = !0), vt.setTexture2D(St, Rt);
          };
        }(), this.setTextureCube = function() {
          var Le = !1;
          return function(St, Rt) {
            St && St.isWebGLRenderTargetCube && (Le || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."), Le = !0), St = St.texture), St && St.isCubeTexture || Array.isArray(St.image) && St.image.length === 6 ? vt.setTextureCube(St, Rt) : vt.setTextureCubeDynamic(St, Rt);
          };
        }(), this.setFramebuffer = function(Le) {
          Dr = Le;
        }, this.getRenderTarget = function() {
          return Or;
        }, this.setRenderTarget = function(Le) {
          Or = Le, Le && ft.get(Le).__webglFramebuffer === void 0 && vt.setupRenderTarget(Le);
          var St = Dr, Rt = !1;
          if (Le) {
            var nr = ft.get(Le).__webglFramebuffer;
            Le.isWebGLRenderTargetCube ? (St = nr[Le.activeCubeFace], Rt = !0) : St = nr, mn.copy(Le.viewport), Qn.copy(Le.scissor), mi = Le.scissorTest;
          } else
            mn.copy(Ti).multiplyScalar(Wn), Qn.copy(ro).multiplyScalar(Wn), mi = Ni;
          if (yr !== St && (Qe.bindFramebuffer(Qe.FRAMEBUFFER, St), yr = St), rt.viewport(mn), rt.scissor(Qn), rt.setScissorTest(mi), Rt) {
            var fr = ft.get(Le.texture);
            Qe.framebufferTexture2D(Qe.FRAMEBUFFER, Qe.COLOR_ATTACHMENT0, Qe.TEXTURE_CUBE_MAP_POSITIVE_X + Le.activeCubeFace, fr.__webglTexture, Le.activeMipMapLevel);
          }
        }, this.readRenderTargetPixels = function(Le, St, Rt, nr, fr, en) {
          if (Le && Le.isWebGLRenderTarget) {
            var Er = ft.get(Le).__webglFramebuffer;
            if (Er) {
              var hr = !1;
              Er !== yr && (Qe.bindFramebuffer(Qe.FRAMEBUFFER, Er), hr = !0);
              try {
                var Lr = Le.texture, wr = Lr.format, br = Lr.type;
                if (wr !== sr && gr.convert(wr) !== Qe.getParameter(Qe.IMPLEMENTATION_COLOR_READ_FORMAT))
                  return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                if (!(br === Dn || gr.convert(br) === Qe.getParameter(Qe.IMPLEMENTATION_COLOR_READ_TYPE) || br === Pn && (Je.isWebGL2 || Ue.get("OES_texture_float") || Ue.get("WEBGL_color_buffer_float")) || br === ni && (Je.isWebGL2 ? Ue.get("EXT_color_buffer_float") : Ue.get("EXT_color_buffer_half_float"))))
                  return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                Qe.checkFramebufferStatus(Qe.FRAMEBUFFER) === Qe.FRAMEBUFFER_COMPLETE ? St >= 0 && St <= Le.width - nr && Rt >= 0 && Rt <= Le.height - fr && Qe.readPixels(St, Rt, nr, fr, gr.convert(wr), gr.convert(br), en) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
              } finally {
                hr && Qe.bindFramebuffer(Qe.FRAMEBUFFER, yr);
              }
            }
          } else
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
        }, this.copyFramebufferToTexture = function(Le, St, Rt) {
          var nr = St.image.width, fr = St.image.height, en = gr.convert(St.format);
          this.setTexture2D(St, 0), Qe.copyTexImage2D(Qe.TEXTURE_2D, Rt || 0, en, Le.x, Le.y, nr, fr, 0);
        }, this.copyTextureToTexture = function(Le, St, Rt, nr) {
          var fr = St.image.width, en = St.image.height, Er = gr.convert(Rt.format), hr = gr.convert(Rt.type);
          this.setTexture2D(Rt, 0), St.isDataTexture ? Qe.texSubImage2D(Qe.TEXTURE_2D, nr || 0, Le.x, Le.y, fr, en, Er, hr, St.image.data) : Qe.texSubImage2D(Qe.TEXTURE_2D, nr || 0, Le.x, Le.y, Er, hr, St.image);
        };
      }
      function ns(Z, te) {
        this.name = "", this.color = new ze(Z), this.density = te !== void 0 ? te : 25e-5;
      }
      function is(Z, te, oe) {
        this.name = "", this.color = new ze(Z), this.near = te !== void 0 ? te : 1, this.far = oe !== void 0 ? oe : 1e3;
      }
      function Nc() {
        Cr.call(this), this.type = "Scene", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0;
      }
      function Qa(Z, te) {
        this.array = Z, this.stride = te, this.count = Z !== void 0 ? Z.length / te : 0, this.dynamic = !1, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
      }
      function Hs(Z, te, oe, se) {
        this.data = Z, this.itemSize = te, this.offset = oe, this.normalized = se === !0;
      }
      function Ea(Z) {
        Un.call(this), this.type = "SpriteMaterial", this.color = new ze(16777215), this.map = null, this.rotation = 0, this.lights = !1, this.transparent = !0, this.setValues(Z);
      }
      function Ds(Z) {
        if (Cr.call(this), this.type = "Sprite", ts === void 0) {
          ts = new an();
          var te = new Qa(new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]), 5);
          ts.setIndex([0, 1, 2, 0, 2, 3]), ts.addAttribute("position", new Hs(te, 3, 0, !1)), ts.addAttribute("uv", new Hs(te, 2, 3, !1));
        }
        this.geometry = ts, this.material = Z !== void 0 ? Z : new Ea(), this.center = new Qr(0.5, 0.5);
      }
      function qs() {
        Cr.call(this), this.type = "LOD", Object.defineProperties(this, { levels: { enumerable: !0, value: [] } });
      }
      function $s(Z, te) {
        if (Z = Z || [], this.bones = Z.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), te === void 0)
          this.calculateInverses();
        else if (this.bones.length === te.length)
          this.boneInverses = te.slice(0);
        else {
          console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
          for (var oe = 0, se = this.bones.length; oe < se; oe++)
            this.boneInverses.push(new yn());
        }
      }
      function kc() {
        Cr.call(this), this.type = "Bone";
      }
      function Fc(Z, te) {
        lo.call(this, Z, te), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new yn(), this.bindMatrixInverse = new yn();
        var oe = new $s(this.initBones());
        this.bind(oe, this.matrixWorld), this.normalizeSkinWeights();
      }
      function Ai(Z) {
        Un.call(this), this.type = "LineBasicMaterial", this.color = new ze(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.lights = !1, this.setValues(Z);
      }
      function fo(Z, te, oe) {
        oe === 1 && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), Cr.call(this), this.type = "Line", this.geometry = Z !== void 0 ? Z : new an(), this.material = te !== void 0 ? te : new Ai({ color: 16777215 * Math.random() });
      }
      function gi(Z, te) {
        fo.call(this, Z, te), this.type = "LineSegments";
      }
      function Gc(Z, te) {
        fo.call(this, Z, te), this.type = "LineLoop";
      }
      function ko(Z) {
        Un.call(this), this.type = "PointsMaterial", this.color = new ze(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.morphTargets = !1, this.lights = !1, this.setValues(Z);
      }
      function os(Z, te) {
        Cr.call(this), this.type = "Points", this.geometry = Z !== void 0 ? Z : new an(), this.material = te !== void 0 ? te : new ko({ color: 16777215 * Math.random() });
      }
      function uA(Z, te, oe, se, Ae, ue, fe, pe, ve) {
        li.call(this, Z, te, oe, se, Ae, ue, fe, pe, ve), this.generateMipmaps = !1;
      }
      function as(Z, te, oe, se, Ae, ue, fe, pe, ve, xe, Me, Ne) {
        li.call(this, null, ue, fe, pe, ve, xe, se, Ae, Me, Ne), this.image = { width: te, height: oe }, this.mipmaps = Z, this.flipY = !1, this.generateMipmaps = !1;
      }
      function js(Z, te, oe, se, Ae, ue, fe, pe, ve) {
        li.call(this, Z, te, oe, se, Ae, ue, fe, pe, ve), this.needsUpdate = !0;
      }
      function Ys(Z, te, oe, se, Ae, ue, fe, pe, ve, xe) {
        if ((xe = xe !== void 0 ? xe : Tn) !== Tn && xe !== _n)
          throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        oe === void 0 && xe === Tn && (oe = yi), oe === void 0 && xe === _n && (oe = Ci), li.call(this, null, se, Ae, ue, fe, pe, xe, oe, ve), this.image = { width: Z, height: te }, this.magFilter = fe !== void 0 ? fe : Tr, this.minFilter = pe !== void 0 ? pe : Tr, this.flipY = !1, this.generateMipmaps = !1;
      }
      function ss(Z) {
        an.call(this), this.type = "WireframeGeometry";
        var te, oe, se, Ae, ue, fe, pe, ve, xe, Me, Ne = [], Qe = [0, 0], Ue = {}, Je = ["a", "b", "c"];
        if (Z && Z.isGeometry) {
          var rt = Z.faces;
          for (te = 0, se = rt.length; te < se; te++) {
            var it = rt[te];
            for (oe = 0; oe < 3; oe++)
              pe = it[Je[oe]], ve = it[Je[(oe + 1) % 3]], Qe[0] = Math.min(pe, ve), Qe[1] = Math.max(pe, ve), Ue[xe = Qe[0] + "," + Qe[1]] === void 0 && (Ue[xe] = { index1: Qe[0], index2: Qe[1] });
          }
          for (xe in Ue)
            fe = Ue[xe], Me = Z.vertices[fe.index1], Ne.push(Me.x, Me.y, Me.z), Me = Z.vertices[fe.index2], Ne.push(Me.x, Me.y, Me.z);
        } else if (Z && Z.isBufferGeometry) {
          var ft, vt, ut, Gt, Ht, pt, Tt;
          if (Me = new Bt(), Z.index !== null) {
            for (ft = Z.attributes.position, vt = Z.index, (ut = Z.groups).length === 0 && (ut = [{ start: 0, count: vt.count, materialIndex: 0 }]), Ae = 0, ue = ut.length; Ae < ue; ++Ae)
              for (te = Ht = (Gt = ut[Ae]).start, se = Ht + Gt.count; te < se; te += 3)
                for (oe = 0; oe < 3; oe++)
                  pe = vt.getX(te + oe), ve = vt.getX(te + (oe + 1) % 3), Qe[0] = Math.min(pe, ve), Qe[1] = Math.max(pe, ve), Ue[xe = Qe[0] + "," + Qe[1]] === void 0 && (Ue[xe] = { index1: Qe[0], index2: Qe[1] });
            for (xe in Ue)
              fe = Ue[xe], Me.fromBufferAttribute(ft, fe.index1), Ne.push(Me.x, Me.y, Me.z), Me.fromBufferAttribute(ft, fe.index2), Ne.push(Me.x, Me.y, Me.z);
          } else
            for (te = 0, se = (ft = Z.attributes.position).count / 3; te < se; te++)
              for (oe = 0; oe < 3; oe++)
                pt = 3 * te + oe, Me.fromBufferAttribute(ft, pt), Ne.push(Me.x, Me.y, Me.z), Tt = 3 * te + (oe + 1) % 3, Me.fromBufferAttribute(ft, Tt), Ne.push(Me.x, Me.y, Me.z);
        }
        this.addAttribute("position", new Yr(Ne, 3));
      }
      function Vs(Z, te, oe) {
        Xr.call(this), this.type = "ParametricGeometry", this.parameters = { func: Z, slices: te, stacks: oe }, this.fromBufferGeometry(new cs(Z, te, oe)), this.mergeVertices();
      }
      function cs(Z, te, oe) {
        an.call(this), this.type = "ParametricBufferGeometry", this.parameters = { func: Z, slices: te, stacks: oe };
        var se, Ae, ue = [], fe = [], pe = [], ve = [], xe = new Bt(), Me = new Bt(), Ne = new Bt(), Qe = new Bt(), Ue = new Bt();
        Z.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        var Je = te + 1;
        for (se = 0; se <= oe; se++) {
          var rt = se / oe;
          for (Ae = 0; Ae <= te; Ae++) {
            var it = Ae / te;
            Z(it, rt, Me), fe.push(Me.x, Me.y, Me.z), it - 1e-5 >= 0 ? (Z(it - 1e-5, rt, Ne), Qe.subVectors(Me, Ne)) : (Z(it + 1e-5, rt, Ne), Qe.subVectors(Ne, Me)), rt - 1e-5 >= 0 ? (Z(it, rt - 1e-5, Ne), Ue.subVectors(Me, Ne)) : (Z(it, rt + 1e-5, Ne), Ue.subVectors(Ne, Me)), xe.crossVectors(Qe, Ue).normalize(), pe.push(xe.x, xe.y, xe.z), ve.push(it, rt);
          }
        }
        for (se = 0; se < oe; se++)
          for (Ae = 0; Ae < te; Ae++) {
            var ft = se * Je + Ae, vt = se * Je + Ae + 1, ut = (se + 1) * Je + Ae + 1, Gt = (se + 1) * Je + Ae;
            ue.push(ft, vt, Gt), ue.push(vt, ut, Gt);
          }
        this.setIndex(ue), this.addAttribute("position", new Yr(fe, 3)), this.addAttribute("normal", new Yr(pe, 3)), this.addAttribute("uv", new Yr(ve, 2));
      }
      function Ls(Z, te, oe, se) {
        Xr.call(this), this.type = "PolyhedronGeometry", this.parameters = { vertices: Z, indices: te, radius: oe, detail: se }, this.fromBufferGeometry(new ho(Z, te, oe, se)), this.mergeVertices();
      }
      function ho(Z, te, oe, se) {
        an.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = { vertices: Z, indices: te, radius: oe, detail: se }, oe = oe || 1;
        var Ae = [], ue = [];
        function fe(Qe, Ue, Je, rt) {
          var it, ft, vt = Math.pow(2, rt), ut = [];
          for (it = 0; it <= vt; it++) {
            ut[it] = [];
            var Gt = Qe.clone().lerp(Je, it / vt), Ht = Ue.clone().lerp(Je, it / vt), pt = vt - it;
            for (ft = 0; ft <= pt; ft++)
              ut[it][ft] = ft === 0 && it === vt ? Gt : Gt.clone().lerp(Ht, ft / pt);
          }
          for (it = 0; it < vt; it++)
            for (ft = 0; ft < 2 * (vt - it) - 1; ft++) {
              var Tt = Math.floor(ft / 2);
              ft % 2 == 0 ? (pe(ut[it][Tt + 1]), pe(ut[it + 1][Tt]), pe(ut[it][Tt])) : (pe(ut[it][Tt + 1]), pe(ut[it + 1][Tt + 1]), pe(ut[it + 1][Tt]));
            }
        }
        function pe(Qe) {
          Ae.push(Qe.x, Qe.y, Qe.z);
        }
        function ve(Qe, Ue) {
          var Je = 3 * Qe;
          Ue.x = Z[Je + 0], Ue.y = Z[Je + 1], Ue.z = Z[Je + 2];
        }
        function xe(Qe, Ue, Je, rt) {
          rt < 0 && Qe.x === 1 && (ue[Ue] = Qe.x - 1), Je.x === 0 && Je.z === 0 && (ue[Ue] = rt / 2 / Math.PI + 0.5);
        }
        function Me(Qe) {
          return Math.atan2(Qe.z, -Qe.x);
        }
        function Ne(Qe) {
          return Math.atan2(-Qe.y, Math.sqrt(Qe.x * Qe.x + Qe.z * Qe.z));
        }
        (function(Qe) {
          for (var Ue = new Bt(), Je = new Bt(), rt = new Bt(), it = 0; it < te.length; it += 3)
            ve(te[it + 0], Ue), ve(te[it + 1], Je), ve(te[it + 2], rt), fe(Ue, Je, rt, Qe);
        })(se = se || 0), function(Qe) {
          for (var Ue = new Bt(), Je = 0; Je < Ae.length; Je += 3)
            Ue.x = Ae[Je + 0], Ue.y = Ae[Je + 1], Ue.z = Ae[Je + 2], Ue.normalize().multiplyScalar(Qe), Ae[Je + 0] = Ue.x, Ae[Je + 1] = Ue.y, Ae[Je + 2] = Ue.z;
        }(oe), function() {
          for (var Qe = new Bt(), Ue = 0; Ue < Ae.length; Ue += 3) {
            Qe.x = Ae[Ue + 0], Qe.y = Ae[Ue + 1], Qe.z = Ae[Ue + 2];
            var Je = Me(Qe) / 2 / Math.PI + 0.5, rt = Ne(Qe) / Math.PI + 0.5;
            ue.push(Je, 1 - rt);
          }
          (function() {
            for (var it = new Bt(), ft = new Bt(), vt = new Bt(), ut = new Bt(), Gt = new Qr(), Ht = new Qr(), pt = new Qr(), Tt = 0, zt = 0; Tt < Ae.length; Tt += 9, zt += 6) {
              it.set(Ae[Tt + 0], Ae[Tt + 1], Ae[Tt + 2]), ft.set(Ae[Tt + 3], Ae[Tt + 4], Ae[Tt + 5]), vt.set(Ae[Tt + 6], Ae[Tt + 7], Ae[Tt + 8]), Gt.set(ue[zt + 0], ue[zt + 1]), Ht.set(ue[zt + 2], ue[zt + 3]), pt.set(ue[zt + 4], ue[zt + 5]), ut.copy(it).add(ft).add(vt).divideScalar(3);
              var Dt = Me(ut);
              xe(Gt, zt + 0, it, Dt), xe(Ht, zt + 2, ft, Dt), xe(pt, zt + 4, vt, Dt);
            }
          })(), function() {
            for (var it = 0; it < ue.length; it += 6) {
              var ft = ue[it + 0], vt = ue[it + 2], ut = ue[it + 4], Gt = Math.max(ft, vt, ut), Ht = Math.min(ft, vt, ut);
              Gt > 0.9 && Ht < 0.1 && (ft < 0.2 && (ue[it + 0] += 1), vt < 0.2 && (ue[it + 2] += 1), ut < 0.2 && (ue[it + 4] += 1));
            }
          }();
        }(), this.addAttribute("position", new Yr(Ae, 3)), this.addAttribute("normal", new Yr(Ae.slice(), 3)), this.addAttribute("uv", new Yr(ue, 2)), se === 0 ? this.computeVertexNormals() : this.normalizeNormals();
      }
      function zs(Z, te) {
        Xr.call(this), this.type = "TetrahedronGeometry", this.parameters = { radius: Z, detail: te }, this.fromBufferGeometry(new As(Z, te)), this.mergeVertices();
      }
      function As(Z, te) {
        ho.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], Z, te), this.type = "TetrahedronBufferGeometry", this.parameters = { radius: Z, detail: te };
      }
      function Js(Z, te) {
        Xr.call(this), this.type = "OctahedronGeometry", this.parameters = { radius: Z, detail: te }, this.fromBufferGeometry(new Sa(Z, te)), this.mergeVertices();
      }
      function Sa(Z, te) {
        ho.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], Z, te), this.type = "OctahedronBufferGeometry", this.parameters = { radius: Z, detail: te };
      }
      function Ws(Z, te) {
        Xr.call(this), this.type = "IcosahedronGeometry", this.parameters = { radius: Z, detail: te }, this.fromBufferGeometry(new us(Z, te)), this.mergeVertices();
      }
      function us(Z, te) {
        var oe = (1 + Math.sqrt(5)) / 2, se = [-1, oe, 0, 1, oe, 0, -1, -oe, 0, 1, -oe, 0, 0, -1, oe, 0, 1, oe, 0, -1, -oe, 0, 1, -oe, oe, 0, -1, oe, 0, 1, -oe, 0, -1, -oe, 0, 1];
        ho.call(this, se, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], Z, te), this.type = "IcosahedronBufferGeometry", this.parameters = { radius: Z, detail: te };
      }
      function Ks(Z, te) {
        Xr.call(this), this.type = "DodecahedronGeometry", this.parameters = { radius: Z, detail: te }, this.fromBufferGeometry(new ls(Z, te)), this.mergeVertices();
      }
      function ls(Z, te) {
        var oe = (1 + Math.sqrt(5)) / 2, se = 1 / oe, Ae = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -se, -oe, 0, -se, oe, 0, se, -oe, 0, se, oe, -se, -oe, 0, -se, oe, 0, se, -oe, 0, se, oe, 0, -oe, 0, -se, oe, 0, -se, -oe, 0, se, oe, 0, se];
        ho.call(this, Ae, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], Z, te), this.type = "DodecahedronBufferGeometry", this.parameters = { radius: Z, detail: te };
      }
      function Zs(Z, te, oe, se, Ae, ue) {
        Xr.call(this), this.type = "TubeGeometry", this.parameters = { path: Z, tubularSegments: te, radius: oe, radialSegments: se, closed: Ae }, ue !== void 0 && console.warn("THREE.TubeGeometry: taper has been removed.");
        var fe = new ds(Z, te, oe, se, Ae);
        this.tangents = fe.tangents, this.normals = fe.normals, this.binormals = fe.binormals, this.fromBufferGeometry(fe), this.mergeVertices();
      }
      function ds(Z, te, oe, se, Ae) {
        an.call(this), this.type = "TubeBufferGeometry", this.parameters = { path: Z, tubularSegments: te, radius: oe, radialSegments: se, closed: Ae }, te = te || 64, oe = oe || 1, se = se || 8, Ae = Ae || !1;
        var ue = Z.computeFrenetFrames(te, Ae);
        this.tangents = ue.tangents, this.normals = ue.normals, this.binormals = ue.binormals;
        var fe, pe, ve = new Bt(), xe = new Bt(), Me = new Qr(), Ne = new Bt(), Qe = [], Ue = [], Je = [], rt = [];
        function it(ft) {
          Ne = Z.getPointAt(ft / te, Ne);
          var vt = ue.normals[ft], ut = ue.binormals[ft];
          for (pe = 0; pe <= se; pe++) {
            var Gt = pe / se * Math.PI * 2, Ht = Math.sin(Gt), pt = -Math.cos(Gt);
            xe.x = pt * vt.x + Ht * ut.x, xe.y = pt * vt.y + Ht * ut.y, xe.z = pt * vt.z + Ht * ut.z, xe.normalize(), Ue.push(xe.x, xe.y, xe.z), ve.x = Ne.x + oe * xe.x, ve.y = Ne.y + oe * xe.y, ve.z = Ne.z + oe * xe.z, Qe.push(ve.x, ve.y, ve.z);
          }
        }
        (function() {
          for (fe = 0; fe < te; fe++)
            it(fe);
          it(Ae === !1 ? te : 0), function() {
            for (fe = 0; fe <= te; fe++)
              for (pe = 0; pe <= se; pe++)
                Me.x = fe / te, Me.y = pe / se, Je.push(Me.x, Me.y);
          }(), function() {
            for (pe = 1; pe <= te; pe++)
              for (fe = 1; fe <= se; fe++) {
                var ft = (se + 1) * (pe - 1) + (fe - 1), vt = (se + 1) * pe + (fe - 1), ut = (se + 1) * pe + fe, Gt = (se + 1) * (pe - 1) + fe;
                rt.push(ft, vt, Gt), rt.push(vt, ut, Gt);
              }
          }();
        })(), this.setIndex(rt), this.addAttribute("position", new Yr(Qe, 3)), this.addAttribute("normal", new Yr(Ue, 3)), this.addAttribute("uv", new Yr(Je, 2));
      }
      function Xs(Z, te, oe, se, Ae, ue, fe) {
        Xr.call(this), this.type = "TorusKnotGeometry", this.parameters = { radius: Z, tube: te, tubularSegments: oe, radialSegments: se, p: Ae, q: ue }, fe !== void 0 && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new fs(Z, te, oe, se, Ae, ue)), this.mergeVertices();
      }
      function fs(Z, te, oe, se, Ae, ue) {
        an.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = { radius: Z, tube: te, tubularSegments: oe, radialSegments: se, p: Ae, q: ue }, Z = Z || 1, te = te || 0.4, oe = Math.floor(oe) || 64, se = Math.floor(se) || 8, Ae = Ae || 2, ue = ue || 3;
        var fe, pe, ve = [], xe = [], Me = [], Ne = [], Qe = new Bt(), Ue = new Bt(), Je = new Bt(), rt = new Bt(), it = new Bt(), ft = new Bt(), vt = new Bt();
        for (fe = 0; fe <= oe; ++fe) {
          var ut = fe / oe * Ae * Math.PI * 2;
          for (Lt(ut, Ae, ue, Z, Je), Lt(ut + 0.01, Ae, ue, Z, rt), ft.subVectors(rt, Je), vt.addVectors(rt, Je), it.crossVectors(ft, vt), vt.crossVectors(it, ft), it.normalize(), vt.normalize(), pe = 0; pe <= se; ++pe) {
            var Gt = pe / se * Math.PI * 2, Ht = -te * Math.cos(Gt), pt = te * Math.sin(Gt);
            Qe.x = Je.x + (Ht * vt.x + pt * it.x), Qe.y = Je.y + (Ht * vt.y + pt * it.y), Qe.z = Je.z + (Ht * vt.z + pt * it.z), xe.push(Qe.x, Qe.y, Qe.z), Ue.subVectors(Qe, Je).normalize(), Me.push(Ue.x, Ue.y, Ue.z), Ne.push(fe / oe), Ne.push(pe / se);
          }
        }
        for (pe = 1; pe <= oe; pe++)
          for (fe = 1; fe <= se; fe++) {
            var Tt = (se + 1) * (pe - 1) + (fe - 1), zt = (se + 1) * pe + (fe - 1), Dt = (se + 1) * pe + fe, or = (se + 1) * (pe - 1) + fe;
            ve.push(Tt, zt, or), ve.push(zt, Dt, or);
          }
        function Lt(lr, gr, xr, vr, Dr) {
          var Or = Math.cos(lr), yr = Math.sin(lr), Nr = xr / gr * lr, pr = Math.cos(Nr);
          Dr.x = vr * (2 + pr) * 0.5 * Or, Dr.y = vr * (2 + pr) * yr * 0.5, Dr.z = vr * Math.sin(Nr) * 0.5;
        }
        this.setIndex(ve), this.addAttribute("position", new Yr(xe, 3)), this.addAttribute("normal", new Yr(Me, 3)), this.addAttribute("uv", new Yr(Ne, 2));
      }
      function ec(Z, te, oe, se, Ae) {
        Xr.call(this), this.type = "TorusGeometry", this.parameters = { radius: Z, tube: te, radialSegments: oe, tubularSegments: se, arc: Ae }, this.fromBufferGeometry(new hs(Z, te, oe, se, Ae)), this.mergeVertices();
      }
      function hs(Z, te, oe, se, Ae) {
        an.call(this), this.type = "TorusBufferGeometry", this.parameters = { radius: Z, tube: te, radialSegments: oe, tubularSegments: se, arc: Ae }, Z = Z || 1, te = te || 0.4, oe = Math.floor(oe) || 8, se = Math.floor(se) || 6, Ae = Ae || 2 * Math.PI;
        var ue, fe, pe = [], ve = [], xe = [], Me = [], Ne = new Bt(), Qe = new Bt(), Ue = new Bt();
        for (ue = 0; ue <= oe; ue++)
          for (fe = 0; fe <= se; fe++) {
            var Je = fe / se * Ae, rt = ue / oe * Math.PI * 2;
            Qe.x = (Z + te * Math.cos(rt)) * Math.cos(Je), Qe.y = (Z + te * Math.cos(rt)) * Math.sin(Je), Qe.z = te * Math.sin(rt), ve.push(Qe.x, Qe.y, Qe.z), Ne.x = Z * Math.cos(Je), Ne.y = Z * Math.sin(Je), Ue.subVectors(Qe, Ne).normalize(), xe.push(Ue.x, Ue.y, Ue.z), Me.push(fe / se), Me.push(ue / oe);
          }
        for (ue = 1; ue <= oe; ue++)
          for (fe = 1; fe <= se; fe++) {
            var it = (se + 1) * ue + fe - 1, ft = (se + 1) * (ue - 1) + fe - 1, vt = (se + 1) * (ue - 1) + fe, ut = (se + 1) * ue + fe;
            pe.push(it, ft, ut), pe.push(ft, vt, ut);
          }
        this.setIndex(pe), this.addAttribute("position", new Yr(ve, 3)), this.addAttribute("normal", new Yr(xe, 3)), this.addAttribute("uv", new Yr(Me, 2));
      }
      ga.prototype = Object.create(Un.prototype), ga.prototype.constructor = ga, ga.prototype.isMeshDepthMaterial = !0, ga.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.depthPacking = Z.depthPacking, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.map = Z.map, this.alphaMap = Z.alphaMap, this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this;
      }, ma.prototype = Object.create(Un.prototype), ma.prototype.constructor = ma, ma.prototype.isMeshDistanceMaterial = !0, ma.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.referencePosition.copy(Z.referencePosition), this.nearDistance = Z.nearDistance, this.farDistance = Z.farDistance, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.map = Z.map, this.alphaMap = Z.alphaMap, this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this;
      }, rs.prototype = Object.assign(Object.create(Cr.prototype), { constructor: rs, isGroup: !0 }), Si.prototype = Object.assign(Object.create(Jn.prototype), { constructor: Si, isPerspectiveCamera: !0, copy: function(Z, te) {
        return Jn.prototype.copy.call(this, Z, te), this.fov = Z.fov, this.zoom = Z.zoom, this.near = Z.near, this.far = Z.far, this.focus = Z.focus, this.aspect = Z.aspect, this.view = Z.view === null ? null : Object.assign({}, Z.view), this.filmGauge = Z.filmGauge, this.filmOffset = Z.filmOffset, this;
      }, setFocalLength: function(Z) {
        var te = 0.5 * this.getFilmHeight() / Z;
        this.fov = 2 * Mn.RAD2DEG * Math.atan(te), this.updateProjectionMatrix();
      }, getFocalLength: function() {
        var Z = Math.tan(0.5 * Mn.DEG2RAD * this.fov);
        return 0.5 * this.getFilmHeight() / Z;
      }, getEffectiveFOV: function() {
        return 2 * Mn.RAD2DEG * Math.atan(Math.tan(0.5 * Mn.DEG2RAD * this.fov) / this.zoom);
      }, getFilmWidth: function() {
        return this.filmGauge * Math.min(this.aspect, 1);
      }, getFilmHeight: function() {
        return this.filmGauge / Math.max(this.aspect, 1);
      }, setViewOffset: function(Z, te, oe, se, Ae, ue) {
        this.aspect = Z / te, this.view === null && (this.view = { enabled: !0, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = !0, this.view.fullWidth = Z, this.view.fullHeight = te, this.view.offsetX = oe, this.view.offsetY = se, this.view.width = Ae, this.view.height = ue, this.updateProjectionMatrix();
      }, clearViewOffset: function() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
      }, updateProjectionMatrix: function() {
        var Z = this.near, te = Z * Math.tan(0.5 * Mn.DEG2RAD * this.fov) / this.zoom, oe = 2 * te, se = this.aspect * oe, Ae = -0.5 * se, ue = this.view;
        if (this.view !== null && this.view.enabled) {
          var fe = ue.fullWidth, pe = ue.fullHeight;
          Ae += ue.offsetX * se / fe, te -= ue.offsetY * oe / pe, se *= ue.width / fe, oe *= ue.height / pe;
        }
        var ve = this.filmOffset;
        ve !== 0 && (Ae += Z * ve / this.getFilmWidth()), this.projectionMatrix.makePerspective(Ae, Ae + se, te, te - oe, Z, this.far);
      }, toJSON: function(Z) {
        var te = Cr.prototype.toJSON.call(this, Z);
        return te.object.fov = this.fov, te.object.zoom = this.zoom, te.object.near = this.near, te.object.far = this.far, te.object.focus = this.focus, te.object.aspect = this.aspect, this.view !== null && (te.object.view = Object.assign({}, this.view)), te.object.filmGauge = this.filmGauge, te.object.filmOffset = this.filmOffset, te;
      } }), Us.prototype = Object.assign(Object.create(Si.prototype), { constructor: Us, isArrayCamera: !0 }), ns.prototype.isFogExp2 = !0, ns.prototype.clone = function() {
        return new ns(this.color, this.density);
      }, ns.prototype.toJSON = function() {
        return { type: "FogExp2", color: this.color.getHex(), density: this.density };
      }, is.prototype.isFog = !0, is.prototype.clone = function() {
        return new is(this.color, this.near, this.far);
      }, is.prototype.toJSON = function() {
        return { type: "Fog", color: this.color.getHex(), near: this.near, far: this.far };
      }, Nc.prototype = Object.assign(Object.create(Cr.prototype), { constructor: Nc, copy: function(Z, te) {
        return Cr.prototype.copy.call(this, Z, te), Z.background !== null && (this.background = Z.background.clone()), Z.fog !== null && (this.fog = Z.fog.clone()), Z.overrideMaterial !== null && (this.overrideMaterial = Z.overrideMaterial.clone()), this.autoUpdate = Z.autoUpdate, this.matrixAutoUpdate = Z.matrixAutoUpdate, this;
      }, toJSON: function(Z) {
        var te = Cr.prototype.toJSON.call(this, Z);
        return this.background !== null && (te.object.background = this.background.toJSON(Z)), this.fog !== null && (te.object.fog = this.fog.toJSON()), te;
      } }), Object.defineProperty(Qa.prototype, "needsUpdate", { set: function(Z) {
        Z === !0 && this.version++;
      } }), Object.assign(Qa.prototype, { isInterleavedBuffer: !0, onUploadCallback: function() {
      }, setArray: function(Z) {
        if (Array.isArray(Z))
          throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        return this.count = Z !== void 0 ? Z.length / this.stride : 0, this.array = Z, this;
      }, setDynamic: function(Z) {
        return this.dynamic = Z, this;
      }, copy: function(Z) {
        return this.array = new Z.array.constructor(Z.array), this.count = Z.count, this.stride = Z.stride, this.dynamic = Z.dynamic, this;
      }, copyAt: function(Z, te, oe) {
        Z *= this.stride, oe *= te.stride;
        for (var se = 0, Ae = this.stride; se < Ae; se++)
          this.array[Z + se] = te.array[oe + se];
        return this;
      }, set: function(Z, te) {
        return te === void 0 && (te = 0), this.array.set(Z, te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, onUpload: function(Z) {
        return this.onUploadCallback = Z, this;
      } }), Object.defineProperties(Hs.prototype, { count: { get: function() {
        return this.data.count;
      } }, array: { get: function() {
        return this.data.array;
      } } }), Object.assign(Hs.prototype, { isInterleavedBufferAttribute: !0, setX: function(Z, te) {
        return this.data.array[Z * this.data.stride + this.offset] = te, this;
      }, setY: function(Z, te) {
        return this.data.array[Z * this.data.stride + this.offset + 1] = te, this;
      }, setZ: function(Z, te) {
        return this.data.array[Z * this.data.stride + this.offset + 2] = te, this;
      }, setW: function(Z, te) {
        return this.data.array[Z * this.data.stride + this.offset + 3] = te, this;
      }, getX: function(Z) {
        return this.data.array[Z * this.data.stride + this.offset];
      }, getY: function(Z) {
        return this.data.array[Z * this.data.stride + this.offset + 1];
      }, getZ: function(Z) {
        return this.data.array[Z * this.data.stride + this.offset + 2];
      }, getW: function(Z) {
        return this.data.array[Z * this.data.stride + this.offset + 3];
      }, setXY: function(Z, te, oe) {
        return Z = Z * this.data.stride + this.offset, this.data.array[Z + 0] = te, this.data.array[Z + 1] = oe, this;
      }, setXYZ: function(Z, te, oe, se) {
        return Z = Z * this.data.stride + this.offset, this.data.array[Z + 0] = te, this.data.array[Z + 1] = oe, this.data.array[Z + 2] = se, this;
      }, setXYZW: function(Z, te, oe, se, Ae) {
        return Z = Z * this.data.stride + this.offset, this.data.array[Z + 0] = te, this.data.array[Z + 1] = oe, this.data.array[Z + 2] = se, this.data.array[Z + 3] = Ae, this;
      } }), Ea.prototype = Object.create(Un.prototype), Ea.prototype.constructor = Ea, Ea.prototype.isSpriteMaterial = !0, Ea.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.color.copy(Z.color), this.map = Z.map, this.rotation = Z.rotation, this;
      }, Ds.prototype = Object.assign(Object.create(Cr.prototype), { constructor: Ds, isSprite: !0, raycast: function() {
        var Z = new Bt(), te = new Bt(), oe = new Bt(), se = new Qr(), Ae = new Qr(), ue = new yn(), fe = new Bt(), pe = new Bt(), ve = new Bt();
        function xe(Me, Ne, Qe, Ue, Je, rt) {
          se.subVectors(Me, Qe).addScalar(0.5).multiply(Ue), Je !== void 0 ? (Ae.x = rt * se.x - Je * se.y, Ae.y = Je * se.x + rt * se.y) : Ae.copy(se), Me.copy(Ne), Me.x += Ae.x, Me.y += Ae.y, Me.applyMatrix4(ue);
        }
        return function(Me, Ne) {
          te.setFromMatrixScale(this.matrixWorld), ue.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld), oe.setFromMatrixPosition(this.modelViewMatrix);
          var Qe, Ue, Je = this.material.rotation;
          Je !== 0 && (Ue = Math.cos(Je), Qe = Math.sin(Je));
          var rt = this.center;
          xe(fe.set(-0.5, -0.5, 0), oe, rt, te, Qe, Ue), xe(pe.set(0.5, -0.5, 0), oe, rt, te, Qe, Ue), xe(ve.set(0.5, 0.5, 0), oe, rt, te, Qe, Ue);
          var it = Me.ray.intersectTriangle(fe, pe, ve, !1, Z);
          if (it !== null || (xe(pe.set(-0.5, 0.5, 0), oe, rt, te, Qe, Ue), (it = Me.ray.intersectTriangle(fe, ve, pe, !1, Z)) !== null)) {
            var ft = Me.ray.origin.distanceTo(Z);
            ft < Me.near || ft > Me.far || Ne.push({ distance: ft, point: Z.clone(), face: null, object: this });
          }
        };
      }(), clone: function() {
        return new this.constructor(this.material).copy(this);
      }, copy: function(Z) {
        return Cr.prototype.copy.call(this, Z), Z.center !== void 0 && this.center.copy(Z.center), this;
      } }), qs.prototype = Object.assign(Object.create(Cr.prototype), { constructor: qs, copy: function(Z) {
        Cr.prototype.copy.call(this, Z, !1);
        for (var te = Z.levels, oe = 0, se = te.length; oe < se; oe++) {
          var Ae = te[oe];
          this.addLevel(Ae.object.clone(), Ae.distance);
        }
        return this;
      }, addLevel: function(Z, te) {
        te === void 0 && (te = 0), te = Math.abs(te);
        for (var oe = this.levels, se = 0; se < oe.length && !(te < oe[se].distance); se++)
          ;
        oe.splice(se, 0, { distance: te, object: Z }), this.add(Z);
      }, getObjectForDistance: function(Z) {
        for (var te = this.levels, oe = 1, se = te.length; oe < se && !(Z < te[oe].distance); oe++)
          ;
        return te[oe - 1].object;
      }, raycast: function() {
        var Z = new Bt();
        return function(te, oe) {
          Z.setFromMatrixPosition(this.matrixWorld);
          var se = te.ray.origin.distanceTo(Z);
          this.getObjectForDistance(se).raycast(te, oe);
        };
      }(), update: function() {
        var Z = new Bt(), te = new Bt();
        return function(oe) {
          var se = this.levels;
          if (se.length > 1) {
            Z.setFromMatrixPosition(oe.matrixWorld), te.setFromMatrixPosition(this.matrixWorld);
            var Ae = Z.distanceTo(te);
            se[0].object.visible = !0;
            for (var ue = 1, fe = se.length; ue < fe && Ae >= se[ue].distance; ue++)
              se[ue - 1].object.visible = !1, se[ue].object.visible = !0;
            for (; ue < fe; ue++)
              se[ue].object.visible = !1;
          }
        };
      }(), toJSON: function(Z) {
        var te = Cr.prototype.toJSON.call(this, Z);
        te.object.levels = [];
        for (var oe = this.levels, se = 0, Ae = oe.length; se < Ae; se++) {
          var ue = oe[se];
          te.object.levels.push({ object: ue.object.uuid, distance: ue.distance });
        }
        return te;
      } }), Object.assign($s.prototype, { calculateInverses: function() {
        this.boneInverses = [];
        for (var Z = 0, te = this.bones.length; Z < te; Z++) {
          var oe = new yn();
          this.bones[Z] && oe.getInverse(this.bones[Z].matrixWorld), this.boneInverses.push(oe);
        }
      }, pose: function() {
        var Z, te, oe;
        for (te = 0, oe = this.bones.length; te < oe; te++)
          (Z = this.bones[te]) && Z.matrixWorld.getInverse(this.boneInverses[te]);
        for (te = 0, oe = this.bones.length; te < oe; te++)
          (Z = this.bones[te]) && (Z.parent && Z.parent.isBone ? (Z.matrix.getInverse(Z.parent.matrixWorld), Z.matrix.multiply(Z.matrixWorld)) : Z.matrix.copy(Z.matrixWorld), Z.matrix.decompose(Z.position, Z.quaternion, Z.scale));
      }, update: function() {
        var Z = new yn(), te = new yn();
        return function() {
          for (var oe = this.bones, se = this.boneInverses, Ae = this.boneMatrices, ue = this.boneTexture, fe = 0, pe = oe.length; fe < pe; fe++) {
            var ve = oe[fe] ? oe[fe].matrixWorld : te;
            Z.multiplyMatrices(ve, se[fe]), Z.toArray(Ae, 16 * fe);
          }
          ue !== void 0 && (ue.needsUpdate = !0);
        };
      }(), clone: function() {
        return new $s(this.bones, this.boneInverses);
      }, getBoneByName: function(Z) {
        for (var te = 0, oe = this.bones.length; te < oe; te++) {
          var se = this.bones[te];
          if (se.name === Z)
            return se;
        }
      } }), kc.prototype = Object.assign(Object.create(Cr.prototype), { constructor: kc, isBone: !0 }), Fc.prototype = Object.assign(Object.create(lo.prototype), { constructor: Fc, isSkinnedMesh: !0, initBones: function() {
        var Z, te, oe, se, Ae = [];
        if (this.geometry && this.geometry.bones !== void 0) {
          for (oe = 0, se = this.geometry.bones.length; oe < se; oe++)
            te = this.geometry.bones[oe], Z = new kc(), Ae.push(Z), Z.name = te.name, Z.position.fromArray(te.pos), Z.quaternion.fromArray(te.rotq), te.scl !== void 0 && Z.scale.fromArray(te.scl);
          for (oe = 0, se = this.geometry.bones.length; oe < se; oe++)
            (te = this.geometry.bones[oe]).parent !== -1 && te.parent !== null && Ae[te.parent] !== void 0 ? Ae[te.parent].add(Ae[oe]) : this.add(Ae[oe]);
        }
        return this.updateMatrixWorld(!0), Ae;
      }, bind: function(Z, te) {
        this.skeleton = Z, te === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), te = this.matrixWorld), this.bindMatrix.copy(te), this.bindMatrixInverse.getInverse(te);
      }, pose: function() {
        this.skeleton.pose();
      }, normalizeSkinWeights: function() {
        var Z, te;
        if (this.geometry && this.geometry.isGeometry)
          for (te = 0; te < this.geometry.skinWeights.length; te++) {
            var oe = this.geometry.skinWeights[te];
            (Z = 1 / oe.manhattanLength()) !== 1 / 0 ? oe.multiplyScalar(Z) : oe.set(1, 0, 0, 0);
          }
        else if (this.geometry && this.geometry.isBufferGeometry) {
          var se = new Kn(), Ae = this.geometry.attributes.skinWeight;
          for (te = 0; te < Ae.count; te++)
            se.x = Ae.getX(te), se.y = Ae.getY(te), se.z = Ae.getZ(te), se.w = Ae.getW(te), (Z = 1 / se.manhattanLength()) !== 1 / 0 ? se.multiplyScalar(Z) : se.set(1, 0, 0, 0), Ae.setXYZW(te, se.x, se.y, se.z, se.w);
        }
      }, updateMatrixWorld: function(Z) {
        lo.prototype.updateMatrixWorld.call(this, Z), this.bindMode === "attached" ? this.bindMatrixInverse.getInverse(this.matrixWorld) : this.bindMode === "detached" ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
      }, clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), Ai.prototype = Object.create(Un.prototype), Ai.prototype.constructor = Ai, Ai.prototype.isLineBasicMaterial = !0, Ai.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.color.copy(Z.color), this.linewidth = Z.linewidth, this.linecap = Z.linecap, this.linejoin = Z.linejoin, this;
      }, fo.prototype = Object.assign(Object.create(Cr.prototype), { constructor: fo, isLine: !0, computeLineDistances: function() {
        var Z = new Bt(), te = new Bt();
        return function() {
          var oe = this.geometry;
          if (oe.isBufferGeometry)
            if (oe.index === null) {
              for (var se = oe.attributes.position, Ae = [0], ue = 1, fe = se.count; ue < fe; ue++)
                Z.fromBufferAttribute(se, ue - 1), te.fromBufferAttribute(se, ue), Ae[ue] = Ae[ue - 1], Ae[ue] += Z.distanceTo(te);
              oe.addAttribute("lineDistance", new Yr(Ae, 1));
            } else
              console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
          else if (oe.isGeometry) {
            var pe = oe.vertices;
            for ((Ae = oe.lineDistances)[0] = 0, ue = 1, fe = pe.length; ue < fe; ue++)
              Ae[ue] = Ae[ue - 1], Ae[ue] += pe[ue - 1].distanceTo(pe[ue]);
          }
          return this;
        };
      }(), raycast: function() {
        var Z = new yn(), te = new _a(), oe = new ao();
        return function(se, Ae) {
          var ue = se.linePrecision, fe = ue * ue, pe = this.geometry, ve = this.matrixWorld;
          if (pe.boundingSphere === null && pe.computeBoundingSphere(), oe.copy(pe.boundingSphere), oe.applyMatrix4(ve), se.ray.intersectsSphere(oe) !== !1) {
            Z.getInverse(ve), te.copy(se.ray).applyMatrix4(Z);
            var xe = new Bt(), Me = new Bt(), Ne = new Bt(), Qe = new Bt(), Ue = this && this.isLineSegments ? 2 : 1;
            if (pe.isBufferGeometry) {
              var Je = pe.index, rt = pe.attributes.position.array;
              if (Je !== null)
                for (var it = Je.array, ft = 0, vt = it.length - 1; ft < vt; ft += Ue) {
                  var ut = it[ft], Gt = it[ft + 1];
                  xe.fromArray(rt, 3 * ut), Me.fromArray(rt, 3 * Gt), !(te.distanceSqToSegment(xe, Me, Qe, Ne) > fe) && (Qe.applyMatrix4(this.matrixWorld), (Tt = se.ray.origin.distanceTo(Qe)) < se.near || Tt > se.far || Ae.push({ distance: Tt, point: Ne.clone().applyMatrix4(this.matrixWorld), index: ft, face: null, faceIndex: null, object: this }));
                }
              else
                for (ft = 0, vt = rt.length / 3 - 1; ft < vt; ft += Ue)
                  xe.fromArray(rt, 3 * ft), Me.fromArray(rt, 3 * ft + 3), !(te.distanceSqToSegment(xe, Me, Qe, Ne) > fe) && (Qe.applyMatrix4(this.matrixWorld), (Tt = se.ray.origin.distanceTo(Qe)) < se.near || Tt > se.far || Ae.push({ distance: Tt, point: Ne.clone().applyMatrix4(this.matrixWorld), index: ft, face: null, faceIndex: null, object: this }));
            } else if (pe.isGeometry) {
              var Ht = pe.vertices, pt = Ht.length;
              for (ft = 0; ft < pt - 1; ft += Ue) {
                var Tt;
                te.distanceSqToSegment(Ht[ft], Ht[ft + 1], Qe, Ne) > fe || (Qe.applyMatrix4(this.matrixWorld), (Tt = se.ray.origin.distanceTo(Qe)) < se.near || Tt > se.far || Ae.push({ distance: Tt, point: Ne.clone().applyMatrix4(this.matrixWorld), index: ft, face: null, faceIndex: null, object: this }));
              }
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), gi.prototype = Object.assign(Object.create(fo.prototype), { constructor: gi, isLineSegments: !0, computeLineDistances: function() {
        var Z = new Bt(), te = new Bt();
        return function() {
          var oe = this.geometry;
          if (oe.isBufferGeometry)
            if (oe.index === null) {
              for (var se = oe.attributes.position, Ae = [], ue = 0, fe = se.count; ue < fe; ue += 2)
                Z.fromBufferAttribute(se, ue), te.fromBufferAttribute(se, ue + 1), Ae[ue] = ue === 0 ? 0 : Ae[ue - 1], Ae[ue + 1] = Ae[ue] + Z.distanceTo(te);
              oe.addAttribute("lineDistance", new Yr(Ae, 1));
            } else
              console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
          else if (oe.isGeometry) {
            var pe = oe.vertices;
            for (Ae = oe.lineDistances, ue = 0, fe = pe.length; ue < fe; ue += 2)
              Z.copy(pe[ue]), te.copy(pe[ue + 1]), Ae[ue] = ue === 0 ? 0 : Ae[ue - 1], Ae[ue + 1] = Ae[ue] + Z.distanceTo(te);
          }
          return this;
        };
      }() }), Gc.prototype = Object.assign(Object.create(fo.prototype), { constructor: Gc, isLineLoop: !0 }), ko.prototype = Object.create(Un.prototype), ko.prototype.constructor = ko, ko.prototype.isPointsMaterial = !0, ko.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.color.copy(Z.color), this.map = Z.map, this.size = Z.size, this.sizeAttenuation = Z.sizeAttenuation, this.morphTargets = Z.morphTargets, this;
      }, os.prototype = Object.assign(Object.create(Cr.prototype), { constructor: os, isPoints: !0, raycast: function() {
        var Z = new yn(), te = new _a(), oe = new ao();
        return function(se, Ae) {
          var ue = this, fe = this.geometry, pe = this.matrixWorld, ve = se.params.Points.threshold;
          if (fe.boundingSphere === null && fe.computeBoundingSphere(), oe.copy(fe.boundingSphere), oe.applyMatrix4(pe), oe.radius += ve, se.ray.intersectsSphere(oe) !== !1) {
            Z.getInverse(pe), te.copy(se.ray).applyMatrix4(Z);
            var xe = ve / ((this.scale.x + this.scale.y + this.scale.z) / 3), Me = xe * xe, Ne = new Bt(), Qe = new Bt();
            if (fe.isBufferGeometry) {
              var Ue = fe.index, Je = fe.attributes.position.array;
              if (Ue !== null)
                for (var rt = Ue.array, it = 0, ft = rt.length; it < ft; it++) {
                  var vt = rt[it];
                  Ne.fromArray(Je, 3 * vt), Ht(Ne, vt);
                }
              else {
                it = 0;
                for (var ut = Je.length / 3; it < ut; it++)
                  Ne.fromArray(Je, 3 * it), Ht(Ne, it);
              }
            } else {
              var Gt = fe.vertices;
              for (it = 0, ut = Gt.length; it < ut; it++)
                Ht(Gt[it], it);
            }
          }
          function Ht(pt, Tt) {
            var zt = te.distanceSqToPoint(pt);
            if (zt < Me) {
              te.closestPointToPoint(pt, Qe), Qe.applyMatrix4(pe);
              var Dt = se.ray.origin.distanceTo(Qe);
              if (Dt < se.near || Dt > se.far)
                return;
              Ae.push({ distance: Dt, distanceToRay: Math.sqrt(zt), point: Qe.clone(), index: Tt, face: null, object: ue });
            }
          }
        };
      }(), clone: function() {
        return new this.constructor(this.geometry, this.material).copy(this);
      } }), uA.prototype = Object.assign(Object.create(li.prototype), { constructor: uA, isVideoTexture: !0, update: function() {
        var Z = this.image;
        Z.readyState >= Z.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
      } }), as.prototype = Object.create(li.prototype), as.prototype.constructor = as, as.prototype.isCompressedTexture = !0, js.prototype = Object.create(li.prototype), js.prototype.constructor = js, js.prototype.isCanvasTexture = !0, Ys.prototype = Object.create(li.prototype), Ys.prototype.constructor = Ys, Ys.prototype.isDepthTexture = !0, ss.prototype = Object.create(an.prototype), ss.prototype.constructor = ss, Vs.prototype = Object.create(Xr.prototype), Vs.prototype.constructor = Vs, cs.prototype = Object.create(an.prototype), cs.prototype.constructor = cs, Ls.prototype = Object.create(Xr.prototype), Ls.prototype.constructor = Ls, ho.prototype = Object.create(an.prototype), ho.prototype.constructor = ho, zs.prototype = Object.create(Xr.prototype), zs.prototype.constructor = zs, As.prototype = Object.create(ho.prototype), As.prototype.constructor = As, Js.prototype = Object.create(Xr.prototype), Js.prototype.constructor = Js, Sa.prototype = Object.create(ho.prototype), Sa.prototype.constructor = Sa, Ws.prototype = Object.create(Xr.prototype), Ws.prototype.constructor = Ws, us.prototype = Object.create(ho.prototype), us.prototype.constructor = us, Ks.prototype = Object.create(Xr.prototype), Ks.prototype.constructor = Ks, ls.prototype = Object.create(ho.prototype), ls.prototype.constructor = ls, Zs.prototype = Object.create(Xr.prototype), Zs.prototype.constructor = Zs, ds.prototype = Object.create(an.prototype), ds.prototype.constructor = ds, Xs.prototype = Object.create(Xr.prototype), Xs.prototype.constructor = Xs, fs.prototype = Object.create(an.prototype), fs.prototype.constructor = fs, ec.prototype = Object.create(Xr.prototype), ec.prototype.constructor = ec, hs.prototype = Object.create(an.prototype), hs.prototype.constructor = hs;
      var xl = function(Z, te, oe) {
        oe = oe || 2;
        var se, Ae, ue, fe, pe, ve, xe, Me = te && te.length, Ne = Me ? te[0] * oe : Z.length, Qe = fu(Z, 0, Ne, oe, !0), Ue = [];
        if (!Qe)
          return Ue;
        if (Me && (Qe = function(rt, it, ft, vt) {
          var ut, Gt, Ht, pt, Tt, zt = [];
          for (ut = 0, Gt = it.length; ut < Gt; ut++)
            Ht = it[ut] * vt, pt = ut < Gt - 1 ? it[ut + 1] * vt : rt.length, (Tt = fu(rt, Ht, pt, vt, !1)) === Tt.next && (Tt.steiner = !0), zt.push(Rl(Tt));
          for (zt.sort(Sl), ut = 0; ut < zt.length; ut++)
            Tl(zt[ut], ft), ft = tc(ft, ft.next);
          return ft;
        }(Z, te, Qe, oe)), Z.length > 80 * oe) {
          se = ue = Z[0], Ae = fe = Z[1];
          for (var Je = oe; Je < Ne; Je += oe)
            pe = Z[Je], ve = Z[Je + 1], pe < se && (se = pe), ve < Ae && (Ae = ve), pe > ue && (ue = pe), ve > fe && (fe = ve);
          xe = (xe = Math.max(ue - se, fe - Ae)) !== 0 ? 1 / xe : 0;
        }
        return rc(Qe, Ue, oe, se, Ae, xe), Ue;
      };
      function fu(Z, te, oe, se, Ae) {
        var ue, fe;
        if (Ae === function(pe, ve, xe, Me) {
          for (var Ne = 0, Qe = ve, Ue = xe - Me; Qe < xe; Qe += Me)
            Ne += (pe[Ue] - pe[Qe]) * (pe[Qe + 1] + pe[Ue + 1]), Ue = Qe;
          return Ne;
        }(Z, te, oe, se) > 0)
          for (ue = te; ue < oe; ue += se)
            fe = gu(ue, Z[ue], Z[ue + 1], fe);
        else
          for (ue = oe - se; ue >= te; ue -= se)
            fe = gu(ue, Z[ue], Z[ue + 1], fe);
        return fe && Ta(fe, fe.next) && (oc(fe), fe = fe.next), fe;
      }
      function tc(Z, te) {
        if (!Z)
          return Z;
        te || (te = Z);
        var oe, se = Z;
        do
          if (oe = !1, se.steiner || !Ta(se, se.next) && so(se.prev, se, se.next) !== 0)
            se = se.next;
          else {
            if (oc(se), (se = te = se.prev) === se.next)
              break;
            oe = !0;
          }
        while (oe || se !== te);
        return te;
      }
      function rc(Z, te, oe, se, Ae, ue, fe) {
        if (Z) {
          !fe && ue && function(Me, Ne, Qe, Ue) {
            var Je = Me;
            do
              Je.z === null && (Je.z = lA(Je.x, Je.y, Ne, Qe, Ue)), Je.prevZ = Je.prev, Je.nextZ = Je.next, Je = Je.next;
            while (Je !== Me);
            Je.prevZ.nextZ = null, Je.prevZ = null, function(rt) {
              var it, ft, vt, ut, Gt, Ht, pt, Tt, zt = 1;
              do {
                for (ft = rt, rt = null, Gt = null, Ht = 0; ft; ) {
                  for (Ht++, vt = ft, pt = 0, it = 0; it < zt && (pt++, vt = vt.nextZ); it++)
                    ;
                  for (Tt = zt; pt > 0 || Tt > 0 && vt; )
                    pt !== 0 && (Tt === 0 || !vt || ft.z <= vt.z) ? (ut = ft, ft = ft.nextZ, pt--) : (ut = vt, vt = vt.nextZ, Tt--), Gt ? Gt.nextZ = ut : rt = ut, ut.prevZ = Gt, Gt = ut;
                  ft = vt;
                }
                Gt.nextZ = null, zt *= 2;
              } while (Ht > 1);
            }(Je);
          }(Z, se, Ae, ue);
          for (var pe, ve, xe = Z; Z.prev !== Z.next; )
            if (pe = Z.prev, ve = Z.next, ue ? wl(Z, se, Ae, ue) : bl(Z))
              te.push(pe.i / oe), te.push(Z.i / oe), te.push(ve.i / oe), oc(Z), Z = ve.next, xe = ve.next;
            else if ((Z = ve) === xe) {
              fe ? fe === 1 ? rc(Z = _l(Z, te, oe), te, oe, se, Ae, ue, 2) : fe === 2 && Ql(Z, te, oe, se, Ae, ue) : rc(tc(Z), te, oe, se, Ae, ue, 1);
              break;
            }
        }
      }
      function bl(Z) {
        var te = Z.prev, oe = Z, se = Z.next;
        if (so(te, oe, se) >= 0)
          return !1;
        for (var Ae = Z.next.next; Ae !== Z.prev; ) {
          if (Oc(te.x, te.y, oe.x, oe.y, se.x, se.y, Ae.x, Ae.y) && so(Ae.prev, Ae, Ae.next) >= 0)
            return !1;
          Ae = Ae.next;
        }
        return !0;
      }
      function wl(Z, te, oe, se) {
        var Ae = Z.prev, ue = Z, fe = Z.next;
        if (so(Ae, ue, fe) >= 0)
          return !1;
        for (var pe = Ae.x < ue.x ? Ae.x < fe.x ? Ae.x : fe.x : ue.x < fe.x ? ue.x : fe.x, ve = Ae.y < ue.y ? Ae.y < fe.y ? Ae.y : fe.y : ue.y < fe.y ? ue.y : fe.y, xe = Ae.x > ue.x ? Ae.x > fe.x ? Ae.x : fe.x : ue.x > fe.x ? ue.x : fe.x, Me = Ae.y > ue.y ? Ae.y > fe.y ? Ae.y : fe.y : ue.y > fe.y ? ue.y : fe.y, Ne = lA(pe, ve, te, oe, se), Qe = lA(xe, Me, te, oe, se), Ue = Z.nextZ; Ue && Ue.z <= Qe; ) {
          if (Ue !== Z.prev && Ue !== Z.next && Oc(Ae.x, Ae.y, ue.x, ue.y, fe.x, fe.y, Ue.x, Ue.y) && so(Ue.prev, Ue, Ue.next) >= 0)
            return !1;
          Ue = Ue.nextZ;
        }
        for (Ue = Z.prevZ; Ue && Ue.z >= Ne; ) {
          if (Ue !== Z.prev && Ue !== Z.next && Oc(Ae.x, Ae.y, ue.x, ue.y, fe.x, fe.y, Ue.x, Ue.y) && so(Ue.prev, Ue, Ue.next) >= 0)
            return !1;
          Ue = Ue.prevZ;
        }
        return !0;
      }
      function _l(Z, te, oe) {
        var se = Z;
        do {
          var Ae = se.prev, ue = se.next.next;
          !Ta(Ae, ue) && hu(Ae, se, se.next, ue) && nc(Ae, ue) && nc(ue, Ae) && (te.push(Ae.i / oe), te.push(se.i / oe), te.push(ue.i / oe), oc(se), oc(se.next), se = Z = ue), se = se.next;
        } while (se !== Z);
        return se;
      }
      function Ql(Z, te, oe, se, Ae, ue) {
        var fe = Z;
        do {
          for (var pe = fe.next.next; pe !== fe.prev; ) {
            if (fe.i !== pe.i && Ml(fe, pe)) {
              var ve = pu(fe, pe);
              return fe = tc(fe, fe.next), ve = tc(ve, ve.next), rc(fe, te, oe, se, Ae, ue), void rc(ve, te, oe, se, Ae, ue);
            }
            pe = pe.next;
          }
          fe = fe.next;
        } while (fe !== Z);
      }
      function Sl(Z, te) {
        return Z.x - te.x;
      }
      function Tl(Z, te) {
        if (te = function(se, Ae) {
          var ue, fe = Ae, pe = se.x, ve = se.y, xe = -1 / 0;
          do {
            if (ve <= fe.y && ve >= fe.next.y && fe.next.y !== fe.y) {
              var Me = fe.x + (ve - fe.y) * (fe.next.x - fe.x) / (fe.next.y - fe.y);
              if (Me <= pe && Me > xe) {
                if (xe = Me, Me === pe) {
                  if (ve === fe.y)
                    return fe;
                  if (ve === fe.next.y)
                    return fe.next;
                }
                ue = fe.x < fe.next.x ? fe : fe.next;
              }
            }
            fe = fe.next;
          } while (fe !== Ae);
          if (!ue)
            return null;
          if (pe === xe)
            return ue.prev;
          var Ne, Qe = ue, Ue = ue.x, Je = ue.y, rt = 1 / 0;
          for (fe = ue.next; fe !== Qe; )
            pe >= fe.x && fe.x >= Ue && pe !== fe.x && Oc(ve < Je ? pe : xe, ve, Ue, Je, ve < Je ? xe : pe, ve, fe.x, fe.y) && ((Ne = Math.abs(ve - fe.y) / (pe - fe.x)) < rt || Ne === rt && fe.x > ue.x) && nc(fe, se) && (ue = fe, rt = Ne), fe = fe.next;
          return ue;
        }(Z, te)) {
          var oe = pu(te, Z);
          tc(oe, oe.next);
        }
      }
      function lA(Z, te, oe, se, Ae) {
        return (Z = 1431655765 & ((Z = 858993459 & ((Z = 252645135 & ((Z = 16711935 & ((Z = 32767 * (Z - oe) * Ae) | Z << 8)) | Z << 4)) | Z << 2)) | Z << 1)) | (te = 1431655765 & ((te = 858993459 & ((te = 252645135 & ((te = 16711935 & ((te = 32767 * (te - se) * Ae) | te << 8)) | te << 4)) | te << 2)) | te << 1)) << 1;
      }
      function Rl(Z) {
        var te = Z, oe = Z;
        do
          te.x < oe.x && (oe = te), te = te.next;
        while (te !== Z);
        return oe;
      }
      function Oc(Z, te, oe, se, Ae, ue, fe, pe) {
        return (Ae - fe) * (te - pe) - (Z - fe) * (ue - pe) >= 0 && (Z - fe) * (se - pe) - (oe - fe) * (te - pe) >= 0 && (oe - fe) * (ue - pe) - (Ae - fe) * (se - pe) >= 0;
      }
      function Ml(Z, te) {
        return Z.next.i !== te.i && Z.prev.i !== te.i && !function(oe, se) {
          var Ae = oe;
          do {
            if (Ae.i !== oe.i && Ae.next.i !== oe.i && Ae.i !== se.i && Ae.next.i !== se.i && hu(Ae, Ae.next, oe, se))
              return !0;
            Ae = Ae.next;
          } while (Ae !== oe);
          return !1;
        }(Z, te) && nc(Z, te) && nc(te, Z) && function(oe, se) {
          var Ae = oe, ue = !1, fe = (oe.x + se.x) / 2, pe = (oe.y + se.y) / 2;
          do
            Ae.y > pe != Ae.next.y > pe && Ae.next.y !== Ae.y && fe < (Ae.next.x - Ae.x) * (pe - Ae.y) / (Ae.next.y - Ae.y) + Ae.x && (ue = !ue), Ae = Ae.next;
          while (Ae !== oe);
          return ue;
        }(Z, te);
      }
      function so(Z, te, oe) {
        return (te.y - Z.y) * (oe.x - te.x) - (te.x - Z.x) * (oe.y - te.y);
      }
      function Ta(Z, te) {
        return Z.x === te.x && Z.y === te.y;
      }
      function hu(Z, te, oe, se) {
        return !!(Ta(Z, te) && Ta(oe, se) || Ta(Z, se) && Ta(oe, te)) || so(Z, te, oe) > 0 != so(Z, te, se) > 0 && so(oe, se, Z) > 0 != so(oe, se, te) > 0;
      }
      function nc(Z, te) {
        return so(Z.prev, Z, Z.next) < 0 ? so(Z, te, Z.next) >= 0 && so(Z, Z.prev, te) >= 0 : so(Z, te, Z.prev) < 0 || so(Z, Z.next, te) < 0;
      }
      function pu(Z, te) {
        var oe = new dA(Z.i, Z.x, Z.y), se = new dA(te.i, te.x, te.y), Ae = Z.next, ue = te.prev;
        return Z.next = te, te.prev = Z, oe.next = Ae, Ae.prev = oe, se.next = oe, oe.prev = se, ue.next = se, se.prev = ue, se;
      }
      function gu(Z, te, oe, se) {
        var Ae = new dA(Z, te, oe);
        return se ? (Ae.next = se.next, Ae.prev = se, se.next.prev = Ae, se.next = Ae) : (Ae.prev = Ae, Ae.next = Ae), Ae;
      }
      function oc(Z) {
        Z.next.prev = Z.prev, Z.prev.next = Z.next, Z.prevZ && (Z.prevZ.nextZ = Z.nextZ), Z.nextZ && (Z.nextZ.prevZ = Z.prevZ);
      }
      function dA(Z, te, oe) {
        this.i = Z, this.x = te, this.y = oe, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
      }
      var sa = { area: function(Z) {
        for (var te = Z.length, oe = 0, se = te - 1, Ae = 0; Ae < te; se = Ae++)
          oe += Z[se].x * Z[Ae].y - Z[Ae].x * Z[se].y;
        return 0.5 * oe;
      }, isClockWise: function(Z) {
        return sa.area(Z) < 0;
      }, triangulateShape: function(Z, te) {
        var oe = [], se = [], Ae = [];
        mu(Z), Eu(oe, Z);
        var ue = Z.length;
        te.forEach(mu);
        for (var fe = 0; fe < te.length; fe++)
          se.push(ue), ue += te[fe].length, Eu(oe, te[fe]);
        var pe = xl(oe, se);
        for (fe = 0; fe < pe.length; fe += 3)
          Ae.push(pe.slice(fe, fe + 3));
        return Ae;
      } };
      function mu(Z) {
        var te = Z.length;
        te > 2 && Z[te - 1].equals(Z[0]) && Z.pop();
      }
      function Eu(Z, te) {
        for (var oe = 0; oe < te.length; oe++)
          Z.push(te[oe].x), Z.push(te[oe].y);
      }
      function Ra(Z, te) {
        Xr.call(this), this.type = "ExtrudeGeometry", this.parameters = { shapes: Z, options: te }, this.fromBufferGeometry(new zo(Z, te)), this.mergeVertices();
      }
      function zo(Z, te) {
        an.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = { shapes: Z, options: te };
        for (var oe = this, se = [], Ae = [], ue = 0, fe = (Z = Array.isArray(Z) ? Z : [Z]).length; ue < fe; ue++)
          pe(Z[ue]);
        function pe(ve) {
          var xe = [], Me = te.curveSegments !== void 0 ? te.curveSegments : 12, Ne = te.steps !== void 0 ? te.steps : 1, Qe = te.depth !== void 0 ? te.depth : 100, Ue = te.bevelEnabled === void 0 || te.bevelEnabled, Je = te.bevelThickness !== void 0 ? te.bevelThickness : 6, rt = te.bevelSize !== void 0 ? te.bevelSize : Je - 2, it = te.bevelSegments !== void 0 ? te.bevelSegments : 3, ft = te.extrudePath, vt = te.UVGenerator !== void 0 ? te.UVGenerator : Nl;
          te.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), Qe = te.amount);
          var ut, Gt, Ht, pt, Tt, zt, Dt, or, Lt = !1;
          ft && (ut = ft.getSpacedPoints(Ne), Lt = !0, Ue = !1, Gt = ft.computeFrenetFrames(Ne, !1), Ht = new Bt(), pt = new Bt(), Tt = new Bt()), Ue || (it = 0, Je = 0, rt = 0);
          var lr = ve.extractPoints(Me), gr = lr.shape, xr = lr.holes;
          if (!sa.isClockWise(gr))
            for (gr = gr.reverse(), Dt = 0, or = xr.length; Dt < or; Dt++)
              zt = xr[Dt], sa.isClockWise(zt) && (xr[Dt] = zt.reverse());
          var vr = sa.triangulateShape(gr, xr), Dr = gr;
          for (Dt = 0, or = xr.length; Dt < or; Dt++)
            zt = xr[Dt], gr = gr.concat(zt);
          function Or(qn, si, ui) {
            return si || console.error("THREE.ExtrudeGeometry: vec does not exist"), si.clone().multiplyScalar(ui).add(qn);
          }
          var yr, Nr, pr, tn, Ur, mn, Qn = gr.length, mi = vr.length;
          function Fi(qn, si, ui) {
            var Ri, Ei, Li, zi = qn.x - si.x, Ji = qn.y - si.y, xo = ui.x - qn.x, Zo = ui.y - qn.y, Va = zi * zi + Ji * Ji, iA = zi * Zo - Ji * xo;
            if (Math.abs(iA) > Number.EPSILON) {
              var Xo = Math.sqrt(Va), _c = Math.sqrt(xo * xo + Zo * Zo), Qc = si.x - Ji / Xo, Le = si.y + zi / Xo, St = ((ui.x - Zo / _c - Qc) * Zo - (ui.y + xo / _c - Le) * xo) / (zi * Zo - Ji * xo), Rt = (Ri = Qc + zi * St - qn.x) * Ri + (Ei = Le + Ji * St - qn.y) * Ei;
              if (Rt <= 2)
                return new Qr(Ri, Ei);
              Li = Math.sqrt(Rt / 2);
            } else {
              var nr = !1;
              zi > Number.EPSILON ? xo > Number.EPSILON && (nr = !0) : zi < -Number.EPSILON ? xo < -Number.EPSILON && (nr = !0) : Math.sign(Ji) === Math.sign(Zo) && (nr = !0), nr ? (Ri = -Ji, Ei = zi, Li = Math.sqrt(Va)) : (Ri = zi, Ei = Ji, Li = Math.sqrt(Va / 2));
            }
            return new Qr(Ri / Li, Ei / Li);
          }
          for (var ci = [], Hr = 0, Wn = Dr.length, Ti = Wn - 1, ro = Hr + 1; Hr < Wn; Hr++, Ti++, ro++)
            Ti === Wn && (Ti = 0), ro === Wn && (ro = 0), ci[Hr] = Fi(Dr[Hr], Dr[Ti], Dr[ro]);
          var Ni, co, Oi = [], qo = ci.concat();
          for (Dt = 0, or = xr.length; Dt < or; Dt++) {
            for (zt = xr[Dt], Ni = [], Hr = 0, Ti = (Wn = zt.length) - 1, ro = Hr + 1; Hr < Wn; Hr++, Ti++, ro++)
              Ti === Wn && (Ti = 0), ro === Wn && (ro = 0), Ni[Hr] = Fi(zt[Hr], zt[Ti], zt[ro]);
            Oi.push(Ni), qo = qo.concat(Ni);
          }
          for (yr = 0; yr < it; yr++) {
            for (pr = yr / it, tn = Je * Math.cos(pr * Math.PI / 2), Nr = rt * Math.sin(pr * Math.PI / 2), Hr = 0, Wn = Dr.length; Hr < Wn; Hr++)
              Vi((Ur = Or(Dr[Hr], ci[Hr], Nr)).x, Ur.y, -tn);
            for (Dt = 0, or = xr.length; Dt < or; Dt++)
              for (zt = xr[Dt], Ni = Oi[Dt], Hr = 0, Wn = zt.length; Hr < Wn; Hr++)
                Vi((Ur = Or(zt[Hr], Ni[Hr], Nr)).x, Ur.y, -tn);
          }
          for (Nr = rt, Hr = 0; Hr < Qn; Hr++)
            Ur = Ue ? Or(gr[Hr], qo[Hr], Nr) : gr[Hr], Lt ? (pt.copy(Gt.normals[0]).multiplyScalar(Ur.x), Ht.copy(Gt.binormals[0]).multiplyScalar(Ur.y), Tt.copy(ut[0]).add(pt).add(Ht), Vi(Tt.x, Tt.y, Tt.z)) : Vi(Ur.x, Ur.y, 0);
          for (co = 1; co <= Ne; co++)
            for (Hr = 0; Hr < Qn; Hr++)
              Ur = Ue ? Or(gr[Hr], qo[Hr], Nr) : gr[Hr], Lt ? (pt.copy(Gt.normals[co]).multiplyScalar(Ur.x), Ht.copy(Gt.binormals[co]).multiplyScalar(Ur.y), Tt.copy(ut[co]).add(pt).add(Ht), Vi(Tt.x, Tt.y, Tt.z)) : Vi(Ur.x, Ur.y, Qe / Ne * co);
          for (yr = it - 1; yr >= 0; yr--) {
            for (pr = yr / it, tn = Je * Math.cos(pr * Math.PI / 2), Nr = rt * Math.sin(pr * Math.PI / 2), Hr = 0, Wn = Dr.length; Hr < Wn; Hr++)
              Vi((Ur = Or(Dr[Hr], ci[Hr], Nr)).x, Ur.y, Qe + tn);
            for (Dt = 0, or = xr.length; Dt < or; Dt++)
              for (zt = xr[Dt], Ni = Oi[Dt], Hr = 0, Wn = zt.length; Hr < Wn; Hr++)
                Ur = Or(zt[Hr], Ni[Hr], Nr), Lt ? Vi(Ur.x, Ur.y + ut[Ne - 1].y, ut[Ne - 1].x + tn) : Vi(Ur.x, Ur.y, Qe + tn);
          }
          function $o(qn, si) {
            var ui, Ri;
            for (Hr = qn.length; --Hr >= 0; ) {
              ui = Hr, (Ri = Hr - 1) < 0 && (Ri = qn.length - 1);
              var Ei = 0, Li = Ne + 2 * it;
              for (Ei = 0; Ei < Li; Ei++) {
                var zi = Qn * Ei, Ji = Qn * (Ei + 1);
                Ba(si + ui + zi, si + Ri + zi, si + Ri + Ji, si + ui + Ji);
              }
            }
          }
          function Vi(qn, si, ui) {
            xe.push(qn), xe.push(si), xe.push(ui);
          }
          function Pi(qn, si, ui) {
            no(qn), no(si), no(ui);
            var Ri = se.length / 3, Ei = vt.generateTopUV(oe, se, Ri - 3, Ri - 2, Ri - 1);
            Ro(Ei[0]), Ro(Ei[1]), Ro(Ei[2]);
          }
          function Ba(qn, si, ui, Ri) {
            no(qn), no(si), no(Ri), no(si), no(ui), no(Ri);
            var Ei = se.length / 3, Li = vt.generateSideWallUV(oe, se, Ei - 6, Ei - 3, Ei - 2, Ei - 1);
            Ro(Li[0]), Ro(Li[1]), Ro(Li[3]), Ro(Li[1]), Ro(Li[2]), Ro(Li[3]);
          }
          function no(qn) {
            se.push(xe[3 * qn + 0]), se.push(xe[3 * qn + 1]), se.push(xe[3 * qn + 2]);
          }
          function Ro(qn) {
            Ae.push(qn.x), Ae.push(qn.y);
          }
          (function() {
            var qn = se.length / 3;
            if (Ue) {
              var si = 0, ui = Qn * si;
              for (Hr = 0; Hr < mi; Hr++)
                Pi((mn = vr[Hr])[2] + ui, mn[1] + ui, mn[0] + ui);
              for (ui = Qn * (si = Ne + 2 * it), Hr = 0; Hr < mi; Hr++)
                Pi((mn = vr[Hr])[0] + ui, mn[1] + ui, mn[2] + ui);
            } else {
              for (Hr = 0; Hr < mi; Hr++)
                Pi((mn = vr[Hr])[2], mn[1], mn[0]);
              for (Hr = 0; Hr < mi; Hr++)
                Pi((mn = vr[Hr])[0] + Qn * Ne, mn[1] + Qn * Ne, mn[2] + Qn * Ne);
            }
            oe.addGroup(qn, se.length / 3 - qn, 0);
          })(), function() {
            var qn = se.length / 3, si = 0;
            for ($o(Dr, si), si += Dr.length, Dt = 0, or = xr.length; Dt < or; Dt++)
              $o(zt = xr[Dt], si), si += zt.length;
            oe.addGroup(qn, se.length / 3 - qn, 1);
          }();
        }
        this.addAttribute("position", new Yr(se, 3)), this.addAttribute("uv", new Yr(Ae, 2)), this.computeVertexNormals();
      }
      Ra.prototype = Object.create(Xr.prototype), Ra.prototype.constructor = Ra, Ra.prototype.toJSON = function() {
        var Z = Xr.prototype.toJSON.call(this);
        return yu(this.parameters.shapes, this.parameters.options, Z);
      }, zo.prototype = Object.create(an.prototype), zo.prototype.constructor = zo, zo.prototype.toJSON = function() {
        var Z = an.prototype.toJSON.call(this);
        return yu(this.parameters.shapes, this.parameters.options, Z);
      };
      var Nl = { generateTopUV: function(Z, te, oe, se, Ae) {
        var ue = te[3 * oe], fe = te[3 * oe + 1], pe = te[3 * se], ve = te[3 * se + 1], xe = te[3 * Ae], Me = te[3 * Ae + 1];
        return [new Qr(ue, fe), new Qr(pe, ve), new Qr(xe, Me)];
      }, generateSideWallUV: function(Z, te, oe, se, Ae, ue) {
        var fe = te[3 * oe], pe = te[3 * oe + 1], ve = te[3 * oe + 2], xe = te[3 * se], Me = te[3 * se + 1], Ne = te[3 * se + 2], Qe = te[3 * Ae], Ue = te[3 * Ae + 1], Je = te[3 * Ae + 2], rt = te[3 * ue], it = te[3 * ue + 1], ft = te[3 * ue + 2];
        return Math.abs(pe - Me) < 0.01 ? [new Qr(fe, 1 - ve), new Qr(xe, 1 - Ne), new Qr(Qe, 1 - Je), new Qr(rt, 1 - ft)] : [new Qr(pe, 1 - ve), new Qr(Me, 1 - Ne), new Qr(Ue, 1 - Je), new Qr(it, 1 - ft)];
      } };
      function yu(Z, te, oe) {
        if (oe.shapes = [], Array.isArray(Z))
          for (var se = 0, Ae = Z.length; se < Ae; se++) {
            var ue = Z[se];
            oe.shapes.push(ue.uuid);
          }
        else
          oe.shapes.push(Z.uuid);
        return te.extrudePath !== void 0 && (oe.options.extrudePath = te.extrudePath.toJSON()), oe;
      }
      function ac(Z, te) {
        Xr.call(this), this.type = "TextGeometry", this.parameters = { text: Z, parameters: te }, this.fromBufferGeometry(new ps(Z, te)), this.mergeVertices();
      }
      function ps(Z, te) {
        var oe = (te = te || {}).font;
        if (!oe || !oe.isFont)
          return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new Xr();
        var se = oe.generateShapes(Z, te.size);
        te.depth = te.height !== void 0 ? te.height : 50, te.bevelThickness === void 0 && (te.bevelThickness = 10), te.bevelSize === void 0 && (te.bevelSize = 8), te.bevelEnabled === void 0 && (te.bevelEnabled = !1), zo.call(this, se, te), this.type = "TextBufferGeometry";
      }
      function sc(Z, te, oe, se, Ae, ue, fe) {
        Xr.call(this), this.type = "SphereGeometry", this.parameters = { radius: Z, widthSegments: te, heightSegments: oe, phiStart: se, phiLength: Ae, thetaStart: ue, thetaLength: fe }, this.fromBufferGeometry(new Ma(Z, te, oe, se, Ae, ue, fe)), this.mergeVertices();
      }
      function Ma(Z, te, oe, se, Ae, ue, fe) {
        an.call(this), this.type = "SphereBufferGeometry", this.parameters = { radius: Z, widthSegments: te, heightSegments: oe, phiStart: se, phiLength: Ae, thetaStart: ue, thetaLength: fe }, Z = Z || 1, te = Math.max(3, Math.floor(te) || 8), oe = Math.max(2, Math.floor(oe) || 6), se = se !== void 0 ? se : 0, Ae = Ae !== void 0 ? Ae : 2 * Math.PI;
        var pe, ve, xe = (ue = ue !== void 0 ? ue : 0) + (fe = fe !== void 0 ? fe : Math.PI), Me = 0, Ne = [], Qe = new Bt(), Ue = new Bt(), Je = [], rt = [], it = [], ft = [];
        for (ve = 0; ve <= oe; ve++) {
          var vt = [], ut = ve / oe;
          for (pe = 0; pe <= te; pe++) {
            var Gt = pe / te;
            Qe.x = -Z * Math.cos(se + Gt * Ae) * Math.sin(ue + ut * fe), Qe.y = Z * Math.cos(ue + ut * fe), Qe.z = Z * Math.sin(se + Gt * Ae) * Math.sin(ue + ut * fe), rt.push(Qe.x, Qe.y, Qe.z), Ue.set(Qe.x, Qe.y, Qe.z).normalize(), it.push(Ue.x, Ue.y, Ue.z), ft.push(Gt, 1 - ut), vt.push(Me++);
          }
          Ne.push(vt);
        }
        for (ve = 0; ve < oe; ve++)
          for (pe = 0; pe < te; pe++) {
            var Ht = Ne[ve][pe + 1], pt = Ne[ve][pe], Tt = Ne[ve + 1][pe], zt = Ne[ve + 1][pe + 1];
            (ve !== 0 || ue > 0) && Je.push(Ht, pt, zt), (ve !== oe - 1 || xe < Math.PI) && Je.push(pt, Tt, zt);
          }
        this.setIndex(Je), this.addAttribute("position", new Yr(rt, 3)), this.addAttribute("normal", new Yr(it, 3)), this.addAttribute("uv", new Yr(ft, 2));
      }
      function cc(Z, te, oe, se, Ae, ue) {
        Xr.call(this), this.type = "RingGeometry", this.parameters = { innerRadius: Z, outerRadius: te, thetaSegments: oe, phiSegments: se, thetaStart: Ae, thetaLength: ue }, this.fromBufferGeometry(new gs(Z, te, oe, se, Ae, ue)), this.mergeVertices();
      }
      function gs(Z, te, oe, se, Ae, ue) {
        an.call(this), this.type = "RingBufferGeometry", this.parameters = { innerRadius: Z, outerRadius: te, thetaSegments: oe, phiSegments: se, thetaStart: Ae, thetaLength: ue }, Z = Z || 0.5, te = te || 1, Ae = Ae !== void 0 ? Ae : 0, ue = ue !== void 0 ? ue : 2 * Math.PI, oe = oe !== void 0 ? Math.max(3, oe) : 8;
        var fe, pe, ve, xe = [], Me = [], Ne = [], Qe = [], Ue = Z, Je = (te - Z) / (se = se !== void 0 ? Math.max(1, se) : 1), rt = new Bt(), it = new Qr();
        for (pe = 0; pe <= se; pe++) {
          for (ve = 0; ve <= oe; ve++)
            fe = Ae + ve / oe * ue, rt.x = Ue * Math.cos(fe), rt.y = Ue * Math.sin(fe), Me.push(rt.x, rt.y, rt.z), Ne.push(0, 0, 1), it.x = (rt.x / te + 1) / 2, it.y = (rt.y / te + 1) / 2, Qe.push(it.x, it.y);
          Ue += Je;
        }
        for (pe = 0; pe < se; pe++) {
          var ft = pe * (oe + 1);
          for (ve = 0; ve < oe; ve++) {
            var vt = fe = ve + ft, ut = fe + oe + 1, Gt = fe + oe + 2, Ht = fe + 1;
            xe.push(vt, ut, Ht), xe.push(ut, Gt, Ht);
          }
        }
        this.setIndex(xe), this.addAttribute("position", new Yr(Me, 3)), this.addAttribute("normal", new Yr(Ne, 3)), this.addAttribute("uv", new Yr(Qe, 2));
      }
      function Ac(Z, te, oe, se) {
        Xr.call(this), this.type = "LatheGeometry", this.parameters = { points: Z, segments: te, phiStart: oe, phiLength: se }, this.fromBufferGeometry(new ms(Z, te, oe, se)), this.mergeVertices();
      }
      function ms(Z, te, oe, se) {
        an.call(this), this.type = "LatheBufferGeometry", this.parameters = { points: Z, segments: te, phiStart: oe, phiLength: se }, te = Math.floor(te) || 12, oe = oe || 0, se = se || 2 * Math.PI, se = Mn.clamp(se, 0, 2 * Math.PI);
        var Ae, ue, fe, pe = [], ve = [], xe = [], Me = 1 / te, Ne = new Bt(), Qe = new Qr();
        for (ue = 0; ue <= te; ue++) {
          var Ue = oe + ue * Me * se, Je = Math.sin(Ue), rt = Math.cos(Ue);
          for (fe = 0; fe <= Z.length - 1; fe++)
            Ne.x = Z[fe].x * Je, Ne.y = Z[fe].y, Ne.z = Z[fe].x * rt, ve.push(Ne.x, Ne.y, Ne.z), Qe.x = ue / te, Qe.y = fe / (Z.length - 1), xe.push(Qe.x, Qe.y);
        }
        for (ue = 0; ue < te; ue++)
          for (fe = 0; fe < Z.length - 1; fe++) {
            var it = Ae = fe + ue * Z.length, ft = Ae + Z.length, vt = Ae + Z.length + 1, ut = Ae + 1;
            pe.push(it, ft, ut), pe.push(ft, vt, ut);
          }
        if (this.setIndex(pe), this.addAttribute("position", new Yr(ve, 3)), this.addAttribute("uv", new Yr(xe, 2)), this.computeVertexNormals(), se === 2 * Math.PI) {
          var Gt = this.attributes.normal.array, Ht = new Bt(), pt = new Bt(), Tt = new Bt();
          for (Ae = te * Z.length * 3, ue = 0, fe = 0; ue < Z.length; ue++, fe += 3)
            Ht.x = Gt[fe + 0], Ht.y = Gt[fe + 1], Ht.z = Gt[fe + 2], pt.x = Gt[Ae + fe + 0], pt.y = Gt[Ae + fe + 1], pt.z = Gt[Ae + fe + 2], Tt.addVectors(Ht, pt).normalize(), Gt[fe + 0] = Gt[Ae + fe + 0] = Tt.x, Gt[fe + 1] = Gt[Ae + fe + 1] = Tt.y, Gt[fe + 2] = Gt[Ae + fe + 2] = Tt.z;
        }
      }
      function Na(Z, te) {
        Xr.call(this), this.type = "ShapeGeometry", typeof te == "object" && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), te = te.curveSegments), this.parameters = { shapes: Z, curveSegments: te }, this.fromBufferGeometry(new ka(Z, te)), this.mergeVertices();
      }
      function ka(Z, te) {
        an.call(this), this.type = "ShapeBufferGeometry", this.parameters = { shapes: Z, curveSegments: te }, te = te || 12;
        var oe = [], se = [], Ae = [], ue = [], fe = 0, pe = 0;
        if (Array.isArray(Z) === !1)
          xe(Z);
        else
          for (var ve = 0; ve < Z.length; ve++)
            xe(Z[ve]), this.addGroup(fe, pe, ve), fe += pe, pe = 0;
        function xe(Me) {
          var Ne, Qe, Ue, Je = se.length / 3, rt = Me.extractPoints(te), it = rt.shape, ft = rt.holes;
          if (sa.isClockWise(it) === !1)
            for (it = it.reverse(), Ne = 0, Qe = ft.length; Ne < Qe; Ne++)
              Ue = ft[Ne], sa.isClockWise(Ue) === !0 && (ft[Ne] = Ue.reverse());
          var vt = sa.triangulateShape(it, ft);
          for (Ne = 0, Qe = ft.length; Ne < Qe; Ne++)
            Ue = ft[Ne], it = it.concat(Ue);
          for (Ne = 0, Qe = it.length; Ne < Qe; Ne++) {
            var ut = it[Ne];
            se.push(ut.x, ut.y, 0), Ae.push(0, 0, 1), ue.push(ut.x, ut.y);
          }
          for (Ne = 0, Qe = vt.length; Ne < Qe; Ne++) {
            var Gt = vt[Ne], Ht = Gt[0] + Je, pt = Gt[1] + Je, Tt = Gt[2] + Je;
            oe.push(Ht, pt, Tt), pe += 3;
          }
        }
        this.setIndex(oe), this.addAttribute("position", new Yr(se, 3)), this.addAttribute("normal", new Yr(Ae, 3)), this.addAttribute("uv", new Yr(ue, 2));
      }
      function Bu(Z, te) {
        if (te.shapes = [], Array.isArray(Z))
          for (var oe = 0, se = Z.length; oe < se; oe++) {
            var Ae = Z[oe];
            te.shapes.push(Ae.uuid);
          }
        else
          te.shapes.push(Z.uuid);
        return te;
      }
      function Es(Z, te) {
        an.call(this), this.type = "EdgesGeometry", this.parameters = { thresholdAngle: te }, te = te !== void 0 ? te : 1;
        var oe, se, Ae, ue, fe = [], pe = Math.cos(Mn.DEG2RAD * te), ve = [0, 0], xe = {}, Me = ["a", "b", "c"];
        Z.isBufferGeometry ? (ue = new Xr()).fromBufferGeometry(Z) : ue = Z.clone(), ue.mergeVertices(), ue.computeFaceNormals();
        for (var Ne = ue.vertices, Qe = ue.faces, Ue = 0, Je = Qe.length; Ue < Je; Ue++)
          for (var rt = Qe[Ue], it = 0; it < 3; it++)
            oe = rt[Me[it]], se = rt[Me[(it + 1) % 3]], ve[0] = Math.min(oe, se), ve[1] = Math.max(oe, se), xe[Ae = ve[0] + "," + ve[1]] === void 0 ? xe[Ae] = { index1: ve[0], index2: ve[1], face1: Ue, face2: void 0 } : xe[Ae].face2 = Ue;
        for (Ae in xe) {
          var ft = xe[Ae];
          if (ft.face2 === void 0 || Qe[ft.face1].normal.dot(Qe[ft.face2].normal) <= pe) {
            var vt = Ne[ft.index1];
            fe.push(vt.x, vt.y, vt.z), vt = Ne[ft.index2], fe.push(vt.x, vt.y, vt.z);
          }
        }
        this.addAttribute("position", new Yr(fe, 3));
      }
      function Fa(Z, te, oe, se, Ae, ue, fe, pe) {
        Xr.call(this), this.type = "CylinderGeometry", this.parameters = { radiusTop: Z, radiusBottom: te, height: oe, radialSegments: se, heightSegments: Ae, openEnded: ue, thetaStart: fe, thetaLength: pe }, this.fromBufferGeometry(new ca(Z, te, oe, se, Ae, ue, fe, pe)), this.mergeVertices();
      }
      function ca(Z, te, oe, se, Ae, ue, fe, pe) {
        an.call(this), this.type = "CylinderBufferGeometry", this.parameters = { radiusTop: Z, radiusBottom: te, height: oe, radialSegments: se, heightSegments: Ae, openEnded: ue, thetaStart: fe, thetaLength: pe };
        var ve = this;
        Z = Z !== void 0 ? Z : 1, te = te !== void 0 ? te : 1, oe = oe || 1, se = Math.floor(se) || 8, Ae = Math.floor(Ae) || 1, ue = ue !== void 0 && ue, fe = fe !== void 0 ? fe : 0, pe = pe !== void 0 ? pe : 2 * Math.PI;
        var xe = [], Me = [], Ne = [], Qe = [], Ue = 0, Je = [], rt = oe / 2, it = 0;
        function ft(vt) {
          var ut, Gt, Ht, pt = new Qr(), Tt = new Bt(), zt = 0, Dt = vt === !0 ? Z : te, or = vt === !0 ? 1 : -1;
          for (Gt = Ue, ut = 1; ut <= se; ut++)
            Me.push(0, rt * or, 0), Ne.push(0, or, 0), Qe.push(0.5, 0.5), Ue++;
          for (Ht = Ue, ut = 0; ut <= se; ut++) {
            var Lt = ut / se * pe + fe, lr = Math.cos(Lt), gr = Math.sin(Lt);
            Tt.x = Dt * gr, Tt.y = rt * or, Tt.z = Dt * lr, Me.push(Tt.x, Tt.y, Tt.z), Ne.push(0, or, 0), pt.x = 0.5 * lr + 0.5, pt.y = 0.5 * gr * or + 0.5, Qe.push(pt.x, pt.y), Ue++;
          }
          for (ut = 0; ut < se; ut++) {
            var xr = Gt + ut, vr = Ht + ut;
            vt === !0 ? xe.push(vr, vr + 1, xr) : xe.push(vr + 1, vr, xr), zt += 3;
          }
          ve.addGroup(it, zt, vt === !0 ? 1 : 2), it += zt;
        }
        (function() {
          var vt, ut, Gt = new Bt(), Ht = new Bt(), pt = 0, Tt = (te - Z) / oe;
          for (ut = 0; ut <= Ae; ut++) {
            var zt = [], Dt = ut / Ae, or = Dt * (te - Z) + Z;
            for (vt = 0; vt <= se; vt++) {
              var Lt = vt / se, lr = Lt * pe + fe, gr = Math.sin(lr), xr = Math.cos(lr);
              Ht.x = or * gr, Ht.y = -Dt * oe + rt, Ht.z = or * xr, Me.push(Ht.x, Ht.y, Ht.z), Gt.set(gr, Tt, xr).normalize(), Ne.push(Gt.x, Gt.y, Gt.z), Qe.push(Lt, 1 - Dt), zt.push(Ue++);
            }
            Je.push(zt);
          }
          for (vt = 0; vt < se; vt++)
            for (ut = 0; ut < Ae; ut++) {
              var vr = Je[ut][vt], Dr = Je[ut + 1][vt], Or = Je[ut + 1][vt + 1], yr = Je[ut][vt + 1];
              xe.push(vr, Dr, yr), xe.push(Dr, Or, yr), pt += 6;
            }
          ve.addGroup(it, pt, 0), it += pt;
        })(), ue === !1 && (Z > 0 && ft(!0), te > 0 && ft(!1)), this.setIndex(xe), this.addAttribute("position", new Yr(Me, 3)), this.addAttribute("normal", new Yr(Ne, 3)), this.addAttribute("uv", new Yr(Qe, 2));
      }
      function uc(Z, te, oe, se, Ae, ue, fe) {
        Fa.call(this, 0, Z, te, oe, se, Ae, ue, fe), this.type = "ConeGeometry", this.parameters = { radius: Z, height: te, radialSegments: oe, heightSegments: se, openEnded: Ae, thetaStart: ue, thetaLength: fe };
      }
      function lc(Z, te, oe, se, Ae, ue, fe) {
        ca.call(this, 0, Z, te, oe, se, Ae, ue, fe), this.type = "ConeBufferGeometry", this.parameters = { radius: Z, height: te, radialSegments: oe, heightSegments: se, openEnded: Ae, thetaStart: ue, thetaLength: fe };
      }
      function dc(Z, te, oe, se) {
        Xr.call(this), this.type = "CircleGeometry", this.parameters = { radius: Z, segments: te, thetaStart: oe, thetaLength: se }, this.fromBufferGeometry(new ys(Z, te, oe, se)), this.mergeVertices();
      }
      function ys(Z, te, oe, se) {
        an.call(this), this.type = "CircleBufferGeometry", this.parameters = { radius: Z, segments: te, thetaStart: oe, thetaLength: se }, Z = Z || 1, te = te !== void 0 ? Math.max(3, te) : 8, oe = oe !== void 0 ? oe : 0, se = se !== void 0 ? se : 2 * Math.PI;
        var Ae, ue, fe = [], pe = [], ve = [], xe = [], Me = new Bt(), Ne = new Qr();
        for (pe.push(0, 0, 0), ve.push(0, 0, 1), xe.push(0.5, 0.5), ue = 0, Ae = 3; ue <= te; ue++, Ae += 3) {
          var Qe = oe + ue / te * se;
          Me.x = Z * Math.cos(Qe), Me.y = Z * Math.sin(Qe), pe.push(Me.x, Me.y, Me.z), ve.push(0, 0, 1), Ne.x = (pe[Ae] / Z + 1) / 2, Ne.y = (pe[Ae + 1] / Z + 1) / 2, xe.push(Ne.x, Ne.y);
        }
        for (Ae = 1; Ae <= te; Ae++)
          fe.push(Ae, Ae + 1, 0);
        this.setIndex(fe), this.addAttribute("position", new Yr(pe, 3)), this.addAttribute("normal", new Yr(ve, 3)), this.addAttribute("uv", new Yr(xe, 2));
      }
      ac.prototype = Object.create(Xr.prototype), ac.prototype.constructor = ac, ps.prototype = Object.create(zo.prototype), ps.prototype.constructor = ps, sc.prototype = Object.create(Xr.prototype), sc.prototype.constructor = sc, Ma.prototype = Object.create(an.prototype), Ma.prototype.constructor = Ma, cc.prototype = Object.create(Xr.prototype), cc.prototype.constructor = cc, gs.prototype = Object.create(an.prototype), gs.prototype.constructor = gs, Ac.prototype = Object.create(Xr.prototype), Ac.prototype.constructor = Ac, ms.prototype = Object.create(an.prototype), ms.prototype.constructor = ms, Na.prototype = Object.create(Xr.prototype), Na.prototype.constructor = Na, Na.prototype.toJSON = function() {
        var Z = Xr.prototype.toJSON.call(this);
        return Bu(this.parameters.shapes, Z);
      }, ka.prototype = Object.create(an.prototype), ka.prototype.constructor = ka, ka.prototype.toJSON = function() {
        var Z = an.prototype.toJSON.call(this);
        return Bu(this.parameters.shapes, Z);
      }, Es.prototype = Object.create(an.prototype), Es.prototype.constructor = Es, Fa.prototype = Object.create(Xr.prototype), Fa.prototype.constructor = Fa, ca.prototype = Object.create(an.prototype), ca.prototype.constructor = ca, uc.prototype = Object.create(Fa.prototype), uc.prototype.constructor = uc, lc.prototype = Object.create(ca.prototype), lc.prototype.constructor = lc, dc.prototype = Object.create(Xr.prototype), dc.prototype.constructor = dc, ys.prototype = Object.create(an.prototype), ys.prototype.constructor = ys;
      var po = Object.freeze({ WireframeGeometry: ss, ParametricGeometry: Vs, ParametricBufferGeometry: cs, TetrahedronGeometry: zs, TetrahedronBufferGeometry: As, OctahedronGeometry: Js, OctahedronBufferGeometry: Sa, IcosahedronGeometry: Ws, IcosahedronBufferGeometry: us, DodecahedronGeometry: Ks, DodecahedronBufferGeometry: ls, PolyhedronGeometry: Ls, PolyhedronBufferGeometry: ho, TubeGeometry: Zs, TubeBufferGeometry: ds, TorusKnotGeometry: Xs, TorusKnotBufferGeometry: fs, TorusGeometry: ec, TorusBufferGeometry: hs, TextGeometry: ac, TextBufferGeometry: ps, SphereGeometry: sc, SphereBufferGeometry: Ma, RingGeometry: cc, RingBufferGeometry: gs, PlaneGeometry: Os, PlaneBufferGeometry: wa, LatheGeometry: Ac, LatheBufferGeometry: ms, ShapeGeometry: Na, ShapeBufferGeometry: ka, ExtrudeGeometry: Ra, ExtrudeBufferGeometry: zo, EdgesGeometry: Es, ConeGeometry: uc, ConeBufferGeometry: lc, CylinderGeometry: Fa, CylinderBufferGeometry: ca, CircleGeometry: dc, CircleBufferGeometry: ys, BoxGeometry: Xa, BoxBufferGeometry: ba });
      function Ga(Z) {
        Un.call(this), this.type = "ShadowMaterial", this.color = new ze(0), this.transparent = !0, this.setValues(Z);
      }
      function Bs(Z) {
        So.call(this, Z), this.type = "RawShaderMaterial";
      }
      function Jo(Z) {
        Un.call(this), this.defines = { STANDARD: "" }, this.type = "MeshStandardMaterial", this.color = new ze(16777215), this.roughness = 0.5, this.metalness = 0.5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ze(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = wo, this.normalScale = new Qr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Z);
      }
      function Oa(Z) {
        Jo.call(this), this.defines = { PHYSICAL: "" }, this.type = "MeshPhysicalMaterial", this.reflectivity = 0.5, this.clearCoat = 0, this.clearCoatRoughness = 0, this.setValues(Z);
      }
      function Fo(Z) {
        Un.call(this), this.type = "MeshPhongMaterial", this.color = new ze(16777215), this.specular = new ze(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ze(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = wo, this.normalScale = new Qr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Z);
      }
      function Pa(Z) {
        Fo.call(this), this.defines = { TOON: "" }, this.type = "MeshToonMaterial", this.gradientMap = null, this.setValues(Z);
      }
      function Ua(Z) {
        Un.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = wo, this.normalScale = new Qr(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Z);
      }
      function Ha(Z) {
        Un.call(this), this.type = "MeshLambertMaterial", this.color = new ze(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ze(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = ke, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(Z);
      }
      function Da(Z) {
        Ai.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(Z);
      }
      Ga.prototype = Object.create(Un.prototype), Ga.prototype.constructor = Ga, Ga.prototype.isShadowMaterial = !0, Ga.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.color.copy(Z.color), this;
      }, Bs.prototype = Object.create(So.prototype), Bs.prototype.constructor = Bs, Bs.prototype.isRawShaderMaterial = !0, Jo.prototype = Object.create(Un.prototype), Jo.prototype.constructor = Jo, Jo.prototype.isMeshStandardMaterial = !0, Jo.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.defines = { STANDARD: "" }, this.color.copy(Z.color), this.roughness = Z.roughness, this.metalness = Z.metalness, this.map = Z.map, this.lightMap = Z.lightMap, this.lightMapIntensity = Z.lightMapIntensity, this.aoMap = Z.aoMap, this.aoMapIntensity = Z.aoMapIntensity, this.emissive.copy(Z.emissive), this.emissiveMap = Z.emissiveMap, this.emissiveIntensity = Z.emissiveIntensity, this.bumpMap = Z.bumpMap, this.bumpScale = Z.bumpScale, this.normalMap = Z.normalMap, this.normalMapType = Z.normalMapType, this.normalScale.copy(Z.normalScale), this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this.roughnessMap = Z.roughnessMap, this.metalnessMap = Z.metalnessMap, this.alphaMap = Z.alphaMap, this.envMap = Z.envMap, this.envMapIntensity = Z.envMapIntensity, this.refractionRatio = Z.refractionRatio, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.wireframeLinecap = Z.wireframeLinecap, this.wireframeLinejoin = Z.wireframeLinejoin, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this;
      }, Oa.prototype = Object.create(Jo.prototype), Oa.prototype.constructor = Oa, Oa.prototype.isMeshPhysicalMaterial = !0, Oa.prototype.copy = function(Z) {
        return Jo.prototype.copy.call(this, Z), this.defines = { PHYSICAL: "" }, this.reflectivity = Z.reflectivity, this.clearCoat = Z.clearCoat, this.clearCoatRoughness = Z.clearCoatRoughness, this;
      }, Fo.prototype = Object.create(Un.prototype), Fo.prototype.constructor = Fo, Fo.prototype.isMeshPhongMaterial = !0, Fo.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.color.copy(Z.color), this.specular.copy(Z.specular), this.shininess = Z.shininess, this.map = Z.map, this.lightMap = Z.lightMap, this.lightMapIntensity = Z.lightMapIntensity, this.aoMap = Z.aoMap, this.aoMapIntensity = Z.aoMapIntensity, this.emissive.copy(Z.emissive), this.emissiveMap = Z.emissiveMap, this.emissiveIntensity = Z.emissiveIntensity, this.bumpMap = Z.bumpMap, this.bumpScale = Z.bumpScale, this.normalMap = Z.normalMap, this.normalMapType = Z.normalMapType, this.normalScale.copy(Z.normalScale), this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this.specularMap = Z.specularMap, this.alphaMap = Z.alphaMap, this.envMap = Z.envMap, this.combine = Z.combine, this.reflectivity = Z.reflectivity, this.refractionRatio = Z.refractionRatio, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.wireframeLinecap = Z.wireframeLinecap, this.wireframeLinejoin = Z.wireframeLinejoin, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this;
      }, Pa.prototype = Object.create(Fo.prototype), Pa.prototype.constructor = Pa, Pa.prototype.isMeshToonMaterial = !0, Pa.prototype.copy = function(Z) {
        return Fo.prototype.copy.call(this, Z), this.gradientMap = Z.gradientMap, this;
      }, Ua.prototype = Object.create(Un.prototype), Ua.prototype.constructor = Ua, Ua.prototype.isMeshNormalMaterial = !0, Ua.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.bumpMap = Z.bumpMap, this.bumpScale = Z.bumpScale, this.normalMap = Z.normalMap, this.normalMapType = Z.normalMapType, this.normalScale.copy(Z.normalScale), this.displacementMap = Z.displacementMap, this.displacementScale = Z.displacementScale, this.displacementBias = Z.displacementBias, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this;
      }, Ha.prototype = Object.create(Un.prototype), Ha.prototype.constructor = Ha, Ha.prototype.isMeshLambertMaterial = !0, Ha.prototype.copy = function(Z) {
        return Un.prototype.copy.call(this, Z), this.color.copy(Z.color), this.map = Z.map, this.lightMap = Z.lightMap, this.lightMapIntensity = Z.lightMapIntensity, this.aoMap = Z.aoMap, this.aoMapIntensity = Z.aoMapIntensity, this.emissive.copy(Z.emissive), this.emissiveMap = Z.emissiveMap, this.emissiveIntensity = Z.emissiveIntensity, this.specularMap = Z.specularMap, this.alphaMap = Z.alphaMap, this.envMap = Z.envMap, this.combine = Z.combine, this.reflectivity = Z.reflectivity, this.refractionRatio = Z.refractionRatio, this.wireframe = Z.wireframe, this.wireframeLinewidth = Z.wireframeLinewidth, this.wireframeLinecap = Z.wireframeLinecap, this.wireframeLinejoin = Z.wireframeLinejoin, this.skinning = Z.skinning, this.morphTargets = Z.morphTargets, this.morphNormals = Z.morphNormals, this;
      }, Da.prototype = Object.create(Ai.prototype), Da.prototype.constructor = Da, Da.prototype.isLineDashedMaterial = !0, Da.prototype.copy = function(Z) {
        return Ai.prototype.copy.call(this, Z), this.scale = Z.scale, this.dashSize = Z.dashSize, this.gapSize = Z.gapSize, this;
      };
      var kl = Object.freeze({ ShadowMaterial: Ga, SpriteMaterial: Ea, RawShaderMaterial: Bs, ShaderMaterial: So, PointsMaterial: ko, MeshPhysicalMaterial: Oa, MeshStandardMaterial: Jo, MeshPhongMaterial: Fo, MeshToonMaterial: Pa, MeshNormalMaterial: Ua, MeshLambertMaterial: Ha, MeshDepthMaterial: ga, MeshDistanceMaterial: ma, MeshBasicMaterial: Bo, LineDashedMaterial: Da, LineBasicMaterial: Ai, Material: Un }), qa = { enabled: !1, files: {}, add: function(Z, te) {
        this.enabled !== !1 && (this.files[Z] = te);
      }, get: function(Z) {
        if (this.enabled !== !1)
          return this.files[Z];
      }, remove: function(Z) {
        delete this.files[Z];
      }, clear: function() {
        this.files = {};
      } };
      function fA(Z, te, oe) {
        var se = this, Ae = !1, ue = 0, fe = 0, pe = void 0;
        this.onStart = void 0, this.onLoad = Z, this.onProgress = te, this.onError = oe, this.itemStart = function(ve) {
          fe++, Ae === !1 && se.onStart !== void 0 && se.onStart(ve, ue, fe), Ae = !0;
        }, this.itemEnd = function(ve) {
          ue++, se.onProgress !== void 0 && se.onProgress(ve, ue, fe), ue === fe && (Ae = !1, se.onLoad !== void 0 && se.onLoad());
        }, this.itemError = function(ve) {
          se.onError !== void 0 && se.onError(ve);
        }, this.resolveURL = function(ve) {
          return pe ? pe(ve) : ve;
        }, this.setURLModifier = function(ve) {
          return pe = ve, this;
        };
      }
      var go = new fA(), Aa = {};
      function Go(Z) {
        this.manager = Z !== void 0 ? Z : go;
      }
      function vu(Z) {
        this.manager = Z !== void 0 ? Z : go, this._parser = null;
      }
      function hA(Z) {
        this.manager = Z !== void 0 ? Z : go, this._parser = null;
      }
      function fc(Z) {
        this.manager = Z !== void 0 ? Z : go;
      }
      function pA(Z) {
        this.manager = Z !== void 0 ? Z : go;
      }
      function Pc(Z) {
        this.manager = Z !== void 0 ? Z : go;
      }
      function Bn() {
        this.type = "Curve", this.arcLengthDivisions = 200;
      }
      function Co(Z, te, oe, se, Ae, ue, fe, pe) {
        Bn.call(this), this.type = "EllipseCurve", this.aX = Z || 0, this.aY = te || 0, this.xRadius = oe || 1, this.yRadius = se || 1, this.aStartAngle = Ae || 0, this.aEndAngle = ue || 2 * Math.PI, this.aClockwise = fe || !1, this.aRotation = pe || 0;
      }
      function vs(Z, te, oe, se, Ae, ue) {
        Co.call(this, Z, te, oe, oe, se, Ae, ue), this.type = "ArcCurve";
      }
      function gA() {
        var Z = 0, te = 0, oe = 0, se = 0;
        function Ae(ue, fe, pe, ve) {
          Z = ue, te = pe, oe = -3 * ue + 3 * fe - 2 * pe - ve, se = 2 * ue - 2 * fe + pe + ve;
        }
        return { initCatmullRom: function(ue, fe, pe, ve, xe) {
          Ae(fe, pe, xe * (pe - ue), xe * (ve - fe));
        }, initNonuniformCatmullRom: function(ue, fe, pe, ve, xe, Me, Ne) {
          var Qe = (fe - ue) / xe - (pe - ue) / (xe + Me) + (pe - fe) / Me, Ue = (pe - fe) / Me - (ve - fe) / (Me + Ne) + (ve - pe) / Ne;
          Ae(fe, pe, Qe *= Me, Ue *= Me);
        }, calc: function(ue) {
          var fe = ue * ue;
          return Z + te * ue + oe * fe + se * (fe * ue);
        } };
      }
      Object.assign(Go.prototype, { load: function(Z, te, oe, se) {
        Z === void 0 && (Z = ""), this.path !== void 0 && (Z = this.path + Z), Z = this.manager.resolveURL(Z);
        var Ae = this, ue = qa.get(Z);
        if (ue !== void 0)
          return Ae.manager.itemStart(Z), setTimeout(function() {
            te && te(ue), Ae.manager.itemEnd(Z);
          }, 0), ue;
        if (Aa[Z] === void 0) {
          var fe = Z.match(/^data:(.*?)(;base64)?,(.*)$/);
          if (fe) {
            var pe = fe[1], ve = !!fe[2], xe = fe[3];
            xe = window.decodeURIComponent(xe), ve && (xe = window.atob(xe));
            try {
              var Me, Ne = (this.responseType || "").toLowerCase();
              switch (Ne) {
                case "arraybuffer":
                case "blob":
                  for (var Qe = new Uint8Array(xe.length), Ue = 0; Ue < xe.length; Ue++)
                    Qe[Ue] = xe.charCodeAt(Ue);
                  Me = Ne === "blob" ? new Blob([Qe.buffer], { type: pe }) : Qe.buffer;
                  break;
                case "document":
                  var Je = new DOMParser();
                  Me = Je.parseFromString(xe, pe);
                  break;
                case "json":
                  Me = JSON.parse(xe);
                  break;
                default:
                  Me = xe;
              }
              window.setTimeout(function() {
                te && te(Me), Ae.manager.itemEnd(Z);
              }, 0);
            } catch (ft) {
              window.setTimeout(function() {
                se && se(ft), Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
              }, 0);
            }
          } else {
            Aa[Z] = [], Aa[Z].push({ onLoad: te, onProgress: oe, onError: se });
            var rt = new XMLHttpRequest();
            for (var it in rt.open("GET", Z, !0), rt.addEventListener("load", function(ft) {
              var vt = this.response;
              qa.add(Z, vt);
              var ut = Aa[Z];
              if (delete Aa[Z], this.status === 200 || this.status === 0) {
                this.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received.");
                for (var Gt = 0, Ht = ut.length; Gt < Ht; Gt++)
                  (pt = ut[Gt]).onLoad && pt.onLoad(vt);
                Ae.manager.itemEnd(Z);
              } else {
                for (Gt = 0, Ht = ut.length; Gt < Ht; Gt++) {
                  var pt;
                  (pt = ut[Gt]).onError && pt.onError(ft);
                }
                Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
              }
            }, !1), rt.addEventListener("progress", function(ft) {
              for (var vt = Aa[Z], ut = 0, Gt = vt.length; ut < Gt; ut++) {
                var Ht = vt[ut];
                Ht.onProgress && Ht.onProgress(ft);
              }
            }, !1), rt.addEventListener("error", function(ft) {
              var vt = Aa[Z];
              delete Aa[Z];
              for (var ut = 0, Gt = vt.length; ut < Gt; ut++) {
                var Ht = vt[ut];
                Ht.onError && Ht.onError(ft);
              }
              Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
            }, !1), this.responseType !== void 0 && (rt.responseType = this.responseType), this.withCredentials !== void 0 && (rt.withCredentials = this.withCredentials), rt.overrideMimeType && rt.overrideMimeType(this.mimeType !== void 0 ? this.mimeType : "text/plain"), this.requestHeader)
              rt.setRequestHeader(it, this.requestHeader[it]);
            rt.send(null);
          }
          return Ae.manager.itemStart(Z), rt;
        }
        Aa[Z].push({ onLoad: te, onProgress: oe, onError: se });
      }, setPath: function(Z) {
        return this.path = Z, this;
      }, setResponseType: function(Z) {
        return this.responseType = Z, this;
      }, setWithCredentials: function(Z) {
        return this.withCredentials = Z, this;
      }, setMimeType: function(Z) {
        return this.mimeType = Z, this;
      }, setRequestHeader: function(Z) {
        return this.requestHeader = Z, this;
      } }), Object.assign(vu.prototype, { load: function(Z, te, oe, se) {
        var Ae = this, ue = [], fe = new as();
        fe.image = ue;
        var pe = new Go(this.manager);
        function ve(Qe) {
          pe.load(Z[Qe], function(Ue) {
            var Je = Ae._parser(Ue, !0);
            ue[Qe] = { width: Je.width, height: Je.height, format: Je.format, mipmaps: Je.mipmaps }, (xe += 1) === 6 && (Je.mipmapCount === 1 && (fe.minFilter = un), fe.format = Je.format, fe.needsUpdate = !0, te && te(fe));
          }, oe, se);
        }
        if (pe.setPath(this.path), pe.setResponseType("arraybuffer"), Array.isArray(Z))
          for (var xe = 0, Me = 0, Ne = Z.length; Me < Ne; ++Me)
            ve(Me);
        else
          pe.load(Z, function(Qe) {
            var Ue = Ae._parser(Qe, !0);
            if (Ue.isCubemap)
              for (var Je = Ue.mipmaps.length / Ue.mipmapCount, rt = 0; rt < Je; rt++) {
                ue[rt] = { mipmaps: [] };
                for (var it = 0; it < Ue.mipmapCount; it++)
                  ue[rt].mipmaps.push(Ue.mipmaps[rt * Ue.mipmapCount + it]), ue[rt].format = Ue.format, ue[rt].width = Ue.width, ue[rt].height = Ue.height;
              }
            else
              fe.image.width = Ue.width, fe.image.height = Ue.height, fe.mipmaps = Ue.mipmaps;
            Ue.mipmapCount === 1 && (fe.minFilter = un), fe.format = Ue.format, fe.needsUpdate = !0, te && te(fe);
          }, oe, se);
        return fe;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }), Object.assign(hA.prototype, { load: function(Z, te, oe, se) {
        var Ae = this, ue = new Qo(), fe = new Go(this.manager);
        return fe.setResponseType("arraybuffer"), fe.load(Z, function(pe) {
          var ve = Ae._parser(pe);
          ve && (ve.image !== void 0 ? ue.image = ve.image : ve.data !== void 0 && (ue.image.width = ve.width, ue.image.height = ve.height, ue.image.data = ve.data), ue.wrapS = ve.wrapS !== void 0 ? ve.wrapS : _r, ue.wrapT = ve.wrapT !== void 0 ? ve.wrapT : _r, ue.magFilter = ve.magFilter !== void 0 ? ve.magFilter : un, ue.minFilter = ve.minFilter !== void 0 ? ve.minFilter : Vn, ue.anisotropy = ve.anisotropy !== void 0 ? ve.anisotropy : 1, ve.format !== void 0 && (ue.format = ve.format), ve.type !== void 0 && (ue.type = ve.type), ve.mipmaps !== void 0 && (ue.mipmaps = ve.mipmaps), ve.mipmapCount === 1 && (ue.minFilter = un), ue.needsUpdate = !0, te && te(ue, ve));
        }, oe, se), ue;
      } }), Object.assign(fc.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        Z === void 0 && (Z = ""), this.path !== void 0 && (Z = this.path + Z), Z = this.manager.resolveURL(Z);
        var Ae = this, ue = qa.get(Z);
        if (ue !== void 0)
          return Ae.manager.itemStart(Z), setTimeout(function() {
            te && te(ue), Ae.manager.itemEnd(Z);
          }, 0), ue;
        var fe = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
        function pe() {
          fe.removeEventListener("load", pe, !1), fe.removeEventListener("error", ve, !1), qa.add(Z, this), te && te(this), Ae.manager.itemEnd(Z);
        }
        function ve(xe) {
          fe.removeEventListener("load", pe, !1), fe.removeEventListener("error", ve, !1), se && se(xe), Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
        }
        return fe.addEventListener("load", pe, !1), fe.addEventListener("error", ve, !1), Z.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (fe.crossOrigin = this.crossOrigin), Ae.manager.itemStart(Z), fe.src = Z, fe;
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }), Object.assign(pA.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        var Ae = new aa(), ue = new fc(this.manager);
        ue.setCrossOrigin(this.crossOrigin), ue.setPath(this.path);
        var fe = 0;
        function pe(xe) {
          ue.load(Z[xe], function(Me) {
            Ae.images[xe] = Me, ++fe === 6 && (Ae.needsUpdate = !0, te && te(Ae));
          }, void 0, se);
        }
        for (var ve = 0; ve < Z.length; ++ve)
          pe(ve);
        return Ae;
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }), Object.assign(Pc.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        var Ae = new li(), ue = new fc(this.manager);
        return ue.setCrossOrigin(this.crossOrigin), ue.setPath(this.path), ue.load(Z, function(fe) {
          Ae.image = fe;
          var pe = Z.search(/\.(jpg|jpeg)$/) > 0 || Z.search(/^data\:image\/jpeg/) === 0;
          Ae.format = pe ? Ft : sr, Ae.needsUpdate = !0, te !== void 0 && te(Ae);
        }, oe, se), Ae;
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }), Object.assign(Bn.prototype, { getPoint: function() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
      }, getPointAt: function(Z, te) {
        var oe = this.getUtoTmapping(Z);
        return this.getPoint(oe, te);
      }, getPoints: function(Z) {
        Z === void 0 && (Z = 5);
        for (var te = [], oe = 0; oe <= Z; oe++)
          te.push(this.getPoint(oe / Z));
        return te;
      }, getSpacedPoints: function(Z) {
        Z === void 0 && (Z = 5);
        for (var te = [], oe = 0; oe <= Z; oe++)
          te.push(this.getPointAt(oe / Z));
        return te;
      }, getLength: function() {
        var Z = this.getLengths();
        return Z[Z.length - 1];
      }, getLengths: function(Z) {
        if (Z === void 0 && (Z = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === Z + 1 && !this.needsUpdate)
          return this.cacheArcLengths;
        this.needsUpdate = !1;
        var te, oe, se = [], Ae = this.getPoint(0), ue = 0;
        for (se.push(0), oe = 1; oe <= Z; oe++)
          ue += (te = this.getPoint(oe / Z)).distanceTo(Ae), se.push(ue), Ae = te;
        return this.cacheArcLengths = se, se;
      }, updateArcLengths: function() {
        this.needsUpdate = !0, this.getLengths();
      }, getUtoTmapping: function(Z, te) {
        var oe, se = this.getLengths(), Ae = 0, ue = se.length;
        oe = te || Z * se[ue - 1];
        for (var fe, pe = 0, ve = ue - 1; pe <= ve; )
          if ((fe = se[Ae = Math.floor(pe + (ve - pe) / 2)] - oe) < 0)
            pe = Ae + 1;
          else {
            if (!(fe > 0)) {
              ve = Ae;
              break;
            }
            ve = Ae - 1;
          }
        if (se[Ae = ve] === oe)
          return Ae / (ue - 1);
        var xe = se[Ae];
        return (Ae + (oe - xe) / (se[Ae + 1] - xe)) / (ue - 1);
      }, getTangent: function(Z) {
        var te = Z - 1e-4, oe = Z + 1e-4;
        te < 0 && (te = 0), oe > 1 && (oe = 1);
        var se = this.getPoint(te);
        return this.getPoint(oe).clone().sub(se).normalize();
      }, getTangentAt: function(Z) {
        var te = this.getUtoTmapping(Z);
        return this.getTangent(te);
      }, computeFrenetFrames: function(Z, te) {
        var oe, se, Ae, ue = new Bt(), fe = [], pe = [], ve = [], xe = new Bt(), Me = new yn();
        for (oe = 0; oe <= Z; oe++)
          se = oe / Z, fe[oe] = this.getTangentAt(se), fe[oe].normalize();
        pe[0] = new Bt(), ve[0] = new Bt();
        var Ne = Number.MAX_VALUE, Qe = Math.abs(fe[0].x), Ue = Math.abs(fe[0].y), Je = Math.abs(fe[0].z);
        for (Qe <= Ne && (Ne = Qe, ue.set(1, 0, 0)), Ue <= Ne && (Ne = Ue, ue.set(0, 1, 0)), Je <= Ne && ue.set(0, 0, 1), xe.crossVectors(fe[0], ue).normalize(), pe[0].crossVectors(fe[0], xe), ve[0].crossVectors(fe[0], pe[0]), oe = 1; oe <= Z; oe++)
          pe[oe] = pe[oe - 1].clone(), ve[oe] = ve[oe - 1].clone(), xe.crossVectors(fe[oe - 1], fe[oe]), xe.length() > Number.EPSILON && (xe.normalize(), Ae = Math.acos(Mn.clamp(fe[oe - 1].dot(fe[oe]), -1, 1)), pe[oe].applyMatrix4(Me.makeRotationAxis(xe, Ae))), ve[oe].crossVectors(fe[oe], pe[oe]);
        if (te === !0)
          for (Ae = Math.acos(Mn.clamp(pe[0].dot(pe[Z]), -1, 1)), Ae /= Z, fe[0].dot(xe.crossVectors(pe[0], pe[Z])) > 0 && (Ae = -Ae), oe = 1; oe <= Z; oe++)
            pe[oe].applyMatrix4(Me.makeRotationAxis(fe[oe], Ae * oe)), ve[oe].crossVectors(fe[oe], pe[oe]);
        return { tangents: fe, normals: pe, binormals: ve };
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.arcLengthDivisions = Z.arcLengthDivisions, this;
      }, toJSON: function() {
        var Z = { metadata: { version: 4.5, type: "Curve", generator: "Curve.toJSON" } };
        return Z.arcLengthDivisions = this.arcLengthDivisions, Z.type = this.type, Z;
      }, fromJSON: function(Z) {
        return this.arcLengthDivisions = Z.arcLengthDivisions, this;
      } }), Co.prototype = Object.create(Bn.prototype), Co.prototype.constructor = Co, Co.prototype.isEllipseCurve = !0, Co.prototype.getPoint = function(Z, te) {
        for (var oe = te || new Qr(), se = 2 * Math.PI, Ae = this.aEndAngle - this.aStartAngle, ue = Math.abs(Ae) < Number.EPSILON; Ae < 0; )
          Ae += se;
        for (; Ae > se; )
          Ae -= se;
        Ae < Number.EPSILON && (Ae = ue ? 0 : se), this.aClockwise !== !0 || ue || (Ae === se ? Ae = -se : Ae -= se);
        var fe = this.aStartAngle + Z * Ae, pe = this.aX + this.xRadius * Math.cos(fe), ve = this.aY + this.yRadius * Math.sin(fe);
        if (this.aRotation !== 0) {
          var xe = Math.cos(this.aRotation), Me = Math.sin(this.aRotation), Ne = pe - this.aX, Qe = ve - this.aY;
          pe = Ne * xe - Qe * Me + this.aX, ve = Ne * Me + Qe * xe + this.aY;
        }
        return oe.set(pe, ve);
      }, Co.prototype.copy = function(Z) {
        return Bn.prototype.copy.call(this, Z), this.aX = Z.aX, this.aY = Z.aY, this.xRadius = Z.xRadius, this.yRadius = Z.yRadius, this.aStartAngle = Z.aStartAngle, this.aEndAngle = Z.aEndAngle, this.aClockwise = Z.aClockwise, this.aRotation = Z.aRotation, this;
      }, Co.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        return Z.aX = this.aX, Z.aY = this.aY, Z.xRadius = this.xRadius, Z.yRadius = this.yRadius, Z.aStartAngle = this.aStartAngle, Z.aEndAngle = this.aEndAngle, Z.aClockwise = this.aClockwise, Z.aRotation = this.aRotation, Z;
      }, Co.prototype.fromJSON = function(Z) {
        return Bn.prototype.fromJSON.call(this, Z), this.aX = Z.aX, this.aY = Z.aY, this.xRadius = Z.xRadius, this.yRadius = Z.yRadius, this.aStartAngle = Z.aStartAngle, this.aEndAngle = Z.aEndAngle, this.aClockwise = Z.aClockwise, this.aRotation = Z.aRotation, this;
      }, vs.prototype = Object.create(Co.prototype), vs.prototype.constructor = vs, vs.prototype.isArcCurve = !0;
      var Uc = new Bt(), mA = new gA(), EA = new gA(), yA = new gA();
      function Xi(Z, te, oe, se) {
        Bn.call(this), this.type = "CatmullRomCurve3", this.points = Z || [], this.closed = te || !1, this.curveType = oe || "centripetal", this.tension = se || 0.5;
      }
      function Cu(Z, te, oe, se, Ae) {
        var ue = 0.5 * (se - te), fe = 0.5 * (Ae - oe), pe = Z * Z;
        return (2 * oe - 2 * se + ue + fe) * (Z * pe) + (-3 * oe + 3 * se - 2 * ue - fe) * pe + ue * Z + oe;
      }
      function hc(Z, te, oe, se) {
        return function(Ae, ue) {
          var fe = 1 - Ae;
          return fe * fe * ue;
        }(Z, te) + function(Ae, ue) {
          return 2 * (1 - Ae) * Ae * ue;
        }(Z, oe) + function(Ae, ue) {
          return Ae * Ae * ue;
        }(Z, se);
      }
      function pc(Z, te, oe, se, Ae) {
        return function(ue, fe) {
          var pe = 1 - ue;
          return pe * pe * pe * fe;
        }(Z, te) + function(ue, fe) {
          var pe = 1 - ue;
          return 3 * pe * pe * ue * fe;
        }(Z, oe) + function(ue, fe) {
          return 3 * (1 - ue) * ue * ue * fe;
        }(Z, se) + function(ue, fe) {
          return ue * ue * ue * fe;
        }(Z, Ae);
      }
      function Oo(Z, te, oe, se) {
        Bn.call(this), this.type = "CubicBezierCurve", this.v0 = Z || new Qr(), this.v1 = te || new Qr(), this.v2 = oe || new Qr(), this.v3 = se || new Qr();
      }
      function Wo(Z, te, oe, se) {
        Bn.call(this), this.type = "CubicBezierCurve3", this.v0 = Z || new Bt(), this.v1 = te || new Bt(), this.v2 = oe || new Bt(), this.v3 = se || new Bt();
      }
      function mo(Z, te) {
        Bn.call(this), this.type = "LineCurve", this.v1 = Z || new Qr(), this.v2 = te || new Qr();
      }
      function Po(Z, te) {
        Bn.call(this), this.type = "LineCurve3", this.v1 = Z || new Bt(), this.v2 = te || new Bt();
      }
      function Uo(Z, te, oe) {
        Bn.call(this), this.type = "QuadraticBezierCurve", this.v0 = Z || new Qr(), this.v1 = te || new Qr(), this.v2 = oe || new Qr();
      }
      function Ko(Z, te, oe) {
        Bn.call(this), this.type = "QuadraticBezierCurve3", this.v0 = Z || new Bt(), this.v1 = te || new Bt(), this.v2 = oe || new Bt();
      }
      function Ho(Z) {
        Bn.call(this), this.type = "SplineCurve", this.points = Z || [];
      }
      Xi.prototype = Object.create(Bn.prototype), Xi.prototype.constructor = Xi, Xi.prototype.isCatmullRomCurve3 = !0, Xi.prototype.getPoint = function(Z, te) {
        var oe, se, Ae, ue, fe = te || new Bt(), pe = this.points, ve = pe.length, xe = (ve - (this.closed ? 0 : 1)) * Z, Me = Math.floor(xe), Ne = xe - Me;
        if (this.closed ? Me += Me > 0 ? 0 : (Math.floor(Math.abs(Me) / ve) + 1) * ve : Ne === 0 && Me === ve - 1 && (Me = ve - 2, Ne = 1), this.closed || Me > 0 ? oe = pe[(Me - 1) % ve] : (Uc.subVectors(pe[0], pe[1]).add(pe[0]), oe = Uc), se = pe[Me % ve], Ae = pe[(Me + 1) % ve], this.closed || Me + 2 < ve ? ue = pe[(Me + 2) % ve] : (Uc.subVectors(pe[ve - 1], pe[ve - 2]).add(pe[ve - 1]), ue = Uc), this.curveType === "centripetal" || this.curveType === "chordal") {
          var Qe = this.curveType === "chordal" ? 0.5 : 0.25, Ue = Math.pow(oe.distanceToSquared(se), Qe), Je = Math.pow(se.distanceToSquared(Ae), Qe), rt = Math.pow(Ae.distanceToSquared(ue), Qe);
          Je < 1e-4 && (Je = 1), Ue < 1e-4 && (Ue = Je), rt < 1e-4 && (rt = Je), mA.initNonuniformCatmullRom(oe.x, se.x, Ae.x, ue.x, Ue, Je, rt), EA.initNonuniformCatmullRom(oe.y, se.y, Ae.y, ue.y, Ue, Je, rt), yA.initNonuniformCatmullRom(oe.z, se.z, Ae.z, ue.z, Ue, Je, rt);
        } else
          this.curveType === "catmullrom" && (mA.initCatmullRom(oe.x, se.x, Ae.x, ue.x, this.tension), EA.initCatmullRom(oe.y, se.y, Ae.y, ue.y, this.tension), yA.initCatmullRom(oe.z, se.z, Ae.z, ue.z, this.tension));
        return fe.set(mA.calc(Ne), EA.calc(Ne), yA.calc(Ne)), fe;
      }, Xi.prototype.copy = function(Z) {
        Bn.prototype.copy.call(this, Z), this.points = [];
        for (var te = 0, oe = Z.points.length; te < oe; te++) {
          var se = Z.points[te];
          this.points.push(se.clone());
        }
        return this.closed = Z.closed, this.curveType = Z.curveType, this.tension = Z.tension, this;
      }, Xi.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        Z.points = [];
        for (var te = 0, oe = this.points.length; te < oe; te++) {
          var se = this.points[te];
          Z.points.push(se.toArray());
        }
        return Z.closed = this.closed, Z.curveType = this.curveType, Z.tension = this.tension, Z;
      }, Xi.prototype.fromJSON = function(Z) {
        Bn.prototype.fromJSON.call(this, Z), this.points = [];
        for (var te = 0, oe = Z.points.length; te < oe; te++) {
          var se = Z.points[te];
          this.points.push(new Bt().fromArray(se));
        }
        return this.closed = Z.closed, this.curveType = Z.curveType, this.tension = Z.tension, this;
      }, Oo.prototype = Object.create(Bn.prototype), Oo.prototype.constructor = Oo, Oo.prototype.isCubicBezierCurve = !0, Oo.prototype.getPoint = function(Z, te) {
        var oe = te || new Qr(), se = this.v0, Ae = this.v1, ue = this.v2, fe = this.v3;
        return oe.set(pc(Z, se.x, Ae.x, ue.x, fe.x), pc(Z, se.y, Ae.y, ue.y, fe.y)), oe;
      }, Oo.prototype.copy = function(Z) {
        return Bn.prototype.copy.call(this, Z), this.v0.copy(Z.v0), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this.v3.copy(Z.v3), this;
      }, Oo.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        return Z.v0 = this.v0.toArray(), Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z.v3 = this.v3.toArray(), Z;
      }, Oo.prototype.fromJSON = function(Z) {
        return Bn.prototype.fromJSON.call(this, Z), this.v0.fromArray(Z.v0), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this.v3.fromArray(Z.v3), this;
      }, Wo.prototype = Object.create(Bn.prototype), Wo.prototype.constructor = Wo, Wo.prototype.isCubicBezierCurve3 = !0, Wo.prototype.getPoint = function(Z, te) {
        var oe = te || new Bt(), se = this.v0, Ae = this.v1, ue = this.v2, fe = this.v3;
        return oe.set(pc(Z, se.x, Ae.x, ue.x, fe.x), pc(Z, se.y, Ae.y, ue.y, fe.y), pc(Z, se.z, Ae.z, ue.z, fe.z)), oe;
      }, Wo.prototype.copy = function(Z) {
        return Bn.prototype.copy.call(this, Z), this.v0.copy(Z.v0), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this.v3.copy(Z.v3), this;
      }, Wo.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        return Z.v0 = this.v0.toArray(), Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z.v3 = this.v3.toArray(), Z;
      }, Wo.prototype.fromJSON = function(Z) {
        return Bn.prototype.fromJSON.call(this, Z), this.v0.fromArray(Z.v0), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this.v3.fromArray(Z.v3), this;
      }, mo.prototype = Object.create(Bn.prototype), mo.prototype.constructor = mo, mo.prototype.isLineCurve = !0, mo.prototype.getPoint = function(Z, te) {
        var oe = te || new Qr();
        return Z === 1 ? oe.copy(this.v2) : (oe.copy(this.v2).sub(this.v1), oe.multiplyScalar(Z).add(this.v1)), oe;
      }, mo.prototype.getPointAt = function(Z, te) {
        return this.getPoint(Z, te);
      }, mo.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize();
      }, mo.prototype.copy = function(Z) {
        return Bn.prototype.copy.call(this, Z), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this;
      }, mo.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        return Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z;
      }, mo.prototype.fromJSON = function(Z) {
        return Bn.prototype.fromJSON.call(this, Z), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this;
      }, Po.prototype = Object.create(Bn.prototype), Po.prototype.constructor = Po, Po.prototype.isLineCurve3 = !0, Po.prototype.getPoint = function(Z, te) {
        var oe = te || new Bt();
        return Z === 1 ? oe.copy(this.v2) : (oe.copy(this.v2).sub(this.v1), oe.multiplyScalar(Z).add(this.v1)), oe;
      }, Po.prototype.getPointAt = function(Z, te) {
        return this.getPoint(Z, te);
      }, Po.prototype.copy = function(Z) {
        return Bn.prototype.copy.call(this, Z), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this;
      }, Po.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        return Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z;
      }, Po.prototype.fromJSON = function(Z) {
        return Bn.prototype.fromJSON.call(this, Z), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this;
      }, Uo.prototype = Object.create(Bn.prototype), Uo.prototype.constructor = Uo, Uo.prototype.isQuadraticBezierCurve = !0, Uo.prototype.getPoint = function(Z, te) {
        var oe = te || new Qr(), se = this.v0, Ae = this.v1, ue = this.v2;
        return oe.set(hc(Z, se.x, Ae.x, ue.x), hc(Z, se.y, Ae.y, ue.y)), oe;
      }, Uo.prototype.copy = function(Z) {
        return Bn.prototype.copy.call(this, Z), this.v0.copy(Z.v0), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this;
      }, Uo.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        return Z.v0 = this.v0.toArray(), Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z;
      }, Uo.prototype.fromJSON = function(Z) {
        return Bn.prototype.fromJSON.call(this, Z), this.v0.fromArray(Z.v0), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this;
      }, Ko.prototype = Object.create(Bn.prototype), Ko.prototype.constructor = Ko, Ko.prototype.isQuadraticBezierCurve3 = !0, Ko.prototype.getPoint = function(Z, te) {
        var oe = te || new Bt(), se = this.v0, Ae = this.v1, ue = this.v2;
        return oe.set(hc(Z, se.x, Ae.x, ue.x), hc(Z, se.y, Ae.y, ue.y), hc(Z, se.z, Ae.z, ue.z)), oe;
      }, Ko.prototype.copy = function(Z) {
        return Bn.prototype.copy.call(this, Z), this.v0.copy(Z.v0), this.v1.copy(Z.v1), this.v2.copy(Z.v2), this;
      }, Ko.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        return Z.v0 = this.v0.toArray(), Z.v1 = this.v1.toArray(), Z.v2 = this.v2.toArray(), Z;
      }, Ko.prototype.fromJSON = function(Z) {
        return Bn.prototype.fromJSON.call(this, Z), this.v0.fromArray(Z.v0), this.v1.fromArray(Z.v1), this.v2.fromArray(Z.v2), this;
      }, Ho.prototype = Object.create(Bn.prototype), Ho.prototype.constructor = Ho, Ho.prototype.isSplineCurve = !0, Ho.prototype.getPoint = function(Z, te) {
        var oe = te || new Qr(), se = this.points, Ae = (se.length - 1) * Z, ue = Math.floor(Ae), fe = Ae - ue, pe = se[ue === 0 ? ue : ue - 1], ve = se[ue], xe = se[ue > se.length - 2 ? se.length - 1 : ue + 1], Me = se[ue > se.length - 3 ? se.length - 1 : ue + 2];
        return oe.set(Cu(fe, pe.x, ve.x, xe.x, Me.x), Cu(fe, pe.y, ve.y, xe.y, Me.y)), oe;
      }, Ho.prototype.copy = function(Z) {
        Bn.prototype.copy.call(this, Z), this.points = [];
        for (var te = 0, oe = Z.points.length; te < oe; te++) {
          var se = Z.points[te];
          this.points.push(se.clone());
        }
        return this;
      }, Ho.prototype.toJSON = function() {
        var Z = Bn.prototype.toJSON.call(this);
        Z.points = [];
        for (var te = 0, oe = this.points.length; te < oe; te++) {
          var se = this.points[te];
          Z.points.push(se.toArray());
        }
        return Z;
      }, Ho.prototype.fromJSON = function(Z) {
        Bn.prototype.fromJSON.call(this, Z), this.points = [];
        for (var te = 0, oe = Z.points.length; te < oe; te++) {
          var se = Z.points[te];
          this.points.push(new Qr().fromArray(se));
        }
        return this;
      };
      var Iu = Object.freeze({ ArcCurve: vs, CatmullRomCurve3: Xi, CubicBezierCurve: Oo, CubicBezierCurve3: Wo, EllipseCurve: Co, LineCurve: mo, LineCurve3: Po, QuadraticBezierCurve: Uo, QuadraticBezierCurve3: Ko, SplineCurve: Ho });
      function ua() {
        Bn.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = !1;
      }
      function Do(Z) {
        ua.call(this), this.type = "Path", this.currentPoint = new Qr(), Z && this.setFromPoints(Z);
      }
      function ya(Z) {
        Do.call(this, Z), this.uuid = Mn.generateUUID(), this.type = "Shape", this.holes = [];
      }
      function wi(Z, te) {
        Cr.call(this), this.type = "Light", this.color = new ze(Z), this.intensity = te !== void 0 ? te : 1, this.receiveShadow = void 0;
      }
      function Hc(Z, te, oe) {
        wi.call(this, Z, oe), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(Cr.DefaultUp), this.updateMatrix(), this.groundColor = new ze(te);
      }
      function $a(Z) {
        this.camera = Z, this.bias = 0, this.radius = 1, this.mapSize = new Qr(512, 512), this.map = null, this.matrix = new yn();
      }
      function Dc() {
        $a.call(this, new Si(50, 1, 0.5, 500));
      }
      function qc(Z, te, oe, se, Ae, ue) {
        wi.call(this, Z, te), this.type = "SpotLight", this.position.copy(Cr.DefaultUp), this.updateMatrix(), this.target = new Cr(), Object.defineProperty(this, "power", { get: function() {
          return this.intensity * Math.PI;
        }, set: function(fe) {
          this.intensity = fe / Math.PI;
        } }), this.distance = oe !== void 0 ? oe : 0, this.angle = se !== void 0 ? se : Math.PI / 3, this.penumbra = Ae !== void 0 ? Ae : 0, this.decay = ue !== void 0 ? ue : 1, this.shadow = new Dc();
      }
      function $c(Z, te, oe, se) {
        wi.call(this, Z, te), this.type = "PointLight", Object.defineProperty(this, "power", { get: function() {
          return 4 * this.intensity * Math.PI;
        }, set: function(Ae) {
          this.intensity = Ae / (4 * Math.PI);
        } }), this.distance = oe !== void 0 ? oe : 0, this.decay = se !== void 0 ? se : 1, this.shadow = new $a(new Si(90, 1, 0.5, 500));
      }
      function jc() {
        $a.call(this, new ai(-5, 5, 5, -5, 0.5, 500));
      }
      function Yc(Z, te) {
        wi.call(this, Z, te), this.type = "DirectionalLight", this.position.copy(Cr.DefaultUp), this.updateMatrix(), this.target = new Cr(), this.shadow = new jc();
      }
      function Vc(Z, te) {
        wi.call(this, Z, te), this.type = "AmbientLight", this.castShadow = void 0;
      }
      function Lc(Z, te, oe, se) {
        wi.call(this, Z, te), this.type = "RectAreaLight", this.width = oe !== void 0 ? oe : 10, this.height = se !== void 0 ? se : 10;
      }
      ua.prototype = Object.assign(Object.create(Bn.prototype), { constructor: ua, add: function(Z) {
        this.curves.push(Z);
      }, closePath: function() {
        var Z = this.curves[0].getPoint(0), te = this.curves[this.curves.length - 1].getPoint(1);
        Z.equals(te) || this.curves.push(new mo(te, Z));
      }, getPoint: function(Z) {
        for (var te = Z * this.getLength(), oe = this.getCurveLengths(), se = 0; se < oe.length; ) {
          if (oe[se] >= te) {
            var Ae = oe[se] - te, ue = this.curves[se], fe = ue.getLength(), pe = fe === 0 ? 0 : 1 - Ae / fe;
            return ue.getPointAt(pe);
          }
          se++;
        }
        return null;
      }, getLength: function() {
        var Z = this.getCurveLengths();
        return Z[Z.length - 1];
      }, updateArcLengths: function() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
      }, getCurveLengths: function() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
          return this.cacheLengths;
        for (var Z = [], te = 0, oe = 0, se = this.curves.length; oe < se; oe++)
          te += this.curves[oe].getLength(), Z.push(te);
        return this.cacheLengths = Z, Z;
      }, getSpacedPoints: function(Z) {
        Z === void 0 && (Z = 40);
        for (var te = [], oe = 0; oe <= Z; oe++)
          te.push(this.getPoint(oe / Z));
        return this.autoClose && te.push(te[0]), te;
      }, getPoints: function(Z) {
        Z = Z || 12;
        for (var te, oe = [], se = 0, Ae = this.curves; se < Ae.length; se++)
          for (var ue = Ae[se], fe = ue && ue.isEllipseCurve ? 2 * Z : ue && (ue.isLineCurve || ue.isLineCurve3) ? 1 : ue && ue.isSplineCurve ? Z * ue.points.length : Z, pe = ue.getPoints(fe), ve = 0; ve < pe.length; ve++) {
            var xe = pe[ve];
            te && te.equals(xe) || (oe.push(xe), te = xe);
          }
        return this.autoClose && oe.length > 1 && !oe[oe.length - 1].equals(oe[0]) && oe.push(oe[0]), oe;
      }, copy: function(Z) {
        Bn.prototype.copy.call(this, Z), this.curves = [];
        for (var te = 0, oe = Z.curves.length; te < oe; te++) {
          var se = Z.curves[te];
          this.curves.push(se.clone());
        }
        return this.autoClose = Z.autoClose, this;
      }, toJSON: function() {
        var Z = Bn.prototype.toJSON.call(this);
        Z.autoClose = this.autoClose, Z.curves = [];
        for (var te = 0, oe = this.curves.length; te < oe; te++) {
          var se = this.curves[te];
          Z.curves.push(se.toJSON());
        }
        return Z;
      }, fromJSON: function(Z) {
        Bn.prototype.fromJSON.call(this, Z), this.autoClose = Z.autoClose, this.curves = [];
        for (var te = 0, oe = Z.curves.length; te < oe; te++) {
          var se = Z.curves[te];
          this.curves.push(new Iu[se.type]().fromJSON(se));
        }
        return this;
      } }), Do.prototype = Object.assign(Object.create(ua.prototype), { constructor: Do, setFromPoints: function(Z) {
        this.moveTo(Z[0].x, Z[0].y);
        for (var te = 1, oe = Z.length; te < oe; te++)
          this.lineTo(Z[te].x, Z[te].y);
      }, moveTo: function(Z, te) {
        this.currentPoint.set(Z, te);
      }, lineTo: function(Z, te) {
        var oe = new mo(this.currentPoint.clone(), new Qr(Z, te));
        this.curves.push(oe), this.currentPoint.set(Z, te);
      }, quadraticCurveTo: function(Z, te, oe, se) {
        var Ae = new Uo(this.currentPoint.clone(), new Qr(Z, te), new Qr(oe, se));
        this.curves.push(Ae), this.currentPoint.set(oe, se);
      }, bezierCurveTo: function(Z, te, oe, se, Ae, ue) {
        var fe = new Oo(this.currentPoint.clone(), new Qr(Z, te), new Qr(oe, se), new Qr(Ae, ue));
        this.curves.push(fe), this.currentPoint.set(Ae, ue);
      }, splineThru: function(Z) {
        var te = new Ho([this.currentPoint.clone()].concat(Z));
        this.curves.push(te), this.currentPoint.copy(Z[Z.length - 1]);
      }, arc: function(Z, te, oe, se, Ae, ue) {
        var fe = this.currentPoint.x, pe = this.currentPoint.y;
        this.absarc(Z + fe, te + pe, oe, se, Ae, ue);
      }, absarc: function(Z, te, oe, se, Ae, ue) {
        this.absellipse(Z, te, oe, oe, se, Ae, ue);
      }, ellipse: function(Z, te, oe, se, Ae, ue, fe, pe) {
        var ve = this.currentPoint.x, xe = this.currentPoint.y;
        this.absellipse(Z + ve, te + xe, oe, se, Ae, ue, fe, pe);
      }, absellipse: function(Z, te, oe, se, Ae, ue, fe, pe) {
        var ve = new Co(Z, te, oe, se, Ae, ue, fe, pe);
        if (this.curves.length > 0) {
          var xe = ve.getPoint(0);
          xe.equals(this.currentPoint) || this.lineTo(xe.x, xe.y);
        }
        this.curves.push(ve);
        var Me = ve.getPoint(1);
        this.currentPoint.copy(Me);
      }, copy: function(Z) {
        return ua.prototype.copy.call(this, Z), this.currentPoint.copy(Z.currentPoint), this;
      }, toJSON: function() {
        var Z = ua.prototype.toJSON.call(this);
        return Z.currentPoint = this.currentPoint.toArray(), Z;
      }, fromJSON: function(Z) {
        return ua.prototype.fromJSON.call(this, Z), this.currentPoint.fromArray(Z.currentPoint), this;
      } }), ya.prototype = Object.assign(Object.create(Do.prototype), { constructor: ya, getPointsHoles: function(Z) {
        for (var te = [], oe = 0, se = this.holes.length; oe < se; oe++)
          te[oe] = this.holes[oe].getPoints(Z);
        return te;
      }, extractPoints: function(Z) {
        return { shape: this.getPoints(Z), holes: this.getPointsHoles(Z) };
      }, copy: function(Z) {
        Do.prototype.copy.call(this, Z), this.holes = [];
        for (var te = 0, oe = Z.holes.length; te < oe; te++) {
          var se = Z.holes[te];
          this.holes.push(se.clone());
        }
        return this;
      }, toJSON: function() {
        var Z = Do.prototype.toJSON.call(this);
        Z.uuid = this.uuid, Z.holes = [];
        for (var te = 0, oe = this.holes.length; te < oe; te++) {
          var se = this.holes[te];
          Z.holes.push(se.toJSON());
        }
        return Z;
      }, fromJSON: function(Z) {
        Do.prototype.fromJSON.call(this, Z), this.uuid = Z.uuid, this.holes = [];
        for (var te = 0, oe = Z.holes.length; te < oe; te++) {
          var se = Z.holes[te];
          this.holes.push(new Do().fromJSON(se));
        }
        return this;
      } }), wi.prototype = Object.assign(Object.create(Cr.prototype), { constructor: wi, isLight: !0, copy: function(Z) {
        return Cr.prototype.copy.call(this, Z), this.color.copy(Z.color), this.intensity = Z.intensity, this;
      }, toJSON: function(Z) {
        var te = Cr.prototype.toJSON.call(this, Z);
        return te.object.color = this.color.getHex(), te.object.intensity = this.intensity, this.groundColor !== void 0 && (te.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (te.object.distance = this.distance), this.angle !== void 0 && (te.object.angle = this.angle), this.decay !== void 0 && (te.object.decay = this.decay), this.penumbra !== void 0 && (te.object.penumbra = this.penumbra), this.shadow !== void 0 && (te.object.shadow = this.shadow.toJSON()), te;
      } }), Hc.prototype = Object.assign(Object.create(wi.prototype), { constructor: Hc, isHemisphereLight: !0, copy: function(Z) {
        return wi.prototype.copy.call(this, Z), this.groundColor.copy(Z.groundColor), this;
      } }), Object.assign($a.prototype, { copy: function(Z) {
        return this.camera = Z.camera.clone(), this.bias = Z.bias, this.radius = Z.radius, this.mapSize.copy(Z.mapSize), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, toJSON: function() {
        var Z = {};
        return this.bias !== 0 && (Z.bias = this.bias), this.radius !== 1 && (Z.radius = this.radius), this.mapSize.x === 512 && this.mapSize.y === 512 || (Z.mapSize = this.mapSize.toArray()), Z.camera = this.camera.toJSON(!1).object, delete Z.camera.matrix, Z;
      } }), Dc.prototype = Object.assign(Object.create($a.prototype), { constructor: Dc, isSpotLightShadow: !0, update: function(Z) {
        var te = this.camera, oe = 2 * Mn.RAD2DEG * Z.angle, se = this.mapSize.width / this.mapSize.height, Ae = Z.distance || te.far;
        oe === te.fov && se === te.aspect && Ae === te.far || (te.fov = oe, te.aspect = se, te.far = Ae, te.updateProjectionMatrix());
      } }), qc.prototype = Object.assign(Object.create(wi.prototype), { constructor: qc, isSpotLight: !0, copy: function(Z) {
        return wi.prototype.copy.call(this, Z), this.distance = Z.distance, this.angle = Z.angle, this.penumbra = Z.penumbra, this.decay = Z.decay, this.target = Z.target.clone(), this.shadow = Z.shadow.clone(), this;
      } }), $c.prototype = Object.assign(Object.create(wi.prototype), { constructor: $c, isPointLight: !0, copy: function(Z) {
        return wi.prototype.copy.call(this, Z), this.distance = Z.distance, this.decay = Z.decay, this.shadow = Z.shadow.clone(), this;
      } }), jc.prototype = Object.assign(Object.create($a.prototype), { constructor: jc }), Yc.prototype = Object.assign(Object.create(wi.prototype), { constructor: Yc, isDirectionalLight: !0, copy: function(Z) {
        return wi.prototype.copy.call(this, Z), this.target = Z.target.clone(), this.shadow = Z.shadow.clone(), this;
      } }), Vc.prototype = Object.assign(Object.create(wi.prototype), { constructor: Vc, isAmbientLight: !0 }), Lc.prototype = Object.assign(Object.create(wi.prototype), { constructor: Lc, isRectAreaLight: !0, copy: function(Z) {
        return wi.prototype.copy.call(this, Z), this.width = Z.width, this.height = Z.height, this;
      }, toJSON: function(Z) {
        var te = wi.prototype.toJSON.call(this, Z);
        return te.object.width = this.width, te.object.height = this.height, te;
      } });
      var eo = { arraySlice: function(Z, te, oe) {
        return eo.isTypedArray(Z) ? new Z.constructor(Z.subarray(te, oe !== void 0 ? oe : Z.length)) : Z.slice(te, oe);
      }, convertArray: function(Z, te, oe) {
        return !Z || !oe && Z.constructor === te ? Z : typeof te.BYTES_PER_ELEMENT == "number" ? new te(Z) : Array.prototype.slice.call(Z);
      }, isTypedArray: function(Z) {
        return ArrayBuffer.isView(Z) && !(Z instanceof DataView);
      }, getKeyframeOrder: function(Z) {
        for (var te = Z.length, oe = new Array(te), se = 0; se !== te; ++se)
          oe[se] = se;
        return oe.sort(function(Ae, ue) {
          return Z[Ae] - Z[ue];
        }), oe;
      }, sortedArray: function(Z, te, oe) {
        for (var se = Z.length, Ae = new Z.constructor(se), ue = 0, fe = 0; fe !== se; ++ue)
          for (var pe = oe[ue] * te, ve = 0; ve !== te; ++ve)
            Ae[fe++] = Z[pe + ve];
        return Ae;
      }, flattenJSON: function(Z, te, oe, se) {
        for (var Ae = 1, ue = Z[0]; ue !== void 0 && ue[se] === void 0; )
          ue = Z[Ae++];
        if (ue !== void 0) {
          var fe = ue[se];
          if (fe !== void 0)
            if (Array.isArray(fe))
              do
                (fe = ue[se]) !== void 0 && (te.push(ue.time), oe.push.apply(oe, fe)), ue = Z[Ae++];
              while (ue !== void 0);
            else if (fe.toArray !== void 0)
              do
                (fe = ue[se]) !== void 0 && (te.push(ue.time), fe.toArray(oe, oe.length)), ue = Z[Ae++];
              while (ue !== void 0);
            else
              do
                (fe = ue[se]) !== void 0 && (te.push(ue.time), oe.push(fe)), ue = Z[Ae++];
              while (ue !== void 0);
        }
      } };
      function Io(Z, te, oe, se) {
        this.parameterPositions = Z, this._cachedIndex = 0, this.resultBuffer = se !== void 0 ? se : new te.constructor(oe), this.sampleValues = te, this.valueSize = oe;
      }
      function zc(Z, te, oe, se) {
        Io.call(this, Z, te, oe, se), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0;
      }
      function gc(Z, te, oe, se) {
        Io.call(this, Z, te, oe, se);
      }
      function Jc(Z, te, oe, se) {
        Io.call(this, Z, te, oe, se);
      }
      function Yi(Z, te, oe, se) {
        if (Z === void 0)
          throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (te === void 0 || te.length === 0)
          throw new Error("THREE.KeyframeTrack: no keyframes in track named " + Z);
        this.name = Z, this.times = eo.convertArray(te, this.TimeBufferType), this.values = eo.convertArray(oe, this.ValueBufferType), this.setInterpolation(se || this.DefaultInterpolation);
      }
      function Wc(Z, te, oe) {
        Yi.call(this, Z, te, oe);
      }
      function Kc(Z, te, oe, se) {
        Yi.call(this, Z, te, oe, se);
      }
      function Cs(Z, te, oe, se) {
        Yi.call(this, Z, te, oe, se);
      }
      function Zc(Z, te, oe, se) {
        Io.call(this, Z, te, oe, se);
      }
      function mc(Z, te, oe, se) {
        Yi.call(this, Z, te, oe, se);
      }
      function Xc(Z, te, oe, se) {
        Yi.call(this, Z, te, oe, se);
      }
      function Is(Z, te, oe, se) {
        Yi.call(this, Z, te, oe, se);
      }
      function To(Z, te, oe) {
        this.name = Z, this.tracks = oe, this.duration = te !== void 0 ? te : -1, this.uuid = Mn.generateUUID(), this.duration < 0 && this.resetDuration();
      }
      function Fl(Z) {
        if (Z.type === void 0)
          throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var te = function(Ae) {
          switch (Ae.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
              return Cs;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
              return Is;
            case "color":
              return Kc;
            case "quaternion":
              return mc;
            case "bool":
            case "boolean":
              return Wc;
            case "string":
              return Xc;
          }
          throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + Ae);
        }(Z.type);
        if (Z.times === void 0) {
          var oe = [], se = [];
          eo.flattenJSON(Z.keys, oe, se, "value"), Z.times = oe, Z.values = se;
        }
        return te.parse !== void 0 ? te.parse(Z) : new te(Z.name, Z.times, Z.values, Z.interpolation);
      }
      function eA(Z) {
        this.manager = Z !== void 0 ? Z : go, this.textures = {};
      }
      function BA(Z) {
        this.manager = Z !== void 0 ? Z : go;
      }
      Object.assign(Io.prototype, { evaluate: function(Z) {
        var te = this.parameterPositions, oe = this._cachedIndex, se = te[oe], Ae = te[oe - 1];
        e: {
          t: {
            var ue;
            r: {
              n:
                if (!(Z < se)) {
                  for (var fe = oe + 2; ; ) {
                    if (se === void 0) {
                      if (Z < Ae)
                        break n;
                      return oe = te.length, this._cachedIndex = oe, this.afterEnd_(oe - 1, Z, Ae);
                    }
                    if (oe === fe)
                      break;
                    if (Ae = se, Z < (se = te[++oe]))
                      break t;
                  }
                  ue = te.length;
                  break r;
                }
              if (Z >= Ae)
                break e;
              var pe = te[1];
              for (Z < pe && (oe = 2, Ae = pe), fe = oe - 2; ; ) {
                if (Ae === void 0)
                  return this._cachedIndex = 0, this.beforeStart_(0, Z, se);
                if (oe === fe)
                  break;
                if (se = Ae, Z >= (Ae = te[--oe - 1]))
                  break t;
              }
              ue = oe, oe = 0;
            }
            for (; oe < ue; ) {
              var ve = oe + ue >>> 1;
              Z < te[ve] ? ue = ve : oe = ve + 1;
            }
            if (se = te[oe], (Ae = te[oe - 1]) === void 0)
              return this._cachedIndex = 0, this.beforeStart_(0, Z, se);
            if (se === void 0)
              return oe = te.length, this._cachedIndex = oe, this.afterEnd_(oe - 1, Ae, Z);
          }
          this._cachedIndex = oe, this.intervalChanged_(oe, Ae, se);
        }
        return this.interpolate_(oe, Ae, Z, se);
      }, settings: null, DefaultSettings_: {}, getSettings_: function() {
        return this.settings || this.DefaultSettings_;
      }, copySampleValue_: function(Z) {
        for (var te = this.resultBuffer, oe = this.sampleValues, se = this.valueSize, Ae = Z * se, ue = 0; ue !== se; ++ue)
          te[ue] = oe[Ae + ue];
        return te;
      }, interpolate_: function() {
        throw new Error("call to abstract method");
      }, intervalChanged_: function() {
      } }), Object.assign(Io.prototype, { beforeStart_: Io.prototype.copySampleValue_, afterEnd_: Io.prototype.copySampleValue_ }), zc.prototype = Object.assign(Object.create(Io.prototype), { constructor: zc, DefaultSettings_: { endingStart: sn, endingEnd: sn }, intervalChanged_: function(Z, te, oe) {
        var se = this.parameterPositions, Ae = Z - 2, ue = Z + 1, fe = se[Ae], pe = se[ue];
        if (fe === void 0)
          switch (this.getSettings_().endingStart) {
            case On:
              Ae = Z, fe = 2 * te - oe;
              break;
            case ii:
              fe = te + se[Ae = se.length - 2] - se[Ae + 1];
              break;
            default:
              Ae = Z, fe = oe;
          }
        if (pe === void 0)
          switch (this.getSettings_().endingEnd) {
            case On:
              ue = Z, pe = 2 * oe - te;
              break;
            case ii:
              ue = 1, pe = oe + se[1] - se[0];
              break;
            default:
              ue = Z - 1, pe = te;
          }
        var ve = 0.5 * (oe - te), xe = this.valueSize;
        this._weightPrev = ve / (te - fe), this._weightNext = ve / (pe - oe), this._offsetPrev = Ae * xe, this._offsetNext = ue * xe;
      }, interpolate_: function(Z, te, oe, se) {
        for (var Ae = this.resultBuffer, ue = this.sampleValues, fe = this.valueSize, pe = Z * fe, ve = pe - fe, xe = this._offsetPrev, Me = this._offsetNext, Ne = this._weightPrev, Qe = this._weightNext, Ue = (oe - te) / (se - te), Je = Ue * Ue, rt = Je * Ue, it = -Ne * rt + 2 * Ne * Je - Ne * Ue, ft = (1 + Ne) * rt + (-1.5 - 2 * Ne) * Je + (-0.5 + Ne) * Ue + 1, vt = (-1 - Qe) * rt + (1.5 + Qe) * Je + 0.5 * Ue, ut = Qe * rt - Qe * Je, Gt = 0; Gt !== fe; ++Gt)
          Ae[Gt] = it * ue[xe + Gt] + ft * ue[ve + Gt] + vt * ue[pe + Gt] + ut * ue[Me + Gt];
        return Ae;
      } }), gc.prototype = Object.assign(Object.create(Io.prototype), { constructor: gc, interpolate_: function(Z, te, oe, se) {
        for (var Ae = this.resultBuffer, ue = this.sampleValues, fe = this.valueSize, pe = Z * fe, ve = pe - fe, xe = (oe - te) / (se - te), Me = 1 - xe, Ne = 0; Ne !== fe; ++Ne)
          Ae[Ne] = ue[ve + Ne] * Me + ue[pe + Ne] * xe;
        return Ae;
      } }), Jc.prototype = Object.assign(Object.create(Io.prototype), { constructor: Jc, interpolate_: function(Z) {
        return this.copySampleValue_(Z - 1);
      } }), Object.assign(Yi, { toJSON: function(Z) {
        var te, oe = Z.constructor;
        if (oe.toJSON !== void 0)
          te = oe.toJSON(Z);
        else {
          te = { name: Z.name, times: eo.convertArray(Z.times, Array), values: eo.convertArray(Z.values, Array) };
          var se = Z.getInterpolation();
          se !== Z.DefaultInterpolation && (te.interpolation = se);
        }
        return te.type = Z.ValueTypeName, te;
      } }), Object.assign(Yi.prototype, { constructor: Yi, TimeBufferType: Float32Array, ValueBufferType: Float32Array, DefaultInterpolation: bn, InterpolantFactoryMethodDiscrete: function(Z) {
        return new Jc(this.times, this.values, this.getValueSize(), Z);
      }, InterpolantFactoryMethodLinear: function(Z) {
        return new gc(this.times, this.values, this.getValueSize(), Z);
      }, InterpolantFactoryMethodSmooth: function(Z) {
        return new zc(this.times, this.values, this.getValueSize(), Z);
      }, setInterpolation: function(Z) {
        var te;
        switch (Z) {
          case jr:
            te = this.InterpolantFactoryMethodDiscrete;
            break;
          case bn:
            te = this.InterpolantFactoryMethodLinear;
            break;
          case gn:
            te = this.InterpolantFactoryMethodSmooth;
        }
        if (te === void 0) {
          var oe = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
          if (this.createInterpolant === void 0) {
            if (Z === this.DefaultInterpolation)
              throw new Error(oe);
            this.setInterpolation(this.DefaultInterpolation);
          }
          return console.warn("THREE.KeyframeTrack:", oe), this;
        }
        return this.createInterpolant = te, this;
      }, getInterpolation: function() {
        switch (this.createInterpolant) {
          case this.InterpolantFactoryMethodDiscrete:
            return jr;
          case this.InterpolantFactoryMethodLinear:
            return bn;
          case this.InterpolantFactoryMethodSmooth:
            return gn;
        }
      }, getValueSize: function() {
        return this.values.length / this.times.length;
      }, shift: function(Z) {
        if (Z !== 0)
          for (var te = this.times, oe = 0, se = te.length; oe !== se; ++oe)
            te[oe] += Z;
        return this;
      }, scale: function(Z) {
        if (Z !== 1)
          for (var te = this.times, oe = 0, se = te.length; oe !== se; ++oe)
            te[oe] *= Z;
        return this;
      }, trim: function(Z, te) {
        for (var oe = this.times, se = oe.length, Ae = 0, ue = se - 1; Ae !== se && oe[Ae] < Z; )
          ++Ae;
        for (; ue !== -1 && oe[ue] > te; )
          --ue;
        if (++ue, Ae !== 0 || ue !== se) {
          Ae >= ue && (Ae = (ue = Math.max(ue, 1)) - 1);
          var fe = this.getValueSize();
          this.times = eo.arraySlice(oe, Ae, ue), this.values = eo.arraySlice(this.values, Ae * fe, ue * fe);
        }
        return this;
      }, validate: function() {
        var Z = !0, te = this.getValueSize();
        te - Math.floor(te) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), Z = !1);
        var oe = this.times, se = this.values, Ae = oe.length;
        Ae === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), Z = !1);
        for (var ue = null, fe = 0; fe !== Ae; fe++) {
          var pe = oe[fe];
          if (typeof pe == "number" && isNaN(pe)) {
            console.error("THREE.KeyframeTrack: Time is not a valid number.", this, fe, pe), Z = !1;
            break;
          }
          if (ue !== null && ue > pe) {
            console.error("THREE.KeyframeTrack: Out of order keys.", this, fe, pe, ue), Z = !1;
            break;
          }
          ue = pe;
        }
        if (se !== void 0 && eo.isTypedArray(se)) {
          fe = 0;
          for (var ve = se.length; fe !== ve; ++fe) {
            var xe = se[fe];
            if (isNaN(xe)) {
              console.error("THREE.KeyframeTrack: Value is not a valid number.", this, fe, xe), Z = !1;
              break;
            }
          }
        }
        return Z;
      }, optimize: function() {
        for (var Z = this.times, te = this.values, oe = this.getValueSize(), se = this.getInterpolation() === gn, Ae = 1, ue = Z.length - 1, fe = 1; fe < ue; ++fe) {
          var pe = !1, ve = Z[fe];
          if (ve !== Z[fe + 1] && (fe !== 1 || ve !== ve[0]))
            if (se)
              pe = !0;
            else
              for (var xe = fe * oe, Me = xe - oe, Ne = xe + oe, Qe = 0; Qe !== oe; ++Qe) {
                var Ue = te[xe + Qe];
                if (Ue !== te[Me + Qe] || Ue !== te[Ne + Qe]) {
                  pe = !0;
                  break;
                }
              }
          if (pe) {
            if (fe !== Ae) {
              Z[Ae] = Z[fe];
              var Je = fe * oe, rt = Ae * oe;
              for (Qe = 0; Qe !== oe; ++Qe)
                te[rt + Qe] = te[Je + Qe];
            }
            ++Ae;
          }
        }
        if (ue > 0) {
          for (Z[Ae] = Z[ue], Je = ue * oe, rt = Ae * oe, Qe = 0; Qe !== oe; ++Qe)
            te[rt + Qe] = te[Je + Qe];
          ++Ae;
        }
        return Ae !== Z.length && (this.times = eo.arraySlice(Z, 0, Ae), this.values = eo.arraySlice(te, 0, Ae * oe)), this;
      } }), Wc.prototype = Object.assign(Object.create(Yi.prototype), { constructor: Wc, ValueTypeName: "bool", ValueBufferType: Array, DefaultInterpolation: jr, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), Kc.prototype = Object.assign(Object.create(Yi.prototype), { constructor: Kc, ValueTypeName: "color" }), Cs.prototype = Object.assign(Object.create(Yi.prototype), { constructor: Cs, ValueTypeName: "number" }), Zc.prototype = Object.assign(Object.create(Io.prototype), { constructor: Zc, interpolate_: function(Z, te, oe, se) {
        for (var Ae = this.resultBuffer, ue = this.sampleValues, fe = this.valueSize, pe = Z * fe, ve = (oe - te) / (se - te), xe = pe + fe; pe !== xe; pe += 4)
          hi.slerpFlat(Ae, 0, ue, pe - fe, ue, pe, ve);
        return Ae;
      } }), mc.prototype = Object.assign(Object.create(Yi.prototype), { constructor: mc, ValueTypeName: "quaternion", DefaultInterpolation: bn, InterpolantFactoryMethodLinear: function(Z) {
        return new Zc(this.times, this.values, this.getValueSize(), Z);
      }, InterpolantFactoryMethodSmooth: void 0 }), Xc.prototype = Object.assign(Object.create(Yi.prototype), { constructor: Xc, ValueTypeName: "string", ValueBufferType: Array, DefaultInterpolation: jr, InterpolantFactoryMethodLinear: void 0, InterpolantFactoryMethodSmooth: void 0 }), Is.prototype = Object.assign(Object.create(Yi.prototype), { constructor: Is, ValueTypeName: "vector" }), Object.assign(To, { parse: function(Z) {
        for (var te = [], oe = Z.tracks, se = 1 / (Z.fps || 1), Ae = 0, ue = oe.length; Ae !== ue; ++Ae)
          te.push(Fl(oe[Ae]).scale(se));
        return new To(Z.name, Z.duration, te);
      }, toJSON: function(Z) {
        for (var te = [], oe = Z.tracks, se = { name: Z.name, duration: Z.duration, tracks: te, uuid: Z.uuid }, Ae = 0, ue = oe.length; Ae !== ue; ++Ae)
          te.push(Yi.toJSON(oe[Ae]));
        return se;
      }, CreateFromMorphTargetSequence: function(Z, te, oe, se) {
        for (var Ae = te.length, ue = [], fe = 0; fe < Ae; fe++) {
          var pe = [], ve = [];
          pe.push((fe + Ae - 1) % Ae, fe, (fe + 1) % Ae), ve.push(0, 1, 0);
          var xe = eo.getKeyframeOrder(pe);
          pe = eo.sortedArray(pe, 1, xe), ve = eo.sortedArray(ve, 1, xe), se || pe[0] !== 0 || (pe.push(Ae), ve.push(ve[0])), ue.push(new Cs(".morphTargetInfluences[" + te[fe].name + "]", pe, ve).scale(1 / oe));
        }
        return new To(Z, -1, ue);
      }, findByName: function(Z, te) {
        var oe = Z;
        if (!Array.isArray(Z)) {
          var se = Z;
          oe = se.geometry && se.geometry.animations || se.animations;
        }
        for (var Ae = 0; Ae < oe.length; Ae++)
          if (oe[Ae].name === te)
            return oe[Ae];
        return null;
      }, CreateClipsFromMorphTargetSequences: function(Z, te, oe) {
        for (var se = {}, Ae = /^([\w-]*?)([\d]+)$/, ue = 0, fe = Z.length; ue < fe; ue++) {
          var pe = Z[ue], ve = pe.name.match(Ae);
          if (ve && ve.length > 1) {
            var xe = se[Ne = ve[1]];
            xe || (se[Ne] = xe = []), xe.push(pe);
          }
        }
        var Me = [];
        for (var Ne in se)
          Me.push(To.CreateFromMorphTargetSequence(Ne, se[Ne], te, oe));
        return Me;
      }, parseAnimation: function(Z, te) {
        if (!Z)
          return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        for (var oe = function(vt, ut, Gt, Ht, pt) {
          if (Gt.length !== 0) {
            var Tt = [], zt = [];
            eo.flattenJSON(Gt, Tt, zt, Ht), Tt.length !== 0 && pt.push(new vt(ut, Tt, zt));
          }
        }, se = [], Ae = Z.name || "default", ue = Z.length || -1, fe = Z.fps || 30, pe = Z.hierarchy || [], ve = 0; ve < pe.length; ve++) {
          var xe = pe[ve].keys;
          if (xe && xe.length !== 0)
            if (xe[0].morphTargets) {
              for (var Me = {}, Ne = 0; Ne < xe.length; Ne++)
                if (xe[Ne].morphTargets)
                  for (var Qe = 0; Qe < xe[Ne].morphTargets.length; Qe++)
                    Me[xe[Ne].morphTargets[Qe]] = -1;
              for (var Ue in Me) {
                var Je = [], rt = [];
                for (Qe = 0; Qe !== xe[Ne].morphTargets.length; ++Qe) {
                  var it = xe[Ne];
                  Je.push(it.time), rt.push(it.morphTarget === Ue ? 1 : 0);
                }
                se.push(new Cs(".morphTargetInfluence[" + Ue + "]", Je, rt));
              }
              ue = Me.length * (fe || 1);
            } else {
              var ft = ".bones[" + te[ve].name + "]";
              oe(Is, ft + ".position", xe, "pos", se), oe(mc, ft + ".quaternion", xe, "rot", se), oe(Is, ft + ".scale", xe, "scl", se);
            }
        }
        return se.length === 0 ? null : new To(Ae, ue, se);
      } }), Object.assign(To.prototype, { resetDuration: function() {
        for (var Z = 0, te = 0, oe = this.tracks.length; te !== oe; ++te) {
          var se = this.tracks[te];
          Z = Math.max(Z, se.times[se.times.length - 1]);
        }
        return this.duration = Z, this;
      }, trim: function() {
        for (var Z = 0; Z < this.tracks.length; Z++)
          this.tracks[Z].trim(0, this.duration);
        return this;
      }, validate: function() {
        for (var Z = !0, te = 0; te < this.tracks.length; te++)
          Z = Z && this.tracks[te].validate();
        return Z;
      }, optimize: function() {
        for (var Z = 0; Z < this.tracks.length; Z++)
          this.tracks[Z].optimize();
        return this;
      } }), Object.assign(eA.prototype, { load: function(Z, te, oe, se) {
        var Ae = this;
        new Go(Ae.manager).load(Z, function(ue) {
          te(Ae.parse(JSON.parse(ue)));
        }, oe, se);
      }, setTextures: function(Z) {
        this.textures = Z;
      }, parse: function(Z) {
        var te = this.textures;
        function oe(ue) {
          return te[ue] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", ue), te[ue];
        }
        var se = new kl[Z.type]();
        if (Z.uuid !== void 0 && (se.uuid = Z.uuid), Z.name !== void 0 && (se.name = Z.name), Z.color !== void 0 && se.color.setHex(Z.color), Z.roughness !== void 0 && (se.roughness = Z.roughness), Z.metalness !== void 0 && (se.metalness = Z.metalness), Z.emissive !== void 0 && se.emissive.setHex(Z.emissive), Z.specular !== void 0 && se.specular.setHex(Z.specular), Z.shininess !== void 0 && (se.shininess = Z.shininess), Z.clearCoat !== void 0 && (se.clearCoat = Z.clearCoat), Z.clearCoatRoughness !== void 0 && (se.clearCoatRoughness = Z.clearCoatRoughness), Z.uniforms !== void 0 && (se.uniforms = Z.uniforms), Z.vertexShader !== void 0 && (se.vertexShader = Z.vertexShader), Z.fragmentShader !== void 0 && (se.fragmentShader = Z.fragmentShader), Z.vertexColors !== void 0 && (se.vertexColors = Z.vertexColors), Z.fog !== void 0 && (se.fog = Z.fog), Z.flatShading !== void 0 && (se.flatShading = Z.flatShading), Z.blending !== void 0 && (se.blending = Z.blending), Z.side !== void 0 && (se.side = Z.side), Z.opacity !== void 0 && (se.opacity = Z.opacity), Z.transparent !== void 0 && (se.transparent = Z.transparent), Z.alphaTest !== void 0 && (se.alphaTest = Z.alphaTest), Z.depthTest !== void 0 && (se.depthTest = Z.depthTest), Z.depthWrite !== void 0 && (se.depthWrite = Z.depthWrite), Z.colorWrite !== void 0 && (se.colorWrite = Z.colorWrite), Z.wireframe !== void 0 && (se.wireframe = Z.wireframe), Z.wireframeLinewidth !== void 0 && (se.wireframeLinewidth = Z.wireframeLinewidth), Z.wireframeLinecap !== void 0 && (se.wireframeLinecap = Z.wireframeLinecap), Z.wireframeLinejoin !== void 0 && (se.wireframeLinejoin = Z.wireframeLinejoin), Z.rotation !== void 0 && (se.rotation = Z.rotation), Z.linewidth !== 1 && (se.linewidth = Z.linewidth), Z.dashSize !== void 0 && (se.dashSize = Z.dashSize), Z.gapSize !== void 0 && (se.gapSize = Z.gapSize), Z.scale !== void 0 && (se.scale = Z.scale), Z.polygonOffset !== void 0 && (se.polygonOffset = Z.polygonOffset), Z.polygonOffsetFactor !== void 0 && (se.polygonOffsetFactor = Z.polygonOffsetFactor), Z.polygonOffsetUnits !== void 0 && (se.polygonOffsetUnits = Z.polygonOffsetUnits), Z.skinning !== void 0 && (se.skinning = Z.skinning), Z.morphTargets !== void 0 && (se.morphTargets = Z.morphTargets), Z.dithering !== void 0 && (se.dithering = Z.dithering), Z.visible !== void 0 && (se.visible = Z.visible), Z.userData !== void 0 && (se.userData = Z.userData), Z.shading !== void 0 && (se.flatShading = Z.shading === 1), Z.size !== void 0 && (se.size = Z.size), Z.sizeAttenuation !== void 0 && (se.sizeAttenuation = Z.sizeAttenuation), Z.map !== void 0 && (se.map = oe(Z.map)), Z.alphaMap !== void 0 && (se.alphaMap = oe(Z.alphaMap), se.transparent = !0), Z.bumpMap !== void 0 && (se.bumpMap = oe(Z.bumpMap)), Z.bumpScale !== void 0 && (se.bumpScale = Z.bumpScale), Z.normalMap !== void 0 && (se.normalMap = oe(Z.normalMap)), Z.normalMapType !== void 0 && (se.normalMapType = Z.normalMapType), Z.normalScale !== void 0) {
          var Ae = Z.normalScale;
          Array.isArray(Ae) === !1 && (Ae = [Ae, Ae]), se.normalScale = new Qr().fromArray(Ae);
        }
        return Z.displacementMap !== void 0 && (se.displacementMap = oe(Z.displacementMap)), Z.displacementScale !== void 0 && (se.displacementScale = Z.displacementScale), Z.displacementBias !== void 0 && (se.displacementBias = Z.displacementBias), Z.roughnessMap !== void 0 && (se.roughnessMap = oe(Z.roughnessMap)), Z.metalnessMap !== void 0 && (se.metalnessMap = oe(Z.metalnessMap)), Z.emissiveMap !== void 0 && (se.emissiveMap = oe(Z.emissiveMap)), Z.emissiveIntensity !== void 0 && (se.emissiveIntensity = Z.emissiveIntensity), Z.specularMap !== void 0 && (se.specularMap = oe(Z.specularMap)), Z.envMap !== void 0 && (se.envMap = oe(Z.envMap)), Z.reflectivity !== void 0 && (se.reflectivity = Z.reflectivity), Z.lightMap !== void 0 && (se.lightMap = oe(Z.lightMap)), Z.lightMapIntensity !== void 0 && (se.lightMapIntensity = Z.lightMapIntensity), Z.aoMap !== void 0 && (se.aoMap = oe(Z.aoMap)), Z.aoMapIntensity !== void 0 && (se.aoMapIntensity = Z.aoMapIntensity), Z.gradientMap !== void 0 && (se.gradientMap = oe(Z.gradientMap)), se;
      } }), Object.assign(BA.prototype, { load: function(Z, te, oe, se) {
        var Ae = this;
        new Go(Ae.manager).load(Z, function(ue) {
          te(Ae.parse(JSON.parse(ue)));
        }, oe, se);
      }, parse: function(Z) {
        var te = new an(), oe = Z.data.index;
        if (oe !== void 0) {
          var se = new xu[oe.type](oe.array);
          te.setIndex(new dn(se, 1));
        }
        var Ae = Z.data.attributes;
        for (var ue in Ae) {
          var fe = Ae[ue];
          se = new xu[fe.type](fe.array), te.addAttribute(ue, new dn(se, fe.itemSize, fe.normalized));
        }
        var pe = Z.data.groups || Z.data.drawcalls || Z.data.offsets;
        if (pe !== void 0)
          for (var ve = 0, xe = pe.length; ve !== xe; ++ve) {
            var Me = pe[ve];
            te.addGroup(Me.start, Me.count, Me.materialIndex);
          }
        var Ne = Z.data.boundingSphere;
        if (Ne !== void 0) {
          var Qe = new Bt();
          Ne.center !== void 0 && Qe.fromArray(Ne.center), te.boundingSphere = new ao(Qe, Ne.radius);
        }
        return te;
      } });
      var xu = { Int8Array, Uint8Array, Uint8ClampedArray: typeof Uint8ClampedArray < "u" ? Uint8ClampedArray : Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array };
      function xs() {
      }
      xs.Handlers = { handlers: [], add: function(Z, te) {
        this.handlers.push(Z, te);
      }, get: function(Z) {
        for (var te = this.handlers, oe = 0, se = te.length; oe < se; oe += 2) {
          var Ae = te[oe], ue = te[oe + 1];
          if (Ae.test(Z))
            return ue;
        }
        return null;
      } }, Object.assign(xs.prototype, { crossOrigin: "anonymous", onLoadStart: function() {
      }, onLoadProgress: function() {
      }, onLoadComplete: function() {
      }, initMaterials: function(Z, te, oe) {
        for (var se = [], Ae = 0; Ae < Z.length; ++Ae)
          se[Ae] = this.createMaterial(Z[Ae], te, oe);
        return se;
      }, createMaterial: function() {
        var Z = { NoBlending: Nt, NormalBlending: et, AdditiveBlending: mt, SubtractiveBlending: Mt, MultiplyBlending: Ot, CustomBlending: yt }, te = new ze(), oe = new Pc(), se = new eA();
        return function(Ae, ue, fe) {
          var pe = {};
          function ve(Qe, Ue, Je, rt, it) {
            var ft, vt = ue + Qe, ut = xs.Handlers.get(vt);
            ut !== null ? ft = ut.load(vt) : (oe.setCrossOrigin(fe), ft = oe.load(vt)), Ue !== void 0 && (ft.repeat.fromArray(Ue), Ue[0] !== 1 && (ft.wrapS = mr), Ue[1] !== 1 && (ft.wrapT = mr)), Je !== void 0 && ft.offset.fromArray(Je), rt !== void 0 && (rt[0] === "repeat" && (ft.wrapS = mr), rt[0] === "mirror" && (ft.wrapS = Br), rt[1] === "repeat" && (ft.wrapT = mr), rt[1] === "mirror" && (ft.wrapT = Br)), it !== void 0 && (ft.anisotropy = it);
            var Gt = Mn.generateUUID();
            return pe[Gt] = ft, Gt;
          }
          var xe = { uuid: Mn.generateUUID(), type: "MeshLambertMaterial" };
          for (var Me in Ae) {
            var Ne = Ae[Me];
            switch (Me) {
              case "DbgColor":
              case "DbgIndex":
              case "opticalDensity":
              case "illumination":
                break;
              case "DbgName":
                xe.name = Ne;
                break;
              case "blending":
                xe.blending = Z[Ne];
                break;
              case "colorAmbient":
              case "mapAmbient":
                console.warn("THREE.Loader.createMaterial:", Me, "is no longer supported.");
                break;
              case "colorDiffuse":
                xe.color = te.fromArray(Ne).getHex();
                break;
              case "colorSpecular":
                xe.specular = te.fromArray(Ne).getHex();
                break;
              case "colorEmissive":
                xe.emissive = te.fromArray(Ne).getHex();
                break;
              case "specularCoef":
                xe.shininess = Ne;
                break;
              case "shading":
                Ne.toLowerCase() === "basic" && (xe.type = "MeshBasicMaterial"), Ne.toLowerCase() === "phong" && (xe.type = "MeshPhongMaterial"), Ne.toLowerCase() === "standard" && (xe.type = "MeshStandardMaterial");
                break;
              case "mapDiffuse":
                xe.map = ve(Ne, Ae.mapDiffuseRepeat, Ae.mapDiffuseOffset, Ae.mapDiffuseWrap, Ae.mapDiffuseAnisotropy);
                break;
              case "mapDiffuseRepeat":
              case "mapDiffuseOffset":
              case "mapDiffuseWrap":
              case "mapDiffuseAnisotropy":
                break;
              case "mapEmissive":
                xe.emissiveMap = ve(Ne, Ae.mapEmissiveRepeat, Ae.mapEmissiveOffset, Ae.mapEmissiveWrap, Ae.mapEmissiveAnisotropy);
                break;
              case "mapEmissiveRepeat":
              case "mapEmissiveOffset":
              case "mapEmissiveWrap":
              case "mapEmissiveAnisotropy":
                break;
              case "mapLight":
                xe.lightMap = ve(Ne, Ae.mapLightRepeat, Ae.mapLightOffset, Ae.mapLightWrap, Ae.mapLightAnisotropy);
                break;
              case "mapLightRepeat":
              case "mapLightOffset":
              case "mapLightWrap":
              case "mapLightAnisotropy":
                break;
              case "mapAO":
                xe.aoMap = ve(Ne, Ae.mapAORepeat, Ae.mapAOOffset, Ae.mapAOWrap, Ae.mapAOAnisotropy);
                break;
              case "mapAORepeat":
              case "mapAOOffset":
              case "mapAOWrap":
              case "mapAOAnisotropy":
                break;
              case "mapBump":
                xe.bumpMap = ve(Ne, Ae.mapBumpRepeat, Ae.mapBumpOffset, Ae.mapBumpWrap, Ae.mapBumpAnisotropy);
                break;
              case "mapBumpScale":
                xe.bumpScale = Ne;
                break;
              case "mapBumpRepeat":
              case "mapBumpOffset":
              case "mapBumpWrap":
              case "mapBumpAnisotropy":
                break;
              case "mapNormal":
                xe.normalMap = ve(Ne, Ae.mapNormalRepeat, Ae.mapNormalOffset, Ae.mapNormalWrap, Ae.mapNormalAnisotropy);
                break;
              case "mapNormalFactor":
                xe.normalScale = Ne;
                break;
              case "mapNormalRepeat":
              case "mapNormalOffset":
              case "mapNormalWrap":
              case "mapNormalAnisotropy":
                break;
              case "mapSpecular":
                xe.specularMap = ve(Ne, Ae.mapSpecularRepeat, Ae.mapSpecularOffset, Ae.mapSpecularWrap, Ae.mapSpecularAnisotropy);
                break;
              case "mapSpecularRepeat":
              case "mapSpecularOffset":
              case "mapSpecularWrap":
              case "mapSpecularAnisotropy":
                break;
              case "mapMetalness":
                xe.metalnessMap = ve(Ne, Ae.mapMetalnessRepeat, Ae.mapMetalnessOffset, Ae.mapMetalnessWrap, Ae.mapMetalnessAnisotropy);
                break;
              case "mapMetalnessRepeat":
              case "mapMetalnessOffset":
              case "mapMetalnessWrap":
              case "mapMetalnessAnisotropy":
                break;
              case "mapRoughness":
                xe.roughnessMap = ve(Ne, Ae.mapRoughnessRepeat, Ae.mapRoughnessOffset, Ae.mapRoughnessWrap, Ae.mapRoughnessAnisotropy);
                break;
              case "mapRoughnessRepeat":
              case "mapRoughnessOffset":
              case "mapRoughnessWrap":
              case "mapRoughnessAnisotropy":
                break;
              case "mapAlpha":
                xe.alphaMap = ve(Ne, Ae.mapAlphaRepeat, Ae.mapAlphaOffset, Ae.mapAlphaWrap, Ae.mapAlphaAnisotropy);
                break;
              case "mapAlphaRepeat":
              case "mapAlphaOffset":
              case "mapAlphaWrap":
              case "mapAlphaAnisotropy":
                break;
              case "flipSided":
                xe.side = Se;
                break;
              case "doubleSided":
                xe.side = Ge;
                break;
              case "transparency":
                console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"), xe.opacity = Ne;
                break;
              case "depthTest":
              case "depthWrite":
              case "colorWrite":
              case "opacity":
              case "reflectivity":
              case "transparent":
              case "visible":
              case "wireframe":
                xe[Me] = Ne;
                break;
              case "vertexColors":
                Ne === !0 && (xe.vertexColors = Et), Ne === "face" && (xe.vertexColors = tt);
                break;
              default:
                console.error("THREE.Loader.createMaterial: Unsupported", Me, Ne);
            }
          }
          return xe.type === "MeshBasicMaterial" && delete xe.emissive, xe.type !== "MeshPhongMaterial" && delete xe.specular, xe.opacity < 1 && (xe.transparent = !0), se.setTextures(pe), se.parse(xe);
        };
      }() });
      var vA = { decodeText: function(Z) {
        if (typeof TextDecoder < "u")
          return new TextDecoder().decode(Z);
        for (var te = "", oe = 0, se = Z.length; oe < se; oe++)
          te += String.fromCharCode(Z[oe]);
        return decodeURIComponent(escape(te));
      }, extractUrlBase: function(Z) {
        var te = Z.lastIndexOf("/");
        return te === -1 ? "./" : Z.substr(0, te + 1);
      } };
      function CA(Z) {
        typeof Z == "boolean" && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."), Z = void 0), this.manager = Z !== void 0 ? Z : go, this.withCredentials = !1;
      }
      function bu(Z) {
        this.manager = Z !== void 0 ? Z : go, this.texturePath = "";
      }
      Object.assign(CA.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        var Ae = this, ue = this.texturePath && typeof this.texturePath == "string" ? this.texturePath : vA.extractUrlBase(Z), fe = new Go(this.manager);
        fe.setWithCredentials(this.withCredentials), fe.load(Z, function(pe) {
          var ve = JSON.parse(pe), xe = ve.metadata;
          if (xe !== void 0) {
            var Me = xe.type;
            if (Me !== void 0 && Me.toLowerCase() === "object")
              return void console.error("THREE.JSONLoader: " + Z + " should be loaded with THREE.ObjectLoader instead.");
          }
          var Ne = Ae.parse(ve, ue);
          te(Ne.geometry, Ne.materials);
        }, oe, se);
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, setTexturePath: function(Z) {
        return this.texturePath = Z, this;
      }, parse: function() {
        return function(Z, te) {
          Z.data !== void 0 && (Z = Z.data), Z.scale !== void 0 ? Z.scale = 1 / Z.scale : Z.scale = 1;
          var oe = new Xr();
          return function(se, Ae) {
            function ue(tn, Ur) {
              return tn & 1 << Ur;
            }
            var fe, pe, ve, xe, Me, Ne, Qe, Ue, Je, rt, it, ft, vt, ut, Gt, Ht, pt, Tt, zt, Dt, or, Lt, lr, gr, xr, vr = se.faces, Dr = se.vertices, Or = se.normals, yr = se.colors, Nr = se.scale, pr = 0;
            if (se.uvs !== void 0) {
              for (fe = 0; fe < se.uvs.length; fe++)
                se.uvs[fe].length && pr++;
              for (fe = 0; fe < pr; fe++)
                Ae.faceVertexUvs[fe] = [];
            }
            for (xe = 0, Me = Dr.length; xe < Me; )
              (Tt = new Bt()).x = Dr[xe++] * Nr, Tt.y = Dr[xe++] * Nr, Tt.z = Dr[xe++] * Nr, Ae.vertices.push(Tt);
            for (xe = 0, Me = vr.length; xe < Me; )
              if (it = ue(rt = vr[xe++], 0), ft = ue(rt, 1), vt = ue(rt, 3), ut = ue(rt, 4), Gt = ue(rt, 5), Ht = ue(rt, 6), pt = ue(rt, 7), it) {
                if ((Dt = new ti()).a = vr[xe], Dt.b = vr[xe + 1], Dt.c = vr[xe + 3], (or = new ti()).a = vr[xe + 1], or.b = vr[xe + 2], or.c = vr[xe + 3], xe += 4, ft && (Je = vr[xe++], Dt.materialIndex = Je, or.materialIndex = Je), ve = Ae.faces.length, vt)
                  for (fe = 0; fe < pr; fe++)
                    for (gr = se.uvs[fe], Ae.faceVertexUvs[fe][ve] = [], Ae.faceVertexUvs[fe][ve + 1] = [], pe = 0; pe < 4; pe++)
                      xr = new Qr(gr[2 * (Ue = vr[xe++])], gr[2 * Ue + 1]), pe !== 2 && Ae.faceVertexUvs[fe][ve].push(xr), pe !== 0 && Ae.faceVertexUvs[fe][ve + 1].push(xr);
                if (ut && (Qe = 3 * vr[xe++], Dt.normal.set(Or[Qe++], Or[Qe++], Or[Qe]), or.normal.copy(Dt.normal)), Gt)
                  for (fe = 0; fe < 4; fe++)
                    Qe = 3 * vr[xe++], lr = new Bt(Or[Qe++], Or[Qe++], Or[Qe]), fe !== 2 && Dt.vertexNormals.push(lr), fe !== 0 && or.vertexNormals.push(lr);
                if (Ht && (Lt = yr[Ne = vr[xe++]], Dt.color.setHex(Lt), or.color.setHex(Lt)), pt)
                  for (fe = 0; fe < 4; fe++)
                    Lt = yr[Ne = vr[xe++]], fe !== 2 && Dt.vertexColors.push(new ze(Lt)), fe !== 0 && or.vertexColors.push(new ze(Lt));
                Ae.faces.push(Dt), Ae.faces.push(or);
              } else {
                if ((zt = new ti()).a = vr[xe++], zt.b = vr[xe++], zt.c = vr[xe++], ft && (Je = vr[xe++], zt.materialIndex = Je), ve = Ae.faces.length, vt)
                  for (fe = 0; fe < pr; fe++)
                    for (gr = se.uvs[fe], Ae.faceVertexUvs[fe][ve] = [], pe = 0; pe < 3; pe++)
                      xr = new Qr(gr[2 * (Ue = vr[xe++])], gr[2 * Ue + 1]), Ae.faceVertexUvs[fe][ve].push(xr);
                if (ut && (Qe = 3 * vr[xe++], zt.normal.set(Or[Qe++], Or[Qe++], Or[Qe])), Gt)
                  for (fe = 0; fe < 3; fe++)
                    Qe = 3 * vr[xe++], lr = new Bt(Or[Qe++], Or[Qe++], Or[Qe]), zt.vertexNormals.push(lr);
                if (Ht && (Ne = vr[xe++], zt.color.setHex(yr[Ne])), pt)
                  for (fe = 0; fe < 3; fe++)
                    Ne = vr[xe++], zt.vertexColors.push(new ze(yr[Ne]));
                Ae.faces.push(zt);
              }
          }(Z, oe), function(se, Ae) {
            var ue = se.influencesPerVertex !== void 0 ? se.influencesPerVertex : 2;
            if (se.skinWeights)
              for (var fe = 0, pe = se.skinWeights.length; fe < pe; fe += ue) {
                var ve = se.skinWeights[fe], xe = ue > 1 ? se.skinWeights[fe + 1] : 0, Me = ue > 2 ? se.skinWeights[fe + 2] : 0, Ne = ue > 3 ? se.skinWeights[fe + 3] : 0;
                Ae.skinWeights.push(new Kn(ve, xe, Me, Ne));
              }
            if (se.skinIndices)
              for (fe = 0, pe = se.skinIndices.length; fe < pe; fe += ue) {
                var Qe = se.skinIndices[fe], Ue = ue > 1 ? se.skinIndices[fe + 1] : 0, Je = ue > 2 ? se.skinIndices[fe + 2] : 0, rt = ue > 3 ? se.skinIndices[fe + 3] : 0;
                Ae.skinIndices.push(new Kn(Qe, Ue, Je, rt));
              }
            Ae.bones = se.bones, Ae.bones && Ae.bones.length > 0 && (Ae.skinWeights.length !== Ae.skinIndices.length || Ae.skinIndices.length !== Ae.vertices.length) && console.warn("When skinning, number of vertices (" + Ae.vertices.length + "), skinIndices (" + Ae.skinIndices.length + "), and skinWeights (" + Ae.skinWeights.length + ") should match.");
          }(Z, oe), function(se, Ae) {
            var ue = se.scale;
            if (se.morphTargets !== void 0)
              for (var fe = 0, pe = se.morphTargets.length; fe < pe; fe++) {
                Ae.morphTargets[fe] = {}, Ae.morphTargets[fe].name = se.morphTargets[fe].name, Ae.morphTargets[fe].vertices = [];
                for (var ve = Ae.morphTargets[fe].vertices, xe = se.morphTargets[fe].vertices, Me = 0, Ne = xe.length; Me < Ne; Me += 3) {
                  var Qe = new Bt();
                  Qe.x = xe[Me] * ue, Qe.y = xe[Me + 1] * ue, Qe.z = xe[Me + 2] * ue, ve.push(Qe);
                }
              }
            if (se.morphColors !== void 0 && se.morphColors.length > 0) {
              console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
              var Ue = Ae.faces, Je = se.morphColors[0].colors;
              for (fe = 0, pe = Ue.length; fe < pe; fe++)
                Ue[fe].color.fromArray(Je, 3 * fe);
            }
          }(Z, oe), function(se, Ae) {
            var ue = [], fe = [];
            se.animation !== void 0 && fe.push(se.animation), se.animations !== void 0 && (se.animations.length ? fe = fe.concat(se.animations) : fe.push(se.animations));
            for (var pe = 0; pe < fe.length; pe++) {
              var ve = To.parseAnimation(fe[pe], Ae.bones);
              ve && ue.push(ve);
            }
            if (Ae.morphTargets) {
              var xe = To.CreateClipsFromMorphTargetSequences(Ae.morphTargets, 10);
              ue = ue.concat(xe);
            }
            ue.length > 0 && (Ae.animations = ue);
          }(Z, oe), oe.computeFaceNormals(), oe.computeBoundingSphere(), Z.materials === void 0 || Z.materials.length === 0 ? { geometry: oe } : { geometry: oe, materials: xs.prototype.initMaterials(Z.materials, te, this.crossOrigin) };
        };
      }() }), Object.assign(bu.prototype, { crossOrigin: "anonymous", load: function(Z, te, oe, se) {
        this.texturePath === "" && (this.texturePath = Z.substring(0, Z.lastIndexOf("/") + 1));
        var Ae = this;
        new Go(Ae.manager).load(Z, function(ue) {
          var fe = null;
          try {
            fe = JSON.parse(ue);
          } catch (ve) {
            return se !== void 0 && se(ve), void console.error("THREE:ObjectLoader: Can't parse " + Z + ".", ve.message);
          }
          var pe = fe.metadata;
          pe !== void 0 && pe.type !== void 0 && pe.type.toLowerCase() !== "geometry" ? Ae.parse(fe, te) : console.error("THREE.ObjectLoader: Can't load " + Z + ". Use THREE.JSONLoader instead.");
        }, oe, se);
      }, setTexturePath: function(Z) {
        return this.texturePath = Z, this;
      }, setCrossOrigin: function(Z) {
        return this.crossOrigin = Z, this;
      }, parse: function(Z, te) {
        var oe = this.parseShape(Z.shapes), se = this.parseGeometries(Z.geometries, oe), Ae = this.parseImages(Z.images, function() {
          te !== void 0 && te(pe);
        }), ue = this.parseTextures(Z.textures, Ae), fe = this.parseMaterials(Z.materials, ue), pe = this.parseObject(Z.object, se, fe);
        return Z.animations && (pe.animations = this.parseAnimations(Z.animations)), Z.images !== void 0 && Z.images.length !== 0 || te !== void 0 && te(pe), pe;
      }, parseShape: function(Z) {
        var te = {};
        if (Z !== void 0)
          for (var oe = 0, se = Z.length; oe < se; oe++) {
            var Ae = new ya().fromJSON(Z[oe]);
            te[Ae.uuid] = Ae;
          }
        return te;
      }, parseGeometries: function(Z, te) {
        var oe = {};
        if (Z !== void 0)
          for (var se = new CA(), Ae = new BA(), ue = 0, fe = Z.length; ue < fe; ue++) {
            var pe, ve = Z[ue];
            switch (ve.type) {
              case "PlaneGeometry":
              case "PlaneBufferGeometry":
                pe = new po[ve.type](ve.width, ve.height, ve.widthSegments, ve.heightSegments);
                break;
              case "BoxGeometry":
              case "BoxBufferGeometry":
              case "CubeGeometry":
                pe = new po[ve.type](ve.width, ve.height, ve.depth, ve.widthSegments, ve.heightSegments, ve.depthSegments);
                break;
              case "CircleGeometry":
              case "CircleBufferGeometry":
                pe = new po[ve.type](ve.radius, ve.segments, ve.thetaStart, ve.thetaLength);
                break;
              case "CylinderGeometry":
              case "CylinderBufferGeometry":
                pe = new po[ve.type](ve.radiusTop, ve.radiusBottom, ve.height, ve.radialSegments, ve.heightSegments, ve.openEnded, ve.thetaStart, ve.thetaLength);
                break;
              case "ConeGeometry":
              case "ConeBufferGeometry":
                pe = new po[ve.type](ve.radius, ve.height, ve.radialSegments, ve.heightSegments, ve.openEnded, ve.thetaStart, ve.thetaLength);
                break;
              case "SphereGeometry":
              case "SphereBufferGeometry":
                pe = new po[ve.type](ve.radius, ve.widthSegments, ve.heightSegments, ve.phiStart, ve.phiLength, ve.thetaStart, ve.thetaLength);
                break;
              case "DodecahedronGeometry":
              case "DodecahedronBufferGeometry":
              case "IcosahedronGeometry":
              case "IcosahedronBufferGeometry":
              case "OctahedronGeometry":
              case "OctahedronBufferGeometry":
              case "TetrahedronGeometry":
              case "TetrahedronBufferGeometry":
                pe = new po[ve.type](ve.radius, ve.detail);
                break;
              case "RingGeometry":
              case "RingBufferGeometry":
                pe = new po[ve.type](ve.innerRadius, ve.outerRadius, ve.thetaSegments, ve.phiSegments, ve.thetaStart, ve.thetaLength);
                break;
              case "TorusGeometry":
              case "TorusBufferGeometry":
                pe = new po[ve.type](ve.radius, ve.tube, ve.radialSegments, ve.tubularSegments, ve.arc);
                break;
              case "TorusKnotGeometry":
              case "TorusKnotBufferGeometry":
                pe = new po[ve.type](ve.radius, ve.tube, ve.tubularSegments, ve.radialSegments, ve.p, ve.q);
                break;
              case "LatheGeometry":
              case "LatheBufferGeometry":
                pe = new po[ve.type](ve.points, ve.segments, ve.phiStart, ve.phiLength);
                break;
              case "PolyhedronGeometry":
              case "PolyhedronBufferGeometry":
                pe = new po[ve.type](ve.vertices, ve.indices, ve.radius, ve.details);
                break;
              case "ShapeGeometry":
              case "ShapeBufferGeometry":
                for (var xe = [], Me = 0, Ne = ve.shapes.length; Me < Ne; Me++) {
                  var Qe = te[ve.shapes[Me]];
                  xe.push(Qe);
                }
                pe = new po[ve.type](xe, ve.curveSegments);
                break;
              case "ExtrudeGeometry":
              case "ExtrudeBufferGeometry":
                for (xe = [], Me = 0, Ne = ve.shapes.length; Me < Ne; Me++)
                  Qe = te[ve.shapes[Me]], xe.push(Qe);
                var Ue = ve.options.extrudePath;
                Ue !== void 0 && (ve.options.extrudePath = new Iu[Ue.type]().fromJSON(Ue)), pe = new po[ve.type](xe, ve.options);
                break;
              case "BufferGeometry":
                pe = Ae.parse(ve);
                break;
              case "Geometry":
                pe = se.parse(ve, this.texturePath).geometry;
                break;
              default:
                console.warn('THREE.ObjectLoader: Unsupported geometry type "' + ve.type + '"');
                continue;
            }
            pe.uuid = ve.uuid, ve.name !== void 0 && (pe.name = ve.name), pe.isBufferGeometry === !0 && ve.userData !== void 0 && (pe.userData = ve.userData), oe[ve.uuid] = pe;
          }
        return oe;
      }, parseMaterials: function(Z, te) {
        var oe = {};
        if (Z !== void 0) {
          var se = new eA();
          se.setTextures(te);
          for (var Ae = 0, ue = Z.length; Ae < ue; Ae++) {
            var fe = Z[Ae];
            if (fe.type === "MultiMaterial") {
              for (var pe = [], ve = 0; ve < fe.materials.length; ve++)
                pe.push(se.parse(fe.materials[ve]));
              oe[fe.uuid] = pe;
            } else
              oe[fe.uuid] = se.parse(fe);
          }
        }
        return oe;
      }, parseAnimations: function(Z) {
        for (var te = [], oe = 0; oe < Z.length; oe++) {
          var se = Z[oe], Ae = To.parse(se);
          se.uuid !== void 0 && (Ae.uuid = se.uuid), te.push(Ae);
        }
        return te;
      }, parseImages: function(Z, te) {
        var oe = this, se = {};
        function Ae(Je) {
          return oe.manager.itemStart(Je), ue.load(Je, function() {
            oe.manager.itemEnd(Je);
          }, void 0, function() {
            oe.manager.itemEnd(Je), oe.manager.itemError(Je);
          });
        }
        if (Z !== void 0 && Z.length > 0) {
          var ue = new fc(new fA(te));
          ue.setCrossOrigin(this.crossOrigin);
          for (var fe = 0, pe = Z.length; fe < pe; fe++) {
            var ve = Z[fe], xe = ve.url;
            if (Array.isArray(xe)) {
              se[ve.uuid] = [];
              for (var Me = 0, Ne = xe.length; Me < Ne; Me++) {
                var Qe = xe[Me], Ue = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(Qe) ? Qe : oe.texturePath + Qe;
                se[ve.uuid].push(Ae(Ue));
              }
            } else
              Ue = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(ve.url) ? ve.url : oe.texturePath + ve.url, se[ve.uuid] = Ae(Ue);
          }
        }
        return se;
      }, parseTextures: function(Z, te) {
        function oe(ve, xe) {
          return typeof ve == "number" ? ve : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", ve), xe[ve]);
        }
        var se = {};
        if (Z !== void 0)
          for (var Ae = 0, ue = Z.length; Ae < ue; Ae++) {
            var fe, pe = Z[Ae];
            pe.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', pe.uuid), te[pe.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", pe.image), (fe = Array.isArray(te[pe.image]) ? new aa(te[pe.image]) : new li(te[pe.image])).needsUpdate = !0, fe.uuid = pe.uuid, pe.name !== void 0 && (fe.name = pe.name), pe.mapping !== void 0 && (fe.mapping = oe(pe.mapping, Gl)), pe.offset !== void 0 && fe.offset.fromArray(pe.offset), pe.repeat !== void 0 && fe.repeat.fromArray(pe.repeat), pe.center !== void 0 && fe.center.fromArray(pe.center), pe.rotation !== void 0 && (fe.rotation = pe.rotation), pe.wrap !== void 0 && (fe.wrapS = oe(pe.wrap[0], wu), fe.wrapT = oe(pe.wrap[1], wu)), pe.format !== void 0 && (fe.format = pe.format), pe.minFilter !== void 0 && (fe.minFilter = oe(pe.minFilter, _u)), pe.magFilter !== void 0 && (fe.magFilter = oe(pe.magFilter, _u)), pe.anisotropy !== void 0 && (fe.anisotropy = pe.anisotropy), pe.flipY !== void 0 && (fe.flipY = pe.flipY), se[pe.uuid] = fe;
          }
        return se;
      }, parseObject: function(Z, te, oe) {
        var se;
        function Ae(Je) {
          return te[Je] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", Je), te[Je];
        }
        function ue(Je) {
          if (Je !== void 0) {
            if (Array.isArray(Je)) {
              for (var rt = [], it = 0, ft = Je.length; it < ft; it++) {
                var vt = Je[it];
                oe[vt] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", vt), rt.push(oe[vt]);
              }
              return rt;
            }
            return oe[Je] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", Je), oe[Je];
          }
        }
        switch (Z.type) {
          case "Scene":
            se = new Nc(), Z.background !== void 0 && Number.isInteger(Z.background) && (se.background = new ze(Z.background)), Z.fog !== void 0 && (Z.fog.type === "Fog" ? se.fog = new is(Z.fog.color, Z.fog.near, Z.fog.far) : Z.fog.type === "FogExp2" && (se.fog = new ns(Z.fog.color, Z.fog.density)));
            break;
          case "PerspectiveCamera":
            se = new Si(Z.fov, Z.aspect, Z.near, Z.far), Z.focus !== void 0 && (se.focus = Z.focus), Z.zoom !== void 0 && (se.zoom = Z.zoom), Z.filmGauge !== void 0 && (se.filmGauge = Z.filmGauge), Z.filmOffset !== void 0 && (se.filmOffset = Z.filmOffset), Z.view !== void 0 && (se.view = Object.assign({}, Z.view));
            break;
          case "OrthographicCamera":
            se = new ai(Z.left, Z.right, Z.top, Z.bottom, Z.near, Z.far), Z.zoom !== void 0 && (se.zoom = Z.zoom), Z.view !== void 0 && (se.view = Object.assign({}, Z.view));
            break;
          case "AmbientLight":
            se = new Vc(Z.color, Z.intensity);
            break;
          case "DirectionalLight":
            se = new Yc(Z.color, Z.intensity);
            break;
          case "PointLight":
            se = new $c(Z.color, Z.intensity, Z.distance, Z.decay);
            break;
          case "RectAreaLight":
            se = new Lc(Z.color, Z.intensity, Z.width, Z.height);
            break;
          case "SpotLight":
            se = new qc(Z.color, Z.intensity, Z.distance, Z.angle, Z.penumbra, Z.decay);
            break;
          case "HemisphereLight":
            se = new Hc(Z.color, Z.groundColor, Z.intensity);
            break;
          case "SkinnedMesh":
            console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
          case "Mesh":
            var fe = Ae(Z.geometry), pe = ue(Z.material);
            se = fe.bones && fe.bones.length > 0 ? new Fc(fe, pe) : new lo(fe, pe);
            break;
          case "LOD":
            se = new qs();
            break;
          case "Line":
            se = new fo(Ae(Z.geometry), ue(Z.material), Z.mode);
            break;
          case "LineLoop":
            se = new Gc(Ae(Z.geometry), ue(Z.material));
            break;
          case "LineSegments":
            se = new gi(Ae(Z.geometry), ue(Z.material));
            break;
          case "PointCloud":
          case "Points":
            se = new os(Ae(Z.geometry), ue(Z.material));
            break;
          case "Sprite":
            se = new Ds(ue(Z.material));
            break;
          case "Group":
            se = new rs();
            break;
          default:
            se = new Cr();
        }
        if (se.uuid = Z.uuid, Z.name !== void 0 && (se.name = Z.name), Z.matrix !== void 0 ? (se.matrix.fromArray(Z.matrix), Z.matrixAutoUpdate !== void 0 && (se.matrixAutoUpdate = Z.matrixAutoUpdate), se.matrixAutoUpdate && se.matrix.decompose(se.position, se.quaternion, se.scale)) : (Z.position !== void 0 && se.position.fromArray(Z.position), Z.rotation !== void 0 && se.rotation.fromArray(Z.rotation), Z.quaternion !== void 0 && se.quaternion.fromArray(Z.quaternion), Z.scale !== void 0 && se.scale.fromArray(Z.scale)), Z.castShadow !== void 0 && (se.castShadow = Z.castShadow), Z.receiveShadow !== void 0 && (se.receiveShadow = Z.receiveShadow), Z.shadow && (Z.shadow.bias !== void 0 && (se.shadow.bias = Z.shadow.bias), Z.shadow.radius !== void 0 && (se.shadow.radius = Z.shadow.radius), Z.shadow.mapSize !== void 0 && se.shadow.mapSize.fromArray(Z.shadow.mapSize), Z.shadow.camera !== void 0 && (se.shadow.camera = this.parseObject(Z.shadow.camera))), Z.visible !== void 0 && (se.visible = Z.visible), Z.frustumCulled !== void 0 && (se.frustumCulled = Z.frustumCulled), Z.renderOrder !== void 0 && (se.renderOrder = Z.renderOrder), Z.userData !== void 0 && (se.userData = Z.userData), Z.layers !== void 0 && (se.layers.mask = Z.layers), Z.children !== void 0)
          for (var ve = Z.children, xe = 0; xe < ve.length; xe++)
            se.add(this.parseObject(ve[xe], te, oe));
        if (Z.type === "LOD")
          for (var Me = Z.levels, Ne = 0; Ne < Me.length; Ne++) {
            var Qe = Me[Ne], Ue = se.getObjectByProperty("uuid", Qe.object);
            Ue !== void 0 && se.addLevel(Ue, Qe.distance);
          }
        return se;
      } });
      var tA, Gl = { UVMapping: De, CubeReflectionMapping: Te, CubeRefractionMapping: Re, EquirectangularReflectionMapping: ot, EquirectangularRefractionMapping: bt, SphericalReflectionMapping: Pt, CubeUVReflectionMapping: Vt, CubeUVRefractionMapping: Ir }, wu = { RepeatWrapping: mr, ClampToEdgeWrapping: _r, MirroredRepeatWrapping: Br }, _u = { NearestFilter: Tr, NearestMipMapNearestFilter: cn, NearestMipMapLinearFilter: oi, LinearFilter: un, LinearMipMapNearestFilter: Yn, LinearMipMapLinearFilter: Vn };
      function IA(Z) {
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.manager = Z !== void 0 ? Z : go, this.options = void 0;
      }
      function xA() {
        this.type = "ShapePath", this.color = new ze(), this.subPaths = [], this.currentPath = null;
      }
      function bA(Z) {
        this.type = "Font", this.data = Z;
      }
      function Ol(Z, te, oe, se, Ae) {
        var ue = Ae.glyphs[Z] || Ae.glyphs["?"];
        if (ue) {
          var fe, pe, ve, xe, Me, Ne, Qe, Ue, Je = new xA();
          if (ue.o)
            for (var rt = ue._cachedOutline || (ue._cachedOutline = ue.o.split(" ")), it = 0, ft = rt.length; it < ft; )
              switch (rt[it++]) {
                case "m":
                  fe = rt[it++] * te + oe, pe = rt[it++] * te + se, Je.moveTo(fe, pe);
                  break;
                case "l":
                  fe = rt[it++] * te + oe, pe = rt[it++] * te + se, Je.lineTo(fe, pe);
                  break;
                case "q":
                  ve = rt[it++] * te + oe, xe = rt[it++] * te + se, Me = rt[it++] * te + oe, Ne = rt[it++] * te + se, Je.quadraticCurveTo(Me, Ne, ve, xe);
                  break;
                case "b":
                  ve = rt[it++] * te + oe, xe = rt[it++] * te + se, Me = rt[it++] * te + oe, Ne = rt[it++] * te + se, Qe = rt[it++] * te + oe, Ue = rt[it++] * te + se, Je.bezierCurveTo(Me, Ne, Qe, Ue, ve, xe);
              }
          return { offsetX: ue.ha * te, path: Je };
        }
      }
      function Qu(Z) {
        this.manager = Z !== void 0 ? Z : go;
      }
      IA.prototype = { constructor: IA, setOptions: function(Z) {
        return this.options = Z, this;
      }, load: function(Z, te, oe, se) {
        Z === void 0 && (Z = ""), this.path !== void 0 && (Z = this.path + Z), Z = this.manager.resolveURL(Z);
        var Ae = this, ue = qa.get(Z);
        if (ue !== void 0)
          return Ae.manager.itemStart(Z), setTimeout(function() {
            te && te(ue), Ae.manager.itemEnd(Z);
          }, 0), ue;
        fetch(Z).then(function(fe) {
          return fe.blob();
        }).then(function(fe) {
          return createImageBitmap(fe, Ae.options);
        }).then(function(fe) {
          qa.add(Z, fe), te && te(fe), Ae.manager.itemEnd(Z);
        }).catch(function(fe) {
          se && se(fe), Ae.manager.itemEnd(Z), Ae.manager.itemError(Z);
        });
      }, setCrossOrigin: function() {
        return this;
      }, setPath: function(Z) {
        return this.path = Z, this;
      } }, Object.assign(xA.prototype, { moveTo: function(Z, te) {
        this.currentPath = new Do(), this.subPaths.push(this.currentPath), this.currentPath.moveTo(Z, te);
      }, lineTo: function(Z, te) {
        this.currentPath.lineTo(Z, te);
      }, quadraticCurveTo: function(Z, te, oe, se) {
        this.currentPath.quadraticCurveTo(Z, te, oe, se);
      }, bezierCurveTo: function(Z, te, oe, se, Ae, ue) {
        this.currentPath.bezierCurveTo(Z, te, oe, se, Ae, ue);
      }, splineThru: function(Z) {
        this.currentPath.splineThru(Z);
      }, toShapes: function(Z, te) {
        function oe(vr) {
          for (var Dr = [], Or = 0, yr = vr.length; Or < yr; Or++) {
            var Nr = vr[Or], pr = new ya();
            pr.curves = Nr.curves, Dr.push(pr);
          }
          return Dr;
        }
        function se(vr, Dr) {
          for (var Or = Dr.length, yr = !1, Nr = Or - 1, pr = 0; pr < Or; Nr = pr++) {
            var tn = Dr[Nr], Ur = Dr[pr], mn = Ur.x - tn.x, Qn = Ur.y - tn.y;
            if (Math.abs(Qn) > Number.EPSILON) {
              if (Qn < 0 && (tn = Dr[pr], mn = -mn, Ur = Dr[Nr], Qn = -Qn), vr.y < tn.y || vr.y > Ur.y)
                continue;
              if (vr.y === tn.y) {
                if (vr.x === tn.x)
                  return !0;
              } else {
                var mi = Qn * (vr.x - tn.x) - mn * (vr.y - tn.y);
                if (mi === 0)
                  return !0;
                if (mi < 0)
                  continue;
                yr = !yr;
              }
            } else {
              if (vr.y !== tn.y)
                continue;
              if (Ur.x <= vr.x && vr.x <= tn.x || tn.x <= vr.x && vr.x <= Ur.x)
                return !0;
            }
          }
          return yr;
        }
        var Ae = sa.isClockWise, ue = this.subPaths;
        if (ue.length === 0)
          return [];
        if (te === !0)
          return oe(ue);
        var fe, pe, ve, xe = [];
        if (ue.length === 1)
          return pe = ue[0], (ve = new ya()).curves = pe.curves, xe.push(ve), xe;
        var Me = !Ae(ue[0].getPoints());
        Me = Z ? !Me : Me;
        var Ne, Qe, Ue = [], Je = [], rt = [], it = 0;
        Je[it] = void 0, rt[it] = [];
        for (var ft = 0, vt = ue.length; ft < vt; ft++)
          fe = Ae(Ne = (pe = ue[ft]).getPoints()), (fe = Z ? !fe : fe) ? (!Me && Je[it] && it++, Je[it] = { s: new ya(), p: Ne }, Je[it].s.curves = pe.curves, Me && it++, rt[it] = []) : rt[it].push({ h: pe, p: Ne[0] });
        if (!Je[0])
          return oe(ue);
        if (Je.length > 1) {
          for (var ut = !1, Gt = [], Ht = 0, pt = Je.length; Ht < pt; Ht++)
            Ue[Ht] = [];
          for (Ht = 0, pt = Je.length; Ht < pt; Ht++)
            for (var Tt = rt[Ht], zt = 0; zt < Tt.length; zt++) {
              for (var Dt = Tt[zt], or = !0, Lt = 0; Lt < Je.length; Lt++)
                se(Dt.p, Je[Lt].p) && (Ht !== Lt && Gt.push({ froms: Ht, tos: Lt, hole: zt }), or ? (or = !1, Ue[Lt].push(Dt)) : ut = !0);
              or && Ue[Ht].push(Dt);
            }
          Gt.length > 0 && (ut || (rt = Ue));
        }
        ft = 0;
        for (var lr = Je.length; ft < lr; ft++) {
          ve = Je[ft].s, xe.push(ve);
          for (var gr = 0, xr = (Qe = rt[ft]).length; gr < xr; gr++)
            ve.holes.push(Qe[gr].h);
        }
        return xe;
      } }), Object.assign(bA.prototype, { isFont: !0, generateShapes: function(Z, te) {
        te === void 0 && (te = 100);
        for (var oe = [], se = function(fe, pe, ve) {
          for (var xe = Array.from ? Array.from(fe) : String(fe).split(""), Me = pe / ve.resolution, Ne = (ve.boundingBox.yMax - ve.boundingBox.yMin + ve.underlineThickness) * Me, Qe = [], Ue = 0, Je = 0, rt = 0; rt < xe.length; rt++) {
            var it = xe[rt];
            if (it === `
`)
              Ue = 0, Je -= Ne;
            else {
              var ft = Ol(it, Me, Ue, Je, ve);
              Ue += ft.offsetX, Qe.push(ft.path);
            }
          }
          return Qe;
        }(Z, te, this.data), Ae = 0, ue = se.length; Ae < ue; Ae++)
          Array.prototype.push.apply(oe, se[Ae].toShapes());
        return oe;
      } }), Object.assign(Qu.prototype, { load: function(Z, te, oe, se) {
        var Ae = this, ue = new Go(this.manager);
        ue.setPath(this.path), ue.load(Z, function(fe) {
          var pe;
          try {
            pe = JSON.parse(fe);
          } catch {
            console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), pe = JSON.parse(fe.substring(65, fe.length - 2));
          }
          var ve = Ae.parse(pe);
          te && te(ve);
        }, oe, se);
      }, parse: function(Z) {
        return new bA(Z);
      }, setPath: function(Z) {
        return this.path = Z, this;
      } });
      var wA = { getContext: function() {
        return tA === void 0 && (tA = new (window.AudioContext || window.webkitAudioContext)()), tA;
      }, setContext: function(Z) {
        tA = Z;
      } };
      function _A(Z) {
        this.manager = Z !== void 0 ? Z : go;
      }
      function Su() {
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = 0.064, this.cameraL = new Si(), this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new Si(), this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1;
      }
      function Ec(Z, te, oe) {
        Cr.call(this), this.type = "CubeCamera";
        var se = new Si(90, 1, Z, te);
        se.up.set(0, -1, 0), se.lookAt(new Bt(1, 0, 0)), this.add(se);
        var Ae = new Si(90, 1, Z, te);
        Ae.up.set(0, -1, 0), Ae.lookAt(new Bt(-1, 0, 0)), this.add(Ae);
        var ue = new Si(90, 1, Z, te);
        ue.up.set(0, 0, 1), ue.lookAt(new Bt(0, 1, 0)), this.add(ue);
        var fe = new Si(90, 1, Z, te);
        fe.up.set(0, 0, -1), fe.lookAt(new Bt(0, -1, 0)), this.add(fe);
        var pe = new Si(90, 1, Z, te);
        pe.up.set(0, -1, 0), pe.lookAt(new Bt(0, 0, 1)), this.add(pe);
        var ve = new Si(90, 1, Z, te);
        ve.up.set(0, -1, 0), ve.lookAt(new Bt(0, 0, -1)), this.add(ve);
        var xe = { format: Ft, magFilter: un, minFilter: un };
        this.renderTarget = new fa(oe, oe, xe), this.renderTarget.texture.name = "CubeCamera", this.update = function(Me, Ne) {
          this.parent === null && this.updateMatrixWorld();
          var Qe = this.renderTarget, Ue = Qe.texture.generateMipmaps;
          Qe.texture.generateMipmaps = !1, Qe.activeCubeFace = 0, Me.render(Ne, se, Qe), Qe.activeCubeFace = 1, Me.render(Ne, Ae, Qe), Qe.activeCubeFace = 2, Me.render(Ne, ue, Qe), Qe.activeCubeFace = 3, Me.render(Ne, fe, Qe), Qe.activeCubeFace = 4, Me.render(Ne, pe, Qe), Qe.texture.generateMipmaps = Ue, Qe.activeCubeFace = 5, Me.render(Ne, ve, Qe), Me.setRenderTarget(null);
        }, this.clear = function(Me, Ne, Qe, Ue) {
          for (var Je = this.renderTarget, rt = 0; rt < 6; rt++)
            Je.activeCubeFace = rt, Me.setRenderTarget(Je), Me.clear(Ne, Qe, Ue);
          Me.setRenderTarget(null);
        };
      }
      function QA() {
        Cr.call(this), this.type = "AudioListener", this.context = wA.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null;
      }
      function bs(Z) {
        Cr.call(this), this.type = "Audio", this.context = Z.context, this.gain = this.context.createGain(), this.gain.connect(Z.getInput()), this.autoplay = !1, this.buffer = null, this.loop = !1, this.startTime = 0, this.offset = 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this.filters = [];
      }
      function SA(Z) {
        bs.call(this, Z), this.panner = this.context.createPanner(), this.panner.connect(this.gain);
      }
      function TA(Z, te) {
        this.analyser = Z.context.createAnalyser(), this.analyser.fftSize = te !== void 0 ? te : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), Z.getOutput().connect(this.analyser);
      }
      function RA(Z, te, oe) {
        this.binding = Z, this.valueSize = oe;
        var se, Ae = Float64Array;
        switch (te) {
          case "quaternion":
            se = this._slerp;
            break;
          case "string":
          case "bool":
            Ae = Array, se = this._select;
            break;
          default:
            se = this._lerp;
        }
        this.buffer = new Ae(4 * oe), this._mixBufferRegion = se, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0;
      }
      Object.assign(_A.prototype, { load: function(Z, te, oe, se) {
        var Ae = new Go(this.manager);
        Ae.setResponseType("arraybuffer"), Ae.load(Z, function(ue) {
          var fe = ue.slice(0);
          wA.getContext().decodeAudioData(fe, function(pe) {
            te(pe);
          });
        }, oe, se);
      } }), Object.assign(Su.prototype, { update: function() {
        var Z, te, oe, se, Ae, ue, fe, pe, ve = new yn(), xe = new yn();
        return function(Me) {
          if (Z !== this || te !== Me.focus || oe !== Me.fov || se !== Me.aspect * this.aspect || Ae !== Me.near || ue !== Me.far || fe !== Me.zoom || pe !== this.eyeSep) {
            Z = this, te = Me.focus, oe = Me.fov, se = Me.aspect * this.aspect, Ae = Me.near, ue = Me.far, fe = Me.zoom;
            var Ne, Qe, Ue = Me.projectionMatrix.clone(), Je = (pe = this.eyeSep / 2) * Ae / te, rt = Ae * Math.tan(Mn.DEG2RAD * oe * 0.5) / fe;
            xe.elements[12] = -pe, ve.elements[12] = pe, Ne = -rt * se + Je, Qe = rt * se + Je, Ue.elements[0] = 2 * Ae / (Qe - Ne), Ue.elements[8] = (Qe + Ne) / (Qe - Ne), this.cameraL.projectionMatrix.copy(Ue), Ne = -rt * se - Je, Qe = rt * se - Je, Ue.elements[0] = 2 * Ae / (Qe - Ne), Ue.elements[8] = (Qe + Ne) / (Qe - Ne), this.cameraR.projectionMatrix.copy(Ue);
          }
          this.cameraL.matrixWorld.copy(Me.matrixWorld).multiply(xe), this.cameraR.matrixWorld.copy(Me.matrixWorld).multiply(ve);
        };
      }() }), Ec.prototype = Object.create(Cr.prototype), Ec.prototype.constructor = Ec, QA.prototype = Object.assign(Object.create(Cr.prototype), { constructor: QA, getInput: function() {
        return this.gain;
      }, removeFilter: function() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
      }, getFilter: function() {
        return this.filter;
      }, setFilter: function(Z) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = Z, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
      }, getMasterVolume: function() {
        return this.gain.gain.value;
      }, setMasterVolume: function(Z) {
        return this.gain.gain.setTargetAtTime(Z, this.context.currentTime, 0.01), this;
      }, updateMatrixWorld: function() {
        var Z = new Bt(), te = new hi(), oe = new Bt(), se = new Bt();
        return function(Ae) {
          Cr.prototype.updateMatrixWorld.call(this, Ae);
          var ue = this.context.listener, fe = this.up;
          this.matrixWorld.decompose(Z, te, oe), se.set(0, 0, -1).applyQuaternion(te), ue.positionX ? (ue.positionX.setValueAtTime(Z.x, this.context.currentTime), ue.positionY.setValueAtTime(Z.y, this.context.currentTime), ue.positionZ.setValueAtTime(Z.z, this.context.currentTime), ue.forwardX.setValueAtTime(se.x, this.context.currentTime), ue.forwardY.setValueAtTime(se.y, this.context.currentTime), ue.forwardZ.setValueAtTime(se.z, this.context.currentTime), ue.upX.setValueAtTime(fe.x, this.context.currentTime), ue.upY.setValueAtTime(fe.y, this.context.currentTime), ue.upZ.setValueAtTime(fe.z, this.context.currentTime)) : (ue.setPosition(Z.x, Z.y, Z.z), ue.setOrientation(se.x, se.y, se.z, fe.x, fe.y, fe.z));
        };
      }() }), bs.prototype = Object.assign(Object.create(Cr.prototype), { constructor: bs, getOutput: function() {
        return this.gain;
      }, setNodeSource: function(Z) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = Z, this.connect(), this;
      }, setMediaElementSource: function(Z) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(Z), this.connect(), this;
      }, setBuffer: function(Z) {
        return this.buffer = Z, this.sourceType = "buffer", this.autoplay && this.play(), this;
      }, play: function() {
        if (this.isPlaying !== !0) {
          if (this.hasPlaybackControl !== !1) {
            var Z = this.context.createBufferSource();
            return Z.buffer = this.buffer, Z.loop = this.loop, Z.onended = this.onEnded.bind(this), Z.playbackRate.setValueAtTime(this.playbackRate, this.startTime), this.startTime = this.context.currentTime, Z.start(this.startTime, this.offset), this.isPlaying = !0, this.source = Z, this.connect();
          }
          console.warn("THREE.Audio: this Audio has no playback control.");
        } else
          console.warn("THREE.Audio: Audio is already playing.");
      }, pause: function() {
        if (this.hasPlaybackControl !== !1)
          return this.isPlaying === !0 && (this.source.stop(), this.source.onended = null, this.offset += (this.context.currentTime - this.startTime) * this.playbackRate, this.isPlaying = !1), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, stop: function() {
        if (this.hasPlaybackControl !== !1)
          return this.source.stop(), this.source.onended = null, this.offset = 0, this.isPlaying = !1, this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, connect: function() {
        if (this.filters.length > 0) {
          this.source.connect(this.filters[0]);
          for (var Z = 1, te = this.filters.length; Z < te; Z++)
            this.filters[Z - 1].connect(this.filters[Z]);
          this.filters[this.filters.length - 1].connect(this.getOutput());
        } else
          this.source.connect(this.getOutput());
        return this;
      }, disconnect: function() {
        if (this.filters.length > 0) {
          this.source.disconnect(this.filters[0]);
          for (var Z = 1, te = this.filters.length; Z < te; Z++)
            this.filters[Z - 1].disconnect(this.filters[Z]);
          this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else
          this.source.disconnect(this.getOutput());
        return this;
      }, getFilters: function() {
        return this.filters;
      }, setFilters: function(Z) {
        return Z || (Z = []), this.isPlaying === !0 ? (this.disconnect(), this.filters = Z, this.connect()) : this.filters = Z, this;
      }, getFilter: function() {
        return this.getFilters()[0];
      }, setFilter: function(Z) {
        return this.setFilters(Z ? [Z] : []);
      }, setPlaybackRate: function(Z) {
        if (this.hasPlaybackControl !== !1)
          return this.playbackRate = Z, this.isPlaying === !0 && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getPlaybackRate: function() {
        return this.playbackRate;
      }, onEnded: function() {
        this.isPlaying = !1;
      }, getLoop: function() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
      }, setLoop: function(Z) {
        if (this.hasPlaybackControl !== !1)
          return this.loop = Z, this.isPlaying === !0 && (this.source.loop = this.loop), this;
        console.warn("THREE.Audio: this Audio has no playback control.");
      }, getVolume: function() {
        return this.gain.gain.value;
      }, setVolume: function(Z) {
        return this.gain.gain.setTargetAtTime(Z, this.context.currentTime, 0.01), this;
      } }), SA.prototype = Object.assign(Object.create(bs.prototype), { constructor: SA, getOutput: function() {
        return this.panner;
      }, getRefDistance: function() {
        return this.panner.refDistance;
      }, setRefDistance: function(Z) {
        return this.panner.refDistance = Z, this;
      }, getRolloffFactor: function() {
        return this.panner.rolloffFactor;
      }, setRolloffFactor: function(Z) {
        return this.panner.rolloffFactor = Z, this;
      }, getDistanceModel: function() {
        return this.panner.distanceModel;
      }, setDistanceModel: function(Z) {
        return this.panner.distanceModel = Z, this;
      }, getMaxDistance: function() {
        return this.panner.maxDistance;
      }, setMaxDistance: function(Z) {
        return this.panner.maxDistance = Z, this;
      }, setDirectionalCone: function(Z, te, oe) {
        return this.panner.coneInnerAngle = Z, this.panner.coneOuterAngle = te, this.panner.coneOuterGain = oe, this;
      }, updateMatrixWorld: function() {
        var Z = new Bt(), te = new hi(), oe = new Bt(), se = new Bt();
        return function(Ae) {
          Cr.prototype.updateMatrixWorld.call(this, Ae);
          var ue = this.panner;
          this.matrixWorld.decompose(Z, te, oe), se.set(0, 0, 1).applyQuaternion(te), ue.setPosition(Z.x, Z.y, Z.z), ue.setOrientation(se.x, se.y, se.z);
        };
      }() }), Object.assign(TA.prototype, { getFrequencyData: function() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
      }, getAverageFrequency: function() {
        for (var Z = 0, te = this.getFrequencyData(), oe = 0; oe < te.length; oe++)
          Z += te[oe];
        return Z / te.length;
      } }), Object.assign(RA.prototype, { accumulate: function(Z, te) {
        var oe = this.buffer, se = this.valueSize, Ae = Z * se + se, ue = this.cumulativeWeight;
        if (ue === 0) {
          for (var fe = 0; fe !== se; ++fe)
            oe[Ae + fe] = oe[fe];
          ue = te;
        } else {
          var pe = te / (ue += te);
          this._mixBufferRegion(oe, Ae, 0, pe, se);
        }
        this.cumulativeWeight = ue;
      }, apply: function(Z) {
        var te = this.valueSize, oe = this.buffer, se = Z * te + te, Ae = this.cumulativeWeight, ue = this.binding;
        if (this.cumulativeWeight = 0, Ae < 1) {
          var fe = 3 * te;
          this._mixBufferRegion(oe, se, fe, 1 - Ae, te);
        }
        for (var pe = te, ve = te + te; pe !== ve; ++pe)
          if (oe[pe] !== oe[pe + te]) {
            ue.setValue(oe, se);
            break;
          }
      }, saveOriginalState: function() {
        var Z = this.binding, te = this.buffer, oe = this.valueSize, se = 3 * oe;
        Z.getValue(te, se);
        for (var Ae = oe, ue = se; Ae !== ue; ++Ae)
          te[Ae] = te[se + Ae % oe];
        this.cumulativeWeight = 0;
      }, restoreOriginalState: function() {
        var Z = 3 * this.valueSize;
        this.binding.setValue(this.buffer, Z);
      }, _select: function(Z, te, oe, se, Ae) {
        if (se >= 0.5)
          for (var ue = 0; ue !== Ae; ++ue)
            Z[te + ue] = Z[oe + ue];
      }, _slerp: function(Z, te, oe, se) {
        hi.slerpFlat(Z, te, Z, te, Z, oe, se);
      }, _lerp: function(Z, te, oe, se, Ae) {
        for (var ue = 1 - se, fe = 0; fe !== Ae; ++fe) {
          var pe = te + fe;
          Z[pe] = Z[pe] * ue + Z[oe + fe] * se;
        }
      } });
      var MA, Tu;
      function Ru(Z, te, oe) {
        var se = oe || to.parseTrackName(te);
        this._targetGroup = Z, this._bindings = Z.subscribe_(te, se);
      }
      function to(Z, te, oe) {
        this.path = te, this.parsedPath = oe || to.parseTrackName(te), this.node = to.findNode(Z, this.parsedPath.nodeName) || Z, this.rootNode = Z;
      }
      function Mu() {
        this.uuid = Mn.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        var Z = {};
        this._indicesByUUID = Z;
        for (var te = 0, oe = arguments.length; te !== oe; ++te)
          Z[arguments[te].uuid] = te;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        var se = this;
        this.stats = { objects: { get total() {
          return se._objects.length;
        }, get inUse() {
          return this.total - se.nCachedObjects_;
        } }, get bindingsPerObject() {
          return se._bindings.length;
        } };
      }
      function Nu(Z, te, oe) {
        this._mixer = Z, this._clip = te, this._localRoot = oe || null;
        for (var se = te.tracks, Ae = se.length, ue = new Array(Ae), fe = { endingStart: sn, endingEnd: sn }, pe = 0; pe !== Ae; ++pe) {
          var ve = se[pe].createInterpolant(null);
          ue[pe] = ve, ve.settings = fe;
        }
        this._interpolantSettings = fe, this._interpolants = ue, this._propertyBindings = new Array(Ae), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Gn, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
      }
      function NA(Z) {
        this._root = Z, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
      }
      function rA(Z) {
        typeof Z == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), Z = arguments[1]), this.value = Z;
      }
      function kA() {
        an.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0;
      }
      function FA(Z, te, oe) {
        Qa.call(this, Z, te), this.meshPerAttribute = oe || 1;
      }
      function GA(Z, te, oe) {
        dn.call(this, Z, te), this.meshPerAttribute = oe || 1;
      }
      function ku(Z, te, oe, se) {
        this.ray = new _a(Z, te), this.near = oe || 0, this.far = se || 1 / 0, this.params = { Mesh: {}, Line: {}, LOD: {}, Points: { threshold: 1 }, Sprite: {} }, Object.defineProperties(this.params, { PointCloud: { get: function() {
          return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points;
        } } });
      }
      function Fu(Z, te) {
        return Z.distance - te.distance;
      }
      function OA(Z, te, oe, se) {
        if (Z.visible !== !1 && (Z.raycast(te, oe), se === !0))
          for (var Ae = Z.children, ue = 0, fe = Ae.length; ue < fe; ue++)
            OA(Ae[ue], te, oe, !0);
      }
      function Gu(Z) {
        this.autoStart = Z === void 0 || Z, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
      }
      function Ou(Z, te, oe) {
        return this.radius = Z !== void 0 ? Z : 1, this.phi = te !== void 0 ? te : 0, this.theta = oe !== void 0 ? oe : 0, this;
      }
      function Pu(Z, te, oe) {
        return this.radius = Z !== void 0 ? Z : 1, this.theta = te !== void 0 ? te : 0, this.y = oe !== void 0 ? oe : 0, this;
      }
      function PA(Z, te) {
        this.min = Z !== void 0 ? Z : new Qr(1 / 0, 1 / 0), this.max = te !== void 0 ? te : new Qr(-1 / 0, -1 / 0);
      }
      function UA(Z, te) {
        this.start = Z !== void 0 ? Z : new Bt(), this.end = te !== void 0 ? te : new Bt();
      }
      function yc(Z) {
        Cr.call(this), this.material = Z, this.render = function() {
        };
      }
      function Bc(Z, te, oe, se) {
        this.object = Z, this.size = te !== void 0 ? te : 1;
        var Ae = oe !== void 0 ? oe : 16711680, ue = se !== void 0 ? se : 1, fe = 0, pe = this.object.geometry;
        pe && pe.isGeometry ? fe = 3 * pe.faces.length : pe && pe.isBufferGeometry && (fe = pe.attributes.normal.count);
        var ve = new an(), xe = new Yr(2 * fe * 3, 3);
        ve.addAttribute("position", xe), gi.call(this, ve, new Ai({ color: Ae, linewidth: ue })), this.matrixAutoUpdate = !1, this.update();
      }
      function ws(Z, te) {
        Cr.call(this), this.light = Z, this.light.updateMatrixWorld(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.color = te;
        for (var oe = new an(), se = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], Ae = 0, ue = 1; Ae < 32; Ae++, ue++) {
          var fe = Ae / 32 * Math.PI * 2, pe = ue / 32 * Math.PI * 2;
          se.push(Math.cos(fe), Math.sin(fe), 1, Math.cos(pe), Math.sin(pe), 1);
        }
        oe.addAttribute("position", new Yr(se, 3));
        var ve = new Ai({ fog: !1 });
        this.cone = new gi(oe, ve), this.add(this.cone), this.update();
      }
      function _s(Z) {
        for (var te = function Me(Ne) {
          var Qe = [];
          Ne && Ne.isBone && Qe.push(Ne);
          for (var Ue = 0; Ue < Ne.children.length; Ue++)
            Qe.push.apply(Qe, Me(Ne.children[Ue]));
          return Qe;
        }(Z), oe = new an(), se = [], Ae = [], ue = new ze(0, 0, 1), fe = new ze(0, 1, 0), pe = 0; pe < te.length; pe++) {
          var ve = te[pe];
          ve.parent && ve.parent.isBone && (se.push(0, 0, 0), se.push(0, 0, 0), Ae.push(ue.r, ue.g, ue.b), Ae.push(fe.r, fe.g, fe.b));
        }
        oe.addAttribute("position", new Yr(se, 3)), oe.addAttribute("color", new Yr(Ae, 3));
        var xe = new Ai({ vertexColors: Et, depthTest: !1, depthWrite: !1, transparent: !0 });
        gi.call(this, oe, xe), this.root = Z, this.bones = te, this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1;
      }
      function Qs(Z, te, oe) {
        this.light = Z, this.light.updateMatrixWorld(), this.color = oe;
        var se = new Ma(te, 4, 2), Ae = new Bo({ wireframe: !0, fog: !1 });
        lo.call(this, se, Ae), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
      }
      function Ss(Z, te) {
        Cr.call(this), this.light = Z, this.light.updateMatrixWorld(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.color = te;
        var oe = new Ai({ fog: !1 }), se = new an();
        se.addAttribute("position", new dn(new Float32Array(15), 3)), this.line = new fo(se, oe), this.add(this.line), this.update();
      }
      function Ts(Z, te, oe) {
        Cr.call(this), this.light = Z, this.light.updateMatrixWorld(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.color = oe;
        var se = new Sa(te);
        se.rotateY(0.5 * Math.PI), this.material = new Bo({ wireframe: !0, fog: !1 }), this.color === void 0 && (this.material.vertexColors = Et);
        var Ae = se.getAttribute("position"), ue = new Float32Array(3 * Ae.count);
        se.addAttribute("color", new dn(ue, 3)), this.add(new lo(se, this.material)), this.update();
      }
      function vc(Z, te, oe, se) {
        Z = Z || 10, te = te || 10, oe = new ze(oe !== void 0 ? oe : 4473924), se = new ze(se !== void 0 ? se : 8947848);
        for (var Ae = te / 2, ue = Z / te, fe = Z / 2, pe = [], ve = [], xe = 0, Me = 0, Ne = -fe; xe <= te; xe++, Ne += ue) {
          pe.push(-fe, 0, Ne, fe, 0, Ne), pe.push(Ne, 0, -fe, Ne, 0, fe);
          var Qe = xe === Ae ? oe : se;
          Qe.toArray(ve, Me), Me += 3, Qe.toArray(ve, Me), Me += 3, Qe.toArray(ve, Me), Me += 3, Qe.toArray(ve, Me), Me += 3;
        }
        var Ue = new an();
        Ue.addAttribute("position", new Yr(pe, 3)), Ue.addAttribute("color", new Yr(ve, 3));
        var Je = new Ai({ vertexColors: Et });
        gi.call(this, Ue, Je);
      }
      function nA(Z, te, oe, se, Ae, ue) {
        Z = Z || 10, te = te || 16, oe = oe || 8, se = se || 64, Ae = new ze(Ae !== void 0 ? Ae : 4473924), ue = new ze(ue !== void 0 ? ue : 8947848);
        var fe, pe, ve, xe, Me, Ne, Qe, Ue = [], Je = [];
        for (xe = 0; xe <= te; xe++)
          ve = xe / te * (2 * Math.PI), fe = Math.sin(ve) * Z, pe = Math.cos(ve) * Z, Ue.push(0, 0, 0), Ue.push(fe, 0, pe), Qe = 1 & xe ? Ae : ue, Je.push(Qe.r, Qe.g, Qe.b), Je.push(Qe.r, Qe.g, Qe.b);
        for (xe = 0; xe <= oe; xe++)
          for (Qe = 1 & xe ? Ae : ue, Ne = Z - Z / oe * xe, Me = 0; Me < se; Me++)
            ve = Me / se * (2 * Math.PI), fe = Math.sin(ve) * Ne, pe = Math.cos(ve) * Ne, Ue.push(fe, 0, pe), Je.push(Qe.r, Qe.g, Qe.b), ve = (Me + 1) / se * (2 * Math.PI), fe = Math.sin(ve) * Ne, pe = Math.cos(ve) * Ne, Ue.push(fe, 0, pe), Je.push(Qe.r, Qe.g, Qe.b);
        var rt = new an();
        rt.addAttribute("position", new Yr(Ue, 3)), rt.addAttribute("color", new Yr(Je, 3));
        var it = new Ai({ vertexColors: Et });
        gi.call(this, rt, it);
      }
      function Cc(Z, te, oe, se) {
        this.object = Z, this.size = te !== void 0 ? te : 1;
        var Ae = oe !== void 0 ? oe : 16776960, ue = se !== void 0 ? se : 1, fe = 0, pe = this.object.geometry;
        pe && pe.isGeometry ? fe = pe.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
        var ve = new an(), xe = new Yr(2 * fe * 3, 3);
        ve.addAttribute("position", xe), gi.call(this, ve, new Ai({ color: Ae, linewidth: ue })), this.matrixAutoUpdate = !1, this.update();
      }
      function Rs(Z, te, oe) {
        Cr.call(this), this.light = Z, this.light.updateMatrixWorld(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.color = oe, te === void 0 && (te = 1);
        var se = new an();
        se.addAttribute("position", new Yr([-te, te, 0, te, te, 0, te, -te, 0, -te, -te, 0, -te, te, 0], 3));
        var Ae = new Ai({ fog: !1 });
        this.lightPlane = new fo(se, Ae), this.add(this.lightPlane), (se = new an()).addAttribute("position", new Yr([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new fo(se, Ae), this.add(this.targetLine), this.update();
      }
      function Ic(Z) {
        var te = new an(), oe = new Ai({ color: 16777215, vertexColors: tt }), se = [], Ae = [], ue = {}, fe = new ze(16755200), pe = new ze(16711680), ve = new ze(43775), xe = new ze(16777215), Me = new ze(3355443);
        function Ne(Ue, Je, rt) {
          Qe(Ue, rt), Qe(Je, rt);
        }
        function Qe(Ue, Je) {
          se.push(0, 0, 0), Ae.push(Je.r, Je.g, Je.b), ue[Ue] === void 0 && (ue[Ue] = []), ue[Ue].push(se.length / 3 - 1);
        }
        Ne("n1", "n2", fe), Ne("n2", "n4", fe), Ne("n4", "n3", fe), Ne("n3", "n1", fe), Ne("f1", "f2", fe), Ne("f2", "f4", fe), Ne("f4", "f3", fe), Ne("f3", "f1", fe), Ne("n1", "f1", fe), Ne("n2", "f2", fe), Ne("n3", "f3", fe), Ne("n4", "f4", fe), Ne("p", "n1", pe), Ne("p", "n2", pe), Ne("p", "n3", pe), Ne("p", "n4", pe), Ne("u1", "u2", ve), Ne("u2", "u3", ve), Ne("u3", "u1", ve), Ne("c", "t", xe), Ne("p", "c", Me), Ne("cn1", "cn2", Me), Ne("cn3", "cn4", Me), Ne("cf1", "cf2", Me), Ne("cf3", "cf4", Me), te.addAttribute("position", new Yr(se, 3)), te.addAttribute("color", new Yr(Ae, 3)), gi.call(this, te, oe), this.camera = Z, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = Z.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = ue, this.update();
      }
      function ja(Z, te) {
        this.object = Z, te === void 0 && (te = 16776960);
        var oe = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), se = new Float32Array(24), Ae = new an();
        Ae.setIndex(new dn(oe, 1)), Ae.addAttribute("position", new dn(se, 3)), gi.call(this, Ae, new Ai({ color: te })), this.matrixAutoUpdate = !1, this.update();
      }
      function xc(Z, te) {
        this.type = "Box3Helper", this.box = Z;
        var oe = te !== void 0 ? te : 16776960, se = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), Ae = new an();
        Ae.setIndex(new dn(se, 1)), Ae.addAttribute("position", new Yr([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), gi.call(this, Ae, new Ai({ color: oe })), this.geometry.computeBoundingSphere();
      }
      function bc(Z, te, oe) {
        this.type = "PlaneHelper", this.plane = Z, this.size = te === void 0 ? 1 : te;
        var se = oe !== void 0 ? oe : 16776960, Ae = new an();
        Ae.addAttribute("position", new Yr([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), Ae.computeBoundingSphere(), fo.call(this, Ae, new Ai({ color: se }));
        var ue = new an();
        ue.addAttribute("position", new Yr([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), ue.computeBoundingSphere(), this.add(new lo(ue, new Bo({ color: se, opacity: 0.2, transparent: !0, depthWrite: !1 })));
      }
      function Ya(Z, te, oe, se, Ae, ue) {
        Cr.call(this), se === void 0 && (se = 16776960), oe === void 0 && (oe = 1), Ae === void 0 && (Ae = 0.2 * oe), ue === void 0 && (ue = 0.2 * Ae), MA === void 0 && ((MA = new an()).addAttribute("position", new Yr([0, 0, 0, 0, 1, 0], 3)), (Tu = new ca(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)), this.position.copy(te), this.line = new fo(MA, new Ai({ color: se })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new lo(Tu, new Bo({ color: se })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(Z), this.setLength(oe, Ae, ue);
      }
      function wc(Z) {
        var te = [0, 0, 0, Z = Z || 1, 0, 0, 0, 0, 0, 0, Z, 0, 0, 0, 0, 0, 0, Z], oe = new an();
        oe.addAttribute("position", new Yr(te, 3)), oe.addAttribute("color", new Yr([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1], 3));
        var se = new Ai({ vertexColors: Et });
        gi.call(this, oe, se);
      }
      function Pl(Z, te, oe, se, Ae, ue, fe) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new ti(Z, te, oe, Ae, ue, fe);
      }
      Object.assign(Ru.prototype, { getValue: function(Z, te) {
        this.bind();
        var oe = this._targetGroup.nCachedObjects_, se = this._bindings[oe];
        se !== void 0 && se.getValue(Z, te);
      }, setValue: function(Z, te) {
        for (var oe = this._bindings, se = this._targetGroup.nCachedObjects_, Ae = oe.length; se !== Ae; ++se)
          oe[se].setValue(Z, te);
      }, bind: function() {
        for (var Z = this._bindings, te = this._targetGroup.nCachedObjects_, oe = Z.length; te !== oe; ++te)
          Z[te].bind();
      }, unbind: function() {
        for (var Z = this._bindings, te = this._targetGroup.nCachedObjects_, oe = Z.length; te !== oe; ++te)
          Z[te].unbind();
      } }), Object.assign(to, { Composite: Ru, create: function(Z, te, oe) {
        return Z && Z.isAnimationObjectGroup ? new to.Composite(Z, te, oe) : new to(Z, te, oe);
      }, sanitizeNodeName: function() {
        var Z = new RegExp("[\\[\\]\\.:\\/]", "g");
        return function(te) {
          return te.replace(/\s/g, "_").replace(Z, "");
        };
      }(), parseTrackName: function() {
        var Z = "[^\\[\\]\\.:\\/]", te = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]", oe = /((?:WC+[\/:])*)/.source.replace("WC", Z), se = /(WCOD+)?/.source.replace("WCOD", te), Ae = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Z), ue = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Z), fe = new RegExp("^" + oe + se + Ae + ue + "$"), pe = ["material", "materials", "bones"];
        return function(ve) {
          var xe = fe.exec(ve);
          if (!xe)
            throw new Error("PropertyBinding: Cannot parse trackName: " + ve);
          var Me = { nodeName: xe[2], objectName: xe[3], objectIndex: xe[4], propertyName: xe[5], propertyIndex: xe[6] }, Ne = Me.nodeName && Me.nodeName.lastIndexOf(".");
          if (Ne !== void 0 && Ne !== -1) {
            var Qe = Me.nodeName.substring(Ne + 1);
            pe.indexOf(Qe) !== -1 && (Me.nodeName = Me.nodeName.substring(0, Ne), Me.objectName = Qe);
          }
          if (Me.propertyName === null || Me.propertyName.length === 0)
            throw new Error("PropertyBinding: can not parse propertyName from trackName: " + ve);
          return Me;
        };
      }(), findNode: function(Z, te) {
        if (!te || te === "" || te === "root" || te === "." || te === -1 || te === Z.name || te === Z.uuid)
          return Z;
        if (Z.skeleton) {
          var oe = Z.skeleton.getBoneByName(te);
          if (oe !== void 0)
            return oe;
        }
        if (Z.children) {
          var se = function(ue) {
            for (var fe = 0; fe < ue.length; fe++) {
              var pe = ue[fe];
              if (pe.name === te || pe.uuid === te)
                return pe;
              var ve = se(pe.children);
              if (ve)
                return ve;
            }
            return null;
          }, Ae = se(Z.children);
          if (Ae)
            return Ae;
        }
        return null;
      } }), Object.assign(to.prototype, { _getValue_unavailable: function() {
      }, _setValue_unavailable: function() {
      }, BindingType: { Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3 }, Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 }, GetterByBindingType: [function(Z, te) {
        Z[te] = this.node[this.propertyName];
      }, function(Z, te) {
        for (var oe = this.resolvedProperty, se = 0, Ae = oe.length; se !== Ae; ++se)
          Z[te++] = oe[se];
      }, function(Z, te) {
        Z[te] = this.resolvedProperty[this.propertyIndex];
      }, function(Z, te) {
        this.resolvedProperty.toArray(Z, te);
      }], SetterByBindingTypeAndVersioning: [[function(Z, te) {
        this.targetObject[this.propertyName] = Z[te];
      }, function(Z, te) {
        this.targetObject[this.propertyName] = Z[te], this.targetObject.needsUpdate = !0;
      }, function(Z, te) {
        this.targetObject[this.propertyName] = Z[te], this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Z, te) {
        for (var oe = this.resolvedProperty, se = 0, Ae = oe.length; se !== Ae; ++se)
          oe[se] = Z[te++];
      }, function(Z, te) {
        for (var oe = this.resolvedProperty, se = 0, Ae = oe.length; se !== Ae; ++se)
          oe[se] = Z[te++];
        this.targetObject.needsUpdate = !0;
      }, function(Z, te) {
        for (var oe = this.resolvedProperty, se = 0, Ae = oe.length; se !== Ae; ++se)
          oe[se] = Z[te++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Z, te) {
        this.resolvedProperty[this.propertyIndex] = Z[te];
      }, function(Z, te) {
        this.resolvedProperty[this.propertyIndex] = Z[te], this.targetObject.needsUpdate = !0;
      }, function(Z, te) {
        this.resolvedProperty[this.propertyIndex] = Z[te], this.targetObject.matrixWorldNeedsUpdate = !0;
      }], [function(Z, te) {
        this.resolvedProperty.fromArray(Z, te);
      }, function(Z, te) {
        this.resolvedProperty.fromArray(Z, te), this.targetObject.needsUpdate = !0;
      }, function(Z, te) {
        this.resolvedProperty.fromArray(Z, te), this.targetObject.matrixWorldNeedsUpdate = !0;
      }]], getValue: function(Z, te) {
        this.bind(), this.getValue(Z, te);
      }, setValue: function(Z, te) {
        this.bind(), this.setValue(Z, te);
      }, bind: function() {
        var Z = this.node, te = this.parsedPath, oe = te.objectName, se = te.propertyName, Ae = te.propertyIndex;
        if (Z || (Z = to.findNode(this.rootNode, te.nodeName) || this.rootNode, this.node = Z), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, Z) {
          if (oe) {
            var ue = te.objectIndex;
            switch (oe) {
              case "materials":
                if (!Z.material)
                  return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                if (!Z.material.materials)
                  return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                Z = Z.material.materials;
                break;
              case "bones":
                if (!Z.skeleton)
                  return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                Z = Z.skeleton.bones;
                for (var fe = 0; fe < Z.length; fe++)
                  if (Z[fe].name === ue) {
                    ue = fe;
                    break;
                  }
                break;
              default:
                if (Z[oe] === void 0)
                  return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                Z = Z[oe];
            }
            if (ue !== void 0) {
              if (Z[ue] === void 0)
                return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, Z);
              Z = Z[ue];
            }
          }
          var pe = Z[se];
          if (pe !== void 0) {
            var ve = this.Versioning.None;
            Z.needsUpdate !== void 0 ? (ve = this.Versioning.NeedsUpdate, this.targetObject = Z) : Z.matrixWorldNeedsUpdate !== void 0 && (ve = this.Versioning.MatrixWorldNeedsUpdate, this.targetObject = Z);
            var xe = this.BindingType.Direct;
            if (Ae !== void 0) {
              if (se === "morphTargetInfluences") {
                if (!Z.geometry)
                  return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                if (Z.geometry.isBufferGeometry) {
                  if (!Z.geometry.morphAttributes)
                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                  for (fe = 0; fe < this.node.geometry.morphAttributes.position.length; fe++)
                    if (Z.geometry.morphAttributes.position[fe].name === Ae) {
                      Ae = fe;
                      break;
                    }
                } else {
                  if (!Z.geometry.morphTargets)
                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                  for (fe = 0; fe < this.node.geometry.morphTargets.length; fe++)
                    if (Z.geometry.morphTargets[fe].name === Ae) {
                      Ae = fe;
                      break;
                    }
                }
              }
              xe = this.BindingType.ArrayElement, this.resolvedProperty = pe, this.propertyIndex = Ae;
            } else
              pe.fromArray !== void 0 && pe.toArray !== void 0 ? (xe = this.BindingType.HasFromToArray, this.resolvedProperty = pe) : Array.isArray(pe) ? (xe = this.BindingType.EntireArray, this.resolvedProperty = pe) : this.propertyName = se;
            this.getValue = this.GetterByBindingType[xe], this.setValue = this.SetterByBindingTypeAndVersioning[xe][ve];
          } else {
            var Me = te.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + Me + "." + se + " but it wasn't found.", Z);
          }
        } else
          console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
      }, unbind: function() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
      } }), Object.assign(to.prototype, { _getValue_unbound: to.prototype.getValue, _setValue_unbound: to.prototype.setValue }), Object.assign(Mu.prototype, { isAnimationObjectGroup: !0, add: function() {
        for (var Z = this._objects, te = Z.length, oe = this.nCachedObjects_, se = this._indicesByUUID, Ae = this._paths, ue = this._parsedPaths, fe = this._bindings, pe = fe.length, ve = void 0, xe = 0, Me = arguments.length; xe !== Me; ++xe) {
          var Ne = arguments[xe], Qe = Ne.uuid, Ue = se[Qe];
          if (Ue === void 0) {
            Ue = te++, se[Qe] = Ue, Z.push(Ne);
            for (var Je = 0, rt = pe; Je !== rt; ++Je)
              fe[Je].push(new to(Ne, Ae[Je], ue[Je]));
          } else if (Ue < oe) {
            ve = Z[Ue];
            var it = --oe, ft = Z[it];
            for (se[ft.uuid] = Ue, Z[Ue] = ft, se[Qe] = it, Z[it] = Ne, Je = 0, rt = pe; Je !== rt; ++Je) {
              var vt = fe[Je], ut = vt[it], Gt = vt[Ue];
              vt[Ue] = ut, Gt === void 0 && (Gt = new to(Ne, Ae[Je], ue[Je])), vt[it] = Gt;
            }
          } else
            Z[Ue] !== ve && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = oe;
      }, remove: function() {
        for (var Z = this._objects, te = this.nCachedObjects_, oe = this._indicesByUUID, se = this._bindings, Ae = se.length, ue = 0, fe = arguments.length; ue !== fe; ++ue) {
          var pe = arguments[ue], ve = pe.uuid, xe = oe[ve];
          if (xe !== void 0 && xe >= te) {
            var Me = te++, Ne = Z[Me];
            oe[Ne.uuid] = xe, Z[xe] = Ne, oe[ve] = Me, Z[Me] = pe;
            for (var Qe = 0, Ue = Ae; Qe !== Ue; ++Qe) {
              var Je = se[Qe], rt = Je[Me], it = Je[xe];
              Je[xe] = rt, Je[Me] = it;
            }
          }
        }
        this.nCachedObjects_ = te;
      }, uncache: function() {
        for (var Z = this._objects, te = Z.length, oe = this.nCachedObjects_, se = this._indicesByUUID, Ae = this._bindings, ue = Ae.length, fe = 0, pe = arguments.length; fe !== pe; ++fe) {
          var ve = arguments[fe].uuid, xe = se[ve];
          if (xe !== void 0)
            if (delete se[ve], xe < oe) {
              var Me = --oe, Ne = Z[Me], Qe = Z[ft = --te];
              se[Ne.uuid] = xe, Z[xe] = Ne, se[Qe.uuid] = Me, Z[Me] = Qe, Z.pop();
              for (var Ue = 0, Je = ue; Ue !== Je; ++Ue) {
                var rt = (vt = Ae[Ue])[Me], it = vt[ft];
                vt[xe] = rt, vt[Me] = it, vt.pop();
              }
            } else {
              var ft;
              for (se[(Qe = Z[ft = --te]).uuid] = xe, Z[xe] = Qe, Z.pop(), Ue = 0, Je = ue; Ue !== Je; ++Ue) {
                var vt;
                (vt = Ae[Ue])[xe] = vt[ft], vt.pop();
              }
            }
        }
        this.nCachedObjects_ = oe;
      }, subscribe_: function(Z, te) {
        var oe = this._bindingsIndicesByPath, se = oe[Z], Ae = this._bindings;
        if (se !== void 0)
          return Ae[se];
        var ue = this._paths, fe = this._parsedPaths, pe = this._objects, ve = pe.length, xe = this.nCachedObjects_, Me = new Array(ve);
        se = Ae.length, oe[Z] = se, ue.push(Z), fe.push(te), Ae.push(Me);
        for (var Ne = xe, Qe = pe.length; Ne !== Qe; ++Ne) {
          var Ue = pe[Ne];
          Me[Ne] = new to(Ue, Z, te);
        }
        return Me;
      }, unsubscribe_: function(Z) {
        var te = this._bindingsIndicesByPath, oe = te[Z];
        if (oe !== void 0) {
          var se = this._paths, Ae = this._parsedPaths, ue = this._bindings, fe = ue.length - 1, pe = ue[fe];
          te[Z[fe]] = oe, ue[oe] = pe, ue.pop(), Ae[oe] = Ae[fe], Ae.pop(), se[oe] = se[fe], se.pop();
        }
      } }), Object.assign(Nu.prototype, { play: function() {
        return this._mixer._activateAction(this), this;
      }, stop: function() {
        return this._mixer._deactivateAction(this), this.reset();
      }, reset: function() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
      }, isRunning: function() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
      }, isScheduled: function() {
        return this._mixer._isActiveAction(this);
      }, startAt: function(Z) {
        return this._startTime = Z, this;
      }, setLoop: function(Z, te) {
        return this.loop = Z, this.repetitions = te, this;
      }, setEffectiveWeight: function(Z) {
        return this.weight = Z, this._effectiveWeight = this.enabled ? Z : 0, this.stopFading();
      }, getEffectiveWeight: function() {
        return this._effectiveWeight;
      }, fadeIn: function(Z) {
        return this._scheduleFading(Z, 0, 1);
      }, fadeOut: function(Z) {
        return this._scheduleFading(Z, 1, 0);
      }, crossFadeFrom: function(Z, te, oe) {
        if (Z.fadeOut(te), this.fadeIn(te), oe) {
          var se = this._clip.duration, Ae = Z._clip.duration, ue = Ae / se, fe = se / Ae;
          Z.warp(1, ue, te), this.warp(fe, 1, te);
        }
        return this;
      }, crossFadeTo: function(Z, te, oe) {
        return Z.crossFadeFrom(this, te, oe);
      }, stopFading: function() {
        var Z = this._weightInterpolant;
        return Z !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(Z)), this;
      }, setEffectiveTimeScale: function(Z) {
        return this.timeScale = Z, this._effectiveTimeScale = this.paused ? 0 : Z, this.stopWarping();
      }, getEffectiveTimeScale: function() {
        return this._effectiveTimeScale;
      }, setDuration: function(Z) {
        return this.timeScale = this._clip.duration / Z, this.stopWarping();
      }, syncWith: function(Z) {
        return this.time = Z.time, this.timeScale = Z.timeScale, this.stopWarping();
      }, halt: function(Z) {
        return this.warp(this._effectiveTimeScale, 0, Z);
      }, warp: function(Z, te, oe) {
        var se = this._mixer, Ae = se.time, ue = this._timeScaleInterpolant, fe = this.timeScale;
        ue === null && (ue = se._lendControlInterpolant(), this._timeScaleInterpolant = ue);
        var pe = ue.parameterPositions, ve = ue.sampleValues;
        return pe[0] = Ae, pe[1] = Ae + oe, ve[0] = Z / fe, ve[1] = te / fe, this;
      }, stopWarping: function() {
        var Z = this._timeScaleInterpolant;
        return Z !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(Z)), this;
      }, getMixer: function() {
        return this._mixer;
      }, getClip: function() {
        return this._clip;
      }, getRoot: function() {
        return this._localRoot || this._mixer._root;
      }, _update: function(Z, te, oe, se) {
        if (this.enabled) {
          var Ae = this._startTime;
          if (Ae !== null) {
            var ue = (Z - Ae) * oe;
            if (ue < 0 || oe === 0)
              return;
            this._startTime = null, te = oe * ue;
          }
          te *= this._updateTimeScale(Z);
          var fe = this._updateTime(te), pe = this._updateWeight(Z);
          if (pe > 0)
            for (var ve = this._interpolants, xe = this._propertyBindings, Me = 0, Ne = ve.length; Me !== Ne; ++Me)
              ve[Me].evaluate(fe), xe[Me].accumulate(se, pe);
        } else
          this._updateWeight(Z);
      }, _updateWeight: function(Z) {
        var te = 0;
        if (this.enabled) {
          te = this.weight;
          var oe = this._weightInterpolant;
          if (oe !== null) {
            var se = oe.evaluate(Z)[0];
            te *= se, Z > oe.parameterPositions[1] && (this.stopFading(), se === 0 && (this.enabled = !1));
          }
        }
        return this._effectiveWeight = te, te;
      }, _updateTimeScale: function(Z) {
        var te = 0;
        if (!this.paused) {
          te = this.timeScale;
          var oe = this._timeScaleInterpolant;
          oe !== null && (te *= oe.evaluate(Z)[0], Z > oe.parameterPositions[1] && (this.stopWarping(), te === 0 ? this.paused = !0 : this.timeScale = te));
        }
        return this._effectiveTimeScale = te, te;
      }, _updateTime: function(Z) {
        var te = this.time + Z, oe = this._clip.duration, se = this.loop, Ae = this._loopCount, ue = se === qr;
        if (Z === 0)
          return Ae === -1 ? te : ue && (1 & Ae) == 1 ? oe - te : te;
        if (se === Fn) {
          Ae === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
          e: {
            if (te >= oe)
              te = oe;
            else {
              if (!(te < 0))
                break e;
              te = 0;
            }
            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this._mixer.dispatchEvent({ type: "finished", action: this, direction: Z < 0 ? -1 : 1 });
          }
        } else {
          if (Ae === -1 && (Z >= 0 ? (Ae = 0, this._setEndings(!0, this.repetitions === 0, ue)) : this._setEndings(this.repetitions === 0, !0, ue)), te >= oe || te < 0) {
            var fe = Math.floor(te / oe);
            te -= oe * fe, Ae += Math.abs(fe);
            var pe = this.repetitions - Ae;
            if (pe <= 0)
              this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, te = Z > 0 ? oe : 0, this._mixer.dispatchEvent({ type: "finished", action: this, direction: Z > 0 ? 1 : -1 });
            else {
              if (pe === 1) {
                var ve = Z < 0;
                this._setEndings(ve, !ve, ue);
              } else
                this._setEndings(!1, !1, ue);
              this._loopCount = Ae, this._mixer.dispatchEvent({ type: "loop", action: this, loopDelta: fe });
            }
          }
          if (ue && (1 & Ae) == 1)
            return this.time = te, oe - te;
        }
        return this.time = te, te;
      }, _setEndings: function(Z, te, oe) {
        var se = this._interpolantSettings;
        oe ? (se.endingStart = On, se.endingEnd = On) : (se.endingStart = Z ? this.zeroSlopeAtStart ? On : sn : ii, se.endingEnd = te ? this.zeroSlopeAtEnd ? On : sn : ii);
      }, _scheduleFading: function(Z, te, oe) {
        var se = this._mixer, Ae = se.time, ue = this._weightInterpolant;
        ue === null && (ue = se._lendControlInterpolant(), this._weightInterpolant = ue);
        var fe = ue.parameterPositions, pe = ue.sampleValues;
        return fe[0] = Ae, pe[0] = te, fe[1] = Ae + Z, pe[1] = oe, this;
      } }), NA.prototype = Object.assign(Object.create(ce.prototype), { constructor: NA, _bindAction: function(Z, te) {
        var oe = Z._localRoot || this._root, se = Z._clip.tracks, Ae = se.length, ue = Z._propertyBindings, fe = Z._interpolants, pe = oe.uuid, ve = this._bindingsByRootAndName, xe = ve[pe];
        xe === void 0 && (xe = {}, ve[pe] = xe);
        for (var Me = 0; Me !== Ae; ++Me) {
          var Ne = se[Me], Qe = Ne.name, Ue = xe[Qe];
          if (Ue !== void 0)
            ue[Me] = Ue;
          else {
            if ((Ue = ue[Me]) !== void 0) {
              Ue._cacheIndex === null && (++Ue.referenceCount, this._addInactiveBinding(Ue, pe, Qe));
              continue;
            }
            var Je = te && te._propertyBindings[Me].binding.parsedPath;
            ++(Ue = new RA(to.create(oe, Qe, Je), Ne.ValueTypeName, Ne.getValueSize())).referenceCount, this._addInactiveBinding(Ue, pe, Qe), ue[Me] = Ue;
          }
          fe[Me].resultBuffer = Ue.buffer;
        }
      }, _activateAction: function(Z) {
        if (!this._isActiveAction(Z)) {
          if (Z._cacheIndex === null) {
            var te = (Z._localRoot || this._root).uuid, oe = Z._clip.uuid, se = this._actionsByClip[oe];
            this._bindAction(Z, se && se.knownActions[0]), this._addInactiveAction(Z, oe, te);
          }
          for (var Ae = Z._propertyBindings, ue = 0, fe = Ae.length; ue !== fe; ++ue) {
            var pe = Ae[ue];
            pe.useCount++ == 0 && (this._lendBinding(pe), pe.saveOriginalState());
          }
          this._lendAction(Z);
        }
      }, _deactivateAction: function(Z) {
        if (this._isActiveAction(Z)) {
          for (var te = Z._propertyBindings, oe = 0, se = te.length; oe !== se; ++oe) {
            var Ae = te[oe];
            --Ae.useCount == 0 && (Ae.restoreOriginalState(), this._takeBackBinding(Ae));
          }
          this._takeBackAction(Z);
        }
      }, _initMemoryManager: function() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        var Z = this;
        this.stats = { actions: { get total() {
          return Z._actions.length;
        }, get inUse() {
          return Z._nActiveActions;
        } }, bindings: { get total() {
          return Z._bindings.length;
        }, get inUse() {
          return Z._nActiveBindings;
        } }, controlInterpolants: { get total() {
          return Z._controlInterpolants.length;
        }, get inUse() {
          return Z._nActiveControlInterpolants;
        } } };
      }, _isActiveAction: function(Z) {
        var te = Z._cacheIndex;
        return te !== null && te < this._nActiveActions;
      }, _addInactiveAction: function(Z, te, oe) {
        var se = this._actions, Ae = this._actionsByClip, ue = Ae[te];
        if (ue === void 0)
          ue = { knownActions: [Z], actionByRoot: {} }, Z._byClipCacheIndex = 0, Ae[te] = ue;
        else {
          var fe = ue.knownActions;
          Z._byClipCacheIndex = fe.length, fe.push(Z);
        }
        Z._cacheIndex = se.length, se.push(Z), ue.actionByRoot[oe] = Z;
      }, _removeInactiveAction: function(Z) {
        var te = this._actions, oe = te[te.length - 1], se = Z._cacheIndex;
        oe._cacheIndex = se, te[se] = oe, te.pop(), Z._cacheIndex = null;
        var Ae = Z._clip.uuid, ue = this._actionsByClip, fe = ue[Ae], pe = fe.knownActions, ve = pe[pe.length - 1], xe = Z._byClipCacheIndex;
        ve._byClipCacheIndex = xe, pe[xe] = ve, pe.pop(), Z._byClipCacheIndex = null, delete fe.actionByRoot[(Z._localRoot || this._root).uuid], pe.length === 0 && delete ue[Ae], this._removeInactiveBindingsForAction(Z);
      }, _removeInactiveBindingsForAction: function(Z) {
        for (var te = Z._propertyBindings, oe = 0, se = te.length; oe !== se; ++oe) {
          var Ae = te[oe];
          --Ae.referenceCount == 0 && this._removeInactiveBinding(Ae);
        }
      }, _lendAction: function(Z) {
        var te = this._actions, oe = Z._cacheIndex, se = this._nActiveActions++, Ae = te[se];
        Z._cacheIndex = se, te[se] = Z, Ae._cacheIndex = oe, te[oe] = Ae;
      }, _takeBackAction: function(Z) {
        var te = this._actions, oe = Z._cacheIndex, se = --this._nActiveActions, Ae = te[se];
        Z._cacheIndex = se, te[se] = Z, Ae._cacheIndex = oe, te[oe] = Ae;
      }, _addInactiveBinding: function(Z, te, oe) {
        var se = this._bindingsByRootAndName, Ae = se[te], ue = this._bindings;
        Ae === void 0 && (Ae = {}, se[te] = Ae), Ae[oe] = Z, Z._cacheIndex = ue.length, ue.push(Z);
      }, _removeInactiveBinding: function(Z) {
        var te = this._bindings, oe = Z.binding, se = oe.rootNode.uuid, Ae = oe.path, ue = this._bindingsByRootAndName, fe = ue[se], pe = te[te.length - 1], ve = Z._cacheIndex;
        pe._cacheIndex = ve, te[ve] = pe, te.pop(), delete fe[Ae];
        e: {
          for (var xe in fe)
            break e;
          delete ue[se];
        }
      }, _lendBinding: function(Z) {
        var te = this._bindings, oe = Z._cacheIndex, se = this._nActiveBindings++, Ae = te[se];
        Z._cacheIndex = se, te[se] = Z, Ae._cacheIndex = oe, te[oe] = Ae;
      }, _takeBackBinding: function(Z) {
        var te = this._bindings, oe = Z._cacheIndex, se = --this._nActiveBindings, Ae = te[se];
        Z._cacheIndex = se, te[se] = Z, Ae._cacheIndex = oe, te[oe] = Ae;
      }, _lendControlInterpolant: function() {
        var Z = this._controlInterpolants, te = this._nActiveControlInterpolants++, oe = Z[te];
        return oe === void 0 && ((oe = new gc(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = te, Z[te] = oe), oe;
      }, _takeBackControlInterpolant: function(Z) {
        var te = this._controlInterpolants, oe = Z.__cacheIndex, se = --this._nActiveControlInterpolants, Ae = te[se];
        Z.__cacheIndex = se, te[se] = Z, Ae.__cacheIndex = oe, te[oe] = Ae;
      }, _controlInterpolantsResultBuffer: new Float32Array(1), clipAction: function(Z, te) {
        var oe = te || this._root, se = oe.uuid, Ae = typeof Z == "string" ? To.findByName(oe, Z) : Z, ue = Ae !== null ? Ae.uuid : Z, fe = this._actionsByClip[ue], pe = null;
        if (fe !== void 0) {
          var ve = fe.actionByRoot[se];
          if (ve !== void 0)
            return ve;
          pe = fe.knownActions[0], Ae === null && (Ae = pe._clip);
        }
        if (Ae === null)
          return null;
        var xe = new Nu(this, Ae, te);
        return this._bindAction(xe, pe), this._addInactiveAction(xe, ue, se), xe;
      }, existingAction: function(Z, te) {
        var oe = te || this._root, se = oe.uuid, Ae = typeof Z == "string" ? To.findByName(oe, Z) : Z, ue = Ae ? Ae.uuid : Z, fe = this._actionsByClip[ue];
        return fe !== void 0 && fe.actionByRoot[se] || null;
      }, stopAllAction: function() {
        var Z = this._actions, te = this._nActiveActions, oe = this._bindings, se = this._nActiveBindings;
        this._nActiveActions = 0, this._nActiveBindings = 0;
        for (var Ae = 0; Ae !== te; ++Ae)
          Z[Ae].reset();
        for (Ae = 0; Ae !== se; ++Ae)
          oe[Ae].useCount = 0;
        return this;
      }, update: function(Z) {
        Z *= this.timeScale;
        for (var te = this._actions, oe = this._nActiveActions, se = this.time += Z, Ae = Math.sign(Z), ue = this._accuIndex ^= 1, fe = 0; fe !== oe; ++fe)
          te[fe]._update(se, Z, Ae, ue);
        var pe = this._bindings, ve = this._nActiveBindings;
        for (fe = 0; fe !== ve; ++fe)
          pe[fe].apply(ue);
        return this;
      }, getRoot: function() {
        return this._root;
      }, uncacheClip: function(Z) {
        var te = this._actions, oe = Z.uuid, se = this._actionsByClip, Ae = se[oe];
        if (Ae !== void 0) {
          for (var ue = Ae.knownActions, fe = 0, pe = ue.length; fe !== pe; ++fe) {
            var ve = ue[fe];
            this._deactivateAction(ve);
            var xe = ve._cacheIndex, Me = te[te.length - 1];
            ve._cacheIndex = null, ve._byClipCacheIndex = null, Me._cacheIndex = xe, te[xe] = Me, te.pop(), this._removeInactiveBindingsForAction(ve);
          }
          delete se[oe];
        }
      }, uncacheRoot: function(Z) {
        var te = Z.uuid, oe = this._actionsByClip;
        for (var se in oe) {
          var Ae = oe[se].actionByRoot[te];
          Ae !== void 0 && (this._deactivateAction(Ae), this._removeInactiveAction(Ae));
        }
        var ue = this._bindingsByRootAndName[te];
        if (ue !== void 0)
          for (var fe in ue) {
            var pe = ue[fe];
            pe.restoreOriginalState(), this._removeInactiveBinding(pe);
          }
      }, uncacheAction: function(Z, te) {
        var oe = this.existingAction(Z, te);
        oe !== null && (this._deactivateAction(oe), this._removeInactiveAction(oe));
      } }), rA.prototype.clone = function() {
        return new rA(this.value.clone === void 0 ? this.value : this.value.clone());
      }, kA.prototype = Object.assign(Object.create(an.prototype), { constructor: kA, isInstancedBufferGeometry: !0, copy: function(Z) {
        return an.prototype.copy.call(this, Z), this.maxInstancedCount = Z.maxInstancedCount, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      } }), FA.prototype = Object.assign(Object.create(Qa.prototype), { constructor: FA, isInstancedInterleavedBuffer: !0, copy: function(Z) {
        return Qa.prototype.copy.call(this, Z), this.meshPerAttribute = Z.meshPerAttribute, this;
      } }), GA.prototype = Object.assign(Object.create(dn.prototype), { constructor: GA, isInstancedBufferAttribute: !0, copy: function(Z) {
        return dn.prototype.copy.call(this, Z), this.meshPerAttribute = Z.meshPerAttribute, this;
      } }), Object.assign(ku.prototype, { linePrecision: 1, set: function(Z, te) {
        this.ray.set(Z, te);
      }, setFromCamera: function(Z, te) {
        te && te.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(te.matrixWorld), this.ray.direction.set(Z.x, Z.y, 0.5).unproject(te).sub(this.ray.origin).normalize()) : te && te.isOrthographicCamera ? (this.ray.origin.set(Z.x, Z.y, (te.near + te.far) / (te.near - te.far)).unproject(te), this.ray.direction.set(0, 0, -1).transformDirection(te.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.");
      }, intersectObject: function(Z, te, oe) {
        var se = oe || [];
        return OA(Z, this, se, te), se.sort(Fu), se;
      }, intersectObjects: function(Z, te, oe) {
        var se = oe || [];
        if (Array.isArray(Z) === !1)
          return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), se;
        for (var Ae = 0, ue = Z.length; Ae < ue; Ae++)
          OA(Z[Ae], this, se, te);
        return se.sort(Fu), se;
      } }), Object.assign(Gu.prototype, { start: function() {
        this.startTime = (typeof performance > "u" ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
      }, stop: function() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
      }, getElapsedTime: function() {
        return this.getDelta(), this.elapsedTime;
      }, getDelta: function() {
        var Z = 0;
        if (this.autoStart && !this.running)
          return this.start(), 0;
        if (this.running) {
          var te = (typeof performance > "u" ? Date : performance).now();
          Z = (te - this.oldTime) / 1e3, this.oldTime = te, this.elapsedTime += Z;
        }
        return Z;
      } }), Object.assign(Ou.prototype, { set: function(Z, te, oe) {
        return this.radius = Z, this.phi = te, this.theta = oe, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.radius = Z.radius, this.phi = Z.phi, this.theta = Z.theta, this;
      }, makeSafe: function() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
      }, setFromVector3: function(Z) {
        return this.radius = Z.length(), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(Z.x, Z.z), this.phi = Math.acos(Mn.clamp(Z.y / this.radius, -1, 1))), this;
      } }), Object.assign(Pu.prototype, { set: function(Z, te, oe) {
        return this.radius = Z, this.theta = te, this.y = oe, this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.radius = Z.radius, this.theta = Z.theta, this.y = Z.y, this;
      }, setFromVector3: function(Z) {
        return this.radius = Math.sqrt(Z.x * Z.x + Z.z * Z.z), this.theta = Math.atan2(Z.x, Z.z), this.y = Z.y, this;
      } }), Object.assign(PA.prototype, { set: function(Z, te) {
        return this.min.copy(Z), this.max.copy(te), this;
      }, setFromPoints: function(Z) {
        this.makeEmpty();
        for (var te = 0, oe = Z.length; te < oe; te++)
          this.expandByPoint(Z[te]);
        return this;
      }, setFromCenterAndSize: function() {
        var Z = new Qr();
        return function(te, oe) {
          var se = Z.copy(oe).multiplyScalar(0.5);
          return this.min.copy(te).sub(se), this.max.copy(te).add(se), this;
        };
      }(), clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.min.copy(Z.min), this.max.copy(Z.max), this;
      }, makeEmpty: function() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
      }, isEmpty: function() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
      }, getCenter: function(Z) {
        return Z === void 0 && (console.warn("THREE.Box2: .getCenter() target is now required"), Z = new Qr()), this.isEmpty() ? Z.set(0, 0) : Z.addVectors(this.min, this.max).multiplyScalar(0.5);
      }, getSize: function(Z) {
        return Z === void 0 && (console.warn("THREE.Box2: .getSize() target is now required"), Z = new Qr()), this.isEmpty() ? Z.set(0, 0) : Z.subVectors(this.max, this.min);
      }, expandByPoint: function(Z) {
        return this.min.min(Z), this.max.max(Z), this;
      }, expandByVector: function(Z) {
        return this.min.sub(Z), this.max.add(Z), this;
      }, expandByScalar: function(Z) {
        return this.min.addScalar(-Z), this.max.addScalar(Z), this;
      }, containsPoint: function(Z) {
        return !(Z.x < this.min.x || Z.x > this.max.x || Z.y < this.min.y || Z.y > this.max.y);
      }, containsBox: function(Z) {
        return this.min.x <= Z.min.x && Z.max.x <= this.max.x && this.min.y <= Z.min.y && Z.max.y <= this.max.y;
      }, getParameter: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Box2: .getParameter() target is now required"), te = new Qr()), te.set((Z.x - this.min.x) / (this.max.x - this.min.x), (Z.y - this.min.y) / (this.max.y - this.min.y));
      }, intersectsBox: function(Z) {
        return !(Z.max.x < this.min.x || Z.min.x > this.max.x || Z.max.y < this.min.y || Z.min.y > this.max.y);
      }, clampPoint: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Box2: .clampPoint() target is now required"), te = new Qr()), te.copy(Z).clamp(this.min, this.max);
      }, distanceToPoint: function() {
        var Z = new Qr();
        return function(te) {
          return Z.copy(te).clamp(this.min, this.max).sub(te).length();
        };
      }(), intersect: function(Z) {
        return this.min.max(Z.min), this.max.min(Z.max), this;
      }, union: function(Z) {
        return this.min.min(Z.min), this.max.max(Z.max), this;
      }, translate: function(Z) {
        return this.min.add(Z), this.max.add(Z), this;
      }, equals: function(Z) {
        return Z.min.equals(this.min) && Z.max.equals(this.max);
      } }), Object.assign(UA.prototype, { set: function(Z, te) {
        return this.start.copy(Z), this.end.copy(te), this;
      }, clone: function() {
        return new this.constructor().copy(this);
      }, copy: function(Z) {
        return this.start.copy(Z.start), this.end.copy(Z.end), this;
      }, getCenter: function(Z) {
        return Z === void 0 && (console.warn("THREE.Line3: .getCenter() target is now required"), Z = new Bt()), Z.addVectors(this.start, this.end).multiplyScalar(0.5);
      }, delta: function(Z) {
        return Z === void 0 && (console.warn("THREE.Line3: .delta() target is now required"), Z = new Bt()), Z.subVectors(this.end, this.start);
      }, distanceSq: function() {
        return this.start.distanceToSquared(this.end);
      }, distance: function() {
        return this.start.distanceTo(this.end);
      }, at: function(Z, te) {
        return te === void 0 && (console.warn("THREE.Line3: .at() target is now required"), te = new Bt()), this.delta(te).multiplyScalar(Z).add(this.start);
      }, closestPointToPointParameter: function() {
        var Z = new Bt(), te = new Bt();
        return function(oe, se) {
          Z.subVectors(oe, this.start), te.subVectors(this.end, this.start);
          var Ae = te.dot(te), ue = te.dot(Z) / Ae;
          return se && (ue = Mn.clamp(ue, 0, 1)), ue;
        };
      }(), closestPointToPoint: function(Z, te, oe) {
        var se = this.closestPointToPointParameter(Z, te);
        return oe === void 0 && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), oe = new Bt()), this.delta(oe).multiplyScalar(se).add(this.start);
      }, applyMatrix4: function(Z) {
        return this.start.applyMatrix4(Z), this.end.applyMatrix4(Z), this;
      }, equals: function(Z) {
        return Z.start.equals(this.start) && Z.end.equals(this.end);
      } }), yc.prototype = Object.create(Cr.prototype), yc.prototype.constructor = yc, yc.prototype.isImmediateRenderObject = !0, Bc.prototype = Object.create(gi.prototype), Bc.prototype.constructor = Bc, Bc.prototype.update = function() {
        var Z = new Bt(), te = new Bt(), oe = new qi();
        return function() {
          var se = ["a", "b", "c"];
          this.object.updateMatrixWorld(!0), oe.getNormalMatrix(this.object.matrixWorld);
          var Ae = this.object.matrixWorld, ue = this.geometry.attributes.position, fe = this.object.geometry;
          if (fe && fe.isGeometry)
            for (var pe = fe.vertices, ve = fe.faces, xe = 0, Me = 0, Ne = ve.length; Me < Ne; Me++)
              for (var Qe = ve[Me], Ue = 0, Je = Qe.vertexNormals.length; Ue < Je; Ue++) {
                var rt = pe[Qe[se[Ue]]], it = Qe.vertexNormals[Ue];
                Z.copy(rt).applyMatrix4(Ae), te.copy(it).applyMatrix3(oe).normalize().multiplyScalar(this.size).add(Z), ue.setXYZ(xe, Z.x, Z.y, Z.z), xe += 1, ue.setXYZ(xe, te.x, te.y, te.z), xe += 1;
              }
          else if (fe && fe.isBufferGeometry) {
            var ft = fe.attributes.position, vt = fe.attributes.normal;
            for (xe = 0, Ue = 0, Je = ft.count; Ue < Je; Ue++)
              Z.set(ft.getX(Ue), ft.getY(Ue), ft.getZ(Ue)).applyMatrix4(Ae), te.set(vt.getX(Ue), vt.getY(Ue), vt.getZ(Ue)), te.applyMatrix3(oe).normalize().multiplyScalar(this.size).add(Z), ue.setXYZ(xe, Z.x, Z.y, Z.z), xe += 1, ue.setXYZ(xe, te.x, te.y, te.z), xe += 1;
          }
          ue.needsUpdate = !0;
        };
      }(), ws.prototype = Object.create(Cr.prototype), ws.prototype.constructor = ws, ws.prototype.dispose = function() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
      }, ws.prototype.update = function() {
        var Z = new Bt(), te = new Bt();
        return function() {
          this.light.updateMatrixWorld();
          var oe = this.light.distance ? this.light.distance : 1e3, se = oe * Math.tan(this.light.angle);
          this.cone.scale.set(se, se, oe), Z.setFromMatrixPosition(this.light.matrixWorld), te.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(te.sub(Z)), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
        };
      }(), _s.prototype = Object.create(gi.prototype), _s.prototype.constructor = _s, _s.prototype.updateMatrixWorld = function() {
        var Z = new Bt(), te = new yn(), oe = new yn();
        return function(se) {
          var Ae = this.bones, ue = this.geometry, fe = ue.getAttribute("position");
          oe.getInverse(this.root.matrixWorld);
          for (var pe = 0, ve = 0; pe < Ae.length; pe++) {
            var xe = Ae[pe];
            xe.parent && xe.parent.isBone && (te.multiplyMatrices(oe, xe.matrixWorld), Z.setFromMatrixPosition(te), fe.setXYZ(ve, Z.x, Z.y, Z.z), te.multiplyMatrices(oe, xe.parent.matrixWorld), Z.setFromMatrixPosition(te), fe.setXYZ(ve + 1, Z.x, Z.y, Z.z), ve += 2);
          }
          ue.getAttribute("position").needsUpdate = !0, Cr.prototype.updateMatrixWorld.call(this, se);
        };
      }(), Qs.prototype = Object.create(lo.prototype), Qs.prototype.constructor = Qs, Qs.prototype.dispose = function() {
        this.geometry.dispose(), this.material.dispose();
      }, Qs.prototype.update = function() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
      }, Ss.prototype = Object.create(Cr.prototype), Ss.prototype.constructor = Ss, Ss.prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, Ss.prototype.update = function() {
        var Z = 0.5 * this.light.width, te = 0.5 * this.light.height, oe = this.line.geometry.attributes.position, se = oe.array;
        se[0] = Z, se[1] = -te, se[2] = 0, se[3] = Z, se[4] = te, se[5] = 0, se[6] = -Z, se[7] = te, se[8] = 0, se[9] = -Z, se[10] = -te, se[11] = 0, se[12] = Z, se[13] = -te, se[14] = 0, oe.needsUpdate = !0, this.color !== void 0 ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color);
      }, Ts.prototype = Object.create(Cr.prototype), Ts.prototype.constructor = Ts, Ts.prototype.dispose = function() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
      }, Ts.prototype.update = function() {
        var Z = new Bt(), te = new ze(), oe = new ze();
        return function() {
          var se = this.children[0];
          if (this.color !== void 0)
            this.material.color.set(this.color);
          else {
            var Ae = se.geometry.getAttribute("color");
            te.copy(this.light.color), oe.copy(this.light.groundColor);
            for (var ue = 0, fe = Ae.count; ue < fe; ue++) {
              var pe = ue < fe / 2 ? te : oe;
              Ae.setXYZ(ue, pe.r, pe.g, pe.b);
            }
            Ae.needsUpdate = !0;
          }
          se.lookAt(Z.setFromMatrixPosition(this.light.matrixWorld).negate());
        };
      }(), vc.prototype = Object.create(gi.prototype), vc.prototype.constructor = vc, nA.prototype = Object.create(gi.prototype), nA.prototype.constructor = nA, Cc.prototype = Object.create(gi.prototype), Cc.prototype.constructor = Cc, Cc.prototype.update = function() {
        var Z = new Bt(), te = new Bt(), oe = new qi();
        return function() {
          this.object.updateMatrixWorld(!0), oe.getNormalMatrix(this.object.matrixWorld);
          for (var se = this.object.matrixWorld, Ae = this.geometry.attributes.position, ue = this.object.geometry, fe = ue.vertices, pe = ue.faces, ve = 0, xe = 0, Me = pe.length; xe < Me; xe++) {
            var Ne = pe[xe], Qe = Ne.normal;
            Z.copy(fe[Ne.a]).add(fe[Ne.b]).add(fe[Ne.c]).divideScalar(3).applyMatrix4(se), te.copy(Qe).applyMatrix3(oe).normalize().multiplyScalar(this.size).add(Z), Ae.setXYZ(ve, Z.x, Z.y, Z.z), ve += 1, Ae.setXYZ(ve, te.x, te.y, te.z), ve += 1;
          }
          Ae.needsUpdate = !0;
        };
      }(), Rs.prototype = Object.create(Cr.prototype), Rs.prototype.constructor = Rs, Rs.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
      }, Rs.prototype.update = function() {
        var Z = new Bt(), te = new Bt(), oe = new Bt();
        return function() {
          Z.setFromMatrixPosition(this.light.matrixWorld), te.setFromMatrixPosition(this.light.target.matrixWorld), oe.subVectors(te, Z), this.lightPlane.lookAt(oe), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(oe), this.targetLine.scale.z = oe.length();
        };
      }(), Ic.prototype = Object.create(gi.prototype), Ic.prototype.constructor = Ic, Ic.prototype.update = function() {
        var Z, te, oe = new Bt(), se = new Jn();
        function Ae(ue, fe, pe, ve) {
          oe.set(fe, pe, ve).unproject(se);
          var xe = te[ue];
          if (xe !== void 0)
            for (var Me = Z.getAttribute("position"), Ne = 0, Qe = xe.length; Ne < Qe; Ne++)
              Me.setXYZ(xe[Ne], oe.x, oe.y, oe.z);
        }
        return function() {
          Z = this.geometry, te = this.pointMap, se.projectionMatrix.copy(this.camera.projectionMatrix), Ae("c", 0, 0, -1), Ae("t", 0, 0, 1), Ae("n1", -1, -1, -1), Ae("n2", 1, -1, -1), Ae("n3", -1, 1, -1), Ae("n4", 1, 1, -1), Ae("f1", -1, -1, 1), Ae("f2", 1, -1, 1), Ae("f3", -1, 1, 1), Ae("f4", 1, 1, 1), Ae("u1", 0.7, 1.1, -1), Ae("u2", -0.7, 1.1, -1), Ae("u3", 0, 2, -1), Ae("cf1", -1, 0, 1), Ae("cf2", 1, 0, 1), Ae("cf3", 0, -1, 1), Ae("cf4", 0, 1, 1), Ae("cn1", -1, 0, -1), Ae("cn2", 1, 0, -1), Ae("cn3", 0, -1, -1), Ae("cn4", 0, 1, -1), Z.getAttribute("position").needsUpdate = !0;
        };
      }(), ja.prototype = Object.create(gi.prototype), ja.prototype.constructor = ja, ja.prototype.update = function() {
        var Z = new yo();
        return function(te) {
          if (te !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Z.setFromObject(this.object), !Z.isEmpty()) {
            var oe = Z.min, se = Z.max, Ae = this.geometry.attributes.position, ue = Ae.array;
            ue[0] = se.x, ue[1] = se.y, ue[2] = se.z, ue[3] = oe.x, ue[4] = se.y, ue[5] = se.z, ue[6] = oe.x, ue[7] = oe.y, ue[8] = se.z, ue[9] = se.x, ue[10] = oe.y, ue[11] = se.z, ue[12] = se.x, ue[13] = se.y, ue[14] = oe.z, ue[15] = oe.x, ue[16] = se.y, ue[17] = oe.z, ue[18] = oe.x, ue[19] = oe.y, ue[20] = oe.z, ue[21] = se.x, ue[22] = oe.y, ue[23] = oe.z, Ae.needsUpdate = !0, this.geometry.computeBoundingSphere();
          }
        };
      }(), ja.prototype.setFromObject = function(Z) {
        return this.object = Z, this.update(), this;
      }, xc.prototype = Object.create(gi.prototype), xc.prototype.constructor = xc, xc.prototype.updateMatrixWorld = function(Z) {
        var te = this.box;
        te.isEmpty() || (te.getCenter(this.position), te.getSize(this.scale), this.scale.multiplyScalar(0.5), Cr.prototype.updateMatrixWorld.call(this, Z));
      }, bc.prototype = Object.create(fo.prototype), bc.prototype.constructor = bc, bc.prototype.updateMatrixWorld = function(Z) {
        var te = -this.plane.constant;
        Math.abs(te) < 1e-8 && (te = 1e-8), this.scale.set(0.5 * this.size, 0.5 * this.size, te), this.children[0].material.side = te < 0 ? Se : He, this.lookAt(this.plane.normal), Cr.prototype.updateMatrixWorld.call(this, Z);
      }, Ya.prototype = Object.create(Cr.prototype), Ya.prototype.constructor = Ya, Ya.prototype.setDirection = function() {
        var Z, te = new Bt();
        return function(oe) {
          oe.y > 0.99999 ? this.quaternion.set(0, 0, 0, 1) : oe.y < -0.99999 ? this.quaternion.set(1, 0, 0, 0) : (te.set(oe.z, 0, -oe.x).normalize(), Z = Math.acos(oe.y), this.quaternion.setFromAxisAngle(te, Z));
        };
      }(), Ya.prototype.setLength = function(Z, te, oe) {
        te === void 0 && (te = 0.2 * Z), oe === void 0 && (oe = 0.2 * te), this.line.scale.set(1, Math.max(0, Z - te), 1), this.line.updateMatrix(), this.cone.scale.set(oe, te, oe), this.cone.position.y = Z, this.cone.updateMatrix();
      }, Ya.prototype.setColor = function(Z) {
        this.line.material.color.copy(Z), this.cone.material.color.copy(Z);
      }, wc.prototype = Object.create(gi.prototype), wc.prototype.constructor = wc;
      var Ul = 0, Hl = 1;
      function Dl(Z) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), Z;
      }
      function ql(Z) {
        return Z === void 0 && (Z = []), console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), Z.isMultiMaterial = !0, Z.materials = Z, Z.clone = function() {
          return Z.slice();
        }, Z;
      }
      function $l(Z, te) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new os(Z, te);
      }
      function jl(Z) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new Ds(Z);
      }
      function Yl(Z, te) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new os(Z, te);
      }
      function Vl(Z) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new ko(Z);
      }
      function Ll(Z) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new ko(Z);
      }
      function zl(Z) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new ko(Z);
      }
      function Jl(Z, te, oe) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new Bt(Z, te, oe);
      }
      function Wl(Z, te) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new dn(Z, te).setDynamic(!0);
      }
      function Kl(Z, te) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new Yo(Z, te);
      }
      function Zl(Z, te) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new oa(Z, te);
      }
      function Xl(Z, te) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new ha(Z, te);
      }
      function ed(Z, te) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new Ia(Z, te);
      }
      function td(Z, te) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Vo(Z, te);
      }
      function rd(Z, te) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new xa(Z, te);
      }
      function nd(Z, te) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Lo(Z, te);
      }
      function id(Z, te) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new Yr(Z, te);
      }
      function od(Z, te) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new Gs(Z, te);
      }
      function Uu(Z) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), Xi.call(this, Z), this.type = "catmullrom", this.closed = !0;
      }
      function Hu(Z) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), Xi.call(this, Z), this.type = "catmullrom";
      }
      function HA(Z) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), Xi.call(this, Z), this.type = "catmullrom";
      }
      function ad(Z) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new wc(Z);
      }
      function sd(Z, te) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new ja(Z, te);
      }
      function cd(Z, te) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new gi(new Es(Z.geometry), new Ai({ color: te !== void 0 ? te : 16777215 }));
      }
      function Ad(Z, te) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new gi(new ss(Z.geometry), new Ai({ color: te !== void 0 ? te : 16777215 }));
      }
      function ud(Z) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new Go(Z);
      }
      function ld(Z) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new hA(Z);
      }
      Bn.create = function(Z, te) {
        return console.log("THREE.Curve.create() has been deprecated"), Z.prototype = Object.create(Bn.prototype), Z.prototype.constructor = Z, Z.prototype.getPoint = te, Z;
      }, Object.assign(ua.prototype, { createPointsGeometry: function(Z) {
        console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var te = this.getPoints(Z);
        return this.createGeometry(te);
      }, createSpacedPointsGeometry: function(Z) {
        console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var te = this.getSpacedPoints(Z);
        return this.createGeometry(te);
      }, createGeometry: function(Z) {
        console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        for (var te = new Xr(), oe = 0, se = Z.length; oe < se; oe++) {
          var Ae = Z[oe];
          te.vertices.push(new Bt(Ae.x, Ae.y, Ae.z || 0));
        }
        return te;
      } }), Object.assign(Do.prototype, { fromPoints: function(Z) {
        console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(Z);
      } }), Uu.prototype = Object.create(Xi.prototype), Hu.prototype = Object.create(Xi.prototype), HA.prototype = Object.create(Xi.prototype), Object.assign(HA.prototype, { initFromArray: function() {
        console.error("THREE.Spline: .initFromArray() has been removed.");
      }, getControlPointsArray: function() {
        console.error("THREE.Spline: .getControlPointsArray() has been removed.");
      }, reparametrizeByArcLength: function() {
        console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.");
      } }), vc.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
      }, _s.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
      }, Object.assign(xs.prototype, { extractUrlBase: function(Z) {
        return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), vA.extractUrlBase(Z);
      } }), Object.assign(PA.prototype, { center: function(Z) {
        return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(Z);
      }, empty: function() {
        return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(Z) {
        return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Z);
      }, size: function(Z) {
        return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(Z);
      } }), Object.assign(yo.prototype, { center: function(Z) {
        return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(Z);
      }, empty: function() {
        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
      }, isIntersectionBox: function(Z) {
        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Z);
      }, isIntersectionSphere: function(Z) {
        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(Z);
      }, size: function(Z) {
        return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(Z);
      } }), UA.prototype.center = function(Z) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(Z);
      }, Object.assign(Mn, { random16: function() {
        return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random();
      }, nearestPowerOfTwo: function(Z) {
        return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), Mn.floorPowerOfTwo(Z);
      }, nextPowerOfTwo: function(Z) {
        return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), Mn.ceilPowerOfTwo(Z);
      } }), Object.assign(qi.prototype, { flattenToArrayOffset: function(Z, te) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(Z, te);
      }, multiplyVector3: function(Z) {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), Z.applyMatrix3(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
      }, applyToBuffer: function(Z) {
        return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(Z);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
      } }), Object.assign(yn.prototype, { extractPosition: function(Z) {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(Z);
      }, flattenToArrayOffset: function(Z, te) {
        return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(Z, te);
      }, getPosition: function() {
        var Z;
        return function() {
          return Z === void 0 && (Z = new Bt()), console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), Z.setFromMatrixColumn(this, 3);
        };
      }(), setRotationFromQuaternion: function(Z) {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(Z);
      }, multiplyToArray: function() {
        console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
      }, multiplyVector3: function(Z) {
        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), Z.applyMatrix4(this);
      }, multiplyVector4: function(Z) {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), Z.applyMatrix4(this);
      }, multiplyVector3Array: function() {
        console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
      }, rotateAxis: function(Z) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), Z.transformDirection(this);
      }, crossVector: function(Z) {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), Z.applyMatrix4(this);
      }, translate: function() {
        console.error("THREE.Matrix4: .translate() has been removed.");
      }, rotateX: function() {
        console.error("THREE.Matrix4: .rotateX() has been removed.");
      }, rotateY: function() {
        console.error("THREE.Matrix4: .rotateY() has been removed.");
      }, rotateZ: function() {
        console.error("THREE.Matrix4: .rotateZ() has been removed.");
      }, rotateByAxis: function() {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
      }, applyToBuffer: function(Z) {
        return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(Z);
      }, applyToVector3Array: function() {
        console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
      }, makeFrustum: function(Z, te, oe, se, Ae, ue) {
        return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(Z, te, se, oe, Ae, ue);
      } }), uo.prototype.isIntersectionLine = function(Z) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(Z);
      }, hi.prototype.multiplyVector3 = function(Z) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), Z.applyQuaternion(this);
      }, Object.assign(_a.prototype, { isIntersectionBox: function(Z) {
        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(Z);
      }, isIntersectionPlane: function(Z) {
        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(Z);
      }, isIntersectionSphere: function(Z) {
        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(Z);
      } }), Object.assign(vo.prototype, { area: function() {
        return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
      }, barycoordFromPoint: function(Z, te) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(Z, te);
      }, midpoint: function(Z) {
        return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(Z);
      }, normal: function(Z) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(Z);
      }, plane: function(Z) {
        return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(Z);
      } }), Object.assign(vo, { barycoordFromPoint: function(Z, te, oe, se, Ae) {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), vo.getBarycoord(Z, te, oe, se, Ae);
      }, normal: function(Z, te, oe, se) {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), vo.getNormal(Z, te, oe, se);
      } }), Object.assign(ya.prototype, { extractAllPoints: function(Z) {
        return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(Z);
      }, extrude: function(Z) {
        return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new Ra(this, Z);
      }, makeGeometry: function(Z) {
        return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Na(this, Z);
      } }), Object.assign(Qr.prototype, { fromAttribute: function(Z, te, oe) {
        return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Z, te, oe);
      }, distanceToManhattan: function(Z) {
        return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(Z);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(Bt.prototype, { setEulerFromRotationMatrix: function() {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
      }, setEulerFromQuaternion: function() {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
      }, getPositionFromMatrix: function(Z) {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(Z);
      }, getScaleFromMatrix: function(Z) {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(Z);
      }, getColumnFromMatrix: function(Z, te) {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(te, Z);
      }, applyProjection: function(Z) {
        return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(Z);
      }, fromAttribute: function(Z, te, oe) {
        return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Z, te, oe);
      }, distanceToManhattan: function(Z) {
        return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(Z);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(Kn.prototype, { fromAttribute: function(Z, te, oe) {
        return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(Z, te, oe);
      }, lengthManhattan: function() {
        return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
      } }), Object.assign(Xr.prototype, { computeTangents: function() {
        console.error("THREE.Geometry: .computeTangents() has been removed.");
      }, computeLineDistances: function() {
        console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.");
      } }), Object.assign(Cr.prototype, { getChildByName: function(Z) {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(Z);
      }, renderDepth: function() {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
      }, translate: function(Z, te) {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(te, Z);
      }, getWorldRotation: function() {
        console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
      } }), Object.defineProperties(Cr.prototype, { eulerOrder: { get: function() {
        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
      }, set: function(Z) {
        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = Z;
      } }, useQuaternion: { get: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      }, set: function() {
        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
      } } }), Object.defineProperties(qs.prototype, { objects: { get: function() {
        return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels;
      } } }), Object.defineProperty($s.prototype, "useVertexTexture", { get: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      }, set: function() {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.");
      } }), Object.defineProperty(Bn.prototype, "__arcLengthDivisions", { get: function() {
        return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions;
      }, set: function(Z) {
        console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = Z;
      } }), Si.prototype.setLens = function(Z, te) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), te !== void 0 && (this.filmGauge = te), this.setFocalLength(Z);
      }, Object.defineProperties(wi.prototype, { onlyShadow: { set: function() {
        console.warn("THREE.Light: .onlyShadow has been removed.");
      } }, shadowCameraFov: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = Z;
      } }, shadowCameraLeft: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = Z;
      } }, shadowCameraRight: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = Z;
      } }, shadowCameraTop: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = Z;
      } }, shadowCameraBottom: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = Z;
      } }, shadowCameraNear: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = Z;
      } }, shadowCameraFar: { set: function(Z) {
        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = Z;
      } }, shadowCameraVisible: { set: function() {
        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
      } }, shadowBias: { set: function(Z) {
        console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = Z;
      } }, shadowDarkness: { set: function() {
        console.warn("THREE.Light: .shadowDarkness has been removed.");
      } }, shadowMapWidth: { set: function(Z) {
        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = Z;
      } }, shadowMapHeight: { set: function(Z) {
        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = Z;
      } } }), Object.defineProperties(dn.prototype, { length: { get: function() {
        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
      } }, copyIndicesArray: function() {
        console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
      } }), Object.assign(an.prototype, { addIndex: function(Z) {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(Z);
      }, addDrawCall: function(Z, te, oe) {
        oe !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(Z, te);
      }, clearDrawCalls: function() {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
      }, computeTangents: function() {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
      }, computeOffsets: function() {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
      } }), Object.defineProperties(an.prototype, { drawcalls: { get: function() {
        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
      } }, offsets: { get: function() {
        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
      } } }), Object.assign(zo.prototype, { getArrays: function() {
        console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.");
      }, addShapeList: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.");
      }, addShape: function() {
        console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.");
      } }), Object.defineProperties(rA.prototype, { dynamic: { set: function() {
        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");
      } }, onUpdate: { value: function() {
        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
      } } }), Object.defineProperties(Un.prototype, { wrapAround: { get: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      }, set: function() {
        console.warn("THREE.Material: .wrapAround has been removed.");
      } }, wrapRGB: { get: function() {
        return console.warn("THREE.Material: .wrapRGB has been removed."), new ze();
      } }, shading: { get: function() {
        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
      }, set: function(Z) {
        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = Z === Fe;
      } } }), Object.defineProperties(Fo.prototype, { metal: { get: function() {
        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1;
      }, set: function() {
        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
      } } }), Object.defineProperties(So.prototype, { derivatives: { get: function() {
        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
      }, set: function(Z) {
        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = Z;
      } } }), Object.assign(AA.prototype, { animate: function(Z) {
        console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(Z);
      }, getCurrentRenderTarget: function() {
        return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
      }, getMaxAnisotropy: function() {
        return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
      }, getPrecision: function() {
        return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
      }, resetGLState: function() {
        return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
      }, supportsFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
      }, supportsHalfFloatTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
      }, supportsStandardDerivatives: function() {
        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
      }, supportsCompressedTextureS3TC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
      }, supportsCompressedTexturePVRTC: function() {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
      }, supportsBlendMinMax: function() {
        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
      }, supportsVertexTextures: function() {
        return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
      }, supportsInstancedArrays: function() {
        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
      }, enableScissorTest: function(Z) {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(Z);
      }, initMaterial: function() {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
      }, addPrePlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
      }, addPostPlugin: function() {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
      }, updateShadowMap: function() {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
      }, setFaceCulling: function() {
        console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
      } }), Object.defineProperties(AA.prototype, { shadowMapEnabled: { get: function() {
        return this.shadowMap.enabled;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = Z;
      } }, shadowMapType: { get: function() {
        return this.shadowMap.type;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = Z;
      } }, shadowMapCullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(uu.prototype, { cullFace: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
      } }, renderReverseSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
      } }, renderSingleSided: { get: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      }, set: function() {
        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
      } } }), Object.defineProperties(jo.prototype, { wrapS: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = Z;
      } }, wrapT: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = Z;
      } }, magFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = Z;
      } }, minFilter: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = Z;
      } }, anisotropy: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = Z;
      } }, offset: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = Z;
      } }, repeat: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = Z;
      } }, format: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = Z;
      } }, type: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = Z;
      } }, generateMipmaps: { get: function() {
        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
      }, set: function(Z) {
        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = Z;
      } } }), Object.defineProperties(du.prototype, { standing: { set: function() {
        console.warn("THREE.WebVRManager: .standing has been removed.");
      } } }), bs.prototype.load = function(Z) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var te = this;
        return new _A().load(Z, function(oe) {
          te.setBuffer(oe);
        }), this;
      }, TA.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
      }, Ec.prototype.updateCubeMap = function(Z, te) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(Z, te);
      };
      var dd = { merge: function(Z, te, oe) {
        var se;
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."), te.isMesh && (te.matrixAutoUpdate && te.updateMatrix(), se = te.matrix, te = te.geometry), Z.merge(te, se, oe);
      }, center: function(Z) {
        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), Z.center();
      } };
      function fd() {
        console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."), this.projectVector = function(Z, te) {
          console.warn("THREE.Projector: .projectVector() is now vector.project()."), Z.project(te);
        }, this.unprojectVector = function(Z, te) {
          console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), Z.unproject(te);
        }, this.pickingRay = function() {
          console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
        };
      }
      function hd() {
        console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"), this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), this.clear = function() {
        }, this.render = function() {
        }, this.setClearColor = function() {
        }, this.setSize = function() {
        };
      }
      No.crossOrigin = void 0, No.loadTexture = function(Z, te, oe, se) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var Ae = new Pc();
        Ae.setCrossOrigin(this.crossOrigin);
        var ue = Ae.load(Z, oe, void 0, se);
        return te && (ue.mapping = te), ue;
      }, No.loadTextureCube = function(Z, te, oe, se) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var Ae = new pA();
        Ae.setCrossOrigin(this.crossOrigin);
        var ue = Ae.load(Z, oe, void 0, se);
        return te && (ue.mapping = te), ue;
      }, No.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
      }, No.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
      };
      var pd = { createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      }, attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
      } };
      function gd() {
        console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js");
      }
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Oe(He, Se) {
          for (var Ge = 0; Ge < Se.length; Ge++) {
            var Fe = Se[Ge];
            Fe.enumerable = Fe.enumerable || !1, Fe.configurable = !0, "value" in Fe && (Fe.writable = !0), Object.defineProperty(He, Fe.key, Fe);
          }
        }
        return function(He, Se, Ge) {
          return Se && Oe(He.prototype, Se), Ge && Oe(He, Ge), He;
        };
      }(), ye = me(ae(5)), he = function(Oe) {
        if (Oe && Oe.__esModule)
          return Oe;
        var He = {};
        if (Oe != null)
          for (var Se in Oe)
            Object.prototype.hasOwnProperty.call(Oe, Se) && (He[Se] = Oe[Se]);
        return He.default = Oe, He;
      }(ae(0)), Be = ae(4), Ee = me(ae(3));
      function me(Oe) {
        return Oe && Oe.__esModule ? Oe : { default: Oe };
      }
      var ge = { directionligth: { create: function() {
        var Oe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, He = Oe.color, Se = Oe.position, Ge = Oe.castShadow, Fe = new he.DirectionalLight(new he.Color(He), 0.95);
        return Fe.position.set(Se.x, Se.y, Se.z), Fe.castShadow = Ge, Fe;
      } }, ambientlight: { create: function() {
        var Oe = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}).color;
        return new he.AmbientLight(new he.Color(Oe));
      } }, spotlight: { create: function() {
      } } }, be = function Oe(He) {
        if (He instanceof he.Mesh) {
          var Se = He.geometry;
          if (Se) {
            Se.boundingBox || Se.computeBoundingBox();
            var Ge = Se.boundingBox;
            return He.updateMatrix(), Ge.applyMatrix4(He.matrix), Ge;
          }
          return new he.Box3(new he.Vector3(), new he.Vector3());
        }
        var Fe, Pe = He.children.length, We = new he.Box3(new he.Vector3(), new he.Vector3());
        for (Fe = 0; Fe < Pe; Fe++) {
          var tt = Oe(He.children[Fe]);
          tt.min.x < We.min.x && (We.min.x = tt.min.x), tt.max.x > We.max.x && (We.max.x = tt.max.x), tt.min.y < We.min.y && (We.min.y = tt.min.y), tt.max.y > We.max.y && (We.max.y = tt.max.y), tt.min.z < We.min.z && (We.min.z = tt.min.z), tt.max.z > We.max.z && (We.max.z = tt.max.z);
        }
        return He.updateMatrix(), We.applyMatrix4(He.matrix), We;
      }, we = (le = ce = function(Oe) {
        function He(Se) {
          (function(Fe, Pe) {
            if (!(Fe instanceof Pe))
              throw new TypeError("Cannot call a class as a function");
          })(this, He);
          var Ge = function(Fe, Pe) {
            if (!Fe)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !Pe || typeof Pe != "object" && typeof Pe != "function" ? Fe : Pe;
          }(this, (He.__proto__ || Object.getPrototypeOf(He)).call(this, Se));
          return Ge.obj3d, Ge.src, Ge.state = { lights: [] }, Ge.lights = [], Ge.group = new he.Group(), Ge;
        }
        return function(Se, Ge) {
          if (typeof Ge != "function" && Ge !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof Ge);
          Se.prototype = Object.create(Ge && Ge.prototype, { constructor: { value: Se, enumerable: !1, writable: !0, configurable: !0 } }), Ge && (Object.setPrototypeOf ? Object.setPrototypeOf(Se, Ge) : Se.__proto__ = Ge);
        }(He, ye.default.Component), de(He, [{ key: "render", value: function() {
          var Se = this;
          return this.state.lights, ye.default.createElement("div", { ref: function(Ge) {
            return Se.$container = Ge;
          }, "data-loader": this.props.loader, style: this.style() });
        } }, { key: "componentDidUpdate", value: function() {
          var Se = this;
          if (!this.obj3d)
            return !1;
          var Ge = this.props, Fe = Ge.src, Pe = (Ge.background, Ge.width), We = Ge.height;
          this.camera.aspect = Pe / We, this.camera.updateProjectionMatrix(), this.renderer.setSize(Pe, We);
          var tt = this.props, Et = tt.enableKeys, Nt = tt.enableRotate, et = tt.enableZoom, mt = tt.enabled;
          Object.assign(this.orbit_controls, { enableKeys: Et, enablePan: !0, enableRotate: Nt, enableZoom: et, enabled: mt }), this.src !== void 0 && this.src != Fe && (this.src = Fe, this.remove3dModel(), this.load3dModel()), this.lights.forEach(function(Mt) {
            return Se.scene.remove(Mt);
          }), this.lights = [], this.addLight("ambientlight", Be.AmbientLight.defaultProps), this.need_children_lights ? this.addChildrenLights() : this.addLight("directionligth", Be.DirectionLight.defaultProps);
        } }, { key: "componentWillUnmount", value: function() {
          this.tick.animate = !1;
        } }, { key: "componentDidMount", value: function() {
          var Se = this, Ge = this.props, Fe = Ge.width, Pe = Ge.height, We = Ge.antialias, tt = Ge.background;
          this.scene = new he.Scene(), this.camera = new he.PerspectiveCamera(45, Fe / Pe, 0.1, 8888), this.renderer = new he.WebGLRenderer({ antialias: We }), this.renderer.setClearColor(new he.Color(tt)), this.renderer.setSize(Fe, Pe), this.$container.appendChild(this.renderer.domElement), this.scene.add(this.group), this.camera.position.set(0, 0, 0.1), this.createDefaultLight();
          var Et = this.props, Nt = Et.position, et = Et.rotation, mt = Et.scale;
          this.group.position.copy(new he.Vector3(Nt.x, Nt.y, Nt.z)), this.group.rotation.set(et.x, et.y, et.z), this.group.scale.set(mt.x, mt.y, mt.z), this.load3dModel(), this.tick = (0, Ee.default)(function() {
            if (Se.renderer.render(Se.scene, Se.camera), Se.obj3d) {
              Se.group.children.length || Se.group.add(Se.obj3d);
              var Mt = Se.props, Ot = Mt.position, yt = Mt.rotation, Qt = Mt.scale;
              Se.group.position.copy(new he.Vector3(Ot.x, Ot.y, Ot.z)), Se.group.rotation.set(yt.x, yt.y, yt.z), Se.group.scale.set(Qt.x, Qt.y, Qt.z);
            }
          });
        } }, { key: "initControl", value: function() {
          var Se = this.props, Ge = Se.enableKeys, Fe = Se.enableRotate, Pe = Se.enableZoom, We = Se.enabled;
          this.orbit_controls = new he.OrbitControls(this.camera, this.renderer.domElement), Object.assign(this.orbit_controls, { enableKeys: Ge, enablePan: !0, enableRotate: Fe, enableZoom: Pe, enabled: We }), this.orbit_controls.update();
        } }, { key: "remove3dModel", value: function() {
          this.obj3d && this.scene.remove(this.obj3d);
        } }, { key: "load3dModel", value: function() {
        } }, { key: "style", value: function() {
          var Se = this.props, Ge = Se.width, Fe = Se.height;
          return Object.assign({}, { width: Ge + "px", height: Fe + "px" });
        } }, { key: "computeBoundingBox", value: function(Se) {
          if (Se instanceof he.Mesh) {
            var Ge = Se.geometry;
            if (Ge) {
              Ge.boundingBox || Ge.computeBoundingBox();
              var Fe = Ge.boundingBox;
              return Se.updateMatrix(), Fe.applyMatrix4(Se.matrix), Fe;
            }
            return new he.Box3(new he.Vector3(), new he.Vector3());
          }
          var Pe, We = Se.children.length, tt = new he.Box3(new he.Vector3(), new he.Vector3());
          for (Pe = 0; Pe < We; Pe++) {
            var Et = be(Se.children[Pe]);
            Et.min.x < tt.min.x && (tt.min.x = Et.min.x), Et.max.x > tt.max.x && (tt.max.x = Et.max.x), Et.min.y < tt.min.y && (tt.min.y = Et.min.y), Et.max.y > tt.max.y && (tt.max.y = Et.max.y), Et.min.z < tt.min.z && (tt.min.z = Et.min.z), Et.max.z > tt.max.z && (tt.max.z = Et.max.z);
          }
          return Se.updateMatrix(), tt.applyMatrix4(Se.matrix), tt;
        } }, { key: "traverseScene", value: function() {
        } }, { key: "createEnvironment", value: function() {
        } }, { key: "addLight", value: function(Se, Ge) {
          if (/directionligth|ambientlight|spotlight/.test(Se)) {
            var Fe = ge[Se].create(Ge);
            return this.scene.add(Fe), this.lights.push(Fe), Fe;
          }
        } }, { key: "addChildrenLights", value: function() {
          var Se = this;
          this.lights.forEach(function(Ge) {
            Se.scene.remove(Ge);
          }), this.lights = [], this.array_children.map(function(Ge) {
            var Fe = Ge.props, Pe = Fe.__constructor;
            Se.addLight(Pe, Fe);
          });
        } }, { key: "createDefaultLight", value: function() {
          this.addLight("ambientlight", Be.AmbientLight.defaultProps), this.need_children_lights ? this.addChildrenLights() : this.addLight("directionligth", Be.DirectionLight.defaultProps);
        } }, { key: "array_children", get: function() {
          return this.props.children ? this.props.children instanceof Array ? this.props.children : [this.props.children] : [];
        } }, { key: "need_children_lights", get: function() {
          return !!this.array_children.filter(function(Se) {
            return /directionligth|ambientlight|spotlight/.test(Se.props.__constructor);
          }).length;
        } }]), He;
      }(), ce.defaultProps = { width: 500, height: 500, antialias: !0, loader: "", baseUrl: "", texPath: "", position: { x: 0, y: 0, z: 0 }, scale: { x: 1, y: 1, z: 1 }, rotation: { x: 0, y: 0, z: 0 }, background: "rgb(255,255,255)", enableKeys: !0, enableRotate: !0, enableZoom: !0, enabled: !0 }, le);
      ie.default = we;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 }), ie.GLTFLoader = ie.ColladaLoader = ie.OBJLoader = ie.MTLLoader = ie.OrbitControls = void 0;
      var ce = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0));
      ce.OrbitControls = function(Ee, me) {
        this.object = Ee, this.domElement = me !== void 0 ? me : document, this.enabled = !0, this.target = new ce.Vector3(), this.minDistance = 0, this.maxDistance = 1 / 0, this.minZoom = 0, this.maxZoom = 1 / 0, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -1 / 0, this.maxAzimuthAngle = 1 / 0, this.enableDamping = !1, this.dampingFactor = 0.25, this.enableZoom = !0, this.zoomSpeed = 1, this.enableRotate = !0, this.rotateSpeed = 1, this.enablePan = !0, this.keyPanSpeed = 7, this.autoRotate = !1, this.autoRotateSpeed = 2, this.enableKeys = !0, this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }, this.mouseButtons = { ORBIT: ce.MOUSE.LEFT, ZOOM: ce.MOUSE.MIDDLE, PAN: ce.MOUSE.RIGHT }, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function() {
          return Fe.phi;
        }, this.getAzimuthalAngle = function() {
          return Fe.theta;
        }, this.reset = function() {
          ge.target.copy(ge.target0), ge.object.position.copy(ge.position0), ge.object.zoom = ge.zoom0, ge.object.updateProjectionMatrix(), ge.dispatchEvent(be), ge.update(), Se = He.NONE;
        }, this.update = function() {
          var Ye = new ce.Vector3(), _e = new ce.Quaternion().setFromUnitVectors(Ee.up, new ce.Vector3(0, 1, 0)), Ie = _e.clone().inverse(), Ce = new ce.Vector3(), ke = new ce.Quaternion();
          return function() {
            var Ve = ge.object.position;
            return Ye.copy(Ve).sub(ge.target), Ye.applyQuaternion(_e), Fe.setFromVector3(Ye), ge.autoRotate && Se === He.NONE && Wt(2 * Math.PI / 60 / 60 * ge.autoRotateSpeed), Fe.theta += Pe.theta, Fe.phi += Pe.phi, Fe.theta = Math.max(ge.minAzimuthAngle, Math.min(ge.maxAzimuthAngle, Fe.theta)), Fe.phi = Math.max(ge.minPolarAngle, Math.min(ge.maxPolarAngle, Fe.phi)), Fe.makeSafe(), Fe.radius *= We, Fe.radius = Math.max(ge.minDistance, Math.min(ge.maxDistance, Fe.radius)), ge.target.add(tt), Ye.setFromSpherical(Fe), Ye.applyQuaternion(Ie), Ve.copy(ge.target).add(Ye), ge.object.lookAt(ge.target), ge.enableDamping === !0 ? (Pe.theta *= 1 - ge.dampingFactor, Pe.phi *= 1 - ge.dampingFactor) : Pe.set(0, 0, 0), We = 1, tt.set(0, 0, 0), !!(Et || Ce.distanceToSquared(ge.object.position) > Ge || 8 * (1 - ke.dot(ge.object.quaternion)) > Ge) && (ge.dispatchEvent(be), Ce.copy(ge.object.position), ke.copy(ge.object.quaternion), Et = !1, !0);
          };
        }(), this.dispose = function() {
          ge.domElement.removeEventListener("contextmenu", lt, !1), ge.domElement.removeEventListener("mousedown", tr, !1), ge.domElement.removeEventListener("wheel", qt, !1), ge.domElement.removeEventListener("touchstart", nt, !1), ge.domElement.removeEventListener("touchend", It, !1), ge.domElement.removeEventListener("touchmove", je, !1), document.removeEventListener("mousemove", ar, !1), document.removeEventListener("mouseup", ht, !1), window.removeEventListener("keydown", Xe, !1);
        };
        var ge = this, be = { type: "change" }, we = { type: "start" }, Oe = { type: "end" }, He = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 }, Se = He.NONE, Ge = 1e-6, Fe = new ce.Spherical(), Pe = new ce.Spherical(), We = 1, tt = new ce.Vector3(), Et = !1, Nt = new ce.Vector2(), et = new ce.Vector2(), mt = new ce.Vector2(), Mt = new ce.Vector2(), Ot = new ce.Vector2(), yt = new ce.Vector2(), Qt = new ce.Vector2(), Yt = new ce.Vector2(), jt = new ce.Vector2();
        function $t() {
          return Math.pow(0.95, ge.zoomSpeed);
        }
        function Wt(Ye) {
          Pe.theta -= Ye;
        }
        function st(Ye) {
          Pe.phi -= Ye;
        }
        var at = function() {
          var Ye = new ce.Vector3();
          return function(_e, Ie) {
            Ye.setFromMatrixColumn(Ie, 0), Ye.multiplyScalar(-_e), tt.add(Ye);
          };
        }(), wt = function() {
          var Ye = new ce.Vector3();
          return function(_e, Ie) {
            Ye.setFromMatrixColumn(Ie, 1), Ye.multiplyScalar(_e), tt.add(Ye);
          };
        }(), Ut = function() {
          var Ye = new ce.Vector3();
          return function(_e, Ie) {
            var Ce = ge.domElement === document ? ge.domElement.body : ge.domElement;
            if (ge.object instanceof ce.PerspectiveCamera) {
              var ke = ge.object.position;
              Ye.copy(ke).sub(ge.target);
              var Ve = Ye.length();
              Ve *= Math.tan(ge.object.fov / 2 * Math.PI / 180), at(2 * _e * Ve / Ce.clientHeight, ge.object.matrix), wt(2 * Ie * Ve / Ce.clientHeight, ge.object.matrix);
            } else
              ge.object instanceof ce.OrthographicCamera ? (at(_e * (ge.object.right - ge.object.left) / ge.object.zoom / Ce.clientWidth, ge.object.matrix), wt(Ie * (ge.object.top - ge.object.bottom) / ge.object.zoom / Ce.clientHeight, ge.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), ge.enablePan = !1);
          };
        }();
        function $e(Ye) {
          ge.object instanceof ce.PerspectiveCamera ? We /= Ye : ge.object instanceof ce.OrthographicCamera ? (ge.object.zoom = Math.max(ge.minZoom, Math.min(ge.maxZoom, ge.object.zoom * Ye)), ge.object.updateProjectionMatrix(), Et = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), ge.enableZoom = !1);
        }
        function ir(Ye) {
          ge.object instanceof ce.PerspectiveCamera ? We *= Ye : ge.object instanceof ce.OrthographicCamera ? (ge.object.zoom = Math.max(ge.minZoom, Math.min(ge.maxZoom, ge.object.zoom / Ye)), ge.object.updateProjectionMatrix(), Et = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), ge.enableZoom = !1);
        }
        function tr(Ye) {
          if (ge.enabled !== !1) {
            if (Ye.preventDefault(), Ye.button === ge.mouseButtons.ORBIT) {
              if (ge.enableRotate === !1)
                return;
              (function(_e) {
                Nt.set(_e.clientX, _e.clientY);
              })(Ye), Se = He.ROTATE;
            } else if (Ye.button === ge.mouseButtons.ZOOM) {
              if (ge.enableZoom === !1)
                return;
              (function(_e) {
                Qt.set(_e.clientX, _e.clientY);
              })(Ye), Se = He.DOLLY;
            } else if (Ye.button === ge.mouseButtons.PAN) {
              if (ge.enablePan === !1)
                return;
              (function(_e) {
                Mt.set(_e.clientX, _e.clientY);
              })(Ye), Se = He.PAN;
            }
            Se !== He.NONE && (document.addEventListener("mousemove", ar, !1), document.addEventListener("mouseup", ht, !1), ge.dispatchEvent(we));
          }
        }
        function ar(Ye) {
          if (ge.enabled !== !1) {
            if (Ye.preventDefault(), Se === He.ROTATE) {
              if (ge.enableRotate === !1)
                return;
              (function(_e) {
                et.set(_e.clientX, _e.clientY), mt.subVectors(et, Nt);
                var Ie = ge.domElement === document ? ge.domElement.body : ge.domElement;
                Wt(2 * Math.PI * mt.x / Ie.clientWidth * ge.rotateSpeed), st(2 * Math.PI * mt.y / Ie.clientHeight * ge.rotateSpeed), Nt.copy(et), ge.update();
              })(Ye);
            } else if (Se === He.DOLLY) {
              if (ge.enableZoom === !1)
                return;
              (function(_e) {
                Yt.set(_e.clientX, _e.clientY), jt.subVectors(Yt, Qt), jt.y > 0 ? $e($t()) : jt.y < 0 && ir($t()), Qt.copy(Yt), ge.update();
              })(Ye);
            } else if (Se === He.PAN) {
              if (ge.enablePan === !1)
                return;
              (function(_e) {
                Ot.set(_e.clientX, _e.clientY), yt.subVectors(Ot, Mt), Ut(yt.x, yt.y), Mt.copy(Ot), ge.update();
              })(Ye);
            }
          }
        }
        function ht(Ye) {
          ge.enabled !== !1 && (document.removeEventListener("mousemove", ar, !1), document.removeEventListener("mouseup", ht, !1), ge.dispatchEvent(Oe), Se = He.NONE);
        }
        function qt(Ye) {
          ge.enabled === !1 || ge.enableZoom === !1 || Se !== He.NONE && Se !== He.ROTATE || (Ye.preventDefault(), Ye.stopPropagation(), function(_e) {
            _e.deltaY < 0 ? ir($t()) : _e.deltaY > 0 && $e($t()), ge.update();
          }(Ye), ge.dispatchEvent(we), ge.dispatchEvent(Oe));
        }
        function Xe(Ye) {
          ge.enabled !== !1 && ge.enableKeys !== !1 && ge.enablePan !== !1 && function(_e) {
            switch (_e.keyCode) {
              case ge.keys.UP:
                Ut(0, ge.keyPanSpeed), ge.update();
                break;
              case ge.keys.BOTTOM:
                Ut(0, -ge.keyPanSpeed), ge.update();
                break;
              case ge.keys.LEFT:
                Ut(ge.keyPanSpeed, 0), ge.update();
                break;
              case ge.keys.RIGHT:
                Ut(-ge.keyPanSpeed, 0), ge.update();
            }
          }(Ye);
        }
        function nt(Ye) {
          if (ge.enabled !== !1) {
            switch (Ye.touches.length) {
              case 1:
                if (ge.enableRotate === !1)
                  return;
                (function(_e) {
                  Nt.set(_e.touches[0].pageX, _e.touches[0].pageY);
                })(Ye), Se = He.TOUCH_ROTATE;
                break;
              case 2:
                if (ge.enableZoom === !1)
                  return;
                (function(_e) {
                  var Ie = _e.touches[0].pageX - _e.touches[1].pageX, Ce = _e.touches[0].pageY - _e.touches[1].pageY, ke = Math.sqrt(Ie * Ie + Ce * Ce);
                  Qt.set(0, ke);
                })(Ye), Se = He.TOUCH_DOLLY;
                break;
              case 3:
                if (ge.enablePan === !1)
                  return;
                (function(_e) {
                  Mt.set(_e.touches[0].pageX, _e.touches[0].pageY);
                })(Ye), Se = He.TOUCH_PAN;
                break;
              default:
                Se = He.NONE;
            }
            Se !== He.NONE && ge.dispatchEvent(we);
          }
        }
        function je(Ye) {
          if (ge.enabled !== !1)
            switch (Ye.preventDefault(), Ye.stopPropagation(), Ye.touches.length) {
              case 1:
                if (ge.enableRotate === !1 || Se !== He.TOUCH_ROTATE)
                  return;
                (function(_e) {
                  et.set(_e.touches[0].pageX, _e.touches[0].pageY), mt.subVectors(et, Nt);
                  var Ie = ge.domElement === document ? ge.domElement.body : ge.domElement;
                  Wt(2 * Math.PI * mt.x / Ie.clientWidth * ge.rotateSpeed), st(2 * Math.PI * mt.y / Ie.clientHeight * ge.rotateSpeed), Nt.copy(et), ge.update();
                })(Ye);
                break;
              case 2:
                if (ge.enableZoom === !1 || Se !== He.TOUCH_DOLLY)
                  return;
                (function(_e) {
                  var Ie = _e.touches[0].pageX - _e.touches[1].pageX, Ce = _e.touches[0].pageY - _e.touches[1].pageY, ke = Math.sqrt(Ie * Ie + Ce * Ce);
                  Yt.set(0, ke), jt.subVectors(Yt, Qt), jt.y > 0 ? ir($t()) : jt.y < 0 && $e($t()), Qt.copy(Yt), ge.update();
                })(Ye);
                break;
              case 3:
                if (ge.enablePan === !1 || Se !== He.TOUCH_PAN)
                  return;
                (function(_e) {
                  Ot.set(_e.touches[0].pageX, _e.touches[0].pageY), yt.subVectors(Ot, Mt), Ut(yt.x, yt.y), Mt.copy(Ot), ge.update();
                })(Ye);
                break;
              default:
                Se = He.NONE;
            }
        }
        function It(Ye) {
          ge.enabled !== !1 && (ge.dispatchEvent(Oe), Se = He.NONE);
        }
        function lt(Ye) {
          Ye.preventDefault();
        }
        ge.domElement.addEventListener("contextmenu", lt, !1), ge.domElement.addEventListener("mousedown", tr, !1), ge.domElement.addEventListener("wheel", qt, !1), ge.domElement.addEventListener("touchstart", nt, !1), ge.domElement.addEventListener("touchend", It, !1), ge.domElement.addEventListener("touchmove", je, !1), window.addEventListener("keydown", Xe, !1), this.update();
      }, ce.OrbitControls.prototype = Object.create(ce.EventDispatcher.prototype), ce.OrbitControls.prototype.constructor = ce.OrbitControls, Object.defineProperties(ce.OrbitControls.prototype, { center: { get: function() {
        return console.warn("THREE.OrbitControls: .center has been renamed to .target"), this.target;
      } }, noZoom: { get: function() {
        return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), !this.enableZoom;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), this.enableZoom = !Ee;
      } }, noRotate: { get: function() {
        return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), !this.enableRotate;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), this.enableRotate = !Ee;
      } }, noPan: { get: function() {
        return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), !this.enablePan;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), this.enablePan = !Ee;
      } }, noKeys: { get: function() {
        return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), !this.enableKeys;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), this.enableKeys = !Ee;
      } }, staticMoving: { get: function() {
        return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), !this.enableDamping;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), this.enableDamping = !Ee;
      } }, dynamicDampingFactor: { get: function() {
        return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor;
      }, set: function(Ee) {
        console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor = Ee;
      } } }), ce.MTLLoader = function(Ee) {
        this.manager = Ee !== void 0 ? Ee : ce.DefaultLoadingManager;
      }, ce.MTLLoader.prototype = { constructor: ce.MTLLoader, load: function(Ee, me, ge, be) {
        var we = this, Oe = new ce.FileLoader(this.manager);
        Oe.setPath(this.path), Oe.load(Ee, function(He) {
          me(we.parse(He));
        }, ge, be);
      }, setPath: function(Ee) {
        this.path = Ee;
      }, setTexturePath: function(Ee) {
        this.texturePath = Ee;
      }, setBaseUrl: function(Ee) {
        console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead."), this.setTexturePath(Ee);
      }, setCrossOrigin: function(Ee) {
        this.crossOrigin = Ee;
      }, setMaterialOptions: function(Ee) {
        this.materialOptions = Ee;
      }, parse: function(Ee) {
        for (var me = Ee.split(`
`), ge = {}, be = /\s+/, we = {}, Oe = 0; Oe < me.length; Oe++) {
          var He = me[Oe];
          if ((He = He.trim()).length !== 0 && He.charAt(0) !== "#") {
            var Se = He.indexOf(" "), Ge = Se >= 0 ? He.substring(0, Se) : He;
            Ge = Ge.toLowerCase();
            var Fe = Se >= 0 ? He.substring(Se + 1) : "";
            if (Fe = Fe.trim(), Ge === "newmtl")
              ge = { name: Fe }, we[Fe] = ge;
            else if (ge)
              if (Ge === "ka" || Ge === "kd" || Ge === "ks") {
                var Pe = Fe.split(be, 3);
                ge[Ge] = [parseFloat(Pe[0]), parseFloat(Pe[1]), parseFloat(Pe[2])];
              } else
                ge[Ge] = Fe;
          }
        }
        var We = new ce.MTLLoader.MaterialCreator(this.texturePath || this.path, this.materialOptions);
        return We.setCrossOrigin(this.crossOrigin), We.setManager(this.manager), We.setMaterials(we), We;
      } }, ce.MTLLoader.MaterialCreator = function(Ee, me) {
        this.baseUrl = Ee || "", this.options = me, this.materialsInfo = {}, this.materials = {}, this.materialsArray = [], this.nameLookup = {}, this.side = this.options && this.options.side ? this.options.side : ce.FrontSide, this.wrap = this.options && this.options.wrap ? this.options.wrap : ce.RepeatWrapping;
      }, ce.MTLLoader.MaterialCreator.prototype = { constructor: ce.MTLLoader.MaterialCreator, crossOrigin: "Anonymous", setCrossOrigin: function(Ee) {
        this.crossOrigin = Ee;
      }, setManager: function(Ee) {
        this.manager = Ee;
      }, setMaterials: function(Ee) {
        this.materialsInfo = this.convert(Ee), this.materials = {}, this.materialsArray = [], this.nameLookup = {};
      }, convert: function(Ee) {
        if (!this.options)
          return Ee;
        var me = {};
        for (var ge in Ee) {
          var be = Ee[ge], we = {};
          for (var Oe in me[ge] = we, be) {
            var He = !0, Se = be[Oe], Ge = Oe.toLowerCase();
            switch (Ge) {
              case "kd":
              case "ka":
              case "ks":
                this.options && this.options.normalizeRGB && (Se = [Se[0] / 255, Se[1] / 255, Se[2] / 255]), this.options && this.options.ignoreZeroRGBs && Se[0] === 0 && Se[1] === 0 && Se[2] === 0 && (He = !1);
            }
            He && (we[Ge] = Se);
          }
        }
        return me;
      }, preload: function() {
        for (var Ee in this.materialsInfo)
          this.create(Ee);
      }, getIndex: function(Ee) {
        return this.nameLookup[Ee];
      }, getAsArray: function() {
        var Ee = 0;
        for (var me in this.materialsInfo)
          this.materialsArray[Ee] = this.create(me), this.nameLookup[me] = Ee, Ee++;
        return this.materialsArray;
      }, create: function(Ee) {
        return this.materials[Ee] === void 0 && this.createMaterial_(Ee), this.materials[Ee];
      }, createMaterial_: function(Ee) {
        var me = this, ge = this.materialsInfo[Ee], be = { name: Ee, side: this.side };
        function we(Ge, Fe) {
          if (!be[Ge]) {
            var Pe = me.getTextureParams(Fe, be), We = me.loadTexture(function(tt, Et) {
              return typeof Et != "string" || Et === "" ? "" : /^https?:\/\//i.test(Et) ? Et : tt + Et;
            }(me.baseUrl, Pe.url));
            We.repeat.copy(Pe.scale), We.offset.copy(Pe.offset), We.wrapS = me.wrap, We.wrapT = me.wrap, be[Ge] = We;
          }
        }
        for (var Oe in ge) {
          var He, Se = ge[Oe];
          if (Se !== "")
            switch (Oe.toLowerCase()) {
              case "kd":
                be.color = new ce.Color().fromArray(Se);
                break;
              case "ks":
                be.specular = new ce.Color().fromArray(Se);
                break;
              case "map_kd":
                we("map", Se);
                break;
              case "map_ks":
                we("specularMap", Se);
                break;
              case "norm":
                we("normalMap", Se);
                break;
              case "map_bump":
              case "bump":
                we("bumpMap", Se);
                break;
              case "ns":
                be.shininess = parseFloat(Se);
                break;
              case "d":
                (He = parseFloat(Se)) < 1 && (be.opacity = He, be.transparent = !0);
                break;
              case "tr":
                (He = parseFloat(Se)) > 0 && (be.opacity = 1 - He, be.transparent = !0);
            }
        }
        return this.materials[Ee] = new ce.MeshPhongMaterial(be), this.materials[Ee];
      }, getTextureParams: function(Ee, me) {
        var ge, be = { scale: new ce.Vector2(1, 1), offset: new ce.Vector2(0, 0) }, we = Ee.split(/\s+/);
        return (ge = we.indexOf("-bm")) >= 0 && (me.bumpScale = parseFloat(we[ge + 1]), we.splice(ge, 2)), (ge = we.indexOf("-s")) >= 0 && (be.scale.set(parseFloat(we[ge + 1]), parseFloat(we[ge + 2])), we.splice(ge, 4)), (ge = we.indexOf("-o")) >= 0 && (be.offset.set(parseFloat(we[ge + 1]), parseFloat(we[ge + 2])), we.splice(ge, 4)), be.url = we.join(" ").trim(), be;
      }, loadTexture: function(Ee, me, ge, be, we) {
        var Oe, He = ce.Loader.Handlers.get(Ee), Se = this.manager !== void 0 ? this.manager : ce.DefaultLoadingManager;
        return He === null && (He = new ce.TextureLoader(Se)), He.setCrossOrigin && He.setCrossOrigin(this.crossOrigin), Oe = He.load(Ee, ge, be, we), me !== void 0 && (Oe.mapping = me), Oe;
      } }, ce.OBJLoader = function() {
        var Ee = /^[og]\s*(.+)?/, me = /^mtllib /, ge = /^usemtl /;
        function be(we) {
          this.manager = we !== void 0 ? we : ce.DefaultLoadingManager, this.materials = null;
        }
        return be.prototype = { constructor: be, load: function(we, Oe, He, Se) {
          var Ge = this, Fe = new ce.FileLoader(Ge.manager);
          Fe.setPath(this.path), Fe.load(we, function(Pe) {
            Oe(Ge.parse(Pe));
          }, He, Se);
        }, setPath: function(we) {
          this.path = we;
        }, setMaterials: function(we) {
          return this.materials = we, this;
        }, parse: function(we) {
          console.time("OBJLoader");
          var Oe = new function() {
            var ke = { objects: [], object: {}, vertices: [], normals: [], colors: [], uvs: [], materialLibraries: [], startObject: function(Ve, Ze) {
              if (this.object && this.object.fromDeclaration === !1)
                return this.object.name = Ve, void (this.object.fromDeclaration = Ze !== !1);
              var ct = this.object && typeof this.object.currentMaterial == "function" ? this.object.currentMaterial() : void 0;
              if (this.object && typeof this.object._finalize == "function" && this.object._finalize(!0), this.object = { name: Ve || "", fromDeclaration: Ze !== !1, geometry: { vertices: [], normals: [], colors: [], uvs: [] }, materials: [], smooth: !0, startMaterial: function(Jt, Kt) {
                var Zt = this._finalize(!1);
                Zt && (Zt.inherited || Zt.groupCount <= 0) && this.materials.splice(Zt.index, 1);
                var De = { index: this.materials.length, name: Jt || "", mtllib: Array.isArray(Kt) && Kt.length > 0 ? Kt[Kt.length - 1] : "", smooth: Zt !== void 0 ? Zt.smooth : this.smooth, groupStart: Zt !== void 0 ? Zt.groupEnd : 0, groupEnd: -1, groupCount: -1, inherited: !1, clone: function(Te) {
                  var Re = { index: typeof Te == "number" ? Te : this.index, name: this.name, mtllib: this.mtllib, smooth: this.smooth, groupStart: 0, groupEnd: -1, groupCount: -1, inherited: !1 };
                  return Re.clone = this.clone.bind(Re), Re;
                } };
                return this.materials.push(De), De;
              }, currentMaterial: function() {
                if (this.materials.length > 0)
                  return this.materials[this.materials.length - 1];
              }, _finalize: function(Jt) {
                var Kt = this.currentMaterial();
                if (Kt && Kt.groupEnd === -1 && (Kt.groupEnd = this.geometry.vertices.length / 3, Kt.groupCount = Kt.groupEnd - Kt.groupStart, Kt.inherited = !1), Jt && this.materials.length > 1)
                  for (var Zt = this.materials.length - 1; Zt >= 0; Zt--)
                    this.materials[Zt].groupCount <= 0 && this.materials.splice(Zt, 1);
                return Jt && this.materials.length === 0 && this.materials.push({ name: "", smooth: this.smooth }), Kt;
              } }, ct && ct.name && typeof ct.clone == "function") {
                var kt = ct.clone(0);
                kt.inherited = !0, this.object.materials.push(kt);
              }
              this.objects.push(this.object);
            }, finalize: function() {
              this.object && typeof this.object._finalize == "function" && this.object._finalize(!0);
            }, parseVertexIndex: function(Ve, Ze) {
              var ct = parseInt(Ve, 10);
              return 3 * (ct >= 0 ? ct - 1 : ct + Ze / 3);
            }, parseNormalIndex: function(Ve, Ze) {
              var ct = parseInt(Ve, 10);
              return 3 * (ct >= 0 ? ct - 1 : ct + Ze / 3);
            }, parseUVIndex: function(Ve, Ze) {
              var ct = parseInt(Ve, 10);
              return 2 * (ct >= 0 ? ct - 1 : ct + Ze / 2);
            }, addVertex: function(Ve, Ze, ct) {
              var kt = this.vertices, Jt = this.object.geometry.vertices;
              Jt.push(kt[Ve + 0], kt[Ve + 1], kt[Ve + 2]), Jt.push(kt[Ze + 0], kt[Ze + 1], kt[Ze + 2]), Jt.push(kt[ct + 0], kt[ct + 1], kt[ct + 2]);
            }, addVertexLine: function(Ve) {
              var Ze = this.vertices;
              this.object.geometry.vertices.push(Ze[Ve + 0], Ze[Ve + 1], Ze[Ve + 2]);
            }, addNormal: function(Ve, Ze, ct) {
              var kt = this.normals, Jt = this.object.geometry.normals;
              Jt.push(kt[Ve + 0], kt[Ve + 1], kt[Ve + 2]), Jt.push(kt[Ze + 0], kt[Ze + 1], kt[Ze + 2]), Jt.push(kt[ct + 0], kt[ct + 1], kt[ct + 2]);
            }, addColor: function(Ve, Ze, ct) {
              var kt = this.colors, Jt = this.object.geometry.colors;
              Jt.push(kt[Ve + 0], kt[Ve + 1], kt[Ve + 2]), Jt.push(kt[Ze + 0], kt[Ze + 1], kt[Ze + 2]), Jt.push(kt[ct + 0], kt[ct + 1], kt[ct + 2]);
            }, addUV: function(Ve, Ze, ct) {
              var kt = this.uvs, Jt = this.object.geometry.uvs;
              Jt.push(kt[Ve + 0], kt[Ve + 1]), Jt.push(kt[Ze + 0], kt[Ze + 1]), Jt.push(kt[ct + 0], kt[ct + 1]);
            }, addUVLine: function(Ve) {
              var Ze = this.uvs;
              this.object.geometry.uvs.push(Ze[Ve + 0], Ze[Ve + 1]);
            }, addFace: function(Ve, Ze, ct, kt, Jt, Kt, Zt, De, Te) {
              var Re = this.vertices.length, ot = this.parseVertexIndex(Ve, Re), bt = this.parseVertexIndex(Ze, Re), Pt = this.parseVertexIndex(ct, Re);
              if (this.addVertex(ot, bt, Pt), kt !== void 0) {
                var Vt = this.uvs.length;
                ot = this.parseUVIndex(kt, Vt), bt = this.parseUVIndex(Jt, Vt), Pt = this.parseUVIndex(Kt, Vt), this.addUV(ot, bt, Pt);
              }
              if (Zt !== void 0) {
                var Ir = this.normals.length;
                ot = this.parseNormalIndex(Zt, Ir), bt = Zt === De ? ot : this.parseNormalIndex(De, Ir), Pt = Zt === Te ? ot : this.parseNormalIndex(Te, Ir), this.addNormal(ot, bt, Pt);
              }
              this.colors.length > 0 && this.addColor(ot, bt, Pt);
            }, addLineGeometry: function(Ve, Ze) {
              this.object.geometry.type = "Line";
              for (var ct = this.vertices.length, kt = this.uvs.length, Jt = 0, Kt = Ve.length; Jt < Kt; Jt++)
                this.addVertexLine(this.parseVertexIndex(Ve[Jt], ct));
              var Zt = 0;
              for (Kt = Ze.length; Zt < Kt; Zt++)
                this.addUVLine(this.parseUVIndex(Ze[Zt], kt));
            } };
            return ke.startObject("", !1), ke;
          }();
          we.indexOf(`\r
`) !== -1 && (we = we.replace(/\r\n/g, `
`)), we.indexOf(`\\
`) !== -1 && (we = we.replace(/\\\n/g, ""));
          for (var He = we.split(`
`), Se = "", Ge = "", Fe = [], Pe = typeof "".trimLeft == "function", We = 0, tt = He.length; We < tt; We++)
            if (Se = He[We], (Se = Pe ? Se.trimLeft() : Se.trim()).length !== 0 && (Ge = Se.charAt(0)) !== "#")
              if (Ge === "v") {
                var Et = Se.split(/\s+/);
                switch (Et[0]) {
                  case "v":
                    Oe.vertices.push(parseFloat(Et[1]), parseFloat(Et[2]), parseFloat(Et[3])), Et.length === 8 && Oe.colors.push(parseFloat(Et[4]), parseFloat(Et[5]), parseFloat(Et[6]));
                    break;
                  case "vn":
                    Oe.normals.push(parseFloat(Et[1]), parseFloat(Et[2]), parseFloat(Et[3]));
                    break;
                  case "vt":
                    Oe.uvs.push(parseFloat(Et[1]), parseFloat(Et[2]));
                }
              } else if (Ge === "f") {
                for (var Nt = Se.substr(1).trim().split(/\s+/), et = [], mt = 0, Mt = Nt.length; mt < Mt; mt++) {
                  var Ot = Nt[mt];
                  if (Ot.length > 0) {
                    var yt = Ot.split("/");
                    et.push(yt);
                  }
                }
                var Qt = et[0];
                for (mt = 1, Mt = et.length - 1; mt < Mt; mt++) {
                  var Yt = et[mt], jt = et[mt + 1];
                  Oe.addFace(Qt[0], Yt[0], jt[0], Qt[1], Yt[1], jt[1], Qt[2], Yt[2], jt[2]);
                }
              } else if (Ge === "l") {
                var $t = Se.substring(1).trim().split(" "), Wt = [], st = [];
                if (Se.indexOf("/") === -1)
                  Wt = $t;
                else
                  for (var at = 0, wt = $t.length; at < wt; at++) {
                    var Ut = $t[at].split("/");
                    Ut[0] !== "" && Wt.push(Ut[0]), Ut[1] !== "" && st.push(Ut[1]);
                  }
                Oe.addLineGeometry(Wt, st);
              } else if ((Fe = Ee.exec(Se)) !== null) {
                var $e = (" " + Fe[0].substr(1).trim()).substr(1);
                Oe.startObject($e);
              } else if (ge.test(Se))
                Oe.object.startMaterial(Se.substring(7).trim(), Oe.materialLibraries);
              else if (me.test(Se))
                Oe.materialLibraries.push(Se.substring(7).trim());
              else {
                if (Ge !== "s") {
                  if (Se === "\0")
                    continue;
                  throw new Error('THREE.OBJLoader: Unexpected line: "' + Se + '"');
                }
                if ((Fe = Se.split(" ")).length > 1) {
                  var ir = Fe[1].trim().toLowerCase();
                  Oe.object.smooth = ir !== "0" && ir !== "off";
                } else
                  Oe.object.smooth = !0;
                (Ie = Oe.object.currentMaterial()) && (Ie.smooth = Oe.object.smooth);
              }
          Oe.finalize();
          var tr = new ce.Group();
          for (tr.materialLibraries = [].concat(Oe.materialLibraries), We = 0, tt = Oe.objects.length; We < tt; We++) {
            var ar = Oe.objects[We], ht = ar.geometry, qt = ar.materials, Xe = ht.type === "Line";
            if (ht.vertices.length !== 0) {
              var nt = new ce.BufferGeometry();
              nt.addAttribute("position", new ce.Float32BufferAttribute(ht.vertices, 3)), ht.normals.length > 0 ? nt.addAttribute("normal", new ce.Float32BufferAttribute(ht.normals, 3)) : nt.computeVertexNormals(), ht.colors.length > 0 && nt.addAttribute("color", new ce.Float32BufferAttribute(ht.colors, 3)), ht.uvs.length > 0 && nt.addAttribute("uv", new ce.Float32BufferAttribute(ht.uvs, 2));
              for (var je, It = [], lt = 0, Ye = qt.length; lt < Ye; lt++) {
                var _e = qt[lt], Ie = void 0;
                if (this.materials !== null && (Ie = this.materials.create(_e.name), Xe && Ie && !(Ie instanceof ce.LineBasicMaterial))) {
                  var Ce = new ce.LineBasicMaterial();
                  Ce.copy(Ie), Ie = Ce;
                }
                Ie || ((Ie = Xe ? new ce.LineBasicMaterial() : new ce.MeshPhongMaterial()).name = _e.name), Ie.flatShading = !_e.smooth, It.push(Ie);
              }
              if (It.length > 1) {
                for (lt = 0, Ye = qt.length; lt < Ye; lt++)
                  _e = qt[lt], nt.addGroup(_e.groupStart, _e.groupCount, lt);
                je = Xe ? new ce.LineSegments(nt, It) : new ce.Mesh(nt, It);
              } else
                je = Xe ? new ce.LineSegments(nt, It[0]) : new ce.Mesh(nt, It[0]);
              je.name = ar.name, tr.add(je);
            }
          }
          return console.timeEnd("OBJLoader"), tr;
        } }, be;
      }(), ce.ColladaLoader = function(Ee) {
        this.manager = Ee !== void 0 ? Ee : ce.DefaultLoadingManager;
      }, ce.ColladaLoader.prototype = { constructor: ce.ColladaLoader, crossOrigin: "anonymous", load: function(Ee, me, ge, be) {
        var we = this, Oe = we.path === void 0 ? ce.LoaderUtils.extractUrlBase(Ee) : we.path;
        new ce.FileLoader(we.manager).load(Ee, function(He) {
          me(we.parse(He, Oe));
        }, ge, be);
      }, setPath: function(Ee) {
        return this.path = Ee, this;
      }, options: { set convertUpAxis(Ee) {
        console.warn("THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.");
      } }, setCrossOrigin: function(Ee) {
        return this.crossOrigin = Ee, this;
      }, parse: function(Ee, me) {
        function ge(qe, Ke) {
          for (var At = [], gt = qe.childNodes, dt = 0, er = gt.length; dt < er; dt++) {
            var dr = gt[dt];
            dr.nodeName === Ke && At.push(dr);
          }
          return At;
        }
        function be(qe) {
          if (qe.length === 0)
            return [];
          for (var Ke = qe.trim().split(/\s+/), At = new Array(Ke.length), gt = 0, dt = Ke.length; gt < dt; gt++)
            At[gt] = Ke[gt];
          return At;
        }
        function we(qe) {
          if (qe.length === 0)
            return [];
          for (var Ke = qe.trim().split(/\s+/), At = new Array(Ke.length), gt = 0, dt = Ke.length; gt < dt; gt++)
            At[gt] = parseFloat(Ke[gt]);
          return At;
        }
        function Oe(qe) {
          if (qe.length === 0)
            return [];
          for (var Ke = qe.trim().split(/\s+/), At = new Array(Ke.length), gt = 0, dt = Ke.length; gt < dt; gt++)
            At[gt] = parseInt(Ke[gt]);
          return At;
        }
        function He(qe) {
          return qe.substring(1);
        }
        function Se(qe) {
          return Object.keys(qe).length === 0;
        }
        function Ge(qe, Ke, At, gt) {
          var dt = ge(qe, Ke)[0];
          if (dt !== void 0)
            for (var er = ge(dt, At), dr = 0; dr < er.length; dr++)
              gt(er[dr]);
        }
        function Fe(qe, Ke) {
          for (var At in qe)
            qe[At].build = Ke(qe[At]);
        }
        function Pe(qe, Ke) {
          return qe.build !== void 0 || (qe.build = Ke(qe)), qe.build;
        }
        function We(qe) {
          for (var Ke = { inputs: {} }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "input":
                  var er = He(dt.getAttribute("source")), dr = dt.getAttribute("semantic");
                  Ke.inputs[dr] = er;
              }
          }
          return Ke;
        }
        function tt(qe) {
          var Ke = {}, At = qe.getAttribute("target").split("/"), gt = At.shift(), dt = At.shift(), er = dt.indexOf("(") !== -1, dr = dt.indexOf(".") !== -1;
          if (dr)
            dt = (At = dt.split(".")).shift(), Ke.member = At.shift();
          else if (er) {
            var ur = dt.split("(");
            dt = ur.shift();
            for (var Rr = 0; Rr < ur.length; Rr++)
              ur[Rr] = parseInt(ur[Rr].replace(/\)/, ""));
            Ke.indices = ur;
          }
          return Ke.id = gt, Ke.sid = dt, Ke.arraySyntax = er, Ke.memberSyntax = dr, Ke.sampler = He(qe.getAttribute("source")), Ke;
        }
        function Et(qe) {
          var Ke = [], At = qe.channels, gt = qe.samplers, dt = qe.sources;
          for (var er in At)
            if (At.hasOwnProperty(er)) {
              var dr = At[er], ur = gt[dr.sampler], Rr = ur.inputs.INPUT, Jr = ur.inputs.OUTPUT;
              yt(et(dr, dt[Rr], dt[Jr]), Ke);
            }
          return Ke;
        }
        function Nt(qe) {
          return Pe(Xt.animations[qe], Et);
        }
        function et(qe, Ke, At) {
          var gt, dt, er, dr, ur, Rr, Jr = Xt.nodes[qe.id], Mr = wn(Jr.id), Zr = Jr.transforms[qe.sid], Rn = Jr.matrix.clone().transpose(), Fn = {};
          switch (Zr) {
            case "matrix":
              for (er = 0, dr = Ke.array.length; er < dr; er++)
                if (gt = Ke.array[er], dt = er * At.stride, Fn[gt] === void 0 && (Fn[gt] = {}), qe.arraySyntax === !0) {
                  var Gn = At.array[dt], qr = qe.indices[0] + 4 * qe.indices[1];
                  Fn[gt][qr] = Gn;
                } else
                  for (ur = 0, Rr = At.stride; ur < Rr; ur++)
                    Fn[gt][ur] = At.array[dt + ur];
              break;
            case "translate":
            case "rotate":
            case "scale":
              console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.', Zr);
          }
          var jr = function(bn, gn) {
            var sn = [];
            for (var On in bn)
              sn.push({ time: parseFloat(On), value: bn[On] });
            sn.sort(function(xn, Wr) {
              return xn.time - Wr.time;
            });
            for (var ii = 0; ii < 16; ii++)
              Qt(sn, ii, gn.elements[ii]);
            return sn;
          }(Fn, Rn);
          return { name: Mr.uuid, keyframes: jr };
        }
        var mt = new ce.Vector3(), Mt = new ce.Vector3(), Ot = new ce.Quaternion();
        function yt(qe, Ke) {
          for (var At = qe.keyframes, gt = qe.name, dt = [], er = [], dr = [], ur = [], Rr = 0, Jr = At.length; Rr < Jr; Rr++) {
            var Mr = At[Rr], Zr = Mr.time, Rn = Mr.value;
            ni.fromArray(Rn).transpose(), ni.decompose(mt, Ot, Mt), dt.push(Zr), er.push(mt.x, mt.y, mt.z), dr.push(Ot.x, Ot.y, Ot.z, Ot.w), ur.push(Mt.x, Mt.y, Mt.z);
          }
          return er.length > 0 && Ke.push(new ce.VectorKeyframeTrack(gt + ".position", dt, er)), dr.length > 0 && Ke.push(new ce.QuaternionKeyframeTrack(gt + ".quaternion", dt, dr)), ur.length > 0 && Ke.push(new ce.VectorKeyframeTrack(gt + ".scale", dt, ur)), Ke;
        }
        function Qt(qe, Ke, At) {
          var gt, dt, er, dr = !0;
          for (dt = 0, er = qe.length; dt < er; dt++)
            (gt = qe[dt]).value[Ke] === void 0 ? gt.value[Ke] = null : dr = !1;
          if (dr === !0)
            for (dt = 0, er = qe.length; dt < er; dt++)
              (gt = qe[dt]).value[Ke] = At;
          else
            (function(ur, Rr) {
              for (var Jr, Mr, Zr = 0, Rn = ur.length; Zr < Rn; Zr++) {
                var Fn = ur[Zr];
                if (Fn.value[Rr] === null) {
                  if (Jr = Yt(ur, Zr, Rr), Mr = jt(ur, Zr, Rr), Jr === null) {
                    Fn.value[Rr] = Mr.value[Rr];
                    continue;
                  }
                  if (Mr === null) {
                    Fn.value[Rr] = Jr.value[Rr];
                    continue;
                  }
                  $t(Fn, Jr, Mr, Rr);
                }
              }
            })(qe, Ke);
        }
        function Yt(qe, Ke, At) {
          for (; Ke >= 0; ) {
            var gt = qe[Ke];
            if (gt.value[At] !== null)
              return gt;
            Ke--;
          }
          return null;
        }
        function jt(qe, Ke, At) {
          for (; Ke < qe.length; ) {
            var gt = qe[Ke];
            if (gt.value[At] !== null)
              return gt;
            Ke++;
          }
          return null;
        }
        function $t(qe, Ke, At, gt) {
          At.time - Ke.time != 0 ? qe.value[gt] = (qe.time - Ke.time) * (At.value[gt] - Ke.value[gt]) / (At.time - Ke.time) + Ke.value[gt] : qe.value[gt] = Ke.value[gt];
        }
        function Wt(qe) {
          for (var Ke = [], At = qe.name, gt = qe.end - qe.start || -1, dt = qe.animations, er = 0, dr = dt.length; er < dr; er++)
            for (var ur = Nt(dt[er]), Rr = 0, Jr = ur.length; Rr < Jr; Rr++)
              Ke.push(ur[Rr]);
          return new ce.AnimationClip(At, gt, Ke);
        }
        function st(qe) {
          return Pe(Xt.clips[qe], Wt);
        }
        function at(qe) {
          for (var Ke = { sources: {} }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "bind_shape_matrix":
                  Ke.bindShapeMatrix = we(dt.textContent);
                  break;
                case "source":
                  var er = dt.getAttribute("id");
                  Ke.sources[er] = Pt(dt);
                  break;
                case "joints":
                  Ke.joints = wt(dt);
                  break;
                case "vertex_weights":
                  Ke.vertexWeights = Ut(dt);
              }
          }
          return Ke;
        }
        function wt(qe) {
          for (var Ke = { inputs: {} }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "input":
                  var er = dt.getAttribute("semantic"), dr = He(dt.getAttribute("source"));
                  Ke.inputs[er] = dr;
              }
          }
          return Ke;
        }
        function Ut(qe) {
          for (var Ke = { inputs: {} }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "input":
                  var er = dt.getAttribute("semantic"), dr = He(dt.getAttribute("source")), ur = parseInt(dt.getAttribute("offset"));
                  Ke.inputs[er] = { id: dr, offset: ur };
                  break;
                case "vcount":
                  Ke.vcount = Oe(dt.textContent);
                  break;
                case "v":
                  Ke.v = Oe(dt.textContent);
              }
          }
          return Ke;
        }
        function $e(qe) {
          var Ke = { id: qe.id }, At = Xt.geometries[Ke.id];
          return qe.skin !== void 0 && (Ke.skin = function(gt) {
            var dt, er, dr, ur = { joints: [], indices: { array: [], stride: 4 }, weights: { array: [], stride: 4 } }, Rr = gt.sources, Jr = gt.vertexWeights, Mr = Jr.vcount, Zr = Jr.v, Rn = Jr.inputs.JOINT.offset, Fn = Jr.inputs.WEIGHT.offset, Gn = gt.sources[gt.joints.inputs.JOINT], qr = gt.sources[gt.joints.inputs.INV_BIND_MATRIX], jr = Rr[Jr.inputs.WEIGHT.id].array, bn = 0;
            for (dt = 0, dr = Mr.length; dt < dr; dt++) {
              var gn = Mr[dt], sn = [];
              for (er = 0; er < gn; er++) {
                var On = Zr[bn + Rn], ii = Zr[bn + Fn], xn = jr[ii];
                sn.push({ index: On, weight: xn }), bn += 2;
              }
              for (sn.sort(Qi), er = 0; er < 4; er++) {
                var Wr = sn[er];
                Wr !== void 0 ? (ur.indices.array.push(Wr.index), ur.weights.array.push(Wr.weight)) : (ur.indices.array.push(0), ur.weights.array.push(0));
              }
            }
            for (gt.bindShapeMatrix ? ur.bindMatrix = new ce.Matrix4().fromArray(gt.bindShapeMatrix).transpose() : ur.bindMatrix = new ce.Matrix4().transpose(), dt = 0, dr = Gn.array.length; dt < dr; dt++) {
              var Cn = Gn.array[dt], zn = new ce.Matrix4().fromArray(qr.array, dt * qr.stride).transpose();
              ur.joints.push({ name: Cn, boneInverse: zn });
            }
            return ur;
            function Qi(Mi, Eo) {
              return Eo.weight - Mi.weight;
            }
          }(qe.skin), At.sources.skinIndices = Ke.skin.indices, At.sources.skinWeights = Ke.skin.weights), Ke;
        }
        function ir(qe) {
          return Pe(Xt.controllers[qe], $e);
        }
        function tr(qe) {
          return qe.build !== void 0 ? qe.build : qe.init_from;
        }
        function ar(qe) {
          var Ke = Xt.images[qe];
          return Ke !== void 0 ? Pe(Ke, tr) : (console.warn("THREE.ColladaLoader: Couldn't find image with ID:", qe), null);
        }
        function ht(qe) {
          for (var Ke = { surfaces: {}, samplers: {} }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "newparam":
                  qt(dt, Ke);
                  break;
                case "technique":
                  Ke.technique = je(dt);
                  break;
                case "extra":
                  Ke.extra = Ce(dt);
              }
          }
          return Ke;
        }
        function qt(qe, Ke) {
          for (var At = qe.getAttribute("sid"), gt = 0, dt = qe.childNodes.length; gt < dt; gt++) {
            var er = qe.childNodes[gt];
            if (er.nodeType === 1)
              switch (er.nodeName) {
                case "surface":
                  Ke.surfaces[At] = Xe(er);
                  break;
                case "sampler2D":
                  Ke.samplers[At] = nt(er);
              }
          }
        }
        function Xe(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "init_from":
                  Ke.init_from = dt.textContent;
              }
          }
          return Ke;
        }
        function nt(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "source":
                  Ke.source = dt.textContent;
              }
          }
          return Ke;
        }
        function je(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "constant":
                case "lambert":
                case "blinn":
                case "phong":
                  Ke.type = dt.nodeName, Ke.parameters = It(dt);
              }
          }
          return Ke;
        }
        function It(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "emission":
                case "diffuse":
                case "specular":
                case "shininess":
                case "transparency":
                  Ke[dt.nodeName] = lt(dt);
                  break;
                case "transparent":
                  Ke[dt.nodeName] = { opaque: dt.getAttribute("opaque"), data: lt(dt) };
              }
          }
          return Ke;
        }
        function lt(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "color":
                  Ke[dt.nodeName] = we(dt.textContent);
                  break;
                case "float":
                  Ke[dt.nodeName] = parseFloat(dt.textContent);
                  break;
                case "texture":
                  Ke[dt.nodeName] = { id: dt.getAttribute("texture"), extra: Ye(dt) };
              }
          }
          return Ke;
        }
        function Ye(qe) {
          for (var Ke = { technique: {} }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "extra":
                  _e(dt, Ke);
              }
          }
          return Ke;
        }
        function _e(qe, Ke) {
          for (var At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "technique":
                  Ie(dt, Ke);
              }
          }
        }
        function Ie(qe, Ke) {
          for (var At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "repeatU":
                case "repeatV":
                case "offsetU":
                case "offsetV":
                  Ke.technique[dt.nodeName] = parseFloat(dt.textContent);
                  break;
                case "wrapU":
                case "wrapV":
                  dt.textContent.toUpperCase() === "TRUE" ? Ke.technique[dt.nodeName] = 1 : dt.textContent.toUpperCase() === "FALSE" ? Ke.technique[dt.nodeName] = 0 : Ke.technique[dt.nodeName] = parseInt(dt.textContent);
              }
          }
        }
        function Ce(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "technique":
                  Ke.technique = ke(dt);
              }
          }
          return Ke;
        }
        function ke(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "double_sided":
                  Ke[dt.nodeName] = parseInt(dt.textContent);
              }
          }
          return Ke;
        }
        function Ve(qe) {
          return qe;
        }
        function Ze(qe) {
          var Ke, At = function(Rn) {
            return Pe(Xt.effects[Rn], Ve);
          }(qe.url), gt = At.profile.technique, dt = At.profile.extra;
          switch (gt.type) {
            case "phong":
            case "blinn":
              Ke = new ce.MeshPhongMaterial();
              break;
            case "lambert":
              Ke = new ce.MeshLambertMaterial();
              break;
            default:
              Ke = new ce.MeshBasicMaterial();
          }
          function er(Rn) {
            var Fn = At.profile.samplers[Rn.id], Gn = null;
            if (Fn !== void 0 ? Gn = ar(At.profile.surfaces[Fn.source].init_from) : (console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."), Gn = ar(Rn.id)), Gn !== null) {
              var qr = nn.load(Gn), jr = Rn.extra;
              if (jr !== void 0 && jr.technique !== void 0 && Se(jr.technique) === !1) {
                var bn = jr.technique;
                qr.wrapS = bn.wrapU ? ce.RepeatWrapping : ce.ClampToEdgeWrapping, qr.wrapT = bn.wrapV ? ce.RepeatWrapping : ce.ClampToEdgeWrapping, qr.offset.set(bn.offsetU || 0, bn.offsetV || 0), qr.repeat.set(bn.repeatU || 1, bn.repeatV || 1);
              } else
                qr.wrapS = ce.RepeatWrapping, qr.wrapT = ce.RepeatWrapping;
              return qr;
            }
            return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:", Rn.id), null;
          }
          Ke.name = qe.name;
          var dr = gt.parameters;
          for (var ur in dr) {
            var Rr = dr[ur];
            switch (ur) {
              case "diffuse":
                Rr.color && Ke.color.fromArray(Rr.color), Rr.texture && (Ke.map = er(Rr.texture));
                break;
              case "specular":
                Rr.color && Ke.specular && Ke.specular.fromArray(Rr.color), Rr.texture && (Ke.specularMap = er(Rr.texture));
                break;
              case "shininess":
                Rr.float && Ke.shininess && (Ke.shininess = Rr.float);
                break;
              case "emission":
                Rr.color && Ke.emissive && Ke.emissive.fromArray(Rr.color), Rr.texture && (Ke.emissiveMap = er(Rr.texture));
            }
          }
          var Jr = dr.transparent, Mr = dr.transparency;
          if (Mr === void 0 && Jr && (Mr = { float: 1 }), Jr === void 0 && Mr && (Jr = { opaque: "A_ONE", data: { color: [1, 1, 1, 1] } }), Jr && Mr)
            if (Jr.data.texture)
              Ke.transparent = !0;
            else {
              var Zr = Jr.data.color;
              switch (Jr.opaque) {
                case "A_ONE":
                  Ke.opacity = Zr[3] * Mr.float;
                  break;
                case "RGB_ZERO":
                  Ke.opacity = 1 - Zr[0] * Mr.float;
                  break;
                case "A_ZERO":
                  Ke.opacity = 1 - Zr[3] * Mr.float;
                  break;
                case "RGB_ONE":
                  Ke.opacity = Zr[0] * Mr.float;
                  break;
                default:
                  console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.', Jr.opaque);
              }
              Ke.opacity < 1 && (Ke.transparent = !0);
            }
          return dt !== void 0 && dt.technique !== void 0 && dt.technique.double_sided === 1 && (Ke.side = ce.DoubleSide), Ke;
        }
        function ct(qe) {
          return Pe(Xt.materials[qe], Ze);
        }
        function kt(qe) {
          for (var Ke = 0; Ke < qe.childNodes.length; Ke++) {
            var At = qe.childNodes[Ke];
            switch (At.nodeName) {
              case "technique_common":
                return Jt(At);
            }
          }
          return {};
        }
        function Jt(qe) {
          for (var Ke = {}, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            switch (gt.nodeName) {
              case "perspective":
              case "orthographic":
                Ke.technique = gt.nodeName, Ke.parameters = Kt(gt);
            }
          }
          return Ke;
        }
        function Kt(qe) {
          for (var Ke = {}, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            switch (gt.nodeName) {
              case "xfov":
              case "yfov":
              case "xmag":
              case "ymag":
              case "znear":
              case "zfar":
              case "aspect_ratio":
                Ke[gt.nodeName] = parseFloat(gt.textContent);
            }
          }
          return Ke;
        }
        function Zt(qe) {
          var Ke;
          switch (qe.optics.technique) {
            case "perspective":
              Ke = new ce.PerspectiveCamera(qe.optics.parameters.yfov, qe.optics.parameters.aspect_ratio, qe.optics.parameters.znear, qe.optics.parameters.zfar);
              break;
            case "orthographic":
              var At = qe.optics.parameters.ymag, gt = qe.optics.parameters.xmag, dt = qe.optics.parameters.aspect_ratio;
              gt = gt === void 0 ? At * dt : gt, At = At === void 0 ? gt / dt : At, gt *= 0.5, At *= 0.5, Ke = new ce.OrthographicCamera(-gt, gt, At, -At, qe.optics.parameters.znear, qe.optics.parameters.zfar);
              break;
            default:
              Ke = new ce.PerspectiveCamera();
          }
          return Ke.name = qe.name, Ke;
        }
        function De(qe) {
          var Ke = Xt.cameras[qe];
          return Ke !== void 0 ? Pe(Ke, Zt) : (console.warn("THREE.ColladaLoader: Couldn't find camera with ID:", qe), null);
        }
        function Te(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "directional":
                case "point":
                case "spot":
                case "ambient":
                  Ke.technique = dt.nodeName, Ke.parameters = Re(dt);
              }
          }
          return Ke;
        }
        function Re(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "color":
                  var er = we(dt.textContent);
                  Ke.color = new ce.Color().fromArray(er);
                  break;
                case "falloff_angle":
                  Ke.falloffAngle = parseFloat(dt.textContent);
                  break;
                case "quadratic_attenuation":
                  var dr = parseFloat(dt.textContent);
                  Ke.distance = dr ? Math.sqrt(1 / dr) : 0;
              }
          }
          return Ke;
        }
        function ot(qe) {
          var Ke;
          switch (qe.technique) {
            case "directional":
              Ke = new ce.DirectionalLight();
              break;
            case "point":
              Ke = new ce.PointLight();
              break;
            case "spot":
              Ke = new ce.SpotLight();
              break;
            case "ambient":
              Ke = new ce.AmbientLight();
          }
          return qe.parameters.color && Ke.color.copy(qe.parameters.color), qe.parameters.distance && (Ke.distance = qe.parameters.distance), Ke;
        }
        function bt(qe) {
          var Ke = Xt.lights[qe];
          return Ke !== void 0 ? Pe(Ke, ot) : (console.warn("THREE.ColladaLoader: Couldn't find light with ID:", qe), null);
        }
        function Pt(qe) {
          for (var Ke = { array: [], stride: 3 }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "float_array":
                  Ke.array = we(gt.textContent);
                  break;
                case "Name_array":
                  Ke.array = be(gt.textContent);
                  break;
                case "technique_common":
                  var dt = ge(gt, "accessor")[0];
                  dt !== void 0 && (Ke.stride = parseInt(dt.getAttribute("stride")));
              }
          }
          return Ke;
        }
        function Vt(qe) {
          for (var Ke = {}, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            gt.nodeType === 1 && (Ke[gt.getAttribute("semantic")] = He(gt.getAttribute("source")));
          }
          return Ke;
        }
        function Ir(qe) {
          for (var Ke = { type: qe.nodeName, material: qe.getAttribute("material"), count: parseInt(qe.getAttribute("count")), inputs: {}, stride: 0, hasUV: !1 }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "input":
                  var er = He(dt.getAttribute("source")), dr = dt.getAttribute("semantic"), ur = parseInt(dt.getAttribute("offset"));
                  Ke.inputs[dr] = { id: er, offset: ur }, Ke.stride = Math.max(Ke.stride, ur + 1), dr === "TEXCOORD" && (Ke.hasUV = !0);
                  break;
                case "vcount":
                  Ke.vcount = Oe(dt.textContent);
                  break;
                case "p":
                  Ke.p = Oe(dt.textContent);
              }
          }
          return Ke;
        }
        function mr(qe) {
          for (var Ke = 0, At = 0, gt = qe.length; At < gt; At++)
            qe[At].hasUV === !0 && Ke++;
          Ke > 0 && Ke < qe.length && (qe.uvsNeedsFix = !0);
        }
        function _r(qe) {
          var Ke = {}, At = qe.sources, gt = qe.vertices, dt = qe.primitives;
          if (dt.length === 0)
            return {};
          var er = function(Rr) {
            for (var Jr = {}, Mr = 0; Mr < Rr.length; Mr++) {
              var Zr = Rr[Mr];
              Jr[Zr.type] === void 0 && (Jr[Zr.type] = []), Jr[Zr.type].push(Zr);
            }
            return Jr;
          }(dt);
          for (var dr in er) {
            var ur = er[dr];
            mr(ur), Ke[dr] = Br(ur, At, gt);
          }
          return Ke;
        }
        function Br(qe, Ke, At) {
          for (var gt = {}, dt = { array: [], stride: 0 }, er = { array: [], stride: 0 }, dr = { array: [], stride: 0 }, ur = { array: [], stride: 0 }, Rr = [], Jr = 4, Mr = [], Zr = 4, Rn = new ce.BufferGeometry(), Fn = [], Gn = 0, qr = 0; qr < qe.length; qr++) {
            var jr = qe[qr], bn = jr.inputs, gn = 0;
            switch (jr.type) {
              case "lines":
              case "linestrips":
                gn = 2 * jr.count;
                break;
              case "triangles":
                gn = 3 * jr.count;
                break;
              case "polylist":
                for (var sn = 0; sn < jr.count; sn++) {
                  var On = jr.vcount[sn];
                  switch (On) {
                    case 3:
                      gn += 3;
                      break;
                    case 4:
                      gn += 6;
                      break;
                    default:
                      gn += 3 * (On - 2);
                  }
                }
                break;
              default:
                console.warn("THREE.ColladaLoader: Unknow primitive type:", jr.type);
            }
            for (var ii in Rn.addGroup(Gn, gn, qr), Gn += gn, jr.material && Fn.push(jr.material), bn) {
              var xn = bn[ii];
              switch (ii) {
                case "VERTEX":
                  for (var Wr in At) {
                    var Cn = At[Wr];
                    switch (Wr) {
                      case "POSITION":
                        var zn = dt.array.length;
                        if (Tr(jr, Ke[Cn], xn.offset, dt.array), dt.stride = Ke[Cn].stride, Ke.skinWeights && Ke.skinIndices && (Tr(jr, Ke.skinIndices, xn.offset, Rr), Tr(jr, Ke.skinWeights, xn.offset, Mr)), jr.hasUV === !1 && qe.uvsNeedsFix === !0) {
                          gn = (dt.array.length - zn) / dt.stride;
                          for (var Qi = 0; Qi < gn; Qi++)
                            dr.array.push(0, 0);
                        }
                        break;
                      case "NORMAL":
                        Tr(jr, Ke[Cn], xn.offset, er.array), er.stride = Ke[Cn].stride;
                        break;
                      case "COLOR":
                        Tr(jr, Ke[Cn], xn.offset, ur.array), ur.stride = Ke[Cn].stride;
                        break;
                      case "TEXCOORD":
                        Tr(jr, Ke[Cn], xn.offset, dr.array), dr.stride = Ke[Cn].stride;
                        break;
                      default:
                        console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.', Wr);
                    }
                  }
                  break;
                case "NORMAL":
                  Tr(jr, Ke[xn.id], xn.offset, er.array), er.stride = Ke[xn.id].stride;
                  break;
                case "COLOR":
                  Tr(jr, Ke[xn.id], xn.offset, ur.array), ur.stride = Ke[xn.id].stride;
                  break;
                case "TEXCOORD":
                  Tr(jr, Ke[xn.id], xn.offset, dr.array), dr.stride = Ke[xn.id].stride;
              }
            }
          }
          return dt.array.length > 0 && Rn.addAttribute("position", new ce.Float32BufferAttribute(dt.array, dt.stride)), er.array.length > 0 && Rn.addAttribute("normal", new ce.Float32BufferAttribute(er.array, er.stride)), ur.array.length > 0 && Rn.addAttribute("color", new ce.Float32BufferAttribute(ur.array, ur.stride)), dr.array.length > 0 && Rn.addAttribute("uv", new ce.Float32BufferAttribute(dr.array, dr.stride)), Rr.length > 0 && Rn.addAttribute("skinIndex", new ce.Float32BufferAttribute(Rr, Jr)), Mr.length > 0 && Rn.addAttribute("skinWeight", new ce.Float32BufferAttribute(Mr, Zr)), gt.data = Rn, gt.type = qe[0].type, gt.materialKeys = Fn, gt;
        }
        function Tr(qe, Ke, At, gt) {
          var dt = qe.p, er = qe.stride, dr = qe.vcount;
          function ur(sn) {
            for (var On = dt[sn + At] * Jr, ii = On + Jr; On < ii; On++)
              gt.push(Rr[On]);
          }
          var Rr = Ke.array, Jr = Ke.stride;
          if (qe.vcount !== void 0)
            for (var Mr = 0, Zr = 0, Rn = dr.length; Zr < Rn; Zr++) {
              var Fn = dr[Zr];
              if (Fn === 4) {
                var Gn = Mr + 1 * er, qr = Mr + 2 * er, jr = Mr + 3 * er;
                ur(Mr + 0 * er), ur(Gn), ur(jr), ur(Gn), ur(qr), ur(jr);
              } else if (Fn === 3)
                Gn = Mr + 1 * er, qr = Mr + 2 * er, ur(Mr + 0 * er), ur(Gn), ur(qr);
              else if (Fn > 4)
                for (var bn = 1, gn = Fn - 2; bn <= gn; bn++)
                  Gn = Mr + er * bn, qr = Mr + er * (bn + 1), ur(Mr + 0 * er), ur(Gn), ur(qr);
              Mr += er * Fn;
            }
          else
            for (Zr = 0, Rn = dt.length; Zr < Rn; Zr += er)
              ur(Zr);
        }
        function cn(qe) {
          return Pe(Xt.geometries[qe], _r);
        }
        function oi(qe) {
          return qe.build !== void 0 ? qe.build : qe;
        }
        function un(qe, Ke) {
          for (var At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "joint":
                  Ke.joints[gt.getAttribute("sid")] = Yn(gt);
                  break;
                case "link":
                  Ke.links.push(Dn(gt));
              }
          }
        }
        function Yn(qe) {
          for (var Ke, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "prismatic":
                case "revolute":
                  Ke = Vn(gt);
              }
          }
          return Ke;
        }
        function Vn(qe, Ke) {
          Ke = { sid: qe.getAttribute("sid"), name: qe.getAttribute("name") || "", axis: new ce.Vector3(), limits: { min: 0, max: 0 }, type: qe.nodeName, static: !1, zeroPosition: 0, middlePosition: 0 };
          for (var At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "axis":
                  var dt = we(gt.textContent);
                  Ke.axis.fromArray(dt);
                  break;
                case "limits":
                  var er = gt.getElementsByTagName("max")[0], dr = gt.getElementsByTagName("min")[0];
                  Ke.limits.max = parseFloat(er.textContent), Ke.limits.min = parseFloat(dr.textContent);
              }
          }
          return Ke.limits.min >= Ke.limits.max && (Ke.static = !0), Ke.middlePosition = (Ke.limits.min + Ke.limits.max) / 2, Ke;
        }
        function Dn(qe) {
          for (var Ke = { sid: qe.getAttribute("sid"), name: qe.getAttribute("name") || "", attachments: [], transforms: [] }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "attachment_full":
                  Ke.attachments.push(Ln(gt));
                  break;
                case "matrix":
                case "translate":
                case "rotate":
                  Ke.transforms.push(di(gt));
              }
          }
          return Ke;
        }
        function Ln(qe) {
          for (var Ke = { joint: qe.getAttribute("joint").split("/").pop(), transforms: [], links: [] }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "link":
                  Ke.links.push(Dn(gt));
                  break;
                case "matrix":
                case "translate":
                case "rotate":
                  Ke.transforms.push(di(gt));
              }
          }
          return Ke;
        }
        function di(qe) {
          var Ke = { type: qe.nodeName }, At = we(qe.textContent);
          switch (Ke.type) {
            case "matrix":
              Ke.obj = new ce.Matrix4(), Ke.obj.fromArray(At).transpose();
              break;
            case "translate":
              Ke.obj = new ce.Vector3(), Ke.obj.fromArray(At);
              break;
            case "rotate":
              Ke.obj = new ce.Vector3(), Ke.obj.fromArray(At), Ke.angle = ce.Math.degToRad(At[3]);
          }
          return Ke;
        }
        function yi(qe, Ke) {
          for (var At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "technique_common":
                  Zi(gt, Ke);
              }
          }
        }
        function Zi(qe, Ke) {
          for (var At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "inertia":
                  Ke.inertia = we(gt.textContent);
                  break;
                case "mass":
                  Ke.mass = we(gt.textContent)[0];
              }
          }
        }
        function ki(qe) {
          for (var Ke = { target: qe.getAttribute("target").split("/").pop() }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "axis":
                  var dt = gt.getElementsByTagName("param")[0];
                  Ke.axis = dt.textContent;
                  var er = Ke.axis.split("inst_").pop().split("axis")[0];
                  Ke.jointIndex = er.substr(0, er.length - 1);
              }
          }
          return Ke;
        }
        function Pn(qe) {
          return qe.build !== void 0 ? qe.build : qe;
        }
        var ni = new ce.Matrix4(), Xn = new ce.Vector3();
        function fi(qe) {
          for (var Ke = { name: qe.getAttribute("name") || "", type: qe.getAttribute("type"), id: qe.getAttribute("id"), sid: qe.getAttribute("sid"), matrix: new ce.Matrix4(), nodes: [], instanceCameras: [], instanceControllers: [], instanceLights: [], instanceGeometries: [], instanceNodes: [], transforms: {} }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "node":
                  Ke.nodes.push(gt.getAttribute("id")), fi(gt);
                  break;
                case "instance_camera":
                  Ke.instanceCameras.push(He(gt.getAttribute("url")));
                  break;
                case "instance_controller":
                  Ke.instanceControllers.push(Bi(gt));
                  break;
                case "instance_light":
                  Ke.instanceLights.push(He(gt.getAttribute("url")));
                  break;
                case "instance_geometry":
                  Ke.instanceGeometries.push(Bi(gt));
                  break;
                case "instance_node":
                  Ke.instanceNodes.push(He(gt.getAttribute("url")));
                  break;
                case "matrix":
                  var dt = we(gt.textContent);
                  Ke.matrix.multiply(ni.fromArray(dt).transpose()), Ke.transforms[gt.getAttribute("sid")] = gt.nodeName;
                  break;
                case "translate":
                  dt = we(gt.textContent), Xn.fromArray(dt), Ke.matrix.multiply(ni.makeTranslation(Xn.x, Xn.y, Xn.z)), Ke.transforms[gt.getAttribute("sid")] = gt.nodeName;
                  break;
                case "rotate":
                  dt = we(gt.textContent);
                  var er = ce.Math.degToRad(dt[3]);
                  Ke.matrix.multiply(ni.makeRotationAxis(Xn.fromArray(dt), er)), Ke.transforms[gt.getAttribute("sid")] = gt.nodeName;
                  break;
                case "scale":
                  dt = we(gt.textContent), Ke.matrix.scale(Xn.fromArray(dt)), Ke.transforms[gt.getAttribute("sid")] = gt.nodeName;
                  break;
                case "extra":
                  break;
                default:
                  console.log(gt);
              }
          }
          return Xt.nodes[Ke.id] = Ke, Ke;
        }
        function Bi(qe) {
          for (var Ke = { id: He(qe.getAttribute("url")), materials: {}, skeletons: [] }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            switch (gt.nodeName) {
              case "bind_material":
                for (var dt = gt.getElementsByTagName("instance_material"), er = 0; er < dt.length; er++) {
                  var dr = dt[er], ur = dr.getAttribute("symbol"), Rr = dr.getAttribute("target");
                  Ke.materials[ur] = He(Rr);
                }
                break;
              case "skeleton":
                Ke.skeletons.push(He(gt.textContent));
            }
          }
          return Ke;
        }
        function Ci(qe, Ke) {
          var At, gt, dt = [], er = [];
          for (At = 0; At < qe.length; At++) {
            var dr = qe[At];
            if (zr(dr))
              Ii(wn(dr), Ke, dt);
            else if (_n(dr))
              for (var ur = Xt.visualScenes[dr].children, Rr = 0; Rr < ur.length; Rr++) {
                var Jr = ur[Rr];
                Jr.type === "JOINT" && Ii(wn(Jr.id), Ke, dt);
              }
            else
              console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:", dr);
          }
          for (At = 0; At < Ke.length; At++)
            for (Rr = 0; Rr < dt.length; Rr++)
              if ((gt = dt[Rr]).bone.name === Ke[At].name) {
                er[At] = gt, gt.processed = !0;
                break;
              }
          for (At = 0; At < dt.length; At++)
            (gt = dt[At]).processed === !1 && (er.push(gt), gt.processed = !0);
          var Mr = [], Zr = [];
          for (At = 0; At < er.length; At++)
            gt = er[At], Mr.push(gt.bone), Zr.push(gt.boneInverse);
          return new ce.Skeleton(Mr, Zr);
        }
        function Ii(qe, Ke, At) {
          qe.traverse(function(gt) {
            if (gt.isBone === !0) {
              for (var dt, er = 0; er < Ke.length; er++) {
                var dr = Ke[er];
                if (dr.name === gt.name) {
                  dt = dr.boneInverse;
                  break;
                }
              }
              dt === void 0 && (dt = new ce.Matrix4()), At.push({ bone: gt, boneInverse: dt, processed: !1 });
            }
          });
        }
        function Ft(qe) {
          for (var Ke = [], At = qe.matrix, gt = qe.nodes, dt = qe.type, er = qe.instanceCameras, dr = qe.instanceControllers, ur = qe.instanceLights, Rr = qe.instanceGeometries, Jr = qe.instanceNodes, Mr = 0, Zr = gt.length; Mr < Zr; Mr++)
            Ke.push(wn(gt[Mr]));
          for (Mr = 0, Zr = er.length; Mr < Zr; Mr++) {
            var Rn = De(er[Mr]);
            Rn !== null && Ke.push(Rn.clone());
          }
          for (Mr = 0, Zr = dr.length; Mr < Zr; Mr++)
            for (var Fn = ir((On = dr[Mr]).id), Gn = Gr(cn(Fn.id), On.materials), qr = Ci(On.skeletons, Fn.skin.joints), jr = 0, bn = Gn.length; jr < bn; jr++) {
              var gn;
              (gn = Gn[jr]).isSkinnedMesh && (gn.bind(qr, Fn.skin.bindMatrix), gn.normalizeSkinWeights()), Ke.push(gn);
            }
          for (Mr = 0, Zr = ur.length; Mr < Zr; Mr++) {
            var sn = bt(ur[Mr]);
            sn !== null && Ke.push(sn.clone());
          }
          for (Mr = 0, Zr = Rr.length; Mr < Zr; Mr++) {
            var On;
            for (jr = 0, bn = (Gn = Gr(cn((On = Rr[Mr]).id), On.materials)).length; jr < bn; jr++)
              Ke.push(Gn[jr]);
          }
          for (Mr = 0, Zr = Jr.length; Mr < Zr; Mr++)
            Ke.push(wn(Jr[Mr]).clone());
          if (gt.length === 0 && Ke.length === 1)
            gn = Ke[0];
          else
            for (gn = dt === "JOINT" ? new ce.Bone() : new ce.Group(), Mr = 0; Mr < Ke.length; Mr++)
              gn.add(Ke[Mr]);
          return gn.name === "" && (gn.name = dt === "JOINT" ? qe.sid : qe.name), gn.matrix.copy(At), gn.matrix.decompose(gn.position, gn.quaternion, gn.scale), gn;
        }
        function sr(qe, Ke) {
          for (var At = [], gt = 0, dt = qe.length; gt < dt; gt++) {
            var er = Ke[qe[gt]];
            At.push(ct(er));
          }
          return At;
        }
        function Gr(qe, Ke) {
          var At = [];
          for (var gt in qe) {
            var dt = qe[gt], er = sr(dt.materialKeys, Ke);
            er.length === 0 && (gt === "lines" || gt === "linestrips" ? er.push(new ce.LineBasicMaterial()) : er.push(new ce.MeshPhongMaterial()));
            var dr = dt.data.attributes.skinIndex !== void 0;
            if (dr)
              for (var ur = 0, Rr = er.length; ur < Rr; ur++)
                er[ur].skinning = !0;
            var Jr, Mr = er.length === 1 ? er[0] : er;
            switch (gt) {
              case "lines":
                Jr = new ce.LineSegments(dt.data, Mr);
                break;
              case "linestrips":
                Jr = new ce.Line(dt.data, Mr);
                break;
              case "triangles":
              case "polylist":
                Jr = dr ? new ce.SkinnedMesh(dt.data, Mr) : new ce.Mesh(dt.data, Mr);
            }
            At.push(Jr);
          }
          return At;
        }
        function zr(qe) {
          return Xt.nodes[qe] !== void 0;
        }
        function wn(qe) {
          return Pe(Xt.nodes[qe], Ft);
        }
        function Tn(qe) {
          var Ke = new ce.Group();
          Ke.name = qe.name;
          for (var At = qe.children, gt = 0; gt < At.length; gt++) {
            var dt = At[gt];
            Ke.add(wn(dt.id));
          }
          return Ke;
        }
        function _n(qe) {
          return Xt.visualScenes[qe] !== void 0;
        }
        function vn(qe) {
          return Pe(Xt.visualScenes[qe], Tn);
        }
        if (Ee.length === 0)
          return { scene: new ce.Scene() };
        var kn = ge(new DOMParser().parseFromString(Ee, "application/xml"), "COLLADA")[0], Zn = kn.getAttribute("version");
        console.log("THREE.ColladaLoader: File version", Zn);
        var An = function(qe) {
          return { unit: function(Ke) {
            return Ke !== void 0 && Ke.hasAttribute("meter") === !0 ? parseFloat(Ke.getAttribute("meter")) : 1;
          }(ge(qe, "unit")[0]), upAxis: function(Ke) {
            return Ke !== void 0 ? Ke.textContent : "Y_UP";
          }(ge(qe, "up_axis")[0]) };
        }(ge(kn, "asset")[0]), nn = new ce.TextureLoader(this.manager);
        nn.setPath(me).setCrossOrigin(this.crossOrigin);
        var Kr = [], xt = {}, Sr = 0, Xt = { animations: {}, clips: {}, controllers: {}, images: {}, effects: {}, materials: {}, cameras: {}, lights: {}, geometries: {}, nodes: {}, visualScenes: {}, kinematicsModels: {}, physicsModels: {}, kinematicsScenes: {} };
        Ge(kn, "library_animations", "animation", function(qe) {
          for (var Ke = { sources: {}, samplers: {}, channels: {} }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt, er = qe.childNodes[At];
            if (er.nodeType === 1)
              switch (er.nodeName) {
                case "source":
                  dt = er.getAttribute("id"), Ke.sources[dt] = Pt(er);
                  break;
                case "sampler":
                  dt = er.getAttribute("id"), Ke.samplers[dt] = We(er);
                  break;
                case "channel":
                  dt = er.getAttribute("target"), Ke.channels[dt] = tt(er);
                  break;
                default:
                  console.log(er);
              }
          }
          Xt.animations[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_animation_clips", "animation_clip", function(qe) {
          for (var Ke = { name: qe.getAttribute("id") || "default", start: parseFloat(qe.getAttribute("start") || 0), end: parseFloat(qe.getAttribute("end") || 0), animations: [] }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "instance_animation":
                  Ke.animations.push(He(dt.getAttribute("url")));
              }
          }
          Xt.clips[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_controllers", "controller", function(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "skin":
                  Ke.id = He(dt.getAttribute("source")), Ke.skin = at(dt);
                  break;
                case "morph":
                  Ke.id = He(dt.getAttribute("source")), console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");
              }
          }
          Xt.controllers[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_images", "image", function(qe) {
          var Ke = { init_from: ge(qe, "init_from")[0].textContent };
          Xt.images[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_effects", "effect", function(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "profile_COMMON":
                  Ke.profile = ht(dt);
              }
          }
          Xt.effects[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_materials", "material", function(qe) {
          for (var Ke = { name: qe.getAttribute("name") }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "instance_effect":
                  Ke.url = He(dt.getAttribute("url"));
              }
          }
          Xt.materials[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_cameras", "camera", function(qe) {
          for (var Ke = { name: qe.getAttribute("name") }, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "optics":
                  Ke.optics = kt(dt);
              }
          }
          Xt.cameras[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_lights", "light", function(qe) {
          for (var Ke = {}, At = 0, gt = qe.childNodes.length; At < gt; At++) {
            var dt = qe.childNodes[At];
            if (dt.nodeType === 1)
              switch (dt.nodeName) {
                case "technique_common":
                  Ke = Te(dt);
              }
          }
          Xt.lights[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_geometries", "geometry", function(qe) {
          var Ke = { name: qe.getAttribute("name"), sources: {}, vertices: {}, primitives: [] }, At = ge(qe, "mesh")[0];
          if (At !== void 0) {
            for (var gt = 0; gt < At.childNodes.length; gt++) {
              var dt = At.childNodes[gt];
              if (dt.nodeType === 1) {
                var er = dt.getAttribute("id");
                switch (dt.nodeName) {
                  case "source":
                    Ke.sources[er] = Pt(dt);
                    break;
                  case "vertices":
                    Ke.vertices = Vt(dt);
                    break;
                  case "polygons":
                    console.warn("THREE.ColladaLoader: Unsupported primitive type: ", dt.nodeName);
                    break;
                  case "lines":
                  case "linestrips":
                  case "polylist":
                  case "triangles":
                    Ke.primitives.push(Ir(dt));
                    break;
                  default:
                    console.log(dt);
                }
              }
            }
            Xt.geometries[qe.getAttribute("id")] = Ke;
          }
        }), Ge(kn, "library_nodes", "node", fi), Ge(kn, "library_visual_scenes", "visual_scene", function(qe) {
          var Ke = { name: qe.getAttribute("name"), children: [] };
          (function(dt) {
            for (var er = dt.getElementsByTagName("node"), dr = 0; dr < er.length; dr++) {
              var ur = er[dr];
              ur.hasAttribute("id") === !1 && ur.setAttribute("id", "three_default_" + Sr++);
            }
          })(qe);
          for (var At = ge(qe, "node"), gt = 0; gt < At.length; gt++)
            Ke.children.push(fi(At[gt]));
          Xt.visualScenes[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_kinematics_models", "kinematics_model", function(qe) {
          for (var Ke = { name: qe.getAttribute("name") || "", joints: {}, links: [] }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "technique_common":
                  un(gt, Ke);
              }
          }
          Xt.kinematicsModels[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "library_physics_models", "physics_model", function(qe) {
          for (var Ke = { name: qe.getAttribute("name") || "", rigidBodies: {} }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "rigid_body":
                  Ke.rigidBodies[gt.getAttribute("name")] = {}, yi(gt, Ke.rigidBodies[gt.getAttribute("name")]);
              }
          }
          Xt.physicsModels[qe.getAttribute("id")] = Ke;
        }), Ge(kn, "scene", "instance_kinematics_scene", function(qe) {
          for (var Ke = { bindJointAxis: [] }, At = 0; At < qe.childNodes.length; At++) {
            var gt = qe.childNodes[At];
            if (gt.nodeType === 1)
              switch (gt.nodeName) {
                case "bind_joint_axis":
                  Ke.bindJointAxis.push(ki(gt));
              }
          }
          Xt.kinematicsScenes[He(qe.getAttribute("url"))] = Ke;
        }), Fe(Xt.animations, Et), Fe(Xt.clips, Wt), Fe(Xt.controllers, $e), Fe(Xt.images, tr), Fe(Xt.effects, Ve), Fe(Xt.materials, Ze), Fe(Xt.cameras, Zt), Fe(Xt.lights, ot), Fe(Xt.geometries, _r), Fe(Xt.visualScenes, Tn), function() {
          var qe = Xt.clips;
          if (Se(qe) === !0) {
            if (Se(Xt.animations) === !1) {
              var Ke = [];
              for (var At in Xt.animations)
                for (var gt = Nt(At), dt = 0, er = gt.length; dt < er; dt++)
                  Ke.push(gt[dt]);
              Kr.push(new ce.AnimationClip("default", -1, Ke));
            }
          } else
            for (var At in qe)
              Kr.push(st(At));
        }(), function() {
          var qe = Object.keys(Xt.kinematicsModels)[0], Ke = Object.keys(Xt.kinematicsScenes)[0], At = Object.keys(Xt.visualScenes)[0];
          if (qe !== void 0 && Ke !== void 0) {
            for (var gt = function(qr) {
              return Pe(Xt.kinematicsModels[qr], oi);
            }(qe), dt = function(qr) {
              return Pe(Xt.kinematicsScenes[qr], Pn);
            }(Ke), er = vn(At), dr = dt.bindJointAxis, ur = {}, Rr = 0, Jr = dr.length; Rr < Jr; Rr++) {
              var Mr = dr[Rr], Zr = kn.querySelector('[sid="' + Mr.target + '"]');
              if (Zr) {
                var Rn = Zr.parentElement;
                Gn(Mr.jointIndex, Rn);
              }
            }
            var Fn = new ce.Matrix4();
            xt = { joints: gt && gt.joints, getJointValue: function(qr) {
              var jr = ur[qr];
              if (jr)
                return jr.position;
              console.warn("THREE.ColladaLoader: Joint " + qr + " doesn't exist.");
            }, setJointValue: function(qr, jr) {
              var bn = ur[qr];
              if (bn) {
                var gn = bn.joint;
                if (jr > gn.limits.max || jr < gn.limits.min)
                  console.warn("THREE.ColladaLoader: Joint " + qr + " value " + jr + " outside of limits (min: " + gn.limits.min + ", max: " + gn.limits.max + ").");
                else if (gn.static)
                  console.warn("THREE.ColladaLoader: Joint " + qr + " is static.");
                else {
                  var sn = bn.object, On = gn.axis, ii = bn.transforms;
                  ni.identity();
                  for (var xn = 0; xn < ii.length; xn++) {
                    var Wr = ii[xn];
                    if (Wr.sid && Wr.sid.indexOf(qr) !== -1)
                      switch (gn.type) {
                        case "revolute":
                          ni.multiply(Fn.makeRotationAxis(On, ce.Math.degToRad(jr)));
                          break;
                        case "prismatic":
                          ni.multiply(Fn.makeTranslation(On.x * jr, On.y * jr, On.z * jr));
                          break;
                        default:
                          console.warn("THREE.ColladaLoader: Unknown joint type: " + gn.type);
                      }
                    else
                      switch (Wr.type) {
                        case "matrix":
                          ni.multiply(Wr.obj);
                          break;
                        case "translate":
                          ni.multiply(Fn.makeTranslation(Wr.obj.x, Wr.obj.y, Wr.obj.z));
                          break;
                        case "scale":
                          ni.scale(Wr.obj);
                          break;
                        case "rotate":
                          ni.multiply(Fn.makeRotationAxis(Wr.obj, Wr.angle));
                      }
                  }
                  sn.matrix.copy(ni), sn.matrix.decompose(sn.position, sn.quaternion, sn.scale), ur[qr].position = jr;
                }
              } else
                console.log("THREE.ColladaLoader: " + qr + " does not exist.");
            } };
          }
          function Gn(qr, jr) {
            var bn = jr.getAttribute("name"), gn = gt.joints[qr];
            er.traverse(function(sn) {
              sn.name === bn && (ur[qr] = { object: sn, transforms: function(On) {
                for (var ii = [], xn = kn.querySelector('[id="' + On.id + '"]'), Wr = 0; Wr < xn.childNodes.length; Wr++) {
                  var Cn = xn.childNodes[Wr];
                  if (Cn.nodeType === 1)
                    switch (Cn.nodeName) {
                      case "matrix":
                        var Qi = we(Cn.textContent), zn = new ce.Matrix4().fromArray(Qi).transpose();
                        ii.push({ sid: Cn.getAttribute("sid"), type: Cn.nodeName, obj: zn });
                        break;
                      case "translate":
                      case "scale":
                        var Qi = we(Cn.textContent), Mi = new ce.Vector3().fromArray(Qi);
                        ii.push({ sid: Cn.getAttribute("sid"), type: Cn.nodeName, obj: Mi });
                        break;
                      case "rotate":
                        var Qi = we(Cn.textContent), Mi = new ce.Vector3().fromArray(Qi), Eo = ce.Math.degToRad(Qi[3]);
                        ii.push({ sid: Cn.getAttribute("sid"), type: Cn.nodeName, obj: Mi, angle: Eo });
                    }
                }
                return ii;
              }(jr), joint: gn, position: gn.zeroPosition });
            });
          }
        }();
        var Vr = function(qe) {
          return vn(He(ge(qe, "instance_visual_scene")[0].getAttribute("url")));
        }(ge(kn, "scene")[0]);
        return An.upAxis === "Z_UP" && Vr.quaternion.setFromEuler(new ce.Euler(-Math.PI / 2, 0, 0)), Vr.scale.multiplyScalar(An.unit), { animations: Kr, kinematics: xt, library: Xt, scene: Vr };
      } }, ce.GLTFLoader = function() {
        function Ee(Ye) {
          this.manager = Ye !== void 0 ? Ye : ce.DefaultLoadingManager, this.dracoLoader = null;
        }
        Ee.prototype = { constructor: Ee, crossOrigin: "anonymous", load: function(Ye, _e, Ie, Ce) {
          var ke = this, Ve = this.path !== void 0 ? this.path : ce.LoaderUtils.extractUrlBase(Ye), Ze = new ce.FileLoader(ke.manager);
          Ze.setResponseType("arraybuffer"), Ze.load(Ye, function(ct) {
            try {
              ke.parse(ct, Ve, _e, Ce);
            } catch (kt) {
              if (Ce === void 0)
                throw kt;
              Ce(kt);
            }
          }, Ie, Ce);
        }, setCrossOrigin: function(Ye) {
          return this.crossOrigin = Ye, this;
        }, setPath: function(Ye) {
          return this.path = Ye, this;
        }, setDRACOLoader: function(Ye) {
          return this.dracoLoader = Ye, this;
        }, parse: function(Ye, _e, Ie, Ce) {
          var ke, Ve = {};
          if (typeof Ye == "string")
            ke = Ye;
          else if (ce.LoaderUtils.decodeText(new Uint8Array(Ye, 0, 4)) === Oe) {
            try {
              Ve[me.KHR_BINARY_GLTF] = new function(Zt) {
                this.name = me.KHR_BINARY_GLTF, this.content = null, this.body = null;
                var De = new DataView(Zt, 0, He);
                if (this.header = { magic: ce.LoaderUtils.decodeText(new Uint8Array(Zt.slice(0, 4))), version: De.getUint32(4, !0), length: De.getUint32(8, !0) }, this.header.magic !== Oe)
                  throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");
                if (this.header.version < 2)
                  throw new Error("THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");
                for (var Te = new DataView(Zt, He), Re = 0; Re < Te.byteLength; ) {
                  var ot = Te.getUint32(Re, !0);
                  Re += 4;
                  var bt = Te.getUint32(Re, !0);
                  if (Re += 4, bt === Se.JSON) {
                    var Pt = new Uint8Array(Zt, He + Re, ot);
                    this.content = ce.LoaderUtils.decodeText(Pt);
                  } else if (bt === Se.BIN) {
                    var Vt = He + Re;
                    this.body = Zt.slice(Vt, Vt + ot);
                  }
                  Re += ot;
                }
                if (this.content === null)
                  throw new Error("THREE.GLTFLoader: JSON content not found.");
              }(Ye);
            } catch (Zt) {
              return void (Ce && Ce(Zt));
            }
            ke = Ve[me.KHR_BINARY_GLTF].content;
          } else
            ke = ce.LoaderUtils.decodeText(new Uint8Array(Ye));
          var Ze = JSON.parse(ke);
          if (Ze.asset === void 0 || Ze.asset.version[0] < 2)
            Ce && Ce(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead."));
          else {
            if (Ze.extensionsUsed)
              for (var ct = 0; ct < Ze.extensionsUsed.length; ++ct) {
                var kt = Ze.extensionsUsed[ct], Jt = Ze.extensionsRequired || [];
                switch (kt) {
                  case me.KHR_LIGHTS:
                    Ve[kt] = new be(Ze);
                    break;
                  case me.KHR_MATERIALS_UNLIT:
                    Ve[kt] = new we();
                    break;
                  case me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:
                    Ve[kt] = new Fe();
                    break;
                  case me.KHR_DRACO_MESH_COMPRESSION:
                    Ve[kt] = new Ge(Ze, this.dracoLoader);
                    break;
                  case me.MSFT_TEXTURE_DDS:
                    Ve[me.MSFT_TEXTURE_DDS] = new ge();
                    break;
                  default:
                    Jt.indexOf(kt) >= 0 && console.warn('THREE.GLTFLoader: Unknown extension "' + kt + '".');
                }
              }
            var Kt = new It(Ze, Ve, { path: _e || this.path || "", crossOrigin: this.crossOrigin, manager: this.manager });
            Kt.parse(function(Zt, De, Te, Re, ot) {
              var bt = { scene: Zt, scenes: De, cameras: Te, animations: Re, asset: ot.asset, parser: Kt, userData: {} };
              tr(Ve, bt, ot), Ie(bt);
            }, Ce);
          }
        } };
        var me = { KHR_BINARY_GLTF: "KHR_binary_glTF", KHR_DRACO_MESH_COMPRESSION: "KHR_draco_mesh_compression", KHR_LIGHTS: "KHR_lights", KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: "KHR_materials_pbrSpecularGlossiness", KHR_MATERIALS_UNLIT: "KHR_materials_unlit", MSFT_TEXTURE_DDS: "MSFT_texture_dds" };
        function ge() {
          if (!ce.DDSLoader)
            throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader");
          this.name = me.MSFT_TEXTURE_DDS, this.ddsLoader = new ce.DDSLoader();
        }
        function be(Ye) {
          this.name = me.KHR_LIGHTS, this.lights = {};
          var _e = (Ye.extensions && Ye.extensions[me.KHR_LIGHTS] || {}).lights || {};
          for (var Ie in _e) {
            var Ce, ke = _e[Ie], Ve = new ce.Color().fromArray(ke.color);
            switch (ke.type) {
              case "directional":
                (Ce = new ce.DirectionalLight(Ve)).target.position.set(0, 0, 1), Ce.add(Ce.target);
                break;
              case "point":
                Ce = new ce.PointLight(Ve);
                break;
              case "spot":
                Ce = new ce.SpotLight(Ve), ke.spot = ke.spot || {}, ke.spot.innerConeAngle = ke.spot.innerConeAngle !== void 0 ? ke.spot.innerConeAngle : 0, ke.spot.outerConeAngle = ke.spot.outerConeAngle !== void 0 ? ke.spot.outerConeAngle : Math.PI / 4, Ce.angle = ke.spot.outerConeAngle, Ce.penumbra = 1 - ke.spot.innerConeAngle / ke.spot.outerConeAngle, Ce.target.position.set(0, 0, 1), Ce.add(Ce.target);
                break;
              case "ambient":
                Ce = new ce.AmbientLight(Ve);
            }
            Ce && (Ce.decay = 2, ke.intensity !== void 0 && (Ce.intensity = ke.intensity), Ce.name = ke.name || "light_" + Ie, this.lights[Ie] = Ce);
          }
        }
        function we(Ye) {
          this.name = me.KHR_MATERIALS_UNLIT;
        }
        we.prototype.getMaterialType = function(Ye) {
          return ce.MeshBasicMaterial;
        }, we.prototype.extendParams = function(Ye, _e, Ie) {
          var Ce = [];
          Ye.color = new ce.Color(1, 1, 1), Ye.opacity = 1;
          var ke = _e.pbrMetallicRoughness;
          if (ke) {
            if (Array.isArray(ke.baseColorFactor)) {
              var Ve = ke.baseColorFactor;
              Ye.color.fromArray(Ve), Ye.opacity = Ve[3];
            }
            ke.baseColorTexture !== void 0 && Ce.push(Ie.assignTexture(Ye, "map", ke.baseColorTexture.index));
          }
          return Promise.all(Ce);
        };
        var Oe = "glTF", He = 12, Se = { JSON: 1313821514, BIN: 5130562 };
        function Ge(Ye, _e) {
          if (!_e)
            throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");
          this.name = me.KHR_DRACO_MESH_COMPRESSION, this.json = Ye, this.dracoLoader = _e;
        }
        function Fe() {
          return { name: me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS, specularGlossinessParams: ["color", "map", "lightMap", "lightMapIntensity", "aoMap", "aoMapIntensity", "emissive", "emissiveIntensity", "emissiveMap", "bumpMap", "bumpScale", "normalMap", "displacementMap", "displacementScale", "displacementBias", "specularMap", "specular", "glossinessMap", "glossiness", "alphaMap", "envMap", "envMapIntensity", "refractionRatio"], getMaterialType: function() {
            return ce.ShaderMaterial;
          }, extendParams: function(Ye, _e, Ie) {
            var Ce = _e.extensions[this.name], ke = ce.ShaderLib.standard, Ve = ce.UniformsUtils.clone(ke.uniforms), Ze = ["#ifdef USE_SPECULARMAP", "	uniform sampler2D specularMap;", "#endif"].join(`
`), ct = ["#ifdef USE_GLOSSINESSMAP", "	uniform sampler2D glossinessMap;", "#endif"].join(`
`), kt = ["vec3 specularFactor = specular;", "#ifdef USE_SPECULARMAP", "	vec4 texelSpecular = texture2D( specularMap, vUv );", "	texelSpecular = sRGBToLinear( texelSpecular );", "	// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture", "	specularFactor *= texelSpecular.rgb;", "#endif"].join(`
`), Jt = ["float glossinessFactor = glossiness;", "#ifdef USE_GLOSSINESSMAP", "	vec4 texelGlossiness = texture2D( glossinessMap, vUv );", "	// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture", "	glossinessFactor *= texelGlossiness.a;", "#endif"].join(`
`), Kt = ["PhysicalMaterial material;", "material.diffuseColor = diffuseColor.rgb;", "material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );", "material.specularColor = specularFactor.rgb;"].join(`
`), Zt = ke.fragmentShader.replace("uniform float roughness;", "uniform vec3 specular;").replace("uniform float metalness;", "uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>", Ze).replace("#include <metalnessmap_pars_fragment>", ct).replace("#include <roughnessmap_fragment>", kt).replace("#include <metalnessmap_fragment>", Jt).replace("#include <lights_physical_fragment>", Kt);
            delete Ve.roughness, delete Ve.metalness, delete Ve.roughnessMap, delete Ve.metalnessMap, Ve.specular = { value: new ce.Color().setHex(1118481) }, Ve.glossiness = { value: 0.5 }, Ve.specularMap = { value: null }, Ve.glossinessMap = { value: null }, Ye.vertexShader = ke.vertexShader, Ye.fragmentShader = Zt, Ye.uniforms = Ve, Ye.defines = { STANDARD: "" }, Ye.color = new ce.Color(1, 1, 1), Ye.opacity = 1;
            var De = [];
            if (Array.isArray(Ce.diffuseFactor)) {
              var Te = Ce.diffuseFactor;
              Ye.color.fromArray(Te), Ye.opacity = Te[3];
            }
            if (Ce.diffuseTexture !== void 0 && De.push(Ie.assignTexture(Ye, "map", Ce.diffuseTexture.index)), Ye.emissive = new ce.Color(0, 0, 0), Ye.glossiness = Ce.glossinessFactor !== void 0 ? Ce.glossinessFactor : 1, Ye.specular = new ce.Color(1, 1, 1), Array.isArray(Ce.specularFactor) && Ye.specular.fromArray(Ce.specularFactor), Ce.specularGlossinessTexture !== void 0) {
              var Re = Ce.specularGlossinessTexture.index;
              De.push(Ie.assignTexture(Ye, "glossinessMap", Re)), De.push(Ie.assignTexture(Ye, "specularMap", Re));
            }
            return Promise.all(De);
          }, createMaterial: function(Ye) {
            var _e = new ce.ShaderMaterial({ defines: Ye.defines, vertexShader: Ye.vertexShader, fragmentShader: Ye.fragmentShader, uniforms: Ye.uniforms, fog: !0, lights: !0, opacity: Ye.opacity, transparent: Ye.transparent });
            return _e.isGLTFSpecularGlossinessMaterial = !0, _e.color = Ye.color, _e.map = Ye.map === void 0 ? null : Ye.map, _e.lightMap = null, _e.lightMapIntensity = 1, _e.aoMap = Ye.aoMap === void 0 ? null : Ye.aoMap, _e.aoMapIntensity = 1, _e.emissive = Ye.emissive, _e.emissiveIntensity = 1, _e.emissiveMap = Ye.emissiveMap === void 0 ? null : Ye.emissiveMap, _e.bumpMap = Ye.bumpMap === void 0 ? null : Ye.bumpMap, _e.bumpScale = 1, _e.normalMap = Ye.normalMap === void 0 ? null : Ye.normalMap, Ye.normalScale && (_e.normalScale = Ye.normalScale), _e.displacementMap = null, _e.displacementScale = 1, _e.displacementBias = 0, _e.specularMap = Ye.specularMap === void 0 ? null : Ye.specularMap, _e.specular = Ye.specular, _e.glossinessMap = Ye.glossinessMap === void 0 ? null : Ye.glossinessMap, _e.glossiness = Ye.glossiness, _e.alphaMap = null, _e.envMap = Ye.envMap === void 0 ? null : Ye.envMap, _e.envMapIntensity = 1, _e.refractionRatio = 0.98, _e.extensions.derivatives = !0, _e;
          }, cloneMaterial: function(Ye) {
            var _e = Ye.clone();
            _e.isGLTFSpecularGlossinessMaterial = !0;
            for (var Ie = this.specularGlossinessParams, Ce = 0, ke = Ie.length; Ce < ke; Ce++)
              _e[Ie[Ce]] = Ye[Ie[Ce]];
            return _e;
          }, refreshUniforms: function(Ye, _e, Ie, Ce, ke, Ve) {
            if (ke.isGLTFSpecularGlossinessMaterial === !0) {
              var Ze, ct = ke.uniforms, kt = ke.defines;
              ct.opacity.value = ke.opacity, ct.diffuse.value.copy(ke.color), ct.emissive.value.copy(ke.emissive).multiplyScalar(ke.emissiveIntensity), ct.map.value = ke.map, ct.specularMap.value = ke.specularMap, ct.alphaMap.value = ke.alphaMap, ct.lightMap.value = ke.lightMap, ct.lightMapIntensity.value = ke.lightMapIntensity, ct.aoMap.value = ke.aoMap, ct.aoMapIntensity.value = ke.aoMapIntensity, ke.map ? Ze = ke.map : ke.specularMap ? Ze = ke.specularMap : ke.displacementMap ? Ze = ke.displacementMap : ke.normalMap ? Ze = ke.normalMap : ke.bumpMap ? Ze = ke.bumpMap : ke.glossinessMap ? Ze = ke.glossinessMap : ke.alphaMap ? Ze = ke.alphaMap : ke.emissiveMap && (Ze = ke.emissiveMap), Ze !== void 0 && (Ze.isWebGLRenderTarget && (Ze = Ze.texture), Ze.matrixAutoUpdate === !0 && Ze.updateMatrix(), ct.uvTransform.value.copy(Ze.matrix)), ct.envMap.value = ke.envMap, ct.envMapIntensity.value = ke.envMapIntensity, ct.flipEnvMap.value = ke.envMap && ke.envMap.isCubeTexture ? -1 : 1, ct.refractionRatio.value = ke.refractionRatio, ct.specular.value.copy(ke.specular), ct.glossiness.value = ke.glossiness, ct.glossinessMap.value = ke.glossinessMap, ct.emissiveMap.value = ke.emissiveMap, ct.bumpMap.value = ke.bumpMap, ct.normalMap.value = ke.normalMap, ct.displacementMap.value = ke.displacementMap, ct.displacementScale.value = ke.displacementScale, ct.displacementBias.value = ke.displacementBias, ct.glossinessMap.value !== null && kt.USE_GLOSSINESSMAP === void 0 && (kt.USE_GLOSSINESSMAP = "", kt.USE_ROUGHNESSMAP = ""), ct.glossinessMap.value === null && kt.USE_GLOSSINESSMAP !== void 0 && (delete kt.USE_GLOSSINESSMAP, delete kt.USE_ROUGHNESSMAP);
            }
          } };
        }
        function Pe(Ye, _e, Ie, Ce) {
          ce.Interpolant.call(this, Ye, _e, Ie, Ce);
        }
        Ge.prototype.decodePrimitive = function(Ye, _e) {
          var Ie = this.json, Ce = this.dracoLoader, ke = Ye.extensions[this.name].bufferView, Ve = Ye.extensions[this.name].attributes, Ze = {}, ct = {}, kt = {};
          for (var Jt in Ve)
            Jt in Wt && (Ze[Wt[Jt]] = Ve[Jt]);
          for (Jt in Ye.attributes)
            if (Wt[Jt] !== void 0 && Ve[Jt] !== void 0) {
              var Kt = Ie.accessors[Ye.attributes[Jt]], Zt = Ot[Kt.componentType];
              kt[Wt[Jt]] = Zt, ct[Wt[Jt]] = Kt.normalized === !0;
            }
          return _e.getDependency("bufferView", ke).then(function(De) {
            return new Promise(function(Te) {
              Ce.decodeDracoFile(De, function(Re) {
                for (var ot in Re.attributes) {
                  var bt = Re.attributes[ot], Pt = ct[ot];
                  Pt !== void 0 && (bt.normalized = Pt);
                }
                Te(Re);
              }, Ze, kt);
            });
          });
        }, Pe.prototype = Object.create(ce.Interpolant.prototype), Pe.prototype.constructor = Pe, Pe.prototype.interpolate_ = function(Ye, _e, Ie, Ce) {
          for (var ke = this.resultBuffer, Ve = this.sampleValues, Ze = this.valueSize, ct = 2 * Ze, kt = 3 * Ze, Jt = Ce - _e, Kt = (Ie - _e) / Jt, Zt = Kt * Kt, De = Zt * Kt, Te = Ye * kt, Re = Te - kt, ot = 2 * De - 3 * Zt + 1, bt = De - 2 * Zt + Kt, Pt = -2 * De + 3 * Zt, Vt = De - Zt, Ir = 0; Ir !== Ze; Ir++) {
            var mr = Ve[Re + Ir + Ze], _r = Ve[Re + Ir + ct] * Jt, Br = Ve[Te + Ir + Ze], Tr = Ve[Te + Ir] * Jt;
            ke[Ir] = ot * mr + bt * _r + Pt * Br + Vt * Tr;
          }
          return ke;
        };
        var We = 0, tt = 1, Et = 2, Nt = 3, et = 4, mt = 5, Mt = 6, Ot = (ce.Matrix3, ce.Matrix4, ce.Vector2, ce.Vector3, ce.Vector4, ce.Texture, { 5120: Int8Array, 5121: Uint8Array, 5122: Int16Array, 5123: Uint16Array, 5125: Uint32Array, 5126: Float32Array }), yt = { 9728: ce.NearestFilter, 9729: ce.LinearFilter, 9984: ce.NearestMipMapNearestFilter, 9985: ce.LinearMipMapNearestFilter, 9986: ce.NearestMipMapLinearFilter, 9987: ce.LinearMipMapLinearFilter }, Qt = { 33071: ce.ClampToEdgeWrapping, 33648: ce.MirroredRepeatWrapping, 10497: ce.RepeatWrapping }, Yt = { 6406: ce.AlphaFormat, 6407: ce.RGBFormat, 6408: ce.RGBAFormat, 6409: ce.LuminanceFormat, 6410: ce.LuminanceAlphaFormat }, jt = { 5121: ce.UnsignedByteType, 32819: ce.UnsignedShort4444Type, 32820: ce.UnsignedShort5551Type, 33635: ce.UnsignedShort565Type }, $t = (ce.BackSide, ce.FrontSide, ce.NeverDepth, ce.LessDepth, ce.EqualDepth, ce.LessEqualDepth, ce.GreaterEqualDepth, ce.NotEqualDepth, ce.GreaterEqualDepth, ce.AlwaysDepth, ce.AddEquation, ce.SubtractEquation, ce.ReverseSubtractEquation, ce.ZeroFactor, ce.OneFactor, ce.SrcColorFactor, ce.OneMinusSrcColorFactor, ce.SrcAlphaFactor, ce.OneMinusSrcAlphaFactor, ce.DstAlphaFactor, ce.OneMinusDstAlphaFactor, ce.DstColorFactor, ce.OneMinusDstColorFactor, ce.SrcAlphaSaturateFactor, { SCALAR: 1, VEC2: 2, VEC3: 3, VEC4: 4, MAT2: 4, MAT3: 9, MAT4: 16 }), Wt = { POSITION: "position", NORMAL: "normal", TEXCOORD_0: "uv", TEXCOORD0: "uv", TEXCOORD: "uv", TEXCOORD_1: "uv2", COLOR_0: "color", COLOR0: "color", COLOR: "color", WEIGHTS_0: "skinWeight", WEIGHT: "skinWeight", JOINTS_0: "skinIndex", JOINT: "skinIndex" }, st = { scale: "scale", translation: "position", rotation: "quaternion", weights: "morphTargetInfluences" }, at = { CUBICSPLINE: ce.InterpolateSmooth, LINEAR: ce.InterpolateLinear, STEP: ce.InterpolateDiscrete }, wt = "OPAQUE", Ut = "MASK", $e = "BLEND";
        function ir(Ye, _e) {
          return typeof Ye != "string" || Ye === "" ? "" : /^(https?:)?\/\//i.test(Ye) || /^data:.*,.*$/i.test(Ye) || /^blob:.*$/i.test(Ye) ? Ye : _e + Ye;
        }
        function tr(Ye, _e, Ie) {
          for (var Ce in Ie.extensions)
            Ye[Ce] === void 0 && (_e.userData.gltfExtensions = _e.userData.gltfExtensions || {}, _e.userData.gltfExtensions[Ce] = Ie.extensions[Ce]);
        }
        function ar(Ye, _e) {
          if (Ye.updateMorphTargets(), _e.weights !== void 0)
            for (var Ie = 0, Ce = _e.weights.length; Ie < Ce; Ie++)
              Ye.morphTargetInfluences[Ie] = _e.weights[Ie];
          if (_e.extras && Array.isArray(_e.extras.targetNames)) {
            var ke = _e.extras.targetNames;
            if (Ye.morphTargetInfluences.length === ke.length)
              for (Ye.morphTargetDictionary = {}, Ie = 0, Ce = ke.length; Ie < Ce; Ie++)
                Ye.morphTargetDictionary[ke[Ie]] = Ie;
            else
              console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.");
          }
        }
        function ht(Ye, _e) {
          return Ye.indices === _e.indices && qt(Ye.attributes, _e.attributes);
        }
        function qt(Ye, _e) {
          if (Object.keys(Ye).length !== Object.keys(_e).length)
            return !1;
          for (var Ie in Ye)
            if (Ye[Ie] !== _e[Ie])
              return !1;
          return !0;
        }
        function Xe(Ye, _e) {
          if (Ye.length !== _e.length)
            return !1;
          for (var Ie = 0, Ce = Ye.length; Ie < Ce; Ie++)
            if (Ye[Ie] !== _e[Ie])
              return !1;
          return !0;
        }
        function nt(Ye, _e) {
          for (var Ie = 0, Ce = Ye.length; Ie < Ce; Ie++) {
            var ke = Ye[Ie];
            if (ht(ke.primitive, _e))
              return ke.promise;
          }
          return null;
        }
        function je(Ye) {
          if (Ye.isInterleavedBufferAttribute) {
            for (var _e = Ye.count, Ie = Ye.itemSize, Ce = Ye.array.slice(0, _e * Ie), ke = 0; ke < _e; ++ke)
              Ce[ke] = Ye.getX(ke), Ie >= 2 && (Ce[ke + 1] = Ye.getY(ke)), Ie >= 3 && (Ce[ke + 2] = Ye.getZ(ke)), Ie >= 4 && (Ce[ke + 3] = Ye.getW(ke));
            return new ce.BufferAttribute(Ce, Ie, Ye.normalized);
          }
          return Ye.clone();
        }
        function It(Ye, _e, Ie) {
          this.json = Ye || {}, this.extensions = _e || {}, this.options = Ie || {}, this.cache = new function() {
            var Ce = {};
            return { get: function(ke) {
              return Ce[ke];
            }, add: function(ke, Ve) {
              Ce[ke] = Ve;
            }, remove: function(ke) {
              delete Ce[ke];
            }, removeAll: function() {
              Ce = {};
            } };
          }(), this.primitiveCache = [], this.multiplePrimitivesCache = [], this.multiPassGeometryCache = [], this.textureLoader = new ce.TextureLoader(this.options.manager), this.textureLoader.setCrossOrigin(this.options.crossOrigin), this.fileLoader = new ce.FileLoader(this.options.manager), this.fileLoader.setResponseType("arraybuffer");
        }
        function lt(Ye, _e, Ie) {
          var Ce = _e.attributes;
          for (var ke in Ce) {
            var Ve = Wt[ke], Ze = Ie[Ce[ke]];
            Ve && (Ve in Ye.attributes || Ye.addAttribute(Ve, Ze));
          }
          _e.indices === void 0 || Ye.index || Ye.setIndex(Ie[_e.indices]), _e.targets !== void 0 && function(ct, kt, Jt) {
            for (var Kt = !1, Zt = !1, De = 0, Te = kt.length; De < Te && ((bt = kt[De]).POSITION !== void 0 && (Kt = !0), bt.NORMAL !== void 0 && (Zt = !0), !Kt || !Zt); De++)
              ;
            if (Kt || Zt) {
              var Re = [], ot = [];
              for (De = 0, Te = kt.length; De < Te; De++) {
                var bt = kt[De], Pt = "morphTarget" + De;
                if (Kt) {
                  if (bt.POSITION !== void 0) {
                    var Vt = je(Jt[bt.POSITION]);
                    Vt.name = Pt;
                    for (var Ir = ct.attributes.position, mr = 0, _r = Vt.count; mr < _r; mr++)
                      Vt.setXYZ(mr, Vt.getX(mr) + Ir.getX(mr), Vt.getY(mr) + Ir.getY(mr), Vt.getZ(mr) + Ir.getZ(mr));
                  } else
                    Vt = ct.attributes.position;
                  Re.push(Vt);
                }
                if (Zt) {
                  if (bt.NORMAL !== void 0) {
                    var Br;
                    (Br = je(Jt[bt.NORMAL])).name = Pt;
                    var Tr = ct.attributes.normal;
                    for (mr = 0, _r = Br.count; mr < _r; mr++)
                      Br.setXYZ(mr, Br.getX(mr) + Tr.getX(mr), Br.getY(mr) + Tr.getY(mr), Br.getZ(mr) + Tr.getZ(mr));
                  } else
                    Br = ct.attributes.normal;
                  ot.push(Br);
                }
              }
              Kt && (ct.morphAttributes.position = Re), Zt && (ct.morphAttributes.normal = ot);
            }
          }(Ye, _e.targets, Ie), _e.extras !== void 0 && (Ye.userData = _e.extras);
        }
        return It.prototype.parse = function(Ye, _e) {
          var Ie = this.json;
          this.cache.removeAll(), this.markDefs(), this.getMultiDependencies(["scene", "animation", "camera"]).then(function(Ce) {
            var ke = Ce.scenes || [], Ve = ke[Ie.scene || 0], Ze = Ce.animations || [], ct = Ce.cameras || [];
            Ye(Ve, ke, ct, Ze, Ie);
          }).catch(_e);
        }, It.prototype.markDefs = function() {
          for (var Ye = this.json.nodes || [], _e = this.json.skins || [], Ie = this.json.meshes || [], Ce = {}, ke = {}, Ve = 0, Ze = _e.length; Ve < Ze; Ve++)
            for (var ct = _e[Ve].joints, kt = 0, Jt = ct.length; kt < Jt; kt++)
              Ye[ct[kt]].isBone = !0;
          for (var Kt = 0, Zt = Ye.length; Kt < Zt; Kt++) {
            var De = Ye[Kt];
            De.mesh !== void 0 && (Ce[De.mesh] === void 0 && (Ce[De.mesh] = ke[De.mesh] = 0), Ce[De.mesh]++, De.skin !== void 0 && (Ie[De.mesh].isSkinnedMesh = !0));
          }
          this.json.meshReferences = Ce, this.json.meshUses = ke;
        }, It.prototype.getDependency = function(Ye, _e) {
          var Ie = Ye + ":" + _e, Ce = this.cache.get(Ie);
          if (!Ce) {
            switch (Ye) {
              case "scene":
                Ce = this.loadScene(_e);
                break;
              case "node":
                Ce = this.loadNode(_e);
                break;
              case "mesh":
                Ce = this.loadMesh(_e);
                break;
              case "accessor":
                Ce = this.loadAccessor(_e);
                break;
              case "bufferView":
                Ce = this.loadBufferView(_e);
                break;
              case "buffer":
                Ce = this.loadBuffer(_e);
                break;
              case "material":
                Ce = this.loadMaterial(_e);
                break;
              case "texture":
                Ce = this.loadTexture(_e);
                break;
              case "skin":
                Ce = this.loadSkin(_e);
                break;
              case "animation":
                Ce = this.loadAnimation(_e);
                break;
              case "camera":
                Ce = this.loadCamera(_e);
                break;
              default:
                throw new Error("Unknown type: " + Ye);
            }
            this.cache.add(Ie, Ce);
          }
          return Ce;
        }, It.prototype.getDependencies = function(Ye) {
          var _e = this.cache.get(Ye);
          if (!_e) {
            var Ie = this, Ce = this.json[Ye + (Ye === "mesh" ? "es" : "s")] || [];
            _e = Promise.all(Ce.map(function(ke, Ve) {
              return Ie.getDependency(Ye, Ve);
            })), this.cache.add(Ye, _e);
          }
          return _e;
        }, It.prototype.getMultiDependencies = function(Ye) {
          for (var _e = {}, Ie = [], Ce = 0, ke = Ye.length; Ce < ke; Ce++) {
            var Ve = Ye[Ce], Ze = this.getDependencies(Ve);
            Ze = Ze.then(function(ct, kt) {
              _e[ct] = kt;
            }.bind(this, Ve + (Ve === "mesh" ? "es" : "s"))), Ie.push(Ze);
          }
          return Promise.all(Ie).then(function() {
            return _e;
          });
        }, It.prototype.loadBuffer = function(Ye) {
          var _e = this.json.buffers[Ye], Ie = this.fileLoader;
          if (_e.type && _e.type !== "arraybuffer")
            throw new Error("THREE.GLTFLoader: " + _e.type + " buffer type is not supported.");
          if (_e.uri === void 0 && Ye === 0)
            return Promise.resolve(this.extensions[me.KHR_BINARY_GLTF].body);
          var Ce = this.options;
          return new Promise(function(ke, Ve) {
            Ie.load(ir(_e.uri, Ce.path), ke, void 0, function() {
              Ve(new Error('THREE.GLTFLoader: Failed to load buffer "' + _e.uri + '".'));
            });
          });
        }, It.prototype.loadBufferView = function(Ye) {
          var _e = this.json.bufferViews[Ye];
          return this.getDependency("buffer", _e.buffer).then(function(Ie) {
            var Ce = _e.byteLength || 0, ke = _e.byteOffset || 0;
            return Ie.slice(ke, ke + Ce);
          });
        }, It.prototype.loadAccessor = function(Ye) {
          var _e = this, Ie = this.json, Ce = this.json.accessors[Ye];
          if (Ce.bufferView === void 0 && Ce.sparse === void 0)
            return null;
          var ke = [];
          return Ce.bufferView !== void 0 ? ke.push(this.getDependency("bufferView", Ce.bufferView)) : ke.push(null), Ce.sparse !== void 0 && (ke.push(this.getDependency("bufferView", Ce.sparse.indices.bufferView)), ke.push(this.getDependency("bufferView", Ce.sparse.values.bufferView))), Promise.all(ke).then(function(Ve) {
            var Ze, ct, kt = Ve[0], Jt = $t[Ce.type], Kt = Ot[Ce.componentType], Zt = Kt.BYTES_PER_ELEMENT, De = Zt * Jt, Te = Ce.byteOffset || 0, Re = Ie.bufferViews[Ce.bufferView].byteStride, ot = Ce.normalized === !0;
            if (Re && Re !== De) {
              var bt = "InterleavedBuffer:" + Ce.bufferView + ":" + Ce.componentType, Pt = _e.cache.get(bt);
              Pt || (Ze = new Kt(kt), Pt = new ce.InterleavedBuffer(Ze, Re / Zt), _e.cache.add(bt, Pt)), ct = new ce.InterleavedBufferAttribute(Pt, Jt, Te / Zt, ot);
            } else
              Ze = kt === null ? new Kt(Ce.count * Jt) : new Kt(kt, Te, Ce.count * Jt), ct = new ce.BufferAttribute(Ze, Jt, ot);
            if (Ce.sparse !== void 0) {
              var Vt = $t.SCALAR, Ir = Ot[Ce.sparse.indices.componentType], mr = Ce.sparse.indices.byteOffset || 0, _r = Ce.sparse.values.byteOffset || 0, Br = new Ir(Ve[1], mr, Ce.sparse.count * Vt), Tr = new Kt(Ve[2], _r, Ce.sparse.count * Jt);
              kt !== null && ct.setArray(ct.array.slice());
              for (var cn = 0, oi = Br.length; cn < oi; cn++) {
                var un = Br[cn];
                if (ct.setX(un, Tr[cn * Jt]), Jt >= 2 && ct.setY(un, Tr[cn * Jt + 1]), Jt >= 3 && ct.setZ(un, Tr[cn * Jt + 2]), Jt >= 4 && ct.setW(un, Tr[cn * Jt + 3]), Jt >= 5)
                  throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.");
              }
            }
            return ct;
          });
        }, It.prototype.loadTexture = function(Ye) {
          var _e, Ie = this, Ce = this.json, ke = this.options, Ve = this.textureLoader, Ze = window.URL || window.webkitURL, ct = Ce.textures[Ye], kt = ct.extensions || {}, Jt = (_e = kt[me.MSFT_TEXTURE_DDS] ? Ce.images[kt[me.MSFT_TEXTURE_DDS].source] : Ce.images[ct.source]).uri, Kt = !1;
          return _e.bufferView !== void 0 && (Jt = Ie.getDependency("bufferView", _e.bufferView).then(function(Zt) {
            Kt = !0;
            var De = new Blob([Zt], { type: _e.mimeType });
            return Jt = Ze.createObjectURL(De);
          })), Promise.resolve(Jt).then(function(Zt) {
            var De = ce.Loader.Handlers.get(Zt);
            return De || (De = kt[me.MSFT_TEXTURE_DDS] ? Ie.extensions[me.MSFT_TEXTURE_DDS].ddsLoader : Ve), new Promise(function(Te, Re) {
              De.load(ir(Zt, ke.path), Te, void 0, Re);
            });
          }).then(function(Zt) {
            Kt === !0 && Ze.revokeObjectURL(Jt), Zt.flipY = !1, ct.name !== void 0 && (Zt.name = ct.name), kt[me.MSFT_TEXTURE_DDS] || (Zt.format = ct.format !== void 0 ? Yt[ct.format] : ce.RGBAFormat), ct.internalFormat !== void 0 && Zt.format !== Yt[ct.internalFormat] && console.warn("THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."), Zt.type = ct.type !== void 0 ? jt[ct.type] : ce.UnsignedByteType;
            var De = (Ce.samplers || {})[ct.sampler] || {};
            return Zt.magFilter = yt[De.magFilter] || ce.LinearFilter, Zt.minFilter = yt[De.minFilter] || ce.LinearMipMapLinearFilter, Zt.wrapS = Qt[De.wrapS] || ce.RepeatWrapping, Zt.wrapT = Qt[De.wrapT] || ce.RepeatWrapping, Zt;
          });
        }, It.prototype.assignTexture = function(Ye, _e, Ie) {
          return this.getDependency("texture", Ie).then(function(Ce) {
            Ye[_e] = Ce;
          });
        }, It.prototype.loadMaterial = function(Ye) {
          this.json;
          var _e, Ie = this.extensions, Ce = this.json.materials[Ye], ke = {}, Ve = Ce.extensions || {}, Ze = [];
          if (Ve[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {
            var ct = Ie[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];
            _e = ct.getMaterialType(Ce), Ze.push(ct.extendParams(ke, Ce, this));
          } else if (Ve[me.KHR_MATERIALS_UNLIT]) {
            var kt = Ie[me.KHR_MATERIALS_UNLIT];
            _e = kt.getMaterialType(Ce), Ze.push(kt.extendParams(ke, Ce, this));
          } else {
            _e = ce.MeshStandardMaterial;
            var Jt = Ce.pbrMetallicRoughness || {};
            if (ke.color = new ce.Color(1, 1, 1), ke.opacity = 1, Array.isArray(Jt.baseColorFactor)) {
              var Kt = Jt.baseColorFactor;
              ke.color.fromArray(Kt), ke.opacity = Kt[3];
            }
            if (Jt.baseColorTexture !== void 0 && Ze.push(this.assignTexture(ke, "map", Jt.baseColorTexture.index)), ke.metalness = Jt.metallicFactor !== void 0 ? Jt.metallicFactor : 1, ke.roughness = Jt.roughnessFactor !== void 0 ? Jt.roughnessFactor : 1, Jt.metallicRoughnessTexture !== void 0) {
              var Zt = Jt.metallicRoughnessTexture.index;
              Ze.push(this.assignTexture(ke, "metalnessMap", Zt)), Ze.push(this.assignTexture(ke, "roughnessMap", Zt));
            }
          }
          Ce.doubleSided === !0 && (ke.side = ce.DoubleSide);
          var De = Ce.alphaMode || wt;
          return De === $e ? ke.transparent = !0 : (ke.transparent = !1, De === Ut && (ke.alphaTest = Ce.alphaCutoff !== void 0 ? Ce.alphaCutoff : 0.5)), Ce.normalTexture !== void 0 && _e !== ce.MeshBasicMaterial && (Ze.push(this.assignTexture(ke, "normalMap", Ce.normalTexture.index)), ke.normalScale = new ce.Vector2(1, 1), Ce.normalTexture.scale !== void 0 && ke.normalScale.set(Ce.normalTexture.scale, Ce.normalTexture.scale)), Ce.occlusionTexture !== void 0 && _e !== ce.MeshBasicMaterial && (Ze.push(this.assignTexture(ke, "aoMap", Ce.occlusionTexture.index)), Ce.occlusionTexture.strength !== void 0 && (ke.aoMapIntensity = Ce.occlusionTexture.strength)), Ce.emissiveFactor !== void 0 && _e !== ce.MeshBasicMaterial && (ke.emissive = new ce.Color().fromArray(Ce.emissiveFactor)), Ce.emissiveTexture !== void 0 && _e !== ce.MeshBasicMaterial && Ze.push(this.assignTexture(ke, "emissiveMap", Ce.emissiveTexture.index)), Promise.all(Ze).then(function() {
            var Te;
            return Te = _e === ce.ShaderMaterial ? Ie[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(ke) : new _e(ke), Ce.name !== void 0 && (Te.name = Ce.name), Te.normalScale && (Te.normalScale.y = -Te.normalScale.y), Te.map && (Te.map.encoding = ce.sRGBEncoding), Te.emissiveMap && (Te.emissiveMap.encoding = ce.sRGBEncoding), Te.specularMap && (Te.specularMap.encoding = ce.sRGBEncoding), Ce.extras && (Te.userData = Ce.extras), Ce.extensions && tr(Ie, Te, Ce), Te;
          });
        }, It.prototype.loadGeometries = function(Ye) {
          var _e, Ie = this, Ce = this.extensions, ke = this.primitiveCache, Ve = function(Ze) {
            if (Ze.length < 2)
              return !1;
            var ct = Ze[0], kt = ct.targets || [];
            if (ct.indices === void 0)
              return !1;
            for (var Jt = 1, Kt = Ze.length; Jt < Kt; Jt++) {
              var Zt = Ze[Jt];
              if (ct.mode !== Zt.mode || Zt.indices === void 0 || !qt(ct.attributes, Zt.attributes))
                return !1;
              var De = Zt.targets || [];
              if (kt.length !== De.length)
                return !1;
              for (var Te = 0, Re = kt.length; Te < Re; Te++)
                if (!qt(kt[Te], De[Te]))
                  return !1;
            }
            return !0;
          }(Ye);
          return Ve && (_e = Ye, Ye = [Ye[0]]), this.getDependencies("accessor").then(function(Ze) {
            for (var ct = [], kt = 0, Jt = Ye.length; kt < Jt; kt++) {
              var Kt = Ye[kt], Zt = nt(ke, Kt);
              if (Zt)
                ct.push(Zt);
              else if (Kt.extensions && Kt.extensions[me.KHR_DRACO_MESH_COMPRESSION]) {
                var De = Ce[me.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(Kt, Ie).then(function(Re) {
                  return lt(Re, Kt, Ze), Re;
                });
                ke.push({ primitive: Kt, promise: De }), ct.push(De);
              } else {
                var Te = new ce.BufferGeometry();
                lt(Te, Kt, Ze), De = Promise.resolve(Te), ke.push({ primitive: Kt, promise: De }), ct.push(De);
              }
            }
            return Promise.all(ct).then(function(Re) {
              if (Ve) {
                var ot = Re[0];
                if ((un = function(Yn, Vn, Dn) {
                  for (var Ln = 0, di = Yn.length; Ln < di; Ln++) {
                    var yi = Yn[Ln];
                    if (Vn === yi.baseGeometry && Xe(Dn, yi.primitives))
                      return yi.geometry;
                  }
                  return null;
                }(oi = Ie.multiPassGeometryCache, ot, _e)) !== null)
                  return [un.geometry];
                var bt = new ce.BufferGeometry();
                for (var Pt in bt.name = ot.name, bt.userData = ot.userData, ot.attributes)
                  bt.addAttribute(Pt, ot.attributes[Pt]);
                for (var Pt in ot.morphAttributes)
                  bt.morphAttributes[Pt] = ot.morphAttributes[Pt];
                for (var Vt = [], Ir = 0, mr = 0, _r = _e.length; mr < _r; mr++) {
                  for (var Br = Ze[_e[mr].indices], Tr = 0, cn = Br.count; Tr < cn; Tr++)
                    Vt.push(Br.array[Tr]);
                  bt.addGroup(Ir, Br.count, mr), Ir += Br.count;
                }
                return bt.setIndex(Vt), oi.push({ geometry: bt, baseGeometry: ot, primitives: _e }), [bt];
              }
              if (Re.length > 1 && ce.BufferGeometryUtils !== void 0) {
                for (mr = 1, _r = Ye.length; mr < _r; mr++)
                  if (Ye[0].mode !== Ye[mr].mode)
                    return Re;
                var oi, un;
                if (un = function(Yn, Vn) {
                  for (var Dn = 0, Ln = Yn.length; Dn < Ln; Dn++) {
                    var di = Yn[Dn];
                    if (Xe(Vn, di.baseGeometries))
                      return di.geometry;
                  }
                  return null;
                }(oi = Ie.multiplePrimitivesCache, Re)) {
                  if (un.geometry !== null)
                    return [un.geometry];
                } else if (bt = ce.BufferGeometryUtils.mergeBufferGeometries(Re, !0), oi.push({ geometry: bt, baseGeometries: Re }), bt !== null)
                  return [bt];
              }
              return Re;
            });
          });
        }, It.prototype.loadMesh = function(Ye) {
          var _e = this, Ie = (this.json, this.extensions), Ce = this.json.meshes[Ye];
          return this.getMultiDependencies(["accessor", "material"]).then(function(ke) {
            for (var Ve = Ce.primitives, Ze = [], ct = 0, kt = Ve.length; ct < kt; ct++)
              Ze[ct] = Ve[ct].material === void 0 ? new ce.MeshStandardMaterial({ color: 16777215, emissive: 0, metalness: 1, roughness: 1, transparent: !1, depthTest: !0, side: ce.FrontSide }) : ke.materials[Ve[ct].material];
            return _e.loadGeometries(Ve).then(function(Jt) {
              for (var Kt = Jt.length === 1 && Jt[0].groups.length > 0, Zt = [], De = 0, Te = Jt.length; De < Te; De++) {
                var Re, ot = Jt[De], bt = Ve[De], Pt = Kt ? Ze : Ze[De];
                if (bt.mode === et || bt.mode === mt || bt.mode === Mt || bt.mode === void 0)
                  Re = Ce.isSkinnedMesh === !0 ? new ce.SkinnedMesh(ot, Pt) : new ce.Mesh(ot, Pt), bt.mode === mt ? Re.drawMode = ce.TriangleStripDrawMode : bt.mode === Mt && (Re.drawMode = ce.TriangleFanDrawMode);
                else if (bt.mode === tt)
                  Re = new ce.LineSegments(ot, Pt);
                else if (bt.mode === Nt)
                  Re = new ce.Line(ot, Pt);
                else if (bt.mode === Et)
                  Re = new ce.LineLoop(ot, Pt);
                else {
                  if (bt.mode !== We)
                    throw new Error("THREE.GLTFLoader: Primitive mode unsupported: " + bt.mode);
                  Re = new ce.Points(ot, Pt);
                }
                Object.keys(Re.geometry.morphAttributes).length > 0 && ar(Re, Ce), Re.name = Ce.name || "mesh_" + Ye, Jt.length > 1 && (Re.name += "_" + De), Ce.extras !== void 0 && (Re.userData = Ce.extras), Zt.push(Re);
                for (var Vt = Kt ? Re.material : [Re.material], Ir = ot.attributes.color !== void 0, mr = ot.attributes.normal === void 0, _r = Re.isSkinnedMesh === !0, Br = Object.keys(ot.morphAttributes).length > 0, Tr = Br && ot.morphAttributes.normal !== void 0, cn = 0, oi = Vt.length; cn < oi; cn++) {
                  if (Pt = Vt[cn], Re.isPoints) {
                    var un = "PointsMaterial:" + Pt.uuid, Yn = _e.cache.get(un);
                    Yn || (Yn = new ce.PointsMaterial(), ce.Material.prototype.copy.call(Yn, Pt), Yn.color.copy(Pt.color), Yn.map = Pt.map, Yn.lights = !1, _e.cache.add(un, Yn)), Pt = Yn;
                  } else if (Re.isLine) {
                    un = "LineBasicMaterial:" + Pt.uuid;
                    var Vn = _e.cache.get(un);
                    Vn || (Vn = new ce.LineBasicMaterial(), ce.Material.prototype.copy.call(Vn, Pt), Vn.color.copy(Pt.color), Vn.lights = !1, _e.cache.add(un, Vn)), Pt = Vn;
                  }
                  if (Ir || mr || _r || Br) {
                    un = "ClonedMaterial:" + Pt.uuid + ":", Pt.isGLTFSpecularGlossinessMaterial && (un += "specular-glossiness:"), _r && (un += "skinning:"), Ir && (un += "vertex-colors:"), mr && (un += "flat-shading:"), Br && (un += "morph-targets:"), Tr && (un += "morph-normals:");
                    var Dn = _e.cache.get(un);
                    Dn || (Dn = Pt.isGLTFSpecularGlossinessMaterial ? Ie[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(Pt) : Pt.clone(), _r && (Dn.skinning = !0), Ir && (Dn.vertexColors = ce.VertexColors), mr && (Dn.flatShading = !0), Br && (Dn.morphTargets = !0), Tr && (Dn.morphNormals = !0), _e.cache.add(un, Dn)), Pt = Dn;
                  }
                  Vt[cn] = Pt, Pt.aoMap && ot.attributes.uv2 === void 0 && ot.attributes.uv !== void 0 && (console.log("THREE.GLTFLoader: Duplicating UVs to support aoMap."), ot.addAttribute("uv2", new ce.BufferAttribute(ot.attributes.uv.array, 2))), Pt.isGLTFSpecularGlossinessMaterial && (Re.onBeforeRender = Ie[me.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms);
                }
                Re.material = Kt ? Vt : Vt[0];
              }
              if (Zt.length === 1)
                return Zt[0];
              var Ln = new ce.Group();
              for (De = 0, Te = Zt.length; De < Te; De++)
                Ln.add(Zt[De]);
              return Ln;
            });
          });
        }, It.prototype.loadCamera = function(Ye) {
          var _e, Ie = this.json.cameras[Ye], Ce = Ie[Ie.type];
          if (Ce)
            return Ie.type === "perspective" ? _e = new ce.PerspectiveCamera(ce.Math.radToDeg(Ce.yfov), Ce.aspectRatio || 1, Ce.znear || 1, Ce.zfar || 2e6) : Ie.type === "orthographic" && (_e = new ce.OrthographicCamera(Ce.xmag / -2, Ce.xmag / 2, Ce.ymag / 2, Ce.ymag / -2, Ce.znear, Ce.zfar)), Ie.name !== void 0 && (_e.name = Ie.name), Ie.extras && (_e.userData = Ie.extras), Promise.resolve(_e);
          console.warn("THREE.GLTFLoader: Missing camera parameters.");
        }, It.prototype.loadSkin = function(Ye) {
          var _e = this.json.skins[Ye], Ie = { joints: _e.joints };
          return _e.inverseBindMatrices === void 0 ? Promise.resolve(Ie) : this.getDependency("accessor", _e.inverseBindMatrices).then(function(Ce) {
            return Ie.inverseBindMatrices = Ce, Ie;
          });
        }, It.prototype.loadAnimation = function(Ye) {
          this.json;
          var _e = this.json.animations[Ye];
          return this.getMultiDependencies(["accessor", "node"]).then(function(Ie) {
            for (var Ce = [], ke = 0, Ve = _e.channels.length; ke < Ve; ke++) {
              var Ze = _e.channels[ke], ct = _e.samplers[Ze.sampler];
              if (ct) {
                var kt = Ze.target, Jt = kt.node !== void 0 ? kt.node : kt.id, Kt = _e.parameters !== void 0 ? _e.parameters[ct.input] : ct.input, Zt = _e.parameters !== void 0 ? _e.parameters[ct.output] : ct.output, De = Ie.accessors[Kt], Te = Ie.accessors[Zt], Re = Ie.nodes[Jt];
                if (Re) {
                  var ot;
                  switch (Re.updateMatrix(), Re.matrixAutoUpdate = !0, st[kt.path]) {
                    case st.weights:
                      ot = ce.NumberKeyframeTrack;
                      break;
                    case st.rotation:
                      ot = ce.QuaternionKeyframeTrack;
                      break;
                    case st.position:
                    case st.scale:
                    default:
                      ot = ce.VectorKeyframeTrack;
                  }
                  var bt = Re.name ? Re.name : Re.uuid, Pt = ct.interpolation !== void 0 ? at[ct.interpolation] : ce.InterpolateLinear, Vt = [];
                  st[kt.path] === st.weights ? Re.traverse(function(Br) {
                    Br.isMesh === !0 && Br.morphTargetInfluences && Vt.push(Br.name ? Br.name : Br.uuid);
                  }) : Vt.push(bt);
                  for (var Ir = 0, mr = Vt.length; Ir < mr; Ir++) {
                    var _r = new ot(Vt[Ir] + "." + st[kt.path], ce.AnimationUtils.arraySlice(De.array, 0), ce.AnimationUtils.arraySlice(Te.array, 0), Pt);
                    ct.interpolation === "CUBICSPLINE" && (_r.createInterpolant = function(Br) {
                      return new Pe(this.times, this.values, this.getValueSize() / 3, Br);
                    }, _r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = !0), Ce.push(_r);
                  }
                }
              }
            }
            return Jt = _e.name !== void 0 ? _e.name : "animation_" + Ye, new ce.AnimationClip(Jt, void 0, Ce);
          });
        }, It.prototype.loadNode = function(Ye) {
          this.json;
          var _e = this.extensions, Ie = this.json.meshReferences, Ce = this.json.meshUses, ke = this.json.nodes[Ye];
          return this.getMultiDependencies(["mesh", "skin", "camera", "light"]).then(function(Ve) {
            var Ze;
            if (ke.isBone === !0)
              Ze = new ce.Bone();
            else if (ke.mesh !== void 0) {
              var ct = Ve.meshes[ke.mesh];
              if (Ze = ct.clone(), ct.isGroup === !0)
                for (var kt = 0, Jt = ct.children.length; kt < Jt; kt++) {
                  var Kt = ct.children[kt];
                  Kt.material && Kt.material.isGLTFSpecularGlossinessMaterial === !0 && (Ze.children[kt].onBeforeRender = Kt.onBeforeRender);
                }
              else
                ct.material && ct.material.isGLTFSpecularGlossinessMaterial === !0 && (Ze.onBeforeRender = ct.onBeforeRender);
              Ie[ke.mesh] > 1 && (Ze.name += "_instance_" + Ce[ke.mesh]++);
            } else
              ke.camera !== void 0 ? Ze = Ve.cameras[ke.camera] : ke.extensions && ke.extensions[me.KHR_LIGHTS] && ke.extensions[me.KHR_LIGHTS].light !== void 0 ? Ze = _e[me.KHR_LIGHTS].lights[ke.extensions[me.KHR_LIGHTS].light] : Ze = new ce.Object3D();
            if (ke.name !== void 0 && (Ze.name = ce.PropertyBinding.sanitizeNodeName(ke.name)), ke.extras && (Ze.userData = ke.extras), ke.extensions && tr(_e, Ze, ke), ke.matrix !== void 0) {
              var Zt = new ce.Matrix4();
              Zt.fromArray(ke.matrix), Ze.applyMatrix(Zt);
            } else
              ke.translation !== void 0 && Ze.position.fromArray(ke.translation), ke.rotation !== void 0 && Ze.quaternion.fromArray(ke.rotation), ke.scale !== void 0 && Ze.scale.fromArray(ke.scale);
            return Ze;
          });
        }, It.prototype.loadScene = function() {
          function Ye(_e, Ie, Ce, ke, Ve) {
            var Ze = ke[_e], ct = Ce.nodes[_e];
            if (ct.skin !== void 0)
              for (var kt = Ze.isGroup === !0 ? Ze.children : [Ze], Jt = 0, Kt = kt.length; Jt < Kt; Jt++) {
                for (var Zt = kt[Jt], De = Ve[ct.skin], Te = [], Re = [], ot = 0, bt = De.joints.length; ot < bt; ot++) {
                  var Pt = De.joints[ot], Vt = ke[Pt];
                  if (Vt) {
                    Te.push(Vt);
                    var Ir = new ce.Matrix4();
                    De.inverseBindMatrices !== void 0 && Ir.fromArray(De.inverseBindMatrices.array, 16 * ot), Re.push(Ir);
                  } else
                    console.warn('THREE.GLTFLoader: Joint "%s" could not be found.', Pt);
                }
                Zt.bind(new ce.Skeleton(Te, Re), Zt.matrixWorld);
              }
            if (Ie.add(Ze), ct.children) {
              var mr = ct.children;
              for (Jt = 0, Kt = mr.length; Jt < Kt; Jt++)
                Ye(mr[Jt], Ze, Ce, ke, Ve);
            }
          }
          return function(_e) {
            var Ie = this.json, Ce = this.extensions, ke = this.json.scenes[_e];
            return this.getMultiDependencies(["node", "skin"]).then(function(Ve) {
              var Ze = new ce.Scene();
              ke.name !== void 0 && (Ze.name = ke.name), ke.extras && (Ze.userData = ke.extras), ke.extensions && tr(Ce, Ze, ke);
              for (var ct = ke.nodes || [], kt = 0, Jt = ct.length; kt < Jt; kt++)
                Ye(ct[kt], Ze, Ie, Ve.nodes, Ve.skins);
              if (ke.extensions && ke.extensions[me.KHR_LIGHTS] && ke.extensions[me.KHR_LIGHTS].light !== void 0) {
                var Kt = Ce[me.KHR_LIGHTS].lights;
                Ze.add(Kt[ke.extensions[me.KHR_LIGHTS].light]);
              }
              return Ze;
            });
          };
        }(), Ee;
      }();
      var le = ce.MTLLoader, de = ce.OBJLoader, ye = ce.OrbitControls, he = ce.ColladaLoader, Be = ce.GLTFLoader;
      ie.OrbitControls = ye, ie.MTLLoader = le, ie.OBJLoader = de, ie.ColladaLoader = he, ie.GLTFLoader = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 }), ie.default = function(ce, le) {
        var de = { animate: !0, name: "" }, ye = [Object.assign(Object.create(de), { fuc: ce, name: le })];
        return function he() {
          requestAnimationFrame(he), ye.forEach(function(Be) {
            var Ee = Be.fuc, me = Be.animate;
            me && Ee.call(Be, Date.now());
          });
        }(), ie.default = function(he, Be) {
          var Ee = Object.assign(Object.create(de), { fuc: he, name: Be });
          return ye.push(Ee), Ee;
        }, ye[0];
      };
    }, function(ne, ie, ae) {
      var ce, le, de, ye, he = function() {
        function Se(Ge, Fe) {
          for (var Pe = 0; Pe < Fe.length; Pe++) {
            var We = Fe[Pe];
            We.enumerable = We.enumerable || !1, We.configurable = !0, "value" in We && (We.writable = !0), Object.defineProperty(Ge, We.key, We);
          }
        }
        return function(Ge, Fe, Pe) {
          return Fe && Se(Ge.prototype, Fe), Pe && Se(Ge, Pe), Ge;
        };
      }(), Be = ae(5), Ee = function(Se) {
        return Se && Se.__esModule ? Se : { default: Se };
      }(Be), me = function(Se) {
        if (Se && Se.__esModule)
          return Se;
        var Ge = {};
        if (Se != null)
          for (var Fe in Se)
            Object.prototype.hasOwnProperty.call(Se, Fe) && (Ge[Fe] = Se[Fe]);
        return Ge.default = Se, Ge;
      }(ae(0));
      function ge(Se, Ge) {
        if (!(Se instanceof Ge))
          throw new TypeError("Cannot call a class as a function");
      }
      function be(Se, Ge) {
        if (!Se)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !Ge || typeof Ge != "object" && typeof Ge != "function" ? Se : Ge;
      }
      function we(Se, Ge) {
        if (typeof Ge != "function" && Ge !== null)
          throw new TypeError("Super expression must either be null or a function, not " + typeof Ge);
        Se.prototype = Object.create(Ge && Ge.prototype, { constructor: { value: Se, enumerable: !1, writable: !0, configurable: !0 } }), Ge && (Object.setPrototypeOf ? Object.setPrototypeOf(Se, Ge) : Se.__proto__ = Ge);
      }
      var Oe = (le = ce = function(Se) {
        function Ge() {
          return ge(this, Ge), be(this, (Ge.__proto__ || Object.getPrototypeOf(Ge)).apply(this, arguments));
        }
        return we(Ge, Be.Component), he(Ge, [{ key: "render", value: function() {
          return Ee.default.createElement(Ee.default.Fragment, null, " ");
        } }]), Ge;
      }(), ce.defaultProps = { color: "rgb(30,30,30)", __constructor: "ambientlight" }, le), He = (ye = de = function(Se) {
        function Ge() {
          return ge(this, Ge), be(this, (Ge.__proto__ || Object.getPrototypeOf(Ge)).apply(this, arguments));
        }
        return we(Ge, Be.Component), he(Ge, [{ key: "render", value: function() {
          return Ee.default.createElement(Ee.default.Fragment, null, " ");
        } }]), Ge;
      }(), de.defaultProps = { color: 16777215, __constructor: "directionligth", position: new me.Vector3(-30, 30, 30), castShadow: !0 }, ye);
      ne.exports = { AmbientLight: Oe, DirectionLight: He };
    }, function(ne, ie, ae) {
      ne.exports = ae(12);
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var be = 0; be < ge.length; be++) {
            var we = ge[be];
            we.enumerable = we.enumerable || !1, we.configurable = !0, "value" in we && (we.writable = !0), Object.defineProperty(me, we.key, we);
          }
        }
        return function(me, ge, be) {
          return ge && Ee(me.prototype, ge), be && Ee(me, be), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), he = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(be, we) {
            if (!(be instanceof we))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(be, we) {
            if (!be)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !we || typeof we != "object" && typeof we != "function" ? be : we;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, be) {
          if (typeof be != "function" && be !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof be);
          ge.prototype = Object.create(be && be.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), be && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, be) : ge.__proto__ = be);
        }(me, he.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, be = this.props, we = be.src;
          if (be.texPath, !we)
            return !1;
          new ye.GLTFLoader().load(we, function(Oe) {
            ge.obj3d = Oe.scene;
            var He = {};
            if (Oe.scene.traverse(function(Pe) {
              Pe instanceof ye.Camera && (He.cameras || (He.cameras = []), He.cameras.push(Pe)), Pe instanceof ye.Light && (He.lights || (He.lights = []), He.lights.push(Pe));
            }), He.cameras && He.cameras.length)
              ge.camera = He.cameras[0], ge.camera.position.copy(ge.camera.position.clone().add(new ye.Vector3(0, 0, 0.01)));
            else {
              var Se = ge.computeBoundingBox(Oe.scene), Ge = Se.max, Fe = Se.max.z - Se.min.z;
              ge.camera.position.set(Ge.x, Ge.y, Ge.z + 0.6 * Fe);
            }
            He.lights && He.lights.length, ge.initControl(), ge.props.onLoad && ge.props.onLoad();
          }, function(Oe) {
            ge.props.onProgress && ge.props.onProgress(Oe);
          }, function() {
            console.log("An error happened");
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, he.default.defaultProps, { loader: "gltf" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var be = 0; be < ge.length; be++) {
            var we = ge[be];
            we.enumerable = we.enumerable || !1, we.configurable = !0, "value" in we && (we.writable = !0), Object.defineProperty(me, we.key, we);
          }
        }
        return function(me, ge, be) {
          return ge && Ee(me.prototype, ge), be && Ee(me, be), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), he = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(be, we) {
            if (!(be instanceof we))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(be, we) {
            if (!be)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !we || typeof we != "object" && typeof we != "function" ? be : we;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, be) {
          if (typeof be != "function" && be !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof be);
          ge.prototype = Object.create(be && be.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), be && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, be) : ge.__proto__ = be);
        }(me, he.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, be = this.props, we = be.src;
          if (be.texPath, !we)
            return !1;
          new ye.ColladaLoader().load(we, function(Oe) {
            ge.obj3d = Oe.scene;
            var He = {};
            if (Oe.scene.traverse(function(Fe) {
              Fe instanceof ye.Camera && (He.cameras || (He.cameras = []), He.cameras.push(Fe)), Fe instanceof ye.Light && (He.lights || (He.lights = []), He.lights.push(Fe));
            }), He.cameras && He.cameras.length)
              ge.camera = He.cameras[0], ge.camera.position.copy(ge.camera.position.clone().add(new ye.Vector3(0, 0, 0.01)));
            else {
              var Se = ge.computeBoundingBox(Oe.scene), Ge = Se.max;
              Se.max.z, Se.min.z, ge.camera.position.set(Ge.x, Ge.y, Ge.z);
            }
            He.lights && He.lights.length, ge.initControl(), ge.props.onLoad && ge.props.onLoad();
          }, function(Oe) {
            ge.props.onProgress && ge.props.onProgress(Oe);
          }, function() {
            console.log("An error happened");
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, he.default.defaultProps, { loader: "collada" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var be = 0; be < ge.length; be++) {
            var we = ge[be];
            we.enumerable = we.enumerable || !1, we.configurable = !0, "value" in we && (we.writable = !0), Object.defineProperty(me, we.key, we);
          }
        }
        return function(me, ge, be) {
          return ge && Ee(me.prototype, ge), be && Ee(me, be), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), he = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(be, we) {
            if (!(be instanceof we))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(be, we) {
            if (!be)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !we || typeof we != "object" && typeof we != "function" ? be : we;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, be) {
          if (typeof be != "function" && be !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof be);
          ge.prototype = Object.create(be && be.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), be && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, be) : ge.__proto__ = be);
        }(me, he.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, be = this.props, we = be.src, Oe = be.mtl, He = be.texPath;
          if (!we || !Oe)
            return !1;
          var Se = new ye.MTLLoader(), Ge = new ye.OBJLoader();
          Se.setTexturePath(He), Se.load(Oe, function(Fe) {
            Fe.preload(), Ge.setMaterials(Fe).load(we, function(Pe) {
              var We = ge.computeBoundingBox(Pe), tt = We.max, Et = We.max.z - We.min.z;
              ge.camera.position.set(0, 0, tt.z + 1.5 * Et), ge.initControl(), ge.obj3d = Pe, ge.props.onLoad && ge.props.onLoad();
            }, function(Pe) {
              ge.props.onProgress && ge.props.onProgress(Pe);
            });
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, he.default.defaultProps, { loader: "objmtl" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var be = 0; be < ge.length; be++) {
            var we = ge[be];
            we.enumerable = we.enumerable || !1, we.configurable = !0, "value" in we && (we.writable = !0), Object.defineProperty(me, we.key, we);
          }
        }
        return function(me, ge, be) {
          return ge && Ee(me.prototype, ge), be && Ee(me, be), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), he = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(be, we) {
            if (!(be instanceof we))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(be, we) {
            if (!be)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !we || typeof we != "object" && typeof we != "function" ? be : we;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, be) {
          if (typeof be != "function" && be !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof be);
          ge.prototype = Object.create(be && be.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), be && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, be) : ge.__proto__ = be);
        }(me, he.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, be = this.props, we = be.src;
          if (be.texPath, !we)
            return !1;
          new ye.OBJLoader().load(we, function(Oe) {
            var He = ge.computeBoundingBox(Oe), Se = He.max, Ge = He.max.z - He.min.z;
            ge.camera.position.set(0, 0, Se.z + 1.5 * Ge), ge.initControl(), ge.obj3d = Oe, ge.props.onLoad && ge.props.onLoad();
          }, function(Oe) {
            ge.props.onProgress && ge.props.onProgress(Oe);
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, he.default.defaultProps, { loader: "obj" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce, le, de = function() {
        function Ee(me, ge) {
          for (var be = 0; be < ge.length; be++) {
            var we = ge[be];
            we.enumerable = we.enumerable || !1, we.configurable = !0, "value" in we && (we.writable = !0), Object.defineProperty(me, we.key, we);
          }
        }
        return function(me, ge, be) {
          return ge && Ee(me.prototype, ge), be && Ee(me, be), me;
        };
      }(), ye = function(Ee) {
        if (Ee && Ee.__esModule)
          return Ee;
        var me = {};
        if (Ee != null)
          for (var ge in Ee)
            Object.prototype.hasOwnProperty.call(Ee, ge) && (me[ge] = Ee[ge]);
        return me.default = Ee, me;
      }(ae(0)), he = (ae(2), function(Ee) {
        return Ee && Ee.__esModule ? Ee : { default: Ee };
      }(ae(1))), Be = (le = ce = function(Ee) {
        function me(ge) {
          return function(be, we) {
            if (!(be instanceof we))
              throw new TypeError("Cannot call a class as a function");
          }(this, me), function(be, we) {
            if (!be)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !we || typeof we != "object" && typeof we != "function" ? be : we;
          }(this, (me.__proto__ || Object.getPrototypeOf(me)).call(this, ge));
        }
        return function(ge, be) {
          if (typeof be != "function" && be !== null)
            throw new TypeError("Super expression must either be null or a function, not " + typeof be);
          ge.prototype = Object.create(be && be.prototype, { constructor: { value: ge, enumerable: !1, writable: !0, configurable: !0 } }), be && (Object.setPrototypeOf ? Object.setPrototypeOf(ge, be) : ge.__proto__ = be);
        }(me, he.default), de(me, [{ key: "load3dModel", value: function() {
          var ge = this, be = this.props, we = be.src, Oe = be.onProgress, He = be.onLoad, Se = be.texPath, Ge = new ye.JSONLoader();
          Ge.setTexturePath(Se), Ge.load(we, function(Fe, Pe) {
            var We = new ye.Mesh(Fe, Pe);
            Fe.computeBoundingBox();
            var tt = Fe.boundingSphere, Et = tt.center, Nt = tt.radius, et = Et.clone().multiplyScalar(-1);
            We.geometry.applyMatrix(new ye.Matrix4().makeTranslation(et.x, et.y, et.z));
            var mt = ge.computeBoundingBox(We).max;
            ge.camera.position.set(mt.x, mt.y, mt.z), ge.camera.position.copy(et.clone().add(new ye.Vector3(0, 0, 1.666 * Nt))), ge.initControl(), ge.obj3d = We, He && He();
          }, function(Fe) {
            Oe && Oe(Fe);
          });
        } }]), me;
      }(), ce.defaultProps = Object.assign({}, he.default.defaultProps, { loader: "json" }), le);
      ie.default = Be;
    }, function(ne, ie, ae) {
      /*
      object-assign
      (c) Sindre Sorhus
      @license MIT
      */
      var ce = Object.getOwnPropertySymbols, le = Object.prototype.hasOwnProperty, de = Object.prototype.propertyIsEnumerable;
      ne.exports = function() {
        try {
          if (!Object.assign)
            return !1;
          var ye = new String("abc");
          if (ye[5] = "de", Object.getOwnPropertyNames(ye)[0] === "5")
            return !1;
          for (var he = {}, Be = 0; Be < 10; Be++)
            he["_" + String.fromCharCode(Be)] = Be;
          if (Object.getOwnPropertyNames(he).map(function(me) {
            return he[me];
          }).join("") !== "0123456789")
            return !1;
          var Ee = {};
          return "abcdefghijklmnopqrst".split("").forEach(function(me) {
            Ee[me] = me;
          }), Object.keys(Object.assign({}, Ee)).join("") === "abcdefghijklmnopqrst";
        } catch {
          return !1;
        }
      }() ? Object.assign : function(ye, he) {
        for (var Be, Ee, me = function(Oe) {
          if (Oe == null)
            throw new TypeError("Object.assign cannot be called with null or undefined");
          return Object(Oe);
        }(ye), ge = 1; ge < arguments.length; ge++) {
          for (var be in Be = Object(arguments[ge]))
            le.call(Be, be) && (me[be] = Be[be]);
          if (ce) {
            Ee = ce(Be);
            for (var we = 0; we < Ee.length; we++)
              de.call(Be, Ee[we]) && (me[Ee[we]] = Be[Ee[we]]);
          }
        }
        return me;
      };
    }, function(ne, ie, ae) {
      /** @license React v16.7.0
      * react.production.min.js
      *
      * Copyright (c) Facebook, Inc. and its affiliates.
      *
      * This source code is licensed under the MIT license found in the
      * LICENSE file in the root directory of this source tree.
      */
      var ce = ae(11), le = typeof Symbol == "function" && Symbol.for, de = le ? Symbol.for("react.element") : 60103, ye = le ? Symbol.for("react.portal") : 60106, he = le ? Symbol.for("react.fragment") : 60107, Be = le ? Symbol.for("react.strict_mode") : 60108, Ee = le ? Symbol.for("react.profiler") : 60114, me = le ? Symbol.for("react.provider") : 60109, ge = le ? Symbol.for("react.context") : 60110, be = le ? Symbol.for("react.concurrent_mode") : 60111, we = le ? Symbol.for("react.forward_ref") : 60112, Oe = le ? Symbol.for("react.suspense") : 60113, He = le ? Symbol.for("react.memo") : 60115, Se = le ? Symbol.for("react.lazy") : 60116, Ge = typeof Symbol == "function" && Symbol.iterator;
      function Fe(ht) {
        for (var qt = arguments.length - 1, Xe = "https://reactjs.org/docs/error-decoder.html?invariant=" + ht, nt = 0; nt < qt; nt++)
          Xe += "&args[]=" + encodeURIComponent(arguments[nt + 1]);
        (function(je, It, lt, Ye, _e, Ie, Ce, ke) {
          if (!je) {
            if (je = void 0, It === void 0)
              je = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            else {
              var Ve = [lt, Ye, _e, Ie, Ce, ke], Ze = 0;
              (je = Error(It.replace(/%s/g, function() {
                return Ve[Ze++];
              }))).name = "Invariant Violation";
            }
            throw je.framesToPop = 1, je;
          }
        })(!1, "Minified React error #" + ht + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", Xe);
      }
      var Pe = { isMounted: function() {
        return !1;
      }, enqueueForceUpdate: function() {
      }, enqueueReplaceState: function() {
      }, enqueueSetState: function() {
      } }, We = {};
      function tt(ht, qt, Xe) {
        this.props = ht, this.context = qt, this.refs = We, this.updater = Xe || Pe;
      }
      function Et() {
      }
      function Nt(ht, qt, Xe) {
        this.props = ht, this.context = qt, this.refs = We, this.updater = Xe || Pe;
      }
      tt.prototype.isReactComponent = {}, tt.prototype.setState = function(ht, qt) {
        typeof ht != "object" && typeof ht != "function" && ht != null && Fe("85"), this.updater.enqueueSetState(this, ht, qt, "setState");
      }, tt.prototype.forceUpdate = function(ht) {
        this.updater.enqueueForceUpdate(this, ht, "forceUpdate");
      }, Et.prototype = tt.prototype;
      var et = Nt.prototype = new Et();
      et.constructor = Nt, ce(et, tt.prototype), et.isPureReactComponent = !0;
      var mt = { current: null, currentDispatcher: null }, Mt = Object.prototype.hasOwnProperty, Ot = { key: !0, ref: !0, __self: !0, __source: !0 };
      function yt(ht, qt, Xe) {
        var nt = void 0, je = {}, It = null, lt = null;
        if (qt != null)
          for (nt in qt.ref !== void 0 && (lt = qt.ref), qt.key !== void 0 && (It = "" + qt.key), qt)
            Mt.call(qt, nt) && !Ot.hasOwnProperty(nt) && (je[nt] = qt[nt]);
        var Ye = arguments.length - 2;
        if (Ye === 1)
          je.children = Xe;
        else if (1 < Ye) {
          for (var _e = Array(Ye), Ie = 0; Ie < Ye; Ie++)
            _e[Ie] = arguments[Ie + 2];
          je.children = _e;
        }
        if (ht && ht.defaultProps)
          for (nt in Ye = ht.defaultProps)
            je[nt] === void 0 && (je[nt] = Ye[nt]);
        return { $$typeof: de, type: ht, key: It, ref: lt, props: je, _owner: mt.current };
      }
      function Qt(ht) {
        return typeof ht == "object" && ht !== null && ht.$$typeof === de;
      }
      var Yt = /\/+/g, jt = [];
      function $t(ht, qt, Xe, nt) {
        if (jt.length) {
          var je = jt.pop();
          return je.result = ht, je.keyPrefix = qt, je.func = Xe, je.context = nt, je.count = 0, je;
        }
        return { result: ht, keyPrefix: qt, func: Xe, context: nt, count: 0 };
      }
      function Wt(ht) {
        ht.result = null, ht.keyPrefix = null, ht.func = null, ht.context = null, ht.count = 0, 10 > jt.length && jt.push(ht);
      }
      function st(ht, qt, Xe) {
        return ht == null ? 0 : function nt(je, It, lt, Ye) {
          var _e = typeof je;
          _e !== "undefined" && _e !== "boolean" || (je = null);
          var Ie = !1;
          if (je === null)
            Ie = !0;
          else
            switch (_e) {
              case "string":
              case "number":
                Ie = !0;
                break;
              case "object":
                switch (je.$$typeof) {
                  case de:
                  case ye:
                    Ie = !0;
                }
            }
          if (Ie)
            return lt(Ye, je, It === "" ? "." + at(je, 0) : It), 1;
          if (Ie = 0, It = It === "" ? "." : It + ":", Array.isArray(je))
            for (var Ce = 0; Ce < je.length; Ce++) {
              var ke = It + at(_e = je[Ce], Ce);
              Ie += nt(_e, ke, lt, Ye);
            }
          else if (ke = je === null || typeof je != "object" ? null : typeof (ke = Ge && je[Ge] || je["@@iterator"]) == "function" ? ke : null, typeof ke == "function")
            for (je = ke.call(je), Ce = 0; !(_e = je.next()).done; )
              Ie += nt(_e = _e.value, ke = It + at(_e, Ce++), lt, Ye);
          else
            _e === "object" && Fe("31", (lt = "" + je) == "[object Object]" ? "object with keys {" + Object.keys(je).join(", ") + "}" : lt, "");
          return Ie;
        }(ht, "", qt, Xe);
      }
      function at(ht, qt) {
        return typeof ht == "object" && ht !== null && ht.key != null ? function(Xe) {
          var nt = { "=": "=0", ":": "=2" };
          return "$" + ("" + Xe).replace(/[=:]/g, function(je) {
            return nt[je];
          });
        }(ht.key) : qt.toString(36);
      }
      function wt(ht, qt) {
        ht.func.call(ht.context, qt, ht.count++);
      }
      function Ut(ht, qt, Xe) {
        var nt = ht.result, je = ht.keyPrefix;
        ht = ht.func.call(ht.context, qt, ht.count++), Array.isArray(ht) ? $e(ht, nt, Xe, function(It) {
          return It;
        }) : ht != null && (Qt(ht) && (ht = function(It, lt) {
          return { $$typeof: de, type: It.type, key: lt, ref: It.ref, props: It.props, _owner: It._owner };
        }(ht, je + (!ht.key || qt && qt.key === ht.key ? "" : ("" + ht.key).replace(Yt, "$&/") + "/") + Xe)), nt.push(ht));
      }
      function $e(ht, qt, Xe, nt, je) {
        var It = "";
        Xe != null && (It = ("" + Xe).replace(Yt, "$&/") + "/"), st(ht, Ut, qt = $t(qt, It, nt, je)), Wt(qt);
      }
      var ir = { Children: { map: function(ht, qt, Xe) {
        if (ht == null)
          return ht;
        var nt = [];
        return $e(ht, nt, null, qt, Xe), nt;
      }, forEach: function(ht, qt, Xe) {
        if (ht == null)
          return ht;
        st(ht, wt, qt = $t(null, null, qt, Xe)), Wt(qt);
      }, count: function(ht) {
        return st(ht, function() {
          return null;
        }, null);
      }, toArray: function(ht) {
        var qt = [];
        return $e(ht, qt, null, function(Xe) {
          return Xe;
        }), qt;
      }, only: function(ht) {
        return Qt(ht) || Fe("143"), ht;
      } }, createRef: function() {
        return { current: null };
      }, Component: tt, PureComponent: Nt, createContext: function(ht, qt) {
        return qt === void 0 && (qt = null), (ht = { $$typeof: ge, _calculateChangedBits: qt, _currentValue: ht, _currentValue2: ht, _threadCount: 0, Provider: null, Consumer: null }).Provider = { $$typeof: me, _context: ht }, ht.Consumer = ht;
      }, forwardRef: function(ht) {
        return { $$typeof: we, render: ht };
      }, lazy: function(ht) {
        return { $$typeof: Se, _ctor: ht, _status: -1, _result: null };
      }, memo: function(ht, qt) {
        return { $$typeof: He, type: ht, compare: qt === void 0 ? null : qt };
      }, Fragment: he, StrictMode: Be, Suspense: Oe, createElement: yt, cloneElement: function(ht, qt, Xe) {
        ht == null && Fe("267", ht);
        var nt = void 0, je = ce({}, ht.props), It = ht.key, lt = ht.ref, Ye = ht._owner;
        if (qt != null) {
          qt.ref !== void 0 && (lt = qt.ref, Ye = mt.current), qt.key !== void 0 && (It = "" + qt.key);
          var _e = void 0;
          for (nt in ht.type && ht.type.defaultProps && (_e = ht.type.defaultProps), qt)
            Mt.call(qt, nt) && !Ot.hasOwnProperty(nt) && (je[nt] = qt[nt] === void 0 && _e !== void 0 ? _e[nt] : qt[nt]);
        }
        if ((nt = arguments.length - 2) === 1)
          je.children = Xe;
        else if (1 < nt) {
          _e = Array(nt);
          for (var Ie = 0; Ie < nt; Ie++)
            _e[Ie] = arguments[Ie + 2];
          je.children = _e;
        }
        return { $$typeof: de, type: ht.type, key: It, ref: lt, props: je, _owner: Ye };
      }, createFactory: function(ht) {
        var qt = yt.bind(null, ht);
        return qt.type = ht, qt;
      }, isValidElement: Qt, version: "16.7.0", unstable_ConcurrentMode: be, unstable_Profiler: Ee, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: mt, assign: ce } }, tr = { default: ir }, ar = tr && ir || tr;
      ne.exports = ar.default || ar;
    }, function(ne, ie, ae) {
      Object.defineProperty(ie, "__esModule", { value: !0 });
      var ce = ae(1);
      Object.defineProperty(ie, "Model", { enumerable: !0, get: function() {
        return ge(ce).default;
      } });
      var le = ae(10);
      Object.defineProperty(ie, "JSONModel", { enumerable: !0, get: function() {
        return ge(le).default;
      } });
      var de = ae(9);
      Object.defineProperty(ie, "OBJModel", { enumerable: !0, get: function() {
        return ge(de).default;
      } });
      var ye = ae(8);
      Object.defineProperty(ie, "MTLModel", { enumerable: !0, get: function() {
        return ge(ye).default;
      } });
      var he = ae(7);
      Object.defineProperty(ie, "DAEModel", { enumerable: !0, get: function() {
        return ge(he).default;
      } });
      var Be = ae(6);
      Object.defineProperty(ie, "GLTFModel", { enumerable: !0, get: function() {
        return ge(Be).default;
      } });
      var Ee = ae(3);
      Object.defineProperty(ie, "Tick", { enumerable: !0, get: function() {
        return ge(Ee).default;
      } });
      var me = ae(4);
      function ge(be) {
        return be && be.__esModule ? be : { default: be };
      }
      Object.defineProperty(ie, "DirectionLight", { enumerable: !0, get: function() {
        return me.DirectionLight;
      } }), Object.defineProperty(ie, "AmbientLight", { enumerable: !0, get: function() {
        return me.AmbientLight;
      } });
    }]);
  });
})(react3dViewer);
const StyledBagItem = styled$1.div`
  ${(Q) => {
  const {
    isDragging: ee
  } = Q;
  return css`
      width: 6em;
      height: 6em;
      border: 0 !important;
      opacity: ${ee ? 0 : 1};
      cursor: grab;
      img,
      video {
        max-width: 100%;
      }
    `;
}}
`;
StyledBagItem.displayName = "StyledBagItem";
const PresentationalBagItem = ({
  drag: Q,
  isDragging: ee,
  item: ne
}) => {
  const {
    setSelItem: ie
  } = useStore(), ae = react.exports.useRef(null), ce = (le) => {
    switch (le.detail) {
      case 1:
        window && window.openInWebaverse ? window.openInWebaverse(ne) : ie(ne);
        break;
    }
  };
  return react.exports.useEffect(() => {
    const le = setInterval(() => {
      const de = ae && ae.current && ae.current.$container;
      de && de.children && de.children.length > 1 && de.removeChild(de.firstChild);
    }, 1);
    return () => {
      clearInterval(le);
    };
  }, []), ne && /* @__PURE__ */ jsxs(StyledBagItem, {
    className: "flex items-center justify-center class_model",
    ref: Q,
    isDragging: ee,
    onClick: ce,
    children: [isImage(ne && ne.url) && /* @__PURE__ */ jsx("img", {
      className: "w-full h-full",
      src: ne.url
    }), isMedia(ne && ne.url) && /* @__PURE__ */ jsx("video", {
      className: "w-full h-full",
      src: ne.url,
      autoPlay: !0,
      loop: !0,
      muted: !0
    }), isModel(ne && ne.url) && /* @__PURE__ */ jsx(react3dViewer.exports.GLTFModel, {
      ref: ae,
      width: 96,
      height: 96,
      src: ne.url,
      enabled: !1,
      position: {
        x: -0.15,
        y: -0.3,
        z: -0.3
      }
    })]
  });
}, BagItem = ({
  item: Q,
  isForTrade: ee,
  index: ne,
  tradeBoxes: ie,
  updateTradeBoxes: ae,
  tradeLayer: ce
}) => {
  const le = react.exports.useRef(null), {
    plugActor: de,
    tradeData: ye,
    localUser: he
  } = useStore();
  Q || (Q = {}), Q.isForTrade = ee;
  const [{
    handlerId: Be
  }, Ee] = useDrop({
    accept: itemTypes.LAYER1,
    canDrop(we, Oe) {
      return ce !== "remote";
    },
    collect(we) {
      return {
        handlerId: we.getHandlerId()
      };
    },
    drop(we, Oe) {
      if (!le.current || Q.canister_id || !ye)
        return;
      const He = we.index, Se = ne, Ge = clone(we.item);
      Ge.slot = Se;
      const Fe = clone(we.tradeBoxes), Pe = clone(Q);
      Pe.slot = He;
      const We = clone(ie);
      console.log("cloneDragTradeItem: ", Ge), we.tradeLayer === "inventory" && ce === "local" && (async () => {
        const tt = await de.add_item_to_trade(he, ye.id, Ge);
        console.log("add_item_to_trade res: ", tt);
      })(), we.tradeLayer === "local" && ce === "inventory" && (async () => {
        const tt = await de.remove_item_from_trade(he, ye.id, Ge.id);
        console.log("remove_item_from_trade res: ", tt);
      })(), ce === we.tradeLayer ? (Fe[He].item = Pe, Fe[Se].item = Ge, ae(Fe)) : (Fe[He].item = Pe, We[Se].item = Ge, we.updateTradeBoxes(Fe), ae(We));
    }
  }), [{
    isDragging: me
  }, ge] = useDrag({
    type: itemTypes.LAYER1,
    canDrag: !!Q.canister_id,
    item: () => ({
      index: ne,
      tradeBoxes: ie,
      updateTradeBoxes: ae,
      item: Q,
      tradeLayer: ce
    }),
    collect: (we) => ({
      isDragging: we.isDragging()
    })
  }), be = me ? 0 : 1;
  return ge(Ee(le)), /* @__PURE__ */ jsx("div", {
    className: classnames({
      opacity: be
    }),
    ref: le,
    "data-handler-id": Be,
    children: /* @__PURE__ */ jsx(PresentationalBagItem, {
      drag: ge,
      isDragging: me,
      item: Q
    })
  });
}, Loading = () => {
  const {
    loading: Q
  } = useStore();
  return /* @__PURE__ */ jsx("div", {
    className: classnames("absolute top-0 bottom-0 left-0 right-0 z-10 flex justify-center items-center opacity-30 bg-white", {
      hidden: !Q
    }),
    children: /* @__PURE__ */ jsx("div", {
      className: "w-32 h-32 border-8 rounded-full border-t-green-900 animate-spin"
    })
  });
}, ItemDetails = () => {
  const {
    selItem: Q
  } = useStore(), ee = react.exports.useRef(null);
  return react.exports.useEffect(() => {
    const ne = setInterval(() => {
      var ae, ce;
      const ie = (ae = ee == null ? void 0 : ee.current) == null ? void 0 : ae.$container;
      ((ce = ie == null ? void 0 : ie.children) == null ? void 0 : ce.length) > 1 && ie.removeChild(ie.firstChild);
    }, 1);
    return () => {
      clearInterval(ne);
    };
  }, []), Q != null && Q.url ? /* @__PURE__ */ jsxs("div", {
    className: "absolute bottom-0 right-0 z-10 flex flex-col w-1/4 gap-1 p-4 bg-black-100",
    children: [/* @__PURE__ */ jsxs("div", {
      className: "flex flex-col gap-1 font-bold text-red-900",
      children: [/* @__PURE__ */ jsx("div", {
        children: Q == null ? void 0 : Q.collection
      }), /* @__PURE__ */ jsx("div", {
        children: "#7849"
      })]
    }), /* @__PURE__ */ jsxs("div", {
      className: "flex items-center justify-center w-full p-4 bg-black",
      children: [isImage(Q == null ? void 0 : Q.url) && /* @__PURE__ */ jsx("img", {
        className: "w-4/5",
        src: Q.url
      }), isMedia(Q == null ? void 0 : Q.url) && /* @__PURE__ */ jsx("video", {
        className: "w-4/5",
        src: Q.url,
        autoPlay: !0,
        loop: !0,
        muted: !0
      }), isModel(Q == null ? void 0 : Q.url) && /* @__PURE__ */ jsx(react3dViewer.exports.GLTFModel, {
        ref: ee,
        width: 192,
        height: 192,
        src: Q.url,
        enabled: !1,
        position: {
          x: -0.15,
          y: -0.3,
          z: -0.3
        }
      })]
    })]
  }) : /* @__PURE__ */ jsx(Fragment, {});
}, url = new URL(window.location.href), tradeId = url.searchParams.get("tradeId");
tradeId && console.log("I'm joiner. tradeId: ", tradeId);
let inventoryTokens = [], partner;
const updatePartner = (Q) => {
  partner = Q;
}, Trade = () => {
  const {
    authenticated: Q,
    principal: ee,
    login: ne,
    agent: ie
  } = usePlug(), {
    isCreator: ae,
    setIsCreator: ce,
    tradeData: le,
    setTradeData: de,
    remoteBoxes: ye,
    setRemoteBoxes: he,
    localBoxes: Be,
    setLocalBoxes: Ee,
    inventoryBoxes: me,
    setInventoryBoxes: ge,
    plugActor: be,
    setPlugActor: we,
    tradeStarted: Oe,
    setTradeStarted: He,
    accepted: Se,
    setAccepted: Ge,
    curPage: Fe,
    setCurPage: Pe,
    setLoading: We,
    localUser: tt,
    setLocalUser: Et,
    curTradeId: Nt,
    setCurTradeId: et
  } = useStore(), mt = ee ? window.ic.plug.principalId : "<none>";
  react.exports.useEffect(() => {
    (async () => {
      if (!ee)
        return;
      We(!0);
      const $t = window.ic.plug.principalId;
      console.log("local user: ", $t), Et($t);
      const Wt = Object.values(await getUserTokens({
        agent: ie,
        user: $t
      }));
      inventoryTokens = clone(Wt), ge(getInventoryBoxes(inventoryTokens)), tradeId && Ot(), We(!1);
    })();
  }, [ee]), react.exports.useEffect(() => {
    (async () => {
      if (!be || !tt)
        return;
      We(!0), console.log("plugActor: ", be);
      let $t;
      tradeId ? (console.log("***** TRADE DETECTED *****"), $t = await be.get_trade_by_id(tradeId), ce(!1)) : ($t = await be.create_trade(), ce(!0)), console.log("trade: ", $t), et($t.id), de($t), He(!0), We(!1);
    })();
  }, [be]), react.exports.useEffect(() => {
    var ir, tr;
    const $t = (tr = (ir = window == null ? void 0 : window.ic) == null ? void 0 : ir.plug) == null ? void 0 : tr.principalId;
    if (!$t)
      return;
    const Wt = Principal$3.fromUint8Array(le.host._arr).toText(), st = Principal$3.fromUint8Array(le.guest._arr).toText(), at = $t === Wt, wt = $t === st;
    let Ut = [];
    if (at)
      Ut = le.host_data;
    else if (wt)
      Ut = le.guest_data;
    else
      throw new Error("User is not host or guest");
    if (Be.length === Ut.length)
      return;
    let $e = !1;
    for (let ar = 0; ar < Be.length; ar++) {
      const ht = Be[ar];
      if (Ut.findIndex((Xe) => Xe.id === ht.id) === -1 && ht.item) {
        const Xe = ht.item;
        console.log("***** ADDING ITEM", Xe), console.log("***** tradeData", le);
        const nt = Number(Xe.index);
        console.log("tradeData.id, {name: item.collection, canister: Principal.fromText(item.canister), token_id"), console.log(le.id, {
          name: Xe.metadata.name,
          canister_id: Xe.canister,
          token_id: nt
        }), be.add_item_to_trade(le.id, {
          name: Xe.collection,
          canister_id: Principal$3.fromText(Xe.canister),
          token_id: nt
        }).then((je) => {
          console.log("tradeResponse", je), updateTradeData(je[0]);
        }), $e = !0;
      }
    }
    if (!$e) {
      let ar = !1;
      for (let ht = 0; ht < Ut.length; ht++) {
        const qt = Ut[ht];
        if (Be.findIndex((nt) => nt.id === qt.id) === -1)
          return be.remove_item_from_trade(tradeId, qt.id), ar = !0;
      }
      if (!ar)
        throw new Error("something went wrong");
    }
  }, [Be]), react.exports.useEffect(() => {
    if (!be || !le || partner)
      return;
    const $t = setInterval(async () => {
      const Wt = await be.get_trade_by_id(le.id);
      console.log("rtTrade: ", Wt);
      const st = Principal$3.fromUint8Array(Wt[0].guest._arr).toText();
      st !== null && st !== "" && st !== nullPrincipal && st !== nullPartner && (updatePartner(st), clearInterval($t), console.log("Trade partner found! guest: ", st));
    }, 1e3);
  }, [be, le]), react.exports.useEffect(() => {
    (async () => {
      if (!be && !Nt && !le)
        return;
      We(!0);
      const $t = le.host, Wt = le.guest;
      if (!ae && Wt !== nullPrincipalId && Wt !== tt)
        return console.error("Trade already initialized to another wallet: ", Wt);
      if (ae && Wt !== nullPrincipalId && Wt !== tt && Wt !== $t && Wt !== partner && (console.log("trade partner found(guest): ", Wt), updatePartner(Wt)), !ae && $t !== nullPrincipalId && $t !== tt && $t !== partner && (console.log("trade partner found(host): ", $t), await be.join_trade(Nt), updatePartner($t)), ae) {
        const st = getRemoteBoxes(le.guest_data);
        console.log("guest_data: ", le.guest_data), console.log("remoteBoxes: ", st), he(st);
      } else {
        const st = getRemoteBoxes(le.host_data);
        console.log("host_data: ", le.host_data), console.log("remoteBoxes: ", st), he(st);
      }
      We(!1);
    })();
  }, [le]), react.exports.useEffect(() => {
    if (!be)
      return;
    const $t = setInterval(async () => {
      const Wt = await be.get_trade_by_id(Nt);
      de(Wt);
    }, 10);
    return () => {
      clearInterval($t);
    };
  }, [Nt]), react.exports.useEffect(() => {
    if (!be || !le || !partner)
      return;
    const $t = setInterval(async () => {
      const Wt = await be.get_trade_by_id(le.id);
      if (JSON.stringify(Wt[0]) === JSON.stringify(le))
        return;
      console.log("updated!"), updateTradeData(Wt[0]);
      const st = window.ic.plug.principalId.toText(), at = Principal$3.fromUint8Array(Wt[0].host._arr).toText(), wt = Principal$3.fromUint8Array(Wt[0].guest._arr).toText();
      if (!(st === at) && !(st === wt))
        throw new Error("User is not in this trade!");
      if (at !== le.host)
        throw new Error("host changed!");
      if (wt !== le.guest)
        throw new Error("guest changed!");
    }, 1e3);
    return () => clearInterval($t);
  }, [be, le, partner]);
  const Mt = async () => {
    console.log("connecting..."), ne();
  }, Ot = async () => {
    we(trade_canister);
  }, yt = () => {
    !be || (be.accept(le.id), Ge(!0), console.log("Trade accepted!"));
  }, Qt = () => {
    !be || (be.cancel(le.id), Ge(!1), console.log("Trade canceled!"));
  }, Yt = () => {
    Fe <= 1 || Pe(Fe - 1);
  }, jt = () => {
    const $t = Math.ceil(inventoryBoxNum / pageBoxNum);
    Fe >= $t || Pe(Fe + 1);
  };
  return /* @__PURE__ */ jsx("div", {
    className: "w-full h-full",
    children: /* @__PURE__ */ jsxs(DndProvider, {
      backend: HTML5Backend,
      children: [/* @__PURE__ */ jsx(ItemDetails, {}), /* @__PURE__ */ jsxs("div", {
        className: "absolute top-0 left-0 w-3/4 h-full",
        children: [/* @__PURE__ */ jsx(Loading, {}), !Q && /* @__PURE__ */ jsx(Frame, {
          className: "absolute w-full h-full",
          children: /* @__PURE__ */ jsx("div", {
            className: "flex items-center justify-center w-full h-full",
            children: /* @__PURE__ */ jsx(Button$1, {
              variant: "contained",
              onClick: Mt,
              children: "Connect"
            })
          })
        }), Q && !le && /* @__PURE__ */ jsx(Frame, {
          className: "absolute w-full",
          children: /* @__PURE__ */ jsxs("div", {
            className: "flex items-center justify-center w-full h-full",
            children: [!Oe && /* @__PURE__ */ jsx(Button$1, {
              variant: "contained",
              onClick: Ot,
              children: "Start Trade"
            }), Oe && !le && /* @__PURE__ */ jsx(Button$1, {
              variant: "disabled",
              children: "Starting..."
            })]
          })
        }), /* @__PURE__ */ jsxs("div", {
          className: "absolute w-full h-full overflow-auto",
          children: [Q && le && /* @__PURE__ */ jsxs(React.Fragment, {
            children: [/* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-col gap-2",
                children: [/* @__PURE__ */ jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [/* @__PURE__ */ jsx("div", {
                    className: "text-2xl",
                    children: "Their Trade"
                  }), /* @__PURE__ */ jsx("div", {
                    className: "text-xl text-blue-900",
                    children: ae && le.guest_accept || !ae && le.host_accept ? "TRADE ACCEPTED" : ""
                  })]
                }), /* @__PURE__ */ jsx("div", {
                  className: "flex flex-wrap gap-3",
                  children: ye.map(($t, Wt) => /* @__PURE__ */ jsx(RemoteBox$1, {
                    children: /* @__PURE__ */ jsx(BagItem, {
                      item: clone($t.item),
                      index: Wt,
                      tradeBoxes: clone(ye),
                      updateTradeBoxes: he,
                      tradeLayer: "remote"
                    }, `remote_${$t.id}`)
                  }, $t.id))
                })]
              })
            }), /* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-col gap-2",
                children: [/* @__PURE__ */ jsx("div", {
                  className: "text-2xl",
                  children: "Your Trade"
                }), /* @__PURE__ */ jsx("div", {
                  className: "flex flex-wrap gap-3",
                  children: Be.map(($t, Wt) => /* @__PURE__ */ jsx(BagBox$1, {
                    children: /* @__PURE__ */ jsx(BagItem, {
                      isForTrade: !0,
                      item: clone($t.item),
                      index: Wt,
                      tradeBoxes: clone(Be),
                      updateTradeBoxes: Ee,
                      tradeLayer: "local"
                    }, `local_${$t.id}`)
                  }, $t.id))
                })]
              })
            }), /* @__PURE__ */ jsx(Frame, {
              children: /* @__PURE__ */ jsxs("div", {
                className: "flex flex-wrap items-center justify-center w-full h-full gap-8",
                children: [/* @__PURE__ */ jsx(Button$1, {
                  variant: "contained",
                  onClick: yt,
                  disabled: Se || !existItems(Be),
                  color: "success",
                  children: "Accept"
                }), /* @__PURE__ */ jsxs("div", {
                  className: "flex items-center justify-center gap-2",
                  children: [/* @__PURE__ */ jsx("label", {
                    htmlFor: "icp",
                    children: "ICP: "
                  }), /* @__PURE__ */ jsx("input", {
                    className: "w-32 p-0.5 text-xl border rounded opacity-30 bg-amber-900",
                    id: "icp",
                    type: "number"
                  })]
                }), /* @__PURE__ */ jsx(Button$1, {
                  variant: "contained",
                  onClick: Qt,
                  disabled: !Se && existItems(Be),
                  color: "error",
                  children: "Cancel"
                })]
              })
            })]
          }), ee && /* @__PURE__ */ jsx(Frame, {
            children: /* @__PURE__ */ jsxs("div", {
              className: "flex flex-col gap-2",
              children: [/* @__PURE__ */ jsxs("div", {
                className: "flex items-center justify-between",
                children: [/* @__PURE__ */ jsx("div", {
                  className: "text-2xl",
                  children: "Inventory"
                }), /* @__PURE__ */ jsxs("div", {
                  className: "flex items-center gap-2 text-xl",
                  children: [/* @__PURE__ */ jsx("div", {
                    className: "cursor-pointer",
                    onClick: Yt,
                    children: "<"
                  }), /* @__PURE__ */ jsx("div", {
                    className: "text-blue-900",
                    children: Fe
                  }), /* @__PURE__ */ jsx("div", {
                    className: "cursor-pointer",
                    onClick: jt,
                    children: ">"
                  })]
                })]
              }), /* @__PURE__ */ jsx("div", {
                className: "flex flex-wrap gap-3",
                children: me.slice((Fe - 1) * pageBoxNum, Fe * pageBoxNum).map(($t, Wt) => /* @__PURE__ */ jsx(BagBox$1, {
                  children: /* @__PURE__ */ jsx(BagItem, {
                    item: clone($t.item),
                    index: (Fe - 1) * pageBoxNum + Wt,
                    tradeBoxes: clone(me),
                    updateTradeBoxes: ge,
                    tradeLayer: "inventory"
                  }, `inventory_${$t.id}`)
                }, $t.id))
              })]
            })
          })]
        })]
      }), /* @__PURE__ */ jsx("div", {
        className: "absolute top-0 right-0 w-1/4 h-full",
        children: /* @__PURE__ */ jsx(Frame, {
          className: "h-full",
          children: /* @__PURE__ */ jsxs("div", {
            className: "p-2",
            children: [/* @__PURE__ */ jsx("b", {
              children: "CONNECTION STATUS"
            }), /* @__PURE__ */ jsx("br", {}), Q && ee ? "Connected with " + mt : "Waiting for IC wallet connection...", /* @__PURE__ */ jsx("br", {}), /* @__PURE__ */ jsx("br", {}), Oe && le && !partner && !tradeId && /* @__PURE__ */ jsxs(Fragment, {
              children: [/* @__PURE__ */ jsx("b", {
                children: " WAITING FOR TRADE PARTNER... "
              }), /* @__PURE__ */ jsx("br", {}), "Send this link to your trade partner", /* @__PURE__ */ jsx("br", {}), /* @__PURE__ */ jsxs("a", {
                className: "text-blue-900",
                href: `${url.host}/?tradeId=${le.id}`,
                children: [url.host, "/?tradeId=", le.id]
              })]
            }), Oe && le && partner && /* @__PURE__ */ jsxs(Fragment, {
              children: ["Trading with ", partner]
            })]
          })
        })
      })]
    })
  });
}, canister_id = "lj532-6iaaa-aaaah-qcc7a-cai", whitelist = [canister_id, "vlhm2-4iaaa-aaaam-qaatq-cai", "ryjl3-tyaaa-aaaaa-aaaba-cai"], App = ({
  type: Q
}) => /* @__PURE__ */ jsx(PlugProvider, {
  whitelist,
  children: /* @__PURE__ */ jsx("div", {
    className: "fixed top-0 bottom-0 left-0 right-0",
    children: /* @__PURE__ */ jsx(Trade, {
      type: Q
    })
  })
});
export {
  AgentError as A,
  Certificate as C,
  PipeArrayBuffer as P,
  Principal$3 as a,
  App as b,
  decode as d,
  lebDecode as l,
  toHex as t
};
